{"version":3,"file":"mtproto.worker-ba4cb0b1.js","sources":["src/helpers/bytes/bufferConcats.ts","src/lib/polyfill.ts","src/lib/appManagers/utils/peers/isAnyChat.ts","src/lib/appManagers/utils/peers/isUser.ts","src/helpers/peerIdPolyfill.ts","src/config/modes.ts","src/config/debug.ts","src/config/tabId.ts","src/environment/ctx.ts","src/helpers/array/indexOfAndSplice.ts","src/helpers/context.ts","src/helpers/array/findAndSplice.ts","src/helpers/eventListenerBase.ts","src/helpers/makeError.ts","src/environment/userAgent.ts","src/helpers/dT.ts","src/lib/logger.ts","src/lib/mtproto/superMessagePort.ts","src/lib/crypto/cryptoMessagePort.ts","src/environment/utils.ts","src/lib/mtproto/mtproto_config.ts","src/lib/mtproto/mtprotoMessagePort.ts","src/lib/rootScope.ts","src/helpers/noop.ts","src/helpers/cancellablePromise.ts","src/helpers/schedulers/throttle.ts","src/helpers/object/safeAssign.ts","src/lib/files/idb.ts","src/lib/storage.ts","src/config/databases/state.ts","src/lib/stateStorage.ts","src/helpers/object/setDeepProperty.ts","src/lib/appManagers/appStateManager.ts","src/config/app.ts","src/helpers/schedulers/pause.ts","src/lib/mtproto/transports/http.ts","src/lib/mtproto/transports/websocket.ts","src/helpers/array/randomize.ts","src/lib/mtproto/transports/obfuscation.ts","src/lib/mtproto/transports/abridged.ts","src/lib/mtproto/connectionStatus.ts","src/helpers/bytes/bytesToHex.ts","src/lib/mtproto/transports/tcpObfuscated.ts","src/lib/mtproto/dcConfigurator.ts","src/lib/mtproto/transports/controller.ts","src/lib/appManagers/utils/storages/resetStoragesPromise.ts","src/lib/serviceWorker/serviceMessagePort.ts","src/helpers/callbackify.ts","src/lib/appManagers/manager.ts","src/lib/appManagers/utils/storages/createStorages.ts","src/helpers/recordPromise.ts","src/lib/appManagers/utils/storages/loadStorages.ts","src/lib/appManagers/appStoragesManager.ts","src/lib/mtproto/passwordManager.ts","src/helpers/object/deepEqual.ts","src/lib/mtproto/referenceDatabase.ts","src/helpers/tsNow.ts","src/config/latinizeMap.ts","src/helpers/cleanSearchText.ts","src/helpers/array/flatten.ts","src/lib/searchIndex.ts","src/helpers/long/compareLong.ts","src/helpers/compareValue.ts","src/helpers/slicedArray.ts","src/helpers/array/forEachReverse.ts","src/helpers/array/insertInDescendSortedArray.ts","src/helpers/object/safeReplaceObject.ts","src/lib/appManagers/utils/messageId/clearMessageId.ts","src/lib/appManagers/utils/messageId/getServerMessageId.ts","src/lib/appManagers/utils/dialogs/getDialogIndexKey.ts","src/helpers/object/isObject.ts","src/lib/appManagers/utils/dialogs/getDialogIndex.ts","src/lib/appManagers/utils/peers/getPeerId.ts","src/lib/appManagers/utils/messages/getPeerIdsFromMessage.ts","src/helpers/object/defineNotNumerableProperties.ts","src/lib/appManagers/utils/dialogs/setDialogIndex.ts","src/lib/storages/dialogs.ts","src/helpers/object/copy.ts","src/lib/storages/filters.ts","src/helpers/array/filterUnique.ts","src/vendor/emoji/regex.ts","src/lib/richTextProcessor/index.ts","src/lib/richTextProcessor/combineSameEntities.ts","src/lib/richTextProcessor/findConflictingEntity.ts","src/lib/richTextProcessor/sortEntities.ts","src/lib/richTextProcessor/mergeEntities.ts","src/lib/richTextProcessor/parseMarkdown.ts","src/helpers/applyMixins.ts","src/lib/appManagers/apiUpdatesManager.ts","src/lib/appManagers/appAvatarsManager.ts","src/helpers/random.ts","src/lib/appManagers/appCallsManager.ts","src/lib/appManagers/utils/chats/hasRights.ts","src/lib/appManagers/utils/chats/getParticipantPeerId.ts","src/lib/appManagers/utils/peers/getPeerActiveUsernames.ts","src/lib/appManagers/appChatsManager.ts","src/helpers/string/capitalizeFirstLetter.ts","src/lib/richTextProcessor/matchUrlProtocol.ts","src/lib/richTextProcessor/wrapUrl.ts","src/helpers/dom/setInnerHTML.ts","src/lib/langPack.ts","src/helpers/date.ts","src/helpers/object/safeReplaceArrayInObject.ts","src/lib/richTextProcessor/spoiler.ts","src/lib/richTextProcessor/encodeSpoiler.ts","src/lib/richTextProcessor/wrapPlainText.ts","src/lib/appManagers/utils/docs/getDocumentInputFileLocation.ts","src/helpers/fileName.ts","src/lib/appManagers/utils/docs/getDocumentDownloadOptions.ts","src/lib/appManagers/utils/docs/getDocumentURL.ts","src/environment/mimeTypeMap.ts","src/lib/appManagers/appDocsManager.ts","src/lib/appManagers/utils/messages/repliesAreEqual.ts","src/lib/appManagers/utils/drafts/draftsAreEqual.ts","src/lib/appManagers/appDraftsManager.ts","src/helpers/object/validateInitObject.ts","src/lib/richTextProcessor/fixEmoji.ts","src/lib/appManagers/appEmojiManager.ts","src/lib/appManagers/appGroupCallsManager.ts","src/lib/appManagers/utils/photos/getPhotoInput.ts","src/lib/appManagers/utils/photos/getPhotoMediaInput.ts","src/lib/appManagers/utils/inlineBots/generateQId.ts","src/lib/appManagers/utils/docs/getDocumentMediaInput.ts","src/lib/appManagers/appInlineBotsManager.ts","src/lib/appManagers/utils/messageId/isLegacyMessageId.ts","src/lib/appManagers/appMessagesIdsManager.ts","src/components/lazyLoadQueueBase.ts","src/helpers/middleware.ts","src/helpers/object/getObjectKeysAndSort.ts","src/helpers/string/splitStringByLength.ts","src/helpers/schedulers/debounce.ts","src/lib/richTextProcessor/matchUrl.ts","src/lib/appManagers/utils/messages/filterMessagesByInputFilter.ts","src/helpers/getFileNameForUpload.ts","src/lib/appManagers/appTabsManager.ts","src/lib/appManagers/utils/messages/getAlbumText.ts","src/lib/appManagers/utils/stickers/getStickerEffectThumb.ts","src/lib/appManagers/utils/docs/getDocumentInput.ts","src/lib/appManagers/utils/reactions/availableReactionToReaction.ts","src/lib/appManagers/utils/reactions/reactionsEqual.ts","src/helpers/object/setBooleanFlag.ts","src/lib/appManagers/utils/messages/getMessageThreadId.ts","src/lib/appManagers/utils/misc/getInputReplyTo.ts","src/config/tld.ts","src/lib/richTextProcessor/checkBrackets.ts","src/config/emoji.ts","src/vendor/emoji/index.ts","src/lib/richTextProcessor/getEmojiUnified.ts","src/lib/richTextProcessor/parseEntities.ts","src/lib/richTextProcessor/wrapMessageEntities.ts","src/lib/appManagers/appMessagesManager.ts","src/helpers/string/convertInputKeyToKey.ts","src/lib/appManagers/appNotificationsManager.ts","src/helpers/restrictions.ts","src/lib/appManagers/utils/peers/isPeerRestricted.ts","src/lib/appManagers/utils/peers/getPeerPhoto.ts","src/lib/appManagers/appPeersManager.ts","src/lib/appManagers/appPhotosManager.ts","src/lib/appManagers/appPollsManager.ts","src/lib/appManagers/appPrivacyManager.ts","src/lib/appManagers/appProfileManager.ts","src/helpers/callbackifyAll.ts","src/lib/appManagers/appReactionsManager.ts","src/helpers/fixBase64String.ts","src/lib/appManagers/appStickersManager.ts","src/helpers/cleanUsername.ts","src/lib/appManagers/utils/users/canSendToUser.ts","src/lib/appManagers/appUsersManager.ts","src/lib/appManagers/appWebPagesManager.ts","src/helpers/blob/blobSafeMimeType.ts","src/helpers/blob/blobConstruct.ts","src/lib/files/memoryWriter.ts","src/lib/files/cacheStorage.ts","src/helpers/blob/readBlobAs.ts","src/helpers/blob/readBlobAsArrayBuffer.ts","src/helpers/fixFirefoxSvg.ts","src/lib/appManagers/utils/photos/getPhotoDownloadOptions.ts","src/lib/appManagers/utils/webFiles/getWebFileDownloadOptions.ts","src/lib/appManagers/utils/webDocs/getWebDocumentDownloadOptions.ts","src/lib/appManagers/utils/webDocs/isWebDocument.ts","src/lib/appManagers/utils/webFiles/isWebFileLocation.ts","src/lib/appManagers/utils/download/getDownloadFileNameFromOptions.ts","src/lib/appManagers/utils/download/getDownloadMediaDetails.ts","src/helpers/blob/readBlobAsUint8Array.ts","src/helpers/string/fileNameRFC.ts","src/lib/files/downloadWriter.ts","src/lib/files/downloadStorage.ts","src/lib/mtproto/apiFileManager.ts","src/lib/localStorage.ts","src/lib/sessionStorage.ts","src/helpers/bytes/bytesFromHex.ts","src/lib/mtproto/api_methods.ts","src/helpers/toggleStorages.ts","src/lib/mtproto/apiManager.ts","src/lib/storages/peers.ts","src/lib/storages/utils/thumbs/generateEmptyThumb.ts","src/lib/storages/utils/thumbs/getStickerThumbKey.ts","src/lib/storages/utils/thumbs/getThumbKey.ts","src/lib/storages/thumbs.ts","src/lib/mtproto/schema.ts","node_modules/.pnpm/pako@2.1.0/node_modules/pako/dist/pako_inflate.min.js","src/helpers/gzipUncompress.ts","node_modules/.pnpm/big-integer@1.6.51/node_modules/big-integer/BigInteger.js","src/helpers/number/intToUint.ts","src/helpers/long/ulongFromInts.ts","src/helpers/bigInt/bigIntConstants.ts","src/helpers/bigInt/bigIntConversion.ts","src/lib/mtproto/tl_utils.ts","src/helpers/bytes/addPadding.ts","src/helpers/long/longToBytes.ts","src/helpers/bytes/bytesCmp.ts","src/helpers/bytes/convertToUint8Array.ts","src/helpers/long/sortLongsArray.ts","src/lib/mtproto/networker.ts","src/lib/mtproto/networkerFactory.ts","src/lib/mtproto/rsaKeysManager.ts","src/helpers/bytes/bytesXor.ts","src/lib/mtproto/authorizer.ts","src/lib/mtproto/timeManager.ts","src/lib/appManagers/appWebDocsManager.ts","src/lib/appManagers/appPaymentsManager.ts","src/lib/appManagers/utils/attachMenuBots/getAttachMenuBotIcon.ts","src/lib/appManagers/appAttachMenuBotsManager.ts","src/lib/appManagers/appSeamlessLoginManager.ts","src/lib/appManagers/appThemesManager.ts","src/lib/appManagers/appUsernamesManager.ts","src/lib/appManagers/appChatInvitesManager.ts","src/lib/appManagers/utils/stories/cacheType.ts","src/lib/appManagers/utils/stories/insertStory.ts","src/lib/appManagers/appStoriesManager.ts","src/lib/appManagers/appBotsManager.ts","src/lib/appManagers/appBoostsManager.ts","src/lib/appManagers/createManagers.ts","src/lib/appManagers/appManagersManager.ts","src/helpers/listenMessagePort.ts","src/lib/mtproto/mtproto.worker.ts"],"sourcesContent":["export default function bufferConcats(...args: (ArrayBuffer | Uint8Array | number[])[]) {\n  const length = args.reduce((acc, v) => acc + ((v as ArrayBuffer).byteLength || (v as Uint8Array).length), 0);\n\n  const tmp = new Uint8Array(length);\n\n  let lastLength = 0;\n  args.forEach((b) => {\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\n    lastLength += (b as ArrayBuffer).byteLength || (b as Uint8Array).length;\n  });\n\n  return tmp/* .buffer */;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport bufferConcats from '../helpers/bytes/bufferConcats';\n\nUint8Array.prototype.concat = function(...args: Array<Uint8Array | ArrayBuffer | number[]>) {\n  return bufferConcats(this, ...args);\n};\n\n/* Uint8Array.prototype.toString = function() {\n  return String.fromCharCode.apply(null, [...this]);\n}; */\n\nUint8Array.prototype.toJSON = function() {\n  return [...this];\n  // return {type: 'bytes', value: [...this]};\n};\n\nPromise.prototype.finally = Promise.prototype.finally || function<T>(this: Promise<T>, fn: () => any) {\n  const onFinally = (callback: typeof fn) => Promise.resolve(fn()).then(callback);\n  return this.then(\n    result => onFinally(() => result),\n    reason => onFinally(() => Promise.reject(reason))\n  );\n};\n\ndeclare global {\n  interface Uint8Array {\n    concat: (...args: Array<Uint8Array | ArrayBuffer | number[]>) => Uint8Array,\n    // toString: () => string,\n    toJSON: () => number[],\n    // toJSON: () => {type: 'bytes', value: number[]},\n  }\n\n  interface Promise<T> {\n    finally: (onfinally?: () => void) => Promise<T>;\n  }\n}\n","export default function isAnyChat(peerId: PeerId) {\n  return +peerId < 0;\n}\n","export default function isUser(peerId: PeerId) {\n  return +peerId >= 0;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport isAnyChat from '../lib/appManagers/utils/peers/isAnyChat';\nimport isUser from '../lib/appManagers/utils/peers/isUser';\n\nString.prototype.toUserId = function() {\n  return (+this).toUserId();\n};\n\nString.prototype.toChatId = function() {\n  return (+this).toChatId();\n};\n\nString.prototype.toPeerId = function(isChat?: boolean) {\n  return (+this).toPeerId(isChat);\n};\n\nString.prototype.isPeerId = function() {\n  return /^[\\d-]/.test(this.toString());\n};\n\n// * don't return just 'this', because Firefox returns empty `Number` class\nNumber.prototype.toUserId = function() {\n  return +this;\n};\n\nNumber.prototype.toChatId = function() {\n  return Math.abs(this as any);\n};\n\n// * don't return just 'this', because Firefox returns empty `Number` class\nNumber.prototype.toPeerId = function(isChat?: boolean) {\n  return isChat === undefined ? +this : (isChat ? -Math.abs(this as number) : +this);\n};\n\nNumber.prototype.isPeerId = function() {\n  return true;\n};\n\n[\n  ['isUser' as const, isUser],\n  ['isAnyChat' as const, isAnyChat]\n].forEach((value) => {\n  const newMethod = Array.isArray(value) ? value[0] : value;\n  const originMethod = Array.isArray(value) ? value[1] : value;\n  // @ts-ignore\n  String.prototype[newMethod] = function() {\n    // @ts-ignore\n    // eslint-disable-next-line no-useless-call\n    return originMethod.call(null, this.toString());\n  };\n\n  // @ts-ignore\n  Number.prototype[newMethod] = function() {\n    // * don't use just 'this', because Firefox returns empty `Number` class\n    // @ts-ignore\n    // eslint-disable-next-line no-useless-call\n    return originMethod.call(null, +this);\n  };\n});\n\ndeclare global {\n  interface String {\n    toUserId(): UserId;\n    toChatId(): ChatId;\n    toPeerId(isChat?: boolean): PeerId;\n    isPeerId(): this is string;\n\n    isUser(): boolean;\n    isAnyChat(): boolean;\n  }\n\n  interface Number {\n    toUserId(): UserId;\n    toChatId(): ChatId;\n    toPeerId(isChat?: boolean): PeerId;\n    isPeerId(): this is PeerId;\n\n    isUser(): boolean;\n    isAnyChat(): boolean;\n  }\n}\n\nexport {};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {TransportType} from '../lib/mtproto/dcConfigurator';\n\nconst Modes = {\n  test: location.search.indexOf('test=1') > 0/*  || true */,\n  debug: location.search.indexOf('debug=1') > 0,\n  http: false,\n  ssl: true, // location.search.indexOf('ssl=1') > 0 || location.protocol === 'https:' && location.search.indexOf('ssl=0') === -1,\n  multipleConnections: true,\n  asServiceWorker: false,\n  transport: 'websocket' as TransportType,\n  noSharedWorker: location.search.indexOf('noSharedWorker=1') > 0\n};\n\nif(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n  Modes.http = location.search.indexOf('http=1') > 0;\n}\n\nif(import.meta.env.VITE_MTPROTO_HAS_HTTP || !import.meta.env.VITE_MTPROTO_HAS_WS) {\n  Modes.http = true;\n}\n\nif(Modes.http) {\n  Modes.transport = 'https';\n}\n\nif(import.meta.env.VITE_MTPROTO_SW) {\n  Modes.asServiceWorker = true;\n}\n\nexport default Modes;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from './modes';\n\nexport const IS_BETA = import.meta.env.DEV;\nexport const DEBUG = (IS_BETA || Modes.debug)/*  && false */;\nconst ctx: any = typeof(window) !== 'undefined' ? window : self;\nexport const MOUNT_CLASS_TO: any = DEBUG || true/*  && false */ ? ctx : {};\nexport default DEBUG;\n\n// let m = DEBUG;\n/* if(!DEBUG) {\n  ctx.sandpitTurtle = () => {\n    //if(!m) {\n      for(let i in MOUNT_CLASS_TO) {\n        ctx[i] = MOUNT_CLASS_TO[i];\n      }\n      //m = true;\n    //}\n\n    //DEBUG = !DEBUG;\n  };\n} */\n\n/* export const superDebug = (object: any, key: string) => {\n  var d = object[key];\n  var beforeStr = '', afterStr = '';\n  for(var r of d) {\n    beforeStr += r.before.hex + '\\n';\n    afterStr += r.after.hex + '\\n';\n  }\n\n  beforeStr = beforeStr.trim();\n  afterStr = afterStr.trim();\n  //var beforeStr = d.map((r) => r.before.hex).join('\\n');\n  //var afterStr = d.map((r) => r.after.hex).join('\\n');\n\n  var dada = (name: string, str: string) => {\n    var a = document.createElement('a');\n    a.target = '_blank';\n    a.download = name + '.txt';\n    a.href = URL.createObjectURL(new Blob([str], {\n      type: 'text/plain'\n    }));\n    document.body.append(a);\n    a.click();\n  };\n\n  dada(key + '_' + 'before', beforeStr);\n  dada(key + '_' + 'after', afterStr);\n}\n\nMOUNT_CLASS_TO.superDebug = superDebug; */\n","const tabId = Date.now() % Math.random() * 100000000 | 0;\nexport default tabId;\n","const ctx = typeof(window) !== 'undefined' ? window : self;\n\nexport default ctx;\n","export default function indexOfAndSplice<T>(array: Array<T>, item: T) {\n  const idx = array.indexOf(item);\n  const spliced = idx === -1 ? undefined : array.splice(idx, 1);\n  return spliced?.[0];\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// в SW может быть сразу две переменных TRUE\nexport const IS_SERVICE_WORKER = typeof ServiceWorkerGlobalScope !== 'undefined' && self instanceof ServiceWorkerGlobalScope;\nexport const IS_WEB_WORKER = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && !IS_SERVICE_WORKER;\nexport const IS_WORKER = IS_WEB_WORKER || IS_SERVICE_WORKER;\n\nexport const getWindowClients = () => {\n  return (self as any as ServiceWorkerGlobalScope)\n  .clients\n  .matchAll({includeUncontrolled: false, type: 'window'});\n};\n\nexport const getLastWindowClient = () => getWindowClients().then((windowClients) => windowClients.slice(-1)[0]);\n\nconst postMessage = (listener: WindowClient | DedicatedWorkerGlobalScope, ...args: any[]) => {\n  try {\n    // @ts-ignore\n    listener.postMessage(...args);\n  } catch(err) {\n    console.error('[worker] postMessage error:', err, args);\n  }\n};\n\nconst notifyServiceWorker = (all: boolean, ...args: any[]) => {\n  getWindowClients().then((listeners) => {\n    if(!listeners.length) {\n      // console.trace('no listeners?', self, listeners);\n      return;\n    }\n\n    listeners.slice(all ? 0 : -1).forEach((listener) => {\n      postMessage(listener, ...args);\n    });\n  });\n};\n\nconst notifyWorker = (...args: any[]) => {\n  postMessage(self as any as DedicatedWorkerGlobalScope, ...args);\n};\n\nconst noop = () => {};\n\nexport const notifySomeone = IS_SERVICE_WORKER ? notifyServiceWorker.bind(null, false) : (IS_WEB_WORKER ? notifyWorker : noop);\nexport const notifyAll = IS_SERVICE_WORKER ? notifyServiceWorker.bind(null, true) : (IS_WEB_WORKER ? notifyWorker : noop);\n","export default function findAndSplice<T>(array: Array<T>, verify: (value: T, index?: number, array?: Array<T>) => boolean) {\n  const index = array.findIndex(verify);\n  return index !== -1 ? array.splice(index, 1)[0] : undefined;\n};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { MOUNT_CLASS_TO } from \"../config/debug\";\nimport type {ArgumentTypes, SuperReturnType} from '../types';\nimport findAndSplice from './array/findAndSplice';\n\n// class EventSystem {\n//   wm: WeakMap<any, Record<any, Set<any>>> = new WeakMap();\n\n//   add(target: any, event: any, listener: any) {\n//     let listeners = this.wm.get(target);\n//     if (listeners === undefined) {\n//         listeners = {};\n//     }\n//     let listenersForEvent = listeners[event];\n//     if (listenersForEvent === undefined) {\n//         listenersForEvent = new Set();\n//     }\n//     listenersForEvent.add(listener);\n//     listeners[event] = listenersForEvent;\n//     //target.addEventListener(event, listener);\n//     this.wm.set(target, listeners);\n//   };\n\n//   remove(target: any, event: any, listener: any) {\n//     let listeners = this.wm.get(target);\n//     if (!listeners) return;\n//     let listenersForEvent = listeners[event];\n//     if (!listenersForEvent) return;\n//     listenersForEvent.delete(listener);\n//   };\n\n//   /* fire(target, event) {\n//      let listeners = this.wm.get(target);\n//      if (!listeners) return;\n//      let listenersForEvent = listeners[event];\n//      if (!listenersForEvent) return;\n//      for (let handler of handlers) {\n//          setTimeout(handler, 0, event, target); // we use a setTimeout here because we want event triggering to be asynchronous.\n//      }\n//   }; */\n// }\n\n// console.log = () => {};\n\n// const e = new EventSystem();\n// MOUNT_CLASS_TO.e = e;\n\nexport type EventListenerListeners = Record<string, Function>;\n// export type EventListenerListeners = Record<string, (...args: any[]) => any>;\n// export type EventListenerListeners = {[name in string]: Function};\n\n/**\n * Better not to remove listeners during setting\n * Should add listener callback only once\n */\n\ntype ListenerObject<T> = {callback: T, options: boolean | AddEventListenerOptions};\n\n// type EventLitenerCallback<T> = (data: T) =>\n// export default class EventListenerBase<Listeners extends {[name: string]: Function}> {\nexport default class EventListenerBase<Listeners extends EventListenerListeners> {\n  protected listeners: Partial<{\n    [k in keyof Listeners]: Array<ListenerObject<Listeners[k]>>\n  }>;\n  protected listenerResults: Partial<{\n    [k in keyof Listeners]: ArgumentTypes<Listeners[k]>\n  }>;\n\n  private reuseResults: boolean;\n\n  constructor(reuseResults?: boolean) {\n    this._constructor(reuseResults);\n  }\n\n  public _constructor(reuseResults?: boolean): any {\n    this.reuseResults = reuseResults;\n    this.listeners = {};\n    this.listenerResults = {};\n  }\n\n  public addEventListener<T extends keyof Listeners>(name: T, callback: Listeners[T], options?: boolean | AddEventListenerOptions) {\n    (this.listeners[name] ??= []).push({callback, options}); // ! add before because if you don't, you won't be able to delete it from callback\n\n    if(this.listenerResults.hasOwnProperty(name)) {\n      callback(...this.listenerResults[name]);\n\n      if((options as AddEventListenerOptions)?.once) {\n        this.listeners[name].pop();\n        return;\n      }\n    }\n\n    // e.add(this, name, {callback, once});\n  }\n\n  public addMultipleEventsListeners(obj: {\n    [name in keyof Listeners]?: Listeners[name]\n  }) {\n    for(const i in obj) {\n      this.addEventListener(i, obj[i]);\n    }\n  }\n\n  public removeEventListener<T extends keyof Listeners>(\n    name: T,\n    callback: Listeners[T],\n    options?: boolean | AddEventListenerOptions\n  ) {\n    if(this.listeners[name]) {\n      findAndSplice(this.listeners[name], (l) => l.callback === callback);\n    }\n    // e.remove(this, name, callback);\n  }\n\n  protected invokeListenerCallback<T extends keyof Listeners, L extends ListenerObject<any>>(\n    name: T,\n    listener: L,\n    ...args: ArgumentTypes<L['callback']>\n  ) {\n    let result: any, error: any;\n    try {\n      result = listener.callback(...args);\n    } catch(err) {\n      error = err;\n      // console.error('listener callback error', err);\n    }\n\n    if((listener.options as AddEventListenerOptions)?.once) {\n      this.removeEventListener(name, listener.callback);\n    }\n\n    if(error) {\n      throw error;\n    }\n\n    return result;\n  }\n\n  private _dispatchEvent<T extends keyof Listeners>(\n    name: T,\n    collectResults: boolean,\n    ...args: ArgumentTypes<Listeners[T]>\n  ) {\n    if(this.reuseResults) {\n      this.listenerResults[name] = args;\n    }\n\n    const arr: Array<SuperReturnType<Listeners[typeof name]>> = collectResults && [];\n\n    const listeners = this.listeners[name];\n    if(listeners) {\n      // ! this one will guarantee execution even if delete another listener during setting\n      const left = listeners.slice();\n      left.forEach((listener) => {\n        const index = listeners.findIndex((l) => l.callback === listener.callback);\n        if(index === -1) {\n          return;\n        }\n\n        const result = this.invokeListenerCallback(name, listener, ...args);\n        if(arr) {\n          arr.push(result);\n        }\n      });\n    }\n\n    return arr;\n  }\n\n  public dispatchResultableEvent<T extends keyof Listeners>(name: T, ...args: ArgumentTypes<Listeners[T]>) {\n    return this._dispatchEvent(name, true, ...args);\n  }\n\n  // * must be protected, but who cares\n  public dispatchEvent<L extends EventListenerListeners = Listeners, T extends keyof L = keyof L>(\n    name: T,\n    ...args: ArgumentTypes<L[T]>\n  ) {\n    // @ts-ignore\n    this._dispatchEvent(name, false, ...args);\n  }\n\n  public cleanup() {\n    this.listeners = {};\n    this.listenerResults = {};\n  }\n}\n","const CACHED_ERRORS: {[key in Error['type']]?: ApiError} = {};\nexport default function makeError(type: Error['type']) {\n  return CACHED_ERRORS[type] ??= {\n    type\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from './ctx';\n\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\nexport const CHROMIUM_VERSION = (() => {\n  try {\n    return +navigator.userAgent.match(/Chrom(?:e|ium)\\/(.+?)(?:\\s|\\.)/)[1];\n  } catch(err) {\n  }\n})();\n\n// https://stackoverflow.com/a/58065241\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\n  !(ctx as any).MSStream;\n\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\n\nexport const IS_MOBILE = (navigator.maxTouchPoints === undefined || navigator.maxTouchPoints > 0) && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\n","const _logTimer = Date.now();\nexport default function dT() {\n  return '[' + ((Date.now() - _logTimer) / 1000).toFixed(3) + ']';\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport DEBUG from '../config/debug';\nimport {IS_FIREFOX, IS_SAFARI} from '../environment/userAgent';\nimport {IS_SERVICE_WORKER, IS_WEB_WORKER} from '../helpers/context';\nimport dT from '../helpers/dT';\n\nexport enum LogTypes {\n  None = 0,\n  Error = 1,\n  Warn = 2,\n  Log = 4,\n  Debug = 8\n};\n\nexport const LOG_LEVELS = [LogTypes.None, LogTypes.Error, LogTypes.Warn, LogTypes.Log, LogTypes.Debug];\n\nconst IS_WEBKIT = IS_SAFARI || IS_FIREFOX;\n\n// let getCallerFunctionNameFromLine: (line: string) => string;\n// if(IS_WEBKIT) {\n//   getCallerFunctionNameFromLine = (line) => {\n//     const splitted = line.split('@');\n//     return splitted[0];\n//   };\n// } else {\n//   getCallerFunctionNameFromLine = (line: string) => {\n//     const splitted = line.trim().split(' ');\n//     if(splitted.length === 3) {\n//       return splitted[1].slice(splitted[1].lastIndexOf('.') + 1);\n//     }\n//   };\n// }\n\nconst STYLES_SUPPORTED = !IS_WEBKIT;\n// const LINE_INDEX = IS_WEBKIT ? 2 : 3;\n\n// function getCallerFunctionName() {\n//   const stack = new Error().stack;\n//   const lines = stack.split('\\n');\n//   const line = lines[LINE_INDEX] || lines[lines.length - 1];\n//   // const match = line.match(/\\.([^\\.]+?)\\s/);\n//   // line = match ? match[1] : line.trim();\n//   const caller = getCallerFunctionNameFromLine(line) || '<anonymous>';\n//   return '[' + caller + ']';\n// }\n\nexport const LOGGER_STYLES = {\n  reset: '\\x1b[0m',\n  bright: '\\x1b[1m',\n  dim: '\\x1b[2m',\n  underscore: '\\x1b[4m',\n  blink: '\\x1b[5m',\n  reverse: '\\x1b[7m',\n  hidden: '\\x1b[8m',\n  // Foreground (text) colors\n  fg: {\n    black: '\\x1b[30m',\n    red: '\\x1b[31m',\n    green: '\\x1b[32m',\n    yellow: '\\x1b[33m',\n    blue: '\\x1b[34m',\n    magenta: '\\x1b[35m',\n    cyan: '\\x1b[36m',\n    white: '\\x1b[37m'\n  },\n  // Background colors\n  bg: {\n    black: '\\x1b[40m',\n    red: '\\x1b[41m',\n    green: '\\x1b[42m',\n    yellow: '\\x1b[43m',\n    blue: '\\x1b[44m',\n    magenta: '\\x1b[45m',\n    cyan: '\\x1b[46m',\n    white: '\\x1b[47m'\n  }\n};\n\nexport type Logger = {\n  (...args: any[]): void;\n  warn(...args: any[]): void;\n  info(...args: any[]): void;\n  error(...args: any[]): void;\n  trace(...args: any[]): void;\n  debug(...args: any[]): void;\n  assert(...args: any[]): void;\n  // log(...args: any[]): void;\n  group(...args: any[]): void;\n  groupCollapsed(...args: any[]): void;\n  groupEnd(...args: any[]): void;\n  setPrefix(newPrefix: string): void;\n  setLevel(level: 0 | 1 | 2 | 3 | 4): void;\n  bindPrefix(prefix: string, type?: LogTypes): Logger;\n};\n\nconst methods: ['debug' | 'info' | 'warn' | 'error' | 'assert' | 'trace'/*  | 'log' */ | 'group' | 'groupCollapsed' | 'groupEnd', LogTypes][] = [\n  ['debug', LogTypes.Debug],\n  ['info', LogTypes.Log],\n  ['warn', LogTypes.Warn],\n  ['error', LogTypes.Error],\n  ['assert', LogTypes.Error],\n  ['trace', LogTypes.Log],\n  ['group', LogTypes.Log],\n  ['groupCollapsed', LogTypes.Log],\n  ['groupEnd', LogTypes.Log]\n  // [\"log\", LogTypes.Log]\n];\n\nexport function logger(prefix: string, type: LogTypes = LogTypes.Log | LogTypes.Warn | LogTypes.Error, ignoreDebugReset = false, style = ''): Logger {\n  let originalPrefix: string;\n  if(!DEBUG && !ignoreDebugReset/*  || true */) {\n    type = LogTypes.Error;\n  }\n\n  if(!STYLES_SUPPORTED) {\n    style = '';\n  } else if(!style) {\n    if(IS_SERVICE_WORKER) style = LOGGER_STYLES.fg.yellow;\n    else if(IS_WEB_WORKER) style = LOGGER_STYLES.fg.cyan;\n  }\n\n  const originalStyle = style;\n  if(style) style = `%s ${style}%s`;\n  else style = '%s';\n\n  // level = LogLevels.log | LogLevels.warn | LogLevels.error | LogLevels.debug\n\n  const log: Logger = function(...args: any[]) {\n    return type & LogTypes.Log && console.log(style, dT(), prefix, /* getCallerFunctionName(), */ ...args);\n  } as any;\n\n  methods.forEach(([method, logType]) => {\n    log[method] = function(...args: any[]) {\n      return type & logType && console[method](style, dT(), prefix, /* getCallerFunctionName(), */ ...args);\n    };\n  });\n\n  log.setPrefix = function(newPrefix: string) {\n    originalPrefix = newPrefix;\n    prefix = '[' + newPrefix + ']';\n  };\n\n  log.setPrefix(prefix);\n\n  log.setLevel = function(level: 0 | 1 | 2 | 3 | 4) {\n    type = LOG_LEVELS.slice(0, level + 1).reduce((acc, v) => acc | v, 0) as any;\n  };\n\n  log.bindPrefix = function(prefix: string, _type = type) {\n    return logger(`${originalPrefix}] [${prefix}`, _type, ignoreDebugReset, originalStyle);\n  };\n\n  return log;\n};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport DEBUG from '../../config/debug';\nimport tabId from '../../config/tabId';\nimport ctx from '../../environment/ctx';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport {IS_WORKER} from '../../helpers/context';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport makeError from '../../helpers/makeError';\nimport {Awaited, WorkerTaskTemplate, WorkerTaskVoidTemplate} from '../../types';\nimport {logger} from '../logger';\n\ntype SuperMessagePortTask = WorkerTaskTemplate & {\n  transfer?: Transferable[]\n};\n\ninterface InvokeTask extends SuperMessagePortTask {\n  type: 'invoke',\n  payload: WorkerTaskVoidTemplate & {withAck?: boolean, void?: boolean}\n}\n\ninterface ResultTask extends SuperMessagePortTask {\n  type: 'result',\n  payload: {\n    taskId: number,\n    result?: any,\n    error?: any\n  }\n}\n\ninterface AckTask extends SuperMessagePortTask {\n  type: 'ack',\n  payload: {\n    cached: boolean,\n    taskId: number\n    result?: any,\n    error?: any,\n  }\n}\n\ninterface PingTask extends SuperMessagePortTask {\n  type: 'ping'\n}\n\ninterface PongTask extends SuperMessagePortTask {\n  type: 'pong'\n}\n\ninterface BatchTask extends SuperMessagePortTask {\n  type: 'batch',\n  payload: Task[]\n}\n\ninterface CloseTask extends SuperMessagePortTask {\n  type: 'close'\n}\n\n// interface OpenTask extends SuperMessagePortTask {\n//   type: 'open'\n// }\n\ninterface LockTask extends SuperMessagePortTask {\n  type: 'lock',\n  payload: string\n}\n\ntype Task = InvokeTask | ResultTask | AckTask | PingTask | PongTask | BatchTask | CloseTask/*  | OpenTask */ | LockTask;\ntype TaskMap = {\n  [type in Task as type['type']]?: (task: Extract<Task, type>, source: MessageEventSource, event: MessageEvent<any>) => void | Promise<any>\n};\n\nexport type AckedResult<T> = {\n  cached: boolean,\n  result: Promise<T>\n};\n// export type AckedResult<T> = {\n//   cached: true,\n//   result: T\n// } | {\n//   cached: false,\n//   result: Promise<T>\n// };\n\ntype ListenPort = WindowProxy | MessagePort | ServiceWorker | Worker | ServiceWorkerContainer;\ntype SendPort = Pick<MessageEventSource, 'postMessage'>/* WindowProxy | MessagePort | ServiceWorker | Worker */;\n\nexport type MessageListenPort = ListenPort;\nexport type MessageSendPort = SendPort;\n\ntype ListenerCallback = (payload: any, source: MessageEventSource, event: MessageEvent<any>) => any;\ntype Listeners = Record<string, ListenerCallback>;\n\nconst USE_LOCKS = true;\nconst USE_BATCHING = true;\n\n// const PING_INTERVAL = DEBUG && false ? 0x7FFFFFFF : 5000;\n// const PING_TIMEOUT = DEBUG && false ? 0x7FFFFFFF : 10000;\n\nexport default class SuperMessagePort<\n  Workers extends Listeners,\n  Masters extends Listeners,\n  IsMaster extends boolean,\n  Receive extends Listeners = IsMaster extends true ? Masters : Workers,\n  Send extends Listeners = IsMaster extends true ? Workers : Masters\n> extends EventListenerBase<Receive> {\n  protected listenPorts: Array<ListenPort>;\n  protected sendPorts: Array<SendPort>;\n  protected pingResolves: Map<SendPort, () => void>;\n\n  protected taskId: number;\n  protected awaiting: {\n    [id: number]: {\n      resolve: any,\n      reject: any,\n      taskType: string,\n      port?: SendPort\n    }\n  };\n  protected pending: Map<SendPort, Task[]>;\n\n  protected log: ReturnType<typeof logger>;\n  protected debug: boolean;\n  protected releasingPending: boolean;\n\n  protected processTaskMap: TaskMap;\n\n  protected onPortDisconnect: (source: MessageEventSource) => void;\n  // protected onPortConnect: (source: MessageEventSource) => void;\n\n  protected heldLocks: Map<SendPort, {resolve: () => void, id: string}>;\n  protected requestedLocks: Map<string, SendPort>;\n\n  constructor(protected logSuffix?: string) {\n    super(false);\n\n    this.listenPorts = [];\n    this.sendPorts = [];\n    this.pingResolves = new Map();\n    this.taskId = 0;\n    this.awaiting = {};\n    this.pending = new Map();\n    this.log = logger('MP' + (logSuffix ? '-' + logSuffix : ''));\n    this.debug = DEBUG;\n    this.heldLocks = new Map();\n    this.requestedLocks = new Map();\n\n    this.processTaskMap = {\n      result: this.processResultTask,\n      ack: this.processAckTask,\n      invoke: this.processInvokeTask,\n      ping: this.processPingTask,\n      pong: this.processPongTask,\n      close: this.processCloseTask,\n      // open: this.processOpenTask,\n      lock: this.processLockTask,\n      batch: this.processBatchTask\n    };\n  }\n\n  public setOnPortDisconnect(callback: (source: MessageEventSource) => void) {\n    this.onPortDisconnect = callback;\n  }\n\n  // public setOnPortConnect(callback: (source: MessageEventSource) => void) {\n  //   this.onPortConnect = callback;\n  // }\n\n  public attachPort(port: MessageEventSource) {\n    this.attachListenPort(port);\n    this.attachSendPort(port);\n  }\n\n  public attachListenPort(port: ListenPort) {\n    this.listenPorts.push(port);\n    port.addEventListener('message', this.onMessage as any);\n  }\n\n  public attachSendPort(port: SendPort) {\n    this.log.warn('attaching send port');\n\n    (port as MessagePort).start?.();\n\n    this.sendPorts.push(port);\n    // this.sendPing(port);\n\n    // const task = this.createTask('open', undefined);\n    // this.postMessage(port, task);\n\n    if(typeof(window) !== 'undefined' && USE_LOCKS) {\n      if('locks' in navigator) {\n        const id = ['lock', tabId, this.logSuffix || '', Math.random() * 0x7FFFFFFF | 0].join('-');\n        this.log.warn('created lock', id);\n        const promise = new Promise<void>((resolve) => this.heldLocks.set(port, {resolve, id}))\n        .then(() => this.heldLocks.delete(port));\n        navigator.locks.request(id, () => {\n          this.resendLockTask(port);\n          return promise;\n        });\n      } else {\n        window.addEventListener('beforeunload', () => {\n          const task = this.createTask('close', undefined);\n          this.postMessage(undefined, task);\n        });\n      }\n    }\n\n    this.releasePending();\n  }\n\n  public resendLockTask(port: SendPort) {\n    const lock = this.heldLocks.get(port);\n    if(!lock) {\n      return;\n    }\n\n    this.pushTask(this.createTask('lock', lock.id), port);\n  }\n\n  // ! Can't rely on ping because timers can be suspended\n  // protected sendPing(port: SendPort, loop = IS_WORKER) {\n  //   let timeout: number;\n  //   const promise = new Promise<void>((resolve, reject) => {\n  //     this.pingResolves.set(port, resolve);\n  //     this.pushTask(this.createTask('ping', undefined), port);\n\n  //     timeout = ctx.setTimeout(() => {\n  //       reject();\n  //     }, PING_TIMEOUT);\n  //   });\n\n  //   promise.then(() => {\n  //     // this.log('got pong');\n\n  //     clearTimeout(timeout);\n  //     this.pingResolves.delete(port);\n\n  //     if(loop) {\n  //       this.sendPingWithTimeout(port);\n  //     }\n  //   }, () => {\n  //     this.pingResolves.delete(port);\n  //     this.detachPort(port);\n  //   });\n  // }\n\n  // protected sendPingWithTimeout(port: SendPort, timeout = PING_INTERVAL) {\n  //   ctx.setTimeout(() => {\n  //     if(!this.sendPorts.includes(port)) {\n  //       return;\n  //     }\n\n  //     this.sendPing(port);\n  //   }, timeout);\n  // }\n\n  public detachPort(port: ListenPort) {\n    this.log.warn('disconnecting port');\n\n    indexOfAndSplice(this.listenPorts, port);\n    indexOfAndSplice(this.sendPorts, port as any);\n\n    port.removeEventListener?.('message', this.onMessage as any);\n    (port as MessagePort).close?.();\n\n    this.onPortDisconnect?.(port as any);\n\n    const heldLock = this.heldLocks.get(port as SendPort);\n    heldLock?.resolve();\n\n    const error = makeError('PORT_DISCONNECTED');\n    for(const id in this.awaiting) {\n      const task = this.awaiting[id];\n      if(task.port === port) {\n        task.reject(error);\n        delete this.awaiting[id];\n      }\n    }\n  }\n\n  protected postMessage(port: SendPort | SendPort[], task: Task) {\n    const ports = Array.isArray(port) ? port : (port ? [port] : this.sendPorts);\n    ports.forEach((port) => {\n      if(import.meta.env.MODE === 'test') {\n        return;\n      }\n\n      port.postMessage(task, task.transfer as any);\n    });\n  }\n\n  protected onMessage = (event: MessageEvent) => {\n    const task: Task = event.data;\n    // this.log('got message', task);\n\n    const source: MessageEventSource = event.source || event.currentTarget as any; // can have no source\n\n    // @ts-ignore\n    this.processTaskMap[task.type](task, source, event);\n  };\n\n  protected async releasePending() {\n    // return;\n\n    if(/* !this.listenPorts.length || !this.sendPorts.length ||  */this.releasingPending) {\n      return;\n    }\n\n    this.releasingPending = true;\n    // const perf = performance.now();\n\n    if(USE_BATCHING) {\n      await Promise.resolve();\n    }\n    // await pause(0);\n\n    this.debug && this.log.debug('releasing tasks, length:', this.pending.size/* , performance.now() - perf */);\n\n    this.pending.forEach((portTasks, port) => {\n      let tasks: Task[] = portTasks;\n      if(USE_BATCHING) {\n        let batchTask: BatchTask;\n        tasks = [];\n        portTasks.forEach((task) => {\n          if(task.transfer) {\n            batchTask = undefined;\n            tasks.push(task);\n          } else {\n            if(!batchTask) {\n              batchTask = this.createTask('batch', []);\n              tasks.push(batchTask);\n            }\n\n            batchTask.payload.push(task);\n          }\n        });\n      }\n\n      const ports = port ? [port] : this.sendPorts;\n      if(!ports.length) {\n        return;\n      }\n\n      tasks.forEach((task) => {\n        // if(USE_BATCHING && task.type === 'batch') {\n        //   this.log(`batching ${task.payload.length} tasks`);\n        // }\n\n        try {\n          // if(IS_SERVICE_WORKER && !port) {\n          //   notifyAll(task);\n          // } else {\n          this.postMessage(ports, task);\n          // }\n        } catch(err) {\n          this.log.error('postMessage error:', err, task, ports);\n        }\n      });\n\n      this.pending.delete(port);\n    });\n\n    this.debug && this.log.debug('released tasks');\n\n    this.releasingPending = false;\n  }\n\n  protected processResultTask = (task: ResultTask) => {\n    const {taskId, result, error} = task.payload;\n    const deferred = this.awaiting[taskId];\n    if(!deferred) {\n      return;\n    }\n\n    this.debug && this.log.debug('done', deferred.taskType, result, error);\n    'error' in task.payload ? deferred.reject(error) : deferred.resolve(result);\n    delete this.awaiting[taskId];\n  };\n\n  protected processAckTask = (task: AckTask) => {\n    const payload = task.payload;\n    const deferred = this.awaiting[payload.taskId];\n    if(!deferred) {\n      return;\n    }\n\n    // * will finish the init promise with incoming result\n    const previousResolve: (acked: AckedResult<any>) => void = deferred.resolve;\n    // const previousReject = deferred.reject;\n\n    // if(payload.cached) {\n    //   if('result' in payload) {\n    //     previousResolve({\n    //       cached: true,\n    //       result: payload.result\n    //     });\n    //   } else {\n    //     previousReject(payload.error);\n    //   }\n    // } else {\n    //   const ret: AckedResult<any> = {\n    //     cached: false,\n    //     result: new Promise((resolve, reject) => {\n    //       deferred.resolve = resolve;\n    //       deferred.reject = reject;\n    //     })\n    //   };\n\n    //   previousResolve(ret);\n    // }\n\n    const ret: AckedResult<any> = {\n      cached: payload.cached,\n      result: payload.cached ? ('result' in payload ? Promise.resolve(payload.result) : Promise.reject(payload.error)) : new Promise((resolve, reject) => {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n      })\n    };\n\n    previousResolve(ret);\n\n    if(payload.cached) {\n      delete this.awaiting[payload.taskId];\n    }\n  };\n\n  protected processPingTask = (task: PingTask, source: MessageEventSource, event: MessageEvent) => {\n    this.pushTask(this.createTask('pong', undefined), event.source);\n  };\n\n  protected processPongTask = (task: PongTask, source: MessageEventSource, event: MessageEvent) => {\n    const pingResolve = this.pingResolves.get(source);\n    if(pingResolve) {\n      this.pingResolves.delete(source);\n      pingResolve();\n    }\n  };\n\n  protected processCloseTask = (task: CloseTask, source: MessageEventSource, event: MessageEvent) => {\n    this.detachPort(source);\n  };\n\n  protected processBatchTask = (task: BatchTask, source: MessageEventSource, event: MessageEvent) => {\n    if(!USE_BATCHING) {\n      return;\n    }\n\n    const newEvent: MessageEvent = {data: event.data, source: event.source, currentTarget: event.currentTarget} as any;\n    task.payload.forEach((task) => {\n      // @ts-ignore\n      newEvent.data = task;\n      this.onMessage(newEvent);\n    });\n  };\n\n  // * it's just an 'open' callback, DO NOT attach port from here\n  // protected processOpenTask = (task: OpenTask, source: MessageEventSource, event: MessageEvent) => {\n  //   this.onPortConnect?.(source);\n  // };\n\n  protected processLockTask = (task: LockTask, source: MessageEventSource, event: MessageEvent) => {\n    const id = task.payload;\n    if(this.requestedLocks.has(id)) {\n      return;\n    }\n\n    this.requestedLocks.set(id, source);\n    navigator.locks.request(id, () => {\n      this.processCloseTask(undefined, source, undefined);\n      this.requestedLocks.delete(id);\n    });\n  };\n\n  protected processInvokeTask = async(task: InvokeTask, source: MessageEventSource, event: MessageEvent) => {\n    const id = task.id;\n    const innerTask = task.payload;\n\n    let resultTaskPayload: ResultTask['payload'];\n    let resultTask: ResultTask, ackTask: AckTask;\n    if(!innerTask.void) {\n      resultTaskPayload = {taskId: id};\n      resultTask = this.createTask('result', resultTaskPayload);\n    }\n\n    if(innerTask.withAck) {\n      ackTask = this.createTask('ack', {\n        taskId: id,\n        cached: true\n      });\n    }\n\n    let isPromise: boolean;\n    try {\n      const listeners = this.listeners[innerTask.type];\n      if(!listeners?.length) {\n        throw new Error('no listener');\n      }\n\n      const listener = listeners[0];\n\n      // @ts-ignore\n      let result = this.invokeListenerCallback(innerTask.type, listener, innerTask.payload, source, event);\n      if(innerTask.void) {\n        return;\n      }\n\n      isPromise = result instanceof Promise;\n\n      if(ackTask) {\n        const cached = !isPromise;\n        ackTask.payload.cached = cached;\n        if(cached) ackTask.payload.result = result;\n        this.pushTask(ackTask, source);\n\n        if(cached) {\n          return;\n        }\n      }\n\n      if(isPromise) {\n        result = await result;\n      }\n\n      resultTaskPayload.result = result;\n    } catch(error) {\n      this.log.error('worker task error:', error, task);\n      if(innerTask.void) {\n        return;\n      }\n\n      if(ackTask && ackTask.payload.cached) {\n        ackTask.payload.error = error;\n        this.pushTask(ackTask, source);\n        return;\n      }\n\n      resultTaskPayload.error = error;\n    }\n\n    this.pushTask(resultTask, source);\n  };\n\n  protected createTask<T extends Task['type'], K extends Task = Parameters<TaskMap[T]>[0]>(type: T, payload: K['payload'], transfer?: Transferable[]): K {\n    return {\n      type,\n      payload,\n      id: this.taskId++,\n      transfer\n    } as K;\n  }\n\n  protected createInvokeTask(type: string, payload: any, withAck?: boolean, _void?: boolean, transfer?: Transferable[]): InvokeTask {\n    return this.createTask('invoke', {\n      type,\n      payload,\n      withAck,\n      void: _void\n    }, transfer);\n  }\n\n  protected pushTask(task: Task, port?: SendPort) {\n    let tasks = this.pending.get(port);\n    if(!tasks) {\n      this.pending.set(port, tasks = []);\n    }\n\n    tasks.push(task);\n    this.releasePending();\n  }\n\n  public invokeVoid<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], port?: SendPort, transfer?: Transferable[]) {\n    const task = this.createInvokeTask(type as string, payload, undefined, true, transfer);\n    this.pushTask(task, port);\n  }\n\n  public invoke<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], withAck?: false, port?: SendPort, transfer?: Transferable[]): Promise<Awaited<ReturnType<Send[T]>>>;\n  public invoke<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], withAck?: true, port?: SendPort, transfer?: Transferable[]): Promise<AckedResult<Awaited<ReturnType<Send[T]>>>>;\n  public invoke<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], withAck?: boolean, port?: SendPort, transfer?: Transferable[]) {\n    this.debug && this.log.debug('start', type, payload);\n\n    let task: InvokeTask;\n    const promise = new Promise<Awaited<ReturnType<Send[T]>>>((resolve, reject) => {\n      task = this.createInvokeTask(type as string, payload, withAck, undefined, transfer);\n      this.awaiting[task.id] = {resolve, reject, taskType: type as string, port};\n      this.pushTask(task, port);\n    });\n\n    if(IS_WORKER) {\n      promise.finally(() => {\n        clearInterval(interval);\n      });\n\n      const interval = ctx.setInterval(() => {\n        this.log.error('task still has no result', task, port);\n      }, 60e3);\n    } else if(false) {\n      // let timedOut = false;\n      const startTime = Date.now();\n      promise.finally(() => {\n        const elapsedTime = Date.now() - startTime;\n        if(elapsedTime >= TIMEOUT) {\n          this.log.error(`task was processing ${Date.now() - startTime}ms`, task.payload.payload, port);\n        }/*  else {\n          clearTimeout(timeout);\n        } */\n      });\n\n      const TIMEOUT = 10;\n      // const timeout = ctx.setTimeout(() => {\n      //   timedOut = true;\n      //   // this.log.error(`task is processing more than ${TIMEOUT} milliseconds`, task, port);\n      // }, TIMEOUT);\n    }\n\n    return promise;\n  }\n\n  public invokeExceptSource<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], source?: SendPort) {\n    const ports = this.sendPorts.slice();\n    indexOfAndSplice(ports, source);\n\n    ports.forEach((target) => {\n      this.invokeVoid(type, payload, target);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {CryptoMethods} from './crypto_methods';\nimport SuperMessagePort from '../mtproto/superMessagePort';\nimport {Awaited} from '../../types';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport {IS_WORKER} from '../../helpers/context';\n\ntype CryptoEvent = {\n  invoke: <T extends keyof CryptoMethods>(payload: {method: T, args: Parameters<CryptoMethods[T]>}) => ReturnType<CryptoMethods[T]>,\n  port: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\n  terminate: () => void\n};\n\nexport class CryptoMessagePort<Master extends boolean = false> extends SuperMessagePort<CryptoEvent, CryptoEvent, Master> {\n  private lastIndex: number;\n\n  constructor() {\n    super('CRYPTO');\n    this.lastIndex = -1;\n  }\n\n  public invokeCryptoNew<T extends keyof CryptoMethods>({method, args, transfer}: {\n    method: T,\n    args: Parameters<CryptoMethods[T]>,\n    transfer?: Transferable[]\n  }): Promise<Awaited<ReturnType<CryptoMethods[T]>>> {\n    const payload = {method, args};\n    const listeners = this.listeners['invoke'];\n    if(listeners?.length) { // already in worker\n      // try {\n      // @ts-ignore\n      let result: any = listeners[0].callback(payload);\n      if(!IS_WORKER && !(result instanceof Promise)) {\n        result = Promise.resolve(result);\n      }\n\n      return result;\n      // } catch(err) {\n      //   return Promise.reject(err);\n      // }\n    }\n\n    const sendPortIndex = method === 'aes-encrypt' || method === 'aes-decrypt' ?\n      this.lastIndex = (this.lastIndex + 1) % this.sendPorts.length :\n      0;\n    // @ts-ignore\n    return this.invoke('invoke', payload, undefined, this.sendPorts[sendPortIndex], transfer);\n  }\n\n  public invokeCrypto<T extends keyof CryptoMethods>(method: T, ...args: Parameters<CryptoMethods[T]>): Promise<Awaited<ReturnType<CryptoMethods[T]>>> {\n    return this.invokeCryptoNew({method, args});\n  }\n}\n\nconst cryptoMessagePort = new CryptoMessagePort<false>();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.cryptoMessagePort = cryptoMessagePort);\nexport default cryptoMessagePort;\n","import type ENVIRONMENT from '.';\n\nlet environment: typeof ENVIRONMENT;\nexport function getEnvironment() {\n  return environment;\n}\n\nexport function setEnvironment(env: typeof environment) {\n  return environment = env;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {IS_MOBILE} from '../../environment/userAgent';\nimport type {MyDialogFilter} from '../storages/filters';\n\n/**\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\n */\nexport type UserAuth = {dcID: number | string, date: number, id: PeerId};\nexport type REAL_FOLDER_ID = 0 | 1;\n\nexport const NULL_PEER_ID: PeerId = 0;\nexport const REPLIES_PEER_ID: PeerId = 1271266957;\nexport const REPLIES_HIDDEN_CHANNEL_ID: ChatId = 777;\nexport const SERVICE_PEER_ID: PeerId = 777000;\nexport const MUTE_UNTIL = 0x7FFFFFFF;\nexport const BOT_START_PARAM = '';\nexport const MAX_FILE_SAVE_SIZE = 20 * 1024 * 1024;\nexport const THUMB_TYPE_FULL = '';\nexport const TOPIC_COLORS = [0x6FB9F0, 0xFFD67E, 0xCB86DB, 0x8EEE98, 0xFF93B2, 0xFB6F5F];\nexport const ATTACH_MENU_BOT_ICON_NAME = 'default_static';\nexport const MESSAGE_ID_OFFSET = 0x100000000;\nexport const GENERAL_TOPIC_ID = MESSAGE_ID_OFFSET + 1;\nexport const T_ME_PREFIXES = new Set(['web', 'k', 'z', 'a']);\nexport const SEND_WHEN_ONLINE_TIMESTAMP = 0x7FFFFFFE;\n\nexport const FOLDER_ID_ALL: REAL_FOLDER_ID = 0;\nexport const FOLDER_ID_ARCHIVE: REAL_FOLDER_ID = 1;\nexport const REAL_FOLDERS: Set<number> = new Set([FOLDER_ID_ALL, FOLDER_ID_ARCHIVE]);\nexport const START_LOCAL_ID = Math.max(...Array.from(REAL_FOLDERS)) + 1 as MyDialogFilter['localId'];\n\nexport const TEST_NO_STORIES = false;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport type {getEnvironment} from '../../environment/utils';\nimport type loadState from '../appManagers/utils/state/loadState';\nimport type {StoragesResults} from '../appManagers/utils/storages/loadStorages';\nimport type {LocalStorageProxyTask} from '../localStorage';\nimport type {Awaited} from '../../types';\nimport type {Mirrors, MirrorTaskPayload, NotificationBuildTaskPayload, TabState} from './mtprotoworker';\nimport type toggleStorages from '../../helpers/toggleStorages';\nimport SuperMessagePort from './superMessagePort';\n\nexport type MTProtoManagerTaskPayload = {name: string, method: string, args: any[]};\n\ntype MTProtoBroadcastEvent = {\n  event: (payload: {name: string, args: any[]}, source: MessageEventSource) => void\n};\n\nexport default class MTProtoMessagePort<Master extends boolean = true> extends SuperMessagePort<{\n  environment: (environment: ReturnType<typeof getEnvironment>) => void,\n  crypto: (payload: {method: string, args: any[]}) => Promise<any>,\n  state: (payload: {userId: UserId} & Awaited<ReturnType<typeof loadState>> & {storagesResults?: StoragesResults}) => void,\n  manager: (payload: MTProtoManagerTaskPayload) => any,\n  toggleStorages: (payload: {enabled: boolean, clearWrite: boolean}) => ReturnType<typeof toggleStorages>,\n  serviceWorkerOnline: (online: boolean) => void,\n  serviceWorkerPort: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\n  cryptoPort: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\n  createObjectURL: (blob: Blob) => string,\n  tabState: (payload: TabState, source: MessageEventSource) => void,\n  createProxyWorkerURLs: (payload: {originalUrl: string, blob: Blob}) => string[],\n} & MTProtoBroadcastEvent, {\n  convertWebp: (payload: {fileName: string, bytes: Uint8Array}) => Promise<Uint8Array>,\n  convertOpus: (payload: {fileName: string, bytes: Uint8Array}) => Promise<Uint8Array>,\n  localStorageProxy: (payload: LocalStorageProxyTask['payload']) => Promise<any>,\n  mirror: (payload: MirrorTaskPayload) => void,\n  notificationBuild: (payload: NotificationBuildTaskPayload) => void,\n  // hello: () => void\n} & MTProtoBroadcastEvent, Master> {\n  private static INSTANCE: MTProtoMessagePort;\n\n  constructor() {\n    super('MTPROTO');\n\n    MTProtoMessagePort.INSTANCE = this;\n\n    MOUNT_CLASS_TO && (MOUNT_CLASS_TO.mtprotoMessagePort = this);\n  }\n\n  public static getInstance<Master extends boolean>() {\n    return this.INSTANCE as MTProtoMessagePort<Master>;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, PollResults, Poll, WebPage, GroupCall, GroupCallParticipant, ReactionCount, MessagePeerReaction, PhoneCall, Config, Reaction, AttachMenuBot, PeerSettings, StoryItem, PeerStories} from '../layer';\nimport type {Dialog, ForumTopic, MessagesStorageKey, MyMessage} from './appManagers/appMessagesManager';\nimport type {MyDialogFilter} from './storages/filters';\nimport type {Folder} from './storages/dialogs';\nimport type {UserTyping} from './appManagers/appProfileManager';\nimport type {MyDraftMessage} from './appManagers/appDraftsManager';\nimport type {ConnectionStatusChange} from './mtproto/connectionStatus';\nimport type {GroupCallId} from './appManagers/appGroupCallsManager';\nimport type {AppManagers} from './appManagers/managers';\nimport type {State} from '../config/state';\nimport type {Progress} from './appManagers/appDownloadManager';\nimport type {CallId} from './appManagers/appCallsManager';\nimport type {MyDocument} from './appManagers/appDocsManager';\nimport type {MTAppConfig} from './mtproto/appConfig';\nimport type StoriesCacheType from './appManagers/utils/stories/cacheType';\nimport type {StoriesListPosition} from './appManagers/appStoriesManager';\nimport {NULL_PEER_ID, UserAuth} from './mtproto/mtproto_config';\nimport EventListenerBase from '../helpers/eventListenerBase';\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\nimport {IS_WORKER} from '../helpers/context';\n\nexport type BroadcastEvents = {\n  'chat_full_update': ChatId,\n  'chat_update': ChatId,\n  'chat_toggle_forum': {chatId: ChatId, enabled: boolean},\n  'chat_participant': Update.updateChannelParticipant,\n  'chat_participation': {chatId: ChatId, left: boolean},\n  'chat_requests': {requestsPending: number, recentRequesters: UserId[], chatId: ChatId}\n\n  'channel_update': ChatId,\n\n  'user_update': UserId,\n  'user_auth': UserAuth,\n  'user_full_update': UserId,\n\n  'attach_menu_bot': AttachMenuBot,\n\n  'peer_pinned_messages': {peerId: PeerId, mids?: number[], pinned?: boolean, unpinAll?: true},\n  'peer_pinned_hidden': {peerId: PeerId, maxId: number},\n  'peer_typings': {peerId: PeerId, threadId?: number, typings: UserTyping[]},\n  'peer_block': {peerId: PeerId, blocked?: boolean, blockedMyStoriesFrom?: boolean},\n  'peer_title_edit': {peerId: PeerId, threadId?: number},\n  'peer_bio_edit': PeerId,\n  'peer_deleted': PeerId, // left chat, deleted user dialog, left channel\n  'peer_full_update': PeerId,\n  'peer_settings': {peerId: PeerId, settings: PeerSettings},\n  'peer_stories': {peerId: PeerId, available: boolean},\n  'peer_stories_hidden': {peerId: PeerId, hidden: boolean},\n\n  'filter_delete': MyDialogFilter,\n  'filter_update': MyDialogFilter,\n  'filter_new': MyDialogFilter,\n  'filter_order': number[],\n  'filter_joined': MyDialogFilter,\n\n  'folder_unread': Omit<Folder, 'dialogs' | 'dispatchUnreadTimeout'>,\n\n  'dialog_draft': {peerId: PeerId, dialog: Dialog | ForumTopic, drop: boolean, draft: MyDraftMessage | undefined},\n  'dialog_unread': {peerId: PeerId, dialog: Dialog | ForumTopic},\n  'dialog_flush': {peerId: PeerId, dialog: Dialog},\n  'dialog_drop': Dialog | ForumTopic,\n  'dialog_migrate': {migrateFrom: PeerId, migrateTo: PeerId},\n  // 'dialog_top': Dialog,\n  'dialog_notify_settings': Dialog | ForumTopic,\n  // 'dialog_order': {dialog: Dialog, pos: number},\n  'dialogs_multiupdate': Map<PeerId, {dialog?: Dialog, topics?: Map<number, ForumTopic>}>,\n\n  'history_append': {storageKey: MessagesStorageKey, message: Message.message},\n  'history_update': {storageKey: MessagesStorageKey, message: MyMessage, sequential?: boolean},\n  'history_reply_markup': {peerId: PeerId},\n  'history_multiappend': MyMessage,\n  'history_delete': {peerId: PeerId, msgs: Set<number>},\n  'history_forbidden': PeerId,\n  'history_reload': PeerId,\n  // 'history_request': void,\n\n  'message_edit': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number, message: MyMessage},\n  'message_sent': {storageKey: MessagesStorageKey, tempId: number, tempMessage: any, mid: number, message: MyMessage},\n  'message_error': {storageKey: MessagesStorageKey, tempId: number, error: ApiError},\n  'message_transcribed': {peerId: PeerId, mid: number, text: string, pending?: boolean},\n  'messages_views': {peerId: PeerId, mid: number, views: number}[],\n  'messages_reactions': {message: Message.message, changedResults: ReactionCount[]}[],\n  'messages_pending': void,\n  'messages_read': void,\n  'messages_downloaded': {peerId: PeerId, mids: number[]},\n  'messages_media_read': {peerId: PeerId, mids: number[]},\n\n  'story_update': {peerId: PeerId, story: StoryItem, modifiedPinned?: boolean, modifiedArchive?: boolean},\n  'story_deleted': {peerId: PeerId, id: number},\n  'story_expired': {peerId: PeerId, id: number},\n  'story_new': {peerId: PeerId, story: StoryItem, cacheType: StoriesCacheType, maxReadId: number},\n  'stories_stories': PeerStories,\n  'stories_read': {peerId: PeerId, maxReadId: number},\n  'stories_downloaded': {peerId: PeerId, ids: number[]},\n  'stories_position': {peerId: PeerId, position: StoriesListPosition},\n\n  'replies_updated': Message.message,\n\n  'scheduled_new': Message.message,\n  'scheduled_delete': {peerId: PeerId, mids: number[]},\n\n  'album_edit': {peerId: PeerId, groupId: string, deletedMids: number[], messages: Message.message[]},\n\n  'stickers_installed': StickerSet.stickerSet,\n  'stickers_deleted': StickerSet.stickerSet,\n  'stickers_updated': {type: 'recent' | 'faved', stickers: MyDocument[]},\n  'stickers_top': Long,\n  'stickers_order': {type: 'masks' | 'emojis' | 'stickers', order: Long[]},\n  'sticker_updated': {type: 'recent' | 'faved', document: MyDocument, faved: boolean},\n\n  'state_cleared': void,\n  'state_synchronized': ChatId | void,\n  'state_synchronizing': ChatId | void,\n\n  'contacts_update': UserId,\n  'avatar_update': {peerId: PeerId, threadId?: number},\n  'poll_update': {poll: Poll, results: PollResults},\n  'invalidate_participants': ChatId,\n  // 'channel_settings': {channelId: number},\n  'webpage_updated': {id: WebPage.webPage['id'], msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[]},\n\n  'connection_status_change': ConnectionStatusChange,\n  'settings_updated': {key: string, value: any, settings: State['settings']},\n  'draft_updated': {peerId: PeerId, threadId: number, draft: MyDraftMessage | undefined, force?: boolean},\n\n  'background_change': void,\n\n  'privacy_update': Update.updatePrivacy,\n\n  'notify_settings': Update.updateNotifySettings,\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\n\n  'notification_reset': string,\n  'notification_cancel': string,\n\n  'language_change': string,\n\n  'theme_change': {x: number, y: number} | void,\n  'theme_changed': void,\n\n  'media_play': void,\n\n  'emoji_recent': AppEmoji,\n\n  'download_progress': Progress,\n  'document_downloading': DocId,\n  'document_downloaded': DocId,\n\n  'choosing_sticker': boolean\n\n  'group_call_update': GroupCall,\n  'group_call_participant': {groupCallId: GroupCallId, participant: GroupCallParticipant},\n  // 'group_call_video_track_added': {instance: GroupCallInstance}\n\n  'call_update': PhoneCall,\n  'call_signaling': {callId: CallId, data: Uint8Array},\n\n  'quick_reaction': Reaction,\n\n  'service_notification': Update.updateServiceNotification,\n\n  'logging_out': void,\n\n  'payment_sent': {peerId: PeerId, mid: number, receiptMessage: Message.messageService},\n\n  'web_view_result_sent': Long,\n\n  'premium_toggle': boolean,\n  'premium_toggle_private': {isNew: boolean, isPremium: boolean},\n\n  'config': Config,\n  'app_config': MTAppConfig\n};\n\nexport type BroadcastEventsListeners = {\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\n};\n\nexport class RootScope extends EventListenerBase<BroadcastEventsListeners> {\n  public myId: PeerId;\n  private connectionStatus: {[name: string]: ConnectionStatusChange};\n  public settings: State['settings'];\n  public managers: AppManagers;\n  public premium: boolean;\n\n  constructor() {\n    super();\n\n    this.myId = NULL_PEER_ID;\n    this.connectionStatus = {};\n    this.premium = false;\n\n    this.addEventListener('user_auth', ({id}) => {\n      this.myId = id.toPeerId();\n    });\n\n    this.addEventListener('premium_toggle_private', ({isNew, isPremium}) => {\n      this.premium = isPremium;\n      this.dispatchEventSingle('premium_toggle', isPremium);\n    });\n\n    this.addEventListener('connection_status_change', (status) => {\n      this.connectionStatus[status.name] = status;\n    });\n\n    this.dispatchEvent = (e, ...args) => {\n      super.dispatchEvent(e, ...args);\n      MTProtoMessagePort.getInstance().invokeVoid('event', {name: e as string, args});\n    };\n\n    if(!IS_WORKER) {\n      this.addEventListener('settings_updated', ({settings}) => {\n        this.settings = settings;\n      });\n    }\n  }\n\n  public getConnectionStatus() {\n    return this.connectionStatus;\n  }\n\n  public getPremium() {\n    return this.premium;\n  }\n\n  public dispatchEventSingle(...args: any[]) {\n    // @ts-ignore\n    super.dispatchEvent(...args);\n  }\n}\n\nconst rootScope = new RootScope();\nMOUNT_CLASS_TO.rootScope = rootScope;\nexport default rootScope;\n","export default function noop() {}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport noop from './noop';\n\nexport interface CancellablePromise<T> extends Promise<T> {\n  resolve?: (value: T) => void,\n  reject?: (...args: any[]) => void,\n  cancel?: (reason?: any) => void,\n\n  notify?: (...args: any[]) => void,\n  notifyAll?: (...args: any[]) => void,\n  lastNotify?: any,\n  listeners?: Array<(...args: any[]) => void>,\n  addNotifyListener?: (callback: (...args: any[]) => void) => void,\n\n  isFulfilled?: boolean,\n  isRejected?: boolean,\n\n  onFinish?: () => void,\n  _resolve?: (value: T) => void,\n  _reject?: (...args: any[]) => void\n}\n\nconst deferredHelper = {\n  isFulfilled: false,\n  isRejected: false,\n\n  notify: () => {},\n  notifyAll: function(...args: any[]) {\n    this.lastNotify = args;\n    this.listeners?.forEach((callback: any) => callback(...args));\n  },\n\n  addNotifyListener: function(callback: (...args: any[]) => void) {\n    if(this.lastNotify) {\n      callback(...this.lastNotify);\n    }\n\n    (this.listeners ??= []).push(callback);\n  },\n\n  resolve: function(value) {\n    if(this.isFulfilled || this.isRejected) return;\n\n    this.isFulfilled = true;\n    this._resolve(value);\n    this.onFinish();\n  },\n\n  reject: function(...args) {\n    if(this.isRejected || this.isFulfilled) return;\n\n    this.isRejected = true;\n    this._reject(...args);\n    this.onFinish();\n  },\n\n  onFinish: function() {\n    this.notify = this.notifyAll = this.lastNotify = null;\n    if(this.listeners) this.listeners.length = 0;\n\n    if(this.cancel) {\n      this.cancel = noop;\n    }\n  }\n} as CancellablePromise<any>;\n\nexport default function deferredPromise<T>() {\n  let resolve: (value: T) => void, reject: (...args: any[]) => void;\n  const deferred: CancellablePromise<T> = new Promise<T>((_resolve, _reject) => {\n    resolve = _resolve, reject = _reject;\n  });\n\n  Object.assign(deferred, deferredHelper);\n  deferred._resolve = resolve;\n  deferred._reject = reject;\n\n  return deferred;\n}\n\n(self as any).deferredPromise = deferredPromise;\n","// * Jolly Cobra's schedulers\n\nimport {AnyToVoidFunction} from '../../types';\n\nexport default function throttle<F extends AnyToVoidFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true\n) {\n  let interval: number | null = null;\n  let isPending: boolean;\n  let args: Parameters<F>;\n\n  const clear = () => {\n    clearInterval(interval!);\n    interval = null;\n  };\n\n  const ret = (..._args: Parameters<F>) => {\n    isPending = true;\n    args = _args;\n\n    if(!interval) {\n      if(shouldRunFirst) {\n        isPending = false;\n        // @ts-ignore\n        fn(...args);\n      }\n\n      interval = setInterval(() => {\n        if(!isPending) {\n          clear();\n          return;\n        }\n\n        isPending = false;\n        // @ts-ignore\n        fn(...args);\n      }, ms) as any;\n    }\n  };\n\n  ret.clear = clear;\n\n  return ret;\n}\n","export default function safeAssign<T>(object: T, fromObject: any) {\n  if(fromObject) {\n    for(const i in fromObject) {\n      if(fromObject[i] !== undefined) {\n        // @ts-ignore\n        object[i] = fromObject[i];\n      }\n    }\n  }\n\n  return object;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {Database} from '../../config/databases';\nimport Modes from '../../config/modes';\nimport makeError from '../../helpers/makeError';\nimport safeAssign from '../../helpers/object/safeAssign';\nimport {logger} from '../logger';\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/createIndex\n */\nexport type IDBIndex = {\n  indexName: string,\n  keyPath: string,\n  objectParameters: IDBIndexParameters\n};\n\nexport type IDBStore = {\n  name: string,\n  indexes?: IDBIndex[]\n};\n\nexport type IDBOptions = {\n  name?: string,\n  storeName: string,\n  stores?: IDBStore[],\n  version?: number\n};\n\nconst DEBUG = false;\n\nexport class IDB {\n  private static INSTANCES: IDB[] = [];\n  private openDbPromise: Promise<IDBDatabase>;\n  private db: IDBDatabase;\n  private storageIsAvailable: boolean;\n  private log: ReturnType<typeof logger>;\n  private name: string;\n  private version: number;\n  private stores: IDBStore[];\n\n  constructor(db: Database<any>) {\n    safeAssign(this, db);\n\n    if(Modes.test) {\n      this.name += '_test';\n    }\n\n    this.storageIsAvailable = true;\n    this.log = logger(['IDB', db.name].join('-'));\n    this.log('constructor');\n\n    this.openDatabase(true);\n\n    IDB.INSTANCES.push(this);\n  }\n\n  public isAvailable() {\n    return this.storageIsAvailable;\n  }\n\n  public openDatabase(createNew = false): Promise<IDBDatabase> {\n    if(this.openDbPromise && !createNew) {\n      return this.openDbPromise;\n    }\n\n    const createIndexes = (os: IDBObjectStore, store: IDBStore) => {\n      const indexNames = Array.from(os.indexNames);\n      for(const indexName of indexNames) {\n        os.deleteIndex(indexName);\n      }\n\n      if(!store.indexes?.length) {\n        return;\n      }\n\n      for(const index of store.indexes) {\n        if(os.indexNames.contains(index.indexName)) {\n          continue;\n        }\n\n        os.createIndex(index.indexName, index.keyPath, index.objectParameters);\n      }\n    };\n\n    const createObjectStore = (db: IDBDatabase, store: IDBStore) => {\n      const os = db.createObjectStore(store.name);\n      createIndexes(os, store);\n    };\n\n    try {\n      var request = indexedDB.open(this.name, this.version);\n\n      if(!request) {\n        return Promise.reject();\n      }\n    } catch(error) {\n      this.log.error('error opening db', (error as Error).message);\n      this.storageIsAvailable = false;\n      return Promise.reject(error);\n    }\n\n    let finished = false;\n    setTimeout(() => {\n      if(!finished) {\n        request.onerror(makeError('IDB_CREATE_TIMEOUT') as Event);\n      }\n    }, 3000);\n\n    return this.openDbPromise = new Promise<IDBDatabase>((resolve, reject) => {\n      request.onsuccess = (event) => {\n        finished = true;\n        const db = request.result;\n        let calledNew = false;\n\n        this.log('Opened');\n\n        db.onerror = (error) => {\n          this.storageIsAvailable = false;\n          this.log.error('Error creating/accessing IndexedDB database', error);\n          reject(error);\n        };\n\n        db.onclose = (e) => {\n          this.log.error('closed:', e);\n          !calledNew && this.openDatabase();\n        };\n\n        db.onabort = (e) => {\n          this.log.error('abort:', e);\n          const transaction = e.target as IDBTransaction;\n\n          this.openDatabase(calledNew = true);\n\n          if(transaction.onerror) {\n            transaction.onerror(e);\n          }\n\n          db.close();\n        };\n\n        db.onversionchange = (e) => {\n          this.log.error('onversionchange, lol?');\n        };\n\n        resolve(this.db = db);\n      };\n\n      request.onerror = (event) => {\n        finished = true;\n        this.storageIsAvailable = false;\n        this.log.error('Error creating/accessing IndexedDB database', event);\n        reject(event);\n      };\n\n      request.onupgradeneeded = (event) => {\n        finished = true;\n        this.log.warn('performing idb upgrade from', event.oldVersion, 'to', event.newVersion);\n\n        const target = event.target as IDBOpenDBRequest;\n        const db = target.result;\n        this.stores.forEach((store) => {\n          /* if(db.objectStoreNames.contains(store.name)) {\n            //if(event.oldVersion === 1) {\n              db.deleteObjectStore(store.name);\n            //}\n          } */\n\n          if(!db.objectStoreNames.contains(store.name)) {\n            createObjectStore(db, store);\n          } else {\n            const txn = target.transaction;\n            const os = txn.objectStore(store.name);\n            createIndexes(os, store);\n          }\n        });\n      };\n    });\n  }\n\n  public static create<T extends Database<any>>(db: T) {\n    return this.INSTANCES.find((instance) => instance.name === db.name) ?? new IDB(db);\n  }\n\n  public static closeDatabases(preserve?: IDB) {\n    this.INSTANCES.forEach((storage) => {\n      if(preserve && preserve === storage) {\n        return;\n      }\n\n      const db = storage.db;\n      if(db) {\n        db.onclose = () => {};\n        db.close();\n      }\n    });\n  }\n}\n\nexport default class IDBStorage<T extends Database<any>, StoreName extends string = T['stores'][0]['name']> {\n  private log: ReturnType<typeof logger>;\n  private storeName: T['stores'][0]['name'];\n  private idb: IDB;\n\n  constructor(db: T, storeName: typeof db['stores'][0]['name']) {\n    this.storeName = storeName;\n    this.log = logger(['IDB', db.name, storeName].join('-'));\n    this.idb = IDB.create(db);\n  }\n\n  /**\n   * ! WARNING ! function requires at least one opened connection\n   */\n  /* public static clearObjectStores() {\n    const storage = this.STORAGES[0];\n    this.closeDatabases(storage);\n\n    const names = Array.from(storage.db.objectStoreNames);\n    const promises = names.map((name) => storage.clear(name));\n    return Promise.all(promises);\n  } */\n\n  /* public static deleteDatabase() {\n    this.closeDatabases();\n\n    const storages = this.STORAGES;\n    const dbNames = Array.from(new Set(storages.map((storage) => storage.name)));\n    const promises = dbNames.map((dbName) => {\n      return new Promise<void>((resolve, reject) => {\n        const deleteRequest = indexedDB.deleteDatabase(dbName);\n\n        deleteRequest.onerror = () => {\n          reject();\n        };\n\n        deleteRequest.onsuccess = () => {\n          resolve();\n        };\n      });\n    });\n\n    return Promise.all(promises);\n  } */\n\n  public delete(entryName: string | string[], storeName?: StoreName): Promise<void> {\n    // return Promise.resolve();\n    const isArray = Array.isArray(entryName);\n    if(!isArray) {\n      entryName = [].concat(entryName);\n    }\n\n    return this.getObjectStore('readwrite', (objectStore) => {\n      const promises = (entryName as string[]).map((entryName) => objectStore.delete(entryName));\n      return isArray ? promises : promises[0];\n    }, DEBUG ? 'delete: ' + (entryName as string[]).join(', ') : '', storeName);\n  }\n\n  public clear(storeName?: StoreName): Promise<void> {\n    return this.getObjectStore('readwrite', (objectStore) => objectStore.clear(), DEBUG ? 'clear' : '', storeName);\n  }\n\n  public save(entryName: string | string[], value: any | any[], storeName?: StoreName) {\n    // const handleError = (error: Error) => {\n    //   this.log.error('save: transaction error:', entryName, value, db, error, error && error.name);\n    //   if((!error || error.name === 'InvalidStateError')/*  && false */) {\n    //     setTimeout(() => {\n    //       this.save(entryName, value);\n    //     }, 2e3);\n    //   } else {\n    //     //console.error('IndexedDB saveFile transaction error:', error, error && error.name);\n    //   }\n    // };\n\n    const isArray = Array.isArray(entryName);\n    if(!isArray) {\n      entryName = [].concat(entryName);\n      value = [].concat(value);\n    }\n\n    return this.getObjectStore('readwrite', (objectStore) => {\n      const promises = (entryName as string[]).map((entryName, idx) => objectStore.put(value[idx], entryName));\n      return isArray ? promises : promises[0];\n    }, DEBUG ? 'save: ' + (entryName as string[]).join(', ') : '', storeName);\n  }\n\n  // public saveFile(fileName: string, blob: Blob | Uint8Array) {\n  //   //return Promise.resolve(blobConstruct([blob]));\n  //   if(!(blob instanceof Blob)) {\n  //     blob = blobConstruct(blob);\n  //   }\n\n  //   return this.save(fileName, blob);\n  // }\n\n  /* public saveFileBase64(db: IDBDatabase, fileName: string, blob: Blob | any): Promise<Blob> {\n    if(this.getBlobSize(blob) > 10 * 1024 * 1024) {\n      return Promise.reject();\n    }\n\n    if(!(blob instanceof Blob)) {\n      var safeMimeType = blobSafeMimeType(blob.type || 'image/jpeg');\n      var address = 'data:' + safeMimeType + ';base64,' + bytesToBase64(blob);\n      return this.storagePutB64String(db, fileName, address).then(() => {\n        return blob;\n      });\n    }\n\n    try {\n      var reader = new FileReader();\n    } catch (e) {\n      this.storageIsAvailable = false;\n      return Promise.reject();\n    }\n\n    let promise = new Promise<Blob>((resolve, reject) => {\n      reader.onloadend = () => {\n        this.storagePutB64String(db, fileName, reader.result as string).then(() => {\n          resolve(blob);\n        }, reject);\n      }\n\n      reader.onerror = reject;\n    });\n\n\n    try {\n      reader.readAsDataURL(blob);\n    } catch (e) {\n      this.storageIsAvailable = false;\n      return Promise.reject();\n    }\n\n    return promise;\n  }\n\n  public storagePutB64String(db: IDBDatabase, fileName: string, b64string: string) {\n    try {\n      var objectStore = db.transaction([this.storeName], 'readwrite')\n        .objectStore(this.storeName);\n      var request = objectStore.put(b64string, fileName);\n    } catch(error) {\n      this.storageIsAvailable = false;\n      return Promise.reject(error);\n    }\n\n    return new Promise((resolve, reject) => {\n      request.onsuccess = function(event) {\n        resolve();\n      };\n\n      request.onerror = reject;\n    });\n  }\n\n  public getBlobSize(blob: any) {\n    return blob.size || blob.byteLength || blob.length;\n  } */\n\n  public get<T>(entryName: string[], storeName?: StoreName): Promise<T[]>;\n  public get<T>(entryName: string, storeName?: StoreName): Promise<T>;\n  public get<T>(entryName: string | string[], storeName?: StoreName): Promise<T> | Promise<T[]> {\n    // return Promise.reject();\n\n    const isArray = Array.isArray(entryName);\n    if(!isArray) {\n      if(!entryName) {\n        return undefined;\n      }\n\n      entryName = [].concat(entryName);\n    } else if(!entryName.length) {\n      return Promise.resolve([]) as any;\n    }\n\n    return this.getObjectStore<T>('readonly', (objectStore) => {\n      const promises = (entryName as string[]).map((entryName) => objectStore.get(entryName));\n      return isArray ? promises : promises[0];\n    }, DEBUG ? 'get: ' + (entryName as string[]).join(', ') : '', storeName);\n  }\n\n  private getObjectStore<T>(\n    mode: IDBTransactionMode,\n    callback: (objectStore: IDBObjectStore) => IDBRequest | IDBRequest[],\n    log?: string,\n    storeName = this.storeName\n  ) {\n    let perf: number;\n\n    if(log) {\n      perf = performance.now();\n      this.log(log + ': start');\n    }\n\n    return this.idb.openDatabase().then((db) => {\n      return new Promise<T>((resolve, reject) => {\n        /* if(mode === 'readwrite') {\n          return;\n        } */\n\n        const transaction = db.transaction([storeName], mode);\n\n        const onError = () => {\n          clearTimeout(timeout);\n          reject(transaction.error);\n        };\n\n        // let resolved = false;\n        const onComplete = (/* what: string */) => {\n          clearTimeout(timeout);\n\n          if(log) {\n            this.log(log + ': end', performance.now() - perf/* , what */);\n          }\n\n          // if(resolved) {\n          //   return;\n          // }\n\n          // resolved = true;\n          const results = requests.map((r) => r.result);\n          resolve(isArray ? results : results[0]);\n        };\n\n        transaction.onerror = onError;\n\n        // * have to wait while clearing or setting something\n        const waitForTransactionComplete = mode === 'readwrite';\n        if(waitForTransactionComplete) {\n          transaction.oncomplete = () => onComplete(/* 'transaction' */);\n        }\n\n        const timeout = setTimeout(() => {\n          this.log.error('transaction not finished', transaction, log);\n        }, 10000);\n\n        /* transaction.addEventListener('abort', (e) => {\n          //handleError();\n          this.log.error('IndexedDB: transaction abort!', transaction.error);\n        }); */\n\n        const callbackResult = callback(transaction.objectStore(storeName));\n\n        const isArray = Array.isArray(callbackResult);\n        const requests: IDBRequest[] = isArray ? callbackResult : [].concat(callbackResult) as any;\n\n        if(waitForTransactionComplete) {\n          return;\n        }\n\n        const length = requests.length;\n        let left = length;\n\n        const onRequestFinished = () => {\n          if(transaction.error) {\n            return;\n          }\n\n          if(!--left) {\n            onComplete(/* 'requests' */);\n          }\n        };\n\n        for(let i = 0; i < length; ++i) {\n          const request = requests[i];\n          request.onerror = onError;\n          request.onsuccess = onRequestFinished;\n        }\n      });\n    });\n  }\n\n  public getAll<T>(storeName?: StoreName): Promise<T[]> {\n    return this.getObjectStore<T[]>('readonly', (objectStore) => objectStore.getAll(), DEBUG ? 'getAll' : '', storeName);\n  }\n\n  /* public getAllKeys(): Promise<Array<string>> {\n    console.time('getAllEntries');\n    return this.openDatabase().then((db) => {\n      var objectStore = db.transaction([this.storeName], 'readonly')\n        .objectStore(this.storeName);\n      var request = objectStore.getAllKeys();\n\n      return new Promise((resolve, reject) => {\n        request.onsuccess = function(event) {\n          // @ts-ignore\n          var result = event.target.result;\n          resolve(result);\n          console.timeEnd('getAllEntries');\n        }\n\n        request.onerror = reject;\n      });\n    });\n  } */\n\n  /* public isFileExists(fileName: string): Promise<boolean> {\n    console.time('isFileExists');\n    return this.openDatabase().then((db) => {\n      var objectStore = db.transaction([this.storeName], 'readonly')\n        .objectStore(this.storeName);\n      var request = objectStore.openCursor(fileName);\n\n      return new Promise((resolve, reject) => {\n        request.onsuccess = function(event) {\n          // @ts-ignore\n          var cursor = event.target.result;\n          resolve(!!cursor);\n          console.timeEnd('isFileExists');\n        }\n\n        request.onerror = reject;\n      });\n    });\n  } */\n\n  /* public getFileWriter(fileName: string, mimeType: string) {\n    var fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\n      return this.saveFile(fileName, blob);\n    });\n\n    return Promise.resolve(fakeWriter);\n  } */\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {Database} from '../config/databases';\nimport {MOUNT_CLASS_TO} from '../config/debug';\n// import DATABASE_SESSION from \"../config/databases/session\";\nimport deferredPromise, {CancellablePromise} from '../helpers/cancellablePromise';\nimport {IS_WORKER} from '../helpers/context';\nimport throttle from '../helpers/schedulers/throttle';\n// import { WorkerTaskTemplate } from \"../types\";\nimport IDBStorage from './files/idb';\n\nfunction noop() {}\n\n/* export interface LocalStorageProxySetTask extends WorkerTaskTemplate {\n  type: 'localStorageProxy',\n  payload: {\n    type: 'set',\n    keys: string[],\n    values: any[]\n  }\n};\n\nexport interface LocalStorageProxyDeleteTask extends WorkerTaskTemplate {\n  type: 'localStorageProxy',\n  payload: {\n    type: 'delete',\n    keys: string[]\n  }\n}; */\n\nconst THROTTLE_TIME = 16;\n\n/* Storage extends {[name: string]: any} *//* Storage extends Record<string, any> */\nexport default class AppStorage<\n  Storage extends Record<string, any>,\n  T extends Database<any>\n> {\n  private static STORAGES: AppStorage<any, Database<any>>[] = [];\n  private storage: IDBStorage<T>;// new CacheStorageController('session');\n\n  // private cache: Partial<{[key: string]: Storage[typeof key]}> = {};\n  private cache: Partial<Storage> = {};\n  private useStorage: boolean;\n  private savingFreezed: boolean;\n\n  private getPromises: Map<keyof Storage, CancellablePromise<Storage[keyof Storage]>> = new Map();\n  private getThrottled: () => void;\n\n  private keysToSet: Set<keyof Storage> = new Set();\n  private saveThrottled: () => void;\n  private saveDeferred = deferredPromise<void>();\n\n  private keysToDelete: Set<keyof Storage> = new Set();\n  private deleteThrottled: () => void;\n  private deleteDeferred = deferredPromise<void>();\n\n  constructor(private db: T, private storeName: typeof db['stores'][number]['name']) {\n    this.storage = new IDBStorage<T>(db, storeName);\n\n    if(AppStorage.STORAGES.length) {\n      this.useStorage = AppStorage.STORAGES[0].useStorage;\n    } else {\n      this.useStorage = true;\n    }\n\n    this.savingFreezed = false;\n\n    AppStorage.STORAGES.push(this);\n\n    this.saveThrottled = throttle(async() => {\n      const deferred = this.saveDeferred;\n      this.saveDeferred = deferredPromise();\n\n      const set = this.keysToSet;\n      if(set.size) {\n        const keys = Array.from(set.values()) as string[];\n        set.clear();\n\n        const values = keys.map((key) => this.cache[key]);\n        try {\n          // console.log('setItem: will set', key/* , value */);\n          // await this.cacheStorage.delete(key); // * try to prevent memory leak in Chrome leading to 'Unexpected internal error.'\n          // await this.storage.save(key, new Response(value, {headers: {'Content-Type': 'application/json'}}));\n\n          /* if(db === DATABASE_SESSION && !('localStorage' in self)) { // * support legacy Webogram's localStorage\n            self.postMessage({\n              type: 'localStorageProxy',\n              payload: {\n                type: 'set',\n                keys,\n                values\n              }\n            } as LocalStorageProxySetTask);\n          } */\n\n          await this.storage.save(keys, values);\n          // console.log('setItem: have set', key/* , value */);\n        } catch(e) {\n          // this.useCS = false;\n          console.error('[AS]: set error:', e, keys, values);\n        }\n      }\n\n      deferred.resolve();\n\n      if(set.size) {\n        this.saveThrottled();\n      }\n    }, THROTTLE_TIME, false);\n\n    this.deleteThrottled = throttle(async() => {\n      const deferred = this.deleteDeferred;\n      this.deleteDeferred = deferredPromise();\n\n      const set = this.keysToDelete;\n      if(set.size) {\n        const keys = Array.from(set.values()) as string[];\n        set.clear();\n\n        try {\n          /* if(db === DATABASE_SESSION && !('localStorage' in self)) { // * support legacy Webogram's localStorage\n            self.postMessage({\n              type: 'localStorageProxy',\n              payload: {\n                type: 'delete',\n                keys\n              }\n            } as LocalStorageProxyDeleteTask);\n          } */\n\n          await this.storage.delete(keys);\n        } catch(e) {\n          console.error('[AS]: delete error:', e, keys);\n        }\n      }\n\n      deferred.resolve();\n\n      if(set.size) {\n        this.deleteThrottled();\n      }\n    }, THROTTLE_TIME, false);\n\n    this.getThrottled = throttle(async() => {\n      const keys = Array.from(this.getPromises.keys());\n\n      // const perf = performance.now();\n      this.storage.get(keys as string[]).then((values) => {\n        for(let i = 0, length = keys.length; i < length; ++i) {\n          const key = keys[i];\n          const deferred = this.getPromises.get(key);\n          if(deferred) {\n            // @ts-ignore\n            deferred.resolve(this.cache[key] = values[i]);\n            this.getPromises.delete(key);\n          }\n        }\n\n        // console.log('[AS]: get time', keys, performance.now() - perf);\n      }, (error: ApiError) => {\n        const ignoreErrors: Set<ErrorType> = new Set(['NO_ENTRY_FOUND', 'STORAGE_OFFLINE']);\n        if(!ignoreErrors.has(error.type)) {\n          this.useStorage = false;\n          console.error('[AS]: get error:', error, keys, storeName);\n        }\n\n        for(let i = 0, length = keys.length; i < length; ++i) {\n          const key = keys[i];\n          const deferred = this.getPromises.get(key);\n          if(deferred) {\n            // deferred.reject(error);\n            deferred.resolve(undefined);\n            this.getPromises.delete(key);\n          }\n        }\n      }).finally(() => {\n        if(this.getPromises.size) {\n          this.getThrottled();\n        }\n      });\n    }, THROTTLE_TIME, false);\n  }\n\n  public isAvailable() {\n    return this.useStorage;\n  }\n\n  public getCache() {\n    return this.cache;\n  }\n\n  public getFromCache<T extends keyof Storage>(key: T) {\n    return this.cache[key];\n  }\n\n  public setToCache(key: keyof Storage, value: Storage[typeof key]) {\n    return this.cache[key] = value;\n  }\n\n  public async get<T extends keyof Storage>(key: T, useCache = true): Promise<Storage[T]> {\n    if(this.cache.hasOwnProperty(key) && useCache) {\n      return this.getFromCache(key);\n    } else if(this.useStorage) {\n      const r = this.getPromises.get(key);\n      if(r) return r as any;\n\n      const p = deferredPromise<Storage[T]>();\n      this.getPromises.set(key, p as any);\n\n      this.getThrottled();\n\n      return p;\n    }/*  else {\n      throw 'something went wrong';\n    } */\n  }\n\n  public getAll() {\n    return this.storage.getAll().catch(() => []);\n  }\n\n  public set(obj: Partial<Storage>, onlyLocal = false) {\n    // console.log('storageSetValue', obj, callback, arguments);\n\n    const canUseStorage = this.useStorage && !onlyLocal && !this.savingFreezed;\n    for(const key in obj) {\n      if(obj.hasOwnProperty(key)) {\n        const value = obj[key];\n        this.setToCache(key, value);\n\n        // let perf = /* DEBUG */false ? performance.now() : 0;\n        // value = JSON.stringify(value);\n\n        // if(perf) {\n        //   let elapsedTime = performance.now() - perf;\n        //   if(elapsedTime > 10) {\n        //     console.warn('LocalStorage set: stringify time by JSON.stringify:', elapsedTime, key);\n        //   }\n        // }\n\n        /* perf = performance.now();\n        value = stringify(value);\n        console.log('LocalStorage set: stringify time by own stringify:', performance.now() - perf); */\n\n        if(canUseStorage) {\n          this.keysToSet.add(key);\n          this.keysToDelete.delete(key);\n          this.saveThrottled();\n        }\n      }\n    }\n\n    return canUseStorage ? this.saveDeferred : Promise.resolve();\n  }\n\n  public delete(key: keyof Storage, saveLocal = false) {\n    /* if(!this.cache.hasOwnProperty(key)) {\n      return;\n    } */\n\n    // ! it is needed here\n    key = '' + (key as string);\n\n    if(!saveLocal) {\n      delete this.cache[key];\n    }\n\n    if(this.useStorage) {\n      this.keysToSet.delete(key);\n      this.keysToDelete.add(key);\n      this.deleteThrottled();\n    }\n\n    return this.useStorage ? this.deleteDeferred : Promise.resolve();\n  }\n\n  public clear(saveLocal = false) {\n    if(!saveLocal) {\n      for(const i in this.cache) {\n        delete this.cache[i];\n      }\n    }\n\n    return this.storage.clear().catch(noop);\n  }\n\n  public static toggleStorage(enabled: boolean, clearWrite: boolean) {\n    return Promise.all(this.STORAGES.map((storage) => {\n      storage.useStorage = enabled;\n\n      if(!IS_WORKER || !clearWrite) {\n        return;\n      }\n\n      if(!enabled) {\n        storage.keysToSet.clear();\n        storage.keysToDelete.clear();\n        storage.getPromises.forEach((deferred) => deferred.resolve(undefined));\n        storage.getPromises.clear();\n        return storage.clear(true);\n      } else {\n        return storage.set(storage.cache);\n      }\n    })).catch(noop);\n  }\n\n  public static freezeSaving<T extends Database<any>>(callback: () => any, names: T['stores'][number]['name'][]) {\n    this.STORAGES.forEach((storage) => storage.savingFreezed = true);\n    try {\n      callback();\n    } catch(err) {\n      console.error('freezeSaving callback error:', err);\n    }\n    this.STORAGES.forEach((storage) => storage.savingFreezed = false);\n  }\n\n  /* public deleteDatabase() {\n    return IDBStorage.deleteDatabase().catch(noop);\n  } */\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.AppStorage = AppStorage);\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Database} from '.';\nimport type {IDBIndex} from '../../lib/files/idb';\n\nconst DATABASE_STATE: Database<'session' | 'stickerSets' | 'users' | 'chats' | 'messages' | 'dialogs'> = {\n  name: 'tweb',\n  version: 7,\n  stores: [{\n    name: 'session'\n  }, {\n    name: 'stickerSets'\n  }, {\n    name: 'users'\n  }, {\n    name: 'chats'\n  }, {\n    name: 'dialogs'\n    // indexes: [\n    //   ...(new Array(20 + 2).fill(0)).map((_, idx) => {\n    //     const name = `index_${idx}`;\n    //     const index: IDBIndex = {\n    //       indexName: name,\n    //       keyPath: name,\n    //       objectParameters: {}\n    //     };\n\n    //     return index\n    //   })\n    // ]\n  }, {\n    name: 'messages'\n  }]\n};\n\nexport default DATABASE_STATE;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {ChatSavedPosition} from './appManagers/appImManager';\nimport type {AppDraftsManager} from './appManagers/appDraftsManager';\nimport type {State} from '../config/state';\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport {LangPackDifference} from '../layer';\nimport AppStorage from './storage';\nimport DATABASE_STATE from '../config/databases/state';\n\nclass StateStorage extends AppStorage<{\n  chatPositions: {\n    [peerId_threadId: string]: ChatSavedPosition\n  },\n  langPack: LangPackDifference,\n  drafts: AppDraftsManager['drafts'],\n  user_auth: any, // support old webk format\n} & State, typeof DATABASE_STATE> {\n  constructor() {\n    super(DATABASE_STATE, 'session');\n  }\n}\n\nconst stateStorage = new StateStorage();\nMOUNT_CLASS_TO.stateStorage = stateStorage;\nexport default stateStorage;\n","export const DEEP_PATH_JOINER = '\\x01';\n\nexport function joinDeepPath(...args: any[]) {\n  return args.join(DEEP_PATH_JOINER);\n}\n\nexport default function setDeepProperty(\n  object: any,\n  key: string,\n  value?: any,\n  deleteIfUndefined?: boolean\n) {\n  const splitted = key.split(DEEP_PATH_JOINER);\n  const length = splitted.length;\n  let lastObject = object/* , fractalPart: string */; // fix fractal number key\n  for(let i = 0; i < length - 1; ++i) {\n    const part = splitted[i];\n    // if(fractalPart) {\n    //   part = fractalPart + '.' + part;\n    //   fractalPart = undefined;\n    // } else if(!Number.isNaN(+part)) {\n    //   fractalPart = part;\n    //   continue;\n    // }\n    lastObject = lastObject[part] ??= {};\n  }\n\n  const lastKey = /* (fractalPart ? fractalPart + '.' : '') +  */splitted[length - 1];\n  if(value === undefined && deleteIfUndefined/*  && arguments.length === 2 */) {\n    delete lastObject[lastKey];\n  } else {\n    lastObject[lastKey] = value;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {State} from '../../config/state';\nimport rootScope from '../rootScope';\nimport stateStorage from '../stateStorage';\nimport setDeepProperty, {DEEP_PATH_JOINER} from '../../helpers/object/setDeepProperty';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\nexport class AppStateManager {\n  private state: State = {} as any;\n  private storage = stateStorage;\n\n  // ! for mtproto worker use only\n  public newVersion: string;\n  public oldVersion: string;\n  public userId: UserId;\n\n  public getState() {\n    return Promise.resolve(this.state);\n  }\n\n  public setByKey(key: string, value: any) {\n    setDeepProperty(this.state, key, value);\n\n    const first = key.split(DEEP_PATH_JOINER)[0] as keyof State;\n    if(first === 'settings') {\n      rootScope.dispatchEvent('settings_updated', {key, value, settings: this.state.settings});\n    }\n\n    return this.pushToState(first, this.state[first]);\n  }\n\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true, onlyLocal?: boolean) {\n    if(direct) {\n      this.state[key] = value;\n    }\n\n    return this.setKeyValueToStorage(key, value, onlyLocal);\n  }\n\n  public setKeyValueToStorage<T extends keyof State>(key: T, value: State[T] = this.state[key], onlyLocal?: boolean) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {name: 'state', key, value});\n\n    return this.storage.set({\n      [key]: value\n    }, onlyLocal);\n  }\n\n  /* public resetState() {\n    for(let i in this.state) {\n      // @ts-ignore\n      this.state[i] = false;\n    }\n    sessionStorage.set(this.state).then(() => {\n      location.reload();\n    });\n  } */\n}\n\nconst appStateManager = new AppStateManager();\nexport default appStateManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {TrueDcId} from '../types';\n\nexport const MAIN_DOMAINS = ['web.telegram.org', 'webk.telegram.org'];\nexport const DEFAULT_BACKGROUND_SLUG = 'pattern';\n\nconst threads = Math.min(4, navigator.hardwareConcurrency ?? 4);\n\nconst App = {\n  id: +import.meta.env.VITE_API_ID,\n  hash: import.meta.env.VITE_API_HASH,\n  version: import.meta.env.VITE_VERSION,\n  versionFull: import.meta.env.VITE_VERSION_FULL,\n  build: +import.meta.env.VITE_BUILD,\n  langPackVersion: '2.8.1',\n  langPack: 'webk',\n  langPackCode: 'en',\n  domains: MAIN_DOMAINS,\n  baseDcId: 2 as TrueDcId,\n  isMainDomain: MAIN_DOMAINS.includes(location.hostname),\n  suffix: 'K',\n  threads,\n  cryptoWorkers: threads\n};\n\nif(App.isMainDomain) { // use Webogram credentials then\n  App.id = 2496;\n  App.hash = '8da85b0d5bfe62527e5b244c209159c3';\n}\n\nexport default App;\n","export default function pause(ms: number) {\n  return new Promise<void>((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport pause from '../../../helpers/schedulers/pause';\nimport {DcId} from '../../../types';\nimport {logger, LogTypes} from '../../logger';\nimport type MTPNetworker from '../networker';\nimport MTTransport from './transport';\nimport Modes from '../../../config/modes';\nimport transportController from './controller';\n// import networkStats from '../networkStats';\n\nexport default class HTTP implements MTTransport {\n  public networker: MTPNetworker;\n  private log: ReturnType<typeof logger>;\n\n  private pending: Array<{\n    resolve: (body: Uint8Array) => void,\n    reject: any,\n    body: Uint8Array\n  }> = [];\n  private releasing: boolean;\n\n  public connected: boolean;\n  private destroyed: boolean;\n  private debug: boolean;\n\n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\n    this.debug = Modes.debug && false;\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n\n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connected = false;\n  }\n\n  public _send(body: Uint8Array, mode?: RequestMode) {\n    const length = body.length;\n    this.debug && this.log.debug('-> body length to send:', length);\n\n    // networkStats.addSent(this.dcId, length);\n    return fetch(this.url, {method: 'POST', body, mode}).then((response) => {\n      if(response.status !== 200 && !mode) {\n        response.arrayBuffer().then((buffer) => {\n          this.log.error('not 200',\n            new TextDecoder('utf-8').decode(new Uint8Array(buffer)));\n        });\n\n        throw response;\n      }\n\n      this.setConnected(true);\n\n      // * test resending by dropping random request\n      // if(Math.random() > .5) {\n      //   throw 'asd';\n      // }\n\n      return response.arrayBuffer().then((buffer) => {\n        // networkStats.addReceived(this.dcId, buffer.byteLength);\n        return new Uint8Array(buffer);\n      });\n    }, (err) => {\n      this.setConnected(false);\n      throw err;\n    });\n  }\n\n  private setConnected(connected: boolean) {\n    if(this.connected === connected || this.destroyed) {\n      return;\n    }\n\n    this.connected = connected;\n\n    if(import.meta.env.VITE_MTPROTO_AUTO) {\n      transportController.setTransportValue('https', connected);\n    }\n  }\n\n  public destroy() {\n    this.setConnected(false);\n    this.destroyed = true;\n    this.pending.forEach((pending) => pending.reject());\n    this.pending.length = 0;\n  }\n\n  public send(body: Uint8Array) {\n    if(this.networker) {\n      return this._send(body);\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending() {\n    if(this.releasing) return;\n\n    this.releasing = true;\n    // this.log('-> messages to send:', this.pending.length);\n    for(let i = 0; i < this.pending.length; ++i) {\n      const pending = this.pending[i];\n      const {body, resolve} = pending;\n\n      try {\n        const result = await this._send(body);\n        resolve(result);\n        this.pending.splice(i, 1);\n      } catch(err) {\n        this.log.error('Send plain request error:', err);\n        await pause(5000);\n      }\n\n      --i;\n    }\n\n    this.releasing = false;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {logger, LogTypes} from '../../logger';\nimport Modes from '../../../config/modes';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport {MTConnection} from './transport';\n\n// let closeSocketBefore = Date.now() + 30e3;\n// let closeSocketAfter = Date.now() + 10e3;\n\nexport default class Socket extends EventListenerBase<{\n  open: () => void,\n  message: (buffer: ArrayBuffer) => any,\n  close: () => void,\n}> implements MTConnection {\n  private ws: WebSocket;\n  private log: ReturnType<typeof logger>;\n  private debug = Modes.debug && false;\n\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\n    super();\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n    this.connect();\n\n    return this;\n  }\n\n  private removeListeners() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.ws.removeEventListener('open', this.handleOpen);\n    this.ws.removeEventListener('close', this.handleClose);\n    this.ws.removeEventListener('error', this.handleError);\n    this.ws.removeEventListener('message', this.handleMessage);\n    this.ws = undefined;\n  }\n\n  private connect() {\n    this.ws = new WebSocket(this.url, 'binary');\n    this.ws.binaryType = 'arraybuffer';\n    this.ws.addEventListener('open', this.handleOpen);\n    this.ws.addEventListener('close', this.handleClose);\n    this.ws.addEventListener('error', this.handleError);\n    this.ws.addEventListener('message', this.handleMessage);\n\n    // if(Date.now() < closeSocketBefore) {\n    // if(Date.now() >= closeSocketAfter) {\n    //   this.ws.close();\n    // }\n  }\n\n  public close() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.log('close execution');\n\n    try {\n      this.ws.close();\n    } catch(err) {\n\n    }\n    this.handleClose();\n  }\n\n  private handleOpen = () => {\n    this.log('opened');\n\n    this.debug && this.log.debug('sending init packet');\n    this.dispatchEvent('open');\n  };\n\n  private handleError = (e: Event) => {\n    this.log.error('handleError', e);\n    this.close();\n  };\n\n  private handleClose = (e?: CloseEvent) => {\n    this.log('closed', e/* , this.pending, this.ws.bufferedAmount */);\n\n    this.removeListeners();\n    this.dispatchEvent('close');\n  };\n\n  private handleMessage = (event: MessageEvent) => {\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\n\n    this.dispatchEvent('message', event.data as ArrayBuffer);\n  };\n\n  public send = (body: Uint8Array) => {\n    this.debug && this.log.debug('-> body length to send:', body.length);\n\n    this.ws.send(body);\n  };\n}\n","export default function randomize<T extends ArrayBufferView>(arr: T) {\n  if(crypto && 'getRandomValues' in crypto) {\n    crypto.getRandomValues(arr);\n  } else {\n    throw new Error('NO_SECURE_RANDOM');\n  }\n\n  return arr;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import aesjs from 'aes-js';\nimport randomize from '../../../helpers/array/randomize';\nimport cryptoMessagePort from '../../crypto/cryptoMessagePort';\nimport {Codec} from './codec';\n\n/*\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\n*/\nexport default class Obfuscation {\n  /* private enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\n  private dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\n\n  private id: number;\n  private idPromise: Promise<Obfuscation['id']>;\n  private process: (data: Uint8Array, operation: 'encrypt' | 'decrypt') => ReturnType<Obfuscation['_process']>;\n\n  // private cryptoEncKey: CryptoKey;\n  // private cryptoDecKey: CryptoKey;\n  // private cryptoKey: CryptoKey;\n\n  // private encIv: Uint8Array;\n  // private decIv: Uint8Array;\n\n  // private decIvCounter: Counter;\n\n  public async init(codec: Codec) {\n    if(this.idPromise !== undefined) {\n      this.release();\n    }\n\n    const initPayload = new Uint8Array(64);\n    randomize(initPayload);\n\n    while(true) {\n      const val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | initPayload[0];\n      const val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | initPayload[4];\n      if(initPayload[0] !== 0xef &&\n          val !== 0x44414548 &&\n          val !== 0x54534f50 &&\n          val !== 0x20544547 &&\n          val !== 0x4954504f &&\n          val !== 0xeeeeeeee &&\n          val !== 0xdddddddd &&\n          val2 !== 0x00000000) {\n        // initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\n        break;\n      }\n      randomize(initPayload);\n    }\n\n    // //////////////////////initPayload.subarray(60, 62).hex = dcId;\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\n    console.log('initPayload', initPayload); */\n\n    const reversedPayload = initPayload.slice().reverse();\n\n    const encKey = initPayload.slice(8, 40);\n    const encIv = /* this.encIv =  */initPayload.slice(40, 56);\n    const decKey = reversedPayload.slice(8, 40);\n    const decIv = /* this.decIv =  */reversedPayload.slice(40, 56);\n\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\n\n    // console.log('encKey', encKey.hex, encIv.hex);\n    // console.log('decKey', decKey.hex, decIv.hex);\n\n    const idPromise = this.idPromise = cryptoMessagePort.invokeCrypto('aes-ctr-prepare', {\n      encKey,\n      encIv,\n      decKey,\n      decIv\n    });\n\n    this.process = async(data, operation) => {\n      await idPromise;\n      return this._process(data, operation);\n    };\n\n    this.id = await idPromise;\n\n    this.process = this._process;\n\n    // this.decIvCounter = new Counter(this.decIv);\n    /* const key = this.cryptoEncKey = await subtle.importKey(\n      'raw',\n      encKey,\n      {name: 'AES-CTR'},\n      false,\n      ['encrypt']\n    ); */\n\n    // this.cryptoDecKey = await subtle.importKey(\n    //   'raw',\n    //   decKey,\n    //   {name: 'AES-CTR'},\n    //   false,\n    //   ['encrypt']\n    // );\n\n    // this.cryptoKey = await subtle.importKey(\n    //   'raw',\n    //   encKey,\n    //   {name: 'AES-CTR'},\n    //   false,\n    //   ['encrypt', 'decrypt']\n    // );\n\n    initPayload.set(codec.obfuscateTag, 56);\n    const encrypted = await this.encode(initPayload.slice());\n\n    // console.log('encrypted', encrypted);\n\n    initPayload.set(encrypted.slice(56, 64), 56);\n\n    return initPayload;\n  }\n\n  /* public encode(payload: Uint8Array) {\n    let startTime = performance.now();\n    let res = this.enc.encrypt(payload);\n    let time = performance.now() - startTime;\n\n    try {\n      startTime = performance.now();\n      let arr = this.encNew.encrypt(payload);\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\n      let resNew = new Uint8Array(bytesFromWordss(arr));\n      let time2 = performance.now() - startTime;\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\n    } catch(err) {\n      console.error('Obfuscation: error:', err);\n    }\n\n    return res;\n  }\n\n  public decode(payload: Uint8Array) {\n    let res = this.dec.encrypt(payload);\n\n    try {\n      let arr = this.decNew.decrypt(payload);\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\n      let resNew = new Uint8Array(bytesFromWordss(arr));\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\n    } catch(err) {\n      console.error('Obfuscation: error:', err);\n    }\n\n    return res;\n  } */\n\n  private _process = (data: Uint8Array, operation: 'encrypt' | 'decrypt') => {\n    return cryptoMessagePort.invokeCryptoNew({\n      method: 'aes-ctr-process',\n      args: [{id: this.id, data, operation}],\n      transfer: [data.buffer]\n    }) as Promise<Uint8Array>;\n  };\n\n  public encode(payload: Uint8Array) {\n    /* return subtle.encrypt({\n        name: 'AES-CTR',\n        counter: this.encIv,\n        length: 64\n      },\n      this.cryptoEncKey,\n      payload\n    ); */\n    return this.process(payload, 'encrypt');\n  }\n\n  public decode(payload: Uint8Array) {\n    return this.process(payload, 'decrypt');\n  }\n\n  public async release() {\n    const idPromise = this.idPromise;\n    if(idPromise === undefined) {\n      return;\n    }\n\n    this.id = undefined;\n    this.idPromise = undefined;\n\n    const id = await idPromise;\n    cryptoMessagePort.invokeCrypto('aes-ctr-destroy', id);\n  }\n\n  public destroy() {\n    this.release();\n  }\n\n  // public encode(payload: Uint8Array) {\n  //   let res = this.encNew.encrypt(payload);\n  //   let bytes = new Uint8Array(bytesFromWordss(res));\n\n  //   return bytes;\n  // }\n\n  // public async decode(payload: Uint8Array) {\n  //   const counter = this.decIvCounter.counter.slice();\n  //   this.decIvCounter.increment();\n\n  //   const n: ArrayBuffer = await subtle.encrypt({\n  //       name: 'AES-CTR',\n  //       counter: counter,\n  //       length: 64\n  //     },\n  //     this.cryptoDecKey,\n  //     payload\n  //   );\n\n  //   const decoded = this.decNew.update(payload);\n\n  //   console.log('decode', bytesToHex(decoded), 'new', n, bytesToHex(new Uint8Array(n)));\n\n  //   return decoded;\n  // }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { bytesFromHex, addPadding } from \"../../bin_utils\";\nimport {Codec} from './codec';\n\nclass AbridgedPacketCodec implements Codec {\n  public tag = 0xef;\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\n\n  public encodePacket(data: Uint8Array) {\n    const len = data.byteLength >> 2;\n    let header: Uint8Array;\n    if(len < 127) {\n      header = new Uint8Array([len]);\n    } else { // Length: payload length, divided by four, and encoded as 3 length bytes (little endian)\n      // header = new Uint8Array([0x7f, ...addPadding(bytesFromHex(len.toString(16)).reverse(), 3, true)/* .reverse() */]);\n      header = new Uint8Array([0x7f, len & 0xFF, (len >> 8) & 0xFF, (len >> 16) & 0xFF]);\n      // console.log('got nobody cause im braindead', header, len);\n    }\n\n    return header.concat(data);\n    // return new Uint8Array([...header, ...data]);\n  }\n\n  public readPacket(data: Uint8Array) {\n    let length = data[0];\n    if(length >= 127) { // 0x7f\n      length = data[1] | (data[2] << 8) | (data[3] << 16);\n\n      return data.slice(4, length << 2 + 1); // need +1\n    }\n\n    return data.slice(1, length << 2 + 1); // need +1\n  }\n}\n\nexport default new AbridgedPacketCodec();\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport enum ConnectionStatus {\n  Connected,\n  Connecting,\n  Closed,\n  TimedOut\n};\n\nexport type ConnectionStatusChange = {\n  _: 'networkerStatus',\n  status: ConnectionStatus,\n  dcId: number,\n  name: string,\n  isFileNetworker: boolean,\n  isFileDownload: boolean,\n  isFileUpload: boolean,\n  retryAt?: number\n};\n","export default function bytesToHex(bytes: ArrayLike<number>) {\n  const length = bytes.length;\n  const arr: string[] = new Array(length);\n  for(let i = 0; i < length; ++i) {\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\n  }\n  return arr.join('');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from '../../../config/modes';\nimport {logger, LogTypes} from '../../logger';\nimport MTPNetworker from '../networker';\nimport Obfuscation from './obfuscation';\nimport MTTransport, {MTConnection, MTConnectionConstructable} from './transport';\n// import intermediatePacketCodec from './intermediate';\nimport abridgedPacketCodec from './abridged';\n// import paddedIntermediatePacketCodec from './padded';\nimport {ConnectionStatus} from '../connectionStatus';\nimport transportController from './controller';\nimport bytesToHex from '../../../helpers/bytes/bytesToHex';\n// import networkStats from '../networkStats';\nimport ctx from '../../../environment/ctx';\n\nexport default class TcpObfuscated implements MTTransport {\n  private codec = abridgedPacketCodec;\n  private obfuscation = new Obfuscation();\n  public networker: MTPNetworker;\n\n  private pending: Array<Partial<{\n    resolve: any,\n    reject: any,\n    body: Uint8Array,\n    encoded?: Uint8Array,\n    bodySent: boolean\n  }>> = [];\n\n  private debug = Modes.debug && false/* true */;\n  private log: ReturnType<typeof logger>;\n  public connected = false;\n  private lastCloseTime: number;\n  public connection: MTConnection;\n\n  private autoReconnect = true;\n  private reconnectTimeout: number;\n  private releasingPending: boolean;\n\n  // private debugPayloads: MTPNetworker['debugRequests'] = [];\n\n  constructor(\n    private Connection: MTConnectionConstructable,\n    private dcId: number,\n    private url: string,\n    private logSuffix: string,\n    private retryTimeout: number\n  ) {\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connect();\n  }\n\n  private onOpen = async() => {\n    this.connected = true;\n\n    if(import.meta.env.VITE_MTPROTO_AUTO) {\n      transportController.setTransportOpened('websocket');\n    }\n\n    const initPayload = await this.obfuscation.init(this.codec);\n    if(!this.connected) {\n      return;\n    }\n\n    this.connection.send(initPayload);\n\n    if(this.networker) {\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\n      this.networker.setConnectionStatus(ConnectionStatus.Connected);\n      this.networker.cleanupSent();\n      this.networker.resend();\n    }/*  else {\n      for(const pending of this.pending) {\n        if(pending.encoded && pending.body) {\n          pending.encoded = this.encodeBody(pending.body);\n        }\n      }\n    } */\n\n    setTimeout(() => {\n      this.releasePending();\n    }, 0);\n  };\n\n  private onMessage = async(buffer: ArrayBuffer) => {\n    // networkStats.addReceived(this.dcId, buffer.byteLength);\n\n    let data = await this.obfuscation.decode(new Uint8Array(buffer));\n    data = this.codec.readPacket(data);\n\n    if(this.networker) { // authenticated!\n      // this.pending = this.pending.filter((p) => p.body); // clear pending\n\n      this.debug && this.log.debug('redirecting to networker', data.length);\n      this.networker.parseResponse(data).then((response) => {\n        this.debug && this.log.debug('redirecting to networker response:', response);\n\n        try {\n          this.networker.processMessage(response.response, response.messageId, response.sessionId);\n        } catch(err) {\n          this.log.error('handleMessage networker processMessage error', err);\n        }\n\n        // this.releasePending();\n      }).catch((err) => {\n        this.log.error('handleMessage networker parseResponse error', err);\n      });\n\n      // this.dd();\n      return;\n    }\n\n    // console.log('got hex:', data.hex);\n    const pending = this.pending.shift();\n    if(!pending) {\n      this.debug && this.log.debug('no pending for res:', bytesToHex(data));\n      return;\n    }\n\n    pending.resolve(data);\n  };\n\n  private onClose = () => {\n    this.clear();\n\n    let needTimeout: number, retryAt: number;\n    if(this.autoReconnect) {\n      const time = Date.now();\n      const diff = time - this.lastCloseTime;\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\n      retryAt = time + needTimeout;\n    }\n\n    if(this.networker) {\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\n      this.pending.length = 0;\n    }\n\n    if(this.autoReconnect) {\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\n      this.reconnectTimeout = ctx.setTimeout(this.reconnect, needTimeout);\n    } else {\n      this.log('reconnect isn\\'t needed');\n    }\n  };\n\n  public clear() {\n    if(import.meta.env.VITE_MTPROTO_AUTO) {\n      if(this.connected) {\n        transportController.setTransportClosed('websocket');\n      }\n    }\n\n    this.connected = false;\n\n    if(this.connection) {\n      this.connection.removeEventListener('open', this.onOpen);\n      this.connection.removeEventListener('close', this.onClose);\n      this.connection.removeEventListener('message', this.onMessage);\n      this.connection = undefined;\n    }\n  }\n\n  /**\n   * invoke only when closed\n   */\n  public reconnect = () => {\n    if(this.reconnectTimeout !== undefined) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = undefined;\n    }\n\n    if(this.connection) {\n      return;\n    }\n\n    this.log('trying to reconnect...');\n    this.lastCloseTime = Date.now();\n\n    if(!this.networker) {\n      for(const pending of this.pending) {\n        if(pending.bodySent) {\n          pending.bodySent = false;\n        }\n      }\n    } else {\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.connect();\n  }\n\n  public forceReconnect() {\n    this.close();\n    this.reconnect();\n  }\n\n  public destroy() {\n    this.setAutoReconnect(false);\n    this.close();\n\n    if(this.obfuscation) {\n      this.obfuscation.destroy();\n    }\n\n    this.pending.forEach((pending) => {\n      if(pending.reject) {\n        pending.reject();\n      }\n    });\n    this.pending.length = 0;\n  }\n\n  public close() {\n    const connection = this.connection;\n    if(connection) {\n      const connected = this.connected;\n      this.clear();\n      if(connected) { // wait for buffered messages if they are there\n        connection.addEventListener('message', this.onMessage);\n        connection.addEventListener('close', () => {\n          connection.removeEventListener('message', this.onMessage);\n        }, {once: true});\n        connection.close();\n      }\n    }\n  }\n\n  /**\n   * Will connect if enable and disconnected \\\n   * Will reset reconnection timeout if disable\n   */\n  public setAutoReconnect(enable: boolean) {\n    this.autoReconnect = enable;\n\n    if(!enable) {\n      if(this.reconnectTimeout !== undefined) {\n        clearTimeout(this.reconnectTimeout);\n        this.reconnectTimeout = undefined;\n      }\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\n      this.reconnect();\n    }\n  }\n\n  private connect() {\n    if(this.connection) {\n      this.close();\n    }\n\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\n    this.connection.addEventListener('open', this.onOpen);\n    this.connection.addEventListener('close', this.onClose);\n    this.connection.addEventListener('message', this.onMessage);\n  }\n\n  public changeUrl(url: string) {\n    if(this.url === url) {\n      return;\n    }\n\n    this.url = url;\n    this.forceReconnect();\n  }\n\n  private encodeBody(body: Uint8Array) {\n    const toEncode = this.codec.encodePacket(body);\n\n    // this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\n    const encoded = this.obfuscation.encode(toEncode);\n    // this.log('send after obf:', enc.hex);\n\n    return encoded;\n  }\n\n  public send(body: Uint8Array) {\n    this.debug && this.log.debug('-> body length to pending:', body.length);\n\n    const encoded: typeof body = /* this.connected ? this.encodeBody(body) :  */undefined;\n\n    // return;\n\n    if(this.networker) {\n      this.pending.push({body, encoded});\n      this.releasePending();\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body, encoded});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending(/* tt = false */) {\n    if(!this.connected || this.releasingPending) {\n      // this.connect();\n      return;\n    }\n\n    this.releasingPending = true;\n\n    /* if(!tt) {\n      this.releasePendingDebounced();\n      return;\n    } */\n\n    // this.log('-> messages to send:', this.pending.length);\n    let length = this.pending.length;\n    let sent = false;\n    // for(let i = length - 1; i >= 0; --i) {\n    for(let i = 0; i < length; ++i) {\n      const pending = this.pending[i];\n      if(!pending) {\n        break;\n      }\n\n      const {body, bodySent} = pending;\n      if(body && !bodySent) {\n        // this.debugPayloads.push({before: body.slice(), after: enc});\n\n        this.debug && this.log.debug('-> body length to send:', body.length);\n\n        // if(!encoded) {\n        //   encoded = pending.encoded = this.encodeBody(body);\n        // }\n\n        const encoded = pending.encoded ??= await this.encodeBody(body);\n        if(!this.connected) {\n          break;\n        }\n\n        // networkStats.addSent(this.dcId, encoded.byteLength);\n        this.connection.send(encoded);\n\n        if(!pending.resolve) { // remove if no response needed\n          this.pending.splice(i--, 1);\n          length--;\n        } else {\n          pending.bodySent = true;\n        }\n\n        sent = true;\n        // delete pending.body;\n      }\n    }\n\n    this.releasingPending = undefined;\n\n    if(this.pending.length && sent) {\n      this.releasePending();\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport MTTransport, {MTConnectionConstructable} from './transports/transport';\nimport Modes from '../../config/modes';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport HTTP from './transports/http';\nimport Socket from './transports/websocket';\nimport TcpObfuscated from './transports/tcpObfuscated';\nimport {IS_WEB_WORKER} from '../../helpers/context';\nimport {DcId} from '../../types';\nimport {getEnvironment} from '../../environment/utils';\nimport SocketProxied from './transports/socketProxied';\n\nexport type TransportType = 'websocket' | 'https' | 'http';\nexport type ConnectionType = 'client' | 'download' | 'upload';\ntype Servers = {\n  [transportType in TransportType]: {\n    [connectionType in ConnectionType]: {\n      [dcId: DcId]: MTTransport[]\n    }\n  }\n};\n\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\nconst PREMIUM_SUFFIX = '_premium';\nconst RETRY_TIMEOUT_CLIENT = 3000;\nconst RETRY_TIMEOUT_DOWNLOAD = 3000;\n\nexport function getTelegramConnectionSuffix(connectionType: ConnectionType) {\n  return connectionType === 'client' ? '' : '-1';\n}\n\nexport function constructTelegramWebSocketUrl(dcId: DcId, connectionType: ConnectionType, premium?: boolean) {\n  if(!import.meta.env.VITE_MTPROTO_HAS_WS) {\n    return;\n  }\n\n  const suffix = getTelegramConnectionSuffix(connectionType);\n  const path = connectionType !== 'client' ? 'apiws' + TEST_SUFFIX + (premium ? PREMIUM_SUFFIX : '') : ('apiws' + TEST_SUFFIX);\n  const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\n\n  return chosenServer;\n}\n\nexport class DcConfigurator {\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\n\n  private dcOptions = Modes.test ?\n    [\n      {id: 1, host: '149.154.175.10',  port: 80},\n      {id: 2, host: '149.154.167.40',  port: 80},\n      {id: 3, host: '149.154.175.117', port: 80}\n    ] :\n    [\n      {id: 1, host: '149.154.175.50',  port: 80},\n      {id: 2, host: '149.154.167.50',  port: 80},\n      {id: 3, host: '149.154.175.100', port: 80},\n      {id: 4, host: '149.154.167.91',  port: 80},\n      {id: 5, host: '149.154.171.5',   port: 80}\n    ];\n\n  public chosenServers: Servers = {} as any;\n\n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\n    if(!import.meta.env.VITE_MTPROTO_HAS_WS) {\n      return;\n    }\n\n    const chosenServer = constructTelegramWebSocketUrl(dcId, connectionType, premium);\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n\n    const retryTimeout = connectionType === 'client' ? RETRY_TIMEOUT_CLIENT : RETRY_TIMEOUT_DOWNLOAD;\n\n    let oooohLetMeLive: MTConnectionConstructable;\n    if(import.meta.env.VITE_MTPROTO_SW || !import.meta.env.VITE_SAFARI_PROXY_WEBSOCKET) {\n      oooohLetMeLive = Socket;\n    } else {\n      oooohLetMeLive = (getEnvironment().IS_SAFARI && IS_WEB_WORKER && typeof(SocketProxied) !== 'undefined') /* || true */ ? SocketProxied : Socket;\n    }\n\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\n  };\n\n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      return;\n    }\n\n    let chosenServer: string;\n    if(Modes.ssl || !Modes.http) {\n      const suffix = getTelegramConnectionSuffix(connectionType);\n      const subdomain = this.sslSubdomains[dcId - 1] + suffix;\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\n      chosenServer = 'https://' + subdomain + '.web.telegram.org/' + path;\n    } else {\n      for(const dcOption of this.dcOptions) {\n        if(dcOption.id === dcId) {\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\n          break;\n        }\n      }\n    }\n\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n    return new HTTP(dcId, chosenServer, logSuffix);\n  };\n\n  public chooseServer(\n    dcId: DcId,\n    connectionType: ConnectionType = 'client',\n    transportType: TransportType = Modes.transport,\n    reuse = true,\n    premium?: boolean\n  ) {\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\n      connectionType = 'client';\n    } */\n\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\n      this.chosenServers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const servers = this.chosenServers[transportType][connectionType];\n\n    if(!(dcId in servers)) {\n      servers[dcId] = [];\n    }\n\n    const transports = servers[dcId];\n\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\n      let transport: MTTransport;\n\n      if(import.meta.env.VITE_MTPROTO_HAS_WS && import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n        transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, premium);\n      } else if(!import.meta.env.VITE_MTPROTO_HTTP) {\n        transport = this.transportSocket(dcId, connectionType, premium);\n      } else {\n        transport = this.transportHTTP(dcId, connectionType, premium);\n      }\n\n      if(!transport) {\n        console.error('No chosenServer!', dcId);\n        return null;\n      }\n\n      if(reuse) {\n        transports.push(transport);\n      }\n\n      return transport;\n    }\n\n    return transports[0];\n  }\n\n  public static removeTransport<T>(obj: any, transport: T) {\n    for(const transportType in obj) {\n      // @ts-ignore\n      for(const connectionType in obj[transportType]) {\n        // @ts-ignore\n        for(const dcId in obj[transportType][connectionType]) {\n          // @ts-ignore\n          const transports: T[] = obj[transportType][connectionType][dcId];\n          indexOfAndSplice(transports, transport);\n        }\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from '../../../config/app';\nimport deferredPromise from '../../../helpers/cancellablePromise';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport pause from '../../../helpers/schedulers/pause';\nimport {TransportType, DcConfigurator} from '../dcConfigurator';\nimport type HTTP from './http';\nimport type TcpObfuscated from './tcpObfuscated';\nimport MTTransport from './transport';\n\nexport class MTTransportController extends EventListenerBase<{\n  change: (opened: MTTransportController['opened']) => void,\n  transport: (type: TransportType) => void\n}> {\n  private opened: Map<TransportType, number>;\n  private transports: {[k in TransportType]?: MTTransport};\n  private pinging: boolean;\n  private dcConfigurator: DcConfigurator;\n\n  constructor() {\n    super(true);\n\n    this.opened = new Map();\n    /* this.addEventListener('change', (opened) => {\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\n    }); */\n\n    this.addEventListener('change', (opened) => {\n      if(!opened.get('websocket')) {\n        this.waitForWebSocket();\n      }\n    });\n\n    // setTimeout(() => {\n    // this.waitForWebSocket();\n    // }, 200); // wait for first transport so won't have delay for first WS\n  }\n\n  public async pingTransports() {\n    const dcConfigurator = this.dcConfigurator ??= new DcConfigurator();\n    const timeout = 2000;\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\n    };\n\n    const httpPromise = deferredPromise<boolean>();\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\n    setTimeout(() => httpPromise.resolve(false), timeout);\n\n    const websocketPromise = deferredPromise<boolean>();\n    const socket = transports.websocket as TcpObfuscated;\n    socket.setAutoReconnect(false);\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\n    setTimeout(() => {\n      if(websocketPromise.isFulfilled || websocketPromise.isRejected) {\n        return;\n      }\n\n      if(socket.connection) {\n        socket.connection.close();\n      }\n\n      websocketPromise.resolve(false);\n    }, timeout);\n\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\n\n    for(const transportType in transports) {\n      const transport = transports[transportType as TransportType];\n      transport.destroy();\n    }\n\n    const result = {\n      https: isHttpAvailable || this.opened.get('https') > 0,\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\n    };\n\n    // result.websocket = false;\n    return result;\n  }\n\n  public async waitForWebSocket() {\n    if(this.pinging) return;\n    this.pinging = true;\n\n    while(true) {\n      const {https, websocket} = await this.pingTransports();\n      if(https || websocket) {\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\n      }\n\n      if(websocket) {\n        break;\n      }\n\n      await pause(10000);\n    }\n\n    this.pinging = false;\n  }\n\n  public setTransportValue(type: TransportType, value: boolean) {\n    let length = this.opened.get(type) || 0;\n    length += value ? 1 : -1;\n\n    this.opened.set(type, length);\n    this.dispatchEvent('change', this.opened);\n  }\n\n  public setTransportOpened(type: TransportType) {\n    return this.setTransportValue(type, true);\n  }\n\n  public setTransportClosed(type: TransportType) {\n    return this.setTransportValue(type, false);\n  }\n}\n\nconst transportController = new MTTransportController();\nexport default transportController;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport deferredPromise, {CancellablePromise} from '../../../../helpers/cancellablePromise';\nimport type {StoragesResults} from './loadStorages';\n\nconst RESET_STORAGES_PROMISE: CancellablePromise<{\n  storages: Set<keyof StoragesResults>,\n  callback: () => void\n}> = deferredPromise();\nexport default RESET_STORAGES_PROMISE;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {WebPushApiManager} from '../mtproto/webPushApiManager';\nimport type {PushNotificationObject} from './push';\nimport type {MyUploadFile} from '../mtproto/apiFileManager';\nimport SuperMessagePort from '../mtproto/superMessagePort';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\n\nexport type ServicePushPingTaskPayload = {\n  localNotifications: boolean,\n  lang: {\n    push_action_mute1d: string\n    push_action_settings: string\n    push_message_nopreview: string\n  },\n  settings: WebPushApiManager['settings']\n};\n\nexport type ServiceRequestFilePartTaskPayload = {\n  docId: DocId,\n  dcId: number,\n  offset: number,\n  limit: number\n};\n\nexport type ServiceDownloadTaskPayload = {\n  headers: any,\n  id: string\n};\n\nexport type ServiceEvent = {\n  port: (payload: void, source: MessageEventSource, event: MessageEvent) => void\n};\n\nexport default class ServiceMessagePort<Master extends boolean = false> extends SuperMessagePort<{\n  // from main thread to service worker\n  notificationsClear: () => void,\n  toggleStorages: (payload: {enabled: boolean, clearWrite: boolean}) => void,\n  pushPing: (payload: ServicePushPingTaskPayload, source: MessageEventSource, event: MessageEvent) => void,\n  hello: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\n  shownNotification: (payload: string) => void,\n\n  // from mtproto worker\n  download: (payload: ServiceDownloadTaskPayload) => void,\n  downloadChunk: (payload: {id: ServiceDownloadTaskPayload['id'], chunk: Uint8Array}) => void\n  downloadFinalize: (payload: ServiceDownloadTaskPayload['id']) => void,\n  downloadCancel: (payload: ServiceDownloadTaskPayload['id']) => void\n}, {\n  // to main thread\n  pushClick: (payload: PushNotificationObject) => void,\n  hello: (payload: void, source: MessageEventSource) => void,\n  share: (payload: ShareData) => void,\n\n  // to mtproto worker\n  requestFilePart: (payload: ServiceRequestFilePartTaskPayload) => Promise<MyUploadFile> | MyUploadFile\n} & ServiceEvent, Master> {\n  constructor() {\n    super('SERVICE');\n\n    MOUNT_CLASS_TO && (MOUNT_CLASS_TO.serviceMessagePort = this);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Awaited} from '../types';\n\nexport default function callbackify<T extends Awaited<any>, R>(\n  smth: T,\n  callback: (result: Awaited<T>) => R\n): T extends Promise<any> ? Promise<Awaited<R>> : R {\n  if(smth instanceof Promise) {\n    // @ts-ignore\n    return smth.then(callback);\n  } else {\n    return callback(smth as any) as any;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {CryptoMessagePort} from '../crypto/cryptoMessagePort';\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\nimport type {ApiManager} from '../mtproto/apiManager';\nimport type {Authorizer} from '../mtproto/authorizer';\nimport type {DcConfigurator} from '../mtproto/dcConfigurator';\nimport type {NetworkerFactory} from '../mtproto/networkerFactory';\nimport type {PasswordManager} from '../mtproto/passwordManager';\nimport type {ReferenceDatabase} from '../mtproto/referenceDatabase';\nimport type {TimeManager} from '../mtproto/timeManager';\nimport type {RootScope} from '../rootScope';\nimport type DialogsStorage from '../storages/dialogs';\nimport type FiltersStorage from '../storages/filters';\nimport type PeersStorage from '../storages/peers';\nimport type ThumbsStorage from '../storages/thumbs';\nimport type {ApiUpdatesManager} from './apiUpdatesManager';\nimport type {AppAvatarsManager} from './appAvatarsManager';\nimport type {AppCallsManager} from './appCallsManager';\nimport type {AppChatsManager} from './appChatsManager';\nimport type {AppDocsManager} from './appDocsManager';\nimport type {AppDraftsManager} from './appDraftsManager';\nimport type {AppEmojiManager} from './appEmojiManager';\nimport type {AppGroupCallsManager} from './appGroupCallsManager';\nimport type {AppInlineBotsManager} from './appInlineBotsManager';\nimport type {AppMessagesIdsManager} from './appMessagesIdsManager';\nimport type {AppMessagesManager} from './appMessagesManager';\nimport type {AppNotificationsManager} from './appNotificationsManager';\nimport type AppPaymentsManager from './appPaymentsManager';\nimport type {AppPeersManager} from './appPeersManager';\nimport type {AppPhotosManager} from './appPhotosManager';\nimport type {AppPollsManager} from './appPollsManager';\nimport type {AppPrivacyManager} from './appPrivacyManager';\nimport type {AppProfileManager} from './appProfileManager';\nimport type {AppReactionsManager} from './appReactionsManager';\nimport type {AppStateManager} from './appStateManager';\nimport type {AppStickersManager} from './appStickersManager';\nimport type {AppStoragesManager} from './appStoragesManager';\nimport type {AppUsersManager} from './appUsersManager';\nimport type AppWebDocsManager from './appWebDocsManager';\nimport type {AppWebPagesManager} from './appWebPagesManager';\nimport type AppAttachMenuBotsManager from './appAttachMenuBotsManager';\nimport type AppSeamlessLoginManager from './appSeamlessLoginManager';\nimport type AppThemesManager from './appThemesManager';\nimport type AppUsernamesManager from './appThemesManager';\nimport type AppChatInvitesManager from './appChatInvitesManager';\nimport type AppStoriesManager from './appStoriesManager';\nimport type AppBotsManager from './appBotsManager';\nimport type AppBoostsManager from './appBoostsManager';\nimport type {AppManagers} from './managers';\n\nexport class AppManager {\n  protected appPeersManager: AppPeersManager;\n  protected appChatsManager: AppChatsManager;\n  protected appDocsManager: AppDocsManager;\n  protected appPhotosManager: AppPhotosManager;\n  protected appPollsManager: AppPollsManager;\n  protected appUsersManager: AppUsersManager;\n  protected appWebPagesManager: AppWebPagesManager;\n  protected appDraftsManager: AppDraftsManager;\n  protected appProfileManager: AppProfileManager;\n  protected appNotificationsManager: AppNotificationsManager;\n  protected apiUpdatesManager: ApiUpdatesManager;\n  protected appAvatarsManager: AppAvatarsManager;\n  protected appGroupCallsManager: AppGroupCallsManager;\n  protected appCallsManager: AppCallsManager;\n  protected appReactionsManager: AppReactionsManager;\n  protected appMessagesManager: AppMessagesManager;\n  protected appMessagesIdsManager: AppMessagesIdsManager;\n  protected appPrivacyManager: AppPrivacyManager;\n  protected appInlineBotsManager: AppInlineBotsManager;\n  protected appStickersManager: AppStickersManager;\n  protected referenceDatabase: ReferenceDatabase;\n  protected appEmojiManager: AppEmojiManager;\n  protected dialogsStorage: DialogsStorage;\n  protected filtersStorage: FiltersStorage;\n  protected apiManager: ApiManager;\n  // protected apiManager: ApiManagerProxy;\n  protected passwordManager: PasswordManager;\n  protected cryptoWorker: CryptoMessagePort;\n  protected apiFileManager: ApiFileManager;\n  protected peersStorage: PeersStorage;\n  protected thumbsStorage: ThumbsStorage;\n  protected networkerFactory: NetworkerFactory;\n  protected rootScope: RootScope;\n  protected authorizer: Authorizer;\n  protected dcConfigurator: DcConfigurator;\n  protected timeManager: TimeManager;\n  protected appStoragesManager: AppStoragesManager;\n  protected appStateManager: AppStateManager;\n  protected appWebDocsManager: AppWebDocsManager;\n  protected appPaymentsManager: AppPaymentsManager;\n  protected appAttachMenuBotsManager: AppAttachMenuBotsManager;\n  protected appSeamlessLoginManager: AppSeamlessLoginManager;\n  protected appThemesManager: AppThemesManager;\n  protected appUsernamesManager: AppUsernamesManager;\n  protected appChatInvitesManager: AppChatInvitesManager;\n  protected appStoriesManager: AppStoriesManager;\n  protected appBotsManager: AppBotsManager;\n  protected appBoostsManager: AppBoostsManager;\n\n  public clear: (init?: boolean) => void;\n\n  public setManagers(managers: AppManagers) {\n    Object.assign(this, managers);\n    // this.after();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Chat} from '../../../../layer';\nimport type {Dialog} from '../../appMessagesManager';\nimport type {User} from '../../appUsersManager';\nimport DATABASE_STATE from '../../../../config/databases/state';\nimport AppStorage from '../../../storage';\n\nexport type StoragesStorages = {\n  users: AppStorage<Record<UserId, User>, typeof DATABASE_STATE>,\n  chats: AppStorage<Record<ChatId, Chat>, typeof DATABASE_STATE>,\n  dialogs: AppStorage<Record<PeerId, Dialog>, typeof DATABASE_STATE>\n};\n\nexport default function createStorages() {\n  const names: (keyof StoragesStorages)[] = ['users', 'chats', 'dialogs'];\n  const storages: StoragesStorages = {} as any;\n  for(const name of names) {\n    // @ts-ignore\n    storages[name] = new AppStorage(DATABASE_STATE, name);\n  }\n\n  return storages;\n}\n","import {logger} from '../lib/logger';\nimport dT from './dT';\n\nexport function recordPromise<T extends Promise<any>>(promise: T, description: string, log?: ReturnType<typeof logger> | Console) {\n  const perf = performance.now();\n  (log || console).warn(dT(), 'start', description);\n  promise.then(() => {\n    (log || console).warn(dT(), 'end', description, performance.now() - perf);\n  });\n  return promise;\n}\n\nexport function recordPromiseBound(log: ReturnType<typeof logger> | Console) {\n  return (...args: [Parameters<typeof recordPromise>[0], Parameters<typeof recordPromise>[1]]) => {\n    return recordPromise(...args, log);\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Chat} from '../../../../layer';\nimport type {Dialog} from '../../appMessagesManager';\nimport type {User} from '../../appUsersManager';\nimport type {StoragesStorages} from './createStorages';\nimport {recordPromiseBound} from '../../../../helpers/recordPromise';\nimport {Awaited} from '../../../../types';\nimport {logger} from '../../../logger';\nimport RESET_STORAGES_PROMISE from './resetStoragesPromise';\nimport noop from '../../../../helpers/noop';\n\nexport type StoragesResults = Awaited<ReturnType<typeof loadStoragesInner>>;\n\nasync function loadStoragesInner(storages: StoragesStorages) {\n  const recordPromise = recordPromiseBound(logger('STORAGES-LOADER'));\n  const storagesKeys = Object.keys(storages) as Array<keyof StoragesStorages>;\n  const storagesPromises: Promise<any>[] = storagesKeys.map((key) => {\n    const promise = storages[key].getAll();\n    return recordPromise(promise, 'storage ' + (key as any as string));\n  });\n\n  const storagesResults: {\n    users: User[],\n    chats: Chat[],\n    dialogs: Dialog[]\n  } = {} as any;\n  const arr = await Promise.all(storagesPromises);\n  for(let i = 0, length = storagesKeys.length; i < length; ++i) {\n    storagesResults[storagesKeys[i]] = arr[i] as any;\n  }\n\n  arr.splice(0, storagesKeys.length);\n\n  // * will reset storages before setting the new state\n  const {storages: resetStorages, callback} = await RESET_STORAGES_PROMISE;\n  if(resetStorages.size) {\n    const clearPromises: Promise<any>[] = [];\n    for(const key of resetStorages) {\n      storagesResults[key].length = 0;\n      clearPromises.push(storages[key].clear());\n    }\n\n    resetStorages.clear();\n    await Promise.all(clearPromises).catch(noop);\n  }\n\n  callback();\n\n  return storagesResults;\n}\n\nlet promise: ReturnType<typeof loadStoragesInner>;\nexport default function loadStorages(storages: StoragesStorages) {\n  return promise ??= loadStoragesInner(storages);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {logger} from '../logger';\nimport {AppManager} from './manager';\nimport createStorages from './utils/storages/createStorages';\nimport loadStorages from './utils/storages/loadStorages';\n\nexport class AppStoragesManager extends AppManager {\n  private storages: ReturnType<typeof createStorages>;\n\n  // private loadPromise: CancellablePromise<StoragesResults>;\n\n  private log: ReturnType<typeof logger>;\n\n  constructor() {\n    super();\n\n    this.log = logger('STORAGES');\n    this.storages = createStorages();\n    // this.loadPromise = deferredPromise();\n  }\n\n  public loadStorages() {\n    return loadStorages(this.storages);\n    // loadStorages(this.storages).then((storagesResults) => {\n    // this.loadPromise.resolve(storagesResults);\n    // });\n\n    // return this.loadPromise;\n  }\n\n  // public setStoragesResults(storagesResults: StoragesResults) {\n  //   this.loadPromise.resolve(storagesResults);\n  // }\n\n  public async loadStorage<T extends keyof AppStoragesManager['storages']>(name: T) {\n    return this.loadStorages().then((storagesResults) => {\n      return {\n        storage: this.storages[name],\n        results: storagesResults[name]\n      };\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo} from '../../layer';\nimport randomize from '../../helpers/array/randomize';\nimport {AppManager} from '../appManagers/manager';\n\nexport class PasswordManager extends AppManager {\n  public getState(): Promise<AccountPassword> {\n    return this.apiManager.invokeApi('account.getPassword').then((result) => {\n      return result;\n    });\n  }\n\n  public updateSettings(settings: {\n    hint?: string,\n    email?: string,\n    newPassword?: string,\n    currentPassword?: string\n  } = {}) {\n    // state = Object.assign({}, state);\n    // state.new_algo = Object.assign({}, state.new_algo);\n\n    return this.getState().then((state) => {\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\n      let newHashPromise: Promise<Uint8Array>;\n      const params: AccountUpdatePasswordSettings = {\n        password: null,\n        new_settings: {\n          _: 'account.passwordInputSettings',\n          hint: settings.hint,\n          email: settings.email\n        }\n      };\n\n      if(settings.currentPassword) {\n        currentHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\n      } else {\n        currentHashPromise = Promise.resolve({\n          _: 'inputCheckPasswordEmpty'\n        });\n      }\n\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\n      randomize(salt1);\n      salt1.set(newAlgo.salt1, 0);\n      newAlgo.salt1 = salt1;\n\n      if(settings.newPassword) {\n        newHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\n      } else {\n        newHashPromise = Promise.resolve(new Uint8Array());\n      }\n\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\n        params.password = hashes[0];\n        params.new_settings.new_algo = newAlgo;\n        params.new_settings.new_password_hash = hashes[1];\n\n        return this.apiManager.invokeApi('account.updatePasswordSettings', params);\n      });\n    });\n  }\n\n  public getInputCheckPassword(password: string, state: AccountPassword) {\n    return this.cryptoWorker.invokeCrypto('computeSRP', password, state, false) as Promise<InputCheckPasswordSRP.inputCheckPasswordSRP>;\n  }\n\n  public check(password: string, state: AccountPassword, options: any = {}) {\n    return this.getInputCheckPassword(password, state).then((inputCheckPassword) => {\n      // console.log('SRP', inputCheckPassword);\n      return this.apiManager.invokeApi('auth.checkPassword', {\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\n      }, options).then((auth) => {\n        if(auth._ === 'auth.authorization') {\n          this.apiManager.setUser(auth.user);\n        }\n\n        return auth;\n      });\n    });\n  }\n\n  public confirmPasswordEmail(code: string) {\n    return this.apiManager.invokeApi('account.confirmPasswordEmail', {code});\n  }\n\n  public resendPasswordEmail() {\n    return this.apiManager.invokeApi('account.resendPasswordEmail');\n  }\n\n  public cancelPasswordEmail() {\n    return this.apiManager.invokeApi('account.cancelPasswordEmail');\n  }\n\n  /* public requestRecovery(options: any = {}) {\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\n  }\n\n  public recover(code: any, options: any = {}) {\n    return apiManager.invokeApi('auth.recoverPassword', {\n      code\n    }, options);\n  } */\n}\n","/**\n * ignores `undefined` properties\n */\nexport default function deepEqual<T>(x: T, y: T, ignoreKeys?: (keyof T)[]): boolean {\n  const ignoreSet = ignoreKeys && new Set(ignoreKeys);\n  const okok = (obj: any) => Object.keys(obj).filter((key) => obj[key] !== undefined);\n  const ok = ignoreKeys ? (obj: any) => okok(obj).filter((key) => !ignoreSet.has(key as any)) : okok,\n    tx = typeof x,\n    ty = typeof y;\n  return x && y && tx === 'object' && tx === ty ? (\n    ok(x).length === ok(y).length &&\n      ok(x).every((key) => deepEqual((x as any)[key], (y as any)[key], ignoreKeys))\n  ) : (x === y);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Photo, StoryItem, WallPaper} from '../../layer';\nimport {logger} from '../logger';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport {AppManager} from '../appManagers/manager';\nimport makeError from '../../helpers/makeError';\n\nexport type ReferenceContext =\n  ReferenceContext.referenceContextProfilePhoto |\n  ReferenceContext.referenceContextMessage |\n  ReferenceContext.referenceContextEmojiesSounds |\n  ReferenceContext.referenceContextReactions |\n  ReferenceContext.referenceContextUserFull |\n  ReferenceContext.referenceContextCustomEmoji |\n  ReferenceContext.referenceContextAttachMenuBotIcon |\n  ReferenceContext.referenceContextWallPaper |\n  ReferenceContext.referenceContextStoryItem |\n  ReferenceContext.referenceContextPremiumPromo;\nexport namespace ReferenceContext {\n  export type referenceContextProfilePhoto = {\n    type: 'profilePhoto',\n    peerId: PeerId\n  };\n\n  export type referenceContextMessage = {\n    type: 'message',\n    peerId: PeerId,\n    messageId: number\n  };\n\n  export type referenceContextEmojiesSounds = {\n    type: 'emojiesSounds'\n  };\n\n  export type referenceContextReactions = {\n    type: 'reactions'\n  };\n\n  export type referenceContextUserFull = {\n    type: 'userFull',\n    userId: UserId\n  };\n\n  export type referenceContextCustomEmoji = {\n    type: 'customEmoji',\n    docId: DocId\n  };\n\n  export type referenceContextAttachMenuBotIcon = {\n    type: 'attachMenuBotIcon',\n    botId: BotId\n  };\n\n  export type referenceContextWallPaper = {\n    type: 'wallPaper',\n    wallPaperId: WallPaper['id']\n  };\n\n  export type referenceContextStoryItem = {\n    type: 'storyItem',\n    peerId: PeerId,\n    storyId: StoryItem['id'],\n  };\n\n  export type referenceContextPremiumPromo = {\n    type: 'premiumPromo'\n  };\n}\n\nexport type ReferenceBytes = Photo.photo['file_reference'];\nexport type ReferenceContexts = Set<ReferenceContext>;\n\n// type ReferenceBytes = Uint8Array;\n\nexport class ReferenceDatabase extends AppManager {\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\n  // private references: Map<ReferenceBytes, number[]> = new Map();\n  private links: {[hex: string]: ReferenceBytes} = {};\n  private log = logger('RD', undefined, true);\n  private refreshEmojiesSoundsPromise: Promise<any>;\n\n  // constructor() {\n  //   super();\n\n  // apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\n  //   const originalPayload = task.payload;\n\n  //   assumeType<RefreshReferenceTaskResponse>(task);\n  //   task.originalPayload = originalPayload;\n\n  //   this.refreshReference(originalPayload).then((bytes) => {\n  //     task.payload = bytes;\n  //   }, (err) => {\n  //     task.error = err;\n  //   }).then(() => apiManager.postMessage(task));\n  // });\n  // }\n\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(!contexts) {\n      contexts = new Set();\n      this.contexts.set(reference, contexts);\n    }\n\n    this.links[bytesToHex(reference)] = reference;\n    for(const _context of contexts) {\n      if(deepEqual(_context, context)) {\n        return;\n      }\n    }\n\n    contexts.add(context);\n  }\n\n  public getReferenceByLink(reference: ReferenceBytes) {\n    return this.links[bytesToHex(reference)];\n  }\n\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\n    return [contexts, reference];\n  }\n\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\n    const contexts = this.getContexts(reference);\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\n  }\n\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(contexts) {\n      for(const _context of contexts) {\n        if(deepEqual(_context, context)) {\n          contexts.delete(_context);\n          if(!contexts.size) {\n            this.contexts.delete(reference);\n            delete this.links[bytesToHex(reference)];\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\n    this.log('refreshReference: start', reference.slice(), context);\n    if(!context) {\n      const c = this.getContext(reference);\n      if(!c) {\n        this.log('refreshReference: got no context for reference:', reference.slice());\n        return Promise.reject('NO_CONTEXT');\n      }\n\n      [context, reference] = c;\n    }\n\n    let promise: Promise<any>;\n    switch(context?.type) {\n      case 'message': {\n        promise = this.appMessagesManager.reloadMessages(context.peerId, context.messageId, true);\n        break;\n        // .then(() => {\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\n        // });\n      }\n\n      case 'emojiesSounds': {\n        promise = this.refreshEmojiesSoundsPromise || this.appStickersManager.getAnimatedEmojiSounds(true).then(() => {\n          this.refreshEmojiesSoundsPromise = undefined;\n        });\n        break;\n      }\n\n      case 'userFull': {\n        promise = Promise.resolve(this.appProfileManager.getProfile(context.userId, true));\n        break;\n      }\n\n      case 'customEmoji': {\n        promise = this.appEmojiManager.getCustomEmojiDocuments([context.docId]);\n        break;\n      }\n\n      case 'attachMenuBotIcon': {\n        promise = this.appAttachMenuBotsManager.getAttachMenuBot(context.botId, true) as any;\n        break;\n      }\n\n      case 'wallPaper': {\n        promise = this.appThemesManager.getWallPaperById(context.wallPaperId);\n        break;\n      }\n\n      case 'storyItem': {\n        promise = Promise.resolve(this.appStoriesManager.getStoryById(context.peerId, context.storyId, true));\n        break;\n      }\n\n      case 'premiumPromo': {\n        promise = Promise.resolve(this.appPaymentsManager.getPremiumPromo(true));\n        break;\n      }\n\n      default: {\n        this.log.warn('refreshReference: not implemented context', context);\n        return Promise.reject();\n      }\n    }\n\n    const hex = bytesToHex(reference);\n    this.log('refreshReference: refreshing reference:', hex);\n    return promise.then(() => {\n      const newHex = bytesToHex(reference);\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\n      if(hex !== newHex) {\n        return reference;\n      }\n\n      this.deleteContext(reference, context);\n\n      const newContext = this.getContext(reference);\n      if(newContext) {\n        return this.refreshReference(reference, newContext[0]);\n      }\n\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\n\n      throw makeError('NO_NEW_CONTEXT');\n    });\n  }\n\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\n    const contexts = this.contexts.get(oldReference);\n    if(contexts) {\n      this.contexts.delete(oldReference);\n      this.contexts.set(newReference, contexts);\n    }\n  } */\n}\n","export default function tsNow(seconds?: true) {\n  const t = Date.now();\n  return seconds ? t / 1000 | 0 : t;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n// From https://raw.githubusercontent.com/FGRibreau/latenize/master/latinize_map.js\nconst LatinizeMap: {[k: string]: string} = {'Á': 'A', 'Ă': 'A', 'Ắ': 'A', 'Ặ': 'A', 'Ằ': 'A', 'Ẳ': 'A', 'Ẵ': 'A', 'Ǎ': 'A', 'Â': 'A', 'Ấ': 'A', 'Ậ': 'A', 'Ầ': 'A', 'Ẩ': 'A', 'Ẫ': 'A', 'Ä': 'A', 'Ǟ': 'A', 'Ȧ': 'A', 'Ǡ': 'A', 'Ạ': 'A', 'Ȁ': 'A', 'À': 'A', 'Ả': 'A', 'Ȃ': 'A', 'Ā': 'A', 'Ą': 'A', 'Å': 'A', 'Ǻ': 'A', 'Ḁ': 'A', 'Ⱥ': 'A', 'Ã': 'A', 'Ꜳ': 'AA', 'Æ': 'AE', 'Ǽ': 'AE', 'Ǣ': 'AE', 'Ꜵ': 'AO', 'Ꜷ': 'AU', 'Ꜹ': 'AV', 'Ꜻ': 'AV', 'Ꜽ': 'AY', 'Ḃ': 'B', 'Ḅ': 'B', 'Ɓ': 'B', 'Ḇ': 'B', 'Ƀ': 'B', 'Ƃ': 'B', 'Ć': 'C', 'Č': 'C', 'Ç': 'C', 'Ḉ': 'C', 'Ĉ': 'C', 'Ċ': 'C', 'Ƈ': 'C', 'Ȼ': 'C', 'Ď': 'D', 'Ḑ': 'D', 'Ḓ': 'D', 'Ḋ': 'D', 'Ḍ': 'D', 'Ɗ': 'D', 'Ḏ': 'D', 'ǲ': 'D', 'ǅ': 'D', 'Đ': 'D', 'Ƌ': 'D', 'Ǳ': 'DZ', 'Ǆ': 'DZ', 'É': 'E', 'Ĕ': 'E', 'Ě': 'E', 'Ȩ': 'E', 'Ḝ': 'E', 'Ê': 'E', 'Ế': 'E', 'Ệ': 'E', 'Ề': 'E', 'Ể': 'E', 'Ễ': 'E', 'Ḙ': 'E', 'Ë': 'E', 'Ė': 'E', 'Ẹ': 'E', 'Ȅ': 'E', 'È': 'E', 'Ẻ': 'E', 'Ȇ': 'E', 'Ē': 'E', 'Ḗ': 'E', 'Ḕ': 'E', 'Ę': 'E', 'Ɇ': 'E', 'Ẽ': 'E', 'Ḛ': 'E', 'Ꝫ': 'ET', 'Ḟ': 'F', 'Ƒ': 'F', 'Ǵ': 'G', 'Ğ': 'G', 'Ǧ': 'G', 'Ģ': 'G', 'Ĝ': 'G', 'Ġ': 'G', 'Ɠ': 'G', 'Ḡ': 'G', 'Ǥ': 'G', 'Ḫ': 'H', 'Ȟ': 'H', 'Ḩ': 'H', 'Ĥ': 'H', 'Ⱨ': 'H', 'Ḧ': 'H', 'Ḣ': 'H', 'Ḥ': 'H', 'Ħ': 'H', 'Í': 'I', 'Ĭ': 'I', 'Ǐ': 'I', 'Î': 'I', 'Ï': 'I', 'Ḯ': 'I', 'İ': 'I', 'Ị': 'I', 'Ȉ': 'I', 'Ì': 'I', 'Ỉ': 'I', 'Ȋ': 'I', 'Ī': 'I', 'Į': 'I', 'Ɨ': 'I', 'Ĩ': 'I', 'Ḭ': 'I', 'Ꝺ': 'D', 'Ꝼ': 'F', 'Ᵹ': 'G', 'Ꞃ': 'R', 'Ꞅ': 'S', 'Ꞇ': 'T', 'Ꝭ': 'IS', 'Ĵ': 'J', 'Ɉ': 'J', 'Ḱ': 'K', 'Ǩ': 'K', 'Ķ': 'K', 'Ⱪ': 'K', 'Ꝃ': 'K', 'Ḳ': 'K', 'Ƙ': 'K', 'Ḵ': 'K', 'Ꝁ': 'K', 'Ꝅ': 'K', 'Ĺ': 'L', 'Ƚ': 'L', 'Ľ': 'L', 'Ļ': 'L', 'Ḽ': 'L', 'Ḷ': 'L', 'Ḹ': 'L', 'Ⱡ': 'L', 'Ꝉ': 'L', 'Ḻ': 'L', 'Ŀ': 'L', 'Ɫ': 'L', 'ǈ': 'L', 'Ł': 'L', 'Ǉ': 'LJ', 'Ḿ': 'M', 'Ṁ': 'M', 'Ṃ': 'M', 'Ɱ': 'M', 'Ń': 'N', 'Ň': 'N', 'Ņ': 'N', 'Ṋ': 'N', 'Ṅ': 'N', 'Ṇ': 'N', 'Ǹ': 'N', 'Ɲ': 'N', 'Ṉ': 'N', 'Ƞ': 'N', 'ǋ': 'N', 'Ñ': 'N', 'Ǌ': 'NJ', 'Ó': 'O', 'Ŏ': 'O', 'Ǒ': 'O', 'Ô': 'O', 'Ố': 'O', 'Ộ': 'O', 'Ồ': 'O', 'Ổ': 'O', 'Ỗ': 'O', 'Ö': 'O', 'Ȫ': 'O', 'Ȯ': 'O', 'Ȱ': 'O', 'Ọ': 'O', 'Ő': 'O', 'Ȍ': 'O', 'Ò': 'O', 'Ỏ': 'O', 'Ơ': 'O', 'Ớ': 'O', 'Ợ': 'O', 'Ờ': 'O', 'Ở': 'O', 'Ỡ': 'O', 'Ȏ': 'O', 'Ꝋ': 'O', 'Ꝍ': 'O', 'Ō': 'O', 'Ṓ': 'O', 'Ṑ': 'O', 'Ɵ': 'O', 'Ǫ': 'O', 'Ǭ': 'O', 'Ø': 'O', 'Ǿ': 'O', 'Õ': 'O', 'Ṍ': 'O', 'Ṏ': 'O', 'Ȭ': 'O', 'Ƣ': 'OI', 'Ꝏ': 'OO', 'Ɛ': 'E', 'Ɔ': 'O', 'Ȣ': 'OU', 'Ṕ': 'P', 'Ṗ': 'P', 'Ꝓ': 'P', 'Ƥ': 'P', 'Ꝕ': 'P', 'Ᵽ': 'P', 'Ꝑ': 'P', 'Ꝙ': 'Q', 'Ꝗ': 'Q', 'Ŕ': 'R', 'Ř': 'R', 'Ŗ': 'R', 'Ṙ': 'R', 'Ṛ': 'R', 'Ṝ': 'R', 'Ȑ': 'R', 'Ȓ': 'R', 'Ṟ': 'R', 'Ɍ': 'R', 'Ɽ': 'R', 'Ꜿ': 'C', 'Ǝ': 'E', 'Ś': 'S', 'Ṥ': 'S', 'Š': 'S', 'Ṧ': 'S', 'Ş': 'S', 'Ŝ': 'S', 'Ș': 'S', 'Ṡ': 'S', 'Ṣ': 'S', 'Ṩ': 'S', 'ẞ': 'SS', 'Ť': 'T', 'Ţ': 'T', 'Ṱ': 'T', 'Ț': 'T', 'Ⱦ': 'T', 'Ṫ': 'T', 'Ṭ': 'T', 'Ƭ': 'T', 'Ṯ': 'T', 'Ʈ': 'T', 'Ŧ': 'T', 'Ɐ': 'A', 'Ꞁ': 'L', 'Ɯ': 'M', 'Ʌ': 'V', 'Ꜩ': 'TZ', 'Ú': 'U', 'Ŭ': 'U', 'Ǔ': 'U', 'Û': 'U', 'Ṷ': 'U', 'Ü': 'U', 'Ǘ': 'U', 'Ǚ': 'U', 'Ǜ': 'U', 'Ǖ': 'U', 'Ṳ': 'U', 'Ụ': 'U', 'Ű': 'U', 'Ȕ': 'U', 'Ù': 'U', 'Ủ': 'U', 'Ư': 'U', 'Ứ': 'U', 'Ự': 'U', 'Ừ': 'U', 'Ử': 'U', 'Ữ': 'U', 'Ȗ': 'U', 'Ū': 'U', 'Ṻ': 'U', 'Ų': 'U', 'Ů': 'U', 'Ũ': 'U', 'Ṹ': 'U', 'Ṵ': 'U', 'Ꝟ': 'V', 'Ṿ': 'V', 'Ʋ': 'V', 'Ṽ': 'V', 'Ꝡ': 'VY', 'Ẃ': 'W', 'Ŵ': 'W', 'Ẅ': 'W', 'Ẇ': 'W', 'Ẉ': 'W', 'Ẁ': 'W', 'Ⱳ': 'W', 'Ẍ': 'X', 'Ẋ': 'X', 'Ý': 'Y', 'Ŷ': 'Y', 'Ÿ': 'Y', 'Ẏ': 'Y', 'Ỵ': 'Y', 'Ỳ': 'Y', 'Ƴ': 'Y', 'Ỷ': 'Y', 'Ỿ': 'Y', 'Ȳ': 'Y', 'Ɏ': 'Y', 'Ỹ': 'Y', 'Ź': 'Z', 'Ž': 'Z', 'Ẑ': 'Z', 'Ⱬ': 'Z', 'Ż': 'Z', 'Ẓ': 'Z', 'Ȥ': 'Z', 'Ẕ': 'Z', 'Ƶ': 'Z', 'Ĳ': 'IJ', 'Œ': 'OE', 'ᴀ': 'A', 'ᴁ': 'AE', 'ʙ': 'B', 'ᴃ': 'B', 'ᴄ': 'C', 'ᴅ': 'D', 'ᴇ': 'E', 'ꜰ': 'F', 'ɢ': 'G', 'ʛ': 'G', 'ʜ': 'H', 'ɪ': 'I', 'ʁ': 'R', 'ᴊ': 'J', 'ᴋ': 'K', 'ʟ': 'L', 'ᴌ': 'L', 'ᴍ': 'M', 'ɴ': 'N', 'ᴏ': 'O', 'ɶ': 'OE', 'ᴐ': 'O', 'ᴕ': 'OU', 'ᴘ': 'P', 'ʀ': 'R', 'ᴎ': 'N', 'ᴙ': 'R', 'ꜱ': 'S', 'ᴛ': 'T', 'ⱻ': 'E', 'ᴚ': 'R', 'ᴜ': 'U', 'ᴠ': 'V', 'ᴡ': 'W', 'ʏ': 'Y', 'ᴢ': 'Z', 'á': 'a', 'ă': 'a', 'ắ': 'a', 'ặ': 'a', 'ằ': 'a', 'ẳ': 'a', 'ẵ': 'a', 'ǎ': 'a', 'â': 'a', 'ấ': 'a', 'ậ': 'a', 'ầ': 'a', 'ẩ': 'a', 'ẫ': 'a', 'ä': 'a', 'ǟ': 'a', 'ȧ': 'a', 'ǡ': 'a', 'ạ': 'a', 'ȁ': 'a', 'à': 'a', 'ả': 'a', 'ȃ': 'a', 'ā': 'a', 'ą': 'a', 'ᶏ': 'a', 'ẚ': 'a', 'å': 'a', 'ǻ': 'a', 'ḁ': 'a', 'ⱥ': 'a', 'ã': 'a', 'ꜳ': 'aa', 'æ': 'ae', 'ǽ': 'ae', 'ǣ': 'ae', 'ꜵ': 'ao', 'ꜷ': 'au', 'ꜹ': 'av', 'ꜻ': 'av', 'ꜽ': 'ay', 'ḃ': 'b', 'ḅ': 'b', 'ɓ': 'b', 'ḇ': 'b', 'ᵬ': 'b', 'ᶀ': 'b', 'ƀ': 'b', 'ƃ': 'b', 'ɵ': 'o', 'ć': 'c', 'č': 'c', 'ç': 'c', 'ḉ': 'c', 'ĉ': 'c', 'ɕ': 'c', 'ċ': 'c', 'ƈ': 'c', 'ȼ': 'c', 'ď': 'd', 'ḑ': 'd', 'ḓ': 'd', 'ȡ': 'd', 'ḋ': 'd', 'ḍ': 'd', 'ɗ': 'd', 'ᶑ': 'd', 'ḏ': 'd', 'ᵭ': 'd', 'ᶁ': 'd', 'đ': 'd', 'ɖ': 'd', 'ƌ': 'd', 'ı': 'i', 'ȷ': 'j', 'ɟ': 'j', 'ʄ': 'j', 'ǳ': 'dz', 'ǆ': 'dz', 'é': 'e', 'ĕ': 'e', 'ě': 'e', 'ȩ': 'e', 'ḝ': 'e', 'ê': 'e', 'ế': 'e', 'ệ': 'e', 'ề': 'e', 'ể': 'e', 'ễ': 'e', 'ḙ': 'e', 'ë': 'e', 'ė': 'e', 'ẹ': 'e', 'ȅ': 'e', 'è': 'e', 'ẻ': 'e', 'ȇ': 'e', 'ē': 'e', 'ḗ': 'e', 'ḕ': 'e', 'ⱸ': 'e', 'ę': 'e', 'ᶒ': 'e', 'ɇ': 'e', 'ẽ': 'e', 'ḛ': 'e', 'ꝫ': 'et', 'ḟ': 'f', 'ƒ': 'f', 'ᵮ': 'f', 'ᶂ': 'f', 'ǵ': 'g', 'ğ': 'g', 'ǧ': 'g', 'ģ': 'g', 'ĝ': 'g', 'ġ': 'g', 'ɠ': 'g', 'ḡ': 'g', 'ᶃ': 'g', 'ǥ': 'g', 'ḫ': 'h', 'ȟ': 'h', 'ḩ': 'h', 'ĥ': 'h', 'ⱨ': 'h', 'ḧ': 'h', 'ḣ': 'h', 'ḥ': 'h', 'ɦ': 'h', 'ẖ': 'h', 'ħ': 'h', 'ƕ': 'hv', 'í': 'i', 'ĭ': 'i', 'ǐ': 'i', 'î': 'i', 'ï': 'i', 'ḯ': 'i', 'ị': 'i', 'ȉ': 'i', 'ì': 'i', 'ỉ': 'i', 'ȋ': 'i', 'ī': 'i', 'į': 'i', 'ᶖ': 'i', 'ɨ': 'i', 'ĩ': 'i', 'ḭ': 'i', 'ꝺ': 'd', 'ꝼ': 'f', 'ᵹ': 'g', 'ꞃ': 'r', 'ꞅ': 's', 'ꞇ': 't', 'ꝭ': 'is', 'ǰ': 'j', 'ĵ': 'j', 'ʝ': 'j', 'ɉ': 'j', 'ḱ': 'k', 'ǩ': 'k', 'ķ': 'k', 'ⱪ': 'k', 'ꝃ': 'k', 'ḳ': 'k', 'ƙ': 'k', 'ḵ': 'k', 'ᶄ': 'k', 'ꝁ': 'k', 'ꝅ': 'k', 'ĺ': 'l', 'ƚ': 'l', 'ɬ': 'l', 'ľ': 'l', 'ļ': 'l', 'ḽ': 'l', 'ȴ': 'l', 'ḷ': 'l', 'ḹ': 'l', 'ⱡ': 'l', 'ꝉ': 'l', 'ḻ': 'l', 'ŀ': 'l', 'ɫ': 'l', 'ᶅ': 'l', 'ɭ': 'l', 'ł': 'l', 'ǉ': 'lj', 'ſ': 's', 'ẜ': 's', 'ẛ': 's', 'ẝ': 's', 'ḿ': 'm', 'ṁ': 'm', 'ṃ': 'm', 'ɱ': 'm', 'ᵯ': 'm', 'ᶆ': 'm', 'ń': 'n', 'ň': 'n', 'ņ': 'n', 'ṋ': 'n', 'ȵ': 'n', 'ṅ': 'n', 'ṇ': 'n', 'ǹ': 'n', 'ɲ': 'n', 'ṉ': 'n', 'ƞ': 'n', 'ᵰ': 'n', 'ᶇ': 'n', 'ɳ': 'n', 'ñ': 'n', 'ǌ': 'nj', 'ó': 'o', 'ŏ': 'o', 'ǒ': 'o', 'ô': 'o', 'ố': 'o', 'ộ': 'o', 'ồ': 'o', 'ổ': 'o', 'ỗ': 'o', 'ö': 'o', 'ȫ': 'o', 'ȯ': 'o', 'ȱ': 'o', 'ọ': 'o', 'ő': 'o', 'ȍ': 'o', 'ò': 'o', 'ỏ': 'o', 'ơ': 'o', 'ớ': 'o', 'ợ': 'o', 'ờ': 'o', 'ở': 'o', 'ỡ': 'o', 'ȏ': 'o', 'ꝋ': 'o', 'ꝍ': 'o', 'ⱺ': 'o', 'ō': 'o', 'ṓ': 'o', 'ṑ': 'o', 'ǫ': 'o', 'ǭ': 'o', 'ø': 'o', 'ǿ': 'o', 'õ': 'o', 'ṍ': 'o', 'ṏ': 'o', 'ȭ': 'o', 'ƣ': 'oi', 'ꝏ': 'oo', 'ɛ': 'e', 'ᶓ': 'e', 'ɔ': 'o', 'ᶗ': 'o', 'ȣ': 'ou', 'ṕ': 'p', 'ṗ': 'p', 'ꝓ': 'p', 'ƥ': 'p', 'ᵱ': 'p', 'ᶈ': 'p', 'ꝕ': 'p', 'ᵽ': 'p', 'ꝑ': 'p', 'ꝙ': 'q', 'ʠ': 'q', 'ɋ': 'q', 'ꝗ': 'q', 'ŕ': 'r', 'ř': 'r', 'ŗ': 'r', 'ṙ': 'r', 'ṛ': 'r', 'ṝ': 'r', 'ȑ': 'r', 'ɾ': 'r', 'ᵳ': 'r', 'ȓ': 'r', 'ṟ': 'r', 'ɼ': 'r', 'ᵲ': 'r', 'ᶉ': 'r', 'ɍ': 'r', 'ɽ': 'r', 'ↄ': 'c', 'ꜿ': 'c', 'ɘ': 'e', 'ɿ': 'r', 'ś': 's', 'ṥ': 's', 'š': 's', 'ṧ': 's', 'ş': 's', 'ŝ': 's', 'ș': 's', 'ṡ': 's', 'ṣ': 's', 'ṩ': 's', 'ʂ': 's', 'ᵴ': 's', 'ᶊ': 's', 'ȿ': 's', 'ɡ': 'g', 'ß': 'ss', 'ᴑ': 'o', 'ᴓ': 'o', 'ᴝ': 'u', 'ť': 't', 'ţ': 't', 'ṱ': 't', 'ț': 't', 'ȶ': 't', 'ẗ': 't', 'ⱦ': 't', 'ṫ': 't', 'ṭ': 't', 'ƭ': 't', 'ṯ': 't', 'ᵵ': 't', 'ƫ': 't', 'ʈ': 't', 'ŧ': 't', 'ᵺ': 'th', 'ɐ': 'a', 'ᴂ': 'ae', 'ǝ': 'e', 'ᵷ': 'g', 'ɥ': 'h', 'ʮ': 'h', 'ʯ': 'h', 'ᴉ': 'i', 'ʞ': 'k', 'ꞁ': 'l', 'ɯ': 'm', 'ɰ': 'm', 'ᴔ': 'oe', 'ɹ': 'r', 'ɻ': 'r', 'ɺ': 'r', 'ⱹ': 'r', 'ʇ': 't', 'ʌ': 'v', 'ʍ': 'w', 'ʎ': 'y', 'ꜩ': 'tz', 'ú': 'u', 'ŭ': 'u', 'ǔ': 'u', 'û': 'u', 'ṷ': 'u', 'ü': 'u', 'ǘ': 'u', 'ǚ': 'u', 'ǜ': 'u', 'ǖ': 'u', 'ṳ': 'u', 'ụ': 'u', 'ű': 'u', 'ȕ': 'u', 'ù': 'u', 'ủ': 'u', 'ư': 'u', 'ứ': 'u', 'ự': 'u', 'ừ': 'u', 'ử': 'u', 'ữ': 'u', 'ȗ': 'u', 'ū': 'u', 'ṻ': 'u', 'ų': 'u', 'ᶙ': 'u', 'ů': 'u', 'ũ': 'u', 'ṹ': 'u', 'ṵ': 'u', 'ᵫ': 'ue', 'ꝸ': 'um', 'ⱴ': 'v', 'ꝟ': 'v', 'ṿ': 'v', 'ʋ': 'v', 'ᶌ': 'v', 'ⱱ': 'v', 'ṽ': 'v', 'ꝡ': 'vy', 'ẃ': 'w', 'ŵ': 'w', 'ẅ': 'w', 'ẇ': 'w', 'ẉ': 'w', 'ẁ': 'w', 'ⱳ': 'w', 'ẘ': 'w', 'ẍ': 'x', 'ẋ': 'x', 'ᶍ': 'x', 'ý': 'y', 'ŷ': 'y', 'ÿ': 'y', 'ẏ': 'y', 'ỵ': 'y', 'ỳ': 'y', 'ƴ': 'y', 'ỷ': 'y', 'ỿ': 'y', 'ȳ': 'y', 'ẙ': 'y', 'ɏ': 'y', 'ỹ': 'y', 'ź': 'z', 'ž': 'z', 'ẑ': 'z', 'ʑ': 'z', 'ⱬ': 'z', 'ż': 'z', 'ẓ': 'z', 'ȥ': 'z', 'ẕ': 'z', 'ᵶ': 'z', 'ᶎ': 'z', 'ʐ': 'z', 'ƶ': 'z', 'ɀ': 'z', 'ﬀ': 'ff', 'ﬃ': 'ffi', 'ﬄ': 'ffl', 'ﬁ': 'fi', 'ﬂ': 'fl', 'ĳ': 'ij', 'œ': 'oe', 'ﬆ': 'st', 'ₐ': 'a', 'ₑ': 'e', 'ᵢ': 'i', 'ⱼ': 'j', 'ₒ': 'o', 'ᵣ': 'r', 'ᵤ': 'u', 'ᵥ': 'v', 'ₓ': 'x', 'Ё': 'YO', 'Й': 'I', 'Ц': 'TS', 'У': 'U', 'К': 'K', 'Е': 'E', 'Н': 'N', 'Г': 'G', 'Ш': 'SH', 'Щ': 'SCH', 'З': 'Z', 'Х': 'H', 'Ъ': '', 'ё': 'yo', 'й': 'i', 'ц': 'ts', 'у': 'u', 'к': 'k', 'е': 'e', 'н': 'n', 'г': 'g', 'ш': 'sh', 'щ': 'sch', 'з': 'z', 'х': 'h', 'ъ': '', 'Ф': 'F', 'Ы': 'I', 'В': 'V', 'А': 'A', 'П': 'P', 'Р': 'R', 'О': 'O', 'Л': 'L', 'Д': 'D', 'Ж': 'ZH', 'Э': 'E', 'ф': 'f', 'ы': 'i', 'в': 'v', 'а': 'a', 'п': 'p', 'р': 'r', 'о': 'o', 'л': 'l', 'д': 'd', 'ж': 'zh', 'э': 'e', 'Я': 'Ya', 'Ч': 'CH', 'С': 'S', 'М': 'M', 'И': 'I', 'Т': 'T', 'Ь': '', 'Б': 'B', 'Ю': 'YU', 'я': 'ya', 'ч': 'ch', 'с': 's', 'м': 'm', 'и': 'i', 'т': 't', 'ь': '', 'б': 'b', 'ю': 'yu'};\n\nexport default LatinizeMap;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LatinizeMap from '../config/latinizeMap';\n\nexport const badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\nconst trimRe = /^\\s+|\\s$/g;\n\nconst C2L: {[k: string]: string} = {\n  'й': 'q',\n  'ц': 'w',\n  'у': 'e',\n  'к': 'r',\n  'е': 't',\n  'н': 'y',\n  'г': 'u',\n  'ш': 'i',\n  'щ': 'o',\n  'з': 'p',\n  'х': '[',\n  'ъ': ']',\n  'ф': 'a',\n  'ы': 's',\n  'в': 'd',\n  'а': 'f',\n  'п': 'g',\n  'р': 'h',\n  'о': 'j',\n  'л': 'k',\n  'д': 'l',\n  'ж': ';',\n  'э': '\\'',\n  'я': 'z',\n  'ч': 'x',\n  'с': 'c',\n  'м': 'v',\n  'и': 'b',\n  'т': 'n',\n  'ь': 'm',\n  'б': ',',\n  'ю': '.',\n  '.': '/'\n};\n\nexport function clearBadCharsAndTrim(text: string) {\n  return text.replace(badCharsRe, '').replace(trimRe, '');\n}\n\nexport function fixCyrillic(text: string) {\n  return text.toLowerCase().replace(/[\\wа-я]/g, (ch) => {\n    const latinizeCh = C2L[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport function latinizeString(text: string) {\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\n    const latinizeCh = LatinizeMap[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport default function cleanSearchText(text: string, latinize = true) {\n  return processSearchText(text, {\n    clearBadChars: true,\n    latinize,\n    ignoreCase: true\n  });\n}\n\nexport type ProcessSearchTextOptions = Partial<{\n  clearBadChars: boolean,\n  latinize: boolean,\n  ignoreCase: boolean,\n  includeTag: boolean\n}>;\n\nexport function processSearchText(text = '', options: ProcessSearchTextOptions = {}) {\n  const hasTag = options.includeTag && text.charAt(0) === '%';\n  const originalText = text;\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\n  if(options.latinize) text = latinizeString(text);\n  if(options.ignoreCase) text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n  if(options.latinize) text += '\\x01' + fixCyrillic(originalText);\n  return text;\n}\n","export default function flatten<T>(arr: T[][]): T[] {\n  return arr.reduce((acc, val) => (acc.push(...val), acc), []);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {processSearchText, ProcessSearchTextOptions} from '../helpers/cleanSearchText';\nimport flatten from '../helpers/array/flatten';\n\ntype SearchIndexOptions = ProcessSearchTextOptions & {\n  minChars?: number,\n  fullWords?: boolean\n};\n\nexport default class SearchIndex<SearchWhat> {\n  private fullTexts: Map<SearchWhat, string> = new Map();\n\n  // minChars can be 0 because it requires at least one word (one symbol) to be found\n  constructor(private options: SearchIndexOptions = {}) {\n    options.minChars ??= 0;\n  }\n\n  public indexObject(id: SearchWhat, searchText: string) {\n    /* if(searchIndex.fullTexts.hasOwnProperty(id)) {\n      return false;\n    } */\n\n    if(searchText.trim()) {\n      searchText = this.processSearchText(searchText);\n    }\n\n    if(!searchText) {\n      this.fullTexts.delete(id);\n      return false;\n    }\n\n    this.fullTexts.set(id, searchText);\n\n    /* const shortIndexes = searchIndex.shortIndexes;\n    searchText.split(' ').forEach((searchWord) => {\n      let len = Math.min(searchWord.length, 3),\n        wordPart, i;\n      for(i = 1; i <= len; i++) {\n        wordPart = searchWord.substr(0, i);\n        if(shortIndexes[wordPart] === undefined) {\n          shortIndexes[wordPart] = [id];\n        } else {\n          shortIndexes[wordPart].push(id);\n        }\n      }\n    }); */\n  }\n\n  private _search(\n    query: string,\n    queryWords = query.split(' ').filter((word) => word.trim())\n  ) {\n    const newFoundObjs: Array<{fullText: string, fullTextLength: number, what: SearchWhat, foundChars: number}> = [];\n    const fullTexts = this.fullTexts;\n    const queryWordsLength = queryWords.length;\n    fullTexts.forEach((fullText, what) => {\n      let found = true;\n      let foundChars = 0;\n      for(let i = 0; i < queryWordsLength; ++i) { // * verify that all words are found\n        const word = queryWords[i];\n        const idx = fullText.indexOf(word);\n        const isLastWord = i === queryWordsLength - 1;\n        if(\n          idx === -1 ||\n          (this.options.fullWords && !isLastWord && fullText[idx + word.length] !== ' ') || // if not last word, then next char must be space\n          (idx !== 0 && fullText[idx - 1] !== ' '/*  && !badCharsRe.test(fullText[idx - 1]) */)) { // * search only from word beginning\n          found = false;\n          break;\n        }\n\n        foundChars += word.length;\n      }\n\n      if(found) {\n        foundChars += queryWordsLength - 1;\n        const fullTextLength = fullText.length;\n        if(this.options.minChars <= foundChars || fullTextLength <= foundChars) {\n          newFoundObjs.push({fullText, fullTextLength, what, foundChars});\n        }\n      }\n    });\n\n    return newFoundObjs;\n  }\n\n  public search(query: string) {\n    query = this.processSearchText(query);\n\n    const queries = query.split('\\x01');\n    const results = queries.map((query) => this._search(query));\n    const newFoundObjs = flatten(results);\n\n    newFoundObjs.sort((a, b) => a.fullTextLength - b.fullTextLength || b.foundChars - a.foundChars);\n\n    // newFoundObjs.sort((a, b) => a.fullText.localeCompare(b.fullText));\n    const newFoundObjs2: Set<SearchWhat> = new Set(newFoundObjs.map((o) => o.what));\n\n    return newFoundObjs2;\n  }\n\n  public processSearchText(query: string) {\n    return this.options ? processSearchText(query, this.options) : query;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function compareLong(str1: string, str2: string) {\n  const str1Length = str1.length;\n  if(str1Length !== str2.length) {\n    const diff = str1Length - str2.length;\n    return diff < 0 ? -1 : (diff > 0 ? 1 : 0);\n  }\n\n  const maxPartLength = 15;\n  for(let i = 0; i < str1Length; i += maxPartLength) {\n    const v1 = +str1.slice(i, i + maxPartLength);\n    const v2 = +str2.slice(i, i + maxPartLength);\n    const diff = v1 - v2;\n    if(diff) {\n      return diff;\n    }\n  }\n\n  return 0;\n}\n","import compareLong from './long/compareLong';\n\nexport default function compareValue(val1: string | number, val2: typeof val1) {\n  if((val1 as number).toExponential) {\n    const diff = (val1 as number) - (val2 as number);\n    return diff < 0 ? -1 : (diff > 0 ? 1 : 0);\n  }\n\n  return compareLong(val1 as string, val2 as string);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport indexOfAndSplice from './array/indexOfAndSplice';\nimport compareValue from './compareValue';\n\n/**\n * Descend sorted storage\n */\n\ntype ItemType = number | string;\n\nexport enum SliceEnd {\n  None = 0,\n  Top = 1,\n  Bottom = 2,\n  Both = SliceEnd.Top | SliceEnd.Bottom\n};\n\nexport interface Slice<T extends ItemType> extends Array<T> {\n  // slicedArray: SlicedArray;\n  end: SliceEnd;\n\n  isEnd: (side: SliceEnd) => boolean;\n  setEnd: (side: SliceEnd) => void;\n  unsetEnd: (side: SliceEnd) => void;\n  getEnds: () => {top: boolean, bottom: boolean, both: boolean};\n\n  slice: (from?: number, to?: number) => Slice<T>;\n  splice: (start: number, deleteCount: number, ...items: ItemType[]) => Slice<T>;\n}\n\nexport interface SliceConstructor<T extends ItemType> {\n  // new(...items: T[]): Slice<T>;\n  new(length: number): Slice<T>;\n}\n\nexport type SliceSerialized<T extends ItemType> = {\n  values: Slice<T>,\n  isEnd: {\n    top: boolean,\n    bottom: boolean,\n    both: boolean\n  }\n};\n\nexport type SlicedArraySerialized<T extends ItemType> = {\n  slices: SliceSerialized<T>[]\n};\n\nexport default class SlicedArray<T extends ItemType> {\n  private slices: Slice<T>[]/*  = [[7,6,5],[4,3,2],[1,0,-1]] */;\n  private sliceConstructor: SliceConstructor<T>;\n\n  constructor() {\n    // @ts-ignore\n    this.sliceConstructor = SlicedArray.getSliceConstructor(this);\n\n    const first = this.constructSlice();\n    // first.setEnd(SliceEnd.Bottom);\n    this.slices = [first];\n  }\n\n  private static getSliceConstructor(slicedArray: SlicedArray<ItemType>) {\n    return class Slice<T> extends Array<ItemType> implements Slice<T> {\n      // slicedArray: SlicedArray;\n      end: SliceEnd = SliceEnd.None;\n\n      /* constructor(...items: ItemType[]) {\n        super(...items);\n        //this.slicedArray = slicedArray;\n      } */\n\n      isEnd(side: SliceEnd): boolean {\n        if((this.end & side) === side) {\n          return true;\n        }/*  else if(!this.slicedArray) {\n          return false;\n        } */\n\n        let isEnd = false;\n        if(side === SliceEnd.Top) {\n          const slice = slicedArray.last;\n          isEnd = slice.end & side ? this.includes(slice[slice.length - 1])/*  || !slice.length */ : false;\n        } else if(side === SliceEnd.Bottom) {\n          const slice = slicedArray.first;\n          isEnd = slice.end & side ? this.includes(slice[0])/*  || !slice.length */ : false;\n        } else if(side === SliceEnd.Both) {\n          return this.isEnd(SliceEnd.Top) && this.isEnd(SliceEnd.Bottom);\n        }\n\n        if(isEnd) {\n          this.setEnd(side);\n        }\n\n        return isEnd;\n      }\n\n      getEnds() {\n        return {\n          top: this.isEnd(SliceEnd.Top),\n          bottom: this.isEnd(SliceEnd.Bottom),\n          both: this.isEnd(SliceEnd.Both)\n        };\n      }\n\n      setEnd(side: SliceEnd) {\n        this.end |= side;\n      }\n\n      unsetEnd(side: SliceEnd) {\n        this.end &= ~side;\n      }\n\n      splice(start: number, deleteCount: number, ...items: ItemType[]) {\n        const ret = super.splice(start, deleteCount, ...items);\n\n        if(!this.length) {\n          const slices = slicedArray.slices as ItemType[][];\n          const idx = slices.indexOf(this);\n          if(idx !== -1) {\n            if(slices.length === 1) { // left empty slice without ends\n              this.unsetEnd(SliceEnd.Both);\n            } else { // delete this slice\n              slices.splice(idx, 1);\n            }\n          }\n        }\n\n        return ret;\n      }\n    }\n  }\n\n  public constructSlice(...items: T[]) {\n    // const slice = new Slice(this, ...items);\n    // can't pass items directly to constructor because first argument is length\n    const slice = new this.sliceConstructor(items.length);\n    for(let i = 0, length = items.length; i < length; ++i) {\n      slice[i] = items[i];\n    }\n    return slice;\n\n    // ! code below will slow execution in 15 times\n    /* const self = this;\n    const p: Slice = new Proxy(slice, {\n      get: function(target, name: any) {\n        if(name === 'constructor') {\n          const p = new Proxy(Slice, {\n            construct: (target, args) => {\n              return self.constructSlice(...args);\n            }\n          });\n\n          return p;\n        }\n\n        return target[name];\n      }\n    });\n\n    return p; */\n\n    /*\n    var p = slicedArray.constructSlice();\n    p.length = 100000;\n    p.fill(255);\n\n    var a = new Array(100000);\n    a.fill(255);\n\n    var b = 0;\n    var perf = performance.now();\n    for(var i = 0; i < p.length; ++i) {\n        b += p[i];\n    }\n\n    console.log('perf 1', performance.now() - perf);\n\n    b = 0;\n    perf = performance.now();\n    for(var i = 0; i < a.length; ++i) {\n        b += a[i];\n    }\n\n    console.log('perf 2', performance.now() - perf);\n    */\n  }\n\n  public insertSlice(slice: T[], flatten = true) {\n    if(!slice.length) {\n      return;\n    }\n\n    const first = this.slices[0];\n    if(!first.length) {\n      first.push(...slice);\n      return first;\n    }\n\n    const lowerBound = slice[slice.length - 1];\n    const upperBound = slice[0];\n\n    let foundSlice: Slice<T>, lowerIndex = -1, upperIndex = -1, foundSliceIndex = 0;\n    for(; foundSliceIndex < this.slices.length; ++foundSliceIndex) {\n      foundSlice = this.slices[foundSliceIndex];\n      lowerIndex = foundSlice.indexOf(lowerBound);\n      upperIndex = foundSlice.indexOf(upperBound);\n\n      if(upperIndex !== -1 && -1 !== lowerIndex) {\n        break;\n      } else if(upperIndex !== -1 || -1 !== lowerIndex) {\n        break;\n      }\n    }\n\n    if(upperIndex !== -1 && -1 !== lowerIndex) {\n\n    } else if(upperIndex !== -1) {  // ([1, 2, 3] | [1, 2, 3, 4, 5]) -> [1, 2, 3, 4, 5]\n      const sliced = slice.slice(foundSlice.length - upperIndex);\n      foundSlice.push(...sliced);\n    } else if(lowerIndex !== -1) {  // ([1, 2, 3] | [-1, 0, 1]) -> [-1, 0, 1, 2, 3]\n      const sliced = slice.slice(0, slice.length - lowerIndex - 1);\n      foundSlice.unshift(...sliced);\n    } else {\n      let insertIndex = 0;\n      for(const length = this.slices.length; insertIndex < length; ++insertIndex) { // * maybe should iterate from the end, could be faster ?\n        const s = this.slices[insertIndex];\n        if(compareValue(slice[0], s[0]) === 1) {\n          break;\n        }\n      }\n\n      this.slices.splice(insertIndex, 0, this.constructSlice(...slice));\n      foundSliceIndex = insertIndex;\n    }\n\n    if(flatten) {\n      return this.flatten(foundSliceIndex);\n    }\n  }\n\n  private flatten(foundSliceIndex: number) {\n    if(this.slices.length >= 2) {\n      for(let i = 0, length = this.slices.length; i < (length - 1); ++i) {\n        const prevSlice = this.slices[i];\n        const nextSlice = this.slices[i + 1];\n\n        const upperIndex = prevSlice.indexOf(nextSlice[0]);\n        if(upperIndex !== -1) {\n          prevSlice.setEnd(nextSlice.end);\n          this.slices.splice(i + 1, 1);\n\n          if(i < foundSliceIndex) {\n            --foundSliceIndex;\n          }\n\n          --length; // respect array bounds\n          --i;      // repeat from the same place\n\n          this.insertSlice(nextSlice, false);\n        }\n      }\n    }\n\n    return this.slices[foundSliceIndex];\n  }\n\n  // *\n\n  get first() {\n    return this.slices[0];\n  }\n\n  get last() {\n    return this.slices[this.slices.length - 1];\n  }\n\n  get slice() {\n    return this.first;\n  }\n\n  get length() {\n    return this.slice.length;\n  }\n\n  public findSlice(item: T) {\n    for(let i = 0, length = this.slices.length; i < length; ++i) {\n      const slice = this.slices[i];\n      const index = slice.indexOf(item);\n      if(index !== -1) {\n        return {slice, index};\n      }\n    }\n\n    return undefined;\n  }\n\n  public findSliceOffset(maxId: T) {\n    let slice: Slice<T>;\n    for(let i = 0; i < this.slices.length; ++i) {\n      let offset = 0;\n      slice = this.slices[i];\n      if(slice.length < 2) {\n        continue;\n      }\n\n      for(; offset < slice.length; ++offset) {\n        if(compareValue(maxId, slice[offset]) >= 0) {\n          /* if(!offset) { // because can't find 3 in [[5,4], [2,1]]\n            return undefined;\n          } */\n\n          return {\n            slice,\n            offset: maxId === slice[offset] ? offset : offset - 1\n          };\n        }\n      }\n    }\n\n    if(slice && slice.isEnd(SliceEnd.Top)) {\n      return {\n        slice,\n        offset: slice.length\n      };\n    }\n\n    return undefined;\n  }\n\n  // * https://core.telegram.org/api/offsets\n  public sliceMe(offsetId: T, addOffset: number, limit: number) {\n    let slice = this.slice;\n    let offset = 0;\n    let sliceOffset = 0;\n\n    if(offsetId) {\n      const pos = this.findSliceOffset(offsetId);\n      if(!pos) {\n        return undefined;\n      }\n\n      slice = pos.slice;\n      offset = sliceOffset = pos.offset;\n\n      if(slice.includes(offsetId)) {\n        sliceOffset += 1;\n      }\n\n      /* if(slice.includes(offsetId) && add_offset < 0) {\n        add_offset += 1;\n      } */\n    }\n\n    const sliceStart = Math.max(sliceOffset + addOffset, 0);\n    const sliceEnd = sliceOffset + addOffset + limit;\n    // const fixHalfBackLimit = add_offset && !(limit / add_offset % 2) && (sliceEnd % 2) ? 1 : 0;\n    // sliceEnd += fixHalfBackLimit;\n\n    const sliced = slice.slice(sliceStart, sliceEnd) as Slice<T>;\n\n    const topWasMeantToLoad = addOffset < 0 ? limit + addOffset : limit;\n    const bottomWasMeantToLoad = Math.abs(addOffset);\n\n    // can use 'slice' here to check because if it's end, then 'sliced' is out of 'slice'\n    // useful when there is only 1 message in chat on its reopening\n    const topFulfilled = (slice.length - sliceOffset) >= topWasMeantToLoad || (slice.isEnd(SliceEnd.Top) ? (sliced.setEnd(SliceEnd.Top), true) : false);\n    const bottomFulfilled = (sliceOffset - bottomWasMeantToLoad) >= 0 || (slice.isEnd(SliceEnd.Bottom) ? (sliced.setEnd(SliceEnd.Bottom), true) : false);\n\n    // if(topFulfilled) sliced.isEnd(SliceEnd.Top);\n    // if(bottomFulfilled) sliced.isEnd(SliceEnd.Bottom);\n\n    return {\n      slice: sliced,\n      offsetIdOffset: offset,\n      fulfilled: SliceEnd.None | (topFulfilled && bottomFulfilled ? SliceEnd.Both : ((topFulfilled ? SliceEnd.Top : SliceEnd.None) | (bottomFulfilled ? SliceEnd.Bottom : SliceEnd.None)))\n    };\n  }\n\n  public unshift(...items: T[]) {\n    let slice = this.first;\n    if(!slice.length) {\n      slice.setEnd(SliceEnd.Bottom);\n    } else if(!slice.isEnd(SliceEnd.Bottom)) {\n      slice = this.constructSlice();\n      slice.setEnd(SliceEnd.Bottom);\n      this.slices.unshift(slice);\n    }\n\n    slice.unshift(...items);\n  }\n\n  public push(...items: T[]) {\n    let slice = this.last;\n    if(!slice.length) {\n      slice.setEnd(SliceEnd.Top);\n    } else if(!slice.isEnd(SliceEnd.Top)) {\n      slice = this.constructSlice();\n      slice.setEnd(SliceEnd.Top);\n      this.slices.push(slice);\n    }\n\n    slice.push(...items);\n  }\n\n  public delete(item: T) {\n    const found = this.findSlice(item);\n    if(found) {\n      found.slice.splice(found.index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  public deleteSlice(slice: Slice<T>) {\n    indexOfAndSplice(this.slices, slice);\n  }\n\n  public toJSON() {\n    const slices: SlicedArraySerialized<T>['slices'] = this.slices.map((slice) => {\n      return {\n        values: slice.slice(),\n        isEnd: slice.getEnds()\n      };\n    });\n\n    const serialized: SlicedArraySerialized<T> = {\n      slices\n    };\n\n    return JSON.stringify(serialized);\n  }\n\n  public static fromJSON<T extends ItemType>(json: string) {\n    const parsed: SlicedArraySerialized<T> = JSON.parse(json);\n    const sliced = new SlicedArray<T>();\n    parsed.slices.forEach((slice) => {\n      const inserted = sliced.insertSlice(slice.values) || sliced.first;\n      if(slice.isEnd.top) inserted.setEnd(SliceEnd.Top);\n      if(slice.isEnd.bottom) inserted.setEnd(SliceEnd.Bottom);\n    });\n\n    return sliced;\n  }\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.SlicedArray = SlicedArray);\n","export default function forEachReverse<T>(array: Array<T>, callback: (value: T, index?: number, array?: Array<T>) => void) {\n  for(let length = array.length, i = length - 1; i >= 0; --i) {\n    callback(array[i], i, array);\n  }\n};\n","export default function insertInDescendSortedArray<T extends {[smth in K]?: number}, K extends keyof T>(array: Array<T>, element: T, getProperty: K, pos?: number): number;\nexport default function insertInDescendSortedArray<T>(array: Array<T>, element: T, getProperty?: (element: T) => number, pos?: number): number;\nexport default function insertInDescendSortedArray<T extends {[smth in K]?: number}, K extends keyof T>(array: Array<T>, element: T, getProperty: K | ((element: T) => T[K]), pos?: number): number {\n  if(!getProperty) {\n    getProperty = (element) => element as any;\n  } else if(typeof(getProperty) !== 'function') {\n    const property = getProperty;\n    getProperty = (element) => element[property];\n  }\n\n  const sortProperty: number = getProperty(element);\n\n  pos ??= array.indexOf(element);\n  if(pos !== -1) {\n    const prev = array[pos - 1];\n    const next = array[pos + 1];\n    if((!prev || getProperty(prev) >= sortProperty) && (!next || getProperty(next) <= sortProperty)) {\n      // console.warn('same pos', pos, sortProperty, prev, next);\n      return pos;\n    }\n\n    array.splice(pos, 1);\n  }\n\n  const len = array.length;\n  if(!len || sortProperty <= getProperty(array[len - 1])) {\n    return array.push(element) - 1;\n  } else if(sortProperty >= getProperty(array[0])) {\n    array.unshift(element);\n    return 0;\n  } else {\n    for(let i = 0; i < len; i++) {\n      if(sortProperty > getProperty(array[i])) {\n        array.splice(i, 0, element);\n        return i;\n      }\n    }\n  }\n\n  console.error('wtf', array, element);\n  return array.indexOf(element);\n}\n","export default function safeReplaceObject(wasObject: any, newObject: any) {\n  if(!wasObject) {\n    return newObject;\n  }\n\n  for(var key in wasObject) {\n    if(!newObject.hasOwnProperty(key)) {\n      delete wasObject[key];\n    }\n  }\n\n  for(var key in newObject) {\n    // if (newObject.hasOwnProperty(key)) { // useless\n    wasObject[key] = newObject[key];\n    // }\n  }\n\n  return wasObject;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MESSAGE_ID_OFFSET} from '../../../mtproto/mtproto_config';\n\nexport default function clearMessageId(messageId: number, toServer?: boolean) {\n  if(messageId === undefined) {\n    return;\n  }\n\n  messageId = +messageId.toFixed(0);\n  if(!toServer) {\n    return messageId;\n  }\n\n  return messageId < MESSAGE_ID_OFFSET ? messageId : messageId % MESSAGE_ID_OFFSET;\n  // const q = MESSAGE_ID_OFFSET;\n  // if(messageId < q) { // id 0 -> mid 0xFFFFFFFF, so 0xFFFFFFFF must convert to 0\n  //   return messageId;\n  // }\n\n  // const l = MESSAGE_ID_INCREMENT - 1;\n  // const used = messageId & l;\n  // if(used !== l) {\n  //   messageId -= used + 1;\n  // }\n\n  // return toServer ? (messageId - q) / MESSAGE_ID_INCREMENT : messageId;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport clearMessageId from './clearMessageId';\n\n/**\n * * will ignore outgoing offset\n */\nexport default function getServerMessageId(messageId: number) {\n  return clearMessageId(messageId, true);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {DialogFilter} from '../../../../layer';\n\nexport default function getDialogIndexKey(localId: DialogFilter.dialogFilter['localId'] = 0) {\n  return `index_${localId}` as const;\n  // return filterId !== undefined && filterId > 1 ? `filter_${filterId}` as const : 'main' as const;\n  // const indexStr = filterId > 1 ?\n  //   `index_${filterId}` as const :\n  //   'index' as const;\n\n  // return indexStr;\n}\n","export default function isObject<T extends Record<any, any>>(object: any): object is T {\n  return typeof(object) === 'object' && object !== null;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Dialog, ForumTopic} from '../../../../layer';\nimport type {REAL_FOLDER_ID} from '../../../mtproto/mtproto_config';\nimport getDialogIndexKey from './getDialogIndexKey';\n\nexport default function getDialogIndex(\n  dialog: Dialog.dialog | ForumTopic.forumTopic,\n  indexKey: ReturnType<typeof getDialogIndexKey> = getDialogIndexKey((dialog as Dialog).folder_id as REAL_FOLDER_ID)\n) {\n  return dialog?.[indexKey as 'index_0'];\n}\n","import isObject from '../../../../helpers/object/isObject';\nimport {InputChannel, InputPeer, InputUser, Peer} from '../../../../layer';\nimport {NULL_PEER_ID} from '../../../mtproto/mtproto_config';\n\nexport default function getPeerId(peerId: {user_id: UserId} | {channel_id: ChatId} | {chat_id: ChatId} | InputUser | InputPeer | InputChannel | PeerId | string): PeerId {\n  if(peerId !== undefined && ((peerId as string).isPeerId ? (peerId as string).isPeerId() : false)) return peerId as PeerId;\n  // if(typeof(peerId) === 'string' && /^[uc]/.test(peerId)) return peerId as PeerId;\n  // if(typeof(peerId) === 'number') return peerId;\n  else if(isObject(peerId)) {\n    const userId = (peerId as Peer.peerUser).user_id;\n    if(userId !== undefined) {\n      return userId.toPeerId(false);\n    }\n\n    const chatId = (peerId as Peer.peerChannel).channel_id || (peerId as Peer.peerChat).chat_id;\n    if(chatId !== undefined) {\n      return chatId.toPeerId(true);\n    }\n\n    return NULL_PEER_ID; // maybe it is an inputPeerSelf\n  // } else if(!peerId) return 'u0';\n  } else if(!peerId) return NULL_PEER_ID;\n\n  const isUser = (peerId as string).charAt(0) === 'u';\n  const peerParams = (peerId as string).substr(1).split('_');\n\n  return isUser ? peerParams[0].toPeerId() : (peerParams[0] || '').toPeerId(true);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Message, MessageAction, MessageMedia} from '../../../../layer';\nimport getPeerId from '../peers/getPeerId';\n\nexport default function getPeerIdsFromMessage(message: Message.message | Message.messageService) {\n  const peerIds: number[] = [\n    message.fromId,\n    message.viaBotId,\n    (message as Message.message).fwdFromId\n  ];\n\n  const media = (message as Message.message).media;\n  if(media) {\n    const contactUserId = (media as MessageMedia.messageMediaContact).user_id;\n    if(contactUserId !== undefined) {\n      peerIds.push(contactUserId.toPeerId());\n    }\n\n    const results = (media as MessageMedia.messageMediaPoll).results;\n    const recentVoters = results?.recent_voters;\n    if(recentVoters?.length) {\n      peerIds.push(...recentVoters.map((peer) => getPeerId(peer)));\n    }\n  }\n\n  const recentReactions = ((message as Message.message).reactions)?.recent_reactions;\n  if(recentReactions?.length) {\n    peerIds.push(...recentReactions.map((reaction) => getPeerId(reaction.peer_id)));\n  }\n\n  const action = (message as Message.messageService).action;\n  if(action) {\n    const userIds: UserId[] = [\n      ...((action as MessageAction.messageActionChatAddUser).users || []),\n      (action as MessageAction.messageActionChatDeleteUser).user_id,\n      (action as MessageAction.messageActionChatJoinedByLink).inviter_id\n    ];\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\n\n    const chatIds: ChatId[] = [\n      (action as MessageAction.messageActionChatMigrateTo).channel_id,\n      (action as MessageAction.messageActionChannelMigrateFrom).chat_id\n    ];\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\n  }\n\n  const recentRepliers = ((message as Message.message).replies)?.recent_repliers;\n  if(recentRepliers?.length) {\n    peerIds.push(...recentRepliers.map((reply) => getPeerId(reply)));\n  }\n\n  return new Set(peerIds.filter(Boolean));\n}\n","export default function defineNotNumerableProperties<T extends any>(obj: T, names: (keyof T)[]) {\n  // const perf = performance.now();\n  const props = {writable: true, configurable: true};\n  const out: {[name in keyof T]?: typeof props} = {};\n  names.forEach((name) => {\n    if(!obj.hasOwnProperty(name)) {\n      out[name] = props;\n    }\n  });\n  Object.defineProperties(obj, out);\n  // console.log('defineNotNumerableProperties time:', performance.now() - perf);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {ForumTopic} from '../../../../layer';\nimport type {Dialog} from '../../appMessagesManager';\nimport type getDialogIndexKey from './getDialogIndexKey';\n\nexport default function setDialogIndex(\n  dialog: Dialog | ForumTopic.forumTopic,\n  indexKey: ReturnType<typeof getDialogIndexKey>,\n  index: number\n) {\n  return (dialog as Dialog)[indexKey] = index;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {Chat, ForumTopic as MTForumTopic, DialogPeer, Message, MessageAction, MessageMedia, MessagesForumTopics, MessagesPeerDialogs, Update, Peer} from '../../layer';\nimport type {Dialog, ForumTopic, MyMessage} from '../appManagers/appMessagesManager';\nimport type DATABASE_STATE from '../../config/databases/state';\nimport tsNow from '../../helpers/tsNow';\nimport SearchIndex from '../searchIndex';\nimport {SliceEnd} from '../../helpers/slicedArray';\nimport {MyDialogFilter} from './filters';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, NULL_PEER_ID, REAL_FOLDERS, REAL_FOLDER_ID} from '../mtproto/mtproto_config';\nimport {MaybePromise, NoneToVoidFunction} from '../../types';\nimport ctx from '../../environment/ctx';\nimport AppStorage from '../storage';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport getServerMessageId from '../appManagers/utils/messageId/getServerMessageId';\nimport {AppManager} from '../appManagers/manager';\nimport getDialogIndexKey from '../appManagers/utils/dialogs/getDialogIndexKey';\nimport isObject from '../../helpers/object/isObject';\nimport getDialogIndex from '../appManagers/utils/dialogs/getDialogIndex';\nimport getPeerIdsFromMessage from '../appManagers/utils/messages/getPeerIdsFromMessage';\nimport {AppStoragesManager} from '../appManagers/appStoragesManager';\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\nimport setDialogIndex from '../appManagers/utils/dialogs/setDialogIndex';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\nimport {BroadcastEvents} from '../rootScope';\nimport assumeType from '../../helpers/assumeType';\nimport makeError from '../../helpers/makeError';\nimport callbackify from '../../helpers/callbackify';\n\nexport type FolderDialog = {\n  dialog: Dialog,\n  index: number\n};\n\nexport type Folder = {\n  dialogs: (Dialog | ForumTopic)[],\n  id: number,\n  unreadMessagesCount: number,\n  unreadPeerIds: Set<PeerId>,\n  unreadUnmutedPeerIds: Set<PeerId>,\n  dispatchUnreadTimeout?: number\n};\n\nexport const GLOBAL_FOLDER_ID: REAL_FOLDER_ID = undefined;\n\n// let spentTime = 0;\nexport default class DialogsStorage extends AppManager {\n  private storage: AppStoragesManager['storages']['dialogs'];\n\n  private dialogs: {[peerId: PeerId]: Dialog};\n\n  private folders: {[folderId: number]: Folder};\n\n  private allDialogsLoaded: {[folder_id: number]: boolean};\n  private dialogsOffsetDate: {[folder_id: number]: number};\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\n  private dialogsNum: number;\n\n  private dialogsIndex: SearchIndex<PeerId>;\n\n  private cachedResults: {\n    query: string,\n    count: number,\n    dialogs: Dialog[],\n    folderId: number\n  };\n\n  private forumTopics: Map<PeerId, {\n    topics: Map<number, ForumTopic>,\n    deletedTopics: Set<number>,\n    getTopicPromises: Map<number, CancellablePromise<ForumTopic>>,\n    getTopicsPromise?: Promise<any>\n  }>;\n\n  protected after() {\n    this.clear(true);\n\n    const onFilterUpdate = (filter: MyDialogFilter) => {\n      const dialogs = this.getCachedDialogs(false);\n      for(let i = 0; i < dialogs.length; ++i) {\n        this.processDialogForFilter(dialogs[i], filter);\n      }\n    };\n\n    this.rootScope.addEventListener('filter_order', () => {\n      const dialogs = this.getCachedDialogs(false);\n      // const indexKeys: ReturnType<DialogsStorage['getDialogIndexKey']>[] = [];\n      for(const filterId in this.folders) {\n        if(+filterId > 1) {\n          delete this.folders[filterId];\n        }\n\n        // indexKeys.push(this.getDialogIndexKey(+filterId));\n      }\n\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        // for(const indexKey of indexKeys) {\n        //   delete dialog[indexKey];\n        // }\n\n        this.processDialogForFilters(dialog);\n      }\n    });\n\n    this.rootScope.addEventListener('filter_update', onFilterUpdate);\n    this.rootScope.addEventListener('filter_new', onFilterUpdate);\n\n    this.rootScope.addEventListener('filter_delete', (filter) => {\n      const dialogs = this.getCachedDialogs(false);\n\n      const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        delete dialog[indexKey];\n      }\n\n      delete this.folders[filter.id];\n    });\n\n    this.rootScope.addEventListener('dialog_notify_settings', (dialog) => {\n      this.processChangedUnreadOrUnmuted(dialog.peerId);\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const chat = this.appChatsManager.getChat(chatId);\n\n      const peerId = chatId.toPeerId(true);\n      if((chat as Chat.chat).pFlags.left && this.getDialogOnly(peerId)) {\n        this.dropDialogOnDeletion(peerId);\n      }\n    });\n\n    this.rootScope.addEventListener('chat_toggle_forum', ({chatId, enabled}) => {\n      const peerId = chatId.toPeerId(true);\n      if(!enabled) {\n        this.flushForumTopicsCache(peerId);\n      }\n\n      this.processChangedUnreadOrUnmuted(peerId);\n    });\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateFolderPeers: this.onUpdateFolderPeers,\n\n      updateDialogPinned: this.onUpdateDialogPinned,\n\n      updateChannelPinnedTopic: this.onUpdateChannelPinnedTopic,\n\n      updatePinnedDialogs: this.onUpdatePinnedDialogs,\n\n      updateChannelPinnedTopics: this.onUpdateChannelPinnedTopics\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('dialogs')\n    ]).then(([state, {results: dialogs, storage}]) => {\n      this.storage = storage;\n      this.dialogs = this.storage.getCache();\n\n      for(const folderId of REAL_FOLDERS) {\n        const order = state.pinnedOrders[folderId];\n        if(!order) {\n          continue;\n        }\n\n        const _order = this.getPinnedOrders(folderId);\n        _order.splice(0, _order.length, ...order);\n      }\n\n      if(dialogs.length) {\n        AppStorage.freezeSaving<typeof DATABASE_STATE>(this.setDialogsFromState.bind(this, dialogs), ['chats', 'dialogs', 'messages', 'users']);\n      }\n\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\n\n      if(dialogs.length) {\n        this.appDraftsManager.addMissedDialogs();\n      }\n    });\n  }\n\n  public indexMyDialog() {\n    const peerId = this.appUsersManager.getSelf().id.toPeerId(false);\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog) {\n      const peerText = this.appPeersManager.getPeerSearchText(peerId);\n      this.dialogsIndex.indexObject(peerId, peerText);\n    }\n  }\n\n  private setDialogsFromState(dialogs: Dialog[]) {\n    for(let i = 0, length = dialogs.length; i < length; ++i) {\n      const dialog = dialogs[i];\n      if(!dialog) {\n        continue;\n      }\n\n      // if(dialog.peerId !== SERVICE_PEER_ID) {\n      dialog.top_message = getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\n      // }\n\n      if(dialog.topMessage) {\n        this.appMessagesManager.saveMessages([dialog.topMessage]);\n      }\n\n      for(let i = 0; i <= 21; ++i) {\n        const indexKey: ReturnType<typeof getDialogIndexKey> = `index_${i}` as any;\n        delete dialog[indexKey];\n      }\n      // delete dialog.indexes;\n\n      this.saveDialog({\n        dialog,\n        ignoreOffsetDate: true\n      });\n\n      // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\n      const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      if(!message) {\n        this.appMessagesManager.reloadConversation(dialog.peerId);\n      }\n    }\n  }\n\n  public isDialogsLoaded(folderId: number) {\n    return !!this.allDialogsLoaded[folderId];\n  }\n\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\n    const isForum = this.isFilterIdForForum(folderId);\n\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\n      this.allDialogsLoaded[FOLDER_ID_ALL] = loaded;\n      this.allDialogsLoaded[FOLDER_ID_ARCHIVE] = loaded;\n    } else {\n      if(isForum) {\n        defineNotNumerableProperties(this.allDialogsLoaded, [folderId]);\n      }\n\n      this.allDialogsLoaded[folderId] = loaded;\n    }\n\n    if(isForum) {\n      return;\n    }\n\n    if(Array.from(REAL_FOLDERS).every((folderId) => this.allDialogsLoaded[folderId])) {\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\n    }\n\n    this.saveAllDialogsLoaded();\n  }\n\n  private saveAllDialogsLoaded() {\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      this.storage.clear();\n\n      this.allDialogsLoaded = {};\n      this.saveAllDialogsLoaded();\n\n      // * clear not numerable properties\n      this.pinnedOrders = Object.assign({}, this.pinnedOrders);\n      for(const folderId of REAL_FOLDERS) {\n        this.resetPinnedOrder(folderId);\n      }\n      this.savePinnedOrders();\n    } else {\n      this.allDialogsLoaded = {};\n      this.pinnedOrders = {};\n      for(const folderId of REAL_FOLDERS) {\n        this.pinnedOrders[folderId] = [];\n      }\n    }\n\n    this.forumTopics = new Map();\n    this.folders = {};\n    this.dialogsOffsetDate = {};\n    this.dialogsNum = 0;\n    this.dialogsIndex = new SearchIndex({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n    this.cachedResults = {\n      query: '',\n      count: 0,\n      dialogs: [],\n      folderId: 0\n    };\n  };\n\n  public handleDialogUnpinning(dialog: Dialog | ForumTopic, folderId: number) {\n    delete dialog.pFlags.pinned;\n    indexOfAndSplice(this.getPinnedOrders(folderId), this.isFilterIdForForum(folderId) ? (dialog as ForumTopic).id : dialog.peerId);\n    this.savePinnedOrders();\n  }\n\n  public savePinnedOrders() {\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n  }\n\n  public resetPinnedOrder(folderId: number) {\n    this.getPinnedOrders(folderId).length = 0;\n  }\n\n  public getPinnedOrders(folderId: number) {\n    let orders = this.pinnedOrders[folderId];\n    if(!orders && this.isFilterIdForForum(folderId)) {\n      defineNotNumerableProperties(this.pinnedOrders, [folderId]);\n      orders = this.pinnedOrders[folderId] = [];\n    }\n\n    return orders;\n  }\n\n  public isDialogPinned(peerId: PeerId, folderId: number) {\n    const filter = this.filtersStorage.getFilter(folderId);\n    let isPinned: boolean;\n    if(filter) {\n      isPinned = filter.pinnedPeerIds.indexOf(peerId) !== -1;\n    } else {\n      isPinned = !!this.getDialogOnly(peerId).pFlags.pinned;\n    }\n\n    return isPinned;\n  }\n\n  public getOffsetDate(folderId: number): number {\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\n      return Math.min(...Array.from(REAL_FOLDERS).sort((a, b) => a - b));\n    }\n\n    return offsetDate;\n  }\n\n  private generateFolder(id: number) {\n    const folder: Folder = {\n      dialogs: [],\n      id,\n      unreadMessagesCount: 0,\n      unreadPeerIds: new Set(),\n      unreadUnmutedPeerIds: new Set()\n    };\n\n    defineNotNumerableProperties(folder, ['dispatchUnreadTimeout']);\n\n    return folder;\n  }\n\n  public getFolder(id: number) {\n    return this.folders[id] ??= this.generateFolder(id);\n  }\n\n  public isFilterIdForForum(filterId: number) {\n    return filterId && filterId < 0;\n  }\n\n  public getFilterIdForForum(forumTopic: ForumTopic) {\n    return forumTopic.peerId;\n  }\n\n  public getDialogKey(dialog: Dialog | ForumTopic) {\n    return this.isTopic(dialog) ? dialog.id : dialog.peerId;\n  }\n\n  public getFolderDialogs(id: number, skipMigrated = true): Folder['dialogs'] {\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\n      return this.getCachedDialogs(skipMigrated);\n    }\n\n    const folder = this.getFolder(id);\n    if(this.isFilterIdForForum(id)) {\n      return skipMigrated ? folder.dialogs.filter((forumTopic) => !(forumTopic as ForumTopic).pFlags.hidden) : folder.dialogs;\n    }\n\n    return skipMigrated ? folder.dialogs.filter((dialog) => (dialog as Dialog).migratedTo === undefined) : folder.dialogs;\n  }\n\n  public getNextDialog(currentPeerId: PeerId, next: boolean, filterId: number) {\n    const folder = this.getFolderDialogs(filterId, true);\n    let dialog: Folder['dialogs'][0];\n    if(!currentPeerId) {\n      if(next) {\n        dialog = folder[0];\n      }\n    } else {\n      const idx = folder.findIndex((dialog) => dialog.peerId === currentPeerId);\n      if(idx !== -1) {\n        const nextIndex = next ? idx + 1 : idx - 1;\n        dialog = folder[nextIndex];\n      }\n    }\n\n    return dialog;\n  }\n\n  public getDialogIndexKeyByFilterId(filterId: number) {\n    if(this.isFilterIdForForum(filterId)) return getDialogIndexKey();\n    if(REAL_FOLDERS.has(filterId)) return getDialogIndexKey(filterId as REAL_FOLDER_ID);\n    const filter = this.filtersStorage.getFilter(filterId);\n    return getDialogIndexKey(filter.localId);\n  }\n\n  private isDialogUnmuted(dialog: Dialog | ForumTopic) {\n    return !this.appNotificationsManager.isPeerLocalMuted({\n      peerId: dialog.peerId,\n      respectType: true,\n      threadId: this.isTopic(dialog) ? (dialog as ForumTopic).id : undefined\n    });\n  }\n\n  public getFolderUnreadCount(filterId: number) {\n    const folder = this.getFolder(filterId);\n    return {unreadUnmutedCount: folder.unreadUnmutedPeerIds.size, unreadCount: folder.unreadPeerIds.size};\n  }\n\n  public getCachedDialogs(skipMigrated?: boolean) {\n    const arrays = Array.from(REAL_FOLDERS).map((folderId) => this.getFolderDialogs(folderId, skipMigrated));\n    return [].concat(...arrays) as Dialog[];\n  }\n\n  private setDialogIndexInFilter(\n    dialog: Dialog | ForumTopic,\n    indexKey: ReturnType<typeof getDialogIndexKey>,\n    filter?: MyDialogFilter\n  ) {\n    // if(this.isTopic(dialog)) {\n    //   return dialog['index_0'];\n    // }\n\n    let index: number;\n\n    const isTopic = this.isTopic(dialog);\n    const isRealFolder = isTopic || REAL_FOLDERS.has(filter.id);\n    /* if(isRealFolder) {\n      // index = getDialogIndex(dialog, indexKey);\n      index = this.generateIndexForDialog(dialog, true);\n    } else  */if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n      const pinnedIds = isTopic ?\n        this.getPinnedOrders(this.getFilterIdForForum(dialog)) :\n        filter.pinnedPeerIds;\n\n      const pinnedKey = this.getDialogKey(dialog);\n      const pinnedIndex = pinnedIds.indexOf(pinnedKey);\n\n      if(pinnedIndex !== -1) {\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(pinnedIds.length - 1 - pinnedIndex), true);\n      } else if(dialog.pFlags?.pinned || isRealFolder) {\n        index = this.generateIndexForDialog(dialog, true, undefined, !isRealFolder);\n      } else {\n        index = getDialogIndex(dialog) ?? this.generateIndexForDialog(dialog, true);\n      }\n    }\n\n    // if(!dialog.hasOwnProperty(indexKey)) {\n    //   defineNotNumerableProperties(dialog, [indexKey]);\n    // }\n\n    return setDialogIndex(dialog, indexKey, index);\n  }\n\n  public getDialog(peerId: PeerId, folderId?: number, topicId?: number, skipMigrated = true): [Folder['dialogs'][0], number] | [] {\n    const folders: Folder['dialogs'][] = [];\n\n    if(topicId) {\n      folderId = peerId;\n      // skipMigrated = false;\n    }\n\n    if(folderId === undefined) {\n      folders.push(...Array.from(REAL_FOLDERS).map((folderId) => this.getFolder(folderId).dialogs as Dialog[]));\n    } else {\n      folders.push(this.getFolderDialogs(folderId, false) as Dialog[]);\n    }\n\n    const verify: (d: Folder['dialogs'][0]) => boolean = topicId ?\n      (d) => (d as ForumTopic).id === topicId :\n      (d) => (d as Dialog).peerId === peerId;\n    for(const folder of folders) {\n      let i = 0, skipped = 0;\n      for(let length = folder.length; i < length; ++i) {\n        const dialog = folder[i];\n        if(verify(dialog)) {\n          return [dialog, i - skipped];\n        } else if(skipMigrated && ((dialog as ForumTopic).pFlags.hidden || (dialog as Dialog).migratedTo !== undefined)) {\n          ++skipped;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogs[peerId];\n  }\n\n  public getDialogOrTopic(peerId: PeerId, topicId?: number) {\n    return topicId ? this.getForumTopic(peerId, topicId) : this.dialogs[peerId];\n  }\n\n  public getDialogIndex(\n    peerId: PeerId | Parameters<typeof getDialogIndex>[0],\n    indexKey: ReturnType<typeof getDialogIndexKey>,\n    topicId?: number\n  ) {\n    const dialog = isObject(peerId) ? peerId : this.getDialogOrTopic(peerId, topicId);\n    return getDialogIndex(dialog, indexKey);\n  }\n\n  /*\n  var date = Date.now() / 1000 | 0;\n  var m = date * 0x10000;\n\n  var k = (date + 1) * 0x10000;\n  k - m;\n  65536\n  */\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\n    date ??= tsNow(true) + this.timeManager.getServerTimeOffset();\n    return (date * 0x10000) + (isPinned ? 0 : (++this.dialogsNum & 0xFFFF));\n  }\n\n  // public makeFilterForTopics(id: number): MyDialogFilter {\n  //   return {\n  //     _: 'dialogFilter',\n  //     id,\n\n  //   };\n  // }\n\n  public isTopic(dialog: Dialog | ForumTopic): dialog is ForumTopic {\n    return 'id' in dialog;\n  }\n\n  public processDialogForFilters(dialog: Dialog | ForumTopic, noIndex?: boolean) {\n    // let perf = performance.now();\n    if(this.isTopic(dialog)) {\n      this.processDialogForFilter(dialog, undefined, noIndex);\n      return;\n    }\n\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      this.processDialogForFilter(dialog, filter, noIndex);\n    }\n    // spentTime += (performance.now() - perf);\n    // console.log('generate index time:', spentTime);\n  }\n\n  public processDialogForFilter(\n    dialog: Dialog | ForumTopic,\n    filter?: MyDialogFilter,\n    noIndex?: boolean\n  ) {\n    const isTopic = this.isTopic(dialog);\n    const folderId = isTopic ? this.getFilterIdForForum(dialog) : filter.id;\n\n    const indexKey = isTopic ? 'index_0' : this.getDialogIndexKeyByFilterId(folderId);\n    const folder = this.getFolder(folderId);\n    const dialogs = folder.dialogs;\n\n    const cmp: (d: typeof dialog) => boolean = isTopic ?\n      ((d: ForumTopic) => d.id === dialog.id) as any :\n      ((d: Dialog) => d.peerId === dialog.peerId) as any;\n    const wasIndex = dialogs.findIndex(cmp);\n    const wasDialog = dialogs[wasIndex];\n    const wasDialogIndex = this.getDialogIndex(wasDialog, indexKey);\n\n    if(noIndex && folderId > FOLDER_ID_ARCHIVE) {\n      noIndex = undefined;\n    }\n\n    const newDialogIndex = noIndex ? undefined : this.setDialogIndexInFilter(dialog, indexKey, filter);\n\n    if(wasDialogIndex === newDialogIndex) {\n      return false;\n    }\n\n    if(!!wasDialogIndex !== !!newDialogIndex) {\n      this.prepareFolderUnreadCountModifyingByDialog(folderId, dialog, !!newDialogIndex);\n    }\n\n    if(wasIndex !== -1) {\n      dialogs.splice(wasIndex, 1);\n    }\n\n    if(newDialogIndex) {\n      insertInDescendSortedArray(dialogs, dialog, (dialog) => this.getDialogIndex(dialog, indexKey), -1);\n    }\n\n    return true;\n  }\n\n  public prepareDialogUnreadCountModifying(dialog: Dialog | ForumTopic, toggle?: boolean) {\n    const isTopic = this.isTopic(dialog);\n    const callbacks: NoneToVoidFunction[] = [];\n\n    const folderId = isTopic ? this.getFilterIdForForum(dialog) : dialog.folder_id;\n    callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(folderId, dialog, toggle));\n\n    if(!isTopic) {\n      const filters = this.filtersStorage.getFilters();\n      for(const id in filters) {\n        const filter = filters[id];\n        if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n          callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, toggle));\n        }\n      }\n    }\n\n    return () => !toggle && callbacks.forEach((callback) => callback());\n  }\n\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: Dialog | ForumTopic, toggle?: boolean) {\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n    const wasUnmuted = this.isDialogUnmuted(dialog);\n\n    if(toggle !== undefined) {\n      const addMessagesCount = toggle ? wasUnreadCount : -wasUnreadCount;\n      // this.modifyFolderUnreadCount(folderId, addMessagesCount, !!wasUnreadCount, wasUnreadCount && wasUnmuted, dialog);\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, toggle && !!wasUnreadCount, toggle && !!wasUnreadCount && wasUnmuted, dialog);\n      return;\n    }\n\n    return () => {\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n      const newUnmuted = this.isDialogUnmuted(dialog);\n\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!newUnreadCount, newUnreadCount && newUnmuted, dialog);\n    };\n  }\n\n  public modifyFolderUnreadCount(\n    folderId: number,\n    addMessagesCount: number,\n    toggleDialog: boolean,\n    toggleUnmuted: boolean,\n    dialog: Dialog | ForumTopic\n  ) {\n    const {peerId} = dialog;\n    const isForum = this.appPeersManager.isForum(peerId);\n    const isTopic = this.isTopic(dialog);\n    if(isForum && !isTopic) {\n      const forumUnreadCount = this.getForumUnreadCount(peerId);\n      if(forumUnreadCount instanceof Promise) {\n        forumUnreadCount.then(({count, hasUnmuted}) => {\n          dialog = this.getDialogOnly(peerId);\n          const folder = this.getFolder(folderId);\n          if(\n            !dialog ||\n            !this.appPeersManager.isForum(peerId) ||\n            !folder ||\n            !folder.dialogs.some((dialog) => dialog.peerId === peerId)\n          ) {\n            return;\n          }\n\n          this.modifyFolderUnreadCount(folderId, 0, false, false, dialog);\n        });\n\n        return;\n      } else {\n        addMessagesCount = 0;\n        toggleDialog = forumUnreadCount.count > 0;\n        toggleUnmuted = forumUnreadCount.hasUnmuted;\n      }\n    }\n\n    const folder = this.getFolder(folderId);\n    if(addMessagesCount) {\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\n    }\n\n    const key = this.getDialogKey(dialog);\n    if(toggleDialog) {\n      folder.unreadPeerIds.add(key);\n    } else {\n      folder.unreadPeerIds.delete(key);\n    }\n\n    if(toggleUnmuted) {\n      folder.unreadUnmutedPeerIds.add(key);\n    } else {\n      folder.unreadUnmutedPeerIds.delete(key);\n    }\n\n    folder.dispatchUnreadTimeout ??= ctx.setTimeout(() => {\n      folder.dispatchUnreadTimeout = undefined;\n      const _folder = {...folder};\n      delete _folder.dialogs;\n      this.rootScope.dispatchEvent('folder_unread', _folder);\n\n      if(isTopic) { // * refresh forum dialog unread count\n        this.processChangedUnreadOrUnmuted(peerId);\n      }\n    }, 0);\n  }\n\n  public processChangedUnreadOrUnmuted(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) {\n      return;\n    }\n\n    this.processDialogForFilters(dialog);\n    this.prepareDialogUnreadCountModifying(dialog)(); // * because counter won't be changed if only changed muted status\n    this.rootScope.dispatchEvent('dialog_unread', {\n      peerId,\n      dialog\n    });\n  }\n\n  public generateIndexForDialog(\n    dialog: Dialog | ForumTopic,\n    justReturn?: boolean,\n    message?: MyMessage,\n    noPinnedOrderUpdate?: boolean\n  ) {\n    if(!justReturn/*  && !isTopic */) {\n      return;\n    }\n\n    const isTopic = this.isTopic(dialog);\n    let topDate = 0, isPinned: boolean;\n    if((dialog as ForumTopic).pFlags.hidden) { // general topic must be first\n      topDate = this.generateDialogPinnedDateByIndex(0xFFF);\n      isPinned = true;\n    } else if(dialog.pFlags.pinned && !noPinnedOrderUpdate) {\n      topDate = this.generateDialogPinnedDate(dialog);\n      isPinned = true;\n    } else {\n      const {peerId} = dialog;\n      message ||= this.appMessagesManager.getMessageByPeer(peerId, dialog.top_message);\n\n      topDate = (message as Message.message)?.date || topDate;\n\n      if(!isTopic) {\n        const channelId = this.appPeersManager.isChannel(peerId) && peerId.toChatId();\n        if(channelId) {\n          const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\n          if(!topDate || (channel.date && channel.date > topDate)) {\n            topDate = channel.date;\n          }\n        }\n      }\n\n      if(\n        dialog.draft?._ === 'draftMessage' &&\n        dialog.draft.date > topDate\n      ) {\n        topDate = dialog.draft.date;\n      }\n    }\n\n    topDate ||= tsNow(true);\n\n    const index = this.generateDialogIndex(topDate, isPinned);\n    if(justReturn) {\n      return index;\n    }\n\n    const indexKey = getDialogIndexKey((dialog as Dialog).folder_id);\n    setDialogIndex(dialog, indexKey, index);\n  }\n\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\n  }\n\n  public generateDialogPinnedDate(dialog: Dialog | ForumTopic) {\n    const isTopic = this.isTopic(dialog);\n    const order = this.getPinnedOrders(isTopic ? this.getFilterIdForForum(dialog) : dialog.folder_id);\n\n    const dialogKey = this.getDialogKey(dialog);\n    let pinnedIndex = order.indexOf(dialogKey);\n    if(pinnedIndex === -1) {\n      order.unshift(dialogKey);\n      pinnedIndex = 0;\n\n      if(!isTopic) {\n        this.savePinnedOrders();\n      }\n    }\n\n    return this.generateDialogPinnedDateByIndex(order.length - 1 - pinnedIndex);\n  }\n\n  /* public generateDialog(peerId: PeerId) {\n    const dialog: Dialog = {\n      _: 'dialog',\n      pFlags: {},\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      top_message: 0,\n      read_inbox_max_id: 0,\n      read_outbox_max_id: 0,\n      unread_count: 0,\n      unread_mentions_count: 0,\n      notify_settings: {\n        _: 'peerNotifySettings',\n      },\n    };\n\n    return dialog;\n  } */\n\n  public setDialogToState(dialog: Dialog | ForumTopic) {\n    if(this.isTopic(dialog)) {\n      return;\n    }\n\n    const {peerId, pts} = dialog;\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const messagesStorage = this.appMessagesManager.getHistoryMessagesStorage(peerId);\n    const history = historyStorage.history.slice;\n    let incomingMessage: MyMessage;\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const mid = history[i];\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\n      if(message && !message.pFlags.is_outgoing/*  || peerId === SERVICE_PEER_ID */) {\n        incomingMessage = message;\n\n        const peerIds = getPeerIdsFromMessage(message);\n        this.peersStorage.requestPeersForKey(peerIds, `topMessage_${peerId}`);\n\n        break;\n      }\n    }\n\n    dialog.topMessage = incomingMessage;\n\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\n      dialog.unread_count = 0;\n    }\n\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\n    // CAN TOUCH NOW\n\n    if(peerId.isAnyChat() && pts) {\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\n      dialog.pts = newPts;\n    }\n\n    this.storage.set({\n      [peerId]: dialog\n    });\n\n    this.peersStorage.requestPeer(peerId, 'dialog');\n\n    /* for(let id in this.filtersStorage.filters) {\n      const filter = this.filtersStorage.filters[id];\n\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n\n      }\n    } */\n  }\n\n  public pushDialog({dialog, offsetDate, ignoreOffsetDate, saveGlobalOffset}: {\n    dialog: Dialog | ForumTopic,\n    offsetDate?: number,\n    ignoreOffsetDate?: boolean,\n    saveGlobalOffset?: boolean\n  }) {\n    const isTopic = this.isTopic(dialog);\n    const {folder_id, peerId} = dialog as Dialog;\n\n    if(isTopic) {\n      const forumTopics = this.getForumTopicsCache(peerId);\n      forumTopics.topics.set(dialog.id, dialog);\n    } else {\n      this.dialogs[peerId] = dialog;\n    }\n\n    offsetDate ??= this.getDialogOffsetDate(dialog);\n\n    // if(!isTopic) {\n    this.processDialogForFilters(dialog);\n    // }\n\n    if(offsetDate && !dialog.pFlags.pinned) {\n      if(!isTopic && saveGlobalOffset) {\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\n          this.dialogsOffsetDate[GLOBAL_FOLDER_ID] = offsetDate;\n        }\n      }\n\n      const folderId = isTopic ? this.getFilterIdForForum(dialog) : folder_id;\n      const savedOffsetDate = this.dialogsOffsetDate[folderId];\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\n        // if(pos !== -1) {\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folderId)) {\n          this.dropDialog(peerId, isTopic ? this.getDialogKey(dialog) : undefined, true);\n          return;\n        }\n\n        this.dialogsOffsetDate[folderId] = offsetDate;\n      }\n    }\n\n    this.setDialogToState(dialog);\n\n    // if(pos === -1) {\n    // this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\n    // }\n\n    // const indexKey = getDialogIndexKey(folder_id);\n    // /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, (dialog) => getDialogIndex(dialog, indexKey), -1);\n    /* if(pos !== -1 && pos !== newPos) {\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\n    } */\n  }\n\n  public dropDialogFromFolders(peerId: PeerId, topicId?: number) {\n    const foundDialog = this.getDialog(peerId, undefined, topicId, false);\n    const [dialog, index] = foundDialog;\n    if(dialog) {\n      const filterId = topicId ?\n        this.getFilterIdForForum(dialog as ForumTopic) :\n        (dialog as Dialog).folder_id;\n\n      // const folder = this.getFolder(filterId);\n      // folder.dialogs.splice(index, 1);\n      const wasPinned = indexOfAndSplice(this.getPinnedOrders(filterId), this.getDialogKey(dialog)) !== undefined;\n\n      this.processDialogForFilters(dialog, true);\n\n      this.dialogsIndex.indexObject(peerId, '');\n\n      if(wasPinned) {\n        this.savePinnedOrders();\n      }\n    }\n\n    return foundDialog;\n  }\n\n  public dropDialog(peerId: PeerId, topicId?: number, keepLocal?: boolean) {\n    const dialog = this.getDialogOrTopic(peerId, topicId);\n    const foundDialog = this.dropDialogFromFolders(peerId, topicId);\n    if(dialog) {\n      if(!keepLocal) {\n        if(topicId) {\n          this.getForumTopicsCache(peerId).topics.delete(topicId);\n        } else {\n          delete this.dialogs[peerId];\n        }\n      }\n\n      this.clearDialogFromState(dialog, keepLocal);\n    }\n\n    return foundDialog;\n  }\n\n  public clearDialogFromState(dialog: Dialog | ForumTopic, keepLocal: boolean) {\n    if(dialog._ === 'forumTopic') {\n      return;\n    }\n\n    const {peerId} = dialog;\n    this.peersStorage.requestPeersForKey([], `topMessage_${peerId}`);\n    this.peersStorage.releasePeer(peerId, 'dialog');\n    this.storage.delete(peerId, keepLocal);\n  }\n\n  public dropDialogWithEvent(peerId: PeerId, topicId?: number) {\n    const dropped = this.dropDialog(peerId, topicId);\n    if(dropped.length) {\n      this.rootScope.dispatchEvent('dialog_drop', dropped[0]);\n    }\n\n    return dropped;\n  }\n\n  /**\n   * leaving chat, leaving channel, deleting private dialog\n   */\n  public dropDialogOnDeletion(peerId: PeerId, topicId?: number) {\n    this.dropDialogWithEvent(peerId, topicId);\n    this.rootScope.dispatchEvent('peer_deleted', peerId);\n  }\n\n  public applyDialogs(result: MessagesPeerDialogs | MessagesForumTopics, peerId?: PeerId) {\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\n\n    const isForum = result._ === 'messages.forumTopics';\n    const items = (result as MessagesPeerDialogs).dialogs || (result as MessagesForumTopics).topics;\n    if(!isForum) {\n      // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\n      forEachReverse(result.dialogs, (dialog, idx) => {\n        if(dialog._ === 'dialogFolder') {\n          result.dialogs.splice(idx, 1);\n        }\n      });\n    } else {\n      this.processTopics(peerId, result);\n    }\n\n    assumeType<Folder['dialogs']>(items);\n\n    this.appUsersManager.saveApiUsers(result.users);\n    this.appChatsManager.saveApiChats(result.chats);\n    this.appMessagesManager.saveMessages(result.messages);\n\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\n\n    const updatedDialogs: BroadcastEvents['dialogs_multiupdate'] = new Map();\n    const getUpdateCache = (peerId: PeerId) => {\n      let cache = updatedDialogs.get(peerId);\n      if(!cache) {\n        updatedDialogs.set(peerId, cache = {});\n      }\n\n      return cache;\n    };\n\n    items.forEach((dialog) => {\n      const peerId = this.appPeersManager.getPeerId(dialog.peer);\n      let topMid = dialog.top_message;\n\n      const topPendingMid = this.appMessagesManager.pendingTopMsgs[peerId];\n      if(topPendingMid) {\n        const topPendingMessage = this.appMessagesManager.getMessageByPeer(peerId, topPendingMid) as MyMessage;\n        const topMessage = this.appMessagesManager.getMessageByPeer(peerId, topMid) as MyMessage;\n        if(!topMid || (topPendingMessage && (!topMessage || topPendingMessage?.date > topMessage?.date))) {\n          dialog.top_message = topMid = topPendingMid;\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMid;\n        }\n      }\n\n      /* const d = Object.assign({}, dialog);\n      if(peerId === 239602833) {\n        this.log.error('applyConversation lun', dialog, d);\n      } */\n\n      if(topMid || dialog.draft?._ === 'draftMessage') {\n        if(this.saveDialog({dialog})) {\n          const cache = getUpdateCache(peerId);\n\n          if(isForum) {\n            (cache.topics ??= new Map()).set(\n              (dialog as ForumTopic).id,\n              dialog as ForumTopic\n            );\n          } else {\n            cache.dialog = dialog as Dialog;\n          }\n        }\n      } else {\n        this.dropDialogWithEvent(peerId, isForum ? this.getDialogKey(dialog) : undefined);\n      }\n\n      const key = this.appMessagesManager.getUpdateAfterReloadKey(peerId, isForum ? this.getDialogKey(dialog) : undefined);\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[key];\n      if(updates !== undefined) {\n        const slicedUpdates = [...updates]; // ! have to clone set, otherwise will have infinite loop if element is inserted again\n        for(const update of slicedUpdates) {\n          updates.delete(update);\n          this.apiUpdatesManager.saveUpdate(update);\n        }\n\n        if(!updates.size) {\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[key];\n        }\n      }\n    });\n\n    if(updatedDialogs.size) {\n      this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n    }\n  }\n\n  // ! do not use draft here, empty dialogs with drafts are excluded from .getDialogs response\n  private getDialogOffsetDate(dialog: Dialog | ForumTopic) {\n    const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n    return message?.date || 0;\n  }\n\n  public canSaveDialog(peerId: PeerId, dialog: Dialog | ForumTopic) {\n    if(peerId.isAnyChat()) {\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\n      // ! chatForbidden stays for chat where you're kicked\n      if(\n        chat._ === 'channelForbidden' ||\n        // || chat._ === 'chatForbidden'\n        (chat as Chat.chat).pFlags.left\n        // || (chat as any).pFlags.kicked\n      ) {\n        return false;\n      }\n    } else if(this.appUsersManager.isDeleted(peerId.toUserId()) && !getServerMessageId(dialog.top_message)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Won't save migrated from peer, forbidden peers, left and kicked\n   */\n  public saveDialog({\n    dialog,\n    folderId,\n    ignoreOffsetDate,\n    saveGlobalOffset\n  }: {\n    dialog: Dialog | ForumTopic,\n    folderId?: REAL_FOLDER_ID,\n    ignoreOffsetDate?: boolean,\n    saveGlobalOffset?: boolean\n  }) {\n    const isTopic = this.isTopic(dialog);\n    const isDialog = !isTopic;\n\n    const peerId = this.appPeersManager.getPeerId(dialog.peer);\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n\n    const topicId = isTopic ? dialog.id = this.appMessagesIdsManager.generateMessageId(dialog.id, channelId) : undefined;\n    if(!isTopic) {\n      folderId ??= dialog.folder_id ?? FOLDER_ID_ALL;\n    }\n\n    if(!peerId) {\n      console.error('saveConversation no peerId???', dialog, folderId);\n      return false;\n    }\n\n    if(!isTopic && dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\n      console.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\n    }\n\n    if(isDialog && !this.canSaveDialog(peerId, dialog)) {\n      return false;\n    }\n\n    if(isDialog && !channelId && peerId.isAnyChat()) {\n      const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n        const migratedToPeer = this.appPeersManager.getPeerId(chat.migrated_to);\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\n        dialog.migratedTo = migratedToPeer;\n        // return;\n      }\n    }\n\n    if(isDialog && !dialog.migratedTo) {\n      const peerText = this.appPeersManager.getPeerSearchText(peerId);\n      this.dialogsIndex.indexObject(peerId, peerText);\n    }\n\n    const wasDialogBefore = this.getDialogOrTopic(peerId, topicId);\n\n    let mid: number, message: MyMessage;\n    if(dialog.top_message || true) {\n      mid = this.appMessagesIdsManager.generateMessageId(dialog.top_message, channelId);// dialog.top_message;\n\n      // preserve outgoing message\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\n        mid = wasDialogBefore.top_message;\n      }\n\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\n    }/*  else {\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\n      message = {\n        _: 'message',\n        id: mid,\n        mid,\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        pFlags: {out: true},\n        date: 0,\n        message: ''\n      };\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\n    } */\n\n    // if(!message?.pFlags) {\n    //   this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\n    // }\n\n    dialog.top_message = mid;\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id, channelId);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id, channelId);\n\n    if(isDialog && dialog.folder_id === undefined) {\n      if(dialog._ === 'dialog') {\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\n        dialog.folder_id = wasDialogBefore ? (wasDialogBefore as typeof dialog).folder_id : folderId;\n      }/*  else if(dialog._ === 'dialogFolder') {\n        dialog.folder_id = dialog.folder.id;\n      } */\n    }\n\n    dialog.draft = this.appDraftsManager.saveDraft({\n      peerId,\n      threadId: topicId,\n      draft: dialog.draft\n    });\n    dialog.peerId = peerId;\n    // dialog.indexes ??= {} as any;\n\n    // * Because we saved message without dialog present\n    if(message && message.pFlags.is_outgoing) {\n      const isOut = message.pFlags.out;\n      if(mid > dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n\n        if(!dialog.unread_count && !isOut) {\n          ++dialog.unread_count;\n        }\n      } else {\n        delete message.pFlags.unread;\n      }\n    }\n\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId, topicId);\n    const slice = historyStorage.history.slice;\n    if(!mid) {} else\n    /* if(historyStorage === undefined) { // warning\n      historyStorage.history.push(mid);\n    } else  */if(!slice.length) {\n      historyStorage.history.unshift(mid);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    } else if(!slice.isEnd(SliceEnd.Bottom)) { // * this will probably never happen, however, if it does, then it will fix slice with top_message\n      const slice = historyStorage.history.insertSlice([mid]);\n      slice.setEnd(SliceEnd.Bottom);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    historyStorage.maxId = mid;\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\n\n    this.appNotificationsManager.savePeerSettings({\n      peerId,\n      threadId: isTopic ? dialog.id : undefined,\n      settings: dialog.notify_settings\n    });\n\n    if(isDialog && channelId && dialog.pts) {\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\n    }\n\n    this.generateIndexForDialog(dialog);\n\n    if(wasDialogBefore) {\n      // fix unread count\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(wasDialogBefore);\n      safeReplaceObject(wasDialogBefore, dialog);\n      releaseUnreadCount();\n    }\n\n    this.pushDialog({\n      dialog,\n      offsetDate: message?.date,\n      ignoreOffsetDate,\n      saveGlobalOffset\n    });\n\n    if(isTopic) {\n      this.processTopicUpdate(dialog, wasDialogBefore as ForumTopic);\n    }\n\n    return true;\n  }\n\n  public processTopicUpdate(topic: ForumTopic, oldTopic?: ForumTopic) {\n    if(!oldTopic) {\n      return;\n    }\n\n    const {peerId, id: threadId} = topic;\n    const isIconChanged = topic.icon_emoji_id !== (oldTopic as ForumTopic).icon_emoji_id;\n    const isTitleChanged = topic.title !== (oldTopic as ForumTopic).title;\n    const isChanged = isIconChanged || isTitleChanged;\n\n    if(isIconChanged) {\n      this.rootScope.dispatchEvent('avatar_update', {peerId, threadId});\n    }\n\n    if(isChanged) {\n      this.rootScope.dispatchEvent('peer_title_edit', {peerId, threadId});\n    }\n  }\n\n  public getDialogs(options: {\n    query?: string,\n    offsetIndex?: number,\n    limit?: number,\n    filterId?: number,\n    skipMigrated?: boolean\n  }): MaybePromise<{\n    dialogs: Folder['dialogs'],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  }> {\n    const {\n      query = '',\n      offsetIndex,\n      limit = 20,\n      filterId = FOLDER_ID_ALL,\n      skipMigrated = false\n    } = options;\n\n    const isForum = this.isFilterIdForForum(filterId);\n    if(!isForum && !REAL_FOLDERS.has(filterId)) {\n      const promises: Promise<any>[] = [];\n\n      const fillContactsResult = this.appUsersManager.fillContacts();\n      if(!fillContactsResult.cached) {\n        promises.push(fillContactsResult.promise);\n      }\n\n      const reloadMissingDialogsPromise = this.filtersStorage.reloadMissingPeerIds(filterId);\n      if(reloadMissingDialogsPromise) {\n        promises.push(reloadMissingDialogsPromise);\n      }\n\n      if(promises.length) {\n        return Promise.all(promises).then(() => {\n          return this.getDialogs(options);\n        });\n      }\n    }\n\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\n    const realFolderId/* : REAL_FOLDER_ID */ =\n      (!REAL_FOLDERS.has(filterId) || this.getOffsetDate(filterId)) && !isForum ?\n        GLOBAL_FOLDER_ID :\n        filterId/*  as REAL_FOLDER_ID */;\n    let curDialogStorage = this.getFolderDialogs(filterId, skipMigrated);\n\n    const indexKey = this.getDialogIndexKeyByFilterId(filterId);\n\n    if(query && !isForum) {\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== filterId) {\n        this.cachedResults.query = query;\n        this.cachedResults.folderId = filterId;\n\n        const results = this.dialogsIndex.search(query);\n\n        const dialogs: Dialog[] = [];\n        for(const peerId in this.dialogs) {\n          const dialog = this.dialogs[peerId];\n          if(results.has(dialog.peerId) && dialog.folder_id === filterId) {\n            dialogs.push(dialog);\n          }\n        }\n\n        dialogs.sort((d1, d2) => this.getDialogIndex(d2, indexKey) - this.getDialogIndex(d1, indexKey));\n        this.cachedResults.dialogs = dialogs;\n        this.cachedResults.count = dialogs.length;\n      }\n\n      curDialogStorage = this.cachedResults.dialogs;\n    } else {\n      this.cachedResults.query = '';\n    }\n\n    let offset = 0;\n    if(offsetIndex > 0) {\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\n        if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n          break;\n        }\n      }\n    }\n\n    const loadedAll = this.isDialogsLoaded(realFolderId);\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\n    if(query || loadedAll || isEnoughDialogs) {\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: loadedAll ? curDialogStorage.length : null,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        isEnd: (query || loadedAll) && (offset + limit) >= curDialogStorage.length\n      };\n    }\n\n    return this.appMessagesManager.getTopMessages({limit, folderId: realFolderId}).then((result) => {\n      // const curDialogStorage = this[folderId];\n      if(skipMigrated) {\n        curDialogStorage = this.getFolderDialogs(filterId, skipMigrated);\n      }\n\n      offset = 0;\n      if(offsetIndex > 0) {\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\n          if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n            break;\n          }\n        }\n      }\n\n      // this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\n\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: result.count === undefined ? curDialogStorage.length : result.count,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\n        isEnd: result.isEnd\n      };\n    });\n  }\n\n  public async markFolderAsRead(folderId: number) {\n    const folder = this.getFolder(folderId);\n    const peerIds = [...folder.unreadPeerIds];\n    for(const peerId of peerIds) {\n      await this.appMessagesManager.markDialogUnread(peerId, true);\n    }\n  }\n\n  // * FORUMS SECTION\n\n  public flushForumTopicsCache(peerId: PeerId) {\n    const cache = this.forumTopics.get(peerId);\n    if(!cache) {\n      return;\n    }\n\n    const folder = this.folders[peerId];\n    if(folder) {\n      if(folder.dispatchUnreadTimeout) {\n        clearTimeout(folder.dispatchUnreadTimeout);\n      }\n\n      delete this.allDialogsLoaded[peerId];\n      delete this.pinnedOrders[peerId];\n      delete this.dialogsOffsetDate[peerId];\n      delete this.folders[peerId];\n    }\n\n    cache.topics.clear();\n\n    // for permanent delete\n    // this.forumTopics.delete(peerId);\n  }\n\n  public getForumTopicsCache(peerId: PeerId) {\n    let forumTopics = this.forumTopics.get(peerId);\n    if(!forumTopics) {\n      forumTopics = {\n        topics: new Map(),\n        deletedTopics: new Set(),\n        getTopicPromises: new Map()\n      };\n\n      this.forumTopics.set(peerId, forumTopics);\n    }\n\n    return forumTopics;\n  }\n\n  public getForumTopicById(peerId: PeerId, topicId?: number): Promise<ForumTopic> {\n    if(!this.appPeersManager.isForum(peerId)) {\n      return Promise.reject(makeError('CHANNEL_FORUM_MISSING'));\n    }\n\n    const cache = this.getForumTopicsCache(peerId);\n    let promise: CancellablePromise<ForumTopic>;\n    if(topicId) {\n      promise = cache.getTopicPromises.get(topicId);\n      if(promise) {\n        return promise;\n      }\n\n      if(cache.deletedTopics.has(topicId)) {\n        return Promise.resolve(undefined);\n      }\n\n      cache.getTopicPromises.set(topicId, promise = deferredPromise());\n    }\n\n    cache.getTopicsPromise ??= pause(0).then(() => {\n      const promises: {[topicId: number]: typeof promise} = {};\n      const ids: number[] = [];\n      for(const [topicId, promise] of cache.getTopicPromises) {\n        promises[topicId] = promise;\n        ids.push(getServerMessageId(topicId));\n      }\n\n      cache.getTopicPromises.clear();\n\n      const fullfillLeft = () => {\n        for(const topicId in promises) {\n          promises[topicId].resolve(undefined);\n          cache.deletedTopics.add(+topicId);\n        }\n      };\n\n      if(this.getForumTopicsCache(peerId) !== cache) {\n        fullfillLeft();\n        return;\n      }\n\n      return this.apiManager.invokeApi('channels.getForumTopicsByID', {\n        channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n        topics: ids\n      }).then((messagesForumTopics) => {\n        if(this.getForumTopicsCache(peerId) !== cache) {\n          return;\n        }\n\n        this.applyDialogs(messagesForumTopics, peerId);\n\n        messagesForumTopics.topics.forEach((forumTopic) => {\n          if(forumTopic._ === 'forumTopic') {\n            promises[forumTopic.id].resolve(forumTopic);\n            delete promises[peerId];\n          }\n        });\n\n        return messagesForumTopics;\n      }, () => {}).then(() => {\n        fullfillLeft();\n\n        cache.getTopicsPromise = undefined;\n        if(cache.getTopicPromises.size) {\n          this.getForumTopicById(peerId);\n        }\n      });\n    });\n\n    return promise || cache.getTopicsPromise;\n  }\n\n  // public getForumTopicById(peerId: PeerId, topicId: number) {\n  //   return this.getForumTopicsByID(peerId, topicId).then((result) => result.topics[0]);\n  // }\n\n  public getForumTopic(peerId: PeerId, topicId: number) {\n    const forumTopics = this.forumTopics.get(peerId);\n    return forumTopics?.topics?.get(topicId);\n  }\n\n  public getForumTopicOrReload(peerId: PeerId, topicId: number) {\n    const forumTopic = this.getForumTopic(peerId, topicId);\n    if(forumTopic) {\n      return forumTopic;\n    }\n\n    const cache = this.getForumTopicsCache(peerId);\n    return cache?.deletedTopics?.has(topicId) ? undefined : this.getForumTopicById(peerId, topicId);\n  }\n\n  public processTopics<T extends MaybePromise<{topics: MTForumTopic[], pts?: number}>>(peerId: PeerId, result: T) {\n    return callbackify(result, (result) => {\n      if('pts' in result) {\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), result.pts);\n      }\n\n      const peer = this.appPeersManager.getOutputPeer(peerId);\n      result.topics = result.topics.map((topic) => {\n        if(topic._ === 'forumTopicDeleted') {\n          return;\n        }\n\n        (topic as ForumTopic).peer = peer;\n        topic.id = this.appMessagesIdsManager.generateMessageId(topic.id, (peer as Peer.peerChannel).channel_id);\n        return topic;\n      }).filter(Boolean);\n\n      return result;\n    });\n  }\n\n  public processTopicsPromise<T extends Promise<Parameters<DialogsStorage['processTopics']>[1]>>(peerId: PeerId, promise: T): T {\n    return promise.then((result) => {\n      this.processTopics(peerId, result);\n      return result;\n    }) as any;\n  }\n\n  public getForumUnreadCount(peerId: PeerId) {\n    if(!this.appPeersManager.isForum(peerId)) {\n      return;\n    }\n\n    const folder = this.getFolder(peerId);\n\n    const f = folder.dialogs.length >= 20 || this.isDialogsLoaded(peerId) ?\n      folder.dialogs.slice(0, 20) :\n      callbackify(this.getDialogs({filterId: peerId, limit: 20}), (result) => {\n        return result.dialogs;\n      });\n\n    return callbackify(f, (dialogs) => {\n      return {\n        count: dialogs.reduce((acc, v) => acc + +!!v.unread_count, 0),\n        hasUnmuted: dialogs.some((dialog) => dialog.unread_count && this.isDialogUnmuted(dialog))\n      };\n    });\n  }\n\n  // * FORUMS SECTION END\n\n  private handleDialogTogglePinned(dialog: Dialog | ForumTopic, pinned: boolean, folderId: number) {\n    if(dialog) {\n      if(!pinned) {\n        this.handleDialogUnpinning(dialog, folderId);\n      } else { // means set\n        dialog.pFlags.pinned = true;\n      }\n\n      this.generateIndexForDialog(dialog);\n    }\n\n    this.appMessagesManager.scheduleHandleNewDialogs(dialog.peerId, dialog);\n  }\n\n  private handleDialogsPinned(folderId: number, order: (Dialog['peerId'] | ForumTopic['id'])[]) {\n    const isForum = this.isFilterIdForForum(folderId);\n    this.resetPinnedOrder(folderId);\n    this.getPinnedOrders(folderId).push(...order);\n    this.savePinnedOrders();\n    order.reverse(); // index must be higher\n    const newPinned: {[id: typeof order[0]]: true} = {};\n    order.forEach((id) => {\n      newPinned[id] = true;\n\n      const peerId = isForum ? folderId : id;\n      const topicId = isForum ? id : undefined;\n\n      const dialog = this.getDialogOrTopic(peerId, topicId);\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n      if(!dialog) {\n        return;\n      }\n\n      dialog.pFlags.pinned = true;\n      this.generateIndexForDialog(dialog);\n    });\n\n    const dialogs = this.getFolderDialogs(folderId, false);\n    for(const dialog of dialogs) {\n      if(!dialog.pFlags.pinned) {\n        break;\n      }\n\n      if(!newPinned[this.getDialogKey(dialog)]) {\n        delete dialog.pFlags.pinned;\n        this.generateIndexForDialog(dialog);\n        this.appMessagesManager.scheduleHandleNewDialogs(dialog.peerId, dialog);\n      }\n    }\n  }\n\n  // only 0 and 1 folders\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\n    // this.log('updateFolderPeers', update);\n    const peers = update.folder_peers;\n\n    peers.forEach((folderPeer) => {\n      const {folder_id, peer} = folderPeer;\n\n      const peerId = this.appPeersManager.getPeerId(peer);\n      const dialog = this.dropDialog(peerId)[0];\n      if(dialog) {\n        if(dialog.pFlags?.pinned) {\n          this.handleDialogUnpinning(dialog, folder_id);\n        }\n\n        (dialog as Dialog).folder_id = folder_id as REAL_FOLDER_ID;\n        this.generateIndexForDialog(dialog);\n        this.pushDialog({dialog}); // need for simultaneously updatePinnedDialogs\n      }\n\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n    });\n  };\n\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\n    // this.log('updateDialogPinned', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\n    /* if(update.folder_id > 1) {\n      const filter = this.filtersStorage.filters[update.folder_id];\n      if(update.pFlags.pinned) {\n        filter.pinned_peers.unshift(peerId);\n      } else {\n        filter.pinned_peers.findAndSplice((p) => p === peerId);\n      }\n    } */\n\n    this.handleDialogTogglePinned(dialog, update.pFlags.pinned, folderId);\n  };\n\n  private onUpdateChannelPinnedTopic = (update: Update.updateChannelPinnedTopic) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const topicId = this.appMessagesIdsManager.generateMessageId(update.topic_id, channelId);\n    const topic = this.getForumTopic(peerId, topicId);\n    if(!topic) {\n      return;\n    }\n\n    this.handleDialogTogglePinned(topic, update.pFlags.pinned, this.getFilterIdForForum(topic));\n  };\n\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\n\n    if(update.order) {\n      this.handleDialogsPinned(folderId, update.order.map((peer) => this.appPeersManager.getPeerId((peer as DialogPeer.dialogPeer).peer)));\n    } else {\n      this.apiManager.invokeApi('messages.getPinnedDialogs', {\n        folder_id: folderId\n      }).then((dialogsResult) => {\n        // * for test reordering and rendering\n        // dialogsResult.dialogs.reverse();\n\n        this.applyDialogs(dialogsResult);\n\n        this.handleDialogsPinned(folderId, dialogsResult.dialogs.map((d) => d.peerId));\n      });\n    }\n  };\n\n  private onUpdateChannelPinnedTopics = async(update: Update.updateChannelPinnedTopics) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const forumTopics = this.forumTopics.get(peerId);\n    if(!forumTopics) {\n      return;\n    }\n\n    const filterId = peerId;\n    if(update.order) {\n      const order = update.order.map((topicId) => this.appMessagesIdsManager.generateMessageId(topicId, channelId));\n      this.handleDialogsPinned(filterId, order);\n    } else {\n      const limit = await this.apiManager.getLimit('topicPin', true);\n\n      const promise = this.apiManager.invokeApi('channels.getForumTopics', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        limit,\n        offset_date: 0,\n        offset_id: 0,\n        offset_topic: 0\n      });\n\n      const result = await this.processTopics(peerId, promise);\n\n      const topics = result.topics as ForumTopic[];\n      const pinned = topics.filter((topic) => topic.pFlags.pinned);\n      this.handleDialogsPinned(filterId, pinned.map((topic) => topic.id));\n    }\n  };\n}\n","export default function copy<T>(obj: T): T {\n  // in case of premitives\n  if(obj === null || typeof(obj) !== 'object') {\n    return obj;\n  }\n\n  // date objects should be\n  if(obj instanceof Date) {\n    return new Date(obj.getTime()) as any;\n  }\n\n  // handle Array\n  if(Array.isArray(obj)) {\n    // @ts-ignore\n    const clonedArr: T = obj.map((el) => copy(el)) as any as T;\n    return clonedArr;\n  }\n\n  if(ArrayBuffer.isView(obj)) {\n    // @ts-ignore\n    return obj.slice();\n  }\n\n  // lastly, handle objects\n  // @ts-ignore\n  const clonedObj = new obj.constructor();\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      clonedObj[prop] = copy(obj[prop]);\n    }\n  }\n  return clonedObj;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {ChatlistsChatlistUpdates, DialogFilter, ForumTopic, InputChatlist, InputPeer, Update, Updates} from '../../layer';\nimport type {Dialog} from '../appManagers/appMessagesManager';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport copy from '../../helpers/object/copy';\nimport {AppManager} from '../appManagers/manager';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport assumeType from '../../helpers/assumeType';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, REAL_FOLDERS, REAL_FOLDER_ID, START_LOCAL_ID} from '../mtproto/mtproto_config';\nimport makeError from '../../helpers/makeError';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\n\nexport type MyDialogFilter = Exclude<DialogFilter, DialogFilter.dialogFilterDefault>;\n\nconst convertment = [\n  ['pinned_peers', 'pinnedPeerIds'],\n  ['exclude_peers', 'excludePeerIds'],\n  ['include_peers', 'includePeerIds']\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\n\nconst PREPENDED_FILTERS = REAL_FOLDERS.size;\n\nconst LOCAL_FILTER: DialogFilter.dialogFilter = {\n  _: 'dialogFilter',\n  pFlags: {},\n  id: 0,\n  title: '',\n  exclude_peers: [],\n  include_peers: [],\n  pinned_peers: [],\n  excludePeerIds: [],\n  includePeerIds: [],\n  pinnedPeerIds: []\n};\n\nexport default class FiltersStorage extends AppManager {\n  private filters: {[filterId: string]: MyDialogFilter};\n  private filtersArr: Array<MyDialogFilter>;\n  private localFilters: {[filterId: string]: MyDialogFilter};\n  private localId: number;\n  private reloadedPeerIds: Set<PeerId>;\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateDialogFilter: this.onUpdateDialogFilter,\n\n      updateDialogFilters: this.onUpdateDialogFilters,\n\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\n    });\n\n    // delete peers when dialog is being dropped\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        let modified = false;\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach((arr) => {\n          forEachReverse(arr, (inputPeer, idx) => {\n            if(getPeerId(inputPeer) === peerId) {\n              arr.splice(idx, 1);\n              modified = true;\n            }\n          });\n        });\n\n        if(modified) {\n          this.saveDialogFilter(filter, true);\n        }\n      }\n    }); */\n\n    this.rootScope.addEventListener('premium_toggle', () => {\n      this.onUpdateDialogFilters({_: 'updateDialogFilters'});\n    });\n\n    return this.appStateManager.getState().then((state) => {\n      const filtersArr = this.prependFilters(state.filtersArr);\n      filtersArr.map((filter) => {\n        this.saveDialogFilter(filter, false, true);\n      });\n    });\n  }\n\n  /**\n   * ! use it only with saving\n   */\n  private prependFilters(filters: DialogFilter[]) {\n    filters = filters.slice();\n\n    const allChatsFilter = this.localFilters[FOLDER_ID_ALL];\n    const archiveFilter = this.localFilters[FOLDER_ID_ARCHIVE];\n\n    const allChatsFilterIndex = filters.findIndex((filter) => filter._ === 'dialogFilterDefault' || filter.id === FOLDER_ID_ALL);\n    if(allChatsFilterIndex !== -1) filters[allChatsFilterIndex] = allChatsFilter;\n    else filters.unshift(allChatsFilter);\n\n    findAndSplice(filters, (filter) => (filter as MyDialogFilter).id === FOLDER_ID_ARCHIVE);\n    filters.splice(/* 1 */filters[0] === allChatsFilter ? 1 : 0, 0, archiveFilter);\n\n    this.localId = START_LOCAL_ID;\n    filters.forEach((filter) => {\n      delete filter.localId;\n    });\n\n    return filters;\n  }\n\n  private generateLocalFilter(id: REAL_FOLDER_ID) {\n    const filter: MyDialogFilter = {...copy(LOCAL_FILTER), id};\n    if(id === FOLDER_ID_ALL) {\n      filter.pFlags.exclude_archived = true;\n    } else if(id === FOLDER_ID_ARCHIVE) {\n      filter.pFlags.exclude_unarchived = true;\n    }\n\n    if(REAL_FOLDERS.has(id)) {\n      filter.pinnedPeerIds = this.dialogsStorage.getPinnedOrders(id);\n    }\n\n    return filter;\n  }\n\n  // private getLocalFilter(id: number) {\n  //   return this.filters[id] ??= this.generateLocalFilter(id);\n  // }\n\n  public clear = (init?: boolean) => {\n    if(!init) {\n      // safeReplaceObject(this.filters, {});\n      this.reloadedPeerIds.clear();\n      this.clearFilters();\n    } else {\n      this.filters = {};\n      this.filtersArr = [];\n      this.reloadedPeerIds = new Set();\n\n      this.localFilters = {};\n      for(const filterId of REAL_FOLDERS) {\n        this.localFilters[filterId] = this.generateLocalFilter(filterId as REAL_FOLDER_ID);\n      }\n    }\n\n    this.localId = START_LOCAL_ID;\n  };\n\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\n    if(update.filter) {\n      this.saveDialogFilter(update.filter as any);\n    } else if(this.filters[update.id]) { // Папка удалена\n      // this.getDialogFilters(true);\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\n      delete this.filters[update.id];\n      findAndSplice(this.filtersArr, (filter) => (filter as DialogFilter.dialogFilter).id === update.id);\n    }\n\n    this.pushToState();\n  };\n\n  private onUpdateDialogFilters = (update: Update.updateDialogFilters) => {\n    // console.warn('updateDialogFilters', update);\n\n    const oldFilters = copy(this.filters);\n\n    this.getDialogFilters(true).then((filters) => {\n      for(const _filterId in oldFilters) {\n        const filterId = +_filterId;\n        if(!filters.find((filter) => filter.id === filterId)) { // * deleted\n          this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\n        }\n      }\n\n      this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map((filter) => filter.id)});\n    });\n  };\n\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\n    // console.log('updateDialogFilterOrder', update);\n\n    const order = update.order.slice();\n    if(!order.includes(FOLDER_ID_ARCHIVE)) {\n      order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, FOLDER_ID_ARCHIVE);\n    }\n\n    this.localId = START_LOCAL_ID;\n    order.forEach((filterId) => {\n      const filter = this.filters[filterId];\n      delete filter.localId;\n      this.setLocalId(filter);\n    });\n\n    this.rootScope.dispatchEvent('filter_order', order);\n\n    this.pushToState();\n  };\n\n  private pushToState() {\n    this.appStateManager.pushToState('filtersArr', this.filtersArr);\n  }\n\n  public testDialogForFilter(dialog: Dialog | ForumTopic.forumTopic, filter?: MyDialogFilter) {\n    if(!filter) {\n      return true;\n    }\n\n    const {peerId} = dialog;\n\n    if(REAL_FOLDERS.has(filter.id)) {\n      return (dialog as Dialog).folder_id === filter.id && this.dialogsStorage.canSaveDialog(peerId, dialog);\n    }\n\n    // * check whether dialog exists\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\n      return false;\n    }\n\n    // exclude_peers\n    if((filter as DialogFilter.dialogFilter).excludePeerIds?.includes(peerId)) {\n      return false;\n    }\n\n    // include_peers\n    if((filter as DialogFilter.dialogFilter).includePeerIds?.includes(peerId)) {\n      return true;\n    }\n\n    const pFlags = (filter as DialogFilter.dialogFilter).pFlags;\n\n    if(!pFlags) {\n      return true;\n    }\n\n    // exclude_archived\n    if(pFlags.exclude_archived && (dialog as Dialog).folder_id === FOLDER_ID_ARCHIVE) {\n      return false;\n    }\n\n    // exclude_read\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\n      return false;\n    }\n\n    // exclude_muted\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted({peerId}) && !(dialog.unread_mentions_count && dialog.unread_count)) {\n      return false;\n    }\n\n    if(this.appPeersManager.isAnyChat(peerId)) {\n      // broadcasts\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\n        return true;\n      }\n\n      // groups\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\n        return true;\n      }\n    } else {\n      const userId = peerId.toUserId();\n\n      // bots\n      if(this.appUsersManager.isBot(userId)) {\n        return !!pFlags.bots;\n      }\n\n      // non_contacts\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n\n      // contacts\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\n  }\n\n  public getFilter(filterId: number) {\n    return this.filters[filterId];\n  }\n\n  public getFilters() {\n    return this.filters;\n  }\n\n  public clearFilters() {\n    const filters = this.getFilters();\n    for(const filterId in filters) { // delete filters\n      if(REAL_FOLDERS.has(+filterId)) {\n        continue;\n      }\n\n      this.onUpdateDialogFilter({\n        _: 'updateDialogFilter',\n        id: +filterId\n      });\n    }\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId: number) {\n    const filter = this.filters[filterId];\n\n    const index = filter.pinnedPeerIds.indexOf(peerId);\n    const wasPinned = index !== -1;\n\n    if(wasPinned) {\n      filter.pinned_peers.splice(index, 1);\n      filter.pinnedPeerIds.splice(index, 1);\n    }\n\n    if(!wasPinned) {\n      if(filter.pinned_peers.length >= (await this.apiManager.getLimit('folderPin'))) {\n        return Promise.reject(makeError('PINNED_DIALOGS_TOO_MUCH'));\n      }\n\n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\n      filter.pinnedPeerIds.unshift(peerId);\n    }\n\n    return this.updateDialogFilter(filter);\n  }\n\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\n    const maxId = Math.max(1, ...Object.keys(this.filters).map((i) => +i));\n    filter = copy(filter);\n    filter.id = maxId + 1;\n    return this.updateDialogFilter(filter, undefined, prepend);\n  }\n\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\n    return this.apiManager.invokeApi('messages.updateDialogFilter', {\n      id: filter.id,\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\n    }).then(() => {\n      this.onUpdateDialogFilter({\n        _: 'updateDialogFilter',\n        id: filter.id,\n        filter: remove ? undefined : filter as any\n      });\n\n      if(prepend) {\n        const f = Object.values(this.filters);\n        const order = f.sort((a, b) => a.localId - b.localId).map((filter) => filter.id);\n        indexOfAndSplice(order, filter.id);\n        indexOfAndSplice(order, FOLDER_ID_ARCHIVE);\n        order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, filter.id);\n        this.onUpdateDialogFilterOrder({\n          _: 'updateDialogFilterOrder',\n          order\n        });\n      }\n\n      return filter;\n    });\n  }\n\n  public updateDialogFiltersOrder(order: number[]) {\n    return this.apiManager.invokeApi('messages.updateDialogFiltersOrder', {\n      order\n    }).then(() => {\n      this.onUpdateDialogFilterOrder({\n        _: 'updateDialogFilterOrder',\n        order\n      });\n    });\n  }\n\n  public getOutputDialogFilter(filter: MyDialogFilter) {\n    const c = copy(filter);\n    /* convertment.forEach(([from, to]) => {\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\n    }); */\n\n    this.filterIncludedPinnedPeers(filter);\n\n    return c;\n  }\n\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\n      if(filter.pinnedPeerIds.includes(peerId)) {\n        filter.include_peers.splice(idx, 1);\n        filter.includePeerIds.splice(idx, 1);\n      }\n    });\n  }\n\n  // private spliceMissingPeerIds(filterId: number, type: ArgumentTypes<FiltersStorage['reloadMissingPeerIds']>[1], missingPeerIds: PeerId[]) {\n  //   const filter = this.getFilter(filterId);\n  //   const peers = filter && filter[type];\n  //   if(!peers?.length) {\n  //     return;\n  //   }\n\n  //   let spliced = false;\n  //   missingPeerIds.forEach((peerId) => {\n  //     const inputPeer = findAndSplice(peers, (inputPeer) => getPeerId(inputPeer) === peerId);\n  //     if(inputPeer) {\n  //       spliced = true;\n  //     }\n  //   });\n\n  //   if(spliced) {\n  //     this.onUpdateDialogFilter({\n  //       _: 'updateDialogFilter',\n  //       id: filterId,\n  //       filter\n  //     });\n  //   }\n  // }\n\n  public reloadMissingPeerIds(\n    filterId: number,\n    type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers'\n  ) {\n    const filter = this.getFilter(filterId);\n    const peers = (filter as DialogFilter.dialogFilter)?.[type];\n    if(!peers?.length) {\n      return;\n    }\n\n    // const missingPeerIds: PeerId[] = [];\n    const reloadDialogs = peers.filter((inputPeer) => {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      const isAlreadyReloaded = this.reloadedPeerIds.has(peerId);\n      const dialog = this.appMessagesManager.getDialogOnly(peerId);\n      // if(isAlreadyReloaded && !dialog) {\n      //   missingPeerIds.push(peerId);\n      // }\n\n      const reload = !isAlreadyReloaded && !dialog;\n      return reload;\n    });\n\n    if(!reloadDialogs.length) {\n      // if(missingPeerIds.length) {\n      //   this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n      // }\n\n      return;\n    }\n\n    const reloadPromises = reloadDialogs.map((inputPeer) => {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      const promise = this.appMessagesManager.reloadConversation(inputPeer)\n      .then((dialog) => {\n        this.reloadedPeerIds.add(peerId);\n\n        return dialog ? undefined : peerId;\n      });\n\n      return promise;\n    });\n\n    const reloadPromise = Promise.all(reloadPromises).then((missingPeerIds) => {\n      missingPeerIds = missingPeerIds.filter(Boolean);\n      if(!missingPeerIds.length) {\n        return;\n      }\n\n      // this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n    });\n\n    return reloadPromise;\n  }\n\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\n    const keys = Object.keys(this.filters);\n    if(keys.length > PREPENDED_FILTERS && !overwrite) {\n      return keys.map((filterId) => this.filters[filterId]).sort((a, b) => a.localId - b.localId);\n    }\n\n    const filters = await this.apiManager.invokeApiSingle('messages.getDialogFilters');\n    const prepended = this.prependFilters(filters);\n    return prepended.map((filter) => this.saveDialogFilter(filter, overwrite)).filter(Boolean);\n  }\n\n  public getSuggestedDialogsFilters() {\n    return this.apiManager.invokeApi('messages.getSuggestedDialogFilters');\n  }\n\n  public saveDialogFilter(filter: DialogFilter, update = true, silent?: boolean) {\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\n\n    if(filter._ === 'dialogFilterDefault') {\n      filter = this.localFilters[FOLDER_ID_ALL];\n    }\n\n    assumeType<MyDialogFilter>(filter);\n    if(!REAL_FOLDERS.has(filter.id)) {\n      convertment.forEach(([from, to]) => {\n        const arrayFrom = (filter as DialogFilter.dialogFilter)[from];\n        if(!arrayFrom) return;\n        (filter as DialogFilter.dialogFilter)[to] = arrayFrom.map((peer) => this.appPeersManager.getPeerId(peer));\n      });\n\n      this.filterIncludedPinnedPeers(filter);\n\n      filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\n      filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\n    }\n\n    const oldFilter = this.filters[filter.id];\n    if(oldFilter) {\n      filter = Object.assign(oldFilter, filter);\n    } else {\n      this.filters[filter.id] = filter;\n    }\n\n    this.setLocalId(filter);\n\n    if(!silent) {\n      if(update) {\n        this.rootScope.dispatchEvent('filter_update', filter);\n      } else if(!oldFilter) {\n        this.rootScope.dispatchEvent('filter_new', filter);\n      }\n    }\n\n    return filter;\n  }\n\n  private setLocalId(filter: MyDialogFilter) {\n    if(filter.localId !== undefined) {\n      if(filter.localId >= this.localId) {\n        this.localId = filter.localId + 1;\n      }\n    } else {\n      filter.localId = this.localId++ as MyDialogFilter['localId'];\n      findAndSplice(this.filtersArr, (_filter) => _filter.id === filter.id);\n      this.filtersArr.push(filter);\n      this.pushToState();\n    }\n  }\n\n  public async isFilterIdAvailable(filterId: number) {\n    if(REAL_FOLDERS.has(filterId)) {\n      return true;\n    }\n\n    const limit = await this.apiManager.getLimit('folders');\n    const isFolderAvailable = this.filtersArr.filter((filter) => !REAL_FOLDERS.has(filter.id)).slice(0, limit).some((filter) => filter.id === filterId);\n\n    return isFolderAvailable;\n  }\n\n  public getChatlistInput(id: number): InputChatlist {\n    return {\n      _: 'inputChatlistDialogFilter',\n      filter_id: id\n    };\n  }\n\n  /**\n   * @param filter should be client-generated\n   */\n  public exportChatlistInvite(filter: DialogFilter.dialogFilterChatlist) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.exportChatlistInvite',\n      params: {\n        chatlist: this.getChatlistInput(filter.id),\n        title: filter.title,\n        peers: filter.include_peers\n      },\n      processResult: (exportedChatlistInvite) => {\n        this.saveDialogFilter(exportedChatlistInvite.filter);\n        return exportedChatlistInvite;\n      }\n    });\n  }\n\n  public deleteExportedInvite(id: number, slug: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.deleteExportedInvite',\n      params: {\n        chatlist: this.getChatlistInput(id),\n        slug\n      }\n    });\n  }\n\n  public editExportedInvite(id: number, slug: string, peerIds: PeerId[], title: string) {\n    return this.apiManager.invokeApi('chatlists.editExportedInvite', {\n      chatlist: this.getChatlistInput(id),\n      slug,\n      title,\n      peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\n    });\n  }\n\n  public getExportedInvites(id: number) {\n    const filter = this.getFilter(id);\n    if(filter?._ === 'dialogFilter') {\n      return Promise.reject(makeError('FILTER_NOT_SUPPORTED'));\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.getExportedInvites',\n      params: {\n        chatlist: this.getChatlistInput(id)\n      },\n      processResult: (exportedInvites) => {\n        this.appUsersManager.saveApiUsers(exportedInvites.users);\n        this.appChatsManager.saveApiChats(exportedInvites.chats);\n        return exportedInvites.invites;\n      }\n    });\n  }\n\n  public checkChatlistInvite(slug: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.checkChatlistInvite',\n      params: {slug},\n      processResult: (chatlistInvite) => {\n        this.appUsersManager.saveApiUsers(chatlistInvite.users);\n        this.appChatsManager.saveApiChats(chatlistInvite.chats);\n        return chatlistInvite;\n      }\n    });\n  }\n\n  public joinChatlistInvite(slug: string, peerIds: PeerId[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.joinChatlistInvite',\n      params: {\n        slug,\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n        const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateDialogFilter') as Update.updateDialogFilter;\n        const filterId = update.id;\n        this.rootScope.dispatchEvent('filter_joined', this.getFilter(filterId));\n        return filterId;\n      }\n    });\n  }\n\n  public getChatlistUpdates(id: number) {\n    const filter = this.getFilter(id);\n    if(filter?._ !== 'dialogFilterChatlist') {\n      return Promise.reject(makeError('FILTER_NOT_SUPPORTED'));\n    }\n\n    const time = Date.now();\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.getChatlistUpdates',\n      params: {\n        chatlist: this.getChatlistInput(id)\n      },\n      processResult: (chatlistUpdates) => {\n        this.appUsersManager.saveApiUsers(chatlistUpdates.users);\n        this.appChatsManager.saveApiChats(chatlistUpdates.chats);\n\n        const filter = this.getFilter(id);\n        if(filter?._ === 'dialogFilterChatlist') {\n          filter.updatedTime = time;\n          this.pushToState();\n        }\n\n        return chatlistUpdates;\n      }\n    });\n  }\n\n  public joinChatlistUpdates(id: number, peerIds: PeerId[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.joinChatlistUpdates',\n      params: {\n        chatlist: this.getChatlistInput(id),\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }\n    });\n  }\n\n  public hideChatlistUpdates(id: number) {\n    return this.apiManager.invokeApiSingle('chatlists.hideChatlistUpdates', {\n      chatlist: this.getChatlistInput(id)\n    });\n  }\n\n  public getLeaveChatlistSuggestions(id: number) {\n    return this.apiManager.invokeApiSingle('chatlists.getLeaveChatlistSuggestions', {\n      chatlist: this.getChatlistInput(id)\n    });\n  }\n\n  public leaveChatlist(id: number, peerIds: PeerId[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.leaveChatlist',\n      params: {\n        chatlist: this.getChatlistInput(id),\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }\n    });\n  }\n}\n","export default function filterUnique<T extends Array<any>>(arr: T): T {\n  return [...new Set(arr)] as T;\n}\n","// Copyright Twitter Inc. Licensed under MIT\n// https://github.com/twitter/twemoji-parser/blob/master/LICENSE.md\n\nconst originalString = '((?:\\ud83d\\udc68\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffc-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc68\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udffe]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffc-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffe]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc69\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83e\\udef1\\ud83c\\udffb\\u200d\\ud83e\\udef2\\ud83c[\\udffc-\\udfff]|\\ud83e\\udef1\\ud83c\\udffc\\u200d\\ud83e\\udef2\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\udef1\\ud83c\\udffd\\u200d\\ud83e\\udef2\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\udef1\\ud83c\\udffe\\u200d\\ud83e\\udef2\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\udef1\\ud83c\\udfff\\u200d\\ud83e\\udef2\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68|\\ud83d\\udc69\\u200d\\u2764\\ufe0f?\\u200d\\ud83d[\\udc68\\udc69]|\\ud83e\\uddd1\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1|\\ud83d\\udc6b\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc6c\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc6d\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc8f\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc91\\ud83c[\\udffb-\\udfff]|\\ud83e\\udd1d\\ud83c[\\udffb-\\udfff]|\\ud83d[\\udc6b-\\udc6d\\udc8f\\udc91]|\\ud83e\\udd1d)|(?:\\ud83d[\\udc68\\udc69]|\\ud83e\\uddd1)(?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f?|\\u2696\\ufe0f?|\\u2708\\ufe0f?|\\ud83c[\\udf3e\\udf73\\udf7c\\udf84\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92]|\\ud83e[\\uddaf-\\uddb3\\uddbc\\uddbd])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75]|\\u26f9)(?:(?:\\ud83c[\\udffb-\\udfff]|\\ufe0f?)\\u200d[\\u2640\\u2642]\\ufe0f?)|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc70\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd35\\udd37-\\udd39\\udd3d\\udd3e\\uddb8\\uddb9\\uddcd-\\uddcf\\uddd4\\uddd6-\\udddd])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f?|(?:\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f?\\u200d\\u26a7\\ufe0f?|\\ud83c\\udff3\\ufe0f?\\u200d\\ud83c\\udf08|\\ud83d\\ude36\\u200d\\ud83c\\udf2b\\ufe0f?|\\u2764\\ufe0f?\\u200d\\ud83d\\udd25|\\u2764\\ufe0f?\\u200d\\ud83e\\ude79|\\ud83c\\udff4\\u200d\\u2620\\ufe0f?|\\ud83d\\udc15\\u200d\\ud83e\\uddba|\\ud83d\\udc3b\\u200d\\u2744\\ufe0f?|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f?|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f?|\\ud83d\\ude2e\\u200d\\ud83d\\udca8|\\ud83d\\ude35\\u200d\\ud83d\\udcab|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f?|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f?|\\ud83e\\uddde\\u200d\\u2640\\ufe0f?|\\ud83e\\uddde\\u200d\\u2642\\ufe0f?|\\ud83e\\udddf\\u200d\\u2640\\ufe0f?|\\ud83e\\udddf\\u200d\\u2642\\ufe0f?|\\ud83d\\udc08\\u200d\\u2b1b)|[#*0-9]\\ufe0f??\\u20e3|(?:[©®\\u2122\\u265f]\\ufe0f?)|(?:\\ud83c[\\udc04\\udd70\\udd71\\udd7e\\udd7f\\ude02\\ude1a\\ude2f\\ude37\\udf21\\udf24-\\udf2c\\udf36\\udf7d\\udf96\\udf97\\udf99-\\udf9b\\udf9e\\udf9f\\udfcd\\udfce\\udfd4-\\udfdf\\udff3\\udff5\\udff7]|\\ud83d[\\udc3f\\udc41\\udcfd\\udd49\\udd4a\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa\\udecb\\udecd-\\udecf\\udee0-\\udee5\\udee9\\udef0\\udef3]|[\\u203c\\u2049\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23ed-\\u23ef\\u23f1\\u23f2\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638-\\u263a\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26a7\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u2764\\u27a1\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299])(?:\\ufe0f?|(?!\\ufe0e))|(?:(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75\\udd90]|[\\u261d\\u26f7\\u26f9\\u270c\\u270d])(?:\\ufe0f?|(?!\\ufe0e))|(?:\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd7a\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd0c\\udd0f\\udd18-\\udd1c\\udd1e\\udd1f\\udd26\\udd30-\\udd39\\udd3d\\udd3e\\udd77\\uddb5\\uddb6\\uddb8\\uddb9\\uddbb\\uddcd-\\uddcf\\uddd1-\\udddd\\udec3-\\udec5\\udef0-\\udef6]|[\\u270a\\u270b]))(?:\\ud83c[\\udffb-\\udfff])?|(?:\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc65\\udb40\\udc6e\\udb40\\udc67\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc73\\udb40\\udc63\\udb40\\udc74\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc77\\udb40\\udc6c\\udb40\\udc73\\udb40\\udc7f|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\ud83c[\\udccf\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude32-\\ude36\\ude38-\\ude3a\\ude50\\ude51\\udf00-\\udf20\\udf2d-\\udf35\\udf37-\\udf7c\\udf7e-\\udf84\\udf86-\\udf93\\udfa0-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcf-\\udfd3\\udfe0-\\udff0\\udff4\\udff8-\\udfff]|\\ud83d[\\udc00-\\udc3e\\udc40\\udc44\\udc45\\udc51-\\udc65\\udc6a\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udc8e\\udc90\\udc92-\\udca9\\udcab-\\udcfc\\udcff-\\udd3d\\udd4b-\\udd4e\\udd50-\\udd67\\udda4\\uddfb-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\uded0-\\uded2\\uded5-\\uded7\\udedd-\\udedf\\udeeb\\udeec\\udef4-\\udefc\\udfe0-\\udfeb\\udff0]|\\ud83e[\\udd0d\\udd0e\\udd10-\\udd17\\udd20-\\udd25\\udd27-\\udd2f\\udd3a\\udd3c\\udd3f-\\udd45\\udd47-\\udd76\\udd78-\\uddb4\\uddb7\\uddba\\uddbc-\\uddcc\\uddd0\\uddde-\\uddff\\ude70-\\ude74\\ude78-\\ude7c\\ude80-\\ude86\\ude90-\\udeac\\udeb0-\\udeba\\udec0-\\udec2\\uded0-\\uded9\\udee0-\\udee7]|[\\u23e9-\\u23ec\\u23f0\\u23f3\\u267e\\u26ce\\u2705\\u2728\\u274c\\u274e\\u2753-\\u2755\\u2795-\\u2797\\u27b0\\u27bf\\ue50a])|\\ufe0f)';\nexport default originalString;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport emojiRegExp from '../../vendor/emoji/regex';\nimport {MessageEntity} from '../../layer';\n\nconst EmojiHelper = {\n  emojiMap: (code: string) => { return code; },\n  shortcuts: [] as any,\n  emojis: [] as any\n};\n\nexport const ALPHA_CHARS_REG_EXP = 'a-z' +\n  '\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u00ff' + // Latin-1\n  '\\\\u0100-\\\\u024f' + // Latin Extended A and B\n  '\\\\u0253\\\\u0254\\\\u0256\\\\u0257\\\\u0259\\\\u025b\\\\u0263\\\\u0268\\\\u026f\\\\u0272\\\\u0289\\\\u028b' + // IPA Extensions\n  '\\\\u02bb' + // Hawaiian\n  '\\\\u0300-\\\\u036f' + // Combining diacritics\n  '\\\\u1e00-\\\\u1eff' + // Latin Extended Additional (mostly for Vietnamese)\n  '\\\\u0400-\\\\u04ff\\\\u0500-\\\\u0527' + // Cyrillic\n  '\\\\u2de0-\\\\u2dff\\\\ua640-\\\\ua69f' + // Cyrillic Extended A/B\n  '\\\\u0591-\\\\u05bf\\\\u05c1-\\\\u05c2\\\\u05c4-\\\\u05c5\\\\u05c7' +\n  '\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f4' + // Hebrew\n  '\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41' +\n  '\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4f' + // Hebrew Pres. Forms\n  '\\\\u0610-\\\\u061a\\\\u0620-\\\\u065f\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc' +\n  '\\\\u06de-\\\\u06e8\\\\u06ea-\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff' + // Arabic\n  '\\\\u0750-\\\\u077f\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u08e4-\\\\u08fe' + // Arabic Supplement and Extended A\n  '\\\\ufb50-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb' + // Pres. Forms A\n  '\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc' + // Pres. Forms B\n  '\\\\u200c' + // Zero-Width Non-Joiner\n  '\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e' + // Thai\n  '\\\\u1100-\\\\u11ff\\\\u3130-\\\\u3185\\\\uA960-\\\\uA97F\\\\uAC00-\\\\uD7AF\\\\uD7B0-\\\\uD7FF' + // Hangul (Korean)\n  '\\\\u3003\\\\u3005\\\\u303b' + // Kanji/Han iteration marks\n  '\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a' + // full width Alphabet\n  '\\\\uff66-\\\\uff9f' + // half width Katakana\n  '\\\\uffa1-\\\\uffdc'; // half width Hangul (Korean)\nexport const ALPHA_NUMERIC_REG_EXP = '0-9\\_' + ALPHA_CHARS_REG_EXP;\nexport const DOMAIN_ADD_CHARS = '\\u00b7';\n// Based on Regular Expression for URL validation by Diego Perini\nexport const URL_ALPHANUMERIC_REG_EXP_PART = '[' + ALPHA_CHARS_REG_EXP + '0-9]';\nexport const URL_PROTOCOL_REG_EXP_PART = '((?:https?|ftp)://|mailto:)?';\nexport const URL_REG_EXP = URL_PROTOCOL_REG_EXP_PART +\n  // user:pass authentication\n  '(?:' + URL_ALPHANUMERIC_REG_EXP_PART + '{1,64}(?::' + URL_ALPHANUMERIC_REG_EXP_PART + '{0,64})?@)?' +\n  '(?:' +\n  // sindresorhus/ip-regexp\n  '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}' +\n  '|' +\n  // host name\n  URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}' +\n  // domain name\n  '(?:\\\\.' + URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}){0,10}' +\n  // TLD identifier\n  '(?:\\\\.(xn--[0-9a-z]{2,16}|[' + ALPHA_CHARS_REG_EXP + ']{2,24}))' +\n  ')' +\n  // port number\n  '(?::\\\\d{2,5})?' +\n  // resource path\n  '(?:/(?:\\\\S{0,255}[^\\\\s.;,(\\\\[\\\\]{}<>\"\\'])?)?';\nexport const URL_PROTOCOL_REG_EXP = new RegExp('^' + URL_PROTOCOL_REG_EXP_PART.slice(0, -1), 'i');\nexport const USERNAME_REG_EXP = '[a-zA-Z\\\\d_]{5,32}';\nexport const TIMESTAMP_REG_EXP = '(?:\\\\s|^)((?:\\\\d{1,2}:)?(?:[0-5]?[0-9]):(?:[0-5][0-9]))(?:\\\\s|$)';\nexport const BOT_COMMAND_REG_EXP = '\\\\/([a-zA-Z\\\\d_]{1,32})(?:@(' + USERNAME_REG_EXP + '))?(\\\\b|$)';\nexport const FULL_REG_EXP = new RegExp('(^| )(@)(' + USERNAME_REG_EXP + ')|(' + URL_REG_EXP + ')|(\\\\n)|(' + emojiRegExp + ')|(^|[\\\\s\\\\(\\\\]])(#[' + ALPHA_NUMERIC_REG_EXP + ']{2,64})|(^|\\\\s)' + BOT_COMMAND_REG_EXP + '|' + TIMESTAMP_REG_EXP + '', 'i');\nexport const EMAIL_REG_EXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// const markdownTestRegExp = /[`_*@~]/;\nexport const MARKDOWN_REG_EXP = /(^|\\s|\\n)(````?)([\\s\\S]+?)(````?)([\\s\\n\\.,:?!;]|$)|(^|\\s|\\x01)(`|~~|\\*\\*|__|_-_|\\|\\|)([^\\n]+?)\\7([\\x01\\s\\.,:?!;]|$)|@(\\d+)\\s*\\((.+?)\\)|(\\[(.+?)\\]\\((.+?)\\))/m;\nexport const SITE_HASHTAGS: {[siteName: string]: string} = {\n  'Telegram': 'tg://search_hashtag?hashtag={1}',\n  'Twitter': 'https://twitter.com/hashtag/{1}',\n  'Instagram': 'https://instagram.com/explore/tags/{1}/',\n  'Google Plus': 'https://plus.google.com/explore/{1}'\n};\n\n// export const SITE_MENTIONS: {[siteName in 'Telegram' | 'Twitter' | 'Instagram' | 'GitHub']: string} = {\n//   Telegram: '#{1}',\n//   Twitter: 'https://twitter.com/{1}',\n//   Instagram: 'https://instagram.com/{1}/',\n//   GitHub: 'https://github.com/{1}'\n// };\n\nexport const MARKDOWN_ENTITIES: {[markdown: string]: MessageEntity['_']} = {\n  '`': 'messageEntityCode',\n  '``': 'messageEntityPre',\n  '**': 'messageEntityBold',\n  '__': 'messageEntityItalic',\n  '~~': 'messageEntityStrike',\n  '_-_': 'messageEntityUnderline',\n  '||': 'messageEntitySpoiler'\n};\n\nexport const MARKDOWN_ENTITIES_TYPES = new Set(Object.values(MARKDOWN_ENTITIES));\n\nexport const PASS_CONFLICTING_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityEmoji',\n  'messageEntityLinebreak',\n  'messageEntityCaret'\n]);\nexport const PASS_SINGLE_CONFLICTING_ENTITIES = new Set(PASS_CONFLICTING_ENTITIES);\nfor(const i in MARKDOWN_ENTITIES) {\n  PASS_CONFLICTING_ENTITIES.add(MARKDOWN_ENTITIES[i]);\n}\n\nexport const PHONE_NUMBER_REG_EXP = /^\\+\\d+$/;\n\n/* export function parseEmojis(text: string) {\n  return text.replace(/:([a-z0-9\\-\\+\\*_]+?):/gi, function (all, shortcut) {\n    var emojiCode = EmojiHelper.shortcuts[shortcut]\n    if (emojiCode !== undefined) {\n      return EmojiHelper.emojis[emojiCode][0]\n    }\n    return all\n  })\n} */\n\n\n/* export function replaceUrlEncodings(urlWithEncoded: string) {\n  return urlWithEncoded.replace(/(%[A-Z\\d]{2})+/g, (str) => {\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  });\n} */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MessageEntity} from '../../layer';\n\nconst CAN_COMBINE_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityBold',\n  'messageEntityItalic',\n  'messageEntityCode',\n  'messageEntityPre',\n  'messageEntityUnderline',\n  'messageEntityStrike',\n  'messageEntityBlockquote',\n  'messageEntitySpoiler'\n]);\nexport default function combineSameEntities(entities: MessageEntity[]) {\n  // entities = entities.slice();\n  for(let i = 0; i < entities.length; ++i) {\n    const entity = entities[i];\n\n    let nextEntityIdx = -1;\n    do {\n      nextEntityIdx = entities.findIndex((e, _i) => {\n        return CAN_COMBINE_ENTITIES.has(e._) && _i !== i && e._ === entity._ && (e.offset - entity.length) === entity.offset;\n      });\n\n      if(nextEntityIdx !== -1) {\n        const nextEntity = entities[nextEntityIdx];\n        entity.length += nextEntity.length;\n        entities.splice(nextEntityIdx, 1);\n      }\n    } while(nextEntityIdx !== -1);\n  }\n  // return entities;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {PASS_CONFLICTING_ENTITIES, PASS_SINGLE_CONFLICTING_ENTITIES} from '.';\nimport {MessageEntity} from '../../layer';\n\nconst SINGLE_ENTITIES: Set<MessageEntity['_']> = new Set(['messageEntityPre', 'messageEntityCode']);\n\nexport default function findConflictingEntity(currentEntities: MessageEntity[], newEntity: MessageEntity) {\n  let singleEnd = -1;\n  return currentEntities.find((currentEntity) => {\n    if(SINGLE_ENTITIES.has(currentEntity._)) {\n      singleEnd = currentEntity.offset + currentEntity.length;\n    }\n\n    if(newEntity.offset < singleEnd && !PASS_SINGLE_CONFLICTING_ENTITIES.has(newEntity._)) {\n      return true;\n    }\n\n    const isConflictingTypes = newEntity._ === currentEntity._ ||\n      (!PASS_CONFLICTING_ENTITIES.has(newEntity._) && !PASS_CONFLICTING_ENTITIES.has(currentEntity._));\n\n    if(!isConflictingTypes) {\n      return false;\n    }\n\n    const isConflictingOffset = newEntity.offset >= currentEntity.offset &&\n      (newEntity.length + newEntity.offset) <= (currentEntity.length + currentEntity.offset);\n\n    return isConflictingOffset;\n  });\n}\n","import {MessageEntity} from '../../layer';\n\nexport default function sortEntities(entities: MessageEntity[]) {\n  entities.sort((a, b) => {\n    return (a.offset - b.offset) || (b.length - a.length);\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MessageEntity} from '../../layer';\nimport findConflictingEntity from './findConflictingEntity';\nimport sortEntities from './sortEntities';\n\nexport default function mergeEntities(currentEntities: MessageEntity[], newEntities: MessageEntity[]) {\n  const filtered = newEntities.filter((e) => {\n    return !findConflictingEntity(currentEntities, e);\n  });\n\n  currentEntities.push(...filtered);\n  sortEntities(currentEntities);\n  // currentEntities.sort((a, b) => a.offset - b.offset);\n  // currentEntities.sort((a, b) => (a.offset - b.offset) || (a._ === 'messageEntityCaret' && -1));\n\n  // * fix splitted emoji. messageEntityTextUrl can split the emoji if starts before its end (e.g. on fe0f)\n  // * have to fix even if emoji supported since it's being wrapped in span\n  // if(!IS_EMOJI_SUPPORTED) {\n  for(let i = 0; i < currentEntities.length; ++i) {\n    const entity = currentEntities[i];\n    if(entity._ === 'messageEntityEmoji') {\n      const nextEntity = currentEntities[i + 1];\n      if(nextEntity /* && nextEntity._ !== 'messageEntityCaret' */ && nextEntity.offset < (entity.offset + entity.length)) {\n        entity.length = nextEntity.offset - entity.offset;\n      }\n    }\n  }\n  // }\n\n  return currentEntities;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {MARKDOWN_ENTITIES, MARKDOWN_REG_EXP} from '.';\nimport {MessageEntity} from '../../layer';\nimport combineSameEntities from './combineSameEntities';\nimport findConflictingEntity from './findConflictingEntity';\nimport mergeEntities from './mergeEntities';\n\nexport default function parseMarkdown(raw: string, currentEntities: MessageEntity[], noTrim?: boolean): string {\n  /* if(!markdownTestRegExp.test(text)) {\n    return noTrim ? text : text.trim();\n  } */\n\n  const entities: MessageEntity[] = [];\n  let pushedEntity = false;\n  const pushEntity = (entity: MessageEntity) => !findConflictingEntity(currentEntities, entity) ? (entities.push(entity), pushedEntity = true) : pushedEntity = false;\n\n  const newTextParts: string[] = [];\n  let rawOffset = 0, match;\n  while(match = raw.match(MARKDOWN_REG_EXP)) {\n    const matchIndex = rawOffset + match.index;\n    newTextParts.push(raw.substr(0, match.index));\n    const text = (match[3] || match[8] || match[11] || match[13]);\n    rawOffset -= text.length;\n    // text = text.replace(/^\\s+|\\s+$/g, '');\n    rawOffset += text.length;\n\n    let entity: MessageEntity;\n    pushedEntity = false;\n    if(text.match(/^`*$/)) {\n      newTextParts.push(match[0]);\n    } else if(match[3]) { // pre\n      entity = {\n        _: 'messageEntityPre',\n        language: '',\n        offset: matchIndex + match[1].length,\n        length: text.length\n      };\n\n      if(pushEntity(entity)) {\n        if(match[5] === '\\n') {\n          match[5] = '';\n          rawOffset -= 1;\n        }\n\n        newTextParts.push(match[1] + text + match[5]);\n\n        rawOffset -= match[2].length + match[4].length;\n      }\n    } else if(match[7]) { // code|italic|bold\n      const isSOH = match[6] === '\\x01';\n\n      entity = {\n        _: MARKDOWN_ENTITIES[match[7]] as (MessageEntity.messageEntityBold | MessageEntity.messageEntityCode | MessageEntity.messageEntityItalic | MessageEntity.messageEntitySpoiler)['_'],\n        // offset: matchIndex + match[6].length,\n        offset: matchIndex + (isSOH ? 0 : match[6].length),\n        length: text.length\n      };\n\n      if(pushEntity(entity)) {\n        if(!isSOH) {\n          newTextParts.push(match[6] + text + match[9]);\n        } else {\n          newTextParts.push(text);\n        }\n\n        rawOffset -= match[7].length * 2 + (isSOH ? 2 : 0);\n      }\n    } else if(match[11]) { // custom mention\n      entity = {\n        _: 'messageEntityMentionName',\n        user_id: match[10].toUserId(),\n        offset: matchIndex,\n        length: text.length\n      };\n\n      if(pushEntity(entity)) {\n        newTextParts.push(text);\n\n        rawOffset -= match[0].length - text.length;\n      }\n    } else if(match[12]) { // text url\n      entity = {\n        _: 'messageEntityTextUrl',\n        url: match[14],\n        offset: matchIndex,\n        length: text.length\n      };\n\n      if(pushEntity(entity)) {\n        newTextParts.push(text);\n\n        rawOffset -= match[12].length - text.length;\n      }\n    }\n\n    if(!pushedEntity) {\n      newTextParts.push(match[0]);\n    }\n\n    raw = raw.substr(match.index + match[0].length);\n    rawOffset += match.index + match[0].length;\n  }\n\n  newTextParts.push(raw);\n  let newText = newTextParts.join('');\n  if(!newText.replace(/\\s+/g, '').length) {\n    newText = raw;\n    entities.splice(0, entities.length);\n  }\n\n  // ! idk what it was here for\n  // if(!entities.length && !noTrim) {\n  //   newText = newText.trim();\n  // }\n\n  mergeEntities(currentEntities, entities);\n  combineSameEntities(currentEntities);\n\n  let length = newText.length;\n  if(!noTrim) {\n    // trim left\n    newText = newText.replace(/^\\s*/, '');\n\n    let diff = length - newText.length;\n    if(diff) {\n      currentEntities.forEach((entity) => {\n        entity.offset = Math.max(0, entity.offset - diff);\n      });\n    }\n\n    // trim right\n    newText = newText.replace(/\\s*$/, '');\n    diff = length - newText.length;\n    length = newText.length;\n    if(diff) {\n      currentEntities.forEach((entity) => {\n        if((entity.offset + entity.length) > length) {\n          entity.length = length - entity.offset;\n        }\n      });\n    }\n  }\n\n  return newText;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function applyMixins(derivedCtor: any, constructors: any[]) {\n  // const callbacks: Array<(...args: any[]) => any> = [];\n\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      const value: PropertyDescriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null);\n      /* if(name === '_constructor') {\n        callbacks.push(value.value);\n        return;\n      } else  */if(name === 'constructor') {\n        return;\n      }\n\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        value\n      );\n    });\n  });\n\n  // if(callbacks.length) {\n  //   function c(...args: any[]): any {\n  //     callbacks.forEach((cb, idx) => {\n  //       // @ts-ignore\n  //       cb.apply(this, args[idx] || []);\n  //     });\n  //   };\n\n  //   Object.defineProperty(derivedCtor.prototype, 'superConstructor', {\n  //     configurable: true,\n  //     enumerable: true,\n  //     value: c,\n  //     writable: true\n  //   });\n  // }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport DEBUG from '../../config/debug';\nimport {ConstructorDeclMap, Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates} from '../../layer';\nimport {logger, LogTypes} from '../logger';\nimport assumeType from '../../helpers/assumeType';\nimport App from '../../config/app';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport {AppManager} from './manager';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport ctx from '../../environment/ctx';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport applyMixins from '../../helpers/applyMixins';\nimport tsNow from '../../helpers/tsNow';\n\ntype UpdatesState = {\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\n  syncPending: {\n    seqAwaiting?: number,\n    ptsAwaiting?: boolean,\n    timeout: number\n  },\n  syncLoading: Promise<void>,\n\n  seq?: number,\n  pts?: number,\n  date?: number,\n  lastPtsUpdateTime?: number,\n  lastDifferenceTime?: number\n};\n\nconst SYNC_DELAY = 6;\n\nclass ApiUpdatesManager {\n  public updatesState: UpdatesState = {\n    pendingPtsUpdates: [],\n    pendingSeqUpdates: {},\n    syncPending: null,\n    syncLoading: null\n  };\n\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\n  private attached = false;\n\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\n  private debug = DEBUG;\n\n  private subscriptions: {[channelId: ChatId]: {count: number, interval?: number}} = {};\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  private setProxy() {\n    const self = this;\n    this.updatesState = new Proxy(this.updatesState, {\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\n        // @ts-ignore\n        target[key] = value;\n        self.saveUpdatesState();\n        return true;\n      }\n    });\n  }\n\n  public saveUpdatesState() {\n    const us = this.updatesState;\n    this.appStateManager.pushToState('updates', {\n      seq: us.seq,\n      pts: us.pts,\n      date: us.date\n    });\n  }\n\n  private popPendingSeqUpdate() {\n    const state = this.updatesState;\n    const nextSeq = state.seq + 1;\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\n    if(!pendingUpdatesData) {\n      return false;\n    }\n\n    const updates = pendingUpdatesData.updates;\n    for(let i = 0, length = updates.length; i < length; ++i) {\n      this.saveUpdate(updates[i]);\n    }\n\n    state.seq = pendingUpdatesData.seq;\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\n      state.date = pendingUpdatesData.date;\n    }\n    delete state.pendingSeqUpdates[nextSeq];\n\n    if(!this.popPendingSeqUpdate() &&\n      state.syncPending?.seqAwaiting &&\n      state.seq >= state.syncPending.seqAwaiting) {\n      if(!state.syncPending.ptsAwaiting) {\n        this.clearStatePendingSync(state);\n      } else {\n        delete state.syncPending.seqAwaiting;\n      }\n    }\n\n    return true;\n  }\n\n  private popPendingPtsUpdate(channelId: ChatId) {\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\n    if(!curState.pendingPtsUpdates.length) {\n      return false;\n    }\n\n    curState.pendingPtsUpdates.sort((a, b) => {\n      return a.pts - b.pts;\n    });\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\n\n    let curPts = curState.pts;\n    let goodPts = 0;\n    let goodIndex = 0;\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n      curPts += update.pts_count;\n      if(curPts >= update.pts) {\n        goodPts = update.pts;\n        goodIndex = i;\n      }\n    }\n\n    if(!goodPts) {\n      return false;\n    }\n\n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\n\n    curState.pts = goodPts;\n    for(let i = 0; i <= goodIndex; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n\n      // @ts-ignore\n      this.saveUpdate(update);\n    }\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\n\n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\n      if(!curState.syncPending.seqAwaiting) {\n        this.clearStatePendingSync(curState);\n      } else {\n        delete curState.syncPending.ptsAwaiting;\n      }\n    }\n\n    return true;\n  }\n\n  public forceGetDifference() {\n    if(!this.updatesState.syncLoading) {\n      this.getDifference();\n    }\n  }\n\n  public processLocalUpdate(update: Update) {\n    this.processUpdateMessage({\n      _: 'updateShort',\n      update\n    } as Updates);\n  }\n\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\n    override: boolean\n  }> = {}) => {\n    // return forceGetDifference()\n    const processOpts = {\n      date: updateMessage.date,\n      seq: updateMessage.seq,\n      seqStart: updateMessage.seq_start\n      // ignoreSyncLoading: options.ignoreSyncLoading\n    };\n\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\n\n    switch(updateMessage._) {\n      case 'updatesTooLong':\n      case 'new_session_created':\n        this.forceGetDifference();\n        break;\n\n      case 'updateShort':\n        this.processUpdate(updateMessage.update, processOpts);\n        break;\n\n      case 'updateShortMessage':\n      case 'updateShortChatMessage': {\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\n        const isOut = updateMessage.pFlags.out;\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? this.appPeersManager.peerId : (updateMessage as Updates.updateShortMessage).user_id);\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id ?\n          (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true) :\n          ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || this.appPeersManager.peerId);\n\n        this.processUpdate({\n          _: 'updateNewMessage',\n          message: {\n            _: 'message',\n            pFlags: updateMessage.pFlags,\n            id: updateMessage.id,\n            from_id: this.appPeersManager.getOutputPeer(fromId.toPeerId()),\n            peer_id: this.appPeersManager.getOutputPeer(toId),\n            date: updateMessage.date,\n            message: updateMessage.message,\n            fwd_from: updateMessage.fwd_from,\n            reply_to: updateMessage.reply_to,\n            entities: updateMessage.entities\n          },\n          pts: updateMessage.pts,\n          pts_count: updateMessage.pts_count\n        }, processOpts);\n        break;\n      }\n\n      case 'updatesCombined':\n      case 'updates':\n        this.appUsersManager.saveApiUsers(updateMessage.users, options.override);\n        this.appChatsManager.saveApiChats(updateMessage.chats, options.override);\n\n        updateMessage.updates.forEach((update: Update) => {\n          this.processUpdate(update, processOpts);\n        });\n        break;\n\n      default:\n        this.log.warn('Unknown update message', updateMessage);\n    }\n  };\n\n  private getDifference(first = false): Promise<void> {\n    // this.trace('Get full diff')\n    const updatesState = this.updatesState;\n    const wasSyncing = updatesState.syncLoading;\n    if(!wasSyncing) {\n      updatesState.pendingSeqUpdates = {};\n      updatesState.pendingPtsUpdates = [];\n    }\n\n    this.clearStatePendingSync(updatesState);\n\n    const promise = this.apiManager.invokeApi('updates.getDifference', {\n      pts: updatesState.pts,\n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\n      date: updatesState.date,\n      qts: -1\n    }, {\n      timeout: 0x7fffffff\n    }).then((differenceResult) => {\n      this.debug && this.log.debug('Get diff result', differenceResult);\n\n      if(differenceResult._ === 'updates.differenceEmpty') {\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\n        updatesState.date = differenceResult.date;\n        updatesState.seq = differenceResult.seq;\n        return;\n      }\n\n      // ! SORRY I'M SORRY I'M SORRY\n      if(first) {\n        this.rootScope.dispatchEvent('state_synchronizing');\n      }\n\n      if(differenceResult._ !== 'updates.differenceTooLong') {\n        this.appUsersManager.saveApiUsers(differenceResult.users);\n        this.appChatsManager.saveApiChats(differenceResult.chats);\n\n        // Should be first because of updateMessageID\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\n\n        differenceResult.other_updates.forEach((update) => {\n          switch(update._) {\n            case 'updateChannelTooLong':\n            case 'updateNewChannelMessage':\n            case 'updateEditChannelMessage':\n              this.processUpdate(update);\n              return;\n          }\n\n          this.saveUpdate(update);\n        });\n\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\n        differenceResult.new_messages.forEach((apiMessage) => {\n          this.saveUpdate({\n            _: 'updateNewMessage',\n            message: apiMessage,\n            pts: updatesState.pts,\n            pts_count: 0\n          });\n        });\n\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\n        updatesState.seq = nextState.seq;\n        updatesState.pts = nextState.pts;\n        updatesState.date = nextState.date;\n      } else {\n        updatesState.pts = differenceResult.pts;\n        updatesState.date = tsNow(true) + this.timeManager.getServerTimeOffset();\n        delete updatesState.seq;\n\n        this.channelStates = {};\n\n        this.log.warn('getDifference:', differenceResult._);\n        this.onDifferenceTooLong();\n      }\n\n      // this.log('apply diff', updatesState.seq, updatesState.pts)\n\n      if(differenceResult._ === 'updates.differenceSlice') {\n        return this.getDifference();\n      } else {\n        this.debug && this.log.debug('finished get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(updatesState, promise);\n    }\n\n    return promise;\n  }\n\n  private clearStatePendingSync(state: UpdatesState) {\n    if(state.syncPending) {\n      clearTimeout(state.syncPending.timeout);\n      state.syncPending = null;\n    }\n  }\n\n  private getChannelDifference(channelId: ChatId): Promise<void> {\n    const channelState = this.getChannelState(channelId);\n    const wasSyncing = channelState.syncLoading;\n    if(!wasSyncing) {\n      channelState.pendingPtsUpdates = [];\n    }\n\n    this.clearStatePendingSync(channelState);\n\n    const log = this.debug ? this.log.bindPrefix('getChannelDifference-' + channelId) : undefined;\n    // this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\n    const promise = this.apiManager.invokeApi('updates.getChannelDifference', {\n      channel: this.appChatsManager.getChannelInput(channelId),\n      filter: {_: 'channelMessagesFilterEmpty'},\n      pts: channelState.pts,\n      limit: 1000\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\n      log?.debug('diff result', differenceResult)\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\n      channelState.lastDifferenceTime = Date.now();\n\n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\n        // log?.debug('apply channel empty diff', differenceResult);\n        return;\n      }\n\n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\n        // log?.debug('channel diff too long', differenceResult);\n        delete this.channelStates[channelId];\n\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\n        return;\n      }\n\n      this.appUsersManager.saveApiUsers(differenceResult.users);\n      this.appChatsManager.saveApiChats(differenceResult.chats);\n\n      // Should be first because of updateMessageID\n      log?.debug('applying', differenceResult.other_updates.length, 'channel other updates');\n      differenceResult.other_updates.forEach((update) => {\n        this.saveUpdate(update);\n      });\n\n      log?.debug('applying', differenceResult.new_messages.length, 'channel new messages');\n      differenceResult.new_messages.forEach((apiMessage) => {\n        this.saveUpdate({\n          _: 'updateNewChannelMessage',\n          message: apiMessage,\n          pts: channelState.pts,\n          pts_count: 0\n        });\n      });\n\n      log?.debug('apply channel diff', channelState.pts);\n\n      if(differenceResult._ === 'updates.channelDifference' &&\n        !differenceResult.pFlags.final) {\n        return this.getChannelDifference(channelId);\n      } else {\n        log?.debug('finished channel get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(channelState, promise, channelId);\n    }\n\n    return promise;\n  }\n\n  private onDifferenceTooLong() {\n    for(const i in this) {\n      const value = this[i];\n      if(value instanceof AppManager) {\n        value.clear?.();\n      }\n    }\n\n    this.rootScope.dispatchEvent('state_cleared');\n  }\n\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\n    state.syncLoading = promise;\n    this.rootScope.dispatchEvent('state_synchronizing', channelId);\n\n    promise.then(() => {\n      state.syncLoading = null;\n      this.rootScope.dispatchEvent('state_synchronized', channelId);\n    }, () => {\n      state.syncLoading = null;\n    });\n  }\n\n  public addChannelState(channelId: ChatId, pts: number) {\n    if(!pts) {\n      throw new Error('Add channel state without pts ' + channelId);\n    }\n\n    return this.channelStates[channelId] ??= {\n      pts,\n      pendingPtsUpdates: [],\n      syncPending: null,\n      syncLoading: null\n    };\n  }\n\n  public getChannelState(channelId: ChatId, pts?: number) {\n    if(this.channelStates[channelId] === undefined) {\n      this.addChannelState(channelId, pts);\n    }\n\n    return this.channelStates[channelId];\n  }\n\n  private processUpdate(update: Update, options: Partial<{\n    date: number,\n    seq: number,\n    seqStart: number/* ,\n    ignoreSyncLoading: boolean */\n  }> = {}) {\n    let channelId: ChatId;\n    switch(update._) {\n      case 'updateNewChannelMessage':\n      case 'updateEditChannelMessage':\n        channelId = this.appPeersManager.getPeerId(update.message.peer_id).toChatId();\n        break;\n      /* case 'updateDeleteChannelMessages':\n        channelId = update.channel_id;\n        break; */\n      case 'updateChannelTooLong':\n        channelId = update.channel_id;\n        if(!(channelId in this.channelStates)) {\n          return false;\n        }\n        break;\n      default:\n        if('channel_id' in update && 'pts' in update) {\n          channelId = update.channel_id;\n        }\n        break;\n    }\n\n    const {pts, pts_count} = update as Update.updateNewMessage;\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\n\n    // this.log.log('process', channelId, curState.pts, update)\n\n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\n      return false;\n    }\n\n    if(update._ === 'updateChannelTooLong') {\n      if(!curState.lastPtsUpdateTime ||\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\n        // this.log.trace('channel too long, get diff', channelId, update)\n        this.getChannelDifference(channelId);\n      }\n      return false;\n    }\n\n    if(update._ === 'updateNewMessage' ||\n        update._ === 'updateEditMessage' ||\n        update._ === 'updateNewChannelMessage' ||\n        update._ === 'updateEditChannelMessage') {\n      const message = update.message as Message.message;\n      const toPeerId = this.appPeersManager.getPeerId(message.peer_id);\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\n      let reason: string;\n      if(message.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\n          fwdHeader.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !this.appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\n          toPeerId.isUser() && !this.appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\n          toPeerId.isAnyChat() && !this.appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\n        this.log.warn('Not enough data for message update', toPeerId, reason, message);\n        if(channelId && this.appChatsManager.hasChat(channelId)) {\n          this.getChannelDifference(channelId);\n        } else {\n          this.forceGetDifference();\n        }\n        return false;\n      }\n    } else if(channelId && !this.appChatsManager.hasChat(channelId)) {\n      // this.log.log('skip update, missing channel', channelId, update)\n      return false;\n    }\n\n    let popPts: boolean;\n    let popSeq: boolean;\n\n    if(pts) {\n      const newPts = curState.pts + (pts_count || 0);\n      if(newPts < pts) {\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && this.appChatsManager.getChat(channelId));\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\n        if(!curState.syncPending && !curState.syncLoading) {\n          curState.syncPending = {\n            timeout: ctx.setTimeout(() => {\n              curState.syncPending = null;\n\n              if(curState.syncLoading) {\n                return;\n              }\n\n              if(channelId) {\n                this.getChannelDifference(channelId);\n              } else {\n                this.getDifference();\n              }\n            }, SYNC_DELAY)\n          };\n        }\n\n        curState.syncPending.ptsAwaiting = true;\n        return false;\n      }\n\n      if(pts > curState.pts) {\n        curState.pts = pts;\n        popPts = true;\n\n        curState.lastPtsUpdateTime = Date.now();\n      } else if(pts_count) {\n        // this.log.warn('Duplicate update', update)\n        return false;\n      }\n\n      if(channelId && options.date && this.updatesState.date < options.date) {\n        this.updatesState.date = options.date;\n      }\n    } else if(!channelId && options.seq > 0) {\n      const seq = options.seq;\n      const seqStart = options.seqStart || seq;\n\n      if(seqStart !== curState.seq + 1) {\n        if(seqStart > curState.seq) {\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending?.seqAwaiting);\n\n          curState.pendingSeqUpdates[seqStart] ??= {seq, date: options.date, updates: []};\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\n\n          if(!curState.syncPending) {\n            curState.syncPending = {\n              timeout: ctx.setTimeout(() => {\n                curState.syncPending = null;\n\n                if(curState.syncLoading) {\n                  return;\n                }\n\n                this.getDifference();\n              }, SYNC_DELAY)\n            };\n          }\n\n          if(!curState.syncPending.seqAwaiting ||\n            curState.syncPending.seqAwaiting < seqStart) {\n            curState.syncPending.seqAwaiting = seqStart;\n          }\n          return false;\n        }\n      }\n\n      if(curState.seq !== seq) {\n        curState.seq = seq;\n        if(options.date && curState.date < options.date) {\n          curState.date = options.date;\n        }\n\n        popSeq = true;\n      }\n    }\n\n    this.saveUpdate(update);\n\n    if(popPts) {\n      this.popPendingPtsUpdate(channelId);\n    } else if(popSeq) {\n      this.popPendingSeqUpdate();\n    }\n  }\n\n  public saveUpdate(update: Update) {\n    this.debug && this.log.debug('update', update);\n    this.dispatchEvent(update._, update as any);\n  }\n\n  public subscribeToChannelUpdates(channelId: ChatId) {\n    const subscription = this.subscriptions[channelId] ??= {count: 0};\n    ++subscription.count;\n\n    const cb = () => {\n      const state = this.getChannelState(channelId);\n      if(!state.syncLoading && (!state.lastDifferenceTime || (Date.now() - state.lastDifferenceTime) > 2500)) {\n        this.getChannelDifference(channelId);\n      }\n    };\n\n    subscription.interval ??= ctx.setInterval(cb, 3000);\n    cb();\n  }\n\n  public unsubscribeFromChannelUpdates(channelId: ChatId, force?: boolean) {\n    const subscription = this.subscriptions[channelId];\n    if(!subscription?.interval || (--subscription.count && !force)) {\n      return;\n    }\n\n    clearInterval(subscription.interval);\n    subscription.interval = undefined;\n    delete this.subscriptions[channelId];\n  }\n\n  public attach(langCode?: string) {\n    if(this.attached) return;\n\n    // return;\n\n    this.log('attach');\n\n    this.attached = true;\n\n    this.appStateManager.getState().then(({updates: state}) => {\n      const newVersion = this.appStateManager.newVersion/*  || '1.6.0' */;\n\n      // rootScope.broadcast('state_synchronizing');\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\n        this.log('will get new state');\n\n        this.updatesState.syncLoading = new Promise((resolve) => {\n          this.apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\n            this.updatesState.seq = stateResult.seq;\n            this.updatesState.pts = stateResult.pts;\n            this.updatesState.date = stateResult.date;\n            this.saveUpdatesState();\n            // setTimeout(() => {\n            this.updatesState.syncLoading = null;\n            resolve();\n            // rootScope.broadcast('state_synchronized');\n            // }, 1000);\n\n          // ! for testing\n          // updatesState.seq = 1\n          // updatesState.pts = stateResult.pts - 5000\n          // updatesState.date = 1\n          // getDifference()\n          });\n        });\n      } else {\n        // ! for testing\n        /* state.seq = 1;\n        state.pts = state.pts - 15;\n        state.date = 1; */\n        // state.pts -= 100;\n\n        // state.date = 1628623682;\n        // state.pts = 2007500;\n        // state.seq = 503;\n\n        Object.assign(this.updatesState, state);\n\n        this.log('will get difference', Object.assign({}, state));\n\n        this.getDifference(true)/* .finally(() => {\n          if(this.updatesState.syncLoading) {\n            rootScope.broadcast('state_synchronizing');\n          }\n        }) */;\n      }\n\n      this.apiManager.setUpdatesProcessor(this.processUpdateMessage);\n\n      // this.updatesState.syncLoading.then(() => {\n      this.setProxy();\n      // });\n\n      if(newVersion) {\n        this.updatesState.syncLoading.then(async() => {\n          const strs: Record<string, string> = {\n            en: 'was updated to version',\n            ru: 'обновлён до версии'\n          };\n\n          const getChangelog = (lang: string) => {\n            return fetch(`changelogs/${lang}_${newVersion.split(' ')[0]}.md`)\n            .then((res) => (res.status === 200 && res.ok && res.text()) || Promise.reject())\n            .then((text) => {\n              const langStr = strs[lang] || strs.en;\n              const pre = `**Telegram Web${App.suffix} ${langStr} ${newVersion}**\\n\\n`;\n\n              text = pre + text;\n\n              const entities: MessageEntity[] = [];\n              const message = parseMarkdown(text, entities);\n\n              const update: Update.updateServiceNotification = {\n                _: 'updateServiceNotification',\n                entities,\n                message,\n                type: 'local',\n                pFlags: {},\n                inbox_date: tsNow(true),\n                media: undefined\n              };\n\n              this.processLocalUpdate(update);\n            });\n          };\n\n          const languages = filterUnique([langCode, 'en']);\n          for(const language of languages) {\n            try {\n              await getChangelog(language);\n              break;\n            } catch(err) {\n\n            }\n          }\n        });\n      }\n    });\n  }\n}\n\ninterface ApiUpdatesManager extends EventListenerBase<{\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\n}>, AppManager {}\napplyMixins(ApiUpdatesManager, [EventListenerBase, AppManager]);\n\nexport {ApiUpdatesManager};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {joinDeepPath} from '../../helpers/object/setDeepProperty';\nimport {UserProfilePhoto, ChatPhoto, InputFileLocation} from '../../layer';\nimport {DownloadOptions} from '../mtproto/apiFileManager';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport {AppManager} from './manager';\n\nexport type PeerPhotoSize = 'photo_small' | 'photo_big';\n\nexport class AppAvatarsManager extends AppManager {\n  private savedAvatarURLs: {\n    [peerId: PeerId]: {\n      [size in PeerPhotoSize]?: string | Promise<string>\n    }\n  } = {};\n\n  protected after() {\n    this.rootScope.addEventListener('avatar_update', ({peerId, threadId}) => {\n      if(threadId) {\n        return;\n      }\n\n      this.removeFromAvatarsCache(peerId);\n    });\n  }\n\n  public isAvatarCached(peerId: PeerId, size?: PeerPhotoSize) {\n    const saved = this.savedAvatarURLs[peerId];\n    if(size === undefined) {\n      return !!saved;\n    }\n\n    return !!(saved && saved[size] && !(saved[size] instanceof Promise));\n  }\n\n  public removeFromAvatarsCache(peerId: PeerId) {\n    if(this.savedAvatarURLs[peerId]) {\n      delete this.savedAvatarURLs[peerId];\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n        name: 'avatars',\n        key: '' + peerId\n      });\n    }\n  }\n\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\n    const saved = this.savedAvatarURLs[peerId] ??= {};\n    if(saved[size]) {\n      return saved[size];\n    }\n\n    // console.warn('will invoke downloadSmallFile:', peerId);\n    const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\n      _: 'inputPeerPhotoFileLocation',\n      pFlags: {},\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      photo_id: photo.photo_id\n    };\n\n    const downloadOptions: DownloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\n    if(size === 'photo_big') {\n      peerPhotoFileLocation.pFlags.big = true;\n      downloadOptions.limitPart = 512 * 1024;\n    }\n\n    const promise = this.apiFileManager.download(downloadOptions);\n    return saved[size] = promise.then((blob) => {\n      const url = saved[size] = URL.createObjectURL(blob);\n\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n        name: 'avatars',\n        key: joinDeepPath(peerId, size),\n        value: url\n      });\n\n      return url;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nconst arrays = {\n  8: new Uint8Array(1),\n  16: new Uint16Array(1),\n  32: new Uint32Array(1)\n};\nexport function nextRandomUint(bits: 8 | 16 | 32) {\n  const array = arrays[bits];\n  crypto.getRandomValues(array);\n  return array[0];\n}\n\nexport function randomLong() {\n  return '' + nextRandomUint(32) + nextRandomUint(32) % 0xFFFFFF;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getEnvironment} from '../../environment/utils';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {nextRandomUint} from '../../helpers/random';\nimport {InputPhoneCall, MessagesDhConfig, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, PhonePhoneCall} from '../../layer';\nimport {AppManager} from './manager';\n\nexport type CallId = PhoneCall['id'];\n\nexport type MyPhoneCall = Exclude<PhoneCall, PhoneCall.phoneCallEmpty | PhoneCall.phoneCallDiscarded>;\n\nexport class AppCallsManager extends AppManager {\n  private calls: Map<CallId, MyPhoneCall>;\n\n  protected after() {\n    this.calls = new Map();\n\n    if(!getEnvironment().IS_CALL_SUPPORTED) {\n      return;\n    }\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePhoneCall: (update) => {\n        this.saveCall(update.phone_call);\n      },\n\n      updatePhoneCallSignalingData: (update) => {\n        this.rootScope.dispatchEvent('call_signaling', {callId: update.phone_call_id, data: update.data});\n      }\n    });\n  }\n\n  public computeKey(g_b: Uint8Array, a: Uint8Array, p: Uint8Array) {\n    return this.cryptoWorker.invokeCrypto('compute-dh-key', g_b, a, p);\n  }\n\n  public saveCall(call: PhoneCall) {\n    const isDiscarded = call._ === 'phoneCallDiscarded';\n    const oldCall = this.calls.get(call.id);\n    if(oldCall) {\n      // if(shouldUpdate) {\n      safeReplaceObject(oldCall, call);\n      // }\n\n      if(isDiscarded) {\n        this.calls.delete(call.id);\n      }\n\n      call = oldCall;\n    } else if(!isDiscarded) {\n      this.calls.set(call.id, call as any);\n    }\n\n    this.rootScope.dispatchEvent('call_update', call);\n\n    return call;\n  }\n\n  public getCall(callId: CallId) {\n    return this.calls.get(callId);\n  }\n\n  public getCallInput(id: CallId): InputPhoneCall {\n    const call = this.getCall(id);\n    return {\n      _: 'inputPhoneCall',\n      id: call.id,\n      access_hash: call.access_hash\n    };\n  }\n\n  public savePhonePhoneCall(phonePhoneCall: PhonePhoneCall) {\n    this.appUsersManager.saveApiUsers(phonePhoneCall.users);\n    return this.saveCall(phonePhoneCall.phone_call);\n  }\n\n  public generateDh() {\n    return this.apiManager.invokeApi('messages.getDhConfig', {\n      version: 0,\n      random_length: 256\n    }).then((dhConfig) => {\n      return this.cryptoWorker.invokeCrypto('generate-dh', dhConfig as MessagesDhConfig.messagesDhConfig);\n    });\n  }\n\n  // private verifyProtocolCompatibility(protocol: PhoneCallProtocol) {\n  //   const my = getCallProtocol();\n  //   const myVersion = my.library_versions[0];\n  //   return !protocol.library_versions.find((version) => {\n  //     return compareVersion(myVersion, version) > 0;\n  //   });\n  // }\n\n  public async requestCall(userId: UserId, protocol: PhoneCallProtocol, g_a_hash: Uint8Array, video?: boolean) {\n    const phonePhoneCall = await this.apiManager.invokeApi('phone.requestCall', {\n      user_id: this.appUsersManager.getUserInput(userId),\n      protocol: protocol,\n      video: video,\n      random_id: nextRandomUint(32),\n      g_a_hash: g_a_hash\n    });\n\n    return this.savePhonePhoneCall(phonePhoneCall);\n  }\n\n  public async discardCall(callId: CallId, duration: number, reason: PhoneCallDiscardReason['_'], video?: boolean) {\n    if(!this.getCall(callId)) {\n      return;\n    }\n\n    const updates = await this.apiManager.invokeApi('phone.discardCall', {\n      video,\n      peer: this.getCallInput(callId),\n      duration,\n      reason: {\n        _: reason\n      },\n      connection_id: '0'\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Chat, ChatAdminRights, ChatBannedRights} from '../../../../layer';\nimport {ChatRights} from '../../appChatsManager';\n\n/**\n * Check the user's ability to do an action in chat\n * @param id\n * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n * @param rights do not provide this parameter when checking rights for self\n * @param isThread\n * @returns\n */\nexport default function hasRights(\n  chat: Exclude<Chat, Chat.chatEmpty>,\n  action: ChatRights,\n  rights?: ChatAdminRights | ChatBannedRights,\n  isThread?: boolean\n) {\n  if(!chat) return false;\n\n  if((chat as Chat.chat).pFlags.deactivated && action !== 'view_messages') {\n    return false;\n  }\n\n  const isCheckingRightsForSelf = rights === undefined;\n  if((chat as Chat.chat).pFlags.creator && isCheckingRightsForSelf && action !== 'anonymous') {\n    return true;\n  }\n\n  if(chat._ === 'chatForbidden' ||\n      chat._ === 'channelForbidden' ||\n      // (chat as any).pFlags.kicked ||\n      (chat.pFlags.left && !(chat as Chat.channel).pFlags.megagroup)) {\n    return false;\n  }\n\n  // const adminRights = chat.admin_rights;\n  // const bannedRights = (chat as Chat.channel).banned_rights || chat.default_banned_rights;\n\n  if(!rights) {\n    rights = chat.admin_rights || (chat as Chat.channel).banned_rights || chat.default_banned_rights;\n\n    if(!rights) {\n      return false;\n    }\n  }\n\n  let myFlags: Partial<{[flag in keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags']]: true}> = {};\n  if(rights) {\n    myFlags = rights.pFlags as any;\n  }\n\n  // const adminFlags = adminRights?.pFlags || {};\n  // const bannedFlags = bannedRights?.pFlags || {};\n\n  const isAdmin = rights._ === 'chatAdminRights';\n\n  switch(action) {\n    case 'embed_links':\n    case 'send_games':\n    case 'send_gifs':\n    case 'send_inline':\n    case 'send_media':\n    case 'send_messages':\n    case 'send_polls':\n    case 'send_stickers':\n    case 'send_photos':\n    case 'send_videos':\n    case 'send_roundvideos':\n    case 'send_audios':\n    case 'send_voices':\n    case 'send_docs':\n    case 'send_plain': {\n      if(!isThread && chat.pFlags.left) {\n        return false;\n      }\n\n      if(!isAdmin && myFlags[action]) {\n        return false;\n      }\n\n      if(chat._ === 'channel') {\n        if(!chat.pFlags.megagroup && !myFlags.post_messages) {\n          return false;\n        }\n      }\n\n      break;\n    }\n\n    // * revoke foreign messages\n    case 'delete_messages':\n    case 'manage_call': {\n      return !!myFlags[action];\n    }\n\n    case 'pin_messages': {\n      return isAdmin ? !!(myFlags[action] || (!(chat as Chat.channel).pFlags.megagroup && myFlags.post_messages)) : !myFlags[action];\n    }\n\n    // case 'change_info': {\n    // return adminRights || isCheckingRightsForSelf ? adminFlags[action] : !myFlags[action];\n    // }\n\n    case 'invite_links': {\n      if(chat._ === 'chat') {\n        return false;\n      }\n\n      return isAdmin && !!myFlags['invite_users'];\n    }\n\n    case 'change_info':\n    case 'invite_users': {\n      return isAdmin ? !!myFlags[action] : !myFlags[action];\n    }\n\n    // * only creator can do that\n    case 'change_type':\n    case 'delete_chat': {\n      return false;\n    }\n\n    case 'add_admins':\n    case 'anonymous':\n    case 'edit_messages':\n    case 'manage_topics': {\n      return isAdmin && !!myFlags[action];\n    }\n\n    case 'ban_users':\n    case 'change_permissions': {\n      return isAdmin && !!myFlags['ban_users'];\n    }\n\n    case 'view_participants': {\n      return !!(chat._ === 'chat' || !chat.pFlags.broadcast || chat.pFlags.creator || chat.admin_rights);\n    }\n  }\n\n  return true;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {ChannelParticipant, ChatParticipant} from '../../../../layer';\nimport getPeerId from '../peers/getPeerId';\n\nexport default function getParticipantPeerId(participant: PeerId | ChannelParticipant | ChatParticipant): PeerId {\n  if(typeof(participant) !== 'object') {\n    return participant;\n  }\n\n  const peerId = (participant as ChannelParticipant.channelParticipantBanned).peer ?\n    getPeerId((participant as ChannelParticipant.channelParticipantBanned).peer) :\n    (participant as ChatParticipant.chatParticipant).user_id.toPeerId();\n  return peerId;\n}\n","import {Chat, User} from '../../../../layer';\n\nexport default function getPeerActiveUsernames(peer: User | Chat) {\n  if(!peer) {\n    return [];\n  }\n\n  const usernames = (peer as Chat.channel).usernames;\n  if(usernames) {\n    return usernames\n    .filter((username) => username.pFlags.active)\n    // .sort((a, b) => +!!b.pFlags.editable - +!!a.pFlags.editable)\n    .map((username) => username.username);\n  }\n\n  return (peer as Chat.channel).username ? [(peer as Chat.channel).username] : [];\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport deepEqual from '../../helpers/object/deepEqual';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {ChannelParticipant, ChannelsCreateChannel, Chat, ChatAdminRights, ChatBannedRights, ChatFull, ChatInvite, ChatParticipant, ChatPhoto, ChatReactions, InputChannel, InputChatPhoto, InputFile, InputPeer, MessagesSponsoredMessages, Peer, SponsoredMessage, Update, Updates} from '../../layer';\nimport {AppManager} from './manager';\nimport hasRights from './utils/chats/hasRights';\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\nimport {AppStoragesManager} from './appStoragesManager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport {randomLong} from '../../helpers/random';\nimport tsNow from '../../helpers/tsNow';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\nexport type Channel = Chat.channel;\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] | 'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants' | 'invite_links';\n\nconst TEST_SPONSORED = false;\n\nexport class AppChatsManager extends AppManager {\n  private storage: AppStoragesManager['storages']['chats'];\n\n  private chats: {[id: ChatId]: Exclude<Chat, Chat.chatEmpty>};\n  // private usernames: any;\n  // private channelAccess: any;\n  // private megagroups: {[id: number]: true};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateChannelParticipant: this.onUpdateChannelParticipant,\n\n      updateChatDefaultBannedRights: this.onUpdateChatDefaultBannedRights\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('chats')\n    ]).then(([state, {results: chats, storage}]) => {\n      this.storage = storage;\n\n      this.saveApiChats(chats);\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.set({\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\n        });\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.delete(peerId.toChatId());\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const chatId in this.chats) {\n        if(!chatId) continue;\n        if(!this.peersStorage.isPeerNeeded(chatId.toPeerId(true))) {\n          const chat = this.chats[chatId];\n          this.appUsersManager.modifyUsernamesCache(chat, false);\n\n          this.storage.delete(chatId);\n          delete this.chats[chatId];\n        }\n      }\n    } else {\n      this.chats = {};\n    }\n  };\n\n  public saveApiChats(apiChats: any[], override?: boolean) {\n    if(!apiChats || (apiChats as any).saved) return;\n    (apiChats as any).saved = true;\n    apiChats.forEach((chat) => this.saveApiChat(chat, override));\n  }\n\n  public saveApiChat(chat: Chat, override?: boolean) {\n    if(!chat || chat._ === 'chatEmpty') return;\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\n      return;\n    } */\n\n    // * exclude from state\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\n\n    const oldChat = this.chats[chat.id];\n\n    /* if(oldChat && !override) {\n      return;\n    } */\n\n    (chat as Chat.chat).pFlags ??= {};\n\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\n      return;\n    }\n\n    if(chat._ === 'channel' &&\n        chat.participants_count === undefined &&\n        oldChat !== undefined &&\n        (oldChat as Chat.channel).participants_count) {\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\n    }\n\n    if((chat as Chat.channel).photo?._ === 'chatPhotoEmpty') {\n      delete (chat as Chat.channel).photo;\n    }\n\n    const changedUsername = this.appUsersManager.setUsernameToCache(chat, oldChat);\n\n    /* if(chat.username) {\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\n      this.usernames[searchUsername] = chat.id;\n    } */\n\n    const peerId = chat.id.toPeerId(true);\n    if(oldChat === undefined) {\n      this.chats[chat.id] = chat;\n      this.mirrorChat(chat);\n    } else {\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const toggledForum = (oldChat as Chat.channel).pFlags.forum !== (chat as Chat.channel).pFlags.forum;\n      const changedPhoto = oldPhotoId !== newPhotoId || toggledForum;\n\n      const changedTitle = oldChat.title !== chat.title || changedUsername;\n\n      const changedAnyBadge = (oldChat as Chat.channel).pFlags.verified !== (chat as Chat.channel).pFlags.verified ||\n        (oldChat as Chat.channel).pFlags.scam !== (chat as Chat.channel).pFlags.scam ||\n        (oldChat as Chat.channel).pFlags.fake !== (chat as Chat.channel).pFlags.fake;\n\n      const changedParticipation = (oldChat as Chat.channel).pFlags.left !== (chat as Chat.channel).pFlags.left;\n\n      const storiesCallback = this.appStoriesManager.saveApiPeerStories(chat as Chat.channel, oldChat as Chat.channel);\n\n      safeReplaceObject(oldChat, chat);\n      this.mirrorChat(oldChat);\n      this.rootScope.dispatchEvent('chat_update', chat.id);\n\n      storiesCallback?.();\n\n      if(changedParticipation) {\n        this.rootScope.dispatchEvent('chat_participation', {chatId: chat.id, left: !!(chat as Chat.channel).pFlags.left});\n      }\n\n      if(changedPhoto) {\n        this.rootScope.dispatchEvent('avatar_update', {peerId});\n      }\n\n      if(changedTitle || changedAnyBadge) {\n        this.rootScope.dispatchEvent('peer_title_edit', {peerId});\n      }\n\n      if(toggledForum) {\n        this.rootScope.dispatchEvent('chat_toggle_forum', {chatId: chat.id, enabled: !!(chat as Chat.channel).pFlags.forum});\n      }\n    }\n\n    if(this.peersStorage.isPeerNeeded(peerId)) {\n      this.storage.set({\n        [chat.id]: chat\n      });\n    }\n  }\n\n  private mirrorChat(chat: Chat) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n      name: 'peers',\n      key: '' + chat.id.toPeerId(true),\n      value: chat\n    });\n  }\n\n  public getChat(id: ChatId) {\n    return this.chats[id];\n  }\n\n  public getChats() {\n    return this.chats;\n  }\n\n  /**\n   * Check the user's ability to do an action in chat\n   * @param id\n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n   * @param rights do not provide this parameter when checking rights for self\n   * @param isThread\n   * @returns\n   */\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n    return hasRights(this.getChat(id), action, rights, isThread);\n  }\n\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\n    const chat = this.getChat(id) as Chat.chat;\n    if(chat.default_banned_rights) {\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\n        return Promise.resolve();\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.editChatDefaultBannedRights', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true)),\n      banned_rights\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  /* public resolveUsername(username: string) {\n    return this.usernames[username] || 0;\n  } */\n\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\n    this.channelAccess[id] = accessHash;\n  } */\n\n  /* public saveIsMegagroup(id: ChatId) {\n    this.megagroups[id] = true;\n  } */\n\n  public isChannel(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\n  }\n\n  public isMegagroup(id: ChatId) {\n    /* if(this.megagroups[id]) {\n      return true;\n    } */\n\n    const chat: Chat = this.chats[id];\n    return !!(chat as Chat.channel)?.pFlags?.megagroup;\n  }\n\n  public isForum(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat as Chat.channel)?.pFlags?.forum;\n  }\n\n  public isBroadcast(id: ChatId) {\n    return this.isChannel(id) && !this.isMegagroup(id);\n  }\n\n  public isInChat(id: ChatId) {\n    let good = true;\n    const chat: Chat = this.getChat(id);\n    if(!chat ||\n      chat._ === 'channelForbidden' ||\n      chat._ === 'chatForbidden' ||\n      (chat as any as Chat.chatEmpty)._ === 'chatEmpty' ||\n      (chat as Chat.chat).pFlags.left ||\n      // || (chat as any).pFlags.kicked\n      (chat as Chat.chat).pFlags.deactivated) {\n      good = false;\n    }\n\n    return good;\n  }\n\n  public isPublic(id: ChatId) {\n    const chat: Chat = this.getChat(id);\n    return !!getPeerActiveUsernames(chat)[0];\n  }\n\n  public getChannelInput(id: ChatId): InputChannel {\n    const chat: Chat = this.getChat(id);\n    if(!chat || !(chat as Chat.channel).access_hash) {\n      return {\n        _: 'inputChannelEmpty'\n      };\n    } else {\n      return {\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\n      };\n    }\n  }\n\n  public getInputPeer(id: ChatId) {\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\n  }\n\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\n    return {\n      _: 'inputPeerChat',\n      chat_id: id\n    };\n  }\n\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\n    return {\n      _: 'inputPeerChannel',\n      channel_id: id,\n      access_hash: (this.getChat(id) as Chat.channel).access_hash/*  || this.channelAccess[id] */ || 0\n    };\n  }\n\n  public hasChat(id: ChatId, allowMin?: true) {\n    const chat = this.chats[id];\n    return isObject(chat) && (allowMin || !(chat as Chat.channel).pFlags.min);\n  }\n\n  public getChatString(id: ChatId) {\n    const chat = this.getChat(id);\n    if(this.isChannel(id)) {\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + (chat as Chat.channel).access_hash;\n    }\n    return 'g' + id;\n  }\n\n  public createChannel(options: ChannelsCreateChannel): Promise<ChatId> {\n    return this.apiManager.invokeApi('channels.createChannel', options).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const channelId = (updates as any).chats[0].id;\n      return channelId;\n    });\n  }\n\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\n    const input = this.getChannelInput(id);\n    const usersInputs = userIds.map((u) => this.appUsersManager.getUserInput(u));\n\n    return this.apiManager.invokeApi('channels.inviteToChannel', {\n      channel: input,\n      users: usersInputs\n    }).then((updates) => {\n      const timestamp = tsNow(true);\n      const participantUpdates: Update.updateChannelParticipant[] = userIds.map((userId) => {\n        return this.generateUpdateChannelParticipant({\n          chatId: id,\n          newParticipant: {\n            _: 'channelParticipant',\n            date: timestamp,\n            user_id: userId\n          }\n        });\n      });\n\n      participantUpdates.forEach((update) => {\n        this.apiUpdatesManager.processLocalUpdate(update);\n      });\n\n      return this.onChatUpdatedForce(id, updates);\n    });\n  }\n\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\n    return this.apiManager.invokeApi('messages.createChat', {\n      users: userIds.map((u) => this.appUsersManager.getUserInput(u)),\n      title\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const chatId = (updates as any as Updates.updates).chats[0].id;\n      return chatId;\n    });\n  }\n\n  private onChatUpdated = (chatId: ChatId, updates?: Updates, forceInvalidation?: boolean) => {\n    // console.log('onChatUpdated', chatId, updates);\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    // * can have no updates on editAdmin\n    if((forceInvalidation || (updates as Updates.updates)?.updates?.length) && this.isChannel(chatId)) {\n      this.rootScope.dispatchEvent('invalidate_participants', chatId);\n    }\n  };\n\n  private onChatUpdatedForce = (chatId: ChatId, updates?: Updates) => {\n    return this.onChatUpdated(chatId, updates, true);\n  }\n\n  public leaveChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.leaveChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public joinChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.joinChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public addToChat(id: ChatId, userId: UserId) {\n    if(this.isChannel(id)) return this.inviteToChannel(id, [userId]);\n    else return this.addChatUser(id, userId);\n  }\n\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\n    return this.apiManager.invokeApi('messages.addChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId),\n      fwd_limit: fwdLimit\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChatUser(id: ChatId, userId: UserId) {\n    return this.apiManager.invokeApi('messages.deleteChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public leaveChat(id: ChatId) {\n    return this.deleteChatUser(id, this.appUsersManager.getSelf().id);\n  }\n\n  public leave(id: ChatId) {\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\n  }\n\n  public delete(id: ChatId) {\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\n  }\n\n  public deleteChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.deleteChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChat(id: ChatId) {\n    // return this.leaveChat(id).then(() => {\n    return this.apiManager.invokeApi('messages.deleteChat', {\n      chat_id: id\n    });\n    // });\n  }\n\n  public migrateChat(id: ChatId): Promise<ChatId> {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\n    return this.apiManager.invokeApi('messages.migrateChat', {\n      chat_id: id\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find((u) => u._ === 'updateChannel') as any;\n      return update.channel_id;\n    });\n  }\n\n  public updateUsername(id: ChatId, username: string, doNotRefresh?: boolean) {\n    const promise = this.apiManager.invokeApi('channels.updateUsername', {\n      channel: this.getChannelInput(id),\n      username\n    });\n\n    return this.refreshChatAfterRequest(id, promise, doNotRefresh);\n  }\n\n  public async toggleParticipantsHidden(id: ChatId, hidden: boolean) {\n    id = await this.migrateChat(id);\n\n    const updates = await this.apiManager.invokeApi('channels.toggleParticipantsHidden', {\n      channel: this.getChannelInput(id),\n      enabled: hidden\n    });\n\n    return this.onChatUpdatedForce(id, updates);\n  }\n\n  public editAdmin(\n    id: ChatId,\n    participant: PeerId | ChannelParticipant | ChatParticipant,\n    rights: ChatAdminRights,\n    rank: string = ''\n  ) {\n    const wasChannel = this.isChannel(id);\n    const peerId = getParticipantPeerId(participant);\n    const userId = peerId.toUserId();\n    return this.migrateChat(id).then((id) => {\n      return this.apiManager.invokeApi('channels.editAdmin', {\n        channel: this.getChannelInput(id),\n        user_id: this.appUsersManager.getUserInput(userId),\n        admin_rights: rights,\n        rank\n      }).then((updates) => {\n        const timestamp = tsNow(true);\n        const update = this.generateUpdateChannelParticipant({\n          chatId: id,\n          newParticipant: Object.keys(rights.pFlags).length ? {\n            _: 'channelParticipantAdmin',\n            date: timestamp,\n            admin_rights: rights,\n            promoted_by: this.appUsersManager.getSelf().id,\n            user_id: userId,\n            rank,\n            pFlags: {}\n          } : {\n            _: 'channelParticipant',\n            date: timestamp,\n            user_id: userId\n          },\n          prevParticipant: participant,\n          wasChannel\n        });\n        this.apiUpdatesManager.processLocalUpdate(update);\n\n        this.onChatUpdatedForce(id, updates);\n      });\n    });\n  }\n\n  public editPhoto(id: ChatId, inputFile: InputFile) {\n    const inputChatPhoto: InputChatPhoto = {\n      _: 'inputChatUploadedPhoto',\n      file: inputFile\n    };\n\n    let promise: any;\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editPhoto', {\n        channel: this.getChannelInput(id),\n        photo: inputChatPhoto\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatPhoto', {\n        chat_id: id,\n        photo: inputChatPhoto\n      });\n    }\n\n    return promise.then(this.onChatUpdated.bind(this, id));\n  }\n\n  public editTitle(id: ChatId, title: string) {\n    let promise: any;\n\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editTitle', {\n        channel: this.getChannelInput(id),\n        title\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatTitle', {\n        chat_id: id,\n        title\n      });\n    }\n\n    return promise.then(this.onChatUpdated.bind(this, id));\n  }\n\n  public editAbout(id: ChatId, about: string) {\n    const peerId = id.toPeerId(true);\n    return this.apiManager.invokeApi('messages.editChatAbout', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      about\n    }).then((bool) => {\n      if(bool) {\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return bool;\n    });\n  }\n\n  private generateUpdateChannelParticipant({\n    chatId: id,\n    prevParticipant: prevParticipant,\n    newParticipant,\n    wasChannel\n  }: {\n    chatId: ChatId,\n    prevParticipant?: PeerId | ChannelParticipant | ChatParticipant,\n    newParticipant: ChannelParticipant,\n    wasChannel?: boolean\n  }): Update.updateChannelParticipant {\n    const timestamp = tsNow(true);\n    const peerId = getParticipantPeerId(prevParticipant || newParticipant);\n    return {\n      _: 'updateChannelParticipant',\n      channel_id: id,\n      date: timestamp,\n      actor_id: undefined,\n      qts: undefined,\n      user_id: peerId,\n      prev_participant: wasChannel ? prevParticipant as ChannelParticipant : undefined,\n      new_participant: newParticipant,\n      pFlags: {}\n    };\n  }\n\n  public async editBanned(\n    id: ChatId,\n    participant: PeerId | ChannelParticipant | ChatParticipant,\n    bannedRights: ChatBannedRights\n  ) {\n    const peerId = getParticipantPeerId(participant);\n    const wasChannel = this.isChannel(id);\n    if(!wasChannel) {\n      const channelId = await this.migrateChat(id);\n      id = channelId;\n    }\n\n    return this.apiManager.invokeApi('channels.editBanned', {\n      channel: this.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId),\n      banned_rights: bannedRights\n    }).then((updates) => {\n      const timestamp = tsNow(true);\n      const update = this.generateUpdateChannelParticipant({\n        chatId: id,\n        wasChannel,\n        prevParticipant: participant,\n        newParticipant: Object.keys(bannedRights.pFlags).length ? {\n          _: 'channelParticipantBanned',\n          date: timestamp,\n          banned_rights: bannedRights,\n          kicked_by: this.appUsersManager.getSelf().id,\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          pFlags: bannedRights.pFlags.view_messages ? {left: true} : {}\n        } : undefined\n      });\n\n      this.apiUpdatesManager.processLocalUpdate(update);\n\n      this.onChatUpdated(id, updates);\n    });\n  }\n\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {}\n    });\n  }\n\n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {\n        view_messages: true\n      }\n    });\n  }\n\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant | ChatParticipant) {\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant as ChannelParticipant);\n    else return this.deleteChatUser(id, isObject(participant) ? getParticipantPeerId(participant) : (participant as PeerId).toUserId());\n  }\n\n  public resolveChannel(id: ChatId) {\n    return this.apiManager.invokeApiSingle('channels.getChannels', {\n      id: [{\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: '0'\n      }]\n    }).then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\n    return this.migrateChat(id).then((channelId) => {\n      return this.apiManager.invokeApi('channels.togglePreHistoryHidden', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      }).then(this.onChatUpdated.bind(this, channelId));\n    });\n  }\n\n  public toggleSignatures(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('channels.toggleSignatures', {\n      channel: this.getChannelInput(id),\n      enabled\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('messages.toggleNoForwards', {\n      peer: this.getInputPeer(id),\n      enabled\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public setChatAvailableReactions(id: ChatId, reactions: ChatReactions) {\n    const chatFull = this.appProfileManager.getCachedFullChat(id);\n    if(chatFull) {\n      chatFull.available_reactions = reactions;\n      this.rootScope.dispatchEvent('chat_full_update', id);\n    }\n\n    return this.apiManager.invokeApi('messages.setChatAvailableReactions', {\n      peer: this.getInputPeer(id),\n      available_reactions: reactions\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public getSendAs(channelId: ChatId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getSendAs',\n      params: {\n        peer: this.getChannelInputPeer(channelId)\n      },\n      processResult: (sendAsPeers) => {\n        this.appUsersManager.saveApiUsers(sendAsPeers.users);\n        this.saveApiChats(sendAsPeers.chats);\n\n        return sendAsPeers.peers;\n      }\n    });\n  }\n\n  public importChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.importChatInvite', {hash})\n    .then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      const chat = (updates as Updates.updates).chats[0];\n      return chat.id;\n    });\n  }\n\n  public checkUsername(chatId: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.checkUsername', {\n      channel: this.getChannelInput(chatId),\n      username\n    });\n  }\n\n  public getSponsoredMessage(chatId: ChatId): Promise<MessagesSponsoredMessages> {\n    let promise: Promise<MessagesSponsoredMessages>;\n    if(TEST_SPONSORED) promise = Promise.resolve({\n      '_': 'messages.sponsoredMessages',\n      'messages': [\n        {\n          '_': 'sponsoredMessage',\n          'pFlags': {},\n          'flags': 9,\n          'random_id': new Uint8Array([80, 5, 249, 174, 44, 73, 173, 14, 246, 81, 187, 182, 223, 5, 4, 128]),\n          'from_id': {\n            '_': 'peerUser',\n            'user_id': 983000232\n          },\n          'start_param': 'GreatMinds',\n          'message': 'This is a long sponsored message. In fact, it has the maximum length allowed on the platform – 160 characters 😬😬. It\\'s promoting a bot with a start parameter.' + chatId\n        }\n      ],\n      'chats': [],\n      'users': [\n        {\n          '_': 'user',\n          'pFlags': {\n            'bot': true,\n            'verified': true,\n            'apply_min_photo': true\n          },\n          'flags': 34226219,\n          'id': 983000232,\n          'access_hash': '-294959558742535650',\n          'first_name': 'Quiz Bot',\n          'username': 'QuizBot',\n          'photo': {\n            '_': 'userProfilePhoto',\n            'pFlags': {},\n            'flags': 2,\n            'photo_id': '4221953848856651689',\n            'stripped_thumb': new Uint8Array([1, 8, 8, 155, 247, 95, 103, 255, 0, 110, 138, 40, 174, 132, 142, 6, 238, 127]),\n            'dc_id': 2\n          },\n          'bot_info_version': 11,\n          'bot_inline_placeholder': 'Search a quiz...',\n          'sortName': 'quiz bot'\n        }\n      ]\n    });\n\n    promise ||= this.apiManager.invokeApiCacheable('channels.getSponsoredMessages', {\n      channel: this.getChannelInput(chatId)\n    }, {cacheSeconds: 300});\n\n    return promise.then((sponsoredMessages) => {\n      if(sponsoredMessages._ === 'messages.sponsoredMessages') {\n        this.appUsersManager.saveApiUsers(sponsoredMessages.users);\n        this.appChatsManager.saveApiChats(sponsoredMessages.chats);\n\n        const sponsoredMessage = sponsoredMessages.messages.shift();\n        sponsoredMessages.messages.push(sponsoredMessage);\n\n        sponsoredMessages.messages.forEach((sponsoredMessage) => {\n          if(sponsoredMessage.channel_post) {\n            sponsoredMessage.channel_post = this.appMessagesIdsManager.generateMessageId(sponsoredMessage.channel_post, (sponsoredMessage.from_id as Peer.peerChannel).channel_id);\n          }\n        });\n      }\n\n      return sponsoredMessages;\n    });\n  }\n\n  public viewSponsoredMessage(chatId: ChatId, randomId: SponsoredMessage['random_id']) {\n    return this.apiManager.invokeApiSingle('channels.viewSponsoredMessage', {\n      channel: this.getChannelInput(chatId),\n      random_id: randomId\n    });\n  }\n\n  public clickSponsoredMessage(chatId: ChatId, randomId: SponsoredMessage['random_id']) {\n    return this.apiManager.invokeApiSingle('channels.clickSponsoredMessage', {\n      channel: this.getChannelInput(chatId),\n      random_id: randomId\n    });\n  }\n\n  public checkChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.checkChatInvite', {\n      hash\n    }).then((chatInvite) => {\n      if((chatInvite as ChatInvite.chatInvitePeek).chat) {\n        this.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\n      }\n\n      return chatInvite;\n    });\n  }\n\n  public deactivateAllUsernames(chatId: ChatId, doNotRefresh?: boolean) {\n    const promise = this.apiManager.invokeApi('channels.deactivateAllUsernames', {\n      channel: this.getChannelInput(chatId)\n    });\n\n    return this.refreshChatAfterRequest(chatId, promise, doNotRefresh);\n  }\n\n  public makeChannelPrivate(chatId: ChatId) {\n    const promises: Promise<boolean>[] = [\n      this.updateUsername(chatId, '', true),\n      this.deactivateAllUsernames(chatId, true)\n    ];\n\n    const promise = Promise.all(promises).then(() => true);\n    return this.refreshChatAfterRequest(chatId, promise);\n  }\n\n  public refreshChatAfterRequest<T extends Promise<any>>(chatId: ChatId, promise: T, doNotRefresh?: boolean): T {\n    if(doNotRefresh) {\n      return promise;\n    }\n\n    return promise.then((value) => {\n      return this.getChannels([chatId]).then(() => value);\n    }) as T;\n  }\n\n  public getChannels(chatIds: ChatId[]) {\n    return this.apiManager.invokeApi('channels.getChannels', {\n      id: chatIds.map((chatId) => this.getChannelInput(chatId))\n    }).then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public toggleForum(chatId: ChatId, enabled: boolean) {\n    return this.migrateChat(chatId).then((channelId) => {\n      return this.apiManager.invokeApi('channels.toggleForum', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      }).then(this.onChatUpdated.bind(this, channelId));\n    });\n  }\n\n  public editForumTopic(options: {\n    chatId: ChatId,\n    topicId: number,\n    title?: string,\n    iconEmojiId?: DocId,\n    closed?: boolean,\n    hidden?: boolean\n  }) {\n    const {chatId, topicId, title, iconEmojiId, closed, hidden} = options;\n    return this.apiManager.invokeApi('channels.editForumTopic', {\n      channel: this.getChannelInput(chatId),\n      topic_id: getServerMessageId(topicId),\n      title,\n      icon_emoji_id: iconEmojiId,\n      closed,\n      hidden\n    }).then(this.onChatUpdated.bind(this, chatId));\n  }\n\n  public async createForumTopic(options: {\n    chatId: ChatId,\n    title: string,\n    iconColor: number,\n    iconEmojiId: DocId\n  }) {\n    const {chatId, title, iconColor, iconEmojiId} = options;\n\n    const channelFull = await this.appProfileManager.getChannelFull(chatId);\n    const sendAsInputPeer = channelFull.default_send_as && this.appPeersManager.getInputPeerById(this.appPeersManager.getPeerId(channelFull.default_send_as));\n\n    return this.apiManager.invokeApi('channels.createForumTopic', {\n      channel: this.getChannelInput(chatId),\n      title,\n      icon_color: iconColor,\n      icon_emoji_id: iconEmojiId,\n      random_id: randomLong(),\n      send_as: sendAsInputPeer\n    }).then((updates) => {\n      this.onChatUpdated(chatId, updates);\n\n      const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateNewChannelMessage') as Update.updateNewChannelMessage;\n      return this.appMessagesIdsManager.generateMessageId(update.message.id, chatId);\n    });\n  }\n\n  public updatePinnedForumTopic(chatId: ChatId, topicId: number, pinned: boolean) {\n    return this.apiManager.invokeApi('channels.updatePinnedForumTopic', {\n      channel: this.getChannelInput(chatId),\n      topic_id: getServerMessageId(topicId),\n      pinned\n    }).then(this.onChatUpdated.bind(this, chatId));\n  }\n\n  public getGroupsForDiscussion() {\n    return this.apiManager.invokeApi('channels.getGroupsForDiscussion').then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n      return messagesChats.chats;\n    });\n  }\n\n  public async setDiscussionGroup(id: ChatId, groupId: ChatId) {\n    if(this.getChat(groupId) && !this.isChannel(groupId)) {\n      groupId = await this.migrateChat(groupId);\n    }\n\n    if(groupId) {\n      const channelFull = await this.appProfileManager.getChannelFull(groupId);\n      if(channelFull.pFlags.hidden_prehistory) {\n        await this.togglePreHistoryHidden(groupId, false);\n      }\n    }\n\n    return this.apiManager.invokeApi('channels.setDiscussionGroup', {\n      broadcast: this.getChannelInput(id),\n      group: this.getChannelInput(groupId)\n    }).then(() => {\n      const channelFull = this.appProfileManager.getCachedFullChat(id) as ChatFull.channelFull;\n      const newOrWasGroupId = groupId || channelFull.linked_chat_id;\n      const groupChannelFull = this.appProfileManager.getCachedFullChat(newOrWasGroupId) as ChatFull.channelFull;\n      if(channelFull) {\n        channelFull.linked_chat_id = groupId;\n      }\n\n      if(groupChannelFull) {\n        groupChannelFull.linked_chat_id = id;\n      }\n\n      if(channelFull) this.rootScope.dispatchEvent('chat_full_update', id);\n      if(groupChannelFull) this.rootScope.dispatchEvent('chat_full_update', newOrWasGroupId);\n    });\n  }\n\n  public async toggleAntiSpam(id: ChatId, enabled: boolean) {\n    if(!this.isChannel(id)) {\n      id = await this.migrateChat(id);\n    }\n\n    return this.apiManager.invokeApi('channels.toggleAntiSpam', {\n      channel: this.getChannelInput(id),\n      enabled\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public hideChatJoinRequest(chatId: ChatId, userId: UserId, approved: boolean) {\n    return this.apiManager.invokeApi('messages.hideChatJoinRequest', {\n      peer: this.appChatsManager.getInputPeer(chatId),\n      user_id: this.appUsersManager.getUserInput(userId),\n      approved\n    }).then((updates) => {\n      return this.onChatUpdated(chatId, updates, true);\n    });\n  }\n\n  private onUpdateChannelParticipant = (update: Update.updateChannelParticipant) => {\n    this.appProfileManager.invalidateChannelParticipants(update.channel_id);\n    this.rootScope.dispatchEvent('chat_participant', update);\n  };\n\n  private onUpdateChatDefaultBannedRights = (update: Update.updateChatDefaultBannedRights) => {\n    const chatId = this.appPeersManager.getPeerId(update.peer).toChatId();\n    const chat = this.chats[chatId] as Chat.chat;\n    if(chat) {\n      chat.default_banned_rights = update.default_banned_rights;\n      this.rootScope.dispatchEvent('chat_update', chatId);\n    }\n  };\n}\n","export default function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","const SKIP_PROTOCOLS: Set<string> = new Set([\n  'javascript:'\n]);\nexport default function matchUrlProtocol(text: string) {\n  if(!text) {\n    return null;\n  }\n\n  try {\n    const protocol = new URL(text).protocol;\n    if(SKIP_PROTOCOLS.has(protocol)) {\n      return null;\n    }\n\n    return protocol;\n  } catch(err) {\n    return null;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type addAnchorListener from '../../helpers/addAnchorListener';\nimport {PHONE_NUMBER_REG_EXP} from '.';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport matchUrlProtocol from './matchUrlProtocol';\nimport {T_ME_PREFIXES} from '../mtproto/mtproto_config';\n\nexport default function wrapUrl(url: string, unsafe?: number | boolean) {\n  if(!matchUrlProtocol(url)) {\n    url = 'https://' + url;\n  }\n\n  const out: {url: string, onclick?: Parameters<typeof addAnchorListener>[0]['name']} = {url};\n  let tgMeMatch, telescoPeMatch, tgMatch;\n  let onclick: typeof out['onclick'];\n  /* if(unsafe === 2) {\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\n  } else  */if((tgMeMatch = url.match(/^(?:https?:\\/\\/)?(?:(.+?)\\.)?(?:(?:web|k|z|a)\\.)?t(?:elegram)?\\.me(?:\\/(.+))?/))) {\n    const u = new URL(url);\n    let prefix = tgMeMatch[1];\n    if(prefix && T_ME_PREFIXES.has(tgMeMatch[1])) {\n      prefix = undefined;\n    }\n\n    if(prefix) {\n      u.pathname = prefix + (u.pathname === '/' ? '' : u.pathname);\n    }\n\n    const fullPath = u.pathname.slice(1);\n    const path = fullPath.split('/');\n\n    if(path[0] && path[0][0] === '$' && path[0].length > 1) {\n      onclick = 'invoice';\n    } else if(/^\\+/.test(fullPath) && !PHONE_NUMBER_REG_EXP.test(fullPath)) { // second regexp is for phone numbers (t.me/+38050...)\n      onclick = 'joinchat';\n    } else if(path[0]) switch(path[0]) {\n      case 'addlist':\n      case 'joinchat':\n      case 'addstickers':\n      case 'addemoji':\n      case 'voicechat':\n      case 'invoice':\n      case 'boost':\n        if(path.length !== 1 && !prefix) {\n          onclick = path[0];\n          break;\n        }\n\n      default:\n        if(path.length <= 2 || path[1]?.match(/^\\d+(?:\\?(?:comment|thread)=\\d+)?$/) || path[1] === 's') {\n          onclick = 'im';\n          break;\n        }\n\n        break;\n    }\n  } else if((telescoPeMatch = url.match(/^(?:https?:\\/\\/)?telesco\\.pe\\/([^/?]+)\\/(\\d+)/))) {\n    onclick = 'im';\n  } else if((tgMatch = url.match(/tg:(?:\\/\\/)?(.+?)(?:\\?|$)/))) {\n    onclick = 'tg_' + tgMatch[1] as any;\n  }/*  else if(unsafe) {\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\n  } */\n\n  if(!(window as any)[onclick]) {\n    onclick = undefined;\n  }\n\n  out.onclick = onclick;\n  return out;\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.wrapUrl = wrapUrl);\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import I18n from '../../lib/langPack';\n\nexport default function setInnerHTML(elem: Element, html: string | DocumentFragment | Element) {\n  setDirection(elem);\n  if(html === undefined) {\n    elem.replaceChildren();\n  } else if(typeof(html) === 'string') {\n    if(!html) elem.replaceChildren();\n    else elem.textContent = html;\n  } else {\n    elem.replaceChildren(html);\n  }\n}\n\nexport function setDirection(elem: Element) {\n  // if(!I18n.isRTL) {\n  elem.setAttribute('dir', 'auto');\n  // }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type lang from '../lang';\nimport type langSign from '../langSign';\nimport type {State} from '../config/state';\nimport DEBUG, {MOUNT_CLASS_TO} from '../config/debug';\nimport {HelpCountriesList, HelpCountry, LangPackDifference, LangPackString} from '../layer';\nimport stateStorage from './stateStorage';\nimport App from '../config/app';\nimport rootScope from './rootScope';\nimport {IS_MOBILE} from '../environment/userAgent';\nimport deepEqual from '../helpers/object/deepEqual';\nimport safeAssign from '../helpers/object/safeAssign';\nimport capitalizeFirstLetter from '../helpers/string/capitalizeFirstLetter';\nimport matchUrlProtocol from './richTextProcessor/matchUrlProtocol';\nimport wrapUrl from './richTextProcessor/wrapUrl';\nimport {setDirection} from '../helpers/dom/setInnerHTML';\n\nexport const langPack: {[actionType: string]: LangPackKey} = {\n  'messageActionChatCreate': 'ActionCreateGroup',\n  'messageActionChatCreateYou': 'ActionYouCreateGroup',\n  'messageActionChatEditTitle': 'ActionChangedTitle',\n  'messageActionChatEditPhoto': 'ActionChangedPhoto',\n  'messageActionChatEditVideo': 'ActionChangedVideo',\n  'messageActionChatDeletePhoto': 'ActionRemovedPhoto',\n  'messageActionChatReturn': 'ActionAddUserSelf',\n  'messageActionChatReturnYou': 'ActionAddUserSelfYou',\n  'messageActionChatJoined': 'ActionAddUserSelfMega',\n  'messageActionChatJoinedYou': 'ChannelMegaJoined',\n  'messageActionChatAddUser': 'ActionAddUser',\n  'messageActionChatAddUsers': 'ActionAddUser',\n  'messageActionChatLeave': 'ActionLeftUser',\n  'messageActionChatLeaveYou': 'YouLeft',\n  'messageActionChatDeleteUser': 'ActionKickUser',\n  'messageActionChatJoinedByLink': 'ActionInviteUser',\n  'messageActionPinMessage': 'Chat.Service.Group.UpdatedPinnedMessage',\n  'messageActionContactSignUp': 'Chat.Service.PeerJoinedTelegram',\n  'messageActionChannelCreate': 'ActionCreateChannel',\n  'messageActionChannelEditTitle': 'Chat.Service.Channel.UpdatedTitle',\n  'messageActionChannelEditPhoto': 'Chat.Service.Channel.UpdatedPhoto',\n  'messageActionChannelEditVideo': 'Chat.Service.Channel.UpdatedVideo',\n  'messageActionChannelDeletePhoto': 'Chat.Service.Channel.RemovedPhoto',\n  'messageActionHistoryClear': 'HistoryCleared',\n  'messageActionDiscussionStarted': 'DiscussionStarted',\n\n  'messageActionChannelMigrateFrom': 'ActionMigrateFromGroup',\n\n  'messageActionPhoneCall.video_in_ok': 'ChatList.Service.VideoCall.incoming',\n  'messageActionPhoneCall.video_out_ok': 'ChatList.Service.VideoCall.outgoing',\n  'messageActionPhoneCall.video_missed': 'ChatList.Service.VideoCall.Missed',\n  'messageActionPhoneCall.video_cancelled': 'ChatList.Service.VideoCall.Cancelled',\n  'messageActionPhoneCall.in_ok': 'ChatList.Service.Call.incoming',\n  'messageActionPhoneCall.out_ok': 'ChatList.Service.Call.outgoing',\n  'messageActionPhoneCall.missed': 'ChatList.Service.Call.Missed',\n  'messageActionPhoneCall.cancelled': 'ChatList.Service.Call.Cancelled',\n\n  'messageActionGroupCall.started': 'Chat.Service.VoiceChatStarted.Channel',\n  'messageActionGroupCall.started_by': 'Chat.Service.VoiceChatStarted',\n  'messageActionGroupCall.started_byYou': 'Chat.Service.VoiceChatStartedYou',\n  'messageActionGroupCall.ended': 'Chat.Service.VoiceChatFinished.Channel',\n  'messageActionGroupCall.ended_by': 'Chat.Service.VoiceChatFinished',\n  'messageActionGroupCall.ended_byYou': 'Chat.Service.VoiceChatFinishedYou',\n\n  'messageActionBotAllowed': 'Chat.Service.BotPermissionAllowed'\n};\n\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\n\nexport type FormatterArgument = string | number | Node | FormatterArgument[];\nexport type FormatterArguments = FormatterArgument[];\n\nexport const UNSUPPORTED_LANG_PACK_KEY: LangPackKey = IS_MOBILE ? 'Message.Unsupported.Mobile' : 'Message.Unsupported.Desktop';\n\nnamespace I18n {\n  export const strings: Map<LangPackKey, LangPackString> = new Map();\n  export const countriesList: HelpCountry[] = [];\n  let pluralRules: Intl.PluralRules;\n\n  let cacheLangPackPromise: Promise<LangPackDifference>;\n  export let lastRequestedLangCode: string;\n  export let lastRequestedNormalizedLangCode: string;\n  export let lastAppliedLangCode: string;\n  export let requestedServerLanguage = false;\n  export let timeFormat: State['settings']['timeFormat'];\n  export let isRTL = false;\n\n  export function setRTL(rtl: boolean) {\n    isRTL = rtl;\n  }\n\n  function setLangCode(langCode: string) {\n    lastRequestedLangCode = langCode;\n    lastRequestedNormalizedLangCode = langCode.split('-')[0];\n  }\n\n  export function getCacheLangPack(): Promise<LangPackDifference> {\n    if(cacheLangPackPromise) return cacheLangPackPromise;\n    return cacheLangPackPromise = Promise.all([\n      stateStorage.get('langPack') as Promise<LangPackDifference>,\n      polyfillPromise\n    ]).then(([langPack]) => {\n      if(!langPack/*  || true */) {\n        return loadLocalLangPack();\n      } else if(DEBUG && false) {\n        return getLangPack(langPack.lang_code);\n      }/*  else if(langPack.appVersion !== App.langPackVersion) {\n        return getLangPack(langPack.lang_code);\n      } */\n\n      if(!lastRequestedLangCode) {\n        setLangCode(langPack.lang_code);\n      }\n\n      applyLangPack(langPack);\n      return langPack;\n    }).finally(() => {\n      cacheLangPackPromise = undefined;\n    });\n  }\n\n  function updateAmPm() {\n    if(timeFormat === 'h12') {\n      try {\n        const dateTimeFormat = getDateTimeFormat({hour: 'numeric', minute: 'numeric', hour12: true});\n        const date = new Date();\n        date.setHours(0);\n        const amText = dateTimeFormat.format(date);\n        amPmCache.am = amText.split(/\\s/)[1];\n        date.setHours(12);\n        const pmText = dateTimeFormat.format(date);\n        amPmCache.pm = pmText.split(/\\s/)[1];\n      } catch(err) {\n        console.error('cannot get am/pm', err);\n        amPmCache = {am: 'AM', pm: 'PM'};\n      }\n    }\n  }\n\n  export function setTimeFormat(\n    format: State['settings']['timeFormat'],\n    haveToUpdate = !!timeFormat && timeFormat !== format\n  ) {\n    timeFormat = format;\n\n    updateAmPm();\n\n    if(haveToUpdate) {\n      cachedDateTimeFormats.clear();\n      const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n      elements.forEach((element) => {\n        const instance = weakMap.get(element);\n\n        if(instance instanceof IntlDateElement) {\n          instance.update();\n        }\n      });\n    }\n  }\n\n  export function loadLocalLangPack() {\n    const defaultCode = App.langPackCode;\n    setLangCode(defaultCode);\n    return Promise.all([\n      import('../lang'),\n      import('../langSign'),\n      import('../countries')\n    ]).then(([lang, langSign, countries]) => {\n      const strings: LangPackString[] = [];\n      formatLocalStrings(lang.default, strings);\n      formatLocalStrings(langSign.default, strings);\n\n      const langPack: LangPackDifference = {\n        _: 'langPackDifference',\n        from_version: 0,\n        lang_code: defaultCode,\n        strings,\n        version: 0,\n        local: true,\n        countries: countries.default\n      };\n      return saveLangPack(langPack);\n    });\n  }\n\n  export function loadLangPack(langCode: string, web?: boolean) {\n    web = true;\n    requestedServerLanguage = true;\n    const managers = rootScope.managers;\n    return Promise.all([\n      managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n        lang_code: langCode,\n        lang_pack: web ? 'web' : App.langPack\n      }),\n      !web && managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n        lang_code: langCode,\n        lang_pack: 'android'\n      }),\n      import('../lang'),\n      import('../langSign'),\n      managers.apiManager.invokeApiCacheable('help.getCountriesList', {\n        lang_code: langCode,\n        hash: 0\n      }) as Promise<HelpCountriesList.helpCountriesList>,\n      polyfillPromise\n    ]);\n  }\n\n  export function getStrings(langCode: string, strings: string[]) {\n    return rootScope.managers.apiManager.invokeApi('langpack.getStrings', {\n      lang_pack: App.langPack,\n      lang_code: langCode,\n      keys: strings\n    });\n  }\n\n  export function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\n    for(const i in strings) {\n      // @ts-ignore\n      const v = strings[i];\n      if(typeof(v) === 'string') {\n        pushTo.push({\n          _: 'langPackString',\n          key: i,\n          value: v\n        });\n      } else {\n        pushTo.push({\n          _: 'langPackStringPluralized',\n          key: i,\n          ...v\n        });\n      }\n    }\n\n    return pushTo;\n  }\n\n  export function getLangPack(langCode: string, web?: boolean) {\n    setLangCode(langCode);\n    return loadLangPack(langCode, web).then(([langPack1, langPack2, localLangPack1, localLangPack2, countries, _]) => {\n      let strings: LangPackString[] = [];\n\n      [localLangPack1, localLangPack2].forEach((l) => {\n        formatLocalStrings(l.default as any, strings);\n      });\n\n      strings = strings.concat(...[langPack1.strings, langPack2.strings].filter(Boolean));\n\n      langPack1.strings = strings;\n      langPack1.countries = countries;\n      return saveLangPack(langPack1);\n    });\n  }\n\n  export function saveLangPack(langPack: LangPackDifference) {\n    langPack.appVersion = App.langPackVersion;\n\n    return stateStorage.set({langPack}).then(() => {\n      applyLangPack(langPack);\n      return langPack;\n    });\n  }\n\n  export const polyfillPromise = (function checkIfPolyfillNeeded() {\n    if(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\n      return Promise.resolve();\n    } else {\n      return import('./pluralPolyfill').then((_Intl) => {\n        (window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\n      });\n    }\n  })();\n\n  export function applyLangPack(langPack: LangPackDifference) {\n    const currentLangCode = lastRequestedLangCode;\n    if(langPack.lang_code !== currentLangCode) {\n      return;\n    }\n\n    try {\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode);\n    } catch(err) {\n      console.error('pluralRules error', err);\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode.split('-', 1)[0]);\n    }\n\n    try {\n      pluralRules = new Intl.PluralRules(langPack.lang_code);\n    } catch(err) {\n      console.error('pluralRules error', err);\n      pluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\n    }\n\n    strings.clear();\n\n    for(const string of langPack.strings) {\n      strings.set(string.key as LangPackKey, string);\n    }\n\n    if(langPack.countries) {\n      countriesList.length = 0;\n      countriesList.push(...langPack.countries.countries);\n\n      langPack.countries.countries.forEach((country) => {\n        if(country.name) {\n          const langPackKey: any = country.default_name;\n          strings.set(langPackKey, {\n            _: 'langPackString',\n            key: langPackKey,\n            value: country.name\n          });\n        }\n      });\n    }\n\n    if(lastAppliedLangCode !== currentLangCode) {\n      if(lastAppliedLangCode && rootScope.myId) {\n        rootScope.managers.appReactionsManager.resetAvailableReactions();\n        rootScope.managers.appUsersManager.indexMyself();\n        rootScope.managers.dialogsStorage.indexMyDialog();\n      }\n\n      lastAppliedLangCode = currentLangCode;\n      cachedDateTimeFormats.clear();\n      updateAmPm();\n      rootScope.dispatchEvent('language_change', currentLangCode);\n    }\n\n    const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n    elements.forEach((element) => {\n      const instance = weakMap.get(element);\n\n      if(instance) {\n        instance.update();\n      }\n    });\n  }\n\n  function pushNextArgument(out: ReturnType<typeof superFormatter>, args: FormatterArguments, indexHolder: {i: number}) {\n    const arg = args[indexHolder.i++];\n    if(Array.isArray(arg)) {\n      out.push(...arg as any);\n    } else {\n      out.push(arg);\n    }\n  }\n\n  export function superFormatter(input: string, args?: FormatterArguments, indexHolder = {i: 0}): Exclude<FormatterArgument, FormatterArgument[]>[] {\n    const out: ReturnType<typeof superFormatter> = [];\n    const regExp = /(\\*\\*|__)(.+?)\\1|(\\n)|(\\[.+?\\]\\(.*?\\))|un\\d|%\\d\\$.|%./g;\n\n    let lastIndex = 0;\n    input.replace(regExp, (match, p1: any, p2: any, p3: any, p4: string, offset: number, string: string) => {\n      // console.table({match, p1, p2, offset, string});\n\n      out.push(string.slice(lastIndex, offset));\n\n      if(p1) {\n        // offset += p1.length;\n        let element: HTMLElement;\n        switch(p1) {\n          case '**': {\n            element = document.createElement('b');\n            break;\n          }\n\n          case '__': {\n            element = document.createElement('i');\n            break;\n          }\n        }\n\n        element.append(...superFormatter(p2, args, indexHolder) as any);\n        out.push(element);\n      } else if(p3) {\n        out.push(document.createElement('br'));\n      } else if(p4) {\n        const idx = p4.lastIndexOf(']');\n        const text = p4.slice(1, idx);\n\n        const url = p4.slice(idx + 2, p4.length - 1);\n        let a: HTMLAnchorElement;\n        if(url && matchUrlProtocol(url)) {\n          a = document.createElement('a');\n          const wrappedUrl = wrapUrl(url);\n          a.href = wrappedUrl.url;\n          if(wrappedUrl.onclick) a.setAttribute('onclick', wrappedUrl.onclick + '(this)');\n          a.target = '_blank';\n        } else {\n          a = args[indexHolder.i++] as HTMLAnchorElement;\n\n          if(a instanceof DocumentFragment) { // right after wrapRichText\n            a = a.firstChild as any;\n          }\n\n          if(typeof(a) !== 'string') {\n            a.textContent = ''; // reset content\n          }\n        }\n\n        const formatted = superFormatter(text, args, indexHolder) as any;\n        if(typeof(a) === 'string') {\n          out.push(...formatted);\n        } else {\n          a.append(...formatted);\n          out.push(a);\n        }\n      } else if(args) {\n        pushNextArgument(out, args, indexHolder);\n      }\n\n      lastIndex = offset + match.length;\n      return '';\n    });\n\n    if(lastIndex !== input.length) {\n      out.push(input.slice(lastIndex));\n    }\n\n    return out;\n  }\n\n  export function format(key: LangPackKey, plain: true, args?: FormatterArguments): string;\n  export function format(key: LangPackKey, plain?: false, args?: FormatterArguments): ReturnType<typeof superFormatter>;\n  export function format(key: LangPackKey, plain = false, args?: FormatterArguments): ReturnType<typeof superFormatter> | string {\n    const str = strings.get(key);\n    let input: string;\n    if(str) {\n      if(str._ === 'langPackStringPluralized' && args?.length) {\n        let v = args[0] as number | string;\n        if(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\n        const s = pluralRules.select(v);\n        // @ts-ignore\n        input = str[s + '_value'] || str['other_value'];\n      } else if(str._ === 'langPackString') {\n        input = str.value;\n      } else {\n        // input = '[' + key + ']';\n        input = key;\n      }\n    } else {\n      // input = '[' + key + ']';\n      input = key;\n    }\n\n    const result = superFormatter(input, args);\n    if(plain) { // * let's try a hack now... (don't want to replace []() entity)\n      return result.map((item) => item instanceof Node ? item.textContent : item).join('');\n    } else {\n      return result;\n    }\n\n    /* if(plain) {\n      if(args?.length) {\n        const regExp = /un\\d|%\\d\\$.|%./g;\n        let i = 0;\n        input = input.replace(regExp, (match, offset, string) => {\n          return '' + args[i++];\n        });\n      }\n\n      return input;\n    } else {\n      return superFormatter(input, args);\n    } */\n  }\n\n  export const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\n\n  export type IntlElementBaseOptions = {\n    element?: HTMLElement,\n    property?: 'innerText' | 'innerHTML' | 'placeholder' | 'textContent',\n  };\n\n  abstract class IntlElementBase<Options extends IntlElementBaseOptions> {\n    public element: IntlElementBaseOptions['element'];\n    public property: IntlElementBaseOptions['property'];\n\n    constructor(options?: Options) {\n      this.element = options?.element || document.createElement('span');\n      this.element.classList.add('i18n');\n\n      this.property = options?.property;\n\n      weakMap.set(this.element, this);\n    }\n\n    abstract update(options?: Options): void;\n  }\n\n  export type IntlElementOptions = IntlElementBaseOptions & {\n    key?: LangPackKey,\n    args?: FormatterArguments\n  };\n  export class IntlElement extends IntlElementBase<IntlElementOptions> {\n    public key: IntlElementOptions['key'];\n    public args: IntlElementOptions['args'];\n\n    constructor(options: IntlElementOptions = {}) {\n      super({...options, property: options.property ?? 'innerHTML'});\n\n      if(options?.key) {\n        this.update(options);\n      }\n    }\n\n    public update(options?: IntlElementOptions) {\n      safeAssign(this, options);\n\n      if(this.property === 'innerHTML') {\n        this.element.textContent = '';\n        this.element.append(...format(this.key, false, this.args) as any);\n      } else {\n        // @ts-ignore\n        const v = this.element[this.property];\n        const formatted = format(this.key, true, this.args);\n\n        // * hasOwnProperty won't work here\n        if(v === undefined) this.element.dataset[this.property] = formatted;\n        else (this.element as HTMLInputElement)[this.property] = formatted;\n      }\n    }\n\n    public compareAndUpdate(options?: IntlElementOptions) {\n      if(this.key === options.key && deepEqual(this.args, options.args)) {\n        return;\n      }\n\n      return this.update(options);\n    }\n  }\n\n  const cachedDateTimeFormats: Map<string, Intl.DateTimeFormat> = new Map();\n  export function getDateTimeFormat(options: Intl.DateTimeFormatOptions = {}) {\n    const json = JSON.stringify(options);\n    let dateTimeFormat = cachedDateTimeFormats.get(json);\n    if(!dateTimeFormat) {\n      dateTimeFormat = new Intl.DateTimeFormat(lastRequestedNormalizedLangCode + '-u-hc-' + timeFormat, options);\n      cachedDateTimeFormats.set(json, dateTimeFormat);\n    }\n\n    return dateTimeFormat;\n  }\n\n  export let amPmCache = {am: 'AM', pm: 'PM'};\n  export type IntlDateElementOptions = IntlElementBaseOptions & {\n    date?: Date,\n    options: Intl.DateTimeFormatOptions\n  };\n  export class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\n    public date: IntlDateElementOptions['date'];\n    public options: IntlDateElementOptions['options'];\n\n    constructor(options: IntlDateElementOptions) {\n      super({...options, property: options.property ?? 'textContent'});\n      setDirection(this.element);\n\n      if(options?.date) {\n        this.update(options);\n      }\n    }\n\n    public update(options?: IntlDateElementOptions) {\n      safeAssign(this, options);\n\n      let text: string;\n      if(this.options.hour && this.options.minute && Object.keys(this.options).length === 2/*  && false */) {\n        const hours = this.date.getHours();\n        text = ('0' + (timeFormat === 'h12' ? (hours % 12) || 12 : hours)).slice(-2) + ':' + ('0' + this.date.getMinutes()).slice(-2);\n        // if(this.options.second) {\n        //   text += ':' + ('0' + this.date.getSeconds()).slice(-2);\n        // }\n\n        if(timeFormat === 'h12') {\n          text += ' ' + (hours < 12 ? amPmCache.am : amPmCache.pm);\n        }\n      } else {\n        // * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\n        const dateTimeFormat = getDateTimeFormat(this.options);\n        text = capitalizeFirstLetter(dateTimeFormat.format(this.date));\n      }\n\n      (this.element as any)[this.property] = text;\n    }\n  }\n\n  export function i18n(key: LangPackKey, args?: FormatterArguments) {\n    return new IntlElement({key, args}).element;\n  }\n\n  export function i18n_(options: IntlElementOptions) {\n    return new IntlElement(options).element;\n  }\n\n  export function _i18n(element: HTMLElement, key: LangPackKey, args?: FormatterArguments, property?: IntlElementOptions['property']) {\n    return new IntlElement({element, key, args, property}).element;\n  }\n}\n\nexport {I18n};\nexport default I18n;\n\nconst i18n = I18n.i18n;\nexport {i18n};\n\nconst i18n_ = I18n.i18n_;\nexport {i18n_};\n\nconst _i18n = I18n._i18n;\nexport {_i18n};\n\nexport function joinElementsWith<T extends Node | string | Array<Node | string>>(\n  elements: T[],\n  joiner: T | string | ((isLast: boolean) => T)\n): T[] {\n  const arr = elements.slice(0, 1) as T[];\n  for(let i = 1; i < elements.length; ++i) {\n    const isLast = (elements.length - 1) === i;\n    arr.push(typeof(joiner) === 'function' ? (joiner as any)(isLast) : joiner);\n    arr.push(elements[i]);\n  }\n\n  return arr;\n}\n\n\nexport function join(elements: (Node | string)[], useLast: boolean, plain: true): string;\nexport function join(elements: (Node | string)[], useLast?: boolean, plain?: false): (string | Node)[];\nexport function join(elements: (Node | string)[], useLast: boolean, plain: boolean): string | (string | Node)[];\nexport function join(elements: (Node | string)[], useLast = true, plain?: boolean): string | (string | Node)[] {\n  const joined = joinElementsWith(elements, (isLast) => {\n    const langPackKey: LangPackKey = isLast && useLast ? 'AutoDownloadSettings.LastDelimeter' : 'AutoDownloadSettings.Delimeter';\n    return plain ? I18n.format(langPackKey, true) : i18n(langPackKey);\n  });\n\n  return plain ? joined.join('') : joined;\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.I18n = I18n);\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport I18n, {i18n} from '../lib/langPack';\nimport capitalizeFirstLetter from './string/capitalizeFirstLetter';\n\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nexport const monthsLocalized = months.slice();\nexport const daysLocalized = days.slice();\n\nexport const ONE_DAY = 86400;\n\nexport function getWeekDays() {\n  const dateTimeFormat = I18n.getDateTimeFormat({weekday: 'long'});\n  const date = new Date(Date.UTC(2017, 0, 2));\n  const out: string[] = [];\n  for(let i = 0; i < 7; ++i) {\n    out.push(capitalizeFirstLetter(dateTimeFormat.format(date)));\n    date.setDate(date.getDate() + 1);\n  }\n  return out;\n}\n\nexport function getMonths() {\n  const dateTimeFormat = I18n.getDateTimeFormat({month: 'long'});\n  const date = new Date(Date.UTC(2017, 0, 1));\n  const out: string[] = [];\n  for(let i = 0; i < 12; ++i) {\n    out.push(capitalizeFirstLetter(dateTimeFormat.format(date)));\n    date.setMonth(date.getMonth() + 1);\n  }\n  return out;\n}\n\nexport function fillLocalizedDates() {\n  monthsLocalized.splice(0, monthsLocalized.length, ...getMonths());\n  daysLocalized.splice(0, daysLocalized.length, ...getWeekDays());\n}\n\n// https://stackoverflow.com/a/6117889\nexport const getWeekNumber = (date: Date) => {\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  const dayNum = d.getUTCDay() || 7;\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\n};\n\nexport function formatDateAccordingToTodayNew(time: Date) {\n  const today = new Date();\n  const now = today.getTime() / 1000 | 0;\n  const timestamp = time.getTime() / 1000 | 0;\n\n  const options: Intl.DateTimeFormatOptions = {};\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\n    options.hour = options.minute = '2-digit';\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\n    options.year = options.day = 'numeric';\n    options.month = '2-digit';\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\n    options.weekday = 'short';\n  } else { // same year\n    options.month = 'short';\n    options.day = 'numeric';\n  }\n\n  return new I18n.IntlDateElement({\n    date: time,\n    options\n  }).element;\n}\n\nexport function formatFullSentTimeRaw(timestamp: number, options: {\n  capitalize?: boolean\n} = {}) {\n  const date = new Date();\n  const time = new Date(timestamp * 1000);\n  const now = date.getTime() / 1000;\n\n  const timeEl = formatTime(time);\n\n  let dateEl: Node | string;\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\n    dateEl = i18n(options.capitalize ? 'Date.Today' : 'Peer.Status.Today');\n  } else if((now - timestamp) < (ONE_DAY * 2) && (date.getDate() - 1) === time.getDate()) { // yesterday\n    dateEl = i18n(options.capitalize ? 'Yesterday' : 'Peer.Status.Yesterday');\n\n    if(options.capitalize) {\n      (dateEl as HTMLElement).style.textTransform = 'capitalize';\n    }\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\n    dateEl = new I18n.IntlDateElement({\n      date: time,\n      options: {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      }\n    }).element;\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate() + ', ' + time.getFullYear();\n  } else {\n    dateEl = new I18n.IntlDateElement({\n      date: time,\n      options: {\n        month: 'short',\n        day: 'numeric'\n      }\n    }).element;\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate();\n  }\n\n  return {dateEl, timeEl};\n}\n\nexport function formatFullSentTime(timestamp: number, capitalize = true) {\n  const {dateEl, timeEl} = formatFullSentTimeRaw(timestamp, {\n    capitalize\n  });\n\n  const fragment = document.createDocumentFragment();\n  fragment.append(dateEl, ' ', i18n('ScheduleController.at'), ' ', timeEl);\n  return fragment;\n}\n\nexport function formatTime(date: Date) {\n  return new I18n.IntlDateElement({\n    date,\n    options: {\n      hour: '2-digit',\n      minute: '2-digit'\n    }\n  }).element;\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\n\nexport const getFullDate = (date: Date, options: Partial<{\n  noTime: true,\n  noSeconds: true,\n  monthAsNumber: true,\n  leadingZero: true,\n  shortYear: boolean\n}> = {}) => {\n  const joiner = options.monthAsNumber ? '.' : ' ';\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\n  const fullYear = date.getFullYear();\n\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) +\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) +\n    joiner + (('' + fullYear).slice(options.shortYear ? 2 : 0)) +\n    (options.noTime ? '' : ', ' + time);\n};\n\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\nconst minYear = 2013;\nconst yearPattern = new RegExp('20[0-9]{1,2}');\nconst anyLetterRegExp = `\\\\p{L}`;\nconst monthPattern = new RegExp(`(${anyLetterRegExp}{3,})`, 'iu');\nconst monthYearOrDayPattern = new RegExp(`(${anyLetterRegExp}{3,}) ([0-9]{0,4})`, 'iu');\nconst yearOrDayAndMonthPattern = new RegExp(`([0-9]{0,4}) (${anyLetterRegExp}{2,})`, 'iu');\nconst shortDate = new RegExp('^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\nconst longDate = new RegExp('^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexport type DateData = {\n  title: string,\n  minDate: number,\n  maxDate: number,\n};\nexport function fillTipDates(query: string, dates: DateData[]) {\n  const q = query.trim().toLowerCase();\n\n  if(q.length < 3) {\n    return;\n  }\n\n  if(['today', I18n.format('Peer.Status.Today', true)].some((haystack) => haystack.indexOf(q) === 0)) {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime();\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 1;\n    dates.push({\n      title: I18n.format('Date.Today', true),\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  if(['yesterday', I18n.format('Peer.Status.Yesterday', true)].some((haystack) => haystack.indexOf(q) === 0)) {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime() - 86400000;\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 86400001;\n    dates.push({\n      title: capitalizeFirstLetter(I18n.format('Yesterday', true)),\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  const dayOfWeek = getDayOfWeek(q);\n  if(dayOfWeek >= 0) {\n    const date = new Date();\n    const now = date.getTime();\n    const currentDay = date.getDay();\n    const distance = dayOfWeek - currentDay;\n    date.setDate(date.getDate() + distance);\n    if(date.getTime() > now) {\n      date.setTime(date.getTime() - 604800000);\n    }\n    const year = date.getFullYear()\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime();\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 1;\n    dates.push({\n      title: formatWeekLong(minDate),\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  let matches: any[];\n  if((matches = shortDate.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[3];\n    const k = parseInt(g1);\n    const k1 = parseInt(g2);\n    if(k > 0 && k <= 31) {\n      if(k1 >= minYear && k <= 12) {\n        const selectedYear = k1;\n        const month = k - 1;\n        createForMonthYear(dates, month, selectedYear);\n        return;\n      } else if(k1 <= 12) {\n        const day = k - 1;\n        const month = k1 - 1;\n        createForDayMonth(dates, day, month);\n      }\n    } else if(k >= minYear && k1 <= 12) {\n      const selectedYear = k;\n      const month = k1 - 1;\n      createForMonthYear(dates, month, selectedYear);\n    }\n\n    return;\n  }\n\n  if((matches = longDate.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[3];\n    const g3 = matches[5];\n    if(!matches[2] === matches[4]) {\n      return;\n    }\n\n    const day = parseInt(g1);\n    const month = parseInt(g2) - 1;\n    let year = parseInt(g3);\n    if(year >= 10 && year <= 99) {\n      year += 2000;\n    }\n\n    const currentYear = new Date().getFullYear();\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\n      const date = new Date();\n      date.setFullYear(year, month, day);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      date.setFullYear(year, month, day + 1);\n      date.setHours(0, 0, 0);\n\n      const maxDate = date.getTime() - 1;\n      dates.push({\n        title: formatterYearMax(minDate),\n        minDate,\n        maxDate\n      });\n      return;\n    }\n\n    return;\n  }\n\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[2];\n    const month = getMonth(g1);\n    if(month >= 0) {\n      const k = +g2 || new Date().getUTCFullYear();\n      if(k > 0 && k <= 31) {\n        const day = k - 1;\n        createForDayMonth(dates, day, month);\n        return;\n      } else if(k >= minYear) {\n        const selectedYear = k;\n        createForMonthYear(dates, month, selectedYear);\n        return;\n      }\n    }\n  }\n\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[2];\n    const month = getMonth(g2);\n    if(month >= 0) {\n      const k = +g1;\n      if(k > 0 && k <= 31) {\n        const day = k - 1;\n        createForDayMonth(dates, day, month);\n        return;\n      } else if(k >= minYear) {\n        const selectedYear = k;\n        createForMonthYear(dates, month, selectedYear);\n      }\n    }\n  }\n\n  if((matches = monthPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const month = getMonth(g1);\n    if(month >= 0) {\n      const currentYear = new Date().getFullYear();\n      for(let i = currentYear; i >= minYear; --i) {\n        createForMonthYear(dates, month, i);\n      }\n    }\n  }\n\n  if((matches = yearPattern.exec(q)) !== null) {\n    let selectedYear = +matches[0];\n    const currentYear = new Date().getFullYear();\n    if(selectedYear < minYear) {\n      selectedYear = minYear;\n      for(let i = currentYear; i >= selectedYear; i--) {\n        const date = new Date();\n        date.setFullYear(i, 0, 1);\n        date.setHours(0, 0, 0);\n\n        const minDate = date.getTime();\n        date.setFullYear(i + 1, 0, 1);\n        date.setHours(0, 0, 0);\n\n        const maxDate = date.getTime() - 1;\n        dates.push({\n          title: '' + i,\n          minDate,\n          maxDate\n        });\n      }\n    } else if(selectedYear <= currentYear) {\n      const date = new Date();\n      date.setFullYear(selectedYear, 0, 1);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      date.setFullYear(selectedYear + 1, 0, 1);\n      date.setHours(0, 0, 0);\n\n      const maxDate = date.getTime() - 1;\n      dates.push({\n        title: '' + selectedYear,\n        minDate,\n        maxDate\n      });\n    }\n\n    return;\n  }\n}\n\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\n  const currentYear = new Date().getFullYear();\n  const today = Date.now();\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\n    const date = new Date();\n    date.setFullYear(selectedYear, month, 1);\n    date.setHours(0, 0, 0);\n    const minDate = date.getTime();\n    if(minDate > today) {\n      return;\n    }\n    date.setMonth(date.getMonth() + 1);\n    const maxDate = date.getTime() - 1;\n\n    dates.push({\n      title: formatterMonthYear(minDate),\n      minDate,\n      maxDate\n    });\n  }\n}\n\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\n  if(validDateForMonth(day, month)) {\n    const currentYear = new Date().getFullYear();\n    const today = Date.now();\n\n    for(let i = currentYear; i >= minYear; i--) {\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\n        continue;\n      }\n\n      const date = new Date();\n      date.setFullYear(i, month, day + 1);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      if(minDate > today) {\n        continue;\n      }\n\n      date.setFullYear(i, month, day + 2);\n      date.setHours(0, 0, 0);\n      const maxDate = date.getTime() - 1;\n      if(i === currentYear) {\n        dates.push({\n          title: formatterDayMonth(minDate),\n          minDate,\n          maxDate\n        });\n      } else {\n        dates.push({\n          title: formatterYearMax(minDate),\n          minDate,\n          maxDate\n        });\n      }\n    }\n  }\n}\n\nfunction formatterMonthYear(timestamp: number) {\n  const date = new Date(timestamp);\n  return monthsLocalized[date.getMonth()]/* .slice(0, 3) */ + ' ' + date.getFullYear();\n}\n\nfunction formatterDayMonth(timestamp: number) {\n  const date = new Date(timestamp);\n  return monthsLocalized[date.getMonth()]/* .slice(0, 3) */ + ' ' + date.getDate();\n}\n\nfunction formatterYearMax(timestamp: number) {\n  const date = new Date(timestamp);\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\n}\n\nfunction formatWeekLong(timestamp: number) {\n  const date = new Date(timestamp);\n  return daysLocalized[date.getDay()];\n}\n\nfunction validDateForMonth(day: number, month: number) {\n  if(month >= 0 && month < 12) {\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isLeapYear(year: number) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nfunction getMonth(q: string) {\n  q = q.toLowerCase();\n  for(let i = 0; i < 12; i++) {\n    if([months[i], monthsLocalized[i]].some((month) => month.toLowerCase().indexOf(q) === 0)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getDayOfWeek(q: string) {\n  const c = new Date();\n  if(q.length <= 3) {\n    return -1;\n  }\n\n  for(let i = 0; i < 7; i++) {\n    c.setDate(c.getDate() + 1);\n\n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\n      return c.getDay();\n    }\n  }\n  return -1;\n}\n\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\n","/**\n * Will be used for FILE_REFERENCE_EXPIRED\n * @param key\n * @param wasObject\n * @param newObject\n */\nexport default function safeReplaceArrayInObject<K>(key: K, wasObject: any, newObject: any) {\n  if('byteLength' in newObject[key]) { // Uint8Array\n    newObject[key] = [...newObject[key]];\n  }\n\n  if(wasObject && wasObject[key] !== newObject[key]) {\n    wasObject[key].length = newObject[key].length;\n    (newObject[key] as any[]).forEach((v, i) => {\n      wasObject[key][i] = v;\n    });\n\n    /* wasObject[key].set(newObject[key]); */\n    newObject[key] = wasObject[key];\n  }\n}\n","export default function spoiler(text: string): string {\n  const chars = '⠁⠂⠄⠈⠐⠠⡀⢀⠃⠅⠆⠉⠊⠌⠑⠒⠔⠘⠡⠢⠤⠨⠰⡁⡂⡄⡈⡐⡠⢁⢂⢄⢈⢐⢠⣀⠇⠋⠍⠎⠓⠕⠖⠙⠚⠜⠣⠥⠦⠩⠪⠬⠱⠲⠴⠸⡃⡅⡆⡉⡊⡌⡑⡒⡔⡘⡡⡢⡤⡨⡰⢃⢅⢆⢉⢊⢌⢑⢒⢔⢘⢡⢢⢤⢨⢰⣁⣂⣄⣈⣐⣠⠏⠗⠛⠝⠞⠧⠫⠭⠮⠳⠵⠶⠹⠺⠼⡇⡋⡍⡎⡓⡕⡖⡙⡚⡜⡣⡥⡦⡩⡪⡬⡱⡲⡴⡸⢇⢋⢍⢎⢓⢕⢖⢙⢚⢜⢣⢥⢦⢩⢪⢬⢱⢲⢴⢸⣃⣅⣆⣉⣊⣌⣑⣒⣔⣘⣡⣢⣤⣨⣰⠟⠯⠷⠻⠽⠾⡏⡗⡛⡝⡞⡧⡫⡭⡮⡳⡵⡶⡹⡺⡼⢏⢗⢛⢝⢞⢧⢫⢭⢮⢳⢵⢶⢹⢺⢼⣇⣋⣍⣎⣓⣕⣖⣙⣚⣜⣣⣥⣦⣩⣪⣬⣱⣲⣴⣸⠿⡟⡯⡷⡻⡽⡾⢟⢯⢷⢻⢽⢾⣏⣗⣛⣝⣞⣧⣫⣭⣮⣳⣵⣶⣹⣺⣼⡿⢿⣟⣯⣷⣻⣽⣾⣿';\n  const charsLength = chars.length;\n\n  const out: string[] = [];\n  for(let i = 0; i < text.length; ++i) {\n    const char = text.charCodeAt(i);\n    out.push(chars[char % charsLength]);\n  }\n\n  return out.join('');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MessageEntity} from '../../layer';\nimport spoiler from './spoiler';\n\nexport default function encodeSpoiler(text: string, entity: MessageEntity.messageEntitySpoiler) {\n  const before = text.slice(0, entity.offset);\n  const spoilerBefore = text.slice(entity.offset, entity.offset + entity.length);\n  const spoilerAfter = spoiler(spoilerBefore)/*  '▚'.repeat(entity.length) */;\n  const after = text.slice(entity.offset + entity.length);\n  text = before + spoilerAfter + after;\n  return {text, entityText: spoilerAfter};\n};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MessageEntity} from '../../layer';\nimport encodeSpoiler from './encodeSpoiler';\n\n/**\n * ! This function is still unsafe to use with .innerHTML\n */\nexport default function wrapPlainText(text: string, entities: MessageEntity[] = []) {\n  entities.forEach((entity) => {\n    if(entity._ === 'messageEntitySpoiler') {\n      text = encodeSpoiler(text, entity).text;\n    }\n  });\n\n  return text;\n  // if(entities?.length) {\n  //   entities = entities.filter((entity) => entity._ === 'messageEntitySpoiler');\n  // }\n\n  // return wrapRichText(text, {\n  //   entities,\n  //   noEncoding: true,\n  //   noTextFormat: true,\n  //   noLinebreaks: true,\n  //   noLinks: true\n  // }).textContent;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Document, InputFileLocation} from '../../../../layer';\n\nexport default function getDocumentInputFileLocation(doc: Document.document, thumbSize?: string): InputFileLocation.inputDocumentFileLocation {\n  return {\n    _: 'inputDocumentFileLocation',\n    id: doc.id,\n    access_hash: doc.access_hash,\n    file_reference: doc.file_reference,\n    thumb_size: thumbSize\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {InputFileLocation, InputGeoPoint, InputStickerSet, InputWebFileLocation} from '../layer';\nimport type {DownloadOptions} from '../lib/mtproto/apiFileManager';\n\nconst FILENAME_JOINER = '_';\n\nexport function getFileNameByLocation(location: InputFileLocation | InputWebFileLocation, options?: Partial<{\n  fileName: string,\n  downloadId: string\n}>) {\n  const fileName = '';// (options?.fileName || '').split('.');\n  const ext = fileName[fileName.length - 1] || '';\n\n  let str: string;\n  switch(location._) {\n    case 'inputPhotoFileLocation': {\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputDocumentFileLocation': {\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputPeerPhotoFileLocation':\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\n      break;\n\n    case 'inputStickerSetThumb': {\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id ||\n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name ||\n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon ||\n        location.stickerset._;\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputFileLocation': {\n      str = [location.volume_id, location.local_id].join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputWebFileLocation': {\n      str = ['webFile', location.url].join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputWebFileGeoPointLocation': {\n      const geoPoint = location.geo_point as InputGeoPoint.inputGeoPoint;\n      str = ['geoPoint', geoPoint.lat, geoPoint.long, location.w, location.h, location.zoom, location.scale].join(FILENAME_JOINER);\n      break;\n    }\n\n    default: {\n      console.error('Unrecognized location:', location);\n      str = '';\n      break;\n    }\n  }\n\n  return str + (options?.downloadId ? '_download' : '') + (ext ? '.' + ext : ext);\n}\n\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download';\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\n  // console.log('getFileURL', location);\n  // const perf = performance.now();\n  const encoded = encodeURIComponent(JSON.stringify(options));\n  // console.log('getFileURL encode:', performance.now() - perf, encoded);\n\n  return /* '/' +  */type + '/' + encoded;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Document, PhotoSize, VideoSize} from '../../../../layer';\nimport type {DownloadOptions} from '../../../mtproto/apiFileManager';\nimport getDocumentInputFileLocation from './getDocumentInputFileLocation';\n\nexport default function getDocumentDownloadOptions(\n  doc: Document.document,\n  thumb?: PhotoSize.photoSize | Extract<VideoSize, VideoSize.videoSize>,\n  queueId?: number,\n  onlyCache?: boolean\n): DownloadOptions {\n  const inputFileLocation = getDocumentInputFileLocation(doc, thumb?.type);\n\n  let mimeType: MTMimeType;\n  if(thumb?._ === 'photoSize') {\n    mimeType = doc.sticker ? 'image/webp' : (doc.mime_type.startsWith('image/') ? doc.mime_type : 'image/jpeg');\n  } else {\n    mimeType = doc.mime_type || 'application/octet-stream';\n  }\n\n  return {\n    dcId: doc.dc_id,\n    location: inputFileLocation,\n    size: thumb ? thumb.size : doc.size,\n    mimeType,\n    fileName: doc.file_name,\n    queueId,\n    onlyCache\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {FileURLType, getFileURL} from '../../../../helpers/fileName';\nimport {Document, PhotoSize} from '../../../../layer';\nimport getDocumentDownloadOptions from './getDocumentDownloadOptions';\n\nexport default function getDocumentURL(doc: Document.document, download = false, thumb?: PhotoSize.photoSize) {\n  let type: FileURLType;\n  if(download) {\n    type = 'download';\n  } else if(thumb) {\n    type = 'thumb';\n  } else if(doc.supportsStreaming) {\n    type = 'stream';\n  } else {\n    type = 'document';\n  }\n\n  return getFileURL(type, getDocumentDownloadOptions(doc, thumb));\n}\n","export const EXTENSION_MIME_TYPE_MAP: {[ext in MTFileExtension]: MTMimeType} = {\n  pdf: 'application/pdf',\n  tgv: 'application/x-tgwallpattern',\n  tgs: 'application/x-tgsticker',\n  json: 'application/json',\n  wav: 'audio/wav',\n  mp3: 'audio/mpeg',\n  ogg: 'audio/ogg',\n  jpeg: 'image/jpeg',\n  jpg: 'image/jpeg',\n  png: 'image/png',\n  gif: 'image/gif',\n  webp: 'image/webp',\n  mp4: 'video/mp4',\n  webm: 'video/webm',\n  mov: 'video/quicktime',\n  svg: 'image/svg+xml'\n};\n\nexport const MIME_TYPE_EXTENSION_MAP: {[mimeType in MTMimeType]?: MTFileExtension} = {};\n\nfor(const ext in EXTENSION_MIME_TYPE_MAP) {\n  MIME_TYPE_EXTENSION_MAP[EXTENSION_MIME_TYPE_MAP[ext as MTFileExtension]] = ext as MTFileExtension;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ThumbCache} from '../storages/thumbs';\nimport {Document, DocumentAttribute, MessagesSavedGifs, PhotoSize, WallPaper} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {getFullDate} from '../../helpers/date';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport {AppManager} from './manager';\nimport wrapPlainText from '../richTextProcessor/wrapPlainText';\nimport assumeType from '../../helpers/assumeType';\nimport {getEnvironment} from '../../environment/utils';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getDocumentInputFileLocation from './utils/docs/getDocumentInputFileLocation';\nimport getDocumentURL from './utils/docs/getDocumentURL';\nimport makeError from '../../helpers/makeError';\nimport {EXTENSION_MIME_TYPE_MAP} from '../../environment/mimeTypeMap';\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\nimport tsNow from '../../helpers/tsNow';\nimport appManagersManager from './appManagersManager';\n\nexport type MyDocument = Document.document;\n\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\n\ntype WallPaperId = WallPaper.wallPaper['id'];\n\nlet uploadWallPaperTempId = 0;\n\nexport class AppDocsManager extends AppManager {\n  private docs: {\n    [docId: DocId]: MyDocument\n  };\n\n  private uploadingWallPapers: {\n    [id: WallPaperId]: {\n      cacheContext: ThumbCache,\n      file: File\n    }\n  };\n\n  protected after() {\n    this.docs = {};\n    this.uploadingWallPapers = {};\n\n    MTProtoMessagePort.getInstance<false>().addEventListener('serviceWorkerOnline', (online) => {\n      if(!online) {\n        this.onServiceWorkerFail();\n      }\n    });\n  }\n\n  private onServiceWorkerFail = () => {\n    for(const id in this.docs) {\n      const doc = this.docs[id];\n\n      if(doc.supportsStreaming) {\n        delete doc.supportsStreaming;\n        this.thumbsStorage.deleteCacheContext(doc);\n      }\n    }\n  };\n\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\n    if(!doc || doc._ === 'documentEmpty') {\n      return;\n    }\n\n    const oldDoc = this.docs[doc.id];\n\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\n      this.referenceDatabase.saveContext(doc.file_reference, context);\n    }\n\n    // console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\n    // if(oldDoc) {\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\n    //     if(doc.thumbs) {\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\n    //         apiDoc.thumbs[0] = d.thumbs[0];\n    //       } */\n    //     }\n\n    //   //}\n\n    //   return oldDoc;\n\n    //   //return Object.assign(d, apiDoc, context);\n    //   //return context ? Object.assign(d, context) : d;\n    // }\n\n    if(!oldDoc) {\n      this.docs[doc.id] = doc;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name',\n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle',\n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw',\n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\n\n    for(let i = 0, length = doc.attributes.length; i < length; ++i) {\n      const attribute = doc.attributes[i];\n      switch(attribute._) {\n        case 'documentAttributeFilename': {\n          doc.file_name = wrapPlainText(attribute.file_name);\n          break;\n        }\n\n        case 'documentAttributeAudio': {\n          if(doc.type === 'round') {\n            break;\n          }\n\n          doc.duration = attribute.duration;\n          doc.type = attribute.pFlags.voice && doc.mime_type === EXTENSION_MIME_TYPE_MAP.ogg ? 'voice' : 'audio';\n          break;\n        }\n\n        case 'documentAttributeVideo': {\n          doc.duration = attribute.duration;\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          // apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\n            doc.type = 'round';\n          } else /* if(apiDoc.thumbs) */ {\n            doc.type = 'video';\n          }\n          break;\n        }\n\n        case 'documentAttributeCustomEmoji':\n        case 'documentAttributeSticker': {\n          if(attribute.alt !== undefined) {\n            doc.stickerEmojiRaw = attribute.alt;\n          }\n\n          if(attribute.stickerset) {\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\n              delete attribute.stickerset;\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\n              doc.stickerSetInput = attribute.stickerset;\n            }\n          }\n\n          // * there can be no thumbs, then it is a document\n          if(/* apiDoc.thumbs &&  */doc.mime_type === EXTENSION_MIME_TYPE_MAP.webp && (doc.thumbs || getEnvironment().IS_WEBP_SUPPORTED)) {\n            doc.type = 'sticker';\n            doc.sticker = 1;\n          } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.webm) {\n            if(!getEnvironment().IS_WEBM_SUPPORTED) {\n              break;\n            }\n\n            doc.type = 'sticker';\n            doc.sticker = 3;\n            doc.animated = true;\n          }\n          break;\n        }\n\n        case 'documentAttributeImageSize': {\n          doc.type = 'photo';\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          break;\n        }\n\n        case 'documentAttributeAnimated': {\n          if((doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif || doc.mime_type === EXTENSION_MIME_TYPE_MAP.mp4)/*  && apiDoc.thumbs */) {\n            doc.type = 'gif';\n          }\n\n          doc.animated = true;\n          break;\n        }\n      }\n    }\n\n    if(!doc.mime_type) {\n      const ext = (doc.file_name || '').split('.').pop();\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase() as any as MTFileExtension];\n      if(mappedMimeType) {\n        doc.mime_type = mappedMimeType;\n      } else {\n        switch(doc.type) {\n          case 'gif':\n          case 'video':\n          case 'round':\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.mp4;\n            break;\n          case 'sticker':\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.webp;\n            break;\n          case 'audio':\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.mp3;\n            break;\n          case 'voice':\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.ogg;\n            break;\n          default:\n            doc.mime_type = 'application/octet-stream';\n            break;\n        }\n      }\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\n      doc.type = 'pdf';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\n      doc.type = 'gif';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.tgs && doc.file_name === 'AnimatedSticker.tgs') {\n      doc.type = 'sticker';\n      doc.animated = true;\n      doc.sticker = 2;\n    }\n\n    if(doc.type === 'voice' || doc.type === 'round') {\n      // browser will identify extension\n      const attribute = doc.attributes.find((attribute) => attribute._ === 'documentAttributeFilename') as DocumentAttribute.documentAttributeFilename;\n      const ext = attribute && attribute.file_name.split('.').pop();\n      const date = getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\n      doc.file_name = `${doc.type}_${date}${ext ? '.' + ext : ''}`;\n    }\n\n    if(appManagersManager.isServiceWorkerOnline && ((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video')/*  || doc.mime_type.indexOf('video/') === 0 */) {\n      doc.supportsStreaming = true;\n\n      const cacheContext = this.thumbsStorage.getCacheContext(doc);\n      if(!cacheContext.url) {\n        this.thumbsStorage.setCacheContextURL(doc, undefined, getDocumentURL(doc), 0);\n      }\n    } else {\n      doc.supportsStreaming = false;\n    }\n\n    // for testing purposes\n    // doc.supportsStreaming = false;\n    // doc.url = ''; // * this will break upload urls\n\n    doc.file_name ||= '';\n\n    /* if(!doc.url) {\n      doc.url = this.getFileURL(doc);\n    } */\n\n    if(oldDoc) {\n      return Object.assign(oldDoc, doc);\n    }\n\n    return doc;\n  }\n\n  public getDoc(docId: DocId | MyDocument): MyDocument {\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\n  }\n\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean) {\n    return this.apiFileManager.downloadMedia({\n      media: doc,\n      queueId,\n      onlyCache\n    });\n  }\n\n  public saveWebPConvertedStrippedThumb(docId: DocId, bytes: Uint8Array) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const thumb = doc.thumbs && doc.thumbs.find((thumb) => thumb._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n    if(!thumb) {\n      return;\n    }\n\n    doc.pFlags.stickerThumbConverted = true;\n    thumb.bytes = bytes;\n  }\n\n  public prepareWallPaperUpload(file: File) {\n    const id = 'wallpaper-upload-' + ++uploadWallPaperTempId;\n\n    const thumb = {\n      _: 'photoSize',\n      h: 0,\n      w: 0,\n      location: {} as any,\n      size: file.size,\n      type: THUMB_TYPE_FULL\n    } as PhotoSize.photoSize;\n    let document: MyDocument = {\n      _: 'document',\n      access_hash: '',\n      attributes: [],\n      dc_id: 0,\n      file_reference: [],\n      id,\n      mime_type: file.type as MTMimeType,\n      size: file.size,\n      date: tsNow(true),\n      pFlags: {},\n      thumbs: [thumb],\n      file_name: file.name\n    };\n\n    document = this.saveDoc(document);\n\n    const cacheContext = this.thumbsStorage.setCacheContextURL(document, undefined, URL.createObjectURL(file), file.size);\n\n    const wallpaper: WallPaper.wallPaper = {\n      _: 'wallPaper',\n      access_hash: '',\n      document: document,\n      id,\n      slug: id,\n      pFlags: {}\n    };\n\n    this.uploadingWallPapers[id] = {\n      cacheContext,\n      file\n    };\n\n    return wallpaper;\n  }\n\n  public uploadWallPaper(id: WallPaperId) {\n    const {cacheContext, file} = this.uploadingWallPapers[id];\n    delete this.uploadingWallPapers[id];\n\n    const upload = this.apiFileManager.upload({file, fileName: file.name});\n    return upload.then((inputFile) => {\n      return this.apiManager.invokeApi('account.uploadWallPaper', {\n        file: inputFile,\n        mime_type: file.type,\n        settings: {\n          _: 'wallPaperSettings',\n          pFlags: {}\n        }\n      }).then((wallPaper) => {\n        assumeType<WallPaper.wallPaper>(wallPaper);\n        wallPaper.document = this.saveDoc(wallPaper.document);\n        this.thumbsStorage.setCacheContextURL(wallPaper.document, undefined, cacheContext.url, cacheContext.downloaded);\n\n        return wallPaper;\n      });\n    });\n  }\n\n  public getGifs() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getSavedGifs',\n      processResult: (res) => {\n        assumeType<MessagesSavedGifs.messagesSavedGifs>(res);\n        return res.gifs.map((doc) => this.saveDoc(doc));\n      }\n    });\n  }\n\n  public requestDocPart(docId: DocId, dcId: number, offset: number, limit: number) {\n    const doc = this.getDoc(docId);\n    if(!doc) return Promise.reject(makeError('NO_DOC'));\n    return this.apiFileManager.requestFilePart(dcId, getDocumentInputFileLocation(doc), offset, limit);\n  }\n}\n","import deepEqual from '../../../../helpers/object/deepEqual';\nimport {InputReplyTo, MessageReplyHeader} from '../../../../layer';\n\nexport default function repliesAreEqual(reply1: MessageReplyHeader | InputReplyTo, reply2: MessageReplyHeader | InputReplyTo) {\n  return deepEqual(reply1, reply2);\n}\n","import deepEqual from '../../../../helpers/object/deepEqual';\nimport {DraftMessage} from '../../../../layer';\nimport repliesAreEqual from '../messages/repliesAreEqual';\n\nexport default function draftsAreEqual(draft1: DraftMessage, draft2: DraftMessage) {\n  return deepEqual(draft1 as DraftMessage.draftMessage, draft2 as DraftMessage.draftMessage, ['date', 'reply_to']) &&\n    repliesAreEqual((draft1 as DraftMessage.draftMessage)?.reply_to, (draft2 as DraftMessage.draftMessage)?.reply_to);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {MessageEntity, DraftMessage, MessagesSaveDraft, MessageReplyHeader, InputReplyTo, MessageMedia, WebPage, InputMedia} from '../../layer';\nimport tsNow from '../../helpers/tsNow';\nimport stateStorage from '../stateStorage';\nimport assumeType from '../../helpers/assumeType';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport draftsAreEqual from './utils/drafts/draftsAreEqual';\n\nexport type MyDraftMessage = DraftMessage.draftMessage;\n\nexport class AppDraftsManager extends AppManager {\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage};\n  private getAllDraftPromise: Promise<void>;\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateDraftMessage: (update) => {\n        const peerId = this.appPeersManager.getPeerId(update.peer);\n        this.saveDraft({\n          peerId,\n          threadId: update.threadId,\n          draft: update.draft,\n          notify: true,\n          force: true\n        });\n      }\n    });\n\n    /* return  */stateStorage.get('drafts').then((drafts) => {\n      this.drafts = drafts || {};\n    });\n  }\n\n  public clear = (init?: boolean) => {\n    if(!init) {\n      this.getAllDraftPromise = undefined;\n    }\n\n    this.drafts = {};\n  };\n\n  private getKey(peerId: PeerId, threadId?: number) {\n    return '' + peerId + (threadId ? '_' + threadId : '');\n  }\n\n  public getDraft(peerId: PeerId, threadId?: number) {\n    return this.drafts[this.getKey(peerId, threadId)];\n  }\n\n  // private generateDialog(peerId: PeerId) {\n  //   const dialog = this.dialogsStorage.generateDialog(peerId);\n  //   dialog.draft = this.drafts[peerId];\n  //   this.dialogsStorage.saveDialog(dialog);\n  //   this.appMessagesManager.newDialogsToHandle[peerId] = dialog;\n  //   this.appMessagesManager.scheduleHandleNewDialogs();\n  // }\n\n  public addMissedDialogs() {\n    return this.getAllDrafts().then(() => {\n      for(const key in this.drafts) {\n        if(key.indexOf('_') !== -1) { // exclude threads\n          continue;\n        }\n\n        const peerId = key.toPeerId();\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\n        if(!dialog) {\n          this.appMessagesManager.reloadConversation(peerId);\n          // this.generateDialog(peerId);\n        }\n      }\n    });\n  }\n\n  private getAllDrafts() {\n    return this.getAllDraftPromise ??= this.apiManager.invokeApi('messages.getAllDrafts')\n    .then((updates) => {\n      const p = this.apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\n      return p.then(() => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      });\n    });\n  }\n\n  public saveDraft({\n    peerId,\n    threadId,\n    draft: apiDraft,\n    notify,\n    force\n  }: {\n    peerId: PeerId,\n    threadId?: number,\n    draft: DraftMessage,\n    notify?: boolean,\n    force?: boolean\n  }) {\n    const draft = this.processApiDraft(apiDraft, peerId);\n\n    const key = this.getKey(peerId, threadId);\n    if(draft) {\n      this.drafts[key] = draft;\n    } else {\n      delete this.drafts[key];\n    }\n\n    stateStorage.set({\n      drafts: this.drafts\n    });\n\n    if(notify) {\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\n      this.rootScope.dispatchEvent('draft_updated', {\n        peerId,\n        threadId,\n        draft,\n        force\n      });\n    }\n\n    return draft;\n  }\n\n  private isEmptyDraft(draft: DraftMessage) {\n    if(draft?._ !== 'draftMessage') {\n      return true;\n    }\n\n    if(draft.reply_to !== undefined && (draft.reply_to as InputReplyTo.inputReplyToMessage).reply_to_msg_id > 0) {\n      return false;\n    }\n\n    if(!draft.message.length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private processApiDraft(draft: DraftMessage, peerId: PeerId): MyDraftMessage {\n    if(draft?._ !== 'draftMessage') {\n      return undefined;\n    }\n\n    const replyTo = draft.reply_to as InputReplyTo.inputReplyToMessage;\n    if(replyTo?.reply_to_msg_id) {\n      const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n      replyTo.reply_to_msg_id = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_msg_id, channelId);\n    }\n\n    return draft;\n  }\n\n  public syncDraft(peerId: PeerId, threadId: number, localDraft?: DraftMessage, saveOnServer = true, force = false) {\n    // console.warn(dT(), 'sync draft', peerID)\n    const serverDraft = this.getDraft(peerId, threadId);\n    if(draftsAreEqual(serverDraft, localDraft)) {\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\n      return true;\n    }\n\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\n    const params: MessagesSaveDraft = {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      message: ''\n    };\n\n    let draftObj: DraftMessage;\n    if(this.isEmptyDraft(localDraft)) {\n      draftObj = {_: 'draftMessageEmpty'};\n    } else {\n      assumeType<DraftMessage.draftMessage>(localDraft);\n      const message = localDraft.message;\n      const entities: MessageEntity[] = localDraft.entities;\n\n      const replyTo = localDraft.reply_to as InputReplyTo.inputReplyToMessage;\n      if(replyTo) {\n        params.reply_to = {\n          _: 'inputReplyToMessage',\n          reply_to_msg_id: getServerMessageId(replyTo.reply_to_msg_id)\n        };\n      }\n\n      if(entities?.length) {\n        params.entities = this.appMessagesManager.getInputEntities(entities);\n      }\n\n      if(localDraft.pFlags.no_webpage) {\n        params.no_webpage = localDraft.pFlags.no_webpage;\n      }\n\n      if(localDraft.pFlags.invert_media) {\n        params.invert_media = localDraft.pFlags.invert_media;\n      }\n\n      if(localDraft.media) {\n        params.media = localDraft.media;\n      }\n\n      params.message = message;\n    }\n\n    if(threadId) {\n      const inputReplyTo: InputReplyTo.inputReplyToMessage = params.reply_to ??= {_: 'inputReplyToMessage'} as any;\n      if(!inputReplyTo.reply_to_msg_id) {\n        inputReplyTo.reply_to_msg_id = getServerMessageId(threadId);\n      } else {\n        inputReplyTo.top_msg_id = getServerMessageId(threadId);\n      }\n    }\n\n    const saveLocalDraft = draftObj || localDraft;\n    saveLocalDraft.date = tsNow(true) + this.timeManager.getServerTimeOffset();\n\n    this.saveDraft({\n      peerId,\n      threadId,\n      draft: saveLocalDraft,\n      notify: true,\n      force\n    });\n\n    if(saveOnServer) {\n      const promise = this.apiManager.invokeApi('messages.saveDraft', params);\n      const dialog = this.dialogsStorage.getDialogOnly(peerId); // * create or delete dialog when draft changes\n      if(!dialog || !getServerMessageId(dialog.top_message)) {\n        return promise.then(() => {\n          return this.appMessagesManager.reloadConversation(peerId);\n        });\n      }\n\n      return promise;\n    }\n\n    return true;\n  }\n\n  public clearAllDrafts() {\n    return this.apiManager.invokeApi('messages.clearAllDrafts').then((bool) => {\n      if(!bool) {\n        return;\n      }\n\n      for(const combined in this.drafts) {\n        const [peerId, threadId] = combined.split('_');\n        this.rootScope.dispatchEvent('draft_updated', {\n          peerId: peerId.toPeerId(),\n          threadId: threadId ? +threadId : undefined,\n          draft: undefined\n        });\n      }\n    });\n  }\n\n  public clearDraft(peerId: PeerId, threadId: number) {\n    const emptyDraft: DraftMessage.draftMessageEmpty = {\n      _: 'draftMessageEmpty'\n    };\n\n    if(threadId) {\n      this.syncDraft(peerId, threadId, emptyDraft as any, false, true);\n    } else {\n      this.saveDraft({\n        peerId,\n        threadId,\n        draft: emptyDraft,\n        notify: true,\n        force: true\n      });\n    }\n  }\n\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\n    const draft: DraftMessage.draftMessage = {\n      _: 'draftMessage',\n      date: tsNow(true),\n      message,\n      pFlags: {},\n      entities\n    };\n\n    if(threadId) {\n      this.syncDraft(peerId, threadId, draft, false, true);\n    } else {\n      this.saveDraft({\n        peerId,\n        threadId,\n        draft,\n        notify: true,\n        force: true\n      });\n    }\n  }\n}\n","import copy from './copy';\nimport isObject from './isObject';\n\nexport default function validateInitObject(\n  initObject: any,\n  currentObject: any,\n  onReplace?: (key: string) => void,\n  previousKey?: string,\n  ignorePaths?: Set<string>,\n  path?: string\n) {\n  for(const key in initObject) {\n    const _path = path ? `${path}.${key}` : key;\n    if(ignorePaths?.has(_path)) {\n      continue;\n    }\n\n    if(typeof(currentObject[key]) !== typeof(initObject[key])) {\n      currentObject[key] = copy(initObject[key]);\n      onReplace?.(previousKey || key);\n    } else if(isObject(initObject[key])) {\n      validateInitObject(initObject[key], currentObject[key], onReplace, previousKey || key, ignorePaths, _path);\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MessageEntity} from '../../layer';\n\nexport default function fixEmoji(text: string, entities?: MessageEntity[]) {\n  /* if(!IS_EMOJI_SUPPORTED) {\n    return text;\n  } */\n  // '$`\\ufe0f'\n\n  text = text.replace(/[\\u2640\\u2642\\u2764](?!\\ufe0f)/g, (match, offset, string) => {\n    if(entities) {\n      const length = match.length;\n\n      offset += length;\n      entities.forEach((entity) => {\n        const end = entity.offset + entity.length;\n        if(end === offset) { // current entity\n          entity.length += length;\n        } else if(end > offset) {\n          entity.offset += length;\n        }\n      });\n    }\n\n    // console.log([match, offset, string]);\n    return match + '\\ufe0f';\n  });\n\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport isObject from '../../helpers/object/isObject';\nimport validateInitObject from '../../helpers/object/validateInitObject';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport SearchIndex from '../searchIndex';\nimport stateStorage from '../stateStorage';\nimport {AppManager} from './manager';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\n\ntype EmojiLangPack = {\n  keywords: {\n    [keyword: string]: string[],\n  },\n  version: number,\n  langCode: string\n};\n\nconst EMOJI_LANG_PACK: EmojiLangPack = {\n  keywords: {},\n  version: 0,\n  langCode: App.langPackCode\n};\n\nconst RECENT_MAX_LENGTH = 32;\n\ntype EmojiType = 'native' | 'custom';\n\nexport class AppEmojiManager extends AppManager {\n  private static POPULAR_EMOJI = ['😂', '😘', '❤️', '😍', '😊', '😁', '👍', '☺️', '😔', '😄', '😭', '💋', '😒', '😳', '😜', '🙈', '😉', '😃', '😢', '😝', '😱', '😡', '😏', '😞', '😅', '😚', '🙊', '😌', '😀', '😋', '😆', '👌', '😐', '😕'];\n  private keywordLangPacks: {\n    [langCode: string]: EmojiLangPack\n  } = {};\n\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\n\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\n\n  private recent: {native?: string[], custom?: DocId[]} = {};\n  private getRecentEmojisPromises: {native?: Promise<string[]>, custom?: Promise<DocId[]>} = {};\n\n  private getCustomEmojiDocumentsPromise: Promise<any>;\n  private getCustomEmojiDocumentPromises: Map<DocId, CancellablePromise<MyDocument>> = new Map();\n\n  /* public getPopularEmoji() {\n    return stateStorage.get('emojis_popular').then((popEmojis) => {\n      var result = []\n      if (popEmojis && popEmojis.length) {\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\n        }\n        callback(result)\n        return\n      }\n\n      return stateStorage.get('emojis_recent').then((recentEmojis) => {\n        recentEmojis = recentEmojis || popular || []\n        var shortcut\n        var code\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\n          shortcut = recentEmojis[i]\n          if (Array.isArray(shortcut)) {\n            shortcut = shortcut[0]\n          }\n          if (shortcut && typeof shortcut === 'string') {\n            if (shortcut.charAt(0) == ':') {\n              shortcut = shortcut.substr(1, shortcut.length - 2)\n            }\n            if (code = shortcuts[shortcut]) {\n              result.push({code: code, rate: 1})\n            }\n          }\n        }\n        callback(result)\n      });\n    });\n  }\n\n  function pushPopularEmoji (code) {\n    getPopularEmoji(function (popularEmoji) {\n      var exists = false\n      var count = popularEmoji.length\n      var result = []\n      for (var i = 0; i < count; i++) {\n        if (popularEmoji[i].code == code) {\n          exists = true\n          popularEmoji[i].rate++\n        }\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\n      }\n      if (exists) {\n        result.sort(function (a, b) {\n          return b[1] - a[1]\n        })\n      } else {\n        if (result.length > 41) {\n          result = result.slice(0, 41)\n        }\n        result.push([code, 1])\n      }\n      ConfigStorage.set({emojis_popular: result})\n    })\n  } */\n\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\n    const promise = this.getKeywordsPromises[langCode];\n    if(promise) {\n      return promise;\n    }\n\n    const storageKey: any = 'emojiKeywords_' + langCode;\n    return this.getKeywordsPromises[langCode] = stateStorage.get(storageKey).then((pack: EmojiLangPack) => {\n      if(!isObject(pack)) {\n        pack = {} as any;\n      }\n\n      validateInitObject(EMOJI_LANG_PACK, pack);\n\n      // important\n      pack.langCode = langCode;\n      this.keywordLangPacks[langCode] = pack;\n\n      return this.apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\n        lang_code: pack.langCode,\n        from_version: pack.version\n      }).then((keywordsDifference) => {\n        pack.version = keywordsDifference.version;\n\n        const packKeywords = pack.keywords;\n        const keywords = keywordsDifference.keywords;\n        for(let i = 0, length = keywords.length; i < length; ++i) {\n          const {keyword, emoticons} = keywords[i];\n          packKeywords[keyword] = emoticons;\n        }\n\n        stateStorage.set({\n          [storageKey]: pack\n        });\n\n        return pack;\n      }, () => {\n        return pack;\n      });\n    });\n  }\n\n  public getBothEmojiKeywords() {\n    const promises: Promise<any>[] = [\n      this.getEmojiKeywords()\n    ];\n\n    if(this.networkerFactory.language !== App.langPackCode) {\n      promises.push(this.getEmojiKeywords(this.networkerFactory.language));\n    }\n\n    if(!this.recent.native) {\n      promises.push(this.getRecentEmojis('native'));\n    }\n\n    return Promise.all(promises);\n  }\n\n  private indexEmojis() {\n    if(!this.index) {\n      this.index = new SearchIndex({minChars: 2, fullWords: true});\n    }\n\n    for(const langCode in this.keywordLangPacks) {\n      if(this.indexedLangPacks[langCode]) {\n        continue;\n      }\n\n      const pack = this.keywordLangPacks[langCode];\n      const keywords = pack.keywords;\n\n      for(const keyword in keywords) {\n        const emoticons = keywords[keyword];\n        this.index.indexObject(emoticons, keyword);\n      }\n\n      this.indexedLangPacks[langCode] = true;\n    }\n  }\n\n  public searchEmojis(q: string) {\n    this.indexEmojis();\n\n    q = q.toLowerCase().replace(/_/g, ' ');\n\n    // const perf = performance.now();\n    let emojis: Array<string>;\n    if(q.trim()) {\n      const set = this.index.search(q);\n      emojis = Array.from(set).reduce((acc, v) => acc.concat(v), []);\n    } else {\n      emojis = this.recent.native.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\n    }\n\n    emojis = Array.from(new Set(emojis));\n    // console.log('searchEmojis', q, 'time', performance.now() - perf);\n\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\n        emojis[i] += '\\ufe0f';\n      }\n    } */\n\n    return emojis;\n  }\n\n  public getRecentEmojis<T extends EmojiType>(type: 'custom'): Promise<DocId[]>;\n  public getRecentEmojis<T extends EmojiType>(type: 'native'): Promise<string[]>;\n  public getRecentEmojis<T extends EmojiType>(type: T): Promise<string[] | DocId[]> {\n    const promises = this.getRecentEmojisPromises;\n    return promises[type] ??= this.appStateManager.getState().then((state) => {\n      let recent: string[] | DocId[] = [];\n      if(type === 'native') {\n        const {recentEmoji} = state;\n        recent = Array.isArray(recentEmoji) && recentEmoji.length ? recentEmoji : AppEmojiManager.POPULAR_EMOJI;\n      } else {\n        const {recentCustomEmoji} = state;\n        recent = Array.isArray(recentCustomEmoji) && recentCustomEmoji.length ? recentCustomEmoji : [];\n      }\n\n      return this.recent[type] = recent as any;\n    }) as any;\n  }\n\n  public pushRecentEmoji(emoji: AppEmoji) {\n    const type: EmojiType = emoji.docId ? 'custom' : 'native';\n    emoji.emoji = fixEmoji(emoji.emoji);\n    // @ts-ignore\n    this.getRecentEmojis(type).then((recent) => {\n      const i = emoji.docId || emoji.emoji;\n      indexOfAndSplice(recent, i);\n      recent.unshift(i);\n      recent.splice(RECENT_MAX_LENGTH, recent.length - RECENT_MAX_LENGTH);\n\n      this.appStateManager.pushToState(type === 'custom' ? 'recentCustomEmoji' : 'recentEmoji', recent);\n      this.rootScope.dispatchEvent('emoji_recent', emoji);\n    });\n  }\n\n  public getCustomEmojiDocuments(docIds: DocId[]) {\n    if(!docIds.length) return Promise.resolve([] as MyDocument[]);\n    return this.apiManager.invokeApi('messages.getCustomEmojiDocuments', {document_id: docIds}).then((documents) => {\n      return documents.map((doc) => {\n        return this.appDocsManager.saveDoc(doc, {\n          type: 'customEmoji',\n          docId: doc.id\n        });\n      });\n    });\n  }\n\n  public getCachedCustomEmojiDocuments(docIds: DocId[]) {\n    return docIds.map((docId) => this.appDocsManager.getDoc(docId));\n  }\n\n  private setDebouncedGetCustomEmojiDocuments() {\n    if(this.getCustomEmojiDocumentsPromise || !this.getCustomEmojiDocumentPromises.size) {\n      return;\n    }\n\n    this.getCustomEmojiDocumentsPromise = pause(0).then(() => {\n      const allIds = [...this.getCustomEmojiDocumentPromises.keys()];\n      const promises: Promise<any>[] = [];\n      do {\n        const ids = allIds.splice(0, 100);\n        const promise = this.getCustomEmojiDocuments(ids).then((docs) => {\n          docs.forEach((doc, idx) => {\n            const docId = ids[idx];\n            const deferred = this.getCustomEmojiDocumentPromises.get(docId);\n            this.getCustomEmojiDocumentPromises.delete(docId);\n            deferred.resolve(doc);\n          });\n        });\n\n        promises.push(promise);\n      } while(allIds.length);\n\n      return Promise.all(promises);\n    }).finally(() => {\n      this.getCustomEmojiDocumentsPromise = undefined;\n      this.setDebouncedGetCustomEmojiDocuments();\n    });\n  }\n\n  public getCustomEmojiDocument(id: DocId) {\n    let promise = this.getCustomEmojiDocumentPromises.get(id);\n    if(promise) {\n      return promise;\n    }\n\n    const doc = this.appDocsManager.getDoc(id);\n    if(doc) {\n      return doc;\n    }\n\n    promise = deferredPromise();\n    this.getCustomEmojiDocumentPromises.set(id, promise);\n\n    this.setDebouncedGetCustomEmojiDocuments();\n\n    return promise;\n  }\n\n  public getCustomEmojis() {\n    return this.appStickersManager.getEmojiStickers();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport type GroupCallConnectionInstance from '../calls/groupCallConnectionInstance';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {nextRandomUint} from '../../helpers/random';\nimport {DataJSON, GroupCall, GroupCallParticipant, GroupCallParticipantVideoSourceGroup, InputGroupCall, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates} from '../../layer';\nimport {logger} from '../logger';\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\n\nexport type GroupCallId = GroupCall['id'];\nexport type MyGroupCall = GroupCall | InputGroupCall;\n\nexport type GroupCallConnectionType = 'main' | 'presentation';\n\nexport type JoinGroupCallJsonPayload = {\n  fingerprints: {\n    fingerprint: string;\n    setup: string;\n    hash: string;\n  }[];\n  pwd: string;\n  ssrc: number;\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\n  ufrag: string;\n};\n\nconst GET_PARTICIPANTS_LIMIT = 100;\n\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\n\nexport class AppGroupCallsManager extends AppManager {\n  private log: ReturnType<typeof logger>;\n\n  private groupCalls: Map<GroupCallId, MyGroupCall>;\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\n  private nextOffsets: Map<GroupCallId, string>;\n\n  // private doNotDispatchParticipantUpdate: PeerId;\n\n  protected after() {\n    this.log = logger('GROUP-CALLS');\n\n    this.groupCalls = new Map();\n    this.participants = new Map();\n    this.nextOffsets = new Map();\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateGroupCall: (update) => {\n        this.saveGroupCall(update.call, update.chat_id);\n      },\n\n      updateGroupCallParticipants: (update) => {\n        this.saveGroupCall(update.call);\n\n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\n\n        const groupCallId = update.call.id;\n        this.saveApiParticipants(groupCallId, update.participants);\n      }\n    });\n\n    this.rootScope.addEventListener('group_call_update', (groupCall) => {\n      if(groupCall._ === 'groupCallDiscarded') {\n        this.participants.delete(groupCall.id);\n      }\n    });\n  }\n\n  public getCachedParticipants(groupCallId: GroupCallId) {\n    let participants = this.participants.get(groupCallId);\n    if(!participants) {\n      this.participants.set(groupCallId, participants = new Map());\n    }\n\n    return participants;\n  }\n\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\n    const nextOffsetsMap = this.nextOffsets;\n\n    const setNextOffset = (newNextOffset: string) => {\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\n        nextOffsetsMap.set(groupCallId, newNextOffset);\n      }\n    };\n\n    const nextOffset = nextOffsetsMap.get(groupCallId);\n    return {\n      nextOffset,\n      setNextOffset\n    };\n  }\n\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\n    const participants = this.getCachedParticipants(groupCallId);\n\n    const peerId = getPeerId(participant.peer);\n\n    const oldParticipant = participants.get(peerId);\n    const hasLeft = participant.pFlags.left;\n    if(!oldParticipant && hasLeft) {\n      return;\n    }\n\n    // * fix missing flag\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\n      participant.pFlags.can_self_unmute = true;\n    }\n\n    if(oldParticipant) {\n      safeReplaceObject(oldParticipant, participant);\n      participant = oldParticipant;\n    } else {\n      participants.set(peerId, participant);\n    }\n\n    // if(!skipCounterUpdating) {\n    const groupCall = this.getGroupCall(groupCallId);\n    if(groupCall?._ === 'groupCall') {\n      let modified = false;\n      if(hasLeft) {\n        --groupCall.participants_count;\n        modified = true;\n      } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\n        ++groupCall.participants_count;\n        modified = true;\n      }\n\n      if(modified) {\n        this.rootScope.dispatchEvent('group_call_update', groupCall);\n      }\n    }\n    // }\n\n    if(hasLeft) {\n      participants.delete(peerId);\n    }\n\n    if(oldParticipant || true/*  && this.doNotDispatchParticipantUpdate !== peerId */) {\n      this.rootScope.dispatchEvent('group_call_participant', {\n        groupCallId,\n        participant\n      });\n    }\n  }\n\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\n    if((apiParticipants as any).saved) return;\n    (apiParticipants as any).saved = true;\n    apiParticipants.forEach((p) => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\n  }\n\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\n    muted: boolean,\n    volume: number,\n    raiseHand: boolean,\n    videoStopped: boolean,\n    videoPaused: boolean,\n    presentationPaused: boolean\n  }>) {\n    this.saveApiParticipant(groupCallId, participant);\n\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : getPeerId(participant.peer);\n    const updates = await this.apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\n      call: this.getGroupCallInput(groupCallId),\n      participant: peerId === NULL_PEER_ID ? this.appPeersManager.getInputPeerSelf() : this.appPeersManager.getInputPeerById(peerId),\n      muted: options.muted,\n      volume: options.volume,\n      raise_hand: options.raiseHand,\n      video_paused: options.videoPaused,\n      video_stopped: options.videoStopped,\n      presentation_paused: options.presentationPaused\n    });\n\n    // do not replace with peerId because it can be null\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = getPeerId(participant.peer);\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\n  }\n\n  public getGroupCall(id: GroupCallId) {\n    return this.groupCalls.get(id);\n  }\n\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\n    const call = this.getGroupCall(id);\n    if(call && call._ !== 'inputGroupCall' && !override) {\n      return call;\n    }\n\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'phone.getGroupCall',\n      params: {\n        call: this.getGroupCallInput(id),\n        limit\n      },\n      processResult: (groupCall) => {\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\n        this.appUsersManager.saveApiUsers(groupCall.users);\n        this.appChatsManager.saveApiChats(groupCall.chats);\n        this.saveApiParticipants(id, groupCall.participants, true);\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\n\n        if(limit && this.nextOffsets.get(id) === undefined) {\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\n        }\n\n        return call;\n      }\n    });\n  }\n\n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\n    const oldCall = this.groupCalls.get(call.id);\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\n    if(oldCall) {\n      if(shouldUpdate) {\n        safeReplaceObject(oldCall, call);\n      }\n\n      call = oldCall;\n    } else {\n      this.groupCalls.set(call.id, call);\n    }\n\n    if(shouldUpdate) {\n      this.rootScope.dispatchEvent('group_call_update', call as any);\n    }\n\n    return call;\n  }\n\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string) {\n    const updates = await this.apiManager.invokeApi('phone.createGroupCall', {\n      peer: this.appPeersManager.getInputPeerById(chatId.toPeerId(true)),\n      random_id: nextRandomUint(32),\n      schedule_date: scheduleDate,\n      title\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCall') as Update.updateGroupCall;\n    return update.call;\n  }\n\n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\n    const groupCall = this.getGroupCall(id);\n    return {\n      _: 'inputGroupCall',\n      id: groupCall.id,\n      access_hash: groupCall.access_hash\n    };\n  }\n\n  // public generateSelfParticipant(): GroupCallParticipant {\n  //   const mainSources = this.currentGroupCall.connections.main.sources;\n  //   const presentationSources = this.currentGroupCall.connections.presentation?.sources;\n  //   return {\n  //     _: 'groupCallParticipant',\n  //     pFlags: {\n  //       can_self_unmute: true,\n  //       self: true\n  //     },\n  //     source: mainSources.audio.source,\n  //     video: this.generateSelfVideo(mainSources.video),\n  //     presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\n  //     date: tsNow(true),\n  //     peer: this.appPeersManager.getOutputPeer(rootScope.myId)\n  //   };\n  // }\n\n  public async getGroupCallParticipants(id: GroupCallId) {\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\n\n    if(nextOffset !== '') {\n      await this.apiManager.invokeApiSingleProcess({\n        method: 'phone.getGroupParticipants',\n        params: {\n          call: this.getGroupCallInput(id),\n          ids: [],\n          sources: [],\n          offset: nextOffset || '',\n          limit: GET_PARTICIPANTS_LIMIT\n        },\n        processResult: (groupCallParticipants) => {\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\n\n          this.appChatsManager.saveApiChats(groupCallParticipants.chats);\n          this.appUsersManager.saveApiUsers(groupCallParticipants.users);\n          this.saveApiParticipants(id, groupCallParticipants.participants);\n\n          setNextOffset(newNextOffset);\n        }\n      });\n    }\n\n    return {\n      participants: this.getCachedParticipants(id),\n      isEnd: this.nextOffsets.get(id) === ''\n    };\n  }\n\n  public hangUp(id: GroupCallId, discard?: boolean | number) {\n    const groupCallInput = this.getGroupCallInput(id);\n    let promise: Promise<Updates>;\n    if(typeof(discard) === 'boolean' && discard) {\n      promise = this.apiManager.invokeApi('phone.discardGroupCall', {\n        call: groupCallInput\n      });\n    } else if(typeof(discard) === 'number') {\n      promise = this.apiManager.invokeApi('phone.leaveGroupCall', {\n        call: groupCallInput,\n        source: discard\n      });\n    } else {\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', {\n        call: groupCallInput,\n        join_as: this.appPeersManager.getInputPeerSelf(),\n        muted: true,\n        video_stopped: true,\n        params: {\n          _: 'dataJSON',\n          data: ''\n        }\n      });\n    }\n\n    return promise.then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public async joinGroupCall(groupCallId: GroupCallId, params: DataJSON, options: GroupCallConnectionInstance['options']) {\n    const groupCallInput = this.getGroupCallInput(groupCallId);\n    let promise: Promise<Updates>;\n    if(options.type === 'main') {\n      const request: PhoneJoinGroupCall = {\n        call: groupCallInput,\n        join_as: this.appPeersManager.getInputPeerSelf(),\n        params,\n        muted: options.isMuted,\n        video_stopped: !options.joinVideo\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', request);\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\n    } else {\n      const request: PhoneJoinGroupCallPresentation = {\n        call: groupCallInput,\n        params\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCallPresentation', request);\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\n    }\n\n    const updates = await promise;\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\n    return update;\n  }\n\n  public leaveGroupCallPresentation(groupCallId: GroupCallId) {\n    return this.apiManager.invokeApi('phone.leaveGroupCallPresentation', {\n      call: this.getGroupCallInput(groupCallId)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputPhoto} from '../../../../layer';\nimport {MyPhoto} from '../../appPhotosManager';\n\nexport default function getPhotoInput(photo: MyPhoto): InputPhoto.inputPhoto {\n  return {\n    _: 'inputPhoto',\n    id: photo.id,\n    access_hash: photo.access_hash,\n    file_reference: photo.file_reference\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputMedia} from '../../../../layer';\nimport {MyPhoto} from '../../appPhotosManager';\nimport getPhotoInput from './getPhotoInput';\n\nexport default function getPhotoMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\n  return {\n    _: 'inputMediaPhoto',\n    id: getPhotoInput(photo),\n    ttl_seconds: 0,\n    pFlags: {}\n  };\n}\n","import {MessagesBotResults} from '../../../../layer';\n\nexport default function generateQId(queryId: MessagesBotResults.messagesBotResults['query_id'], resultId: string) {\n  return queryId + '_' + resultId;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Document, InputMedia} from '../../../../layer';\n\nexport default function getMediaInput(doc: Document.document): InputMedia.inputMediaDocument {\n  return {\n    _: 'inputMediaDocument',\n    id: {\n      _: 'inputDocument',\n      id: doc.id,\n      access_hash: doc.access_hash,\n      file_reference: doc.file_reference\n    },\n    ttl_seconds: 0,\n    pFlags: {}\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport type {MyPhoto} from './appPhotosManager';\nimport type {MyTopPeer} from './appUsersManager';\nimport type {AppMessagesManager, MessageSendingParams} from './appMessagesManager';\nimport {BotInlineResult, GeoPoint, InputGeoPoint, InputMedia, MessageEntity, MessageMedia, MessagesBotResults, ReplyMarkup} from '../../layer';\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\nimport {AppManager} from './manager';\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport generateQId from './utils/inlineBots/generateQId';\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\n\nexport class AppInlineBotsManager extends AppManager {\n  private inlineResults: {[queryAndResultIds: string]: BotInlineResult} = {};\n  private setHash: {\n    [botId: UserId]: {\n      peerId: PeerId,\n      time: number\n    }\n  } = {};\n\n  public getGeoInput(geo: GeoPoint): InputGeoPoint {\n    return geo._ === 'geoPoint' ? {\n      _: 'inputGeoPoint',\n      lat: geo.lat,\n      long: geo.long,\n      accuracy_radius: geo.accuracy_radius\n    } : {\n      _: 'inputGeoPointEmpty'\n    };\n  }\n\n  public getInlineResults(peerId: PeerId, botId: BotId, query = '', offset = '', geo?: GeoPoint) {\n    return this.apiManager.invokeApi('messages.getInlineBotResults', {\n      bot: this.appUsersManager.getUserInput(botId),\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      query,\n      geo_point: geo ? this.getGeoInput(geo) : undefined,\n      offset\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then((botResults) => {\n      const queryId = botResults.query_id;\n\n      /* if(botResults.switch_pm) {\n        botResults.switch_pm.rText = wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\n      } */\n\n      botResults.results.forEach((result) => {\n        if(result._ === 'botInlineMediaResult') {\n          result.document = this.appDocsManager.saveDoc(result.document);\n          result.photo = this.appPhotosManager.savePhoto(result.photo);\n        } else {\n          result.content = this.appWebDocsManager.saveWebDocument(result.content);\n          result.thumb = this.appWebDocsManager.saveWebDocument(result.thumb);\n        }\n\n        this.inlineResults[generateQId(queryId, result.id)] = result;\n      });\n\n      return botResults;\n    });\n  }\n\n  private pushPopularBot(botId: BotId) {\n    this.appUsersManager.getTopPeers('bots_inline').then((topPeers) => {\n      const botPeerId = botId.toPeerId();\n      const index = topPeers.findIndex((topPeer) => topPeer.id === botPeerId);\n      let topPeer: MyTopPeer;\n      if(index !== -1) {\n        topPeer = topPeers[index];\n      } else {\n        topPeer = {\n          id: botPeerId,\n          rating: 0\n        };\n      }\n\n      ++topPeer.rating;\n      insertInDescendSortedArray(topPeers, topPeer, 'rating');\n\n      this.appStateManager.setKeyValueToStorage('topPeersCache');\n\n      // rootScope.$broadcast('inline_bots_popular')\n    });\n  }\n\n  public switchToPM(fromPeerId: PeerId, botId: BotId, startParam: string) {\n    this.setHash[botId] = {peerId: fromPeerId, time: Date.now()};\n    return this.appMessagesManager.startBot(botId, undefined, startParam);\n  }\n\n  /*\n  function resolveInlineMention (username) {\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\n      if (peerId.isUser()) {\n        var bot = AppUsersManager.getUser(peerId)\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\n          var resolvedBot = {\n            username: username,\n            id: peerId,\n            placeholder: bot.bot_inline_placeholder\n          }\n          if (bot.pFlags.bot_inline_geo &&\n            GeoLocationManager.isAvailable()) {\n              return checkGeoLocationAccess(peerId).then(function () {\n                return GeoLocationManager.getPosition().then(function (coords) {\n                  resolvedBot.geo = coords\n                  return qSync.when(resolvedBot)\n                })\n              })['catch'](function () {\n                return qSync.when(resolvedBot)\n              })\n            }\n            return qSync.when(resolvedBot)\n          }\n        }\n        return $q.reject()\n      }, function (error) {\n        error.handled = true\n        return $q.reject(error)\n      })\n    }\n\n    function regroupWrappedResults (results, rowW, rowH) {\n      if (!results ||\n        !results[0] ||\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\n          return\n        }\n        var ratios = []\n        angular.forEach(results, function (result) {\n          var w\n          var h, doc\n          var photo\n          if (result._ === 'botInlineMediaResult') {\n            if (doc = result.document) {\n              w = result.document.w\n              h = result.document.h\n            }\n            else if (photo = result.photo) {\n              var photoSize = (photo.sizes || [])[0]\n              w = photoSize && photoSize.w\n              h = photoSize && photoSize.h\n            }\n          }else {\n            w = result.w\n            h = result.h\n          }\n          if (!w || !h) {\n            w = h = 1\n          }\n          ratios.push(w / h)\n        })\n\n        var rows = []\n        var curCnt = 0\n        var curW = 0\n        angular.forEach(ratios, function (ratio) {\n          var w = ratio * rowH\n          curW += w\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\n            curCnt++\n          } else {\n            rows.push(curCnt)\n            curCnt = 1\n            curW = w\n          }\n        })\n        if (curCnt) {\n          rows.push(curCnt)\n        }\n\n        var i = 0\n        var thumbs = []\n        var lastRowI = rows.length - 1\n        angular.forEach(rows, function (rowCnt, rowI) {\n          var lastRow = rowI === lastRowI\n          var curRatios = ratios.slice(i, i + rowCnt)\n          var sumRatios = 0\n          angular.forEach(curRatios, function (ratio) {\n            sumRatios += ratio\n          })\n          angular.forEach(curRatios, function (ratio, j) {\n            var thumbH = rowH\n            var thumbW = rowW * ratio / sumRatios\n            var realW = thumbH * ratio\n            if (lastRow && thumbW > realW) {\n              thumbW = realW\n            }\n            var result = results[i + j]\n            result.thumbW = Math.floor(thumbW) - 2\n            result.thumbH = Math.floor(thumbH) - 2\n          })\n\n          i += rowCnt\n        })\n      } */\n\n  public async checkSwitchReturn(botId: BotId) {\n    const bot = this.appUsersManager.getUser(botId);\n    if(!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\n      return;\n    }\n\n    const peerData = this.setHash[botId];\n    if(peerData) {\n      delete this.setHash[botId];\n      if((Date.now() - peerData.time) < 3600e3) {\n        return peerData.peerId;\n      }\n    }\n  }\n\n  public switchInlineQuery(peerId: PeerId, threadId: number, botId: BotId, query: string) {\n    const message = '@' + this.appPeersManager.getPeerUsername(botId.toPeerId()) + ' ' + query;\n    this.appDraftsManager.setDraft(peerId, threadId, message);\n  }\n\n  public callbackButtonClick(peerId: PeerId, mid: number, button: any) {\n    return this.apiManager.invokeApi('messages.getBotCallbackAnswer', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid),\n      data: button.data\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true});\n  }\n\n  /* function gameButtonClick (id) {\n    var message = AppMessagesManager.getMessage(id)\n    var peerId = AppMessagesManager.getMessagePeer(message)\n\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\n      peer: AppPeersManager.getInputPeerByID(peerId),\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\n      if (typeof callbackAnswer.message === 'string' &&\n      callbackAnswer.message.length) {\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\n      }\n      else if (typeof callbackAnswer.url === 'string') {\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\n      }\n    })\n  } */\n\n  public sendInlineResult(\n    peerId: PeerId,\n    botId: BotId,\n    queryAndResultIds: string,\n    options: Parameters<AppMessagesManager['sendOther']>[2] = {}\n  ) {\n    const inlineResult = this.inlineResults[queryAndResultIds];\n    if(!inlineResult) {\n      return;\n    }\n\n    this.pushPopularBot(botId);\n    const splitted = queryAndResultIds.split('_');\n    const queryId = splitted.shift();\n    const resultId = splitted.join('_');\n    options.viaBotId = botId;\n    options.queryId = queryId;\n    options.resultId = resultId;\n    if(inlineResult.send_message.reply_markup) {\n      options.replyMarkup = inlineResult.send_message.reply_markup;\n    }\n\n    if(inlineResult.send_message._ === 'botInlineMessageText') {\n      this.appMessagesManager.sendText(peerId, inlineResult.send_message.message, {\n        ...options,\n        entities: inlineResult.send_message.entities\n      });\n    } else {\n      let caption = '';\n      let inputMedia: Parameters<AppMessagesManager['sendOther']>[1], messageMedia: MessageMedia;\n      const sendMessage = inlineResult.send_message;\n      switch(sendMessage._) {\n        case 'botInlineMessageMediaAuto': {\n          caption = sendMessage.message;\n\n          if(inlineResult._ === 'botInlineMediaResult') {\n            const {document, photo} = inlineResult;\n            if(document) {\n              inputMedia = getDocumentMediaInput(document as MyDocument);\n            } else {\n              inputMedia = getPhotoMediaInput(photo as MyPhoto);\n            }\n          } else {\n            const webDocument = inlineResult.content || inlineResult.thumb;\n\n            if(webDocument) {\n              if(inlineResult.type === 'photo') {\n                inputMedia = {\n                  _: 'inputMediaPhotoExternal',\n                  pFlags: {},\n                  url: webDocument.url\n                };\n              } else {\n                inputMedia = {\n                  _: 'inputMediaDocumentExternal',\n                  pFlags: {},\n                  url: webDocument.url\n                };\n              }\n\n              options.webDocument = webDocument;\n            }\n          }\n\n          break;\n        }\n\n        case 'botInlineMessageMediaGeo': {\n          inputMedia = {\n            _: 'inputMediaGeoPoint',\n            geo_point: this.getGeoInput(sendMessage.geo)\n          };\n\n          options.geoPoint = sendMessage.geo;\n\n          break;\n        }\n\n        case 'botInlineMessageMediaVenue': {\n          inputMedia = {\n            _: 'inputMediaVenue',\n            geo_point: this.getGeoInput(sendMessage.geo),\n            title: sendMessage.title,\n            address: sendMessage.address,\n            provider: sendMessage.provider,\n            venue_id: sendMessage.venue_id,\n            venue_type: sendMessage.venue_type\n          };\n\n          options.geoPoint = sendMessage.geo;\n\n          break;\n        }\n\n        case 'botInlineMessageMediaContact': {\n          inputMedia = {\n            _: 'inputMediaContact',\n            phone_number: sendMessage.phone_number,\n            first_name: sendMessage.first_name,\n            last_name: sendMessage.last_name,\n            vcard: sendMessage.vcard\n          };\n\n          break;\n        }\n\n        case 'botInlineMessageMediaInvoice': {\n          // const photo = sendMessage.photo;\n          // inputMedia = {\n          //   _: 'inputMediaInvoice',\n          //   description: sendMessage.description,\n          //   title: sendMessage.title,\n          //   photo: photo && {\n          //     _: 'inputWebDocument',\n          //     attributes: photo.attributes,\n          //     mime_type: photo.mime_type,\n          //     size: photo.size,\n          //     url: photo.url\n          //   },\n          //   invoice: undefined,\n          //   payload: undefined,\n          //   provider: undefined,\n          //   provider_data: undefined,\n          //   start_param: undefined\n          // };\n\n          messageMedia = {\n            _: 'messageMediaInvoice',\n            title: sendMessage.title,\n            description: sendMessage.description,\n            photo: sendMessage.photo,\n            currency: sendMessage.currency,\n            total_amount: sendMessage.total_amount,\n            pFlags: {\n              shipping_address_requested: sendMessage.pFlags.shipping_address_requested,\n              test: sendMessage.pFlags.test\n            },\n            start_param: undefined\n          };\n\n          break;\n        }\n      }\n\n      if(!inputMedia && messageMedia) {\n        inputMedia = {\n          _: 'messageMediaPending',\n          messageMedia\n        };\n      }\n\n      this.appMessagesManager.sendOther(peerId, inputMedia, options);\n    }\n  }\n\n  /* function checkGeoLocationAccess (botID) {\n    var key = 'bot_access_geo' + botID\n    return Storage.get(key).then(function (geoAccess) {\n      if (geoAccess && geoAccess.granted) {\n        return true\n      }\n      return ErrorService.confirm({\n        type: 'BOT_ACCESS_GEO_INLINE'\n      }).then(function () {\n        var setHash = {}\n        setHash[key] = {granted: true, time: tsNow()}\n        Storage.set(setHash)\n        return true\n      }, function () {\n        var setHash = {}\n        setHash[key] = {denied: true, time: tsNow()}\n        Storage.set(setHash)\n        return $q.reject()\n      })\n    })\n  } */\n}\n","import {MESSAGE_ID_OFFSET} from '../../../mtproto/mtproto_config';\n\nexport default function isLegacyMessageId(messageId: number) {\n  return typeof(messageId) === 'number' && messageId < MESSAGE_ID_OFFSET;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MESSAGE_ID_OFFSET} from '../mtproto/mtproto_config';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport isLegacyMessageId from './utils/messageId/isLegacyMessageId';\n\nexport class AppMessagesIdsManager {\n  // private channelLocals: {[channelId: ChatId]: number} = {};\n  // private channelsByLocals: {[local: number]: ChatId} = {};\n  // private channelCurLocal = 0;\n\n  public generateTempMessageId(messageId: number, channelId: ChatId) {\n    return +(this.generateMessageId(messageId, channelId) + 0.0001).toFixed(4);\n  }\n\n  public generateMessageId(messageId: number, channelId: ChatId) {\n    if(\n      !channelId ||\n      !Number.isInteger(messageId) ||\n      messageId <= 0\n    ) {\n      return messageId;\n    }\n\n    messageId = getServerMessageId(messageId);\n    // let localStart = this.channelLocals[channelId];\n    const localStart = MESSAGE_ID_OFFSET;\n    // if(!localStart) {\n    //   localStart = ++this.channelCurLocal * MESSAGE_ID_OFFSET;\n    //   this.channelsByLocals[localStart] = channelId;\n    //   this.channelLocals[channelId] = localStart;\n    // }\n\n    return localStart + messageId;\n  }\n\n  public incrementMessageId(messageId: number, increment: number) {\n    return this.generateMessageId(getServerMessageId(messageId) + increment, isLegacyMessageId(messageId) ? 1 : 0);\n  }\n\n  public getMessageIdInfo(mid: number, channelId?: ChatId) {\n    const messageId = getServerMessageId(mid);\n    return {messageId, channelId: mid === messageId ? undefined : channelId};\n    // if(mid === messageId) {\n    //   return {messageId, channelId: undefined as number};\n    // }\n\n    // const channelId = this.channelsByLocals[mid - messageId];\n    // return {messageId, channelId};\n  }\n\n  public splitMessageIdsByChannels(mids: number[], _channelId?: ChatId) {\n    const out: Array<[ChatId, {mids: number[], messageIds: number[]}]> = [];\n    let prevItem: typeof out[0];\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const {messageId, channelId} = this.getMessageIdInfo(mid, _channelId);\n      if(!prevItem || prevItem[0] !== channelId) {\n        prevItem = [channelId, {mids: [], messageIds: []}];\n        out.push(prevItem);\n      }\n\n      prevItem[1].mids.push(mid);\n      prevItem[1].messageIds.push(messageId);\n    }\n\n    return out;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport indexOfAndSplice from '../helpers/array/indexOfAndSplice';\nimport {Middleware} from '../helpers/middleware';\nimport throttle from '../helpers/schedulers/throttle';\nimport {logger, LogTypes} from '../lib/logger';\n\nconst PARALLEL_LIMIT = 8;\nconst IGNORE_ERRORS: Set<ErrorType> = new Set(['NO_ENTRY_FOUND', 'STORAGE_OFFLINE', 'MIDDLEWARE', 'NO_AUTO_DOWNLOAD']);\n\nexport type LazyLoadElementBase = {\n  load: () => Promise<any>,\n  middleware?: Middleware\n};\n\nexport default class LazyLoadQueueBase {\n  public queueId = 0;\n  protected queue: Array<LazyLoadElementBase> = [];\n  protected inProcess: Set<LazyLoadElementBase> = new Set();\n\n  protected lockPromise: Promise<void> = null;\n  protected unlockResolve: () => void = null;\n\n  protected log = logger('LL', LogTypes.Error);\n  protected processQueue: () => void;\n\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\n    this.processQueue = throttle(() => this._processQueue(), 8, false);\n  }\n\n  public clear() {\n    this.inProcess.clear(); // ацтеки забьются, будет плохо\n\n    this.queue.length = 0;\n    // unreachable code\n    /* for(let item of this.inProcess) {\n      this.lazyLoadMedia.push(item);\n    } */\n  }\n\n  public lock() {\n    if(this.lockPromise) return;\n\n    // const perf = performance.now();\n    this.lockPromise = new Promise((resolve, reject) => {\n      this.unlockResolve = resolve;\n    });\n\n    /* if(DEBUG) {\n      this.lockPromise.then(() => {\n        this.log('was locked for:', performance.now() - perf);\n      });\n    } */\n  }\n\n  public unlock() {\n    if(!this.unlockResolve) return;\n\n    this.unlockResolve();\n    this.unlockResolve = this.lockPromise = null;\n\n    this.processQueue();\n  }\n\n  protected async processItem(item: LazyLoadElementBase) {\n    if(this.lockPromise) {\n      return;\n    }\n\n    this.inProcess.add(item);\n\n    /* if(DEBUG) {\n      this.log('will load media', this.lockPromise, item);\n    } */\n\n    try {\n      // await new Promise((resolve) => setTimeout(resolve, 2e3));\n      // await new Promise((resolve, reject) => window.requestAnimationFrame(() => window.requestAnimationFrame(resolve)));\n      // await item.load(item.div);\n      await this.loadItem(item);\n    } catch(err) {\n      if(!IGNORE_ERRORS.has((err as ApiError)?.type)) {\n        this.log.error('loadMediaQueue error:', err/* , item */);\n      }\n    }\n\n    this.inProcess.delete(item);\n\n    /* if(DEBUG) {\n      this.log('loaded media', item);\n    } */\n\n    this.processQueue();\n  }\n\n  protected loadItem(item: LazyLoadElementBase) {\n    return item.load();\n  }\n\n  protected getItem() {\n    return this.queue.shift();\n  }\n\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElementBase) {\n    this.queue[method](el);\n    this.processQueue();\n  }\n\n  protected _processQueue(item?: LazyLoadElementBase) {\n    if(!this.queue.length || this.lockPromise || (this.parallelLimit > 0 && this.inProcess.size >= this.parallelLimit)) return;\n\n    // console.log('_processQueue start');\n    // let added = 0;\n    do {\n      if(item) {\n        indexOfAndSplice(this.queue, item);\n      } else {\n        item = this.getItem();\n      }\n\n      if(item) {\n        this.processItem(item);\n      } else {\n        break;\n      }\n\n      item = null;\n      // ++added;\n    } while(this.inProcess.size < this.parallelLimit && this.queue.length);\n    // console.log('_processQueue end, added', added, this.queue.length);\n  }\n\n  public push(el: LazyLoadElementBase) {\n    this.addElement('push', el);\n  }\n\n  public unshift(el: LazyLoadElementBase) {\n    this.addElement('unshift', el);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport indexOfAndSplice from './array/indexOfAndSplice';\nimport makeError from './makeError';\n\nexport type Middleware = {\n  (): boolean;\n  create(): MiddlewareHelper;\n  onClean: (callback: VoidFunction) => void;\n  onDestroy: (callback: VoidFunction) => void;\n};\n\nconst createDetails = (): {\n  cleaned?: boolean,\n  inner: MiddlewareHelper[],\n  onCleanCallbacks: VoidFunction[],\n  middleware?: Middleware\n} => ({\n  cleaned: false,\n  inner: [],\n  onCleanCallbacks: []\n});\n\nconst MIDDLEWARE_ERROR = makeError('MIDDLEWARE');\n\n// * onClean == cancel promises, etc\n// * onDestroy == destructor\nexport class MiddlewareHelper {\n  private details = createDetails();\n  private onDestroyCallbacks: VoidFunction[] = [];\n  private parent: MiddlewareHelper;\n  private destroyed: boolean;\n\n  public clean() {\n    const details = this.details;\n    details.cleaned = true;\n    details.inner.splice(0, details.inner.length).forEach((helper) => helper.destroy());\n    details.onCleanCallbacks.splice(0, details.onCleanCallbacks.length).forEach((callback) => callback());\n    details.middleware = undefined;\n    this.details = createDetails();\n  }\n\n  public destroy() {\n    this.destroyed = true;\n    this.clean();\n    this.onDestroyCallbacks.splice(0, this.onDestroyCallbacks.length).forEach((callback) => callback());\n\n    if(this.parent) {\n      indexOfAndSplice(this.parent.details.inner, this);\n      this.parent = undefined;\n    }\n  }\n\n  private createMiddlewareForDetails(details: ReturnType<typeof createDetails>, additionalCallback?: () => boolean) {\n    const middleware: Middleware = () => {\n      return !details.cleaned && (!additionalCallback || additionalCallback());\n    };\n\n    middleware.create = () => {\n      if(!middleware()) throw MIDDLEWARE_ERROR;\n      const helper = getMiddleware();\n      helper.parent = this;\n      details.inner.push(helper);\n      return helper;\n    };\n\n    middleware.onClean = (callback) => {\n      if(!middleware()) return callback();\n      details.onCleanCallbacks.push(callback);\n    };\n\n    middleware.onDestroy = this.onDestroy;\n\n    return middleware;\n  }\n\n  public get(additionalCallback?: () => boolean) {\n    const details = this.details;\n    if(details.cleaned) {\n      return this.createMiddlewareForDetails(details);\n    }\n\n    if(additionalCallback) {\n      return this.createMiddlewareForDetails(details, additionalCallback);\n    }\n\n    return details.middleware ??= this.createMiddlewareForDetails(details);\n  }\n\n  public onDestroy = (callback: VoidFunction) => {\n    if(this.destroyed) return callback();\n    this.onDestroyCallbacks.push(callback);\n  };\n}\n\n// * will change .cleaned and new instance will be created\nexport function getMiddleware() {\n  return new MiddlewareHelper();\n}\n","export default function getObjectKeysAndSort(object: {[key: string]: any} | Map<number, any>, sort: 'asc' | 'desc' = 'asc') {\n  if(!object) return [];\n  const ids = object instanceof Map ? [...object.keys()] : Object.keys(object).map((i) => +i);\n  if(sort === 'asc') return ids.sort((a, b) => a - b);\n  else return ids.sort((a, b) => b - a);\n}\n","export default function splitStringByLength(str: string, maxLength: number) {\n  if(str.length < maxLength) return [str];\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\n  const delimiter = ' ';// '\\n';\n  const out: string[] = [];\n\n  const cut = (end?: number) => {\n    let part = str.slice(lastSliceStartIndex, end);\n    const _arrayIndex = arrayIndex++;\n    if(part.length > maxLength) {\n      const overflowPart = part.slice(maxLength);\n      const splitted = splitStringByLength(overflowPart, maxLength);\n      splitted.forEach((part) => {\n        out[arrayIndex++] = part;\n      });\n\n      part = part.slice(0, maxLength);\n    }\n\n    lastSliceStartIndex = end;\n    length = 0;\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\n  };\n\n  let lastIndex = 0;\n  do {\n    let index = str.indexOf(delimiter, lastIndex);\n    if(index === -1) {\n      if(lastIndex !== (str.length - 1)) {\n        cut();\n      }\n\n      break;\n    }\n\n    index += delimiter.length;\n\n    const partLength = index - lastIndex;\n    if((length + partLength) > maxLength) {\n      cut(length);\n    }\n\n    lastIndex = index;\n    length += partLength;\n  } while(true);\n\n  return out;\n}\n","// * Jolly Cobra's schedulers\n\nimport ctx from '../../environment/ctx';\nimport {AnyFunction, Awaited} from '../../types';\nimport noop from '../noop';\n\nexport type DebounceReturnType<F extends AnyFunction> = {\n  (...args: Parameters<F>): Promise<Awaited<ReturnType<F>>>;\n  clearTimeout(): void;\n  isDebounced(): boolean;\n};\n\nexport default function debounce<F extends AnyFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true,\n  shouldRunLast = true\n): DebounceReturnType<F> {\n  let waitingTimeout: number;\n  let waitingPromise: Promise<Awaited<ReturnType<F>>>, resolve: (result: any) => void, reject: () => void;\n  let hadNewCall = false;\n\n  const invoke = (args: Parameters<F>) => {\n    const _resolve = resolve, _reject = reject;\n    try {\n      const result = fn.apply(null, args);\n      _resolve(result);\n    } catch(err) {\n      console.error('debounce error', err);\n      // @ts-ignore\n      _reject(err);\n    }\n  };\n\n  const debounce = (...args: Parameters<F>) => {\n    if(!waitingPromise) waitingPromise = new Promise((_resolve, _reject) => (resolve = _resolve, reject = _reject));\n\n    if(waitingTimeout) {\n      clearTimeout(waitingTimeout);\n      hadNewCall = true;\n      reject();\n      waitingPromise = new Promise((_resolve, _reject) => (resolve = _resolve, reject = _reject));\n    } else if(shouldRunFirst) {\n      invoke(args);\n      hadNewCall = false;\n    }\n\n    const _waitingTimeout = ctx.setTimeout(() => {\n      // will run if should run last or first but with new call\n      if(shouldRunLast && (!shouldRunFirst || hadNewCall)) {\n        invoke(args);\n      }\n\n      // if debounce was called during invoking\n      if(waitingTimeout === _waitingTimeout) {\n        waitingTimeout = waitingPromise = resolve = reject = undefined;\n        hadNewCall = false;\n      }\n    }, ms);\n\n    waitingTimeout = _waitingTimeout;\n    waitingPromise.catch(noop);\n    return waitingPromise;\n  };\n\n  debounce.clearTimeout = () => {\n    if(waitingTimeout) {\n      ctx.clearTimeout(waitingTimeout);\n      reject();\n      waitingTimeout = waitingPromise = resolve = reject = undefined;\n      hadNewCall = false;\n    }\n  };\n\n  debounce.isDebounced = () => !!waitingTimeout;\n\n  return debounce;\n}\n","import {URL_REG_EXP} from '.';\n\nexport default function matchUrl(text: string) {\n  return !text ? null : text.match(URL_REG_EXP);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Message, MessageMedia, MessageEntity, MessageAction} from '../../../../layer';\nimport matchUrl from '../../../richTextProcessor/matchUrl';\nimport type {MyDocument} from '../../appDocsManager';\nimport type {MyInputMessagesFilter, MyMessage} from '../../appMessagesManager';\n\nexport default function filterMessagesByInputFilter(\n  inputFilter: MyInputMessagesFilter,\n  history: Array<Message.message | Message.messageService>,\n  limit: number\n) {\n  if(inputFilter === 'inputMessagesFilterEmpty') {\n    return history;\n  }\n\n  const foundMsgs: MyMessage[] = [];\n  if(!history.length) {\n    return foundMsgs;\n  }\n\n  let filtering = true;\n  const neededContents: Partial<{\n    [messageMediaType in MessageMedia['_']]: boolean\n  }> & Partial<{\n    avatar: boolean,\n    url: boolean\n  }> = {},\n    neededDocTypes: MyDocument['type'][] = [],\n    excludeDocTypes: MyDocument['type'][] = []/* ,\n    neededFlags: string[] = [] */;\n\n  switch(inputFilter) {\n    case 'inputMessagesFilterPhotos':\n      neededContents['messageMediaPhoto'] = true;\n      break;\n\n    case 'inputMessagesFilterPhotoVideo':\n      neededContents['messageMediaPhoto'] = true;\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('video');\n      break;\n\n    case 'inputMessagesFilterVideo':\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('video');\n      break;\n\n    case 'inputMessagesFilterDocument':\n      neededContents['messageMediaDocument'] = true;\n      // excludeDocTypes.push('video');\n      neededDocTypes.push(undefined, 'photo', 'pdf');\n      break;\n\n    case 'inputMessagesFilterVoice':\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('voice');\n      break;\n\n    case 'inputMessagesFilterRoundVoice':\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('round', 'voice');\n      break;\n\n    case 'inputMessagesFilterRoundVideo':\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('round');\n      break;\n\n    case 'inputMessagesFilterMusic':\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('audio');\n      break;\n\n    case 'inputMessagesFilterUrl':\n      neededContents['url'] = true;\n      break;\n\n    case 'inputMessagesFilterChatPhotos':\n      neededContents['avatar'] = true;\n      break;\n\n      /* case 'inputMessagesFilterPinned':\n      neededFlags.push('pinned');\n      break; */\n\n      /* case 'inputMessagesFilterMyMentions':\n      neededContents['mentioned'] = true;\n      break; */\n\n    default:\n      filtering = false;\n      break;\n      /* return Promise.resolve({\n        count: 0,\n        next_rate: 0,\n        history: [] as number[]\n      }); */\n  }\n\n  if(!filtering) {\n    return foundMsgs;\n  }\n\n  for(let i = 0, length = history.length; i < length; ++i) {\n    const message: Message.message | Message.messageService = history[i];\n    if(!message) continue;\n\n    // || (neededContents['mentioned'] && message.totalEntities.find((e: any) => e._ === 'messageEntityMention'));\n\n    let found = false;\n    if(message._ === 'message') {\n      if(message.media && neededContents[message.media._]/*  && !message.fwd_from */) {\n        const doc = (message.media as MessageMedia.messageMediaDocument).document as MyDocument;\n        if(doc &&\n          (\n            (neededDocTypes.length && !neededDocTypes.includes(doc.type)) ||\n            excludeDocTypes.includes(doc.type)\n          )\n        ) {\n          continue;\n        }\n\n        found = true;\n      } else if(neededContents['url'] && message.message) {\n        const goodEntities = ['messageEntityTextUrl', 'messageEntityUrl'];\n        if((message.totalEntities as MessageEntity[]).find((e) => goodEntities.includes(e._)) || matchUrl(message.message)) {\n          found = true;\n        }\n      }\n    } else if(neededContents['avatar'] &&\n      message.action &&\n      ([\n        'messageActionChannelEditPhoto' as const,\n        'messageActionChatEditPhoto' as const,\n        'messageActionChannelEditVideo' as const,\n        'messageActionChatEditVideo' as const\n      ] as MessageAction['_'][]).includes(message.action._)) {\n      found = true;\n    }/*  else if(neededFlags.find((flag) => message.pFlags[flag])) {\n      found = true;\n    } */\n\n    if(found) {\n      foundMsgs.push(message);\n      if(foundMsgs.length >= limit) {\n        break;\n      }\n    }\n  }\n\n  return foundMsgs;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport tabId from '../config/tabId';\n\nlet uploadId = 0;\nexport default function getFileNameForUpload(file: File | Blob) {\n  let fileName: string;\n  const mimeType = file?.type;\n  if(mimeType) { // the same like apiFileName in appMessagesManager for upload!\n    const ext = `${tabId}_${uploadId++}.${mimeType.split('/')[1]}`;\n\n    if(['image/jpeg', 'image/png', 'image/bmp'].indexOf(mimeType) >= 0) {\n      fileName = 'photo' + ext;\n    } else if(mimeType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(mimeType) >= 0) {\n      fileName = 'audio' + ext;\n    } else if(mimeType.indexOf('video/') === 0) {\n      fileName = 'video' + ext;\n    } else {\n      fileName = 'document' + ext;\n    }\n  } else {\n    fileName = `upload-${tabId}_${uploadId++}`;\n  }\n\n  return fileName;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {TabState} from '../mtproto/mtprotoworker';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\ntype Tab = {\n  source: MessageEventSource,\n  state: TabState\n};\n\nexport class AppTabsManager {\n  private tabs: Map<Tab['source'], Tab>;\n\n  constructor() {\n    this.tabs = new Map();\n  }\n\n  public start() {\n    const port = MTProtoMessagePort.getInstance<false>();\n\n    port.addEventListener('tabState', (state, source) => {\n      const tab = this.tabs.get(source);\n      tab.state = state;\n    });\n  }\n\n  public getTabs() {\n    return [...this.tabs.values()].filter((tab) => !!tab.state);\n  }\n\n  public addTab(source: MessageEventSource) {\n    const tab: Tab = {\n      source,\n      state: undefined\n    };\n\n    this.tabs.set(source, tab);\n  }\n\n  public deleteTab(source: MessageEventSource) {\n    this.tabs.delete(source);\n  }\n}\n\nconst appTabsManager = new AppTabsManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appTabsManager = appTabsManager);\nexport default appTabsManager;\n","import assumeType from '../../../../helpers/assumeType';\nimport {Message} from '../../../../layer';\n\nexport default function getAlbumText(messages: Message.message[]) {\n  let foundMessages = 0, message: Message.message;\n  for(const m of messages) {\n    assumeType<Message.message>(m);\n    if(m.message) {\n      if(++foundMessages > 1) break;\n      message = m;\n    }\n  }\n\n  if(foundMessages > 1) {\n    message = undefined;\n  }\n\n  return message;\n}\n","import {MyDocument} from '../../appDocsManager';\nimport {VideoSize} from '../../../../layer';\n\nexport default function getStickerEffectThumb(doc: MyDocument) {\n  return doc.video_thumbs?.[0] as Extract<VideoSize, VideoSize.videoSize>;\n}\n","import {InputDocument} from '../../../../layer';\nimport type {MyDocument} from '../../appDocsManager';\n\nexport default function getDocumentInput(doc: MyDocument): InputDocument {\n  return {\n    _: 'inputDocument',\n    id: doc.id,\n    access_hash: doc.access_hash,\n    file_reference: doc.file_reference\n  };\n}\n","import {AvailableReaction, Reaction} from '../../../../layer';\n\nexport default function availableReactionToReaction(availableReaction: AvailableReaction): Reaction.reactionEmoji {\n  return {\n    _: 'reactionEmoji',\n    emoticon: availableReaction.reaction\n  };\n}\n","import deepEqual from '../../../../helpers/object/deepEqual';\nimport {AvailableReaction, Reaction} from '../../../../layer';\nimport availableReactionToReaction from './availableReactionToReaction';\n\nexport default function reactionsEqual(r1: Reaction | AvailableReaction, r2: Reaction | AvailableReaction) {\n  if(typeof(r1) !== typeof(r2)) {\n    return false;\n  }\n\n  [r1, r2] = [r1, r2].map((r) => {\n    return r._ === 'availableReaction' ? availableReactionToReaction(r) : r;\n  });\n\n  return deepEqual(r1, r2);\n}\n","export default function setBooleanFlag<T extends any>(obj: T, key: keyof T, value: boolean) {\n  // @ts-ignore\n  if(value) obj[key] = true;\n  else delete obj[key];\n}\n","import {Message} from '../../../../layer';\nimport {GENERAL_TOPIC_ID} from '../../../mtproto/mtproto_config';\n\nexport default function getMessageThreadId(message: Message.message | Message.messageService, isForum?: boolean) {\n  let threadId: number;\n  const replyTo = message.reply_to;\n  if(replyTo?._ === 'messageReplyHeader' && (!isForum || replyTo.pFlags.forum_topic)) {\n    threadId = replyTo.reply_to_top_id || replyTo.reply_to_msg_id;\n  } else if(isForum) {\n    if(message._ === 'messageService' && message.action?._ === 'messageActionTopicCreate') {\n      threadId = message.mid;\n    } else {\n      threadId = GENERAL_TOPIC_ID;\n    }\n  }\n\n  return threadId;\n}\n","import {InputReplyTo} from '../../../../layer';\nimport getServerMessageId from '../messageId/getServerMessageId';\n\nexport default function getInputReplyTo({\n  replyToMsgId,\n  threadId\n}: {\n  replyToMsgId?: number,\n  threadId?: number\n}): InputReplyTo {\n  return replyToMsgId || threadId ? {\n    _: 'inputReplyToMessage',\n    reply_to_msg_id: replyToMsgId ? getServerMessageId(replyToMsgId) : undefined,\n    top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n  } : undefined\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n// From https://github.com/stephenmathieson/node-tlds/blob/master/index.js\nconst TLD = ['abogado', 'ac', 'academy', 'accountants', 'active', 'actor', 'ad', 'adult', 'ae', 'aero', 'af', 'ag', 'agency', 'ai', 'airforce', 'al', 'allfinanz', 'alsace', 'am', 'amsterdam', 'an', 'android', 'ao', 'apartments', 'aq', 'aquarelle', 'ar', 'archi', 'army', 'arpa', 'as', 'asia', 'associates', 'at', 'attorney', 'au', 'auction', 'audio', 'autos', 'aw', 'ax', 'axa', 'az', 'ba', 'band', 'bank', 'bar', 'barclaycard', 'barclays', 'bargains', 'bayern', 'bb', 'bd', 'be', 'beer', 'berlin', 'best', 'bf', 'bg', 'bh', 'bi', 'bid', 'bike', 'bingo', 'bio', 'biz', 'bj', 'black', 'blackfriday', 'bloomberg', 'blue', 'bm', 'bmw', 'bn', 'bnpparibas', 'bo', 'boo', 'boutique', 'br', 'brussels', 'bs', 'bt', 'budapest', 'build', 'builders', 'business', 'buzz', 'bv', 'bw', 'by', 'bz', 'bzh', 'ca', 'cab', 'cal', 'camera', 'camp', 'cancerresearch', 'canon', 'capetown', 'capital', 'caravan', 'cards', 'care', 'career', 'careers', 'cartier', 'casa', 'cash', 'cat', 'catering', 'cc', 'cd', 'center', 'ceo', 'cern', 'cf', 'cg', 'ch', 'channel', 'chat', 'cheap', 'christmas', 'chrome', 'church', 'ci', 'citic', 'city', 'ck', 'cl', 'claims', 'cleaning', 'click', 'clinic', 'clothing', 'club', 'cm', 'cn', 'co', 'coach', 'codes', 'coffee', 'college', 'cologne', 'com', 'community', 'company', 'computer', 'condos', 'construction', 'consulting', 'contractors', 'cooking', 'cool', 'coop', 'country', 'cr', 'credit', 'creditcard', 'cricket', 'crs', 'cruises', 'cu', 'cuisinella', 'cv', 'cw', 'cx', 'cy', 'cymru', 'cz', 'dabur', 'dad', 'dance', 'dating', 'day', 'dclk', 'de', 'deals', 'degree', 'delivery', 'democrat', 'dental', 'dentist', 'desi', 'design', 'dev', 'diamonds', 'diet', 'digital', 'direct', 'directory', 'discount', 'dj', 'dk', 'dm', 'dnp', 'do', 'docs', 'domains', 'doosan', 'durban', 'dvag', 'dz', 'eat', 'ec', 'edu', 'education', 'ee', 'eg', 'email', 'emerck', 'energy', 'engineer', 'engineering', 'enterprises', 'equipment', 'er', 'es', 'esq', 'estate', 'et', 'eu', 'eurovision', 'eus', 'events', 'everbank', 'exchange', 'expert', 'exposed', 'fail', 'farm', 'fashion', 'feedback', 'fi', 'finance', 'financial', 'firmdale', 'fish', 'fishing', 'fit', 'fitness', 'fj', 'fk', 'flights', 'florist', 'flowers', 'flsmidth', 'fly', 'fm', 'fo', 'foo', 'forsale', 'foundation', 'fr', 'frl', 'frogans', 'fund', 'furniture', 'futbol', 'ga', 'gal', 'gallery', 'garden', 'gb', 'gbiz', 'gd', 'ge', 'gent', 'gf', 'gg', 'ggee', 'gh', 'gi', 'gift', 'gifts', 'gives', 'gl', 'glass', 'gle', 'global', 'globo', 'gm', 'gmail', 'gmo', 'gmx', 'gn', 'goog', 'google', 'gop', 'gov', 'gp', 'gq', 'gr', 'graphics', 'gratis', 'green', 'gripe', 'gs', 'gt', 'gu', 'guide', 'guitars', 'guru', 'gw', 'gy', 'hamburg', 'hangout', 'haus', 'healthcare', 'help', 'here', 'hermes', 'hiphop', 'hiv', 'hk', 'hm', 'hn', 'holdings', 'holiday', 'homes', 'horse', 'host', 'hosting', 'house', 'how', 'hr', 'ht', 'hu', 'ibm', 'id', 'ie', 'ifm', 'il', 'im', 'immo', 'immobilien', 'in', 'industries', 'info', 'ing', 'ink', 'institute', 'insure', 'int', 'international', 'investments', 'io', 'iq', 'ir', 'irish', 'is', 'it', 'iwc', 'jcb', 'je', 'jetzt', 'jm', 'jo', 'jobs', 'joburg', 'jp', 'juegos', 'kaufen', 'kddi', 'ke', 'kg', 'kh', 'ki', 'kim', 'kitchen', 'kiwi', 'km', 'kn', 'koeln', 'kp', 'kr', 'krd', 'kred', 'kw', 'ky', 'kyoto', 'kz', 'la', 'lacaixa', 'land', 'lat', 'latrobe', 'lawyer', 'lb', 'lc', 'lds', 'lease', 'legal', 'lgbt', 'li', 'lidl', 'life', 'lighting', 'limited', 'limo', 'link', 'lk', 'loans', 'london', 'lotte', 'lotto', 'lr', 'ls', 'lt', 'ltda', 'lu', 'luxe', 'luxury', 'lv', 'ly', 'ma', 'madrid', 'maison', 'management', 'mango', 'market', 'marketing', 'marriott', 'mc', 'md', 'me', 'media', 'meet', 'melbourne', 'meme', 'memorial', 'menu', 'mg', 'mh', 'miami', 'mil', 'mini', 'mk', 'ml', 'mm', 'mn', 'mo', 'mobi', 'moda', 'moe', 'monash', 'money', 'mormon', 'mortgage', 'moscow', 'motorcycles', 'mov', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'museum', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nagoya', 'name', 'navy', 'nc', 'ne', 'net', 'network', 'neustar', 'new', 'nexus', 'nf', 'ng', 'ngo', 'nhk', 'ni', 'nico', 'ninja', 'nl', 'no', 'np', 'nr', 'nra', 'nrw', 'ntt', 'nu', 'nyc', 'nz', 'okinawa', 'om', 'one', 'ong', 'onl', 'ooo', 'org', 'organic', 'osaka', 'otsuka', 'ovh', 'pa', 'paris', 'partners', 'parts', 'party', 'pe', 'pf', 'pg', 'ph', 'pharmacy', 'photo', 'photography', 'photos', 'physio', 'pics', 'pictures', 'pink', 'pizza', 'pk', 'pl', 'place', 'plumbing', 'pm', 'pn', 'pohl', 'poker', 'porn', 'post', 'pr', 'praxi', 'press', 'pro', 'prod', 'productions', 'prof', 'properties', 'property', 'ps', 'pt', 'pub', 'pw', 'py', 'qa', 'qpon', 'quebec', 're', 'realtor', 'recipes', 'red', 'rehab', 'reise', 'reisen', 'reit', 'ren', 'rentals', 'repair', 'report', 'republican', 'rest', 'restaurant', 'reviews', 'rich', 'rio', 'rip', 'ro', 'rocks', 'rodeo', 'rs', 'rsvp', 'ru', 'ruhr', 'rw', 'ryukyu', 'sa', 'saarland', 'sale', 'samsung', 'sarl', 'saxo', 'sb', 'sc', 'sca', 'scb', 'schmidt', 'schule', 'schwarz', 'science', 'scot', 'sd', 'se', 'services', 'sew', 'sexy', 'sg', 'sh', 'shiksha', 'shoes', 'shriram', 'si', 'singles', 'sj', 'sk', 'sky', 'sl', 'sm', 'sn', 'so', 'social', 'software', 'sohu', 'solar', 'solutions', 'soy', 'space', 'spiegel', 'sr', 'st', 'style', 'su', 'supplies', 'supply', 'support', 'surf', 'surgery', 'suzuki', 'sv', 'sx', 'sy', 'sydney', 'systems', 'sz', 'taipei', 'tatar', 'tattoo', 'tax', 'tc', 'td', 'technology', 'tel', 'temasek', 'tennis', 'tf', 'tg', 'th', 'tienda', 'tips', 'tires', 'tirol', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'today', 'tokyo', 'tools', 'top', 'toshiba', 'town', 'toys', 'tp', 'tr', 'trade', 'training', 'travel', 'trust', 'tt', 'tui', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'university', 'uno', 'uol', 'us', 'uy', 'uz', 'va', 'vacations', 'vc', 've', 'vegas', 'ventures', 'versicherung', 'vet', 'vg', 'vi', 'viajes', 'video', 'villas', 'vision', 'vlaanderen', 'vn', 'vodka', 'vote', 'voting', 'voto', 'voyage', 'vu', 'wales', 'wang', 'watch', 'webcam', 'website', 'wed', 'wedding', 'wf', 'whoswho', 'wien', 'wiki', 'williamhill', 'wme', 'work', 'works', 'world', 'ws', 'wtc', 'wtf', '佛山', '集团', '在线', '한국', 'ভারত', '八卦', 'موقع', '公益', '公司', '移动', '我爱你', 'москва', 'қаз', 'онлайн', 'сайт', 'срб', '淡马锡', 'орг', '삼성', 'சிங்கப்பூர்', '商标', '商店', '商城', 'дети', 'мкд', '中文网', '中信', '中国', '中國', '谷歌', 'భారత్', 'ලංකා', 'ભારત', 'भारत', '网店', 'संगठन', '网络', 'укр', '香港', '台湾', '台灣', '手机', 'мон', 'الجزائر', 'عمان', 'ایران', 'امارات', 'بازار', 'الاردن', 'بھارت', 'المغرب', 'السعودية', 'مليسيا', 'شبكة', 'გე', '机构', '组织机构', 'ไทย', 'سورية', 'рус', 'рф', 'تونس', 'みんな', 'グーグル', '世界', 'ਭਾਰਤ', '网址', '游戏', 'vermögensberater', 'vermögensberatung', '企业', 'مصر', 'قطر', '广东', 'இலங்கை', 'இந்தியா', '新加坡', 'فلسطين', '政务', 'xxx', 'xyz', 'yachts', 'yandex', 'ye', 'yoga', 'yokohama', 'youtube', 'yt', 'za', 'zip', 'zm', 'zone', 'zuerich', 'zw'];\n\nexport default TLD;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nexport default function checkBrackets(url: string) {\n  var urlLength = url.length;\n  var urlOpenBrackets = url.split('(').length - 1;\n  var urlCloseBrackets = url.split(')').length - 1;\n  while(urlCloseBrackets > urlOpenBrackets &&\n    url.charAt(urlLength - 1) === ')') {\n    url = url.substr(0, urlLength - 1)\n    urlCloseBrackets--;\n    urlLength--;\n  }\n  if(urlOpenBrackets > urlCloseBrackets) {\n    url = url.replace(/\\)+$/, '');\n  }\n  return url;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {EMOJI_VERSION} from '../environment/emojiVersionsSupport';\n\nexport const EmojiVersions: {[version in EMOJI_VERSION]: {[emoji: string]: number}} = {'14':{'1f6dd':4867, '1f6de':4916, '1f6df':4923, '1f7f0':62832, '1f979':183, '1f9cc':1557, '1fa7b':61332, '1fa7c':61330, '1faa9':51093, '1faaa':61364, '1faab':61189, '1faac':51085, '1fab7':2651, '1fab8':2631, '1fab9':2672, '1faba':2673, '1fac3':1520, '1fac4':1521, '1fac5':1505, '1fad7':3793, '1fad8':3707, '1fad9':3804, '1fae0':111, '1fae1':136, '1fae2':132, '1fae3':133, '1fae4':174, '1fae5':142, '1fae6':1385, '1fae7':61353, '1faf0':1341, '1faf1':1332, '1faf2':1333, '1faf3':1334, '1faf4':1335, '1faf5':1351, '1faf6':1360, '1faf1-1f3fb-200d-1faf2-1f3fc':0, '1faf1-1f3fb-200d-1faf2-1f3fd':0, '1faf1-1f3fb-200d-1faf2-1f3fe':0, '1faf1-1f3fb-200d-1faf2-1f3ff':0, '1faf1-1f3fc-200d-1faf2-1f3fb':0, '1faf1-1f3fc-200d-1faf2-1f3fd':0, '1faf1-1f3fc-200d-1faf2-1f3fe':0, '1faf1-1f3fc-200d-1faf2-1f3ff':0, '1faf1-1f3fd-200d-1faf2-1f3fb':0, '1faf1-1f3fd-200d-1faf2-1f3fc':0, '1faf1-1f3fd-200d-1faf2-1f3fe':0, '1faf1-1f3fd-200d-1faf2-1f3ff':0, '1faf1-1f3fe-200d-1faf2-1f3fb':0, '1faf1-1f3fe-200d-1faf2-1f3fc':0, '1faf1-1f3fe-200d-1faf2-1f3fd':0, '1faf1-1f3fe-200d-1faf2-1f3ff':0, '1faf1-1f3ff-200d-1faf2-1f3fb':0, '1faf1-1f3ff-200d-1faf2-1f3fc':0, '1faf1-1f3ff-200d-1faf2-1f3fd':0, '1faf1-1f3ff-200d-1faf2-1f3fe':0, '1fac3-1f3fb':0, '1fac3-1f3fc':0, '1fac3-1f3fd':0, '1fac3-1f3fe':0, '1fac3-1f3ff':0, '1fac4-1f3fb':0, '1fac4-1f3fc':0, '1fac4-1f3fd':0, '1fac4-1f3fe':0, '1fac4-1f3ff':0, '1fac5-1f3fb':0, '1fac5-1f3fc':0, '1fac5-1f3fd':0, '1fac5-1f3fe':0, '1fac5-1f3ff':0, '1faf0-1f3fb':0, '1faf0-1f3fc':0, '1faf0-1f3fd':0, '1faf0-1f3fe':0, '1faf0-1f3ff':0, '1faf1-1f3fb':0, '1faf1-1f3fc':0, '1faf1-1f3fd':0, '1faf1-1f3fe':0, '1faf1-1f3ff':0, '1faf2-1f3fb':0, '1faf2-1f3fc':0, '1faf2-1f3fd':0, '1faf2-1f3fe':0, '1faf2-1f3ff':0, '1faf3-1f3fb':0, '1faf3-1f3fc':0, '1faf3-1f3fd':0, '1faf3-1f3fe':0, '1faf3-1f3ff':0, '1faf4-1f3fb':0, '1faf4-1f3fc':0, '1faf4-1f3fd':0, '1faf4-1f3fe':0, '1faf4-1f3ff':0, '1faf5-1f3fb':0, '1faf5-1f3fc':0, '1faf5-1f3fd':0, '1faf5-1f3fe':0, '1faf5-1f3ff':0, '1faf6-1f3fb':0, '1faf6-1f3fc':0, '1faf6-1f3fd':0, '1faf6-1f3fe':0, '1faf6-1f3ff':0}, '':{'2049':62835, '2122':62863, '2139':62888, '2194':62764, '2195':62763, '2196':62762, '2197':62756, '2198':62758, '2199':62760, '2328':61194, '2600':4990, '2601':4998, '2602':41013, '2603':41018, '2604':41020, '2611':62851, '2614':41014, '2615':3781, '2618':2667, '2620':1106, '2622':62753, '2623':62754, '2626':62783, '2638':62780, '2639':177, '2648':62788, '2649':62789, '2650':62796, '2651':62797, '2652':62798, '2653':62799, '2660':51095, '2663':51098, '2665':51096, '2666':51097, '2668':4865, '2692':61297, '2693':4922, '2694':61300, '2696':61311, '2697':61319, '2699':61309, '2702':61284, '2705':62850, '2708':4931, '2709':61245, '2712':61259, '2714':62852, '2716':62828, '2721':62779, '2728':51029, '2733':62858, '2734':62859, '2744':41017, '2747':62860, '2753':62836, '2754':62837, '2755':62838, '2757':62839, '2763':1137, '2764':1141, '2795':62829, '2796':62830, '2797':62831, '2934':62767, '2935':62768, '3030':62840, '3297':62912, '3299':62913, '0023-20e3':62864, '002a-20e3':62865, '0030-20e3':62866, '0031-20e3':62867, '0032-20e3':62868, '0033-20e3':62869, '0034-20e3':62870, '0035-20e3':62871, '0036-20e3':62872, '0037-20e3':62873, '0038-20e3':62874, '0039-20e3':62875, '00a9':62861, '00ae':62862, '1f004':51101, '1f0cf':51100, '1f170':62882, '1f171':62884, '1f17e':62893, '1f17f':62895, '1f18e':62883, '1f191':62885, '1f192':62886, '1f193':62887, '1f194':62889, '1f195':62891, '1f196':62892, '1f197':62894, '1f198':62896, '1f199':62897, '1f19a':62898, '1f1e6-1f1e8':71594, '1f1e6-1f1e9':71595, '1f1e6-1f1ea':71596, '1f1e6-1f1eb':71597, '1f1e6-1f1ec':71598, '1f1e6-1f1ee':71599, '1f1e6-1f1f1':71600, '1f1e6-1f1f2':71601, '1f1e6-1f1f4':71602, '1f1e6-1f1f6':71603, '1f1e6-1f1f7':71604, '1f1e6-1f1f8':71605, '1f1e6-1f1f9':71606, '1f1e6-1f1fa':71607, '1f1e6-1f1fc':71608, '1f1e6-1f1fd':71609, '1f1e6-1f1ff':71610, '1f1e7-1f1e6':71611, '1f1e7-1f1e7':71612, '1f1e7-1f1e9':71613, '1f1e7-1f1ea':71614, '1f1e7-1f1eb':71615, '1f1e7-1f1ec':71616, '1f1e7-1f1ed':71617, '1f1e7-1f1ee':71618, '1f1e7-1f1ef':71619, '1f1e7-1f1f1':71620, '1f1e7-1f1f2':71621, '1f1e7-1f1f3':71622, '1f1e7-1f1f4':71623, '1f1e7-1f1f6':71624, '1f1e7-1f1f7':71625, '1f1e7-1f1f8':71626, '1f1e7-1f1f9':71627, '1f1e7-1f1fb':71628, '1f1e7-1f1fc':71629, '1f1e7-1f1fe':71630, '1f1e7-1f1ff':71631, '1f1e8-1f1e6':71632, '1f1e8-1f1e8':71633, '1f1e8-1f1e9':71634, '1f1e8-1f1eb':71635, '1f1e8-1f1ec':71636, '1f1e8-1f1ed':71637, '1f1e8-1f1ee':71638, '1f1e8-1f1f0':71639, '1f1e8-1f1f1':71640, '1f1e8-1f1f2':71641, '1f1e8-1f1f3':71642, '1f1e8-1f1f4':71643, '1f1e8-1f1f5':71644, '1f1e8-1f1f7':71645, '1f1e8-1f1fa':71646, '1f1e8-1f1fb':71647, '1f1e8-1f1fc':71648, '1f1e8-1f1fd':71649, '1f1e8-1f1fe':71650, '1f1e8-1f1ff':71651, '1f1e9-1f1ea':71652, '1f1e9-1f1ec':71653, '1f1e9-1f1ef':71654, '1f1e9-1f1f0':71655, '1f1e9-1f1f2':71656, '1f1e9-1f1f4':71657, '1f1e9-1f1ff':71658, '1f1ea-1f1e6':71659, '1f1ea-1f1e8':71660, '1f1ea-1f1ea':71661, '1f1ea-1f1ec':71662, '1f1ea-1f1ed':71663, '1f1ea-1f1f7':71664, '1f1ea-1f1f8':71665, '1f1ea-1f1f9':71666, '1f1ea-1f1fa':71667, '1f1eb-1f1ee':71668, '1f1eb-1f1ef':71669, '1f1eb-1f1f0':71670, '1f1eb-1f1f2':71671, '1f1eb-1f1f4':71672, '1f1eb-1f1f7':71673, '1f1ec-1f1e6':71674, '1f1ec-1f1e7':71675, '1f1ec-1f1e9':71676, '1f1ec-1f1ea':71677, '1f1ec-1f1eb':71678, '1f1ec-1f1ec':71679, '1f1ec-1f1ed':71680, '1f1ec-1f1ee':71681, '1f1ec-1f1f1':71682, '1f1ec-1f1f2':71683, '1f1ec-1f1f3':71684, '1f1ec-1f1f5':71685, '1f1ec-1f1f6':71686, '1f1ec-1f1f7':71687, '1f1ec-1f1f8':71688, '1f1ec-1f1f9':71689, '1f1ec-1f1fa':71690, '1f1ec-1f1fc':71691, '1f1ec-1f1fe':71692, '1f1ed-1f1f0':71693, '1f1ed-1f1f2':71694, '1f1ed-1f1f3':71695, '1f1ed-1f1f7':71696, '1f1ed-1f1f9':71697, '1f1ed-1f1fa':71698, '1f1ee-1f1e8':71699, '1f1ee-1f1e9':71700, '1f1ee-1f1ea':71701, '1f1ee-1f1f1':71702, '1f1ee-1f1f2':71703, '1f1ee-1f1f3':71704, '1f1ee-1f1f4':71705, '1f1ee-1f1f6':71706, '1f1ee-1f1f7':71707, '1f1ee-1f1f8':71708, '1f1ee-1f1f9':71709, '1f1ef-1f1ea':71710, '1f1ef-1f1f2':71711, '1f1ef-1f1f4':71712, '1f1ef-1f1f5':71713, '1f1f0-1f1ea':71714, '1f1f0-1f1ec':71715, '1f1f0-1f1ed':71716, '1f1f0-1f1ee':71717, '1f1f0-1f1f2':71718, '1f1f0-1f1f3':71719, '1f1f0-1f1f5':71720, '1f1f0-1f1f7':71721, '1f1f0-1f1fc':71722, '1f1f0-1f1fe':71723, '1f1f0-1f1ff':71724, '1f1f1-1f1e6':71725, '1f1f1-1f1e7':71726, '1f1f1-1f1e8':71727, '1f1f1-1f1ee':71728, '1f1f1-1f1f0':71729, '1f1f1-1f1f7':71730, '1f1f1-1f1f8':71731, '1f1f1-1f1f9':71732, '1f1f1-1f1fa':71733, '1f1f1-1f1fb':71734, '1f1f1-1f1fe':71735, '1f1f2-1f1e6':71736, '1f1f2-1f1e8':71737, '1f1f2-1f1e9':71738, '1f1f2-1f1ea':71739, '1f1f2-1f1eb':71740, '1f1f2-1f1ec':71741, '1f1f2-1f1ed':71742, '1f1f2-1f1f0':71743, '1f1f2-1f1f1':71744, '1f1f2-1f1f2':71745, '1f1f2-1f1f3':71746, '1f1f2-1f1f4':71747, '1f1f2-1f1f5':71748, '1f1f2-1f1f6':71749, '1f1f2-1f1f7':71750, '1f1f2-1f1f8':71751, '1f1f2-1f1f9':71752, '1f1f2-1f1fa':71753, '1f1f2-1f1fb':71754, '1f1f2-1f1fc':71755, '1f1f2-1f1fd':71756, '1f1f2-1f1fe':71757, '1f1f2-1f1ff':71758, '1f1f3-1f1e6':71759, '1f1f3-1f1e8':71760, '1f1f3-1f1ea':71761, '1f1f3-1f1eb':71762, '1f1f3-1f1ec':71763, '1f1f3-1f1ee':71764, '1f1f3-1f1f1':71765, '1f1f3-1f1f4':71766, '1f1f3-1f1f5':71767, '1f1f3-1f1f7':71768, '1f1f3-1f1fa':71769, '1f1f3-1f1ff':71770, '1f1f4-1f1f2':71771, '1f1f5-1f1e6':71772, '1f1f5-1f1ea':71773, '1f1f5-1f1eb':71774, '1f1f5-1f1ec':71775, '1f1f5-1f1ed':71776, '1f1f5-1f1f0':71777, '1f1f5-1f1f1':71778, '1f1f5-1f1f2':71779, '1f1f5-1f1f3':71780, '1f1f5-1f1f7':71781, '1f1f5-1f1f8':71782, '1f1f5-1f1f9':71783, '1f1f5-1f1fc':71784, '1f1f5-1f1fe':71785, '1f1f6-1f1e6':71786, '1f1f7-1f1ea':71787, '1f1f7-1f1f4':71788, '1f1f7-1f1f8':71789, '1f1f7-1f1fa':71790, '1f1f7-1f1fc':71791, '1f1f8-1f1e6':71792, '1f1f8-1f1e7':71793, '1f1f8-1f1e8':71794, '1f1f8-1f1e9':71795, '1f1f8-1f1ea':71796, '1f1f8-1f1ec':71797, '1f1f8-1f1ed':71798, '1f1f8-1f1ee':71799, '1f1f8-1f1ef':71800, '1f1f8-1f1f0':71801, '1f1f8-1f1f1':71802, '1f1f8-1f1f2':71803, '1f1f8-1f1f3':71804, '1f1f8-1f1f4':71805, '1f1f8-1f1f7':71806, '1f1f8-1f1f8':71807, '1f1f8-1f1f9':71808, '1f1f8-1f1fb':71809, '1f1f8-1f1fd':71810, '1f1f8-1f1fe':71811, '1f1f8-1f1ff':71812, '1f1f9-1f1e6':71813, '1f1f9-1f1e8':71814, '1f1f9-1f1e9':71815, '1f1f9-1f1eb':71816, '1f1f9-1f1ec':71817, '1f1f9-1f1ed':71818, '1f1f9-1f1ef':71819, '1f1f9-1f1f0':71820, '1f1f9-1f1f1':71821, '1f1f9-1f1f2':71822, '1f1f9-1f1f3':71823, '1f1f9-1f1f4':71824, '1f1f9-1f1f7':71825, '1f1f9-1f1f9':71826, '1f1f9-1f1fb':71827, '1f1f9-1f1fc':71828, '1f1f9-1f1ff':71829, '1f1fa-1f1e6':71830, '1f1fa-1f1ec':71831, '1f1fa-1f1f2':71832, '1f1fa-1f1f3':71833, '1f1fa-1f1f8':71834, '1f1fa-1f1fe':71835, '1f1fa-1f1ff':71836, '1f1fb-1f1e6':71837, '1f1fb-1f1e8':71838, '1f1fb-1f1ea':71839, '1f1fb-1f1ec':71840, '1f1fb-1f1ee':71841, '1f1fb-1f1f3':71842, '1f1fb-1f1fa':71843, '1f1fc-1f1eb':71844, '1f1fc-1f1f8':71845, '1f1fd-1f1f0':71846, '1f1fe-1f1ea':71847, '1f1fe-1f1f9':71848, '1f1ff-1f1e6':71849, '1f1ff-1f1f2':71850, '1f1ff-1f1fc':71851, '1f201':62899, '1f202':62900, '1f21a':62906, '1f22f':62903, '1f232':62907, '1f233':62911, '1f234':62910, '1f235':62915, '1f236':62902, '1f237':62901, '1f238':62909, '1f239':62905, '1f23a':62914, '1f250':62904, '1f251':62908, '1f300':41010, '1f301':4857, '1f302':41012, '1f303':4858, '1f304':4860, '1f305':4861, '1f306':4862, '1f307':4863, '1f308':41011, '1f309':4864, '1f30a':41023, '1f30b':4815, '1f30c':4997, '1f30d':4806, '1f30e':4807, '1f30f':4808, '1f310':4809, '1f311':4977, '1f312':4978, '1f313':4979, '1f314':4980, '1f315':4981, '1f316':4982, '1f317':4983, '1f318':4984, '1f319':4985, '1f31a':4986, '1f31b':4987, '1f31c':4988, '1f31d':4991, '1f31e':4992, '1f31f':4995, '1f320':4996, '1f321':4989, '1f324':41001, '1f325':41002, '1f326':41003, '1f327':41004, '1f328':41005, '1f329':41006, '1f32a':41007, '1f32b':41008, '1f32c':41009, '1f32d':3725, '1f32e':3727, '1f32f':3728, '1f330':3708, '1f331':2659, '1f332':2661, '1f333':2662, '1f334':2663, '1f335':2664, '1f336':3698, '1f337':2658, '1f338':2649, '1f339':2653, '1f33a':2655, '1f33b':2656, '1f33c':2657, '1f33d':3697, '1f33e':2665, '1f33f':2666, '1f340':2668, '1f341':2669, '1f342':2670, '1f343':2671, '1f344':3705, '1f345':3690, '1f346':3694, '1f347':3674, '1f348':3675, '1f349':3676, '1f34a':3677, '1f34b':3678, '1f34c':3679, '1f34d':3680, '1f34e':3682, '1f34f':3683, '1f350':3684, '1f351':3685, '1f352':3686, '1f353':3687, '1f354':3722, '1f355':3724, '1f356':3718, '1f357':3719, '1f358':3744, '1f359':3745, '1f35a':3746, '1f35b':3747, '1f35c':3748, '1f35d':3749, '1f35e':3709, '1f35f':3723, '1f360':3750, '1f361':3756, '1f362':3751, '1f363':3752, '1f364':3753, '1f365':3754, '1f366':3765, '1f367':3766, '1f368':3767, '1f369':3768, '1f36a':3769, '1f36b':3774, '1f36c':3775, '1f36d':3776, '1f36e':3777, '1f36f':3778, '1f370':3771, '1f371':3743, '1f372':3735, '1f373':3733, '1f374':3801, '1f375':3783, '1f376':3784, '1f377':3786, '1f378':3787, '1f379':3788, '1f37a':3789, '1f37b':3790, '1f37c':3779, '1f37d':3800, '1f37e':3785, '1f37f':3739, '1f380':51040, '1f381':51041, '1f382':3770, '1f383':51024, '1f384':51025, '1f385':1527, '1f386':51026, '1f387':51027, '1f388':51030, '1f389':51031, '1f38a':51032, '1f38b':51033, '1f38c':71588, '1f38d':51034, '1f38e':51035, '1f38f':51036, '1f390':51037, '1f391':51038, '1f392':61134, '1f393':61147, '1f396':51045, '1f397':51042, '1f399':61167, '1f39a':61168, '1f39b':61169, '1f39e':61203, '1f39f':51043, '1f3a0':4866, '1f3a1':4868, '1f3a2':4869, '1f3a3':51072, '1f3a4':61170, '1f3a5':61202, '1f3a6':62819, '1f3a7':61171, '1f3a8':51105, '1f3a9':61146, '1f3aa':4871, '1f3ab':51044, '1f3ac':61205, '1f3ad':51103, '1f3ae':51086, '1f3af':51078, '1f3b0':51088, '1f3b1':51081, '1f3b2':51089, '1f3b3':51060, '1f3b4':51102, '1f3b5':61165, '1f3b6':61166, '1f3b7':61173, '1f3b8':61175, '1f3b9':61176, '1f3ba':61177, '1f3bb':61178, '1f3bc':61164, '1f3bd':51074, '1f3be':51058, '1f3bf':51075, '1f3c0':51054, '1f3c1':71586, '1f3c2':1600, '1f3c3-200d-2640':1584, '1f3c3-200d-2642':1583, '1f3c3':1582, '1f3c4-200d-2640':1606, '1f3c4-200d-2642':1605, '1f3c4':1604, '1f3c5':51047, '1f3c6':51046, '1f3c7':1598, '1f3c8':51056, '1f3c9':51057, '1f3ca-200d-2640':1612, '1f3ca-200d-2642':1611, '1f3ca':1610, '1f3cb-200d-2640':1618, '1f3cb-200d-2642':1617, '1f3cb':1616, '1f3cc-200d-2640':1603, '1f3cc-200d-2642':1602, '1f3cc':1601, '1f3cd':4902, '1f3ce':4901, '1f3cf':51061, '1f3d0':51055, '1f3d1':51062, '1f3d2':51063, '1f3d3':51065, '1f3d4':4813, '1f3d5':4817, '1f3d6':4818, '1f3d7':4824, '1f3d8':4829, '1f3d9':4859, '1f3da':4830, '1f3db':4823, '1f3dc':4819, '1f3dd':4820, '1f3de':4821, '1f3df':4822, '1f3e0':4831, '1f3e1':4832, '1f3e2':4833, '1f3e3':4834, '1f3e4':4835, '1f3e5':4836, '1f3e6':4837, '1f3e7':62729, '1f3e8':4838, '1f3e9':4839, '1f3ea':4840, '1f3eb':4841, '1f3ec':4842, '1f3ed':4843, '1f3ee':61216, '1f3ef':4844, '1f3f0':4845, '1f3f3-200d-1f308':71591, '1f3f3-200d-26a7':71592, '1f3f3':71590, '1f3f4-200d-2620':71593, '1f3f4-e0067-e0062-e0065-e006e-e0067-e007f':71852, '1f3f4-e0067-e0062-e0073-e0063-e0074-e007f':71853, '1f3f4-e0067-e0062-e0077-e006c-e0073-e007f':71854, '1f3f4':71589, '1f3f5':2652, '1f3f7':61234, '1f3f8':51066, '1f3f9':61303, '1f3fa':3805, '1f3fb':9525, '1f3fc':9526, '1f3fd':9527, '1f3fe':9528, '1f3ff':9529, '1f400':2576, '1f401':2575, '1f402':2556, '1f403':2557, '1f404':2558, '1f405':2547, '1f406':2548, '1f407':2579, '1f408-200d-2b1b':2544, '1f408':2543, '1f409':2618, '1f40a':2613, '1f40b':2622, '1f40c':2632, '1f40d':2616, '1f40e':2550, '1f40f':2563, '1f410':2565, '1f411':2564, '1f412':2531, '1f413':2596, '1f414':2595, '1f415-200d-1f9ba':2537, '1f415':2535, '1f416':2560, '1f417':2561, '1f418':2570, '1f419':2629, '1f41a':2630, '1f41b':2634, '1f41c':2635, '1f41d':2636, '1f41e':2638, '1f41f':2625, '1f420':2626, '1f421':2627, '1f422':2614, '1f423':2597, '1f424':2598, '1f425':2599, '1f426':2600, '1f427':2601, '1f428':2586, '1f429':2538, '1f42a':2566, '1f42b':2567, '1f42c':2623, '1f42d':2574, '1f42e':2555, '1f42f':2546, '1f430':2578, '1f431':2542, '1f432':2617, '1f433':2621, '1f434':2549, '1f435':2530, '1f436':2534, '1f437':2559, '1f438':2612, '1f439':2577, '1f43a':2539, '1f43b-200d-2744':2585, '1f43b':2584, '1f43c':2587, '1f43d':2562, '1f43e':2593, '1f43f':2580, '1f440':1381, '1f441-200d-1f5e8':1159, '1f441':1382, '1f442':1373, '1f443':1375, '1f444':1384, '1f445':1383, '1f446':1347, '1f447':1349, '1f448':1345, '1f449':1346, '1f44a':1355, '1f44b':1327, '1f44c':1336, '1f44d':1352, '1f44e':1353, '1f44f':1358, '1f450':1361, '1f451':61144, '1f452':61145, '1f453':61110, '1f454':61115, '1f455':61116, '1f456':61117, '1f457':61122, '1f458':61123, '1f459':61128, '1f45a':61129, '1f45b':61130, '1f45c':61131, '1f45d':61132, '1f45e':61136, '1f45f':61137, '1f460':61140, '1f461':61141, '1f462':61143, '1f463':1687, '1f464':1684, '1f465':1685, '1f466':1388, '1f467':1389, '1f468-200d-1f33e':1457, '1f468-200d-1f373':1460, '1f468-200d-1f37c':1524, '1f468-200d-1f393':1448, '1f468-200d-1f3a4':1478, '1f468-200d-1f3a8':1481, '1f468-200d-1f3eb':1451, '1f468-200d-1f3ed':1466, '1f468-200d-1f466-200d-1f466':1674, '1f468-200d-1f466':1673, '1f468-200d-1f467-200d-1f466':1676, '1f468-200d-1f467-200d-1f467':1677, '1f468-200d-1f467':1675, '1f468-200d-1f468-200d-1f466':1663, '1f468-200d-1f468-200d-1f466-200d-1f466':1666, '1f468-200d-1f468-200d-1f467':1664, '1f468-200d-1f468-200d-1f467-200d-1f466':1665, '1f468-200d-1f468-200d-1f467-200d-1f467':1667, '1f468-200d-1f469-200d-1f466':1658, '1f468-200d-1f469-200d-1f466-200d-1f466':1661, '1f468-200d-1f469-200d-1f467':1659, '1f468-200d-1f469-200d-1f467-200d-1f466':1660, '1f468-200d-1f469-200d-1f467-200d-1f467':1662, '1f468-200d-1f4bb':1475, '1f468-200d-1f4bc':1469, '1f468-200d-1f527':1463, '1f468-200d-1f52c':1472, '1f468-200d-1f680':1487, '1f468-200d-1f692':1490, '1f468-200d-1f9af':1574, '1f468-200d-1f9b0':1396, '1f468-200d-1f9b1':1397, '1f468-200d-1f9b2':1399, '1f468-200d-1f9b3':1398, '1f468-200d-1f9bc':1577, '1f468-200d-1f9bd':1580, '1f468-200d-2695':1445, '1f468-200d-2696':1454, '1f468-200d-2708':1484, '1f468-200d-2764-200d-1f468':1655, '1f468-200d-2764-200d-1f48b-200d-1f468':1651, '1f468':1392, '1f469-200d-1f33e':1458, '1f469-200d-1f373':1461, '1f469-200d-1f37c':1523, '1f469-200d-1f393':1449, '1f469-200d-1f3a4':1479, '1f469-200d-1f3a8':1482, '1f469-200d-1f3eb':1452, '1f469-200d-1f3ed':1467, '1f469-200d-1f466-200d-1f466':1679, '1f469-200d-1f466':1678, '1f469-200d-1f467-200d-1f466':1681, '1f469-200d-1f467-200d-1f467':1682, '1f469-200d-1f467':1680, '1f469-200d-1f469-200d-1f466':1668, '1f469-200d-1f469-200d-1f466-200d-1f466':1671, '1f469-200d-1f469-200d-1f467':1669, '1f469-200d-1f469-200d-1f467-200d-1f466':1670, '1f469-200d-1f469-200d-1f467-200d-1f467':1672, '1f469-200d-1f4bb':1476, '1f469-200d-1f4bc':1470, '1f469-200d-1f527':1464, '1f469-200d-1f52c':1473, '1f469-200d-1f680':1488, '1f469-200d-1f692':1491, '1f469-200d-1f9af':1575, '1f469-200d-1f9b0':1401, '1f469-200d-1f9b1':1403, '1f469-200d-1f9b2':1407, '1f469-200d-1f9b3':1405, '1f469-200d-1f9bc':1578, '1f469-200d-1f9bd':1581, '1f469-200d-2695':1446, '1f469-200d-2696':1455, '1f469-200d-2708':1485, '1f469-200d-2764-200d-1f468':1654, '1f469-200d-2764-200d-1f469':1656, '1f469-200d-2764-200d-1f48b-200d-1f468':1650, '1f469-200d-2764-200d-1f48b-200d-1f469':1652, '1f469':1400, '1f46a':1657, '1f46b':1647, '1f46c':1648, '1f46d':1646, '1f46e-200d-2640':1494, '1f46e-200d-2642':1493, '1f46e':1492, '1f46f-200d-2640':1590, '1f46f-200d-2642':1589, '1f46f':1588, '1f470-200d-2640':1518, '1f470-200d-2642':1517, '1f470':1516, '1f471-200d-2640':1409, '1f471-200d-2642':1410, '1f471':1391, '1f472':1511, '1f473-200d-2640':1510, '1f473-200d-2642':1509, '1f473':1508, '1f474':1412, '1f475':1413, '1f476':1386, '1f477-200d-2640':1504, '1f477-200d-2642':1503, '1f477':1502, '1f478':1507, '1f479':1109, '1f47a':1110, '1f47b':1111, '1f47c':1526, '1f47d':1112, '1f47e':1113, '1f47f':1104, '1f480':1105, '1f481-200d-2640':1428, '1f481-200d-2642':1427, '1f481':1426, '1f482-200d-2640':1500, '1f482-200d-2642':1499, '1f482':1498, '1f483':1585, '1f484':61152, '1f485':1366, '1f486-200d-2640':1560, '1f486-200d-2642':1559, '1f486':1558, '1f487-200d-2640':1563, '1f487-200d-2642':1562, '1f487':1561, '1f488':4870, '1f489':61326, '1f48a':61328, '1f48b':1127, '1f48c':1128, '1f48d':61153, '1f48e':61154, '1f48f':1649, '1f490':2648, '1f491':1653, '1f492':4846, '1f493':1133, '1f494':1138, '1f495':1135, '1f496':1131, '1f497':1132, '1f498':1129, '1f499':1145, '1f49a':1144, '1f49b':1143, '1f49c':1146, '1f49d':1130, '1f49e':1134, '1f49f':1136, '1f4a0':62946, '1f4a1':61214, '1f4a2':1151, '1f4a3':1157, '1f4a4':1163, '1f4a5':1152, '1f4a6':1154, '1f4a7':41022, '1f4a8':1155, '1f4a9':1107, '1f4aa':1368, '1f4ab':1153, '1f4ac':1158, '1f4ad':1162, '1f4ae':2650, '1f4af':1150, '1f4b0':61235, '1f4b1':62841, '1f4b2':62842, '1f4b3':61242, '1f4b4':61237, '1f4b5':61238, '1f4b6':61239, '1f4b7':61240, '1f4b8':61241, '1f4b9':61244, '1f4ba':4936, '1f4bb':61191, '1f4bc':61265, '1f4bd':61197, '1f4be':61198, '1f4bf':61199, '1f4c0':61200, '1f4c1':61266, '1f4c2':61267, '1f4c3':61227, '1f4c4':61229, '1f4c5':61269, '1f4c6':61270, '1f4c7':61273, '1f4c8':61274, '1f4c9':61275, '1f4ca':61276, '1f4cb':61277, '1f4cc':61278, '1f4cd':61279, '1f4ce':61280, '1f4cf':61282, '1f4d0':61283, '1f4d1':61232, '1f4d2':61226, '1f4d3':61225, '1f4d4':61218, '1f4d5':61219, '1f4d6':61220, '1f4d7':61221, '1f4d8':61222, '1f4d9':61223, '1f4da':61224, '1f4db':62847, '1f4dc':61228, '1f4dd':61264, '1f4de':61185, '1f4df':61186, '1f4e0':61187, '1f4e1':61325, '1f4e2':61159, '1f4e3':61160, '1f4e4':61249, '1f4e5':61250, '1f4e6':61251, '1f4e7':61246, '1f4e8':61247, '1f4e9':61248, '1f4ea':61253, '1f4eb':61252, '1f4ec':61254, '1f4ed':61255, '1f4ee':61256, '1f4ef':61161, '1f4f0':61230, '1f4f1':61182, '1f4f2':61183, '1f4f3':62823, '1f4f4':62824, '1f4f5':62751, '1f4f6':62822, '1f4f7':61207, '1f4f8':61208, '1f4f9':61209, '1f4fa':61206, '1f4fb':61172, '1f4fc':61210, '1f4fd':61204, '1f4ff':61151, '1f500':62801, '1f501':62802, '1f502':62803, '1f503':62769, '1f504':62770, '1f505':62820, '1f506':62821, '1f507':61155, '1f508':61156, '1f509':61157, '1f50a':61158, '1f50b':61188, '1f50c':61190, '1f50d':61211, '1f50e':61212, '1f50f':61290, '1f510':61291, '1f511':61292, '1f512':61288, '1f513':61289, '1f514':61162, '1f515':61163, '1f516':61233, '1f517':61313, '1f518':62947, '1f519':62771, '1f51a':62772, '1f51b':62773, '1f51c':62774, '1f51d':62775, '1f51e':62752, '1f51f':62876, '1f520':62877, '1f521':62878, '1f522':62879, '1f523':62880, '1f524':62881, '1f525':41021, '1f526':61215, '1f527':61306, '1f528':61294, '1f529':61308, '1f52a':3803, '1f52b':61301, '1f52c':61323, '1f52d':61324, '1f52e':51082, '1f52f':62787, '1f530':62848, '1f531':62846, '1f532':62949, '1f533':62948, '1f534':62916, '1f535':62920, '1f536':62940, '1f537':62941, '1f538':62942, '1f539':62943, '1f53a':62944, '1f53b':62945, '1f53c':62811, '1f53d':62813, '1f549':62778, '1f54a':2602, '1f54b':4854, '1f54c':4850, '1f54d':4852, '1f54e':62786, '1f550':4955, '1f551':4957, '1f552':4959, '1f553':4961, '1f554':4963, '1f555':4965, '1f556':4967, '1f557':4969, '1f558':4971, '1f559':4973, '1f55a':4975, '1f55b':4953, '1f55c':4956, '1f55d':4958, '1f55e':4960, '1f55f':4962, '1f560':4964, '1f561':4966, '1f562':4968, '1f563':4970, '1f564':4972, '1f565':4974, '1f566':4976, '1f567':4954, '1f56f':61213, '1f570':4952, '1f573':1156, '1f574':1587, '1f575-200d-2640':1497, '1f575-200d-2642':1496, '1f575':1495, '1f576':61111, '1f577':2641, '1f578':2642, '1f579':51087, '1f57a':1586, '1f587':61281, '1f58a':61261, '1f58b':61260, '1f58c':61262, '1f58d':61263, '1f590':1329, '1f595':1348, '1f596':1331, '1f5a4':1148, '1f5a5':61192, '1f5a8':61193, '1f5b1':61195, '1f5b2':61196, '1f5bc':51104, '1f5c2':61268, '1f5c3':61285, '1f5c4':61286, '1f5d1':61287, '1f5d2':61271, '1f5d3':61272, '1f5dc':61310, '1f5dd':61293, '1f5de':61231, '1f5e1':61299, '1f5e3':1683, '1f5e8':1160, '1f5ef':1161, '1f5f3':61257, '1f5fa':4810, '1f5fb':4816, '1f5fc':4847, '1f5fd':4848, '1f5fe':4811, '1f5ff':61362, '1f600':11, '1f601':14, '1f602':18, '1f603':12, '1f604':13, '1f605':16, '1f606':15, '1f607':114, '1f608':1103, '1f609':112, '1f60a':113, '1f60b':124, '1f60c':150, '1f60d':116, '1f60e':170, '1f60f':144, '1f610':139, '1f611':140, '1f612':145, '1f613':195, '1f614':151, '1f615':173, '1f616':192, '1f617':119, '1f618':118, '1f619':122, '1f61a':121, '1f61b':125, '1f61c':126, '1f61d':128, '1f61e':194, '1f61f':175, '1f620':1101, '1f621':1100, '1f622':189, '1f623':193, '1f624':199, '1f625':188, '1f626':184, '1f627':185, '1f628':186, '1f629':196, '1f62a':152, '1f62b':197, '1f62c':147, '1f62d':190, '1f62e-200d-1f4a8':148, '1f62e':178, '1f62f':179, '1f630':187, '1f631':191, '1f632':180, '1f633':181, '1f634':154, '1f635-200d-1f4ab':165, '1f635':164, '1f636-200d-1f32b':143, '1f636':141, '1f637':155, '1f638':1116, '1f639':1117, '1f63a':1115, '1f63b':1118, '1f63c':1119, '1f63d':1120, '1f63e':1123, '1f63f':1122, '1f640':1121, '1f641':176, '1f642':19, '1f643':110, '1f644':146, '1f645-200d-2640':1422, '1f645-200d-2642':1421, '1f645':1420, '1f646-200d-2640':1425, '1f646-200d-2642':1424, '1f646':1423, '1f647-200d-2640':1437, '1f647-200d-2642':1436, '1f647':1435, '1f648':1124, '1f649':1125, '1f64a':1126, '1f64b-200d-2640':1431, '1f64b-200d-2642':1430, '1f64b':1429, '1f64c':1359, '1f64d-200d-2640':1416, '1f64d-200d-2642':1415, '1f64d':1414, '1f64e-200d-2640':1419, '1f64e-200d-2642':1418, '1f64e':1417, '1f64f':1364, '1f680':4942, '1f681':4937, '1f682':4872, '1f683':4873, '1f684':4874, '1f685':4875, '1f686':4876, '1f687':4877, '1f688':4878, '1f689':4879, '1f68a':4880, '1f68b':4883, '1f68c':4884, '1f68d':4885, '1f68e':4886, '1f68f':4911, '1f690':4887, '1f691':4888, '1f692':4889, '1f693':4890, '1f694':4891, '1f695':4892, '1f696':4893, '1f697':4894, '1f698':4895, '1f699':4896, '1f69a':4898, '1f69b':4899, '1f69c':4900, '1f69d':4881, '1f69e':4882, '1f69f':4938, '1f6a0':4939, '1f6a1':4940, '1f6a2':4930, '1f6a3-200d-2640':1609, '1f6a3-200d-2642':1608, '1f6a3':1607, '1f6a4':4926, '1f6a5':4918, '1f6a6':4919, '1f6a7':4921, '1f6a8':4917, '1f6a9':71587, '1f6aa':61333, '1f6ab':62745, '1f6ac':61358, '1f6ad':62747, '1f6ae':62730, '1f6af':62748, '1f6b0':62731, '1f6b1':62749, '1f6b2':4907, '1f6b3':62746, '1f6b4-200d-2640':1621, '1f6b4-200d-2642':1620, '1f6b4':1619, '1f6b5-200d-2640':1624, '1f6b5-200d-2642':1623, '1f6b5':1622, '1f6b6-200d-2640':1566, '1f6b6-200d-2642':1565, '1f6b6':1564, '1f6b7':62750, '1f6b8':62743, '1f6b9':62733, '1f6ba':62734, '1f6bb':62735, '1f6bc':62736, '1f6bd':61340, '1f6be':62737, '1f6bf':61342, '1f6c0':1643, '1f6c1':61343, '1f6c2':62738, '1f6c3':62739, '1f6c4':62740, '1f6c5':62741, '1f6cb':61338, '1f6cc':1644, '1f6cd':61133, '1f6ce':4944, '1f6cf':61337, '1f6d0':62776, '1f6d1':4920, '1f6d2':61357, '1f6d5':4851, '1f6d6':4828, '1f6d7':61334, '1f6e0':61298, '1f6e1':61304, '1f6e2':4914, '1f6e3':4912, '1f6e4':4913, '1f6e5':4929, '1f6e9':4932, '1f6eb':4933, '1f6ec':4934, '1f6f0':4941, '1f6f3':4927, '1f6f4':4908, '1f6f5':4903, '1f6f6':4925, '1f6f7':51076, '1f6f8':4943, '1f6f9':4909, '1f6fa':4906, '1f6fb':4897, '1f6fc':4910, '1f7e0':62917, '1f7e1':62918, '1f7e2':62919, '1f7e3':62921, '1f7e4':62922, '1f7e5':62925, '1f7e6':62929, '1f7e7':62926, '1f7e8':62927, '1f7e9':62928, '1f7ea':62930, '1f7eb':62931, '1f90c':1337, '1f90d':1149, '1f90e':1147, '1f90f':1338, '1f910':137, '1f911':129, '1f912':156, '1f913':171, '1f914':135, '1f915':157, '1f916':1114, '1f917':130, '1f918':1343, '1f919':1344, '1f91a':1328, '1f91b':1356, '1f91c':1357, '1f91d':1363, '1f91e':1340, '1f91f':1342, '1f920':167, '1f921':1108, '1f922':158, '1f923':17, '1f924':153, '1f925':149, '1f926-200d-2640':1440, '1f926-200d-2642':1439, '1f926':1438, '1f927':160, '1f928':138, '1f929':117, '1f92a':127, '1f92b':134, '1f92c':1102, '1f92d':131, '1f92e':159, '1f92f':166, '1f930':1519, '1f931':1522, '1f932':1362, '1f933':1367, '1f934':1506, '1f935-200d-2640':1515, '1f935-200d-2642':1514, '1f935':1513, '1f936':1528, '1f937-200d-2640':1443, '1f937-200d-2642':1442, '1f937':1441, '1f938-200d-2640':1627, '1f938-200d-2642':1626, '1f938':1625, '1f939-200d-2640':1639, '1f939-200d-2642':1638, '1f939':1637, '1f93a':1597, '1f93c-200d-2640':1630, '1f93c-200d-2642':1629, '1f93c':1628, '1f93d-200d-2640':1633, '1f93d-200d-2642':1632, '1f93d':1631, '1f93e-200d-2640':1636, '1f93e-200d-2642':1635, '1f93e':1634, '1f93f':51073, '1f940':2654, '1f941':61180, '1f942':3791, '1f943':3792, '1f944':3802, '1f945':51069, '1f947':51048, '1f948':51049, '1f949':51050, '1f94a':51067, '1f94b':51068, '1f94c':51077, '1f94d':51064, '1f94e':51053, '1f94f':51059, '1f950':3710, '1f951':3693, '1f952':3700, '1f953':3721, '1f954':3695, '1f955':3696, '1f956':3711, '1f957':3738, '1f958':3734, '1f959':3730, '1f95a':3732, '1f95b':3780, '1f95c':3706, '1f95d':3689, '1f95e':3715, '1f95f':3757, '1f960':3758, '1f961':3759, '1f962':3799, '1f963':3737, '1f964':3794, '1f965':3692, '1f966':3702, '1f967':3773, '1f968':3713, '1f969':3720, '1f96a':3726, '1f96b':3742, '1f96c':3701, '1f96d':3681, '1f96e':3755, '1f96f':3714, '1f970':115, '1f971':198, '1f972':123, '1f973':168, '1f974':163, '1f975':161, '1f976':162, '1f977':1501, '1f978':169, '1f97a':182, '1f97b':61124, '1f97c':61113, '1f97d':61112, '1f97e':61138, '1f97f':61139, '1f980':3760, '1f981':2545, '1f982':2643, '1f983':2594, '1f984':2551, '1f985':2603, '1f986':2604, '1f987':2583, '1f988':2628, '1f989':2606, '1f98a':2540, '1f98b':2633, '1f98c':2553, '1f98d':2532, '1f98e':2615, '1f98f':2572, '1f990':3762, '1f991':3763, '1f992':2569, '1f993':2552, '1f994':2582, '1f995':2619, '1f996':2620, '1f997':2639, '1f998':2591, '1f999':2568, '1f99a':2610, '1f99b':2573, '1f99c':2611, '1f99d':2541, '1f99e':3761, '1f99f':2644, '1f9a0':2647, '1f9a1':2592, '1f9a2':2605, '1f9a3':2571, '1f9a4':2607, '1f9a5':2588, '1f9a6':2589, '1f9a7':2533, '1f9a8':2590, '1f9a9':2609, '1f9aa':3764, '1f9ab':2581, '1f9ac':2554, '1f9ad':2624, '1f9ae':2536, '1f9af':61312, '1f9b4':1380, '1f9b5':1371, '1f9b6':1372, '1f9b7':1379, '1f9b8-200d-2640':1532, '1f9b8-200d-2642':1531, '1f9b8':1530, '1f9b9-200d-2640':1535, '1f9b9-200d-2642':1534, '1f9b9':1533, '1f9ba':61114, '1f9bb':1374, '1f9bc':4905, '1f9bd':4904, '1f9be':1369, '1f9bf':1370, '1f9c0':3717, '1f9c1':3772, '1f9c2':3741, '1f9c3':3796, '1f9c4':3703, '1f9c5':3704, '1f9c6':3731, '1f9c7':3716, '1f9c8':3740, '1f9c9':3797, '1f9ca':3798, '1f9cb':3795, '1f9cd-200d-2640':1569, '1f9cd-200d-2642':1568, '1f9cd':1567, '1f9ce-200d-2640':1572, '1f9ce-200d-2642':1571, '1f9ce':1570, '1f9cf-200d-2640':1434, '1f9cf-200d-2642':1433, '1f9cf':1432, '1f9d0':172, '1f9d1-200d-1f33e':1456, '1f9d1-200d-1f373':1459, '1f9d1-200d-1f37c':1525, '1f9d1-200d-1f384':1529, '1f9d1-200d-1f393':1447, '1f9d1-200d-1f3a4':1477, '1f9d1-200d-1f3a8':1480, '1f9d1-200d-1f3eb':1450, '1f9d1-200d-1f3ed':1465, '1f9d1-200d-1f4bb':1474, '1f9d1-200d-1f4bc':1468, '1f9d1-200d-1f527':1462, '1f9d1-200d-1f52c':1471, '1f9d1-200d-1f680':1486, '1f9d1-200d-1f692':1489, '1f9d1-200d-1f91d-200d-1f9d1':1645, '1f9d1-200d-1f9af':1573, '1f9d1-200d-1f9b0':1402, '1f9d1-200d-1f9b1':1404, '1f9d1-200d-1f9b2':1408, '1f9d1-200d-1f9b3':1406, '1f9d1-200d-1f9bc':1576, '1f9d1-200d-1f9bd':1579, '1f9d1-200d-2695':1444, '1f9d1-200d-2696':1453, '1f9d1-200d-2708':1483, '1f9d1':1390, '1f9d2':1387, '1f9d3':1411, '1f9d4-200d-2640':1395, '1f9d4-200d-2642':1394, '1f9d4':1393, '1f9d5':1512, '1f9d6-200d-2640':1593, '1f9d6-200d-2642':1592, '1f9d6':1591, '1f9d7-200d-2640':1596, '1f9d7-200d-2642':1595, '1f9d7':1594, '1f9d8-200d-2640':1642, '1f9d8-200d-2642':1641, '1f9d8':1640, '1f9d9-200d-2640':1538, '1f9d9-200d-2642':1537, '1f9d9':1536, '1f9da-200d-2640':1541, '1f9da-200d-2642':1540, '1f9da':1539, '1f9db-200d-2640':1544, '1f9db-200d-2642':1543, '1f9db':1542, '1f9dc-200d-2640':1547, '1f9dc-200d-2642':1546, '1f9dc':1545, '1f9dd-200d-2640':1550, '1f9dd-200d-2642':1549, '1f9dd':1548, '1f9de-200d-2640':1553, '1f9de-200d-2642':1552, '1f9de':1551, '1f9df-200d-2640':1556, '1f9df-200d-2642':1555, '1f9df':1554, '1f9e0':1376, '1f9e1':1142, '1f9e2':61148, '1f9e3':61118, '1f9e4':61119, '1f9e5':61120, '1f9e6':61121, '1f9e7':51039, '1f9e8':51028, '1f9e9':51090, '1f9ea':61320, '1f9eb':61321, '1f9ec':61322, '1f9ed':4812, '1f9ee':61201, '1f9ef':61356, '1f9f0':61316, '1f9f1':4825, '1f9f2':61317, '1f9f3':4945, '1f9f4':61346, '1f9f5':51106, '1f9f6':51108, '1f9f7':61347, '1f9f8':51091, '1f9f9':61348, '1f9fa':61349, '1f9fb':61350, '1f9fc':61352, '1f9fd':61355, '1f9fe':61243, '1f9ff':51084, '1fa70':61142, '1fa71':61125, '1fa72':61126, '1fa73':61127, '1fa74':61135, '1fa78':61327, '1fa79':61329, '1fa7a':61331, '1fa80':51079, '1fa81':51080, '1fa82':4935, '1fa83':61302, '1fa84':51083, '1fa85':51092, '1fa86':51094, '1fa90':4993, '1fa91':61339, '1fa92':61345, '1fa93':61295, '1fa94':61217, '1fa95':61179, '1fa96':61149, '1fa97':61174, '1fa98':61181, '1fa99':61236, '1fa9a':61305, '1fa9b':61307, '1fa9c':61318, '1fa9d':61315, '1fa9e':61335, '1fa9f':61336, '1faa0':61341, '1faa1':51107, '1faa2':51109, '1faa3':61351, '1faa4':61344, '1faa5':61354, '1faa6':61360, '1faa7':61363, '1faa8':4826, '1fab0':2645, '1fab1':2646, '1fab2':2637, '1fab3':2640, '1fab4':2660, '1fab5':4827, '1fab6':2608, '1fac0':1377, '1fac1':1378, '1fac2':1686, '1fad0':3688, '1fad1':3699, '1fad2':3691, '1fad3':3712, '1fad4':3729, '1fad5':3736, '1fad6':3782, '203c':62834, '21a9':62765, '21aa':62766, '231a':4948, '231b':4946, '23cf':62818, '23e9':62805, '23ea':62809, '23eb':62812, '23ec':62814, '23ed':62806, '23ee':62810, '23ef':62807, '23f0':4949, '23f1':4950, '23f2':4951, '23f3':4947, '23f8':62815, '23f9':62816, '23fa':62817, '24c2':62890, '25aa':62938, '25ab':62939, '25b6':62804, '25c0':62808, '25fb':62935, '25fc':62934, '25fd':62937, '25fe':62936, '260e':61184, '261d':1350, '262a':62784, '262e':62785, '262f':62781, '263a':120, '264a':62790, '264b':62791, '264c':62792, '264d':62793, '264e':62794, '264f':62795, '265f':51099, '267b':62844, '267e':62833, '267f':62732, '269b':62777, '269c':62845, '26a0':62742, '26a1':41016, '26a7':62827, '26aa':62924, '26ab':62923, '26b0':61359, '26b1':61361, '26bd':51051, '26be':51052, '26c4':41019, '26c5':4999, '26c8':41000, '26ce':62800, '26cf':61296, '26d1':61150, '26d3':61314, '26d4':62744, '26e9':4853, '26ea':4849, '26f0':4814, '26f1':41015, '26f2':4855, '26f3':51070, '26f4':4928, '26f5':4924, '26f7':1599, '26f8':51071, '26f9-200d-2640':1615, '26f9-200d-2642':1614, '26f9':1613, '26fa':4856, '26fd':4915, '270a':1354, '270b':1330, '270c':1339, '270d':1365, '270f':61258, '271d':62782, '274c':62853, '274e':62854, '2764-200d-1f525':1139, '2764-200d-1fa79':1140, '27a1':62757, '27b0':62855, '27bf':62856, '2b05':62761, '2b06':62755, '2b07':62759, '2b1b':62932, '2b1c':62933, '2b50':4994, '2b55':62849, '303d':62857, '1f385-1f3fb':0, '1f385-1f3fc':0, '1f385-1f3fd':0, '1f385-1f3fe':0, '1f385-1f3ff':0, '1f3c2-1f3fb':0, '1f3c2-1f3fc':0, '1f3c2-1f3fd':0, '1f3c2-1f3fe':0, '1f3c2-1f3ff':0, '1f3c3-1f3fb-200d-2640':0, '1f3c3-1f3fc-200d-2640':0, '1f3c3-1f3fd-200d-2640':0, '1f3c3-1f3fe-200d-2640':0, '1f3c3-1f3ff-200d-2640':0, '1f3c3-1f3fb-200d-2642':0, '1f3c3-1f3fc-200d-2642':0, '1f3c3-1f3fd-200d-2642':0, '1f3c3-1f3fe-200d-2642':0, '1f3c3-1f3ff-200d-2642':0, '1f3c3-1f3fb':0, '1f3c3-1f3fc':0, '1f3c3-1f3fd':0, '1f3c3-1f3fe':0, '1f3c3-1f3ff':0, '1f3c4-1f3fb-200d-2640':0, '1f3c4-1f3fc-200d-2640':0, '1f3c4-1f3fd-200d-2640':0, '1f3c4-1f3fe-200d-2640':0, '1f3c4-1f3ff-200d-2640':0, '1f3c4-1f3fb-200d-2642':0, '1f3c4-1f3fc-200d-2642':0, '1f3c4-1f3fd-200d-2642':0, '1f3c4-1f3fe-200d-2642':0, '1f3c4-1f3ff-200d-2642':0, '1f3c4-1f3fb':0, '1f3c4-1f3fc':0, '1f3c4-1f3fd':0, '1f3c4-1f3fe':0, '1f3c4-1f3ff':0, '1f3c7-1f3fb':0, '1f3c7-1f3fc':0, '1f3c7-1f3fd':0, '1f3c7-1f3fe':0, '1f3c7-1f3ff':0, '1f3ca-1f3fb-200d-2640':0, '1f3ca-1f3fc-200d-2640':0, '1f3ca-1f3fd-200d-2640':0, '1f3ca-1f3fe-200d-2640':0, '1f3ca-1f3ff-200d-2640':0, '1f3ca-1f3fb-200d-2642':0, '1f3ca-1f3fc-200d-2642':0, '1f3ca-1f3fd-200d-2642':0, '1f3ca-1f3fe-200d-2642':0, '1f3ca-1f3ff-200d-2642':0, '1f3ca-1f3fb':0, '1f3ca-1f3fc':0, '1f3ca-1f3fd':0, '1f3ca-1f3fe':0, '1f3ca-1f3ff':0, '1f3cb-1f3fb-200d-2640':0, '1f3cb-1f3fc-200d-2640':0, '1f3cb-1f3fd-200d-2640':0, '1f3cb-1f3fe-200d-2640':0, '1f3cb-1f3ff-200d-2640':0, '1f3cb-1f3fb-200d-2642':0, '1f3cb-1f3fc-200d-2642':0, '1f3cb-1f3fd-200d-2642':0, '1f3cb-1f3fe-200d-2642':0, '1f3cb-1f3ff-200d-2642':0, '1f3cb-1f3fb':0, '1f3cb-1f3fc':0, '1f3cb-1f3fd':0, '1f3cb-1f3fe':0, '1f3cb-1f3ff':0, '1f3cc-1f3fb-200d-2640':0, '1f3cc-1f3fc-200d-2640':0, '1f3cc-1f3fd-200d-2640':0, '1f3cc-1f3fe-200d-2640':0, '1f3cc-1f3ff-200d-2640':0, '1f3cc-1f3fb-200d-2642':0, '1f3cc-1f3fc-200d-2642':0, '1f3cc-1f3fd-200d-2642':0, '1f3cc-1f3fe-200d-2642':0, '1f3cc-1f3ff-200d-2642':0, '1f3cc-1f3fb':0, '1f3cc-1f3fc':0, '1f3cc-1f3fd':0, '1f3cc-1f3fe':0, '1f3cc-1f3ff':0, '1f442-1f3fb':0, '1f442-1f3fc':0, '1f442-1f3fd':0, '1f442-1f3fe':0, '1f442-1f3ff':0, '1f443-1f3fb':0, '1f443-1f3fc':0, '1f443-1f3fd':0, '1f443-1f3fe':0, '1f443-1f3ff':0, '1f446-1f3fb':0, '1f446-1f3fc':0, '1f446-1f3fd':0, '1f446-1f3fe':0, '1f446-1f3ff':0, '1f447-1f3fb':0, '1f447-1f3fc':0, '1f447-1f3fd':0, '1f447-1f3fe':0, '1f447-1f3ff':0, '1f448-1f3fb':0, '1f448-1f3fc':0, '1f448-1f3fd':0, '1f448-1f3fe':0, '1f448-1f3ff':0, '1f449-1f3fb':0, '1f449-1f3fc':0, '1f449-1f3fd':0, '1f449-1f3fe':0, '1f449-1f3ff':0, '1f44a-1f3fb':0, '1f44a-1f3fc':0, '1f44a-1f3fd':0, '1f44a-1f3fe':0, '1f44a-1f3ff':0, '1f44b-1f3fb':0, '1f44b-1f3fc':0, '1f44b-1f3fd':0, '1f44b-1f3fe':0, '1f44b-1f3ff':0, '1f44c-1f3fb':0, '1f44c-1f3fc':0, '1f44c-1f3fd':0, '1f44c-1f3fe':0, '1f44c-1f3ff':0, '1f44d-1f3fb':0, '1f44d-1f3fc':0, '1f44d-1f3fd':0, '1f44d-1f3fe':0, '1f44d-1f3ff':0, '1f44e-1f3fb':0, '1f44e-1f3fc':0, '1f44e-1f3fd':0, '1f44e-1f3fe':0, '1f44e-1f3ff':0, '1f44f-1f3fb':0, '1f44f-1f3fc':0, '1f44f-1f3fd':0, '1f44f-1f3fe':0, '1f44f-1f3ff':0, '1f450-1f3fb':0, '1f450-1f3fc':0, '1f450-1f3fd':0, '1f450-1f3fe':0, '1f450-1f3ff':0, '1f466-1f3fb':0, '1f466-1f3fc':0, '1f466-1f3fd':0, '1f466-1f3fe':0, '1f466-1f3ff':0, '1f467-1f3fb':0, '1f467-1f3fc':0, '1f467-1f3fd':0, '1f467-1f3fe':0, '1f467-1f3ff':0, '1f468-1f3fb-200d-1f33e':0, '1f468-1f3fc-200d-1f33e':0, '1f468-1f3fd-200d-1f33e':0, '1f468-1f3fe-200d-1f33e':0, '1f468-1f3ff-200d-1f33e':0, '1f468-1f3fb-200d-1f373':0, '1f468-1f3fc-200d-1f373':0, '1f468-1f3fd-200d-1f373':0, '1f468-1f3fe-200d-1f373':0, '1f468-1f3ff-200d-1f373':0, '1f468-1f3fb-200d-1f37c':0, '1f468-1f3fc-200d-1f37c':0, '1f468-1f3fd-200d-1f37c':0, '1f468-1f3fe-200d-1f37c':0, '1f468-1f3ff-200d-1f37c':0, '1f468-1f3fb-200d-1f393':0, '1f468-1f3fc-200d-1f393':0, '1f468-1f3fd-200d-1f393':0, '1f468-1f3fe-200d-1f393':0, '1f468-1f3ff-200d-1f393':0, '1f468-1f3fb-200d-1f3a4':0, '1f468-1f3fc-200d-1f3a4':0, '1f468-1f3fd-200d-1f3a4':0, '1f468-1f3fe-200d-1f3a4':0, '1f468-1f3ff-200d-1f3a4':0, '1f468-1f3fb-200d-1f3a8':0, '1f468-1f3fc-200d-1f3a8':0, '1f468-1f3fd-200d-1f3a8':0, '1f468-1f3fe-200d-1f3a8':0, '1f468-1f3ff-200d-1f3a8':0, '1f468-1f3fb-200d-1f3eb':0, '1f468-1f3fc-200d-1f3eb':0, '1f468-1f3fd-200d-1f3eb':0, '1f468-1f3fe-200d-1f3eb':0, '1f468-1f3ff-200d-1f3eb':0, '1f468-1f3fb-200d-1f3ed':0, '1f468-1f3fc-200d-1f3ed':0, '1f468-1f3fd-200d-1f3ed':0, '1f468-1f3fe-200d-1f3ed':0, '1f468-1f3ff-200d-1f3ed':0, '1f468-1f3fb-200d-1f4bb':0, '1f468-1f3fc-200d-1f4bb':0, '1f468-1f3fd-200d-1f4bb':0, '1f468-1f3fe-200d-1f4bb':0, '1f468-1f3ff-200d-1f4bb':0, '1f468-1f3fb-200d-1f4bc':0, '1f468-1f3fc-200d-1f4bc':0, '1f468-1f3fd-200d-1f4bc':0, '1f468-1f3fe-200d-1f4bc':0, '1f468-1f3ff-200d-1f4bc':0, '1f468-1f3fb-200d-1f527':0, '1f468-1f3fc-200d-1f527':0, '1f468-1f3fd-200d-1f527':0, '1f468-1f3fe-200d-1f527':0, '1f468-1f3ff-200d-1f527':0, '1f468-1f3fb-200d-1f52c':0, '1f468-1f3fc-200d-1f52c':0, '1f468-1f3fd-200d-1f52c':0, '1f468-1f3fe-200d-1f52c':0, '1f468-1f3ff-200d-1f52c':0, '1f468-1f3fb-200d-1f680':0, '1f468-1f3fc-200d-1f680':0, '1f468-1f3fd-200d-1f680':0, '1f468-1f3fe-200d-1f680':0, '1f468-1f3ff-200d-1f680':0, '1f468-1f3fb-200d-1f692':0, '1f468-1f3fc-200d-1f692':0, '1f468-1f3fd-200d-1f692':0, '1f468-1f3fe-200d-1f692':0, '1f468-1f3ff-200d-1f692':0, '1f468-1f3fb-200d-1f9af':0, '1f468-1f3fc-200d-1f9af':0, '1f468-1f3fd-200d-1f9af':0, '1f468-1f3fe-200d-1f9af':0, '1f468-1f3ff-200d-1f9af':0, '1f468-1f3fb-200d-1f9b0':0, '1f468-1f3fc-200d-1f9b0':0, '1f468-1f3fd-200d-1f9b0':0, '1f468-1f3fe-200d-1f9b0':0, '1f468-1f3ff-200d-1f9b0':0, '1f468-1f3fb-200d-1f9b1':0, '1f468-1f3fc-200d-1f9b1':0, '1f468-1f3fd-200d-1f9b1':0, '1f468-1f3fe-200d-1f9b1':0, '1f468-1f3ff-200d-1f9b1':0, '1f468-1f3fb-200d-1f9b2':0, '1f468-1f3fc-200d-1f9b2':0, '1f468-1f3fd-200d-1f9b2':0, '1f468-1f3fe-200d-1f9b2':0, '1f468-1f3ff-200d-1f9b2':0, '1f468-1f3fb-200d-1f9b3':0, '1f468-1f3fc-200d-1f9b3':0, '1f468-1f3fd-200d-1f9b3':0, '1f468-1f3fe-200d-1f9b3':0, '1f468-1f3ff-200d-1f9b3':0, '1f468-1f3fb-200d-1f9bc':0, '1f468-1f3fc-200d-1f9bc':0, '1f468-1f3fd-200d-1f9bc':0, '1f468-1f3fe-200d-1f9bc':0, '1f468-1f3ff-200d-1f9bc':0, '1f468-1f3fb-200d-1f9bd':0, '1f468-1f3fc-200d-1f9bd':0, '1f468-1f3fd-200d-1f9bd':0, '1f468-1f3fe-200d-1f9bd':0, '1f468-1f3ff-200d-1f9bd':0, '1f468-1f3fb-200d-2695':0, '1f468-1f3fc-200d-2695':0, '1f468-1f3fd-200d-2695':0, '1f468-1f3fe-200d-2695':0, '1f468-1f3ff-200d-2695':0, '1f468-1f3fb-200d-2696':0, '1f468-1f3fc-200d-2696':0, '1f468-1f3fd-200d-2696':0, '1f468-1f3fe-200d-2696':0, '1f468-1f3ff-200d-2696':0, '1f468-1f3fb-200d-2708':0, '1f468-1f3fc-200d-2708':0, '1f468-1f3fd-200d-2708':0, '1f468-1f3fe-200d-2708':0, '1f468-1f3ff-200d-2708':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fb':0, '1f468-1f3fc':0, '1f468-1f3fd':0, '1f468-1f3fe':0, '1f468-1f3ff':0, '1f469-1f3fb-200d-1f33e':0, '1f469-1f3fc-200d-1f33e':0, '1f469-1f3fd-200d-1f33e':0, '1f469-1f3fe-200d-1f33e':0, '1f469-1f3ff-200d-1f33e':0, '1f469-1f3fb-200d-1f373':0, '1f469-1f3fc-200d-1f373':0, '1f469-1f3fd-200d-1f373':0, '1f469-1f3fe-200d-1f373':0, '1f469-1f3ff-200d-1f373':0, '1f469-1f3fb-200d-1f37c':0, '1f469-1f3fc-200d-1f37c':0, '1f469-1f3fd-200d-1f37c':0, '1f469-1f3fe-200d-1f37c':0, '1f469-1f3ff-200d-1f37c':0, '1f469-1f3fb-200d-1f393':0, '1f469-1f3fc-200d-1f393':0, '1f469-1f3fd-200d-1f393':0, '1f469-1f3fe-200d-1f393':0, '1f469-1f3ff-200d-1f393':0, '1f469-1f3fb-200d-1f3a4':0, '1f469-1f3fc-200d-1f3a4':0, '1f469-1f3fd-200d-1f3a4':0, '1f469-1f3fe-200d-1f3a4':0, '1f469-1f3ff-200d-1f3a4':0, '1f469-1f3fb-200d-1f3a8':0, '1f469-1f3fc-200d-1f3a8':0, '1f469-1f3fd-200d-1f3a8':0, '1f469-1f3fe-200d-1f3a8':0, '1f469-1f3ff-200d-1f3a8':0, '1f469-1f3fb-200d-1f3eb':0, '1f469-1f3fc-200d-1f3eb':0, '1f469-1f3fd-200d-1f3eb':0, '1f469-1f3fe-200d-1f3eb':0, '1f469-1f3ff-200d-1f3eb':0, '1f469-1f3fb-200d-1f3ed':0, '1f469-1f3fc-200d-1f3ed':0, '1f469-1f3fd-200d-1f3ed':0, '1f469-1f3fe-200d-1f3ed':0, '1f469-1f3ff-200d-1f3ed':0, '1f469-1f3fb-200d-1f4bb':0, '1f469-1f3fc-200d-1f4bb':0, '1f469-1f3fd-200d-1f4bb':0, '1f469-1f3fe-200d-1f4bb':0, '1f469-1f3ff-200d-1f4bb':0, '1f469-1f3fb-200d-1f4bc':0, '1f469-1f3fc-200d-1f4bc':0, '1f469-1f3fd-200d-1f4bc':0, '1f469-1f3fe-200d-1f4bc':0, '1f469-1f3ff-200d-1f4bc':0, '1f469-1f3fb-200d-1f527':0, '1f469-1f3fc-200d-1f527':0, '1f469-1f3fd-200d-1f527':0, '1f469-1f3fe-200d-1f527':0, '1f469-1f3ff-200d-1f527':0, '1f469-1f3fb-200d-1f52c':0, '1f469-1f3fc-200d-1f52c':0, '1f469-1f3fd-200d-1f52c':0, '1f469-1f3fe-200d-1f52c':0, '1f469-1f3ff-200d-1f52c':0, '1f469-1f3fb-200d-1f680':0, '1f469-1f3fc-200d-1f680':0, '1f469-1f3fd-200d-1f680':0, '1f469-1f3fe-200d-1f680':0, '1f469-1f3ff-200d-1f680':0, '1f469-1f3fb-200d-1f692':0, '1f469-1f3fc-200d-1f692':0, '1f469-1f3fd-200d-1f692':0, '1f469-1f3fe-200d-1f692':0, '1f469-1f3ff-200d-1f692':0, '1f469-1f3fb-200d-1f9af':0, '1f469-1f3fc-200d-1f9af':0, '1f469-1f3fd-200d-1f9af':0, '1f469-1f3fe-200d-1f9af':0, '1f469-1f3ff-200d-1f9af':0, '1f469-1f3fb-200d-1f9b0':0, '1f469-1f3fc-200d-1f9b0':0, '1f469-1f3fd-200d-1f9b0':0, '1f469-1f3fe-200d-1f9b0':0, '1f469-1f3ff-200d-1f9b0':0, '1f469-1f3fb-200d-1f9b1':0, '1f469-1f3fc-200d-1f9b1':0, '1f469-1f3fd-200d-1f9b1':0, '1f469-1f3fe-200d-1f9b1':0, '1f469-1f3ff-200d-1f9b1':0, '1f469-1f3fb-200d-1f9b2':0, '1f469-1f3fc-200d-1f9b2':0, '1f469-1f3fd-200d-1f9b2':0, '1f469-1f3fe-200d-1f9b2':0, '1f469-1f3ff-200d-1f9b2':0, '1f469-1f3fb-200d-1f9b3':0, '1f469-1f3fc-200d-1f9b3':0, '1f469-1f3fd-200d-1f9b3':0, '1f469-1f3fe-200d-1f9b3':0, '1f469-1f3ff-200d-1f9b3':0, '1f469-1f3fb-200d-1f9bc':0, '1f469-1f3fc-200d-1f9bc':0, '1f469-1f3fd-200d-1f9bc':0, '1f469-1f3fe-200d-1f9bc':0, '1f469-1f3ff-200d-1f9bc':0, '1f469-1f3fb-200d-1f9bd':0, '1f469-1f3fc-200d-1f9bd':0, '1f469-1f3fd-200d-1f9bd':0, '1f469-1f3fe-200d-1f9bd':0, '1f469-1f3ff-200d-1f9bd':0, '1f469-1f3fb-200d-2695':0, '1f469-1f3fc-200d-2695':0, '1f469-1f3fd-200d-2695':0, '1f469-1f3fe-200d-2695':0, '1f469-1f3ff-200d-2695':0, '1f469-1f3fb-200d-2696':0, '1f469-1f3fc-200d-2696':0, '1f469-1f3fd-200d-2696':0, '1f469-1f3fe-200d-2696':0, '1f469-1f3ff-200d-2696':0, '1f469-1f3fb-200d-2708':0, '1f469-1f3fc-200d-2708':0, '1f469-1f3fd-200d-2708':0, '1f469-1f3fe-200d-2708':0, '1f469-1f3ff-200d-2708':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fb':0, '1f469-1f3fc':0, '1f469-1f3fd':0, '1f469-1f3fe':0, '1f469-1f3ff':0, '1f46b-1f3fb':0, '1f46b-1f3fc':0, '1f46b-1f3fd':0, '1f46b-1f3fe':0, '1f46b-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46c-1f3fb':0, '1f46c-1f3fc':0, '1f46c-1f3fd':0, '1f46c-1f3fe':0, '1f46c-1f3ff':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46d-1f3fb':0, '1f46d-1f3fc':0, '1f46d-1f3fd':0, '1f46d-1f3fe':0, '1f46d-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe':0, '1f46e-1f3fb-200d-2640':0, '1f46e-1f3fc-200d-2640':0, '1f46e-1f3fd-200d-2640':0, '1f46e-1f3fe-200d-2640':0, '1f46e-1f3ff-200d-2640':0, '1f46e-1f3fb-200d-2642':0, '1f46e-1f3fc-200d-2642':0, '1f46e-1f3fd-200d-2642':0, '1f46e-1f3fe-200d-2642':0, '1f46e-1f3ff-200d-2642':0, '1f46e-1f3fb':0, '1f46e-1f3fc':0, '1f46e-1f3fd':0, '1f46e-1f3fe':0, '1f46e-1f3ff':0, '1f470-1f3fb-200d-2640':0, '1f470-1f3fc-200d-2640':0, '1f470-1f3fd-200d-2640':0, '1f470-1f3fe-200d-2640':0, '1f470-1f3ff-200d-2640':0, '1f470-1f3fb-200d-2642':0, '1f470-1f3fc-200d-2642':0, '1f470-1f3fd-200d-2642':0, '1f470-1f3fe-200d-2642':0, '1f470-1f3ff-200d-2642':0, '1f470-1f3fb':0, '1f470-1f3fc':0, '1f470-1f3fd':0, '1f470-1f3fe':0, '1f470-1f3ff':0, '1f471-1f3fb-200d-2640':0, '1f471-1f3fc-200d-2640':0, '1f471-1f3fd-200d-2640':0, '1f471-1f3fe-200d-2640':0, '1f471-1f3ff-200d-2640':0, '1f471-1f3fb-200d-2642':0, '1f471-1f3fc-200d-2642':0, '1f471-1f3fd-200d-2642':0, '1f471-1f3fe-200d-2642':0, '1f471-1f3ff-200d-2642':0, '1f471-1f3fb':0, '1f471-1f3fc':0, '1f471-1f3fd':0, '1f471-1f3fe':0, '1f471-1f3ff':0, '1f472-1f3fb':0, '1f472-1f3fc':0, '1f472-1f3fd':0, '1f472-1f3fe':0, '1f472-1f3ff':0, '1f473-1f3fb-200d-2640':0, '1f473-1f3fc-200d-2640':0, '1f473-1f3fd-200d-2640':0, '1f473-1f3fe-200d-2640':0, '1f473-1f3ff-200d-2640':0, '1f473-1f3fb-200d-2642':0, '1f473-1f3fc-200d-2642':0, '1f473-1f3fd-200d-2642':0, '1f473-1f3fe-200d-2642':0, '1f473-1f3ff-200d-2642':0, '1f473-1f3fb':0, '1f473-1f3fc':0, '1f473-1f3fd':0, '1f473-1f3fe':0, '1f473-1f3ff':0, '1f474-1f3fb':0, '1f474-1f3fc':0, '1f474-1f3fd':0, '1f474-1f3fe':0, '1f474-1f3ff':0, '1f475-1f3fb':0, '1f475-1f3fc':0, '1f475-1f3fd':0, '1f475-1f3fe':0, '1f475-1f3ff':0, '1f476-1f3fb':0, '1f476-1f3fc':0, '1f476-1f3fd':0, '1f476-1f3fe':0, '1f476-1f3ff':0, '1f477-1f3fb-200d-2640':0, '1f477-1f3fc-200d-2640':0, '1f477-1f3fd-200d-2640':0, '1f477-1f3fe-200d-2640':0, '1f477-1f3ff-200d-2640':0, '1f477-1f3fb-200d-2642':0, '1f477-1f3fc-200d-2642':0, '1f477-1f3fd-200d-2642':0, '1f477-1f3fe-200d-2642':0, '1f477-1f3ff-200d-2642':0, '1f477-1f3fb':0, '1f477-1f3fc':0, '1f477-1f3fd':0, '1f477-1f3fe':0, '1f477-1f3ff':0, '1f478-1f3fb':0, '1f478-1f3fc':0, '1f478-1f3fd':0, '1f478-1f3fe':0, '1f478-1f3ff':0, '1f47c-1f3fb':0, '1f47c-1f3fc':0, '1f47c-1f3fd':0, '1f47c-1f3fe':0, '1f47c-1f3ff':0, '1f481-1f3fb-200d-2640':0, '1f481-1f3fc-200d-2640':0, '1f481-1f3fd-200d-2640':0, '1f481-1f3fe-200d-2640':0, '1f481-1f3ff-200d-2640':0, '1f481-1f3fb-200d-2642':0, '1f481-1f3fc-200d-2642':0, '1f481-1f3fd-200d-2642':0, '1f481-1f3fe-200d-2642':0, '1f481-1f3ff-200d-2642':0, '1f481-1f3fb':0, '1f481-1f3fc':0, '1f481-1f3fd':0, '1f481-1f3fe':0, '1f481-1f3ff':0, '1f482-1f3fb-200d-2640':0, '1f482-1f3fc-200d-2640':0, '1f482-1f3fd-200d-2640':0, '1f482-1f3fe-200d-2640':0, '1f482-1f3ff-200d-2640':0, '1f482-1f3fb-200d-2642':0, '1f482-1f3fc-200d-2642':0, '1f482-1f3fd-200d-2642':0, '1f482-1f3fe-200d-2642':0, '1f482-1f3ff-200d-2642':0, '1f482-1f3fb':0, '1f482-1f3fc':0, '1f482-1f3fd':0, '1f482-1f3fe':0, '1f482-1f3ff':0, '1f483-1f3fb':0, '1f483-1f3fc':0, '1f483-1f3fd':0, '1f483-1f3fe':0, '1f483-1f3ff':0, '1f485-1f3fb':0, '1f485-1f3fc':0, '1f485-1f3fd':0, '1f485-1f3fe':0, '1f485-1f3ff':0, '1f486-1f3fb-200d-2640':0, '1f486-1f3fc-200d-2640':0, '1f486-1f3fd-200d-2640':0, '1f486-1f3fe-200d-2640':0, '1f486-1f3ff-200d-2640':0, '1f486-1f3fb-200d-2642':0, '1f486-1f3fc-200d-2642':0, '1f486-1f3fd-200d-2642':0, '1f486-1f3fe-200d-2642':0, '1f486-1f3ff-200d-2642':0, '1f486-1f3fb':0, '1f486-1f3fc':0, '1f486-1f3fd':0, '1f486-1f3fe':0, '1f486-1f3ff':0, '1f487-1f3fb-200d-2640':0, '1f487-1f3fc-200d-2640':0, '1f487-1f3fd-200d-2640':0, '1f487-1f3fe-200d-2640':0, '1f487-1f3ff-200d-2640':0, '1f487-1f3fb-200d-2642':0, '1f487-1f3fc-200d-2642':0, '1f487-1f3fd-200d-2642':0, '1f487-1f3fe-200d-2642':0, '1f487-1f3ff-200d-2642':0, '1f487-1f3fb':0, '1f487-1f3fc':0, '1f487-1f3fd':0, '1f487-1f3fe':0, '1f487-1f3ff':0, '1f48f-1f3fb':0, '1f48f-1f3fc':0, '1f48f-1f3fd':0, '1f48f-1f3fe':0, '1f48f-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f491-1f3fb':0, '1f491-1f3fc':0, '1f491-1f3fd':0, '1f491-1f3fe':0, '1f491-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fe':0, '1f4aa-1f3fb':0, '1f4aa-1f3fc':0, '1f4aa-1f3fd':0, '1f4aa-1f3fe':0, '1f4aa-1f3ff':0, '1f574-1f3fb':0, '1f574-1f3fc':0, '1f574-1f3fd':0, '1f574-1f3fe':0, '1f574-1f3ff':0, '1f575-1f3fb-200d-2640':0, '1f575-1f3fc-200d-2640':0, '1f575-1f3fd-200d-2640':0, '1f575-1f3fe-200d-2640':0, '1f575-1f3ff-200d-2640':0, '1f575-1f3fb-200d-2642':0, '1f575-1f3fc-200d-2642':0, '1f575-1f3fd-200d-2642':0, '1f575-1f3fe-200d-2642':0, '1f575-1f3ff-200d-2642':0, '1f575-1f3fb':0, '1f575-1f3fc':0, '1f575-1f3fd':0, '1f575-1f3fe':0, '1f575-1f3ff':0, '1f57a-1f3fb':0, '1f57a-1f3fc':0, '1f57a-1f3fd':0, '1f57a-1f3fe':0, '1f57a-1f3ff':0, '1f590-1f3fb':0, '1f590-1f3fc':0, '1f590-1f3fd':0, '1f590-1f3fe':0, '1f590-1f3ff':0, '1f595-1f3fb':0, '1f595-1f3fc':0, '1f595-1f3fd':0, '1f595-1f3fe':0, '1f595-1f3ff':0, '1f596-1f3fb':0, '1f596-1f3fc':0, '1f596-1f3fd':0, '1f596-1f3fe':0, '1f596-1f3ff':0, '1f645-1f3fb-200d-2640':0, '1f645-1f3fc-200d-2640':0, '1f645-1f3fd-200d-2640':0, '1f645-1f3fe-200d-2640':0, '1f645-1f3ff-200d-2640':0, '1f645-1f3fb-200d-2642':0, '1f645-1f3fc-200d-2642':0, '1f645-1f3fd-200d-2642':0, '1f645-1f3fe-200d-2642':0, '1f645-1f3ff-200d-2642':0, '1f645-1f3fb':0, '1f645-1f3fc':0, '1f645-1f3fd':0, '1f645-1f3fe':0, '1f645-1f3ff':0, '1f646-1f3fb-200d-2640':0, '1f646-1f3fc-200d-2640':0, '1f646-1f3fd-200d-2640':0, '1f646-1f3fe-200d-2640':0, '1f646-1f3ff-200d-2640':0, '1f646-1f3fb-200d-2642':0, '1f646-1f3fc-200d-2642':0, '1f646-1f3fd-200d-2642':0, '1f646-1f3fe-200d-2642':0, '1f646-1f3ff-200d-2642':0, '1f646-1f3fb':0, '1f646-1f3fc':0, '1f646-1f3fd':0, '1f646-1f3fe':0, '1f646-1f3ff':0, '1f647-1f3fb-200d-2640':0, '1f647-1f3fc-200d-2640':0, '1f647-1f3fd-200d-2640':0, '1f647-1f3fe-200d-2640':0, '1f647-1f3ff-200d-2640':0, '1f647-1f3fb-200d-2642':0, '1f647-1f3fc-200d-2642':0, '1f647-1f3fd-200d-2642':0, '1f647-1f3fe-200d-2642':0, '1f647-1f3ff-200d-2642':0, '1f647-1f3fb':0, '1f647-1f3fc':0, '1f647-1f3fd':0, '1f647-1f3fe':0, '1f647-1f3ff':0, '1f64b-1f3fb-200d-2640':0, '1f64b-1f3fc-200d-2640':0, '1f64b-1f3fd-200d-2640':0, '1f64b-1f3fe-200d-2640':0, '1f64b-1f3ff-200d-2640':0, '1f64b-1f3fb-200d-2642':0, '1f64b-1f3fc-200d-2642':0, '1f64b-1f3fd-200d-2642':0, '1f64b-1f3fe-200d-2642':0, '1f64b-1f3ff-200d-2642':0, '1f64b-1f3fb':0, '1f64b-1f3fc':0, '1f64b-1f3fd':0, '1f64b-1f3fe':0, '1f64b-1f3ff':0, '1f64c-1f3fb':0, '1f64c-1f3fc':0, '1f64c-1f3fd':0, '1f64c-1f3fe':0, '1f64c-1f3ff':0, '1f64d-1f3fb-200d-2640':0, '1f64d-1f3fc-200d-2640':0, '1f64d-1f3fd-200d-2640':0, '1f64d-1f3fe-200d-2640':0, '1f64d-1f3ff-200d-2640':0, '1f64d-1f3fb-200d-2642':0, '1f64d-1f3fc-200d-2642':0, '1f64d-1f3fd-200d-2642':0, '1f64d-1f3fe-200d-2642':0, '1f64d-1f3ff-200d-2642':0, '1f64d-1f3fb':0, '1f64d-1f3fc':0, '1f64d-1f3fd':0, '1f64d-1f3fe':0, '1f64d-1f3ff':0, '1f64e-1f3fb-200d-2640':0, '1f64e-1f3fc-200d-2640':0, '1f64e-1f3fd-200d-2640':0, '1f64e-1f3fe-200d-2640':0, '1f64e-1f3ff-200d-2640':0, '1f64e-1f3fb-200d-2642':0, '1f64e-1f3fc-200d-2642':0, '1f64e-1f3fd-200d-2642':0, '1f64e-1f3fe-200d-2642':0, '1f64e-1f3ff-200d-2642':0, '1f64e-1f3fb':0, '1f64e-1f3fc':0, '1f64e-1f3fd':0, '1f64e-1f3fe':0, '1f64e-1f3ff':0, '1f64f-1f3fb':0, '1f64f-1f3fc':0, '1f64f-1f3fd':0, '1f64f-1f3fe':0, '1f64f-1f3ff':0, '1f6a3-1f3fb-200d-2640':0, '1f6a3-1f3fc-200d-2640':0, '1f6a3-1f3fd-200d-2640':0, '1f6a3-1f3fe-200d-2640':0, '1f6a3-1f3ff-200d-2640':0, '1f6a3-1f3fb-200d-2642':0, '1f6a3-1f3fc-200d-2642':0, '1f6a3-1f3fd-200d-2642':0, '1f6a3-1f3fe-200d-2642':0, '1f6a3-1f3ff-200d-2642':0, '1f6a3-1f3fb':0, '1f6a3-1f3fc':0, '1f6a3-1f3fd':0, '1f6a3-1f3fe':0, '1f6a3-1f3ff':0, '1f6b4-1f3fb-200d-2640':0, '1f6b4-1f3fc-200d-2640':0, '1f6b4-1f3fd-200d-2640':0, '1f6b4-1f3fe-200d-2640':0, '1f6b4-1f3ff-200d-2640':0, '1f6b4-1f3fb-200d-2642':0, '1f6b4-1f3fc-200d-2642':0, '1f6b4-1f3fd-200d-2642':0, '1f6b4-1f3fe-200d-2642':0, '1f6b4-1f3ff-200d-2642':0, '1f6b4-1f3fb':0, '1f6b4-1f3fc':0, '1f6b4-1f3fd':0, '1f6b4-1f3fe':0, '1f6b4-1f3ff':0, '1f6b5-1f3fb-200d-2640':0, '1f6b5-1f3fc-200d-2640':0, '1f6b5-1f3fd-200d-2640':0, '1f6b5-1f3fe-200d-2640':0, '1f6b5-1f3ff-200d-2640':0, '1f6b5-1f3fb-200d-2642':0, '1f6b5-1f3fc-200d-2642':0, '1f6b5-1f3fd-200d-2642':0, '1f6b5-1f3fe-200d-2642':0, '1f6b5-1f3ff-200d-2642':0, '1f6b5-1f3fb':0, '1f6b5-1f3fc':0, '1f6b5-1f3fd':0, '1f6b5-1f3fe':0, '1f6b5-1f3ff':0, '1f6b6-1f3fb-200d-2640':0, '1f6b6-1f3fc-200d-2640':0, '1f6b6-1f3fd-200d-2640':0, '1f6b6-1f3fe-200d-2640':0, '1f6b6-1f3ff-200d-2640':0, '1f6b6-1f3fb-200d-2642':0, '1f6b6-1f3fc-200d-2642':0, '1f6b6-1f3fd-200d-2642':0, '1f6b6-1f3fe-200d-2642':0, '1f6b6-1f3ff-200d-2642':0, '1f6b6-1f3fb':0, '1f6b6-1f3fc':0, '1f6b6-1f3fd':0, '1f6b6-1f3fe':0, '1f6b6-1f3ff':0, '1f6c0-1f3fb':0, '1f6c0-1f3fc':0, '1f6c0-1f3fd':0, '1f6c0-1f3fe':0, '1f6c0-1f3ff':0, '1f6cc-1f3fb':0, '1f6cc-1f3fc':0, '1f6cc-1f3fd':0, '1f6cc-1f3fe':0, '1f6cc-1f3ff':0, '1f90c-1f3fb':0, '1f90c-1f3fc':0, '1f90c-1f3fd':0, '1f90c-1f3fe':0, '1f90c-1f3ff':0, '1f90f-1f3fb':0, '1f90f-1f3fc':0, '1f90f-1f3fd':0, '1f90f-1f3fe':0, '1f90f-1f3ff':0, '1f918-1f3fb':0, '1f918-1f3fc':0, '1f918-1f3fd':0, '1f918-1f3fe':0, '1f918-1f3ff':0, '1f919-1f3fb':0, '1f919-1f3fc':0, '1f919-1f3fd':0, '1f919-1f3fe':0, '1f919-1f3ff':0, '1f91a-1f3fb':0, '1f91a-1f3fc':0, '1f91a-1f3fd':0, '1f91a-1f3fe':0, '1f91a-1f3ff':0, '1f91b-1f3fb':0, '1f91b-1f3fc':0, '1f91b-1f3fd':0, '1f91b-1f3fe':0, '1f91b-1f3ff':0, '1f91c-1f3fb':0, '1f91c-1f3fc':0, '1f91c-1f3fd':0, '1f91c-1f3fe':0, '1f91c-1f3ff':0, '1f91d-1f3fb':0, '1f91d-1f3fc':0, '1f91d-1f3fd':0, '1f91d-1f3fe':0, '1f91d-1f3ff':0, '1f91e-1f3fb':0, '1f91e-1f3fc':0, '1f91e-1f3fd':0, '1f91e-1f3fe':0, '1f91e-1f3ff':0, '1f91f-1f3fb':0, '1f91f-1f3fc':0, '1f91f-1f3fd':0, '1f91f-1f3fe':0, '1f91f-1f3ff':0, '1f926-1f3fb-200d-2640':0, '1f926-1f3fc-200d-2640':0, '1f926-1f3fd-200d-2640':0, '1f926-1f3fe-200d-2640':0, '1f926-1f3ff-200d-2640':0, '1f926-1f3fb-200d-2642':0, '1f926-1f3fc-200d-2642':0, '1f926-1f3fd-200d-2642':0, '1f926-1f3fe-200d-2642':0, '1f926-1f3ff-200d-2642':0, '1f926-1f3fb':0, '1f926-1f3fc':0, '1f926-1f3fd':0, '1f926-1f3fe':0, '1f926-1f3ff':0, '1f930-1f3fb':0, '1f930-1f3fc':0, '1f930-1f3fd':0, '1f930-1f3fe':0, '1f930-1f3ff':0, '1f931-1f3fb':0, '1f931-1f3fc':0, '1f931-1f3fd':0, '1f931-1f3fe':0, '1f931-1f3ff':0, '1f932-1f3fb':0, '1f932-1f3fc':0, '1f932-1f3fd':0, '1f932-1f3fe':0, '1f932-1f3ff':0, '1f933-1f3fb':0, '1f933-1f3fc':0, '1f933-1f3fd':0, '1f933-1f3fe':0, '1f933-1f3ff':0, '1f934-1f3fb':0, '1f934-1f3fc':0, '1f934-1f3fd':0, '1f934-1f3fe':0, '1f934-1f3ff':0, '1f935-1f3fb-200d-2640':0, '1f935-1f3fc-200d-2640':0, '1f935-1f3fd-200d-2640':0, '1f935-1f3fe-200d-2640':0, '1f935-1f3ff-200d-2640':0, '1f935-1f3fb-200d-2642':0, '1f935-1f3fc-200d-2642':0, '1f935-1f3fd-200d-2642':0, '1f935-1f3fe-200d-2642':0, '1f935-1f3ff-200d-2642':0, '1f935-1f3fb':0, '1f935-1f3fc':0, '1f935-1f3fd':0, '1f935-1f3fe':0, '1f935-1f3ff':0, '1f936-1f3fb':0, '1f936-1f3fc':0, '1f936-1f3fd':0, '1f936-1f3fe':0, '1f936-1f3ff':0, '1f937-1f3fb-200d-2640':0, '1f937-1f3fc-200d-2640':0, '1f937-1f3fd-200d-2640':0, '1f937-1f3fe-200d-2640':0, '1f937-1f3ff-200d-2640':0, '1f937-1f3fb-200d-2642':0, '1f937-1f3fc-200d-2642':0, '1f937-1f3fd-200d-2642':0, '1f937-1f3fe-200d-2642':0, '1f937-1f3ff-200d-2642':0, '1f937-1f3fb':0, '1f937-1f3fc':0, '1f937-1f3fd':0, '1f937-1f3fe':0, '1f937-1f3ff':0, '1f938-1f3fb-200d-2640':0, '1f938-1f3fc-200d-2640':0, '1f938-1f3fd-200d-2640':0, '1f938-1f3fe-200d-2640':0, '1f938-1f3ff-200d-2640':0, '1f938-1f3fb-200d-2642':0, '1f938-1f3fc-200d-2642':0, '1f938-1f3fd-200d-2642':0, '1f938-1f3fe-200d-2642':0, '1f938-1f3ff-200d-2642':0, '1f938-1f3fb':0, '1f938-1f3fc':0, '1f938-1f3fd':0, '1f938-1f3fe':0, '1f938-1f3ff':0, '1f939-1f3fb-200d-2640':0, '1f939-1f3fc-200d-2640':0, '1f939-1f3fd-200d-2640':0, '1f939-1f3fe-200d-2640':0, '1f939-1f3ff-200d-2640':0, '1f939-1f3fb-200d-2642':0, '1f939-1f3fc-200d-2642':0, '1f939-1f3fd-200d-2642':0, '1f939-1f3fe-200d-2642':0, '1f939-1f3ff-200d-2642':0, '1f939-1f3fb':0, '1f939-1f3fc':0, '1f939-1f3fd':0, '1f939-1f3fe':0, '1f939-1f3ff':0, '1f93d-1f3fb-200d-2640':0, '1f93d-1f3fc-200d-2640':0, '1f93d-1f3fd-200d-2640':0, '1f93d-1f3fe-200d-2640':0, '1f93d-1f3ff-200d-2640':0, '1f93d-1f3fb-200d-2642':0, '1f93d-1f3fc-200d-2642':0, '1f93d-1f3fd-200d-2642':0, '1f93d-1f3fe-200d-2642':0, '1f93d-1f3ff-200d-2642':0, '1f93d-1f3fb':0, '1f93d-1f3fc':0, '1f93d-1f3fd':0, '1f93d-1f3fe':0, '1f93d-1f3ff':0, '1f93e-1f3fb-200d-2640':0, '1f93e-1f3fc-200d-2640':0, '1f93e-1f3fd-200d-2640':0, '1f93e-1f3fe-200d-2640':0, '1f93e-1f3ff-200d-2640':0, '1f93e-1f3fb-200d-2642':0, '1f93e-1f3fc-200d-2642':0, '1f93e-1f3fd-200d-2642':0, '1f93e-1f3fe-200d-2642':0, '1f93e-1f3ff-200d-2642':0, '1f93e-1f3fb':0, '1f93e-1f3fc':0, '1f93e-1f3fd':0, '1f93e-1f3fe':0, '1f93e-1f3ff':0, '1f977-1f3fb':0, '1f977-1f3fc':0, '1f977-1f3fd':0, '1f977-1f3fe':0, '1f977-1f3ff':0, '1f9b5-1f3fb':0, '1f9b5-1f3fc':0, '1f9b5-1f3fd':0, '1f9b5-1f3fe':0, '1f9b5-1f3ff':0, '1f9b6-1f3fb':0, '1f9b6-1f3fc':0, '1f9b6-1f3fd':0, '1f9b6-1f3fe':0, '1f9b6-1f3ff':0, '1f9b8-1f3fb-200d-2640':0, '1f9b8-1f3fc-200d-2640':0, '1f9b8-1f3fd-200d-2640':0, '1f9b8-1f3fe-200d-2640':0, '1f9b8-1f3ff-200d-2640':0, '1f9b8-1f3fb-200d-2642':0, '1f9b8-1f3fc-200d-2642':0, '1f9b8-1f3fd-200d-2642':0, '1f9b8-1f3fe-200d-2642':0, '1f9b8-1f3ff-200d-2642':0, '1f9b8-1f3fb':0, '1f9b8-1f3fc':0, '1f9b8-1f3fd':0, '1f9b8-1f3fe':0, '1f9b8-1f3ff':0, '1f9b9-1f3fb-200d-2640':0, '1f9b9-1f3fc-200d-2640':0, '1f9b9-1f3fd-200d-2640':0, '1f9b9-1f3fe-200d-2640':0, '1f9b9-1f3ff-200d-2640':0, '1f9b9-1f3fb-200d-2642':0, '1f9b9-1f3fc-200d-2642':0, '1f9b9-1f3fd-200d-2642':0, '1f9b9-1f3fe-200d-2642':0, '1f9b9-1f3ff-200d-2642':0, '1f9b9-1f3fb':0, '1f9b9-1f3fc':0, '1f9b9-1f3fd':0, '1f9b9-1f3fe':0, '1f9b9-1f3ff':0, '1f9bb-1f3fb':0, '1f9bb-1f3fc':0, '1f9bb-1f3fd':0, '1f9bb-1f3fe':0, '1f9bb-1f3ff':0, '1f9cd-1f3fb-200d-2640':0, '1f9cd-1f3fc-200d-2640':0, '1f9cd-1f3fd-200d-2640':0, '1f9cd-1f3fe-200d-2640':0, '1f9cd-1f3ff-200d-2640':0, '1f9cd-1f3fb-200d-2642':0, '1f9cd-1f3fc-200d-2642':0, '1f9cd-1f3fd-200d-2642':0, '1f9cd-1f3fe-200d-2642':0, '1f9cd-1f3ff-200d-2642':0, '1f9cd-1f3fb':0, '1f9cd-1f3fc':0, '1f9cd-1f3fd':0, '1f9cd-1f3fe':0, '1f9cd-1f3ff':0, '1f9ce-1f3fb-200d-2640':0, '1f9ce-1f3fc-200d-2640':0, '1f9ce-1f3fd-200d-2640':0, '1f9ce-1f3fe-200d-2640':0, '1f9ce-1f3ff-200d-2640':0, '1f9ce-1f3fb-200d-2642':0, '1f9ce-1f3fc-200d-2642':0, '1f9ce-1f3fd-200d-2642':0, '1f9ce-1f3fe-200d-2642':0, '1f9ce-1f3ff-200d-2642':0, '1f9ce-1f3fb':0, '1f9ce-1f3fc':0, '1f9ce-1f3fd':0, '1f9ce-1f3fe':0, '1f9ce-1f3ff':0, '1f9cf-1f3fb-200d-2640':0, '1f9cf-1f3fc-200d-2640':0, '1f9cf-1f3fd-200d-2640':0, '1f9cf-1f3fe-200d-2640':0, '1f9cf-1f3ff-200d-2640':0, '1f9cf-1f3fb-200d-2642':0, '1f9cf-1f3fc-200d-2642':0, '1f9cf-1f3fd-200d-2642':0, '1f9cf-1f3fe-200d-2642':0, '1f9cf-1f3ff-200d-2642':0, '1f9cf-1f3fb':0, '1f9cf-1f3fc':0, '1f9cf-1f3fd':0, '1f9cf-1f3fe':0, '1f9cf-1f3ff':0, '1f9d1-1f3fb-200d-1f33e':0, '1f9d1-1f3fc-200d-1f33e':0, '1f9d1-1f3fd-200d-1f33e':0, '1f9d1-1f3fe-200d-1f33e':0, '1f9d1-1f3ff-200d-1f33e':0, '1f9d1-1f3fb-200d-1f373':0, '1f9d1-1f3fc-200d-1f373':0, '1f9d1-1f3fd-200d-1f373':0, '1f9d1-1f3fe-200d-1f373':0, '1f9d1-1f3ff-200d-1f373':0, '1f9d1-1f3fb-200d-1f37c':0, '1f9d1-1f3fc-200d-1f37c':0, '1f9d1-1f3fd-200d-1f37c':0, '1f9d1-1f3fe-200d-1f37c':0, '1f9d1-1f3ff-200d-1f37c':0, '1f9d1-1f3fb-200d-1f384':0, '1f9d1-1f3fc-200d-1f384':0, '1f9d1-1f3fd-200d-1f384':0, '1f9d1-1f3fe-200d-1f384':0, '1f9d1-1f3ff-200d-1f384':0, '1f9d1-1f3fb-200d-1f393':0, '1f9d1-1f3fc-200d-1f393':0, '1f9d1-1f3fd-200d-1f393':0, '1f9d1-1f3fe-200d-1f393':0, '1f9d1-1f3ff-200d-1f393':0, '1f9d1-1f3fb-200d-1f3a4':0, '1f9d1-1f3fc-200d-1f3a4':0, '1f9d1-1f3fd-200d-1f3a4':0, '1f9d1-1f3fe-200d-1f3a4':0, '1f9d1-1f3ff-200d-1f3a4':0, '1f9d1-1f3fb-200d-1f3a8':0, '1f9d1-1f3fc-200d-1f3a8':0, '1f9d1-1f3fd-200d-1f3a8':0, '1f9d1-1f3fe-200d-1f3a8':0, '1f9d1-1f3ff-200d-1f3a8':0, '1f9d1-1f3fb-200d-1f3eb':0, '1f9d1-1f3fc-200d-1f3eb':0, '1f9d1-1f3fd-200d-1f3eb':0, '1f9d1-1f3fe-200d-1f3eb':0, '1f9d1-1f3ff-200d-1f3eb':0, '1f9d1-1f3fb-200d-1f3ed':0, '1f9d1-1f3fc-200d-1f3ed':0, '1f9d1-1f3fd-200d-1f3ed':0, '1f9d1-1f3fe-200d-1f3ed':0, '1f9d1-1f3ff-200d-1f3ed':0, '1f9d1-1f3fb-200d-1f4bb':0, '1f9d1-1f3fc-200d-1f4bb':0, '1f9d1-1f3fd-200d-1f4bb':0, '1f9d1-1f3fe-200d-1f4bb':0, '1f9d1-1f3ff-200d-1f4bb':0, '1f9d1-1f3fb-200d-1f4bc':0, '1f9d1-1f3fc-200d-1f4bc':0, '1f9d1-1f3fd-200d-1f4bc':0, '1f9d1-1f3fe-200d-1f4bc':0, '1f9d1-1f3ff-200d-1f4bc':0, '1f9d1-1f3fb-200d-1f527':0, '1f9d1-1f3fc-200d-1f527':0, '1f9d1-1f3fd-200d-1f527':0, '1f9d1-1f3fe-200d-1f527':0, '1f9d1-1f3ff-200d-1f527':0, '1f9d1-1f3fb-200d-1f52c':0, '1f9d1-1f3fc-200d-1f52c':0, '1f9d1-1f3fd-200d-1f52c':0, '1f9d1-1f3fe-200d-1f52c':0, '1f9d1-1f3ff-200d-1f52c':0, '1f9d1-1f3fb-200d-1f680':0, '1f9d1-1f3fc-200d-1f680':0, '1f9d1-1f3fd-200d-1f680':0, '1f9d1-1f3fe-200d-1f680':0, '1f9d1-1f3ff-200d-1f680':0, '1f9d1-1f3fb-200d-1f692':0, '1f9d1-1f3fc-200d-1f692':0, '1f9d1-1f3fd-200d-1f692':0, '1f9d1-1f3fe-200d-1f692':0, '1f9d1-1f3ff-200d-1f692':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fb-200d-1f9af':0, '1f9d1-1f3fc-200d-1f9af':0, '1f9d1-1f3fd-200d-1f9af':0, '1f9d1-1f3fe-200d-1f9af':0, '1f9d1-1f3ff-200d-1f9af':0, '1f9d1-1f3fb-200d-1f9b0':0, '1f9d1-1f3fc-200d-1f9b0':0, '1f9d1-1f3fd-200d-1f9b0':0, '1f9d1-1f3fe-200d-1f9b0':0, '1f9d1-1f3ff-200d-1f9b0':0, '1f9d1-1f3fb-200d-1f9b1':0, '1f9d1-1f3fc-200d-1f9b1':0, '1f9d1-1f3fd-200d-1f9b1':0, '1f9d1-1f3fe-200d-1f9b1':0, '1f9d1-1f3ff-200d-1f9b1':0, '1f9d1-1f3fb-200d-1f9b2':0, '1f9d1-1f3fc-200d-1f9b2':0, '1f9d1-1f3fd-200d-1f9b2':0, '1f9d1-1f3fe-200d-1f9b2':0, '1f9d1-1f3ff-200d-1f9b2':0, '1f9d1-1f3fb-200d-1f9b3':0, '1f9d1-1f3fc-200d-1f9b3':0, '1f9d1-1f3fd-200d-1f9b3':0, '1f9d1-1f3fe-200d-1f9b3':0, '1f9d1-1f3ff-200d-1f9b3':0, '1f9d1-1f3fb-200d-1f9bc':0, '1f9d1-1f3fc-200d-1f9bc':0, '1f9d1-1f3fd-200d-1f9bc':0, '1f9d1-1f3fe-200d-1f9bc':0, '1f9d1-1f3ff-200d-1f9bc':0, '1f9d1-1f3fb-200d-1f9bd':0, '1f9d1-1f3fc-200d-1f9bd':0, '1f9d1-1f3fd-200d-1f9bd':0, '1f9d1-1f3fe-200d-1f9bd':0, '1f9d1-1f3ff-200d-1f9bd':0, '1f9d1-1f3fb-200d-2695':0, '1f9d1-1f3fc-200d-2695':0, '1f9d1-1f3fd-200d-2695':0, '1f9d1-1f3fe-200d-2695':0, '1f9d1-1f3ff-200d-2695':0, '1f9d1-1f3fb-200d-2696':0, '1f9d1-1f3fc-200d-2696':0, '1f9d1-1f3fd-200d-2696':0, '1f9d1-1f3fe-200d-2696':0, '1f9d1-1f3ff-200d-2696':0, '1f9d1-1f3fb-200d-2708':0, '1f9d1-1f3fc-200d-2708':0, '1f9d1-1f3fd-200d-2708':0, '1f9d1-1f3fe-200d-2708':0, '1f9d1-1f3ff-200d-2708':0, '1f9d1-1f3fb':0, '1f9d1-1f3fc':0, '1f9d1-1f3fd':0, '1f9d1-1f3fe':0, '1f9d1-1f3ff':0, '1f9d2-1f3fb':0, '1f9d2-1f3fc':0, '1f9d2-1f3fd':0, '1f9d2-1f3fe':0, '1f9d2-1f3ff':0, '1f9d3-1f3fb':0, '1f9d3-1f3fc':0, '1f9d3-1f3fd':0, '1f9d3-1f3fe':0, '1f9d3-1f3ff':0, '1f9d4-1f3fb-200d-2640':0, '1f9d4-1f3fc-200d-2640':0, '1f9d4-1f3fd-200d-2640':0, '1f9d4-1f3fe-200d-2640':0, '1f9d4-1f3ff-200d-2640':0, '1f9d4-1f3fb-200d-2642':0, '1f9d4-1f3fc-200d-2642':0, '1f9d4-1f3fd-200d-2642':0, '1f9d4-1f3fe-200d-2642':0, '1f9d4-1f3ff-200d-2642':0, '1f9d4-1f3fb':0, '1f9d4-1f3fc':0, '1f9d4-1f3fd':0, '1f9d4-1f3fe':0, '1f9d4-1f3ff':0, '1f9d5-1f3fb':0, '1f9d5-1f3fc':0, '1f9d5-1f3fd':0, '1f9d5-1f3fe':0, '1f9d5-1f3ff':0, '1f9d6-1f3fb-200d-2640':0, '1f9d6-1f3fc-200d-2640':0, '1f9d6-1f3fd-200d-2640':0, '1f9d6-1f3fe-200d-2640':0, '1f9d6-1f3ff-200d-2640':0, '1f9d6-1f3fb-200d-2642':0, '1f9d6-1f3fc-200d-2642':0, '1f9d6-1f3fd-200d-2642':0, '1f9d6-1f3fe-200d-2642':0, '1f9d6-1f3ff-200d-2642':0, '1f9d6-1f3fb':0, '1f9d6-1f3fc':0, '1f9d6-1f3fd':0, '1f9d6-1f3fe':0, '1f9d6-1f3ff':0, '1f9d7-1f3fb-200d-2640':0, '1f9d7-1f3fc-200d-2640':0, '1f9d7-1f3fd-200d-2640':0, '1f9d7-1f3fe-200d-2640':0, '1f9d7-1f3ff-200d-2640':0, '1f9d7-1f3fb-200d-2642':0, '1f9d7-1f3fc-200d-2642':0, '1f9d7-1f3fd-200d-2642':0, '1f9d7-1f3fe-200d-2642':0, '1f9d7-1f3ff-200d-2642':0, '1f9d7-1f3fb':0, '1f9d7-1f3fc':0, '1f9d7-1f3fd':0, '1f9d7-1f3fe':0, '1f9d7-1f3ff':0, '1f9d8-1f3fb-200d-2640':0, '1f9d8-1f3fc-200d-2640':0, '1f9d8-1f3fd-200d-2640':0, '1f9d8-1f3fe-200d-2640':0, '1f9d8-1f3ff-200d-2640':0, '1f9d8-1f3fb-200d-2642':0, '1f9d8-1f3fc-200d-2642':0, '1f9d8-1f3fd-200d-2642':0, '1f9d8-1f3fe-200d-2642':0, '1f9d8-1f3ff-200d-2642':0, '1f9d8-1f3fb':0, '1f9d8-1f3fc':0, '1f9d8-1f3fd':0, '1f9d8-1f3fe':0, '1f9d8-1f3ff':0, '1f9d9-1f3fb-200d-2640':0, '1f9d9-1f3fc-200d-2640':0, '1f9d9-1f3fd-200d-2640':0, '1f9d9-1f3fe-200d-2640':0, '1f9d9-1f3ff-200d-2640':0, '1f9d9-1f3fb-200d-2642':0, '1f9d9-1f3fc-200d-2642':0, '1f9d9-1f3fd-200d-2642':0, '1f9d9-1f3fe-200d-2642':0, '1f9d9-1f3ff-200d-2642':0, '1f9d9-1f3fb':0, '1f9d9-1f3fc':0, '1f9d9-1f3fd':0, '1f9d9-1f3fe':0, '1f9d9-1f3ff':0, '1f9da-1f3fb-200d-2640':0, '1f9da-1f3fc-200d-2640':0, '1f9da-1f3fd-200d-2640':0, '1f9da-1f3fe-200d-2640':0, '1f9da-1f3ff-200d-2640':0, '1f9da-1f3fb-200d-2642':0, '1f9da-1f3fc-200d-2642':0, '1f9da-1f3fd-200d-2642':0, '1f9da-1f3fe-200d-2642':0, '1f9da-1f3ff-200d-2642':0, '1f9da-1f3fb':0, '1f9da-1f3fc':0, '1f9da-1f3fd':0, '1f9da-1f3fe':0, '1f9da-1f3ff':0, '1f9db-1f3fb-200d-2640':0, '1f9db-1f3fc-200d-2640':0, '1f9db-1f3fd-200d-2640':0, '1f9db-1f3fe-200d-2640':0, '1f9db-1f3ff-200d-2640':0, '1f9db-1f3fb-200d-2642':0, '1f9db-1f3fc-200d-2642':0, '1f9db-1f3fd-200d-2642':0, '1f9db-1f3fe-200d-2642':0, '1f9db-1f3ff-200d-2642':0, '1f9db-1f3fb':0, '1f9db-1f3fc':0, '1f9db-1f3fd':0, '1f9db-1f3fe':0, '1f9db-1f3ff':0, '1f9dc-1f3fb-200d-2640':0, '1f9dc-1f3fc-200d-2640':0, '1f9dc-1f3fd-200d-2640':0, '1f9dc-1f3fe-200d-2640':0, '1f9dc-1f3ff-200d-2640':0, '1f9dc-1f3fb-200d-2642':0, '1f9dc-1f3fc-200d-2642':0, '1f9dc-1f3fd-200d-2642':0, '1f9dc-1f3fe-200d-2642':0, '1f9dc-1f3ff-200d-2642':0, '1f9dc-1f3fb':0, '1f9dc-1f3fc':0, '1f9dc-1f3fd':0, '1f9dc-1f3fe':0, '1f9dc-1f3ff':0, '1f9dd-1f3fb-200d-2640':0, '1f9dd-1f3fc-200d-2640':0, '1f9dd-1f3fd-200d-2640':0, '1f9dd-1f3fe-200d-2640':0, '1f9dd-1f3ff-200d-2640':0, '1f9dd-1f3fb-200d-2642':0, '1f9dd-1f3fc-200d-2642':0, '1f9dd-1f3fd-200d-2642':0, '1f9dd-1f3fe-200d-2642':0, '1f9dd-1f3ff-200d-2642':0, '1f9dd-1f3fb':0, '1f9dd-1f3fc':0, '1f9dd-1f3fd':0, '1f9dd-1f3fe':0, '1f9dd-1f3ff':0, '261d-1f3fb':0, '261d-1f3fc':0, '261d-1f3fd':0, '261d-1f3fe':0, '261d-1f3ff':0, '26f9-1f3fb-200d-2640':0, '26f9-1f3fc-200d-2640':0, '26f9-1f3fd-200d-2640':0, '26f9-1f3fe-200d-2640':0, '26f9-1f3ff-200d-2640':0, '26f9-1f3fb-200d-2642':0, '26f9-1f3fc-200d-2642':0, '26f9-1f3fd-200d-2642':0, '26f9-1f3fe-200d-2642':0, '26f9-1f3ff-200d-2642':0, '26f9-1f3fb':0, '26f9-1f3fc':0, '26f9-1f3fd':0, '26f9-1f3fe':0, '26f9-1f3ff':0, '270a-1f3fb':0, '270a-1f3fc':0, '270a-1f3fd':0, '270a-1f3fe':0, '270a-1f3ff':0, '270b-1f3fb':0, '270b-1f3fc':0, '270b-1f3fd':0, '270b-1f3fe':0, '270b-1f3ff':0, '270c-1f3fb':0, '270c-1f3fc':0, '270c-1f3fd':0, '270c-1f3fe':0, '270c-1f3ff':0, '270d-1f3fb':0, '270d-1f3fc':0, '270d-1f3fd':0, '270d-1f3fe':0, '270d-1f3ff':0}};\n\nconst Emoji: {[emoji: string]: number} = EmojiVersions[''];\nfor(const version in EmojiVersions) {\n  if(version) {\n    Object.assign(Emoji, EmojiVersions[version as EMOJI_VERSION]);\n  }\n}\n\nexport default Emoji;\n\n/* Emoji[\"00a9-fe0f\"] = 6362;\nEmoji[\"00ae-fe0f\"] = 6363;\nEmoji[\"2122-fe0f\"] = 6364; */\n","// https://github.com/twitter/twemoji-parser/blob/master/src/lib/regex.js\n\nexport function encodeEmoji(emojiText: string) {\n  const codepoints = toCodePoints(removeVS16s(emojiText)).join('-');\n  return codepoints;\n}\n\nconst vs16RegExp = /\\uFE0F/g;\n// avoid using a string literal like '\\u200D' here because minifiers expand it inline\nconst zeroWidthJoiner = String.fromCharCode(0x200d);\n\nconst removeVS16s = (rawEmoji: string) => (rawEmoji.indexOf(zeroWidthJoiner) < 0 ? rawEmoji.replace(vs16RegExp, '') : rawEmoji);\n\nexport function toCodePoints(unicodeSurrogates: string): Array<string> {\n  const points = [];\n  let char = 0;\n  let previous = 0;\n  let i = 0;\n  while(i < unicodeSurrogates.length) {\n    char = unicodeSurrogates.charCodeAt(i++);\n    if(previous) {\n      points.push((0x10000 + ((previous - 0xd800) << 10) + (char - 0xdc00)).toString(16));\n      previous = 0;\n    } else if(char > 0xd800 && char <= 0xdbff) {\n      previous = char;\n    } else {\n      points.push(char.toString(16));\n    }\n  }\n\n  if(points.length && points[0].length === 2) {\n    points[0] = '00' + points[0];\n  }\n\n  return points;\n}\n\nexport function getEmojiToneIndex(input: string) {\n  const match = input.match(/[\\uDFFB-\\uDFFF]/);\n  return match ? 5 - (57343 - match[0].charCodeAt(0)) : 0;\n}\n\nconst VIRTUAL_COUNTRIES_EMOJIS: Map<string, string> = new Map([\n  ['FT', '🏴‍☠']\n]);\n\nexport function getCountryEmoji(iso2: string) {\n  return VIRTUAL_COUNTRIES_EMOJIS.get(iso2) ??\n    String.fromCharCode(55356, 56741 + iso2.charCodeAt(0), 55356, 56741 + iso2.charCodeAt(1));\n}\n\nexport function emojiFromCodePoints(codePoints: string) {\n  return codePoints.split('-').reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\n}\n","import Emoji from '../../config/emoji';\nimport {encodeEmoji} from '../../vendor/emoji';\n\nexport default function getEmojiUnified(emojiCode: string) {\n  const unified = encodeEmoji(emojiCode).replace(/-?fe0f/g, '');\n\n  /* if(unified === '1f441-200d-1f5e8') {\n    //unified = '1f441-fe0f-200d-1f5e8-fe0f';\n    unified = '1f441-fe0f-200d-1f5e8';\n  } */\n\n  if(!Emoji.hasOwnProperty(unified)\n  // && !emojiData.hasOwnProperty(unified.replace(/-?fe0f$/, ''))\n  ) {\n    // console.error('lol', unified);\n    return;\n  }\n\n  return unified;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {EMAIL_REG_EXP, FULL_REG_EXP} from '.';\nimport TLD from '../../config/tld';\nimport {MessageEntity} from '../../layer';\nimport checkBrackets from './checkBrackets';\nimport getEmojiUnified from './getEmojiUnified';\n\nexport default function parseEntities(text: string) {\n  let match: RegExpMatchArray;\n  let raw = text;\n  const entities: MessageEntity[] = [];\n  let matchIndex;\n  let rawOffset = 0;\n  // var start = tsNow()\n  FULL_REG_EXP.lastIndex = 0;\n  while(match = raw.match(FULL_REG_EXP)) {\n    matchIndex = rawOffset + match.index;\n\n    // console.log('parseEntities match:', match);\n\n    if(match[3]) { // mentions\n      entities.push({\n        _: 'messageEntityMention',\n        offset: matchIndex + match[1].length,\n        length: match[2].length + match[3].length\n      });\n    } else if(match[4]) {\n      if(EMAIL_REG_EXP.test(match[4])) { // email\n        entities.push({\n          _: 'messageEntityEmail',\n          offset: matchIndex,\n          length: match[4].length\n        });\n      } else {\n        let url: string;\n        let protocol = match[5];\n        const tld = match[6];\n        // let excluded = '';\n        if(tld) { // URL\n          if(!protocol && (tld.substr(0, 4) === 'xn--' || TLD.indexOf(tld.toLowerCase()) !== -1)) {\n            protocol = 'http://';\n          }\n\n          if(protocol) {\n            const balanced = checkBrackets(match[4]);\n            if(balanced.length !== match[4].length) {\n              // excluded = match[4].substring(balanced.length);\n              match[4] = balanced;\n            }\n\n            url = (match[5] ? '' : protocol) + match[4];\n          }\n        } else { // IP address\n          url = (match[5] ? '' : 'http://') + match[4];\n        }\n\n        if(url) {\n          entities.push({\n            _: 'messageEntityUrl',\n            offset: matchIndex,\n            length: match[4].length\n          });\n        }\n      }\n    } else if(match[7]) { // New line\n      entities.push({\n        _: 'messageEntityLinebreak',\n        offset: matchIndex,\n        length: 1\n      });\n    } else if(match[8]) { // Emoji\n      const unified = getEmojiUnified(match[8]);\n      if(unified) {\n        entities.push({\n          _: 'messageEntityEmoji',\n          offset: matchIndex,\n          length: match[8].length,\n          unicode: unified\n        });\n      }\n    } else if(match[11]) { // Hashtag\n      entities.push({\n        _: 'messageEntityHashtag',\n        offset: matchIndex + (match[10] ? match[10].length : 0),\n        length: match[11].length\n      });\n    } else if(match[13]) { // Bot command\n      entities.push({\n        _: 'messageEntityBotCommand',\n        offset: matchIndex + (match[11] ? match[11].length : 0) + (match[12] ? match[12].length : 0),\n        length: 1 + match[13].length + (match[14] ? 1 + match[14].length : 0),\n        unsafe: true\n      });\n    } else if(match[16]) { // Media timestamp\n      const timestamp = match[16];\n      const splitted: string[] = timestamp.split(':');\n      const splittedLength = splitted.length;\n      const hours = splittedLength === 3 ? +splitted[0] : 0;\n      const minutes = +splitted[splittedLength === 3 ? 1 : 0];\n      const seconds = +splitted[splittedLength - 1];\n      entities.push({\n        _: 'messageEntityTimestamp',\n        offset: matchIndex + (/\\D/.test(match[0][0]) ? 1 : 0),\n        length: timestamp.length,\n        raw: timestamp,\n        time: hours * 3600 + minutes * 60 + seconds\n      });\n    }\n\n    raw = raw.substr(match.index + match[0].length);\n    rawOffset += match.index + match[0].length;\n  }\n\n  // if (entities.length) {\n  //   console.log('parse entities', text, entities.slice())\n  // }\n  return entities;\n}\n","import {MessageEntity} from '../../layer';\nimport fixEmoji from './fixEmoji';\nimport mergeEntities from './mergeEntities';\nimport parseEntities from './parseEntities';\n\nexport default function wrapMessageEntities(message: string, entities: MessageEntity[] = []) {\n  message = fixEmoji(message, entities);\n\n  const myEntities = parseEntities(message);\n  const totalEntities = mergeEntities(entities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n  return {\n    message,\n    myEntities,\n    totalEntities\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\nimport type {MediaSize} from '../../helpers/mediaSize';\nimport type {Progress} from './appDownloadManager';\nimport type {VIDEO_MIME_TYPE} from '../../environment/videoMimeTypesSupport';\nimport type {Mirrors} from '../mtproto/mtprotoworker';\nimport LazyLoadQueueBase from '../../components/lazyLoadQueueBase';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport tsNow from '../../helpers/tsNow';\nimport {randomLong} from '../../helpers/random';\nimport {Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer, ReactionCount, MessagePeerReaction, MessagesSearchCounter, Peer, MessageReactions, Document, InputFile, Reaction, ForumTopic as MTForumTopic, MessagesForumTopics, MessagesGetReplies, MessagesGetHistory, MessagesAffectedHistory, UrlAuthResult, MessagesTranscribedAudio, ReadParticipantDate, WebDocument, MessagesSearch, MessagesSearchGlobal, InputReplyTo, InputUser, MessagesSendMessage, MessagesSendMedia} from '../../layer';\nimport {ArgumentTypes, InvokeApiOptions, Modify} from '../../types';\nimport {logger, LogTypes} from '../logger';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport DialogsStorage, {GLOBAL_FOLDER_ID} from '../storages/dialogs';\nimport {ChatRights} from './appChatsManager';\nimport {MyDocument} from './appDocsManager';\nimport {MyPhoto} from './appPhotosManager';\nimport {getFileNameByLocation} from '../../helpers/fileName';\nimport DEBUG from '../../config/debug';\nimport SlicedArray, {Slice, SliceEnd} from '../../helpers/slicedArray';\nimport {FOLDER_ID_ALL, GENERAL_TOPIC_ID, MUTE_UNTIL, NULL_PEER_ID, REAL_FOLDER_ID, REPLIES_HIDDEN_CHANNEL_ID, REPLIES_PEER_ID, SERVICE_PEER_ID, THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\n// import telegramMeWebManager from '../mtproto/telegramMeWebManager';\nimport {getMiddleware} from '../../helpers/middleware';\nimport assumeType from '../../helpers/assumeType';\nimport copy from '../../helpers/object/copy';\nimport getObjectKeysAndSort from '../../helpers/object/getObjectKeysAndSort';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport splitStringByLength from '../../helpers/string/splitStringByLength';\nimport debounce from '../../helpers/schedulers/debounce';\nimport {AppManager} from './manager';\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\nimport getPhotoDownloadOptions from './utils/photos/getPhotoDownloadOptions';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport filterMessagesByInputFilter from './utils/messages/filterMessagesByInputFilter';\nimport ctx from '../../environment/ctx';\nimport {getEnvironment} from '../../environment/utils';\nimport getDialogIndex from './utils/dialogs/getDialogIndex';\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\nimport getDocumentInputFileName from './utils/docs/getDocumentInputFileName';\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\nimport noop from '../../helpers/noop';\nimport appTabsManager from './appTabsManager';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getAlbumText from './utils/messages/getAlbumText';\nimport pause from '../../helpers/schedulers/pause';\nimport makeError from '../../helpers/makeError';\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport reactionsEqual from './utils/reactions/reactionsEqual';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\nimport {BroadcastEvents} from '../rootScope';\nimport setBooleanFlag from '../../helpers/object/setBooleanFlag';\nimport getMessageThreadId from './utils/messages/getMessageThreadId';\nimport getInputReplyTo from './utils/misc/getInputReplyTo';\nimport callbackify from '../../helpers/callbackify';\nimport wrapMessageEntities from '../richTextProcessor/wrapMessageEntities';\nimport isObject from '../../helpers/object/isObject';\nimport isLegacyMessageId from './utils/messageId/isLegacyMessageId';\nimport {joinDeepPath} from '../../helpers/object/setDeepProperty';\n\n// console.trace('include');\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\n\nconst APITIMEOUT = 0;\nconst DO_NOT_READ_HISTORY = false;\nconst DO_NOT_SEND_MESSAGES = false;\nconst GLOBAL_HISTORY_PEER_ID = NULL_PEER_ID;\n\nexport type SendFileDetails = {\n  file: File | Blob | MyDocument,\n} & Partial<{\n  duration: number,\n  width: number,\n  height: number,\n  objectURL: string,\n  thumb: {\n    blob: Blob,\n    url: string,\n    size: MediaSize\n  },\n  strippedBytes: PhotoSize.photoStrippedSize['bytes'],\n  spoiler: boolean\n}>;\n\nexport type HistoryStorage = {\n  count: number | null,\n  history: SlicedArray<number>,\n\n  maxId?: number,\n  readPromise?: Promise<void>,\n  readMaxId?: number,\n  readOutboxMaxId?: number,\n  triedToReadMaxId?: number,\n\n  maxOutId?: number,\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>,\n\n  type: 'history' | 'replies' | 'search',\n};\n\nexport type HistoryResult = {\n  count: number,\n  history: number[],\n  isEnd: ReturnType<Slice<number>['getEnds']>,\n  offsetIdOffset?: number,\n  nextRate?: number,\n  messages?: MyMessage[]\n};\n\nexport type Dialog = MTDialog.dialog;\nexport type ForumTopic = MTForumTopic.forumTopic;\n\nexport type MyMessage = Message.message | Message.messageService;\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty'\n  | 'inputMessagesFilterPhotos'\n  | 'inputMessagesFilterPhotoVideo'\n  | 'inputMessagesFilterVideo'\n  | 'inputMessagesFilterDocument'\n  | 'inputMessagesFilterVoice'\n  | 'inputMessagesFilterRoundVoice'\n  | 'inputMessagesFilterRoundVideo'\n  | 'inputMessagesFilterMusic'\n  | 'inputMessagesFilterUrl'\n  | 'inputMessagesFilterMyMentions'\n  | 'inputMessagesFilterChatPhotos'\n  | 'inputMessagesFilterPinned';\n\nexport type PinnedStorage = Partial<{\n  promise: Promise<PinnedStorage>,\n  count: number,\n  maxId: number\n}>;\nexport type MessagesStorage = Map<number, Message.message | Message.messageService> & {peerId: PeerId, type: MessagesStorageType, key: MessagesStorageKey};\nexport type MessagesStorageType = 'scheduled' | 'history' | 'grouped';\nexport type MessagesStorageKey = `${PeerId}_${MessagesStorageType}`;\n\nexport type MyMessageActionType = Message.messageService['action']['_'];\n\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\n  afterMessageId: string,\n  messageId: string\n}>;\n\ntype MapValueType<A> = A extends Map<any, infer V> ? V : never;\n\nexport type BatchUpdates = {\n  'messages_reactions': AppMessagesManager['batchUpdateReactions'],\n  'messages_views': AppMessagesManager['batchUpdateViews']\n};\n\ntype PendingMessageDetails = {\n  peerId: PeerId,\n  tempId: number,\n  threadId: number,\n  storage: MessagesStorage,\n  sequential?: boolean\n};\n\nconst processAfter = (cb: () => void) => {\n  // setTimeout(cb, 0);\n  cb();\n};\n\nexport type MessageSendingParams = Partial<{\n  peerId: PeerId,\n  threadId: number,\n  replyToMsgId: number,\n  replyToStoryId: number,\n  replyTo: InputReplyTo,\n  scheduleDate: number,\n  silent: boolean,\n  sendAsPeerId: number,\n  updateStickersetOrder: boolean\n}>;\n\ntype RequestHistoryOptions = {\n  peerId?: PeerId;\n  offsetId?: number;\n  offsetPeerId?: PeerId; // to get the offset message\n  limit?: number;\n  addOffset?: number;\n  offsetDate?: number;\n  threadId?: number;\n  // search\n  nextRate?: number;\n  folderId?: number;\n  query?: string;\n  inputFilter?: {\n    _: MyInputMessagesFilter;\n  };\n  minDate?: number;\n  maxDate?: number;\n  recursion?: boolean; // ! FOR INNER USE ONLY\n};\n\nexport class AppMessagesManager extends AppManager {\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\n  private groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\n  private historiesStorage: {\n    [peerId: PeerId]: HistoryStorage\n  };\n  private threadsStorage: {\n    [peerId: PeerId]: {\n      [threadId: string]: HistoryStorage\n    }\n  };\n  private searchesStorage: {\n    [peerId: PeerId]: {\n      [inputFilter in MyInputMessagesFilter]?: HistoryStorage\n    }\n  };\n  private pinnedMessages: {[key: string]: PinnedStorage};\n\n  private threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\n  private threadsToReplies: {\n    [peerId_threadId: string]: string;\n  };\n\n  private pendingByRandomId: {\n    [randomId: string]: PendingMessageDetails\n  } = {};\n  private pendingByMessageId: {[mid: string]: Long} = {};\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\n  public pendingTopMsgs: {[peerId: PeerId]: number} = {};\n  private tempFinalizeCallbacks: {\n    [tempId: string]: {\n      [callbackName: string]: Partial<{\n        deferred: CancellablePromise<void>,\n        callback: (message: MyMessage) => Promise<any>\n      }>\n    }\n  } = {};\n\n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\n\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message.message | Message.messageService>>> = new Map();\n  private fetchSingleMessagesPromise: Promise<void>;\n  private extendedMedia: Map<PeerId, Map<number, CancellablePromise<void>>> = new Map();\n\n  private maxSeenId = 0;\n\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\n\n  private newDialogsHandlePromise: Promise<any>;\n  public newDialogsToHandle: Map<PeerId, {dialog?: Dialog, topics?: Map<number, ForumTopic>}> = new Map();\n  public newUpdatesAfterReloadToHandle: {[key: string]: Set<Update>} = {};\n\n  private notificationsHandlePromise: number;\n  private notificationsToHandle: {[key: string]: {\n    fwdCount: number,\n    fromId: PeerId,\n    topMessage?: MyMessage\n  }} = {};\n\n  private reloadConversationsPromise: Promise<void>;\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>, sentRequest?: boolean}> = new Map();\n\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\n\n  private groupedTempId = 0;\n\n  private typings: {[key: string]: {action: SendMessageAction, timeout?: number}} = {};\n\n  private middleware: ReturnType<typeof getMiddleware>;\n\n  private unreadMentions: {[key: string]: SlicedArray<number>} = {};\n  private goToNextMentionPromises: {[key: string]: Promise<number>} = {};\n\n  private batchUpdates: {\n    [k in keyof BatchUpdates]?: {\n      callback: BatchUpdates[k],\n      batch: ArgumentTypes<BatchUpdates[k]>[0]\n    }\n  } = {};\n  private batchUpdatesDebounced: () => Promise<void>;\n\n  private uploadFilePromises: {[fileName: string]: CancellablePromise<any>};\n\n  private tempMids: {[peerId: PeerId]: number} = {};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateMessageID: this.onUpdateMessageId,\n\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\n      updateNewMessage: this.onUpdateNewMessage,\n      updateNewChannelMessage: this.onUpdateNewMessage,\n\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\n\n      updateEditMessage: this.onUpdateEditMessage,\n      updateEditChannelMessage: this.onUpdateEditMessage,\n\n      updateMessageReactions: this.onUpdateMessageReactions,\n\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\n      updateReadHistoryInbox: this.onUpdateReadHistory,\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\n      updateReadChannelInbox: this.onUpdateReadHistory,\n      updateReadChannelOutbox: this.onUpdateReadHistory,\n\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\n\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\n\n      updateDeleteMessages: this.onUpdateDeleteMessages,\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\n\n      updateChannel: this.onUpdateChannel,\n\n      updateChannelReload: this.onUpdateChannelReload,\n\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\n\n      updateServiceNotification: this.onUpdateServiceNotification,\n\n      updatePinnedMessages: this.onUpdatePinnedMessages,\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\n\n      updateNotifySettings: this.onUpdateNotifySettings,\n\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\n\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages,\n\n      updateMessageExtendedMedia: this.onUpdateMessageExtendedMedia,\n\n      updateTranscribedAudio: this.onUpdateTranscribedAudio\n    });\n\n    // ! Invalidate notify settings, can optimize though\n    this.rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1));\n      let filterFunc: (dialog: typeof dialogs[0]) => boolean;\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => this.appPeersManager.isBroadcast(dialog.peerId);\n      else filterFunc = (dialog) => this.appPeersManager.isAnyGroup(dialog.peerId);\n\n      dialogs\n      .filter(filterFunc)\n      .forEach((dialog) => {\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n      });\n    });\n\n    this.rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\n      msgs.forEach(({peerId, mid, isScheduled}) => {\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\n        if(!message) {\n          return;\n        }\n\n        message.media = {\n          _: 'messageMediaWebPage',\n          pFlags: {},\n          ...(message.media as MessageMedia.messageMediaWebPage || {}),\n          webpage: this.appWebPagesManager.getCachedWebPage(id)\n        };\n\n        this.onMessageModification(message, storage); // * mirror it\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: storage.key,\n          peerId,\n          mid,\n          message\n        });\n      });\n    });\n\n    this.rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\n      const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\n      if(dialog) {\n        dialog.draft = draft;\n\n        let drop = false;\n        if(!draft && !getServerMessageId(dialog.top_message)) {\n          this.dialogsStorage.dropDialog(peerId);\n          drop = true;\n        } else {\n          this.dialogsStorage.generateIndexForDialog(dialog);\n          this.dialogsStorage.pushDialog({dialog});\n        }\n\n        this.rootScope.dispatchEvent('dialog_draft', {\n          peerId,\n          dialog,\n          drop,\n          draft\n        });\n      } else if(threadId) {\n        const chat = this.appChatsManager.getChat(peerId.toChatId());\n        if(!chat) {\n          this.reloadConversation(peerId);\n        } else if((chat as Chat.channel).pFlags.forum) {\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\n        }\n      } else {\n        this.reloadConversation(peerId);\n      }\n    });\n\n    this.rootScope.addEventListener('poll_update', ({poll}) => {\n      const set = this.appPollsManager.pollToMessages[poll.id];\n      if(!set) {\n        return;\n      }\n\n      for(const key of set) {\n        const [peerId, mid] = key.split('_');\n\n        const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\n        if(message) {\n          this.onMessageModification(message);\n          this.setDialogToStateIfMessageIsTop(message);\n        }\n      }\n    });\n\n    // * clear forum cache\n    this.rootScope.addEventListener('chat_toggle_forum', ({chatId, enabled}) => {\n      const peerId = chatId.toPeerId(true);\n      if(!enabled) {\n        delete this.threadsStorage[peerId];\n\n        for(const key in this.pinnedMessages) {\n          if(+key === peerId && key.startsWith(peerId + '_')) {\n            delete this.pinnedMessages[key];\n          }\n        }\n      }\n    });\n\n    this.batchUpdatesDebounced = debounce(() => {\n      for(const event in this.batchUpdates) {\n        const details = this.batchUpdates[event as keyof BatchUpdates];\n        delete this.batchUpdates[event as keyof BatchUpdates];\n\n        // @ts-ignore\n        const result = details.callback(details.batch);\n        if(result && (!(result instanceof Array) || result.length)) {\n          // @ts-ignore\n          rootScope.dispatchEvent(event as keyof BatchUpdates, result);\n        }\n      }\n    }, 33, false, true);\n\n    return this.appStateManager.getState().then((state) => {\n      if(state.maxSeenMsgId) {\n        this.maxSeenId = state.maxSeenMsgId;\n      }\n    });\n  }\n\n  public clear = (init?: boolean) => {\n    if(this.middleware) {\n      this.middleware.clean();\n    } else {\n      this.middleware = getMiddleware();\n      this.uploadFilePromises = {};\n    }\n\n    this.messagesStorageByPeerId = {};\n    this.groupedMessagesStorage = {};\n    this.scheduledMessagesStorage = {};\n    this.historiesStorage = {};\n    this.threadsStorage = {};\n    this.searchesStorage = {};\n    this.pinnedMessages = {};\n    this.threadsServiceMessagesIdsStorage = {};\n    this.threadsToReplies = {};\n\n    this.dialogsStorage && this.dialogsStorage.clear(init);\n    this.filtersStorage && this.filtersStorage.clear(init);\n  };\n\n  public getInputEntities(entities: MessageEntity[]) {\n    const sendEntites = copy(entities);\n    sendEntites.forEach((entity) => {\n      if(entity._ === 'messageEntityMentionName') {\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = this.appUsersManager.getUserInput(entity.user_id);\n      }\n    });\n    return sendEntites;\n  }\n\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: MyMessage) => Promise<any>) {\n    const finalize = this.tempFinalizeCallbacks[tempId] ??= {};\n    const obj = finalize[callbackName] ??= {deferred: deferredPromise<void>()};\n\n    obj.callback = callback;\n\n    return obj.deferred;\n  }\n\n  public editMessage(\n    message: MyMessage,\n    text: string,\n    options: Partial<{\n      newMedia: InputMedia,\n      scheduleDate: number,\n      entities: MessageEntity[]\n    }> & Partial<Pick<Parameters<AppMessagesManager['sendText']>[2], 'webPage' | 'webPageOptions' | 'noWebPage'>> = {}\n  ): Promise<void> {\n    /* if(!this.canEditMessage(messageId)) {\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\n    } */\n\n    const {mid, peerId} = message;\n\n    if(message.pFlags.is_outgoing) {\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\n        // this.log('invoke editMessage callback', message);\n        return this.editMessage(message, text, options);\n      });\n    }\n\n    const entities = options.entities || [];\n    text &&= parseMarkdown(text, entities);\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const webPageSend = this.processMessageWebPageOptions(message as Message.message, options);\n\n    const schedule_date = options.scheduleDate || ((message as Message.message).pFlags.is_scheduled ? message.date : undefined);\n    return this.apiManager.invokeApi('messages.editMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: message.id,\n      message: text,\n      media: options.newMedia,\n      entities: sendEntites,\n      no_webpage: options.noWebPage,\n      schedule_date,\n      ...webPageSend\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error: ApiError) => {\n      this.log.error('editMessage error:', error);\n\n      if(error?.type === 'MESSAGE_NOT_MODIFIED') {\n        error.handled = true;\n        return;\n      }\n\n      if(error?.type === 'MESSAGE_EMPTY') {\n        error.handled = true;\n      }\n\n      throw error;\n    });\n  }\n\n  public async transcribeAudio(message: Message.message): Promise<MessagesTranscribedAudio> {\n    const {id, peerId} = message;\n\n    const process = (result: MessagesTranscribedAudio) => {\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateTranscribedAudio',\n        msg_id: message.id,\n        peer: this.appPeersManager.getOutputPeer(peerId),\n        pFlags: result.pFlags,\n        text: result.text,\n        transcription_id: result.transcription_id\n      });\n    };\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.transcribeAudio',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        msg_id: id\n      },\n      processResult: (result) => {\n        process(result);\n        return result;\n      },\n      processError: (error) => {\n        if(error.type === 'TRANSCRIPTION_FAILED' || error.type === 'MSG_VOICE_MISSING') {\n          process({\n            _: 'messages.transcribedAudio',\n            transcription_id: 0,\n            text: '',\n            pFlags: {}\n          });\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public async sendText(\n    peerId: PeerId,\n    text: string,\n    options: MessageSendingParams & Partial<{\n      entities: MessageEntity[],\n      viaBotId: BotId,\n      queryId: string,\n      resultId: string,\n      noWebPage: true,\n      replyMarkup: ReplyMarkup,\n      clearDraft: true,\n      webPage: WebPage,\n      webPageOptions: Partial<{\n        largeMedia: boolean,\n        smallMedia: boolean,\n        optional: boolean,\n        invertMedia: boolean\n      }>\n    }> = {}\n  ): Promise<void> {\n    if(!text.trim()) {\n      return;\n    }\n\n    options.entities ??= [];\n    options.webPageOptions ??= {};\n\n    this.checkSendOptions(options);\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    const config = await this.apiManager.getConfig();\n    const MAX_LENGTH = config.message_length_max;\n    const splitted = splitStringByLength(text, MAX_LENGTH);\n    text = splitted[0];\n    if(splitted.length > 1) {\n      if(options.webPage?._ === 'webPage' && !text.includes(options.webPage.url)) {\n        delete options.webPage;\n      }\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    const entities = options.entities;\n    if(!options.viaBotId) {\n      text = parseMarkdown(text, entities);\n      // entities = mergeEntities(entities, parseEntities(text));\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    message.entities = entities;\n    message.message = text;\n\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n    const threadId = options.threadId ? getServerMessageId(options.threadId) : undefined;\n    const isChannel = this.appPeersManager.isChannel(peerId);\n\n    const webPageSend = this.processMessageWebPageOptions(message, options);\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      toggleError();\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n      const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n      const replyTo = options.replyTo || getInputReplyTo({replyToMsgId, threadId});\n      let apiPromise: any;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: inputPeer,\n          random_id: message.random_id,\n          reply_to: replyTo,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        const commonOptions: Partial<MessagesSendMessage | MessagesSendMedia> = {\n          peer: inputPeer,\n          message: text,\n          random_id: message.random_id,\n          reply_to: replyTo,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate || undefined,\n          silent: options.silent,\n          send_as: sendAs,\n          update_stickersets_order: options.updateStickersetOrder\n        };\n\n        apiPromise = this.apiManager.invokeApiAfter(\n          options.webPage ? 'messages.sendMedia' : 'messages.sendMessage',\n          {\n            ...commonOptions as any,\n            ...webPageSend\n          },\n          sentRequestOptions\n        );\n      }\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates: Updates) => {\n        if(updates._ === 'updateShortSentMessage') {\n          // * fix copying object with promise\n          const promise = message.promise;\n          delete message.promise;\n          const newMessage = copy(message);\n          defineNotNumerableProperties(message, ['promise']);\n          message.promise = promise;\n\n          newMessage.date = updates.date;\n          newMessage.id = updates.id;\n          newMessage.media = updates.media;\n          newMessage.entities = updates.entities;\n          this.wrapMessageEntities(newMessage);\n          if(updates.pFlags.out) {\n            newMessage.pFlags.out = true;\n          }\n\n          // * override with new updates\n          updates = {\n            _: 'updates',\n            users: [],\n            chats: [],\n            seq: 0,\n            date: undefined,\n            updates: [{\n              _: 'updateMessageID',\n              random_id: message.random_id,\n              id: newMessage.id\n            }, {\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\n              message: newMessage,\n              pts: updates.pts,\n              pts_count: updates.pts_count\n            }]\n          };\n        } else if((updates as Updates.updates).updates) {\n          (updates as Updates.updates).updates.forEach((update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n        message.promise.resolve();\n      }, (error: ApiError) => {\n        toggleError(error);\n        message.promise.reject(error);\n        throw error;\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    const promises: ReturnType<AppMessagesManager['sendText']>[] = [message.promise];\n    for(let i = 1; i < splitted.length; ++i) {\n      promises.push(this.sendText(peerId, splitted[i], options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public sendFile(peerId: PeerId, options: MessageSendingParams & SendFileDetails & Partial<{\n    isRoundMessage: boolean,\n    isVoiceMessage: boolean,\n    isGroupedItem: boolean,\n    isMedia: boolean,\n\n    groupId: string,\n    caption: string,\n    entities: MessageEntity[],\n    background: boolean,\n    clearDraft: boolean,\n    noSound: boolean,\n\n    waveform: Uint8Array,\n\n    // ! only for internal use\n    processAfter?: typeof processAfter\n  }>) {\n    const file = options.file;\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    this.checkSendOptions(options);\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n    const threadId = options.threadId ? getServerMessageId(options.threadId) : undefined;\n\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\n\n    const fileType = (file as Document.document).mime_type || file.type;\n    const fileName = file instanceof File ? file.name : '';\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\n    let caption = options.caption || '';\n\n    this.log('sendFile', file, fileType);\n\n    const entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    const attributes: DocumentAttribute[] = [];\n\n    const isPhoto = getEnvironment().IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\n\n    const strippedPhotoSize: PhotoSize.photoStrippedSize = options.strippedBytes && {\n      _: 'photoStrippedSize',\n      bytes: options.strippedBytes,\n      type: 'i'\n    };\n\n    let photo: MyPhoto, document: MyDocument;\n\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\n    if(isDocument) { // maybe it's a sticker or gif\n      attachType = 'document';\n      apiFileName = '';\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\n      attachType = 'audio';\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\n      actionName = 'sendMessageUploadAudioAction';\n\n      if(options.isVoiceMessage) {\n        attachType = 'voice';\n        message.pFlags.media_unread = true;\n      }\n\n      const attribute: DocumentAttribute.documentAttributeAudio = {\n        _: 'documentAttributeAudio',\n        pFlags: {\n          voice: options.isVoiceMessage || undefined\n        },\n        waveform: options.waveform,\n        duration: options.duration || undefined\n      };\n\n      attributes.push(attribute);\n    } else if(!options.isMedia) {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    } else if(isPhoto) {\n      attachType = 'photo';\n      apiFileName = 'photo.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadPhotoAction';\n\n      const photoSize = {\n        _: 'photoSize',\n        w: options.width,\n        h: options.height,\n        type: THUMB_TYPE_FULL,\n        location: null,\n        size: file.size\n      } as PhotoSize.photoSize;\n\n      photo = {\n        _: 'photo',\n        id: '' + message.id,\n        sizes: [photoSize],\n        w: options.width,\n        h: options.height\n      } as any;\n\n      if(strippedPhotoSize) {\n        photo.sizes.unshift(strippedPhotoSize);\n      }\n\n      this.thumbsStorage.setCacheContextURL(\n        photo,\n        photoSize.type,\n        options.objectURL || '',\n        file.size\n      );\n\n      photo = this.appPhotosManager.savePhoto(photo);\n    } else if(getEnvironment().VIDEO_MIME_TYPES_SUPPORTED.has(fileType as VIDEO_MIME_TYPE)) {\n      attachType = 'video';\n      apiFileName = 'video.mp4';\n      actionName = 'sendMessageUploadVideoAction';\n\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\n        _: 'documentAttributeVideo',\n        pFlags: {\n          round_message: options.isRoundMessage || undefined,\n          supports_streaming: true\n        },\n        duration: options.duration,\n        w: options.width,\n        h: options.height\n      };\n\n      attributes.push(videoAttribute);\n\n      // * must follow after video attribute\n      if(options.noSound &&\n        file.size > (10 * 1024) &&\n        file.size < (10 * 1024 * 1024)) {\n        attributes.push({\n          _: 'documentAttributeAnimated'\n        });\n      }\n    } else {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    }\n\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\n\n    if((['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).indexOf(attachType) !== -1 && !isDocument) {\n      const thumbs: PhotoSize[] = [];\n      document = {\n        _: 'document',\n        id: '' + message.id,\n        duration: options.duration,\n        attributes,\n        w: options.width,\n        h: options.height,\n        thumbs,\n        mime_type: fileType,\n        size: file.size\n      } as any;\n\n      if(options.objectURL) {\n        this.thumbsStorage.setCacheContextURL(\n          document,\n          undefined,\n          options.objectURL,\n          file.size\n        );\n      }\n\n      let thumb: PhotoSize.photoSize;\n      if(isPhoto) {\n        attributes.push({\n          _: 'documentAttributeImageSize',\n          w: options.width,\n          h: options.height\n        });\n\n        thumb = {\n          _: 'photoSize',\n          w: options.width,\n          h: options.height,\n          type: THUMB_TYPE_FULL,\n          size: file.size\n        };\n      } else if(attachType === 'video') {\n        if(options.thumb) {\n          thumb = {\n            _: 'photoSize',\n            w: options.thumb.size.width,\n            h: options.thumb.size.height,\n            type: 'local-thumb',\n            size: options.thumb.blob.size\n          };\n\n          this.thumbsStorage.setCacheContextURL(\n            document,\n            thumb.type,\n            options.thumb.url,\n            thumb.size\n          );\n        }\n      }\n\n      if(thumb) {\n        thumbs.push(thumb);\n      }\n\n      if(strippedPhotoSize) {\n        thumbs.unshift(strippedPhotoSize);\n      }\n\n      /* if(thumbs.length) {\n        const thumb = thumbs[0] as PhotoSize.photoSize;\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\n        docThumb.downloaded = thumb.size;\n        docThumb.url = thumb.url;\n      } */\n\n      document = this.appDocsManager.saveDoc(document);\n    }\n\n    this.log('sendFile', attachType, apiFileName, file.type, options);\n\n    const sentDeferred = deferredPromise<InputMedia>();\n    // sentDeferred.cancel = () => {\n    //   const error = new Error('Download canceled');\n    //   error.name = 'AbortError';\n    //   sentDeferred.reject(error);\n\n    //   if(uploadPromise?.cancel) {\n    //     uploadPromise.cancel();\n    //   }\n    // };\n\n    const media: MessageMedia = isDocument ? undefined : {\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\n      pFlags: {},\n      // preloader,\n      photo,\n      document\n    };\n\n    if(media) {\n      defineNotNumerableProperties(media as any, ['promise']);\n      (media as any).promise = sentDeferred;\n\n      if(options.spoiler) {\n        (media as MessageMedia.messageMediaPhoto).pFlags.spoiler = true;\n      }\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    message.entities = entities;\n    message.message = caption;\n    message.media = isDocument ? {\n      _: 'messageMediaDocument',\n      pFlags: {},\n      document: file\n    } as MessageMedia.messageMediaDocument : media;\n\n    const uploadingFileName = !isDocument ? getFileNameForUpload(file) : undefined;\n    message.uploadingFileName = uploadingFileName;\n\n    if(uploadingFileName) {\n      this.uploadFilePromises[uploadingFileName] = sentDeferred;\n    }\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    let uploaded = false,\n      uploadPromise: ReturnType<ApiFileManager['upload']> = null;\n\n    message.send = () => {\n      if(isDocument) {\n        const inputMedia: InputMedia = {\n          _: 'inputMediaDocument',\n          id: getDocumentInput(file),\n          pFlags: {}\n        };\n\n        sentDeferred.resolve(inputMedia);\n      } else if(file instanceof File || file instanceof Blob) {\n        const load = () => {\n          if(!uploaded || message.error) {\n            uploaded = false;\n\n            uploadPromise = this.apiFileManager.upload({file, fileName: uploadingFileName});\n            uploadPromise.catch((err) => {\n              if(uploaded) {\n                return;\n              }\n\n              this.log('cancelling upload', media);\n\n              this.cancelPendingMessage(message.random_id);\n              this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\n              sentDeferred.reject(err);\n            });\n\n            uploadPromise.addNotifyListener((progress: Progress) => {\n              /* if(DEBUG) {\n                this.log('upload progress', progress);\n              } */\n\n              const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\n              if(actionName) {\n                this.setTyping(peerId, {_: actionName, progress: percents | 0}, undefined, options.threadId);\n              }\n              sentDeferred.notifyAll(progress);\n            });\n\n            sentDeferred.notifyAll({done: 0, total: file.size});\n          }\n\n          let thumbUploadPromise: typeof uploadPromise;\n          if(attachType === 'video' && options.objectURL && options.thumb?.blob) {\n            thumbUploadPromise = this.apiFileManager.upload({file: options.thumb.blob});\n          }\n\n          uploadPromise && uploadPromise.then(async(inputFile) => {\n            /* if(DEBUG) {\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\n            } */\n\n            inputFile.name = apiFileName;\n            uploaded = true;\n            let inputMedia: InputMedia;\n            switch(attachType) {\n              case 'photo':\n                inputMedia = {\n                  _: 'inputMediaUploadedPhoto',\n                  file: inputFile,\n                  pFlags: {\n                    spoiler: options.spoiler || undefined\n                  }\n                };\n                break;\n\n              default:\n                inputMedia = {\n                  _: 'inputMediaUploadedDocument',\n                  file: inputFile,\n                  mime_type: fileType,\n                  pFlags: {\n                    force_file: actionName === 'sendMessageUploadDocumentAction' || undefined,\n                    spoiler: options.spoiler || undefined\n                    // nosound_video: options.noSound ? true : undefined\n                  },\n                  attributes\n                };\n            }\n\n            if(thumbUploadPromise) {\n              try {\n                const inputFile = await thumbUploadPromise;\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\n              } catch(err) {\n                this.log.error('sendFile thumb upload error:', err);\n              }\n            }\n\n            sentDeferred.resolve(inputMedia);\n          }, (error: ApiError) => {\n            toggleError(error);\n            throw error;\n          });\n\n          return sentDeferred;\n        };\n\n        if(options.isGroupedItem) {\n          load();\n        } else {\n          this.sendSmthLazyLoadQueue.push({\n            load\n          });\n        }\n      }\n\n      return sentDeferred;\n    };\n\n    this.beforeMessageSending(message, {\n      isGroupedItem: options.isGroupedItem,\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      processAfter: options.processAfter\n    });\n\n    if(!options.isGroupedItem) {\n      sentDeferred.then((inputMedia) => {\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\n\n        return this.apiManager.invokeApi('messages.sendMedia', {\n          background: options.background,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          message: caption,\n          random_id: message.random_id,\n          reply_to: options.replyTo || getInputReplyTo({replyToMsgId, threadId}),\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\n          update_stickersets_order: options.updateStickersetOrder\n        }).then((updates) => {\n          this.apiUpdatesManager.processUpdateMessage(updates);\n        }, (error: ApiError) => {\n          if(attachType === 'photo' &&\n            error.code === 400 &&\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\n            error.handled = true;\n            attachType = 'document';\n            message.send();\n            return;\n          }\n\n          toggleError(error);\n          throw error;\n        });\n      });\n\n      const messagePromise = message.promise as CancellablePromise<void>;\n      sentDeferred.then(\n        () => messagePromise.resolve(),\n        (err) => messagePromise.reject(err)\n      );\n    }\n\n    const ret: {\n      message: typeof message,\n      promise: typeof sentDeferred\n    } = {\n      message\n    } as any;\n\n    defineNotNumerableProperties(ret, ['promise']);\n    ret.promise = sentDeferred;\n\n    return ret;\n  }\n\n  public async sendAlbum(peerId: PeerId, options: MessageSendingParams & {\n    isMedia?: boolean,\n    entities?: MessageEntity[],\n    caption?: string,\n    sendFileDetails: SendFileDetails[],\n    clearDraft?: boolean\n  }) {\n    this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    if(options.sendFileDetails.length === 1) {\n      return this.sendFile(peerId, {...options, ...options.sendFileDetails[0]});\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n    const threadId = options.threadId ? getServerMessageId(options.threadId) : undefined;\n\n    let caption = options.caption || '';\n    const entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    let sendEntities = this.getInputEntities(entities);\n    if(!sendEntities.length) {\n      sendEntities = undefined;\n    }\n\n    const log = this.log.bindPrefix('sendAlbum');\n    log(options);\n\n    const groupId = '' + ++this.groupedTempId;\n\n    const callbacks: Array<() => void> = [];\n    const processAfter = (cb: () => void) => {\n      callbacks.push(cb);\n    };\n\n    const messages = options.sendFileDetails.map((details, idx) => {\n      const o: Parameters<AppMessagesManager['sendFile']>[1] = {\n        isGroupedItem: true,\n        isMedia: options.isMedia,\n        scheduleDate: options.scheduleDate,\n        silent: options.silent,\n        replyToMsgId,\n        threadId: options.threadId,\n        sendAsPeerId: options.sendAsPeerId,\n        groupId,\n        processAfter,\n        ...details\n      };\n\n      if(idx === 0) {\n        o.caption = caption;\n        o.entities = entities;\n        // o.replyToMsgId = replyToMsgId;\n      }\n\n      return this.sendFile(peerId, o).message;\n    });\n\n    if(options.clearDraft) {\n      callbacks.push(() => {\n        this.appDraftsManager.clearDraft(peerId, options.threadId);\n      });\n    }\n\n    callbacks.forEach((callback) => {\n      callback();\n    });\n\n    // * test pending\n    if(DO_NOT_SEND_MESSAGES) {\n      return;\n    }\n\n    const toggleError = (message: Message.message, error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n    const invoke = (multiMedia: InputSingleMedia[]) => {\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\n\n      const deferred = deferredPromise<void>();\n      this.sendSmthLazyLoadQueue.push({\n        load: () => {\n          return this.apiManager.invokeApi('messages.sendMultiMedia', {\n            peer: inputPeer,\n            multi_media: multiMedia,\n            reply_to: options.replyTo || getInputReplyTo({replyToMsgId, threadId}),\n            schedule_date: options.scheduleDate,\n            silent: options.silent,\n            clear_draft: options.clearDraft,\n            send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\n            update_stickersets_order: options.updateStickersetOrder\n          }).then((updates) => {\n            this.apiUpdatesManager.processUpdateMessage(updates);\n            deferred.resolve();\n          }, (error: ApiError) => {\n            messages.forEach((message) => toggleError(message, error));\n            deferred.reject(error);\n          });\n        }\n      });\n\n      return deferred;\n    };\n\n    const promises: Promise<InputSingleMedia>[] = messages.map(async(message) => {\n      let inputMedia: InputMedia;\n      try {\n        inputMedia = await message.send() as InputMedia;\n      } catch(err) {\n        if((err as ApiError).type === 'UPLOAD_CANCELED') {\n          return undefined;\n        }\n\n        log.error('upload item error:', err, message);\n        toggleError(message, err);\n        throw err;\n      }\n\n      let messageMedia: MessageMedia;\n      try {\n        messageMedia = await this.apiManager.invokeApi('messages.uploadMedia', {\n          peer: inputPeer,\n          media: inputMedia\n        });\n      } catch(err) {\n        log.error('uploadMedia error:', err, message);\n        toggleError(message, err);\n        throw err;\n      }\n\n      const originalInputMedia = inputMedia;\n      if(messageMedia._ === 'messageMediaPhoto') {\n        const photo = this.appPhotosManager.savePhoto(messageMedia.photo);\n        inputMedia = getPhotoMediaInput(photo);\n      } else if(messageMedia._ === 'messageMediaDocument') {\n        const doc = this.appDocsManager.saveDoc(messageMedia.document);\n        inputMedia = getDocumentMediaInput(doc);\n      }\n\n      // copy original flags\n      const copyProperties: (keyof InputMedia.inputMediaPhoto)[] = [\n        'pFlags',\n        'ttl_seconds'\n      ];\n\n      copyProperties.forEach((property) => {\n        // @ts-ignore\n        inputMedia[property] = originalInputMedia[property] ?? inputMedia[property];\n      });\n\n      const inputSingleMedia: InputSingleMedia = {\n        _: 'inputSingleMedia',\n        media: inputMedia,\n        random_id: message.random_id,\n        message: caption,\n        entities: sendEntities\n      };\n\n      // * only 1 caption for all inputs\n      if(caption) {\n        caption = '';\n        sendEntities = undefined;\n      }\n\n      return inputSingleMedia;\n    });\n\n    return Promise.all(promises).then((inputs) => {\n      return invoke(inputs.filter(Boolean));\n    });\n  }\n\n  public sendContact(peerId: PeerId, contactPeerId: PeerId) {\n    return this.sendOther(peerId, this.appUsersManager.getContactMediaInput(contactPeerId));\n  }\n\n  public sendOther(\n    peerId: PeerId,\n    inputMedia: InputMedia | {_: 'messageMediaPending', messageMedia: MessageMedia},\n    options: MessageSendingParams & Partial<{\n      viaBotId: BotId,\n      replyMarkup: ReplyMarkup,\n      clearDraft: true,\n      queryId: string\n      resultId: string,\n      geoPoint: GeoPoint,\n      webDocument?: WebDocument\n    }> = {}\n  ) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    const noOutgoingMessage = /* inputMedia?._ === 'inputMediaPhotoExternal' ||  */inputMedia?._ === 'inputMediaDocumentExternal';\n    this.checkSendOptions(options);\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n    const threadId = options.threadId ? getServerMessageId(options.threadId) : undefined;\n\n    let media: MessageMedia;\n    switch(inputMedia._) {\n      case 'inputMediaPoll': {\n        // const pollId = '' + message.id;\n        const pollId = randomLong();\n        inputMedia.poll.id = pollId;\n        this.appPollsManager.savePoll(inputMedia.poll, {\n          _: 'pollResults',\n          total_voters: 0,\n          pFlags: {},\n          recent_voters: []\n        });\n\n        const {poll, results} = this.appPollsManager.getPoll(pollId);\n        media = {\n          _: 'messageMediaPoll',\n          poll,\n          results\n        };\n\n        break;\n      }\n\n      case 'inputMediaPhoto': {\n        media = {\n          _: 'messageMediaPhoto',\n          photo: this.appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id),\n          pFlags: {}\n        };\n        break;\n      }\n\n      case 'inputMediaDocument': {\n        const doc = this.appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\n        /* if(doc.sticker && doc.stickerSetInput) {\n          appStickersManager.pushPopularSticker(doc.id);\n        } */\n        media = {\n          _: 'messageMediaDocument',\n          document: doc,\n          pFlags: {}\n        };\n        break;\n      }\n\n      case 'inputMediaContact': {\n        media = {\n          _: 'messageMediaContact',\n          phone_number: inputMedia.phone_number,\n          first_name: inputMedia.first_name,\n          last_name: inputMedia.last_name,\n          user_id: inputMedia.user_id ?? '0',\n          vcard: inputMedia.vcard\n        };\n        break;\n      }\n\n      case 'inputMediaGeoPoint': {\n        media = {\n          _: 'messageMediaGeo',\n          geo: options.geoPoint\n        };\n        break;\n      }\n\n      case 'inputMediaVenue': {\n        media = {\n          _: 'messageMediaVenue',\n          geo: options.geoPoint,\n          title: inputMedia.title,\n          address: inputMedia.address,\n          provider: inputMedia.provider,\n          venue_id: inputMedia.venue_id,\n          venue_type: inputMedia.venue_type\n        };\n        break;\n      }\n\n      case 'inputMediaPhotoExternal': {\n        if(noOutgoingMessage) {\n          break;\n        }\n\n        media = {\n          _: 'messageMediaPhotoExternal',\n          photo: options.webDocument\n        };\n        break;\n      }\n\n      case 'inputMediaDocumentExternal': {\n        if(noOutgoingMessage) {\n          break;\n        }\n\n        media = {\n          _: 'messageMediaDocumentExternal',\n          document: options.webDocument\n        };\n        break;\n      }\n\n      case 'inputMediaStory': {\n        media = {\n          _: 'messageMediaStory',\n          id: inputMedia.id,\n          pFlags: {},\n          peer: this.appPeersManager.getOutputPeer(this.appPeersManager.getPeerId(inputMedia.peer))\n        };\n        break;\n      }\n\n      case 'messageMediaPending': {\n        media = (inputMedia as any).messageMedia;\n        break;\n      }\n    }\n\n    message.media = media;\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined;\n      let apiPromise: Promise<any>;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to: options.replyTo || getInputReplyTo({replyToMsgId, threadId}),\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMedia', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia as InputMedia,\n          random_id: message.random_id,\n          reply_to: options.replyTo || getInputReplyTo({replyToMsgId, threadId}),\n          message: '',\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs,\n          update_stickersets_order: options.updateStickersetOrder\n        }, sentRequestOptions);\n      }\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates) => {\n        if(updates.updates) {\n          updates.updates.forEach((update: Update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n        promise.resolve();\n      }, (error: ApiError) => {\n        toggleError(error);\n        promise.reject(error);\n        throw error;\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true,\n      noOutgoingMessage\n    });\n\n    const promise = message.promise;\n    return promise;\n  }\n\n  private checkSendOptions(options: MessageSendingParams) {\n    if(options.replyToStoryId) {\n      options.replyTo = {\n        _: 'inputReplyToStory',\n        story_id: options.replyToStoryId,\n        user_id: this.appUsersManager.getUserInput(options.peerId.toUserId())\n      };\n    }\n    // if(options.scheduleDate) {\n    //   const minTimestamp = (Date.now() / 1000 | 0) + 10;\n    //   if(options.scheduleDate <= minTimestamp) {\n    //     delete options.scheduleDate;\n    //   }\n    // }\n  }\n\n  private beforeMessageSending(message: Message.message, options: Pick<MessageSendingParams, 'threadId'> & Partial<{\n    isGroupedItem: boolean,\n    isScheduled: boolean,\n    clearDraft: boolean,\n    sequential: boolean,\n    processAfter?: (cb: () => void) => void,\n    noOutgoingMessage?: boolean\n  }> = {}) {\n    const messageId = message.id;\n    const peerId = this.getMessagePeer(message);\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n    message.storageKey = storage.key;\n    const callbacks: Array<() => void> = [];\n    if(options.isScheduled && !options.noOutgoingMessage) {\n      // if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('scheduled_new', message);\n      });\n    } else if(!options.noOutgoingMessage) {\n      /* if(options.threadId && this.threadsStorage[peerId]) {\n        delete this.threadsStorage[peerId][options.threadId];\n      } */\n      const storages: HistoryStorage[] = [\n        this.getHistoryStorage(peerId),\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\n      ];\n\n      for(const storage of storages) {\n        if(storage) {\n          storage.history.unshift(messageId);\n        }\n      }\n\n      this.saveMessages([message], {storage, isOutgoing: true});\n      this.setDialogTopMessage(message);\n\n      if(options.threadId) {\n        const forumTopic = this.dialogsStorage.getForumTopic(peerId, options.threadId);\n        if(forumTopic) {\n          this.setDialogTopMessage(message, forumTopic);\n        }\n      }\n\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('history_append', {storageKey: storage.key, message});\n      });\n    }\n\n    let pending: PendingMessageDetails;\n    if(!options.noOutgoingMessage) {\n      pending = this.pendingByRandomId[message.random_id] = {\n        peerId,\n        tempId: messageId,\n        threadId: options.threadId,\n        storage,\n        sequential: options.sequential\n      };\n\n      this.pendingTopMsgs[peerId] = messageId;\n    }\n\n    if(!options.isGroupedItem && message.send) {\n      callbacks.push(() => {\n        if(options.clearDraft) {\n          this.appDraftsManager.clearDraft(peerId, options.threadId);\n        }\n\n        if(!DO_NOT_SEND_MESSAGES) {\n          message.send();\n        }\n      });\n    }\n\n    if(callbacks.length) {\n      (options.processAfter || processAfter)(() => {\n        for(const callback of callbacks) {\n          callback();\n        }\n      });\n    }\n\n    return pending;\n  }\n\n  private generateOutgoingMessage(\n    peerId: PeerId,\n    options: MessageSendingParams & Partial<{\n      viaBotId: BotId,\n      groupId: string,\n      replyMarkup: ReplyMarkup,\n    }>\n  ) {\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    let postAuthor: string;\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\n    if(isBroadcast) {\n      const chat = this.appPeersManager.getPeer(peerId) as Chat.channel;\n      if(chat.pFlags.signatures) {\n        const user = this.appUsersManager.getSelf();\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n        postAuthor = fullName;\n      }\n    }\n\n    const message: Message.message = {\n      _: 'message',\n      id: this.generateTempMessageId(peerId),\n      from_id: options.sendAsPeerId ? this.appPeersManager.getOutputPeer(options.sendAsPeerId) : this.generateFromId(peerId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      post_author: postAuthor,\n      pFlags: this.generateFlags(peerId),\n      date: options.scheduleDate || (tsNow(true) + this.timeManager.getServerTimeOffset()),\n      message: '',\n      grouped_id: options.groupId,\n      random_id: randomLong(),\n      reply_to: this.generateReplyHeader(options.replyTo || peerId, options.replyToMsgId, options.threadId),\n      via_bot_id: options.viaBotId,\n      reply_markup: options.replyMarkup,\n      replies: this.generateReplies(peerId),\n      views: isBroadcast && 1,\n      pending: true\n    };\n\n    defineNotNumerableProperties(message, ['send', 'promise']);\n    if(options.groupId === undefined) {\n      message.promise = deferredPromise();\n    }\n\n    return message;\n  }\n\n  private generateReplyHeader(peerId: PeerId | InputReplyTo, replyToMsgId: number, replyToTopId?: number): MessageReplyHeader {\n    if(isObject(peerId)) {\n      return {\n        _: 'messageReplyStoryHeader',\n        story_id: (peerId as InputReplyTo.inputReplyToStory).story_id,\n        user_id: this.appUsersManager.getUserId((peerId as InputReplyTo.inputReplyToStory).user_id)\n      };\n    }\n\n    const isForum = this.appPeersManager.isForum(peerId);\n    if(isForum && !replyToTopId) {\n      const originalMessage = this.getMessageByPeer(peerId, replyToMsgId);\n      if(originalMessage) {\n        replyToTopId = getMessageThreadId(originalMessage, true);\n      }\n    }\n\n    const header: MessageReplyHeader = {\n      _: 'messageReplyHeader',\n      reply_to_msg_id: replyToMsgId || replyToTopId,\n      pFlags: {}\n    };\n\n    if(replyToTopId && isForum && GENERAL_TOPIC_ID !== replyToTopId) {\n      header.pFlags.forum_topic = true;\n    }\n\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\n      header.reply_to_top_id = replyToTopId;\n    }\n\n    return header;\n  }\n\n  private generateReplies(peerId: PeerId) {\n    let replies: MessageReplies.messageReplies;\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n      if(channelFull?.linked_chat_id) {\n        replies = {\n          _: 'messageReplies',\n          pFlags: {\n            comments: true\n          },\n          channel_id: channelFull.linked_chat_id,\n          replies: 0,\n          replies_pts: 0\n        };\n      }\n    }\n\n    return replies;\n  }\n\n  /**\n   * Generate correct from_id according to anonymous or broadcast\n   * Won't return peer if message is sent by the peer\n   */\n  public generateFromId(peerId: PeerId) {\n    if(this.appPeersManager.isAnyChat(peerId) && (this.appPeersManager.isBroadcast(peerId) || this.isAnonymousSending(peerId))) {\n      return undefined;\n    } else {\n      return this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId());\n    }\n  }\n\n  private generateFlags(peerId: PeerId) {\n    const pFlags: Message.message['pFlags'] = {};\n    const fromId = this.appUsersManager.getSelf().id;\n    if(peerId !== fromId) {\n      pFlags.out = true;\n\n      if(!this.appPeersManager.isChannel(peerId) && !this.appUsersManager.isBot(peerId)) {\n        pFlags.unread = true;\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      pFlags.post = true;\n    }\n\n    return pFlags;\n  }\n\n  private generateForwardHeader(peerId: PeerId, originalMessage: Message.message) {\n    const myId = this.appUsersManager.getSelf().id.toPeerId();\n    const fromId = originalMessage.fromId;\n    if(fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from) {\n      return;\n    }\n\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\n      _: 'messageFwdHeader',\n      date: originalMessage.date,\n      pFlags: {}\n    };\n\n    let isUserHidden = false;\n    if(originalMessage.fwd_from) {\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\n    } else {\n      fwdHeader.post_author = originalMessage.post_author;\n\n      if(fromId.isUser()) {\n        const userFull = this.appProfileManager.getCachedFullUser(fromId.toUserId());\n        if(userFull?.private_forward_name) {\n          fwdHeader.from_name = userFull.private_forward_name;\n          isUserHidden = true;\n        }\n      }\n\n      if(!isUserHidden) {\n        fwdHeader.from_id = this.appPeersManager.getOutputPeer(fromId);\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(originalMessage.peerId)) {\n      if(originalMessage.post_author) {\n        fwdHeader.post_author = originalMessage.post_author;\n      }\n\n      fwdHeader.channel_post = originalMessage.id;\n    }\n\n    if(peerId === myId && !isUserHidden) {\n      fwdHeader.saved_from_msg_id = originalMessage.id;\n      fwdHeader.saved_from_peer = this.appPeersManager.getOutputPeer(originalMessage.peerId);\n    }\n\n    return fwdHeader;\n  }\n\n  private processMessageWebPageOptions(\n    message: Message.message,\n    options: Parameters<AppMessagesManager['sendText']>[2]\n  ): {media: InputMedia.inputMediaWebPage, invert_media: boolean} | {no_webpage: boolean} | {} {\n    if(message._ !== 'message') {\n      return {};\n    }\n\n    if(!options.webPage) {\n      return {no_webpage: options.noWebPage};\n    }\n\n    message.media = {\n      _: 'messageMediaWebPage',\n      pFlags: {\n        force_large_media: options.webPageOptions.largeMedia || undefined,\n        force_small_media: options.webPageOptions.smallMedia || undefined\n      },\n      webpage: options.webPage\n    };\n\n    if(options.webPageOptions.invertMedia) {\n      message.pFlags.invert_media = true;\n    }\n\n    return {\n      media: {\n        _: 'inputMediaWebPage',\n        url: (options.webPage as WebPage.webPage).url,\n        pFlags: {\n          force_large_media: options.webPageOptions.largeMedia || undefined,\n          force_small_media: options.webPageOptions.smallMedia || undefined,\n          optional: options.webPageOptions.optional || undefined\n        }\n      },\n      invert_media: options.webPageOptions.invertMedia\n    };\n  }\n\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\n    const maxId = Number.MAX_SAFE_INTEGER;\n    const message: Message.messageService = {\n      _: 'messageService',\n      pFlags: {},\n      action: {\n        _: 'messageActionChannelEditPhoto',\n        photo\n      },\n      id: maxId,\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      mid: maxId,\n      peerId,\n      date: (photo as Photo.photo).date,\n      fromId: peerId\n    };\n\n    this.getHistoryMessagesStorage(peerId).set(maxId, message);\n    return message;\n  }\n\n  public getUploadPromise(uploadFileName: string) {\n    return this.uploadFilePromises[uploadFileName];\n  }\n\n  public isAnonymousSending(peerId: PeerId): boolean {\n    if(!peerId.isAnyChat()) {\n      return false;\n    }\n\n    const chat = this.appPeersManager.getPeer(peerId);\n    return (chat as Chat.channel).admin_rights?.pFlags?.anonymous;\n  }\n\n  public setDialogTopMessage(\n    message: MyMessage,\n    dialog: MTDialog.dialog | ForumTopic = this.getDialogOnly(message.peerId)\n  ) {\n    if(!dialog) {\n      return;\n    }\n\n    dialog.top_message = message.mid;\n\n    const historyStorage = this.getHistoryStorage(message.peerId, dialog._ === 'forumTopic' ? dialog.id : undefined);\n    historyStorage.maxId = message.mid;\n\n    this.dialogsStorage.generateIndexForDialog(dialog, false, message);\n\n    this.scheduleHandleNewDialogs(message.peerId, dialog);\n  }\n\n  public cancelPendingMessage(randomId: string) {\n    const pendingData = this.pendingByRandomId[randomId];\n\n    /* if(DEBUG) {\n      this.log('cancelPendingMessage', randomId, pendingData);\n    } */\n\n    if(pendingData) {\n      const {peerId, tempId, storage} = pendingData;\n      const historyStorage = this.getHistoryStorage(peerId);\n\n      if(this.appPeersManager.isChannel(peerId)) {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: peerId.toChatId(),\n          messages: [tempId],\n          pts: undefined,\n          pts_count: undefined\n        });\n      } else {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: [tempId],\n          pts: undefined,\n          pts_count: undefined\n        });\n      }\n\n      historyStorage.history.delete(tempId);\n\n      delete this.pendingByRandomId[randomId];\n      this.deleteMessageFromStorage(storage, tempId);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /* public async refreshConversations() {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(let folderId = 0; folderId < 2; ++folderId) {\n      let offsetDate = 0;\n      for(;;) {\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\n\n        if(dialogs.length) {\n          outDialogs.push(...dialogs as Dialog[]);\n          const dialog = dialogs[dialogs.length - 1];\n\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\n          const peerId = getPeerId(dialog.peer);\n          const mid = this.appMessagesIdsManager.generateMessageId(dialog.top_message);\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\n\n          if(!offsetDate) {\n            console.error('refreshConversations: got no offsetDate', dialog);\n            break;\n          }\n        }\n\n        if(isEnd) {\n          break;\n        }\n      }\n    }\n\n    let obj: {[peerId: string]: Dialog} = {};\n    outDialogs.forEach((dialog) => {\n      obj[dialog.peerId] = dialog;\n    });\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n\n    return outDialogs;\n  } */\n\n  public async fillConversations(folderId = GLOBAL_FOLDER_ID): Promise<void> {\n    const middleware = this.middleware.get();\n    while(!this.dialogsStorage.isDialogsLoaded(folderId)) {\n      const result = await this.getTopMessages({limit: 100, folderId});\n      if(!middleware() || !result || result.isEnd) {\n        break;\n      }\n    }\n  }\n\n  /* public async getConversationsAll(query = '', folderId = 0) {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(; folderId < 2; ++folderId) {\n      let offsetIndex = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\n\n        if(dialogs.length) {\n          outDialogs.push(...dialogs);\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return outDialogs;\n  } */\n\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(threadId && !this.appChatsManager.isForum(peerId.toChatId())) {\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    } else {\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\n      const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\n      // readMaxId can be 4294967295 (0)\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId && getServerMessageId(readMaxId) ? readMaxId : 0;\n    }\n  }\n\n  // public lolSet = new Set();\n  public getTopMessages({limit, folderId}: {\n    limit: number,\n    folderId: number\n  }) {\n    // const dialogs = this.dialogsStorage.getFolder(folderId);\n    const offsetId = 0;\n    let offsetPeerId: PeerId;\n    let offsetIndex = 0;\n\n    let offsetDate = this.dialogsStorage.getOffsetDate(folderId);\n    if(offsetDate) {\n      offsetIndex = offsetDate * 0x10000;\n      offsetDate += this.timeManager.getServerTimeOffset();\n    }\n\n    const useLimit = 100;\n    const middleware = this.middleware.get();\n    const peerId = this.dialogsStorage.isFilterIdForForum(folderId) ? folderId : undefined;\n\n    const processResult = (result: MessagesDialogs | MessagesForumTopics) => {\n      if(!middleware() || result._ === 'messages.dialogsNotModified') return null;\n\n      if(DEBUG) {\n        this.log('messages.getDialogs result:', result);\n      }\n\n      // can reset pinned order here\n      if(!peerId && !offsetId && !offsetDate && !offsetPeerId && folderId !== GLOBAL_FOLDER_ID) {\n        this.dialogsStorage.resetPinnedOrder(folderId);\n      }\n\n      if(!peerId && !offsetDate) {\n        // telegramMeWebManager.setAuthorized(true);\n        this.appDraftsManager.addMissedDialogs();\n      }\n\n      this.appUsersManager.saveApiUsers(result.users);\n      this.appChatsManager.saveApiChats(result.chats);\n      this.saveMessages(result.messages);\n\n      let maxSeenIdIncremented = offsetDate ? true : false;\n      let hasPrepend = false;\n      const noIdsDialogs: BroadcastEvents['dialogs_multiupdate'] = new Map();\n      const setFolderId: REAL_FOLDER_ID = folderId === GLOBAL_FOLDER_ID ? FOLDER_ID_ALL : folderId as REAL_FOLDER_ID;\n      const saveGlobalOffset = !!peerId || folderId === GLOBAL_FOLDER_ID;\n      const items: Array<Dialog | ForumTopic> =\n        (result as MessagesDialogs.messagesDialogsSlice).dialogs as Dialog[] ||\n        (result as MessagesForumTopics).topics as ForumTopic[];\n      forEachReverse(items, (dialog) => {\n        if(!dialog) {\n          return;\n        }\n\n        // const d = Object.assign({}, dialog);\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\n        if(!peerId) {\n          (dialog as Dialog).folder_id ??= setFolderId;\n        }\n\n        this.dialogsStorage.saveDialog({\n          dialog,\n          ignoreOffsetDate: true,\n          saveGlobalOffset\n        });\n\n        if(dialog.peerId === undefined) {\n          this.log.error('bugged dialog?', dialog);\n          debugger;\n          return;\n        }\n\n        if(!maxSeenIdIncremented &&\n          !this.appPeersManager.isChannel(dialog.peerId || this.appPeersManager.getPeerId(dialog.peer))) {\n          this.incrementMaxSeenId(dialog.top_message);\n          maxSeenIdIncremented = true;\n        }\n\n        // if(!folderId && !dialog.folder_id) {\n        //   this.lolSet.add(dialog.peerId);\n        // }\n\n        if(offsetIndex && getDialogIndex(dialog) > offsetIndex) {\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\n          hasPrepend = true;\n        }\n\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\n        if(\n          !peerId &&\n          !getServerMessageId(dialog.read_inbox_max_id) &&\n          !getServerMessageId(dialog.read_outbox_max_id) &&\n          !dialog.unread_count &&\n          getServerMessageId(dialog.top_message)\n        ) {\n          noIdsDialogs.set(dialog.peerId, {dialog: dialog as Dialog});\n\n          this.log.error('noIdsDialogs', dialog, params);\n        } else if(dialog.top_message) { // * fix sending status\n          const topMessage = this.getMessageByPeer(dialog.peerId, dialog.top_message);\n          if(topMessage) {\n            this.setMessageUnreadByDialog(topMessage, dialog);\n            this.dialogsStorage.setDialogToState(dialog);\n          }\n        }\n      });\n\n      if(noIdsDialogs.size) {\n        // setTimeout(() => { // test bad situation\n        const peerIds = [...noIdsDialogs.keys()];\n        const promises = peerIds.map((peerId) => this.reloadConversation(peerId));\n        Promise.all(promises).then(() => {\n          this.rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\n\n          for(let i = 0; i < peerIds.length; ++i) {\n            const peerId = peerIds[i];\n            this.rootScope.dispatchEvent('dialog_unread', {\n              peerId,\n              dialog: this.getDialogOnly(peerId)\n            });\n          }\n        });\n        // }, 10e3);\n      }\n\n      const count = (result as MessagesDialogs.messagesDialogsSlice).count;\n\n      // exclude empty draft dialogs\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\n      let dialogsLength = 0;\n      for(let i = 0, length = folderDialogs.length; i < length; ++i) {\n        const dialog = folderDialogs[i];\n        if(getServerMessageId(dialog.top_message)) {\n          ++dialogsLength;\n        } else {\n          this.log.error('something strange with dialog', dialog);\n        }\n      }\n\n      const isEnd = /* limit > dialogsResult.dialogs.length || */\n        !count ||\n        dialogsLength >= count ||\n        !items.length;\n      if(isEnd) {\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\n      }\n\n      if(hasPrepend) {\n        this.scheduleHandleNewDialogs();\n      } else {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', new Map());\n      }\n\n      const dialogs = items;\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\n      return {\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1],\n        count,\n        dialogs: slicedDialogs\n      };\n    };\n\n    let promise: Promise<ReturnType<typeof processResult>>, params: any;\n    if(peerId) {\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'channels.getForumTopics',\n        params: params = {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          limit: useLimit,\n          offset_date: offsetDate,\n          offset_id: offsetId,\n          offset_topic: 0\n        },\n        options: {\n          // timeout: APITIMEOUT,\n          noErrorBox: true\n        },\n        processResult: (result) => {\n          result = this.dialogsStorage.processTopics(peerId, result);\n          return processResult(result);\n        }\n      });\n    } else {\n      // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\n      // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\n      // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'messages.getDialogs',\n        params: params = {\n          folder_id: folderId,\n          offset_date: offsetDate,\n          offset_id: offsetId,\n          offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n          limit: useLimit,\n          hash: '0'\n        },\n        options: {\n          // timeout: APITIMEOUT,\n          noErrorBox: true\n        },\n        processResult\n      });\n    }\n\n    return promise;\n  }\n\n  public async forwardMessagesInner(\n    peerId: PeerId,\n    fromPeerId: PeerId,\n    mids: number[],\n    options: MessageSendingParams & Partial<{\n      withMyScore: true,\n      dropAuthor: boolean,\n      dropCaptions: boolean\n    }> = {}\n  ) {\n    delete options.replyToMsgId;\n    delete options.threadId;\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    mids = mids.slice().sort((a, b) => a - b);\n\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\n        this.sendText(peerId, originalMessage.message, {\n          entities: originalMessage.entities,\n          scheduleDate: options.scheduleDate,\n          silent: options.silent\n        });\n\n        mids.splice(i--, 1);\n        --length;\n      }\n    }\n\n    if(!mids.length) {\n      return Promise.resolve();\n    }\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    if(options.dropCaptions) {\n      options.dropAuthor = true;\n    }\n\n    const groups: {\n      [groupId: string]: {\n        tempId: string,\n        messages: Message.message[]\n      }\n    } = {};\n\n    const newMids: number[] = [];\n    const newMessages = mids.map((mid) => {\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\n      newMids.push(message.id);\n\n      const keys: Array<keyof Message.message> = [\n        'entities',\n        'media'\n        // 'reply_markup'\n      ];\n\n      const flags: Array<keyof Message.message['pFlags']> = [\n        'invert_media'\n      ];\n\n      if(!options.dropAuthor) {\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\n        keys.push('views', 'forwards');\n\n        if(message.fwd_from?.from_name && peerId === this.appPeersManager.peerId) {\n          delete message.from_id;\n        }\n      }\n\n      if(!options.dropCaptions || !originalMessage.media) {\n        keys.push('message');\n      }\n\n      const replyToMid = (originalMessage.reply_to as MessageReplyHeader.messageReplyHeader)?.reply_to_msg_id;\n      const replyToMessageIdx = mids.indexOf(replyToMid);\n      if(replyToMid && replyToMessageIdx !== -1) {\n        const newReplyToMid = newMids[replyToMessageIdx];\n        message.reply_to = {\n          _: 'messageReplyHeader',\n          reply_to_msg_id: newReplyToMid,\n          pFlags: {}\n        };\n\n        /* this.invokeAfterMessageIsSent(newReplyToMid, 'reply', async(originalMessage) => {\n          message.reply_to.reply_to_msg_id = originalMessage.mid;\n        }); */\n      }\n\n      keys.forEach((key) => {\n        // @ts-ignore\n        message[key] = copy(originalMessage[key]);\n      });\n\n      flags.forEach((key) => {\n        // @ts-ignore\n        message.pFlags[key] = originalMessage.pFlags[key];\n      });\n\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n      if(document) {\n        const types: MyDocument['type'][] = ['round', 'voice'];\n        if(types.includes(document.type)) {\n          (message as MyMessage).pFlags.media_unread = true;\n        }\n\n        if(document.sticker && !this.rootScope.premium) {\n          const effectThumb = getStickerEffectThumb(document);\n          if(effectThumb) {\n            (message.media as MessageMedia.messageMediaDocument).pFlags.nopremium = true;\n          }\n        }\n      }\n\n      if(originalMessage.grouped_id) {\n        const group = groups[originalMessage.grouped_id] ??= {tempId: '' + ++this.groupedTempId, messages: []};\n        group.messages.push(message);\n      }\n\n      return message;\n    });\n\n    for(const groupId in groups) {\n      const group = groups[groupId];\n      if(group.messages.length > 1) {\n        group.messages.forEach((message) => {\n          message.grouped_id = group.tempId;\n        });\n      }\n    }\n\n    newMessages.forEach((message) => {\n      this.beforeMessageSending(message, {\n        isScheduled: !!options.scheduleDate || undefined,\n        sequential: true\n      });\n    });\n\n    const sentRequestOptions: PendingAfterMsg = {};\n    if(this.pendingAfterMsgs[peerId]) {\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n    }\n\n    const promise = /* true ? Promise.resolve() :  */this.apiManager.invokeApiAfter('messages.forwardMessages', {\n      from_peer: this.appPeersManager.getInputPeerById(fromPeerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      random_id: newMessages.map((message) => message.random_id),\n      to_peer: this.appPeersManager.getInputPeerById(peerId),\n      with_my_score: options.withMyScore,\n      silent: options.silent,\n      schedule_date: options.scheduleDate,\n      drop_author: options.dropAuthor,\n      drop_media_captions: options.dropCaptions,\n      send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n    }, sentRequestOptions).then((updates) => {\n      this.log('forwardMessages updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error: ApiError) => {\n      this.onMessagesSendError(newMessages, error);\n      throw error;\n    }).finally(() => {\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n        delete this.pendingAfterMsgs[peerId];\n      }\n    });\n\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.forwardMessages(peerId, fromPeerId, overflowMids, options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public forwardMessages(\n    peerId: PeerId,\n    fromPeerId: PeerId,\n    mids: number[],\n    options: MessageSendingParams & Partial<{\n      withMyScore: true,\n      dropAuthor: boolean,\n      dropCaptions: boolean\n    }> = {}\n  ) {\n    const channelId = this.appPeersManager.isChannel(fromPeerId) ? fromPeerId.toChatId() : undefined;\n    const splitted = this.appMessagesIdsManager.splitMessageIdsByChannels(mids, channelId);\n    const promises = splitted.map(([_channelId, {mids}]) => {\n      return this.forwardMessagesInner(\n        peerId,\n        _channelId ? channelId.toPeerId(true) : this.getMessageByPeer(fromPeerId, mids[0]).peerId,\n        mids,\n        options\n      );\n    });\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public generateEmptyMessage(mid: number): Message.message | Message.messageService {\n    return undefined;\n    // return {\n    //   _: 'messageEmpty',\n    //   id: getServerMessageId(mid),\n    //   mid,\n    //   deleted: true,\n    //   pFlags: {}\n    // };\n  }\n\n  private onMessagesSendError(messages: Message.message[], error?: ApiError) {\n    messages.forEach((message) => {\n      if(message.error === error) {\n        return;\n      }\n\n      if(error) {\n        message.error = error;\n        this.onMessageModification(message);\n        this.rootScope.dispatchEvent('message_error', {storageKey: message.storageKey, tempId: message.mid, error});\n\n        const dialog = this.getDialogOnly(message.peerId);\n        if(dialog) {\n          this.rootScope.dispatchEvent('dialog_unread', {peerId: message.peerId, dialog});\n        }\n      } else {\n        delete message.error;\n        this.onMessageModification(message);\n      }\n    });\n  }\n\n  private onMessageModification(message: MyMessage, storage?: MessagesStorage | MessagesStorageKey) {\n    this.setMessageToStorage(storage ?? this.getHistoryMessagesStorage(message.peerId), message);\n  }\n\n  public mirrorAllMessages(port?: MessageEventSource) {\n    const mirror: Mirrors['messages'] = {};\n    [\n      this.messagesStorageByPeerId,\n      this.scheduledMessagesStorage\n    ].forEach((storages) => {\n      for(const key in storages) {\n        const storage = storages[key];\n        mirror[storage.key] = Object.fromEntries(storage.entries());\n      }\n    });\n\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n      name: 'messages',\n      value: mirror\n    }, port);\n  }\n\n  public getMessagesStorageByKey(key: MessagesStorageKey) {\n    const s = key.split('_');\n    const peerId: PeerId = +s[0];\n    const type: MessagesStorageType = s[1] as any;\n    return type === 'scheduled' ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n  }\n\n  public getMessageFromStorage(storage: MessagesStorage | MessagesStorageKey, mid: number) {\n    storage = this.getMessagesStorage(storage);\n\n    // * use global storage instead\n    if(storage?.type === 'history' && isLegacyMessageId(mid)) {\n      storage = this.getGlobalHistoryMessagesStorage();\n    }\n\n    return storage?.get(mid)/*  || this.generateEmptyMessage(mid) */;\n  }\n\n  public setMessageToStorage(storage: MessagesStorage | MessagesStorageKey, message: MyMessage) {\n    storage = this.getMessagesStorage(storage);\n\n    const {mid} = message;\n    // * global storage mirror\n    if(\n      storage?.type === 'history' &&\n      isLegacyMessageId(mid) &&\n      storage.peerId !== GLOBAL_HISTORY_PEER_ID\n    ) {\n      const globalStorage = this.getGlobalHistoryMessagesStorage();\n      this.setMessageToStorage(globalStorage, message);\n    }\n\n    if(storage.type !== 'grouped') {\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n        name: 'messages',\n        key: joinDeepPath(storage.key, mid),\n        value: message\n      });\n    }\n\n    return storage?.set(mid, message);\n  }\n\n  public deleteMessageFromStorage(storage: MessagesStorage, mid: number) {\n    if(\n      storage?.type === 'history' &&\n      isLegacyMessageId(mid) &&\n      storage.peerId !== GLOBAL_HISTORY_PEER_ID\n    ) {\n      const globalStorage = this.getGlobalHistoryMessagesStorage();\n      this.deleteMessageFromStorage(globalStorage, mid);\n    }\n\n    if(storage.type !== 'grouped') {\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n        name: 'messages',\n        key: joinDeepPath(storage.key, mid)\n      });\n    }\n\n    return storage?.delete(mid);\n  }\n\n  private createMessageStorage(peerId: PeerId, type: MessagesStorageType) {\n    const storage: MessagesStorage = new Map() as any;\n    storage.peerId = peerId;\n    storage.type = type;\n    storage.key = `${peerId}_${type}`;\n\n    /* let num = 0;\n    Object.defineProperty(storage, 'num', {\n      get: () => ++num,\n      set: (_num: number) => num = _num,\n      enumerable: false\n    });\n\n    Object.defineProperty(storage, 'generateIndex', {\n      value: (message: any) => {\n        if(message.index === undefined) {\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\n        }\n      },\n      enumerable: false\n    }); */\n\n    return storage;\n  }\n\n  public getHistoryMessagesStorage(peerId: PeerId) {\n    return this.messagesStorageByPeerId[peerId] ??= this.createMessageStorage(peerId, 'history');\n  }\n\n  public getGlobalHistoryMessagesStorage() {\n    return this.getHistoryMessagesStorage(GLOBAL_HISTORY_PEER_ID);\n  }\n\n  public getMessagesStorage(key: MessagesStorageKey | MessagesStorage): MessagesStorage {\n    if(typeof(key) === 'object') {\n      return key;\n    } else {\n      return this.getMessagesStorageByKey(key);\n    }\n  }\n\n  public getMessageById(messageId: number) {\n    if(isLegacyMessageId(messageId)) {\n      return this.getMessageFromStorage(this.getGlobalHistoryMessagesStorage(), messageId);\n    }\n\n    return this.generateEmptyMessage(messageId);\n\n    // for(const peerId in this.messagesStorageByPeerId) {\n    //   if(this.appPeersManager.isChannel(peerId.toPeerId())) {\n    //     continue;\n    //   }\n\n    //   const message = this.messagesStorageByPeerId[peerId].get(messageId);\n    //   if(message) {\n    //     return message;\n    //   }\n    // }\n\n    // return this.getMessageFromStorage(null, messageId);\n  }\n\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\n    if(!peerId) {\n      return this.getMessageById(messageId);\n    }\n\n    return this.getMessageFromStorage(this.getHistoryMessagesStorage(peerId), messageId);\n  }\n\n  public getMessagePeer(message: any): PeerId {\n    const toId = message?.peer_id && this.appPeersManager.getPeerId(message.peer_id) || NULL_PEER_ID;\n\n    return toId;\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogsStorage.getDialogOnly(peerId);\n  }\n\n  public cantForwardDeleteMids(storageKey: MessagesStorageKey, mids: number[]) {\n    const storage = this.getMessagesStorage(storageKey);\n    let cantForward = !mids.length, cantDelete = !mids.length;\n    for(const mid of mids) {\n      const message = this.getMessageFromStorage(storage, mid);\n      if(!cantForward) {\n        cantForward = !this.canForward(message);\n      }\n\n      if(!cantDelete) {\n        cantDelete = !this.canDeleteMessage(message);\n      }\n\n      if(cantForward && cantDelete) break;\n    }\n\n    return {cantForward, cantDelete};\n  }\n\n  public reloadConversationOrTopic(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      this.dialogsStorage.getForumTopicById(peerId, threadId);\n    } else {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\n  public reloadConversation(inputPeer: PeerId | InputPeer, useThrottled?: boolean) {\n    const log = this.log.bindPrefix('reloadConversation');\n    let promise: CancellablePromise<Dialog>;\n    if(inputPeer !== undefined) {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n\n      let obj = this.reloadConversationsPeers.get(peerId);\n      if(obj && (useThrottled || !obj.sentRequest)) {\n        promise = obj.promise;\n      }\n\n      log.warn({peerId, throttled: !!promise, sentRequest: obj?.sentRequest});\n\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      this.reloadConversationsPeers.set(peerId, obj = {\n        inputDialogPeer: this.appPeersManager.getInputDialogPeerById(inputPeer),\n        promise\n      });\n    }\n\n    if(this.reloadConversationsPromise) {\n      return promise || this.reloadConversationsPromise;\n    }\n\n    log('creating throttled promise');\n    this.reloadConversationsPromise = pause(0).then(() => {\n      const reloadConversationsPeers = new Map(this.reloadConversationsPeers);\n      const inputDialogPeers = [...reloadConversationsPeers.values()].map((obj) => {\n        obj.sentRequest = true;\n        return obj.inputDialogPeer;\n      });\n\n      const fullfillLeft = () => {\n        log('fullfilling left', reloadConversationsPeers);\n        for(const [peerId, obj] of reloadConversationsPeers) {\n          if(this.reloadConversationsPeers.get(peerId) === obj) {\n            this.reloadConversationsPeers.delete(peerId);\n          }\n\n          obj.promise.resolve(undefined);\n        }\n      };\n\n      const invoke = async() => {\n        for(;;) {\n          const result = await this.apiManager.invokeApi(\n            'messages.getPeerDialogs',\n            {peers: inputDialogPeers},\n            {floodMaxTimeout: Infinity}\n          );\n          const currentState = this.apiUpdatesManager.updatesState;\n          const {state} = result;\n          if(currentState.pts && currentState.pts !== state.pts) {\n            this.log.warn('current pts is different, will try again', currentState.pts, state.pts);\n            await pause(500);\n            continue;\n          }\n\n          return result;\n        }\n      };\n\n      return invoke().then((result) => {\n        log('result', result);\n\n        for(const [peerId, obj] of reloadConversationsPeers) {\n          if(this.reloadConversationsPeers.get(peerId) === obj) {\n            this.reloadConversationsPeers.delete(peerId);\n          }\n        }\n\n        this.dialogsStorage.applyDialogs(result);\n\n        result.dialogs.forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(!peerId) {\n            return;\n          }\n\n          const obj = reloadConversationsPeers.get(peerId);\n          obj.promise.resolve(dialog as Dialog);\n          reloadConversationsPeers.delete(peerId);\n        });\n      }, (err) => {\n        log.error(err);\n      }).then(() => {\n        fullfillLeft();\n\n        this.reloadConversationsPromise = null;\n        if(this.reloadConversationsPeers.size) {\n          this.reloadConversation();\n        }\n      });\n    });\n\n    return promise || this.reloadConversationsPromise;\n  }\n\n  public doFlushHistory(\n    peerId: PeerId,\n    just_clear?: boolean,\n    revoke?: boolean,\n    threadId?: number,\n    participantPeerId?: PeerId\n  ): Promise<true> {\n    let promise: Promise<true>;\n    const processResult = (affectedHistory: MessagesAffectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        if(participantPeerId) {\n          const historyStorage = this.getHistoryMessagesStorage(peerId);\n          const deletedMids: number[] = [];\n          for(const [mid, message] of historyStorage) {\n            if(message.fromId === participantPeerId) {\n              deletedMids.push(mid);\n            }\n          }\n\n          this.apiUpdatesManager.processLocalUpdate({\n            _: 'updateDeleteChannelMessages',\n            channel_id: peerId.toChatId(),\n            messages: deletedMids,\n            pts: undefined,\n            pts_count: undefined\n          });\n        }\n\n        return true;\n      }\n\n      return this.doFlushHistory(peerId, just_clear, revoke, threadId);\n    };\n\n    if(participantPeerId) {\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'channels.deleteParticipantHistory',\n        params: {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          participant: this.appPeersManager.getInputPeerById(participantPeerId)\n        },\n        processResult\n      });\n    } else if(!threadId) {\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'messages.deleteHistory',\n        params: {\n          just_clear,\n          revoke,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          max_id: 0\n        },\n        processResult\n      });\n    } else {\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'channels.deleteTopicHistory',\n        params: {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          top_msg_id: getServerMessageId(threadId)\n        },\n        processResult\n      });\n    }\n\n    return promise;\n  }\n\n  public async flushHistory(\n    peerId: PeerId,\n    justClear?: boolean,\n    revoke?: boolean,\n    threadId?: number\n  ) {\n    if(this.appPeersManager.isChannel(peerId) && !threadId) {\n      const promise = this.getHistory({\n        peerId,\n        offsetId: 0,\n        limit: 1\n      });\n\n      const historyResult = await promise;\n\n      const channelId = peerId.toChatId();\n      const maxId = historyResult.history[0] || 0;\n      return this.apiManager.invokeApiSingle('channels.deleteHistory', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        max_id: getServerMessageId(maxId)\n      }).then((bool) => {\n        if(bool) {\n          this.apiUpdatesManager.processLocalUpdate({\n            _: 'updateChannelAvailableMessages',\n            channel_id: channelId,\n            available_min_id: maxId\n          });\n        }\n\n        return bool;\n      });\n    }\n\n    return this.doFlushHistory(peerId, justClear, revoke, threadId).then(() => {\n      if(!threadId) {\n        this.flushStoragesByPeerId(peerId);\n      }\n\n      if(justClear) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog: this.getDialogOnly(peerId)});\n      } else {\n        const key = this.getTypingKey(peerId, threadId);\n        delete this.notificationsToHandle[key];\n        delete this.typings[key];\n\n        if(!threadId) {\n          const c = this.reloadConversationsPeers.get(peerId);\n          if(c) {\n            this.reloadConversationsPeers.delete(peerId);\n            c.promise.resolve(undefined);\n          }\n        }\n\n        this.dialogsStorage.dropDialogOnDeletion(peerId, threadId);\n      }\n    });\n  }\n\n  private flushStoragesByPeerId(peerId: PeerId) {\n    [\n      this.historiesStorage,\n      this.threadsStorage,\n      this.searchesStorage,\n      this.pendingAfterMsgs,\n      this.pendingTopMsgs\n    ].forEach((s) => {\n      delete s[peerId];\n    });\n\n    for(const key in this.pinnedMessages) {\n      if(+key === peerId || key.startsWith(peerId + '_')) {\n        delete this.pinnedMessages[key];\n      }\n    }\n\n    const needSingleMessages = this.needSingleMessages.get(peerId);\n    if(needSingleMessages) {\n      for(const [mid, promise] of needSingleMessages) {\n        promise.resolve(this.generateEmptyMessage(mid));\n      }\n\n      needSingleMessages.clear();\n    }\n\n    [\n      this.messagesStorageByPeerId,\n      this.scheduledMessagesStorage\n    ].forEach((s) => {\n      const ss = s[peerId];\n      if(!ss) {\n        return;\n      }\n\n      if(ss.type === 'history' && !this.appPeersManager.isChannel(peerId)) {\n        const globalStorage = this.getGlobalHistoryMessagesStorage();\n        ss.forEach((message, mid) => {\n          this.deleteMessageFromStorage(globalStorage, mid);\n        });\n      }\n\n      ss.clear();\n      delete s[peerId];\n    });\n\n    this.dialogsStorage.flushForumTopicsCache(peerId);\n  }\n\n  public hidePinnedMessages(peerId: PeerId) {\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.getPinnedMessage(peerId)\n    ])\n    .then(([state, pinned]) => {\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\n      this.rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\n    });\n  }\n\n  public getPinnedMessagesKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? '_' + threadId : '');\n  }\n\n  public getPinnedMessage(peerId: PeerId, threadId?: number) {\n    const p = this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)] ??= {};\n    if(p.promise) return p.promise;\n    else if(p.maxId) return Promise.resolve(p);\n\n    return p.promise = Promise.resolve(this.getHistory({\n      peerId,\n      inputFilter: {_: 'inputMessagesFilterPinned'},\n      offsetId: 0,\n      limit: 1,\n      threadId\n    })).then((result) => {\n      p.count = result.count;\n      p.maxId = result.history[0];\n      return p;\n    }).finally(() => {\n      delete p.promise;\n    });\n  }\n\n  public getPinnedMessagesCount(peerId: PeerId, threadId?: number) {\n    return this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)]?.count;\n  }\n\n  public getPinnedMessagesMaxId(peerId: PeerId, threadId?: number) {\n    return this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)]?.maxId;\n  }\n\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\n    return this.apiManager.invokeApi('messages.updatePinnedMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      unpin,\n      silent,\n      pm_oneside,\n      id: getServerMessageId(mid)\n    }).then((updates) => {\n      // this.log('pinned updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\n    return this.apiManager.invokeApiSingle('messages.unpinAllMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        const storage = this.getHistoryMessagesStorage(peerId);\n        storage.forEach((message) => {\n          if((message as Message.message).pFlags.pinned) {\n            delete (message as Message.message).pFlags.pinned;\n          }\n        });\n\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\n        delete this.pinnedMessages[this.getPinnedMessagesKey(peerId)];\n\n        return true;\n      }\n\n      return this.unpinAllMessages(peerId);\n    });\n  }\n\n  public getAlbumText(grouped_id: string) {\n    const group = this.groupedMessagesStorage[grouped_id];\n    return getAlbumText(Array.from(group.values()) as Message.message[]);\n  }\n\n  public getGroupsFirstMessage(message: Message.message) {\n    if(!message?.grouped_id) return message;\n\n    const storage = this.groupedMessagesStorage[message.grouped_id];\n    let minMid = Number.MAX_SAFE_INTEGER;\n    for(const [mid, message] of storage) {\n      if(message.mid < minMid) {\n        minMid = message.mid;\n      }\n    }\n\n    return this.getMessageFromStorage(storage, minMid) as Message.message;\n  }\n\n  public getMidsByAlbum(groupedId: string, sort: 'asc' | 'desc' = 'asc') {\n    return getObjectKeysAndSort(this.groupedMessagesStorage[groupedId], sort);\n  }\n\n  public getMessagesByAlbum(groupedId: string) {\n    const mids = this.getMidsByAlbum(groupedId, 'asc');\n    const storage = this.groupedMessagesStorage[groupedId];\n    return mids.map((mid) => this.getMessageFromStorage(storage, mid) as Message.message);\n  }\n\n  public getMidsByMessage(message: Message) {\n    if(!message) return [];\n    else if((message as Message.message).grouped_id) return this.getMidsByAlbum((message as Message.message).grouped_id);\n    else return [message.mid];\n  }\n\n  public filterMessages(message: MyMessage, verify: (message: MyMessage) => boolean) {\n    const out: MyMessage[] = [];\n    if((message as Message.message).grouped_id) {\n      const storage = this.groupedMessagesStorage[(message as Message.message).grouped_id];\n      for(const [mid, message] of storage) {\n        if(verify(message)) {\n          out.push(message);\n        }\n      }\n    } else {\n      if(verify(message)) {\n        out.push(message);\n      }\n    }\n\n    return out;\n  }\n\n  public generateTempMessageId(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n\n    let topMessage = dialog?.top_message || 0;\n    let tempMid = this.tempMids[peerId];\n    if(tempMid && tempMid > topMessage) {\n      topMessage = tempMid;\n    }\n\n    tempMid = this.appMessagesIdsManager.generateTempMessageId(topMessage, channelId);\n    return this.tempMids[peerId] = tempMid;\n  }\n\n  public setMessageUnreadByDialog(\n    message: MyMessage,\n    dialog: Dialog | ForumTopic = this.getDialogOnly(message.peerId)\n  ) {\n    if(dialog && message.mid) {\n      if(message.mid > dialog[message.pFlags.out ?\n        'read_outbox_max_id' :\n        'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n      }\n    }\n  }\n\n  public saveMessage(message: Message, options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    // isNew: boolean, // * new - from update\n  }> = {}) {\n    if(!message || message._ === 'messageEmpty') {\n      return;\n    }\n\n    message.pFlags ??= {};\n\n    // * exclude from state\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\n\n    const peerId = this.getMessagePeer(message);\n    const storage = options.storage || this.getHistoryMessagesStorage(peerId);\n    const isChannel = message.peer_id._ === 'peerChannel';\n    const isBroadcast = isChannel && this.appChatsManager.isBroadcast(peerId.toChatId());\n    const isMessage = message._ === 'message';\n    const channelId = isChannel ? peerId.toChatId() : undefined;\n\n    if(options.isOutgoing) {\n      message.pFlags.is_outgoing = true;\n    }\n\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\n    message.mid = mid;\n\n    if(isMessage) {\n      if(options.isScheduled) {\n        message.pFlags.is_scheduled = true;\n      }\n\n      if(message.grouped_id) {\n        const storage = this.groupedMessagesStorage[message.grouped_id] ??= this.createMessageStorage(peerId, 'grouped');\n        this.setMessageToStorage(storage, message);\n      }\n\n      if(message.via_bot_id) {\n        // ! WARNING\n        message.viaBotId = message.via_bot_id as any;\n      }\n    }\n\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n    const replyTo = message.reply_to;\n    if(replyTo) {\n      if(replyTo._ === 'messageReplyHeader') {\n        const replyToChannelId = (replyTo.reply_to_peer_id as Peer.peerChannel)?.channel_id || channelId;\n\n        if(replyTo.reply_to_msg_id) {\n          replyTo.reply_to_msg_id = message.reply_to_mid = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_msg_id, replyToChannelId);\n        }\n\n        if(replyTo.reply_to_top_id) {\n          replyTo.reply_to_top_id = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_top_id, replyToChannelId);\n        }\n      }\n    }\n\n    const replies = isMessage && message.replies;\n    if(replies) {\n      if(replies.max_id) replies.max_id = this.appMessagesIdsManager.generateMessageId(replies.max_id, replies.channel_id);\n      if(replies.read_max_id) replies.read_max_id = this.appMessagesIdsManager.generateMessageId(replies.read_max_id, replies.channel_id);\n    }\n\n    const overwriting = !!peerId;\n    if(!overwriting) {\n      message.date -= this.timeManager.getServerTimeOffset();\n    }\n\n    // storage.generateIndex(message);\n    const myId = this.appPeersManager.peerId;\n\n    const fwdHeader = isMessage && (message as Message.message).fwd_from;\n\n    message.peerId = peerId;\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\n      message.fromId = fwdHeader ? (fwdHeader.from_id ? this.appPeersManager.getPeerId(fwdHeader.from_id) : NULL_PEER_ID) : myId;\n    } else {\n      // message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\n      message.fromId = message.pFlags.post || !message.from_id ? peerId : this.appPeersManager.getPeerId(message.from_id);\n    }\n\n    this.setMessageUnreadByDialog(message);\n\n    if(fwdHeader) {\n      // if(peerId === myID) {\n      if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = this.appMessagesIdsManager.generateMessageId(fwdHeader.saved_from_msg_id, (fwdHeader.saved_from_peer as Peer.peerChannel).channel_id);\n      if(fwdHeader.channel_post) fwdHeader.channel_post = this.appMessagesIdsManager.generateMessageId(fwdHeader.channel_post, (fwdHeader.from_id as Peer.peerChannel).channel_id);\n\n      const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\n      const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\n      if(peer && msgId) {\n        const savedFromPeerId = this.appPeersManager.getPeerId(peer);\n        const savedFromMid = this.appMessagesIdsManager.generateMessageId(msgId, (peer as Peer.peerChannel).channel_id);\n        message.savedFrom = savedFromPeerId + '_' + savedFromMid;\n      }\n\n      /* if(peerId.isAnyChat() || peerId === myID) {\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\n        } */\n      /* } else {\n        apiMessage.fwdPostID = fwdHeader.channel_post;\n      } */\n\n      message.fwdFromId = this.appPeersManager.getPeerId(fwdHeader.from_id);\n\n      if(!overwriting) {\n        fwdHeader.date -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    const mediaContext: ReferenceContext = {\n      type: 'message',\n      peerId,\n      messageId: mid\n    };\n\n    /* if(isMessage) {\n      const entities = message.entities;\n      if(entities && entities.find((entity) => entity._ === 'messageEntitySpoiler')) {\n        message.media = {_: 'messageMediaUnsupported'};\n      }\n    } */\n\n    const unsupported = this.saveMessageMedia(message, mediaContext, options.isScheduled);\n\n    // if(isMessage && !unsupported && message.entities) {\n    //   unsupported = message.entities.some((entity) => entity._ === 'messageEntityCustomEmoji');\n    // }\n\n    if(isMessage && unsupported) {\n      message.media = {_: 'messageMediaUnsupported'};\n      message.message = '';\n      delete message.entities;\n      delete message.totalEntities;\n    }\n\n    if(!isMessage && message.action) {\n      const action = message.action as MessageAction;\n      const suffix = message.fromId === this.appUsersManager.getSelf().id ? 'You' : '';\n      let migrateFrom: PeerId, migrateTo: PeerId;\n\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\n        (action as MessageAction.messageActionChatEditPhoto).photo = this.appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\n      }\n\n      if((action as any).document) {\n        (action as any).document = this.appDocsManager.saveDoc((action as any).photo, mediaContext);\n      }\n\n      switch(action._) {\n        // case 'messageActionChannelEditPhoto':\n        case 'messageActionChatEditPhoto':\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\n          if((action.photo as Photo.photo)?.video_sizes) {\n            // @ts-ignore\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\n          } else {\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\n              // @ts-ignore\n              action._ = 'messageActionChannelEditPhoto';\n            }\n          }\n          break;\n\n        case 'messageActionGroupCall': {\n          // assumeType<MessageAction.messageActionGroupCall>(action);\n\n          this.appGroupCallsManager.saveGroupCall(action.call);\n\n          let type: string;\n          if(action.duration === undefined) {\n            type = 'started';\n          } else {\n            type = 'ended'\n          }\n\n          if(!isBroadcast) {\n            type += '_by' + suffix;\n          }\n\n          // @ts-ignore\n          action.type = type;\n\n          break;\n        }\n\n        case 'messageActionChatEditTitle':\n          /* if(options.isNew) {\n            const chat = appChatsManager.getChat(peerId.toChatId());\n            chat.title = action.title;\n            appChatsManager.saveApiChat(chat, true);\n          } */\n\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelEditTitle';\n          }\n          break;\n\n        case 'messageActionChatDeletePhoto':\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelDeletePhoto';\n          }\n          break;\n\n        case 'messageActionChatAddUser':\n          if(action.users.length === 1) {\n            // @ts-ignore\n            action.user_id = action.users[0];\n            // @ts-ignore\n            if(message.fromId === action.user_id) {\n              if(isChannel) {\n                // @ts-ignore\n                action._ = 'messageActionChatJoined' + suffix;\n              } else {\n                // @ts-ignore\n                action._ = 'messageActionChatReturn' + suffix;\n              }\n            }\n          } else if(action.users.length > 1) {\n            // @ts-ignore\n            action._ = 'messageActionChatAddUsers';\n          }\n          break;\n\n        case 'messageActionChatDeleteUser':\n          if(message.fromId === action.user_id) {\n            // @ts-ignore\n            action._ = 'messageActionChatLeave' + suffix;\n          }\n          break;\n\n        case 'messageActionChannelMigrateFrom':\n          migrateFrom = action.chat_id.toPeerId(true);\n          migrateTo = peerId;\n          break\n\n        case 'messageActionChatMigrateTo':\n          migrateFrom = peerId;\n          migrateTo = action.channel_id.toPeerId(true);\n          break;\n\n        case 'messageActionHistoryClear':\n          // apiMessage.deleted = true;\n          message.clear_history = true;\n          delete message.pFlags.out;\n          delete message.pFlags.unread;\n          break;\n\n        case 'messageActionPhoneCall':\n          // @ts-ignore\n          action.type =\n            (action.pFlags.video ? 'video_' : '') +\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\n            (\n              action.duration !== undefined ? 'ok' : (\n                action.reason._ === 'phoneCallDiscardReasonMissed' ?\n                  'missed' :\n                  'cancelled'\n              )\n            );\n          break;\n      }\n\n      if(migrateFrom &&\n          migrateTo &&\n          !this.getMigration(migrateFrom)) {\n        this.migrateChecks(migrateFrom, migrateTo);\n      }\n    }\n\n    if(isMessage && message.message.length && !message.totalEntities) {\n      this.wrapMessageEntities(message);\n    }\n\n    this.setMessageToStorage(storage, message);\n\n    return message;\n  }\n\n  public saveMessages(messages: any[], options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    // isNew: boolean, // * new - from update\n  }> = {}): (Message.message | Message.messageService)[] {\n    if((messages as any).saved) return messages;\n    (messages as any).saved = true;\n    messages.forEach((message, idx, arr) => {\n      arr[idx] = this.saveMessage(message, options);\n    });\n\n    return messages;\n  }\n\n  public saveMessageMedia(message: {\n    media?: MessageMedia,\n    peerId?: PeerId,\n    mid?: number\n  }, mediaContext: ReferenceContext, isScheduled?: boolean) {\n    const {media} = message;\n    if(!media) {\n      return;\n    }\n\n    let unsupported = false;\n\n    switch(media._) {\n      case 'messageMediaEmpty': {\n        delete message.media;\n        break;\n      }\n\n      case 'messageMediaPhoto': {\n        if(media.ttl_seconds) {\n          unsupported = true;\n        } else {\n          media.photo = this.appPhotosManager.savePhoto(media.photo, mediaContext);\n        }\n\n        if(!(media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\n          delete message.media;\n        }\n\n        break;\n      }\n\n      case 'messageMediaPoll': {\n        const result = this.appPollsManager.savePoll(media.poll, media.results, message.peerId && message as Message.message);\n        media.poll = result.poll;\n        media.results = result.results;\n        break;\n      }\n\n      case 'messageMediaDocument': {\n        if(media.ttl_seconds) {\n          unsupported = true;\n        } else {\n          const originalDoc = media.document;\n          media.document = this.appDocsManager.saveDoc(originalDoc, mediaContext); // 11.04.2020 warning\n          media.alt_document &&= this.appDocsManager.saveDoc(media.alt_document, mediaContext); // 11.04.2020 warning\n\n          if(!media.document && originalDoc._ !== 'documentEmpty') {\n            unsupported = true;\n          }\n        }\n\n        break;\n      }\n\n      case 'messageMediaWebPage': {\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\n        media.webpage = this.appWebPagesManager.saveWebPage(media.webpage, messageKey, mediaContext);\n\n        if(!media.webpage) {\n          delete message.media;\n        }\n\n        break;\n      }\n\n      /* case 'messageMediaGame':\n        AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\n        apiMessage.media.handleMessage = true;\n        break; */\n\n      case 'messageMediaInvoice': {\n        media.photo = this.appWebDocsManager.saveWebDocument(media.photo);\n        const extendedMedia = media.extended_media;\n        if(extendedMedia?._ === 'messageExtendedMedia') {\n          const extendedMediaMedia = extendedMedia.media;\n          (extendedMediaMedia as MessageMedia.messageMediaPhoto).photo = this.appPhotosManager.savePhoto((extendedMediaMedia as MessageMedia.messageMediaPhoto).photo, mediaContext);\n          (extendedMediaMedia as MessageMedia.messageMediaDocument).document = this.appDocsManager.saveDoc((extendedMediaMedia as MessageMedia.messageMediaDocument).document, mediaContext);\n        }\n        break;\n      }\n\n      case 'messageMediaStory': {\n        const cache = this.appStoriesManager.getPeerStoriesCache(this.appPeersManager.getPeerId(media.peer));\n        media.story = this.appStoriesManager.saveStoryItems([media.story], cache)[0];\n        break;\n      }\n\n      case 'messageMediaUnsupported': {\n        unsupported = true;\n        break;\n      }\n    }\n\n    return unsupported;\n  }\n\n  public async getFirstMessageToEdit(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n      let goodMessage: Message.message | Message.messageService;\n      const myPeerId = this.appPeersManager.peerId;\n      for(const mid of slice) {\n        const message = this.getMessageByPeer(peerId, mid);\n        const good = myPeerId === peerId ? message.fromId === myPeerId : message.pFlags.out;\n\n        if(good) {\n          if(await this.canEditMessage(message, 'text')) {\n            goodMessage = message;\n            break;\n          }\n\n          // * this check will allow editing only last message\n          // break;\n        }\n      }\n\n      return goodMessage;\n    }\n  }\n\n  private wrapMessageEntities(_message: Message.message) {\n    const {message, totalEntities} = wrapMessageEntities(_message.message, _message.entities);\n    _message.message = message;\n    _message.totalEntities = totalEntities;\n  }\n\n  public reportMessages(peerId: PeerId, mids: number[], reason: ReportReason['_'], message?: string) {\n    return this.apiManager.invokeApiSingle('messages.report', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      reason: {\n        _: reason\n      },\n      message\n    });\n  }\n\n  public async unblockBot(botId: BotId) {\n    if(await this.appProfileManager.isUserBlocked(botId)) {\n      await this.appUsersManager.toggleBlock(botId.toPeerId(false), false);\n    }\n  }\n\n  public async startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\n    if(!chatId) {\n      await this.unblockBot(botId);\n    }\n\n    if(startParam) {\n      const randomId = randomLong();\n\n      return this.apiManager.invokeApi('messages.startBot', {\n        bot: this.appUsersManager.getUserInput(botId),\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        random_id: randomId,\n        start_param: startParam\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      });\n    }\n\n    const str = '/start';\n    if(chatId) {\n      let promise: Promise<void>;\n      if(this.appChatsManager.isChannel(chatId)) {\n        promise = this.appChatsManager.inviteToChannel(chatId, [botId]);\n      } else {\n        promise = this.appChatsManager.addChatUser(chatId, botId, 0);\n      }\n\n      return promise.catch((error: ApiError) => {\n        if(error?.type == 'USER_ALREADY_PARTICIPANT') {\n          error.handled = true;\n          return;\n        }\n\n        throw error;\n      }).then(() => {\n        return this.sendText(peerId, str + '@' + this.appPeersManager.getPeerUsername(botId.toPeerId()));\n      });\n    }\n\n    return this.sendText(peerId, str);\n  }\n\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\n    this.apiManager.invokeApi('folders.editPeerFolders', {\n      folder_peers: peerIds.map((peerId) => {\n        return {\n          _: 'inputFolderPeer',\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          folder_id: folderId\n        };\n      })\n    }).then((updates) => {\n      const peerId = peerIds[0];\n      if(peerIds.length === 1 && folderId === FOLDER_ID_ALL) {\n        this.appProfileManager.refreshPeerSettingsIfNeeded(peerId);\n      }\n\n      // this.log('editPeerFolders updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\n    });\n  }\n\n  public getFilter(filterId: number) {\n    return this.filtersStorage.getFilter(filterId);\n  }\n\n  public async toggleDialogPin(options: {\n    peerId: PeerId,\n    filterId?: number,\n    topicId?: number\n  }) {\n    const {peerId, topicId, filterId = topicId ? peerId : undefined} = options;\n    if(filterId === undefined) {\n      throw new Error('No filterId');\n    }\n\n    if(filterId > 1) {\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\n    }\n\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, topicId);\n    if(!dialog) throw undefined;\n\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\n\n    if(pinned) {\n      const max = await this.apiManager.getLimit(topicId ? 'topicPin' : (filterId === 1 ? 'folderPin' : 'pin'));\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\n        throw makeError(topicId ? 'PINNED_TOO_MUCH' : 'PINNED_DIALOGS_TOO_MUCH');\n      }\n    }\n\n    if(topicId) {\n      return this.appChatsManager.updatePinnedForumTopic(peerId.toChatId(), topicId, pinned);\n    }\n\n    return this.apiManager.invokeApi('messages.toggleDialogPin', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      pinned\n    }).then((bool) => {\n      const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\n      this.apiUpdatesManager.saveUpdate({\n        _: 'updateDialogPinned',\n        peer: this.appPeersManager.getDialogPeer(peerId),\n        folder_id: filterId,\n        pFlags\n      });\n    });\n  }\n\n  public markDialogUnread(peerId: PeerId, read?: true) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\n\n    if(!unread && dialog.unread_count) {\n      const promise = this.readHistory(peerId, dialog.top_message);\n      if(!dialog.pFlags.unread_mark) {\n        return promise;\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.markDialogUnread', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      unread\n    }).then(() => {\n      const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\n      this.onUpdateDialogUnreadMark({\n        _: 'updateDialogUnreadMark',\n        peer: this.appPeersManager.getDialogPeer(peerId),\n        pFlags\n      });\n    });\n  }\n\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\n    if(!this.getMigration(migrateFrom) && this.appChatsManager.hasChat(migrateTo.toChatId())) {\n      const fromChat = this.appChatsManager.getChat(migrateFrom.toChatId()) as Chat.chat;\n      if(fromChat?.migrated_to && (fromChat.migrated_to as InputChannel.inputChannel).channel_id === migrateTo.toChatId()) {\n        this.migratedFromTo[migrateFrom] = migrateTo;\n        this.migratedToFrom[migrateTo] = migrateFrom;\n\n        this.rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\n\n        this.dialogsStorage.dropDialogWithEvent(migrateFrom);\n      }\n    }\n  }\n\n  private canMessageBeEdited(message: Message, kind: 'text' | 'poll') {\n    if((message as Message.message)?.pFlags?.is_outgoing) {\n      return false;\n    }\n\n    const goodMedias = [\n      'messageMediaPhoto',\n      'messageMediaDocument',\n      'messageMediaWebPage'\n    ];\n\n    if(kind === 'poll') {\n      goodMedias.push('messageMediaPoll');\n    }\n\n    if(!message ||\n        message._ !== 'message' ||\n        message.fwd_from ||\n        message.via_bot_id ||\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\n        message.fromId && this.appUsersManager.isBot(message.fromId)) {\n      return false;\n    }\n\n    if(message.media?._ === 'messageMediaDocument' &&\n        ((message.media.document as Document.document).sticker || (message.media.document as Document.document).type === 'round')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async canEditMessage(message: Message.message | Message.messageService, kind: 'text' | 'poll' = 'text') {\n    if(!message || !this.canMessageBeEdited(message, kind)) {\n      return false;\n    }\n\n    // * second rule for saved messages, because there is no 'out' flag\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === this.appUsersManager.getSelf().id) {\n      return true;\n    }\n\n    const {peerId} = message;\n\n    const canEditMessageInPeer = this.appPeersManager.isBroadcast(peerId) ?\n      this.appChatsManager.hasRights(peerId.toChatId(), 'edit_messages') :\n      (\n        peerId.isAnyChat() && kind === 'text' ?\n          !this.getMigration(message.peerId)?.next && (this.appChatsManager.hasRights(peerId.toChatId(), 'send_plain') || this.appChatsManager.hasRights(peerId.toChatId(), 'send_media')) :\n          true\n      ) && message.pFlags.out;\n\n    if(\n      !canEditMessageInPeer || (\n        message.peer_id._ !== 'peerChannel' &&\n        message.date < (tsNow(true) - (await this.apiManager.getConfig()).edit_time_limit) &&\n        (message as Message.message).media?._ !== 'messageMediaPoll'\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canDeleteMessage(message: MyMessage) {\n    return message && (\n      message.peerId.isUser() ||\n      message.pFlags.out ||\n      this.appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' ||\n      this.appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\n    ) && (!message.pFlags.is_outgoing || !!message.error);\n  }\n\n  public getReplyKeyboard(peerId: PeerId) {\n    return this.getHistoryStorage(peerId).replyMarkup;\n  }\n\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n    if(!message) {\n      return false;\n    }\n\n    const messageReplyMarkup = (message as Message.message).reply_markup;\n    if(!messageReplyMarkup &&\n      !message.pFlags?.out &&\n      !(message as Message.messageService).action) {\n      return false;\n    }\n\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\n      return false;\n    }\n\n    const lastReplyMarkup = historyStorage.replyMarkup;\n    if(messageReplyMarkup) {\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n        return false;\n      }\n\n      if(messageReplyMarkup.pFlags.selective) {\n        return false;\n      }\n\n      if(historyStorage.maxOutId &&\n        message.mid < historyStorage.maxOutId &&\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\n      }\n\n      messageReplyMarkup.mid = message.mid;\n      /* messageReplyMarkup = Object.assign({\n        mid: message.mid\n      }, messageReplyMarkup); */\n\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\n        messageReplyMarkup.fromId = this.appPeersManager.getPeerId(message.from_id || message.peer_id);\n      }\n\n      historyStorage.replyMarkup = messageReplyMarkup;\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    if(message.pFlags.out) {\n      if(lastReplyMarkup) {\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\n        if(lastReplyMarkup.pFlags.single_use &&\n          !lastReplyMarkup.pFlags.hidden &&\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\n          (message as Message.message).message) {\n          lastReplyMarkup.pFlags.hidden = true;\n          // this.log('set', historyStorage.reply_markup)\n          return true;\n        }\n      } else if(!historyStorage.maxOutId ||\n        message.mid > historyStorage.maxOutId) {\n        historyStorage.maxOutId = message.mid;\n      }\n    }\n\n    assumeType<Message.messageService>(message);\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\n      (lastReplyMarkup ?\n        message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId :\n        this.appUsersManager.isBot(message.action.user_id)\n      )\n    ) {\n      historyStorage.replyMarkup = {\n        _: 'replyKeyboardHide',\n        mid: message.mid,\n        pFlags: {}\n      };\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    return false;\n  }\n\n  public getSearchStorage(peerId: PeerId, inputFilter: MyInputMessagesFilter) {\n    return (this.searchesStorage[peerId] ??= {})[inputFilter] ??= this.createHistoryStorage('search');\n  }\n\n  public getSearchCounters(\n    peerId: PeerId,\n    filters: MessagesFilter[],\n    canCache = true,\n    threadId?: number\n  ): Promise<MessagesSearchCounter[]> {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\n      return Promise.resolve(filters.map((filter) => {\n        return {\n          _: 'messages.searchCounter',\n          pFlags: {},\n          filter: filter,\n          count: 0\n        };\n      }));\n    }\n\n    const migration = this.getMigration(peerId);\n\n    const method = 'messages.getSearchCounters';\n    const func = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n    const result = func(method, {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      filters,\n      top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n    });\n\n    if(migration) {\n      const legacyResult = func(method, {\n        peer: this.appPeersManager.getInputPeerById(migration.prev),\n        filters\n      });\n\n      return Promise.all([result, legacyResult]).then(([searchCounters, legacySearchCounters]) => {\n        const out: MessagesSearchCounter[] = searchCounters.map((searchCounter, idx) => {\n          return {\n            ...searchCounter,\n            count: searchCounter.count + legacySearchCounters[idx].count\n          };\n        });\n\n        return out;\n      });\n    }\n\n    return result;\n  }\n\n  public filterMessagesByInputFilterFromStorage(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage | MessagesStorageKey, limit: number) {\n    const _storage = this.getMessagesStorage(storage);\n    return filterMessagesByInputFilter(inputFilter, history.map((mid) => _storage.get(mid)), limit);\n  }\n\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\n    const repliesKey = peerId + '_' + mid;\n    for(const threadKey in this.threadsToReplies) {\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\n    }\n\n    this.getDiscussionMessage(peerId, mid);\n  }\n\n  public generateThreadServiceStartMessage(message: Message.message | Message.messageService) {\n    const threadKey = message.peerId + '_' + message.mid;\n    if(this.threadsServiceMessagesIdsStorage[threadKey]) return;\n\n    const channelId = this.appPeersManager.isChannel(message.peerId) ? message.peerId.toChatId() : undefined;\n    const maxMessageId = getServerMessageId(Math.max(...this.getMidsByMessage(message)));\n    const serviceStartMessage: Message.messageService = {\n      _: 'messageService',\n      pFlags: {\n        is_single: true\n      },\n      id: this.appMessagesIdsManager.generateTempMessageId(maxMessageId, channelId),\n      date: message.date,\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\n      peer_id: message.peer_id,\n      action: {\n        _: 'messageActionDiscussionStarted'\n      },\n      reply_to: this.generateReplyHeader(message.peerId, message.id)\n    };\n\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\n    this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\n  }\n\n  public getThreadServiceMessageId(peerId: PeerId, threadId: number) {\n    return this.threadsServiceMessagesIdsStorage[peerId + '_' + threadId];\n  }\n\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApiSingle('messages.getDiscussionMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((result) => {\n      this.appChatsManager.saveApiChats(result.chats);\n      this.appUsersManager.saveApiUsers(result.users);\n      this.saveMessages(result.messages);\n\n      const message = this.getMessageWithReplies(result.messages[0] as Message.message);\n      const threadKey = message.peerId + '_' + message.mid;\n      const channelId = message.peerId.toChatId();\n\n      this.generateThreadServiceStartMessage(message);\n\n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\n      const newMaxId = result.max_id = this.appMessagesIdsManager.generateMessageId(result.max_id, channelId) || 0;\n      result.read_inbox_max_id = historyStorage.readMaxId = this.appMessagesIdsManager.generateMessageId(result.read_inbox_max_id ?? message.mid, channelId);\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = this.appMessagesIdsManager.generateMessageId(result.read_outbox_max_id, channelId) || 0;\n\n      const first = historyStorage.history.first;\n      if(historyStorage.maxId && historyStorage.maxId < newMaxId && first.isEnd(SliceEnd.Bottom)) {\n        first.unsetEnd(SliceEnd.Bottom);\n      }\n      historyStorage.maxId = newMaxId;\n\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\n\n      return message;\n    });\n  }\n\n  private handleNewMessage(message: MyMessage) {\n    this.rootScope.dispatchEvent('history_multiappend', message);\n  }\n\n  private handleNewDialogs = () => {\n    let newMaxSeenId = 0;\n    const updateMap: BroadcastEvents['dialogs_multiupdate']= new Map();\n\n    const processDialog = (dialog: MTDialog.dialog | ForumTopic) => {\n      const {peerId} = dialog;\n      this.dialogsStorage.pushDialog({dialog});\n      if(!this.appPeersManager.isChannel(peerId)) {\n        newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\n      }\n\n      let cache = updateMap.get(peerId);\n      if(!cache) {\n        updateMap.set(peerId, cache = {});\n      }\n\n      if(dialog._ === 'forumTopic') {\n        (cache.topics ??= new Map()).set(dialog.id, dialog);\n      } else {\n        cache.dialog = dialog;\n      }\n    };\n\n    for(const [peerId, obj] of this.newDialogsToHandle) {\n      const isDialogDefined = 'dialog' in obj;\n      const {dialog, topics} = obj;\n\n      if(isDialogDefined) {\n        if(!dialog) {\n          this.reloadConversation(peerId.toPeerId());\n        } else if(this.dialogsStorage.getDialogOnly(peerId)) { // * can be already dropped\n          processDialog(dialog);\n        }\n      }\n\n      if(topics) {\n        topics?.forEach((topic, id) => {\n          if(!topic) {\n            this.dialogsStorage.getForumTopicById(peerId, id);\n          } else if(this.dialogsStorage.getForumTopic(peerId, id)) { // * can be already dropped\n            processDialog(topic);\n          }\n        });\n      }\n    }\n\n    // this.log('after order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    if(newMaxSeenId !== 0) {\n      this.incrementMaxSeenId(newMaxSeenId);\n    }\n\n    this.rootScope.dispatchEvent('dialogs_multiupdate', updateMap);\n    this.newDialogsToHandle.clear();\n  };\n\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: Dialog | ForumTopic | ForumTopic['id']) {\n    if(peerId !== undefined) {\n      let obj = this.newDialogsToHandle.get(peerId);\n      if(!obj) {\n        this.newDialogsToHandle.set(peerId, obj = {});\n      }\n\n      const isObject = typeof(dialog) === 'object';\n      if(!dialog || (isObject && dialog._ === 'dialog')) {\n        obj.dialog = dialog as Dialog;\n      } else {\n        obj.topics ??= new Map();\n        if(isObject) {\n          obj.topics.set((dialog as ForumTopic).id, dialog as ForumTopic);\n        } else {\n          obj.topics.set(dialog as number, undefined);\n        }\n      }\n    }\n\n    return this.newDialogsHandlePromise ??= pause(0).then(() => {\n      this.newDialogsHandlePromise = undefined;\n      this.handleNewDialogs();\n    });\n  }\n\n  private async deleteMessagesInner(channelId: ChatId, mids: number[], revoke?: boolean, isRecursion?: boolean) {\n    let promise: Promise<any>;\n\n    if(channelId && !isRecursion) {\n      const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\n        mids = mids.filter((mid) => {\n          const message = this.getMessageByPeer(channelId.toPeerId(true), mid);\n          return !!message.pFlags.out;\n        });\n\n        if(!mids.length) {\n          return;\n        }\n      }\n    }\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    const serverMessageIds = mids.map((mid) => {\n      const messageId = getServerMessageId(mid);\n      // filter outgoing messages\n      return this.appMessagesIdsManager.generateMessageId(messageId, channelId) === mid && messageId;\n    }).filter(Boolean);\n\n    if(channelId) {\n      promise = this.apiManager.invokeApi('channels.deleteMessages', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: serverMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: channelId,\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.deleteMessages', {\n        revoke,\n        id: serverMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    }\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.deleteMessagesInner(channelId, overflowMids, revoke, true));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n    const splitted = this.appMessagesIdsManager.splitMessageIdsByChannels(mids, channelId);\n    const promises = splitted.map(([channelId, {mids}]) => {\n      return this.deleteMessagesInner(channelId, mids, revoke);\n    });\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    // console.trace('start read')\n    this.log('readHistory:', peerId, maxId, threadId);\n    const readMaxId = this.getReadMaxIdIfUnread(peerId, threadId);\n    if(!readMaxId) {\n      if(threadId && !force) {\n        const forumTopic = this.dialogsStorage.getForumTopic(peerId, threadId);\n        if(!getServerMessageId(forumTopic.read_inbox_max_id)) {\n          force = true;\n        }\n      }\n\n      if(!force) {\n        const dialog = this.appChatsManager.isForum(peerId.toChatId()) && threadId ?\n          this.dialogsStorage.getForumTopic(peerId, threadId) :\n          this.getDialogOnly(peerId);\n        if(dialog && this.isDialogUnread(dialog)) {\n          force = true;\n        }\n      }\n\n      if(!force) {\n        this.log('readHistory: isn\\'t unread');\n        return Promise.resolve();\n      }\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(historyStorage.triedToReadMaxId >= maxId) {\n      return Promise.resolve();\n    }\n\n    let apiPromise: Promise<any>;\n    if(threadId) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readDiscussion', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          msg_id: getServerMessageId(threadId),\n          read_max_id: getServerMessageId(maxId)\n        });\n        // apiPromise = new Promise<void>((resolve) => resolve());\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelDiscussionInbox',\n        channel_id: peerId.toChatId(),\n        top_msg_id: threadId,\n        read_max_id: maxId\n      });\n    } else if(this.appPeersManager.isChannel(peerId)) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('channels.readHistory', {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelInbox',\n        max_id: maxId,\n        channel_id: peerId.toChatId(),\n        still_unread_count: undefined,\n        pts: undefined\n      });\n    } else {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readHistory', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          max_id: getServerMessageId(maxId)\n        }).then((affectedMessages) => {\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          });\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadHistoryInbox',\n        max_id: maxId,\n        peer: this.appPeersManager.getOutputPeer(peerId),\n        still_unread_count: undefined,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n\n    this.rootScope.dispatchEvent('notification_reset', this.appPeersManager.getPeerString(peerId));\n\n    if(historyStorage.readPromise) {\n      return historyStorage.readPromise;\n    }\n\n    historyStorage.triedToReadMaxId = maxId;\n\n    apiPromise.finally(() => {\n      delete historyStorage.readPromise;\n\n      const {readMaxId} = historyStorage;\n      this.log('readHistory: promise finally', maxId, readMaxId);\n\n      if(readMaxId > maxId) {\n        this.readHistory(peerId, readMaxId, threadId, true);\n      }\n    });\n\n    return historyStorage.readPromise = apiPromise;\n  }\n\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(historyStorage.maxId) {\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\n    }\n  }\n\n  private getUnreadMentionsKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? `_${threadId}` : '');\n  }\n\n  private fixDialogUnreadMentionsIfNoMessage(peerId: PeerId, threadId?: number) {\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\n    if(dialog?.unread_mentions_count) {\n      this.reloadConversationOrTopic(peerId);\n    }\n  }\n\n  private modifyCachedMentions(peerId: PeerId, mid: number, add: boolean, threadId?: number) {\n    const slicedArray = this.unreadMentions[this.getUnreadMentionsKey(peerId, threadId)];\n    if(!slicedArray) return;\n\n    if(add) {\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\n        slicedArray.insertSlice([mid]);\n      }\n    } else {\n      slicedArray.delete(mid);\n    }\n  }\n\n  private fixUnreadMentionsCountIfNeeded(peerId: PeerId, slicedArray: SlicedArray<number>, threadId?: number) {\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\n    if(!slicedArray.length && dialog?.unread_mentions_count) {\n      this.reloadConversationOrTopic(peerId);\n    }\n  }\n\n  public goToNextMention(peerId: PeerId, threadId?: number) {\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then((messages) => {\n      console.log(messages);\n    }); */\n\n    const key = this.getUnreadMentionsKey(peerId, threadId);\n    const promise = this.goToNextMentionPromises[key];\n    if(promise) {\n      return promise;\n    }\n\n    const slicedArray = this.unreadMentions[peerId] ??= new SlicedArray();\n    const length = slicedArray.length;\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\n    if(!length && isTopEnd) {\n      this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray, threadId);\n      return Promise.resolve();\n    }\n\n    let loadNextPromise = Promise.resolve();\n    if(!isTopEnd && length < 25) {\n      loadNextPromise = this.loadNextMentions(peerId, threadId);\n    }\n\n    return this.goToNextMentionPromises[key] = loadNextPromise.then(() => {\n      const last = slicedArray.last;\n      const mid = last && last[last.length - 1];\n      if(mid) {\n        slicedArray.delete(mid);\n        return mid;\n      } else {\n        this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray, threadId);\n      }\n    }).finally(() => {\n      delete this.goToNextMentionPromises[key];\n    });\n  }\n\n  private loadNextMentions(peerId: PeerId, threadId?: number) {\n    const slicedArray = this.unreadMentions[peerId];\n    const maxId = slicedArray.first[0] || 1;\n\n    const backLimit = 50;\n    const addOffset = -backLimit;\n    const limit = backLimit;\n    return this.getUnreadMentions(peerId, maxId, addOffset, limit, undefined, undefined, threadId)\n    .then((messages) => {\n      this.mergeHistoryResult({\n        slicedArray,\n        historyResult: messages,\n        offsetId: maxId === 1 ? 0 : maxId,\n        limit,\n        addOffset,\n        peerId\n      });\n    });\n  }\n\n  private getUnreadMentions(\n    peerId: PeerId,\n    offsetId: number,\n    add_offset: number,\n    limit: number,\n    maxId = 0,\n    minId = 0,\n    threadId?: number\n  ) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getUnreadMentions',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        offset_id: getServerMessageId(offsetId),\n        add_offset,\n        limit,\n        max_id: getServerMessageId(maxId),\n        min_id: getServerMessageId(minId),\n        top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n      },\n      processResult: (messagesMessages) => {\n        assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\n        this.appUsersManager.saveApiUsers(messagesMessages.users);\n        this.appChatsManager.saveApiChats(messagesMessages.chats);\n        this.saveMessages(messagesMessages.messages);\n\n        return messagesMessages;\n      }\n    });\n  }\n\n  public readMessages(peerId: PeerId, msgIds: number[]) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    if(!msgIds.length) {\n      return Promise.resolve();\n    }\n\n    msgIds = msgIds.map((mid) => getServerMessageId(mid));\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n\n      update = {\n        _: 'updateChannelReadMessagesContents',\n        channel_id: channelId,\n        messages: msgIds\n      };\n\n      promise = this.apiManager.invokeApi('channels.readMessageContents', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: msgIds\n      });\n    } else {\n      update = {\n        _: 'updateReadMessagesContents',\n        messages: msgIds,\n        pts: undefined,\n        pts_count: undefined\n      };\n\n      promise = this.apiManager.invokeApi('messages.readMessageContents', {\n        id: msgIds\n      }).then((affectedMessages) => {\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\n        this.apiUpdatesManager.processLocalUpdate(update);\n      });\n    }\n\n    this.apiUpdatesManager.processLocalUpdate(update);\n\n    return promise;\n  }\n\n  public createHistoryStorage(type: HistoryStorage['type']): HistoryStorage {\n    return {count: null, history: new SlicedArray(), type};\n  }\n\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      // threadId = this.getLocalMessageId(threadId);\n      return (this.threadsStorage[peerId] ??= {})[threadId] ??= this.createHistoryStorage('replies');\n    }\n\n    return this.historiesStorage[peerId] ??= this.createHistoryStorage('history');\n  }\n\n  public getHistoryStorageTransferable(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const {\n      count,\n      history,\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    } = historyStorage;\n\n    return {\n      count,\n      history: undefined as HistoryStorage,\n      historySerialized: history.toJSON(),\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    };\n  }\n\n  private getNotifyPeerSettings(peerId: PeerId, threadId?: number) {\n    const inputNotifyPeer = this.appPeersManager.getInputNotifyPeerById({peerId, ignorePeerId: true, threadId});\n    return Promise.all([\n      this.appNotificationsManager.getNotifyPeerTypeSettings(),\n      this.appNotificationsManager.getNotifySettings(inputNotifyPeer)\n    ]).then(([_, peerTypeNotifySettings]) => {\n      return {\n        muted: this.appNotificationsManager.isPeerLocalMuted({peerId, respectType: true, threadId}),\n        peerTypeNotifySettings\n      };\n    });\n  }\n\n  private handleNotifications = () => {\n    ctx.clearTimeout(this.notificationsHandlePromise);\n    this.notificationsHandlePromise = undefined;\n\n    // var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\n    // const timeout = 1000;\n\n    for(const key in this.notificationsToHandle) {\n      const [peerId, threadId] = key.split('_');\n      // if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\n      // continue;\n      // }\n\n      const notifyPeerToHandle = this.notificationsToHandle[key];\n      this.getNotifyPeerSettings(peerId.toPeerId(), threadId ? +threadId : undefined)\n      .then(({muted, peerTypeNotifySettings}) => {\n        const topMessage = notifyPeerToHandle.topMessage;\n        if((muted && !topMessage.pFlags.mentioned) || !topMessage.pFlags.unread) {\n          return;\n        }\n\n        // setTimeout(() => {\n        if(topMessage.pFlags.unread) {\n          this.notifyAboutMessage(topMessage, {\n            fwdCount: notifyPeerToHandle.fwdCount,\n            peerTypeNotifySettings\n          });\n        }\n        // }, timeout);\n      });\n    }\n\n    this.notificationsToHandle = {};\n  };\n\n  public getUpdateAfterReloadKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? '_' + threadId : '');\n  }\n\n  private handleNewUpdateAfterReload(peerId: PeerId, update: Update, threadId?: number) {\n    const set = this.newUpdatesAfterReloadToHandle[this.getUpdateAfterReloadKey(peerId, threadId)] ??= new Set();\n    if(set.has(update)) {\n      this.log.error('here we go again', peerId);\n      return;\n    }\n\n    (update as any).ignoreExisting = true;\n    set.add(update);\n    this.scheduleHandleNewDialogs(peerId, threadId);\n  }\n\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\n    const randomId = update.random_id;\n    const pendingData = this.pendingByRandomId[randomId];\n    if(!pendingData) {\n      return;\n    }\n\n    const {peerId} = pendingData;\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n    const mid = this.appMessagesIdsManager.generateMessageId(update.id, channelId);\n    this.pendingByMessageId[mid] = randomId;\n    // const {storage} = pendingData;\n    // const message = this.getMessageFromStorage(storage, mid);\n    // if(message) { // if message somehow already exists\n    //   this.checkPendingMessage(message);\n    // }\n  };\n\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const storage = this.getHistoryMessagesStorage(peerId);\n\n    // * local update\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\n\n    // * temporary save the message for info (peerId, reply mids...)\n    this.saveMessages([message], {storage: this.createMessageStorage(peerId, 'history')});\n\n    // * check if sent message is already in storage\n    // const oldMessage = this.getMessageFromStorage(storage, message.mid);\n    // if(\n    //   (message as Message.message).pFlags.is_outgoing &&\n    //   oldMessage &&\n    //   !(oldMessage as Message.message).pFlags.is_outgoing\n    // ) {\n    //   this.checkPendingMessage(message);\n    //   return;\n    // }\n\n    const isForum = this.appPeersManager.isForum(peerId);\n    const threadKey = this.getThreadKey(message);\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if((!dialog || this.reloadConversationsPeers.has(peerId)) && !isLocalThreadUpdate) {\n      let good = true;\n      if(peerId.isAnyChat()) {\n        good = this.appChatsManager.isInChat(peerId.toChatId());\n      }\n\n      if(good) {\n        this.handleNewUpdateAfterReload(peerId, update);\n        return;\n      }\n\n      // return;\n    }\n\n    if(threadId && !isLocalThreadUpdate) {\n      const threadStorage = this.threadsStorage[peerId]?.[threadId];\n      const update = {\n        _: 'updateNewDiscussionMessage',\n        message\n      } as Update.updateNewDiscussionMessage;\n\n      if(this.appChatsManager.isForum(peerId.toChatId()) && !this.dialogsStorage.getForumTopic(peerId, threadId)) {\n        // this.dialogsStorage.getForumTopicById(peerId, threadId);\n        this.handleNewUpdateAfterReload(peerId, update, threadId);\n      } else if(threadStorage) {\n        this.onUpdateNewMessage(update);\n      }\n    }\n\n    if(message._ === 'messageService') {\n      const {action} = message;\n      if(action._ === 'messageActionPaymentSent' && message.reply_to) {\n        const replyTo = message.reply_to as MessageReplyHeader.messageReplyHeader;\n        this.rootScope.dispatchEvent('payment_sent', {\n          peerId: replyTo.reply_to_peer_id ?\n            this.appPeersManager.getPeerId(replyTo.reply_to_peer_id) :\n            message.peerId,\n          mid: message.reply_to_mid,\n          receiptMessage: message\n        });\n      }\n\n      if(action._ === 'messageActionTopicEdit' && !isLocalThreadUpdate) {\n        const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\n        if(!topic) {\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\n        } else {\n          const oldTopic = copy(topic);\n\n          if(action.title !== undefined) {\n            topic.title = action.title;\n          }\n\n          if(action.closed !== undefined) {\n            setBooleanFlag(topic.pFlags, 'closed', action.closed);\n          }\n\n          if(action.hidden !== undefined) {\n            setBooleanFlag(topic.pFlags, 'hidden', action.hidden);\n          }\n\n          if(action.icon_emoji_id !== undefined) {\n            topic.icon_emoji_id = action.icon_emoji_id;\n          }\n\n          this.scheduleHandleNewDialogs(peerId, topic);\n\n          this.dialogsStorage.processTopicUpdate(topic, oldTopic);\n        }\n      }\n    }\n\n    /* if(update._ === 'updateNewChannelMessage') {\n      const chat = appChatsManager.getChat(peerId.toChatId());\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n        return;\n      }\n    } */\n\n    this.saveMessages([message], {storage});\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n    /* if((message as Message.message).grouped_id) {\n      this.log('updateNewMessage', message);\n    } */\n\n    this.checkPendingMessage(message);\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if(!isLocalThreadUpdate) {\n      this.updateMessageRepliesIfNeeded(message);\n    }\n\n    // * so message can exist if reloadConversation came back earlier with mid\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\n    if(isExisting) {\n      if(!ignoreExisting) {\n        return false;\n      }\n    } else {\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\n      const firstSlice = historyStorage.history.first;\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\n        let i = 0;\n        for(const length = firstSlice.length; i < length; ++i) {\n          if(message.mid > firstSlice[i]) {\n            break;\n          }\n        }\n\n        firstSlice.splice(i, 0, message.mid);\n      } else {\n        historyStorage.history.unshift(message.mid);\n      }\n\n      if(historyStorage.count !== null) {\n        ++historyStorage.count;\n      }\n    }\n\n    if(!historyStorage.maxId || message.mid > historyStorage.maxId) {\n      historyStorage.maxId = message.mid;\n    }\n\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\n      this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n    }\n\n    const fromId = message.fromId;\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\n      this.appUsersManager.forceUserOnline(fromId, message.date);\n\n      const action: SendMessageAction = {\n        _: 'sendMessageCancelAction'\n      };\n\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\n      if(peerId.isUser()) {\n        update = {\n          _: 'updateUserTyping',\n          action,\n          user_id: fromId\n        };\n      } else if(this.appPeersManager.isChannel(peerId)) {\n        update = {\n          _: 'updateChannelUserTyping',\n          action,\n          channel_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId),\n          top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n        };\n      } else {\n        update = {\n          _: 'updateChatUserTyping',\n          action,\n          chat_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId)\n        };\n      }\n\n      this.apiUpdatesManager.processLocalUpdate(update);\n    }\n\n    // commented to render the message if it's been sent faster than history_append came to main thread\n    // if(!pendingMessage) {\n    this.handleNewMessage(message);\n    // }\n\n    const isTopic = dialog?._ === 'forumTopic';\n    if((isLocalThreadUpdate && !isTopic) || !dialog) {\n      return;\n    }\n\n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\n\n    {\n      if(inboxUnread && message.mid > dialog.top_message) {\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n        ++dialog.unread_count;\n        if(message.pFlags.mentioned) {\n          ++dialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, true, isTopic ? threadId : undefined);\n        }\n\n        releaseUnreadCount();\n      }\n\n      if(message.mid >= dialog.top_message) {\n        this.setDialogTopMessage(message, dialog);\n      }\n    }\n\n    if(((!isLocalThreadUpdate && !isForum) || isTopic) && inboxUnread) {\n      const notifyPeer = threadKey || peerId;\n      const notifyPeerToHandle = this.notificationsToHandle[notifyPeer] ??= {\n        fwdCount: 0,\n        fromId: NULL_PEER_ID\n      };\n\n      if(notifyPeerToHandle.fromId !== fromId) {\n        notifyPeerToHandle.fromId = fromId;\n        notifyPeerToHandle.fwdCount = 0;\n      }\n\n      if((message as Message.message).fwd_from) {\n        ++notifyPeerToHandle.fwdCount;\n      }\n\n      notifyPeerToHandle.topMessage = message;\n\n      this.notificationsHandlePromise ??= ctx.setTimeout(this.handleNotifications, 0);\n    }\n  };\n\n  private onUpdateMessageReactions = (update: Update.updateMessageReactions) => {\n    const {peer, msg_id, reactions} = update;\n    const channelId = (peer as Peer.peerChannel).channel_id;\n    const mid = this.appMessagesIdsManager.generateMessageId(msg_id, channelId);\n    const peerId = this.appPeersManager.getPeerId(peer);\n    const message: MyMessage = this.getMessageByPeer(peerId, mid);\n\n    if(message?._ !== 'message') {\n      return;\n    }\n\n    const recentReactions = reactions?.recent_reactions;\n    if(recentReactions?.length && message.pFlags.out) {\n      const recentReaction = recentReactions[recentReactions.length - 1];\n      const previousReactions = message.reactions;\n      const previousRecentReactions = previousReactions?.recent_reactions;\n      if(\n        this.appPeersManager.getPeerId(recentReaction.peer_id) !== this.appPeersManager.peerId && (\n          !previousRecentReactions ||\n          previousRecentReactions.length <= recentReactions.length\n        ) && (\n          !previousRecentReactions ||\n          !deepEqual(recentReaction, previousRecentReactions[previousRecentReactions.length - 1])\n        )\n      ) {\n        this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n          if(/* muted ||  */!peerTypeNotifySettings.show_previews) return;\n          this.notifyAboutMessage(message, {\n            peerReaction: recentReaction,\n            peerTypeNotifySettings\n          });\n        });\n      }\n    }\n\n    const key = message.peerId + '_' + message.mid;\n    this.pushBatchUpdate('messages_reactions', this.batchUpdateReactions, key, () => copy(message.reactions));\n\n    message.reactions = reactions;\n    this.onMessageModification(message);\n\n    if(!update.local) {\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\n    // this.log('updateDialogUnreadMark', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    if(!dialog) {\n      this.scheduleHandleNewDialogs(peerId);\n    } else {\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(!update.pFlags.unread) {\n        delete dialog.pFlags.unread_mark;\n      } else {\n        dialog.pFlags.unread_mark = true;\n      }\n\n      releaseUnreadCount();\n      this.dialogsStorage.setDialogToState(dialog);\n      this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, {dialog}]]));\n    }\n  };\n\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    // console.trace(dT(), 'edit message', message)\n\n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage});\n    const newMessage: Message = this.getMessageFromStorage(storage, mid);\n\n    this.handleEditedMessage(oldMessage, newMessage, storage);\n\n    const dialog = this.getDialogOnly(peerId);\n\n    // if sender erased mention\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\n      --dialog.unread_mentions_count;\n      this.modifyCachedMentions(peerId, mid, false);\n    } */\n\n    const isTopMessage = dialog?.top_message === mid;\n    if((message as Message.messageService).clear_history) {\n      if(isTopMessage) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog});\n      }\n    } else {\n      let dispatchEditEvent = true;\n      // no sense in dispatching message_edit since only reactions have changed\n      if(oldMessage?._ === 'message' && !deepEqual(oldMessage.reactions, (newMessage as Message.message).reactions)) {\n        const newReactions = (newMessage as Message.message).reactions;\n        (newMessage as Message.message).reactions = oldMessage.reactions;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateMessageReactions',\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          msg_id: message.id,\n          reactions: newReactions\n        });\n\n        dispatchEditEvent = false;\n      }\n\n      dispatchEditEvent && this.rootScope.dispatchEvent('message_edit', {\n        storageKey: storage.key,\n        peerId,\n        mid,\n        message\n      });\n\n      if(isTopMessage) {\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n\n      const map: BroadcastEvents['dialogs_multiupdate'] = new Map();\n      const getUpdateCache = () => {\n        let cache = map.get(peerId);\n        if(!cache) {\n          map.set(peerId, cache = {});\n        }\n\n        return cache;\n      };\n\n      if((isTopMessage || (message as Message.message).grouped_id) && dialog) {\n        getUpdateCache().dialog = dialog;\n      }\n\n      const threadKey = this.getThreadKey(message);\n      if(threadKey) {\n        const topicId = +threadKey.split('_')[1];\n        const topic = this.dialogsStorage.getForumTopic(peerId, topicId);\n        if(topic) {\n          (getUpdateCache().topics ??= new Map()).set(topicId, topic);\n        }\n      }\n\n      if(map.size) {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', map);\n      }\n    }\n  };\n\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox\n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox\n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\n    const maxId = this.appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id, channelId);\n    const threadId = this.appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id, channelId);\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updateReadHistoryInbox).peer);\n\n    const isOut = update._ === 'updateReadHistoryOutbox' ||\n      update._ === 'updateReadChannelOutbox' ||\n      update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\n\n    const isForum = channelId ? this.appChatsManager.isForum(channelId) : false;\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const history = getObjectKeysAndSort(storage, 'desc');\n    const foundDialog = threadId && isForum ?\n      this.dialogsStorage.getForumTopic(peerId, threadId) :\n      this.getDialogOnly(peerId);\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\n    let newUnreadCount = 0;\n    let newUnreadMentionsCount = 0;\n    let foundAffected = false;\n\n    // this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(peerId.isUser() && isOut) {\n      this.appUsersManager.forceUserOnline(peerId.toUserId());\n    }\n\n    if(threadId) {\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\n      if(repliesKey) {\n        const [peerId, mid] = repliesKey.split('_');\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n      }\n    }\n\n    const releaseUnreadCount = foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n    const readMaxId = this.getReadMaxIdIfUnread(peerId, threadId);\n\n    for(let i = 0, length = history.length; i < length; i++) {\n      const mid = history[i];\n      if(mid > maxId) {\n        continue;\n      }\n\n      const message: MyMessage = storage.get(mid);\n\n      if(message.pFlags.out !== isOut) {\n        continue;\n      }\n\n      const messageThreadId = getMessageThreadId(message, isForum);\n      if(threadId && messageThreadId !== threadId) {\n        continue;\n      }\n\n      const isUnread = message.pFlags.unread || (readMaxId && readMaxId < mid);\n\n      if(!isUnread) {\n        break;\n      }\n\n      // this.log.warn('read', messageId, isUnread, message)\n      delete message.pFlags.unread;\n      this.onMessageModification(message, storage); // * mirror it\n      foundAffected ||= true;\n\n      if(!message.pFlags.out && foundDialog) {\n        if(stillUnreadCount === undefined) {\n          newUnreadCount = --foundDialog.unread_count;\n        }\n\n        if(message.pFlags.mentioned) {\n          newUnreadMentionsCount = --foundDialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, false);\n        }\n      }\n\n      this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n    }\n\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\n    else historyStorage.readMaxId = maxId;\n\n    if(foundDialog) {\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\n      else foundDialog.read_inbox_max_id = maxId;\n\n      if(!isOut) {\n        let setCount: number;\n        if(stillUnreadCount !== undefined) {\n          setCount = stillUnreadCount;\n        } else if(\n          newUnreadCount < 0 ||\n          maxId >= foundDialog.top_message ||\n          !readMaxId\n        ) {\n          setCount = 0;\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\n          setCount = newUnreadCount;\n        }\n\n        if(setCount !== undefined) {\n          foundDialog.unread_count = setCount;\n        }\n\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\n          foundDialog.unread_mentions_count = 0;\n        }\n      }\n\n      releaseUnreadCount?.();\n\n      this.dialogsStorage.processDialogForFilters(foundDialog);\n\n      this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      this.dialogsStorage.setDialogToState(foundDialog);\n\n      if(!foundAffected && stillUnreadCount === undefined && !isOut && foundDialog.unread_count) {\n        if(foundDialog._ === 'forumTopic') {\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\n        } else  {\n          this.reloadConversation(peerId);\n        }\n      }\n    }\n\n    if(foundAffected) {\n      this.rootScope.dispatchEvent('messages_read');\n    }\n\n    if(!threadId && channelId) {\n      const threadKeyPart = peerId + '_';\n      for(const threadKey in this.threadsToReplies) {\n        if(threadKey.indexOf(threadKeyPart) === 0) {\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\n          this.rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid) as Message.message);\n        }\n      }\n    }\n  };\n\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\n    const topMsgId = (update as Update.updateChannelReadMessagesContents).top_msg_id;\n    const threadId = topMsgId ? this.appMessagesIdsManager.generateMessageId(topMsgId, channelId) : undefined;\n    const mids = (update as Update.updateReadMessagesContents).messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\n    const peerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(mids);\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\n      if(message) {\n        if(message.pFlags.media_unread) {\n          delete message.pFlags.media_unread;\n          this.onMessageModification(message);\n          this.setDialogToStateIfMessageIsTop(message);\n\n          if(!message.pFlags.out && message.pFlags.mentioned) {\n            this.modifyCachedMentions(peerId, mid, false, threadId);\n          }\n        }\n      } else {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId, threadId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('messages_media_read', {peerId, mids});\n  };\n\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const history = this.getHistoryStorage(peerId).history.slice;\n    const availableMinId = this.appMessagesIdsManager.generateMessageId(update.available_min_id, channelId);\n    const messages = history.filter((mid) => mid <= availableMinId);\n\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\n  };\n\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\n    // const messages = (update as any as Update.updateDeleteChannelMessages).messages;\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(messages);\n\n    if(!peerId) {\n      return;\n    }\n\n    this.apiManager.clearCache('messages.getSearchCounters', (params) => {\n      return this.appPeersManager.getPeerId(params.peer) === peerId;\n    });\n\n    const threadKeys: Set<string> = new Set(), topics: Map<number, ForumTopic> = new Map();\n    for(const mid of messages) {\n      const message = this.getMessageByPeer(peerId, mid);\n      const threadKey = this.getThreadKey(message);\n      if(!threadKey) {\n        continue;\n      }\n\n      const threadId = +threadKey.split('_')[1];\n      if(this.threadsStorage[peerId]?.[threadId]) {\n        threadKeys.add(threadKey);\n\n        if(!topics.has(threadId)) {\n          const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\n          if(topic) {\n            topics.set(threadId, topic);\n          }\n        }\n      }\n    }\n\n    const historyUpdated = this.handleDeletedMessages(\n      peerId,\n      this.getHistoryMessagesStorage(peerId),\n      messages\n    );\n\n    const threadsStorages = Array.from(threadKeys).map((threadKey) => {\n      const [peerId, mid] = threadKey.split('_');\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\n    });\n\n    const historyStorages = [\n      this.getHistoryStorage(peerId),\n      ...threadsStorages\n    ];\n    historyStorages.forEach((historyStorage) => {\n      for(const mid of historyUpdated.msgs) {\n        historyStorage.history.delete(mid);\n      }\n\n      if(historyUpdated.count && historyStorage.count) {\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\n      }\n    });\n\n    this.rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\n\n    const dialogs: (MTDialog.dialog | ForumTopic)[] = [\n      ...topics.values()\n    ];\n\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog) {\n      dialogs.unshift(dialog);\n    }\n\n    dialogs.forEach((dialog) => {\n      const isTopic = dialog._ === 'forumTopic';\n      const affected = historyUpdated.unreadMentions || historyUpdated.unread;\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(historyUpdated.unread) {\n        dialog.unread_count = Math.max(0, dialog.unread_count - historyUpdated.unread);\n      }\n\n      if(historyUpdated.unreadMentions) {\n        dialog.unread_mentions_count = !dialog.unread_count ? 0 : Math.max(0, dialog.unread_mentions_count - historyUpdated.unreadMentions);\n      }\n\n      if(affected) {\n        releaseUnreadCount();\n\n        if(!isTopic) {\n          this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog});\n        }\n      }\n\n      if(historyUpdated.msgs.has(dialog.top_message)) {\n        const historyStorage = this.getHistoryStorage(dialog.peerId, isTopic ? dialog.id : undefined);\n        const slice = historyStorage.history.first;\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n          const mid = slice[0];\n          const message = this.getMessageByPeer(peerId, mid);\n          this.setDialogTopMessage(message, dialog);\n        } else if(isTopic) {\n          this.dialogsStorage.getForumTopicById(peerId, dialog.id);\n        } else {\n          this.reloadConversation(peerId);\n        }\n      }\n    });\n  };\n\n  private onUpdateChannel = (update: Update.updateChannel) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\n\n    const needDialog = this.appChatsManager.isInChat(channelId);\n\n    const canViewHistory = !!getPeerActiveUsernames(channel)[0] || !channel.pFlags.left;\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\n\n    if(canViewHistory !== hasHistory) {\n      delete this.historiesStorage[peerId];\n      this.rootScope.dispatchEvent('history_forbidden', peerId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!!dialog !== needDialog) {\n      if(needDialog) {\n        this.reloadConversation(peerId);\n      } else {\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('channel_update', channelId);\n  };\n\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\n    const peerId = update.channel_id.toPeerId(true);\n\n    // if(this.appPeersManager.isForum(peerId)) {\n    //   const cache = this.dialogsStorage.getForumTopicsCache(peerId);\n    //   if(cache.topics.size) {\n\n    //   }\n    // }\n\n    this.flushStoragesByPeerId(peerId);\n    Promise.all([\n      this.reloadConversation(peerId)\n    ]).then(() => {\n      this.rootScope.dispatchEvent('history_reload', peerId);\n    });\n  };\n\n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\n    const views = update.views;\n    const peerId = update.channel_id.toPeerId(true);\n    const mid = this.appMessagesIdsManager.generateMessageId(update.id, update.channel_id);\n    const message = this.getMessageByPeer(peerId, mid) as Message.message;\n    if(message?.views !== undefined && message.views < views) {\n      message.views = views;\n      this.onMessageModification(message);\n      this.pushBatchUpdate('messages_views', this.batchUpdateViews, message.peerId + '_' + message.mid);\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\n    // this.log('updateServiceNotification', update);\n    if(update.pFlags?.popup) {\n      this.rootScope.dispatchEvent('service_notification', update);\n      return;\n    }\n\n    const fromId = SERVICE_PEER_ID;\n    const peerId = fromId;\n    const messageId = this.generateTempMessageId(peerId);\n    const message: Message.message = {\n      _: 'message',\n      id: messageId,\n      from_id: this.appPeersManager.getOutputPeer(fromId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      pFlags: {unread: true},\n      date: (update.inbox_date || tsNow(true)) + this.timeManager.getServerTimeOffset(),\n      message: update.message,\n      media: update.media,\n      entities: update.entities\n    };\n    if(!this.appUsersManager.hasUser(fromId)) {\n      this.appUsersManager.saveApiUsers([{\n        _: 'user',\n        id: fromId,\n        pFlags: {verified: true},\n        access_hash: '0',\n        first_name: 'Telegram',\n        phone: '42777'\n      }]);\n    }\n    this.saveMessages([message], {isOutgoing: true});\n\n    if(update.inbox_date) {\n      this.pendingTopMsgs[peerId] = messageId;\n      this.onUpdateNewMessage({\n        _: 'updateNewMessage',\n        message,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n  };\n\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updatePinnedMessages).peer);\n\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\n    if(storage.count !== storage.history.length) {\n      if(storage.count !== undefined) {\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];\n      }\n\n      rootScope.broadcast('peer_pinned_messages', peerId);\n      break;\n    } */\n\n    const messages = update.messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const missingMessages = messages.filter((mid) => !storage.has(mid));\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map((mid) => this.reloadMessages(peerId, mid))) : Promise.resolve();\n    getMissingPromise.finally(() => {\n      const werePinned = update.pFlags?.pinned;\n      if(werePinned) {\n        for(const mid of messages) {\n          // storage.history.push(mid);\n          const message = storage.get(mid) as Message.message;\n          message.pFlags.pinned = true;\n          this.onMessageModification(message, storage);\n          this.setDialogToStateIfMessageIsTop(message);\n        }\n\n        /* if(this.pinnedMessages[peerId]?.maxId) {\n          const maxMid = Math.max(...messages);\n          this.pinnedMessages\n        } */\n\n        // storage.history.sort((a, b) => b - a);\n      } else {\n        for(const mid of messages) {\n          // storage.history.findAndSplice((_mid) => _mid === mid);\n          const message = storage.get(mid) as Message.message;\n          delete message.pFlags.pinned;\n          this.onMessageModification(message, storage);\n          this.setDialogToStateIfMessageIsTop(message);\n        }\n      }\n\n      /* const info = this.pinnedMessages[peerId];\n      if(info) {\n        info.count += messages.length * (werePinned ? 1 : -1);\n      } */\n\n      delete this.pinnedMessages[this.getPinnedMessagesKey(peerId)];\n      this.appStateManager.getState().then((state) => {\n        delete state.hiddenPinnedMessages[peerId];\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\n      });\n    });\n  };\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer, notify_settings} = update;\n    const isTopic = peer._ === 'notifyForumTopic';\n    const isPeerType = peer._ === 'notifyPeer' || isTopic;\n    if(!isPeerType) {\n      return;\n    }\n\n    const peerId = this.appPeersManager.getPeerId(peer.peer);\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, isTopic ? this.appMessagesIdsManager.generateMessageId(peer.top_msg_id, (peer.peer as Peer.peerChannel).channel_id) : undefined);\n    if(!dialog) {\n      return;\n    }\n\n    dialog.notify_settings = notify_settings;\n    this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n    this.dialogsStorage.setDialogToState(dialog);\n  };\n\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(!storage) {\n      return;\n    }\n\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\n\n    const oldMessage = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage, isScheduled: true});\n    const newMessage = this.getMessageFromStorage(storage, mid);\n\n    if(oldMessage) {\n      this.handleEditedMessage(oldMessage, newMessage, storage);\n      this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId, mid: message.mid, message});\n    } else {\n      const pendingMessage = this.checkPendingMessage(message);\n      if(!pendingMessage) {\n        this.rootScope.dispatchEvent('scheduled_new', message as Message.message);\n      }\n    }\n  };\n\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mids = update.messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\n      this.handleDeletedMessages(peerId, storage, mids);\n\n      this.rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\n    }\n  };\n\n  private onUpdateMessageExtendedMedia = (update: Update.updateMessageExtendedMedia) => {\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n    const mid = this.appMessagesIdsManager.generateMessageId(update.msg_id, channelId);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    const message = this.getMessageFromStorage(storage, mid) as Message.message;\n    const messageMedia = message.media as MessageMedia.messageMediaInvoice;\n    if(messageMedia.extended_media?._ === 'messageExtendedMedia') {\n      return;\n    }\n\n    messageMedia.extended_media = update.extended_media;\n    this.onUpdateEditMessage({\n      _: 'updateEditMessage',\n      message,\n      pts: 0,\n      pts_count: 0\n    });\n  };\n\n  private onUpdateTranscribedAudio = (update: Update.updateTranscribedAudio) => {\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n    const text = update.text;\n    const mid = this.appMessagesIdsManager.generateMessageId(update.msg_id, channelId);\n\n    this.rootScope.dispatchEvent('message_transcribed', {peerId, mid, text, pending: update.pFlags.pending});\n  };\n\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\n    if(this.isMessageIsTopMessage(message)) {\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\n    }\n  }\n\n  public isMessageIsTopMessage(message: MyMessage) {\n    const dialog = this.getDialogOnly(message.peerId);\n    return dialog && dialog.top_message === message.mid;\n  }\n\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\n    try { // * на всякий случай, скорее всего это не понадобится\n      const threadKey = this.getThreadKey(threadMessage);\n      if(threadKey) {\n        const repliesKey = this.threadsToReplies[threadKey];\n        if(repliesKey) {\n          const [peerId, mid] = repliesKey.split('_');\n\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n        }\n      }\n    } catch(err) {\n      this.log.error('incrementMessageReplies err', err, threadMessage);\n    }\n  }\n\n  private getThreadKey(threadMessage: MyMessage) {\n    let threadKey = '';\n    if(threadMessage?.peerId?.isAnyChat()) {\n      const threadId = getMessageThreadId(threadMessage, this.appChatsManager.isForum(threadMessage.peerId.toChatId()));\n      if(threadId) {\n        threadKey = threadMessage.peerId + '_' + threadId;\n      }\n    }\n\n    return threadKey;\n  }\n\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\n    const promise: Promise<Message.message> = this.reloadMessages(peerId, mid, true).then(() => {\n      const message = this.getMessageByPeer(peerId, mid) as Message.message;\n      if(!message) {\n        return;\n      }\n\n      if(broadcastEventName) {\n        this.rootScope.dispatchEvent(broadcastEventName, message);\n      }\n\n      return message;\n    });\n\n    return promise;\n  }\n\n  private checkPendingMessage(message: MyMessage) {\n    const randomId = this.pendingByMessageId[message.mid];\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\n    if(randomId) {\n      const pendingData = this.pendingByRandomId[randomId];\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\n        this.rootScope.dispatchEvent('history_update', {\n          storageKey: pendingData.storage.key,\n          message,\n          sequential: pendingData.sequential\n        });\n      }\n\n      delete this.pendingByMessageId[message.mid];\n    }\n\n    return pendingMessage;\n  }\n\n  public mutePeer(options: {peerId: PeerId, muteUntil: number, threadId?: number}) {\n    if(!(options = this.appNotificationsManager.validatePeerSettings(options))) {\n      return;\n    }\n\n    const {peerId, muteUntil, threadId} = options;\n    const settings: InputPeerNotifySettings = {\n      _: 'inputPeerNotifySettings'\n    };\n\n    settings.mute_until = muteUntil;\n\n    const peer = this.appPeersManager.getInputPeerById(peerId);\n    return this.appNotificationsManager.updateNotifySettings(threadId ? {\n      _: 'inputNotifyForumTopic',\n      peer,\n      top_msg_id: getServerMessageId(threadId)\n    } : {\n      _: 'inputNotifyPeer',\n      peer\n    }, settings);\n  }\n\n  public togglePeerMute({peerId, mute, threadId}: {peerId: PeerId, mute?: boolean, threadId?: number}) {\n    if(mute === undefined) {\n      mute = !this.appNotificationsManager.isPeerLocalMuted({peerId, respectType: false, threadId});\n    }\n\n    return this.mutePeer({peerId, muteUntil: mute ? MUTE_UNTIL : 0, threadId});\n  }\n\n  private findPeerIdByMids(mids: number[]) {\n    for(let length = mids.length, i = length - 1; i >= 0; --i) {\n      const mid = mids[i];\n      const message = this.getMessageById(mid);\n      if(message) {\n        return message.peerId;\n      }\n    }\n  }\n\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\n      return false;\n    }\n\n    if(peerId.isAnyChat()) {\n      const chatId = peerId.toChatId();\n      if(threadId) {\n        const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\n        if(topic?.pFlags?.closed && !this.appChatsManager.hasRights(chatId, 'manage_topics')) {\n          return false;\n        }\n      }\n\n      // const isChannel = appPeersManager.isChannel(peerId);\n      const chat = this.appChatsManager.getChat(chatId) as Chat.chat;\n      const hasRights = /* isChannel &&  */this.appChatsManager.hasRights(chatId, action, undefined, !!threadId);\n      return /* !isChannel ||  */hasRights && (!chat.pFlags.left || !!threadId);\n    } else {\n      return this.appUsersManager.canSendToUser(peerId);\n    }\n  }\n\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\n    const pendingData = this.pendingByRandomId[randomId];\n    if(!pendingData) {\n      return;\n    }\n\n    const {peerId, tempId, threadId, storage} = pendingData;\n\n    [\n      this.getHistoryStorage(peerId),\n      threadId ? this.getHistoryStorage(peerId, threadId) : undefined\n    ]\n    .filter(Boolean)\n    .forEach((storage) => {\n      storage.history.delete(tempId);\n    });\n\n    // this.log('pending', randomID, historyStorage.pending)\n\n    const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\n    if(tempMessage) {\n      delete finalMessage.pFlags.is_outgoing;\n      delete finalMessage.pending;\n      delete finalMessage.error;\n      delete finalMessage.random_id;\n      delete finalMessage.send;\n    }\n\n    this.rootScope.dispatchEvent('messages_pending');\n\n    delete this.pendingByRandomId[randomId];\n\n    this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\n\n    return tempMessage;\n  }\n\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\n    const callbacks = this.tempFinalizeCallbacks[tempId];\n    // this.log.warn(callbacks, tempId);\n    if(callbacks !== undefined) {\n      for(const name in callbacks) {\n        const {deferred, callback} = callbacks[name];\n        // this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\n        callback(message).then(deferred.resolve.bind(deferred), deferred.reject.bind(deferred));\n      }\n\n      delete this.tempFinalizeCallbacks[tempId];\n    }\n\n    // set cached url to media\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      const {photo: newPhoto, document: newDoc} = message.media as any;\n      if(newPhoto) {\n        const photo = this.appPhotosManager.getPhoto('' + tempId);\n        if(/* photo._ !== 'photoEmpty' */photo) {\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\n          const oldCacheContext = this.thumbsStorage.getCacheContext(photo, THUMB_TYPE_FULL);\n          this.thumbsStorage.setCacheContextURL(newPhoto, newPhotoSize.type, oldCacheContext.url, oldCacheContext.downloaded);\n\n          // const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\n          // const downloadOptions = getPhotoDownloadOptions(newPhoto, photoSize);\n          // const fileName = getFileNameByLocation(downloadOptions.location);\n          // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n        }\n      } else if(newDoc) {\n        const oldDoc = this.appDocsManager.getDoc('' + tempId);\n        if(oldDoc) {\n          const oldCacheContext = this.thumbsStorage.getCacheContext(oldDoc);\n          if(\n            /* doc._ !== 'documentEmpty' &&  */\n            oldDoc.type &&\n            oldDoc.type !== 'sticker' &&\n            oldDoc.mime_type !== 'image/gif' &&\n            oldCacheContext.url\n          ) {\n            this.thumbsStorage.setCacheContextURL(newDoc, undefined, oldCacheContext.url, oldCacheContext.downloaded);\n\n            // const fileName = getDocumentInputFileName(newDoc);\n            // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n          }\n        }\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\n        delete this.appPollsManager.polls[tempId];\n        delete this.appPollsManager.results[tempId];\n      }\n    }\n\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\n    this.deleteMessageFromStorage(storage, tempId);\n\n    if(!(tempMessage as Message.message).reply_markup && (message as Message.message).reply_markup) {\n      setTimeout(() => { // TODO: refactor it to normal buttons adding\n        if(!this.getMessageFromStorage(storage, message.mid)) {\n          return;\n        }\n\n        this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId: message.peerId, mid: message.mid, message});\n      }, 0);\n    }\n\n    this.handleReleasingMessage(tempMessage, storage);\n    this.onMessageModification(message, storage); // * mirror it\n\n    this.rootScope.dispatchEvent('message_sent', {storageKey: storage.key, tempId, tempMessage, mid: message.mid, message});\n  }\n\n  public incrementMaxSeenId(maxId: number) {\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\n      return false;\n    }\n\n    this.maxSeenId = maxId;\n    this.appStateManager.pushToState('maxSeenMsgId', maxId);\n\n    this.apiManager.invokeApi('messages.receivedMessages', {\n      max_id: getServerMessageId(maxId)\n    });\n  }\n\n  public async getMessageReactionsListAndReadParticipants(\n    message: Message.message,\n    limit?: number,\n    reaction?: Reaction,\n    offset?: string,\n    skipReadParticipants?: boolean,\n    skipReactionsList?: boolean\n  ) {\n    const emptyMessageReactionsList = {\n      reactions: [] as MessagePeerReaction[],\n      count: 0,\n      next_offset: undefined as string\n    };\n\n    const canViewMessageReadParticipants = await this.canViewMessageReadParticipants(message);\n    limit ??= canViewMessageReadParticipants ? 100 : 50;\n\n    return Promise.all([\n      canViewMessageReadParticipants && !reaction && !skipReadParticipants ? this.getMessageReadParticipants(message.peerId, message.mid).catch(() => [] as ReadParticipantDate[]) : [] as ReadParticipantDate[],\n\n      message.reactions?.recent_reactions?.length && !skipReactionsList ? this.appReactionsManager.getMessageReactionsList(message.peerId, message.mid, limit, reaction, offset).catch((err) => emptyMessageReactionsList) : emptyMessageReactionsList\n    ]).then(([readParticipantDates, messageReactionsList]) => {\n      const filteredReadParticipants = readParticipantDates.slice();\n      forEachReverse(filteredReadParticipants, ({user_id}, idx, arr) => {\n        if(messageReactionsList.reactions.some((reaction) => this.appPeersManager.getPeerId(reaction.peer_id) === user_id.toPeerId())) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      let combined: {\n        peerId: PeerId,\n        date?: number,\n        reaction?: Reaction\n      }[] = messageReactionsList.reactions.map((reaction) => {\n        return {\n          peerId: this.appPeersManager.getPeerId(reaction.peer_id),\n          reaction: reaction.reaction,\n          date: reaction.date\n        };\n      });\n\n      combined = combined.concat(filteredReadParticipants.map(({user_id, date}) => ({date, peerId: user_id.toPeerId()})));\n\n      return {\n        reactions: messageReactionsList.reactions,\n        reactionsCount: messageReactionsList.count,\n        readParticipantDates: readParticipantDates,\n        combined: combined,\n        nextOffset: messageReactionsList.next_offset\n      };\n    });\n  }\n\n  public getMessageReadParticipants(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApiSingle('messages.getMessageReadParticipants', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((readParticipantDates) => { // ! convert long to number\n      readParticipantDates.forEach((readParticipantDate) => readParticipantDate.user_id = readParticipantDate.user_id.toUserId());\n      return readParticipantDates;\n    });\n  }\n\n  public async canViewMessageReadParticipants(message: Message) {\n    if(\n      message?._ !== 'message' ||\n      message.pFlags.is_outgoing ||\n      !message.pFlags.out ||\n      !this.appPeersManager.isAnyGroup(message.peerId)\n    ) {\n      return false;\n    }\n\n    const chat = this.appChatsManager.getChat(message.peerId.toChatId()) as Chat.chat | Chat.channel;\n    const appConfig = await this.apiManager.getAppConfig();\n    return chat.participants_count <= appConfig.chat_read_mark_size_threshold &&\n      (tsNow(true) - message.date) < appConfig.chat_read_mark_expire_period;\n  }\n\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\n    if(!mids.length) {\n      return;\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getMessagesViews', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      increment: true\n    }).then((views) => {\n      const updates: Update[] = new Array(mids.length);\n      for(let i = 0, length = mids.length; i < length; ++i) {\n        updates[i] = {\n          _: 'updateChannelMessageViews',\n          channel_id: peerId.toChatId(),\n          id: mids[i],\n          views: views.views[i].views\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updates',\n        updates,\n        chats: views.chats,\n        users: views.users\n      });\n    });\n  }\n\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\n    fwdCount: number,\n    peerReaction: MessagePeerReaction,\n    peerTypeNotifySettings: PeerNotifySettings\n  }> = {}) {\n    const peerId = this.getMessagePeer(message);\n\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\n      return;\n    }\n\n    const tabs = appTabsManager.getTabs();\n    let tab = tabs.find((tab) => {\n      const {chatPeerIds} = tab.state;\n      return chatPeerIds[chatPeerIds.length - 1] === peerId;\n    });\n\n    if(!tab && tabs.length) {\n      tabs.sort((a, b) => a.state.idleStartTime - b.state.idleStartTime);\n      tab = !tabs[0].state.idleStartTime ? tabs[0] : tabs[tabs.length - 1];\n    }\n\n    const port = MTProtoMessagePort.getInstance<false>();\n    port.invokeVoid('notificationBuild', {\n      message,\n      ...options\n    }, tab?.source);\n  }\n\n  public getScheduledMessagesStorage(peerId: PeerId) {\n    return this.scheduledMessagesStorage[peerId] ??= this.createMessageStorage(peerId, 'scheduled');\n  }\n\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\n  }\n\n  public getScheduledMessages(peerId: PeerId) {\n    if(!this.canSendToPeer(peerId)) return;\n\n    const storage = this.getScheduledMessagesStorage(peerId);\n    if(storage.size) {\n      return [...storage.keys()];\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getScheduledHistory', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      hash: ''\n    }).then((historyResult) => {\n      if(historyResult._ !== 'messages.messagesNotModified') {\n        this.appUsersManager.saveApiUsers(historyResult.users);\n        this.appChatsManager.saveApiChats(historyResult.chats);\n\n        const storage = this.getScheduledMessagesStorage(peerId);\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\n        return [...storage.keys()];\n      }\n\n      return [];\n    });\n  }\n\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.sendScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.deleteScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getMessageWithReplies(message: Message.message) {\n    return this.filterMessages(message, (message) => !!(message as Message.message).replies)[0] as any;\n  }\n\n  public getMessageWithCommentReplies(message: Message.message) {\n    if(message.peerId !== REPLIES_PEER_ID) {\n      message = this.getMessageWithReplies(message);\n      const replies = message?.replies;\n      if(!(replies && replies.pFlags.comments && replies.channel_id.toChatId() !== REPLIES_HIDDEN_CHANNEL_ID)) {\n        return;\n      }\n    }\n\n    return message;\n  }\n\n  public isFetchIntervalNeeded(peerId: PeerId) {\n    return peerId.isAnyChat() && (\n      !this.appChatsManager.isInChat(peerId.toChatId()) ||\n      this.appChatsManager.isForum(peerId.toChatId())\n    );\n  }\n\n  // public async getNewHistory(peerId: PeerId, threadId?: number) {\n  //   if(!this.isFetchIntervalNeeded(peerId)) {\n  //     return;\n  //   }\n\n  //   const historyStorage = this.getHistoryStorage(peerId, threadId);\n  //   const slice = historyStorage.history.slice;\n  //   if(!slice.isEnd(SliceEnd.Bottom)) {\n  //     return;\n  //   }\n\n  //   delete historyStorage.maxId;\n  //   slice.unsetEnd(SliceEnd.Bottom);\n\n  //   // if there is no id - then request by first id because cannot request by id 0 with backLimit\n  //   const historyResult = await this.getHistory({peerId, offsetId: slice[0] ?? 1, limit: 0, backLimit: 50, threadId});\n  //   for(let i = 0, length = historyResult.history.length; i < length; ++i) {\n  //     this.handleNewMessage(this.getMessageByPeer(peerId, historyResult.history[i]));\n  //   }\n\n  //   return {isBottomEnd: historyStorage.history.slice.isEnd(SliceEnd.Bottom)};\n  // }\n\n  public getMigration(peerId: PeerId) {\n    const next = this.migratedFromTo[peerId];\n    const prev = this.migratedToFrom[peerId];\n    return next || prev ? {next, prev} : undefined;\n  }\n\n  /**\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\n   */\n  public getHistory(options: RequestHistoryOptions & {\n    backLimit?: number,\n    historyStorage?: HistoryStorage\n  }): Promise<HistoryResult> | HistoryResult {\n    options.offsetId ??= 0;\n\n    if(options.addOffset === undefined) {\n      options.addOffset = 0;\n\n      if(options.backLimit) {\n        options.addOffset = -options.backLimit;\n        options.limit += options.backLimit;\n      }\n    }\n\n    options.historyStorage ??= options.inputFilter ? this.createHistoryStorage('search') : this.getHistoryStorage(options.peerId, options.threadId);\n\n    const {historyStorage, limit, addOffset, offsetId} = options;\n\n    if(this.appPeersManager.isPeerRestricted(options.peerId)) {\n      const first = historyStorage.history.first;\n      first.setEnd(SliceEnd.Both);\n\n      const slice = first.slice(0, 0);\n      slice.setEnd(SliceEnd.Both);\n\n      return {\n        count: 0,\n        history: Array.from(slice),\n        isEnd: slice.getEnds(),\n        offsetIdOffset: 0\n      };\n    }\n\n    const haveSlice = historyStorage.history.sliceMe(offsetId, addOffset, limit);\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\n      return {\n        count: historyStorage.count,\n        history: Array.from(haveSlice.slice),\n        isEnd: haveSlice.slice.getEnds(),\n        offsetIdOffset: haveSlice.offsetIdOffset\n      };\n    }\n\n    return this.fillHistoryStorage(\n      options as Modify<typeof options, {historyStorage: HistoryStorage}>\n    ).then((historyResult) => {\n      if(options.inputFilter) {\n        // const migration = this.getMigration(options.peerId);\n        // if(migration) {\n        //   const excludeMid = this.appMessagesIdsManager.generateMessageId(1, migration.next || options.peerId);\n        //   const idx = f.indexOf(excludeMid);\n        //   if(idx !== -1) {\n        //     f.splice(idx, 1);\n        //   }\n        // }\n\n        const mids = historyResult.messages.map((message) => message.mid);\n\n        return {\n          count: (historyResult as MessagesMessages.messagesMessagesSlice).count ?? historyStorage.count,\n          history: mids,\n          isEnd: historyStorage.history.slice.getEnds(),\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice)?.offset_id_offset || 0,\n          nextRate: (historyResult as MessagesMessages.messagesMessagesSlice)?.next_rate,\n          messages: historyResult.messages as MyMessage[]\n        };\n      }\n\n      const slice = historyStorage.history.sliceMe(offsetId, addOffset, limit);\n      const f = slice?.slice || historyStorage.history.constructSlice();\n      return {\n        count: historyStorage.count,\n        history: Array.from(f),\n        isEnd: f.getEnds(),\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\n      };\n    });\n  }\n\n  public isHistoryResultEnd({\n    historyResult,\n    limit,\n    addOffset,\n    offsetId,\n    offsetPeerId,\n    inputFilter,\n    peerId\n  }: {\n    historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>,\n  } & Pick<RequestHistoryOptions, 'limit' | 'addOffset' | 'offsetId' | 'offsetPeerId' | 'peerId' | 'inputFilter'>) {\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n\n    const mids = messages.map(({mid}) => mid);\n\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\n\n    const topWasMeantToLoad = addOffset < 0 ? limit + addOffset : limit;\n    const bottomWasMeantToLoad = Math.abs(addOffset);\n\n    // * means global search\n    // * have to reset offsetId, because messages aren't sorted and can be loaded only from the top\n    if(!peerId && inputFilter) {\n      offsetId = 0;\n    }\n\n    let offsetIdOffset = offset_id_offset;\n    let isTopEnd = false, isBottomEnd = !offsetId;\n    let topLoaded = messages.length, bottomLoaded = 0;\n    let isOffsetIncluded = false;\n\n    const serverOffsetId = offsetId && getServerMessageId(offsetId);\n    if(serverOffsetId) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offsetId > mids[i]) {\n          break;\n        }\n      }\n\n      isOffsetIncluded = mids.includes(offsetId);\n      topLoaded = messages.length - i;\n      bottomLoaded = i;\n    }\n\n    // offsetIdOffset = undefined;\n\n    // if(offsetIdOffset === undefined && !bottomWasMeantToLoad) {\n    //   offsetIdOffset = 0;\n    // }\n\n    if(offsetIdOffset !== undefined) {\n      isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\n      isBottomEnd = !offsetIdOffset || (addOffset < 0 && (offsetIdOffset + addOffset) <= 0);\n    } else if(serverOffsetId) {\n      if(topWasMeantToLoad) isTopEnd = topLoaded < topWasMeantToLoad;\n      if(bottomWasMeantToLoad) isBottomEnd = bottomLoaded < bottomWasMeantToLoad;\n\n      if(isTopEnd || isBottomEnd) {\n        offsetIdOffset = isTopEnd ? count - topLoaded : bottomLoaded - +isOffsetIncluded;\n      }\n    } else if(messages.length >= count) {\n      isTopEnd = true;\n      isBottomEnd = true;\n    }\n\n    offsetIdOffset ??= 0;\n\n    return {\n      count,\n      offsetIdOffset,\n      isTopEnd,\n      isBottomEnd,\n      mids,\n      topWasMeantToLoad,\n      bottomWasMeantToLoad,\n      topLoaded,\n      bottomLoaded\n    };\n  }\n\n  public mergeHistoryResult(options: RequestHistoryOptions & {\n    slicedArray: SlicedArray<number>,\n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0]['historyResult'],\n    historyStorage?: HistoryStorage\n  }) {\n    const {\n      slicedArray,\n      historyResult,\n      offsetId,\n      peerId,\n      historyStorage\n    } = options;\n\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n    const isEnd = this.isHistoryResultEnd(options);\n    const {count, offsetIdOffset, mids} = isEnd;\n    const migration = this.getMigration(peerId);\n\n    if(migration && historyStorage && historyStorage.type !== 'replies') {\n      if(migration.prev) {\n        isEnd.isTopEnd = false;\n      } else if(migration.next) {\n        if(isEnd.isBottomEnd) {\n          mids.unshift(this.appMessagesIdsManager.generateMessageId(1, migration.next.toChatId()));\n          isEnd.isBottomEnd = false;\n        }\n      }\n    }\n\n    // * add bound manually.\n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\n    // * check that offset_id is not 0\n    if(offsetId && getServerMessageId(offsetId) && !mids.includes(offsetId) && offsetIdOffset < count) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offsetId > mids[i]) {\n          break;\n        }\n      }\n\n      mids.splice(i, 0, offsetId);\n    }\n\n    const slice = slicedArray.insertSlice(mids) || slicedArray.slice;\n    if(isEnd.isTopEnd) {\n      slice.setEnd(SliceEnd.Top);\n    }\n\n    if(isEnd.isBottomEnd) {\n      slice.setEnd(SliceEnd.Bottom);\n    }\n\n    return {slice, mids, messages, ...isEnd};\n  }\n\n  private async fillHistoryStorage(options: RequestHistoryOptions & {\n    historyStorage: HistoryStorage,\n    recursion?: boolean\n  }) {\n    const {\n      offsetId,\n      historyStorage,\n      inputFilter,\n      recursion       // save before setting\n    } = options;\n\n    options.recursion = true;\n\n    let {peerId} = options;\n\n    const wasMaxId = historyStorage.maxId;\n    const middleware = this.middleware.get();\n    let migration = this.getMigration(peerId);\n\n    let requestPeerId = peerId;\n    if(offsetId && migration?.prev && getServerMessageId(offsetId) === offsetId) {\n      requestPeerId = migration.prev;\n    }\n\n    peerId = options.peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    const isRequestingLegacy = requestPeerId !== peerId;\n\n    const historyResult = await this.requestHistory({\n      ...options,\n      peerId: requestPeerId\n    });\n\n    if(!middleware()) {\n      return;\n    }\n\n    const mergedResult = this.mergeHistoryResult({\n      ...options,\n      slicedArray: historyStorage.history,\n      historyResult,\n      peerId: requestPeerId\n    });\n\n    const {\n      count,\n      isBottomEnd,\n      isTopEnd,\n      slice,\n      messages,\n      topWasMeantToLoad,\n      bottomWasMeantToLoad,\n      topLoaded,\n      bottomLoaded\n    } = mergedResult;\n\n    if(!isRequestingLegacy) {\n      historyStorage.count = count;\n    }\n\n    if(!inputFilter) for(let i = 0, length = messages.length; i < length; ++i) {\n      const message = messages[i] as MyMessage;\n      if(this.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    if(!inputFilter && isBottomEnd) {\n      const newMaxId = slice[0];\n\n      if(historyStorage.maxId === wasMaxId) {\n        const first = historyStorage.history.first;\n        if(first !== slice) {\n          historyStorage.history.deleteSlice(first);\n        }\n\n        if(historyStorage.maxId !== newMaxId) {\n          historyStorage.maxId = slice[0]; // ! WARNING\n\n          this.reloadConversation(peerId); // when top_message is deleted but cached\n        }\n      }\n    }\n\n    // * load album missing messages\n    const firstMessage = messages[0] as Message.message;\n    const lastMessage = messages[messages.length - 1] as Message.message;\n\n    if(!inputFilter && !isBottomEnd && firstMessage?.grouped_id) {\n      await this.getHistory({\n        ...options,\n        offsetId: firstMessage.mid,\n        limit: 20,\n        addOffset: -10\n      });\n\n      if(!middleware()) {\n        return;\n      }\n    }\n\n    if(!inputFilter && !isTopEnd && lastMessage?.grouped_id && lastMessage.grouped_id !== firstMessage?.grouped_id) {\n      await this.getHistory({\n        ...options,\n        offsetId: lastMessage.mid,\n        limit: 20,\n        addOffset: -10\n      });\n\n      if(!middleware()) {\n        return;\n      }\n    }\n    // * album end\n\n    if(options.threadId) {\n      return historyResult;\n    }\n\n    // * support migrated chats\n    // * if found migrated chat during the load\n    migration ??= this.getMigration(peerId);\n\n    if(migration?.prev && topWasMeantToLoad !== topLoaded && !isTopEnd) {\n      const toLoad = topWasMeantToLoad - topLoaded;\n      const migratedResult = await this.fillHistoryStorage({\n        ...options,\n        peerId: migration.prev,\n        offsetId: 0,\n        limit: toLoad,\n        addOffset: 0\n      });\n\n      historyResult.messages.push(...migratedResult.messages);\n\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\n    }/*  else if(migration?.prev && inputFilter) {\n      const migratedResult = await this.requestHistory({\n        ...options,\n        peerId: migration.prev,\n        offsetId: 0,\n        limit: 1\n      });\n\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\n\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\n    } */ else if((migration?.next || isRequestingLegacy) && bottomWasMeantToLoad !== bottomLoaded && !isBottomEnd) {\n      const toLoad = bottomWasMeantToLoad - bottomLoaded;\n      const migratedResult = await this.fillHistoryStorage({\n        ...options,\n        offsetId: this.appMessagesIdsManager.generateMessageId(1, peerId.toChatId()),\n        limit: toLoad,\n        addOffset: -toLoad\n      });\n\n      historyResult.messages.unshift(...migratedResult.messages);\n\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\n\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\n    } else if(migration && inputFilter && !recursion) {\n      const migratedResult = await this.requestHistory({\n        ...options,\n        peerId: isRequestingLegacy ? peerId : migration.prev,\n        offsetId: 0,\n        limit: 1\n      });\n\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\n\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\n    }\n\n    if(!middleware()) {\n      return;\n    }\n    // * migration end\n\n    return historyResult;\n  }\n\n  public requestHistory({\n    peerId,\n    offsetId = 0,\n    limit = 50,\n    addOffset = 0,\n    offsetDate = 0,\n    threadId = 0,\n\n    offsetPeerId,\n    nextRate,\n    folderId,\n    query,\n    inputFilter,\n    minDate,\n    maxDate\n  }: RequestHistoryOptions) {\n    const offsetMessage = offsetId && this.getMessageByPeer(offsetPeerId || peerId, offsetId);\n    offsetPeerId ??= offsetMessage?.peerId;\n\n    offsetId = getServerMessageId(offsetId) || 0;\n    threadId = getServerMessageId(threadId) || 0;\n\n    minDate = minDate ? minDate / 1000 | 0 : 0;\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\n\n    let options: MessagesGetReplies | MessagesGetHistory | MessagesSearch | MessagesSearchGlobal;\n    let method: 'messages.getReplies' | 'messages.getHistory' | 'messages.search' | 'messages.searchGlobal';\n    const commonOptions = {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: offsetId,\n      offset_date: offsetDate,\n      add_offset: addOffset,\n      limit,\n      max_id: 0,\n      min_id: 0,\n      hash: 0\n    };\n\n    if(inputFilter && peerId && !nextRate && folderId === undefined/*  || !query */) {\n      const searchOptions: MessagesSearch = {\n        ...commonOptions,\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        top_msg_id: threadId\n      };\n\n      method = 'messages.search';\n      options = searchOptions;\n    } else if(inputFilter) {\n      const searchGlobalOptions: MessagesSearchGlobal = {\n        ...commonOptions,\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        offset_rate: nextRate,\n        offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n        folder_id: folderId\n      };\n\n      method = 'messages.searchGlobal';\n      options = searchGlobalOptions;\n    } else if(threadId) {\n      const getRepliesOptions: MessagesGetReplies = {\n        ...commonOptions,\n        msg_id: threadId\n      };\n\n      method = 'messages.getReplies';\n      options = getRepliesOptions;\n    } else {\n      const getHistoryOptions: MessagesGetHistory = {\n        ...commonOptions\n      };\n\n      method = 'messages.getHistory';\n      options = getHistoryOptions;\n    }\n\n    const promise = this.apiManager.invokeApiSingle(\n      method,\n      options,\n      {\n        // timeout: APITIMEOUT,\n        noErrorBox: true\n      }\n    ) as Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>;\n\n    return promise.then((historyResult) => {\n      if(DEBUG) {\n        this.log('requestHistory result:', peerId, historyResult, offsetId, limit, addOffset);\n      }\n\n      const {messages} = historyResult;\n\n      this.appUsersManager.saveApiUsers(historyResult.users);\n      this.appChatsManager.saveApiChats(historyResult.chats);\n      this.saveMessages(messages);\n\n      if('pts' in historyResult) {\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), historyResult.pts);\n      }\n\n      let length = messages.length,\n        count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\n      if(length && !messages[length - 1]) {\n        messages.splice(length - 1, 1);\n        length--;\n        count--;\n      }\n\n      return historyResult;\n    }, (error: ApiError) => {\n      switch(error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = this.appChatsManager.getChat(peerId.toChatId());\n          if(channel._ === 'channel') {\n            channel = {\n              _: 'channelForbidden',\n              id: channel.id,\n              access_hash: channel.access_hash,\n              title: channel.title,\n              pFlags: channel.pFlags\n            };\n          }\n\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: channel.id\n            }],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      throw error;\n    });\n  }\n\n  public fetchSingleMessages() {\n    return this.fetchSingleMessagesPromise ??= pause(0).then(() => {\n      const requestPromises: Promise<void>[] = [];\n\n      for(const [peerId, map] of this.needSingleMessages) {\n        const mids = [...map.keys()];\n        const msgIds: InputMessage[] = mids.map((mid) => {\n          return {\n            _: 'inputMessageID',\n            id: getServerMessageId(mid)\n          };\n        });\n\n        let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\n        const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n        if(channelId) {\n          promise = this.apiManager.invokeApiSingle('channels.getMessages', {\n            channel: this.appChatsManager.getChannelInput(channelId),\n            id: msgIds\n          });\n        } else {\n          promise = this.apiManager.invokeApiSingle('messages.getMessages', {\n            id: msgIds\n          });\n        }\n\n        const after = promise.then((getMessagesResult) => {\n          assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\n\n          this.appUsersManager.saveApiUsers(getMessagesResult.users);\n          this.appChatsManager.saveApiChats(getMessagesResult.chats);\n          const messages = this.saveMessages(getMessagesResult.messages);\n\n          for(let i = 0; i < messages.length; ++i) {\n            const message = messages[i];\n            if(!message) {\n              continue;\n            }\n\n            const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\n            const promise = map.get(mid);\n            promise.resolve(message);\n            map.delete(mid);\n          }\n\n          if(map.size) {\n            for(const [mid, promise] of map) {\n              promise.resolve(this.generateEmptyMessage(mid));\n            }\n          }\n        }).finally(() => {\n          this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\n        });\n\n        requestPromises.push(after);\n      }\n\n      this.needSingleMessages.clear();\n\n      return Promise.all(requestPromises).then(noop, noop).then(() => {\n        this.fetchSingleMessagesPromise = undefined;\n        if(this.needSingleMessages.size) this.fetchSingleMessages();\n      });\n    });\n  }\n\n  public reloadMessages(peerId: PeerId, mid: number, overwrite?: boolean): Promise<MyMessage>;\n  public reloadMessages(peerId: PeerId, mid: number[], overwrite?: boolean): Promise<MyMessage[]>;\n  public reloadMessages(peerId: PeerId, mid: number | number[], overwrite?: boolean): Promise<MyMessage | MyMessage[]> {\n    if(Array.isArray(mid)) {\n      return Promise.all(mid.map((mid) => {\n        return this.reloadMessages(peerId, mid, overwrite);\n      }));\n    }\n\n    if(peerId.isAnyChat() && isLegacyMessageId(mid)) {\n      peerId = GLOBAL_HISTORY_PEER_ID;\n    }\n\n    const message = this.getMessageByPeer(peerId, mid);\n    if(message && !overwrite) {\n      this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\n      return Promise.resolve(message);\n    } else {\n      let map = this.needSingleMessages.get(peerId);\n      if(!map) {\n        this.needSingleMessages.set(peerId, map = new Map());\n      }\n\n      let promise = map.get(mid);\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      map.set(mid, promise);\n      this.fetchSingleMessages();\n      return promise;\n    }\n  }\n\n  public getExtendedMedia(peerId: PeerId, mids: number[]) {\n    let map = this.extendedMedia.get(peerId);\n    if(!map) {\n      this.extendedMedia.set(peerId, map = new Map());\n    }\n\n    const deferred = deferredPromise<void>();\n    const toRequest: number[] = [];\n    const promises = mids.map((mid) => {\n      let promise = map.get(mid);\n      if(!promise) {\n        map.set(mid, promise = deferred);\n        toRequest.push(mid);\n\n        promise.then(() => {\n          map.delete(mid);\n          if(!map.size && this.extendedMedia.get(peerId) === map) {\n            this.extendedMedia.delete(peerId);\n          }\n        });\n      }\n\n      return promise;\n    });\n\n    if(!toRequest.length) {\n      deferred.resolve();\n    } else {\n      this.apiManager.invokeApi('messages.getExtendedMedia', {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: toRequest.map((mid) => getServerMessageId(mid))\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n        deferred.resolve();\n      });\n    }\n\n    return Promise.all(promises);\n  }\n\n  private clearMessageReplyTo(message: MyMessage) {\n    message = this.getMessageByPeer(message.peerId, message.mid); // message can come from other thread\n    delete message.reply_to_mid; // ! WARNING!\n    delete message.reply_to; // ! WARNING!\n    this.onMessageModification(message, this.getHistoryMessagesStorage(message.peerId)); // * mirror it\n  }\n\n  public fetchMessageReplyTo(message: MyMessage) {\n    if(!message.reply_to) return Promise.resolve(this.generateEmptyMessage(0));\n    const replyTo = message.reply_to;\n    if(replyTo._ === 'messageReplyStoryHeader') {\n      const result = this.appStoriesManager.getStoryById(replyTo.user_id.toPeerId(false), replyTo.story_id);\n      return callbackify(result, (story) => {\n        // if(!story) {\n        //   this.clearMessageReplyTo(message);\n        // }\n\n        return story;\n      });\n    }\n\n    const replyToPeerId = replyTo.reply_to_peer_id ? this.appPeersManager.getPeerId(replyTo.reply_to_peer_id) : message.peerId;\n    return this.reloadMessages(replyToPeerId, message.reply_to_mid).then((originalMessage) => {\n      if(!originalMessage) { // ! break the infinite loop\n        this.clearMessageReplyTo(message);\n      }\n\n      if(message._ === 'messageService') {\n        const peerId = message.peerId;\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: `${peerId}_history`,\n          peerId: peerId,\n          mid: message.mid,\n          message\n        });\n\n        if(this.isMessageIsTopMessage(message)) {\n          this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, {dialog: this.getDialogOnly(peerId)}]]));\n        }\n      }\n\n      return originalMessage;\n    });\n  }\n\n  private getTypingKey(peerId: PeerId, threadId?: number) {\n    return threadId ? `${peerId}_${threadId}` : peerId;\n  }\n\n  public setTyping(\n    peerId: PeerId,\n    action: SendMessageAction,\n    force?: boolean,\n    threadId?: number\n  ): Promise<boolean> {\n    if(threadId && !this.appPeersManager.isForum(peerId)) {\n      threadId = undefined;\n    }\n\n    const key = this.getTypingKey(peerId, threadId);\n    let typing = this.typings[key];\n    if(\n      !peerId ||\n      !this.canSendToPeer(peerId) ||\n      peerId === this.appPeersManager.peerId ||\n      // (!force && deepEqual(typing?.action, action))\n      (!force && typing?.action?._ === action._)\n    ) {\n      return Promise.resolve(false);\n    }\n\n    if(typing?.timeout) {\n      clearTimeout(typing.timeout);\n    }\n\n    typing = this.typings[key] = {\n      action\n    };\n\n    return this.apiManager.invokeApi('messages.setTyping', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      action,\n      top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n    }).finally(() => {\n      if(typing === this.typings[key]) {\n        typing.timeout = ctx.setTimeout(() => {\n          delete this.typings[key];\n        }, 6000);\n      }\n    });\n  }\n\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\n    const media = (message as Message.message).media;\n    if(media) {\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\n\n      if(smth?.file_reference) {\n        this.referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\n      }\n\n      if('webpage' in media && media.webpage) {\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\n        this.appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\n      }\n\n      if((media as MessageMedia.messageMediaPoll).poll) {\n        this.appPollsManager.updatePollToMessage(message as Message.message, false);\n      }\n    }\n  }\n\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\n    const history: {\n      count: number,\n      unread: number,\n      unreadMentions: number,\n      msgs: Set<number>,\n      albums?: {[groupId: string]: Set<number>},\n    } = {\n      count: 0,\n      unread: 0,\n      unreadMentions: 0,\n      msgs: new Set()\n    };\n\n    for(const mid of messages) {\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\n      if(!message) {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n        continue;\n      }\n\n      this.handleReleasingMessage(message, storage);\n\n      this.updateMessageRepliesIfNeeded(message);\n\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\n        ++history.unread;\n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n\n        if(message.pFlags.mentioned) {\n          ++history.unreadMentions;\n          this.modifyCachedMentions(peerId, mid, false);\n        }\n      }\n\n      ++history.count;\n      history.msgs.add(mid);\n\n      const groupedId = (message as Message.message).grouped_id;\n      if(groupedId) {\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\n        if(groupedStorage) {\n          this.deleteMessageFromStorage(groupedStorage, mid);\n\n          if(!history.albums) history.albums = {};\n          (history.albums[groupedId] || (history.albums[groupedId] = new Set())).add(mid);\n\n          if(!groupedStorage.size) {\n            delete history.albums;\n            delete this.groupedMessagesStorage[groupedId];\n          }\n        }\n      }\n\n      this.deleteMessageFromStorage(storage, mid);\n    }\n\n    if(history.albums) {\n      for(const groupedId in history.albums) {\n        this.dispatchAlbumEdit(groupedId, storage, [...history.albums[groupedId]]);\n        /* const mids = this.getMidsByAlbum(groupId);\n        if(mids.length) {\n          const mid = Math.max(...mids);\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\n        } */\n      }\n    }\n\n    return history;\n  }\n\n  private handleEditedMessage(oldMessage: Message, newMessage: Message, storage: MessagesStorage) {\n    if(oldMessage._ === 'message') {\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\n        this.appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\n      }\n\n      const groupedId = oldMessage.grouped_id;\n      if(groupedId) {\n        this.dispatchAlbumEdit(groupedId, storage, []);\n      }\n    }\n  }\n\n  private dispatchAlbumEdit(groupedId: string, storage: MessagesStorage, deletedMids?: number[]) {\n    const mids = this.getMidsByAlbum(groupedId);\n    const messages = mids.map((mid) => this.getMessageFromStorage(storage, mid)) as Message.message[];\n    this.rootScope.dispatchEvent('album_edit', {peerId: messages[0].peerId, groupId: groupedId, deletedMids: deletedMids || [], messages});\n  }\n\n  public getDialogUnreadCount(dialog: Dialog | ForumTopic) {\n    let unreadCount = dialog.unread_count;\n    if(!this.dialogsStorage.isTopic(dialog) && this.appPeersManager.isForum(dialog.peerId)) {\n      const forumUnreadCount = this.dialogsStorage.getForumUnreadCount(dialog.peerId);\n      if(forumUnreadCount instanceof Promise) {\n        unreadCount = 0;\n      } else {\n        unreadCount = forumUnreadCount.count;\n      }\n    }\n\n    return unreadCount || +!!(dialog as Dialog).pFlags?.unread_mark;\n  }\n\n  public isDialogUnread(dialog: Dialog | ForumTopic) {\n    return !!this.getDialogUnreadCount(dialog);\n  }\n\n  public canForward(message: Message.message | Message.messageService) {\n    return message?._ === 'message' && !(message as Message.message).pFlags.noforwards && !this.appPeersManager.noForwards(message.peerId);\n  }\n\n  private pushBatchUpdate<E extends keyof BatchUpdates, C extends BatchUpdates[E]>(\n    event: E,\n    callback: C,\n    key: string,\n    getElementCallback?: () => MapValueType<ArgumentTypes<C>[0]>\n  ) {\n    let details = this.batchUpdates[event];\n    if(!details) {\n      // @ts-ignore\n      details = this.batchUpdates[event] = {\n        callback,\n        batch: new Map()\n      };\n    }\n\n    if(!details.batch.has(key)) {\n      // @ts-ignore\n      details.batch.set(key, getElementCallback ? getElementCallback() : undefined);\n      this.batchUpdatesDebounced();\n    }\n  }\n\n  private getMessagesFromMap<T extends Map<any, any>>(map: T) {\n    const newMap: Map<Message.message, MapValueType<T>> = new Map();\n    for(const [key, value] of map) {\n      const [peerIdStr, mid] = key.split('_');\n      const message = this.getMessageByPeer(peerIdStr.toPeerId(), +mid) as Message.message;\n      if(!message) {\n        continue;\n      }\n\n      newMap.set(message, value);\n    }\n\n    return newMap;\n  }\n\n  private batchUpdateViews = (batch: Map<string, undefined>) => {\n    const toDispatch: {peerId: PeerId, mid: number, views: number}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message] of map) {\n      toDispatch.push({\n        peerId: message.peerId,\n        mid: message.mid,\n        views: message.views\n      })\n    }\n\n    return toDispatch;\n  };\n\n  private batchUpdateReactions = (batch: Map<string, MessageReactions>) => {\n    const toDispatch: {message: Message.message, changedResults: ReactionCount.reactionCount[]}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message, previousReactions] of map) {\n      const results = message.reactions?.results ?? [];\n      const previousResults = previousReactions?.results ?? [];\n      const changedResults = results.filter((reactionCount) => {\n        const previousReactionCount = previousResults.find((_reactionCount) => reactionsEqual(_reactionCount.reaction, reactionCount.reaction));\n        return (\n          message.pFlags.out && (\n            !previousReactionCount ||\n            reactionCount.count > previousReactionCount.count\n          )\n        ) || (\n          reactionCount.chosen_order !== undefined && (\n            !previousReactionCount ||\n            previousReactionCount.chosen_order === undefined\n          )\n        );\n      });\n\n      toDispatch.push({message, changedResults});\n    }\n\n    return toDispatch;\n  };\n\n  public saveDefaultSendAs(peerId: PeerId, sendAsPeerId: PeerId) {\n    const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n    channelFull.default_send_as = this.appPeersManager.getOutputPeer(sendAsPeerId);\n    return this.apiManager.invokeApi('messages.saveDefaultSendAs', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      send_as: this.appPeersManager.getInputPeerById(sendAsPeerId)\n    });\n  }\n\n  public sendBotRequestedPeer(peerId: PeerId, mid: number, buttonId: number, requestedPeerId: PeerId) {\n    return this.apiManager.invokeApi('messages.sendBotRequestedPeer', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid),\n      button_id: buttonId,\n      requested_peer: this.appPeersManager.getInputPeerById(requestedPeerId)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public reportSpam(peerId: PeerId) {\n    return this.apiManager.invokeApi('messages.reportSpam', {\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    });\n  }\n}\n","export default function convertInputKeyToKey<T extends string>(inputKey: string) {\n  const str = inputKey.replace('input', '');\n  return (str[0].toLowerCase() + str.slice(1)) as T;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport tsNow from '../../helpers/tsNow';\nimport {InputNotifyPeer, InputPeer, InputPeerNotifySettings, NotifyPeer, Peer, PeerNotifySettings, Update} from '../../layer';\nimport {MUTE_UNTIL} from '../mtproto/mtproto_config';\nimport throttle from '../../helpers/schedulers/throttle';\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\nimport {AppManager} from './manager';\nimport ctx from '../../environment/ctx';\nimport assumeType from '../../helpers/assumeType';\n\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\ntype MyNotifyPeer = Exclude<NotifyPeer['_'], 'notifyPeer' | 'notifyForumTopic'>;\ntype MyInputNotifyPeer = Exclude<InputNotifyPeer['_'], 'inputNotifyPeer' | 'inputNotifyForumTopic'>;\nexport class AppNotificationsManager extends AppManager {\n  private peerSettings = {\n    notifyPeer: {} as {[peerId: string]: ImSadAboutIt},\n    notifyUsers: null as ImSadAboutIt,\n    notifyChats: null as ImSadAboutIt,\n    notifyBroadcasts: null as ImSadAboutIt,\n    notifyForumTopic: {} as {[peerId_threadId: string]: ImSadAboutIt}\n  };\n  // private exceptions: {[peerId: string]: PeerNotifySettings} = {};\n\n  private getNotifyPeerTypePromise: Promise<any>;\n\n  private checkMuteUntilTimeout: number;\n  private checkMuteUntilThrottled: () => void;\n\n  private notifyContactsSignUp: Promise<boolean>;\n\n  protected after() {\n    this.checkMuteUntilThrottled = throttle(this.checkMuteUntil, 1000, false);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateNotifySettings: this.onUpdateNotifySettings\n    });\n\n    return this.appStateManager.getState().then((state) => {\n      if(state.notifySettings) {\n        for(const key in state.notifySettings) {\n          assumeType<MyNotifyPeer>(key);\n          this.savePeerSettings({\n            key,\n            settings: state.notifySettings[key]\n          });\n        }\n      }\n    });\n  }\n\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\n    let key: any = convertInputKeyToKey(peer._);\n    let obj: any = this.peerSettings[key as MyNotifyPeer];\n\n    let peerId: PeerId;\n    if(peer._ === 'inputNotifyPeer') {\n      peerId = key = this.appPeersManager.getPeerId(peer.peer);\n      obj = obj[key];\n    }\n\n    if(obj) {\n      return obj;\n    }\n\n    return (obj || this.peerSettings)[key] = this.apiManager.invokeApi('account.getNotifySettings', {peer})\n    .then((settings) => {\n      this.savePeerSettings({\n        key,\n        peerId,\n        settings\n      });\n\n      return settings;\n    });\n  }\n\n  public getNotifyPeerTypeSettings() {\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\n\n    const promises = ([\n      'inputNotifyBroadcasts',\n      'inputNotifyUsers',\n      'inputNotifyChats'\n    ] as MyInputNotifyPeer[])\n    .map((inputKey) => {\n      return this.getNotifySettings({_: inputKey});\n    });\n\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\n  }\n\n  public generateLocalNotifySettingsUpdate(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\n    this.apiUpdatesManager.processLocalUpdate({\n      _: 'updateNotifySettings',\n      peer: {\n        ...peer as any,\n        _: convertInputKeyToKey(peer._)\n      },\n      notify_settings: {\n        ...settings,\n        _: 'peerNotifySettings'\n      }\n    });\n  }\n\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\n    // this.savePeerSettings(peerId, settings);\n\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\n    inputSettings._ = 'inputPeerNotifySettings'; */\n\n    return this.apiManager.invokeApi('account.updateNotifySettings', {\n      peer,\n      settings\n    }).then(() => {\n      this.generateLocalNotifySettingsUpdate(peer, settings);\n    });\n  }\n\n  // public getNotifyExceptions() {\n  //   apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\n  //   .then((updates) => {\n  //     apiUpdatesManager.processUpdateMessage(updates);\n  //   });\n  // }\n\n  public getContactSignUpNotification() {\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\n    return this.notifyContactsSignUp = this.apiManager.invokeApi('account.getContactSignUpNotification');\n  }\n\n  public setContactSignUpNotification(silent: boolean) {\n    this.apiManager.invokeApi('account.setContactSignUpNotification', {silent})\n    .then((value) => {\n      this.notifyContactsSignUp = Promise.resolve(!silent);\n    });\n  }\n\n  private checkMuteUntil = () => {\n    if(this.checkMuteUntilTimeout !== undefined) {\n      clearTimeout(this.checkMuteUntilTimeout);\n      this.checkMuteUntilTimeout = undefined;\n    }\n\n    const timestamp = tsNow(true);\n    let closestMuteUntil = MUTE_UNTIL;\n\n    const p = (peerNotifySettings: ImSadAboutIt): peerNotifySettings is PeerNotifySettings => {\n      if(peerNotifySettings instanceof Promise) {\n        return false;\n      }\n\n      const muteUntil = peerNotifySettings.mute_until;\n      if(!muteUntil) {\n        return false;\n      }\n\n      if(muteUntil <= timestamp) {\n        // ! do not delete it because peer's unique settings will be overwritten in getPeerLocalSettings with type's settings\n        peerNotifySettings.mute_until = 0;\n        return true;\n      } else if(muteUntil < closestMuteUntil) {\n        closestMuteUntil = muteUntil;\n      }\n\n      return false;\n    };\n\n    [\n      'notifyPeer' as const,\n      'notifyForumTopic' as const\n    ].forEach((typeKey) => {\n      for(const key in this.peerSettings[typeKey]) {\n        const peerNotifySettings = this.peerSettings[typeKey][key];\n        if(p(peerNotifySettings)) {\n          const [peerId, topicId] = key.split('_');\n          const peer = this.appPeersManager.getOutputPeer(peerId.toPeerId());\n          this.apiUpdatesManager.saveUpdate({\n            _: 'updateNotifySettings',\n            peer: topicId ? {\n              _: 'notifyForumTopic',\n              peer,\n              top_msg_id: +topicId\n            } : {\n              _: 'notifyPeer',\n              peer\n            },\n            notify_settings: peerNotifySettings\n          });\n        }\n      }\n    });\n\n    const timeout = Math.min(1800e3, (closestMuteUntil - timestamp) * 1000);\n    this.checkMuteUntilTimeout = ctx.setTimeout(this.checkMuteUntil, timeout);\n  };\n\n  public getPeerKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? '_' + threadId : '');\n  }\n\n  public savePeerSettings({key, peerId, threadId, settings}: {\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\n    peerId?: PeerId,\n    threadId?: number,\n    settings: PeerNotifySettings\n  }) {\n    let obj: any;\n    if(peerId) {\n      key = this.getPeerKey(peerId, threadId) as any;\n      obj = this.peerSettings[threadId ? 'notifyForumTopic' : 'notifyPeer'];\n    }\n\n    (obj || this.peerSettings)[key] = settings;\n\n    if(!peerId) {\n      this.rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\n      this.appStateManager.getState().then((state) => {\n        const notifySettings = state.notifySettings;\n        notifySettings[key] = settings;\n        this.appStateManager.pushToState('notifySettings', notifySettings);\n      });\n    } else {\n      this.checkMuteUntilThrottled();\n    }\n\n    // rootScope.broadcast('notify_settings', {peerId: peerId});\n  }\n\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\n    return peerNotifySettings._ === 'peerNotifySettings' &&\n      (peerNotifySettings.silent || (peerNotifySettings.mute_until !== undefined && (peerNotifySettings.mute_until * 1000) > tsNow()));\n  }\n\n  private getPeerMuted(peerId: PeerId) {\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: this.appPeersManager.getInputPeerById(peerId)});\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\n  }\n\n  private getPeerLocalSettings({\n    peerId,\n    respectType = true,\n    threadId\n  }: {\n    peerId: PeerId,\n    respectType?: boolean,\n    threadId?: number\n  }): PeerNotifySettings {\n    const n: PeerNotifySettings = {\n      _: 'peerNotifySettings'\n    };\n\n    const peerKey = this.getPeerKey(peerId, threadId);\n    const notifySettings = this.peerSettings[threadId ? 'notifyForumTopic' : 'notifyPeer'][peerKey];\n    // if(!notifySettings || (notifySettings instanceof Promise)) return false;\n    if(notifySettings && !(notifySettings instanceof Promise)) {\n      Object.assign(n, notifySettings);\n    }\n\n    if(respectType) {\n      const inputNotify = this.appPeersManager.getInputNotifyPeerById({peerId, ignorePeerId: true, threadId});\n      const key = convertInputKeyToKey(inputNotify._);\n      const typeNotifySettings = this.peerSettings[key as MyNotifyPeer];\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\n        for(const i in typeNotifySettings) {\n          // @ts-ignore\n          if(n[i] === undefined) {\n            // @ts-ignore\n            n[i] = typeNotifySettings[i];\n          }\n        }\n      }\n    }\n\n    return n;\n  }\n\n  public validatePeerSettings<T extends Parameters<AppNotificationsManager['getPeerLocalSettings']>[0]>(options: T): T {\n    if(options.peerId === this.appPeersManager.peerId) return;\n    if(options.threadId && !this.appPeersManager.isForum(options.peerId)) options.threadId = undefined;\n    return options;\n  }\n\n  public isPeerLocalMuted(options: Parameters<AppNotificationsManager['getPeerLocalSettings']>[0]): boolean {\n    if(!(options = this.validatePeerSettings(options))) return false;\n\n    if(options.threadId) {\n      const notifySettings = this.getPeerLocalSettings({...options, respectType: false});\n      if(notifySettings.silent !== undefined || notifySettings.mute_until !== undefined) {\n        return this.isMuted(notifySettings);\n      } else {\n        return this.isPeerLocalMuted({...options, threadId: undefined});\n      }\n    }\n\n    const notifySettings = this.getPeerLocalSettings(options);\n    const isMuted = this.isMuted(notifySettings);\n    return isMuted;\n  }\n\n  public isPeerStoriesMuted(peerId: PeerId) {\n    const notifySettings = this.getPeerLocalSettings({peerId});\n    return !!notifySettings?.stories_muted;\n  }\n\n  public toggleStoriesMute(peerId: PeerId, mute: boolean, local?: boolean) {\n    const notifySettings = this.getPeerLocalSettings({peerId});\n    const inputNotifyPeer: InputNotifyPeer = {\n      _: 'inputNotifyPeer',\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    };\n\n    const inputPeerNotifySettings: InputPeerNotifySettings = {\n      ...notifySettings,\n      _: 'inputPeerNotifySettings'\n    };\n\n    if(mute) inputPeerNotifySettings.stories_muted = true;\n    else delete inputPeerNotifySettings.stories_muted;\n\n    if(!local) this.updateNotifySettings(inputNotifyPeer, inputPeerNotifySettings);\n    else this.generateLocalNotifySettingsUpdate(inputNotifyPeer, inputPeerNotifySettings);\n  }\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer} = update;\n    const isTopic = peer._ === 'notifyForumTopic';\n    const isPeerType = peer._ === 'notifyPeer' || isTopic;\n    const peerId = isPeerType && this.appPeersManager.getPeerId(peer.peer);\n    const key = !isPeerType ? peer._ : undefined;\n    const threadId = isTopic ? this.appMessagesIdsManager.generateMessageId(peer.top_msg_id, (peer.peer as Peer.peerChannel).channel_id) : undefined;\n    this.savePeerSettings({\n      key,\n      peerId,\n      threadId,\n      settings: update.notify_settings\n    });\n    this.rootScope.dispatchEvent('notify_settings', update);\n  };\n}\n","import {RestrictionReason} from '../layer';\n\nconst platforms = new Set([\n  'all',\n  'web',\n  'webk'\n]);\n\nconst ignore = new Set();\n\nexport function getRestrictionReason(reasons: RestrictionReason[]) {\n  // return reasons[0];\n  return reasons.find((reason) => platforms.has(reason.platform) && !ignore.has(reason.reason));\n}\n\nexport function isRestricted(reasons: RestrictionReason[]) {\n  return !!getRestrictionReason(reasons);\n}\n\nexport function ignoreRestrictionReasons(reasons: string[]) {\n  ignore.clear();\n  reasons.forEach((reason) => {\n    ignore.add(reason);\n  });\n}\n","import {isRestricted} from '../../../../helpers/restrictions';\nimport {Chat, User} from '../../../../layer';\n\nexport default function isPeerRestricted(peer: Chat | User) {\n  const restrictionReasons = (peer as Chat.channel)?.restriction_reason;\n  return !!(restrictionReasons && (peer as Chat.channel).pFlags.restricted && isRestricted(restrictionReasons));\n}\n","import {Chat, ChatPhoto, User, UserProfilePhoto} from '../../../../layer';\nimport isPeerRestricted from './isPeerRestricted';\n\nexport default function getPeerPhoto(peer: User | Chat) {\n  if(!peer || isPeerRestricted(peer)) {\n    return;\n  }\n\n  return (peer as User.user | Chat.channel)?.photo as UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto} from '../../layer';\nimport type {LangPackKey} from '../langPack';\nimport {getRestrictionReason} from '../../helpers/restrictions';\nimport isObject from '../../helpers/object/isObject';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\nimport isUser from './utils/peers/isUser';\nimport isAnyChat from './utils/peers/isAnyChat';\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\nimport isPeerRestricted from './utils/peers/isPeerRestricted';\nimport getPeerPhoto from './utils/peers/getPeerPhoto';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\nexport class AppPeersManager extends AppManager {\n  public get peerId() {\n    return this.appUsersManager.userId.toPeerId();\n  }\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\n    else appUsersManager.saveApiUser(instance);\n  } */\n\n  public saveApiPeers(object: {chats?: Chat[], users?: User[]}) {\n    this.appChatsManager.saveApiChats(object.chats);\n    this.appUsersManager.saveApiUsers(object.users);\n  }\n\n  public canPinMessage(peerId: PeerId) {\n    return peerId.isUser() || this.appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\n  }\n\n  public getPeerPhoto(peerId: PeerId) {\n    const peer = this.getPeer(peerId) as User.user | Chat.channel;\n    return getPeerPhoto(peer);\n  }\n\n  public getPeerMigratedTo(peerId: PeerId) {\n    if(peerId.isUser()) {\n      return;\n    }\n\n    const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\n    const migratedTo = chat?.migrated_to;\n    if(migratedTo && chat.pFlags.deactivated) {\n      return getPeerId(migratedTo);\n    }\n  }\n\n  public getOutputPeer(peerId: PeerId): Peer {\n    if(peerId.isUser()) {\n      return {_: 'peerUser', user_id: peerId.toUserId()};\n    }\n\n    const chatId = peerId.toChatId();\n    if(this.appChatsManager.isChannel(chatId)) {\n      return {_: 'peerChannel', channel_id: chatId};\n    }\n\n    return {_: 'peerChat', chat_id: chatId};\n  }\n\n  public getPeerString(peerId: PeerId) {\n    if(peerId.isUser()) {\n      return this.appUsersManager.getUserString(peerId.toUserId());\n    }\n    return this.appChatsManager.getChatString(peerId.toChatId());\n  }\n\n  public getPeerUsername(peerId: PeerId) {\n    return this.getPeerActiveUsernames(peerId)[0] || '';\n  }\n\n  public getPeerActiveUsernames(peerId: PeerId) {\n    const peer = this.getPeer(peerId);\n    return getPeerActiveUsernames(peer);\n  }\n\n  public getPeer(peerId: PeerId) {\n    return peerId.isUser() ?\n      this.appUsersManager.getUser(peerId.toUserId()) :\n      this.appChatsManager.getChat(peerId.toChatId());\n  }\n\n  public getPeerId(peerId: Parameters<typeof getPeerId>[0]) {\n    return getPeerId(peerId) || (isObject<InputPeer>(peerId) && peerId._ === 'inputPeerSelf' && this.peerId) || NULL_PEER_ID;\n  }\n\n  public getDialogPeer(peerId: PeerId): DialogPeer {\n    return {\n      _: 'dialogPeer',\n      peer: this.getOutputPeer(peerId)\n    };\n  }\n\n  public isChannel(peerId: PeerId): boolean {\n    return !peerId.isUser() && this.appChatsManager.isChannel(peerId.toChatId());\n  }\n\n  public isMegagroup(peerId: PeerId) {\n    return !peerId.isUser() && this.appChatsManager.isMegagroup(peerId.toChatId());\n  }\n\n  public isForum(peerId: PeerId) {\n    return !peerId.isUser() && this.appChatsManager.isForum(peerId.toChatId());\n  }\n\n  public isAnyGroup(peerId: PeerId): boolean {\n    return !peerId.isUser() && !this.appChatsManager.isBroadcast(peerId.toChatId());\n  }\n\n  public isBroadcast(peerId: PeerId): boolean {\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\n  }\n\n  public isBot(peerId: PeerId): boolean {\n    return peerId.isUser() && this.appUsersManager.isBot(peerId.toUserId());\n  }\n\n  public isContact(peerId: PeerId): boolean {\n    return peerId.isUser() && this.appUsersManager.isContact(peerId.toUserId());\n  }\n\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\n    return isUser(peerId);\n  }\n\n  public isRegularUser(peerId: PeerId) {\n    return this.isUser(peerId) && this.appUsersManager.isRegularUser(peerId);\n  }\n\n  public isAnyChat(peerId: PeerId) {\n    return isAnyChat(peerId);\n  }\n\n  public isPeerRestricted(peerId: PeerId) {\n    return isPeerRestricted(this.getPeer(peerId));\n  }\n\n  public getRestrictionReasonText(peerId: PeerId) {\n    const peer = this.getPeer(peerId) as Chat.channel | User.user;\n    const reason = peer.restriction_reason ? getRestrictionReason(peer.restriction_reason) : undefined;\n    if(reason) {\n      return reason.text;\n    } else {\n      return peerId.isUser() ? 'This user is restricted' : 'This chat is restricted';\n    }\n  }\n\n  /* public getInputPeer(peerString: string): InputPeer {\n    var firstChar = peerString.charAt(0);\n    var peerParams = peerString.substr(1).split('_');\n    let id = +peerParams[0];\n\n    if(firstChar === 'u') {\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\n\n      return {\n        _: 'inputPeerUser',\n        user_id: id,\n        access_hash: peerParams[1]\n      };\n    } else if(firstChar === 'c' || firstChar === 's') {\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\n      if(firstChar === 's') {\n        appChatsManager.saveIsMegagroup(id);\n      }\n\n      return {\n        _: 'inputPeerChannel',\n        channel_id: id,\n        access_hash: peerParams[1] || '0'\n      };\n    } else {\n      return {\n        _: 'inputPeerChat',\n        chat_id: id\n      };\n    }\n  } */\n\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\n  public getInputNotifyPeerById<T extends {\n    peerId: PeerId,\n    ignorePeerId?: boolean,\n    threadId?: number\n  }>({\n    peerId,\n    ignorePeerId,\n    threadId\n  }: T): T['ignorePeerId'] extends true ? Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer | InputNotifyPeer.inputNotifyForumTopic> : (T['threadId'] extends number ? InputNotifyPeer.inputNotifyForumTopic : InputNotifyPeer.inputNotifyPeer) {\n    if(ignorePeerId) {\n      if(peerId.isUser()) {\n        return {_: 'inputNotifyUsers'} as any;\n      } else {\n        if(this.isBroadcast(peerId)) {\n          return {_: 'inputNotifyBroadcasts'} as any;\n        } else {\n          return {_: 'inputNotifyChats'} as any;\n        }\n      }\n    } else if(threadId) {\n      return {\n        _: 'inputNotifyForumTopic',\n        peer: this.getInputPeerById(peerId),\n        top_msg_id: getServerMessageId(threadId)\n      } as any;\n    } else {\n      return {\n        _: 'inputNotifyPeer',\n        peer: this.getInputPeerById(peerId)\n      } as any;\n    }\n  }\n\n  public getInputPeerById(peerId: PeerId): InputPeer {\n    if(!peerId) {\n      return {_: 'inputPeerEmpty'};\n    }\n\n    if(!peerId.isUser()) {\n      const chatId = peerId.toChatId();\n      return this.appChatsManager.getInputPeer(chatId);\n    }\n\n    const userId = peerId.toUserId();\n    return this.appUsersManager.getUserInputPeer(userId);\n  }\n\n  /**\n   * ! use it only in safe places like requests\n   */\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\n    return {_: 'inputPeerSelf'};\n  }\n\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\n    return {\n      _: 'inputDialogPeer',\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\n    };\n  }\n\n  public getPeerSearchText(peerId: PeerId) {\n    let text: string;\n    if(this.isUser(peerId)) {\n      text = '%pu ' + this.appUsersManager.getUserSearchText(peerId.toUserId());\n    } else {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      text = '%pg ' + (chat.title || '');\n    }\n\n    return text;\n  }\n\n  public getDialogType(peerId: PeerId): PeerType {\n    if(this.isMegagroup(peerId)) {\n      return 'megagroup';\n    } else if(this.isChannel(peerId)) {\n      return 'channel';\n    } else if(!this.isUser(peerId)) {\n      return 'group';\n    } else {\n      return peerId === this.peerId ? 'saved' : 'chat';\n    }\n  }\n\n  public getDeleteButtonText(peerId: PeerId): Extract<LangPackKey, 'ChannelDelete' | 'ChatList.Context.LeaveChannel' | 'DeleteMega' | 'ChatList.Context.LeaveGroup' | 'ChatList.Context.DeleteChat'> {\n    switch(this.getDialogType(peerId)) {\n      case 'channel':\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\n\n      case 'megagroup':\n      case 'group':\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\n\n      default:\n        return 'ChatList.Context.DeleteChat';\n    }\n  }\n\n  public noForwards(peerId: PeerId) {\n    if(peerId.isUser()) return false;\n    else {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      return !!(chat as Chat.chat).pFlags?.noforwards;\n    }\n  }\n\n  public mirrorAllPeers(port?: MessageEventSource) {\n    const peers: any = {\n      ...this.appUsersManager.getUsers()\n    };\n\n    const chats = this.appChatsManager.getChats();\n    for(const chatId in chats) {\n      peers[chatId.toPeerId(true)] = chats[chatId];\n    }\n\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n      name: 'peers',\n      value: peers\n    }, port);\n  }\n}\n\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat' | 'isRegularUser';\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {Photo, PhotoSize, PhotosPhotos} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport {AppManager} from './manager';\n\nexport type MyPhoto = Photo.photo;\n\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\n// let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\n\nexport class AppPhotosManager extends AppManager {\n  private photos: {\n    [id: string]: MyPhoto\n  } = {};\n\n  public savePhoto(photo: Photo, context?: ReferenceContext) {\n    if(!photo || photo._ === 'photoEmpty') return;\n\n    /* if(photo.id === TEST_FILE_REFERENCE) {\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\n      //photo.file_reference = new Uint8Array(bytes);\n      photo.file_reference = bytes;\n      if(!--TEST_FILE_REFERENCE_TIMES) {\n        TEST_FILE_REFERENCE = '';\n      }\n    } */\n\n    const oldPhoto = this.photos[photo.id];\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\n      this.referenceDatabase.saveContext(photo.file_reference, context);\n    }\n\n    if(photo.sizes?.length) {\n      // * sometimes photoStrippedSize can be the last item\n      photo.sizes.sort((a, b) => {\n        return ((a as PhotoSize.photoSize).size || ((a as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0)) - ((b as PhotoSize.photoSize).size || ((b as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0));\n      });\n\n      const size = photo.sizes[photo.sizes.length - 1];\n      if(size._ === 'photoSizeProgressive') {\n        size.size = size.sizes[size.sizes.length - 1];\n      }\n    }\n\n    if(oldPhoto) {\n      return Object.assign(oldPhoto, photo);\n    }\n\n    return this.photos[photo.id] = photo;\n  }\n\n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\n    const inputUser = this.appUsersManager.getUserInput(userId);\n    return this.apiManager.invokeApiCacheable('photos.getUserPhotos', {\n      user_id: inputUser,\n      offset: 0,\n      limit,\n      max_id: maxId\n    }, {cacheSeconds: 60}).then((photosResult) => {\n      this.appUsersManager.saveApiUsers(photosResult.users);\n      const photoIds = photosResult.photos.map((photo, idx) => {\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\n        return photo.id;\n      });\n\n      // ! WARNING !\n      if(maxId !== '0' && maxId) {\n        const idx = photoIds.indexOf(maxId);\n        if(idx !== -1) {\n          photoIds.splice(idx, 1);\n        }\n      }\n\n      return {\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\n        photos: photoIds\n      };\n    });\n  }\n\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\n\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\n  } */\n\n  /* public isDownloaded(media: any) {\n    const isPhoto = media._ === 'photo';\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\n    let isDownloaded: boolean;\n    if(photo) {\n      isDownloaded = photo.downloaded > 0;\n    } else {\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\n      isDownloaded = cachedThumb?.downloaded > 0;\n    }\n\n    return isDownloaded;\n  } */\n\n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport copy from '../../helpers/object/copy';\nimport {InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults} from '../../layer';\nimport {logger, LogTypes} from '../logger';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\ntype PollId = Poll['id'];\n\nexport class AppPollsManager extends AppManager {\n  public polls: {[id: PollId]: Poll} = {};\n  public results: {[id: PollId]: PollResults} = {};\n  public pollToMessages: {[id: PollId]: Set<string>} = {};\n\n  private log = logger('POLLS', LogTypes.Error);\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateMessagePoll: (update) => {\n        this.log('updateMessagePoll:', update);\n\n        let poll: Poll = update.poll || this.polls[update.poll_id];\n        if(!poll) {\n          return;\n        }\n\n        let results = update.results;\n        const ret = this.savePoll(poll, results as any);\n        poll = ret.poll;\n        results = ret.results;\n\n        this.rootScope.dispatchEvent('poll_update', {poll, results: results as any});\n      }\n    });\n  }\n\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\n    if(message) {\n      this.updatePollToMessage(message, true);\n    }\n\n    const id = poll.id;\n    if(this.polls[id]) {\n      poll = Object.assign(this.polls[id], poll);\n      results = this.saveResults(poll, results);\n    } else {\n      this.polls[id] = poll;\n\n      poll.chosenIndexes = [];\n      results = this.saveResults(poll, results);\n    }\n\n    return {poll, results};\n  }\n\n  public saveResults(poll: Poll, results: PollResults) {\n    if(this.results[poll.id]) {\n      results = Object.assign(this.results[poll.id], results);\n    } else {\n      this.results[poll.id] = results;\n    }\n\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\n      poll.chosenIndexes.length = 0;\n      if(results?.results?.length) {\n        results.results.forEach((answer, idx) => {\n          if(answer.pFlags?.chosen) {\n            poll.chosenIndexes.push(idx);\n          }\n        });\n      }\n    }\n\n    return results;\n  }\n\n  public getPoll(pollId: PollId): {poll: Poll, results: PollResults} {\n    return {\n      poll: this.polls[pollId],\n      results: this.results[pollId]\n    };\n  }\n\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\n    if(solution) {\n      if(!solutionEntities) {\n        solutionEntities = [];\n      }\n\n      solution = parseMarkdown(solution, solutionEntities);\n    } else {\n      solution = undefined; // can be string here\n    }\n\n    return {\n      _: 'inputMediaPoll',\n      poll,\n      correct_answers: correctAnswers,\n      solution,\n      solution_entities: solution ? solutionEntities : undefined\n    };\n  }\n\n  public updatePollToMessage(message: Message.message, add: boolean) {\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\n    let set = this.pollToMessages[id];\n\n    if(!add && !set) {\n      return;\n    }\n\n    if(!set) {\n      set = this.pollToMessages[id] = new Set();\n    }\n\n    const key = message.peerId + '_' + message.mid;\n    if(add) set.add(key);\n    else set.delete(key);\n\n    if(!add && !set.size) {\n      delete this.polls[id];\n      delete this.results[id];\n      delete this.pollToMessages[id];\n    }\n  }\n\n  public sendVote(message: Message.message, optionIds: number[]): Promise<void> {\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\n\n    const options: Uint8Array[] = optionIds.map((index) => {\n      return poll.answers[index].option;\n    });\n\n    const messageId = message.mid;\n    const peerId = message.peerId;\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n\n    if(message.pFlags.is_outgoing) {\n      return this.appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\n        this.log('invoke sendVote callback');\n        return this.sendVote(message as Message.message, optionIds);\n      });\n    }\n\n    return this.apiManager.invokeApi('messages.sendVote', {\n      peer: inputPeer,\n      msg_id: getServerMessageId(message.mid),\n      options\n    }).then((updates) => {\n      this.log('sendVote updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getResults(message: Message.message) {\n    const inputPeer = this.appPeersManager.getInputPeerById(message.peerId);\n\n    return this.apiManager.invokeApi('messages.getPollResults', {\n      peer: inputPeer,\n      msg_id: getServerMessageId(message.mid)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      this.log('getResults updates:', updates);\n    });\n  }\n\n  public getVotes(message: Message.message, option?: Uint8Array, offset?: string, limit = 20) {\n    return this.apiManager.invokeApi('messages.getPollVotes', {\n      peer: this.appPeersManager.getInputPeerById(message.peerId),\n      id: getServerMessageId(message.mid),\n      option,\n      offset,\n      limit\n    }).then((votesList) => {\n      this.log('getPollVotes messages:', votesList);\n\n      this.appUsersManager.saveApiUsers(votesList.users);\n      this.appChatsManager.saveApiChats(votesList.chats);\n\n      return votesList;\n    });\n  }\n\n  public stopPoll(message: Message.message) {\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\n\n    if(poll.pFlags.closed) return Promise.resolve();\n\n    const newPoll = copy(poll);\n    newPoll.pFlags.closed = true;\n    return this.appMessagesManager.editMessage(message, undefined, {\n      newMedia: this.getInputMediaPoll(newPoll)\n    }).then(() => {\n      // console.log('stopped poll');\n    }, err => {\n      this.log.error('stopPoll error:', err);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputPrivacyKey, InputPrivacyRule, PrivacyRule, PrivacyKey, GlobalPrivacySettings} from '../../layer';\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\nimport {AppManager} from './manager';\n\nexport class AppPrivacyManager extends AppManager {\n  private privacy: Partial<{\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\n  }> = {};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePrivacy: (update) => {\n        const key = update.key._;\n        this.privacy[key] = update.rules;\n        this.rootScope.dispatchEvent('privacy_update', update);\n      }\n    });\n  }\n\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\n    return this.apiManager.invokeApi('account.setPrivacy', {\n      key: {\n        _: inputKey\n      },\n      rules\n    }).then((privacyRules) => {\n      this.appUsersManager.saveApiUsers(privacyRules.users);\n      this.appChatsManager.saveApiChats(privacyRules.chats);\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updatePrivacy',\n        key: {\n          _: convertInputKeyToKey(inputKey)\n        },\n        rules: rules.map((inputRule) => {\n          const rule: PrivacyRule = {} as any;\n          Object.assign(rule, inputRule);\n          rule._ = convertInputKeyToKey(rule._) as any;\n          return rule;\n        })\n      });\n\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\n\n      return privacyRules.rules;\n    });\n  }\n\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\n    const rules = this.privacy[privacyKey];\n    if(rules) {\n      return Promise.resolve(rules);\n    }\n\n    return this.privacy[privacyKey] = this.apiManager.invokeApi('account.getPrivacy', {\n      key: {\n        _: inputKey\n      }\n    }).then((privacyRules) => {\n      this.appUsersManager.saveApiUsers(privacyRules.users);\n      this.appChatsManager.saveApiChats(privacyRules.chats);\n\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\n\n      return this.privacy[privacyKey] = privacyRules.rules;\n    });\n  }\n\n  public getGlobalPrivacySettings() {\n    return this.apiManager.invokeApi('account.getGlobalPrivacySettings');\n  }\n\n  public setGlobalPrivacySettings(settings: GlobalPrivacySettings) {\n    return this.apiManager.invokeApi('account.setGlobalPrivacySettings', {settings});\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {MyTopPeer} from './appUsersManager';\nimport tsNow from '../../helpers/tsNow';\nimport {ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull, Photo, PhotoSize, Updates, ChatParticipant, PeerSettings} from '../../layer';\nimport SearchIndex from '../searchIndex';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport getPhotoInput from './utils/photos/getPhotoInput';\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\nimport ctx from '../../environment/ctx';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport assumeType from '../../helpers/assumeType';\nimport makeError from '../../helpers/makeError';\nimport callbackify from '../../helpers/callbackify';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\n\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\n\nconst PEER_FULL_TTL = 3 * 60e3;\n\nexport class AppProfileManager extends AppManager {\n  // private botInfos: any = {};\n  private usersFull: {[id: UserId]: UserFull.userFull} = {};\n  private chatsFull: {[id: ChatId]: ChatFull} = {};\n  private fullExpiration: {[peerId: PeerId]: number} = {};\n  private typingsInPeer: {[key: string]: UserTyping[]};\n  private peerSettings: {[peerId: PeerId]: PeerSettings};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateChatParticipants: this.onUpdateChatParticipants,\n\n      updateChatParticipantAdd: this.onUpdateChatParticipantAdd,\n\n      updateChatParticipantDelete: this.onUpdateChatParticipantDelete,\n\n      updateUserTyping: this.onUpdateUserTyping,\n      updateChatUserTyping: this.onUpdateUserTyping,\n      updateChannelUserTyping: this.onUpdateUserTyping,\n\n      updatePeerBlocked: this.onUpdatePeerBlocked,\n\n      updatePeerSettings: this.onUpdatePeerSettings\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const fullChat = this.chatsFull[chatId];\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = this.appChatsManager.getChat(chatId);\n      if(!fullChat || !chat) {\n        return;\n      }\n\n      let updated = false;\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\n        updated = true;\n      }\n\n      const {photo} = chat as Chat.chat;\n      if(photo) {\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\n        const hasFullChatPhoto = !!(fullChat.chat_photo && fullChat.chat_photo._ !== 'photoEmpty'); // chat_photo can be missing\n        if(\n          hasChatPhoto !== hasFullChatPhoto || (\n            hasChatPhoto &&\n            photo.photo_id !== fullChat.chat_photo?.id\n          )\n        ) {\n          updated = true;\n        }\n      }\n\n      if(updated) {\n        this.refreshFullPeer(chatId.toPeerId(true));\n      }\n    });\n\n    this.rootScope.addEventListener('channel_update', (chatId) => {\n      this.refreshFullPeer(chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('chat_full_update', (chatId) => {\n      this.rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('user_full_update', (userId) => {\n      this.rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\n    });\n\n    this.rootScope.addEventListener('invalidate_participants', (chatId) => {\n      this.invalidateChannelParticipants(chatId);\n    });\n\n    this.typingsInPeer = {};\n    this.peerSettings = {};\n  }\n\n  /* public saveBotInfo(botInfo: any) {\n    const botId = botInfo && botInfo.user_id;\n    if(!botId) {\n      return null;\n    }\n\n    const commands: any = {};\n    botInfo.commands.forEach((botCommand: any) => {\n      commands[botCommand.command] = botCommand.description;\n    });\n\n    return this.botInfos[botId] = {\n      id: botId,\n      version: botInfo.version,\n      shareText: botInfo.share_text,\n      description: botInfo.description,\n      commands: commands\n    };\n  } */\n\n  public getProfile(id: UserId, override?: true) {\n    if(this.usersFull[id] && !override && Date.now() < this.fullExpiration[id.toPeerId()]) {\n      return this.usersFull[id];\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'users.getFullUser',\n      params: {\n        id: this.appUsersManager.getUserInput(id)\n      },\n      processResult: (usersUserFull) => {\n        this.appChatsManager.saveApiChats(usersUserFull.chats, true);\n        this.appUsersManager.saveApiUsers(usersUserFull.users);\n\n        const userFull = usersUserFull.full_user;\n        const peerId = id.toPeerId(false);\n        if(userFull.profile_photo) {\n          userFull.profile_photo = this.appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\n        }\n\n        const botInfo = userFull.bot_info;\n        if(botInfo) {\n          const referenceContext: ReferenceContext = {type: 'userFull', userId: id};\n          botInfo.description_document = this.appDocsManager.saveDoc(botInfo.description_document, referenceContext);\n          botInfo.description_photo = this.appPhotosManager.savePhoto(botInfo.description_photo, referenceContext);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: userFull.notify_settings\n        });\n\n        this.usersFull[id] = userFull;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n\n        /* if(userFull.bot_info) {\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\n        } */\n\n        // appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\n\n        this.rootScope.dispatchEvent('user_full_update', id);\n        return userFull;\n      }\n    });\n  }\n\n  public getProfileByPeerId(peerId: PeerId, override?: true) {\n    if(this.appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\n    else return this.getProfile(peerId.toUserId(), override);\n  }\n\n  public getCachedFullChat(chatId: ChatId) {\n    return this.chatsFull[chatId];\n  }\n\n  public getCachedFullUser(userId: UserId) {\n    return this.usersFull[userId];\n  }\n\n  public getCachedProfileByPeerId(peerId: PeerId) {\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\n  }\n\n  public isUserBlocked(userId: UserId) {\n    return callbackify(this.getProfile(userId), (userFull) => {\n      return !!userFull.pFlags.blocked;\n    });\n  }\n\n  public isCachedUserBlocked(userId: UserId) {\n    const result = this.isUserBlocked(userId);\n    return result instanceof Promise ? undefined : result;\n  }\n\n  public async getFullPhoto(peerId: PeerId) {\n    const profile = await this.getProfileByPeerId(peerId);\n    switch(profile._) {\n      case 'userFull':\n        return profile.profile_photo;\n      case 'channelFull':\n      case 'chatFull':\n        return profile.chat_photo;\n    }\n  }\n\n  /* public getPeerBots(peerId: PeerId) {\n    var peerBots: any[] = [];\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\n      return Promise.resolve(peerBots);\n    }\n    if(peerId >= 0) {\n      return this.getProfile(peerId).then((userFull: any) => {\n        var botInfo = userFull.bot_info;\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\n          peerBots.push(botInfo);\n        }\n        return peerBots;\n      });\n    }\n\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\n      chatFull.bot_info.forEach((botInfo: any) => {\n        peerBots.push(this.saveBotInfo(botInfo))\n      });\n      return peerBots;\n    });\n  } */\n\n  public getChatFull(id: ChatId, override?: true) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelFull(id, override);\n    }\n\n    const peerId = id.toPeerId(true);\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\n    if(fullChat && !override && Date.now() < this.fullExpiration[peerId]) {\n      const chat = this.appChatsManager.getChat(id) as Chat.chat;\n      if(\n        chat.pFlags.left ||\n        chat.pFlags.deactivated ||\n        chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version\n      ) {\n        return fullChat as ChatFull;\n      }\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getFullChat',\n      params: {\n        chat_id: id\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const chatFull = result.full_chat as ChatFull.chatFull;\n        if(chatFull && chatFull.chat_photo && chatFull.chat_photo.id) {\n          chatFull.chat_photo = this.appPhotosManager.savePhoto(chatFull.chat_photo, {type: 'profilePhoto', peerId});\n        }\n\n        if(chatFull.call) {\n          this.appGroupCallsManager.saveGroupCall(chatFull.call, id);\n        }\n\n        // appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: chatFull.notify_settings\n        });\n\n        this.chatsFull[id] = chatFull;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return chatFull;\n      }\n    });\n  }\n\n  public async getChatInviteLink(id: ChatId, force?: boolean) {\n    const chatFull = await this.getChatFull(id);\n    if(!force &&\n      chatFull.exported_invite &&\n      chatFull.exported_invite._ == 'chatInviteExported') {\n      return chatFull.exported_invite.link;\n    }\n\n    return this.apiManager.invokeApi('messages.exportChatInvite', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true))\n    }).then((exportedInvite) => {\n      if(this.chatsFull[id] !== undefined) {\n        this.chatsFull[id].exported_invite = exportedInvite;\n      }\n\n      return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\n    });\n  }\n\n  private filterParticipantsByQuery(participants: (ChannelParticipant | ChatParticipant)[], q: string) {\n    const index = this.appUsersManager.createSearchIndex();\n    participants.forEach((chatParticipant) => {\n      const peerId = getParticipantPeerId(chatParticipant);\n      index.indexObject(peerId, this.appUsersManager.getUserSearchText(peerId));\n    });\n\n    const found = index.search(q);\n    const filteredParticipants = participants.filter((chatParticipant) => {\n      const peerId = getParticipantPeerId(chatParticipant);\n      return found.has(peerId);\n    });\n\n    return filteredParticipants;\n  }\n\n  public getParticipants(\n    id: ChatId,\n    filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'},\n    limit = 200,\n    offset = 0\n  ) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelParticipants(id, filter, limit, offset);\n    }\n\n    return callbackify(this.getChatFull(id), (chatFull) => {\n      const chatParticipants = (chatFull as ChatFull.chatFull).participants;\n      if(chatParticipants._ !== 'chatParticipants') {\n        throw makeError('CHAT_PRIVATE');\n      }\n\n      if(filter._ === 'channelParticipantsSearch' && filter.q.trim()) {\n        return {\n          ...chatParticipants,\n          participants: this.filterParticipantsByQuery(chatParticipants.participants, filter.q)\n        };\n      }\n\n      return chatParticipants;\n    });\n  }\n\n  public getParticipant(id: ChatId, peerId: PeerId) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelParticipant(id, peerId);\n    }\n\n    return Promise.resolve(this.getParticipants(id)).then((chatParticipants) => {\n      assumeType<ChatParticipants.chatParticipants>(chatParticipants);\n      const found = chatParticipants.participants.find((chatParticipant) => {\n        if(getParticipantPeerId(chatParticipant) === peerId) {\n          return chatParticipant;\n        }\n      });\n\n      if(!found) {\n        throw makeError('USER_NOT_PARTICIPANT');\n      }\n\n      return found;\n    });\n  }\n\n  public getChannelParticipants(\n    id: ChatId,\n    filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'},\n    limit = 200,\n    offset = 0\n  ) {\n    if(!this.appChatsManager.hasRights(id, 'view_participants')) {\n      throw makeError('CHAT_ADMIN_REQUIRED');\n    }\n\n    const MANUALLY_FILTER: Set<ChannelParticipantsFilter['_']> = new Set([\n      'channelParticipantsAdmins'\n    ]);\n\n    const result = this.apiManager.invokeApiCacheable('channels.getParticipants', {\n      channel: this.appChatsManager.getChannelInput(id),\n      filter,\n      offset,\n      limit,\n      hash: '0'\n    }, {cacheSeconds: 60, syncIfHasResult: true});\n\n    return callbackify(result, (result) => {\n      this.appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\n      this.appChatsManager.saveApiChats((result as ChannelsChannelParticipants.channelsChannelParticipants).chats);\n\n      const q = (filter as ChannelParticipantsFilter.channelParticipantsAdmins).q;\n      if(MANUALLY_FILTER.has(filter._) && q?.trim()) {\n        return {\n          ...result,\n          participants: this.filterParticipantsByQuery((result as ChannelsChannelParticipants.channelsChannelParticipants).participants, q)\n        } as ChannelsChannelParticipants.channelsChannelParticipants;\n      }\n\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\n    });\n  }\n\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\n    return this.apiManager.invokeApiSingle('channels.getParticipant', {\n      channel: this.appChatsManager.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId)\n    }).then((channelParticipant) => {\n      this.appUsersManager.saveApiUsers(channelParticipant.users);\n      return channelParticipant.participant;\n    });\n  }\n\n  public getChannelFull(id: ChatId, override?: true) {\n    const peerId = id.toPeerId(true);\n    if(this.chatsFull[id] !== undefined && !override && Date.now() < this.fullExpiration[peerId]) {\n      return this.chatsFull[id] as ChatFull.channelFull;\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getFullChannel',\n      params: {\n        channel: this.appChatsManager.getChannelInput(id)\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const fullChannel = result.full_chat as ChatFull.channelFull;\n        if(fullChannel && fullChannel.chat_photo.id) {\n          fullChannel.chat_photo = this.appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\n          // appPhotosManager.savePhoto(fullChannel.chat_photo);\n        }\n\n        if(fullChannel.call) {\n          this.appGroupCallsManager.saveGroupCall(fullChannel.call, id);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: fullChannel.notify_settings\n        });\n\n        this.chatsFull[id] = fullChannel;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChannel;\n      },\n      processError: (error) => {\n        switch(error.type) {\n          case 'CHANNEL_PRIVATE':\n            const channel = this.appChatsManager.getChat(id) as Chat.channel | Chat.channelForbidden;\n            this.apiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: [{\n                _: 'updateChannel',\n                channel_id: id\n              }],\n              chats: [channel._ === 'channelForbidden' ? channel : {\n                _: 'channelForbidden',\n                id,\n                access_hash: channel.access_hash,\n                title: channel.title,\n                pFlags: channel.pFlags\n              }],\n              users: []\n            } as Updates.updates);\n            break;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public getMentions(\n    chatId: ChatId,\n    query: string,\n    threadId?: number,\n    global?: boolean\n  ): Promise<PeerId[]> {\n    const processUserIds = (topPeers: MyTopPeer[]) => {\n      const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n\n      const hasQuery = !!query.trim();\n      if(!hasQuery) {\n        return topPeers.map((peer) => peer.id);\n      }\n\n      const index = new SearchIndex<PeerId>({\n        ignoreCase: true\n      });\n\n      const ratingMap: Map<PeerId, number> = new Map();\n      topPeers.forEach((peer) => {\n        index.indexObject(peer.id, this.appUsersManager.getUserSearchText(peer.id));\n        ratingMap.set(peer.id, peer.rating);\n      });\n\n      const peerIds = Array.from(index.search(query));\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\n      return peerIds;\n    };\n\n    let promise: Promise<PeerId[]>;\n    if(this.appChatsManager.isChannel(chatId)) {\n      promise = Promise.resolve(this.getChannelParticipants(chatId, {\n        _: 'channelParticipantsMentions',\n        q: query,\n        top_msg_id: getServerMessageId(threadId)\n      }, 50, 0)).then((cP) => {\n        return cP.participants.map((p) => getParticipantPeerId(p));\n      });\n    } else if(chatId) {\n      promise = Promise.resolve(this.getChatFull(chatId)).then((chatFull) => {\n        return ((chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants).participants.map((p) => p.user_id.toPeerId());\n      });\n    }\n\n    return Promise.all([\n      // [],\n      global ? [] as MyTopPeer[] : this.appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]),\n      promise,\n      global && this.appUsersManager.getContactsPeerIds(query, false, 'rating', 30)\n    ]).then(([botsInlineTopPeers, chatMembers, searchResults]) => {\n      if(searchResults) {\n        searchResults = searchResults.filter((peerId) => {\n          const peer = this.appPeersManager.getPeer(peerId);\n          return !!getPeerActiveUsernames(peer)[0];\n        });\n      }\n\n      const convertPeerIds = (peerIds: PeerId[]) => peerIds ? peerIds.map((peerId) => ({id: peerId, rating: 0})) : [];\n      const peers = botsInlineTopPeers.concat(\n        convertPeerIds(chatMembers),\n        convertPeerIds(searchResults)\n      );\n\n      return processUserIds(peers);\n    });\n  }\n\n  public invalidateChannelParticipants(id: ChatId) {\n    this.apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\n\n    if(!this.getCachedFullChat(id)) {\n      return;\n    }\n\n    this.refreshFullPeer(id.toPeerId(true));\n  }\n\n  private refreshFullPeer(peerId: PeerId) {\n    if(peerId.isUser()) {\n      const userId = peerId.toUserId();\n      delete this.usersFull[userId];\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    } else {\n      const chatId = peerId.toChatId();\n      delete this.chatsFull[chatId];\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\n    }\n\n    // ! эта строчка будет создавать race condition:\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\n    // this.getProfileByPeerId(peerId, true);\n  }\n\n  public refreshFullPeerIfNeeded(peerId: PeerId) {\n    const full = peerId.isUser() ? this.usersFull[peerId.toUserId()] : this.chatsFull[peerId.toChatId()];\n    if(full) {\n      this.refreshFullPeer(peerId);\n    }\n  }\n\n  public updateProfile(first_name?: string, last_name?: string, about?: string) {\n    return this.apiManager.invokeApi('account.updateProfile', {\n      first_name,\n      last_name,\n      about\n    }).then((user) => {\n      this.appUsersManager.saveApiUser(user);\n\n      if(about !== undefined) {\n        const peerId = user.id.toPeerId();\n        const userFull = this.usersFull[user.id];\n        if(userFull) {\n          userFull.about = about;\n        }\n\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return this.getProfile(user.id, true);\n    });\n  }\n\n  public setBotInfo(botId: BotId, name?: string, about?: string) {\n    return this.apiManager.invokeApi('bots.setBotInfo', {\n      lang_code: '',\n      bot: this.appUsersManager.getUserInput(botId),\n      name,\n      about\n    }).then(() => {\n      const user = this.appUsersManager.getUser(botId);\n      if(name !== undefined) {\n        this.appUsersManager.saveApiUser({\n          ...user,\n          first_name: name\n        });\n      }\n\n      const userFull = this.getCachedFullUser(botId);\n      if(about !== undefined) {\n        if(userFull) {\n          userFull.about = about;\n        }\n\n        this.rootScope.dispatchEvent('peer_bio_edit', botId.toPeerId());\n      }\n\n      return this.getProfile(botId, true);\n    });\n  }\n\n  public getBotInfo(botId: BotId) {\n    return this.apiManager.invokeApiSingle('bots.getBotInfo', {\n      bot: this.appUsersManager.getUserInput(botId),\n      lang_code: ''\n    });\n  }\n\n  public uploadProfilePhoto(inputFile: InputFile, botId?: BotId) {\n    return this.apiManager.invokeApi('photos.uploadProfilePhoto', {\n      file: inputFile,\n      bot: botId ? this.appUsersManager.getUserInput(botId) : undefined\n    }).then((updateResult) => {\n      // ! sometimes can have no user in users\n      const photo = updateResult.photo as Photo.photo;\n      if(!updateResult.users.length) {\n        const strippedThumb = photo.sizes.find((size) => size._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n        updateResult.users.push({\n          ...(botId ? this.appUsersManager.getUser(botId) : this.appUsersManager.getSelf()),\n          photo: {\n            _: 'userProfilePhoto',\n            dc_id: photo.dc_id,\n            photo_id: photo.id,\n            stripped_thumb: strippedThumb?.bytes,\n            pFlags: {\n\n            }\n          }\n        });\n      }\n      this.appUsersManager.saveApiUsers(updateResult.users);\n\n      const peerId = botId ? botId.toPeerId() : this.appPeersManager.peerId;\n      this.appPhotosManager.savePhoto(updateResult.photo, {\n        type: 'profilePhoto',\n        peerId\n      });\n\n      const userId = peerId.toUserId();\n      // this.apiUpdatesManager.processLocalUpdate({\n      //   _: 'updateUserPhoto',\n      //   user_id: userId,\n      //   date: tsNow(true),\n      //   photo: this.appUsersManager.getUser(userId).photo,\n      //   previous: true\n      // });\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateUser',\n        user_id: userId\n      });\n    });\n  }\n\n  public deletePhotos(photoIds: string[]) {\n    return this.apiManager.invokeApiSingle('photos.deletePhotos', {\n      id: photoIds.map((photoId) => {\n        const photo = this.appPhotosManager.getPhoto(photoId);\n        return getPhotoInput(photo);\n      })\n    }).then((deletedList) => {\n\n    });\n  }\n\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\n    const user = this.appUsersManager.getUser(participant.user_id);\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\n  }\n\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\n    return participants.reduce((acc, participant) => {\n      return acc + +this.verifyParticipantForOnlineCount(participant);\n    }, 0);\n  }\n\n  public async getOnlines(id: ChatId): Promise<number> {\n    const minOnline = 1;\n    if(this.appChatsManager.isBroadcast(id)) {\n      return minOnline;\n    }\n\n    const chatInfo = await this.getChatFull(id);\n    if(this.appChatsManager.isMegagroup(id)) {\n      if((chatInfo as ChatFull.channelFull).participants_count <= 100) {\n        const channelParticipants = await this.getChannelParticipants(id, {_: 'channelParticipantsRecent'}, 100);\n        return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\n      }\n\n      const res = await this.apiManager.invokeApiCacheable('messages.getOnlines', {\n        peer: this.appChatsManager.getChannelInputPeer(id)\n      }, {cacheSeconds: 60});\n\n      const onlines = res.onlines ?? minOnline;\n      return onlines;\n    }\n\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\n    if(_participants?.participants) {\n      return this.reduceParticipantsForOnlineCount(_participants.participants);\n    } else {\n      return minOnline;\n    }\n  }\n\n  private getTypingsKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? `_${threadId}` : '');\n  }\n\n  public getPeerTypings(peerId: PeerId, threadId?: number) {\n    return this.typingsInPeer[this.getTypingsKey(peerId, threadId)];\n  }\n\n  public canGiftPremium(userId: UserId) {\n    const user = this.appUsersManager.getUser(userId);\n    if(user?.pFlags?.premium) {\n      return false;\n    }\n\n    return callbackify(this.getProfile(userId), (userFull) => {\n      const user = this.appUsersManager.getUser(userId);\n      return !!userFull.premium_gifts && !user?.pFlags?.premium;\n    });\n  }\n\n  public refreshPeerSettingsIfNeeded(peerId: PeerId) {\n    if(this.peerSettings[peerId]) {\n      delete this.peerSettings[peerId];\n      callbackify(this.getPeerSettings(peerId), (peerSettings) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updatePeerSettings',\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          settings: peerSettings\n        });\n      });\n    }\n  }\n\n  public getPeerSettings(peerId: PeerId) {\n    if(this.peerSettings[peerId]) return this.peerSettings[peerId];\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getPeerSettings',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: (messagesPeerSettings) => {\n        this.appChatsManager.saveApiChats(messagesPeerSettings.chats, true);\n        this.appUsersManager.saveApiUsers(messagesPeerSettings.users);\n\n        return this.peerSettings[peerId] = messagesPeerSettings.settings;\n      }\n    });\n  }\n\n  public hidePeerSettingsBar(peerId: PeerId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.hidePeerSettingsBar',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: () => {\n        this.refreshPeerSettingsIfNeeded(peerId);\n      }\n    });\n  }\n\n  private onUpdateChatParticipants = (update: Update.updateChatParticipants) => {\n    const participants = update.participants;\n    if(participants._ !== 'chatParticipants') {\n      return;\n    }\n\n    const chatId = participants.chat_id;\n    const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\n    if(chatFull !== undefined) {\n      chatFull.participants = participants;\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\n    }\n  };\n\n  private onUpdateChatParticipantAdd = (update: Update.updateChatParticipantAdd) => {\n    const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n    if(chatFull === undefined) {\n      return;\n    }\n\n    const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n    const participants = _participants.participants || [];\n    for(let i = 0, length = participants.length; i < length; i++) {\n      if(participants[i].user_id === update.user_id) {\n        return;\n      }\n    }\n\n    participants.push({\n      _: 'chatParticipant',\n      user_id: update.user_id,\n      inviter_id: update.inviter_id,\n      date: tsNow(true)\n    });\n\n    _participants.version = update.version;\n    this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n  };\n\n  private onUpdateChatParticipantDelete = (update: Update.updateChatParticipantDelete) => {\n    const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n    if(chatFull === undefined) {\n      return;\n    }\n\n    const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n    const participants = _participants.participants || [];\n    for(let i = 0, length = participants.length; i < length; i++) {\n      if(participants[i].user_id === update.user_id) {\n        participants.splice(i, 1);\n        _participants.version = update.version;\n        this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n        return;\n      }\n    }\n  };\n\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\n    const fromId = (update as Update.updateUserTyping).user_id ?\n      (update as Update.updateUserTyping).user_id.toPeerId() :\n      this.appPeersManager.getPeerId((update as Update.updateChatUserTyping).from_id);\n    if(this.appPeersManager.peerId === fromId || update.action._ === 'speakingInGroupCallAction') {\n      return;\n    }\n\n    const topMsgId = (update as Update.updateChannelUserTyping).top_msg_id;\n    const threadId = topMsgId ? this.appMessagesIdsManager.generateMessageId(topMsgId, (update as Update.updateChannelUserTyping).channel_id) : undefined;\n    const peerId = this.appPeersManager.getPeerId(update);\n    const key = this.getTypingsKey(peerId, threadId);\n    const typings = this.typingsInPeer[key] ??= [];\n    const action = update.action;\n    let typing = typings.find((t) => t.userId === fromId);\n\n    if((action as SendMessageAction.sendMessageEmojiInteraction).msg_id) {\n      (action as SendMessageAction.sendMessageEmojiInteraction).msg_id = this.appMessagesIdsManager.generateMessageId((action as SendMessageAction.sendMessageEmojiInteraction).msg_id, (update as Update.updateChannelUserTyping).channel_id);\n    }\n\n    const cancelAction = () => {\n      delete typing.timeout;\n      // typings.findAndSplice((t) => t === typing);\n      const idx = typings.indexOf(typing);\n      if(idx !== -1) {\n        typings.splice(idx, 1);\n      }\n\n      this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\n\n      if(!typings.length) {\n        delete this.typingsInPeer[key];\n      }\n    };\n\n    if(typing?.timeout !== undefined) {\n      clearTimeout(typing.timeout);\n    }\n\n    if(action._ === 'sendMessageCancelAction') {\n      if(!typing) {\n        return;\n      }\n\n      cancelAction();\n      return;\n    }\n\n    if(!typing) {\n      typing = {\n        userId: fromId\n      };\n\n      typings.push(typing);\n    }\n\n    // console.log('updateChatUserTyping', update, typings);\n\n    typing.action = action;\n\n    const hasUser = this.appUsersManager.hasUser(fromId);\n    if(!hasUser) {\n      // let's load user here\n      if(update._ === 'updateChatUserTyping') {\n        if(update.chat_id && this.appChatsManager.hasChat(update.chat_id) && !this.appChatsManager.isChannel(update.chat_id)) {\n          Promise.resolve(this.getChatFull(update.chat_id)).then(() => {\n            if(typing.timeout !== undefined && this.appUsersManager.hasUser(fromId)) {\n              this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\n            }\n          });\n        }\n      }\n\n      // return;\n    } else {\n      this.appUsersManager.forceUserOnline(fromId);\n    }\n\n    typing.timeout = ctx.setTimeout(cancelAction, 6000);\n    if(hasUser) {\n      this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\n    }\n  };\n\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer_id);\n    if(this.appPeersManager.isUser(peerId)) {\n      const userId = peerId.toUserId();\n      const userFull = this.usersFull[userId];\n      if(userFull) {\n        if(update.pFlags.blocked) {\n          userFull.pFlags.blocked = true;\n        } else {\n          delete userFull.pFlags.blocked;\n        }\n\n        if(update.pFlags.blocked_my_stories_from) {\n          userFull.pFlags.blocked_my_stories_from = true;\n        } else {\n          delete userFull.pFlags.blocked_my_stories_from;\n        }\n      }\n\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    }\n\n    this.rootScope.dispatchEvent('peer_block', {\n      peerId,\n      blocked: update.pFlags.blocked,\n      blockedMyStoriesFrom: update.pFlags.blocked_my_stories_from\n    });\n  };\n\n  private onUpdatePeerSettings = (update: Update.updatePeerSettings) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n    this.rootScope.dispatchEvent('peer_settings', {peerId, settings: update.settings});\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Awaited} from '../types';\n\nexport default function callbackifyAll<T extends readonly unknown[] | [], R extends any>(\n  values: T,\n  callback: (result: { -readonly [P in keyof T]: Awaited<T[P]> }) => R\n): Promise<Awaited<R>> | R {\n  if(values.some((value) => value instanceof Promise)) {\n    return Promise.all(values).then(callback as any);\n  } else {\n    return callback(values as any);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MessagesReactions, type AvailableReaction, type Message, type MessagePeerReaction, type MessagesAvailableReactions, type Reaction, type ReactionCount, type Update, type Updates, ChatReactions, Peer, Document} from '../../layer';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport assumeType from '../../helpers/assumeType';\nimport callbackify from '../../helpers/callbackify';\nimport callbackifyAll from '../../helpers/callbackifyAll';\nimport copy from '../../helpers/object/copy';\nimport pause from '../../helpers/schedulers/pause';\nimport tsNow from '../../helpers/tsNow';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport reactionsEqual from './utils/reactions/reactionsEqual';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport availableReactionToReaction from './utils/reactions/availableReactionToReaction';\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\n\nconst SAVE_DOC_KEYS = [\n  'static_icon' as const,\n  'appear_animation' as const,\n  'select_animation' as const,\n  'activate_animation' as const,\n  'effect_animation' as const,\n  'around_animation' as const,\n  'center_icon' as const\n];\n\nconst REFERENCE_CONTEXT: ReferenceContext = {\n  type: 'reactions'\n};\n\nexport type PeerAvailableReactions = {\n  type: ChatReactions['_'],\n  reactions: Reaction[]\n};\n\nexport class AppReactionsManager extends AppManager {\n  private availableReactions: AvailableReaction[];\n  private sendReactionPromises: Map<string, Promise<any>>;\n  private lastSendingTimes: Map<string, number>;\n  private reactions: {[key in 'recent' | 'top']?: Reaction[]};\n\n  protected after() {\n    this.sendReactionPromises = new Map();\n    this.lastSendingTimes = new Map();\n    this.reactions = {};\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        Promise.resolve(this.getAvailableReactions()).then(async(availableReactions) => {\n          const toLoad: (Extract<keyof AvailableReaction, 'around_animation' | 'static_icon' | 'appear_animation' | 'center_icon'>)[] = [\n            'around_animation',\n            'static_icon',\n            'appear_animation',\n            'center_icon'\n          ];\n\n          for(let i = 0, length = Math.min(7, availableReactions.length); i < length; ++i) {\n            const availableReaction = availableReactions[i];\n            const promises = toLoad.map((key) => {\n              return availableReaction[key] && this.apiFileManager.downloadMedia({media: availableReaction[key]});\n            });\n            await Promise.all(promises);\n            await pause(1000);\n          }\n        });\n\n        this.getTopReactions();\n      }, 7.5e3);\n    });\n  }\n\n  public resetAvailableReactions() {\n    this.availableReactions = undefined;\n    this.getAvailableReactions();\n  }\n\n  public getAvailableReactions() {\n    if(this.availableReactions) return this.availableReactions;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAvailableReactions',\n      processResult: (messagesAvailableReactions) => {\n        assumeType<MessagesAvailableReactions.messagesAvailableReactions>(messagesAvailableReactions);\n\n        const availableReactions = this.availableReactions = messagesAvailableReactions.reactions;\n        for(const reaction of availableReactions) {\n          for(const key of SAVE_DOC_KEYS) {\n            if(!reaction[key]) {\n              continue;\n            }\n\n            reaction[key] = this.appDocsManager.saveDoc(reaction[key], REFERENCE_CONTEXT);\n          }\n        }\n\n        MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n          name: 'availableReactions',\n          value: availableReactions\n        });\n\n        return availableReactions;\n      },\n      params: {\n        hash: 0\n      }\n    });\n  }\n\n  public getActiveAvailableReactions() {\n    return callbackify(this.getAvailableReactions(), (availableReactions) => {\n      return availableReactions.filter((availableReaction) => !availableReaction.pFlags.inactive);\n    });\n  }\n\n  public getAvailableReactionsForPeer(\n    peerId: PeerId,\n    unshiftQuickReaction?: boolean\n  ): PeerAvailableReactions | Promise<PeerAvailableReactions> {\n    const activeAvailableReactions = this.getActiveAvailableReactions();\n    const topReactions = this.getTopReactions();\n    const quickReaction = this.getQuickReaction();\n    if(peerId.isUser()) {\n      return callbackifyAll([\n        topReactions,\n        quickReaction\n      ], ([topReactions, quickReaction]) => {\n        const p: PeerAvailableReactions = {type: 'chatReactionsAll', reactions: topReactions};\n        if(unshiftQuickReaction) {\n          this.unshiftQuickReactionInner(p, quickReaction);\n        }\n        return p;\n      });\n    }\n\n    const chatFull = this.appProfileManager.getChatFull(peerId.toChatId());\n    return callbackifyAll([\n      activeAvailableReactions,\n      chatFull,\n      quickReaction,\n      topReactions\n    ], ([\n      activeAvailableReactions,\n      chatFull,\n      quickReaction,\n      topReactions\n    ]) => {\n      let chatAvailableReactions = chatFull.available_reactions ?? {_: 'chatReactionsNone'};\n\n      if(chatAvailableReactions._ === 'chatReactionsAll' && !chatAvailableReactions.pFlags.allow_custom) {\n        chatAvailableReactions = {_: 'chatReactionsSome', reactions: activeAvailableReactions.map(availableReactionToReaction)};\n      }\n\n      let filteredChatReactions: Reaction[] = [];\n      if(chatAvailableReactions._ === 'chatReactionsAll') {\n        filteredChatReactions = topReactions;\n      } else if(chatAvailableReactions._ === 'chatReactionsSome') {\n        const filteredChatAvailableReactions = chatAvailableReactions.reactions.map((reaction) => {\n          return activeAvailableReactions.find((availableReaction) => availableReaction.reaction === (reaction as Reaction.reactionEmoji).emoticon);\n        }).filter(Boolean);\n        const indexes = new Map(activeAvailableReactions.map((availableReaction, idx) => [availableReaction.reaction, idx]));\n        filteredChatAvailableReactions.sort((a, b) => indexes.get(a.reaction) - indexes.get(b.reaction));\n        filteredChatReactions = filteredChatAvailableReactions.map(availableReactionToReaction);\n      }\n\n      const p: PeerAvailableReactions = {\n        type: chatAvailableReactions._,\n        reactions: filteredChatReactions\n      };\n\n      if(chatAvailableReactions._ === 'chatReactionsAll' && unshiftQuickReaction) {\n        this.unshiftQuickReactionInner(p, quickReaction);\n      }\n\n      return p;\n    });\n  }\n\n  public getReactions(type: 'recent' | 'top') {\n    if(this.reactions[type]) {\n      return this.reactions[type];\n    }\n\n    return this.apiManager.invokeApiHashable({\n      method: type === 'recent' ? 'messages.getRecentReactions' : 'messages.getTopReactions',\n      params: {\n        limit: 75\n      },\n      processResult: (messagesReactions) => {\n        assumeType<MessagesReactions.messagesReactions>(messagesReactions);\n        return this.reactions[type] = messagesReactions.reactions;\n      }\n    });\n  }\n\n  public getTopReactions() {\n    return this.getReactions('top');\n  }\n\n  public getRecentReactions() {\n    return this.getReactions('recent');\n  }\n\n  private unshiftQuickReactionInner(peerAvailableReactions: PeerAvailableReactions, quickReaction: Reaction | AvailableReaction) {\n    if(quickReaction._ === 'availableReaction') {\n      quickReaction = availableReactionToReaction(quickReaction);\n    }\n\n    peerAvailableReactions.reactions = peerAvailableReactions.reactions.slice();\n    findAndSplice(peerAvailableReactions.reactions, (reaction) => reactionsEqual(reaction, quickReaction));\n    peerAvailableReactions.reactions.unshift(quickReaction);\n\n    return peerAvailableReactions;\n  }\n\n  // private unshiftQuickReaction(\n  //   availableReactions: AvailableReaction[] | PromiseLike<AvailableReaction.availableReaction[]>,\n  //   quickReaction: ReturnType<AppReactionsManager['getQuickReaction']> = this.getQuickReaction()\n  // ) {\n  //   return callbackifyAll([\n  //     availableReactions,\n  //     quickReaction\n  //   ], ([availableReactions, quickReaction]) => {\n  //     return this.unshiftQuickReactionInner(availableReactions, quickReaction);\n  //   });\n  // }\n\n  public getAvailableReactionsByMessage(\n    message: Message.message,\n    unshiftQuickReaction?: boolean\n  ): ReturnType<AppReactionsManager['getAvailableReactionsForPeer']> {\n    // if(!message) return {type: 'chatReactionsNone', reactions: []};\n    let peerId: PeerId;\n    if(!message) {\n      peerId = NULL_PEER_ID;\n    } else {\n      peerId = (\n        message.fwd_from?.channel_post &&\n        this.appPeersManager.isMegagroup(message.peerId) &&\n        message.fromId === message.fwdFromId &&\n        message.fromId\n      ) || message.peerId;\n    }\n\n    return this.getAvailableReactionsForPeer(peerId, unshiftQuickReaction);\n  }\n\n  // public isReactionActive(reaction: string) {\n  //   if(!this.availableReactions) return false;\n  //   return this.availableReactions.some((availableReaction) => availableReaction.reaction === reaction);\n  // }\n\n  public getQuickReaction() {\n    return callbackifyAll([\n      this.apiManager.getConfig(),\n      this.getAvailableReactions()\n    ], ([config, availableReactions]) => {\n      const reaction = config.reactions_default;\n      if(reaction?._ === 'reactionEmoji') {\n        return availableReactions.find((availableReaction) => availableReaction.reaction === reaction.emoticon);\n      }\n\n      return reaction as Reaction.reactionCustomEmoji;\n    });\n  }\n\n  public getReactionCached(reaction: string) {\n    return this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getReaction(reaction: string) {\n    return callbackify(this.getAvailableReactions(), () => {\n      return this.getReactionCached(reaction);\n    });\n  }\n\n  public getMessagesReactions(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessagesReactions',\n      params: {\n        id: mids.map((mid) => getServerMessageId(mid)),\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateMessageReactions') as Update.updateMessageReactions;\n        // return update.reactions;\n      }\n    });\n  }\n\n  public getMessageReactionsList(peerId: PeerId, mid: number, limit: number, reaction?: Reaction, offset?: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessageReactionsList',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: getServerMessageId(mid),\n        limit,\n        reaction,\n        offset\n      },\n      processResult: (messageReactionsList) => {\n        this.appUsersManager.saveApiUsers(messageReactionsList.users);\n        return messageReactionsList;\n      }\n    });\n  }\n\n  public setDefaultReaction(reaction: Reaction) {\n    return this.apiManager.invokeApi('messages.setDefaultReaction', {reaction}).then(async(value) => {\n      if(value) {\n        const appConfig = await this.apiManager.getConfig();\n        if(appConfig) {\n          appConfig.reactions_default = reaction;\n        }/*  else { // if no config or loading it - overwrite\n          this.apiManager.getAppConfig(true);\n        } */\n\n        this.rootScope.dispatchEvent('quick_reaction', reaction);\n      }\n\n      return value;\n    });\n  }\n\n  public async sendReaction(message: Message.message, reaction?: Reaction | AvailableReaction, onlyLocal?: boolean) {\n    message = this.appMessagesManager.getMessageByPeer(message.peerId, message.mid) as typeof message;\n\n    if(reaction._ === 'availableReaction') {\n      reaction = {\n        _: 'reactionEmoji',\n        emoticon: reaction.reaction\n      };\n    }\n\n    const limit = await this.apiManager.getLimit('reactions');\n\n    const lastSendingTimeKey = message.peerId + '_' + message.mid;\n    const lastSendingTime = this.lastSendingTimes.get(lastSendingTimeKey);\n    if(lastSendingTime) {\n      return;\n    } else {\n      this.lastSendingTimes.set(lastSendingTimeKey, Date.now());\n      setTimeout(() => {\n        this.lastSendingTimes.delete(lastSendingTimeKey);\n      }, 333);\n    }\n\n    const {peerId, mid} = message;\n    const myPeer = this.appMessagesManager.generateFromId(peerId) ?? this.appPeersManager.getOutputPeer(peerId);\n    const myPeerId = this.appPeersManager.getPeerId(myPeer);\n\n    const unsetReactionCount = (reactionCount: ReactionCount) => {\n      --reactionCount.count;\n      delete reactionCount.chosen_order;\n\n      if(reactionsEqual(reaction as Reaction, reactionCount.reaction)) {\n        reaction = undefined as Reaction;\n      }\n\n      if(!reactionCount.count) {\n        indexOfAndSplice(reactions.results, reactionCount);\n      }/*  else {\n        insertInDescendSortedArray(reactions.results, chosenReaction, 'count', chosenReactionIdx);\n      } */\n\n      if(reactions.recent_reactions) {\n        findAndSplice(reactions.recent_reactions, (recentReaction) => reactionsEqual(recentReaction.reaction, reactionCount.reaction) && this.appPeersManager.getPeerId(recentReaction.peer_id) === myPeerId);\n      }\n\n      if(!reactions.results.length) {\n        reactions = undefined;\n      }\n    };\n\n    const canSeeList = message.reactions?.pFlags?.can_see_list || !this.appPeersManager.isBroadcast(message.peerId) || message.peerId.isUser();\n    if(!message.reactions) {\n      message.reactions = {\n        _: 'messageReactions',\n        results: [],\n        recent_reactions: canSeeList ? [] : undefined,\n        pFlags: {\n          can_see_list: canSeeList || undefined\n        }\n      };\n    }\n\n    let reactions = onlyLocal ? message.reactions : copy(message.reactions);\n    const chosenReactions = reactions.results.filter((reactionCount) => reactionCount.chosen_order !== undefined);\n    chosenReactions.sort((a, b) => b.chosen_order - a.chosen_order);\n    const unsetReactions: ReactionCount[] = [];\n    const chosenReactionIdx = chosenReactions.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\n    if(chosenReactionIdx !== -1) unsetReactions.push(...chosenReactions.splice(chosenReactionIdx, 1));\n    unsetReactions.push(...chosenReactions.splice(limit - +(chosenReactionIdx === -1)));\n    unsetReactions.forEach((reactionCount) => {\n      chosenReactions.forEach((chosenReactionCount) => {\n        if(chosenReactionCount.chosen_order > reactionCount.chosen_order) {\n          --chosenReactionCount.chosen_order;\n        }\n      });\n\n      unsetReactionCount(reactionCount);\n    });\n\n    const chosenReactionsLength = chosenReactions.length;\n    chosenReactions.forEach((reactionCount, idx) => {\n      reactionCount.chosen_order = chosenReactionsLength - 1 - idx;\n    });\n\n    if(reaction) {\n      if(!reactions) {\n        reactions/*  = message.reactions */ = {\n          _: 'messageReactions',\n          results: [],\n          pFlags: {}\n        };\n\n        if(canSeeList) {\n          reactions.pFlags.can_see_list = true;\n        }\n      }\n\n      let reactionCountIdx = reactions.results.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\n      let reactionCount = reactionCountIdx !== -1 && reactions.results[reactionCountIdx];\n      if(!reactionCount) {\n        reactionCount = {\n          _: 'reactionCount',\n          count: 0,\n          reaction\n        };\n\n        reactionCountIdx = reactions.results.push(reactionCount) - 1;\n      }\n\n      ++reactionCount.count;\n      reactionCount.chosen_order = chosenReactions.length ? chosenReactions[0].chosen_order + 1 : 0;\n      chosenReactions.unshift(reactionCount);\n\n      if(!reactions.recent_reactions && canSeeList) {\n        reactions.recent_reactions = [];\n      }\n\n      if(reactions.recent_reactions) {\n        const peerReaction: MessagePeerReaction = {\n          _: 'messagePeerReaction',\n          reaction,\n          peer_id: myPeer,\n          pFlags: {},\n          date: tsNow(true)\n        };\n\n        if(!this.appPeersManager.isMegagroup(peerId) && false) {\n          reactions.recent_reactions.push(peerReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(-3);\n        } else {\n          reactions.recent_reactions.unshift(peerReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(0, 3);\n        }\n      }\n\n      // insertInDescendSortedArray(reactions.results, reactionCount, 'count', reactionCountIdx);\n    }\n\n    const availableReactions = this.availableReactions;\n    if(reactions && availableReactions?.length) {\n      const indexes: Map<DocId | string, number> = new Map();\n      availableReactions.forEach((availableReaction, idx) => {\n        indexes.set(availableReaction.reaction, idx);\n      });\n\n      reactions.results.sort((a, b) => {\n        const id1 = (a.reaction as Reaction.reactionCustomEmoji).document_id || (a.reaction as Reaction.reactionEmoji).emoticon;\n        const id2 = (b.reaction as Reaction.reactionCustomEmoji).document_id || (b.reaction as Reaction.reactionEmoji).emoticon;\n        return (b.count - a.count) || ((indexes.get(id1) ?? 0) - (indexes.get(id2) ?? 0));\n      });\n    }\n\n    if(onlyLocal) {\n      message.reactions = reactions;\n      this.rootScope.dispatchEvent('messages_reactions', [{message, changedResults: []}]);\n      return Promise.resolve();\n    }\n\n    this.apiUpdatesManager.processLocalUpdate({\n      _: 'updateMessageReactions',\n      peer: message.peer_id,\n      msg_id: message.id,\n      reactions: reactions,\n      local: true\n    });\n\n    const promiseKey = [peerId, mid].join('-');\n    const msgId = getServerMessageId(mid);\n    const promise = this.apiManager.invokeApi('messages.sendReaction', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: msgId,\n      reaction: chosenReactions.map((reactionCount) => reactionCount.reaction).reverse()\n    }).then((updates) => {\n      assumeType<Updates.updates>(updates);\n\n      const editMessageUpdateIdx = updates.updates.findIndex((update) => update._ === 'updateEditMessage' || update._ === 'updateEditChannelMessage');\n      if(editMessageUpdateIdx !== -1) {\n        const editMessageUpdate = updates.updates[editMessageUpdateIdx] as Update.updateEditMessage | Update.updateEditChannelMessage;\n        updates.updates[editMessageUpdateIdx] = {\n          _: 'updateMessageReactions',\n          msg_id: msgId,\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          reactions: (editMessageUpdate.message as Message.message).reactions,\n          pts: editMessageUpdate.pts,\n          pts_count: editMessageUpdate.pts_count\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }).catch((err: ApiError) => {\n      if(err.type === 'REACTION_INVALID' && this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReaction(message, chosenReactions[0]?.reaction, true);\n      }\n    }).finally(() => {\n      if(this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReactionPromises.delete(promiseKey);\n      }\n    });\n\n    this.sendReactionPromises.set(promiseKey, promise);\n    return promise;\n  }\n\n  public getRandomGenericAnimation() {\n    return callbackify(this.appStickersManager.getLocalStickerSet('inputStickerSetEmojiGenericAnimations'), (messagesStickerSet) => {\n      const length = messagesStickerSet.documents.length;\n      if(!length) {\n        return;\n      }\n\n      const document = messagesStickerSet.documents[Math.floor(Math.random() * length)];\n      return document as Document.document;\n    });\n  }\n}\n","export default function fixBase64String(str: string, toUrl: boolean) {\n  if(toUrl) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n  } else {\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport type {DownloadOptions} from '../mtproto/apiFileManager';\nimport {Document, InputFileLocation, InputStickerSet, MessagesAllStickers, MessagesFavedStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered, Update, VideoSize} from '../../layer';\nimport {Modify} from '../../types';\nimport AppStorage from '../storage';\nimport DATABASE_STATE from '../../config/databases/state';\nimport assumeType from '../../helpers/assumeType';\nimport fixBase64String from '../../helpers/fixBase64String';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport {AppManager} from './manager';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport ctx from '../../environment/ctx';\nimport {getEnvironment} from '../../environment/utils';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\nimport tsNow from '../../helpers/tsNow';\n\nconst CACHE_TIME = 3600e3;\n\ntype LOCAL_STICKER_SET_ID = Extract<\n  InputStickerSet['_'],\n  'inputStickerSetAnimatedEmoji' | 'inputStickerSetAnimatedEmojiAnimations' |\n  'inputStickerSetPremiumGifts' | 'inputStickerSetEmojiGenericAnimations' |\n  'inputStickerSetEmojiDefaultStatuses' | 'inputStickerSetEmojiDefaultTopicIcons'\n>;\n\ntype LOCAL_ID = 'EMOJI' | 'EMOJI_ANIMATIONS' | 'PREMIUM_GIFTS' | 'GENERIC_ANIMATIONS' | 'DEFAULT_STATUSES' | 'DEFAULT_TOPIC_ICONS';\n\nconst LOCAL_IDS: {[key in LOCAL_ID]: LOCAL_STICKER_SET_ID} = {\n  EMOJI: 'inputStickerSetAnimatedEmoji',\n  EMOJI_ANIMATIONS: 'inputStickerSetAnimatedEmojiAnimations',\n  PREMIUM_GIFTS: 'inputStickerSetPremiumGifts',\n  GENERIC_ANIMATIONS: 'inputStickerSetEmojiGenericAnimations',\n  DEFAULT_STATUSES: 'inputStickerSetEmojiDefaultStatuses',\n  DEFAULT_TOPIC_ICONS: 'inputStickerSetEmojiDefaultTopicIcons'\n};\n\nconst LOCAL_IDS_SET: Set<LOCAL_STICKER_SET_ID> = new Set(Object.values(LOCAL_IDS) as any);\n\n// let TEST_FILE_REFERENCE_REFRESH = true;\n\nexport type MyStickerSetInput = {\n  id: StickerSet.stickerSet['id'],\n  access_hash?: StickerSet.stickerSet['access_hash']\n};\n\nexport type MyMessagesStickerSet = MessagesStickerSet.messagesStickerSet;\n\nexport class AppStickersManager extends AppManager {\n  private storage = new AppStorage<Record<Long, MyMessagesStickerSet>, typeof DATABASE_STATE>(DATABASE_STATE, 'stickerSets');\n\n  private getStickerSetPromises: {[setId: Long]: Promise<MyMessagesStickerSet>};\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<MyDocument[]>};\n\n  private greetingStickers: MyDocument[];\n  private getGreetingStickersTimeout: number;\n  private getGreetingStickersPromise: Promise<void>;\n\n  private sounds: Record<string, MyDocument>;\n  private getAnimatedEmojiSoundsPromise: Promise<void>;\n\n  private favedStickers: MyDocument[];\n  private recentStickers: MyDocument[];\n\n  private names: Record<string, InputStickerSet.inputStickerSetID>;\n\n  protected after() {\n    this.clear(true);\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        this.getAnimatedEmojiStickerSet();\n\n        Promise.resolve(this.getLocalStickerSet(LOCAL_IDS.GENERIC_ANIMATIONS)).then(async(messagesStickerSet) => {\n          for(const doc of messagesStickerSet.documents) {\n            await this.apiFileManager.downloadMedia({media: doc as Document.document});\n          }\n        });\n        // this.getFavedStickersStickers();\n      }, 1000);\n\n      if(!this.getGreetingStickersPromise) {\n        this.getGreetingStickersTimeout ??= ctx.setTimeout(() => {\n          this.getGreetingStickersTimeout = undefined;\n          this.getGreetingSticker(true);\n        }, 5000);\n      }\n    });\n\n    this.rootScope.addEventListener('app_config', () => this.onStickersUpdated('faved', true));\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateNewStickerSet: (update) => {\n        const stickerSet = update.stickerset as MyMessagesStickerSet;\n        this.saveStickerSet(stickerSet, stickerSet.set.id);\n        this.rootScope.dispatchEvent('stickers_installed', stickerSet.set);\n      },\n\n      updateRecentStickers: () => this.onStickersUpdated('recent', true),\n\n      updateFavedStickers: () => this.onStickersUpdated('faved', true),\n\n      updateMoveStickerSetToTop: (update) => {\n        this.rootScope.dispatchEvent('stickers_top', update.stickerset);\n      },\n\n      updateStickerSetsOrder: (update) => {\n        this.rootScope.dispatchEvent('stickers_order', {\n          type: update.pFlags.emojis ? 'emojis' : (update.pFlags.masks ? 'masks' : 'stickers'),\n          order: update.order\n        });\n      }\n\n      // updateStickerSets: (update) => {\n      //   if(update.pFlags.masks) {\n      //     return;\n      //   }\n\n      //   this.storage.clear(false);\n\n      //   if(update.pFlags.emojis) {\n\n      //   } else {\n      //     this.favedStickers = undefined;\n      //     this.recentStickers = undefined;\n      //     this.onStickersUpdated('recent', true);\n      //     this.onStickersUpdated('faved', true);\n      //   }\n      // }\n    });\n  }\n\n  public clear = (init?: boolean) => {\n    this.getStickerSetPromises = {};\n    this.getStickersByEmoticonsPromises = {};\n    this.sounds = {};\n    this.names = {};\n  };\n\n  private async onStickersUpdated(type: 'faved' | 'recent', overwrite: boolean) {\n    const stickers = await (type === 'faved' ? this.getFavedStickersStickers(overwrite) : this.getRecentStickersStickers(overwrite));\n    this.rootScope.dispatchEvent('stickers_updated', {\n      type,\n      stickers\n    });\n  }\n\n  public getGreetingSticker(justPreload = false) {\n    if(this.getGreetingStickersTimeout) {\n      clearTimeout(this.getGreetingStickersTimeout);\n      this.getGreetingStickersTimeout = undefined;\n    }\n\n    if(!this.getGreetingStickersPromise) {\n      this.getGreetingStickersPromise = this.getStickersByEmoticon({\n        emoticon: '👋⭐️',\n        includeServerStickers: true\n      }).then((docs) => {\n        if(!docs.length) throw 'NO_STICKERS';\n        this.greetingStickers = docs.slice() as Document.document[];\n        this.greetingStickers.sort((a, b) => Math.random() - Math.random());\n      });\n    }\n\n    return this.getGreetingStickersPromise.then(() => {\n      let doc: Document.document;\n      if(!justPreload) {\n        doc = this.greetingStickers.shift();\n        this.greetingStickers.push(doc);\n      }\n\n      this.apiFileManager.downloadMedia({media: this.greetingStickers[0]}); // preload next sticker\n\n      return doc;\n    });\n  }\n\n  private saveStickers(docs: Document[]) {\n    forEachReverse(docs, (doc, idx) => {\n      doc = this.appDocsManager.saveDoc(doc);\n\n      if(!doc) docs.splice(idx, 1);\n      else docs[idx] = doc;\n    });\n  }\n\n  private canUseStickerSetCache(set: MyMessagesStickerSet, useCache?: boolean) {\n    return set && set.documents?.length && ((Date.now() - set.refreshTime) < CACHE_TIME || useCache);\n  }\n\n  public getStickerSet(set: MyStickerSetInput, params: Partial<{\n    overwrite: boolean,\n    useCache: boolean,\n    saveById: boolean\n  }> = {}): Promise<MyMessagesStickerSet> | MyMessagesStickerSet {\n    let {id} = set;\n    if(!set.access_hash) {\n      set = this.names[id] || set;\n      id = set.id;\n    }\n\n    if(this.getStickerSetPromises[id]) {\n      return this.getStickerSetPromises[id];\n    }\n\n    if(!params.overwrite) {\n      const cachedSet = this.storage.getFromCache(id);\n      if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\n        return cachedSet;\n      }\n    }\n\n    const promise = this.getStickerSetPromises[id] = new Promise(async(resolve) => {\n      if(!params.overwrite) {\n        const cachedSet = await this.storage.get(id);\n        if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\n          this.saveStickers(cachedSet.documents);\n          resolve(cachedSet);\n\n          if(this.getStickerSetPromises[id] === promise) {\n            delete this.getStickerSetPromises[id];\n          }\n\n          return;\n        }\n      }\n\n      try {\n        const stickerSet = await this.apiManager.invokeApi('messages.getStickerSet', {\n          stickerset: this.getStickerSetInput(set),\n          hash: 0\n        }) as MyMessagesStickerSet;\n\n        const saveById = params.saveById ? id : stickerSet.set.id;\n        this.saveStickerSet(stickerSet, saveById);\n\n        resolve(stickerSet);\n      } catch(err) {\n        resolve(null);\n      }\n\n      if(this.getStickerSetPromises[id] === promise) {\n        delete this.getStickerSetPromises[id];\n      }\n    });\n\n    return promise;\n  }\n\n  public getLocalStickerSet(id: LOCAL_STICKER_SET_ID) {\n    return this.getStickerSet({id}, {saveById: true});\n  }\n\n  public getAnimatedEmojiStickerSet() {\n    return Promise.all([\n      this.getLocalStickerSet(LOCAL_IDS.EMOJI),\n      this.getLocalStickerSet(LOCAL_IDS.EMOJI_ANIMATIONS),\n      this.getAnimatedEmojiSounds(),\n      this.getLocalStickerSet(LOCAL_IDS.GENERIC_ANIMATIONS)\n    ]).then(([emoji, animations]) => {\n      return {emoji, animations};\n    });\n  }\n\n  public getAnimatedEmojiSounds(overwrite?: boolean) {\n    if(this.getAnimatedEmojiSoundsPromise && !overwrite) return this.getAnimatedEmojiSoundsPromise;\n    const promise = this.getAnimatedEmojiSoundsPromise = Promise.all([\n      this.apiManager.getAppConfig(overwrite),\n      this.apiManager.getConfig()\n    ]).then(([appConfig, config]) => {\n      if(this.getAnimatedEmojiSoundsPromise !== promise) {\n        return;\n      }\n\n      for(const emoji in appConfig.emojies_sounds) {\n        const sound = appConfig.emojies_sounds[emoji];\n        const bytesStr = atob(fixBase64String(sound.file_reference_base64, false));\n        const bytes = new Uint8Array(bytesStr.length);\n        for(let i = 0, length = bytes.length; i < length; ++i) {\n          bytes[i] = bytesStr[i].charCodeAt(0);\n        }\n\n        // if(TEST_FILE_REFERENCE_REFRESH) {\n        //   bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4] = 0;\n        //   sound.access_hash += '999';\n        // }\n\n        const doc = this.appDocsManager.saveDoc({\n          _: 'document',\n          pFlags: {},\n          id: sound.id,\n          access_hash: sound.access_hash,\n          attributes: [{\n            _: 'documentAttributeAudio',\n            duration: 1,\n            pFlags: {\n              voice: true\n            }\n          }],\n          date: 0,\n          dc_id: config.this_dc,\n          file_reference: bytes,\n          mime_type: 'audio/ogg'\n          // size: 101010 // test loading everytime\n        }, {\n          type: 'emojiesSounds'\n        });\n\n        this.sounds[emoji] = doc;\n      }\n\n      // if(TEST_FILE_REFERENCE_REFRESH) {\n      //   TEST_FILE_REFERENCE_REFRESH = false;\n      // }\n    });\n\n    return promise;\n  }\n\n  public async getRecentStickers(overwrite?: boolean): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\n    stickers: Document[]\n  }>> {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getRecentStickers',\n      processResult: (res) => {\n        assumeType<MessagesRecentStickers.messagesRecentStickers>(res);\n\n        this.recentStickers = res.stickers as MyDocument[];\n        this.saveStickers(res.stickers);\n        return res;\n      },\n      overwrite\n    });\n\n    return res;\n  }\n\n  public getRecentStickersStickers(overwrite?: boolean) {\n    if(overwrite) this.recentStickers = undefined;\n    else if(this.recentStickers) return this.recentStickers;\n    return this.getRecentStickers(overwrite).then(() => this.recentStickers);\n  }\n\n  public async saveRecentSticker(docId: DocId, unsave?: boolean, attached?: boolean) {\n    await this.getRecentStickersStickers();\n\n    const doc = this.appDocsManager.getDoc(docId);\n\n    findAndSplice(this.recentStickers, (_doc) => _doc.id === docId);\n    if(!unsave) {\n      this.recentStickers.unshift(doc);\n\n      const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n      for(const emoticon in this.getStickersByEmoticonsPromises) {\n        const promise = this.getStickersByEmoticonsPromises[emoticon];\n        promise.then((stickers) => {\n          const _doc = findAndSplice(stickers, (_doc) => _doc.id === doc.id);\n          if(_doc) {\n            stickers.unshift(_doc);\n          } else if(emoticon.includes(docEmoticon)) {\n            stickers.unshift(doc);\n          }\n        });\n      }\n    }\n\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'recent', faved: !unsave, document: doc});\n\n    if(unsave) {\n      this.onStickersUpdated('recent', false);\n    }\n\n    return this.apiManager.invokeApi('messages.saveRecentSticker', {\n      id: getDocumentInput(doc),\n      unsave,\n      attached\n    });\n  }\n\n  private cleanEmoji(emoji: string) {\n    return emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\n  }\n\n  public getAnimatedEmojiSticker(emoji: string, isAnimation?: boolean) {\n    const id = isAnimation ? LOCAL_IDS.EMOJI_ANIMATIONS : LOCAL_IDS.EMOJI;\n    const stickerSet = this.storage.getFromCache(id);\n    // const stickerSet = await this.getStickerSet({id});\n    if(!stickerSet?.documents) return;\n\n    if(isAnimation) {\n      if(['🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎'].includes(emoji)) {\n        emoji = '❤️';\n      }\n    }\n\n    emoji = this.cleanEmoji(emoji);\n    const pack = stickerSet.packs.find((p) => p.emoticon === emoji);\n    return pack ? this.appDocsManager.getDoc(pack.documents[0]) : undefined;\n  }\n\n  public getAnimatedEmojiSoundDocument(emoji: string) {\n    return this.sounds[this.cleanEmoji(emoji)];\n  }\n\n  public preloadAnimatedEmojiSticker(emoji: string) {\n    const preloadEmojiPromise = this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji);\n    });\n\n    return Promise.all([\n      preloadEmojiPromise,\n      this.preloadAnimatedEmojiStickerAnimation(emoji)\n    ]).then(([doc, a]) => {\n      return {\n        doc: doc,\n        animation: a?.doc,\n        sound: a?.sound\n      };\n    });\n  }\n\n  public preloadAnimatedEmojiStickerAnimation(emoji: string) {\n    return this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji, true);\n    }).then((doc) => {\n      if(!doc) {\n        return;\n      }\n\n      const sound = this.getAnimatedEmojiSoundDocument(emoji);\n      return Promise.all([\n        this.preloadSticker(doc.id),\n        sound ? this.preloadSticker(sound.id) : undefined\n      ]).then(() => {\n        return {doc, sound};\n      });\n    });\n  }\n\n  public preloadSticker(docId: DocId, isPremiumEffect?: boolean) {\n    const doc = this.appDocsManager.getDoc(docId);\n    return this.apiFileManager.downloadMedia({media: doc, thumb: isPremiumEffect ? doc.video_thumbs?.[0] as Extract<VideoSize, VideoSize.videoSize> : undefined});\n  }\n\n  private saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: DocId) {\n    const newSet: MessagesStickerSet = {\n      _: 'messages.stickerSet',\n      set: res.set,\n      packs: res.packs,\n      documents: res.documents as Document[],\n      keywords: res.keywords\n    };\n\n    let stickerSet = this.storage.getFromCache(id);\n    if(stickerSet) {\n      Object.assign(stickerSet, newSet);\n    } else {\n      stickerSet = this.storage.setToCache(id, newSet);\n    }\n\n    if(stickerSet.set.short_name) {\n      this.names[stickerSet.set.short_name] = this.getStickerSetInput(newSet.set) as any;\n    }\n\n    this.saveStickers(res.documents);\n\n    // console.log('stickers wrote', this.stickerSets);\n    const needSave = stickerSet.set.installed_date || LOCAL_IDS_SET.has(id as any);\n    stickerSet.refreshTime = Date.now();\n    this.storage.set({[id]: stickerSet}, !needSave);\n  }\n\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet): DownloadOptions {\n    const thumb = stickerSet.thumbs.find((thumb) => thumb._ === 'photoSize') as PhotoSize.photoSize;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: InputFileLocation.inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      thumb_version: stickerSet.thumb_version\n    };\n\n    return {dcId, location: input, size: thumb.size, mimeType: isAnimated ? 'application/x-tgsticker' : 'image/webp'};\n  }\n\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\n    const thumb = stickerSet.thumb;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      volume_id: thumb.location.volume_id,\n      local_id: thumb.location.local_id\n    };\n\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\n    return url;\n\n    //return promise;\n  } */\n\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\n    if(LOCAL_IDS_SET.has(set.id as any)) {\n      return {\n        _: set.id as any\n      };\n    } else if(!set.access_hash) {\n      return {\n        _: 'inputStickerSetShortName',\n        short_name: '' + set.id\n      };\n    } else {\n      return {\n        _: 'inputStickerSetID',\n        id: set.id,\n        access_hash: set.access_hash\n      };\n    }\n  }\n\n  public async getFeaturedStickers() {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getFeaturedStickers',\n      processResult: (res) => {\n        assumeType<MessagesFeaturedStickers.messagesFeaturedStickers>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: [], keywords: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    return res.sets;\n  }\n\n  public getPromoPremiumStickers() {\n    return this.getStickersByEmoticon({\n      emoticon: '⭐️⭐️',\n      includeServerStickers: true\n    });\n  }\n\n  public getPremiumStickers() {\n    return this.getStickersByEmoticon({\n      emoticon: '📂⭐️',\n      includeServerStickers: true,\n      excludePremiumEffectStickers: true\n    });\n  }\n\n  public getFavedStickers(overwrite?: boolean) {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getFavedStickers',\n      processResult: (favedStickers) => {\n        assumeType<MessagesFavedStickers.messagesFavedStickers>(favedStickers);\n        this.saveStickers(favedStickers.stickers);\n        this.favedStickers = favedStickers.stickers as MyDocument[];\n        return favedStickers;\n      },\n      overwrite\n    });\n  }\n\n  public getFavedStickersStickers(overwrite?: boolean) {\n    if(overwrite) this.favedStickers = undefined;\n    else if(this.favedStickers) return this.favedStickers;\n    return this.getFavedStickers(overwrite).then(() => this.favedStickers);\n  }\n\n  public getFavedStickersLimit() {\n    return this.apiManager.getLimit('favedStickers');\n  }\n\n  public async faveSticker(docId: DocId, unfave?: boolean) {\n    if(!this.favedStickers) {\n      await this.getFavedStickersStickers();\n    }\n\n    const limit = await this.getFavedStickersLimit();\n\n    const doc = this.appDocsManager.getDoc(docId);\n    findAndSplice(this.favedStickers, (_doc) => _doc.id === doc.id);\n\n    if(!unfave) {\n      this.favedStickers.unshift(doc);\n      const spliced = this.favedStickers.splice(limit, this.favedStickers.length - limit);\n    }\n\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'faved', faved: !unfave, document: doc});\n\n    return this.apiManager.invokeApi('messages.faveSticker', {\n      id: getDocumentInput(doc),\n      unfave\n    }).then(() => {\n      if(unfave) {\n        this.onStickersUpdated('faved', true);\n      }\n    });\n  }\n\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\n    set = this.storage.getFromCache(set.id).set;\n\n    if(set.installed_date) {\n      const res = await this.apiManager.invokeApi('messages.uninstallStickerSet', {\n        stickerset: this.getStickerSetInput(set)\n      });\n\n      if(res) {\n        delete set.installed_date;\n        this.rootScope.dispatchEvent('stickers_deleted', set);\n        this.storage.delete(set.id, true);\n        return true;\n      }\n    } else {\n      const res = await this.apiManager.invokeApi('messages.installStickerSet', {\n        stickerset: this.getStickerSetInput(set),\n        archived: false\n      });\n\n      if(res) {\n        set.installed_date = tsNow(true);\n        this.rootScope.dispatchEvent('stickers_installed', set);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public toggleStickerSets(sets: StickerSet.stickerSet[]) {\n    return Promise.all(sets.map((set) => this.toggleStickerSet(set)));\n  }\n\n  public async searchStickerSets(query: string, excludeFeatured = true) {\n    const flags = excludeFeatured ? 1 : 0;\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.searchStickerSets',\n      params: {\n        flags,\n        exclude_featured: excludeFeatured || undefined,\n        q: query\n      },\n      processResult: (res) => {\n        assumeType<MessagesFoundStickerSets.messagesFoundStickerSets>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: [], keywords: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    const foundSaved: StickerSetCovered[] = [];\n    const cache = this.storage.getCache();\n    for(const id in cache) {\n      const {set} = cache[id];\n\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find((c) => c.set.id === set.id)) {\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\n      }\n    }\n\n    return res.sets.concat(foundSaved);\n  }\n\n  private processAllStickersResult = (allStickers: MessagesAllStickers) => {\n    assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\n\n    forEachReverse(allStickers.sets, (stickerSet, idx, arr) => {\n      if(stickerSet.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n        arr.splice(idx, 1);\n      }\n    });\n\n    return allStickers;\n  };\n\n  public getAllStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getAllStickers',\n      processResult: this.processAllStickersResult\n    });\n  }\n\n  public getEmojiStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getEmojiStickers',\n      processResult: this.processAllStickersResult\n    });\n  }\n\n  public preloadStickerSets() {\n    return this.getAllStickers().then((allStickers) => {\n      const sets = (allStickers as MessagesAllStickers.messagesAllStickers).sets;\n      return Promise.all(sets.map((set) => this.getStickerSet(set, {useCache: true})));\n    });\n  }\n\n  // TODO: detect \"🤷\" by \"🤷‍♂️\"\n  public getStickersByEmoticon({\n    emoticon,\n    includeOurStickers,\n    includeServerStickers,\n    excludePremiumEffectStickers\n  }: {\n    emoticon: string,\n    includeOurStickers?: boolean,\n    includeServerStickers?: boolean,\n    excludePremiumEffectStickers?: boolean\n  }) {\n    emoticon = fixEmoji(emoticon);\n    const cacheKey = emoticon + (includeOurStickers ? '1' : '0') + (includeServerStickers ? '1' : '0');\n    if(this.getStickersByEmoticonsPromises[cacheKey]) return this.getStickersByEmoticonsPromises[cacheKey];\n\n    return this.getStickersByEmoticonsPromises[cacheKey] = Promise.all([\n      includeServerStickers ? this.apiManager.invokeApiHashable({\n        method: 'messages.getStickers',\n        params: {\n          emoticon\n        },\n        processResult: (stickers) => stickers\n      }) : undefined,\n      includeOurStickers ? this.preloadStickerSets() : [],\n      includeOurStickers ? this.getRecentStickers() : undefined\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\n      const foundStickers = messagesStickers ? (messagesStickers as MessagesStickers.messagesStickers).stickers.map((sticker) => this.appDocsManager.saveDoc(sticker)) : [];\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\n\n      // console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\n\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\n        for(const pack of packs) {\n          const packEmoticon = fixEmoji(pack.emoticon);\n          if(packEmoticon.includes(emoticon)) {\n            for(const docId of pack.documents) {\n              const doc = this.appDocsManager.getDoc(docId);\n              (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\n            }\n          }\n        }\n      };\n\n      if(recentStickers) {\n        iteratePacks(recentStickers.packs);\n        const stickers = recentStickers.stickers;\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          s.sort((a, b) => stickers.indexOf(a) - stickers.indexOf(b));\n        });\n      }\n\n      for(const set of installedSets) {\n        iteratePacks(set.packs);\n      }\n\n      /* const entities = parseEntities(emoticon);\n      if(entities.length === 1) {\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          forEachReverse(s, (doc, idx) => {\n            const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n            if(docEmoticon !== emoticon) {\n              s.splice(idx, 1);\n            }\n          });\n        });\n      } */\n\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter((doc) => !doc.animated) */;\n\n      forEachReverse(stickers, (sticker, idx, arr) => {\n        if((sticker.sticker === 3 && !getEnvironment().IS_WEBM_SUPPORTED) ||\n          (excludePremiumEffectStickers && !this.rootScope.premium && getStickerEffectThumb(sticker))) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      return stickers;\n    });\n  }\n\n  public clearRecentStickers() {\n    if(this.recentStickers) {\n      this.recentStickers.length = 0;\n      this.onStickersUpdated('recent', false);\n    }\n\n    return this.apiManager.invokeApi('messages.clearRecentStickers');\n  }\n\n  public reorderStickerSets(order: StickerSet.stickerSet['id'][], emojis?: boolean, masks?: boolean) {\n    return this.apiManager.invokeApi('messages.reorderStickerSets', {\n      emojis,\n      masks,\n      order\n    }).then(() => {\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateStickerSetsOrder',\n        order,\n        pFlags: {\n          emojis: emojis || undefined,\n          masks: masks || undefined\n        }\n      });\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nexport default function cleanUsername(username: string) {\n  return username && username.toLowerCase() || '';\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {User} from '../../../../layer';\nimport {REPLIES_PEER_ID} from '../../../mtproto/mtproto_config';\n\nexport default function canSendToUser(user: User.user) {\n  return !!(user && !user.pFlags.deleted && user.id.toPeerId() !== REPLIES_PEER_ID);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport filterUnique from '../../helpers/array/filterUnique';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport cleanSearchText, {ProcessSearchTextOptions, processSearchText} from '../../helpers/cleanSearchText';\nimport cleanUsername from '../../helpers/cleanUsername';\nimport tsNow from '../../helpers/tsNow';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {Chat, ContactsResolvedPeer, InputContact, InputGeoPoint, InputMedia, InputPeer, InputUser, User as MTUser, UserProfilePhoto, UserStatus} from '../../layer';\nimport parseEntities from '../richTextProcessor/parseEntities';\nimport wrapUrl from '../richTextProcessor/wrapUrl';\nimport SearchIndex from '../searchIndex';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\nimport canSendToUser from './utils/users/canSendToUser';\nimport {AppStoragesManager} from './appStoragesManager';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\nimport callbackify from '../../helpers/callbackify';\nimport {NULL_PEER_ID, TEST_NO_STORIES} from '../mtproto/mtproto_config';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\nexport type User = MTUser.user;\nexport type TopPeerType = 'correspondents' | 'bots_inline';\nexport type MyTopPeer = {id: PeerId, rating: number};\n\nconst SEARCH_OPTIONS: ProcessSearchTextOptions = {\n  clearBadChars: true,\n  ignoreCase: true,\n  latinize: true,\n  includeTag: true\n};\n\nexport class AppUsersManager extends AppManager {\n  private storage: AppStoragesManager['storages']['users'];\n\n  private users: {[userId: UserId]: User};\n  private usernames: {[username: string]: PeerId};\n  private contactsIndex: SearchIndex<UserId>;\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\n  private contactsList: Set<UserId>;\n  private updatedContactsList: boolean;\n\n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\n\n  protected after() {\n    this.clear(true);\n\n    setInterval(this.updateUsersStatuses, 60000);\n\n    this.rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateUserStatus: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          user.status = update.status;\n          if(user.status) {\n            if('expires' in user.status) {\n              user.status.expires -= this.timeManager.getServerTimeOffset();\n            }\n\n            if('was_online' in user.status) {\n              user.status.was_online -= this.timeManager.getServerTimeOffset();\n            }\n          }\n\n          // user.sortStatus = this.getUserStatusForSort(user.status);\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.setUserToStateIfNeeded(user);\n        } // ////else console.warn('No user by id:', userId);\n      },\n\n      // updateUserPhoto: (update) => {\n      //   const userId = update.user_id;\n      //   const user = this.users[userId];\n      //   if(user) {\n      //     if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto)?.photo_id) {\n      //       return;\n      //     }\n\n      //     this.forceUserOnline(userId, update.date);\n\n      //     if(update.photo._ === 'userProfilePhotoEmpty') {\n      //       delete user.photo;\n      //     } else {\n      //       user.photo = safeReplaceObject(user.photo, update.photo);\n      //     }\n\n      //     this.setUserToStateIfNeeded(user);\n\n      //     this.rootScope.dispatchEvent('user_update', userId);\n      //     this.rootScope.dispatchEvent('avatar_update', userId.toPeerId());\n      //   } else console.warn('No user by id:', userId);\n      // },\n\n      updateUserName: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n\n          this.saveApiUser({\n            ...user,\n            first_name: update.first_name,\n            last_name: update.last_name,\n            username: undefined,\n            usernames: update.usernames\n          }, true);\n        }\n      }\n    });\n\n    /* case 'updateContactLink':\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\n    break; */\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('users')\n    ]).then(([state, {results: users, storage}]) => {\n      this.storage = storage;\n\n      this.saveApiUsers(users);\n      for(let i = 0, length = users.length; i < length; ++i) {\n        const user = users[i];\n        if(!user) {\n          continue;\n        }\n\n        if(state.contactsListCachedTime && (user.pFlags.contact || user.pFlags.mutual_contact)) {\n          this.pushContact(user.id);\n\n          if(!this.contactsFillPromise) {\n            this.contactsFillPromise = deferredPromise();\n            this.contactsFillPromise.resolve(this.contactsList);\n          }\n        }\n      }\n\n      // const contactsList = state.contactsList;\n      // if(Array.isArray(contactsList)) {\n      //   contactsList.forEach((userId) => {\n      //     this.pushContact(userId);\n      //   });\n\n      //   if(contactsList.length) {\n      //     this.contactsFillPromise = deferredPromise();\n      //     this.contactsFillPromise.resolve(this.contactsList);\n      //   }\n      // }\n\n      const recentSearch = state.recentSearch || [];\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\n        this.peersStorage.requestPeer(recentSearch[i], 'recentSearch');\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(!this.storage.getFromCache(userId)) {\n          this.storage.set({\n            [userId]: this.getUser(userId)\n          });\n        }\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(this.storage.getFromCache(userId)) {\n          this.storage.delete(userId);\n        }\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const userId in this.users) {\n        // const userId = +userId;\n        if(!userId) continue;\n        const peerId = userId.toPeerId();\n        if(!this.peersStorage.isPeerNeeded(peerId)) {\n          const user = this.users[userId];\n          this.modifyUsernamesCache(user, false);\n\n          this.storage.delete(userId);\n          delete this.users[userId];\n        }\n      }\n    } else {\n      this.users = {};\n      this.usernames = {};\n    }\n\n    this.getTopPeersPromises = {};\n    this.contactsIndex = this.createSearchIndex();\n    this.contactsFillPromise = undefined;\n    this.contactsList = new Set();\n    this.updatedContactsList = false;\n  };\n\n  public indexMyself() {\n    const userId = this.getSelf().id;\n    this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n  }\n\n  public get userId() {\n    return this.rootScope.myId.toUserId();\n  }\n\n  private onContactsModified(fromServer?: boolean) {\n    // const contactsList = [...this.contactsList];\n    // this.appStateManager.pushToState('contactsList', contactsList);\n\n    if(fromServer) {\n      this.appStateManager.pushToState('contactsListCachedTime', tsNow(true));\n    }\n  }\n\n  public pushRecentSearch(peerId: PeerId) {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      if(recentSearch[0] !== peerId) {\n        indexOfAndSplice(recentSearch, peerId);\n        recentSearch.unshift(peerId);\n        if(recentSearch.length > 20) {\n          recentSearch.length = 20;\n        }\n\n        this.appStateManager.pushToState('recentSearch', recentSearch);\n        for(const peerId of recentSearch) {\n          this.peersStorage.requestPeer(peerId, 'recentSearch');\n        }\n      }\n    });\n  }\n\n  public clearRecentSearch() {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      for(const peerId of recentSearch) {\n        this.peersStorage.releasePeer(peerId, 'recentSearch');\n      }\n\n      recentSearch.length = 0;\n      this.appStateManager.pushToState('recentSearch', recentSearch);\n    });\n  }\n\n  public fillContacts() {\n    if(this.contactsFillPromise && this.updatedContactsList) {\n      return {\n        cached: this.contactsFillPromise.isFulfilled,\n        promise: this.contactsFillPromise\n      };\n    }\n\n    this.updatedContactsList = true;\n\n    const promise = deferredPromise<Set<UserId>>();\n    this.apiManager.invokeApi('contacts.getContacts').then((result) => {\n      if(result._ === 'contacts.contacts') {\n        this.contactsList.clear();\n\n        this.saveApiUsers(result.users);\n\n        result.contacts.forEach((contact) => {\n          this.pushContact(contact.user_id);\n        });\n\n        this.onContactsModified(true);\n\n        this.contactsFillPromise = promise;\n      }\n\n      promise.resolve(this.contactsList);\n    }, () => {\n      this.updatedContactsList = false;\n    });\n\n    return {\n      cached: this.contactsFillPromise?.isFulfilled,\n      promise: this.contactsFillPromise ||= promise\n    };\n  }\n\n  public resolveUsername(username: string): Promise<Chat | User> | Chat | User {\n    if(username[0] === '@') {\n      username = username.slice(1);\n    }\n\n    username = username.toLowerCase();\n    const peerId = this.usernames[username];\n    if(peerId) {\n      return this.appPeersManager.getPeer(peerId);\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'contacts.resolveUsername',\n      params: {username},\n      processResult: (resolvedPeer) => this.processResolvedPeer(resolvedPeer)\n    });\n  }\n\n  public resolveUserByUsername(username: string) {\n    return callbackify(this.resolveUsername(username), (peer) => {\n      return peer?._ === 'user' ? peer : undefined;\n    });\n  }\n\n  private processResolvedPeer(resolvedPeer: ContactsResolvedPeer.contactsResolvedPeer) {\n    this.saveApiUsers(resolvedPeer.users);\n    this.appChatsManager.saveApiChats(resolvedPeer.chats);\n\n    return this.appPeersManager.getPeer(getPeerId(resolvedPeer.peer)) as Chat | User;\n  }\n\n  public resolvePhone(phone: string) {\n    return this.apiManager.invokeApi('contacts.resolvePhone', {phone}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer) as User;\n    });\n  }\n\n  private pushContact(id: UserId) {\n    this.contactsList.add(id);\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\n    this.peersStorage.requestPeer(id.toPeerId(), 'contact');\n  }\n\n  private popContact(id: UserId) {\n    this.contactsList.delete(id);\n    this.contactsIndex.indexObject(id, ''); // delete search index\n    this.peersStorage.releasePeer(id.toPeerId(), 'contact');\n  }\n\n  public getUserSearchText(id: UserId) {\n    const user = this.users[id];\n    if(!user) {\n      return '';\n    }\n\n    const arr: string[] = [\n      user.first_name,\n      user.last_name,\n      user.phone,\n      ...getPeerActiveUsernames(user),\n      // user.pFlags.self ? I18n.format('SavedMessages', true) : '',\n      user.pFlags.self ? 'Saved Messages' : ''\n    ];\n\n    return arr.filter(Boolean).join(' ');\n  }\n\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' | 'rating' = 'name') {\n    const contactListPromise = this.fillContacts().promise;\n    return Promise.all([\n      contactListPromise,\n      sortBy === 'rating' && this.getTopPeers('correspondents')\n    ]).then(([_contactsList, topPeers]) => {\n      let contactsList = [..._contactsList];\n      if(query) {\n        const results = this.contactsIndex.search(query);\n        const filteredContactsList = [...contactsList].filter((id) => results.has(id));\n\n        contactsList = filteredContactsList;\n      }\n\n      if(sortBy === 'name') {\n        contactsList.sort((userId1, userId2) => {\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\n          return sortName1.localeCompare(sortName2);\n        });\n      } else if(sortBy === 'online') {\n        contactsList.sort((userId1, userId2) => {\n          const status1 = this.getUserStatusForSort(this.getUser(userId1).status);\n          const status2 = this.getUserStatusForSort(this.getUser(userId2).status);\n          return status2 - status1;\n        });\n      } else if(sortBy === 'rating') {\n        if(!query.trim().replace(/@/g, '')) contactsList = topPeers.map((peer) => peer.id.toUserId());\n        else {\n          const ratingMap = new Map<UserId, number>(topPeers.map((peer) => [peer.id.toUserId(), peer.rating]));\n          contactsList.sort((userId1, userId2) => {\n            const rating1 = ratingMap.get(userId1) || 0;\n            const rating2 = ratingMap.get(userId2) || 0;\n            return rating2 - rating1;\n          });\n        }\n      }\n\n      const myUserId = this.userId;\n      indexOfAndSplice(contactsList, myUserId);\n      if(includeSaved) {\n        if(this.testSelfSearch(query)) {\n          contactsList.unshift(myUserId);\n        }\n      }\n\n      return contactsList;\n    });\n  }\n\n  public getContactsPeerIds(\n    query?: Parameters<AppUsersManager['getContacts']>[0],\n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1],\n    sortBy?: Parameters<AppUsersManager['getContacts']>[2],\n    limit?: number\n  ) {\n    return this.getContacts(query, includeSaved, sortBy).then((userIds) => {\n      const peerIds = userIds.map((userId) => userId.toPeerId(false));\n      if(limit) {\n        return peerIds.slice(0, limit);\n      }\n\n      return peerIds;\n    });\n  }\n\n  public toggleBlock(peerId: PeerId, block: boolean, blockMyStoriesFrom?: boolean) {\n    return this.apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\n      id: this.appPeersManager.getInputPeerById(peerId),\n      my_stories_from: blockMyStoriesFrom === undefined ? undefined : true\n    }).then(() => {\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updatePeerBlocked',\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        pFlags: {\n          blocked: block || undefined,\n          blocked_my_stories_from: blockMyStoriesFrom || undefined\n        }\n      });\n\n      this.appProfileManager.refreshPeerSettingsIfNeeded(peerId);\n    });\n  }\n\n  public testSelfSearch(query: string) {\n    const user = this.getSelf();\n    const index = this.createSearchIndex();\n    index.indexObject(user.id, this.getUserSearchText(user.id));\n    return index.search(query).has(user.id);\n  }\n\n  public createSearchIndex() {\n    return new SearchIndex<UserId>(SEARCH_OPTIONS);\n  }\n\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\n    if(!apiUsers || (apiUsers as any).saved) return;\n    (apiUsers as any).saved = true;\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\n  }\n\n  public modifyUsernamesCache(peer: Parameters<typeof getPeerActiveUsernames>[0], save: boolean) {\n    const usernames = getPeerActiveUsernames(peer);\n    if(!usernames.length) {\n      return;\n    }\n\n    const cleanedUsernames = usernames.map((username) => cleanUsername(username));\n    if(save) {\n      cleanedUsernames.forEach((searchUsername) => {\n        this.usernames[searchUsername] = peer.id.toPeerId(peer._ !== 'user');\n      });\n    } else {\n      cleanedUsernames.forEach((searchUsername) => {\n        delete this.usernames[searchUsername];\n      });\n    }\n  }\n\n  public setUsernameToCache(peer: Parameters<typeof getPeerActiveUsernames>[0], oldPeer?: typeof peer) {\n    if(\n      !oldPeer ||\n      (oldPeer as MTUser.user).username !== (peer as MTUser.user).username ||\n      !deepEqual((oldPeer as MTUser.user).usernames, (peer as MTUser.user).usernames)\n    ) {\n      this.modifyUsernamesCache(oldPeer, false);\n      this.modifyUsernamesCache(peer, true);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public saveApiUser(user: MTUser, override?: boolean) {\n    if(!user || user._ === 'userEmpty') return;\n\n    const userId = user.id;\n    const oldUser = this.users[userId];\n\n    // ! commented block can affect performance !\n    // if(oldUser && !override) {\n    //   console.log('saveApiUser same');\n    //   return;\n    // }\n\n    user.pFlags ??= {};\n\n    if(user.pFlags.min && oldUser !== undefined) {\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\n\n    const changedUsername = this.setUsernameToCache(user, oldUser);\n\n    if(!oldUser ||\n      oldUser.sortName === undefined ||\n      oldUser.first_name !== user.first_name ||\n      oldUser.last_name !== user.last_name) {\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);\n    } else {\n      user.sortName = oldUser.sortName;\n    }\n\n    if(user.status) {\n      if((user.status as UserStatus.userStatusOnline).expires) {\n        (user.status as UserStatus.userStatusOnline).expires -= this.timeManager.getServerTimeOffset();\n      }\n\n      if((user.status as UserStatus.userStatusOffline).was_online) {\n        (user.status as UserStatus.userStatusOffline).was_online -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    if((user as User).photo?._ === 'userProfilePhotoEmpty') {\n      delete (user as User).photo;\n    }\n\n    // user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\n\n    // if(!user.username && user.usernames) {\n    //   user.username = user.usernames.find((username) => username.pFlags.active).username;\n    // }\n\n    const peerId = userId.toPeerId(false);\n    if(oldUser === undefined) {\n      this.users[userId] = user;\n      this.mirrorUser(user);\n    } else {\n      const changedTitle = user.first_name !== oldUser.first_name ||\n        user.last_name !== oldUser.last_name ||\n        changedUsername;\n\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const changedPhoto = oldPhotoId !== newPhotoId;\n\n      const changedPremium = oldUser.pFlags.premium !== user.pFlags.premium;\n      const changedAnyBadge = changedPremium ||\n        oldUser.pFlags.verified !== user.pFlags.verified ||\n        oldUser.pFlags.scam !== user.pFlags.scam ||\n        oldUser.pFlags.fake !== user.pFlags.fake;\n\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\n\n      } */\n\n      const wasContact = !!oldUser.pFlags.contact;\n      const newContact = !!user.pFlags.contact;\n\n      const storiesCallback = this.appStoriesManager.saveApiPeerStories(user, oldUser);\n\n      safeReplaceObject(oldUser, user);\n      this.mirrorUser(oldUser);\n\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      if(wasContact !== newContact) {\n        this.onContactUpdated(userId, newContact, wasContact);\n      }\n\n      storiesCallback?.();\n\n      if(changedPhoto) {\n        this.rootScope.dispatchEvent('avatar_update', {peerId});\n      }\n\n      if(changedTitle || changedAnyBadge) {\n        this.rootScope.dispatchEvent('peer_title_edit', {peerId});\n      }\n\n      // whitelisted domains\n      if(changedPremium) {\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n    }\n\n    this.checkPremium(user, oldUser);\n    this.setUserToStateIfNeeded(user);\n  }\n\n  private mirrorUser(user: User) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n      name: 'peers',\n      key: '' + user.id,\n      value: user\n    });\n  }\n\n  private checkPremium(user: User, oldUser: User) {\n    if(user.pFlags.self) {\n      const isPremium = !!user.pFlags.premium;\n      if(this.rootScope.premium !== isPremium) {\n        this.rootScope.dispatchEvent('premium_toggle_private', {isNew: !oldUser, isPremium});\n      }\n    }\n  }\n\n  private setUserToStateIfNeeded(user: User) {\n    if(this.peersStorage.isPeerNeeded(user.id.toPeerId())) {\n      this.storage.set({\n        [user.id]: user\n      });\n    }\n  }\n\n  public isUserOnlineVisible(id: UserId) {\n    return this.getUserStatusForSort(id) > 3;\n  }\n\n  public getUserStatusForSort(status: User['status'] | UserId) {\n    if(typeof(status) !== 'object') {\n      const user = this.getUser(status);\n      status = user?.status;\n    }\n\n    if(status) {\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\n      if(expires) {\n        return expires;\n      }\n\n      /* const timeNow = tsNow(true);\n      switch(status._) {\n        case 'userStatusRecently':\n          return timeNow - 86400 * 3;\n        case 'userStatusLastWeek':\n          return timeNow - 86400 * 7;\n        case 'userStatusLastMonth':\n          return timeNow - 86400 * 30;\n      } */\n      switch(status._) {\n        case 'userStatusRecently':\n          return 3;\n        case 'userStatusLastWeek':\n          return 2;\n        case 'userStatusLastMonth':\n          return 1;\n      }\n    }\n\n    return 0;\n  }\n\n  public getUser(id: User | UserId) {\n    if(isObject<User>(id)) {\n      return id;\n    }\n\n    return this.users[id];\n  }\n\n  public getUsers() {\n    return this.users;\n  }\n\n  public getUserStatus(id: UserId) {\n    return this.isRegularUser(id) && !this.users[id].pFlags.self && this.users[id].status;\n  }\n\n  public async getUserPhone(id: UserId) {\n    const user = this.getUser(id);\n    if(!user?.phone) {\n      return;\n    }\n\n    const appConfig = await this.apiManager.getAppConfig();\n    return {\n      phone: user.phone,\n      isAnonymous: appConfig.fragment_prefixes.some((prefix) => user.phone.startsWith(prefix))\n    };\n  }\n\n  public getSelf() {\n    return this.getUser(this.userId);\n  }\n\n  public isBot(id: UserId) {\n    return this.users[id] && !!this.users[id].pFlags.bot;\n  }\n\n  public isAttachMenuBot(id: UserId) {\n    return this.isBot(id) && !!this.users[id].pFlags.bot_attach_menu;\n  }\n\n  public isContact(id: UserId) {\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\n  }\n\n  public isRegularUser(id: UserId) {\n    const user = this.users[id];\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\n  }\n\n  public isNonContactUser(id: UserId) {\n    return this.isRegularUser(id) && !this.isContact(id) && id !== this.userId;\n  }\n\n  public isPremium(id: UserId) {\n    const user = this.users[id];\n    return !!user?.pFlags?.premium;\n  }\n\n  public isDeleted(id: UserId) {\n    const user = this.users[id];\n    return !!user?.pFlags?.deleted;\n  }\n\n  public hasUser(id: UserId, allowMin?: boolean) {\n    const user = this.users[id];\n    return isObject(user) && (allowMin || !user.pFlags.min);\n  }\n\n  public canEdit(id: UserId) {\n    return this.userId === id || this.isContact(id) || !!this.users[id]?.pFlags?.bot_can_edit;\n  }\n\n  public getUserString(id: UserId) {\n    const user = this.getUser(id);\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\n  }\n\n  public getUserId(userId: Parameters<typeof getPeerId>[0]) {\n    const peerId = getPeerId(userId);\n    if(peerId) {\n      return peerId.toUserId();\n    }\n\n    return (isObject<InputUser>(userId) && userId._ === 'inputUserSelf' && this.getSelf().id) || NULL_PEER_ID;\n  }\n\n  public getUserInput(id: UserId): InputUser {\n    const user = this.getUser(id);\n    if(!id || (user.pFlags && user.pFlags.self)) {\n      return {_: 'inputUserSelf'};\n    }\n\n    return {\n      _: 'inputUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\n    const user = this.getUser(id);\n    // ! do not use it, there are places that don't support it. need explicit peer id\n    // if(user.pFlags?.self) {\n    //   return {_: 'inputPeerSelf'};\n    // }\n\n    return {\n      _: 'inputPeerUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\n    const user = this.getUser(id);\n\n    return {\n      _: 'inputMediaContact',\n      first_name: user.first_name,\n      last_name: user.last_name,\n      phone_number: user.phone,\n      vcard: '',\n      user_id: id\n    };\n  }\n\n  private updateUsersStatuses = () => {\n    const timestampNow = tsNow(true);\n    for(const i in this.users) {\n      const user = this.users[i];\n      this.updateUserStatus(user, timestampNow);\n    }\n  };\n\n  private updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\n    if(user.status &&\n      user.status._ === 'userStatusOnline' &&\n      user.status.expires < timestampNow) {\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\n      this.rootScope.dispatchEvent('user_update', user.id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\n    if(this.isBot(id)) {\n      return;\n    }\n\n    const timestamp = tsNow(true);\n    const onlineTimeFor = 60;\n    if(eventTimestamp) {\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\n        return;\n      }\n    } else if(this.apiUpdatesManager.updatesState.syncLoading) {\n      return;\n    }\n\n    const user = this.getUser(id);\n    if(user?.status &&\n      user.status._ !== 'userStatusOnline' &&\n      user.status._ !== 'userStatusEmpty' &&\n      !user.pFlags.support &&\n      !user.pFlags.deleted) {\n      user.status = {\n        _: 'userStatusOnline',\n        expires: timestamp + onlineTimeFor\n      };\n\n      // user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public importContact(first_name: string, last_name: string, phone: string) {\n    return this.importContacts([{\n      first_name,\n      last_name,\n      phones: [phone]\n    }]).then((userIds) => {\n      if(!userIds.length) {\n        const error = new Error();\n        (error as any).type = 'NO_USER';\n        throw error;\n      }\n\n      return userIds[0];\n    });\n  }\n\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\n    const inputContacts: InputContact[] = [];\n\n    for(let i = 0; i < contacts.length; ++i) {\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\n        inputContacts.push({\n          _: 'inputPhoneContact',\n          client_id: (i << 16 | j).toString(10),\n          phone: contacts[i].phones[j],\n          first_name: contacts[i].first_name,\n          last_name: contacts[i].last_name\n        });\n      }\n    }\n\n    return this.apiManager.invokeApi('contacts.importContacts', {\n      contacts: inputContacts\n    }).then((importedContactsResult) => {\n      this.saveApiUsers(importedContactsResult.users);\n\n      const userIds = importedContactsResult.imported.map((importedContact) => {\n        this.onContactUpdated(importedContact.user_id, true);\n        return importedContact.user_id;\n      });\n\n      return userIds;\n    });\n  }\n\n  public getTopPeers(type: TopPeerType) {\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\n\n    return this.getTopPeersPromises[type] = this.appStateManager.getState().then((state) => {\n      const cached = state.topPeersCache[type];\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) {\n        return cached.peers;\n      }\n\n      return this.apiManager.invokeApi('contacts.getTopPeers', {\n        [type]: true,\n        offset: 0,\n        limit: 30,\n        hash: '0'\n      }).then((result) => {\n        let topPeers: MyTopPeer[] = [];\n        if(result._ === 'contacts.topPeers') {\n          // console.log(result);\n          this.saveApiUsers(result.users);\n          this.appChatsManager.saveApiChats(result.chats);\n\n          if(result.categories.length) {\n            topPeers = result.categories[0].peers.map((topPeer) => {\n              const peerId = getPeerId(topPeer.peer);\n              this.peersStorage.requestPeer(peerId, 'topPeer');\n              return {id: peerId, rating: topPeer.rating};\n            });\n          }\n        }\n\n        state.topPeersCache[type] = {\n          peers: topPeers,\n          cachedTime: Date.now()\n        };\n        this.appStateManager.pushToState('topPeersCache', state.topPeersCache);\n\n        return topPeers;\n      });\n    });\n  }\n\n  public getBlocked(offset = 0, limit = 0) {\n    return this.apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then((contactsBlocked) => {\n      this.saveApiUsers(contactsBlocked.users);\n      this.appChatsManager.saveApiChats(contactsBlocked.chats);\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\n\n      const peerIds: PeerId[] = contactsBlocked.users.map((u) => u.id.toPeerId()).concat(contactsBlocked.chats.map((c) => c.id.toPeerId(true)));\n\n      return {count, peerIds};\n    });\n  }\n\n  public getLocated(\n    lat: number,\n    long: number,\n    accuracy_radius: number,\n    background: boolean = false,\n    self_expires: number = 0\n  ) {\n    const geo_point: InputGeoPoint = {\n      _: 'inputGeoPoint',\n      lat,\n      long,\n      accuracy_radius\n    };\n\n    return this.apiManager.invokeApi('contacts.getLocated', {\n      geo_point,\n      background\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      return updates;\n    });\n  }\n\n  /* public searchContacts(query: string, limit = 20) {\n    return Promise.all([\n      this.getContacts(query),\n      apiManager.invokeApi('contacts.search', {\n        q: query,\n        limit\n      })\n    ]).then((results) => {\n      const [myContacts, peers] = results;\n\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      // * contacts.search returns duplicates in my_results\n      const myResults = new Set(myContacts.concat(peers.my_results.map((p) => appPeersManager.getPeerID(p))));\n\n      const out = {\n        my_results: [...myResults].slice(0, limit),\n        results: peers.results.map((p) => appPeersManager.getPeerID(p))\n      };\n\n      return out;\n    });\n  } */\n  public searchContacts(query: string, limit = 20) {\n    // handle 't.me/username' as 'username'\n    const entities = parseEntities(query);\n    if(entities.length && entities[0].length === query.trim().length && entities[0]._ === 'messageEntityUrl') {\n      try {\n        const url = new URL(wrapUrl(query).url);\n        const path = url.pathname.slice(1);\n        if(path) {\n          query = path;\n        }\n      } catch(err) {}\n    }\n\n    return this.apiManager.invokeApiCacheable('contacts.search', {\n      q: query,\n      limit\n    }, {cacheSeconds: 60}).then((peers) => {\n      this.saveApiUsers(peers.users);\n      this.appChatsManager.saveApiChats(peers.chats);\n\n      const out = {\n        my_results: filterUnique(peers.my_results.map((p) => getPeerId(p))), // ! contacts.search returns duplicates in my_results\n        results: peers.results.map((p) => getPeerId(p))\n      };\n\n      return out;\n    });\n  }\n\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\n    if(isContact !== curIsContact) {\n      if(isContact) {\n        this.pushContact(userId);\n      } else {\n        this.popContact(userId);\n      }\n\n      this.onContactsModified();\n\n      this.rootScope.dispatchEvent('contacts_update', userId);\n    }\n  }\n\n  public updateUsername(username: string) {\n    return this.apiManager.invokeApi('account.updateUsername', {\n      username\n    }).then((user) => {\n      this.saveApiUser(user);\n    });\n  }\n\n  public setUserStatus(userId: UserId, offline: boolean) {\n    if(this.isBot(userId)) {\n      return;\n    }\n\n    const user = this.users[userId];\n    if(user) {\n      const status: UserStatus = offline ? {\n        _: 'userStatusOffline',\n        was_online: tsNow(true)\n      } : {\n        _: 'userStatusOnline',\n        expires: tsNow(true) + 50\n      };\n\n      user.status = status;\n      // user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public updateMyOnlineStatus(offline: boolean) {\n    this.setUserStatus(this.getSelf().id, offline);\n    return this.apiManager.invokeApiSingle('account.updateStatus', {offline});\n  }\n\n  public addContact(\n    userId: UserId,\n    first_name: string,\n    last_name: string,\n    phone: string,\n    addPhonePrivacyException?: boolean\n  ) {\n    /* if(!userId) {\n      return this.importContacts([{\n        first_name,\n        last_name,\n        phones: [phone]\n      }]);\n    } */\n\n    return this.apiManager.invokeApi('contacts.addContact', {\n      id: this.getUserInput(userId),\n      first_name,\n      last_name,\n      phone,\n      add_phone_privacy_exception: addPhonePrivacyException\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      this.appProfileManager.refreshPeerSettingsIfNeeded(userId.toPeerId(false));\n\n      this.onContactUpdated(userId, true);\n    });\n  }\n\n  public deleteContacts(userIds: UserId[]) {\n    return this.apiManager.invokeApi('contacts.deleteContacts', {\n      id: userIds.map((userId) => this.getUserInput(userId))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      userIds.forEach((userId) => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  }\n\n  public checkUsername(username: string) {\n    return this.apiManager.invokeApi('account.checkUsername', {username});\n  }\n\n  public canSendToUser(userId: UserId) {\n    return canSendToUser(this.getUser(userId))/*  && !this.appProfileManager.isCachedUserBlocked(userId) */;\n  }\n\n  public getCommonChats(userId: UserId, limit = 100, maxId?: ChatId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getCommonChats',\n      params: {\n        user_id: this.getUserInput(userId),\n        limit,\n        max_id: maxId ?? 0\n      },\n      processResult: (messagesChats) => {\n        this.appChatsManager.saveApiChats(messagesChats.chats);\n        return messagesChats;\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {WebPage} from '../../layer';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {AppManager} from './manager';\n\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\n\ntype WebPageMessageKey = `${PeerId}_${number}`;\n\nexport class AppWebPagesManager extends AppManager {\n  private webpages: {\n    [webPageId: string]: WebPage\n  } = {};\n  private pendingWebPages: {\n    [webPageId: string]: Set<WebPageMessageKey>\n  } = {};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateWebPage: (update) => {\n        this.saveWebPage(update.webpage);\n      }\n    });\n  }\n\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\n    if(apiWebPage._ === 'webPageNotModified' || apiWebPage._ === 'webPageEmpty') return;\n    const {id} = apiWebPage;\n\n    const oldWebPage = this.webpages[id];\n    const isUpdated = oldWebPage &&\n      oldWebPage._ === apiWebPage._ &&\n      (oldWebPage as WebPage.webPage).hash === (oldWebPage as WebPage.webPage).hash;\n\n    if(apiWebPage._ === 'webPage') {\n      if(apiWebPage.photo?._ === 'photo') {\n        apiWebPage.photo = this.appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\n      } else {\n        delete apiWebPage.photo;\n      }\n\n      if(apiWebPage.document?._ === 'document') {\n        apiWebPage.document = this.appDocsManager.saveDoc(apiWebPage.document, mediaContext);\n      } else {\n        if(apiWebPage.type === 'document') {\n          delete apiWebPage.type;\n        }\n\n        delete apiWebPage.document;\n      }\n\n      const siteName = apiWebPage.site_name;\n      const shortTitle = apiWebPage.title || apiWebPage.author || siteName || '';\n      if(siteName && shortTitle === siteName) {\n        delete apiWebPage.site_name;\n      }\n\n      for(const attribute of apiWebPage.attributes || []) {\n        switch(attribute._) {\n          case 'webPageAttributeStory': {\n            const cache = this.appStoriesManager.getPeerStoriesCache(this.appPeersManager.getPeerId(attribute.peer));\n            attribute.story = this.appStoriesManager.saveStoryItem(attribute.story, cache);\n            break;\n          }\n        }\n      }\n\n      // delete apiWebPage.description\n\n      if(!photoTypeSet.has(apiWebPage.type) &&\n        !apiWebPage.description &&\n        apiWebPage.photo) {\n        apiWebPage.type = 'photo';\n      }\n    }\n\n    let pendingSet = this.pendingWebPages[id];\n    if(messageKey) {\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\n      pendingSet.add(messageKey);\n    }\n\n    if(oldWebPage === undefined) {\n      this.webpages[id] = apiWebPage;\n    } else {\n      safeReplaceObject(oldWebPage, apiWebPage);\n    }\n\n    if(!messageKey && pendingSet !== undefined && isUpdated) {\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\n      pendingSet.forEach((value) => {\n        const [peerId, mid, isScheduled] = value.split('_');\n        msgs.push({\n          peerId: peerId.toPeerId(),\n          mid: +mid,\n          isScheduled: !!isScheduled\n        });\n      });\n\n      this.rootScope.dispatchEvent('webpage_updated', {\n        id,\n        msgs\n      });\n    }\n\n    return apiWebPage;\n  }\n\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\n  }\n\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\n    const id = (webPage as WebPage.webPage).id;\n    if(!id) return;\n\n    const set = this.pendingWebPages[id];\n    if(set && set.has(messageKey)) {\n      set.delete(messageKey);\n\n      if(!set.size) {\n        delete this.pendingWebPages[id];\n      }\n    }\n  }\n\n  public getCachedWebPage(id: WebPage.webPage['id']) {\n    return this.webpages[id];\n  }\n\n  public getWebPage(url: string) {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getWebPage',\n      processResult: (messagesWebPage) => {\n        this.appPeersManager.saveApiPeers(messagesWebPage);\n        return this.saveWebPage(messagesWebPage.webpage);\n      },\n      params: {\n        url\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n// https://www.iana.org/assignments/media-types/media-types.xhtml\nexport default function blobSafeMimeType(mimeType: string) {\n  if([\n    'image/jpeg',\n    'image/png',\n    'image/gif',\n    'image/svg+xml',\n    'image/webp',\n    'image/bmp',\n    'video/mp4',\n    'video/webm',\n    'video/quicktime',\n    'audio/ogg',\n    'audio/mpeg',\n    'audio/mp4',\n    'audio/wav', // though it is not in list\n    'application/json',\n    'application/pdf'\n  ].indexOf(mimeType) === -1) {\n    return 'application/octet-stream';\n  }\n\n  return mimeType;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport blobSafeMimeType from './blobSafeMimeType';\n\nexport default function blobConstruct<T extends Uint8Array | string>(blobParts: Array<T> | T, mimeType: string = ''): Blob {\n  if(!Array.isArray(blobParts)) {\n    blobParts = [blobParts];\n  }\n\n  const safeMimeType = blobSafeMimeType(mimeType);\n  const blob = new Blob(blobParts, {type: safeMimeType});\n  return blob;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport blobConstruct from '../../helpers/blob/blobConstruct';\nimport StreamWriter from './streamWriter';\n\nexport default class MemoryWriter implements StreamWriter {\n  private bytes: Uint8Array;\n\n  constructor(\n    private mimeType: string,\n    private size: number,\n    private saveFileCallback?: (blob: Blob) => Promise<Blob>\n  ) {\n    this.bytes = new Uint8Array(size);\n  }\n\n  public async write(part: Uint8Array, offset: number) {\n    // sometimes file size can be bigger than the prov\n    const endOffset = offset + part.byteLength;\n    if(endOffset > this.bytes.byteLength) {\n      const newBytes = new Uint8Array(endOffset);\n      newBytes.set(this.bytes, 0);\n      this.bytes = newBytes;\n    }\n\n    this.bytes.set(part, offset);\n  };\n\n  public truncate() {\n    this.bytes = new Uint8Array();\n  }\n\n  public trim(size: number) {\n    this.bytes = this.bytes.slice(0, size);\n  }\n\n  public finalize(saveToStorage = true) {\n    const blob = blobConstruct(this.bytes, this.mimeType);\n\n    if(saveToStorage && this.saveFileCallback) {\n      this.saveFileCallback(blob);\n    }\n\n    return blob;\n  }\n\n  public getParts() {\n    return this.bytes;\n  }\n\n  public replaceParts(parts: Uint8Array) {\n    this.bytes = parts;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from '../../config/modes';\nimport blobConstruct from '../../helpers/blob/blobConstruct';\nimport MemoryWriter from './memoryWriter';\nimport FileManager from './memoryWriter';\nimport FileStorage from './fileStorage';\nimport makeError from '../../helpers/makeError';\nimport deferredPromise from '../../helpers/cancellablePromise';\n\nexport type CacheStorageDbName = 'cachedFiles' | 'cachedStreamChunks' | 'cachedAssets';\n\nexport default class CacheStorageController implements FileStorage {\n  private static STORAGES: CacheStorageController[] = [];\n  private openDbPromise: Promise<Cache>;\n\n  private useStorage = true;\n\n  // private log: ReturnType<typeof logger> = logger('CS');\n\n  constructor(private dbName: CacheStorageDbName) {\n    if(Modes.test) {\n      this.dbName += '_test';\n    }\n\n    if(CacheStorageController.STORAGES.length) {\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\n    }\n\n    this.openDatabase();\n    CacheStorageController.STORAGES.push(this);\n  }\n\n  private openDatabase(): Promise<Cache> {\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\n  }\n\n  public delete(entryName: string) {\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\n  }\n\n  public deleteAll() {\n    return caches.delete(this.dbName);\n  }\n\n  public get(entryName: string) {\n    return this.timeoutOperation((cache) => cache.match('/' + entryName));\n  }\n\n  public save(entryName: string, response: Response) {\n    // return new Promise((resolve) => {}); // DEBUG\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, response));\n  }\n\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\n    // if(method === 'blob') {\n    //   return Promise.reject(makeError('NO_ENTRY_FOUND'));\n    // }\n\n    // const str = `get fileName: ${fileName}`;\n    // console.time(str);\n    return this.get(fileName).then((response) => {\n      if(!response) {\n        // console.warn('getFile:', response, fileName);\n        throw makeError('NO_ENTRY_FOUND');\n      }\n\n      const promise = response[method]();\n      // promise.then(() => {\n      //   console.timeEnd(str);\n      // });\n      return promise;\n    });\n  }\n\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\n    // return Promise.resolve(blobConstruct([blob]));\n    if(!(blob instanceof Blob)) {\n      blob = blobConstruct(blob);\n    }\n\n    const response = new Response(blob, {\n      headers: {\n        'Content-Length': '' + blob.size\n      }\n    });\n\n    return this.save(fileName, response).then(() => blob as Blob);\n  }\n\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\n    if(!this.useStorage) {\n      return Promise.reject(makeError('STORAGE_OFFLINE'));\n    }\n\n    return new Promise<T>(async(resolve, reject) => {\n      let rejected = false;\n      const timeout = setTimeout(() => {\n        reject();\n        // console.warn('CACHESTORAGE TIMEOUT');\n        rejected = true;\n      }, 15e3);\n\n      try {\n        const cache = await this.openDatabase();\n        if(!cache) {\n          this.useStorage = false;\n          this.openDbPromise = undefined;\n          throw 'no cache?';\n        }\n\n        const res = await callback(cache);\n\n        if(rejected) return;\n        resolve(res);\n      } catch(err) {\n        reject(err);\n      }\n\n      clearTimeout(timeout);\n    });\n  }\n\n  public prepareWriting(fileName: string, fileSize: number, mimeType: string) {\n    return {\n      deferred: deferredPromise<Blob>(),\n      getWriter: () => {\n        const writer = new MemoryWriter(mimeType, fileSize, (blob) => {\n          return this.saveFile(fileName, blob).catch(() => blob);\n        });\n\n        return writer;\n      }\n    };\n  }\n\n  public static toggleStorage(enabled: boolean, clearWrite: boolean) {\n    return Promise.all(this.STORAGES.map((storage) => {\n      storage.useStorage = enabled;\n\n      if(!clearWrite) {\n        return;\n      }\n\n      if(!enabled) {\n        return storage.deleteAll();\n      }\n    }));\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { IS_WEB_WORKER } from \"../context\";\n\n// const id = IS_WEB_WORKER ? Math.random() * 0x1000 | 0 : 0;\nexport default function readBlobAs(blob: Blob, method: 'readAsText'): Promise<string>;\nexport default function readBlobAs(blob: Blob, method: 'readAsDataURL'): Promise<string>;\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer'): Promise<ArrayBuffer>;\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer' | 'readAsText' | 'readAsDataURL'): Promise<any> {\n  // const perf = performance.now();\n  return new Promise<any>((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (e) => {\n      // console.log(`readBlobAs [${id}] ${method} time ${performance.now() - perf}`);\n      resolve(e.target.result);\n    });\n    reader[method](blob);\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAs from './readBlobAs';\n\nexport default function readBlobAsArrayBuffer(blob: Blob) {\n  return readBlobAs(blob, 'readAsArrayBuffer');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function fixFirefoxSvg(text: string) {\n  const svgIndex = text.indexOf('<svg');\n  if(svgIndex !== 0) {\n    text = text.slice(svgIndex);\n  }\n\n  const [_, __, width, height] = text.match(/viewBox=\"(.+?)\"/)[1].split(' ');\n  text = text.replace(/>/, ` width=\"${width}\" height=\"${height}\">`).replace(/[^\\x00-\\x7F]/g, '');\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {PhotoSize, InputFileLocation} from '../../../../layer';\nimport type {DownloadOptions} from '../../../mtproto/apiFileManager';\nimport type {MyDocument} from '../../appDocsManager';\nimport type {MyPhoto} from '../../appPhotosManager';\n\nexport default function getPhotoDownloadOptions(photo: MyPhoto | MyDocument, photoSize: PhotoSize, queueId?: number, onlyCache?: boolean): DownloadOptions {\n  const isDocument = photo._ === 'document';\n\n  if(!photoSize || photoSize._ === 'photoSizeEmpty') {\n    // console.error('no photoSize by photo:', photo);\n    throw new Error('photoSizeEmpty!');\n  }\n\n  // maybe it's a thumb\n  const isPhoto = !!((photoSize._ === 'photoSize' || photoSize._ === 'photoSizeProgressive') && photo.access_hash && photo.file_reference);\n  const location: InputFileLocation.inputPhotoFileLocation | InputFileLocation.inputDocumentFileLocation = {\n    _: isDocument ? 'inputDocumentFileLocation' : 'inputPhotoFileLocation',\n    id: photo.id,\n    access_hash: photo.access_hash,\n    file_reference: photo.file_reference,\n    thumb_size: photoSize.type\n  };\n\n  return {\n    dcId: photo.dc_id,\n    location,\n    size: isPhoto ? (photoSize as PhotoSize.photoSize).size : undefined,\n    mimeType: 'image/jpeg',\n    queueId,\n    onlyCache\n  };\n}\n","import {InputWebFileLocation} from '../../../../layer';\nimport {DownloadOptions} from '../../../mtproto/apiFileManager';\n\nexport default function getWebFileDownloadOptions(location: InputWebFileLocation): DownloadOptions {\n  const downloadOptions: DownloadOptions = {\n    dcId: 0,\n    location,\n    size: 0,\n    mimeType: 'image/jpeg'\n  };\n\n  // if(location._ === 'inputWebFileGeoPointLocation') {\n  //   downloadOptions.size = 512 * 1024;\n  //   downloadOptions.mimeType = 'image/jpeg';\n  // }\n\n  return downloadOptions;\n}\n","import {WebDocument} from '../../../../layer';\nimport {DownloadOptions} from '../../../mtproto/apiFileManager';\nimport getWebFileDownloadOptions from '../webFiles/getWebFileDownloadOptions';\n\nexport default function getWebDocumentDownloadOptions(webDocument: WebDocument): DownloadOptions {\n  const downloadOptions = getWebFileDownloadOptions({\n    _: 'inputWebFileLocation',\n    access_hash: (webDocument as WebDocument.webDocument).access_hash,\n    url: webDocument.url\n  });\n\n  downloadOptions.size = webDocument.size;\n  downloadOptions.mimeType = webDocument.mime_type;\n\n  return downloadOptions;\n}\n","import {WebDocument} from '../../../../layer';\n\nexport default function isWebDocument(webDocument: any): webDocument is WebDocument {\n  return !!(webDocument && (webDocument._ === 'webDocument' || webDocument._ === 'webDocumentNoProxy'));\n}\n","import {InputWebFileLocation} from '../../../../layer';\n\nexport default function isWebFileLocation(location: any): location is InputWebFileLocation {\n  return location?._.includes('inputWebFile');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getFileNameByLocation} from '../../../../helpers/fileName';\nimport {DownloadOptions} from '../../../mtproto/apiFileManager';\n\nexport default function getDownloadFileNameFromOptions(options: DownloadOptions) {\n  return getFileNameByLocation(options.location, options);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {DownloadMediaOptions, DownloadOptions} from '../../../mtproto/apiFileManager';\nimport getDocumentDownloadOptions from '../docs/getDocumentDownloadOptions';\nimport getPhotoDownloadOptions from '../photos/getPhotoDownloadOptions';\nimport getWebDocumentDownloadOptions from '../webDocs/getWebDocumentDownloadOptions';\nimport isWebDocument from '../webDocs/isWebDocument';\nimport getWebFileDownloadOptions from '../webFiles/getWebFileDownloadOptions';\nimport isWebFileLocation from '../webFiles/isWebFileLocation';\nimport getDownloadFileNameFromOptions from './getDownloadFileNameFromOptions';\n\nexport default function getDownloadMediaDetails(options: DownloadMediaOptions) {\n  const {media, thumb, queueId, onlyCache} = options;\n\n  let downloadOptions: DownloadOptions;\n  if(media._ === 'document') downloadOptions = getDocumentDownloadOptions(media, thumb as any, queueId, onlyCache);\n  else if(media._ === 'photo') downloadOptions = getPhotoDownloadOptions(media, thumb as any, queueId, onlyCache);\n  else if(isWebDocument(media)) downloadOptions = getWebDocumentDownloadOptions(media);\n  else if(isWebFileLocation(media)) downloadOptions = getWebFileDownloadOptions(media);\n\n  downloadOptions.downloadId = options.downloadId;\n\n  const fileName = getDownloadFileNameFromOptions(downloadOptions);\n  return {fileName, downloadOptions};\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAsArrayBuffer from './readBlobAsArrayBuffer';\n\nexport default function readBlobAsUint8Array(blob: Blob) {\n  return readBlobAsArrayBuffer(blob).then((buffer) => new Uint8Array(buffer));\n}\n","export default function fileNameRFC(fileName: string) {\n  // Make filename RFC5987 compatible\n  return encodeURIComponent(fileName).replace(/['()]/g, escape).replace(/\\*/g, '%2A');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appManagersManager from '../appManagers/appManagersManager';\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\nimport StreamWriter from './streamWriter';\n\nexport default class DownloadWriter implements StreamWriter {\n  constructor(\n    private serviceMessagePort: ServiceMessagePort<true>,\n    private downloadId: string\n  ) {\n    this.serviceMessagePort = appManagersManager.getServiceMessagePort();\n  }\n\n  public async write(part: Uint8Array, offset?: number) {\n    return this.serviceMessagePort.invoke('downloadChunk', {\n      id: this.downloadId,\n      chunk: part\n    });\n  }\n\n  public finalize(saveToStorage?: boolean): Promise<Blob> {\n    return this.serviceMessagePort.invoke('downloadFinalize', this.downloadId).then(() => undefined);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport deferredPromise from '../../helpers/cancellablePromise';\nimport makeError from '../../helpers/makeError';\nimport fileNameRFC from '../../helpers/string/fileNameRFC';\nimport appManagersManager from '../appManagers/appManagersManager';\nimport DownloadWriter from './downloadWriter';\nimport FileStorage from './fileStorage';\n\nexport default class DownloadStorage implements FileStorage {\n  public getFile(fileName: string): Promise<any> {\n    return Promise.reject(makeError('NO_ENTRY_FOUND'));\n  }\n\n  public prepareWriting({fileName, downloadId, size}: {\n    fileName: string,\n    downloadId: string,\n    size: number\n  }) {\n    const headers = {\n      'Content-Type': 'application/octet-stream; charset=utf-8',\n      'Content-Disposition': 'attachment; filename*=UTF-8\\'\\'' + fileNameRFC(fileName),\n      ...(size ? {'Content-Length': size} : {})\n    };\n\n    const serviceMessagePort = appManagersManager.getServiceMessagePort();\n    const promise = serviceMessagePort.invoke('download', {\n      headers,\n      id: downloadId\n    });\n\n    const deferred = deferredPromise<void>();\n    deferred.cancel = () => {\n      deferred.reject(makeError('DOWNLOAD_CANCELED'));\n    };\n\n    deferred.catch(() => {\n      appManagersManager.getServiceMessagePort().invoke('downloadCancel', downloadId);\n    });\n\n    promise.then(deferred.resolve.bind(deferred), deferred.reject.bind(deferred));\n\n    return {\n      deferred,\n      getWriter: () => {\n        return new DownloadWriter(serviceMessagePort, downloadId);\n      }\n    };\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ReferenceBytes} from './referenceDatabase';\nimport Modes from '../../config/modes';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport {randomLong} from '../../helpers/random';\nimport {Document, InputFile, InputFileLocation, InputWebFileLocation, Photo, PhotoSize, UploadFile, UploadWebFile, VideoSize, WebDocument} from '../../layer';\nimport {DcId} from '../../types';\nimport CacheStorageController from '../files/cacheStorage';\nimport {logger, LogTypes} from '../logger';\nimport assumeType from '../../helpers/assumeType';\nimport noop from '../../helpers/noop';\nimport readBlobAsArrayBuffer from '../../helpers/blob/readBlobAsArrayBuffer';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport fixFirefoxSvg from '../../helpers/fixFirefoxSvg';\nimport {AppManager} from '../appManagers/manager';\nimport {getEnvironment} from '../../environment/utils';\nimport MTProtoMessagePort from './mtprotoMessagePort';\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\nimport type {Progress} from '../appManagers/appDownloadManager';\nimport getDownloadMediaDetails from '../appManagers/utils/download/getDownloadMediaDetails';\n// import networkStats from './networkStats';\nimport getDownloadFileNameFromOptions from '../appManagers/utils/download/getDownloadFileNameFromOptions';\nimport StreamWriter from '../files/streamWriter';\nimport FileStorage from '../files/fileStorage';\nimport {MAX_FILE_SAVE_SIZE} from './mtproto_config';\nimport throttle from '../../helpers/schedulers/throttle';\nimport makeError from '../../helpers/makeError';\nimport readBlobAsUint8Array from '../../helpers/blob/readBlobAsUint8Array';\nimport DownloadStorage from '../files/downloadStorage';\nimport copy from '../../helpers/object/copy';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport {EXTENSION_MIME_TYPE_MAP, MIME_TYPE_EXTENSION_MAP} from '../../environment/mimeTypeMap';\nimport isWebFileLocation from '../appManagers/utils/webFiles/isWebFileLocation';\nimport appManagersManager from '../appManagers/appManagersManager';\n\ntype Delayed = {\n  offset: number,\n  writePromise: CancellablePromise<void>,\n  writeDeferred: CancellablePromise<void>\n};\n\nexport type DownloadOptions = {\n  dcId: DcId,\n  location: InputFileLocation | InputWebFileLocation,\n  size?: number,\n  fileName?: string,\n  mimeType?: MTMimeType,\n  limitPart?: number,\n  queueId?: number,\n  onlyCache?: boolean,\n  downloadId?: string\n  // getFileMethod: Parameters<CacheStorageController['getFile']>[1]\n};\n\nexport type DownloadMediaOptions = {\n  media: Photo.photo | Document.document | WebDocument | InputWebFileLocation,\n  thumb?: PhotoSize | Extract<VideoSize, VideoSize.videoSize>,\n  queueId?: number,\n  onlyCache?: boolean,\n  downloadId?: string\n};\n\ntype DownloadPromise = CancellablePromise<Blob>;\n\nexport type MyUploadFile = UploadFile.uploadFile | UploadWebFile.uploadWebFile;\n\n// export interface RefreshReferenceTask extends WorkerTaskVoidTemplate {\n//   type: 'refreshReference',\n//   payload: ReferenceBytes,\n// };\n\n// export interface RefreshReferenceTaskResponse extends WorkerTaskVoidTemplate {\n//   type: 'refreshReference',\n//   payload: ReferenceBytes,\n//   originalPayload: ReferenceBytes\n// };\n\nconst DO_NOT_UPLOAD_FILES = false;\nconst PREPARE_CACHE = false;\n\nconst MAX_DOWNLOAD_FILE_PART_SIZE = 1 * 1024 * 1024;\nconst MAX_UPLOAD_FILE_PART_SIZE = 512 * 1024;\nconst MIN_PART_SIZE = 128 * 1024;\nconst AVG_PART_SIZE = 512 * 1024;\n\nconst REGULAR_DOWNLOAD_DELTA = (9 * 512 * 1024) / MIN_PART_SIZE;\n// const PREMIUM_DOWNLOAD_DELTA = REGULAR_DOWNLOAD_DELTA * 2;\nconst PREMIUM_DOWNLOAD_DELTA = (56 * 512 * 1024) / MIN_PART_SIZE;\n\nconst IGNORE_ERRORS: Set<ErrorType> = new Set([\n  'DOWNLOAD_CANCELED',\n  'UPLOAD_CANCELED',\n  'UNKNOWN',\n  'NO_NEW_CONTEXT'\n]);\n\nexport class ApiFileManager extends AppManager {\n  private cacheStorage = new CacheStorageController('cachedFiles');\n  private downloadStorage = new DownloadStorage();\n\n  private downloadPromises: {\n    [fileName: string]: DownloadPromise\n  } = {};\n\n  // private downloadToDiscPromises: {\n  //   [fileName: string]: DownloadPromise\n  // } = {};\n\n  private uploadPromises: {\n    [fileName: string]: CancellablePromise<InputFile>\n  } = {};\n\n  private downloadPulls: {\n    [dcId: string]: Array<{\n      id: number,\n      queueId: number,\n      cb: () => Promise<MyUploadFile | void>,\n      deferred: {\n        resolve: (...args: any[]) => void,\n        reject: (...args: any[]) => void\n      },\n      activeDelta: number\n    }>\n  } = {};\n  private downloadActives: {[dcId: string]: number} = {};\n\n  public refreshReferencePromises: {\n    [referenceHex: string]: {\n      deferred: CancellablePromise<ReferenceBytes>,\n      timeout?: number\n    }\n  } = {};\n\n  private log: ReturnType<typeof logger> = logger('AFM', LogTypes.Error | LogTypes.Log);\n  private tempId = 0;\n  private queueId = 0;\n  private debug = Modes.debug;\n\n  private maxUploadParts = 4000;\n  private maxDownloadParts = 8000;\n  private webFileDcId: DcId;\n\n  protected after() {\n    setInterval(() => { // clear old promises\n      for(const hex in this.refreshReferencePromises) {\n        const {deferred} = this.refreshReferencePromises[hex];\n        if(deferred.isFulfilled || deferred.isRejected) {\n          delete this.refreshReferencePromises[hex];\n        }\n      }\n    }, 1800e3);\n\n    this.rootScope.addEventListener('config', (config) => {\n      this.webFileDcId = config.webfile_dc_id;\n    });\n\n    this.rootScope.addEventListener('app_config', (appConfig) => {\n      this.maxUploadParts = this.rootScope.premium ? appConfig.upload_max_fileparts_premium : appConfig.upload_max_fileparts_default;\n      this.maxDownloadParts = appConfig.upload_max_fileparts_premium;\n    });\n\n    if(PREPARE_CACHE) {\n      const perf = performance.now();\n      const storage = this.getFileStorage();\n      storage.timeoutOperation(async(cache) => {\n        const [requests, responses] = await Promise.all([cache.keys(), cache.matchAll()]);\n\n        for(let i = 0, length = requests.length; i < length; ++i) {\n          const request = requests[i];\n          const response = responses[i];\n          const url = request.url;\n          const size = +response.headers.get('content-length');\n          const splitted = url.split('/').pop().split('_');\n          if(splitted[0] === 'photo' || splitted[0] === 'document') {\n            this.thumbsStorage.setCacheContextURL(\n              {_: splitted[0], id: splitted[1]} as Photo.photo,\n              splitted[2],\n              '',\n              size\n            );\n          }\n        }\n\n        console.log('finished cache preparing', performance.now() - perf);\n      });\n    }\n  }\n\n  private downloadRequest(dcId: 'upload', id: number, cb: () => Promise<void>, activeDelta: number, queueId?: number): Promise<void>;\n  private downloadRequest(dcId: number, id: number, cb: () => Promise<MyUploadFile>, activeDelta: number, queueId?: number): Promise<MyUploadFile>;\n  private downloadRequest(dcId: number | string, id: number, cb: () => Promise<MyUploadFile | void>, activeDelta: number, queueId: number = 0) {\n    if(this.downloadPulls[dcId] === undefined) {\n      this.downloadPulls[dcId] = [];\n      this.downloadActives[dcId] = 0;\n    }\n\n    const downloadPull = this.downloadPulls[dcId];\n\n    const promise = new Promise<MyUploadFile | void>((resolve, reject) => {\n      downloadPull.push({id, queueId, cb, deferred: {resolve, reject}, activeDelta});\n    });\n\n    setTimeout(() => {\n      this.downloadCheck(dcId);\n    }, 0);\n\n    return promise;\n  }\n\n  private downloadCheck(dcId: string | number) {\n    const downloadPull = this.downloadPulls[dcId];\n    const downloadLimit = /* dcId === 'upload' ? 24 :  */(this.rootScope.premium ? PREMIUM_DOWNLOAD_DELTA : REGULAR_DOWNLOAD_DELTA);\n    // const downloadLimit = Infinity;\n\n    if(this.downloadActives[dcId] >= downloadLimit || !downloadPull?.length) {\n      return false;\n    }\n\n    // const data = downloadPull.shift();\n    const data = findAndSplice(downloadPull, (d) => d.queueId === 0) || findAndSplice(downloadPull, (d) => d.queueId === this.queueId) || downloadPull.shift();\n    const activeDelta = data.activeDelta || 1;\n\n    this.downloadActives[dcId] += activeDelta;\n\n    const promise = data.cb();\n    // const networkPromise = networkStats.waitForChunk(dcId as DcId, activeDelta * MIN_PART_SIZE);\n    /* Promise.race([\n      promise\n      // networkPromise\n    ]) */promise.then(() => {\n      this.downloadActives[dcId] -= activeDelta;\n      this.downloadCheck(dcId);\n\n      // networkPromise.resolve();\n    }, (error: ApiError) => {\n      if(!error?.type || !IGNORE_ERRORS.has(error.type)) {\n        this.log.error('downloadCheck error:', error);\n      }\n\n      this.downloadActives[dcId] -= activeDelta;\n      this.downloadCheck(dcId);\n\n      // networkPromise.reject(error);\n    }).finally(() => {\n      promise.then(data.deferred.resolve, data.deferred.reject);\n    });\n  }\n\n  public setQueueId(queueId: number) {\n    // this.log.error('setQueueId', queueId);\n    this.queueId = queueId;\n  }\n\n  private getFileStorage() {\n    return this.cacheStorage;\n  }\n\n  public cancelDownload(fileName: string) {\n    const promises = [this.downloadPromises[fileName], this.uploadPromises[fileName]].filter(Boolean);\n    let canceled = false;\n    for(let i = 0, length = promises.length; i < length; ++i) {\n      const promise = promises[i];\n      if(promise && !promise.isRejected && !promise.isFulfilled) {\n        promise.cancel();\n        canceled = true;\n      }\n    }\n\n    return canceled;\n  }\n\n  public requestWebFilePart(\n    dcId: DcId,\n    location: InputWebFileLocation,\n    offset: number,\n    limit: number,\n    id = 0,\n    queueId = 0,\n    checkCancel?: () => void\n  ) {\n    return this.downloadRequest(this.webFileDcId, id, async() => { // do not remove async, because checkCancel will throw an error\n      checkCancel?.();\n\n      if('url' in location) {\n        const url = location.url;\n        if(this.isLocalWebFile(url)) {\n          return fetch(url)\n          .then((response) => response.arrayBuffer())\n          .then((arrayBuffer) => {\n            const extension = url.split('.').pop() as MTFileExtension;\n            const mimeType = EXTENSION_MIME_TYPE_MAP[extension] || 'application/octet-stream';\n            return {\n              _: 'upload.webFile',\n              size: arrayBuffer.byteLength,\n              mime_type: mimeType,\n              file_type: {_: 'storage.fileUnknown'},\n              mtime: 0,\n              bytes: new Uint8Array(arrayBuffer)\n            };\n          });\n        }\n      }\n\n      return this.apiManager.invokeApi('upload.getWebFile', {\n        location,\n        offset,\n        limit\n      }, {\n        dcId: this.webFileDcId,\n        fileDownload: true\n      });\n    }, this.getDelta(limit), queueId);\n  }\n\n  public requestFilePart(\n    dcId: DcId,\n    location: InputFileLocation,\n    offset: number,\n    limit: number,\n    id = 0,\n    queueId = 0,\n    checkCancel?: () => void\n  ) {\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\n      checkCancel?.();\n\n      const invoke = async(): Promise<MyUploadFile> => {\n        checkCancel?.(); // do not remove async, because checkCancel will throw an error\n\n        // * IMPORTANT: reference can be changed in previous request\n        const reference = (location as InputFileLocation.inputDocumentFileLocation).file_reference?.slice();\n\n        const promise = // pause(offset > (100 * 1024 * 1024) ? 10000000 : 0).then(() =>\n        this.apiManager.invokeApi('upload.getFile', {\n          location,\n          offset,\n          limit\n        }, {\n          dcId,\n          fileDownload: true\n        }) as Promise<MyUploadFile>/* ) */;\n\n        return promise.catch((err: ApiError) => {\n          checkCancel?.();\n\n          if(err.type === 'FILE_REFERENCE_EXPIRED') {\n            return this.refreshReference(location as InputFileLocation.inputDocumentFileLocation, reference).then(invoke);\n          }\n\n          throw err;\n        });\n      };\n\n      assumeType<InputFileLocation.inputDocumentFileLocation>(location);\n      const reference = location.file_reference;\n      if(reference && !location.checkedReference) { // check stream's location because it's new every call\n        location.checkedReference = true;\n        const hex = bytesToHex(reference);\n        if(this.refreshReferencePromises[hex]) {\n          return this.refreshReference(location, reference).then(invoke);\n        }\n      }\n\n      return invoke();\n    }, this.getDelta(limit), queueId);\n  }\n\n  /* private convertBlobToBytes(blob: Blob) {\n    return blob.arrayBuffer().then((buffer) => new Uint8Array(buffer));\n  } */\n\n  private getDelta(bytes: number) {\n    return bytes / MIN_PART_SIZE;\n  }\n\n  private getLimitPart(size: number, isUpload: boolean): number {\n    if(!size) { // * sometimes size can be 0 (e.g. avatars, webDocuments)\n      return AVG_PART_SIZE;\n    }\n\n    // return 1 * 1024 * 1024;\n\n    let bytes = MIN_PART_SIZE;\n\n    const maxParts = isUpload ? this.maxUploadParts : this.maxDownloadParts;\n    const maxPartSize = isUpload ? MAX_UPLOAD_FILE_PART_SIZE : MAX_DOWNLOAD_FILE_PART_SIZE;\n    // usually it will stick to 512Kb size if the file is too big\n    while((size / bytes) > maxParts && bytes < maxPartSize) {\n      bytes *= 2;\n    }\n    /* if(size < 1e6 || !size) bytes = 512;\n    else if(size < 3e6) bytes = 256;\n    else bytes = 128; */\n\n    return bytes;\n  }\n\n  private uncompressTGS = (bytes: Uint8Array, fileName: string) => {\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', bytes.slice().buffer, false) as Promise<Uint8Array>;\n  };\n\n  private uncompressTGV = (bytes: Uint8Array, fileName: string) => {\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\n    const buffer = bytes.slice().buffer;\n    if(getEnvironment().IS_FIREFOX) {\n      return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, true).then((text) => {\n        return fixFirefoxSvg(text as string);\n      }).then((text) => {\n        const textEncoder = new TextEncoder();\n        return textEncoder.encode(text);\n      });\n    }\n\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, false) as Promise<Uint8Array>;\n  };\n\n  private convertWebp = (bytes: Uint8Array, fileName: string) => {\n    const instance = MTProtoMessagePort.getInstance<false>();\n    return instance.invoke('convertWebp', {fileName, bytes});\n  };\n\n  private convertOpus = (bytes: Uint8Array, fileName: string) => {\n    const instance = MTProtoMessagePort.getInstance<false>();\n    return instance.invoke('convertOpus', {fileName, bytes});\n  };\n\n  private refreshReference(\n    inputFileLocation: InputFileLocation.inputDocumentFileLocation,\n    reference: typeof inputFileLocation['file_reference'],\n    hex = bytesToHex(reference)\n  ) {\n    let r = this.refreshReferencePromises[hex];\n    if(!r) {\n      const deferred = deferredPromise<ReferenceBytes>();\n\n      r = this.refreshReferencePromises[hex] = {\n        deferred\n\n        // ! I don't remember what it was for...\n        // timeout: ctx.setTimeout(() => {\n        //   this.log.error('Didn\\'t refresh the reference:', inputFileLocation);\n        //   deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\n        // }, 60000)\n      };\n\n      // deferred.catch(noop).finally(() => {\n      //   clearTimeout(r.timeout);\n      // });\n\n      this.referenceDatabase.refreshReference(reference).then((reference) => {\n        if(hex === bytesToHex(reference)) {\n          deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\n        }\n\n        deferred.resolve(reference);\n      }, deferred.reject.bind(deferred));\n    }\n\n    // have to replace file_reference in any way, because location can be different everytime if it's stream\n    return r.deferred.then((reference) => {\n      inputFileLocation.file_reference = reference;\n    });\n  }\n\n  public isDownloading(fileName: string) {\n    return !!this.downloadPromises[fileName];\n  }\n\n  public getDownload(fileName: string) {\n    return this.downloadPromises[fileName];\n  }\n\n  public getUpload(fileName: string) {\n    return this.uploadPromises[fileName];\n  }\n\n  private getConvertMethod(mimeType: MTMimeType) {\n    let process: ApiFileManager['uncompressTGS'] | ApiFileManager['convertWebp'];\n    if(mimeType === 'application/x-tgwallpattern') {\n      process = this.uncompressTGV;\n      mimeType = 'image/svg+xml';\n    } else if(mimeType === 'image/webp' && !getEnvironment().IS_WEBP_SUPPORTED) {\n      process = this.convertWebp;\n      mimeType = 'image/png';\n    } else if(mimeType === 'application/x-tgsticker') {\n      process = this.uncompressTGS;\n      mimeType = 'application/json';\n    } else if(mimeType === 'audio/ogg' && !getEnvironment().IS_OPUS_SUPPORTED) {\n      process = this.convertOpus;\n      mimeType = 'audio/wav';\n    }\n\n    return {mimeType, process};\n  }\n\n  private allocateDeferredPromises(startOffset: number, size: number, limitPart: number) {\n    const delayed: Delayed[] = [];\n    let offset = startOffset;\n    let writePromise: CancellablePromise<void> = Promise.resolve(),\n      writeDeferred: CancellablePromise<void>;\n    do {\n      writeDeferred = deferredPromise<void>();\n      delayed.push({offset, writePromise, writeDeferred});\n      writePromise = writeDeferred;\n      offset += limitPart;\n    } while(offset < size);\n\n    return delayed;\n  }\n\n  private isLocalWebFile(url: string) {\n    return url?.startsWith('assets/');\n  }\n\n  public download(options: DownloadOptions): DownloadPromise {\n    const size = options.size ?? 0;\n    const {dcId, location} = options;\n    let {downloadId} = options;\n    if(downloadId && !appManagersManager.getServiceMessagePort()) {\n      this.log.error('download fallback to blob', options);\n      downloadId = undefined;\n    }\n\n    const originalMimeType = options.mimeType;\n    const convertMethod = this.getConvertMethod(originalMimeType);\n    const {process} = convertMethod;\n    options.mimeType = convertMethod.mimeType || 'image/jpeg';\n\n    const fileName = getDownloadFileNameFromOptions(options);\n    const cacheFileName = downloadId ? getDownloadFileNameFromOptions({...copy(options), downloadId: undefined}) : fileName;\n    const cacheStorage: FileStorage = this.getFileStorage();\n    const downloadStorage: FileStorage = downloadId ? this.downloadStorage : undefined;\n    let deferred: DownloadPromise = downloadId ? undefined : this.downloadPromises[fileName];\n\n    this.debug && this.log('downloadFile', fileName, options);\n\n    if(deferred) {\n      return deferred;\n    }\n\n    // if(deferred) {\n    //   if(size) {\n    //     return deferred.then(async(blob) => {\n    //       if(blob instanceof Blob && blob.size < size) {\n    //         this.debug && this.log('downloadFile need to deleteFile, wrong size:', blob.size, size);\n\n    //         try {\n    //           await this.delete(fileName);\n    //         } finally {\n    //           return this.download(options);\n    //         }\n    //       } else {\n    //         return blob;\n    //       }\n    //     });\n    //   } else {\n    //     return deferred;\n    //   }\n    // }\n\n    const errorHandler = (item: typeof cachePrepared, error: ApiError) => {\n      if(item?.error) {\n        return;\n      }\n\n      for(const p of prepared) {\n        if(item && item !== p) {\n          continue;\n        }\n\n        p.error = error;\n        p.deferred.reject(error);\n      }\n    };\n\n    const isWebFile = isWebFileLocation(location);\n    const isLocalWebFile = isWebFile && this.isLocalWebFile((location as InputWebFileLocation.inputWebFileLocation).url);\n    const id = this.tempId++;\n    const limitPart = isLocalWebFile ?\n      size :\n      options.limitPart || this.getLimitPart(size, false);\n\n    let getFile: FileStorage['getFile'] = cacheStorage.getFile.bind(cacheStorage);\n\n    let cachePrepared: ReturnType<FileStorage['prepareWriting']> & {writer?: StreamWriter, error?: ApiError},\n      downloadPrepared: typeof cachePrepared;\n    const prepared: (typeof cachePrepared)[] = [];\n    const possibleSize = size || limitPart;\n\n    const getErrorsCount = () => prepared.reduce((acc, item) => acc + +!!item.error, 0);\n\n    const attach = (item: typeof cachePrepared, fileName: string) => {\n      const {deferred} = item;\n      const _errorHandler = errorHandler.bind(null, item);\n\n      deferred.cancel = () => deferred.reject(makeError('DOWNLOAD_CANCELED'));\n      deferred.catch((error) => {\n        _errorHandler(error);\n        item.writer?.truncate?.();\n      }).finally(() => {\n        if(this.downloadPromises[fileName] === deferred) {\n          delete this.downloadPromises[fileName];\n        }\n\n        delete item.writer;\n        // indexOfAndSplice(prepared, item);\n      });\n\n      this.downloadPromises[fileName] = deferred;\n\n      prepared.push(item);\n    };\n\n    if(cacheStorage && (!downloadStorage || possibleSize <= MAX_FILE_SAVE_SIZE)) {\n      cachePrepared = cacheStorage.prepareWriting(cacheFileName, possibleSize, options.mimeType)\n      attach(cachePrepared, cacheFileName);\n    }\n\n    if(downloadStorage) {\n      let downloadFileName = options.fileName; // it's doc file_name\n      if(!downloadFileName) {\n        downloadFileName = cacheFileName;\n        const ext = MIME_TYPE_EXTENSION_MAP[options.mimeType];\n        if(ext) {\n          downloadFileName += '.' + ext;\n        }\n      }\n\n      downloadPrepared = downloadStorage.prepareWriting({\n        fileName: downloadFileName,\n        downloadId,\n        size: possibleSize\n      });\n      attach(downloadPrepared, fileName);\n\n      if(cachePrepared) { // cancel cache too\n        downloadPrepared.deferred.catch((err) => cachePrepared.deferred.reject(err));\n      }\n\n      // this.downloadToDiscPromises[cacheFileName] = deferred;\n      // deferred.catch(noop).finally(() => {\n      //   if(this.downloadToDiscPromises[cacheFileName] === deferred) {\n      //     delete this.downloadToDiscPromises[cacheFileName];\n      //   }\n      // });\n    }\n\n    deferred = downloadPrepared?.deferred ?? cachePrepared.deferred;\n\n    if(downloadStorage && process) { // then have to load file again\n      getFile = downloadStorage.getFile.bind(downloadStorage);\n    }\n\n    getFile(cacheFileName).then(async(blob: Blob) => {\n      checkCancel();\n\n      // if(blob.size < size) {\n      //   if(!options.onlyCache) {\n      //     await this.delete(cacheFileName);\n      //     checkCancel();\n      //   }\n\n      //   throw makeError('NO_ENTRY_FOUND');\n      // }\n\n      if(downloadPrepared) {\n        const writer = downloadPrepared.writer = downloadPrepared.getWriter();\n        checkCancel();\n\n        const arr = await readBlobAsUint8Array(blob);\n        checkCancel();\n        await writer.write(arr);\n        checkCancel();\n\n        downloadPrepared.deferred.resolve(await writer.finalize());\n      }\n\n      if(cachePrepared) {\n        cachePrepared.deferred.resolve(blob);\n      }\n    }).catch(async(err: ApiError) => {\n      if(options.onlyCache) {\n        errorHandler(null, err);\n        return;\n      }\n\n      prepared.forEach((p) => {\n        p.writer = p.getWriter();\n      });\n\n      const maxRequests = Infinity;\n\n      const requestPart = (isWebFile ? this.requestWebFilePart : this.requestFilePart).bind(this);\n\n      if(isWebFile && this.webFileDcId === undefined && !isLocalWebFile) {\n        await this.apiManager.getConfig();\n        checkCancel();\n      }\n\n      const delayed = this.allocateDeferredPromises(0, size, limitPart);\n\n      const progress: Progress = {done: 0, offset: 0, total: size, fileName};\n      const dispatchProgress = () => {\n        try {\n          checkCancel();\n          progress.done = done;\n          this.rootScope.dispatchEvent('download_progress', progress);\n        } catch(err) {}\n      };\n\n      const throttledDispatchProgress = throttle(dispatchProgress, 50, true);\n\n      let done = 0;\n      const superpuper = async() => {\n        const {offset, writePromise, writeDeferred} = delayed.shift();\n        try {\n          checkCancel();\n\n          const requestPerf = performance.now();\n          const result = await requestPart(dcId, location as any, offset, limitPart, id, options.queueId, checkCancel);\n          const requestTime = performance.now() - requestPerf;\n\n          const bytes = result.bytes;\n\n          if(delayed.length) {\n            superpuper();\n          }\n\n          const byteLength = bytes.byteLength;\n          this.debug && this.log('downloadFile requestFilePart result:', fileName, result);\n          const isFinal = (offset + limitPart) >= size || !byteLength;\n          if(byteLength) {\n            done += byteLength;\n\n            if(isFinal) {\n              dispatchProgress();\n            } else {\n              throttledDispatchProgress();\n            }\n\n            const writeQueuePerf = performance.now();\n            await writePromise;\n            checkCancel();\n            const writeQueueTime = performance.now() - writeQueuePerf;\n\n            const perf = performance.now();\n            await Promise.all(prepared.map(({writer}) => writer?.write(bytes, offset)));\n            checkCancel();\n            // downloadId && this.log('write time', performance.now() - perf, 'request time', requestTime, 'queue time', writeQueueTime);\n          }\n\n          if(isFinal) {\n            if(!size || done < size) {\n              prepared.forEach(({writer}) => writer?.trim?.(done));\n            }\n          }\n\n          if(isFinal && process) {\n            const promises = prepared\n            .filter(({writer}) => writer?.getParts && writer.replaceParts)\n            .map(async({writer}) => {\n              const bytes = writer.getParts();\n              const processedResult = await process(bytes, cacheFileName);\n              writer.replaceParts(processedResult);\n            });\n\n            await Promise.all(promises);\n            checkCancel();\n          }\n\n          writeDeferred.resolve();\n\n          if(isFinal) {\n            const saveToStorage = done <= MAX_FILE_SAVE_SIZE;\n            prepared.forEach((item) => {\n              const {deferred, writer} = item;\n              if(deferred.isFulfilled || deferred.isRejected || !writer) {\n                return;\n              }\n\n              const result = writer.finalize(saveToStorage);\n              deferred.resolve(result);\n            });\n          }\n        } catch(err) {\n          errorHandler(null, err as ApiError);\n        }\n      };\n\n      for(let i = 0, length = Math.min(maxRequests, delayed.length); i < length; ++i) {\n        superpuper();\n      }\n    }).catch(noop);\n\n    const checkCancel = () => {\n      if(getErrorsCount() === prepared.length) {\n        throw prepared[0].error;\n      }\n    };\n\n    return deferred;\n  }\n\n  public downloadMedia(options: DownloadMediaOptions): DownloadPromise {\n    let {media, thumb} = options;\n    const isPhoto = media._ === 'photo';\n    if(isPhoto && !thumb) {\n      return Promise.reject('preloadPhoto photoEmpty!');\n    }\n\n    // get original instance with correct file_reference instead of using copies\n    const isDocument = media._ === 'document';\n    // const isWebDocument = media._ === 'webDocument';\n    if(isDocument) media = this.appDocsManager.getDoc((media as Document.document).id);\n    else if(isPhoto) media = this.appPhotosManager.getPhoto((media as Photo.photo).id);\n    options.media = media || options.media;\n\n    const {fileName, downloadOptions} = getDownloadMediaDetails(options);\n\n    let promise = this.getDownload(fileName);\n    if(!promise) {\n      promise = this.download(downloadOptions);\n\n      if(isDocument && !thumb) {\n        this.rootScope.dispatchEvent('document_downloading', (media as Document.document).id);\n        promise.then(() => {\n          this.rootScope.dispatchEvent('document_downloaded', (media as Document.document).id);\n        }).catch(noop);\n      }\n    }\n\n    return promise;\n  }\n\n  public downloadMediaURL(options: DownloadMediaOptions): Promise<string> {\n    const {media, thumb} = options;\n\n    let cacheContext = this.thumbsStorage.getCacheContext(media as any, thumb?.type);\n    if((thumb ? (cacheContext.downloaded >= ('size' in thumb ? thumb.size : 0)) : true) && cacheContext.url) {\n      return Promise.resolve(cacheContext.url);\n    }\n\n    return this.downloadMedia(options).then((blob) => {\n      if(!cacheContext.downloaded || !cacheContext.url || cacheContext.downloaded < blob.size) {\n        const url = URL.createObjectURL(blob);\n        cacheContext = this.thumbsStorage.setCacheContextURL(media as any, cacheContext.type, url, blob.size);\n      }\n\n      return cacheContext.url;\n    });\n  }\n\n  public downloadMediaVoid(options: DownloadMediaOptions) {\n    return this.downloadMedia(options).then(noop);\n  }\n\n  private delete(fileName: string) {\n    delete this.downloadPromises[fileName];\n    return this.getFileStorage().delete(fileName);\n  }\n\n  public upload({file, fileName}: {file: Blob | File, fileName?: string}) {\n    fileName ||= getFileNameForUpload(file);\n\n    const fileSize = file.size;\n    const isBigFile = fileSize >= 10485760;\n    const partSize = this.getLimitPart(fileSize, true);\n    const activeDelta = this.getDelta(partSize);\n    const totalParts = DO_NOT_UPLOAD_FILES ? 0 : Math.ceil(fileSize / partSize);\n    const fileId = randomLong();\n    const resultInputFile: InputFile = {\n      _: isBigFile ? 'inputFileBig' : 'inputFile',\n      id: fileId as any,\n      parts: totalParts,\n      name: fileName,\n      md5_checksum: ''\n    };\n\n    const deferred = deferredPromise<typeof resultInputFile>();\n    if(totalParts > this.maxUploadParts) {\n      deferred.reject(makeError('FILE_TOO_BIG'));\n      return deferred;\n    }\n\n    let canceled = false, resolved = false;\n    let errorHandler = (error: ApiError) => {\n      if(error?.type !== 'UPLOAD_CANCELED') {\n        this.log.error('Up Error', error);\n      }\n\n      deferred.reject(error);\n      canceled = true;\n      errorHandler = noop;\n    };\n\n    const method = isBigFile ? 'upload.saveBigFilePart' : 'upload.saveFilePart';\n    const id = this.tempId++;\n\n    const self = this;\n    function* generator() {\n      let _part = 0, doneParts = 0;\n      for(let offset = 0; offset < fileSize; offset += partSize) {\n        const part = _part++; // 0, 1\n        yield self.downloadRequest('upload', id, async() => {\n          checkCancel();\n\n          const blob = file.slice(offset, offset + partSize);\n          const buffer = await readBlobAsArrayBuffer(blob);\n          checkCancel();\n\n          self.debug && self.log('Upload file part, isBig:', isBigFile, part, buffer.byteLength, new Uint8Array(buffer).length, new Uint8Array(buffer).slice().length);\n\n          return self.apiManager.invokeApi(method, {\n            file_id: fileId,\n            file_part: part,\n            file_total_parts: totalParts,\n            bytes: buffer\n          } as any, {\n            fileUpload: true\n          }).then(() => {\n            if(canceled) {\n              return;\n            }\n\n            ++doneParts;\n            const progress: Progress = {done: doneParts * partSize, offset, total: fileSize, fileName};\n            deferred.notify(progress);\n\n            if(doneParts >= totalParts) {\n              deferred.resolve(resultInputFile);\n              resolved = true;\n            }\n          }, errorHandler);\n        }, activeDelta).catch(errorHandler);\n      }\n    }\n\n    const it = generator();\n    const process = () => {\n      if(canceled) return;\n      const r = it.next();\n      if(r.done || canceled) return;\n      (r.value as Promise<void>).then(process);\n    };\n\n    const maxRequests = Infinity;\n    for(let i = 0, length = Math.min(maxRequests, totalParts); i < length; ++i) {\n      process();\n    }\n\n    const checkCancel = () => {\n      if(canceled) {\n        throw makeError('UPLOAD_CANCELED');\n      }\n    };\n\n    deferred.cancel = () => {\n      if(!canceled && !resolved) {\n        canceled = true;\n        errorHandler(makeError('UPLOAD_CANCELED'));\n      }\n    };\n\n    deferred.notify = (progress: Progress) => {\n      this.rootScope.dispatchEvent('download_progress', progress);\n    };\n\n    deferred.finally(() => {\n      if(this.uploadPromises[fileName] === deferred) {\n        delete this.uploadPromises[fileName];\n      }\n    });\n\n    return this.uploadPromises[fileName] = deferred;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Modes from '../config/modes';\nimport {IS_WORKER} from '../helpers/context';\nimport {WorkerTaskTemplate} from '../types';\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\n// import { stringify } from '../helpers/json';\n\nclass LocalStorage<Storage extends Record<string, any>> {\n  private prefix = '';\n  private cache: Partial<Storage> = {};\n  private useStorage = true;\n\n  constructor(/* private preserveKeys: (keyof Storage)[] */) {\n    if(Modes.test) {\n      this.prefix = 't_';\n    }\n  }\n\n  public get<T extends keyof Storage>(key: T, useCache = true): Storage[T] {\n    if(this.cache.hasOwnProperty(key) && useCache) {\n      return this.cache[key];\n    } else if(this.useStorage) {\n      let value: Storage[T];\n      try {\n        value = localStorage.getItem(this.prefix + (key as string)) as any;\n      } catch(err) {\n        this.useStorage = false;\n      }\n\n      if(value !== null) {\n        try {\n          value = JSON.parse(value);\n        } catch(err) {\n          // console.error(err);\n        }\n      } else {\n        value = undefined;\n      }\n\n      return value;\n    }/*  else {\n      throw 'something went wrong';\n    } */\n  }\n\n  public set(obj: Partial<Storage>, onlyLocal = false) {\n    for(const key in obj) {\n      if(obj.hasOwnProperty(key)) {\n        const value = obj[key];\n        this.cache[key] = value;\n\n        if(this.useStorage && !onlyLocal) {\n          try {\n            const stringified = JSON.stringify(value);\n            localStorage.setItem(this.prefix + key, stringified);\n          } catch(err) {\n            this.useStorage = false;\n          }\n        }\n      }\n    }\n  }\n\n  public delete(key: keyof Storage, saveLocal = false) {\n    // ! it is needed here\n    key = '' + (key as string);\n\n    if(!saveLocal) {\n      delete this.cache[key];\n    }\n\n    // if(this.useStorage) {\n    try {\n      localStorage.removeItem(this.prefix + (key as string));\n    } catch(err) {\n\n    }\n    // }\n  }\n\n  /* public clear(preserveKeys: (keyof Storage)[] = this.preserveKeys) {\n    // if(this.useStorage) {\n      try {\n        let obj: Partial<Storage> = {};\n        if(preserveKeys) {\n          preserveKeys.forEach((key) => {\n            const value = this.get(key);\n            if(value !== undefined) {\n              obj[key] = value;\n            }\n          });\n        }\n\n        localStorage.clear();\n\n        if(preserveKeys) {\n          this.set(obj);\n        }\n      } catch(err) {\n\n      }\n    // }\n  } */\n\n  public clear() {\n    const keys: string[] = ['dc', 'server_time_offset', 'xt_instance', 'user_auth', 'state_id', 'k_build'];\n    for(let i = 1; i <= 5; ++i) {\n      keys.push(`dc${i}_server_salt`);\n      keys.push(`dc${i}_auth_key`);\n    }\n\n    for(const key of keys) {\n      this.delete(key, true);\n    }\n  }\n\n  public toggleStorage(enabled: boolean, clearWrite: boolean) {\n    this.useStorage = enabled;\n\n    if(!clearWrite) {\n      return;\n    }\n\n    if(!enabled) {\n      this.clear();\n    } else {\n      return this.set(this.cache);\n    }\n  }\n}\n\nexport interface LocalStorageProxyTask extends WorkerTaskTemplate {\n  type: 'localStorageProxy',\n  payload: {\n    type: 'set' | 'get' | 'delete' | 'clear' | 'toggleStorage',\n    args: any[]\n  }\n};\n\nexport interface LocalStorageProxyTaskResponse extends WorkerTaskTemplate {\n  type: 'localStorageProxy',\n  payload: any\n};\n\nexport default class LocalStorageController<Storage extends Record<string, any>> {\n  private static STORAGES: LocalStorageController<any>[] = [];\n  // private log = (...args: any[]) => console.log('[SW LS]', ...args);\n  // private log = (...args: any[]) => {};\n\n  private storage: LocalStorage<Storage>;\n\n  constructor(/* private preserveKeys: (keyof Storage)[] = [] */) {\n    LocalStorageController.STORAGES.push(this);\n\n    if(!IS_WORKER) {\n      this.storage = new LocalStorage(/* preserveKeys */);\n    }\n  }\n\n  private async proxy<T>(type: LocalStorageProxyTask['payload']['type'], ...args: LocalStorageProxyTask['payload']['args']): Promise<T> {\n    if(IS_WORKER) {\n      const port = MTProtoMessagePort.getInstance<false>();\n      return port.invoke('localStorageProxy', {type, args});\n    }\n\n    args = Array.prototype.slice.call(args);\n\n    // @ts-ignore\n    return this.storage[type].apply(this.storage, args as any);\n  }\n\n  public get<T extends keyof Storage>(key: T, useCache?: boolean) {\n    return this.proxy<Storage[T]>('get', key, useCache);\n  }\n\n  public set(obj: Partial<Storage>, onlyLocal?: boolean) {\n    return this.proxy<void>('set', obj, onlyLocal);\n  }\n\n  public delete(key: keyof Storage, saveLocal?: boolean) {\n    return this.proxy<void>('delete', key, saveLocal);\n  }\n\n  public clear(/* preserveKeys?: (keyof Storage)[] */) {\n    return this.proxy<void>('clear'/* , preserveKeys */);\n  }\n\n  public toggleStorage(enabled: boolean, clearWrite: boolean) {\n    return this.proxy<void>('toggleStorage', enabled, clearWrite);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {AppInstance} from './mtproto/singleInstance';\nimport type {UserAuth} from './mtproto/mtproto_config';\nimport type {DcId} from '../types';\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport LocalStorageController from './localStorage';\n\nconst sessionStorage = new LocalStorageController<{\n  dc: DcId,\n  user_auth: UserAuth,\n  state_id: number,\n  dc1_auth_key: string,\n  dc2_auth_key: string,\n  dc3_auth_key: string,\n  dc4_auth_key: string,\n  dc5_auth_key: string,\n  dc1_server_salt: string,\n  dc2_server_salt: string,\n  dc3_server_salt: string,\n  dc4_server_salt: string,\n  dc5_server_salt: string,\n  auth_key_fingerprint: string, // = dc${App.baseDcId}_auth_key.slice(0, 8)\n  server_time_offset: number,\n  xt_instance: AppInstance,\n  kz_version: 'K' | 'Z',\n  tgme_sync: {\n    canRedirect: boolean,\n    ts: number\n  },\n  k_build: number\n}>(/* ['kz_version'] */);\nMOUNT_CLASS_TO.appStorage = sessionStorage;\nexport default sessionStorage;\n","export default function bytesFromHex(hexString: string) {\n  const len = hexString.length;\n  const bytes = new Uint8Array(Math.ceil(len / 2));\n  let start = 0;\n\n  if(len % 2) { // read 0x581 as 0x0581\n    bytes[start++] = parseInt(hexString.charAt(0), 16);\n  }\n\n  for(let i = start; i < len; i += 2) {\n    bytes[start++] = parseInt(hexString.substr(i, 2), 16);\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from '../../environment/ctx';\nimport assumeType from '../../helpers/assumeType';\nimport callbackify from '../../helpers/callbackify';\nimport {ignoreRestrictionReasons} from '../../helpers/restrictions';\nimport {Config, HelpAppConfig, MethodDeclMap, User} from '../../layer';\nimport {InvokeApiOptions} from '../../types';\nimport {AppManager} from '../appManagers/manager';\nimport {MTAppConfig} from './appConfig';\nimport {UserAuth} from './mtproto_config';\nimport {MTMessage} from './networker';\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport type ApiLimitType = 'pin' | 'folderPin' | 'folders' |\n  'favedStickers' | 'reactions' | 'bio' | 'topicPin' | 'caption' |\n  'chatlistsJoined' | 'chatlistInvites' | 'channels' | 'links' |\n  'gifs' | 'folderPeers' | 'uploadFileParts';\n\nexport default abstract class ApiManagerMethods extends AppManager {\n  private afterMessageIdTemp: number;\n  private hashes: {[method: string]: HashOptions} = {};\n  private apiPromisesSingleProcess: {\n    [q: string]: Map<any, Promise<any>>\n  } = {};\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        result?: any,\n        error?: any,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  protected config: Config;\n  protected appConfig: MTAppConfig;\n\n  constructor() {\n    super();\n    this.afterMessageIdTemp = 0;\n  }\n\n  abstract setUserAuth(userAuth: UserAuth | UserId): Promise<void>;\n\n  public setUser(user: User) {\n    // appUsersManager.saveApiUser(user);\n    return this.setUserAuth(user.id);\n  }\n\n  abstract invokeApi<T extends keyof MethodDeclMap>(method: T, params?: MethodDeclMap[T]['req'], options?: InvokeApiOptions): Promise<MethodDeclMap[T]['res']>;\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n\n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    // console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap, R>(o: {\n    method: T,\n    processResult?: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: Omit<MethodDeclMap[T]['req'], 'hash'>,\n    options?: InvokeApiOptions & {cacheKey?: string},\n    overwrite?: boolean\n  }) {\n    // @ts-ignore\n    o.params ??= {};\n    o.options ??= {};\n    // console.log('will invokeApi:', method, params, options);\n\n    const {params, options, method, overwrite} = o;\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        if(overwrite) {\n          delete this.hashes[method][queryJSON];\n          cached = undefined;\n        } else {\n          (params as any).hash = cached.hash;\n        }\n      }\n    }\n\n    return this.invokeApiSingleProcess<T, R>({\n      method,\n      processResult: (result) => {\n        if(result._.includes('NotModified')) {\n          // this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n          return cached.result;\n        }\n\n        if(result.hash/*  || result.messages */) {\n          const hash = result.hash/*  || this.computeHash(result.messages) */;\n\n          if(!this.hashes[method]) this.hashes[method] = {};\n          cached = this.hashes[method][queryJSON] = {\n            hash,\n            result\n          };\n        }\n\n        if(o.processResult) {\n          const newResult = o.processResult(result);\n          return cached ? cached.result = newResult : newResult;\n        }\n\n        return result;\n      },\n      params,\n      options\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    const cache = this.apiPromisesSingle;\n    if(cache[q]) {\n      return cache[q];\n    }\n\n    return cache[q] = this.invokeApi(method, params, options).finally(() => {\n      delete cache[q];\n    });\n  }\n\n  public invokeApiSingleProcess<T extends keyof MethodDeclMap, R = MethodDeclMap[T]['res']>(o: {\n    method: T,\n    processResult?: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: MethodDeclMap[T]['req'],\n    options?: InvokeApiOptions & {cacheKey?: string, overwrite?: boolean}\n  }): Promise<Awaited<R>> {\n    o.params ??= {};\n    o.options ??= {};\n\n    const {method, processResult, processError, params, options} = o;\n    const cache = this.apiPromisesSingleProcess;\n    const cacheKey = options.cacheKey || JSON.stringify(params);\n    const map = cache[method] ??= new Map();\n    const oldPromise = map.get(cacheKey);\n    if(oldPromise) {\n      return oldPromise;\n    }\n\n    const getNewPromise = () => {\n      const promise = map.get(cacheKey);\n      return promise === p ? undefined : promise;\n    };\n\n    const originalPromise = this.invokeApi(method, params, options);\n    const newPromise: Promise<Awaited<R>> = originalPromise.then((result) => {\n      return getNewPromise() || (processResult ? processResult(result) : result);\n    }, (error) => {\n      const promise = getNewPromise();\n      if(promise) {\n        return promise;\n      }\n\n      if(!processError) {\n        throw error;\n      }\n\n      return processError(error);\n    });\n\n    const p = newPromise.finally(() => {\n      if(map.get(cacheKey) !== p) {\n        return;\n      }\n\n      map.delete(cacheKey);\n      if(!map.size) {\n        delete cache[method];\n      }\n    });\n\n    map.set(cacheKey, p);\n    return p;\n  }\n\n  public invokeApiCacheable<\n    T extends keyof MethodDeclMap,\n    O extends InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean, syncIfHasResult: boolean}>\n  >(\n    method: T,\n    params: MethodDeclMap[T]['req'] = {} as any,\n    options: O = {} as any\n  ): O['syncIfHasResult'] extends true ? MethodDeclMap[T]['res'] | Promise<MethodDeclMap[T]['res']> : Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ??= {};\n    const queryJSON = JSON.stringify(params);\n    let item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      if(options.syncIfHasResult) {\n        if(item.hasOwnProperty('result')) {\n          return item.result;\n        } else if(item.hasOwnProperty('error')) {\n          throw item.error;\n        }\n      }\n\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item?.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = ctx.setTimeout(() => {\n        if(cache[queryJSON] === item) {\n          delete cache[queryJSON];\n        }\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    const onResult = (result: any) => {\n      item.result = result;\n    };\n\n    promise.then((result) => {\n      item.result = result;\n    }, (error) => {\n      item.error = error;\n    });\n\n    item = cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        try {\n          if(verify(item.params)) {\n            if(item.timeout) {\n              clearTimeout(item.timeout);\n            }\n\n            delete cache[queryJSON];\n          }\n        } catch(err) {\n          // this.log.error('clearCache error:', err, queryJSON, item);\n        }\n      }\n    }\n  }\n\n  public getConfig(overwrite?: boolean) {\n    if(this.config && !overwrite) {\n      return this.config;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getConfig',\n      params: {},\n      processResult: (config) => {\n        this.config = config;\n        this.rootScope.dispatchEvent('config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n\n  public getAppConfig(overwrite?: boolean) {\n    if(this.appConfig && !overwrite) {\n      return this.appConfig;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getAppConfig',\n      params: {\n        hash: 0\n      },\n      processResult: (helpAppConfig) => {\n        assumeType<HelpAppConfig.helpAppConfig>(helpAppConfig);\n        const config = helpAppConfig.config as any as MTAppConfig;\n        this.appConfig = config;\n        ignoreRestrictionReasons(config.ignore_restriction_reasons ?? []);\n        this.rootScope.dispatchEvent('app_config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n\n  public getLimit(type: ApiLimitType, isPremium?: boolean) {\n    return callbackify(this.getAppConfig(), (appConfig) => {\n      const map: {[type in ApiLimitType]: [keyof MTAppConfig, keyof MTAppConfig] | keyof MTAppConfig} = {\n        pin: ['dialogs_pinned_limit_default', 'dialogs_pinned_limit_premium'],\n        folderPin: ['dialogs_folder_pinned_limit_default', 'dialogs_folder_pinned_limit_premium'],\n        folders: ['dialog_filters_limit_default', 'dialog_filters_limit_premium'],\n        favedStickers: ['stickers_faved_limit_default', 'stickers_faved_limit_premium'],\n        reactions: ['reactions_user_max_default', 'reactions_user_max_premium'],\n        bio: ['about_length_limit_default', 'about_length_limit_premium'],\n        topicPin: 'topics_pinned_limit',\n        caption: ['caption_length_limit_default', 'caption_length_limit_premium'],\n        chatlistInvites: ['chatlist_invites_limit_default', 'chatlist_invites_limit_premium'],\n        chatlistsJoined: ['chatlists_joined_limit_default', 'chatlists_joined_limit_premium'],\n        channels: ['channels_limit_default', 'channels_limit_premium'],\n        links: ['channels_public_limit_default', 'channels_public_limit_premium'],\n        gifs: ['saved_gifs_limit_default', 'saved_gifs_limit_premium'],\n        folderPeers: ['dialog_filters_chats_limit_default', 'dialog_filters_chats_limit_premium'],\n        uploadFileParts: ['upload_max_fileparts_default', 'upload_max_fileparts_premium']\n      };\n\n      isPremium ??= this.rootScope.premium;\n\n      const a = map[type];\n      const key = Array.isArray(a) ? a[isPremium ? 1 : 0] : a;\n      return appConfig[key] as number;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport CacheStorageController from '../lib/files/cacheStorage';\nimport AppStorage from '../lib/storage';\nimport sessionStorage from '../lib/sessionStorage';\nimport noop from './noop';\n\nexport default function toggleStorages(enabled: boolean, clearWrite: boolean) {\n  return Promise.all([\n    AppStorage.toggleStorage(enabled, clearWrite),\n    CacheStorageController.toggleStorage(enabled, clearWrite),\n    sessionStorage.toggleStorage(enabled, clearWrite)\n  ]).then(noop, noop);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {UserAuth} from './mtproto_config';\nimport type {DcAuthKey, DcId, DcServerSalt, InvokeApiOptions} from '../../types';\nimport type {MethodDeclMap} from '../../layer';\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport sessionStorage from '../sessionStorage';\nimport MTPNetworker, {MTMessage} from './networker';\nimport {ConnectionType, constructTelegramWebSocketUrl, DcConfigurator, TransportType} from './dcConfigurator';\nimport {logger} from '../logger';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport App from '../../config/app';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport {IDB} from '../files/idb';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport ctx from '../../environment/ctx';\nimport noop from '../../helpers/noop';\nimport Modes from '../../config/modes';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport pause from '../../helpers/schedulers/pause';\nimport ApiManagerMethods from './api_methods';\nimport {getEnvironment} from '../../environment/utils';\nimport toggleStorages from '../../helpers/toggleStorages';\nimport tsNow from '../../helpers/tsNow';\nimport transportController from './transports/controller';\nimport MTTransport from './transports/transport';\n\n/* class RotatableArray<T> {\n  public array: Array<T> = [];\n  private lastIndex = -1;\n\n  public get() {\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\n    return this.array[this.lastIndex];\n  }\n} */\n\nconst PREMIUM_FILE_NETWORKERS_COUNT = 6;\nconst REGULAR_FILE_NETWORKERS_COUNT = 3;\n\nexport class ApiManager extends ApiManagerMethods {\n  private cachedNetworkers: {\n    [transportType in TransportType]: {\n      [connectionType in ConnectionType]: {\n        [dcId: DcId]: MTPNetworker[]\n      }\n    }\n  };\n\n  private cachedExportPromise: {[x: number]: Promise<unknown>};\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\n  private baseDcId: DcId;\n\n  // public telegramMeNotified = false;\n\n  private log: ReturnType<typeof logger>;\n\n  private afterMessageTempIds: {\n    [tempId: string]: {\n      messageId: string,\n      promise: Promise<any>\n    }\n  };\n\n  private transportType: TransportType;\n\n  private updatesProcessor: (obj: any) => void;\n\n  private loggingOut: boolean;\n\n  constructor() {\n    super();\n    this.log = logger('API');\n\n    this.cachedNetworkers = {} as any;\n    this.cachedExportPromise = {};\n    this.gettingNetworkers = {};\n    this.baseDcId = 0;\n    this.afterMessageTempIds = {};\n\n    this.transportType = Modes.transport;\n\n    if(import.meta.env.VITE_MTPROTO_AUTO) {\n      transportController.addEventListener('transport', (transportType) => {\n        this.changeTransportType(transportType);\n      });\n    }\n\n    // * Make sure that the used autologin_token is no more than 10000 seconds old\n    // * https://core.telegram.org/api/url-authorization\n    const REFRESH_APP_CONFIG_INTERVAL = (10000 - 30) * 1000;\n    setInterval(() => {\n      this.getConfig(true);\n    }, REFRESH_APP_CONFIG_INTERVAL);\n  }\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateConfig: () => {\n        this.getConfig(true);\n        this.getAppConfig(true);\n      }\n    });\n\n    this.rootScope.addEventListener('user_auth', () => {\n      if(this.config) { // refresh configs if had a config during authorization\n        this.apiUpdatesManager.processLocalUpdate({_: 'updateConfig'});\n      }\n    });\n\n    this.rootScope.addEventListener('premium_toggle', (isPremium) => {\n      this.iterateNetworkers(({networker, connectionType, dcId, transportType}) => {\n        if(connectionType === 'client' || transportType !== 'websocket') {\n          return;\n        }\n\n        const transport = networker.transport;\n        if(!transport) {\n          this.log.error('wow what, no transport?', networker);\n          return;\n        }\n\n        if((transport as TcpObfuscated).connection) {\n          const url = constructTelegramWebSocketUrl(dcId, connectionType, isPremium);\n          (transport as TcpObfuscated).changeUrl(url);\n        }\n      });\n    });\n  }\n\n  // private lol = false;\n\n  // constructor() {\n  // MtpSingleInstanceService.start();\n\n  /* AppStorage.get<number>('dc').then((dcId) => {\n      if(dcId) {\n        this.baseDcId = dcId;\n      }\n    }); */\n  // }\n\n  /* public telegramMeNotify(newValue: boolean) {\n    if(this.telegramMeNotified !== newValue) {\n      this.telegramMeNotified = newValue;\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\n    }\n  } */\n\n  private getTransportType(connectionType: ConnectionType) {\n    let transportType: TransportType;\n    if(import.meta.env.VITE_MTPROTO_HTTP_UPLOAD) {\n      transportType = connectionType === 'upload' && getEnvironment().IS_SAFARI ? 'https' : 'websocket';\n      // const transportType: TransportType = connectionType !== 'client' ? 'https' : 'websocket';\n    } else {\n      transportType = this.transportType;\n    }\n\n    return transportType;\n  }\n\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\n    for(const transportType in this.cachedNetworkers) {\n      const connections = this.cachedNetworkers[transportType as TransportType];\n      for(const connectionType in connections) {\n        const dcs = connections[connectionType as ConnectionType];\n        for(const dcId in dcs) {\n          const networkers = dcs[dcId as any as DcId];\n          networkers.forEach((networker, idx, arr) => {\n            callback({\n              networker,\n              dcId: +dcId as DcId,\n              connectionType: connectionType as ConnectionType,\n              transportType: transportType as TransportType,\n              index: idx,\n              array: arr\n            });\n          });\n        }\n      }\n    }\n  }\n\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\n    return this.dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client', this.rootScope.premium);\n  }\n\n  public changeTransportType(transportType: TransportType) {\n    const oldTransportType = this.transportType;\n    if(oldTransportType === transportType) {\n      return;\n    }\n\n    this.log('changing transport from', oldTransportType, 'to', transportType);\n\n    const oldObject = this.cachedNetworkers[oldTransportType];\n    const newObject = this.cachedNetworkers[transportType];\n    this.cachedNetworkers[transportType] = oldObject;\n    this.cachedNetworkers[oldTransportType] = newObject;\n\n    this.transportType = transportType;\n\n    for(const oldGetKey in this.gettingNetworkers) {\n      const promise = this.gettingNetworkers[oldGetKey];\n      delete this.gettingNetworkers[oldGetKey];\n\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\n      this.gettingNetworkers[newGetKey] = promise;\n\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\n    }\n\n    this.iterateNetworkers((info) => {\n      const transportType = this.getTransportType(info.connectionType);\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\n      this.changeNetworkerTransport(info.networker, transport);\n    });\n  }\n\n  public async getBaseDcId() {\n    if(this.baseDcId) {\n      return this.baseDcId;\n    }\n\n    const baseDcId = await sessionStorage.get('dc');\n    if(!this.baseDcId) {\n      if(!baseDcId) {\n        this.setBaseDcId(App.baseDcId);\n      } else {\n        this.baseDcId = baseDcId;\n      }\n    }\n\n    return this.baseDcId;\n  }\n\n  public async setUserAuth(userAuth: UserAuth | UserId) {\n    if(typeof(userAuth) === 'string' || typeof(userAuth) === 'number') {\n      userAuth = {dcID: 0, date: tsNow(true), id: userAuth.toPeerId(false)};\n    }\n\n    this.rootScope.dispatchEvent('user_auth', userAuth);\n\n    if(!userAuth.dcID) {\n      const baseDcId = await this.getBaseDcId();\n      userAuth.dcID = baseDcId;\n    }\n\n    sessionStorage.set({\n      user_auth: userAuth\n    });\n\n    // this.telegramMeNotify(true);\n  }\n\n  public setBaseDcId(dcId: DcId) {\n    const wasDcId = this.baseDcId;\n    if(wasDcId) { // if migrated set ondrain\n      this.getNetworker(wasDcId).then((networker) => {\n        this.setOnDrainIfNeeded(networker);\n      });\n    }\n\n    this.baseDcId = dcId;\n\n    sessionStorage.set({\n      dc: this.baseDcId\n    });\n  }\n\n  public async logOut() {\n    if(this.loggingOut) {\n      return;\n    }\n\n    this.loggingOut = true;\n    const storageKeys: Array<DcAuthKey> = [];\n\n    const prefix = 'dc';\n    for(let dcId = 1; dcId <= 5; dcId++) {\n      storageKeys.push(prefix + dcId + '_auth_key' as any);\n    }\n\n    // WebPushApiManager.forceUnsubscribe(); // WARNING // moved to worker's master\n    const storageResult = await Promise.all(storageKeys.map((key) => sessionStorage.get(key)));\n\n    const logoutPromises: Promise<any>[] = [];\n    for(let i = 0; i < storageResult.length; i++) {\n      if(storageResult[i]) {\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId: (i + 1) as DcId, ignoreErrors: true}));\n      }\n    }\n\n    const clear = async() => {\n      this.baseDcId = undefined;\n      // this.telegramMeNotify(false);\n      await toggleStorages(false, true);\n      IDB.closeDatabases();\n      this.rootScope.dispatchEvent('logging_out');\n    };\n\n    setTimeout(clear, 1e3);\n\n    // return;\n\n    return Promise.all(logoutPromises).catch((error) => {\n      error.handled = true;\n    }).finally(clear)/* .then(() => {\n      location.pathname = '/';\n    }) */;\n  }\n\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\n    return [dcId, transportType, connectionType].join('-');\n  }\n\n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\n    // const connectionType: ConnectionType = 'client';\n\n    const transportType = this.getTransportType(connectionType);\n    if(!this.cachedNetworkers[transportType]) {\n      this.cachedNetworkers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const cache = this.cachedNetworkers[transportType][connectionType];\n    if(!(dcId in cache)) {\n      cache[dcId] = [];\n    }\n\n    const networkers = cache[dcId];\n    // @ts-ignore\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (this.rootScope.premium ? PREMIUM_FILE_NETWORKERS_COUNT : REGULAR_FILE_NETWORKERS_COUNT);\n    if(networkers.length >= maxNetworkers) {\n      let i = maxNetworkers - 1, found = false;\n      for(; i >= 0; --i) {\n        if(networkers[i].isOnline) {\n          found = true;\n          break;\n        }\n      }\n\n      const networker = networkers.splice(found ? i : maxNetworkers - 1, 1)[0];\n      networkers.unshift(networker);\n      return Promise.resolve(networker);\n    }\n\n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\n    if(this.gettingNetworkers[getKey]) {\n      return this.gettingNetworkers[getKey];\n    }\n\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\n\n    let transport = this.chooseServer(dcId, connectionType, transportType);\n    return this.gettingNetworkers[getKey] = Promise.all([ak, ss].map((key) => sessionStorage.get(key)))\n    .then(async([authKeyHex, serverSaltHex]) => {\n      let networker: MTPNetworker, error: any;\n      if(authKeyHex?.length === 512) {\n        if(serverSaltHex?.length !== 16) {\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\n        }\n\n        const authKey = bytesFromHex(authKeyHex);\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1', authKey)).slice(-8);\n        const serverSalt = bytesFromHex(serverSaltHex);\n\n        networker = this.networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\n      } else {\n        try { // if no saved state\n          const auth = await this.authorizer.auth(dcId);\n\n          authKeyHex = bytesToHex(auth.authKey);\n          serverSaltHex = bytesToHex(auth.serverSalt);\n\n          if(dcId === App.baseDcId) {\n            sessionStorage.set({\n              auth_key_fingerprint: authKeyHex.slice(0, 8)\n            });\n          }\n\n          sessionStorage.set({\n            [ak]: authKeyHex,\n            [ss]: serverSaltHex\n          });\n\n          networker = this.networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\n        } catch(_error) {\n          error = _error;\n        }\n      }\n\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\n      const newTransportType = this.getTransportType(connectionType);\n      if(newTransportType !== transportType) {\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\n        transport.destroy();\n        DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, transport);\n\n        if(networker) {\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\n        }\n\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\n      }\n\n      /* networker.onConnectionStatusChange = (online) => {\n        console.log('status:', online);\n      }; */\n\n      delete this.gettingNetworkers[getKey];\n\n      if(error) {\n        this.log('get networker error', error, (error as Error).stack);\n        throw error;\n      }\n\n      this.changeNetworkerTransport(networker, transport);\n      networkers.unshift(networker);\n      this.setOnDrainIfNeeded(networker);\n      return networker;\n    });\n  }\n\n  public getNetworkerVoid(dcId: DcId) {\n    return this.getNetworker(dcId).then(noop, noop);\n  }\n\n  private changeNetworkerTransport(networker: MTPNetworker, transport?: MTTransport) {\n    const oldTransport = networker.transport;\n    if(oldTransport) {\n      DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, oldTransport);\n    }\n\n    networker.changeTransport(transport);\n  }\n\n  private onNetworkerDrain(networker: MTPNetworker) {\n    this.log('networker drain', networker.dcId);\n    networker.onDrain = undefined;\n    this.changeNetworkerTransport(networker);\n    networker.destroy();\n    this.networkerFactory.removeNetworker(networker);\n    DcConfigurator.removeTransport(this.cachedNetworkers, networker);\n  }\n\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\n    if(networker.onDrain) {\n      return;\n    }\n\n    const checkPromise: Promise<boolean> = networker.isFileNetworker ?\n      Promise.resolve(true) :\n      this.getBaseDcId().then((baseDcId) => networker.dcId !== baseDcId);\n    checkPromise.then((canRelease) => {\n      if(networker.onDrain) {\n        return;\n      }\n\n      if(canRelease) {\n        networker.onDrain = () => this.onNetworkerDrain(networker);\n        networker.setDrainTimeout();\n      }\n    });\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n    this.networkerFactory.setUpdatesProcessor(callback);\n  }\n\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T]['res']> {\n    // /////this.log('Invoke api', method, params, options);\n\n    /* if(!this.lol) {\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\n      this.lol = true;\n    } */\n\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\n\n    let {afterMessageId, prepareTempMessageId} = options;\n    if(prepareTempMessageId) {\n      deferred.then(() => {\n        delete this.afterMessageTempIds[prepareTempMessageId];\n      });\n    }\n\n    if(MOUNT_CLASS_TO) {\n      const startTime = Date.now();\n      const interval = ctx.setInterval(() => {\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\n        }\n        // this.cachedUploadNetworkers[2].requestMessageStatus();\n      }, 5e3);\n\n      deferred.catch(noop).finally(() => {\n        clearInterval(interval);\n      });\n    }\n\n    const rejectPromise = async(error: ApiError) => {\n      if(!error) {\n        error = {type: 'ERROR_EMPTY'};\n      } else if(!isObject(error)) {\n        error = {message: error};\n      }\n\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') ||\n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\n        this.logOut();\n      }\n\n      if(options.ignoreErrors) {\n        throw error;\n      }\n\n      if(error.code === 406) {\n        error.handled = true;\n      }\n\n      if(!options.noErrorBox) {\n        error.input = method;\n        error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\n        setTimeout(() => {\n          if(!error.handled) {\n            if(error.code === 401) {\n              this.logOut();\n            } else {\n              // ErrorService.show({error: error}); // WARNING\n            }\n\n            error.handled = true;\n          }\n        }, 100);\n      }\n\n      throw error;\n    };\n\n    let dcId: DcId;\n\n    let cachedNetworker: MTPNetworker;\n    const stack = (new Error()).stack || 'empty stack';\n    const performRequest = (): Promise<any> => {\n      if(afterMessageId) {\n        const after = this.afterMessageTempIds[afterMessageId];\n        if(after) {\n          options.afterMessageId = after.messageId;\n        }\n      }\n\n      const promise = cachedNetworker.wrapApiCall(method, params, options);\n\n      if(prepareTempMessageId) {\n        this.afterMessageTempIds[prepareTempMessageId] = {\n          messageId: (options as MTMessage).messageId,\n          promise: deferred\n        };\n      }\n\n      return promise.catch((error: ApiError) => {\n        // if(!options.ignoreErrors) {\n        if(error.type !== 'FILE_REFERENCE_EXPIRED'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\n        }\n\n        if(error.code === 401 && this.baseDcId === dcId) {\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\n            sessionStorage.delete('dc')\n            sessionStorage.delete('user_auth'); // ! возможно тут вообще не нужно это делать, но нужно проверить случай с USER_DEACTIVATED (https://core.telegram.org/api/errors)\n            // this.telegramMeNotify(false);\n          }\n\n          throw error;\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\n          if(this.cachedExportPromise[dcId] === undefined) {\n            const promise = new Promise((exportResolve, exportReject) => {\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\n                this.invokeApi('auth.importAuthorization', {\n                  id: exportedAuth.id,\n                  bytes: exportedAuth.bytes\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\n              }, exportReject);\n            });\n\n            this.cachedExportPromise[dcId] = promise;\n          }\n\n          return this.cachedExportPromise[dcId].then(() => performRequest());\n        } else if(error.code === 303) {\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            if(options.dcId) {\n              options.dcId = newDcId;\n            } else {\n              this.setBaseDcId(newDcId);\n            }\n\n            return this.invokeApi(method, params, options);\n          }\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            options.dcId = newDcId;\n            return this.invokeApi(method, params, options);\n          } else {\n            throw error;\n          }\n        } else if(error.code === 400 && error.type === 'CONNECTION_NOT_INITED') {\n          this.networkerFactory.unsetConnectionInited();\n          return performRequest();\n        } else if(!options.rawError && error.code === 420) {\n          const waitTime = +error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 1;\n\n          if(waitTime > (options.floodMaxTimeout ?? 60) && !options.prepareTempMessageId) {\n            throw error;\n          }\n\n          return pause(waitTime/* (waitTime + 5) */ * 1000).then(() => performRequest());\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\n          const after = this.afterMessageTempIds[afterMessageId];\n\n          afterMessageId = undefined;\n          delete options.afterMessageId;\n\n          if(after) return after.promise.then(() => performRequest());\n          else return performRequest();\n        } else if(!options.rawError && error.code === 500) {\n          const now = Date.now();\n          if(options.stopTime) {\n            if(now >= options.stopTime) {\n              throw error;\n            }\n          }\n\n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\n          return pause(options.waitTime * 1000).then(() => performRequest());\n        } else if(error.type === 'UNKNOWN' || error.type === 'MTPROTO_CLUSTER_INVALID') { // cluster invalid - request from regular user to premium endpoint\n          return pause(1000).then(() => performRequest());\n        } else {\n          throw error;\n        }\n      });\n    }\n\n    let p: Promise<MTPNetworker>;\n    if(dcId = (options.dcId || this.baseDcId)) {\n      p = this.getNetworker(dcId, options);\n    } else {\n      p = this.getBaseDcId().then((baseDcId) => this.getNetworker(dcId = baseDcId, options));\n    }\n\n    p.then((networker) => {\n      cachedNetworker = networker;\n      const promise = performRequest();\n      cachedNetworker.attachPromise(deferred, options as MTMessage);\n      return promise;\n    })\n    .then(deferred.resolve.bind(deferred))\n    .catch(rejectPromise)\n    .catch(deferred.reject.bind(deferred));\n\n    return deferred;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport applyMixins from '../../helpers/applyMixins';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport {AppManager} from '../appManagers/manager';\n\nexport type StatePeerType = 'recentSearch' | 'topPeer' | 'dialog' | 'contact' | 'topMessage' | 'self';\n\ntype PeersStorageKey = `${StatePeerType}_${string | PeerId}` | StatePeerType;\n\nclass PeersStorage {\n  private neededPeers: Map<PeerId, Set<PeersStorageKey>> = new Map();\n  private singlePeerMap: Map<PeersStorageKey, Set<PeerId>> = new Map();\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  protected after() {\n    this.rootScope.addEventListener('user_auth', () => {\n      this.requestPeer(this.appPeersManager.peerId, 'self');\n    });\n  }\n\n  public requestPeer(peerId: PeerId, key: PeersStorageKey) {\n    let set = this.neededPeers.get(peerId);\n    if(set && set.has(key)) {\n      return;\n    }\n\n    if(!set) {\n      set = new Set();\n      this.neededPeers.set(peerId, set);\n    }\n\n    set.add(key);\n\n    this.dispatchEvent('peerNeeded', peerId);\n  }\n\n  public releasePeer(peerId: PeerId, key: PeersStorageKey) {\n    const set = this.neededPeers.get(peerId);\n    if(!set) {\n      return;\n    }\n\n    set.delete(key);\n\n    if(!set.size) {\n      this.neededPeers.delete(peerId);\n      this.dispatchEvent('peerUnneeded', peerId);\n    }\n  }\n\n  public requestPeersForKey(peerIds: Set<PeerId> | number[], key: PeersStorageKey) {\n    if(Array.isArray(peerIds)) {\n      peerIds = new Set(peerIds);\n    }\n\n    let set = this.singlePeerMap.get(key);\n    if(set) {\n      for(const peerId of set) {\n        if(peerIds.has(peerId)) {\n          continue;\n        }\n\n        this.releasePeer(peerId, key);\n        set.delete(peerId);\n      }\n\n      if(!set.size && !peerIds.size) {\n        this.singlePeerMap.delete(key);\n        return;\n      }\n    }\n\n    if(peerIds.size) {\n      if(!set) {\n        set = new Set();\n        this.singlePeerMap.set(key, set);\n      }\n\n      for(const peerId of peerIds) {\n        if(set.has(peerId)) {\n          continue;\n        }\n\n        this.requestPeer(peerId, key);\n        set.add(peerId);\n      }\n    }\n  }\n\n  public isPeerNeeded(peerId: PeerId) {\n    return this.neededPeers.has(peerId);\n  }\n}\n\ninterface PeersStorage extends EventListenerBase<{\n  peerNeeded: (peerId: PeerId) => void,\n  peerUnneeded: (peerId: PeerId) => void,\n}>, AppManager {}\napplyMixins(PeersStorage, [EventListenerBase, AppManager]);\n\nexport default PeersStorage;\n","import type {ThumbCache} from '../../thumbs';\n\nexport default function generateEmptyThumb(type: string): ThumbCache {\n  return {downloaded: 0, url: '', type};\n}\n","export default function getStickerThumbKey(docId: DocId, toneIndex?: number | string) {\n  return docId + (toneIndex !== undefined ? '-' + toneIndex : '');\n}\n","import type {MyPhoto} from '../../../appManagers/appPhotosManager';\nimport type {ThumbStorageMedia} from '../../thumbs';\nimport type {WebDocument} from '../../../../layer';\nimport {getFileNameByLocation} from '../../../../helpers/fileName';\nimport isWebFileLocation from '../../../appManagers/utils/webFiles/isWebFileLocation';\n\nexport default function getThumbKey(media: ThumbStorageMedia) {\n  if(isWebFileLocation(media)) {\n    return getFileNameByLocation(media);\n  }\n\n  return media._ + ((media as MyPhoto).id ?? (media as WebDocument).url);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {InputWebFileLocation, WebDocument} from '../../layer';\nimport type {MyDocument} from '../appManagers/appDocsManager';\nimport type {MyPhoto} from '../appManagers/appPhotosManager';\nimport {joinDeepPath} from '../../helpers/object/setDeepProperty';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\nimport generateEmptyThumb from './utils/thumbs/generateEmptyThumb';\nimport getStickerThumbKey from './utils/thumbs/getStickerThumbKey';\nimport getThumbKey from './utils/thumbs/getThumbKey';\n\nexport type ThumbCache = {\n  downloaded: number,\n  url: string,\n  type: string\n};\n\nexport type ThumbsCache = {\n  [key: string]: {\n    [size: string]: ThumbCache\n  }\n};\n\nconst thumbFullSize = THUMB_TYPE_FULL;\n\nexport type ThumbStorageMedia = MyPhoto | MyDocument | WebDocument | InputWebFileLocation;\n\nexport type StickerCachedThumbs = {\n  [docIdAndToneIndex: DocId]: StickerCachedThumb\n};\nexport type StickerCachedThumb = {\n  url: string,\n  w: number,\n  h: number\n};\n\nexport default class ThumbsStorage {\n  private thumbsCache: ThumbsCache = {};\n  private stickerCachedThumbs: StickerCachedThumbs = {};\n\n  public getCacheContext(\n    media: ThumbStorageMedia,\n    thumbSize: string = thumbFullSize,\n    key = getThumbKey(media)\n  ): ThumbCache {\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\n      thumbSize = thumbFullSize;\n    } */\n\n    const cache = this.thumbsCache[key] ??= {};\n    return cache[thumbSize] ??= generateEmptyThumb(thumbSize);\n  }\n\n  private mirrorCacheContext(key: string, thumbSize: string, value?: ThumbCache) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n      name: 'thumbs',\n      // key: [key, thumbSize].filter(Boolean).join('.'),\n      key: joinDeepPath(key, thumbSize),\n      value\n    });\n  }\n\n  private mirrorStickerThumb(key: string, value?: StickerCachedThumb) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\n      name: 'stickerThumbs',\n      key,\n      value\n    });\n  }\n\n  public mirrorAll(port?: MessageEventSource) {\n    const instance = MTProtoMessagePort.getInstance<false>();\n    instance.invokeVoid('mirror', {\n      name: 'thumbs',\n      value: this.thumbsCache\n    }, port);\n\n    instance.invokeVoid('mirror', {\n      name: 'stickerThumbs',\n      value: this.stickerCachedThumbs\n    }, port);\n  }\n\n  public setCacheContextURL(\n    media: ThumbStorageMedia,\n    thumbSize: string = thumbFullSize,\n    url: string,\n    downloaded: number = 0,\n    key = getThumbKey(media)\n  ) {\n    const cacheContext = this.getCacheContext(media, thumbSize, key);\n    cacheContext.url = url;\n    cacheContext.downloaded = downloaded;\n    this.mirrorCacheContext(key, thumbSize, cacheContext);\n    return cacheContext;\n  }\n\n  public deleteCacheContext(\n    media: ThumbStorageMedia,\n    thumbSize: string = thumbFullSize,\n    key = getThumbKey(media)\n  ) {\n    const cache = this.thumbsCache[key];\n    if(cache) {\n      this.mirrorCacheContext(key, thumbSize);\n      delete cache[thumbSize];\n    }\n  }\n\n  public getStickerCachedThumb(docId: DocId, toneIndex: number | string) {\n    return this.stickerCachedThumbs[getStickerThumbKey(docId, toneIndex)];\n  }\n\n  public saveStickerPreview(docId: DocId, blob: Blob, width: number, height: number, toneIndex: number | string) {\n    const key = getStickerThumbKey(docId, toneIndex);\n    const thumb = this.stickerCachedThumbs[key];\n    if(thumb && thumb.w >= width && thumb.h >= height) {\n      return;\n    }\n\n    const cache = this.stickerCachedThumbs[key] = {\n      url: URL.createObjectURL(blob),\n      w: width,\n      h: height\n    };\n\n    this.mirrorStickerThumb(key, cache);\n  }\n\n  public clearColoredStickerThumbs() {\n    for(const key in this.stickerCachedThumbs) {\n      const [, toneIndex] = key.split('-');\n      if(toneIndex && isNaN(+toneIndex)) {\n        const thumb = this.stickerCachedThumbs[key];\n        URL.revokeObjectURL(thumb.url);\n        delete this.stickerCachedThumbs[key];\n        this.mirrorStickerThumb(key);\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport type MTProtoConstructor = {\n  id: number,\n  predicate: string,\n  params: Array<{\n    name: string,\n    type: string\n  }>,\n  type: string\n};\n\nexport type MTProtoMethod = {\n  id: number,\n  method: string,\n  params: Array<{\n    name: string,\n    type: string\n  }>,\n  type: string\n};\n\n// eslint-disable-next-line quotes, comma-spacing\nexport default {\"MTProto\":{\"constructors\":[{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":85337187,\"predicate\":\"resPQ\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"server_public_key_fingerprints\",\"type\":\"Vector<long>\"}],\"type\":\"ResPQ\"},{\"id\":-1443537003,\"predicate\":\"p_q_inner_data_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":1459478408,\"predicate\":\"p_q_inner_data_temp_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"},{\"name\":\"expires_in\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":-790100132,\"predicate\":\"server_DH_params_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_answer\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-1249309254,\"predicate\":\"server_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"dh_prime\",\"type\":\"bytes\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"server_time\",\"type\":\"int\"}],\"type\":\"Server_DH_inner_data\"},{\"id\":1715713620,\"predicate\":\"client_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"retry_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"}],\"type\":\"Client_DH_Inner_Data\"},{\"id\":1003222836,\"predicate\":\"dh_gen_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash1\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1188831161,\"predicate\":\"dh_gen_retry\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash2\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":-1499615742,\"predicate\":\"dh_gen_fail\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash3\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1973679973,\"predicate\":\"bind_auth_key_inner\",\"params\":[{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"temp_auth_key_id\",\"type\":\"long\"},{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"temp_session_id\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"}],\"type\":\"BindAuthKeyInner\"},{\"id\":-212046591,\"predicate\":\"rpc_result\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"Object\"}],\"type\":\"RpcResult\"},{\"id\":558156313,\"predicate\":\"rpc_error\",\"params\":[{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"error_message\",\"type\":\"string\"}],\"type\":\"RpcError\"},{\"id\":1579864942,\"predicate\":\"rpc_answer_unknown\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-847714938,\"predicate\":\"rpc_answer_dropped_running\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-1539647305,\"predicate\":\"rpc_answer_dropped\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seq_no\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"}],\"type\":\"RpcDropAnswer\"},{\"id\":155834844,\"predicate\":\"future_salt\",\"params\":[{\"name\":\"valid_since\",\"type\":\"int\"},{\"name\":\"valid_until\",\"type\":\"int\"},{\"name\":\"salt\",\"type\":\"long\"}],\"type\":\"FutureSalt\"},{\"id\":-1370486635,\"predicate\":\"future_salts\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"now\",\"type\":\"int\"},{\"name\":\"salts\",\"type\":\"vector<future_salt>\"}],\"type\":\"FutureSalts\"},{\"id\":880243653,\"predicate\":\"pong\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-501201412,\"predicate\":\"destroy_session_ok\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":1658015945,\"predicate\":\"destroy_session_none\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1631450872,\"predicate\":\"new_session_created\",\"params\":[{\"name\":\"first_msg_id\",\"type\":\"long\"},{\"name\":\"unique_id\",\"type\":\"long\"},{\"name\":\"server_salt\",\"type\":\"long\"}],\"type\":\"NewSession\"},{\"id\":1945237724,\"predicate\":\"msg_container\",\"params\":[{\"name\":\"messages\",\"type\":\"vector<%Message>\"}],\"type\":\"MessageContainer\"},{\"id\":1538843921,\"predicate\":\"message\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seqno\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"body\",\"type\":\"Object\"}],\"type\":\"Message\"},{\"id\":-530561358,\"predicate\":\"msg_copy\",\"params\":[{\"name\":\"orig_message\",\"type\":\"Message\"}],\"type\":\"MessageCopy\"},{\"id\":812830625,\"predicate\":\"gzip_packed\",\"params\":[{\"name\":\"packed_data\",\"type\":\"bytes\"}],\"type\":\"Object\"},{\"id\":1658238041,\"predicate\":\"msgs_ack\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsAck\"},{\"id\":-1477445615,\"predicate\":\"bad_msg_notification\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"}],\"type\":\"BadMsgNotification\"},{\"id\":-307542917,\"predicate\":\"bad_server_salt\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"new_server_salt\",\"type\":\"long\"}],\"type\":\"BadMsgNotification\"},{\"id\":2105940488,\"predicate\":\"msg_resend_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgResendReq\"},{\"id\":-630588590,\"predicate\":\"msgs_state_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsStateReq\"},{\"id\":81704317,\"predicate\":\"msgs_state_info\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsStateInfo\"},{\"id\":-1933520591,\"predicate\":\"msgs_all_info\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsAllInfo\"},{\"id\":661470918,\"predicate\":\"msg_detailed_info\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-2137147681,\"predicate\":\"msg_new_detailed_info\",\"params\":[{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-161422892,\"predicate\":\"destroy_auth_key_ok\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":178201177,\"predicate\":\"destroy_auth_key_none\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":-368010477,\"predicate\":\"destroy_auth_key_fail\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}],\"methods\":[{\"id\":-1099002127,\"method\":\"req_pq_multi\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"}],\"type\":\"ResPQ\"},{\"id\":-686627650,\"method\":\"req_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"public_key_fingerprint\",\"type\":\"long\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-184262881,\"method\":\"set_client_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1491380032,\"method\":\"rpc_drop_answer\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"}],\"type\":\"RpcDropAnswer\"},{\"id\":-1188971260,\"method\":\"get_future_salts\",\"params\":[{\"name\":\"num\",\"type\":\"int\"}],\"type\":\"FutureSalts\"},{\"id\":2059302892,\"method\":\"ping\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-213746804,\"method\":\"ping_delay_disconnect\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"},{\"name\":\"disconnect_delay\",\"type\":\"int\"}],\"type\":\"Pong\"},{\"id\":-414113498,\"method\":\"destroy_session\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1835453025,\"method\":\"http_wait\",\"params\":[{\"name\":\"max_delay\",\"type\":\"int\"},{\"name\":\"wait_after\",\"type\":\"int\"},{\"name\":\"max_wait\",\"type\":\"int\"}],\"type\":\"HttpWait\"},{\"id\":-784117408,\"method\":\"destroy_auth_key\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}]},\"API\":{\"constructors\":[{\"id\":-1132882121,\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1720552011,\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":1072550713,\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":-994444869,\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":1450380236,\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":2134579434,\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":2107670217,\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":900291769,\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1182234929,\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-138301121,\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-208488460,\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":-181407105,\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-1771768449,\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":505969924,\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.2?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1279654347,\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-104578748,\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":-122978821,\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":480546647,\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":-1110593856,\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.3?VideoSize\"}],\"type\":\"InputChatPhoto\"},{\"id\":-1991004873,\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":-457104426,\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":1210199983,\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"InputGeoPoint\"},{\"id\":483901197,\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":1001634122,\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":-539317279,\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":1498486562,\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":918946202,\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1432995067,\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1086091090,\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":8322574,\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-891180321,\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":172975040,\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1373745011,\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1384777335,\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1258941372,\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1278304028,\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":276907596,\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-742634630,\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"User\"},{\"id\":1326562017,\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":-2100168954,\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"personal\",\"type\":\"flags.2?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":164646985,\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-306628279,\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":9203775,\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":693512293,\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Chat\"},{\"id\":1103884886,\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.25?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":1704108455,\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":-908914376,\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.13?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"call\",\"type\":\"flags.12?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.15?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.16?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.17?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.17?Vector<long>\"},{\"name\":\"available_reactions\",\"type\":\"flags.18?ChatReactions\"}],\"type\":\"ChatFull\"},{\"id\":-1070776313,\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-2023500831,\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":1018991608,\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":935395612,\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":476978193,\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":-1868117372,\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"peer_id\",\"type\":\"flags.0?Peer\"}],\"type\":\"Message\"},{\"id\":940666592,\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"pinned\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.26?true\"},{\"name\":\"invert_media\",\"type\":\"flags.27?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"forwards\",\"type\":\"flags.10?int\"},{\"name\":\"replies\",\"type\":\"flags.23?MessageReplies\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":721967202,\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":1038967584,\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":1766936791,\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.3?true\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1457575028,\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":1882335561,\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageMedia\"},{\"id\":-1618676578,\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":-1230047312,\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1119368275,\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1247687078,\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":2144015272,\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-1780220945,\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":365886720,\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1539362612,\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-712374074,\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.5?int\"}],\"type\":\"Dialog\"},{\"id\":590459437,\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":-82216347,\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"video_sizes\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":236446268,\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":1976012384,\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":35527382,\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":286776671,\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":-1297942941,\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"GeoPoint\"},{\"id\":1577067778,\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":782418132,\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"setup_password_required\",\"type\":\"flags.1?true\"},{\"name\":\"otherwise_relogin_days\",\"type\":\"flags.1?int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"future_auth_token\",\"type\":\"flags.2?bytes\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":-1271602504,\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1195615476,\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":423314455,\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":1251338318,\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-892638494,\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"stories_muted\",\"type\":\"flags.6?Bool\"},{\"name\":\"stories_hide_sender\",\"type\":\"flags.7?Bool\"},{\"name\":\"stories_sound\",\"type\":\"flags.8?NotificationSound\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":-1721619444,\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"ios_sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"android_sound\",\"type\":\"flags.4?NotificationSound\"},{\"name\":\"other_sound\",\"type\":\"flags.5?NotificationSound\"},{\"name\":\"stories_muted\",\"type\":\"flags.6?Bool\"},{\"name\":\"stories_hide_sender\",\"type\":\"flags.7?Bool\"},{\"name\":\"stories_ios_sound\",\"type\":\"flags.8?NotificationSound\"},{\"name\":\"stories_android_sound\",\"type\":\"flags.9?NotificationSound\"},{\"name\":\"stories_other_sound\",\"type\":\"flags.10?NotificationSound\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-1525149427,\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"},{\"name\":\"autoarchived\",\"type\":\"flags.7?true\"},{\"name\":\"invite_members\",\"type\":\"flags.8?true\"},{\"name\":\"request_chat_broadcast\",\"type\":\"flags.10?true\"},{\"name\":\"geo_distance\",\"type\":\"flags.6?int\"},{\"name\":\"request_chat_title\",\"type\":\"flags.9?string\"},{\"name\":\"request_chat_date\",\"type\":\"flags.9?int\"}],\"type\":\"PeerSettings\"},{\"id\":-1539849235,\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1490799288,\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":505595789,\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":777640226,\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1376497949,\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1041980751,\"predicate\":\"inputReportReasonOther\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1179571092,\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"video_calls_available\",\"type\":\"flags.13?true\"},{\"name\":\"voice_messages_forbidden\",\"type\":\"flags.20?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags.23?true\"},{\"name\":\"stories_pinned_available\",\"type\":\"flags.26?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.27?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"personal_photo\",\"type\":\"flags.21?Photo\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"fallback_photo\",\"type\":\"flags.22?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.15?string\"},{\"name\":\"private_forward_name\",\"type\":\"flags.16?string\"},{\"name\":\"bot_group_admin_rights\",\"type\":\"flags.17?ChatAdminRights\"},{\"name\":\"bot_broadcast_admin_rights\",\"type\":\"flags.18?ChatAdminRights\"},{\"name\":\"premium_gifts\",\"type\":\"flags.19?Vector<PremiumGiftOption>\"},{\"name\":\"wallpaper\",\"type\":\"flags.24?WallPaper\"},{\"name\":\"stories\",\"type\":\"flags.25?PeerStories\"}],\"type\":\"UserFull\"},{\"id\":341499403,\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":-1052885936,\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":383348795,\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":-1219778094,\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":-353862078,\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":2010127419,\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":182326673,\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":-513392236,\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":364538944,\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":1910543603,\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1938715001,\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":978610270,\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1694474197,\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-438840932,\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1269012015,\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1474492012,\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1777752804,\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1614803355,\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1458172132,\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1629621880,\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2129714567,\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-3644025,\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":522914557,\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1318109142,\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1576161051,\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1071741569,\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-2092401936,\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":125178264,\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":-440534818,\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":-1484486364,\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"usernames\",\"type\":\"Vector<Username>\"}],\"type\":\"Update\"},{\"id\":-1991136273,\"predicate\":\"updateNewAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unconfirmed\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"flags.0?int\"},{\"name\":\"device\",\"type\":\"flags.0?string\"},{\"name\":\"location\",\"type\":\"flags.0?string\"}],\"type\":\"Update\"},{\"id\":-1519637954,\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":1567990072,\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":16030880,\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-1459938943,\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-484987010,\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":826001400,\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":1299050149,\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":2027216577,\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1918567619,\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1957577280,\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1916114267,\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":352657236,\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":539045032,\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":157948117,\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":414687501,\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"this_port_only\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":-870702050,\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"force_try_ipv6\",\"type\":\"flags.14?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"reactions_default\",\"type\":\"flags.15?Reaction\"},{\"name\":\"autologin_token\",\"type\":\"flags.16?string\"}],\"type\":\"Config\"},{\"id\":-1910892683,\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":-860107216,\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"sticker\",\"type\":\"flags.3?Document\"}],\"type\":\"help.AppUpdate\"},{\"id\":-1000708810,\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":415997816,\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":314359194,\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":386986326,\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1264392051,\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":956179895,\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1417756512,\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":1722964307,\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":1223809356,\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1643173063,\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":505183301,\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"history_deleted\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":-247351839,\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":-1038136962,\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":-1476358952,\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":406307684,\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":1690108678,\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1511503333,\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":-182231723,\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-317144808,\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":594758406,\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":-1058912715,\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":740433629,\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":1443858741,\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-1802240206,\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-95482955,\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":767652808,\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1037718609,\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-483443337,\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1906403213,\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":1530447553,\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"force_file\",\"type\":\"flags.4?true\"},{\"name\":\"spoiler\",\"type\":\"flags.5?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":860303448,\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"query\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":1291114285,\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nopremium\",\"type\":\"flags.3?true\"},{\"name\":\"spoiler\",\"type\":\"flags.4?true\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"alt_document\",\"type\":\"flags.5?Document\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1928391342,\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":448771445,\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":-1160743548,\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":922273905,\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":-1881881384,\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"video_thumbs\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":398898678,\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":-1613493288,\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":-1261946036,\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1073230141,\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1094555409,\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":381645902,\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-44119819,\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1584933265,\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-378127636,\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-718310409,\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-212740181,\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-774682074,\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1441998364,\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":393186209,\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1653390447,\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1290580579,\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":-337352679,\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"invert_media\",\"type\":\"flags.2?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":-496024847,\"predicate\":\"userStatusRecently\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":129960444,\"predicate\":\"userStatusLastWeek\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":2011940674,\"predicate\":\"userStatusLastMonth\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-298113238,\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":1335282456,\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1137792208,\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":218751099,\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":407582158,\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":320652927,\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":195371015,\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-697604407,\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-1877932953,\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-123988,\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1698855810,\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1198497870,\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-125240806,\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1955338397,\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-463335103,\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1352683077,\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1194283041,\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":88680979,\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1815593308,\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":297109817,\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1662637586,\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":-745541182,\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"nosound\",\"type\":\"flags.3?true\"},{\"name\":\"duration\",\"type\":\"double\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"preload_prefix_size\",\"type\":\"flags.2?int\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1739392570,\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":358154344,\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-244016606,\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":816245886,\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":313694676,\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":-395967805,\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":-843329861,\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":-1667805217,\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":791617983,\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-2066640507,\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":2139689491,\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":555358088,\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"flags.0?string\"}],\"type\":\"WebPage\"},{\"id\":-1328464313,\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-392411726,\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_large_media\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":-571405253,\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force_large_media\",\"type\":\"flags.0?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.1?true\"},{\"name\":\"manual\",\"type\":\"flags.3?true\"},{\"name\":\"safe\",\"type\":\"flags.4?true\"},{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":-1392388579,\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.3?true\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.4?true\"},{\"name\":\"unconfirmed\",\"type\":\"flags.5?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":1275039392,\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"},{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":-1787080453,\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"},{\"name\":\"pending_reset_date\",\"type\":\"flags.5?int\"},{\"name\":\"login_email_pattern\",\"type\":\"flags.6?string\"}],\"type\":\"account.Password\"},{\"id\":-1705233435,\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1036572727,\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":326715557,\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":-1052959727,\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":784356159,\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1551583367,\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":179611673,\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"permanent\",\"type\":\"flags.5?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"start_date\",\"type\":\"flags.4?int\"},{\"name\":\"expire_date\",\"type\":\"flags.1?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.2?int\"},{\"name\":\"usage\",\"type\":\"flags.3?int\"},{\"name\":\"requested\",\"type\":\"flags.7?int\"},{\"name\":\"title\",\"type\":\"flags.8?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1516793212,\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":-840897472,\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"scam\",\"type\":\"flags.8?true\"},{\"name\":\"fake\",\"type\":\"flags.9?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"flags.5?string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":51520707,\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-131960447,\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-4838507,\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1645763991,\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":-2044933984,\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":768691932,\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"animated\",\"type\":\"flags.5?true\"},{\"name\":\"videos\",\"type\":\"flags.6?true\"},{\"name\":\"emojis\",\"type\":\"flags.7?true\"},{\"name\":\"text_color\",\"type\":\"flags.9?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumbs\",\"type\":\"flags.4?Vector<PhotoSize>\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_version\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_document_id\",\"type\":\"flags.8?long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":1846886166,\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":-346018011,\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"apply_min_photo\",\"type\":\"flags.25?true\"},{\"name\":\"fake\",\"type\":\"flags.26?true\"},{\"name\":\"bot_attach_menu\",\"type\":\"flags.27?true\"},{\"name\":\"premium\",\"type\":\"flags.28?true\"},{\"name\":\"attach_menu_enabled\",\"type\":\"flags.29?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"bot_can_edit\",\"type\":\"flags2.1?true\"},{\"name\":\"close_friend\",\"type\":\"flags2.2?true\"},{\"name\":\"stories_hidden\",\"type\":\"flags2.3?true\"},{\"name\":\"stories_unavailable\",\"type\":\"flags2.4?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"},{\"name\":\"emoji_status\",\"type\":\"flags.30?EmojiStatus\"},{\"name\":\"usernames\",\"type\":\"flags2.0?Vector<Username>\"},{\"name\":\"stories_max_id\",\"type\":\"flags2.5?int\"},{\"name\":\"color\",\"type\":\"flags2.7?int\"},{\"name\":\"background_emoji_id\",\"type\":\"flags2.6?long\"}],\"type\":\"User\"},{\"id\":-1032140601,\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":-1892676777,\"predicate\":\"botInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"flags.0?long\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"description_photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"description_document\",\"type\":\"flags.5?Document\"},{\"name\":\"commands\",\"type\":\"flags.2?Vector<BotCommand>\"},{\"name\":\"menu_button\",\"type\":\"flags.3?BotMenuButton\"}],\"type\":\"BotInfo\"},{\"id\":-1560655744,\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":2002815875,\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":-1606526075,\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2035021048,\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2049074735,\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"persistent\",\"type\":\"flags.4?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-571955892,\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-233744186,\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":-1148011883,\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-100378723,\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1868782349,\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1827637959,\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1859134776,\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1692693954,\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1117713463,\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-2106619040,\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":681706865,\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1938967520,\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":1990644519,\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":-1877614335,\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":-292807034,\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":-212145112,\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1566230754,\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":666680316,\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":427944574,\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"fake\",\"type\":\"flags.25?true\"},{\"name\":\"gigagroup\",\"type\":\"flags.26?true\"},{\"name\":\"noforwards\",\"type\":\"flags.27?true\"},{\"name\":\"join_to_send\",\"type\":\"flags.28?true\"},{\"name\":\"join_request\",\"type\":\"flags.29?true\"},{\"name\":\"forum\",\"type\":\"flags.30?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"stories_hidden\",\"type\":\"flags2.1?true\"},{\"name\":\"stories_hidden_min\",\"type\":\"flags2.2?true\"},{\"name\":\"stories_unavailable\",\"type\":\"flags2.3?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"},{\"name\":\"usernames\",\"type\":\"flags2.0?Vector<Username>\"},{\"name\":\"stories_max_id\",\"type\":\"flags2.4?int\"},{\"name\":\"color\",\"type\":\"flags2.6?int\"},{\"name\":\"background_emoji_id\",\"type\":\"flags2.5?long\"}],\"type\":\"Chat\"},{\"id\":399807445,\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":2131196633,\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":1915758525,\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.20?true\"},{\"name\":\"blocked\",\"type\":\"flags.22?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"can_delete_channel\",\"type\":\"flags2.0?true\"},{\"name\":\"antispam\",\"type\":\"flags2.1?true\"},{\"name\":\"participants_hidden\",\"type\":\"flags2.2?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags2.3?true\"},{\"name\":\"stories_pinned_available\",\"type\":\"flags2.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.23?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?long\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?long\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"call\",\"type\":\"flags.21?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.24?int\"},{\"name\":\"pending_suggestions\",\"type\":\"flags.25?Vector<string>\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.26?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.27?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.28?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.28?Vector<long>\"},{\"name\":\"default_send_as\",\"type\":\"flags.29?Peer\"},{\"name\":\"available_reactions\",\"type\":\"flags.30?ChatReactions\"},{\"name\":\"stories\",\"type\":\"flags2.4?PeerStories\"}],\"type\":\"ChatFull\"},{\"id\":182649427,\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":-948520370,\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"topics\",\"type\":\"Vector<ForumTopic>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":-1781355374,\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":277713951,\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1666927625,\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1656358105,\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1842450928,\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1020437742,\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-232346616,\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1041346555,\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1531132162,\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":543450958,\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1798033689,\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":-847783593,\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":-1072953408,\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":900251559,\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_request\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":803602899,\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":-566281095,\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1268741783,\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1548400251,\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1699676497,\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-541588713,\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":-462696732,\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"ChatParticipant\"},{\"id\":-1600962725,\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-674602590,\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-519864430,\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-365344535,\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1328445861,\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":2013922064,\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":1753886890,\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":196268545,\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":834816008,\"predicate\":\"updateStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"}],\"type\":\"Update\"},{\"id\":-402498398,\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":-2069878259,\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":-1821035490,\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":864077702,\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1036876423,\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2000710887,\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1984755728,\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1937807902,\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":295067450,\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-534646026,\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"switch_webview\",\"type\":\"flags.3?InlineBotWebView\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":1232025500,\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"peer_type\",\"type\":\"flags.1?InlineQueryPeerType\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":317794823,\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":1358283666,\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":928101534,\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1107622874,\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1343122938,\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1571494644,\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1601666510,\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"imported\",\"type\":\"flags.7?true\"},{\"name\":\"from_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"psa_type\",\"type\":\"flags.6?string\"}],\"type\":\"MessageFwdHeader\"},{\"id\":457133559,\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1799538451,\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1923290508,\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1948046307,\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":577556219,\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1035688326,\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1073693790,\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1398007207,\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1425815847,\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":629866245,\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":901503851,\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requires_password\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":-1318425559,\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-59151553,\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1816527947,\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"peer_types\",\"type\":\"flags.1?Vector<InlineQueryPeerType>\"}],\"type\":\"KeyboardButton\"},{\"id\":1218642516,\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":911761060,\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-1177566067,\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":649453030,\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-469536605,\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1768777083,\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1098628881,\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1494368259,\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":85477117,\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1970903652,\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":416402882,\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1462213465,\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-459324,\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":400266251,\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1995686519,\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":1763610706,\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":1008755359,\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":863093588,\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-305282981,\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":-1419371685,\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":344356834,\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":104314861,\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1122524854,\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":371037736,\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-75283823,\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":-567906571,\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":1891070632,\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":-595914432,\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":546203849,\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":975236280,\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1218471511,\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":457829485,\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":453805082,\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":1070397423,\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.6?true\"},{\"name\":\"reply_to\",\"type\":\"flags.4?InputReplyTo\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"media\",\"type\":\"flags.5?InputMedia\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"DraftMessage\"},{\"id\":-1615153660,\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-958657434,\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1103615738,\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1461528386,\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":186120336,\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":-1999405994,\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":-1706939360,\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1338747336,\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":946083368,\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":904138920,\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":1678812626,\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1574314746,\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":861169551,\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":-440664550,\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-78455655,\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":872932635,\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1361650766,\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":-1744710921,\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1251549527,\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":70813275,\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":-1107729093,\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":1336154098,\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1262639204,\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-38694904,\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":-750828557,\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":53231223,\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":-1020139510,\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":1358175439,\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1834538890,\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1940093419,\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":-1707344487,\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":1258196845,\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":791390623,\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1663561404,\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-599948721,\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":1950782688,\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":1730456516,\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-653089380,\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1054465340,\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1678197867,\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1816074681,\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1009288385,\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":-564523562,\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":2120376535,\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":324435594,\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":1890305021,\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1879401953,\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1162877472,\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":-1076861716,\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-248793375,\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1182402406,\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1066346178,\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":1216809369,\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-618614392,\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":-837994576,\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":-454524911,\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":641563686,\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1329878739,\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":391759200,\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":2089805750,\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":972174080,\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":-1468953147,\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-229005301,\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1705048653,\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":52401552,\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1930545681,\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":-88417185,\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1030105979,\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-580219064,\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-2048646399,\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-527056480,\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1471006352,\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-84416311,\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1852826908,\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-99664734,\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":2104790276,\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":-2095595325,\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-1684914010,\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-886477832,\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":1572428309,\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"recurring\",\"type\":\"flags.9?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"},{\"name\":\"max_tip_amount\",\"type\":\"flags.8?long\"},{\"name\":\"suggested_tip_amounts\",\"type\":\"flags.8?Vector<long>\"},{\"name\":\"terms_url\",\"type\":\"flags.10?string\"}],\"type\":\"Invoice\"},{\"id\":-1900697899,\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"extended_media\",\"type\":\"flags.2?InputMedia\"}],\"type\":\"InputMedia\"},{\"id\":-368917890,\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":-1892568281,\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":-156940077,\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"},{\"name\":\"extended_media\",\"type\":\"flags.4?MessageExtendedMedia\"}],\"type\":\"MessageMedia\"},{\"id\":512535275,\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":-1868808300,\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":-1344716869,\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1776926890,\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"invoice_slug\",\"type\":\"flags.0?string\"}],\"type\":\"MessageAction\"},{\"id\":-842892769,\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":475467473,\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-1678949555,\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":-1036396922,\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":568808380,\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":-1610250415,\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"additional_methods\",\"type\":\"flags.6?Vector<PaymentFormMethod>\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?Vector<PaymentSavedCredentials>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-784000893,\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":1314881805,\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1891958275,\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"tip_amount\",\"type\":\"flags.3?long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-74456004,\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":-1056001329,\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":873977640,\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-614138572,\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":-1239335713,\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":-1246823043,\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":-1934976362,\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":853188252,\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"},{\"name\":\"keywords\",\"type\":\"flags.1?string\"}],\"type\":\"InputStickerSetItem\"},{\"id\":-1425052898,\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":506920429,\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":1399245077,\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":-987599081,\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"}],\"type\":\"PhoneCall\"},{\"id\":347139340,\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":912311057,\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":-1770029977,\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"}],\"type\":\"PhoneCall\"},{\"id\":1355435489,\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"PhoneCall\"},{\"id\":-1665063993,\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"tcp\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":-58224696,\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":-326966976,\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":-2134272152,\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":-2132731265,\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":2054952868,\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1253451181,\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1997373508,\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":608050278,\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-242427324,\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":-290921362,\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1449145777,\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-914167110,\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":1462101002,\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":-283684427,\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":-892239370,\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":1816636575,\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":695856818,\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":-209337866,\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":-288727837,\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":1180041828,\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1442983757,\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":885242707,\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?long\"},{\"name\":\"promoted_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":1844969806,\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"kicked_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":338142689,\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":106343499,\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-421545947,\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1427671598,\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1783299128,\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1129042607,\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":460916654,\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":648939889,\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-370660328,\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1889215493,\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1121994683,\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":405815507,\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-124291086,\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-484690728,\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-422036098,\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-714643696,\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":531458253,\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":-309659827,\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-368018716,\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"},{\"name\":\"group_call\",\"type\":\"flags.14?true\"},{\"name\":\"invites\",\"type\":\"flags.15?true\"},{\"name\":\"send\",\"type\":\"flags.16?true\"},{\"name\":\"forums\",\"type\":\"flags.17?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":511092620,\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-2143067670,\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1558266229,\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":1200788123,\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1634752813,\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":750063767,\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-451831443,\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-366410403,\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-1040652646,\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1887741886,\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":-1312568665,\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-85549226,\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":178373535,\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-419271411,\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-530392189,\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1304443240,\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1599903217,\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1759532989,\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.2?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":-1186937242,\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.1?int\"}],\"type\":\"MessageMedia\"},{\"id\":1189204285,\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1188296222,\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1294306862,\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-347535331,\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1140172836,\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":235081943,\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-266911767,\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":1951620897,\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":482797855,\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":-1493633966,\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":-313079300,\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":-1502174430,\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-1160215659,\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-2037963464,\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":-1687559349,\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1280209983,\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-988359047,\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attach_menu\",\"type\":\"flags.1?true\"},{\"name\":\"from_request\",\"type\":\"flags.3?true\"},{\"name\":\"domain\",\"type\":\"flags.0?string\"},{\"name\":\"app\",\"type\":\"flags.2?BotApp\"}],\"type\":\"MessageAction\"},{\"id\":-55902537,\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":-445792507,\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":223655517,\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1963942446,\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-207944868,\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":-104284986,\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":1968737087,\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":-483352705,\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":686618977,\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":859091184,\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":1399317950,\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":-876089816,\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":1679398724,\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":2097791614,\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":-1964327229,\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":2103482845,\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":569137759,\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":-1658158621,\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":1034709504,\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":115615172,\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1596951477,\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1717268701,\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-874308058,\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-63531698,\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1995211763,\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1954007928,\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1713143702,\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-368907213,\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1289704741,\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1908627474,\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":411017418,\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":-618540889,\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":-316748368,\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":-391902247,\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":12467706,\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2037765467,\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-449327402,\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":2054162547,\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":1717706985,\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":871426631,\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":-1389486888,\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-2128640689,\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":455635795,\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":-648257196,\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":1722786150,\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":1783556146,\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":289586518,\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":1304052993,\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":700340377,\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":-513517117,\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-253500010,\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1625153079,\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":-1255369827,\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":-1685456582,\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-732254058,\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":4883767,\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-1141711456,\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-2042159726,\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":354925740,\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":982592842,\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":-1736378792,\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-763367294,\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-2036501105,\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-1592506512,\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":878931416,\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2103600678,\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":41187252,\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":-1078332329,\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":-1600596305,\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":488313413,\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":-1059185703,\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":1064139624,\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":-952869270,\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":736157604,\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":-1222740358,\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":-146520221,\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1715350371,\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1311015810,\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-703403793,\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-311786236,\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-939827711,\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":55281185,\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":483104362,\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":136105807,\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":504660880,\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":878078826,\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":-524237339,\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":-1085412734,\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":1869903447,\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":-1188055347,\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":635466748,\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":1577484359,\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1730311882,\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1702174239,\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":1987480557,\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1282352120,\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":370236054,\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":-1538310410,\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-1738178803,\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":-610373422,\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":961092808,\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":894777186,\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":-1945767479,\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":-206688531,\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":32192344,\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":-202219658,\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1398708869,\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":1823064809,\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":-2032041631,\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"string\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":997055186,\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":2061444128,\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<Peer>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":261416433,\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":1272375192,\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":-264117680,\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":1202287072,\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":-525288402,\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":1605510357,\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"},{\"name\":\"anonymous\",\"type\":\"flags.10?true\"},{\"name\":\"manage_call\",\"type\":\"flags.11?true\"},{\"name\":\"other\",\"type\":\"flags.12?true\"},{\"name\":\"manage_topics\",\"type\":\"flags.13?true\"},{\"name\":\"post_stories\",\"type\":\"flags.14?true\"},{\"name\":\"edit_stories\",\"type\":\"flags.15?true\"},{\"name\":\"delete_stories\",\"type\":\"flags.16?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":-1626209256,\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"manage_topics\",\"type\":\"flags.18?true\"},{\"name\":\"send_photos\",\"type\":\"flags.19?true\"},{\"name\":\"send_videos\",\"type\":\"flags.20?true\"},{\"name\":\"send_roundvideos\",\"type\":\"flags.21?true\"},{\"name\":\"send_audios\",\"type\":\"flags.22?true\"},{\"name\":\"send_voices\",\"type\":\"flags.23?true\"},{\"name\":\"send_docs\",\"type\":\"flags.24?true\"},{\"name\":\"send_plain\",\"type\":\"flags.25?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":1421875280,\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-433014407,\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":1913199744,\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":-1150621555,\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":771095562,\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1895328189,\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":471437699,\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":-842824308,\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":-1390068360,\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"},{\"name\":\"allow_missed_call\",\"type\":\"flags.5?true\"},{\"name\":\"allow_firebase\",\"type\":\"flags.7?true\"},{\"name\":\"logout_tokens\",\"type\":\"flags.6?Vector<bytes>\"},{\"name\":\"token\",\"type\":\"flags.8?string\"},{\"name\":\"app_sandbox\",\"type\":\"flags.8?Bool\"}],\"type\":\"CodeSettings\"},{\"id\":499236004,\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"third_background_color\",\"type\":\"flags.5?int\"},{\"name\":\"fourth_background_color\",\"type\":\"flags.6?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"}],\"type\":\"WallPaperSettings\"},{\"id\":-1163561432,\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"stories_preload\",\"type\":\"flags.4?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"long\"},{\"name\":\"file_size_max\",\"type\":\"long\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"},{\"name\":\"small_queue_active_operations_max\",\"type\":\"int\"},{\"name\":\"large_queue_active_operations_max\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":1674235686,\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":-709641735,\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":594408994,\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":1556570557,\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":-1519029347,\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":-1275374751,\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":-1529000952,\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1777096355,\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1461304012,\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1777000467,\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1075322878,\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-667654413,\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":925204121,\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1652231205,\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb_version\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":-11252123,\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":1908216652,\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":1684014375,\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":1363483106,\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":-70073706,\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":-373643672,\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":422972864,\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":497305826,\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":1536380829,\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1468331492,\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1121318848,\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":55761658,\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-778378131,\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1472172887,\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-68239120,\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":84703944,\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-398136321,\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":280464681,\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":-802258988,\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":-1831650802,\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1886646706,\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1445536993,\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":-2079962673,\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-380694650,\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":1796427406,\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1103656293,\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-1672577397,\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1090087980,\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1786671974,\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":-1078612597,\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":547062491,\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":-901375139,\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-1263546448,\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":241923758,\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-606798099,\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":1401984889,\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1148485274,\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":-666824391,\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":42402760,\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":967122427,\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":-1870238482,\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-797791052,\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":1012306921,\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":-175567375,\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":-1609668650,\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"for_chat\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<ThemeSettings>\"},{\"name\":\"emoticon\",\"type\":\"flags.6?string\"},{\"name\":\"installs_count\",\"type\":\"flags.4?int\"}],\"type\":\"Theme\"},{\"id\":-199313886,\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":-1707242387,\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":-2112423005,\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":-786326563,\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1124062251,\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-2027964103,\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1448076945,\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":1654593920,\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":110008598,\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":957176926,\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":1474462241,\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":-1456996667,\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":-1012849566,\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-69724536,\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1212997976,\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1834973166,\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1527845466,\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1770371538,\"predicate\":\"inputWallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":-528465642,\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":-1881255857,\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":-94849324,\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":1421174295,\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":619974263,\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1218005070,\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessagePeerVote>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":-1144565411,\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1981704948,\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-177732982,\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":1042605427,\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":-118740917,\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":1949890536,\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":2004110666,\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":654302845,\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":-1512627963,\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":889491791,\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":-1237848657,\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":-884757282,\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":-875679776,\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":1244130093,\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1092839390,\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1901828938,\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":-1387279939,\"predicate\":\"messageInteractionCounters\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"MessageInteractionCounters\"},{\"id\":-1107852396,\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_message_interactions\",\"type\":\"Vector<MessageInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":-428884101,\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":1065280907,\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-427863538,\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":-1728664459,\"predicate\":\"help.promoDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.PromoData\"},{\"id\":-1942390465,\"predicate\":\"help.promoData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"proxy\",\"type\":\"flags.0?true\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"psa_type\",\"type\":\"flags.1?string\"},{\"name\":\"psa_message\",\"type\":\"flags.2?string\"}],\"type\":\"help.PromoData\"},{\"id\":-567037804,\"predicate\":\"videoSize\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.0?double\"}],\"type\":\"VideoSize\"},{\"id\":643940105,\"predicate\":\"updatePhoneCallSignalingData\",\"params\":[{\"name\":\"phone_call_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Update\"},{\"id\":1634294960,\"predicate\":\"chatInvitePeek\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":-1660637285,\"predicate\":\"statsGroupTopPoster\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"int\"},{\"name\":\"avg_chars\",\"type\":\"int\"}],\"type\":\"StatsGroupTopPoster\"},{\"id\":-682079097,\"predicate\":\"statsGroupTopAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"deleted\",\"type\":\"int\"},{\"name\":\"kicked\",\"type\":\"int\"},{\"name\":\"banned\",\"type\":\"int\"}],\"type\":\"StatsGroupTopAdmin\"},{\"id\":1398765469,\"predicate\":\"statsGroupTopInviter\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"invitations\",\"type\":\"int\"}],\"type\":\"StatsGroupTopInviter\"},{\"id\":-276825834,\"predicate\":\"stats.megagroupStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"members\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"messages\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"viewers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"posters\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"members_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_members_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"messages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"actions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"weekdays_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_posters\",\"type\":\"Vector<StatsGroupTopPoster>\"},{\"name\":\"top_admins\",\"type\":\"Vector<StatsGroupTopAdmin>\"},{\"name\":\"top_inviters\",\"type\":\"Vector<StatsGroupTopInviter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":1934380235,\"predicate\":\"globalPrivacySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archive_and_mute_new_noncontact_peers\",\"type\":\"flags.0?true\"},{\"name\":\"keep_archived_unmuted\",\"type\":\"flags.1?true\"},{\"name\":\"keep_archived_folders\",\"type\":\"flags.2?true\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":1667228533,\"predicate\":\"phoneConnectionWebrtc\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"turn\",\"type\":\"flags.0?true\"},{\"name\":\"stun\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"type\":\"PhoneConnection\"},{\"id\":1107543535,\"predicate\":\"help.countryCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_code\",\"type\":\"string\"},{\"name\":\"prefixes\",\"type\":\"flags.0?Vector<string>\"},{\"name\":\"patterns\",\"type\":\"flags.1?Vector<string>\"}],\"type\":\"help.CountryCode\"},{\"id\":-1014526429,\"predicate\":\"help.country\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"iso2\",\"type\":\"string\"},{\"name\":\"default_name\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.1?string\"},{\"name\":\"country_codes\",\"type\":\"Vector<help.CountryCode>\"}],\"type\":\"help.Country\"},{\"id\":-1815339214,\"predicate\":\"help.countriesListNotModified\",\"params\":[],\"type\":\"help.CountriesList\"},{\"id\":-2016381538,\"predicate\":\"help.countriesList\",\"params\":[{\"name\":\"countries\",\"type\":\"Vector<help.Country>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":1163625789,\"predicate\":\"messageViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"views\",\"type\":\"flags.0?int\"},{\"name\":\"forwards\",\"type\":\"flags.1?int\"},{\"name\":\"replies\",\"type\":\"flags.2?MessageReplies\"}],\"type\":\"MessageViews\"},{\"id\":-761649164,\"predicate\":\"updateChannelMessageForwards\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-96535659,\"predicate\":\"photoSizeProgressive\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<int>\"}],\"type\":\"PhotoSize\"},{\"id\":-1228606141,\"predicate\":\"messages.messageViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<MessageViews>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.MessageViews\"},{\"id\":-693004986,\"predicate\":\"updateReadChannelDiscussionInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"},{\"name\":\"broadcast_id\",\"type\":\"flags.0?long\"},{\"name\":\"broadcast_post\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1767677564,\"predicate\":\"updateReadChannelDiscussionOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1506535550,\"predicate\":\"messages.discussionMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"max_id\",\"type\":\"flags.0?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"flags.1?int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"flags.2?int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":1860946621,\"predicate\":\"messageReplyHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_scheduled\",\"type\":\"flags.2?true\"},{\"name\":\"forum_topic\",\"type\":\"flags.3?true\"},{\"name\":\"quote\",\"type\":\"flags.9?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"reply_from\",\"type\":\"flags.5?MessageFwdHeader\"},{\"name\":\"reply_media\",\"type\":\"flags.8?MessageMedia\"},{\"name\":\"reply_to_top_id\",\"type\":\"flags.1?int\"},{\"name\":\"quote_text\",\"type\":\"flags.6?string\"},{\"name\":\"quote_entities\",\"type\":\"flags.7?Vector<MessageEntity>\"}],\"type\":\"MessageReplyHeader\"},{\"id\":-2083123262,\"predicate\":\"messageReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"comments\",\"type\":\"flags.0?true\"},{\"name\":\"replies\",\"type\":\"int\"},{\"name\":\"replies_pts\",\"type\":\"int\"},{\"name\":\"recent_repliers\",\"type\":\"flags.1?Vector<Peer>\"},{\"name\":\"channel_id\",\"type\":\"flags.0?long\"},{\"name\":\"max_id\",\"type\":\"flags.2?int\"},{\"name\":\"read_max_id\",\"type\":\"flags.3?int\"}],\"type\":\"MessageReplies\"},{\"id\":-337610926,\"predicate\":\"updatePeerBlocked\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.1?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"}],\"type\":\"Update\"},{\"id\":-386039788,\"predicate\":\"peerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PeerBlocked\"},{\"id\":-1937192669,\"predicate\":\"updateChannelUserTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-1392895362,\"predicate\":\"inputMessageCallbackQuery\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"InputMessage\"},{\"id\":453242886,\"predicate\":\"channelParticipantLeft\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"ChannelParticipant\"},{\"id\":-531931925,\"predicate\":\"channelParticipantsMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-309990731,\"predicate\":\"updatePinnedMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1538885128,\"predicate\":\"updatePinnedChannelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":464520273,\"predicate\":\"inputMessagesFilterPinned\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1986399595,\"predicate\":\"stats.messageStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.MessageStats\"},{\"id\":-1730095465,\"predicate\":\"messageActionGeoProximityReached\",\"params\":[{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-668906175,\"predicate\":\"photoPathSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-651419003,\"predicate\":\"speakingInGroupCallAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":2004925620,\"predicate\":\"groupCallDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-711498484,\"predicate\":\"groupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join_muted\",\"type\":\"flags.1?true\"},{\"name\":\"can_change_join_muted\",\"type\":\"flags.2?true\"},{\"name\":\"join_date_asc\",\"type\":\"flags.6?true\"},{\"name\":\"schedule_start_subscribed\",\"type\":\"flags.8?true\"},{\"name\":\"can_start_video\",\"type\":\"flags.9?true\"},{\"name\":\"record_video_active\",\"type\":\"flags.11?true\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.12?true\"},{\"name\":\"listeners_hidden\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.3?string\"},{\"name\":\"stream_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"record_start_date\",\"type\":\"flags.5?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.7?int\"},{\"name\":\"unmuted_video_count\",\"type\":\"flags.10?int\"},{\"name\":\"unmuted_video_limit\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-659913713,\"predicate\":\"inputGroupCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGroupCall\"},{\"id\":2047704898,\"predicate\":\"messageActionGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"duration\",\"type\":\"flags.0?int\"}],\"type\":\"MessageAction\"},{\"id\":1345295095,\"predicate\":\"messageActionInviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-341428482,\"predicate\":\"groupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.1?true\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.2?true\"},{\"name\":\"just_joined\",\"type\":\"flags.4?true\"},{\"name\":\"versioned\",\"type\":\"flags.5?true\"},{\"name\":\"min\",\"type\":\"flags.8?true\"},{\"name\":\"muted_by_you\",\"type\":\"flags.9?true\"},{\"name\":\"volume_by_admin\",\"type\":\"flags.10?true\"},{\"name\":\"self\",\"type\":\"flags.12?true\"},{\"name\":\"video_joined\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"active_date\",\"type\":\"flags.3?int\"},{\"name\":\"source\",\"type\":\"int\"},{\"name\":\"volume\",\"type\":\"flags.7?int\"},{\"name\":\"about\",\"type\":\"flags.11?string\"},{\"name\":\"raise_hand_rating\",\"type\":\"flags.13?long\"},{\"name\":\"video\",\"type\":\"flags.6?GroupCallParticipantVideo\"},{\"name\":\"presentation\",\"type\":\"flags.14?GroupCallParticipantVideo\"}],\"type\":\"GroupCallParticipant\"},{\"id\":-124097970,\"predicate\":\"updateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-219423922,\"predicate\":\"updateGroupCallParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":347227392,\"predicate\":\"updateGroupCall\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"call\",\"type\":\"GroupCall\"}],\"type\":\"Update\"},{\"id\":-1636664659,\"predicate\":\"phone.groupCall\",\"params\":[{\"name\":\"call\",\"type\":\"GroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"participants_next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.GroupCall\"},{\"id\":-193506890,\"predicate\":\"phone.groupParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":813821341,\"predicate\":\"inlineQueryPeerTypeSameBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-2093215828,\"predicate\":\"inlineQueryPeerTypePM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-681130742,\"predicate\":\"inlineQueryPeerTypeChat\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1589952067,\"predicate\":\"inlineQueryPeerTypeMegagroup\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1664413338,\"predicate\":\"inlineQueryPeerTypeBroadcast\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":589338437,\"predicate\":\"channelAdminLogEventActionStartGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-610299584,\"predicate\":\"channelAdminLogEventActionDiscardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-115071790,\"predicate\":\"channelAdminLogEventActionParticipantMute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-431740480,\"predicate\":\"channelAdminLogEventActionParticipantUnmute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1456906823,\"predicate\":\"channelAdminLogEventActionToggleGroupCallSetting\",\"params\":[{\"name\":\"join_muted\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1966921727,\"predicate\":\"inputPaymentCredentialsGooglePay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":375566091,\"predicate\":\"messages.historyImport\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"messages.HistoryImport\"},{\"id\":-606432698,\"predicate\":\"sendMessageHistoryImportAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":1578088377,\"predicate\":\"messages.historyImportParsed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pm\",\"type\":\"flags.0?true\"},{\"name\":\"group\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"flags.2?string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":-170010905,\"predicate\":\"inputReportReasonFake\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-275956116,\"predicate\":\"messages.affectedFoundMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1007897979,\"predicate\":\"messageActionSetMessagesTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"auto_setting_from\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":-1147422299,\"predicate\":\"updatePeerHistoryTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-796432838,\"predicate\":\"updateChatParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChatParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChatParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1738720581,\"predicate\":\"updateChannelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_chatlist\",\"type\":\"flags.3?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChannelParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-997782967,\"predicate\":\"updateBotStopped\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"stopped\",\"type\":\"Bool\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1940201511,\"predicate\":\"chatInviteImporter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"via_chatlist\",\"type\":\"flags.3?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"flags.2?string\"},{\"name\":\"approved_by\",\"type\":\"flags.1?long\"}],\"type\":\"ChatInviteImporter\"},{\"id\":-1111085620,\"predicate\":\"messages.exportedChatInvites\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"invites\",\"type\":\"Vector<ExportedChatInvite>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":410107472,\"predicate\":\"messages.exportedChatInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":572915951,\"predicate\":\"messages.exportedChatInviteReplaced\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-2118733814,\"predicate\":\"messages.chatInviteImporters\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"importers\",\"type\":\"Vector<ChatInviteImporter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-219353309,\"predicate\":\"chatAdminWithInvites\",\"params\":[{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"invites_count\",\"type\":\"int\"},{\"name\":\"revoked_invites_count\",\"type\":\"int\"}],\"type\":\"ChatAdminWithInvites\"},{\"id\":-1231326505,\"predicate\":\"messages.chatAdminsWithInvites\",\"params\":[{\"name\":\"admins\",\"type\":\"Vector<ChatAdminWithInvites>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-23084712,\"predicate\":\"channelAdminLogEventActionParticipantJoinByInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_chatlist\",\"type\":\"flags.0?true\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1515256996,\"predicate\":\"channelAdminLogEventActionExportedInviteDelete\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1091179342,\"predicate\":\"channelAdminLogEventActionExportedInviteRevoke\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-384910503,\"predicate\":\"channelAdminLogEventActionExportedInviteEdit\",\"params\":[{\"name\":\"prev_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1048537159,\"predicate\":\"channelAdminLogEventActionParticipantVolume\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1855199800,\"predicate\":\"channelAdminLogEventActionChangeHistoryTTL\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1571952873,\"predicate\":\"messages.checkedHistoryImportPeer\",\"params\":[{\"name\":\"confirm_text\",\"type\":\"string\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":93890858,\"predicate\":\"inputGroupCallStream\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"time_ms\",\"type\":\"long\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"video_channel\",\"type\":\"flags.0?int\"},{\"name\":\"video_quality\",\"type\":\"flags.0?int\"}],\"type\":\"InputFileLocation\"},{\"id\":-1343921601,\"predicate\":\"phone.joinAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":541839704,\"predicate\":\"phone.exportedGroupCallInvite\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":-672693723,\"predicate\":\"inputBotInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":894081801,\"predicate\":\"botInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1281329567,\"predicate\":\"messageActionGroupCallScheduled\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"schedule_date\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-592373577,\"predicate\":\"groupCallParticipantVideoSourceGroup\",\"params\":[{\"name\":\"semantics\",\"type\":\"string\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"GroupCallParticipantVideoSourceGroup\"},{\"id\":1735736008,\"predicate\":\"groupCallParticipantVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"paused\",\"type\":\"flags.0?true\"},{\"name\":\"endpoint\",\"type\":\"string\"},{\"name\":\"source_groups\",\"type\":\"Vector<GroupCallParticipantVideoSourceGroup>\"},{\"name\":\"audio_source\",\"type\":\"flags.1?int\"}],\"type\":\"GroupCallParticipantVideo\"},{\"id\":192428418,\"predicate\":\"updateGroupCallConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"presentation\",\"type\":\"flags.0?true\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-2046910401,\"predicate\":\"stickers.suggestedShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":795652779,\"predicate\":\"botCommandScopeDefault\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1011811544,\"predicate\":\"botCommandScopeUsers\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1877059713,\"predicate\":\"botCommandScopeChats\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-1180016534,\"predicate\":\"botCommandScopeChatAdmins\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-610432643,\"predicate\":\"botCommandScopePeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":1071145937,\"predicate\":\"botCommandScopePeerAdmins\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":169026035,\"predicate\":\"botCommandScopePeerUser\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotCommandScope\"},{\"id\":-478701471,\"predicate\":\"account.resetPasswordFailedWait\",\"params\":[{\"name\":\"retry_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-370148227,\"predicate\":\"account.resetPasswordRequestedWait\",\"params\":[{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-383330754,\"predicate\":\"account.resetPasswordOk\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1299263278,\"predicate\":\"updateBotCommands\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Update\"},{\"id\":-1434950843,\"predicate\":\"messageActionSetChatTheme\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1336228175,\"predicate\":\"sendMessageChooseStickerAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-626000021,\"predicate\":\"sponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recommended\",\"type\":\"flags.5?true\"},{\"name\":\"show_peer_photo\",\"type\":\"flags.6?true\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"from_id\",\"type\":\"flags.3?Peer\"},{\"name\":\"chat_invite\",\"type\":\"flags.4?ChatInvite\"},{\"name\":\"chat_invite_hash\",\"type\":\"flags.4?string\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"start_param\",\"type\":\"flags.0?string\"},{\"name\":\"webpage\",\"type\":\"flags.9?SponsoredWebPage\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"sponsor_info\",\"type\":\"flags.7?string\"},{\"name\":\"additional_info\",\"type\":\"flags.8?string\"}],\"type\":\"SponsoredMessage\"},{\"id\":-907141753,\"predicate\":\"messages.sponsoredMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"posts_between\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<SponsoredMessage>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":215889721,\"predicate\":\"inputStickerSetAnimatedEmojiAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":630664139,\"predicate\":\"sendMessageEmojiInteraction\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"interaction\",\"type\":\"DataJSON\"}],\"type\":\"SendMessageAction\"},{\"id\":-1234857938,\"predicate\":\"sendMessageEmojiInteractionSeen\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"SendMessageAction\"},{\"id\":-1227287081,\"predicate\":\"inputBotInlineMessageID64\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":-911191137,\"predicate\":\"searchResultsCalendarPeriod\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"max_msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SearchResultsCalendarPeriod\"},{\"id\":343859772,\"predicate\":\"messages.searchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.1?int\"},{\"name\":\"periods\",\"type\":\"Vector<SearchResultsCalendarPeriod>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":2137295719,\"predicate\":\"searchResultPosition\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"SearchResultsPosition\"},{\"id\":1404185519,\"predicate\":\"messages.searchResultsPositions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"positions\",\"type\":\"Vector<SearchResultsPosition>\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":-339958837,\"predicate\":\"messageActionChatJoinedByRequest\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1885586395,\"predicate\":\"updatePendingJoinRequests\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"requests_pending\",\"type\":\"int\"},{\"name\":\"recent_requesters\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":299870598,\"predicate\":\"updateBotChatInviteRequester\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1347021750,\"predicate\":\"channelAdminLogEventActionParticipantJoinByRequest\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"approved_by\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-376962181,\"predicate\":\"inputKeyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":814112961,\"predicate\":\"keyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"KeyboardButton\"},{\"id\":-191450938,\"predicate\":\"channels.sendAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<SendAsPeer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-886388890,\"predicate\":\"channelAdminLogEventActionToggleNoForwards\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-738646805,\"predicate\":\"messages.stickerSetNotModified\",\"params\":[],\"type\":\"messages.StickerSet\"},{\"id\":997004590,\"predicate\":\"users.userFull\",\"params\":[{\"name\":\"full_user\",\"type\":\"UserFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.UserFull\"},{\"id\":1753266509,\"predicate\":\"messages.peerSettings\",\"params\":[{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PeerSettings\"},{\"id\":663693416,\"predicate\":\"channelAdminLogEventActionSendMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-702884114,\"predicate\":\"auth.codeTypeMissedCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-2113903484,\"predicate\":\"auth.sentCodeTypeMissedCall\",\"params\":[{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1012759713,\"predicate\":\"auth.loggedOut\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"future_auth_token\",\"type\":\"flags.0?bytes\"}],\"type\":\"auth.LoggedOut\"},{\"id\":1578843320,\"predicate\":\"updateMessageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"reactions\",\"type\":\"MessageReactions\"}],\"type\":\"Update\"},{\"id\":-1546531968,\"predicate\":\"reactionCount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen_order\",\"type\":\"flags.0?int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"ReactionCount\"},{\"id\":1328256121,\"predicate\":\"messageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"can_see_list\",\"type\":\"flags.2?true\"},{\"name\":\"results\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"recent_reactions\",\"type\":\"flags.1?Vector<MessagePeerReaction>\"}],\"type\":\"MessageReactions\"},{\"id\":834488621,\"predicate\":\"messages.messageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<MessagePeerReaction>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-1065882623,\"predicate\":\"availableReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"premium\",\"type\":\"flags.2?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"static_icon\",\"type\":\"Document\"},{\"name\":\"appear_animation\",\"type\":\"Document\"},{\"name\":\"select_animation\",\"type\":\"Document\"},{\"name\":\"activate_animation\",\"type\":\"Document\"},{\"name\":\"effect_animation\",\"type\":\"Document\"},{\"name\":\"around_animation\",\"type\":\"flags.1?Document\"},{\"name\":\"center_icon\",\"type\":\"flags.1?Document\"}],\"type\":\"AvailableReaction\"},{\"id\":-1626924713,\"predicate\":\"messages.availableReactionsNotModified\",\"params\":[],\"type\":\"messages.AvailableReactions\"},{\"id\":1989032621,\"predicate\":\"messages.availableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<AvailableReaction>\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":852137487,\"predicate\":\"messageEntitySpoiler\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1102180616,\"predicate\":\"channelAdminLogEventActionChangeAvailableReactions\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChatReactions\"},{\"name\":\"new_value\",\"type\":\"ChatReactions\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1938180548,\"predicate\":\"messagePeerReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"unread\",\"type\":\"flags.1?true\"},{\"name\":\"my\",\"type\":\"flags.2?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"MessagePeerReaction\"},{\"id\":-2132064081,\"predicate\":\"groupCallStreamChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"last_timestamp_ms\",\"type\":\"long\"}],\"type\":\"GroupCallStreamChannel\"},{\"id\":-790330702,\"predicate\":\"phone.groupCallStreamChannels\",\"params\":[{\"name\":\"channels\",\"type\":\"Vector<GroupCallStreamChannel>\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":177124030,\"predicate\":\"inputReportReasonIllegalDrugs\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1631091139,\"predicate\":\"inputReportReasonPersonalDetails\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":767505458,\"predicate\":\"phone.groupCallStreamRtmpUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":1165423600,\"predicate\":\"attachMenuBotIconColor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"AttachMenuBotIconColor\"},{\"id\":-1297663893,\"predicate\":\"attachMenuBotIcon\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"icon\",\"type\":\"Document\"},{\"name\":\"colors\",\"type\":\"flags.0?Vector<AttachMenuBotIconColor>\"}],\"type\":\"AttachMenuBotIcon\"},{\"id\":-653423106,\"predicate\":\"attachMenuBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"has_settings\",\"type\":\"flags.1?true\"},{\"name\":\"request_write_access\",\"type\":\"flags.2?true\"},{\"name\":\"show_in_attach_menu\",\"type\":\"flags.3?true\"},{\"name\":\"show_in_side_menu\",\"type\":\"flags.4?true\"},{\"name\":\"side_menu_disclaimer_needed\",\"type\":\"flags.5?true\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"peer_types\",\"type\":\"flags.3?Vector<AttachMenuPeerType>\"},{\"name\":\"icons\",\"type\":\"Vector<AttachMenuBotIcon>\"}],\"type\":\"AttachMenuBot\"},{\"id\":-237467044,\"predicate\":\"attachMenuBotsNotModified\",\"params\":[],\"type\":\"AttachMenuBots\"},{\"id\":1011024320,\"predicate\":\"attachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bots\",\"type\":\"Vector<AttachMenuBot>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBots\"},{\"id\":-1816172929,\"predicate\":\"attachMenuBotsBot\",\"params\":[{\"name\":\"bot\",\"type\":\"AttachMenuBot\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":397910539,\"predicate\":\"updateAttachMenuBots\",\"params\":[],\"type\":\"Update\"},{\"id\":202659196,\"predicate\":\"webViewResultUrl\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":-2010155333,\"predicate\":\"simpleWebViewResultUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":211046684,\"predicate\":\"webViewMessageSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"msg_id\",\"type\":\"flags.0?InputBotInlineMessageID\"}],\"type\":\"WebViewMessageSent\"},{\"id\":361936797,\"predicate\":\"updateWebViewResultSent\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":326529584,\"predicate\":\"keyboardButtonWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1598009252,\"predicate\":\"keyboardButtonSimpleWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1205698681,\"predicate\":\"messageActionWebViewDataSentMe\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1262252875,\"predicate\":\"messageActionWebViewDataSent\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":347625491,\"predicate\":\"updateBotMenuButton\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Update\"},{\"id\":1966318984,\"predicate\":\"botMenuButtonDefault\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":1113113093,\"predicate\":\"botMenuButtonCommands\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":-944407322,\"predicate\":\"botMenuButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"BotMenuButton\"},{\"id\":-67704655,\"predicate\":\"account.savedRingtonesNotModified\",\"params\":[],\"type\":\"account.SavedRingtones\"},{\"id\":-1041683259,\"predicate\":\"account.savedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"ringtones\",\"type\":\"Vector<Document>\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1960361625,\"predicate\":\"updateSavedRingtones\",\"params\":[],\"type\":\"Update\"},{\"id\":-1746354498,\"predicate\":\"notificationSoundDefault\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":1863070943,\"predicate\":\"notificationSoundNone\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":-2096391452,\"predicate\":\"notificationSoundLocal\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"NotificationSound\"},{\"id\":-9666487,\"predicate\":\"notificationSoundRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"NotificationSound\"},{\"id\":-1222230163,\"predicate\":\"account.savedRingtone\",\"params\":[],\"type\":\"account.SavedRingtone\"},{\"id\":523271863,\"predicate\":\"account.savedRingtoneConverted\",\"params\":[{\"name\":\"document\",\"type\":\"Document\"}],\"type\":\"account.SavedRingtone\"},{\"id\":2104224014,\"predicate\":\"attachMenuPeerTypeSameBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-1020528102,\"predicate\":\"attachMenuPeerTypeBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-247016673,\"predicate\":\"attachMenuPeerTypePM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":84480319,\"predicate\":\"attachMenuPeerTypeChat\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":2080104188,\"predicate\":\"attachMenuPeerTypeBroadcast\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-317687113,\"predicate\":\"chatInvitePublicJoinRequests\",\"params\":[],\"type\":\"ExportedChatInvite\"},{\"id\":-977967015,\"predicate\":\"inputInvoiceMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"InputInvoice\"},{\"id\":-1020867857,\"predicate\":\"inputInvoiceSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputInvoice\"},{\"id\":-1362048039,\"predicate\":\"payments.exportedInvoice\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":8703322,\"predicate\":\"updateTranscribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-1821037486,\"predicate\":\"messages.transcribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":909284270,\"predicate\":\"dialogFilterDefault\",\"params\":[],\"type\":\"DialogFilter\"},{\"id\":1395946908,\"predicate\":\"help.premiumPromo\",\"params\":[{\"name\":\"status_text\",\"type\":\"string\"},{\"name\":\"status_entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"video_sections\",\"type\":\"Vector<string>\"},{\"name\":\"videos\",\"type\":\"Vector<Document>\"},{\"name\":\"period_options\",\"type\":\"Vector<PremiumSubscriptionOption>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.PremiumPromo\"},{\"id\":-925956616,\"predicate\":\"messageEntityCustomEmoji\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":-48981863,\"predicate\":\"documentAttributeCustomEmoji\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"free\",\"type\":\"flags.0?true\"},{\"name\":\"text_color\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"DocumentAttribute\"},{\"id\":1087454222,\"predicate\":\"stickerSetFullCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1502273946,\"predicate\":\"inputStorePaymentPremiumSubscription\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"restore\",\"type\":\"flags.0?true\"},{\"name\":\"upgrade\",\"type\":\"flags.1?true\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":1634697192,\"predicate\":\"inputStorePaymentGiftPremium\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":-935499028,\"predicate\":\"messageActionGiftPremium\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"crypto_currency\",\"type\":\"flags.0?string\"},{\"name\":\"crypto_amount\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":1958953753,\"predicate\":\"premiumGiftOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumGiftOption\"},{\"id\":-930399486,\"predicate\":\"inputStickerSetPremiumGifts\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-78886548,\"predicate\":\"updateReadFeaturedEmojiStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-1360618136,\"predicate\":\"inputPrivacyKeyVoiceMessages\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":110621716,\"predicate\":\"privacyKeyVoiceMessages\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1996951013,\"predicate\":\"paymentFormMethod\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentFormMethod\"},{\"id\":-193992412,\"predicate\":\"inputWebFileAudioAlbumThumbLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"small\",\"type\":\"flags.2?true\"},{\"name\":\"document\",\"type\":\"flags.0?InputDocument\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"}],\"type\":\"InputWebFileLocation\"},{\"id\":769727150,\"predicate\":\"emojiStatusEmpty\",\"params\":[],\"type\":\"EmojiStatus\"},{\"id\":-1835310691,\"predicate\":\"emojiStatus\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"EmojiStatus\"},{\"id\":-97474361,\"predicate\":\"emojiStatusUntil\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"until\",\"type\":\"int\"}],\"type\":\"EmojiStatus\"},{\"id\":674706841,\"predicate\":\"updateUserEmojiStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Update\"},{\"id\":821314523,\"predicate\":\"updateRecentEmojiStatuses\",\"params\":[],\"type\":\"Update\"},{\"id\":-796072379,\"predicate\":\"account.emojiStatusesNotModified\",\"params\":[],\"type\":\"account.EmojiStatuses\"},{\"id\":-1866176559,\"predicate\":\"account.emojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"statuses\",\"type\":\"Vector<EmojiStatus>\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":2046153753,\"predicate\":\"reactionEmpty\",\"params\":[],\"type\":\"Reaction\"},{\"id\":455247544,\"predicate\":\"reactionEmoji\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Reaction\"},{\"id\":-1992950669,\"predicate\":\"reactionCustomEmoji\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Reaction\"},{\"id\":-352570692,\"predicate\":\"chatReactionsNone\",\"params\":[],\"type\":\"ChatReactions\"},{\"id\":1385335754,\"predicate\":\"chatReactionsAll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_custom\",\"type\":\"flags.0?true\"}],\"type\":\"ChatReactions\"},{\"id\":1713193015,\"predicate\":\"chatReactionsSome\",\"params\":[{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"ChatReactions\"},{\"id\":-1334846497,\"predicate\":\"messages.reactionsNotModified\",\"params\":[],\"type\":\"messages.Reactions\"},{\"id\":-352454890,\"predicate\":\"messages.reactions\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"messages.Reactions\"},{\"id\":1870160884,\"predicate\":\"updateRecentReactions\",\"params\":[],\"type\":\"Update\"},{\"id\":-2030252155,\"predicate\":\"updateMoveStickerSetToTop\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"stickerset\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-196020837,\"predicate\":\"auth.sentCodeTypeEmailCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"},{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"reset_available_period\",\"type\":\"flags.3?int\"},{\"name\":\"reset_pending_date\",\"type\":\"flags.4?int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1521934870,\"predicate\":\"auth.sentCodeTypeSetUpEmailRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1128644211,\"predicate\":\"emailVerifyPurposeLoginSetup\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"EmailVerifyPurpose\"},{\"id\":1383932651,\"predicate\":\"emailVerifyPurposeLoginChange\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1141565819,\"predicate\":\"emailVerifyPurposePassport\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1842457175,\"predicate\":\"emailVerificationCode\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-611279166,\"predicate\":\"emailVerificationGoogle\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-1764723459,\"predicate\":\"emailVerificationApple\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":731303195,\"predicate\":\"account.emailVerified\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.EmailVerified\"},{\"id\":-507835039,\"predicate\":\"account.emailVerifiedLogin\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"sent_code\",\"type\":\"auth.SentCode\"}],\"type\":\"account.EmailVerified\"},{\"id\":1596792306,\"predicate\":\"premiumSubscriptionOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.1?true\"},{\"name\":\"can_purchase_upgrade\",\"type\":\"flags.2?true\"},{\"name\":\"transaction\",\"type\":\"flags.3?string\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumSubscriptionOption\"},{\"id\":80008398,\"predicate\":\"inputStickerSetEmojiGenericAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":701560302,\"predicate\":\"inputStickerSetEmojiDefaultStatuses\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1206095820,\"predicate\":\"sendAsPeer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium_required\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"SendAsPeer\"},{\"id\":-1386050360,\"predicate\":\"messageExtendedMediaPreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"w\",\"type\":\"flags.0?int\"},{\"name\":\"h\",\"type\":\"flags.0?int\"},{\"name\":\"thumb\",\"type\":\"flags.1?PhotoSize\"},{\"name\":\"video_duration\",\"type\":\"flags.2?int\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":-297296796,\"predicate\":\"messageExtendedMedia\",\"params\":[{\"name\":\"media\",\"type\":\"MessageMedia\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":1517529484,\"predicate\":\"updateMessageExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"extended_media\",\"type\":\"MessageExtendedMedia\"}],\"type\":\"Update\"},{\"id\":-50416996,\"predicate\":\"stickerKeyword\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"keyword\",\"type\":\"Vector<string>\"}],\"type\":\"StickerKeyword\"},{\"id\":-1274595769,\"predicate\":\"username\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"editable\",\"type\":\"flags.0?true\"},{\"name\":\"active\",\"type\":\"flags.1?true\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Username\"},{\"id\":-263212119,\"predicate\":\"channelAdminLogEventActionChangeUsernames\",\"params\":[{\"name\":\"prev_value\",\"type\":\"Vector<string>\"},{\"name\":\"new_value\",\"type\":\"Vector<string>\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":46949251,\"predicate\":\"channelAdminLogEventActionToggleForum\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1483767080,\"predicate\":\"channelAdminLogEventActionCreateTopic\",\"params\":[{\"name\":\"topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-261103096,\"predicate\":\"channelAdminLogEventActionEditTopic\",\"params\":[{\"name\":\"prev_topic\",\"type\":\"ForumTopic\"},{\"name\":\"new_topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1374254839,\"predicate\":\"channelAdminLogEventActionDeleteTopic\",\"params\":[{\"name\":\"topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1569535291,\"predicate\":\"channelAdminLogEventActionPinTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"prev_topic\",\"type\":\"flags.0?ForumTopic\"},{\"name\":\"new_topic\",\"type\":\"flags.1?ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":37687451,\"predicate\":\"forumTopicDeleted\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ForumTopic\"},{\"id\":1903173033,\"predicate\":\"forumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my\",\"type\":\"flags.1?true\"},{\"name\":\"closed\",\"type\":\"flags.2?true\"},{\"name\":\"pinned\",\"type\":\"flags.3?true\"},{\"name\":\"short\",\"type\":\"flags.5?true\"},{\"name\":\"hidden\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.0?long\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"draft\",\"type\":\"flags.4?DraftMessage\"}],\"type\":\"ForumTopic\"},{\"id\":913709011,\"predicate\":\"messages.forumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"order_by_create_date\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"topics\",\"type\":\"Vector<ForumTopic>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"messages.ForumTopics\"},{\"id\":228168278,\"predicate\":\"messageActionTopicCreate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":-1064024032,\"predicate\":\"messageActionTopicEdit\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.1?long\"},{\"name\":\"closed\",\"type\":\"flags.2?Bool\"},{\"name\":\"hidden\",\"type\":\"flags.3?Bool\"}],\"type\":\"MessageAction\"},{\"id\":422509539,\"predicate\":\"updateChannelPinnedTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"topic_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1548122514,\"predicate\":\"inputNotifyForumTopic\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"InputNotifyPeer\"},{\"id\":577659656,\"predicate\":\"notifyForumTopic\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"NotifyPeer\"},{\"id\":1153562857,\"predicate\":\"inputStickerSetEmojiDefaultTopicIcons\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":406407439,\"predicate\":\"messages.sponsoredMessagesEmpty\",\"params\":[],\"type\":\"messages.SponsoredMessages\"},{\"id\":-31881726,\"predicate\":\"updateChannelPinnedTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<int>\"}],\"type\":\"Update\"},{\"id\":1135897376,\"predicate\":\"defaultHistoryTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"DefaultHistoryTTL\"},{\"id\":116234636,\"predicate\":\"auth.codeTypeFragmentSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-648651719,\"predicate\":\"auth.sentCodeTypeFragmentSms\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1103040667,\"predicate\":\"exportedContactToken\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ExportedContactToken\"},{\"id\":1693675004,\"predicate\":\"channelAdminLogEventActionToggleAntiSpam\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1474192222,\"predicate\":\"messageActionSuggestProfilePhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":2008112412,\"predicate\":\"stickerSetNoCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"}],\"type\":\"StickerSetCovered\"},{\"id\":542282808,\"predicate\":\"updateUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":596704836,\"predicate\":\"auth.sentCodeSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.SentCode\"},{\"id\":-25742243,\"predicate\":\"messageActionRequestedPeer\",\"params\":[{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"MessageAction\"},{\"id\":1597737472,\"predicate\":\"requestPeerTypeUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.0?Bool\"},{\"name\":\"premium\",\"type\":\"flags.1?Bool\"}],\"type\":\"RequestPeerType\"},{\"id\":-906990053,\"predicate\":\"requestPeerTypeChat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"bot_participant\",\"type\":\"flags.5?true\"},{\"name\":\"has_username\",\"type\":\"flags.3?Bool\"},{\"name\":\"forum\",\"type\":\"flags.4?Bool\"},{\"name\":\"user_admin_rights\",\"type\":\"flags.1?ChatAdminRights\"},{\"name\":\"bot_admin_rights\",\"type\":\"flags.2?ChatAdminRights\"}],\"type\":\"RequestPeerType\"},{\"id\":865857388,\"predicate\":\"requestPeerTypeBroadcast\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"has_username\",\"type\":\"flags.3?Bool\"},{\"name\":\"user_admin_rights\",\"type\":\"flags.1?ChatAdminRights\"},{\"name\":\"bot_admin_rights\",\"type\":\"flags.2?ChatAdminRights\"}],\"type\":\"RequestPeerType\"},{\"id\":218842764,\"predicate\":\"keyboardButtonRequestPeer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"peer_type\",\"type\":\"RequestPeerType\"}],\"type\":\"KeyboardButton\"},{\"id\":1209970170,\"predicate\":\"emojiListNotModified\",\"params\":[],\"type\":\"EmojiList\"},{\"id\":2048790993,\"predicate\":\"emojiList\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"document_id\",\"type\":\"Vector<long>\"}],\"type\":\"EmojiList\"},{\"id\":-444918734,\"predicate\":\"auth.sentCodeTypeFirebaseSms\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nonce\",\"type\":\"flags.0?bytes\"},{\"name\":\"receipt\",\"type\":\"flags.1?string\"},{\"name\":\"push_timeout\",\"type\":\"flags.1?int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":2056961449,\"predicate\":\"emojiGroup\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_emoji_id\",\"type\":\"long\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiGroup\"},{\"id\":1874111879,\"predicate\":\"messages.emojiGroupsNotModified\",\"params\":[],\"type\":\"messages.EmojiGroups\"},{\"id\":-2011186869,\"predicate\":\"messages.emojiGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"groups\",\"type\":\"Vector<EmojiGroup>\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":-128171716,\"predicate\":\"videoSizeEmojiMarkup\",\"params\":[{\"name\":\"emoji_id\",\"type\":\"long\"},{\"name\":\"background_colors\",\"type\":\"Vector<int>\"}],\"type\":\"VideoSize\"},{\"id\":228623102,\"predicate\":\"videoSizeStickerMarkup\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker_id\",\"type\":\"long\"},{\"name\":\"background_colors\",\"type\":\"Vector<int>\"}],\"type\":\"VideoSize\"},{\"id\":1964978502,\"predicate\":\"textWithEntities\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"TextWithEntities\"},{\"id\":870003448,\"predicate\":\"messages.translateResult\",\"params\":[{\"name\":\"result\",\"type\":\"Vector<TextWithEntities>\"}],\"type\":\"messages.TranslatedText\"},{\"id\":-934791986,\"predicate\":\"autoSaveSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photos\",\"type\":\"flags.0?true\"},{\"name\":\"videos\",\"type\":\"flags.1?true\"},{\"name\":\"video_max_size\",\"type\":\"flags.2?long\"}],\"type\":\"AutoSaveSettings\"},{\"id\":-2124403385,\"predicate\":\"autoSaveException\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"AutoSaveSettings\"}],\"type\":\"AutoSaveException\"},{\"id\":1279133341,\"predicate\":\"account.autoSaveSettings\",\"params\":[{\"name\":\"users_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"chats_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"broadcasts_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"exceptions\",\"type\":\"Vector<AutoSaveException>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.AutoSaveSettings\"},{\"id\":-335171433,\"predicate\":\"updateAutoSaveSettings\",\"params\":[],\"type\":\"Update\"},{\"id\":2094949405,\"predicate\":\"help.appConfigNotModified\",\"params\":[],\"type\":\"help.AppConfig\"},{\"id\":-585598930,\"predicate\":\"help.appConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"config\",\"type\":\"JSONValue\"}],\"type\":\"help.AppConfig\"},{\"id\":-1457472134,\"predicate\":\"inputBotAppID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotApp\"},{\"id\":-1869872121,\"predicate\":\"inputBotAppShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputBotApp\"},{\"id\":1571189943,\"predicate\":\"botAppNotModified\",\"params\":[],\"type\":\"BotApp\"},{\"id\":-1778593322,\"predicate\":\"botApp\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"BotApp\"},{\"id\":-347034123,\"predicate\":\"messages.botApp\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"request_write_access\",\"type\":\"flags.1?true\"},{\"name\":\"has_settings\",\"type\":\"flags.2?true\"},{\"name\":\"app\",\"type\":\"BotApp\"}],\"type\":\"messages.BotApp\"},{\"id\":1008422669,\"predicate\":\"appWebViewResultUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"AppWebViewResult\"},{\"id\":-1250781739,\"predicate\":\"inlineBotWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"InlineBotWebView\"},{\"id\":1246753138,\"predicate\":\"readParticipantDate\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ReadParticipantDate\"},{\"id\":-856651050,\"predicate\":\"updateGroupInvitePrivacyForbidden\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-699792216,\"predicate\":\"dialogFilterChatlist\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_my_invites\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":-203367885,\"predicate\":\"inputChatlistDialogFilter\",\"params\":[{\"name\":\"filter_id\",\"type\":\"int\"}],\"type\":\"InputChatlist\"},{\"id\":206668204,\"predicate\":\"exportedChatlistInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<Peer>\"}],\"type\":\"ExportedChatlistInvite\"},{\"id\":283567014,\"predicate\":\"chatlists.exportedChatlistInvite\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"invite\",\"type\":\"ExportedChatlistInvite\"}],\"type\":\"chatlists.ExportedChatlistInvite\"},{\"id\":279670215,\"predicate\":\"chatlists.exportedInvites\",\"params\":[{\"name\":\"invites\",\"type\":\"Vector<ExportedChatlistInvite>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ExportedInvites\"},{\"id\":-91752871,\"predicate\":\"chatlists.chatlistInviteAlready\",\"params\":[{\"name\":\"filter_id\",\"type\":\"int\"},{\"name\":\"missing_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"already_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":500007837,\"predicate\":\"chatlists.chatlistInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.0?string\"},{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":-1816295539,\"predicate\":\"chatlists.chatlistUpdates\",\"params\":[{\"name\":\"missing_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistUpdates\"},{\"id\":-1136350937,\"predicate\":\"messageActionSetChatWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"WallPaper\"}],\"type\":\"MessageAction\"},{\"id\":-1065845395,\"predicate\":\"messageActionSetSameChatWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"WallPaper\"}],\"type\":\"MessageAction\"},{\"id\":-391678544,\"predicate\":\"bots.botInfo\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"bots.BotInfo\"},{\"id\":238759180,\"predicate\":\"inlineQueryPeerTypeBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-1228133028,\"predicate\":\"messagePeerVote\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessagePeerVote\"},{\"id\":1959634180,\"predicate\":\"messagePeerVoteInputOption\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessagePeerVote\"},{\"id\":1177089766,\"predicate\":\"messagePeerVoteMultiple\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessagePeerVote\"},{\"id\":941870144,\"predicate\":\"inputPrivacyKeyAbout\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1534675103,\"predicate\":\"privacyKeyAbout\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1035529315,\"predicate\":\"sponsoredWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"site_name\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"}],\"type\":\"SponsoredWebPage\"},{\"id\":-1923523370,\"predicate\":\"storyViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_viewers\",\"type\":\"flags.1?true\"},{\"name\":\"views_count\",\"type\":\"int\"},{\"name\":\"forwards_count\",\"type\":\"flags.2?int\"},{\"name\":\"reactions\",\"type\":\"flags.3?Vector<ReactionCount>\"},{\"name\":\"reactions_count\",\"type\":\"flags.4?int\"},{\"name\":\"recent_viewers\",\"type\":\"flags.0?Vector<long>\"}],\"type\":\"StoryViews\"},{\"id\":1374088783,\"predicate\":\"storyItemDeleted\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"StoryItem\"},{\"id\":-5388013,\"predicate\":\"storyItemSkipped\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"close_friends\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expire_date\",\"type\":\"int\"}],\"type\":\"StoryItem\"},{\"id\":1153718222,\"predicate\":\"storyItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.5?true\"},{\"name\":\"public\",\"type\":\"flags.7?true\"},{\"name\":\"close_friends\",\"type\":\"flags.8?true\"},{\"name\":\"min\",\"type\":\"flags.9?true\"},{\"name\":\"noforwards\",\"type\":\"flags.10?true\"},{\"name\":\"edited\",\"type\":\"flags.11?true\"},{\"name\":\"contacts\",\"type\":\"flags.12?true\"},{\"name\":\"selected_contacts\",\"type\":\"flags.13?true\"},{\"name\":\"out\",\"type\":\"flags.16?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expire_date\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"flags.0?string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"media_areas\",\"type\":\"flags.14?Vector<MediaArea>\"},{\"name\":\"privacy\",\"type\":\"flags.2?Vector<PrivacyRule>\"},{\"name\":\"views\",\"type\":\"flags.3?StoryViews\"},{\"name\":\"sent_reaction\",\"type\":\"flags.15?Reaction\"}],\"type\":\"StoryItem\"},{\"id\":1974712216,\"predicate\":\"updateStory\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"story\",\"type\":\"StoryItem\"}],\"type\":\"Update\"},{\"id\":-145845461,\"predicate\":\"updateReadStories\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":291044926,\"predicate\":\"stories.allStoriesNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"stealth_mode\",\"type\":\"StoriesStealthMode\"}],\"type\":\"stories.AllStories\"},{\"id\":1862033025,\"predicate\":\"stories.allStories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_more\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"peer_stories\",\"type\":\"Vector<PeerStories>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"stealth_mode\",\"type\":\"StoriesStealthMode\"}],\"type\":\"stories.AllStories\"},{\"id\":1574486984,\"predicate\":\"stories.stories\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"stories\",\"type\":\"Vector<StoryItem>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stories.Stories\"},{\"id\":793067081,\"predicate\":\"inputPrivacyValueAllowCloseFriends\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-135735141,\"predicate\":\"privacyValueAllowCloseFriends\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1329730875,\"predicate\":\"storyView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.2?Reaction\"}],\"type\":\"StoryView\"},{\"id\":1189722604,\"predicate\":\"stories.storyViewsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions_count\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"Vector<StoryView>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"stories.StoryViewsList\"},{\"id\":-560009955,\"predicate\":\"stories.storyViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<StoryViews>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stories.StoryViews\"},{\"id\":121554949,\"predicate\":\"inputReplyToMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"quote_text\",\"type\":\"flags.2?string\"},{\"name\":\"quote_entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"InputReplyTo\"},{\"id\":363917955,\"predicate\":\"inputReplyToStory\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"story_id\",\"type\":\"int\"}],\"type\":\"InputReplyTo\"},{\"id\":-1667711039,\"predicate\":\"messageReplyStoryHeader\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"story_id\",\"type\":\"int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":468923833,\"predicate\":\"updateStoryID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1070138683,\"predicate\":\"exportedStoryLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"ExportedStoryLink\"},{\"id\":-1979852936,\"predicate\":\"inputMediaStory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMedia\"},{\"id\":1758159491,\"predicate\":\"messageMediaStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_mention\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"story\",\"type\":\"flags.0?StoryItem\"}],\"type\":\"MessageMedia\"},{\"id\":781501415,\"predicate\":\"webPageAttributeStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"story\",\"type\":\"flags.0?StoryItem\"}],\"type\":\"WebPageAttribute\"},{\"id\":1898850301,\"predicate\":\"storiesStealthMode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"active_until_date\",\"type\":\"flags.0?int\"},{\"name\":\"cooldown_until_date\",\"type\":\"flags.1?int\"}],\"type\":\"StoriesStealthMode\"},{\"id\":738741697,\"predicate\":\"updateStoriesStealthMode\",\"params\":[{\"name\":\"stealth_mode\",\"type\":\"StoriesStealthMode\"}],\"type\":\"Update\"},{\"id\":64088654,\"predicate\":\"mediaAreaCoordinates\",\"params\":[{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"w\",\"type\":\"double\"},{\"name\":\"h\",\"type\":\"double\"},{\"name\":\"rotation\",\"type\":\"double\"}],\"type\":\"MediaAreaCoordinates\"},{\"id\":-1098720356,\"predicate\":\"mediaAreaVenue\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MediaArea\"},{\"id\":-1300094593,\"predicate\":\"inputMediaAreaVenue\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"result_id\",\"type\":\"string\"}],\"type\":\"MediaArea\"},{\"id\":-544523486,\"predicate\":\"mediaAreaGeoPoint\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MediaArea\"},{\"id\":2103604867,\"predicate\":\"updateSentStoryReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"story_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Update\"},{\"id\":340088945,\"predicate\":\"mediaAreaSuggestedReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"flipped\",\"type\":\"flags.1?true\"},{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"MediaArea\"},{\"id\":-1707742823,\"predicate\":\"peerStories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_read_id\",\"type\":\"flags.0?int\"},{\"name\":\"stories\",\"type\":\"Vector<StoryItem>\"}],\"type\":\"PeerStories\"},{\"id\":-890861720,\"predicate\":\"stories.peerStories\",\"params\":[{\"name\":\"stories\",\"type\":\"PeerStories\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stories.PeerStories\"},{\"id\":-44166467,\"predicate\":\"messages.webPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.WebPage\"},{\"id\":-1551868097,\"predicate\":\"inputStorePaymentPremiumGiftCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"boost_peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":2090038758,\"predicate\":\"inputStorePaymentPremiumGiveaway\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"only_new_subscribers\",\"type\":\"flags.0?true\"},{\"name\":\"boost_peer\",\"type\":\"InputPeer\"},{\"name\":\"additional_peers\",\"type\":\"flags.1?Vector<InputPeer>\"},{\"name\":\"countries_iso2\",\"type\":\"flags.2?Vector<string>\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"until_date\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":-1734841331,\"predicate\":\"inputInvoicePremiumGiftCode\",\"params\":[{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"},{\"name\":\"option\",\"type\":\"PremiumGiftCodeOption\"}],\"type\":\"InputInvoice\"},{\"id\":629052971,\"predicate\":\"premiumGiftCodeOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"int\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"},{\"name\":\"store_quantity\",\"type\":\"flags.1?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"PremiumGiftCodeOption\"},{\"id\":-1222446760,\"predicate\":\"payments.checkedGiftCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_giveaway\",\"type\":\"flags.2?true\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"giveaway_msg_id\",\"type\":\"flags.3?int\"},{\"name\":\"to_id\",\"type\":\"flags.0?long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"used_date\",\"type\":\"flags.1?int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.CheckedGiftCode\"},{\"id\":1478887012,\"predicate\":\"messageMediaGiveaway\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"only_new_subscribers\",\"type\":\"flags.0?true\"},{\"name\":\"channels\",\"type\":\"Vector<long>\"},{\"name\":\"countries_iso2\",\"type\":\"flags.1?Vector<string>\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"MessageMedia\"},{\"id\":-758129906,\"predicate\":\"messageActionGiftCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_giveaway\",\"type\":\"flags.0?true\"},{\"name\":\"unclaimed\",\"type\":\"flags.2?true\"},{\"name\":\"boost_peer\",\"type\":\"flags.1?Peer\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":858499565,\"predicate\":\"messageActionGiveawayLaunch\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1130879648,\"predicate\":\"payments.giveawayInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"participating\",\"type\":\"flags.0?true\"},{\"name\":\"preparing_results\",\"type\":\"flags.3?true\"},{\"name\":\"start_date\",\"type\":\"int\"},{\"name\":\"joined_too_early_date\",\"type\":\"flags.1?int\"},{\"name\":\"admin_disallowed_chat_id\",\"type\":\"flags.2?long\"},{\"name\":\"disallowed_country\",\"type\":\"flags.4?string\"}],\"type\":\"payments.GiveawayInfo\"},{\"id\":13456752,\"predicate\":\"payments.giveawayInfoResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"winner\",\"type\":\"flags.0?true\"},{\"name\":\"refunded\",\"type\":\"flags.1?true\"},{\"name\":\"start_date\",\"type\":\"int\"},{\"name\":\"gift_code_slug\",\"type\":\"flags.0?string\"},{\"name\":\"finish_date\",\"type\":\"int\"},{\"name\":\"winners_count\",\"type\":\"int\"},{\"name\":\"activated_count\",\"type\":\"int\"}],\"type\":\"payments.GiveawayInfo\"},{\"id\":34469328,\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1303143084,\"predicate\":\"prepaidGiveaway\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PrepaidGiveaway\"},{\"id\":-1038383031,\"predicate\":\"inputMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force_large_media\",\"type\":\"flags.0?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.1?true\"},{\"name\":\"optional\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":-1109605104,\"predicate\":\"inputBotInlineMessageMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"force_large_media\",\"type\":\"flags.4?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.5?true\"},{\"name\":\"optional\",\"type\":\"flags.6?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2137335386,\"predicate\":\"botInlineMessageMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"force_large_media\",\"type\":\"flags.4?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.5?true\"},{\"name\":\"manual\",\"type\":\"flags.7?true\"},{\"name\":\"safe\",\"type\":\"flags.8?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":1009460347,\"predicate\":\"channelAdminLogEventActionChangeColor\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1147126836,\"predicate\":\"channelAdminLogEventActionChangeBackgroundEmoji\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":706514033,\"predicate\":\"boost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gift\",\"type\":\"flags.1?true\"},{\"name\":\"giveaway\",\"type\":\"flags.2?true\"},{\"name\":\"unclaimed\",\"type\":\"flags.3?true\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"flags.0?long\"},{\"name\":\"giveaway_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"used_gift_slug\",\"type\":\"flags.4?string\"},{\"name\":\"multiplier\",\"type\":\"flags.5?int\"}],\"type\":\"Boost\"},{\"id\":-2030542532,\"predicate\":\"premium.boostsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"boosts\",\"type\":\"Vector<Boost>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"premium.BoostsList\"},{\"id\":-1001897636,\"predicate\":\"myBoost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slot\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"flags.0?Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"cooldown_until_date\",\"type\":\"flags.1?int\"}],\"type\":\"MyBoost\"},{\"id\":-1696454430,\"predicate\":\"premium.myBoosts\",\"params\":[{\"name\":\"my_boosts\",\"type\":\"Vector<MyBoost>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"premium.MyBoosts\"},{\"id\":1230586490,\"predicate\":\"premium.boostsStatus\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_boost\",\"type\":\"flags.2?true\"},{\"name\":\"level\",\"type\":\"int\"},{\"name\":\"current_level_boosts\",\"type\":\"int\"},{\"name\":\"boosts\",\"type\":\"int\"},{\"name\":\"gift_boosts\",\"type\":\"flags.4?int\"},{\"name\":\"next_level_boosts\",\"type\":\"flags.0?int\"},{\"name\":\"premium_audience\",\"type\":\"flags.1?StatsPercentValue\"},{\"name\":\"boost_url\",\"type\":\"string\"},{\"name\":\"prepaid_giveaways\",\"type\":\"flags.3?Vector<PrepaidGiveaway>\"},{\"name\":\"my_boost_slots\",\"type\":\"flags.2?Vector<int>\"}],\"type\":\"premium.BoostsStatus\"},{\"id\":-1873947492,\"predicate\":\"updateBotChatBoost\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"boost\",\"type\":\"Boost\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"}],\"methods\":[{\"id\":-878758099,\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1036301552,\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1502141361,\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":-2131827673,\"method\":\"auth.signUp\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1923962543,\"method\":\"auth.signIn\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"flags.0?string\"},{\"name\":\"email_verification\",\"type\":\"flags.1?EmailVerification\"}],\"type\":\"auth.Authorization\"},{\"id\":1047706137,\"method\":\"auth.logOut\",\"params\":[],\"type\":\"auth.LoggedOut\"},{\"id\":-1616179942,\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-440401971,\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1518699091,\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":-841733627,\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-326762118,\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":1779249670,\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-2067899501,\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":313765169,\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-612493497,\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":2018596725,\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":1713919532,\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":127302966,\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.WallPapers\"},{\"id\":-977650298,\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":227648840,\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":-1240508136,\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"users.UserFull\"},{\"id\":2061264541,\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Vector<int>\"},{\"id\":-995929106,\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":1574346258,\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.Contacts\"},{\"id\":746589157,\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":157945344,\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":269745566,\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":774801204,\"method\":\"contacts.block\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1252994264,\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1702457472,\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":1673946374,\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":-1594569905,\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Dialogs\"},{\"id\":1143203525,\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1593989278,\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":238054714,\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-1332768214,\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-443640366,\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":94983360,\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":1486110434,\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":671943023,\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1926021693,\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-966673468,\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"drop_author\",\"type\":\"flags.11?true\"},{\"name\":\"drop_media_captions\",\"type\":\"flags.12?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-820669733,\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-270948702,\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1991005362,\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1240027791,\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-1364194508,\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"messages.ChatFull\"},{\"id\":1937260541,\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":903730804,\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":-230206493,\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1575461717,\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":3450904,\"method\":\"messages.createChat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":-304838614,\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":432207715,\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_limit\",\"type\":\"flags.1?int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"qts_limit\",\"type\":\"flags.2?int\"}],\"type\":\"updates.Difference\"},{\"id\":166207545,\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fallback\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"flags.1?InputUser\"},{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"photos.Photo\"},{\"id\":59286453,\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fallback\",\"type\":\"flags.3?true\"},{\"name\":\"bot\",\"type\":\"flags.5?InputUser\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.4?VideoSize\"}],\"type\":\"photos.Photo\"},{\"id\":-2016444625,\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":-1291540959,\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1101843010,\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":-990308245,\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":531836966,\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":1378703997,\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":1295590211,\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":-1848823128,\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":651135312,\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":-162681021,\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1035731989,\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":-208425312,\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2031374829,\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2135648522,\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1157265941,\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1431914525,\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":852769188,\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1436924774,\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1259113487,\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":-562337987,\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1043505495,\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1663104819,\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":916930423,\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":655677548,\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1040964988,\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":301470424,\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":-623130288,\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-906486552,\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1564422284,\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"flags.0?InputCheckPasswordSRP\"}],\"type\":\"Bool\"},{\"id\":150761757,\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":608323678,\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":-627372787,\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-113456221,\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-2108208411,\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1891839707,\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-710552671,\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Stickers\"},{\"id\":-1197432408,\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":954152242,\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1738800940,\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1956073268,\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"MessageMedia\"},{\"id\":-484392616,\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":-545786948,\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1418342645,\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":-1663767815,\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1516564433,\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":-779399914,\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":-661144474,\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":923364464,\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"new_settings\",\"type\":\"flags.0?account.PasswordInputSettings\"}],\"type\":\"auth.Authorization\"},{\"id\":-1080796745,\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1607670315,\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"legacy_revoke_permanent\",\"type\":\"flags.2?true\"},{\"name\":\"request_needed\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1051570619,\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":1817183516,\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-928977804,\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-946871200,\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":-110209570,\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-421563528,\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1877938321,\"method\":\"help.getAppChangelog\",\"params\":[{\"name\":\"prev_app_version\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1468322785,\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"messages.MessageViews\"},{\"id\":-871347913,\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-2067661490,\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-196443371,\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1383294429,\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":2010044880,\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-1599378234,\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":176122811,\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":141781513,\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1862244601,\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"for_import\",\"type\":\"flags.3?true\"},{\"name\":\"forum\",\"type\":\"flags.5?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"},{\"name\":\"ttl_period\",\"type\":\"flags.4?int\"}],\"type\":\"Updates\"},{\"id\":-751007486,\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1450044624,\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-248621111,\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":283557164,\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":890549214,\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":615851205,\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-130635115,\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":429865580,\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":-1072619549,\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":51854712,\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1470377534,\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1568189671,\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1271290010,\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":2016638777,\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1309538785,\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1559270965,\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedGifs\"},{\"id\":846868683,\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1364105629,\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":-1156406247,\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"},{\"name\":\"switch_webview\",\"type\":\"flags.4?InlineBotWebView\"}],\"type\":\"Bool\"},{\"id\":-138647366,\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-432034325,\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"grouped\",\"type\":\"flags.0?true\"},{\"name\":\"thread\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedMessageLink\"},{\"id\":527021574,\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1056025023,\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":520357240,\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-39416522,\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":1224152952,\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"}],\"type\":\"Updates\"},{\"id\":-2091549254,\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":-1824339449,\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"password\",\"type\":\"flags.2?InputCheckPasswordSRP\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-712043766,\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1758168906,\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.TopPeers\"},{\"id\":451113900,\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-462373635,\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":2146678790,\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.6?true\"},{\"name\":\"reply_to\",\"type\":\"flags.4?InputReplyTo\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"media\",\"type\":\"flags.5?InputMedia\"}],\"type\":\"Bool\"},{\"id\":1782549861,\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":1685588756,\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1527873830,\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1649852357,\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.RecentStickers\"},{\"id\":958863608,\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1986437075,\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":1475442322,\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":457157256,\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1596029123,\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-122669393,\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"}],\"type\":\"messages.Chats\"},{\"id\":1678738104,\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-866424884,\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":-1907842680,\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1896289088,\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":363700068,\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-400399203,\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":258170395,\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":-468934396,\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-333262899,\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1919511901,\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.WebPage\"},{\"id\":-1489903017,\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":991616823,\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":-692498958,\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1440257555,\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":-434028723,\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":619086221,\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":924093883,\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"payments.PaymentForm\"},{\"id\":611897804,\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-1228345045,\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":755192367,\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"},{\"name\":\"tip_amount\",\"type\":\"flags.2?long\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1151208273,\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":578650699,\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":-667062079,\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":-436833542,\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":163765653,\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":-1876841625,\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"animated\",\"type\":\"flags.1?true\"},{\"name\":\"videos\",\"type\":\"flags.4?true\"},{\"name\":\"emojis\",\"type\":\"flags.5?true\"},{\"name\":\"text_color\",\"type\":\"flags.6?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"},{\"name\":\"software\",\"type\":\"flags.3?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-143257775,\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":-4795190,\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2041315650,\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":1369162417,\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":1430593449,\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":1124046573,\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1003664544,\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":788404002,\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":399855457,\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":-1295269440,\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1508562471,\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":662363518,\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":962554330,\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1691921240,\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":1375900482,\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":-219008246,\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":-269862909,\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":-845657435,\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":1120311183,\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":-1763259007,\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":870184064,\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-1847836879,\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-1589618665,\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"InputReplyTo\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":-359881479,\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":82946729,\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-1174420133,\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-357180360,\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-2020263951,\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":-251140208,\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1683319225,\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_everyone\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1036054804,\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-356796084,\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":921026381,\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1881817312,\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1164872071,\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1347929239,\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":405695855,\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":755087855,\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1747789204,\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":896555914,\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1856595926,\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":749019089,\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":-294455398,\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":-1299661699,\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":1936088002,\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":-1986010339,\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":-1199522741,\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":-1865902923,\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":-1456907910,\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-202552205,\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":-1516022023,\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1305716726,\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1730136133,\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":53322959,\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"verification\",\"type\":\"EmailVerification\"}],\"type\":\"account.EmailVerified\"},{\"id\":1072547679,\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":-2098076769,\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":-2092831552,\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-1896617296,\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?long\"}],\"type\":\"account.Takeout\"},{\"id\":489050862,\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":486505992,\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":911373810,\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1398145746,\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1031349873,\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":585256482,\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":-2062238246,\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2119757468,\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":1642330196,\"method\":\"help.getAppConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.AppConfig\"},{\"id\":1862465352,\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":-966677240,\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":1784243458,\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":-760547348,\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"unpin\",\"type\":\"flags.1?true\"},{\"name\":\"pm_oneside\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1881204448,\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":2055154197,\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1043606090,\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-748624084,\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":59377875,\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":1723407216,\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":-1626880216,\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":-806076575,\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1398240377,\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"compare_stories\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":283795844,\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":1941660731,\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1848369232,\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":-554301545,\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1517917375,\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":-57811990,\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":-476410109,\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_chat\",\"type\":\"flags.0?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1817860919,\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-18000023,\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-1153722364,\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":1457130303,\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":1995661875,\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":899735650,\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":352892591,\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":1318675378,\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":-709817306,\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":1749536939,\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":11435201,\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":-170208392,\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":1079520178,\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":428848198,\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1322487515,\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":1336717624,\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-386636848,\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-130964977,\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-1892102881,\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":-750207932,\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":1491484525,\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304832784,\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-183077365,\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1111817116,\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":-1120369398,\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1504586518,\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":473805619,\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1697530880,\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":737414348,\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":-229175188,\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-953697477,\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"},{\"name\":\"format\",\"type\":\"flags.2?string\"},{\"name\":\"base_theme\",\"type\":\"flags.3?BaseTheme\"}],\"type\":\"Bool\"},{\"id\":978872812,\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"}],\"type\":\"Theme\"},{\"id\":1913054296,\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1210022402,\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"auth.LoginToken\"},{\"id\":-1783866140,\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":-392909491,\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":-1250643605,\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1952756306,\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":300429806,\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":1705865692,\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":-1200736242,\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":-1257951254,\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":779736953,\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":-241247891,\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilter>\"},{\"id\":-1566780372,\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":450142282,\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":-983318044,\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1421720550,\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":1646092192,\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":-1486204014,\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputDocument\"},{\"name\":\"thumb_document_id\",\"type\":\"flags.1?long\"}],\"type\":\"messages.StickerSet\"},{\"id\":85399130,\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":2127598753,\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1063816159,\"method\":\"help.getPromoData\",\"params\":[],\"type\":\"help.PromoData\"},{\"id\":505748629,\"method\":\"help.hidePromoData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-8744061,\"method\":\"phone.sendSignalingData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-589330937,\"method\":\"stats.getMegagroupStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-349483786,\"method\":\"account.getGlobalPrivacySettings\",\"params\":[],\"type\":\"GlobalPrivacySettings\"},{\"id\":517647042,\"method\":\"account.setGlobalPrivacySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"GlobalPrivacySettings\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":-183649631,\"method\":\"help.dismissSuggestion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"suggestion\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1935116200,\"method\":\"help.getCountriesList\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":584962828,\"method\":\"messages.getReplies\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1147761405,\"method\":\"messages.getDiscussionMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-147740172,\"method\":\"messages.readDiscussion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":698914348,\"method\":\"contacts.blockFromReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_message\",\"type\":\"flags.0?true\"},{\"name\":\"delete_history\",\"type\":\"flags.1?true\"},{\"name\":\"report_spam\",\"type\":\"flags.2?true\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1445996571,\"method\":\"stats.getMessagePublicForwards\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1226791947,\"method\":\"stats.getMessageStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"stats.MessageStats\"},{\"id\":-299714136,\"method\":\"messages.unpinAllMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1221445336,\"method\":\"phone.createGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"schedule_date\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-1322057861,\"method\":\"phone.joinGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"video_stopped\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"},{\"name\":\"invite_hash\",\"type\":\"flags.1?string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":1342404601,\"method\":\"phone.leaveGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"source\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":2067345760,\"method\":\"phone.inviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":2054648117,\"method\":\"phone.discardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1958458429,\"method\":\"phone.toggleGroupCallSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reset_invite_hash\",\"type\":\"flags.1?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_muted\",\"type\":\"flags.0?Bool\"}],\"type\":\"Updates\"},{\"id\":68699611,\"method\":\"phone.getGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupCall\"},{\"id\":-984033109,\"method\":\"phone.getGroupParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"ids\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":-1248003721,\"method\":\"phone.checkGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":1540419152,\"method\":\"messages.deleteChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-104078327,\"method\":\"messages.deletePhoneCallHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1140726259,\"method\":\"messages.checkHistoryImport\",\"params\":[{\"name\":\"import_head\",\"type\":\"string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":873008187,\"method\":\"messages.initHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"media_count\",\"type\":\"int\"}],\"type\":\"messages.HistoryImport\"},{\"id\":713433234,\"method\":\"messages.uploadImportedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-1271008444,\"method\":\"messages.startHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-1565154314,\"method\":\"messages.getExportedChatInvites\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":1937010524,\"method\":\"messages.getExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-1110823051,\"method\":\"messages.editExportedChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"request_needed\",\"type\":\"flags.3?Bool\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":1452833749,\"method\":\"messages.deleteRevokedExportedChatInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-731601877,\"method\":\"messages.deleteExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":958457583,\"method\":\"messages.getAdminsWithInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-553329330,\"method\":\"messages.getChatInviteImporters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"},{\"name\":\"q\",\"type\":\"flags.2?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_user\",\"type\":\"InputUser\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-1207017500,\"method\":\"messages.setHistoryTTL\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-91437323,\"method\":\"account.reportProfilePhoto\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"InputPhoto\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":187239529,\"method\":\"channels.convertToGigagroup\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":1573261059,\"method\":\"messages.checkHistoryImportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-248985848,\"method\":\"phone.toggleGroupCallRecord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"start\",\"type\":\"flags.0?true\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"video_portrait\",\"type\":\"flags.2?Bool\"}],\"type\":\"Updates\"},{\"id\":-1524155713,\"method\":\"phone.editGroupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"muted\",\"type\":\"flags.0?Bool\"},{\"name\":\"volume\",\"type\":\"flags.1?int\"},{\"name\":\"raise_hand\",\"type\":\"flags.2?Bool\"},{\"name\":\"video_stopped\",\"type\":\"flags.3?Bool\"},{\"name\":\"video_paused\",\"type\":\"flags.4?Bool\"},{\"name\":\"presentation_paused\",\"type\":\"flags.5?Bool\"}],\"type\":\"Updates\"},{\"id\":480685066,\"method\":\"phone.editGroupCallTitle\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-277077702,\"method\":\"phone.getGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":-425040769,\"method\":\"phone.exportGroupCallInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.0?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":563885286,\"method\":\"phone.toggleGroupCallStartSubscription\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"subscribed\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1451287362,\"method\":\"phone.startScheduledGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1465786252,\"method\":\"phone.saveDefaultGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-873829436,\"method\":\"phone.joinGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":475058500,\"method\":\"phone.leaveGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":676017721,\"method\":\"stickers.checkShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1303364867,\"method\":\"stickers.suggestShortName\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":1032708345,\"method\":\"bots.resetBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-481554986,\"method\":\"bots.getBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Vector<BotCommand>\"},{\"id\":-1828139493,\"method\":\"account.resetPassword\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1284770294,\"method\":\"account.declinePasswordReset\",\"params\":[],\"type\":\"Bool\"},{\"id\":221691769,\"method\":\"auth.checkRecoveryPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-700916087,\"method\":\"account.getChatThemes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-432283329,\"method\":\"messages.setChatTheme\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1095836780,\"method\":\"channels.viewSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-333377601,\"method\":\"channels.getSponsoredMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":834782287,\"method\":\"messages.getMessageReadParticipants\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Vector<ReadParticipantDate>\"},{\"id\":1240514025,\"method\":\"messages.getSearchResultsCalendar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":1855292323,\"method\":\"messages.getSearchResultsPositions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":2145904661,\"method\":\"messages.hideChatJoinRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-528091926,\"method\":\"messages.hideAllChatJoinRequests\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"}],\"type\":\"Updates\"},{\"id\":-1323389022,\"method\":\"messages.toggleNoForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-855777386,\"method\":\"messages.saveDefaultSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"send_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":231174382,\"method\":\"channels.getSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-1081501024,\"method\":\"account.setAuthorizationTTL\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1089766498,\"method\":\"account.changeAuthorizationSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"confirmed\",\"type\":\"flags.3?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.0?Bool\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Bool\"},{\"id\":913655003,\"method\":\"channels.deleteParticipantHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-754091820,\"method\":\"messages.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.1?true\"},{\"name\":\"add_to_recent\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Vector<Reaction>\"}],\"type\":\"Updates\"},{\"id\":-1950707482,\"method\":\"messages.getMessagesReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1176190792,\"method\":\"messages.getMessageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Reaction\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-21928079,\"method\":\"messages.setChatAvailableReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"available_reactions\",\"type\":\"ChatReactions\"}],\"type\":\"Updates\"},{\"id\":417243308,\"method\":\"messages.getAvailableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":1330094102,\"method\":\"messages.setDefaultReaction\",\"params\":[{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Bool\"},{\"id\":1662529584,\"method\":\"messages.translateText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"id\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"text\",\"type\":\"flags.1?Vector<TextWithEntities>\"},{\"name\":\"to_lang\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":841173339,\"method\":\"messages.getUnreadReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":1420459918,\"method\":\"messages.readReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-1963375804,\"method\":\"contacts.resolvePhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":447879488,\"method\":\"phone.getGroupCallStreamChannels\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":-558650433,\"method\":\"phone.getGroupCallStreamRtmpUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"revoke\",\"type\":\"Bool\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":276705696,\"method\":\"messages.searchSentMedia\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":385663691,\"method\":\"messages.getAttachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"AttachMenuBots\"},{\"id\":1998676370,\"method\":\"messages.getAttachMenuBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":1777704297,\"method\":\"messages.toggleBotInAttachMenu\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":647873217,\"method\":\"messages.requestWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_bot_menu\",\"type\":\"flags.4?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"start_param\",\"type\":\"flags.3?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"WebViewResult\"},{\"id\":-1328014717,\"method\":\"messages.prolongWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Bool\"},{\"id\":440815626,\"method\":\"messages.requestSimpleWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_switch_webview\",\"type\":\"flags.1?true\"},{\"name\":\"from_side_menu\",\"type\":\"flags.2?true\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"start_param\",\"type\":\"flags.4?string\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":172168437,\"method\":\"messages.sendWebViewResultMessage\",\"params\":[{\"name\":\"bot_query_id\",\"type\":\"string\"},{\"name\":\"result\",\"type\":\"InputBotInlineResult\"}],\"type\":\"WebViewMessageSent\"},{\"id\":-603831608,\"method\":\"messages.sendWebViewData\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"button_text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1157944655,\"method\":\"bots.setBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Bool\"},{\"id\":-1671369944,\"method\":\"bots.getBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotMenuButton\"},{\"id\":-510647672,\"method\":\"account.getSavedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1038768899,\"method\":\"account.saveRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"account.SavedRingtone\"},{\"id\":-2095414366,\"method\":\"account.uploadRingtone\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":2021942497,\"method\":\"bots.setBotBroadcastDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":-1839281686,\"method\":\"bots.setBotGroupDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":1092913030,\"method\":\"phone.saveCallLog\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"file\",\"type\":\"InputFile\"}],\"type\":\"Bool\"},{\"id\":-456419968,\"method\":\"channels.toggleJoinToSend\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1277789622,\"method\":\"channels.toggleJoinRequest\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":261206117,\"method\":\"payments.exportInvoice\",\"params\":[{\"name\":\"invoice_media\",\"type\":\"InputMedia\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":647928393,\"method\":\"messages.transcribeAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":2132608815,\"method\":\"messages.rateTranscribedAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"good\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-2131921795,\"method\":\"payments.assignAppStoreTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"bytes\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-537046829,\"method\":\"payments.assignPlayMarketTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"DataJSON\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-1614700874,\"method\":\"payments.canPurchasePremium\",\"params\":[{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Bool\"},{\"id\":-1206152236,\"method\":\"help.getPremiumPromo\",\"params\":[],\"type\":\"help.PremiumPromo\"},{\"id\":-643100844,\"method\":\"messages.getCustomEmojiDocuments\",\"params\":[{\"name\":\"document_id\",\"type\":\"Vector<long>\"}],\"type\":\"Vector<Document>\"},{\"id\":-67329649,\"method\":\"messages.getEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":248473398,\"method\":\"messages.getFeaturedEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-70001045,\"method\":\"account.updateEmojiStatus\",\"params\":[{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Bool\"},{\"id\":-696962170,\"method\":\"account.getDefaultEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":257392901,\"method\":\"account.getRecentEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":404757166,\"method\":\"account.clearRecentEmojiStatuses\",\"params\":[],\"type\":\"Bool\"},{\"id\":1063567478,\"method\":\"messages.reportReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction_peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1149164102,\"method\":\"messages.getTopReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":960896434,\"method\":\"messages.getRecentReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":-1644236876,\"method\":\"messages.clearRecentReactions\",\"params\":[],\"type\":\"Bool\"},{\"id\":-2064119788,\"method\":\"messages.getExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":767062953,\"method\":\"auth.importWebTokenAuthorization\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"web_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-279966037,\"method\":\"account.reorderUsernames\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1490465654,\"method\":\"account.toggleUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1268978403,\"method\":\"channels.reorderUsernames\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1358053637,\"method\":\"channels.toggleUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":170155475,\"method\":\"channels.deactivateAllUsernames\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":-1540781271,\"method\":\"channels.toggleForum\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-200539612,\"method\":\"channels.createForumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"flags.0?int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.3?long\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"send_as\",\"type\":\"flags.2?InputPeer\"}],\"type\":\"Updates\"},{\"id\":233136337,\"method\":\"channels.getForumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_topic\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ForumTopics\"},{\"id\":-1333584199,\"method\":\"channels.getForumTopicsByID\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topics\",\"type\":\"Vector<int>\"}],\"type\":\"messages.ForumTopics\"},{\"id\":-186670715,\"method\":\"channels.editForumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topic_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.1?long\"},{\"name\":\"closed\",\"type\":\"flags.2?Bool\"},{\"name\":\"hidden\",\"type\":\"flags.3?Bool\"}],\"type\":\"Updates\"},{\"id\":1814925350,\"method\":\"channels.updatePinnedForumTopic\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topic_id\",\"type\":\"int\"},{\"name\":\"pinned\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":876830509,\"method\":\"channels.deleteTopicHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":693150095,\"method\":\"channels.reorderPinnedForumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1760814315,\"method\":\"channels.toggleAntiSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-1471109485,\"method\":\"channels.reportAntiSpamFalsePositive\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1632299963,\"method\":\"messages.setDefaultHistoryTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1703637384,\"method\":\"messages.getDefaultHistoryTTL\",\"params\":[],\"type\":\"DefaultHistoryTTL\"},{\"id\":-127582169,\"method\":\"contacts.exportContactToken\",\"params\":[],\"type\":\"ExportedContactToken\"},{\"id\":318789512,\"method\":\"contacts.importContactToken\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-515093903,\"method\":\"photos.uploadContactProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"suggest\",\"type\":\"flags.3?true\"},{\"name\":\"save\",\"type\":\"flags.4?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.5?VideoSize\"}],\"type\":\"photos.Photo\"},{\"id\":1785624660,\"method\":\"channels.toggleParticipantsHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-29831141,\"method\":\"messages.sendBotRequestedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"requested_peer\",\"type\":\"InputPeer\"}],\"type\":\"Updates\"},{\"id\":-495647960,\"method\":\"account.getDefaultProfilePhotoEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-1856479058,\"method\":\"account.getDefaultGroupPhotoEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-1991881904,\"method\":\"auth.requestFirebaseSms\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"safety_net_token\",\"type\":\"flags.0?string\"},{\"name\":\"ios_push_secret\",\"type\":\"flags.1?string\"}],\"type\":\"Bool\"},{\"id\":1955122779,\"method\":\"messages.getEmojiGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":785209037,\"method\":\"messages.getEmojiStatusGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":564480243,\"method\":\"messages.getEmojiProfilePhotoGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":739360983,\"method\":\"messages.searchCustomEmoji\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-461589127,\"method\":\"messages.togglePeerTranslations\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1379156774,\"method\":\"account.getAutoSaveSettings\",\"params\":[],\"type\":\"account.AutoSaveSettings\"},{\"id\":-694451359,\"method\":\"account.saveAutoSaveSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"flags.0?true\"},{\"name\":\"chats\",\"type\":\"flags.1?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"flags.3?InputPeer\"},{\"name\":\"settings\",\"type\":\"AutoSaveSettings\"}],\"type\":\"Bool\"},{\"id\":1404829728,\"method\":\"account.deleteAutoSaveExceptions\",\"params\":[],\"type\":\"Bool\"},{\"id\":-179077444,\"method\":\"stickers.changeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"flags.0?string\"},{\"name\":\"mask_coords\",\"type\":\"flags.1?MaskCoords\"},{\"name\":\"keywords\",\"type\":\"flags.2?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":306912256,\"method\":\"stickers.renameStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2022685804,\"method\":\"stickers.deleteStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":889046467,\"method\":\"messages.getBotApp\",\"params\":[{\"name\":\"app\",\"type\":\"InputBotApp\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.BotApp\"},{\"id\":-1940243652,\"method\":\"messages.requestAppWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"app\",\"type\":\"InputBotApp\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"AppWebViewResult\"},{\"id\":282013987,\"method\":\"bots.setBotInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.2?InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.3?string\"},{\"name\":\"about\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"}],\"type\":\"Bool\"},{\"id\":-589753091,\"method\":\"bots.getBotInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.0?InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"bots.BotInfo\"},{\"id\":2123760019,\"method\":\"auth.resetLoginEmail\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":-2072885362,\"method\":\"chatlists.exportChatlistInvite\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"chatlists.ExportedChatlistInvite\"},{\"id\":1906072670,\"method\":\"chatlists.deleteExportedInvite\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1698543165,\"method\":\"chatlists.editExportedInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"peers\",\"type\":\"flags.2?Vector<InputPeer>\"}],\"type\":\"ExportedChatlistInvite\"},{\"id\":-838608253,\"method\":\"chatlists.getExportedInvites\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"chatlists.ExportedInvites\"},{\"id\":1103171583,\"method\":\"chatlists.checkChatlistInvite\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":-1498291302,\"method\":\"chatlists.joinChatlistInvite\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":-1992190687,\"method\":\"chatlists.getChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"chatlists.ChatlistUpdates\"},{\"id\":-527828747,\"method\":\"chatlists.joinChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":1726252795,\"method\":\"chatlists.hideChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"Bool\"},{\"id\":-37955820,\"method\":\"chatlists.getLeaveChatlistSuggestions\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"Vector<Peer>\"},{\"id\":1962598714,\"method\":\"chatlists.leaveChatlist\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":-1760972350,\"method\":\"bots.reorderUsernames\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":87861619,\"method\":\"bots.toggleUsername\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1879389471,\"method\":\"messages.setChatWallPaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"wallpaper\",\"type\":\"flags.0?InputWallPaper\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"},{\"name\":\"id\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-896866118,\"method\":\"account.invalidateSignInCodes\",\"params\":[{\"name\":\"codes\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":414170259,\"method\":\"channels.clickSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1167653392,\"method\":\"contacts.editCloseFriends\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-941629475,\"method\":\"stories.canSendStory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1128843708,\"method\":\"stories.sendStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"noforwards\",\"type\":\"flags.4?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"media_areas\",\"type\":\"flags.5?Vector<MediaArea>\"},{\"name\":\"caption\",\"type\":\"flags.0?string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"privacy_rules\",\"type\":\"Vector<InputPrivacyRule>\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"period\",\"type\":\"flags.3?int\"}],\"type\":\"Updates\"},{\"id\":-1249658298,\"method\":\"stories.editStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.0?InputMedia\"},{\"name\":\"media_areas\",\"type\":\"flags.3?Vector<MediaArea>\"},{\"name\":\"caption\",\"type\":\"flags.1?string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"privacy_rules\",\"type\":\"flags.2?Vector<InputPrivacyRule>\"}],\"type\":\"Updates\"},{\"id\":-1369842849,\"method\":\"stories.deleteStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":-1703566865,\"method\":\"stories.togglePinned\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"pinned\",\"type\":\"Bool\"}],\"type\":\"Vector<int>\"},{\"id\":-290400731,\"method\":\"stories.getAllStories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"next\",\"type\":\"flags.1?true\"},{\"name\":\"hidden\",\"type\":\"flags.2?true\"},{\"name\":\"state\",\"type\":\"flags.0?string\"}],\"type\":\"stories.AllStories\"},{\"id\":1478600156,\"method\":\"stories.getPinnedStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.Stories\"},{\"id\":-1271586794,\"method\":\"stories.getStoriesArchive\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.Stories\"},{\"id\":1467271796,\"method\":\"stories.getStoriesByID\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"stories.Stories\"},{\"id\":2082822084,\"method\":\"stories.toggleAllStoriesHidden\",\"params\":[{\"name\":\"hidden\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1521034552,\"method\":\"stories.readStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<int>\"},{\"id\":-1308456197,\"method\":\"stories.incrementStoryViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":2127707223,\"method\":\"stories.getStoryViewsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_contacts\",\"type\":\"flags.0?true\"},{\"name\":\"reactions_first\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"flags.1?string\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.StoryViewsList\"},{\"id\":685862088,\"method\":\"stories.getStoriesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"stories.StoryViews\"},{\"id\":2072899360,\"method\":\"stories.exportStoryLink\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedStoryLink\"},{\"id\":421788300,\"method\":\"stories.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1471926630,\"method\":\"stories.activateStealthMode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"past\",\"type\":\"flags.0?true\"},{\"name\":\"future\",\"type\":\"flags.1?true\"}],\"type\":\"Updates\"},{\"id\":-1798939530,\"method\":\"contacts.setBlocked\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2144810674,\"method\":\"stories.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_to_recent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"story_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Updates\"},{\"id\":324662502,\"method\":\"bots.canSendMessage\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-248323089,\"method\":\"bots.allowSendMessage\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":142591463,\"method\":\"bots.invokeWebViewCustomMethod\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":743103056,\"method\":\"stories.getPeerStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"stories.PeerStories\"},{\"id\":-1688541191,\"method\":\"stories.getAllReadPeerStories\",\"params\":[],\"type\":\"Updates\"},{\"id\":1398375363,\"method\":\"stories.getPeerMaxIDs\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Vector<int>\"},{\"id\":-1519744160,\"method\":\"stories.getChatsToSend\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":-1123805756,\"method\":\"stories.togglePeerStoriesHidden\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hidden\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":660060756,\"method\":\"payments.getPremiumGiftCodeOptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"boost_peer\",\"type\":\"flags.0?InputPeer\"}],\"type\":\"Vector<PremiumGiftCodeOption>\"},{\"id\":-1907247935,\"method\":\"payments.checkGiftCode\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"payments.CheckedGiftCode\"},{\"id\":-152934316,\"method\":\"payments.applyGiftCode\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-198994907,\"method\":\"payments.getGiveawayInfo\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.GiveawayInfo\"},{\"id\":1609928480,\"method\":\"payments.launchPrepaidGiveaway\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"giveaway_id\",\"type\":\"long\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-1610494909,\"method\":\"account.updateColor\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"color\",\"type\":\"int\"},{\"name\":\"background_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"Bool\"},{\"id\":1645879327,\"method\":\"channels.updateColor\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"color\",\"type\":\"int\"},{\"name\":\"background_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"Updates\"},{\"id\":-1509246514,\"method\":\"account.getDefaultBackgroundEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":1626764896,\"method\":\"premium.getBoostsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gifts\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"premium.BoostsList\"},{\"id\":199719754,\"method\":\"premium.getMyBoosts\",\"params\":[],\"type\":\"premium.MyBoosts\"},{\"id\":1803396934,\"method\":\"premium.applyBoost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slots\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"premium.MyBoosts\"},{\"id\":70197089,\"method\":\"premium.getBoostsStatus\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"premium.BoostsStatus\"},{\"id\":965037343,\"method\":\"premium.getUserBoosts\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"premium.BoostsList\"}]},\"layer\":166} as {\n  MTProto: {\n    constructors: MTProtoConstructor[],\n    methods: MTProtoMethod[],\n    constructorsIndex?: {[id: number]: number}\n  },\n  API: {\n    constructors: MTProtoConstructor[],\n    methods: MTProtoMethod[],\n    constructorsIndex?: {[id: number]: number}\n  },\n  layer: number,\n};\n","/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).pako={})}(this,(function(e){\"use strict\";var t=(e,t,i,n)=>{let a=65535&e|0,r=e>>>16&65535|0,o=0;for(;0!==i;){o=i>2e3?2e3:i,i-=o;do{a=a+t[n++]|0,r=r+a|0}while(--o);a%=65521,r%=65521}return a|r<<16|0};const i=new Uint32Array((()=>{let e,t=[];for(var i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t})());var n=(e,t,n,a)=>{const r=i,o=a+n;e^=-1;for(let i=a;i<o;i++)e=e>>>8^r[255&(e^t[i])];return-1^e};const a=16209;var r=function(e,t){let i,n,r,o,s,l,d,f,c,h,u,w,b,m,k,_,g,p,v,x,y,E,R,A;const Z=e.state;i=e.next_in,R=e.input,n=i+(e.avail_in-5),r=e.next_out,A=e.output,o=r-(t-e.avail_out),s=r+(e.avail_out-257),l=Z.dmax,d=Z.wsize,f=Z.whave,c=Z.wnext,h=Z.window,u=Z.hold,w=Z.bits,b=Z.lencode,m=Z.distcode,k=(1<<Z.lenbits)-1,_=(1<<Z.distbits)-1;e:do{w<15&&(u+=R[i++]<<w,w+=8,u+=R[i++]<<w,w+=8),g=b[u&k];t:for(;;){if(p=g>>>24,u>>>=p,w-=p,p=g>>>16&255,0===p)A[r++]=65535&g;else{if(!(16&p)){if(0==(64&p)){g=b[(65535&g)+(u&(1<<p)-1)];continue t}if(32&p){Z.mode=16191;break e}e.msg=\"invalid literal/length code\",Z.mode=a;break e}v=65535&g,p&=15,p&&(w<p&&(u+=R[i++]<<w,w+=8),v+=u&(1<<p)-1,u>>>=p,w-=p),w<15&&(u+=R[i++]<<w,w+=8,u+=R[i++]<<w,w+=8),g=m[u&_];i:for(;;){if(p=g>>>24,u>>>=p,w-=p,p=g>>>16&255,!(16&p)){if(0==(64&p)){g=m[(65535&g)+(u&(1<<p)-1)];continue i}e.msg=\"invalid distance code\",Z.mode=a;break e}if(x=65535&g,p&=15,w<p&&(u+=R[i++]<<w,w+=8,w<p&&(u+=R[i++]<<w,w+=8)),x+=u&(1<<p)-1,x>l){e.msg=\"invalid distance too far back\",Z.mode=a;break e}if(u>>>=p,w-=p,p=r-o,x>p){if(p=x-p,p>f&&Z.sane){e.msg=\"invalid distance too far back\",Z.mode=a;break e}if(y=0,E=h,0===c){if(y+=d-p,p<v){v-=p;do{A[r++]=h[y++]}while(--p);y=r-x,E=A}}else if(c<p){if(y+=d+c-p,p-=c,p<v){v-=p;do{A[r++]=h[y++]}while(--p);if(y=0,c<v){p=c,v-=p;do{A[r++]=h[y++]}while(--p);y=r-x,E=A}}}else if(y+=c-p,p<v){v-=p;do{A[r++]=h[y++]}while(--p);y=r-x,E=A}for(;v>2;)A[r++]=E[y++],A[r++]=E[y++],A[r++]=E[y++],v-=3;v&&(A[r++]=E[y++],v>1&&(A[r++]=E[y++]))}else{y=r-x;do{A[r++]=A[y++],A[r++]=A[y++],A[r++]=A[y++],v-=3}while(v>2);v&&(A[r++]=A[y++],v>1&&(A[r++]=A[y++]))}break}}break}}while(i<n&&r<s);v=w>>3,i-=v,w-=v<<3,u&=(1<<w)-1,e.next_in=i,e.next_out=r,e.avail_in=i<n?n-i+5:5-(i-n),e.avail_out=r<s?s-r+257:257-(r-s),Z.hold=u,Z.bits=w};const o=15,s=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),l=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),d=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),f=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var c=(e,t,i,n,a,r,c,h)=>{const u=h.bits;let w,b,m,k,_,g,p=0,v=0,x=0,y=0,E=0,R=0,A=0,Z=0,S=0,T=0,O=null;const U=new Uint16Array(16),D=new Uint16Array(16);let I,B,N,C=null;for(p=0;p<=o;p++)U[p]=0;for(v=0;v<n;v++)U[t[i+v]]++;for(E=u,y=o;y>=1&&0===U[y];y--);if(E>y&&(E=y),0===y)return a[r++]=20971520,a[r++]=20971520,h.bits=1,0;for(x=1;x<y&&0===U[x];x++);for(E<x&&(E=x),Z=1,p=1;p<=o;p++)if(Z<<=1,Z-=U[p],Z<0)return-1;if(Z>0&&(0===e||1!==y))return-1;for(D[1]=0,p=1;p<o;p++)D[p+1]=D[p]+U[p];for(v=0;v<n;v++)0!==t[i+v]&&(c[D[t[i+v]]++]=v);if(0===e?(O=C=c,g=20):1===e?(O=s,C=l,g=257):(O=d,C=f,g=0),T=0,v=0,p=x,_=r,R=E,A=0,m=-1,S=1<<E,k=S-1,1===e&&S>852||2===e&&S>592)return 1;for(;;){I=p-A,c[v]+1<g?(B=0,N=c[v]):c[v]>=g?(B=C[c[v]-g],N=O[c[v]-g]):(B=96,N=0),w=1<<p-A,b=1<<R,x=b;do{b-=w,a[_+(T>>A)+b]=I<<24|B<<16|N|0}while(0!==b);for(w=1<<p-1;T&w;)w>>=1;if(0!==w?(T&=w-1,T+=w):T=0,v++,0==--U[p]){if(p===y)break;p=t[i+c[v]]}if(p>E&&(T&k)!==m){for(0===A&&(A=E),_+=x,R=p-A,Z=1<<R;R+A<y&&(Z-=U[R+A],!(Z<=0));)R++,Z<<=1;if(S+=1<<R,1===e&&S>852||2===e&&S>592)return 1;m=T&k,a[m]=E<<24|R<<16|_-r|0}}return 0!==T&&(a[_+T]=p-A<<24|64<<16|0),h.bits=E,0},h={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{Z_FINISH:u,Z_BLOCK:w,Z_TREES:b,Z_OK:m,Z_STREAM_END:k,Z_NEED_DICT:_,Z_STREAM_ERROR:g,Z_DATA_ERROR:p,Z_MEM_ERROR:v,Z_BUF_ERROR:x,Z_DEFLATED:y}=h,E=16180,R=16190,A=16191,Z=16192,S=16194,T=16199,O=16200,U=16206,D=16209,I=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function B(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const N=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<E||t.mode>16211?1:0},C=e=>{if(N(e))return g;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=E,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,m},z=e=>{if(N(e))return g;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,C(e)},F=(e,t)=>{let i;if(N(e))return g;const n=e.state;return t<0?(i=0,t=-t):(i=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?g:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,z(e))},L=(e,t)=>{if(!e)return g;const i=new B;e.state=i,i.strm=e,i.window=null,i.mode=E;const n=F(e,t);return n!==m&&(e.state=null),n};let M,H,j=!0;const K=e=>{if(j){M=new Int32Array(512),H=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(c(1,e.lens,0,288,M,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;c(2,e.lens,0,32,H,0,e.work,{bits:5}),j=!1}e.lencode=M,e.lenbits=9,e.distcode=H,e.distbits=5},P=(e,t,i,n)=>{let a;const r=e.state;return null===r.window&&(r.wsize=1<<r.wbits,r.wnext=0,r.whave=0,r.window=new Uint8Array(r.wsize)),n>=r.wsize?(r.window.set(t.subarray(i-r.wsize,i),0),r.wnext=0,r.whave=r.wsize):(a=r.wsize-r.wnext,a>n&&(a=n),r.window.set(t.subarray(i-n,i-n+a),r.wnext),(n-=a)?(r.window.set(t.subarray(i-n,i),0),r.wnext=n,r.whave=r.wsize):(r.wnext+=a,r.wnext===r.wsize&&(r.wnext=0),r.whave<r.wsize&&(r.whave+=a))),0};var Y={inflateReset:z,inflateReset2:F,inflateResetKeep:C,inflateInit:e=>L(e,15),inflateInit2:L,inflate:(e,i)=>{let a,o,s,l,d,f,h,B,C,z,F,L,M,H,j,Y,G,X,W,q,J,Q,V=0;const $=new Uint8Array(4);let ee,te;const ie=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(N(e)||!e.output||!e.input&&0!==e.avail_in)return g;a=e.state,a.mode===A&&(a.mode=Z),d=e.next_out,s=e.output,h=e.avail_out,l=e.next_in,o=e.input,f=e.avail_in,B=a.hold,C=a.bits,z=f,F=h,Q=m;e:for(;;)switch(a.mode){case E:if(0===a.wrap){a.mode=Z;break}for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(2&a.wrap&&35615===B){0===a.wbits&&(a.wbits=15),a.check=0,$[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0),B=0,C=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&B)<<8)+(B>>8))%31){e.msg=\"incorrect header check\",a.mode=D;break}if((15&B)!==y){e.msg=\"unknown compression method\",a.mode=D;break}if(B>>>=4,C-=4,J=8+(15&B),0===a.wbits&&(a.wbits=J),J>15||J>a.wbits){e.msg=\"invalid window size\",a.mode=D;break}a.dmax=1<<a.wbits,a.flags=0,e.adler=a.check=1,a.mode=512&B?16189:A,B=0,C=0;break;case 16181:for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(a.flags=B,(255&a.flags)!==y){e.msg=\"unknown compression method\",a.mode=D;break}if(57344&a.flags){e.msg=\"unknown header flags set\",a.mode=D;break}a.head&&(a.head.text=B>>8&1),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0)),B=0,C=0,a.mode=16182;case 16182:for(;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.head&&(a.head.time=B),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,$[2]=B>>>16&255,$[3]=B>>>24&255,a.check=n(a.check,$,4,0)),B=0,C=0,a.mode=16183;case 16183:for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.head&&(a.head.xflags=255&B,a.head.os=B>>8),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0)),B=0,C=0,a.mode=16184;case 16184:if(1024&a.flags){for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.length=B,a.head&&(a.head.extra_len=B),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0)),B=0,C=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(L=a.length,L>f&&(L=f),L&&(a.head&&(J=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(o.subarray(l,l+L),J)),512&a.flags&&4&a.wrap&&(a.check=n(a.check,o,L,l)),f-=L,l+=L,a.length-=L),a.length))break e;a.length=0,a.mode=16186;case 16186:if(2048&a.flags){if(0===f)break e;L=0;do{J=o[l+L++],a.head&&J&&a.length<65536&&(a.head.name+=String.fromCharCode(J))}while(J&&L<f);if(512&a.flags&&4&a.wrap&&(a.check=n(a.check,o,L,l)),f-=L,l+=L,J)break e}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===f)break e;L=0;do{J=o[l+L++],a.head&&J&&a.length<65536&&(a.head.comment+=String.fromCharCode(J))}while(J&&L<f);if(512&a.flags&&4&a.wrap&&(a.check=n(a.check,o,L,l)),f-=L,l+=L,J)break e}else a.head&&(a.head.comment=null);a.mode=16188;case 16188:if(512&a.flags){for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(4&a.wrap&&B!==(65535&a.check)){e.msg=\"header crc mismatch\",a.mode=D;break}B=0,C=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),e.adler=a.check=0,a.mode=A;break;case 16189:for(;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}e.adler=a.check=I(B),B=0,C=0,a.mode=R;case R:if(0===a.havedict)return e.next_out=d,e.avail_out=h,e.next_in=l,e.avail_in=f,a.hold=B,a.bits=C,_;e.adler=a.check=1,a.mode=A;case A:if(i===w||i===b)break e;case Z:if(a.last){B>>>=7&C,C-=7&C,a.mode=U;break}for(;C<3;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}switch(a.last=1&B,B>>>=1,C-=1,3&B){case 0:a.mode=16193;break;case 1:if(K(a),a.mode=T,i===b){B>>>=2,C-=2;break e}break;case 2:a.mode=16196;break;case 3:e.msg=\"invalid block type\",a.mode=D}B>>>=2,C-=2;break;case 16193:for(B>>>=7&C,C-=7&C;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if((65535&B)!=(B>>>16^65535)){e.msg=\"invalid stored block lengths\",a.mode=D;break}if(a.length=65535&B,B=0,C=0,a.mode=S,i===b)break e;case S:a.mode=16195;case 16195:if(L=a.length,L){if(L>f&&(L=f),L>h&&(L=h),0===L)break e;s.set(o.subarray(l,l+L),d),f-=L,l+=L,h-=L,d+=L,a.length-=L;break}a.mode=A;break;case 16196:for(;C<14;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(a.nlen=257+(31&B),B>>>=5,C-=5,a.ndist=1+(31&B),B>>>=5,C-=5,a.ncode=4+(15&B),B>>>=4,C-=4,a.nlen>286||a.ndist>30){e.msg=\"too many length or distance symbols\",a.mode=D;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;C<3;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.lens[ie[a.have++]]=7&B,B>>>=3,C-=3}for(;a.have<19;)a.lens[ie[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,ee={bits:a.lenbits},Q=c(0,a.lens,0,19,a.lencode,0,a.work,ee),a.lenbits=ee.bits,Q){e.msg=\"invalid code lengths set\",a.mode=D;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;V=a.lencode[B&(1<<a.lenbits)-1],j=V>>>24,Y=V>>>16&255,G=65535&V,!(j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(G<16)B>>>=j,C-=j,a.lens[a.have++]=G;else{if(16===G){for(te=j+2;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(B>>>=j,C-=j,0===a.have){e.msg=\"invalid bit length repeat\",a.mode=D;break}J=a.lens[a.have-1],L=3+(3&B),B>>>=2,C-=2}else if(17===G){for(te=j+3;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=j,C-=j,J=0,L=3+(7&B),B>>>=3,C-=3}else{for(te=j+7;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=j,C-=j,J=0,L=11+(127&B),B>>>=7,C-=7}if(a.have+L>a.nlen+a.ndist){e.msg=\"invalid bit length repeat\",a.mode=D;break}for(;L--;)a.lens[a.have++]=J}}if(a.mode===D)break;if(0===a.lens[256]){e.msg=\"invalid code -- missing end-of-block\",a.mode=D;break}if(a.lenbits=9,ee={bits:a.lenbits},Q=c(1,a.lens,0,a.nlen,a.lencode,0,a.work,ee),a.lenbits=ee.bits,Q){e.msg=\"invalid literal/lengths set\",a.mode=D;break}if(a.distbits=6,a.distcode=a.distdyn,ee={bits:a.distbits},Q=c(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,ee),a.distbits=ee.bits,Q){e.msg=\"invalid distances set\",a.mode=D;break}if(a.mode=T,i===b)break e;case T:a.mode=O;case O:if(f>=6&&h>=258){e.next_out=d,e.avail_out=h,e.next_in=l,e.avail_in=f,a.hold=B,a.bits=C,r(e,F),d=e.next_out,s=e.output,h=e.avail_out,l=e.next_in,o=e.input,f=e.avail_in,B=a.hold,C=a.bits,a.mode===A&&(a.back=-1);break}for(a.back=0;V=a.lencode[B&(1<<a.lenbits)-1],j=V>>>24,Y=V>>>16&255,G=65535&V,!(j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(Y&&0==(240&Y)){for(X=j,W=Y,q=G;V=a.lencode[q+((B&(1<<X+W)-1)>>X)],j=V>>>24,Y=V>>>16&255,G=65535&V,!(X+j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=X,C-=X,a.back+=X}if(B>>>=j,C-=j,a.back+=j,a.length=G,0===Y){a.mode=16205;break}if(32&Y){a.back=-1,a.mode=A;break}if(64&Y){e.msg=\"invalid literal/length code\",a.mode=D;break}a.extra=15&Y,a.mode=16201;case 16201:if(a.extra){for(te=a.extra;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.length+=B&(1<<a.extra)-1,B>>>=a.extra,C-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=16202;case 16202:for(;V=a.distcode[B&(1<<a.distbits)-1],j=V>>>24,Y=V>>>16&255,G=65535&V,!(j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(0==(240&Y)){for(X=j,W=Y,q=G;V=a.distcode[q+((B&(1<<X+W)-1)>>X)],j=V>>>24,Y=V>>>16&255,G=65535&V,!(X+j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=X,C-=X,a.back+=X}if(B>>>=j,C-=j,a.back+=j,64&Y){e.msg=\"invalid distance code\",a.mode=D;break}a.offset=G,a.extra=15&Y,a.mode=16203;case 16203:if(a.extra){for(te=a.extra;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.offset+=B&(1<<a.extra)-1,B>>>=a.extra,C-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){e.msg=\"invalid distance too far back\",a.mode=D;break}a.mode=16204;case 16204:if(0===h)break e;if(L=F-h,a.offset>L){if(L=a.offset-L,L>a.whave&&a.sane){e.msg=\"invalid distance too far back\",a.mode=D;break}L>a.wnext?(L-=a.wnext,M=a.wsize-L):M=a.wnext-L,L>a.length&&(L=a.length),H=a.window}else H=s,M=d-a.offset,L=a.length;L>h&&(L=h),h-=L,a.length-=L;do{s[d++]=H[M++]}while(--L);0===a.length&&(a.mode=O);break;case 16205:if(0===h)break e;s[d++]=a.length,h--,a.mode=O;break;case U:if(a.wrap){for(;C<32;){if(0===f)break e;f--,B|=o[l++]<<C,C+=8}if(F-=h,e.total_out+=F,a.total+=F,4&a.wrap&&F&&(e.adler=a.check=a.flags?n(a.check,s,F,d-F):t(a.check,s,F,d-F)),F=h,4&a.wrap&&(a.flags?B:I(B))!==a.check){e.msg=\"incorrect data check\",a.mode=D;break}B=0,C=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(4&a.wrap&&B!==(4294967295&a.total)){e.msg=\"incorrect length check\",a.mode=D;break}B=0,C=0}a.mode=16208;case 16208:Q=k;break e;case D:Q=p;break e;case 16210:return v;default:return g}return e.next_out=d,e.avail_out=h,e.next_in=l,e.avail_in=f,a.hold=B,a.bits=C,(a.wsize||F!==e.avail_out&&a.mode<D&&(a.mode<U||i!==u))&&P(e,e.output,e.next_out,F-e.avail_out),z-=e.avail_in,F-=e.avail_out,e.total_in+=z,e.total_out+=F,a.total+=F,4&a.wrap&&F&&(e.adler=a.check=a.flags?n(a.check,s,F,e.next_out-F):t(a.check,s,F,e.next_out-F)),e.data_type=a.bits+(a.last?64:0)+(a.mode===A?128:0)+(a.mode===T||a.mode===S?256:0),(0===z&&0===F||i===u)&&Q===m&&(Q=x),Q},inflateEnd:e=>{if(N(e))return g;let t=e.state;return t.window&&(t.window=null),e.state=null,m},inflateGetHeader:(e,t)=>{if(N(e))return g;const i=e.state;return 0==(2&i.wrap)?g:(i.head=t,t.done=!1,m)},inflateSetDictionary:(e,i)=>{const n=i.length;let a,r,o;return N(e)?g:(a=e.state,0!==a.wrap&&a.mode!==R?g:a.mode===R&&(r=1,r=t(r,i,n,0),r!==a.check)?p:(o=P(e,i,n,n),o?(a.mode=16210,v):(a.havedict=1,m)))},inflateInfo:\"pako inflate (from Nodeca project)\"};const G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var X=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const i=t.shift();if(i){if(\"object\"!=typeof i)throw new TypeError(i+\"must be non-object\");for(const t in i)G(i,t)&&(e[t]=i[t])}}return e},W=e=>{let t=0;for(let i=0,n=e.length;i<n;i++)t+=e[i].length;const i=new Uint8Array(t);for(let t=0,n=0,a=e.length;t<a;t++){let a=e[t];i.set(a,n),n+=a.length}return i};let q=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){q=!1}const J=new Uint8Array(256);for(let e=0;e<256;e++)J[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;J[254]=J[254]=1;var Q=e=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,i,n,a,r,o=e.length,s=0;for(a=0;a<o;a++)i=e.charCodeAt(a),55296==(64512&i)&&a+1<o&&(n=e.charCodeAt(a+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),a++)),s+=i<128?1:i<2048?2:i<65536?3:4;for(t=new Uint8Array(s),r=0,a=0;r<s;a++)i=e.charCodeAt(a),55296==(64512&i)&&a+1<o&&(n=e.charCodeAt(a+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),a++)),i<128?t[r++]=i:i<2048?(t[r++]=192|i>>>6,t[r++]=128|63&i):i<65536?(t[r++]=224|i>>>12,t[r++]=128|i>>>6&63,t[r++]=128|63&i):(t[r++]=240|i>>>18,t[r++]=128|i>>>12&63,t[r++]=128|i>>>6&63,t[r++]=128|63&i);return t},V=(e,t)=>{const i=t||e.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let n,a;const r=new Array(2*i);for(a=0,n=0;n<i;){let t=e[n++];if(t<128){r[a++]=t;continue}let o=J[t];if(o>4)r[a++]=65533,n+=o-1;else{for(t&=2===o?31:3===o?15:7;o>1&&n<i;)t=t<<6|63&e[n++],o--;o>1?r[a++]=65533:t<65536?r[a++]=t:(t-=65536,r[a++]=55296|t>>10&1023,r[a++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&q)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let i=\"\";for(let n=0;n<t;n++)i+=String.fromCharCode(e[n]);return i})(r,a)},$=(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let i=t-1;for(;i>=0&&128==(192&e[i]);)i--;return i<0||0===i?t:i+J[e[i]]>t?i:t},ee={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"};var te=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};var ie=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const ne=Object.prototype.toString,{Z_NO_FLUSH:ae,Z_FINISH:re,Z_OK:oe,Z_STREAM_END:se,Z_NEED_DICT:le,Z_STREAM_ERROR:de,Z_DATA_ERROR:fe,Z_MEM_ERROR:ce}=h;function he(e){this.options=X({chunkSize:65536,windowBits:15,to:\"\"},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new te,this.strm.avail_out=0;let i=Y.inflateInit2(this.strm,t.windowBits);if(i!==oe)throw new Error(ee[i]);if(this.header=new ie,Y.inflateGetHeader(this.strm,this.header),t.dictionary&&(\"string\"==typeof t.dictionary?t.dictionary=Q(t.dictionary):\"[object ArrayBuffer]\"===ne.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(i=Y.inflateSetDictionary(this.strm,t.dictionary),i!==oe)))throw new Error(ee[i])}function ue(e,t){const i=new he(t);if(i.push(e),i.err)throw i.msg||ee[i.err];return i.result}he.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize,a=this.options.dictionary;let r,o,s;if(this.ended)return!1;for(o=t===~~t?t:!0===t?re:ae,\"[object ArrayBuffer]\"===ne.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;){for(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),r=Y.inflate(i,o),r===le&&a&&(r=Y.inflateSetDictionary(i,a),r===oe?r=Y.inflate(i,o):r===fe&&(r=le));i.avail_in>0&&r===se&&i.state.wrap>0&&0!==e[i.next_in];)Y.inflateReset(i),r=Y.inflate(i,o);switch(r){case de:case fe:case le:case ce:return this.onEnd(r),this.ended=!0,!1}if(s=i.avail_out,i.next_out&&(0===i.avail_out||r===se))if(\"string\"===this.options.to){let e=$(i.output,i.next_out),t=i.next_out-e,a=V(i.output,e);i.next_out=t,i.avail_out=n-t,t&&i.output.set(i.output.subarray(e,e+t),0),this.onData(a)}else this.onData(i.output.length===i.next_out?i.output:i.output.subarray(0,i.next_out));if(r!==oe||0!==s){if(r===se)return r=Y.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,!0;if(0===i.avail_in)break}}return!0},he.prototype.onData=function(e){this.chunks.push(e)},he.prototype.onEnd=function(e){e===oe&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=W(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var we=he,be=ue,me=function(e,t){return(t=t||{}).raw=!0,ue(e,t)},ke=ue,_e=h,ge={Inflate:we,inflate:be,inflateRaw:me,ungzip:ke,constants:_e};e.Inflate=we,e.constants=_e,e.default=ge,e.inflate=be,e.inflateRaw=me,e.ungzip=ke,Object.defineProperty(e,\"__esModule\",{value:!0})}));\n","// export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\n\n// @ts-ignore\nimport pako from 'pako/dist/pako_inflate.min.js';\n// import dT from './dT';\n\n// export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\nexport default function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\n  // console.log(dT(), 'Gzip uncompress start');\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\n  // console.log(dT(), 'Gzip uncompress finish'/* , result */);\n  return result;\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < digits[i]) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","export default function intToUint(val: number) {\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\n}\n","import bigInt from 'big-integer';\nimport intToUint from '../number/intToUint';\n\nexport default function ulongFromInts(high: number, low: number) {\n  high = intToUint(high), low = intToUint(low);\n  return bigInt(high).shiftLeft(32).add(bigInt(low));\n}\n","import bigInt from 'big-integer';\n\nexport const safeBigInt = bigInt(Number.MAX_SAFE_INTEGER);\nexport const ulongBigInt = bigInt(bigInt[2]).pow(64);\nexport const longBigInt = ulongBigInt.divide(bigInt[2]);\n","import bigInt from 'big-integer';\nimport {longBigInt, ulongBigInt} from './bigIntConstants';\n\nexport function bigIntFromBytes(bytes: Uint8Array | number[], base = 256) {\n  return bigInt.fromArray(bytes instanceof Uint8Array ? [...bytes] : bytes, base);\n}\n\nexport function bigIntToBytes(bigInt: bigInt.BigInteger) {\n  return new Uint8Array(bigInt.toArray(256).value);\n}\n\nexport function bigIntToSigned(bigInt: bigInt.BigInteger) {\n  return bigInt.greater(longBigInt) ? bigInt.minus(ulongBigInt) : bigInt;\n}\n\nexport function bigIntToUnsigned(bigInt: bigInt.BigInteger) {\n  return bigInt.isNegative() ? ulongBigInt.add(bigInt) : bigInt;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Schema, {MTProtoConstructor, MTProtoMethod} from './schema';\nimport {JSONValue} from '../../layer';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport gzipUncompress from '../../helpers/gzipUncompress';\nimport bigInt from 'big-integer';\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\nimport {safeBigInt} from '../../helpers/bigInt/bigIntConstants';\nimport {bigIntToSigned, bigIntToUnsigned} from '../../helpers/bigInt/bigIntConversion';\n\nconst boolFalse = +Schema.API.constructors.find((c) => c.predicate === 'boolFalse').id;\nconst boolTrue = +Schema.API.constructors.find((c) => c.predicate === 'boolTrue').id;\nconst vector = +Schema.API.constructors.find((c) => c.predicate === 'vector').id;\nconst gzipPacked = +Schema.MTProto.constructors.find((c) => c.predicate === 'gzip_packed').id;\n\n// * using slice to have a new buffer, otherwise the buffer will be copied to main thread\nconst sliceMethod: 'slice' | 'subarray' = 'slice'; // subarray\n\nclass TLSerialization {\n  private maxLength = 2048; // 2Kb\n  private offset = 0; // in bytes\n  private mtproto = false;\n  private debug = false;// Modes.debug;\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\n    this.mtproto = options.mtproto || false;\n    this.createBuffer();\n  }\n\n  public createBuffer() {\n    this.buffer = new ArrayBuffer(this.maxLength);\n    this.intView = new Int32Array(this.buffer);\n    this.byteView = new Uint8Array(this.buffer);\n  }\n\n  public getArray() {\n    const resultBuffer = new ArrayBuffer(this.offset);\n\n    // let perf = performance.now();\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\n    // console.log('perf uint8', performance.now() - perf);\n\n    // perf = performance.now();\n    const resultInt32 = new Int32Array(resultBuffer);\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\n    // console.log('perf int32', performance.now() - perf);\n\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\n      console.error(resultUint8, resultInt32);\n    } */\n\n    return resultInt32;\n  }\n\n  public getBuffer() {\n    return this.getArray().buffer;\n  }\n\n  public getBytes(typed: true): Uint8Array;\n  public getBytes(typed?: false): number[];\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\n    if(typed) {\n      const resultBuffer = new ArrayBuffer(this.offset);\n      const resultArray = new Uint8Array(resultBuffer);\n\n      resultArray.set(this.byteView.subarray(0, this.offset));\n\n      return resultArray;\n    }\n\n    const bytes: number[] = new Array(this.offset);\n    for(let i = 0; i < this.offset; ++i) {\n      bytes[i] = this.byteView[i];\n    }\n    return bytes;\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public checkLength(needBytes: number) {\n    if(this.offset + needBytes < this.maxLength) {\n      return;\n    }\n\n    // console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\n    const previousBuffer = this.buffer;\n    // const previousByteView = this.byteView;\n    const previousArray = new Int32Array(previousBuffer);\n\n    this.createBuffer();\n\n    new Int32Array(this.buffer).set(previousArray);\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32),\n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\n  }\n\n  public writeInt(i: number, field: string) {\n    this.debug && console.log('>>>', i.toString(16), i, field);\n\n    const offset = this.offset / 4;\n    this.checkLength(4);\n    this.intView[offset] = i;\n    this.offset += 4;\n\n    return offset;\n  }\n\n  public storeInt(i: number, field?: string) {\n    return this.writeInt(i, (field || '') + ':int');\n  }\n\n  public storeBool(i: boolean, field?: string) {\n    if(i) {\n      this.writeInt(boolTrue, (field || '') + ':bool');\n    } else {\n      this.writeInt(boolFalse, (field || '') + ':bool');\n    }\n  }\n\n  public storeLongP(iHigh: number, iLow: number, field?: string) {\n    this.writeInt(iLow, (field || '') + ':long[low]');\n    this.writeInt(iHigh, (field || '') + ':long[high]');\n  }\n\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\n    if(Array.isArray(sLong)) {\n      if(sLong.length === 2) {\n        return this.storeLongP(sLong[0], sLong[1], field);\n      } else {\n        return this.storeIntBytes(sLong, 64, field);\n      }\n    }\n\n    const _bigInt = bigIntToUnsigned(bigInt(sLong as string));\n    const {quotient, remainder} = _bigInt.divmod(0x100000000);\n    const high = quotient.toJSNumber();\n    const low = remainder.toJSNumber();\n\n    this.writeInt(low, (field || '') + ':long[low]');\n    this.writeInt(high, (field || '') + ':long[high]');\n  }\n\n  public storeDouble(f: any, field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n\n    doubleView[0] = f;\n\n    this.writeInt(intView[0], (field || '') + ':double[low]');\n    this.writeInt(intView[1], (field || '') + ':double[high]');\n  }\n\n  public storeString(s: string, field?: string) {\n    this.debug && console.log('>>>', s, (field || '') + ':string');\n\n    if(s === undefined) {\n      s = '';\n    }\n    const sUTF8 = unescape(encodeURIComponent(s));\n\n    this.checkLength(sUTF8.length + 8);\n\n    const len = sUTF8.length;\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n    for(let i = 0; i < len; ++i) {\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\n    }\n\n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n\n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    } else if(bytes === undefined) {\n      bytes = [];\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\n\n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\n    const len = (bytes as Uint8Array).length;\n    this.checkLength(len + 8);\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n\n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n\n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n\n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = (bytes as Uint8Array).length;\n    if((bits % 32) || (len * 8) !== bits) {\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\n      console.error(error, bytes, field);\n      throw error;\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\n    this.checkLength(len);\n\n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  }\n\n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = bytes.length;\n\n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\n    this.checkLength(len);\n\n    this.byteView.set(bytes, this.offset);\n    this.offset += len;\n  }\n\n  public storeMethod(methodName: string, params: any) {\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const methodData = schema.methods.find((m) => m.method === methodName);\n\n    if(!methodData) {\n      throw new Error('No method ' + methodName + ' found');\n    }\n\n    this.storeInt(methodData.id, methodName + '[id]');\n\n    this.storeBody(params, methodData, methodName);\n\n    return methodData.type;\n  }\n\n  public storeObject(obj: any, type: string, field?: string) {\n    switch(type) {\n      case '#':\n        obj ||= 0;\n      case 'int':\n        return this.storeInt(obj, field);\n      case 'long':\n        return this.storeLong(obj, field);\n      case 'int128':\n        return this.storeIntBytes(obj, 128, field);\n      case 'int256':\n        return this.storeIntBytes(obj, 256, field);\n      case 'int512':\n        return this.storeIntBytes(obj, 512, field);\n      case 'string':\n        return this.storeString(obj, field);\n      case 'bytes':\n        return this.storeBytes(obj, field);\n      case 'double':\n        return this.storeDouble(obj, field);\n      case 'Bool':\n        return this.storeBool(obj, field);\n      case 'true':\n        return;\n    }\n\n    if(Array.isArray(obj)) {\n      if(type.substr(0, 6) === 'Vector') {\n        this.writeInt(vector, field + '[id]');\n      } else if(type.substr(0, 6) !== 'vector') {\n        throw new Error('Invalid vector type ' + type);\n      }\n\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      this.writeInt(obj.length, field + '[count]');\n      for(let i = 0; i < obj.length; ++i) {\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\n      }\n\n      return true;\n    } else if(type.substr(0, 6).toLowerCase() === 'vector') {\n      throw new Error('Invalid vector object');\n    }\n\n    if(!isObject(obj)) {\n      throw new Error('Invalid object for type ' + type);\n    }\n\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const predicate = obj['_'];\n    let isBare = false;\n    const constructorData: MTProtoConstructor = schema.constructors.find((c) => c.predicate === predicate);\n\n    if(isBare = (type.charAt(0) === '%')) {\n      type = type.substr(1);\n    }\n\n    if(!constructorData) {\n      throw new Error('No predicate ' + predicate + ' found');\n    }\n\n    if(predicate === type) {\n      isBare = true;\n    }\n\n    if(!isBare) {\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\n    }\n\n    this.storeBody(obj, constructorData, field + '[' + predicate + ']');\n\n    return constructorData.type;\n  }\n\n  private storeBody(obj: any, constructorData: MTProtoConstructor | MTProtoMethod, field: string) {\n    const pFlags = obj.pFlags || obj; // * support pFlags, though am not expecting it to be there\n    let flagsHandler: {[paramName: string]: {flags: number, offset?: number}};\n    for(const param of constructorData.params) {\n      let type = param.type;\n\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        // * commented to avoid using 'flags' property\n        // if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\n        if(condType[1] === 'true' ? pFlags?.[param.name] : obj[param.name] !== undefined) {\n          flagsHandler[fieldBit[0]].flags |= 1 << +fieldBit[1];\n        } else {\n          continue;\n        }\n        // }\n\n        type = condType[1];\n      }\n\n      const isFlagHandler = type === '#';\n      if(isFlagHandler) {\n        (flagsHandler ??= {})[param.name] = {flags: 0};\n      }\n\n      const result = this.storeObject(\n        isFlagHandler ? flagsHandler[param.name].flags : obj[param.name],\n        type,\n        field + '[' + param.name + ']'\n      );\n\n      if(isFlagHandler) {\n        flagsHandler[param.name].offset = result as number;\n      }\n    }\n\n    for(const paramName in flagsHandler) {\n      const {flags, offset} = flagsHandler[paramName];\n      this.intView[offset] = flags;\n    }\n  }\n}\n\nclass TLDeserialization<FetchLongAs extends Long> {\n  private offset = 0; // in bytes\n  private override: {[key: string]: (result: any, field: string) => void};\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  // this.debug =\n  private mtproto: boolean = false;\n  private debug: boolean;\n\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\n    // buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\n    if(buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.intView = new Int32Array(buffer);\n      this.byteView = new Uint8Array(this.buffer);\n    } else {\n      this.buffer = buffer.buffer;\n      this.intView = new Int32Array(buffer.buffer);\n      this.byteView = buffer;\n    }\n\n    this.override = options.override || {};\n    this.mtproto = !!options.mtproto;\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\n  }\n\n  /* public setMtproto(mtproto: boolean) {\n    this.mtproto = mtproto;\n  } */\n\n  private readInt(field: string) {\n    // if(this.offset >= this.intView.length * 4) {\n    if((this.byteView.length - this.offset) < 4) {\n      console.error(this.byteView, this.offset);\n      throw new Error('Nothing to fetch: ' + field);\n    }\n\n    const i = this.intView[this.offset / 4];\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\n\n    this.debug &&/*  || field.includes('[dialog][read_outbox_max_id]') */\n      console.log('<<<', i.toString(16), i, field,\n        this.byteView.slice(this.offset - 16, this.offset + 16),\n        bytesToHex(this.byteView.slice(this.offset - 16, this.offset + 16)));\n\n    this.offset += 4;\n\n    return i;\n  }\n\n  public fetchInt(field?: string) {\n    return this.readInt((field || '') + ':int');\n  }\n\n  public fetchDouble(field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n\n    intView[0] = this.readInt((field || '') + ':double[low]'),\n    intView[1] = this.readInt((field || '') + ':double[high]');\n\n    return doubleView[0];\n  }\n\n  // ! it should've been signed\n  public fetchLong(field?: string): FetchLongAs {\n    const iLow = this.readInt((field || '') + ':long[low]');\n    const iHigh = this.readInt((field || '') + ':long[high]');\n\n    let ulong = ulongFromInts(iHigh, iLow);\n    if(/* !unsigned &&  */!this.mtproto) { // make it signed\n      ulong = bigIntToSigned(ulong);\n    }\n\n    if(!this.mtproto) {\n      if(safeBigInt.greaterOrEquals(ulong.abs())) {\n        // @ts-ignore\n        return ulong.toJSNumber();\n      }\n    }\n\n    // @ts-ignore\n    return ulong.toString(10);\n  }\n\n  public fetchBool(field?: string): boolean {\n    const i = this.readInt((field || '') + ':bool');\n    if(i === boolTrue) {\n      return true;\n    } else if(i === boolFalse) {\n      return false;\n    }\n\n    this.offset -= 4;\n    return this.fetchObject('Object', field);\n  }\n\n  public fetchString(field?: string): string {\n    let len = this.byteView[this.offset++];\n\n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n\n    let sUTF8 = '';\n    for(let i = 0; i < len; ++i) {\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\n    }\n\n    // Padding\n    while(this.offset % 4) {\n      ++this.offset;\n    }\n\n    let s: string;\n    try {\n      s = decodeURIComponent(escape(sUTF8));\n    } catch(e) {\n      s = sUTF8;\n    }\n\n    this.debug && console.log('<<<', s, (field || '') + ':string');\n\n    return s;\n  }\n\n  public fetchBytes(field?: string) {\n    let len = this.byteView[this.offset++];\n\n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n\n    const bytes = this.byteView[sliceMethod](this.offset, this.offset + len);\n    this.offset += len;\n\n    // Padding\n    while(this.offset % 4) {\n      ++this.offset;\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\n\n    return bytes;\n  }\n\n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\n    if(bits % 32) {\n      throw new Error('Invalid bits: ' + bits);\n    }\n\n    const len = bits / 8;\n    if(typed) {\n      const result = this.byteView[sliceMethod](this.offset, this.offset + len);\n      this.offset += len;\n      return result;\n    }\n\n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; ++i) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\n\n    return bytes;\n  }\n\n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\n    if(len === false) {\n      len = this.readInt((field || '') + '_length');\n      if(len > this.byteView.byteLength) {\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\n      }\n    }\n\n    if(typed) {\n      const bytes = new Uint8Array(len);\n      bytes.set(this.byteView[sliceMethod](this.offset, this.offset + len));\n      this.offset += len;\n      return bytes;\n    }\n\n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; ++i) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\n\n    return bytes;\n  }\n\n  private fetchVector(type: string, field?: string) {\n    const len = this.readInt(field + '[count]');\n    const result: any[] = new Array(len);\n    if(len > 0) {\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      for(let i = 0; i < len; ++i) {\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\n      }\n    }\n\n    return result;\n  }\n\n  public fetchObject(type: string, field?: string): any {\n    switch(type) {\n      case '#':\n      case 'int':\n        return this.fetchInt(field);\n      case 'long':\n        return this.fetchLong(field);\n      case 'int128':\n        return this.fetchIntBytes(128, true, field);\n      case 'int256':\n        return this.fetchIntBytes(256, true, field);\n      case 'int512':\n        return this.fetchIntBytes(512, true, field);\n      case 'string':\n        return this.fetchString(field);\n      case 'bytes':\n        return this.fetchBytes(field);\n      case 'double':\n        return this.fetchDouble(field);\n      case 'Bool':\n        return this.fetchBool(field);\n      case 'true':\n        return true;\n    }\n\n    field = field || type || 'Object';\n\n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\n      return this.fetchVector(type, field);\n    }\n\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    let constructorData: MTProtoConstructor = null;\n    let fallback = false;\n\n    if(type.charAt(0) === '%') {\n      const checkType = type.substr(1);\n      constructorData = schema.constructors.find((c) => c.type === checkType);\n      if(!constructorData) {\n        throw new Error('Constructor not found for type: ' + type);\n      }\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\n      constructorData = schema.constructors.find((c) => c.predicate === type);\n      if(!constructorData) {\n        throw new Error('Constructor not found for predicate: ' + type);\n      }\n    } */ else {\n      const constructorCmp = this.readInt(field + '[id]');\n\n      if(constructorCmp === gzipPacked) { // Gzip packed\n        const compressed = this.fetchBytes(field + '[packed_string]');\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\n\n        return newDeserializer.fetchObject(type, field);\n      }\n\n      if(constructorCmp === vector) {\n        return this.fetchVector(type, field);\n      }\n\n      let index = schema.constructorsIndex;\n      if(!index) {\n        schema.constructorsIndex = index = {};\n        for(let i = 0, len = schema.constructors.length; i < len; ++i) {\n          index[schema.constructors[i].id] = i;\n        }\n      }\n\n      const i = index[constructorCmp];\n      if(i !== undefined) {\n        constructorData = schema.constructors[i];\n      }\n\n      if(!constructorData && this.mtproto) {\n        const schemaFallback = Schema.API;\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; ++i) {\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\n            constructorData = schemaFallback.constructors[i];\n\n            delete this.mtproto;\n            fallback = true;\n            break;\n          }\n        }\n      }\n\n      if(!constructorData) {\n        console.error('Constructor not found:', constructorCmp);\n\n        let int1: number, int2: number;\n        try {\n          int1 = this.fetchInt(field);\n          int2 = this.fetchInt(field);\n        } catch(err) {\n\n        }\n\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\n      }\n    }\n\n    const predicate = constructorData.predicate;\n\n    const result: any = {'_': predicate};\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\n    if(this.override[overrideKey]) {\n      this.override[overrideKey](result, field + '[' + predicate + ']');\n    } else {\n      // * will use local flags storage to avoid passing 'flags' property anywhere\n      let flagsHandler: {[name: string]: number} = {};\n      for(let i = 0, len = constructorData.params.length; i < len; ++i) {\n        const param = constructorData.params[i];\n        let type = param.type;\n\n        const isFlagHandler = type === '#';\n        if(isFlagHandler) {\n          result.pFlags ??= {};\n          (flagsHandler ??= {})[param.name] = 0;\n        }\n\n        const isCond = type.indexOf('?') !== -1;\n        if(isCond) {\n          const condType = type.split('?');\n          const fieldBit = condType[0].split('.');\n\n          if(!(flagsHandler[fieldBit[0]] & (1 << +fieldBit[1]))) {\n            continue;\n          }\n\n          type = condType[1];\n        }\n\n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\n\n        if(isCond && type === 'true') {\n          result.pFlags[param.name] = value;\n        } else {\n          (isFlagHandler ? flagsHandler : result)[param.name] = value;\n        }\n      }\n    }\n\n    if(fallback) {\n      this.mtproto = true;\n    }\n\n    if(type === 'JSONValue') {\n      return this.formatJSONValue(result);\n    }\n\n    return result;\n  }\n\n  private formatJSONValue(jsonValue: JSONValue): any {\n    if(!jsonValue._) return jsonValue;\n    switch(jsonValue._) {\n      case 'jsonNull':\n        return null;\n      case 'jsonObject': {\n        const out: any = {};\n        const objectValues = jsonValue.value;\n        for(let i = 0, length = objectValues.length; i < length; ++i) {\n          const objectValue = objectValues[i];\n          out[objectValue.key] = this.formatJSONValue(objectValue.value);\n        }\n        return out;\n      }\n      default:\n        return jsonValue.value;\n    }\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public setOffset(offset: number) {\n    this.offset = offset;\n  }\n\n  /* public fetchEnd() {\n    if(this.offset !== this.byteView.length) {\n      throw new Error('Fetch end with non-empty buffer');\n    }\n\n    return true;\n  } */\n}\n\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\nexport {TLDeserialization, TLSerialization};\n","import randomize from '../array/randomize';\nimport bufferConcats from './bufferConcats';\n\nexport default function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\n  bytes: T,\n  blockSize: number = 16,\n  zeroes?: boolean,\n  blockSizeAsTotalLength = false,\n  prepend = false\n): T {\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\n  if(needPadding > 0 && needPadding < blockSize) {\n    // //console.log('addPadding()', len, blockSize, needPadding);\n    const padding = new Uint8Array(needPadding);\n    if(zeroes) {\n      for(let i = 0; i < needPadding; ++i) {\n        padding[i] = 0;\n      }\n    } else {\n      randomize(padding);\n    }\n\n    if(bytes instanceof ArrayBuffer) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\n    } else if(bytes instanceof Uint8Array) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\n    } else {\n      // @ts-ignore\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\n    }\n  }\n\n  return bytes;\n}\n","import addPadding from '../bytes/addPadding';\nimport bigInt from 'big-integer';\nimport {bigIntToBytes} from '../bigInt/bigIntConversion';\n\nexport default function longToBytes(sLong: string) {\n  const bigIntBytes = bigIntToBytes(bigInt(sLong)).reverse();\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\n  // console.log('longToBytes', bytes, bigIntBytes);\n\n  return bytes;\n}\n","export default function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\n  const len = bytes1.length;\n  if(len !== bytes2.length) {\n    return false;\n  }\n\n  for(let i = 0; i < len; ++i) {\n    if(bytes1[i] !== bytes2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export default function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\n  if(bytes instanceof Uint8Array) {\n    return bytes;\n  } else if(typeof(bytes) === 'string') {\n    return new TextEncoder().encode(bytes);\n  }\n\n  return new Uint8Array(bytes);\n}\n","import bigInt from 'big-integer';\n\nexport default function sortLongsArray(arr: string[]) {\n  return arr.map((long) => {\n    return bigInt(long);\n  }).sort((a, b) => {\n    return a.compare(b);\n  }).map((bigInt) => {\n    return bigInt.toString(10);\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {TLDeserialization, TLSerialization} from './tl_utils';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport sessionStorage from '../sessionStorage';\nimport Schema from './schema';\nimport {NetworkerFactory} from './networkerFactory';\nimport {logger, LogTypes} from '../logger';\nimport {InvokeApiOptions} from '../../types';\nimport longToBytes from '../../helpers/long/longToBytes';\nimport MTTransport from './transports/transport';\nimport {nextRandomUint, randomLong} from '../../helpers/random';\nimport App from '../../config/app';\nimport DEBUG from '../../config/debug';\nimport Modes from '../../config/modes';\nimport noop from '../../helpers/noop';\nimport HTTP from './transports/http';\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport bigInt from 'big-integer';\nimport {ConnectionStatus} from './connectionStatus';\nimport ctx from '../../environment/ctx';\nimport bufferConcats from '../../helpers/bytes/bufferConcats';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport convertToUint8Array from '../../helpers/bytes/convertToUint8Array';\nimport isObject from '../../helpers/object/isObject';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport sortLongsArray from '../../helpers/long/sortLongsArray';\nimport randomize from '../../helpers/array/randomize';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\nimport {getEnvironment} from '../../environment/utils';\nimport {TimeManager} from './timeManager';\n\n// console.error('networker included!', new Error().stack);\n\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\n  noResponse: true, // http_wait\n  longPoll: true,\n\n  notContentRelated: true, // ACK\n  noSchedule: true,\n  // withResult: true,\n  messageId: MTLong,\n}>;\n\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\n  msg_id: MTLong,\n  seq_no: number,\n  body?: Uint8Array | number[],\n  isAPI?: boolean,\n  // only these four are important\n\n  acked?: boolean,\n\n  deferred?: CancellablePromise<void>,\n\n  container?: boolean,\n  inner?: MTLong[],\n\n  // below - options\n\n  notContentRelated?: true,\n  noSchedule?: true,\n\n  resultType?: string,\n\n  longPoll?: true,\n  noResponse?: true, // only with http (http_wait for longPoll)\n};\n\nconst DRAIN_TIMEOUT = 10000;\nconst delays: {\n  [k in 'client' | 'file']: {\n    disconnectDelayMin: number,\n    disconnectDelayMax: number,\n    pingInterval: number,\n    pingMaxTime: number,\n    connectionTimeout: number\n  }\n} = {\n  client: {\n    disconnectDelayMin: 7,\n    disconnectDelayMax: 20,\n    pingInterval: 2000,\n    pingMaxTime: 5,\n    connectionTimeout: 5000\n  },\n  file: {\n    disconnectDelayMin: 10,\n    disconnectDelayMax: 24,\n    pingInterval: 3000,\n    pingMaxTime: 7,\n    connectionTimeout: 7500\n  }\n};\nconst RESEND_OPTIONS: MTMessageOptions = {\n  noSchedule: true,\n  notContentRelated: true\n};\nlet invokeAfterMsgConstructor: number;\nlet networkerTempId = 0;\n\nexport default class MTPNetworker {\n  private authKeyUint8: Uint8Array;\n\n  public isFileNetworker: boolean;\n  private isFileUpload: boolean;\n  private isFileDownload: boolean;\n\n  private lastServerMessages: Array<MTLong> = [];\n\n  private sentMessages: {\n    [msgId: MTLong]: MTMessage\n  } = {};\n\n  private pendingMessages: {[msgId: MTLong]: number} = {};\n  private pendingAcks: Array<MTLong> = [];\n  private pendingResendReq: MTLong[] = [];\n  // private pendingResendAnsReq: MTLong[] = [];\n  public connectionInited: boolean;\n\n  private nextReqTimeout: number;\n  private nextReq: number = 0;\n\n  // HTTP-only\n  private longPollInterval: number;\n  private longPollPending: number;\n  private checkConnectionRetryAt: number;\n  private checkConnectionTimeout: number;\n  private checkConnectionPeriod = 0;\n  private sleepAfter: number;\n  private offline = false;\n  private sendingLongPoll: boolean;\n\n  private seqNo: number;\n  private prevSessionId: Uint8Array;\n  private sessionId: Uint8Array;\n  private serverSalt: Uint8Array;\n\n  private lastResendReq: {\n    reqMsgId: MTLong,\n    msgIds: MTPNetworker['pendingResendReq']\n  };\n  // private lastResendAnsReq: MTPNetworker['lastResendReq'];\n\n  private name: string;\n  private log: ReturnType<typeof logger>;\n\n  public isOnline = false;\n  private status: ConnectionStatus = ConnectionStatus.Closed;\n  private lastResponseTime = 0;\n\n  private debug = DEBUG /* && false */ || Modes.debug;\n\n  public activeRequests = 0;\n\n  public onDrain: () => void;\n  private onDrainTimeout: number;\n\n  public transport: MTTransport;\n\n  // WS-only\n  private pingDelayDisconnectDeferred: CancellablePromise<string>;\n  private pingPromise: Promise<void>;\n  // private pingInterval: number;\n  private lastPingTime: number;\n  private lastPingStartTime: number;\n  private lastPingDelayDisconnectId: string;\n\n  // public onConnectionStatusChange: (online: boolean) => void;\n\n  // private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\n\n  private delays: typeof delays[keyof typeof delays];\n  // private getNewTimeOffset: boolean;\n\n  constructor(\n    private networkerFactory: NetworkerFactory,\n    private timeManager: TimeManager,\n    public dcId: number,\n    private authKey: Uint8Array,\n    private authKeyId: Uint8Array,\n    serverSalt: Uint8Array,\n    options: InvokeApiOptions = {}\n  ) {\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\n    this.serverSalt = convertToUint8Array(serverSalt);\n\n    this.isFileUpload = !!options.fileUpload;\n    this.isFileDownload = !!options.fileDownload;\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\n    this.delays = this.isFileNetworker ? delays.file : delays.client;\n\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\n    this.name = 'NET-' + dcId + suffix;\n    // this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\n    this.log = logger(this.name + (suffix ? '' : '-C') + '-' + networkerTempId++, LogTypes.Log/*  | LogTypes.Debug */ | LogTypes.Error | LogTypes.Warn);\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\n\n    // Test resend after bad_server_salt\n    /* if(this.dcId === 2 && this.upload) {\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\n      this.serverSalt[0] = 0;\n    } */\n\n    this.updateSession();\n\n    // if(!NetworkerFactory.offlineInited) {\n    //   NetworkerFactory.offlineInited = true;\n    //   /* rootScope.offline = true\n    //   rootScope.offlineConnecting = true */\n    // }\n  }\n\n  private updateSession() {\n    this.seqNo = 0;\n    this.prevSessionId = this.sessionId;\n    this.sessionId = randomize(new Uint8Array(8));\n  }\n\n  /* private clearContainers() {\n    for(const messageId in this.sentMessages) {\n      const message = this.sentMessages[messageId];\n      if(message.container) {\n        delete this.sentMessages[messageId];\n      }\n    }\n  } */\n\n  private updateSentMessage(sentMessageId: string) {\n    const sentMessage = this.sentMessages[sentMessageId];\n    if(!sentMessage) {\n      return false;\n    }\n\n    if(sentMessage.container) {\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\n        if(!innerSentMessage) {\n          sentMessage.inner.splice(idx, 1);\n        } else {\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\n        }\n      });\n    }\n\n    sentMessage.msg_id = this.timeManager.generateId();\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated || sentMessage.container);\n\n    if(this.debug) {\n      this.log(`updateSentMessage, old=${sentMessageId}, new=${sentMessage.msg_id}`);\n    }\n\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\n    delete this.sentMessages[sentMessageId];\n\n    return sentMessage;\n  }\n\n  private generateSeqNo(notContentRelated?: boolean) {\n    let seqNo = this.seqNo * 2;\n\n    if(!notContentRelated) {\n      seqNo++;\n      this.seqNo++;\n    }\n\n    return seqNo;\n  }\n\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n\n    serializer.storeMethod(method, params);\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n\n    if(Modes.debug) {\n      this.log('MT call', method, params, messageId, seqNo);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n    serializer.storeObject(object, 'Object');\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo(options.notContentRelated);\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n\n    if(Modes.debug) {\n      this.log('MT message', object, messageId, seqNo);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\n    const serializer = new TLSerialization(options);\n\n    if(!this.connectionInited) { // this will call once for each new session\n      // /////this.log('Wrap api call !this.connectionInited');\n\n      const invokeWithLayer = Schema.API.methods.find((m) => m.method === 'invokeWithLayer');\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\n\n      // @ts-ignore\n      serializer.storeInt(Schema.layer, 'layer');\n\n      const initConnection = Schema.API.methods.find((m) => m.method === 'initConnection');\n      if(!initConnection) throw new Error('no initConnection!');\n\n      serializer.storeInt(+initConnection.id, 'initConnection');\n      serializer.storeInt(0x0, 'flags');\n      serializer.storeInt(App.id, 'api_id');\n      serializer.storeString(getEnvironment().USER_AGENT || 'Unknown UserAgent', 'device_model');\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\n      serializer.storeString(App.langPack, 'lang_pack');\n      serializer.storeString(this.networkerFactory.language, 'lang_code');\n      // serializer.storeInt(0x0, 'proxy');\n      /* serializer.storeMethod('initConnection', {\n        'flags': 0,\n        'api_id': App.id,\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\n        'system_version': navigator.platform || 'Unknown Platform',\n        'app_version': App.version,\n        'system_lang_code': navigator.language || 'en',\n        'lang_pack': '',\n        'lang_code': navigator.language || 'en'\n      }); */\n    }\n\n    if(options.afterMessageId) {\n      if(invokeAfterMsgConstructor === undefined) {\n        const m = Schema.API.methods.find((m) => m.method === 'invokeAfterMsg');\n        invokeAfterMsgConstructor = m ? +m.id : 0;\n      }\n\n      if(invokeAfterMsgConstructor) {\n        // if(this.debug) {\n        //   this.log('invokeApi: store invokeAfterMsg');\n        // }\n\n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\n        serializer.storeLong(options.afterMessageId, 'msg_id');\n      } else {\n        this.log.error('no invokeAfterMsg!');\n      }\n    }\n\n    options.resultType = serializer.storeMethod(method, params);\n\n    /* if(method === 'account.updateNotifySettings') {\n      this.log('api call body:', serializer.getBytes(true));\n    } */\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true),\n      isAPI: true\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log('Api call', method, message, params, options);\n    } else if(this.debug) {\n      this.log('Api call', method, params, options);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public changeTransport(transport?: MTTransport) {\n    const oldTransport = this.transport;\n    if(oldTransport) {\n      oldTransport.destroy();\n\n      if(this.nextReqTimeout) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n      }\n\n      this.connectionInited = false;\n\n      if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n        if(this.longPollInterval !== undefined) {\n          clearInterval(this.longPollInterval);\n          this.longPollInterval = undefined;\n        }\n\n        this.clearCheckConnectionTimeout();\n      }\n    }\n\n    this.log('change transport', transport, oldTransport);\n\n    if(import.meta.env.VITE_MTPROTO_HAS_WS) {\n      this.clearPingDelayDisconnect();\n\n      // if(this.pingInterval !== undefined) {\n      //   clearInterval(this.pingInterval);\n      //   this.pingInterval = undefined;\n      // }\n\n      // this.clearPing();\n    }\n\n    this.transport = transport;\n    if(!transport) {\n      return;\n    }\n\n    transport.networker = this;\n\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || transport instanceof HTTP) {\n        this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\n        this.checkLongPoll();\n        this.checkConnection('changed transport');\n      }\n    }\n\n    if(import.meta.env.VITE_MTPROTO_HAS_WS) {\n      // * handle outcoming dead socket, server will close the connection\n      if((transport as TcpObfuscated).connection) {\n        // this.sendPingDelayDisconnect();\n\n        if(transport.connected) {\n          this.setConnectionStatus(ConnectionStatus.Connected);\n        }\n\n        // this.pingInterval = ctx.setInterval(this.sendPing, PING_INTERVAL);\n        // this.sendPing();\n      }\n    }\n\n    this.resend();\n  }\n\n  public destroy() {\n    this.log('destroy');\n  }\n\n  public forceReconnectTimeout() {\n    if((this.transport as TcpObfuscated).reconnect) {\n      (this.transport as TcpObfuscated).reconnect();\n    } else {\n      this.resend();\n    }\n  }\n\n  public forceReconnect() {\n    if((this.transport as TcpObfuscated).forceReconnect) {\n      (this.transport as TcpObfuscated).forceReconnect();\n    } else {\n      this.checkConnection('force reconnect');\n    }\n  }\n\n  /* private clearPing() {\n    if(this.pingPromise) {\n      this.pingPromise = undefined;\n    }\n\n    this.lastPingTime = undefined;\n  }\n\n  private sendPing = () => {\n    // return;\n\n    // if(!(this.transport as TcpObfuscated).connected) {\n    //   this.clearPing();\n    //   return;\n    // }\n\n    if(this.pingPromise) {\n      return;\n    }\n\n    const startTime = Date.now();\n    this.log('sendPing: ping', startTime);\n    const promise = this.pingPromise = this.wrapMtpCall('ping', {\n      ping_id: randomLong()\n    }, {\n      notContentRelated: true\n    }).then(() => {\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.log('sendPing: pong', elapsedTime);\n\n      setTimeout(() => {\n        if(this.pingPromise !== promise) {\n          return;\n        }\n\n        this.pingPromise = undefined;\n        this.sendPing();\n      }, Math.max(0, PING_INTERVAL - elapsedTime));\n    });\n  }; */\n\n  private clearPingDelayDisconnect() {\n    const deferred = this.pingDelayDisconnectDeferred;\n    this.pingDelayDisconnectDeferred = undefined;\n    this.lastPingDelayDisconnectId = undefined;\n\n    if(deferred) {\n      deferred.reject();\n    }\n  }\n\n  private sendPingDelayDisconnect = () => {\n    // return;\n\n    if(this.pingDelayDisconnectDeferred || !this.transport || !this.transport.connected) return;\n\n    /* if(!this.isOnline) {\n      if((this.transport as TcpObfuscated).connected) {\n        (this.transport as TcpObfuscated).connection.close();\n      }\n\n      return;\n    } */\n\n    const deferred = this.pingDelayDisconnectDeferred = deferredPromise();\n    const delays = this.delays;\n    const pingMaxTime = this.delays.pingMaxTime;\n    const lastPingTime = Math.min(this.lastPingTime ?? 0, pingMaxTime);\n    const disconnectDelay = Math.round(delays.disconnectDelayMin + lastPingTime / pingMaxTime * (delays.disconnectDelayMax - delays.disconnectDelayMin));\n    const timeoutTime = disconnectDelay * 1000;\n    const startTime = this.lastPingStartTime = Date.now();\n    const pingId = this.lastPingDelayDisconnectId = randomLong();\n    const options: MTMessageOptions = {notContentRelated: true};\n    this.wrapMtpCall('ping_delay_disconnect', {\n      ping_id: pingId,\n      disconnect_delay: disconnectDelay\n    }, options);\n\n    const log = this.log.bindPrefix('sendPingDelayDisconnect');\n    this.debug && log.debug(`ping, timeout=${timeoutTime}, lastPingTime=${this.lastPingTime}, msgId=${options.messageId}, pingId=${pingId}`);\n    const rejectTimeout = ctx.setTimeout(deferred.reject.bind(deferred), timeoutTime);\n\n    const onResolved = (reason: string) => {\n      clearTimeout(rejectTimeout);\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.debug && log.debug(`pong, reason='${reason}', time=${lastPingTime}, msgId=${options.messageId}`);\n      if(elapsedTime > timeoutTime) {\n        throw undefined;\n      } else {\n        return pause(Math.max(0, this.delays.pingInterval - elapsedTime/* timeoutTime - elapsedTime - PING_INTERVAL */));\n      }\n    };\n\n    const onTimeout = () => {\n      clearTimeout(rejectTimeout);\n      const transport = this.transport as TcpObfuscated;\n      if(this.pingDelayDisconnectDeferred !== deferred || !transport?.connection) {\n        return;\n      }\n\n      log.error('catch, closing connection', this.lastPingTime, options.messageId);\n      transport.connection.close();\n    };\n\n    const onFinally = () => {\n      if(this.pingDelayDisconnectDeferred !== deferred) {\n        return;\n      }\n\n      this.pingDelayDisconnectDeferred = undefined;\n      this.sendPingDelayDisconnect();\n    };\n\n    deferred\n    .then(onResolved)\n    .catch(onTimeout)\n    .finally(onFinally);\n  };\n\n  private checkLongPoll = () => {\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      return;\n    }\n\n    const isClean = this.cleanupSent();\n    // this.log.error('Check lp', this.longPollPending, this.dcId, isClean, this);\n    if((this.longPollPending && Date.now() < this.longPollPending) ||\n      this.offline ||\n      this.isStopped() ||\n      this.isFileNetworker) {\n      // this.log('No lp this time');\n      return false;\n    }\n\n    sessionStorage.get('dc').then((baseDcId) => {\n      if(isClean && (\n        baseDcId !== this.dcId ||\n          (this.sleepAfter && Date.now() > this.sleepAfter)\n      )) {\n        // console.warn(dT(), 'Send long-poll for DC is delayed', this.dcId, this.sleepAfter);\n        return;\n      }\n\n      this.sendLongPoll();\n    });\n  };\n\n  private sendLongPoll() {\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      return;\n    }\n\n    if(this.sendingLongPoll) return;\n    this.sendingLongPoll = true;\n    const maxWait = 25000;\n\n    this.longPollPending = Date.now() + maxWait;\n    this.debug && this.log.debug('sendLongPoll', this.longPollPending);\n\n    this.wrapMtpCall('http_wait', {\n      max_delay: 500,\n      wait_after: 150,\n      max_wait: maxWait\n    }, {\n      noResponse: true,\n      // notContentRelated: true,\n      longPoll: true\n    }).then(() => {\n      this.longPollPending = undefined;\n      setTimeout(this.checkLongPoll, 0);\n    }, (error: ErrorEvent) => {\n      this.log('Long-poll failed', error);\n    }).finally(() => {\n      this.sendingLongPoll = undefined;\n    });\n  }\n\n  private checkConnection = (event: Event | string) => {\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      return;\n    }\n\n    this.debug && this.log('Check connection', event);\n    this.clearCheckConnectionTimeout();\n\n    if(!this.transport) {\n      this.log.warn('No transport for checkConnection');\n      return;\n    }\n\n    const serializer = new TLSerialization({mtproto: true});\n    const pingId = randomLong();\n\n    serializer.storeMethod('ping', {\n      ping_id: pingId\n    });\n\n    const pingMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      body: serializer.getBytes(true)\n    };\n\n    if(this.offline) {\n      this.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.sendEncryptedRequest(pingMessage).then(() => {\n      this.toggleOffline(false);\n    }, () => {\n      this.debug && this.log('Delay', this.checkConnectionPeriod * 1000);\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\n      this.checkConnectionPeriod = Math.min(60, this.checkConnectionPeriod * 1.5);\n    });\n  };\n\n  private clearCheckConnectionTimeout() {\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      return;\n    }\n\n    if(this.checkConnectionTimeout !== undefined) {\n      clearTimeout(this.checkConnectionTimeout);\n      this.checkConnectionTimeout = undefined;\n    }\n  }\n\n  private toggleOffline(offline: boolean) {\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      return;\n    }\n\n    if(this.offline !== offline) {\n      this.offline = offline;\n\n      this.clearCheckConnectionTimeout();\n      if(offline) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n\n        if(this.checkConnectionPeriod < 1.5) {\n          this.checkConnectionPeriod = 0;\n        }\n\n        const delay = this.checkConnectionPeriod * 1000 | 0;\n        this.checkConnectionRetryAt = Date.now() + delay;\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOfline'), delay);\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5);\n\n        if(!import.meta.env.VITE_MTPROTO_WORKER) {\n          document.body.addEventListener('online', this.checkConnection, false);\n          document.body.addEventListener('focus', this.checkConnection, false);\n        }\n      } else {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n        this.checkLongPoll();\n\n        this.scheduleRequest();\n\n        if(!import.meta.env.VITE_MTPROTO_WORKER) {\n          document.body.removeEventListener('online', this.checkConnection);\n          document.body.removeEventListener('focus', this.checkConnection);\n        }\n      }\n    }\n\n    this.setConnectionStatus(offline ? ConnectionStatus.Closed : ConnectionStatus.Connected, offline ? this.checkConnectionRetryAt : undefined);\n  }\n\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      return;\n    }\n    // let timeout = setTimeout(() => {\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\n    // }, 5e3);\n\n    promise.then((result) => {\n      this.toggleOffline(false);\n      // this.log('parse for', message);\n      return this.parseResponse(result).then((response) => {\n        this.debug && this.log.debug('Server response', response);\n\n        this.processMessage(response.response, response.messageId, response.sessionId);\n\n        this.checkLongPoll();\n        this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\n\n        return true;\n      });\n    }, (error) => {\n      this.log.error('Encrypted request failed', error, message);\n\n      this.pushResend(message.msg_id);\n      this.toggleOffline(true);\n\n      return false;\n    }).then((shouldResolve) => {\n      // clearTimeout(timeout);\n      const sentMessages = this.sentMessages;\n      noResponseMsgs.forEach((msgId) => {\n        const sentMessage = sentMessages[msgId];\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          delete sentMessages[msgId];\n          delete this.pendingMessages[msgId];\n          shouldResolve ? deferred.resolve() : deferred.reject();\n        }\n      });\n    });\n  }\n\n  // тут можно сделать таймаут и выводить дисконнект\n  private pushMessage(message: {\n    msg_id: string,\n    seq_no: number,\n    body: Uint8Array | number[],\n    isAPI?: boolean\n  }, options: MTMessageOptions) {\n    let promise: CancellablePromise<void>;\n    if(!options.notContentRelated || options.noResponse) {\n      promise = deferredPromise();\n    }\n\n    this.sentMessages[message.msg_id] = Object.assign(\n      message,\n      options,\n      promise ? {deferred: promise} : undefined\n    );\n\n    // this.log.error('Networker pushMessage:', this.sentMessages[message.msg_id]);\n\n    this.pendingMessages[message.msg_id] = 0;\n\n    if(!options.noSchedule) {\n      this.scheduleRequest();\n    }\n\n    if(isObject(options)) {\n      options.messageId = message.msg_id;\n    }\n\n    return promise;\n  }\n\n  public attachPromise(promise: Promise<any>, message: MTMessage) {\n    const canIncrement = true;\n    const timeout = setTimeout(() => {\n      if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < this.delays.connectionTimeout) {\n        return;\n      }\n\n      this.log.error('timeout', message);\n      if(this.isOnline) {\n        this.setConnectionStatus(ConnectionStatus.TimedOut);\n      }\n\n      /* this.getEncryptedOutput(message).then((bytes) => {\n        this.log.error('timeout encrypted', bytes);\n      }); */\n    }, this.delays.connectionTimeout);\n\n    promise.catch(noop).finally(() => {\n      clearTimeout(timeout);\n      this.setConnectionStatus(ConnectionStatus.Connected);\n\n      if(canIncrement) {\n        --this.activeRequests;\n        this.setDrainTimeout();\n      }\n    });\n\n    if(canIncrement) {\n      ++this.activeRequests;\n      if(this.onDrainTimeout !== undefined) {\n        clearTimeout(this.onDrainTimeout);\n        this.onDrainTimeout = undefined;\n      }\n    }\n  }\n\n  public setDrainTimeout() {\n    if(!this.activeRequests && this.onDrain && this.onDrainTimeout === undefined) {\n      this.onDrainTimeout = ctx.setTimeout(() => {\n        this.onDrainTimeout = undefined;\n        this.log('drain');\n        this.onDrain();\n      }, DRAIN_TIMEOUT);\n    }\n  }\n\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number) {\n    const isOnline = status === ConnectionStatus.Connected;\n    const willChange = this.status !== status;\n    this.isOnline = isOnline;\n    this.status = status;\n\n    if(willChange) {\n      if(this.networkerFactory.onConnectionStatusChange) {\n        this.networkerFactory.onConnectionStatusChange({\n          _: 'networkerStatus',\n          status,\n          dcId: this.dcId,\n          name: this.name,\n          isFileNetworker: this.isFileNetworker,\n          isFileDownload: this.isFileDownload,\n          isFileUpload: this.isFileUpload,\n          retryAt\n        });\n      }\n\n      if(this.isOnline) {\n        this.scheduleRequest();\n      }\n\n      if((this.transport as TcpObfuscated)?.connection) {\n        this.clearPingDelayDisconnect();\n        this.sendPingDelayDisconnect();\n      }\n\n      // this.getNewTimeOffset = true;\n    }\n    /* if(this.onConnectionStatusChange) {\n      this.onConnectionStatusChange(this.isOnline);\n    } */\n  }\n\n  private pushResend(messageId: string, delay = 100) {\n    const value = delay ? Date.now() + delay : 0;\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage.container) {\n      for(const innerMsgId of sentMessage.inner) {\n        this.pendingMessages[innerMsgId] = value;\n      }\n    } else {\n      this.pendingMessages[messageId] = value;\n    }\n\n    if(sentMessage.acked) {\n      this.log.error('pushResend: acked message?', sentMessage);\n    }\n\n    if(this.debug) {\n      this.log.debug('pushResend:', messageId, sentMessage, this.pendingMessages, delay);\n    }\n\n    this.scheduleRequest(delay);\n  }\n\n  // * correct, fully checked\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\n    const x = isOut ? 0 : 8;\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\n\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256', msgKeyLargePlain);\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\n    return msgKey;\n  };\n\n  // * correct, fully checked\n  private getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\n    const x = isOut ? 0 : 8;\n    const sha2aText = new Uint8Array(52);\n    const sha2bText = new Uint8Array(52);\n    const promises: Array<Promise<Uint8Array>> = [];\n\n    sha2aText.set(msgKey, 0);\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2aText));\n\n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\n    sha2bText.set(msgKey, 36);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2bText));\n\n    return Promise.all(promises).then((results) => {\n      const aesKey = new Uint8Array(32);\n      const aesIv = new Uint8Array(32);\n      const sha2a = new Uint8Array(results[0]);\n      const sha2b = new Uint8Array(results[1]);\n\n      aesKey.set(sha2a.subarray(0, 8));\n      aesKey.set(sha2b.subarray(8, 24), 8);\n      aesKey.set(sha2a.subarray(24, 32), 24);\n\n      aesIv.set(sha2b.subarray(0, 8));\n      aesIv.set(sha2a.subarray(8, 24), 8);\n      aesIv.set(sha2b.subarray(24, 32), 24);\n\n      return [aesKey, aesIv];\n    });\n  }\n\n  public isStopped() {\n    return this.networkerFactory.akStopped && !this.isFileNetworker;\n  }\n\n  private performScheduledRequest() {\n    if(this.isStopped()) {\n      return false;\n    }\n\n    if(this.pendingAcks.length) {\n      const ackMsgIds = this.pendingAcks.slice();\n\n      // this.log('acking messages', ackMsgIDs)\n      this.wrapMtpMessage({\n        _: 'msgs_ack',\n        msg_ids: ackMsgIds\n      }, {\n        notContentRelated: true,\n        noSchedule: true\n      });\n    }\n\n    const pendingResendReqLength = this.pendingResendReq.length;\n    if(pendingResendReqLength) {\n      const options: MTMessageOptions = {...RESEND_OPTIONS};\n      const msgIds = this.pendingResendReq.splice(0, pendingResendReqLength);\n      this.wrapMtpMessage({\n        _: 'msg_resend_req',\n        msg_ids: msgIds\n      }, options);\n\n      this.log('resend: resending requests', options.messageId, msgIds);\n      /* this.lastResendReq = {\n        reqMsgId: options.messageId,\n        msgIds: msgIds\n      }; */\n\n      // this.pendingResendReq.length = 0;\n    }\n\n    // if(this.pendingResendAnsReq.length) {\n    //   const options: MTMessageOptions = {...RESEND_OPTIONS};\n    //   const msgIds = this.pendingResendAnsReq.slice();\n    //   this.wrapMtpMessage({\n    //     _: 'msg_resend_ans_req',\n    //     msg_ids: msgIds\n    //   }, options);\n\n    //   this.log('resend: requesting answers', options.messageId, msgIds);\n    //   this.lastResendAnsReq = {\n    //     reqMsgId: options.messageId,\n    //     msgIds: msgIds\n    //   };\n\n    //   // this.pendingResendAnsReq.length = 0;\n    // }\n\n    let outMessage: MTMessage;\n    const messages: typeof outMessage[] = [];\n\n    // const currentTime = Date.now();\n    let messagesByteLen = 0;\n\n    let hasApiCall: boolean;\n    let hasHttpWait: boolean;\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      hasApiCall = false;\n      hasHttpWait = false;\n    }\n\n    let lengthOverflow = false;\n\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\n    for(const messageId of keys) {\n      // const value = this.pendingMessages[messageId];\n\n      // if(!value || value <= currentTime) {\n      const message = this.sentMessages[messageId];\n      if(message && message.body) {\n        /* if(message.fileUpload) {\n            this.log('performScheduledRequest message:', message, message.body.length, (message.body as Uint8Array).byteLength, (message.body as Uint8Array).buffer.byteLength);\n          } */\n\n        const messageByteLength = message.body.length + 32;\n\n        if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\n          this.log.warn('lengthOverflow', message, messages);\n          lengthOverflow = true;\n\n          if(outMessage) { // if it's not a first message\n            break;\n          }\n        }\n\n        messages.push(message);\n        messagesByteLen += messageByteLength;\n\n        if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n          if(message.isAPI) {\n            hasApiCall = true;\n          } else if(message.longPoll) {\n            hasHttpWait = true;\n          }\n        }\n\n        outMessage = message;\n      } else {\n        // this.log(message, messageId)\n      }\n\n      delete this.pendingMessages[messageId];\n      // }\n    }\n\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\n        if(hasApiCall && !hasHttpWait) {\n          const serializer = new TLSerialization({mtproto: true});\n          serializer.storeMethod('http_wait', {\n            max_delay: 500,\n            wait_after: 150,\n            max_wait: 3000\n          });\n\n          messages.push({\n            msg_id: this.timeManager.generateId(),\n            seq_no: this.generateSeqNo(),\n            body: serializer.getBytes(true)\n          });\n        }\n      }\n    }\n\n    if(!messages.length) {\n      // this.log('no scheduled messages')\n      return;\n    }\n\n    let noResponseMsgs: Array<string>;\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      noResponseMsgs = messages.filter((message) => message.noResponse).map((message) => message.msg_id);\n    }\n\n    if(messages.length > 1) {\n      const container = this.generateContainerMessage(messagesByteLen, messages);\n      outMessage = container.messageWithBody;\n\n      this.sentMessages[outMessage.msg_id] = container.message;\n    } else {\n      this.sentMessages[outMessage.msg_id] = outMessage;\n    }\n\n    this.pendingAcks = [];\n\n    const promise = this.sendEncryptedRequest(outMessage);\n\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\n        this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\n      }\n    }\n\n    if(import.meta.env.VITE_MTPROTO_HAS_WS) {\n      if(!import.meta.env.VITE_MTPROTO_HAS_HTTP || !(this.transport instanceof HTTP)) {\n        this.cleanupSent(); // ! WARNING\n      }\n    }\n\n    if(lengthOverflow) {\n      this.scheduleRequest();\n    }\n  }\n\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\n    const container = new TLSerialization({\n      mtproto: true,\n      startMaxLength: messagesByteLen + 64\n    });\n\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\n    container.storeInt(messages.length, 'CONTAINER[count]');\n\n    const innerMessages: string[] = [];\n    messages.forEach((message, i) => {\n      innerMessages.push(message.msg_id);\n      // this.log('Pushing to container:', message.msg_id);\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\n    });\n\n    const message: MTMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      container: true,\n      inner: innerMessages\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log.warn('Container', innerMessages, message.msg_id, message.seq_no);\n    }\n\n    return {\n      message,\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message)\n    };\n  }\n\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\n    const keyIv = await this.getAesKeyIv(msgKey, true);\n    // this.log('after msg key iv')\n\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\n    // this.log('Finish encrypt')\n\n    return {\n      bytes: encryptedBytes,\n      msgKey\n    };\n  }\n\n  private getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\n    // this.log('get decrypted start')\n    return this.getAesKeyIv(msgKey, false).then((keyIv) => {\n      // this.log('after msg key iv')\n      return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\n    });\n  }\n\n  private getEncryptedOutput(message: MTMessage) {\n    /* if(DEBUG) {\n      this.log.debug('Send encrypted', message, this.authKeyId);\n    } */\n    /* if(!this.isOnline) {\n      this.log('trying to send message when offline:', Object.assign({}, message));\n      //debugger;\n    } */\n\n    const data = new TLSerialization({\n      startMaxLength: message.body.length + 2048\n    });\n\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\n\n    data.storeLong(message.msg_id, 'message_id');\n    data.storeInt(message.seq_no, 'seq_no');\n\n    data.storeInt(message.body.length, 'message_data_length');\n    data.storeRawBytes(message.body, 'message_data');\n\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\n    const desSalt = des.fetchLong();\n    const desSessionId = des.fetchLong();\n\n    if(!this.isOnline) {\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\n    } */\n\n    /* const messageDataLength = message.body.length;\n    let canBeLength = 0; // bytes\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 4;\n    canBeLength += 4;\n    canBeLength += message.body.length; */\n\n    const dataBuffer = data.getBuffer();\n\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\n    } */\n\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\n    const padding = /* (message as any).padding ||  */randomize(new Uint8Array(paddingLength))/* .fill(0) */;\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\n\n    // (message as any).padding = padding;\n\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\n\n    /* if(dataWithPadding.byteLength % 16) {\n      this.log.error('aaa', dataWithPadding, paddingLength);\n    }\n\n    if(message.fileUpload) {\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\n    } */\n\n    // * full next block is correct\n    return this.getEncryptedMessage(dataWithPadding).then((encryptedResult) => {\n      /* if(DEBUG) {\n        this.log('Got encrypted out message', encryptedResult);\n      } */\n\n      const request = new TLSerialization({\n        startMaxLength: encryptedResult.bytes.length + 256\n      });\n      request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\n\n      const requestData = request.getBytes(true);\n\n      // if(this.isFileNetworker) {\n      //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\n      //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\n      //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\n      //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\n      // }\n\n      return requestData;\n    });\n  }\n\n  private async sendEncryptedRequest(message: MTMessage) {\n    const requestData = await this.getEncryptedOutput(message);\n\n    if(!this.transport) {\n      this.log.error('trying to send something when offline', this.transport, this);\n    }\n\n    this.debug && this.log.debug('sending:', message, [message.msg_id].concat(message.inner || []), requestData.length);\n    const promise: Promise<Uint8Array> = this.transport ? this.transport.send(requestData) as any : Promise.reject({});\n    // this.debug && this.log.debug('sendEncryptedRequest: launched message into space:', message, promise);\n\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      return promise;\n    }\n\n    if(import.meta.env.VITE_MTPROTO_HAS_WS && !(this.transport instanceof HTTP)) {\n      return promise;\n    }\n\n    const baseError: ApiError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE',\n      // @ts-ignore\n      transport: this.transport\n    };\n\n    return promise.then((result) => {\n      if(!result?.byteLength) {\n        throw baseError;\n      }\n\n      // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\n      return result;\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          type: 'NETWORK_BAD_REQUEST',\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n  }\n\n  public parseResponse(responseBuffer: Uint8Array) {\n    // const perf = performance.now();\n    /* if(this.debug) {\n      this.log.debug('Start parsing response', responseBuffer);\n    } */\n\n    this.lastResponseTime = Date.now();\n\n    const deserializer = new TLDeserialization(responseBuffer);\n\n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\n      throw new Error('[MT] Invalid server auth_key_id: ' + bytesToHex(authKeyId));\n    }\n\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\n\n    return this.getDecryptedMessage(msgKey, encryptedData).then((dataWithPadding) => {\n      // this.log('after decrypt')\n      return this.getMsgKey(dataWithPadding, false).then((calcMsgKey) => {\n        if(!bytesCmp(msgKey, calcMsgKey)) {\n          this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\n          this.updateSession(); // fix 28.01.2020\n          throw new Error('[MT] server msgKey mismatch, updating session');\n        }\n        // this.log('after msgKey check')\n\n        let deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\n\n        /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\n        const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\n        const messageId = deserializer.fetchLong('message_id');\n\n        if(!bytesCmp(sessionId, this.sessionId) &&\n          (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\n          this.log.warn('Sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\n          // this.updateSession();\n          // this.sessionID = sessionID;\n          throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\n        }\n\n        const seqNo = deserializer.fetchInt('seq_no');\n\n        const totalLength = dataWithPadding.byteLength;\n\n        const messageBodyLength = deserializer.fetchInt('message_data[length]');\n        let offset = deserializer.getOffset();\n\n        if((messageBodyLength % 4) ||\n          messageBodyLength > totalLength - offset) {\n          throw new Error('[MT] Invalid body length: ' + messageBodyLength);\n        }\n        const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\n\n        offset = deserializer.getOffset();\n        const paddingLength = totalLength - offset;\n        if(paddingLength < 12 || paddingLength > 1024) {\n          throw new Error('[MT] Invalid padding length: ' + paddingLength);\n        }\n\n        // let buffer = bytesToArrayBuffer(messageBody);\n        deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\n          mtproto: true,\n          override: {\n            mt_message: (result: any, field: string) => {\n              result.msg_id = deserializer.fetchLong(field + '[msg_id]');\n              result.seqno = deserializer.fetchInt(field + '[seqno]');\n              result.bytes = deserializer.fetchInt(field + '[bytes]');\n\n              const offset = deserializer.getOffset();\n\n              // self.log('mt_message!!!!!', result, field);\n\n              try {\n                result.body = deserializer.fetchObject('Object', field + '[body]');\n              } catch(e) {\n                this.log.error('parse error', (e as Error).message, (e as Error).stack);\n                result.body = {\n                  _: 'parse_error',\n                  error: e\n                };\n              }\n\n              if(deserializer.getOffset() !== offset + result.bytes) {\n                // console.warn(dT(), 'set offset', this.offset, offset, result.bytes)\n                // this.log(result)\n                deserializer.setOffset(offset + result.bytes);\n              }\n              // this.log('override message', result)\n            },\n            mt_rpc_result: (result: any, field: any) => {\n              result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\n\n              const sentMessage = this.sentMessages[result.req_msg_id];\n              const type = sentMessage && sentMessage.resultType || 'Object';\n\n              if(result.req_msg_id && !sentMessage) {\n                // console.warn(dT(), 'Result for unknown message', result);\n                return;\n              }\n\n              // deserializer.setMtproto(false);\n              result.result = deserializer.fetchObject(type, field + '[result]');\n              // deserializer.setMtproto(true);\n              // self.log(dT(), 'override rpc_result', sentMessage, type, result);\n            }\n          }\n        });\n\n        const response = deserializer.fetchObject('', 'INPUT');\n        // this.log.error('Parse response time:', performance.now() - perf);\n        return {\n          response,\n          messageId,\n          sessionId,\n          seqNo\n        };\n      });\n    });\n  }\n\n  private applyServerSalt(newServerSalt: string) {\n    const serverSalt = longToBytes(newServerSalt);\n\n    sessionStorage.set({\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\n    });\n\n    this.serverSalt = new Uint8Array(serverSalt);\n  }\n\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой)\n  public scheduleRequest(delay?: number) {\n    /* if(!this.isOnline) {\n      return;\n    } */\n\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\n        if(this.offline) {\n          this.checkConnection('forced schedule');\n        }\n\n        delay ||= 0; // set zero timeout to pack other messages too\n      }\n    }\n\n    const nextReq = Date.now() + (delay || 0);\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\n      // this.debug && this.log('scheduleRequest: nextReq', this.nextReq, nextReq);\n      return;\n    }\n\n    // this.debug && this.log('scheduleRequest: delay', delay);\n\n    /* if(this.nextReqTimeout) {\n      return;\n    } */\n\n    // const perf = performance.now();\n    if(this.nextReqTimeout) {\n      clearTimeout(this.nextReqTimeout);\n    }\n\n    const cb = () => {\n      // this.debug && this.log('scheduleRequest: timeout delay was:', performance.now() - perf);\n\n      this.nextReqTimeout = 0;\n      this.nextReq = 0;\n\n      if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n        if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\n          if(this.offline) {\n            // this.log('Cancel scheduled');\n            return;\n          }\n        }\n      }\n\n      this.performScheduledRequest();\n    };\n\n    this.nextReq = nextReq;\n\n    if(delay !== undefined) {\n      this.nextReqTimeout = ctx.setTimeout(cb, delay);\n    } else {\n      cb();\n    }\n  }\n\n  private ackMessage(msgId: MTLong) {\n    // this.log('ack message', msgID)\n    this.pendingAcks.push(msgId);\n\n    let delay: number;\n\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\n        delay = 30000;\n      }\n    }\n\n    this.scheduleRequest(delay);\n  }\n\n  private reqResend(msgId: MTLong/* , isAnswer?: boolean */) {\n    if(this.debug) {\n      this.log.debug('Req resend', msgId/* , isAnswer */);\n    }\n\n    // (isAnswer ? this.pendingResendAnsReq : this.pendingResendReq).push(msgId);\n    this.pendingResendReq.push(msgId);\n    this.scheduleRequest(100);\n  }\n\n  public cleanupSent() {\n    let notEmpty = false;\n    const sentMessages = this.sentMessages;\n    // this.log('clean start', this.dcId/*, sentMessages*/)\n    Object.keys(sentMessages).forEach((msgId) => {\n      const message = sentMessages[msgId];\n\n      // this.log('clean iter', msgID, message)\n      if(message.notContentRelated && this.pendingMessages[msgId] === undefined) {\n        // this.log('clean notContentRelated', msgID)\n        delete sentMessages[msgId];\n      } else if(message.container) {\n        for(const innerMsgId of message.inner) {\n          if(sentMessages[innerMsgId] !== undefined) {\n            // this.log('clean failed, found', msgID, message.inner[i], sentMessages[message.inner[i]].seq_no)\n            notEmpty = true;\n            return;\n          }\n        }\n        // this.log('clean container', msgID)\n        delete sentMessages[msgId];\n      } else {\n        notEmpty = true;\n      }\n    });\n\n    return !notEmpty;\n  }\n\n  private processMessageAck(messageId: Long) {\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage && !sentMessage.acked) {\n      // delete sentMessage.body;\n      sentMessage.acked = true;\n    }\n  }\n\n  private processError(rawError: {error_message: string, error_code: number}): ApiError {\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\n    rawError.error_code = rawError.error_code;\n\n    return {\n      code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\n      type: matches[1] as any || 'UNKNOWN',\n      description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\n      originalError: rawError\n    };\n  }\n\n  /**\n   * * только для сокета\n   * TODO: consider about containers resend\n   */\n  public resend() {\n    const sentMessages = this.sentMessages;\n    for(const id in sentMessages) {\n      const msg = sentMessages[id];\n      if(msg.body || msg.container) {\n        this.pushResend(id);\n      }\n    }\n\n    if((this.transport as TcpObfuscated).connection) {\n      this.clearPingDelayDisconnect();\n      this.sendPingDelayDisconnect();\n    }\n  }\n\n  /* public requestMessageStatus() {\n    const ids: string[] = [];\n    for(const id in this.sentMessages) {\n      const message = this.sentMessages[id];\n      if(message.isAPI && message.fileUpload) {\n        ids.push(message.msg_id);\n      }\n    }\n\n    this.wrapMtpMessage({\n      _: 'msgs_state_req',\n      msg_ids: ids\n    }, {\n      notContentRelated: true\n    }).then((res) => {\n      this.log('status', res);\n    });\n  } */\n\n  private applyServerTime(messageId: string) {\n    const serverTime = bigInt(messageId).shiftRight(32).toJSNumber();\n    this.log('applying server time', serverTime);\n    return this.timeManager.applyServerTime(serverTime);\n  }\n\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[]) {\n    if(message._ === 'messageEmpty') {\n      this.log.warn('processMessage: messageEmpty', message, messageId);\n      return;\n    }\n\n    // messageId = messageId.toString();\n\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\n    if(msgidInt % 2) {\n      this.log.warn('Server even message id: ', messageId, message);\n      return;\n    }\n\n    if(this.debug) {\n      this.log.debug('process message', message, messageId);\n    }\n\n    if(this.pingDelayDisconnectDeferred) {\n      this.pingDelayDisconnectDeferred.resolve('any message');\n    }\n\n    // let changedTimeOffset: boolean;\n    // if(this.getNewTimeOffset) {\n    //   changedTimeOffset = this.applyServerTime(messageId);\n    //   this.getNewTimeOffset = undefined;\n    // }\n\n    switch(message._) {\n      case 'msg_container': {\n        for(const innerMessage of message.messages) {\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\n        }\n\n        break;\n      }\n\n      case 'bad_server_salt': {\n        this.log('Bad server salt', message);\n\n        this.applyServerSalt(message.new_server_salt);\n\n        if(this.sentMessages[message.bad_msg_id]) {\n          this.pushResend(message.bad_msg_id);\n        }\n\n        this.ackMessage(messageId);\n\n        // simulate disconnect\n        /* try {\n          this.log('networker state:', this);\n          // @ts-ignore\n          this.transport.ws.close(1000);\n        } catch(err) {\n          this.log.error('transport', this.transport, err);\n        } */\n\n        break;\n      }\n\n      case 'bad_msg_notification': {\n        this.log.error('Bad msg notification', message);\n\n        switch(message.error_code) {\n          case 16:    // * msg_id too low\n          case 17:    // * msg_id too high\n          case 32:    // * msg_seqno too low\n          case 33:    // * msg_seqno too high\n          case 64: {  // * invalid container\n            // if(changedTimeOffset === undefined) {\n            //   changedTimeOffset = this.applyServerTime(messageId);\n            // }\n\n            const changedTimeOffset = this.applyServerTime(messageId);\n            if(message.error_code === 17 || changedTimeOffset) {\n              this.log('Update session');\n              this.updateSession();\n            }\n\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\n            if(badMessage) this.pushResend(badMessage.msg_id); // fix 23.01.2020\n            // this.ackMessage(messageId);\n          }\n\n          // * invalid container\n          /* case 64: {\n            const badMessage = this.sentMessages[message.bad_msg_id];\n            if(badMessage) {\n              for(const msgId of badMessage.inner) {\n                if(this.sentMessages[msgId] !== undefined) {\n                  this.updateSentMessage\n                }\n              }\n              const inner = badMessage.inner;\n            }\n          } */\n        }\n\n        break;\n      }\n\n      case 'message': {\n        if(this.lastServerMessages.indexOf(messageId) !== -1) {\n          // console.warn('[MT] Server same messageId: ', messageId)\n          this.ackMessage(messageId);\n          return;\n        }\n\n        this.lastServerMessages.push(messageId);\n        if(this.lastServerMessages.length > 100) {\n          this.lastServerMessages.shift();\n        }\n\n        this.processMessage(message.body, message.msg_id, sessionId);\n        break;\n      }\n\n      case 'new_session_created': {\n        this.ackMessage(messageId);\n\n        if(this.debug) {\n          this.log.debug('new_session_created', message);\n        }\n        // this.updateSession();\n\n        this.processMessageAck(message.first_msg_id);\n        this.applyServerSalt(message.server_salt);\n\n        sessionStorage.get('dc').then((baseDcId) => {\n          if(baseDcId === this.dcId && !this.isFileNetworker && this.networkerFactory.updatesProcessor) {\n            this.networkerFactory.updatesProcessor(message);\n          }\n        });\n        break;\n      }\n\n      case 'msgs_ack': {\n        this.debug && this.log('got acks', message.msg_ids);\n        for(const msgId of message.msg_ids) {\n          this.processMessageAck(msgId);\n        }\n\n        break;\n      }\n\n      case 'msg_detailed_info': {\n        const sentMessage = this.sentMessages[message.msg_id];\n        if(!sentMessage) {\n          this.ackMessage(message.answer_msg_id);\n          break;\n        }/*  else if(sentMessage.acked) {\n          this.reqResend(message.answer_msg_id, true);\n        }\n\n        break; */\n      }\n\n      case 'msg_new_detailed_info': {\n        if(this.pendingAcks.indexOf(message.answer_msg_id) !== -1) {\n          break;\n        }\n\n        this.reqResend(message.answer_msg_id);\n        break;\n      }\n\n      case 'msgs_state_info': {\n        this.ackMessage(message.answer_msg_id);\n        const arr = [\n          [this.lastResendReq, this.pendingResendReq] as const\n          // [this.lastResendAnsReq, this.pendingResendAnsReq] as const\n        ];\n\n        for(const [lastResend, pendingResend] of arr) {\n          if(lastResend?.reqMsgId === message.req_msg_id && pendingResend.length) {\n            for(const badMsgId of lastResend.msgIds) {\n              const pos = pendingResend.indexOf(badMsgId);\n              if(pos !== -1) {\n                pendingResend.splice(pos, 1);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 'rpc_result': {\n        this.ackMessage(messageId);\n\n        const sentMessageId = message.req_msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        if(this.debug) {\n          this.log('Rpc response', message.result, sentMessage);\n        }\n\n        this.processMessageAck(sentMessageId);\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          if(message.result._ === 'rpc_error') {\n            const error = this.processError(message.result);\n            this.log('Rpc error', error);\n            if(deferred) {\n              deferred.reject(error);\n            }\n          } else {\n            if(deferred) {\n              deferred.resolve(message.result);\n            }\n\n            if(sentMessage.isAPI && !this.connectionInited) {\n              this.connectionInited = true;\n            }\n          }\n\n          delete this.sentMessages[sentMessageId];\n        } else {\n          if(this.debug) {\n            this.log('Rpc result for unknown message:', sentMessageId, message);\n          }\n        }\n\n        break;\n      }\n\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\n        /* const sentMessageId = message.msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        if(sentMessage) {\n          sentMessage.deferred.resolve(message);\n          delete this.sentMessages[sentMessageId];\n        } */\n        const pingId = message.ping_id;\n        if(this.lastPingDelayDisconnectId === pingId) {\n          const deferred = this.pingDelayDisconnectDeferred;\n          if(deferred) {\n            deferred.resolve('pong');\n          } else {\n            this.log('ping deferred deleted', pingId);\n          }\n        }\n\n        break;\n      }\n\n      default:\n        this.ackMessage(messageId);\n\n        /* if(this.debug) {\n          this.log.debug('Update', message);\n        } */\n\n        if(this.networkerFactory.updatesProcessor !== null) {\n          this.networkerFactory.updatesProcessor(message);\n        }\n        break;\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ConnectionStatusChange} from './connectionStatus';\nimport MTPNetworker from './networker';\nimport {InvokeApiOptions} from '../../types';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport {AppManager} from '../appManagers/manager';\n\nexport class NetworkerFactory extends AppManager {\n  private networkers: MTPNetworker[] = [];\n  public language = navigator.language || App.langPackCode;\n  public updatesProcessor: (obj: any) => void = null;\n  // public onConnectionStatusChange: (status: ConnectionStatusChange) => void = null;\n  public akStopped = false;\n\n  public onConnectionStatusChange(status: ConnectionStatusChange) {\n    this.rootScope.dispatchEvent('connection_status_change', status);\n    //  ({type: 'connectionStatusChange', payload: status});\n  }\n\n  public removeNetworker(networker: MTPNetworker) {\n    indexOfAndSplice(this.networkers, networker);\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n  }\n\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\n    // console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\n    const networker = new MTPNetworker(this, this.timeManager, dcId, authKey, authKeyId, serverSalt, options);\n    this.networkers.push(networker);\n    return networker;\n  }\n\n  public startAll() {\n    if(this.akStopped) {\n      const stoppedNetworkers = this.networkers.filter((networker) => networker.isStopped());\n\n      this.akStopped = false;\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\n\n      for(const networker of stoppedNetworkers) {\n        networker.scheduleRequest();\n      }\n    }\n  }\n\n  public stopAll() {\n    this.akStopped = true;\n  }\n\n  public setLanguage(langCode: string) {\n    this.language = langCode;\n    for(const networker of this.networkers) {\n      if(!networker.isFileNetworker) {\n        networker.connectionInited = false;\n      }\n    }\n  }\n\n  public unsetConnectionInited() {\n    for(const networker of this.networkers) {\n      networker.connectionInited = false;\n    }\n  }\n\n  public forceReconnectTimeout() {\n    for(const networker of this.networkers) {\n      networker.forceReconnectTimeout();\n    }\n  }\n\n  public forceReconnect() {\n    for(const networker of this.networkers) {\n      if(!networker.isFileNetworker) {\n        networker.forceReconnect();\n        break;\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {TLSerialization} from './tl_utils';\nimport cryptoWorker from '../crypto/cryptoMessagePort';\nimport Modes from '../../config/modes';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport bigInt from 'big-integer';\n\nexport type RSAPublicKeyHex = {\n  modulus: string,\n  exponent: string\n};\n\nexport class RSAKeysManager {\n  /**\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\n   *\n   *\n   *  -----BEGIN RSA PUBLIC KEY-----\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\n   *  -----END RSA PUBLIC KEY-----\n   *\n   *  -----BEGIN RSA PUBLIC KEY-----\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\n   *  -----END RSA PUBLIC KEY-----\n   *\n   * Bytes can be got via\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\n   * $ openssl rsa -pubin -in pub.pem -text -noout\n   */\n\n  /* private publisKeysHex = [{\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\n    exponent: '010001'\n  }, {\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\n    exponent: '010001'\n  }, {\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\n    exponent: '010001'\n  }, {\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\n    exponent: '010001'\n  }, {\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\n    exponent: '010001'\n  }]; */\n\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\n    exponent: '010001'\n  }];\n\n  private publisKeysHex: RSAPublicKeyHex[] = [{\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\n    exponent: '010001'\n  }];\n\n  private publicKeysParsed: {\n    [hex: string]: RSAPublicKeyHex\n  } = {};\n  private prepared = false;\n  private preparePromise: Promise<void> = null;\n\n  constructor() {\n    if(Modes.test) {\n      this.publisKeysHex = this.testPublicKeysHex;\n    }\n  }\n\n  public prepare(): Promise<void> {\n    if(this.preparePromise) return this.preparePromise;\n    else if(this.prepared) {\n      return Promise.resolve();\n    }\n\n    return this.preparePromise = Promise.all(this.publisKeysHex.map((keyParsed) => {\n      const RSAPublicKey = new TLSerialization();\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\n\n      const buffer = RSAPublicKey.getBuffer();\n\n      return cryptoWorker.invokeCrypto('sha1', buffer).then((bytes) => {\n        const fingerprintBytes = bytes.slice(-8);\n        fingerprintBytes.reverse();\n\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\n          modulus: keyParsed.modulus,\n          exponent: keyParsed.exponent\n        };\n      });\n    })).then(() => {\n      this.prepared = true;\n\n      // console.log('[MT] Prepared keys');\n      this.preparePromise = null;\n    });\n  }\n\n  public async select(fingerprints: Array<string>) {\n    await this.prepare();\n\n    for(let i = 0; i < fingerprints.length; ++i) {\n      let fingerprintHex = bigInt(fingerprints[i]).toString(16).toLowerCase();\n\n      if(fingerprintHex.length < 16) {\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\n      }\n\n      // console.log(fingerprintHex, this.publicKeysParsed);\n      const foundKey = this.publicKeysParsed[fingerprintHex];\n      if(foundKey) {\n        return Object.assign({\n          fingerprint: fingerprints[i]\n        }, foundKey);\n      }\n    }\n  }\n}\n\nexport default new RSAKeysManager();\n","export default function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\n  const len = bytes1.length;\n  const bytes = new Uint8Array(len);\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = bytes1[i] ^ bytes2[i];\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport transportController from './transports/controller';\nimport {TLSerialization, TLDeserialization} from './tl_utils';\nimport {TransportType} from './dcConfigurator';\nimport rsaKeysManager from './rsaKeysManager';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport {logger, LogTypes} from '../logger';\nimport DEBUG from '../../config/debug';\nimport {Awaited, DcId} from '../../types';\nimport addPadding from '../../helpers/bytes/addPadding';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport bytesXor from '../../helpers/bytes/bytesXor';\nimport {bigIntFromBytes} from '../../helpers/bigInt/bigIntConversion';\nimport bigInt from 'big-integer';\nimport randomize from '../../helpers/array/randomize';\nimport {AppManager} from '../appManagers/manager';\n\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\n\nfNewNonce = false;\nfNonce = false;\nfResult = false; */\n\ntype AuthOptions = {\n  dcId: number,\n  nonce: Uint8Array,\n\n  serverNonce?: Uint8Array,\n  pq?: Uint8Array,\n  fingerprints?: string[],\n  publicKey?: {\n    modulus: string,\n    exponent: string,\n    fingerprint: string\n  },\n\n  // good\n  p?: Uint8Array,\n  q?: Uint8Array,\n\n  newNonce?: Uint8Array,\n\n  retry?: number,\n\n  b?: Uint8Array,\n  g?: number,\n  gA?: Uint8Array,\n  dhPrime?: Uint8Array,\n\n  tmpAesKey?: Uint8Array,\n  tmpAesIv?: Uint8Array,\n\n  authKeyId?: Uint8Array,\n  authKey?: Uint8Array,\n  serverSalt?: Uint8Array,\n\n  localTime?: number,\n  serverTime?: any,\n};\n\ntype ResPQ = {\n  _: 'resPQ';\n  nonce: Uint8Array;\n  pq: Uint8Array;\n  server_nonce: Uint8Array;\n  server_public_key_fingerprints: string[];\n};\n\ntype P_Q_inner_data = {\n  _: 'p_q_inner_data_dc';\n  pq: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  new_nonce: Uint8Array;\n  dc: number;\n};\n\ntype req_DH_params = {\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  public_key_fingerprint: string;\n  encrypted_data: Uint8Array;\n};\n\nexport class Authorizer extends AppManager {\n  private cached: {\n    [dcId: DcId]: Promise<AuthOptions>\n  };\n\n  private log: ReturnType<typeof logger>;\n\n  private transportType: TransportType;\n\n  private getTransportTypePromise: Promise<void>;\n\n  protected after() {\n    this.cached = {};\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\n  }\n\n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\n    const requestLength = requestArray.byteLength;\n\n    const header = new TLSerialization();\n    header.storeLongP(0, 0, 'auth_key_id');\n    header.storeLong(this.timeManager.generateId(), 'msg_id');\n    header.storeInt(requestLength, 'request_length');\n\n    const headerArray = header.getBytes(true) as Uint8Array;\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\n    resultArray.set(headerArray);\n    resultArray.set(requestArray, headerArray.length);\n\n    const transport = this.dcConfigurator.chooseServer(dcId, 'client', this.transportType);\n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE'\n    };\n\n    if(DEBUG) {\n      this.log('mtpSendPlainRequest: creating requestPromise');\n    }\n\n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\n    return promise.then((result) => {\n      if(DEBUG) {\n        this.log('mtpSendPlainRequest: in good sector', result);\n      }\n\n      if(!result || !result.byteLength) {\n        throw baseError;\n      }\n\n      try {\n        /* result = fResult ? fResult : result;\n        fResult = new Uint8Array(0); */\n\n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\n\n        if(result.length === 4) {\n          const errorCode = deserializer.fetchInt();\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\n          throw errorCode;\n        }\n\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\n\n        const msg_id = deserializer.fetchLong('msg_id');\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\n\n        const msg_len = deserializer.fetchInt('msg_len');\n        if(!msg_len) this.log.error('no msg_len', msg_len);\n\n        return deserializer;\n      } catch(e) {\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\n        const error = Object.assign(baseError, {originalError: e});\n        throw error;\n      }\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n  }\n\n  private async sendReqPQ(auth: AuthOptions) {\n    const request = new TLSerialization({mtproto: true});\n\n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\n\n    if(DEBUG) {\n      this.log('Send req_pq', bytesToHex(auth.nonce));\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\n      rsaKeysManager.prepare();\n      deserializer = await promise;\n    } catch(error) {\n      this.log.error('req_pq error', (error as Error).message);\n      throw error;\n    }\n\n    const response: ResPQ = deserializer.fetchObject('ResPQ');\n\n    if(response._ !== 'resPQ') {\n      throw new Error('[MT] resPQ response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      this.log.error(auth.nonce, response.nonce);\n      throw new Error('[MT] resPQ nonce mismatch');\n    }\n\n    auth.serverNonce = response.server_nonce; // need\n    auth.pq = response.pq;\n    auth.fingerprints = response.server_public_key_fingerprints;\n\n    if(DEBUG) {\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\n    }\n\n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\n    if(!publicKey) {\n      throw new Error('[MT] No public key found');\n    }\n\n    auth.publicKey = publicKey;\n\n    if(DEBUG) {\n      this.log('PQ factorization start', auth.pq);\n    }\n\n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\n    try {\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\n    } catch(error) {\n      this.log.error('worker error factorize', error);\n      throw error;\n    }\n\n    auth.p = pAndQ[0];\n    auth.q = pAndQ[1];\n\n    if(DEBUG) {\n      this.log('PQ factorization done', pAndQ);\n    }\n\n    return this.sendReqDhParams(auth);\n  }\n\n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    auth.newNonce = randomize(new Uint8Array(32));\n\n    const p_q_inner_data_dc: P_Q_inner_data = {\n      _: 'p_q_inner_data_dc',\n      pq: auth.pq,\n      p: auth.p,\n      q: auth.q,\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      new_nonce: auth.newNonce,\n      dc: 0\n    };\n\n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\n\n    const data = pQInnerDataSerialization.getBytes(true);\n    if(data.length > 144) {\n      throw 'DH_params: data is more than 144 bytes!';\n    }\n\n    const dataWithPadding = addPadding(data, 192, false, true, false);\n    const dataPadReversed = dataWithPadding.slice().reverse();\n\n    const getKeyAesEncrypted = async() => {\n      for(;;) {\n        const tempKey = randomize(new Uint8Array(32));\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256', tempKey.concat(dataWithPadding)));\n        if(dataWithHash.length !== 224) {\n          throw 'DH_params: dataWithHash !== 224 bytes!';\n        }\n\n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256', aesEncrypted));\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\n\n        const keyAesEncryptedBigInt = bigIntFromBytes(keyAesEncrypted);\n        const publicKeyModulusBigInt = bigInt(auth.publicKey.modulus, 16);\n\n        if(keyAesEncryptedBigInt.compare(publicKeyModulusBigInt) === -1) {\n          return keyAesEncrypted;\n        }\n      }\n    };\n\n    const keyAesEncrypted = await getKeyAesEncrypted();\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\n\n    const req_DH_params: req_DH_params = {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      p: auth.p,\n      q: auth.q,\n      public_key_fingerprint: auth.publicKey.fingerprint,\n      encrypted_data: encryptedData\n    };\n\n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('req_DH_params', req_DH_params);\n\n    const requestBytes = request.getBytes(true);\n\n    if(DEBUG) {\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\n    } catch(error) {\n      this.log.error('Send req_DH_params FAIL!', error);\n      throw error;\n    }\n\n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\n\n    if(DEBUG) {\n      this.log('Sent req_DH_params, response:', response);\n    }\n\n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\n    }\n\n    if(response._ === 'server_DH_params_fail') {\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce)).slice(-16);\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\n      }\n\n      throw new Error('[MT] server_DH_params_fail');\n    }\n\n    // fill auth object\n    try {\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\n    } catch(e) {\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\n      throw e;\n    }\n\n    // console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\n\n    return this.sendSetClientDhParams(auth);\n  }\n\n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\n    auth.localTime = Date.now();\n\n    // ! can't concat Array with Uint8Array!\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.serverNonce)))\n    .concat((await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\n\n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(12)\n    .concat(await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\n\n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\n\n    const hash = answerWithHash.slice(0, 20);\n    const answerWithPadding = answerWithHash.slice(20);\n\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\n    const response = deserializer.fetchObject('Server_DH_inner_data');\n\n    if(response._ !== 'server_DH_inner_data') {\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\n    }\n\n    if(DEBUG) {\n      this.log('Done decrypting answer');\n    }\n    auth.g = response.g;\n    auth.dhPrime = response.dh_prime;\n    auth.gA = response.g_a;\n    auth.serverTime = response.server_time;\n    auth.retry = 0;\n\n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\n\n    const offset = deserializer.getOffset();\n\n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1', answerWithPadding.slice(0, offset)))) {\n      throw new Error('[MT] server_DH_inner_data SHA1 mismatch');\n    }\n\n    this.timeManager.applyServerTime(auth.serverTime, auth.localTime);\n  }\n\n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\n    if(DEBUG) {\n      this.log('Verifying DH params', g, dhPrime, gA);\n    }\n\n    const dhPrimeHex = bytesToHex(dhPrime);\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\n    }\n\n    if(DEBUG) {\n      this.log('dhPrime cmp OK');\n    }\n\n    const gABigInt = bigIntFromBytes(gA);\n    const dhPrimeBigInt = bigInt(dhPrimeHex, 16);\n\n    if(gABigInt.compare(bigInt.one) <= 0) {\n      throw new Error('[MT] DH params are not verified: gA <= 1');\n    }\n\n    if(gABigInt.compare(dhPrimeBigInt.subtract(bigInt.one)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\n    }\n\n    if(DEBUG) {\n      this.log('1 < gA < dhPrime-1 OK');\n    }\n\n    const twoPow = bigInt(2).pow(2048 - 64);\n\n    if(gABigInt.compare(twoPow) < 0) {\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\n    }\n    if(gABigInt.compare(dhPrimeBigInt.subtract(twoPow)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\n    }\n\n    if(DEBUG) {\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\n    }\n\n    return true;\n  }\n\n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    const gBytes = bytesFromHex(auth.g.toString(16));\n\n    auth.b = randomize(new Uint8Array(256));\n    // MTProto.secureRandom.nextBytes(auth.b);\n\n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\n    try {\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\n    } catch(error) {\n      throw error;\n    }\n\n    const data = new TLSerialization({mtproto: true});\n    data.storeObject({\n      _: 'client_DH_inner_data',\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      retry_id: [0, auth.retry++],\n      g_b: gB\n    }, 'Client_DH_Inner_Data');\n\n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1', data.getBuffer())).concat(data.getBytes(true));\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\n\n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('set_client_DH_params', {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      encrypted_data: encryptedData\n    });\n\n    if(DEBUG) {\n      this.log('Send set_client_DH_params');\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\n    } catch(err) {\n      throw err;\n    }\n\n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\n\n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\n    }\n\n    // let authKey: Uint8Array;\n    try {\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\n    } catch(err) {\n      throw authKey;\n    }\n\n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1', authKey),\n      authKeyAux = authKeyHash.slice(0, 8),\n      authKeyId = authKeyHash.slice(-8);\n\n    if(DEBUG) {\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\n    }\n    switch(response._) {\n      case 'dh_gen_ok': {\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([1], authKeyAux))).slice(-16);\n\n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\n          throw new Error('new_nonce_hash1 mismatch');\n        }\n\n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\n        if(DEBUG) {\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\n        }\n\n        auth.authKeyId = authKeyId;\n        auth.authKey = authKey;\n        auth.serverSalt = serverSalt;\n\n        return auth;\n      }\n\n      case 'dh_gen_retry': {\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([2], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\n        }\n\n        return this.sendSetClientDhParams(auth);\n      }\n\n      case 'dh_gen_fail': {\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([3], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\n        }\n\n        throw new Error('[MT] Set_client_DH_params_answer fail');\n      }\n    }\n  }\n\n  private getTransportType = () => {\n    if(!import.meta.env.VITE_MTPROTO_AUTO) {\n      return;\n    }\n\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\n      this.transportType = websocket ? 'websocket' : 'https';\n      this.log('will use transport:', this.transportType);\n    });\n  };\n\n  public auth(dcId: DcId) {\n    let promise = this.cached[dcId];\n    if(promise) {\n      return promise;\n    }\n\n    promise = new Promise(async(resolve, reject) => {\n      await this.getTransportType();\n\n      let error: ApiError;\n      let _try = 1;\n      while(_try++ <= 3) {\n        try {\n          const auth: AuthOptions = {\n            dcId,\n            nonce: randomize(new Uint8Array(16))\n          };\n\n          const promise = this.sendReqPQ(auth);\n          resolve(await promise);\n          return;\n        } catch(err) {\n          error = err;\n        }\n      }\n\n      reject(error);\n    });\n\n    return this.cached[dcId] = promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport sessionStorage from '../sessionStorage';\nimport {nextRandomUint} from '../../helpers/random';\nimport {WorkerTaskVoidTemplate} from '../../types';\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\nimport {AppManager} from '../appManagers/manager';\n\n/*\nlet lol: any = {};\nfor(var i = 0; i < 100; i++) {\n    timeManager.generateId();\n}\n*/\n\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\n  type: 'applyServerTimeOffset',\n  payload: TimeManager['timeOffset']\n};\n\nexport class TimeManager extends AppManager {\n  private lastMessageId: [number, number];\n  private timeOffset: number;\n\n  /* private midnightNoOffset: number;\n  private midnightOffseted: Date;\n\n  private midnightOffset: number; */\n\n  /* private timeParams: {\n    midnightOffset: number,\n    serverTimeOffset: number\n  }; */\n\n  protected after() {\n    this.lastMessageId = [0, 0];\n    this.timeOffset = 0;\n\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.timeOffset = to;\n      }\n    });\n\n\n    // * migrated from ServerTimeManager\n    /* const timestampNow = tsNow(true);\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\n    this.midnightOffseted = new Date();\n    this.midnightOffseted.setHours(0, 0, 0, 0);\n\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\n\n    /* this.timeParams = {\n      midnightOffset: this.midnightOffset,\n      serverTimeOffset: this.serverTimeOffset\n    }; */\n  }\n\n  public getServerTimeOffset() {\n    return this.timeOffset;\n  }\n\n  public generateId(): string {\n    const timeTicks = Date.now(),\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\n      timeMSec = timeTicks % 1000,\n      random = nextRandomUint(16);\n\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\n    if(this.lastMessageId[0] > messageId[0] ||\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\n    }\n\n    this.lastMessageId = messageId;\n\n    const ret = ulongFromInts(messageId[0], messageId[1]).toString(10);\n\n    // if(lol[ret]) {\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\n    // }\n    // lol[ret] = true;\n\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\n\n    return ret\n  }\n\n  public applyServerTime(serverTime: number, localTime?: number) {\n    localTime = (localTime || Date.now()) / 1000 | 0;\n    const newTimeOffset = serverTime - localTime;\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\n    this.lastMessageId = [0, 0];\n\n    if(this.timeOffset !== newTimeOffset) {\n      sessionStorage.set({\n        server_time_offset: newTimeOffset\n      });\n\n      this.timeOffset = newTimeOffset;\n    }\n\n    // console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\n\n    return changed;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {DocumentAttribute, WebDocument} from '../../layer';\n\nexport default class AppWebDocsManager {\n  public saveWebDocument(webDocument: WebDocument) {\n    if(!webDocument) {\n      return;\n    }\n\n    const attribute: DocumentAttribute.documentAttributeImageSize = webDocument.attributes.find((attribute) => attribute._ === 'documentAttributeImageSize') as any;\n    if(attribute) {\n      webDocument.w = attribute.w;\n      webDocument.h = attribute.h;\n    }\n\n    return webDocument;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {HelpPremiumPromo, InputInvoice, InputPaymentCredentials, PaymentRequestedInfo, PaymentsPaymentForm} from '../../layer';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport default class AppPaymentsManager extends AppManager {\n  private premiumPromo: MaybePromise<HelpPremiumPromo>;\n\n  protected after() {\n    // * reset premium promo\n    this.rootScope.addEventListener('premium_toggle', () => {\n      this.getPremiumPromo(true);\n    });\n  }\n\n  public getInputInvoiceBySlug(slug: string): InputInvoice.inputInvoiceSlug {\n    return {\n      _: 'inputInvoiceSlug',\n      slug\n    };\n  }\n\n  public getInputInvoiceByPeerId(peerId: PeerId, mid: number): InputInvoice.inputInvoiceMessage {\n    return {\n      _: 'inputInvoiceMessage',\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    };\n  }\n\n  public getPaymentForm(invoice: InputInvoice) {\n    return this.apiManager.invokeApi('payments.getPaymentForm', {\n      invoice\n    }).then((paymentForm) => {\n      this.appUsersManager.saveApiUsers(paymentForm.users);\n      paymentForm.photo = this.appWebDocsManager.saveWebDocument(paymentForm.photo);\n\n      return paymentForm;\n    });\n  }\n\n  public getPaymentReceipt(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApi('payments.getPaymentReceipt', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((paymentForm) => {\n      this.appUsersManager.saveApiUsers(paymentForm.users);\n      paymentForm.photo = this.appWebDocsManager.saveWebDocument(paymentForm.photo);\n\n      return paymentForm;\n    });\n  }\n\n  public validateRequestedInfo(invoice: InputInvoice, info: PaymentRequestedInfo, save?: boolean) {\n    return this.apiManager.invokeApi('payments.validateRequestedInfo', {\n      save,\n      invoice,\n      info\n    });\n  }\n\n  public sendPaymentForm(\n    invoice: InputInvoice,\n    formId: PaymentsPaymentForm['form_id'],\n    requestedInfoId: string,\n    shippingOptionId: string,\n    credentials: InputPaymentCredentials,\n    tipAmount?: number\n  ) {\n    return this.apiManager.invokeApi('payments.sendPaymentForm', {\n      form_id: formId,\n      invoice,\n      requested_info_id: requestedInfoId,\n      shipping_option_id: shippingOptionId,\n      credentials,\n      tip_amount: tipAmount || undefined\n    }).then((result) => {\n      if(result._ === 'payments.paymentResult') {\n        this.apiUpdatesManager.processUpdateMessage(result.updates);\n      }\n\n      return result;\n    });\n  }\n\n  public clearSavedInfo(info?: boolean, credentials?: boolean) {\n    return this.apiManager.invokeApi('payments.clearSavedInfo', {\n      info,\n      credentials\n    });\n  }\n\n  public getPremiumGiftCodeOptions(peerId: PeerId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'payments.getPremiumGiftCodeOptions',\n      params: {\n        boost_peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: (premiumGiftCodeOptions) => {\n        return premiumGiftCodeOptions.filter((option) => !option.store_product);\n      }\n    });\n  }\n\n  public getPremiumPromo(overwrite?: boolean) {\n    if(overwrite && this.premiumPromo) {\n      this.premiumPromo = undefined;\n    }\n\n    return this.premiumPromo ??= this.apiManager.invokeApiSingleProcess({\n      method: 'help.getPremiumPromo',\n      params: {},\n      processResult: (helpPremiumPromo) => {\n        this.appUsersManager.saveApiUsers(helpPremiumPromo.users);\n        helpPremiumPromo.videos = helpPremiumPromo.videos.map((doc) => {\n          return this.appDocsManager.saveDoc(doc, {type: 'premiumPromo'});\n        });\n\n        return this.premiumPromo = helpPremiumPromo;\n      }\n    });\n  }\n}\n","import {AttachMenuBot} from '../../../../layer';\nimport {ATTACH_MENU_BOT_ICON_NAME} from '../../../mtproto/mtproto_config';\n\nexport default function getAttachMenuBotIcon(attachMenuBot: AttachMenuBot) {\n  return attachMenuBot.icons.find((icon) => icon.name === ATTACH_MENU_BOT_ICON_NAME);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MessageSendingParams} from './appMessagesManager';\nimport {AppManager} from './manager';\nimport {AttachMenuBots, AttachMenuBot, Update, DataJSON, BotApp} from '../../layer';\nimport assumeType from '../../helpers/assumeType';\nimport makeError from '../../helpers/makeError';\nimport getAttachMenuBotIcon from './utils/attachMenuBots/getAttachMenuBotIcon';\nimport {randomLong} from '../../helpers/random';\nimport getInputReplyTo from './utils/misc/getInputReplyTo';\n\nconst BOTS_SUPPORTED = true;\n\nexport type RequestWebViewOptions = MessageSendingParams & {\n  botId: BotId,\n  peerId: PeerId,\n  // platform: string,\n  startParam?: string,\n  fromBotMenu?: boolean,\n  fromAttachMenu?: boolean,\n  fromSwitchWebView?: boolean,\n  fromSideMenu?: boolean,\n  attachMenuBot?: AttachMenuBot,\n  url?: string,\n  themeParams?: DataJSON,\n  isSimpleWebView?: boolean,\n  buttonText?: string,\n  writeAllowed?: boolean,\n  app?: BotApp.botApp,\n  noConfirmation?: boolean,\n  hasSettings?: boolean\n};\n\nexport default class AppAttachMenuBotsManager extends AppManager {\n  private attachMenuBots: Map<BotId, AttachMenuBot>;\n  private attachMenuBotsArr: AttachMenuBot[];\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateAttachMenuBots: this.onUpdateAttachMenuBots,\n\n      updateWebViewResultSent: this.onUpdateWebViewResultSent\n    });\n\n    this.rootScope.addEventListener('user_auth', () => {\n      this.appAttachMenuBotsManager.getAttachMenuBots();\n\n      setInterval(() => {\n        this.onUpdateAttachMenuBots({_: 'updateAttachMenuBots'});\n      }, 30 * 60e3);\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      this.attachMenuBots.clear();\n      this.attachMenuBotsArr = undefined;\n    } else {\n      this.attachMenuBots = new Map();\n    }\n  };\n\n  private onUpdateAttachMenuBots = (update: Update.updateAttachMenuBots) => {\n    this.clear();\n    this.getAttachMenuBots();\n  };\n\n  private onUpdateWebViewResultSent = (update: Update.updateWebViewResultSent) => {\n    this.rootScope.dispatchEvent('web_view_result_sent', update.query_id);\n  };\n\n  public onLanguageChange() {\n    if(!this.attachMenuBots?.size) {\n      return;\n    }\n\n    this.onUpdateAttachMenuBots({_: 'updateAttachMenuBots'});\n  }\n\n  public saveAttachMenuBot(attachMenuBot: AttachMenuBot) {\n    this.attachMenuBots.set(attachMenuBot.bot_id, attachMenuBot);\n    const icon = getAttachMenuBotIcon(attachMenuBot);\n    icon.icon = this.appDocsManager.saveDoc(icon.icon, {type: 'attachMenuBotIcon', botId: attachMenuBot.bot_id});\n    this.rootScope.dispatchEvent('attach_menu_bot', attachMenuBot);\n    return attachMenuBot;\n  }\n\n  public saveAttachMenuBots(attachMenuBots: AttachMenuBot[]) {\n    if((attachMenuBots as any).saved) return;\n    (attachMenuBots as any).saved = true;\n    attachMenuBots.forEach((user) => this.saveAttachMenuBot(user));\n  }\n\n  public getAttachMenuBots() {\n    return this.attachMenuBotsArr ?? this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAttachMenuBots',\n      processResult: (attachMenuBots) => {\n        assumeType<AttachMenuBots.attachMenuBots>(attachMenuBots);\n        this.appUsersManager.saveApiUsers(attachMenuBots.users);\n        this.saveAttachMenuBots(attachMenuBots.bots);\n        return this.attachMenuBotsArr = attachMenuBots.bots.slice(0, BOTS_SUPPORTED ? undefined : 0);\n      }\n    });\n  }\n\n  public getAttachMenuBotCached(botId: BotId) {\n    return this.attachMenuBots.get(botId);\n  }\n\n  public getAttachMenuBot(botId: BotId, overwrite?: boolean) {\n    if(!this.appUsersManager.isAttachMenuBot(botId) || !BOTS_SUPPORTED) {\n      throw makeError('BOT_INVALID');\n    }\n\n    return (!overwrite && this.getAttachMenuBotCached(botId)) ?? this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAttachMenuBot',\n      params: {\n        bot: this.appUsersManager.getUserInput(botId)\n      },\n      processResult: (attachMenuBotsBot) => {\n        this.appUsersManager.saveApiUsers(attachMenuBotsBot.users);\n        const attachMenuBot = this.saveAttachMenuBot(attachMenuBotsBot.bot);\n        return attachMenuBot;\n      }\n    });\n  }\n\n  public requestWebView(options: RequestWebViewOptions) {\n    const {\n      botId,\n      peerId,\n      url,\n      fromBotMenu,\n      fromSwitchWebView,\n      fromSideMenu,\n      themeParams,\n      // platform,\n      replyToMsgId,\n      silent,\n      sendAsPeerId,\n      startParam,\n      threadId,\n      isSimpleWebView,\n      app,\n      writeAllowed\n    } = options;\n\n    const platform = 'web';\n\n    if(app) {\n      return this.apiManager.invokeApiSingleProcess({\n        method: 'messages.requestAppWebView',\n        params: {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          start_param: startParam,\n          theme_params: themeParams,\n          platform,\n          write_allowed: writeAllowed,\n          app: {\n            _: 'inputBotAppID',\n            access_hash: app.access_hash,\n            id: app.id\n          }\n        }\n      });\n    }\n\n    if(isSimpleWebView) {\n      return this.apiManager.invokeApiSingleProcess({\n        method: 'messages.requestSimpleWebView',\n        params: {\n          bot: this.appUsersManager.getUserInput(botId),\n          url,\n          platform,\n          from_switch_webview: fromSwitchWebView,\n          from_side_menu: fromSideMenu,\n          theme_params: themeParams,\n          start_param: startParam\n        }\n      });\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.requestWebView',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        bot: this.appUsersManager.getUserInput(botId),\n        silent,\n        platform,\n        url,\n        reply_to: getInputReplyTo({replyToMsgId, threadId}),\n        from_bot_menu: fromBotMenu,\n        theme_params: themeParams,\n        send_as: sendAsPeerId ? this.appPeersManager.getInputPeerById(sendAsPeerId) : undefined,\n        start_param: startParam\n      }\n    });\n  }\n\n  public prolongWebView(options: MessageSendingParams & {\n    peerId: PeerId,\n    botId: BotId,\n    queryId: string | number\n  }) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.prolongWebView',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(options.peerId),\n        bot: this.appUsersManager.getUserInput(options.botId),\n        query_id: options.queryId,\n        silent: options.silent,\n        reply_to: getInputReplyTo({replyToMsgId: options.replyToMsgId, threadId: options.threadId}),\n        send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n      }\n    });\n  }\n\n  public toggleBotInAttachMenu(botId: BotId, enabled: boolean, writeAllowed?: boolean) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.toggleBotInAttachMenu',\n      params: {\n        bot: this.appUsersManager.getUserInput(botId),\n        enabled,\n        write_allowed: writeAllowed\n      }/* ,\n      processResult: (result) => {\n        return result;\n        // this.apiUpdatesManager.processLocalUpdate({_: 'updateAttachMenuBots'});\n      } */\n    });\n  }\n\n  public sendWebViewData(botId: BotId, buttonText: string, data: string) {\n    return this.apiManager.invokeApi('messages.sendWebViewData', {\n      bot: this.appUsersManager.getUserInput(botId),\n      button_text: buttonText,\n      data,\n      random_id: randomLong()\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getBotApp(botId: BotId, shortName: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getBotApp',\n      params: {\n        app: {\n          _: 'inputBotAppShortName',\n          bot_id: this.appUsersManager.getUserInput(botId),\n          short_name: shortName\n        },\n        hash: 0\n      }\n    });\n  }\n\n  public invokeWebViewCustomMethod(botId: BotId, customMethod: string, params: string) {\n    return this.apiManager.invokeApi('bots.invokeWebViewCustomMethod', {\n      bot: this.appUsersManager.getUserInput(botId),\n      custom_method: customMethod,\n      params: {\n        _: 'dataJSON',\n        data: JSON.stringify(params)\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {UrlAuthResult} from '../../layer';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport default class AppSeamlessLoginManager extends AppManager {\n  public requestUrlAuth(url: string, peerId?: PeerId, mid?: number, buttonId?: number) {\n    return this.apiManager.invokeApi('messages.requestUrlAuth', {\n      button_id: buttonId,\n      msg_id: mid ? getServerMessageId(mid) : undefined,\n      peer: peerId ? this.appPeersManager.getInputPeerById(peerId) : undefined,\n      url\n    }).then((urlAuthResult) => {\n      if(urlAuthResult._ === 'urlAuthResultRequest') {\n        this.appUsersManager.saveApiUser(urlAuthResult.bot);\n      }\n\n      return urlAuthResult;\n    });\n  }\n\n  public acceptUrlAuth(url: string, peerId?: PeerId, mid?: number, buttonId?: number, writeAllowed?: boolean) {\n    return this.apiManager.invokeApi('messages.acceptUrlAuth', {\n      button_id: buttonId,\n      msg_id: mid ? getServerMessageId(mid) : undefined,\n      peer: peerId ? this.appPeersManager.getInputPeerById(peerId) : undefined,\n      url,\n      write_allowed: writeAllowed\n    }).then((urlAuthResult) => {\n      return urlAuthResult as Exclude<UrlAuthResult, UrlAuthResult.urlAuthResultRequest>;\n    });\n  }\n\n  public getWebAuthorizations() {\n    return this.apiManager.invokeApi('account.getWebAuthorizations').then((webAuthorizations) => {\n      this.appUsersManager.saveApiUsers(webAuthorizations.users);\n      return webAuthorizations.authorizations;\n    });\n  }\n\n  public resetWebAuthorization(hash: Long) {\n    return this.apiManager.invokeApi('account.resetWebAuthorization', {\n      hash\n    });\n  }\n\n  public resetWebAuthorizations() {\n    return this.apiManager.invokeApi('account.resetWebAuthorizations');\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport assumeType from '../../helpers/assumeType';\nimport {AccountThemes, AccountWallPapers, InputWallPaper, WallPaper} from '../../layer';\nimport {AppManager} from './manager';\n\ntype WallPaperId = WallPaper['id'];\n\nexport default class AppThemesManager extends AppManager {\n  private wallPapers: {[id: WallPaperId]: WallPaper};\n\n  protected after() {\n    this.wallPapers = {};\n  }\n\n  private saveWallPaper(wallPaper: WallPaper) {\n    if(!wallPaper) {\n      return wallPaper;\n    }\n    // const oldWallPaper = this.wallPapers[wallPaper.id];\n\n    // ! IT'S BROKEN NOW. SERVER RETURNS SAME ID FOR DIFFERENT WALLPAPERS\n    // if(oldWallPaper) {\n    //   console.log('rewrite', {...oldWallPaper}, {...wallPaper});\n    // }\n\n    if(wallPaper._ !== 'wallPaperNoFile') {\n      wallPaper.document = this.appDocsManager.saveDoc(wallPaper.document, {type: 'wallPaper', wallPaperId: wallPaper.id});\n    }\n\n    // if(oldWallPaper) {\n    //   return Object.assign(oldWallPaper, wallPaper);\n    // } else {\n    this.wallPapers[wallPaper.id] = wallPaper;\n    // }\n\n    return wallPaper;\n  }\n\n  public getWallPaper(inputWallPaper: InputWallPaper) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'account.getWallPaper',\n      params: {wallpaper: inputWallPaper},\n      processResult: (wallPaper) => {\n        return this.saveWallPaper(wallPaper);\n      }\n    });\n  }\n\n  public getInputWallPaper(wallPaper: WallPaper | string): InputWallPaper {\n    if(typeof(wallPaper) === 'string') {\n      return {_: 'inputWallPaperSlug', slug: wallPaper};\n    } else if(wallPaper._ === 'wallPaperNoFile') {\n      return {_: 'inputWallPaperNoFile', id: wallPaper.id};\n    } else {\n      return {_: 'inputWallPaper', id: wallPaper.id, access_hash: wallPaper.access_hash};\n    }\n  }\n\n  public getWallPaperById(id: WallPaperId) {\n    const wallPaper = this.wallPapers[id];\n    return this.getWallPaper(this.getInputWallPaper(wallPaper));\n  }\n\n  public getThemes() {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'account.getThemes',\n      params: {format: 'macos', hash: 0},\n      processResult: (accountThemes) => {\n        assumeType<AccountThemes.accountThemes>(accountThemes);\n\n        accountThemes.themes.forEach((theme) => {\n          if(!theme.settings) {\n            return;\n          }\n\n          theme.settings.forEach((themeSettings) => {\n            themeSettings.wallpaper = this.saveWallPaper(themeSettings.wallpaper);\n          });\n        });\n\n        return accountThemes.themes;\n      }\n    });\n  }\n\n  public getWallPapers() {\n    return this.apiManager.invokeApiHashable({method: 'account.getWallPapers'}).then((accountWallpapers) => {\n      const wallPapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers;\n      wallPapers.forEach((wallPaper, idx, arr) => {\n        arr[idx] = this.saveWallPaper(wallPaper);\n      });\n\n      return wallPapers;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {AppManager} from './manager';\n\nexport default class AppUsernamesManager extends AppManager {\n  public toggleUsername({\n    username,\n    active,\n    peerId\n  }: {\n    username: string,\n    active: boolean,\n    peerId?: PeerId\n  }) {\n    if(!peerId || peerId === this.appUsersManager.userId) {\n      return this.apiManager.invokeApi('account.toggleUsername', {username, active});\n    } else if(peerId.isAnyChat()) {\n      const chatId = peerId.toChatId();\n      const promise = this.apiManager.invokeApi('channels.toggleUsername', {\n        channel: this.appChatsManager.getChannelInput(chatId),\n        username,\n        active\n      });\n\n      return this.appChatsManager.refreshChatAfterRequest(chatId, promise);\n    } else {\n      return this.apiManager.invokeApi('bots.toggleUsername', {\n        bot: this.appUsersManager.getUserInput(peerId),\n        username,\n        active\n      });\n    }\n  }\n\n  public reorderUsernames({\n    peerId,\n    order\n  }: {\n    peerId: PeerId,\n    order: string[]\n  }) {\n    if(!peerId) {\n      return this.apiManager.invokeApi('account.reorderUsernames', {order});\n    } else if(peerId.isAnyChat()) {\n      const chatId = peerId.toChatId();\n      const promise = this.apiManager.invokeApi('channels.reorderUsernames', {\n        channel: this.appChatsManager.getChannelInput(chatId),\n        order\n      });\n\n      return this.appChatsManager.refreshChatAfterRequest(chatId, promise);\n    } else {\n      return this.apiManager.invokeApi('bots.reorderUsernames', {\n        bot: this.appUsersManager.getUserInput(peerId),\n        order\n      });\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputUser} from '../../layer';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\n\nexport default class AppChatInvitesManager extends AppManager {\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePendingJoinRequests: async(update) => {\n        const peerId = getPeerId(update.peer);\n        const state = await this.appStateManager.getState();\n        delete state.hideChatJoinRequests[peerId];\n        this.appStateManager.pushToState('hideChatJoinRequests', state.hideChatJoinRequests);\n        this.rootScope.dispatchEvent('chat_requests', {\n          chatId: peerId.toChatId(),\n          recentRequesters: update.recent_requesters,\n          requestsPending: update.requests_pending\n        });\n      }\n    });\n  }\n\n  public exportChatInvite({\n    chatId,\n    expireDate,\n    usageLimit,\n    requestNeeded,\n    title\n  }: {\n    chatId: ChatId,\n    expireDate?: number,\n    usageLimit?: number,\n    requestNeeded?: boolean,\n    title?: string\n  }) {\n    return this.apiManager.invokeApi('messages.exportChatInvite', {\n      peer: this.appChatsManager.getInputPeer(chatId),\n      expire_date: expireDate,\n      usage_limit: usageLimit,\n      request_needed: requestNeeded,\n      title\n    });\n  }\n\n  public getExportedChatInvites({\n    chatId,\n    revoked,\n    adminId\n  }: {\n    chatId: ChatId,\n    revoked?: boolean,\n    adminId?: UserId\n  }) {\n    return this.apiManager.invokeApi('messages.getExportedChatInvites', {\n      peer: this.appChatsManager.getInputPeer(chatId),\n      admin_id: adminId ? this.appUsersManager.getUserInput(adminId) : {_: 'inputUserSelf'},\n      limit: 50,\n      revoked\n    }).then((chatInvites) => {\n      this.appUsersManager.saveApiUsers(chatInvites.users);\n      return chatInvites;\n    });\n  }\n\n  public editExportedChatInvite({\n    chatId,\n    link,\n    expireDate,\n    usageLimit,\n    requestNeeded,\n    title,\n    revoked\n  }: {\n    chatId: ChatId,\n    link: string,\n    expireDate?: number,\n    usageLimit?: number,\n    requestNeeded?: boolean,\n    title?: string,\n    revoked?: boolean\n  }) {\n    return this.apiManager.invokeApi('messages.editExportedChatInvite', {\n      peer: this.appChatsManager.getInputPeer(chatId),\n      revoked,\n      link,\n      expire_date: expireDate,\n      usage_limit: usageLimit,\n      request_needed: requestNeeded,\n      title\n    }).then((chatInvite) => {\n      this.appUsersManager.saveApiUsers(chatInvite.users);\n      return chatInvite;\n    });\n  }\n\n  public deleteRevokedExportedChatInvites(chatId: ChatId, adminId?: UserId) {\n    return this.apiManager.invokeApi('messages.deleteRevokedExportedChatInvites', {\n      peer: this.appChatsManager.getInputPeer(chatId),\n      admin_id: this.appUsersManager.getUserInput(adminId)\n    });\n  }\n\n  public deleteExportedChatInvite(chatId: ChatId, link: string) {\n    return this.apiManager.invokeApi('messages.deleteExportedChatInvite', {\n      peer: this.appChatsManager.getInputPeer(chatId),\n      link\n    });\n  }\n\n  public getAdminsWithInvites(chatId: ChatId) {\n    return this.apiManager.invokeApi('messages.getAdminsWithInvites', {\n      peer: this.appChatsManager.getInputPeer(chatId)\n    }).then((chatAdminsWithInvites) => {\n      this.appUsersManager.saveApiUsers(chatAdminsWithInvites.users);\n      return chatAdminsWithInvites;\n    });\n  }\n\n  public getChatInviteImporters({\n    chatId,\n    limit = 50,\n    offsetDate = 0,\n    offsetUserId,\n    link,\n    q,\n    requested\n  }: {\n    chatId: ChatId,\n    limit?: number,\n    offsetDate?: number,\n    offsetUserId?: UserId,\n    link?: string,\n    q?: string,\n    requested?: boolean\n  }) {\n    const offsetUser: InputUser = offsetUserId ? this.appUsersManager.getUserInput(offsetUserId) : {_: 'inputUserEmpty'};\n    return this.apiManager.invokeApi('messages.getChatInviteImporters', {\n      peer: this.appChatsManager.getInputPeer(chatId),\n      limit,\n      offset_date: offsetDate,\n      offset_user: offsetUser,\n      link,\n      q,\n      requested\n    }).then((chatInviteImporters) => {\n      this.appUsersManager.saveApiUsers(chatInviteImporters.users);\n      return chatInviteImporters;\n    });\n  }\n}\n","enum StoriesCacheType {\n  Stories = 'stories',\n  Pinned = 'pinnedStories',\n  Archive = 'archiveStories'\n}\n\nexport default StoriesCacheType;\n","import insertInDescendSortedArray from '../../../../helpers/array/insertInDescendSortedArray';\nimport {StoryItem} from '../../../../layer';\nimport StoriesCacheType from './cacheType';\n\nexport default function insertStory<T extends StoryItem | number>(array: T[], storyItem: T, cacheType: StoriesCacheType) {\n  if(cacheType !== StoriesCacheType.Stories) {\n    // @ts-ignore\n    return insertInDescendSortedArray(\n      array,\n      storyItem,\n      typeof(storyItem) !== 'number' ? 'id' : undefined\n    );\n  } else {\n    return insertInDescendSortedArray(\n      array,\n      storyItem,\n      typeof(storyItem) !== 'number' ? (storyItem) => 0xFFFFFFFF - (storyItem as StoryItem).id : (storyId) => 0xFFFFFFFF - (storyId as number)\n    );\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\nimport assumeType from '../../helpers/assumeType';\nimport callbackify from '../../helpers/callbackify';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport pause from '../../helpers/schedulers/pause';\nimport tsNow from '../../helpers/tsNow';\nimport {Reaction, ReportReason, StoriesAllStories, StoriesStories, StoriesPeerStories, StoryItem, Update, PeerStories, User, Chat} from '../../layer';\nimport {MTAppConfig} from '../mtproto/appConfig';\nimport {SERVICE_PEER_ID, TEST_NO_STORIES} from '../mtproto/mtproto_config';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {AppManager} from './manager';\nimport reactionsEqual from './utils/reactions/reactionsEqual';\nimport StoriesCacheType from './utils/stories/cacheType';\nimport insertStory from './utils/stories/insertStory';\n\ntype MyStoryItem = Exclude<StoryItem, StoryItem.storyItemDeleted>;\n\nexport type StoriesListType = 'stories' | 'archive';\nexport type StoriesListPosition = {type: StoriesListType, index: number};\nexport type StoriesSegment = {length: number, type: 'unread' | 'close' | 'read'};\nexport type StoriesSegments = StoriesSegment[];\ntype StoriesPeerCache = {\n  peerId: PeerId,\n  stories: StoryItem['id'][],\n  pinnedStories: StoriesPeerCache['stories'],\n  archiveStories: StoriesPeerCache['stories'],\n  storiesMap: Map<MyStoryItem['id'], MyStoryItem>,\n  deleted: Set<number>,\n  maxReadId?: number,\n  getStoriesPromises: Map<StoryItem['id'], CancellablePromise<StoryItem.storyItem>>,\n  getStoriesPromise?: CancellablePromise<void>,\n  dispatchStoriesEvent?: boolean,\n  pinnedLoadedAll?: boolean,\n  archiveLoadedAll?: boolean,\n  position?: StoriesListPosition\n};\n\ntype ExpiringItem = {peerId: PeerId, id: number, timestamp: number};\n\nconst TEST_SKIPPED = false;\nconst TEST_READ = false;\nconst TEST_EXPIRING = 0;\n\nexport default class AppStoriesManager extends AppManager {\n  private cache: {[userId: UserId]: StoriesPeerCache};\n  private lists: {[type in StoriesListType]: PeerId[]};\n  private changelogPeerId: PeerId;\n  private expiring: ExpiringItem[];\n\n  protected after() {\n    this.clear(true);\n\n    this.changelogPeerId = SERVICE_PEER_ID;\n\n    if(TEST_NO_STORIES) {\n      return;\n    }\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateStory: this.onUpdateStory,\n\n      updateReadStories: this.onUpdateReadStories\n    });\n\n    this.rootScope.addEventListener('app_config', this.setChangelogPeerIdFromAppConfig);\n\n    this.rootScope.addEventListener('contacts_update', (userId) => {\n      this.onSubscriptionUpdate(userId.toPeerId(false));\n    });\n\n    this.rootScope.addEventListener('chat_participation', ({chatId}) => {\n      this.onSubscriptionUpdate(chatId.toPeerId(true));\n    });\n\n    this.rootScope.addEventListener('peer_stories_hidden', ({peerId}) => {\n      const cache = this.getPeerStoriesCache(peerId, false);\n      if(!cache) {\n        return;\n      }\n\n      this.updateListCachePosition(cache);\n      this.rootScope.dispatchEvent('stories_stories', this.convertPeerStoriesCache(cache));\n\n      // move stories from cache to archive\n      // const arrays = [cache[StoriesCacheType.Stories], cache[StoriesCacheType.Archive]];\n      // if(!hidden) {\n      //   arrays.reverse();\n      // }\n\n      // const [from, to] = arrays;\n      // const stories = from.splice(0, from.length);\n      // to.push(...stories);\n    });\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        this.getAllStories(false, undefined, true);\n      }, 2e3);\n    });\n\n    setInterval(() => this.checkExpired(), 5e3);\n  }\n\n  public clear = (init?: boolean) => {\n    this.cache = {};\n    this.lists = {\n      stories: [],\n      archive: []\n    };\n    this.expiring = [];\n  };\n\n  private onSubscriptionUpdate(peerId: PeerId) {\n    const peer = this.getPeer(peerId);\n    if(!peer) {\n      return;\n    }\n\n    const cache = this.getPeerStoriesCache(peerId, false);\n    if(!cache) {\n      const isSubscribed = this.isSubcribedToPeer(peerId);\n      const hasStories = peer.stories_max_id !== undefined;\n      if(isSubscribed && hasStories) {\n        Promise.resolve(this.getPeerStories(peerId)).then((peerStories) => {\n          this.rootScope.dispatchEvent('stories_stories', peerStories);\n        });\n      }\n\n      return;\n    }\n\n    const position = cache.position;\n    this.updateListCachePosition(cache);\n    if(!position && cache.position) { // added to list\n      this.rootScope.dispatchEvent('stories_stories', this.convertPeerStoriesCache(cache));\n    }\n  }\n\n  private checkExpired() {\n    const now = tsNow(true);\n    let item: ExpiringItem;\n    while(item = this.expiring[0]) {\n      if(item.timestamp > now) {\n        break;\n      }\n\n      this.expiring.shift();\n      const cache = this.getPeerStoriesCache(item.peerId, false);\n      if(!cache) {\n        continue;\n      }\n\n      const spliced = indexOfAndSplice(cache.stories, item.id);\n      if(spliced !== undefined) {\n        this.updateListCachePosition(cache);\n        this.rootScope.dispatchEvent('story_expired', {peerId: cache.peerId, id: item.id});\n      }\n    }\n  }\n\n  private setChangelogPeerIdFromAppConfig = (appConfig: MTAppConfig) => {\n    const userId = appConfig.stories_changelog_user_id;\n    return this.changelogPeerId = userId ? userId.toPeerId(false) : SERVICE_PEER_ID;\n  };\n\n  public getChangelogPeerId(): PeerId | Promise<PeerId> {\n    return this.changelogPeerId || callbackify(this.apiManager.getAppConfig(), this.setChangelogPeerIdFromAppConfig);\n  }\n\n  public generateSortIndexForCache(cache: StoriesPeerCache) {\n    const cacheType = this.getCacheTypeForPeerId(cache.peerId);\n    if(!cacheType) {\n      return;\n    }\n\n    const lastStoryId = cache.stories[cache.stories.length - 1];\n    if(!lastStoryId) {\n      return;\n    }\n\n    const lastStory = cache.storiesMap.get(lastStoryId);\n    const unreadType = this.getUnreadType(cache.peerId);\n    const isMe = cache.peerId === this.rootScope.myId;\n    const isUnread = unreadType !== 'read';\n    const isChangelog = cache.peerId === this.changelogPeerId;\n    const isPremium = cache.peerId.isUser() ? this.appUsersManager.isPremium(cache.peerId.toUserId()) : false;\n    const index = [\n      isMe,\n      isUnread,\n      isChangelog,\n      isPremium\n    ].map((boolean) => +boolean).join('') + lastStory.date;\n    return +index;\n  }\n\n  public generateListCachePosition(cache: StoriesPeerCache) {\n    const index = this.generateSortIndexForCache(cache);\n    if(!index) {\n      return;\n    }\n\n    const peer = this.appPeersManager.getPeer(cache.peerId) as User.user | Chat.channel;\n    const position: StoriesListPosition = {\n      type: peer.pFlags.stories_hidden ? 'archive' : 'stories',\n      index\n    };\n\n    return position;\n  }\n\n  public updateListCachePosition(cache: StoriesPeerCache) {\n    const previousPosition = cache.position;\n    const position = this.generateListCachePosition(cache);\n    if(deepEqual(previousPosition, position)) {\n      return;\n    }\n\n    if(previousPosition && previousPosition.type !== position?.type) {\n      const previousList = this.lists[previousPosition.type];\n      indexOfAndSplice(previousList, cache.peerId);\n    }\n\n    cache.position = position;\n\n    if(position) {\n      const list = this.lists[position.type];\n      insertInDescendSortedArray(list, cache.peerId, (peerId) => {\n        const cache = this.getPeerStoriesCache(peerId);\n        return cache.position.index;\n      });\n    }\n\n    this.rootScope.dispatchEvent('stories_position', {peerId: cache.peerId, position});\n  }\n\n  public getPeerStoriesCache(peerId: PeerId, create = true): StoriesPeerCache {\n    return this.cache[peerId] ??= create ? {\n      peerId,\n      stories: [],\n      pinnedStories: [],\n      archiveStories: [],\n      storiesMap: new Map(),\n      getStoriesPromises: new Map(),\n      deleted: new Set()\n    } : undefined;\n  }\n\n  public convertPeerStoriesCache(cache: StoriesPeerCache): PeerStories {\n    return {\n      _: 'peerStories',\n      peer: this.appPeersManager.getOutputPeer(cache.peerId),\n      stories: cache.stories.map((storyId) => cache.storiesMap.get(storyId)),\n      max_read_id: cache.maxReadId\n    };\n  }\n\n  public saveStoryItem(storyItem: StoryItem, cache: StoriesPeerCache, cacheType?: StoriesCacheType): MyStoryItem {\n    if(TEST_NO_STORIES || !storyItem || storyItem._ === 'storyItemDeleted') {\n      return;\n    }\n\n    const oldStoryItem = cache.storiesMap.get(storyItem.id);\n    const oldIsSkipped = oldStoryItem?._ === 'storyItemSkipped';\n    const isSkipped = storyItem._ === 'storyItemSkipped';\n    if(isSkipped && oldStoryItem && !oldIsSkipped) {\n      return oldStoryItem;\n    }\n\n    if(!isSkipped) {\n      const mediaContext: ReferenceContext = {\n        type: 'storyItem',\n        peerId: cache.peerId,\n        storyId: storyItem.id\n      };\n\n      this.appMessagesManager.saveMessageMedia(storyItem, mediaContext);\n    }\n\n    let modifiedPinned: boolean;\n    if(cacheType !== StoriesCacheType.Pinned) {\n      const wasPinned = !!(oldStoryItem as StoryItem.storyItem)?.pFlags?.pinned;\n      const newPinned = !!(storyItem as StoryItem.storyItem).pFlags?.pinned;\n      if(wasPinned !== newPinned) {\n        if(newPinned) {\n          if(cache.pinnedLoadedAll ||\n            (cache.pinnedStories.length && storyItem.id > cache.pinnedStories[cache.pinnedStories.length - 1])) {\n            insertStory(cache.pinnedStories, storyItem.id, StoriesCacheType.Pinned);\n            modifiedPinned = true;\n          }\n        } else if(indexOfAndSplice(cache.pinnedStories, storyItem.id)) {\n          modifiedPinned = true;\n        }\n      }\n    }\n\n    let modifiedArchive: boolean;\n    if(cacheType !== StoriesCacheType.Archive && cache.peerId === this.appPeersManager.peerId) {\n      if(!cache.archiveStories.includes(storyItem.id) && (cache.archiveLoadedAll ||\n        (cache.archiveStories.length && storyItem.id > cache.archiveStories[cache.archiveStories.length - 1]))) {\n        insertStory(cache.archiveStories, storyItem.id, StoriesCacheType.Archive);\n        modifiedArchive = true;\n      }\n    }\n\n    if(cacheType === StoriesCacheType.Stories) {\n      if(TEST_EXPIRING) {\n        storyItem.expire_date = tsNow(true) + TEST_EXPIRING;\n      }\n\n      const pos = this.expiring.findIndex((item) => item.peerId === cache.peerId && item.id === storyItem.id);\n      insertInDescendSortedArray(\n        this.expiring,\n        {peerId: cache.peerId, id: storyItem.id, timestamp: storyItem.expire_date},\n        (item) => 0x7FFFFFFF - (item.timestamp),\n        pos\n      );\n    }\n\n    if(cacheType) {\n      const array = cache[cacheType];\n      insertStory(array, storyItem.id, cacheType);\n    }\n\n    if(!oldStoryItem) {\n      cache.storiesMap.set(storyItem.id, storyItem);\n    } else {\n      if(!oldIsSkipped && !isSkipped && storyItem.pFlags.min) {\n        const preserve: (keyof StoryItem.storyItem)[] = ['privacy', 'views'];\n        for(const key of preserve) {\n          // @ts-ignore\n          storyItem[key] = oldStoryItem[key];\n        }\n      }\n\n      if(!oldIsSkipped && !isSkipped && storyItem.pFlags.min) {\n        const preserveFlags: (keyof StoryItem.storyItem['pFlags'])[] = ['out' as any];\n        for(const key of preserveFlags) {\n          // @ts-ignore\n          storyItem.pFlags[key] = oldStoryItem.pFlags[key];\n        }\n      }\n\n      safeReplaceObject(oldStoryItem, storyItem);\n    }\n\n    if(oldStoryItem || modifiedPinned || modifiedArchive) {\n      this.rootScope.dispatchEvent('story_update', {\n        peerId: cache.peerId,\n        story: oldStoryItem || storyItem,\n        modifiedPinned,\n        modifiedArchive\n      });\n    }\n\n    return oldStoryItem || storyItem;\n  }\n\n  public saveStoryItems(storyItems: StoryItem[], cache: StoriesPeerCache, cacheType?: StoriesCacheType) {\n    // if((storyItems as any).saved) return storyItems;\n    // (storyItems as any).saved = true;\n    const indexesToDelete: number[] = [];\n    const newStoryItems = storyItems.map((storyItem, idx) => {\n      storyItem = this.saveStoryItem(storyItem, cache, cacheType);\n      if(!storyItem) {\n        indexesToDelete.push(idx);\n      }\n\n      return storyItem;\n    });\n\n    forEachReverse(indexesToDelete, (idx) => {\n      newStoryItems.splice(idx, 1);\n    });\n\n    if(cache.stories.length && cacheType === StoriesCacheType.Stories) { // * fix peer missing flag\n      const peer = this.getPeer(cache.peerId);\n      if(!peer.stories_max_id) {\n        const newPeer: typeof peer = {\n          ...peer,\n          stories_max_id: cache.storiesMap.get(cache.stories[cache.stories.length - 1]).id\n        };\n\n        if(cache.peerId.isUser()) this.appUsersManager.saveApiUsers([newPeer as User.user]);\n        else this.appChatsManager.saveApiChats([newPeer as Chat.channel]);\n      }\n    }\n\n    this.updateListCachePosition(cache);\n\n    return newStoryItems;\n  }\n\n  public getPeer(peerId: PeerId) {\n    return this.appPeersManager.getPeer(peerId) as User.user | Chat.channel;\n  }\n\n  public saveApiPeerStories<T extends User.user | Chat.channel>(peer: T, oldPeer?: T) {\n    if(peer._ !== 'channel' && peer._ !== 'user') {\n      return;\n    }\n\n    const wasStories = oldPeer.stories_max_id ? true : (oldPeer.pFlags.stories_unavailable ? false : undefined);\n    let newStories = peer.stories_max_id ? true : (peer.pFlags.stories_unavailable ? false : undefined);\n    if(wasStories !== newStories) {\n      if(newStories === undefined) {\n        if(wasStories) {\n          peer.stories_max_id = oldPeer.stories_max_id;\n        }\n\n        newStories = wasStories;\n      }/*  else {\n        if(!newStories) {\n          delete peer.pFlags.stories_unavailable;\n        }\n      } */\n    }\n\n    const wasStoriesHidden = oldPeer.pFlags.stories_hidden;\n    const newStoriesHidden = peer.pFlags.stories_hidden;\n\n    return () => {\n      if(TEST_NO_STORIES) {\n        return;\n      }\n\n      const peerId = peer.id.toPeerId(peer._ !== 'user');\n      if(wasStories !== newStories && newStories !== undefined) {\n        this.rootScope.dispatchEvent('peer_stories', {peerId, available: newStories});\n      }\n\n      if(wasStoriesHidden !== newStoriesHidden) {\n        this.rootScope.dispatchEvent('peer_stories_hidden', {peerId, hidden: newStoriesHidden});\n      }\n    };\n  }\n\n  public saveStoriesStories(storiesStories: StoriesStories, cache: StoriesPeerCache, cacheType?: StoriesCacheType) {\n    this.appPeersManager.saveApiPeers(storiesStories);\n    const storyItems = this.saveStoryItems(storiesStories.stories, cache, cacheType) as StoryItem.storyItem[];\n\n    if(TEST_NO_STORIES) {\n      storyItems.splice(0, Infinity);\n    }\n\n    return storyItems;\n  }\n\n  public savePeerStories(peerStories: PeerStories) {\n    const peerId = this.appPeersManager.getPeerId(peerStories.peer);\n    const cache = this.getPeerStoriesCache(peerId);\n\n    if(TEST_NO_STORIES) {\n      peerStories.stories = [];\n    }\n\n    if(TEST_SKIPPED) {\n      peerStories.stories = peerStories.stories.map((storyItem) => {\n        return {\n          _: 'storyItemSkipped',\n          id: storyItem.id,\n          date: (storyItem as StoryItem.storyItem).date,\n          expire_date: (Date.now() / 1000 | 0) + 86400,\n          pFlags: {}\n        };\n      });\n    }\n\n    const cacheType = this.getCacheTypeForPeerId(peerId, true);\n    cache.maxReadId = peerStories.max_read_id ?? 0;\n    peerStories.stories = this.saveStoryItems(peerStories.stories, cache, cacheType);\n\n    if(cache.dispatchStoriesEvent) {\n      delete cache.dispatchStoriesEvent;\n      this.rootScope.dispatchEvent('peer_stories', {\n        peerId,\n        available: cache.stories.length > 0\n      });\n    }\n\n    return peerStories;\n  }\n\n  public getUnreadType(peerId: PeerId, storyId?: number, cache = this.getPeerStoriesCache(peerId)): StoriesSegment['type'] {\n    storyId ??= cache.stories[cache.stories.length - 1];\n    if(!storyId && !cache.dispatchStoriesEvent) {\n      cache.dispatchStoriesEvent = true;\n      this.getPeerStories(peerId);\n    }\n\n    if(!storyId) {\n      return;\n    }\n\n    return storyId > cache.maxReadId ? (cache.storiesMap.get(storyId).pFlags.close_friends ? 'close' : 'unread') : 'read';\n  }\n\n  public getPeerStoriesSegments(peerId: PeerId): StoriesSegments | Promise<StoriesSegments> {\n    const cache = this.getPeerStoriesCache(peerId);\n    if(cache.maxReadId === undefined) {\n      return callbackify(this.getPeerStories(peerId), () => this.getPeerStoriesSegments(peerId));\n    }\n\n    if(!cache.stories.length) {\n      return;\n    }\n\n    const segments: StoriesSegments = [];\n    let lastSegment: StoriesSegment;\n    cache.stories.forEach((storyId) => {\n      const type = this.getUnreadType(peerId, storyId, cache);\n      if(lastSegment?.type !== type) {\n        lastSegment = {\n          length: 1,\n          type\n        };\n\n        segments.push(lastSegment);\n      } else {\n        ++lastSegment.length;\n      }\n    });\n\n    return segments;\n  }\n\n  public deleteStories(peerId: PeerId, ids: StoryItem['id'][]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.deleteStories',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: ids\n      },\n      processResult: (ids) => {\n        ids.forEach((id) => {\n          this.apiUpdatesManager.processLocalUpdate({\n            _: 'updateStory',\n            peer: this.appPeersManager.getOutputPeer(peerId),\n            story: {\n              _: 'storyItemDeleted',\n              id\n            }\n          });\n        });\n      }\n    });\n  }\n\n  public togglePinned(peerId: PeerId, storyId: StoryItem['id'] | StoryItem['id'][], pinned: boolean) {\n    if(!Array.isArray(storyId)) storyId = [storyId];\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.togglePinned',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: storyId,\n        pinned\n      },\n      processResult: (result) => {\n        if(!result.length) {\n          return;\n        }\n\n        const cache = this.getPeerStoriesCache(this.rootScope.myId);\n        const newStories: StoryItem.storyItem[] = result.map((storyId) => {\n          const story = cache.storiesMap.get(storyId);\n          if(story?._ !== 'storyItem') {\n            return;\n          }\n\n          // if(pinned) story.pFlags.pinned = true;\n          // else delete story.pFlags.pinned;\n          return {\n            ...story,\n            pFlags: {\n              ...story.pFlags,\n              pinned: pinned || undefined\n            }\n          };\n        });\n\n        this.saveStoryItems(newStories, cache);\n      }\n    });\n  }\n\n  public hasArchive() {\n    return this.lists.archive.length > 0;\n  }\n\n  public getAllStories(next?: boolean, state?: string, hidden?: boolean) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.getAllStories',\n      params: {\n        next,\n        state,\n        hidden\n      },\n      processResult: (storiesAllStories) => {\n        assumeType<StoriesAllStories.storiesAllStories>(storiesAllStories);\n        this.appPeersManager.saveApiPeers(storiesAllStories);\n        storiesAllStories.peer_stories = storiesAllStories.peer_stories\n        .map((peerStories) => this.savePeerStories(peerStories))\n        .filter((peerStories) => peerStories.stories.length);\n        return storiesAllStories;\n      }\n    });\n  }\n\n  public getPeerStories(peerId: PeerId) {\n    const cache = this.getPeerStoriesCache(peerId);\n    if(cache.maxReadId !== undefined) {\n      return this.convertPeerStoriesCache(cache);\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.getPeerStories',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: (storiesPeerStories) => {\n        this.appPeersManager.saveApiPeers(storiesPeerStories);\n        return this.savePeerStories(storiesPeerStories.stories);\n      }\n    });\n  }\n\n  private getCachedStories(cache: StoriesPeerCache, pinned: boolean, limit: number, offsetId: number) {\n    const array = pinned ? cache.pinnedStories : cache.archiveStories;\n    const index = offsetId ? array.findIndex((storyId) => storyId < offsetId) : 0;\n    if(index !== -1) {\n      const sliced = array.slice(index, index + limit);\n      if(sliced.length === limit || (pinned ? cache.pinnedLoadedAll : cache.archiveLoadedAll)) {\n        return sliced.map((storyId) => cache.storiesMap.get(storyId)) as StoryItem.storyItem[];\n      }\n    }\n  }\n\n  private processLoadedStoriesStories(\n    cache: StoriesPeerCache,\n    pinned: boolean,\n    limit: number,\n    storiesStories: StoriesStories\n  ) {\n    const length = storiesStories.stories.length;\n    const storyItems = this.saveStoriesStories(\n      storiesStories,\n      cache,\n      pinned ? StoriesCacheType.Pinned : StoriesCacheType.Archive\n    );\n    const array = pinned ? cache.pinnedStories : cache.archiveStories;\n    if(array.length === storiesStories.count || length < limit) {\n      if(pinned) cache.pinnedLoadedAll = true;\n      else cache.archiveLoadedAll = true;\n    }\n\n    return storyItems;\n  }\n\n  public getPinnedStories(peerId: PeerId, limit: number, offsetId: number = 0) {\n    const cache = this.getPeerStoriesCache(peerId);\n    const slice = this.getCachedStories(cache, true, limit, offsetId);\n    if(slice) {\n      return slice;\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.getPinnedStories',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        limit,\n        offset_id: offsetId\n      },\n      processResult: this.processLoadedStoriesStories.bind(this, cache, true, limit)\n    });\n  }\n\n  public getStoriesArchive(peerId: PeerId, limit: number, offsetId: number = 0) {\n    const cache = this.getPeerStoriesCache(peerId);\n    const slice = this.getCachedStories(cache, false, limit, offsetId);\n    if(slice) {\n      return slice;\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.getStoriesArchive',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        limit,\n        offset_id: offsetId\n      },\n      processResult: this.processLoadedStoriesStories.bind(this, cache, false, limit)\n    });\n  }\n\n  public fetchSingleStories(cache: StoriesPeerCache) {\n    return cache.getStoriesPromise ??= pause(0).then(() => {\n      const ids = [...cache.getStoriesPromises.keys()];\n\n      const promise = this.apiManager.invokeApi('stories.getStoriesByID', {\n        peer: this.appPeersManager.getInputPeerById(cache.peerId),\n        id: ids\n      }, {floodMaxTimeout: Infinity});\n\n      const resolve = (storyItems: StoryItem.storyItem[]) => {\n        const map: Map<typeof storyItems[0]['id'], typeof storyItems[0]> = new Map(\n          storyItems.map((storyItem) => [storyItem.id, storyItem])\n        );\n\n        for(const id of ids) {\n          const storyItem = map.get(id);\n          if(!storyItem) {\n            this.handleDeletedStory(cache, id);\n          }\n\n          const promise = cache.getStoriesPromises.get(id);\n          cache.getStoriesPromises.delete(id);\n          promise.resolve(storyItem);\n        }\n      };\n\n      promise.then((storiesStories) => {\n        const storyItems = this.saveStoriesStories(storiesStories, cache);\n        resolve(storyItems);\n      }, () => {\n        resolve([]);\n      }).then(() => {\n        cache.getStoriesPromise = undefined;\n        if(cache.getStoriesPromises.size) {\n          this.fetchSingleStories(cache);\n        }\n\n        this.rootScope.dispatchEvent('stories_downloaded', {peerId: cache.peerId, ids});\n      });\n    });\n  }\n\n  public getStoryByIdCached(peerId: PeerId, id: StoryItem['id']): MyStoryItem {\n    const cache = this.getPeerStoriesCache(peerId);\n    return cache.storiesMap.get(id);\n  }\n\n  public getStoryById(peerId: PeerId, id: StoryItem['id'], overwrite?: boolean): MaybePromise<StoryItem.storyItem> {\n    const cache = this.getPeerStoriesCache(peerId);\n    const storyItem = cache.storiesMap.get(id);\n    if(cache.deleted.has(id)) {\n      return undefined;\n    } else if(storyItem?._ === 'storyItem' && !overwrite) {\n      return storyItem;\n    } else {\n      let promise = cache.getStoriesPromises.get(id);\n      if(promise) {\n        return promise;\n      }\n\n      cache.getStoriesPromises.set(id, promise = deferredPromise());\n      this.fetchSingleStories(cache);\n      return promise;\n    }\n  }\n\n  public getStoriesById(peerId: PeerId, ids: StoryItem['id'][], overwrite?: boolean): MaybePromise<StoryItem.storyItem[]> {\n    const arr = ids.map((id) => {\n      return this.getStoryById(peerId, id, overwrite);\n    });\n\n    const hasPromise = arr.some((item) => item instanceof Promise);\n    return hasPromise ? Promise.all(arr) : arr as StoryItem.storyItem[];\n  }\n\n  public readStories(peerId: PeerId, maxId: StoryItem['id']) {\n    const cache = this.getPeerStoriesCache(peerId);\n    if(cache.maxReadId !== undefined && cache.maxReadId >= maxId) {\n      return;\n    }\n\n    this.apiUpdatesManager.processLocalUpdate({\n      _: 'updateReadStories',\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      max_id: maxId\n    });\n\n    if(TEST_READ) {\n      return;\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.readStories',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        max_id: maxId\n      }\n    });\n  }\n\n  public incrementStoryViews(peerId: PeerId, ids: StoryItem['id'][]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.incrementStoryViews',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: ids\n      }\n    });\n  }\n\n  public getStoryViewsList(peerId: PeerId, id: number, limit: number, offset: string = '', q?: string, justContacts?: boolean) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.getStoryViewsList',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id,\n        limit,\n        offset,\n        q,\n        just_contacts: justContacts\n      },\n      processResult: (storiesStoryViews) => {\n        this.appPeersManager.saveApiPeers(storiesStoryViews);\n\n        return {\n          count: storiesStoryViews.count,\n          views: storiesStoryViews.views,\n          nextOffset: storiesStoryViews.next_offset\n        };\n      }\n    });\n  }\n\n  public getStoriesViews(peerId: PeerId, ids: number[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.getStoriesViews',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: ids\n      },\n      processResult: (storiesStoryViews) => {\n        this.appPeersManager.saveApiPeers(storiesStoryViews);\n\n        const cache = this.getPeerStoriesCache(this.appPeersManager.peerId);\n        storiesStoryViews.views.forEach((views, idx) => {\n          const id = ids[idx];\n          const storyItem = cache.storiesMap.get(id);\n          if(!storyItem) {\n            return;\n          }\n\n          this.saveStoryItems([{\n            ...(storyItem as StoryItem.storyItem),\n            views\n          }], cache);\n        });\n\n        return storiesStoryViews.views;\n      }\n    });\n  }\n\n  public report(peerId: PeerId, id: number[], reason: ReportReason['_'], message?: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.report',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id,\n        reason: {_: reason},\n        message\n      }\n    });\n  }\n\n  public sendReaction(peerId: PeerId, id: number, reaction: Reaction) {\n    reaction ??= {_: 'reactionEmpty'};\n    const story = this.getStoryByIdCached(peerId, id) as StoryItem.storyItem;\n    const views = story.views;\n    const newSentReaction: Reaction = reaction._ === 'reactionEmpty' ? undefined : reaction;\n\n    if(views) {\n      const unsetPreviousReaction = () => {\n        const reactionCount = views.reactions?.find((reactionCount) => reactionsEqual(reactionCount.reaction, story.sent_reaction));\n        if(reactionCount) {\n          --reactionCount.count;\n          if(!reactionCount.count) {\n            indexOfAndSplice(views.reactions, reactionCount);\n          }\n        }\n      };\n\n      views.reactions_count ??= 0;\n      if(!story.sent_reaction && newSentReaction) {\n        ++views.reactions_count;\n      } else if(story.sent_reaction && !newSentReaction) {\n        --views.reactions_count;\n      }\n\n      unsetPreviousReaction();\n      if(newSentReaction) {\n        let reactionCount = views.reactions?.find((reactionCount) => reactionsEqual(reactionCount.reaction, newSentReaction));\n        if(!reactionCount) {\n          views.reactions ??= [];\n          views.reactions.push(reactionCount = {\n            _: 'reactionCount',\n            reaction: newSentReaction,\n            count: 0\n          });\n        }\n\n        ++reactionCount.count;\n      }\n    }\n\n    this.saveStoryItems([{\n      ...story,\n      sent_reaction: newSentReaction\n    }], this.getPeerStoriesCache(peerId));\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.sendReaction',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        reaction,\n        story_id: id\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }\n    });\n  }\n\n  protected handleDeletedStory(cache: StoriesPeerCache, id: StoryItem['id']) {\n    cache.deleted.add(id);\n    if(!cache.storiesMap.delete(id)) {\n      return;\n    }\n\n    [\n      cache.stories,\n      cache.pinnedStories,\n      cache.archiveStories\n    ].forEach((array) => {\n      indexOfAndSplice(array, id);\n    });\n\n    this.updateListCachePosition(cache);\n    this.rootScope.dispatchEvent('story_deleted', {peerId: cache.peerId, id});\n  }\n\n  public isSubcribedToPeer(peerId: PeerId) {\n    if(peerId.isUser()) {\n      return this.appUsersManager.isContact(peerId.toUserId());\n    } else {\n      const chatId = peerId.toChatId();\n      const chat = this.appChatsManager.getChat(chatId) as Chat.channel;\n      return this.appChatsManager.isBroadcast(chatId) && !chat.pFlags.left;\n    }\n  }\n\n  public getCacheTypeForPeerId(peerId: PeerId, ignoreNoSubscription?: boolean) {\n    if(\n      !this.isSubcribedToPeer(peerId) &&\n      peerId !== this.changelogPeerId &&\n      !ignoreNoSubscription\n    ) {\n      return;\n    }\n\n    return StoriesCacheType.Stories;\n    // return user.pFlags.stories_hidden && this.appPeersManager.peerId === peerId ?\n    //   StoriesCacheType.Archive :\n    //   StoriesCacheType.Stories;\n  }\n\n  public isStoryExpired(story: StoryItem.storyItemSkipped | StoryItem.storyItem) {\n    return story.expire_date <= tsNow(true);\n  }\n\n  public hasRights(peerId: PeerId, storyId: number, right: 'send' | 'edit' | 'delete' | 'archive' | 'pin') {\n    if(peerId.isUser()) {\n      return this.appPeersManager.peerId === peerId;\n    }\n\n    const chatId = peerId.toChatId();\n    const story = this.getStoryByIdCached(peerId, storyId) as StoryItem.storyItem;\n    const isMyStory = !!story.pFlags.out;\n\n    const canEdit = this.appChatsManager.hasRights(chatId, 'edit_stories');\n    const canPost = this.appChatsManager.hasRights(chatId, 'post_stories');\n    const canDelete = this.appChatsManager.hasRights(chatId, 'delete_stories');\n    switch(right) {\n      case 'send': {\n        return canPost;\n      }\n\n      case 'edit': {\n        return !isMyStory ? canEdit : canPost;\n      }\n\n      case 'delete': {\n        return !isMyStory ? canDelete : canPost;\n      }\n\n      case 'archive': {\n        return canEdit;\n      }\n\n      case 'pin': {\n        return canEdit;\n      }\n\n      default: {\n        return false;\n      }\n    }\n  }\n\n  public cantPinDeleteStories(peerId: PeerId, storyIds: number[]) {\n    let cantPin = !storyIds.length, cantDelete = !storyIds.length;\n    for(const storyId of storyIds) {\n      if(!cantPin) {\n        cantPin = !this.hasRights(peerId, storyId, 'pin');\n      }\n\n      if(!cantDelete) {\n        cantDelete = !this.hasRights(peerId, storyId, 'delete');\n      }\n\n      if(cantPin && cantDelete) break;\n    }\n\n    return {cantPin, cantDelete};\n  }\n\n  public toggleStoriesHidden(peerId: PeerId, hidden: boolean) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'stories.togglePeerStoriesHidden',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        hidden\n      },\n      processResult: () => {\n        const peer = this.getPeer(peerId);\n        const pFlags = {...peer.pFlags};\n        if(hidden) pFlags.stories_hidden = true;\n        else delete pFlags.stories_hidden;\n        const newPeer: typeof peer = {\n          ...peer,\n          pFlags\n        };\n        if(peerId.isUser()) this.appUsersManager.saveApiUsers([newPeer as User.user]);\n        else this.appChatsManager.saveApiChats([newPeer as Chat.channel]);\n        this.appNotificationsManager.toggleStoriesMute(peerId, hidden, true);\n      }\n    });\n  }\n\n  protected onUpdateStory = (update: Update.updateStory) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n    const cache = this.getPeerStoriesCache(peerId);\n    let {story} = update;\n\n    if(story._ === 'storyItemDeleted') {\n      this.handleDeletedStory(cache, story.id);\n      return;\n    }\n\n    if(cache.maxReadId === undefined) {\n      Promise.resolve(this.getPeerStories(peerId)).then((userStories) => {\n        this.rootScope.dispatchEvent('stories_stories', userStories);\n      });\n      return;\n    }\n\n    const cacheType: StoriesCacheType = this.isStoryExpired(story) ? undefined : this.getCacheTypeForPeerId(peerId);\n    const hadStoryBefore = cache.storiesMap.has(story.id);\n    story = this.saveStoryItems([update.story], cache, cacheType)[0];\n    if(!hadStoryBefore && cacheType) {\n      this.rootScope.dispatchEvent('story_new', {peerId, story, cacheType, maxReadId: cache.maxReadId});\n    }\n  };\n\n  protected onUpdateReadStories = (update: Update.updateReadStories) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n    const cache = this.getPeerStoriesCache(peerId);\n    cache.maxReadId = update.max_id;\n    this.updateListCachePosition(cache);\n    this.rootScope.dispatchEvent('stories_read', {peerId, maxReadId: cache.maxReadId});\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {AppManager} from './manager';\n\nexport default class AppBotsManager extends AppManager {\n  public canSendMessage(botId: BotId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'bots.canSendMessage',\n      params: {\n        bot: this.appUsersManager.getUserInput(botId)\n      }\n    });\n  }\n\n  public allowSendMessage(botId: BotId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'bots.allowSendMessage',\n      params: {\n        bot: this.appUsersManager.getUserInput(botId)\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {AppManager} from './manager';\n\nexport default class AppBoostsManager extends AppManager {\n  public getBoostsStatus(peerId: PeerId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'premium.getBoostsStatus',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      }\n    });\n  }\n\n  // public canApplyBoost(peerId: PeerId) {\n  //   return this.apiManager.invokeApiSingleProcess({\n  //     method: 'stories.canApplyBoost',\n  //     params: {\n  //       peer: this.appPeersManager.getInputPeerById(peerId)\n  //     },\n  //     processResult: (storiesCanApplyBoostResult) => {\n  //       this.appPeersManager.saveApiPeers(storiesCanApplyBoostResult as StoriesCanApplyBoostResult.storiesCanApplyBoostReplace);\n  //       return storiesCanApplyBoostResult;\n  //     },\n  //     options: {\n  //       floodMaxTimeout: 0\n  //     }\n  //   });\n  // }\n\n  public applyBoost(peerId: PeerId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'premium.applyBoost',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {PasswordManager} from '../mtproto/passwordManager';\nimport {ReferenceDatabase} from '../mtproto/referenceDatabase';\nimport DialogsStorage from '../storages/dialogs';\nimport FiltersStorage from '../storages/filters';\nimport {ApiUpdatesManager} from './apiUpdatesManager';\nimport {AppAvatarsManager} from './appAvatarsManager';\nimport {AppCallsManager} from './appCallsManager';\nimport {AppChatsManager} from './appChatsManager';\nimport {AppDocsManager} from './appDocsManager';\nimport {AppDraftsManager} from './appDraftsManager';\nimport {AppEmojiManager} from './appEmojiManager';\nimport {AppGroupCallsManager} from './appGroupCallsManager';\nimport {AppInlineBotsManager} from './appInlineBotsManager';\nimport {AppMessagesIdsManager} from './appMessagesIdsManager';\nimport {AppMessagesManager} from './appMessagesManager';\nimport {AppNotificationsManager} from './appNotificationsManager';\nimport {AppPeersManager} from './appPeersManager';\nimport {AppPhotosManager} from './appPhotosManager';\nimport {AppPollsManager} from './appPollsManager';\nimport {AppPrivacyManager} from './appPrivacyManager';\nimport {AppProfileManager} from './appProfileManager';\nimport {AppReactionsManager} from './appReactionsManager';\nimport {AppStickersManager} from './appStickersManager';\nimport {AppUsersManager} from './appUsersManager';\nimport {AppWebPagesManager} from './appWebPagesManager';\nimport {ApiFileManager} from '../mtproto/apiFileManager';\nimport {ApiManager} from '../mtproto/apiManager';\nimport ctx from '../../environment/ctx';\nimport PeersStorage from '../storages/peers';\nimport ThumbsStorage from '../storages/thumbs';\nimport {NetworkerFactory} from '../mtproto/networkerFactory';\nimport {RootScope} from '../rootScope';\nimport {Authorizer} from '../mtproto/authorizer';\nimport {DcConfigurator} from '../mtproto/dcConfigurator';\nimport {TimeManager} from '../mtproto/timeManager';\nimport {AppStoragesManager} from './appStoragesManager';\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\nimport appStateManager from './appStateManager';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport AppWebDocsManager from './appWebDocsManager';\nimport AppPaymentsManager from './appPaymentsManager';\nimport AppAttachMenuBotsManager from './appAttachMenuBotsManager';\nimport AppSeamlessLoginManager from './appSeamlessLoginManager';\nimport AppThemesManager from './appThemesManager';\nimport AppUsernamesManager from './appUsernamesManager';\nimport AppChatInvitesManager from './appChatInvitesManager';\nimport AppStoriesManager from './appStoriesManager';\nimport AppBotsManager from './appBotsManager';\nimport AppBoostsManager from './appBoostsManager';\n\nexport default function createManagers(appStoragesManager: AppStoragesManager, userId: UserId) {\n  const managers = {\n    appPeersManager: new AppPeersManager,\n    appChatsManager: new AppChatsManager,\n    appDocsManager: new AppDocsManager,\n    appPhotosManager: new AppPhotosManager,\n    appPollsManager: new AppPollsManager,\n    appUsersManager: new AppUsersManager,\n    appWebPagesManager: new AppWebPagesManager,\n    appDraftsManager: new AppDraftsManager,\n    appProfileManager: new AppProfileManager,\n    appNotificationsManager: new AppNotificationsManager,\n    apiUpdatesManager: new ApiUpdatesManager,\n    appAvatarsManager: new AppAvatarsManager,\n    appGroupCallsManager: new AppGroupCallsManager,\n    appCallsManager: new AppCallsManager,\n    appReactionsManager: new AppReactionsManager,\n    appMessagesManager: new AppMessagesManager,\n    appMessagesIdsManager: new AppMessagesIdsManager,\n    appPrivacyManager: new AppPrivacyManager,\n    appInlineBotsManager: new AppInlineBotsManager,\n    appStickersManager: new AppStickersManager,\n    referenceDatabase: new ReferenceDatabase,\n    appEmojiManager: new AppEmojiManager,\n    filtersStorage: new FiltersStorage,\n    dialogsStorage: new DialogsStorage,\n    apiManager: new ApiManager,\n    cryptoWorker: cryptoMessagePort,\n    passwordManager: new PasswordManager,\n    apiFileManager: new ApiFileManager,\n    peersStorage: new PeersStorage,\n    thumbsStorage: new ThumbsStorage,\n    networkerFactory: new NetworkerFactory,\n    rootScope: new RootScope,\n    authorizer: new Authorizer,\n    dcConfigurator: new DcConfigurator,\n    timeManager: new TimeManager,\n    appStoragesManager: appStoragesManager,\n    appStateManager: appStateManager,\n    appWebDocsManager: new AppWebDocsManager,\n    appPaymentsManager: new AppPaymentsManager,\n    appAttachMenuBotsManager: new AppAttachMenuBotsManager,\n    appSeamlessLoginManager: new AppSeamlessLoginManager,\n    appThemesManager: new AppThemesManager,\n    appUsernamesManager: new AppUsernamesManager,\n    appChatInvitesManager: new AppChatInvitesManager,\n    appStoriesManager: new AppStoriesManager,\n    appBotsManager: new AppBotsManager,\n    appBoostsManager: new AppBoostsManager\n  };\n\n  type T = typeof managers;\n\n  for(const name in managers) {\n    const manager = managers[name as keyof T];\n    if(!manager) {\n      continue;\n    }\n\n    if((manager as AppMessagesManager).setManagers) {\n      (manager as AppMessagesManager).setManagers(managers as any);\n      delete (manager as AppMessagesManager).setManagers;\n    }\n\n    // @ts-ignore\n    ctx[name] = manager;\n  }\n\n  const promises: Array<Promise<(() => void) | void> | void>[] = [];\n  let names = Object.keys(managers) as (keyof T)[];\n  names.unshift(\n    'appUsersManager',\n    'appChatsManager',\n    'appNotificationsManager',\n    'appMessagesManager',\n    'dialogsStorage'\n  );\n  names = filterUnique(names);\n  for(const name of names) {\n    const manager = managers[name];\n    if((manager as any)?.after) {\n      // console.log('injecting after', name);\n      const result = (manager as any).after();\n      promises.push(result);\n\n      // if(result instanceof Promise) {\n      //   result.then(() => {\n      //     console.log('injected after', name);\n      //   });\n      // }\n    }\n  }\n\n  if(userId) {\n    managers.apiManager.setUserAuth(userId);\n  }\n\n  return Promise.all(promises).then(() => managers);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\nimport App from '../../config/app';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport callbackify from '../../helpers/callbackify';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport appStateManager from './appStateManager';\nimport {AppStoragesManager} from './appStoragesManager';\nimport createManagers from './createManagers';\n\ntype Managers = Awaited<ReturnType<typeof createManagers>>;\n\n// for testing cases without video streaming\nconst CAN_USE_SERVICE_WORKER = true;\n\nexport class AppManagersManager {\n  private managers: Managers | Promise<Managers>;\n  private cryptoWorkersURLs: string[];\n  private cryptoPortsAttached: number;\n  private cryptoPortPromise: CancellablePromise<void>;\n\n  private _isServiceWorkerOnline: boolean;\n\n  private serviceMessagePort: ServiceMessagePort<true>;\n  private _serviceMessagePort: MessagePort\n\n  constructor() {\n    this._isServiceWorkerOnline = CAN_USE_SERVICE_WORKER;\n\n    this.cryptoWorkersURLs = [];\n    this.cryptoPortsAttached = 0;\n    this.cryptoPortPromise = deferredPromise();\n    this.cryptoPortPromise.then(() => {\n      this.cryptoPortPromise = undefined;\n    });\n  }\n\n  public start() {\n    const port = MTProtoMessagePort.getInstance<false>();\n\n    port.addEventListener('manager', ({name, method, args}) => {\n      return callbackify(this.getManagers(), (managers) => {\n        // @ts-ignore\n        const manager = managers[name];\n        return manager[method](...args);\n      });\n    });\n\n    port.addEventListener('cryptoPort', (payload, source, event) => {\n      const port = event.ports[0];\n      if(this.cryptoPortsAttached >= this.cryptoWorkersURLs.length) {\n        port.close();\n        return;\n      }\n\n      ++this.cryptoPortsAttached;\n      cryptoMessagePort.attachPort(port);\n      this.cryptoPortPromise?.resolve();\n    });\n\n    port.addEventListener('createProxyWorkerURLs', ({originalUrl, blob}) => {\n      let length = this.cryptoWorkersURLs.length;\n      if(!length) {\n        this.cryptoWorkersURLs.push(originalUrl);\n        ++length;\n      }\n\n      const maxLength = App.cryptoWorkers;\n      if(length === maxLength) {\n        return this.cryptoWorkersURLs;\n      }\n\n      const newURLs = new Array(maxLength - length).fill(undefined).map(() => URL.createObjectURL(blob));\n      this.cryptoWorkersURLs.push(...newURLs);\n      return this.cryptoWorkersURLs;\n    });\n  }\n\n  private async createManagers() {\n    const appStoragesManager = new AppStoragesManager();\n\n    await Promise.all([\n      // new Promise(() => {}),\n      appStoragesManager.loadStorages(),\n      this.cryptoPortPromise\n    ]);\n\n    const managers = await createManagers(appStoragesManager, appStateManager.userId);\n    return this.managers = managers; // have to overwrite cached promise\n  }\n\n  public getManagers() {\n    return this.managers ??= this.createManagers();\n  }\n\n  public get isServiceWorkerOnline() {\n    return this._isServiceWorkerOnline;\n  }\n\n  public set isServiceWorkerOnline(value) {\n    this._isServiceWorkerOnline = CAN_USE_SERVICE_WORKER ? value : false;\n  }\n\n  public getServiceMessagePort() {\n    return this._isServiceWorkerOnline ? this.serviceMessagePort : undefined;\n  }\n\n  public onServiceWorkerPort(event: MessageEvent<any>) {\n    if(this.serviceMessagePort) {\n      this.serviceMessagePort.detachPort(this._serviceMessagePort);\n      this._serviceMessagePort = undefined;\n    } else {\n      this.serviceMessagePort = new ServiceMessagePort();\n      this.serviceMessagePort.addMultipleEventsListeners({\n        requestFilePart: (payload) => {\n          return callbackify(appManagersManager.getManagers(), (managers) => {\n            const {docId, dcId, offset, limit} = payload;\n            return managers.appDocsManager.requestDocPart(docId, dcId, offset, limit);\n          });\n        }\n      });\n    }\n\n    // * port can be undefined in the future\n    if(this._serviceMessagePort = event.ports[0]) {\n      this.serviceMessagePort.attachPort(this._serviceMessagePort);\n    }\n  }\n}\n\nconst appManagersManager = new AppManagersManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appManagersManager = appManagersManager);\nexport default appManagersManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type SuperMessagePort from '../lib/mtproto/superMessagePort';\nimport ctx from '../environment/ctx';\n\nexport default function listenMessagePort(\n  messagePort: SuperMessagePort<any, any, any>,\n  onConnect?: (source: MessageEventSource) => void,\n  onDisconnect?: (source: MessageEventSource) => void\n) {\n  const attachPort = (listenPort: any, sendPort: any) => {\n    messagePort.attachListenPort(listenPort);\n    sendPort && messagePort.attachSendPort(sendPort);\n    onConnect?.(listenPort);\n  };\n\n  messagePort.setOnPortDisconnect(onDisconnect);\n\n  if(typeof(SharedWorkerGlobalScope) !== 'undefined') {\n    (ctx as any as SharedWorkerGlobalScope).addEventListener('connect', (e) => attachPort(e.source, e.source));\n  } else if(typeof(ServiceWorkerGlobalScope) !== 'undefined') {\n    attachPort(ctx, null);\n  } else {\n    attachPort(ctx, ctx);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// just to include\nimport '../polyfill';\nimport '../../helpers/peerIdPolyfill';\n\nimport cryptoWorker from '../crypto/cryptoMessagePort';\nimport {setEnvironment} from '../../environment/utils';\nimport appStateManager from '../appManagers/appStateManager';\nimport transportController from './transports/controller';\nimport MTProtoMessagePort from './mtprotoMessagePort';\nimport RESET_STORAGES_PROMISE from '../appManagers/utils/storages/resetStoragesPromise';\nimport appManagersManager from '../appManagers/appManagersManager';\nimport listenMessagePort from '../../helpers/listenMessagePort';\nimport {logger} from '../logger';\nimport {State} from '../../config/state';\nimport toggleStorages from '../../helpers/toggleStorages';\nimport appTabsManager from '../appManagers/appTabsManager';\nimport callbackify from '../../helpers/callbackify';\n\nconst log = logger('MTPROTO');\n// let haveState = false;\n\nconst port = new MTProtoMessagePort<false>();\nport.addMultipleEventsListeners({\n  environment: (environment) => {\n    setEnvironment(environment);\n\n    transportController.waitForWebSocket();\n  },\n\n  crypto: ({method, args}) => {\n    return cryptoWorker.invokeCrypto(method as any, ...args as any);\n  },\n\n  state: ({state, resetStorages, pushedKeys, newVersion, oldVersion, userId}) => {\n    // if(haveState) {\n    //   return;\n    // }\n\n    log('got state', state, pushedKeys);\n\n    appStateManager.userId = userId;\n    appStateManager.newVersion = newVersion;\n    appStateManager.oldVersion = oldVersion;\n\n    RESET_STORAGES_PROMISE.resolve({\n      storages: resetStorages,\n      callback: () => {\n        (Object.keys(state) as any as (keyof State)[]).forEach((key) => {\n          appStateManager.pushToState(key, state[key], true, !pushedKeys.includes(key));\n        });\n      }\n    });\n    // haveState = true;\n  },\n\n  toggleStorages: ({enabled, clearWrite}) => {\n    return toggleStorages(enabled, clearWrite);\n  },\n\n  event: (payload, source) => {\n    log('will redirect event', payload, source);\n    port.invokeExceptSource('event', payload, source);\n  },\n\n  serviceWorkerOnline: (online) => {\n    appManagersManager.isServiceWorkerOnline = online;\n  },\n\n  serviceWorkerPort: (payload, source, event) => {\n    appManagersManager.onServiceWorkerPort(event);\n  },\n\n  createObjectURL: (blob) => {\n    return URL.createObjectURL(blob);\n  }\n\n  // socketProxy: (task) => {\n  //   const socketTask = task.payload;\n  //   const id = socketTask.id;\n\n  //   const socketProxied = socketsProxied.get(id);\n  //   if(socketTask.type === 'message') {\n  //     socketProxied.dispatchEvent('message', socketTask.payload);\n  //   } else if(socketTask.type === 'open') {\n  //     socketProxied.dispatchEvent('open');\n  //   } else if(socketTask.type === 'close') {\n  //     socketProxied.dispatchEvent('close');\n  //     socketsProxied.delete(id);\n  //   }\n  // },\n});\n\nlog('MTProto start');\n\nappManagersManager.start();\nappManagersManager.getManagers();\nappTabsManager.start();\n\nlet isFirst = true;\n// let sentHello = false;\nlistenMessagePort(port, (source) => {\n  appTabsManager.addTab(source);\n  if(isFirst) {\n    isFirst = false;\n  } else {\n    callbackify(appManagersManager.getManagers(), (managers) => {\n      managers.thumbsStorage.mirrorAll(source);\n      managers.appPeersManager.mirrorAllPeers(source);\n      managers.appMessagesManager.mirrorAllMessages(source);\n    });\n  }\n\n  // port.invokeVoid('hello', undefined, source);\n  // if(!sentHello) {\n  //   port.invokeVoid('hello', undefined, source);\n  //   sentHello = true;\n  // }\n}, (source) => {\n  appTabsManager.deleteTab(source);\n});\n"],"names":["bufferConcats","args","length","acc","v","tmp","lastLength","b","fn","onFinally","callback","result","reason","isAnyChat","peerId","isUser","isChat","value","newMethod","originMethod","Modes","DEBUG","ctx","MOUNT_CLASS_TO","tabId","indexOfAndSplice","array","item","idx","IS_SERVICE_WORKER","IS_WEB_WORKER","IS_WORKER","getWindowClients","postMessage","listener","err","notifyServiceWorker","all","listeners","notifyWorker","noop","findAndSplice","verify","index","EventListenerBase","reuseResults","name","options","_a","obj","i","l","error","collectResults","arr","CACHED_ERRORS","makeError","type","USER_AGENT","IS_SAFARI","IS_FIREFOX","_logTimer","dT","LogTypes","LOG_LEVELS","IS_WEBKIT","STYLES_SUPPORTED","LOGGER_STYLES","methods","logger","prefix","ignoreDebugReset","style","originalPrefix","originalStyle","log","method","logType","newPrefix","level","_type","USE_LOCKS","SuperMessagePort","logSuffix","event","task","source","taskId","deferred","payload","previousResolve","ret","resolve","reject","pingResolve","newEvent","id","innerTask","resultTaskPayload","resultTask","ackTask","isPromise","cached","port","promise","lock","portTasks","tasks","batchTask","ports","transfer","withAck","_void","interval","target","CryptoMessagePort","sendPortIndex","cryptoMessagePort","environment","getEnvironment","setEnvironment","env","NULL_PEER_ID","REPLIES_PEER_ID","REPLIES_HIDDEN_CHANNEL_ID","SERVICE_PEER_ID","MUTE_UNTIL","MAX_FILE_SAVE_SIZE","THUMB_TYPE_FULL","ATTACH_MENU_BOT_ICON_NAME","MESSAGE_ID_OFFSET","GENERAL_TOPIC_ID","T_ME_PREFIXES","FOLDER_ID_ALL","FOLDER_ID_ARCHIVE","REAL_FOLDERS","START_LOCAL_ID","MTProtoMessagePort","RootScope","isNew","isPremium","status","settings","rootScope","deferredHelper","deferredPromise","_resolve","_reject","throttle","ms","shouldRunFirst","isPending","clear","_args","safeAssign","object","fromObject","_IDB","db","createNew","createIndexes","os","store","indexNames","indexName","createObjectStore","request","finished","calledNew","e","transaction","instance","preserve","storage","IDB","IDBStorage","storeName","entryName","isArray","objectStore","promises","mode","perf","onError","timeout","onComplete","results","requests","r","waitForTransactionComplete","callbackResult","left","onRequestFinished","THROTTLE_TIME","_AppStorage","set","keys","values","key","useCache","p","onlyLocal","canUseStorage","saveLocal","enabled","clearWrite","names","AppStorage","DATABASE_STATE","StateStorage","stateStorage","DEEP_PATH_JOINER","joinDeepPath","setDeepProperty","deleteIfUndefined","splitted","lastObject","part","lastKey","AppStateManager","first","direct","appStateManager","MAIN_DOMAINS","threads","App","pause","HTTP","dcId","url","logTypes","body","response","buffer","connected","transportController","pending","Socket","randomize","Obfuscation","data","operation","codec","initPayload","val","val2","reversedPayload","encKey","encIv","decKey","decIv","idPromise","encrypted","AbridgedPacketCodec","len","header","abridgedPacketCodec","ConnectionStatus","ConnectionStatus2","bytesToHex","bytes","TcpObfuscated","Connection","retryTimeout","needTimeout","retryAt","time","diff","connection","enable","toEncode","encoded","sent","bodySent","TEST_SUFFIX","PREMIUM_SUFFIX","RETRY_TIMEOUT_CLIENT","RETRY_TIMEOUT_DOWNLOAD","getTelegramConnectionSuffix","connectionType","constructTelegramWebSocketUrl","premium","suffix","path","DcConfigurator","chosenServer","oooohLetMeLive","subdomain","transportType","reuse","servers","transports","transport","MTTransportController","opened","dcConfigurator","httpPromise","websocketPromise","socket","isHttpAvailable","isWebSocketAvailable","https","websocket","transportController$1","RESET_STORAGES_PROMISE","ServiceMessagePort","callbackify","smth","AppManager","managers","createStorages","storages","recordPromise","description","recordPromiseBound","loadStoragesInner","storagesKeys","storagesPromises","storagesResults","resetStorages","clearPromises","loadStorages","AppStoragesManager","PasswordManager","state","currentHashPromise","newHashPromise","params","newAlgo","salt1","hashes","password","inputCheckPassword","auth","code","deepEqual","x","y","ignoreKeys","ignoreSet","okok","ok","tx","ReferenceDatabase","reference","context","contexts","_context","c","hex","newHex","newContext","tsNow","seconds","t","LatinizeMap","badCharsRe","trimRe","C2L","clearBadCharsAndTrim","text","fixCyrillic","ch","latinizeString","cleanSearchText","latinize","processSearchText","hasTag","originalText","flatten","SearchIndex","searchText","query","queryWords","word","newFoundObjs","fullTexts","queryWordsLength","fullText","what","found","foundChars","isLastWord","fullTextLength","a","o","compareLong","str1","str2","str1Length","maxPartLength","v1","v2","compareValue","val1","SliceEnd","SlicedArray","slicedArray","side","isEnd","slice","start","deleteCount","items","slices","lowerBound","upperBound","foundSlice","lowerIndex","upperIndex","foundSliceIndex","sliced","insertIndex","s","prevSlice","nextSlice","maxId","offset","offsetId","addOffset","limit","sliceOffset","pos","sliceStart","sliceEnd","topWasMeantToLoad","bottomWasMeantToLoad","topFulfilled","bottomFulfilled","serialized","json","parsed","inserted","forEachReverse","insertInDescendSortedArray","element","getProperty","property","sortProperty","prev","next","safeReplaceObject","wasObject","newObject","clearMessageId","messageId","toServer","getServerMessageId","getDialogIndexKey","localId","isObject","getDialogIndex","dialog","indexKey","getPeerId","userId","chatId","peerParams","getPeerIdsFromMessage","message","peerIds","media","contactUserId","recentVoters","peer","recentReactions","reaction","action","userIds","chatIds","recentRepliers","reply","defineNotNumerableProperties","props","out","setDialogIndex","GLOBAL_FOLDER_ID","DialogsStorage","init","folderId","update","folderPeer","folder_id","channelId","topicId","topic","dialogsResult","d","filterId","order","pinned","onFilterUpdate","filter","dialogs","chat","_order","peerText","loaded","isForum","orders","isPinned","offsetDate","folder","forumTopic","skipMigrated","currentPeerId","nextIndex","arrays","isTopic","isRealFolder","pinnedIds","pinnedKey","pinnedIndex","folders","skipped","date","noIndex","filters","cmp","wasIndex","wasDialog","wasDialogIndex","newDialogIndex","toggle","callbacks","wasUnreadCount","wasUnmuted","addMessagesCount","newUnreadCount","newUnmuted","toggleDialog","toggleUnmuted","forumUnreadCount","count","hasUnmuted","_folder","justReturn","noPinnedOrderUpdate","topDate","channel","dialogKey","pts","historyStorage","messagesStorage","history","incomingMessage","mid","newPts","ignoreOffsetDate","saveGlobalOffset","savedGlobalOffsetDate","savedOffsetDate","foundDialog","wasPinned","keepLocal","dropped","updatedDialogs","getUpdateCache","cache","topMid","topPendingMid","topPendingMessage","topMessage","updates","slicedUpdates","isDialog","migratedToPeer","wasDialogBefore","isOut","releaseUnreadCount","oldTopic","threadId","isIconChanged","isTitleChanged","isChanged","offsetIndex","fillContactsResult","reloadMissingDialogsPromise","realFolderId","curDialogStorage","d1","d2","loadedAll","isEnoughDialogs","forumTopics","ids","fullfillLeft","messagesForumTopics","f","newPinned","copy","el","clonedObj","prop","convertment","PREPENDED_FILTERS","LOCAL_FILTER","FiltersStorage","oldFilters","_filterId","allChatsFilter","archiveFilter","allChatsFilterIndex","pFlags","prepend","remove","peers","reloadDialogs","inputPeer","isAlreadyReloaded","reloadPromises","missingPeerIds","overwrite","silent","from","to","arrayFrom","oldFilter","_filter","exportedChatlistInvite","slug","title","exportedInvites","chatlistInvite","chatlistUpdates","filterUnique","originalString","ALPHA_CHARS_REG_EXP","ALPHA_NUMERIC_REG_EXP","DOMAIN_ADD_CHARS","URL_ALPHANUMERIC_REG_EXP_PART","URL_PROTOCOL_REG_EXP_PART","URL_REG_EXP","USERNAME_REG_EXP","TIMESTAMP_REG_EXP","BOT_COMMAND_REG_EXP","FULL_REG_EXP","emojiRegExp","EMAIL_REG_EXP","MARKDOWN_REG_EXP","MARKDOWN_ENTITIES","PASS_CONFLICTING_ENTITIES","PASS_SINGLE_CONFLICTING_ENTITIES","PHONE_NUMBER_REG_EXP","CAN_COMBINE_ENTITIES","combineSameEntities","entities","entity","nextEntityIdx","_i","nextEntity","SINGLE_ENTITIES","findConflictingEntity","currentEntities","newEntity","singleEnd","currentEntity","sortEntities","mergeEntities","newEntities","filtered","parseMarkdown","raw","noTrim","pushedEntity","pushEntity","newTextParts","rawOffset","match","matchIndex","isSOH","newText","applyMixins","derivedCtor","constructors","baseCtor","SYNC_DELAY","ApiUpdatesManager","updateMessage","processOpts","fromId","toId","self","us","nextSeq","pendingUpdatesData","curState","curPts","goodPts","goodIndex","updatesState","wasSyncing","differenceResult","apiMessage","nextState","channelState","pts_count","toPeerId","fwdHeader","popPts","popSeq","seq","seqStart","subscription","cb","force","langCode","newVersion","stateResult","strs","getChangelog","lang","res","langStr","languages","language","AppAvatarsManager","size","saved","photo","peerPhotoFileLocation","downloadOptions","blob","nextRandomUint","bits","randomLong","AppCallsManager","g_b","call","isDiscarded","oldCall","callId","phonePhoneCall","dhConfig","protocol","g_a_hash","video","duration","hasRights","rights","isThread","isCheckingRightsForSelf","myFlags","isAdmin","getParticipantPeerId","participant","getPeerActiveUsernames","usernames","username","AppChatsManager","forceInvalidation","chats","apiChats","override","oldChat","changedUsername","oldPhotoId","newPhotoId","toggledForum","changedPhoto","changedTitle","changedAnyBadge","changedParticipation","storiesCallback","banned_rights","good","allowMin","input","usersInputs","u","timestamp","fwdLimit","doNotRefresh","hidden","rank","wasChannel","inputFile","inputChatPhoto","about","bool","prevParticipant","newParticipant","bannedRights","messagesChats","reactions","chatFull","sendAsPeers","hash","sponsoredMessages","sponsoredMessage","randomId","chatInvite","iconEmojiId","closed","iconColor","channelFull","sendAsInputPeer","groupId","newOrWasGroupId","groupChannelFull","approved","capitalizeFirstLetter","string","SKIP_PROTOCOLS","matchUrlProtocol","wrapUrl","unsafe","tgMeMatch","tgMatch","onclick","fullPath","setDirection","elem","I18n","pluralRules","cacheLangPackPromise","setRTL","rtl","setLangCode","getCacheLangPack","langPack","applyLangPack","loadLocalLangPack","updateAmPm","dateTimeFormat","getDateTimeFormat","amText","pmText","setTimeFormat","format","haveToUpdate","cachedDateTimeFormats","IntlDateElement","defaultCode","langSign","countries","strings","formatLocalStrings","saveLangPack","loadLangPack","web","getStrings","pushTo","getLangPack","langPack1","langPack2","localLangPack1","localLangPack2","_","_Intl","currentLangCode","country","langPackKey","pushNextArgument","indexHolder","arg","superFormatter","regExp","lastIndex","p1","p2","p3","p4","wrappedUrl","formatted","plain","str","IntlElementBase","IntlElement","hours","i18n","i18n_","_i18n","I18n$1","months","days","monthsLocalized","daysLocalized","ONE_DAY","getWeekNumber","dayNum","yearStart","formatDateAccordingToTodayNew","today","now","getFullDate","joiner","fullYear","minYear","yearPattern","anyLetterRegExp","monthPattern","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","fillTipDates","dates","q","haystack","year","month","day","minDate","maxDate","dayOfWeek","getDayOfWeek","currentDay","distance","formatWeekLong","matches","g1","g2","k","k1","selectedYear","createForMonthYear","createForDayMonth","g3","currentYear","validDateForMonth","formatterYearMax","getMonth","formatterMonthYear","isLeapYear","formatterDayMonth","safeReplaceArrayInObject","spoiler","chars","charsLength","char","encodeSpoiler","before","spoilerBefore","spoilerAfter","after","wrapPlainText","getDocumentInputFileLocation","doc","thumbSize","FILENAME_JOINER","getFileNameByLocation","location","fileName","ext","geoPoint","getFileURL","getDocumentDownloadOptions","thumb","queueId","onlyCache","inputFileLocation","mimeType","getDocumentURL","download","EXTENSION_MIME_TYPE_MAP","MIME_TYPE_EXTENSION_MAP","uploadWallPaperTempId","AppDocsManager","online","oldDoc","attribute","mappedMimeType","appManagersManager","docId","file","document","cacheContext","wallpaper","wallPaper","repliesAreEqual","reply1","reply2","draftsAreEqual","draft1","draft2","AppDraftsManager","drafts","apiDraft","notify","draft","replyTo","localDraft","saveOnServer","serverDraft","draftObj","inputReplyTo","saveLocalDraft","combined","emptyDraft","validateInitObject","initObject","currentObject","onReplace","previousKey","ignorePaths","_path","fixEmoji","end","EMOJI_LANG_PACK","RECENT_MAX_LENGTH","_AppEmojiManager","storageKey","pack","keywordsDifference","packKeywords","keywords","keyword","emoticons","emojis","recent","recentEmoji","recentCustomEmoji","emoji","docIds","documents","allIds","docs","AppEmojiManager","GET_PARTICIPANTS_LIMIT","AppGroupCallsManager","groupCallId","groupCall","participants","nextOffsetsMap","setNextOffset","newNextOffset","nextOffset","skipCounterUpdating","oldParticipant","hasLeft","modified","apiParticipants","shouldUpdate","scheduleDate","groupCallParticipants","discard","groupCallInput","getPhotoInput","getPhotoMediaInput","generateQId","queryId","resultId","getMediaInput","AppInlineBotsManager","geo","botId","botResults","topPeers","botPeerId","topPeer","fromPeerId","startParam","bot","peerData","button","queryAndResultIds","inlineResult","inputMedia","messageMedia","sendMessage","getDocumentMediaInput","webDocument","isLegacyMessageId","AppMessagesIdsManager","increment","mids","_channelId","prevItem","PARALLEL_LIMIT","IGNORE_ERRORS","LazyLoadQueueBase","parallelLimit","createDetails","MIDDLEWARE_ERROR","MiddlewareHelper","details","helper","additionalCallback","middleware","getMiddleware","getObjectKeysAndSort","sort","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","delimiter","cut","_arrayIndex","overflowPart","partLength","debounce","shouldRunLast","waitingTimeout","waitingPromise","hadNewCall","invoke","_waitingTimeout","matchUrl","filterMessagesByInputFilter","inputFilter","foundMsgs","filtering","neededContents","neededDocTypes","excludeDocTypes","goodEntities","uploadId","getFileNameForUpload","AppTabsManager","tab","appTabsManager","getAlbumText","messages","foundMessages","m","getStickerEffectThumb","getDocumentInput","availableReactionToReaction","availableReaction","reactionsEqual","r1","r2","setBooleanFlag","getMessageThreadId","getInputReplyTo","replyToMsgId","TLD","checkBrackets","urlLength","urlOpenBrackets","urlCloseBrackets","EmojiVersions","Emoji","version","encodeEmoji","emojiText","toCodePoints","removeVS16s","vs16RegExp","zeroWidthJoiner","rawEmoji","unicodeSurrogates","points","previous","getEmojiUnified","emojiCode","unified","parseEntities","tld","balanced","splittedLength","minutes","wrapMessageEntities","myEntities","totalEntities","GLOBAL_HISTORY_PEER_ID","processAfter","AppMessagesManager","newMaxSeenId","updateMap","processDialog","isDialogDefined","topics","notifyPeerToHandle","muted","peerTypeNotifySettings","pendingData","isLocalThreadUpdate","threadKey","threadStorage","ignoreExisting","firstSlice","inboxUnread","notifyPeer","msg_id","recentReaction","previousRecentReactions","oldMessage","newMessage","isTopMessage","dispatchEditEvent","newReactions","map","stillUnreadCount","newUnreadMentionsCount","foundAffected","repliesKey","readMaxId","messageThreadId","setCount","threadKeyPart","topMsgId","availableMinId","threadKeys","historyUpdated","threadsStorages","affected","needDialog","canViewHistory","hasHistory","views","missingMessages","werePinned","notify_settings","batch","toDispatch","previousReactions","previousResults","changedResults","reactionCount","previousReactionCount","_reactionCount","filterFunc","msgs","isScheduled","drop","poll","sendEntites","tempId","callbackName","finalize","webPageSend","schedule_date","process","MAX_LENGTH","isChannel","toggleError","sentRequestOptions","sendAs","apiPromise","commonOptions","attachType","apiFileName","fileType","isDocument","caption","attributes","isPhoto","strippedPhotoSize","actionName","photoSize","videoAttribute","thumbs","sentDeferred","uploadingFileName","uploaded","uploadPromise","load","progress","percents","thumbUploadPromise","messagePromise","sendEntities","multiMedia","originalInputMedia","inputSingleMedia","inputs","contactPeerId","noOutgoingMessage","pollId","postAuthor","isBroadcast","user","replyToTopId","originalMessage","replies","myId","isUserHidden","userFull","uploadFileName","chatHistoryStorage","offsetPeerId","useLimit","processResult","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","folderDialogs","dialogsLength","slicedDialogs","config","overflowMids","groups","newMids","newMessages","flags","replyToMid","replyToMessageIdx","newReplyToMid","group","mirror","globalStorage","cantForward","cantDelete","useThrottled","reloadConversationsPeers","inputDialogPeers","currentState","just_clear","revoke","participantPeerId","affectedHistory","deletedMids","justClear","historyResult","needSingleMessages","ss","_b","unpin","pm_oneside","grouped_id","minMid","groupedId","tempMid","isMessage","replyToChannelId","overwriting","msgId","savedFromPeerId","savedFromMid","mediaContext","unsupported","migrateFrom","migrateTo","originalDoc","messageKey","extendedMedia","extendedMediaMedia","goodMessage","myPeerId","_message","max","read","unread","fromChat","kind","goodMedias","messageReplyMarkup","lastReplyMarkup","canCache","migration","func","legacyResult","searchCounters","legacySearchCounters","searchCounter","_storage","maxMessageId","serviceStartMessage","newMaxId","isRecursion","serverMessageIds","affectedMessages","add","isTopEnd","loadNextPromise","last","backLimit","add_offset","minId","messagesMessages","msgIds","_c","readOutboxMaxId","maxOutId","replyMarkup","inputNotifyPeer","threadMessage","broadcastEventName","pendingMessage","muteUntil","mute","finalMessage","tempMessage","newPhoto","newDoc","newPhotoSize","oldCacheContext","skipReadParticipants","skipReactionsList","emptyMessageReactionsList","canViewMessageReadParticipants","readParticipantDates","messageReactionsList","filteredReadParticipants","user_id","readParticipantDate","appConfig","tabs","chatPeerIds","haveSlice","offset_id_offset","offsetIdOffset","isBottomEnd","topLoaded","bottomLoaded","isOffsetIncluded","serverOffsetId","recursion","wasMaxId","requestPeerId","isRequestingLegacy","mergedResult","firstMessage","lastMessage","toLoad","migratedResult","migratedResultCount","nextRate","offsetMessage","searchOptions","searchGlobalOptions","getRepliesOptions","getHistoryOptions","requestPromises","getMessagesResult","toRequest","story","replyToPeerId","typing","groupedStorage","unreadCount","getElementCallback","newMap","peerIdStr","sendAsPeerId","buttonId","requestedPeerId","convertInputKeyToKey","inputKey","AppNotificationsManager","closestMuteUntil","peerNotifySettings","typeKey","isPeerType","notifySettings","respectType","n","peerKey","inputNotify","typeNotifySettings","local","inputPeerNotifySettings","platforms","ignore","getRestrictionReason","reasons","isRestricted","ignoreRestrictionReasons","isPeerRestricted","restrictionReasons","getPeerPhoto","AppPeersManager","migratedTo","ignorePeerId","AppPhotosManager","oldPhoto","inputUser","photosResult","photoIds","photoId","AppPollsManager","answer","correctAnswers","solution","solutionEntities","optionIds","option","votesList","newPoll","AppPrivacyManager","rules","privacyRules","inputRule","rule","privacyKey","PEER_FULL_TTL","AppProfileManager","_participants","typings","cancelAction","hasUser","fullChat","updated","hasChatPhoto","hasFullChatPhoto","usersUserFull","botInfo","referenceContext","profile","exportedInvite","chatParticipant","chatParticipants","MANUALLY_FILTER","channelParticipant","fullChannel","global","processUserIds","ratingMap","cP","botsInlineTopPeers","chatMembers","searchResults","convertPeerIds","first_name","last_name","updateResult","strippedThumb","deletedList","chatInfo","channelParticipants","peerSettings","messagesPeerSettings","callbackifyAll","SAVE_DOC_KEYS","REFERENCE_CONTEXT","AppReactionsManager","availableReactions","messagesAvailableReactions","unshiftQuickReaction","activeAvailableReactions","topReactions","quickReaction","chatAvailableReactions","filteredChatReactions","filteredChatAvailableReactions","indexes","messagesReactions","peerAvailableReactions","lastSendingTimeKey","myPeer","unsetReactionCount","canSeeList","chosenReactions","unsetReactions","chosenReactionIdx","chosenReactionCount","chosenReactionsLength","reactionCountIdx","peerReaction","id1","id2","promiseKey","editMessageUpdateIdx","editMessageUpdate","messagesStickerSet","fixBase64String","toUrl","CACHE_TIME","LOCAL_IDS","LOCAL_IDS_SET","AppStickersManager","allStickers","stickerSet","stickers","justPreload","cachedSet","saveById","animations","sound","bytesStr","unsave","attached","_doc","docEmoticon","emoticon","isAnimation","preloadEmojiPromise","isPremiumEffect","newSet","needSave","isAnimated","covered","favedStickers","unfave","sets","excludeFeatured","foundSaved","includeOurStickers","includeServerStickers","excludePremiumEffectStickers","cacheKey","messagesStickers","installedSets","recentStickers","foundStickers","sticker","cachedStickersAnimated","cachedStickersStatic","iteratePacks","packs","masks","cleanUsername","canSendToUser","SEARCH_OPTIONS","AppUsersManager","timestampNow","users","recentSearch","fromServer","contact","resolvedPeer","phone","includeSaved","sortBy","contactListPromise","_contactsList","contactsList","userId1","userId2","sortName1","sortName2","status1","rating1","myUserId","block","blockMyStoriesFrom","apiUsers","save","cleanedUsernames","searchUsername","oldPeer","oldUser","fullName","changedPremium","wasContact","newContact","expires","eventTimestamp","onlineTimeFor","contacts","inputContacts","j","importedContactsResult","importedContact","contactsBlocked","lat","long","accuracy_radius","background","self_expires","geo_point","isContact","curIsContact","offline","addPhonePrivacyException","photoTypeSet","AppWebPagesManager","apiWebPage","oldWebPage","isUpdated","siteName","shortTitle","pendingSet","webPage","messagesWebPage","blobSafeMimeType","blobConstruct","blobParts","safeMimeType","MemoryWriter","saveFileCallback","endOffset","newBytes","saveToStorage","parts","_CacheStorageController","dbName","rejected","fileSize","CacheStorageController","readBlobAs","reader","readBlobAsArrayBuffer","fixFirefoxSvg","svgIndex","__","width","height","getPhotoDownloadOptions","getWebFileDownloadOptions","getWebDocumentDownloadOptions","isWebDocument","isWebFileLocation","getDownloadFileNameFromOptions","getDownloadMediaDetails","readBlobAsUint8Array","fileNameRFC","DownloadWriter","serviceMessagePort","downloadId","DownloadStorage","headers","MAX_DOWNLOAD_FILE_PART_SIZE","MAX_UPLOAD_FILE_PART_SIZE","MIN_PART_SIZE","AVG_PART_SIZE","REGULAR_DOWNLOAD_DELTA","PREMIUM_DOWNLOAD_DELTA","ApiFileManager","activeDelta","downloadPull","downloadLimit","canceled","checkCancel","arrayBuffer","extension","isUpload","maxParts","maxPartSize","startOffset","limitPart","delayed","writePromise","writeDeferred","originalMimeType","convertMethod","cacheFileName","cacheStorage","downloadStorage","errorHandler","prepared","isWebFile","isLocalWebFile","getFile","cachePrepared","downloadPrepared","possibleSize","getErrorsCount","attach","_errorHandler","downloadFileName","writer","maxRequests","requestPart","dispatchProgress","done","throttledDispatchProgress","superpuper","requestPerf","requestTime","byteLength","isFinal","writeQueuePerf","writeQueueTime","processedResult","isBigFile","partSize","totalParts","fileId","resultInputFile","resolved","generator","_part","doneParts","it","LocalStorage","stringified","_LocalStorageController","LocalStorageController","sessionStorage","bytesFromHex","hexString","ApiManagerMethods","queryJSON","newResult","processError","oldPromise","getNewPromise","helpAppConfig","toggleStorages","PREMIUM_FILE_NETWORKERS_COUNT","REGULAR_FILE_NETWORKERS_COUNT","ApiManager","REFRESH_APP_CONFIG_INTERVAL","networker","connections","dcs","oldTransportType","oldObject","oldGetKey","newGetKey","info","baseDcId","userAuth","wasDcId","storageKeys","storageResult","logoutPromises","networkers","maxNetworkers","getKey","ak","authKeyHex","serverSaltHex","authKey","authKeyId","CryptoWorker","serverSalt","_error","newTransportType","oldTransport","canRelease","afterMessageId","prepareTempMessageId","startTime","cachedNetworker","rejectPromise","stack","performRequest","exportResolve","exportReject","exportedAuth","newDcId","waitTime","PeersStorage","generateEmptyThumb","getStickerThumbKey","toneIndex","getThumbKey","thumbFullSize","ThumbsStorage","downloaded","Schema","exports","this","h","w","g","E","R","A","Z","S","T","O","U","D","I","B","N","C","z","F","L","M","H","K","P","Y","G","X","W","J","Q","V","$","ee","te","ie","ne","ae","re","oe","se","le","de","fe","ce","he","ue","we","be","me","ke","_e","ge","gzipUncompress","toString","pako","bigInt","undefined","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","Integer","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","sign","SmallInteger","NativeBigInt","isPrecise","arrayToSmall","trim","compareAbs","createArray","truncate","l_a","l_b","carry","base","sum","addAny","addSmall","subtract","a_l","b_l","borrow","difference","subtractAny","subtractSmall","small","multiplyLong","product","a_i","b_j","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","useKaratsuba","l1","l2","abs","multiplySmallAndArray","square","a_j","divMod1","divisorMostSignificantDigit","lambda","remainder","divisor","quotientDigit","shift","divModSmall","divMod2","guess","xlen","highx","highy","check","quotient","divModAny","comparison","qSign","mod","mSign","_0","_1","_2","exp","isBasicPrime","millerRabinTest","nPrev","strict","isPrime","logN","iterations","rng","newT","newR","lastT","lastR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","remQuo","bitwise","xSign","ySign","xRem","yRem","xDigit","yDigit","xDivMod","yDivMod","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","min","gcd","lcm","randBetween","usedRNG","low","high","range","digits","toBase","restricted","top","digit","absBase","alphabetValues","isNegative","parseBaseFromArray","pow","stringify","neg","divmod","toBaseString","zeros","parseStringValue","split","decimalPlace","isValid","parseNumberValue","module","intToUint","ulongFromInts","safeBigInt","ulongBigInt","longBigInt","bigIntFromBytes","bigIntToBytes","bigIntToSigned","bigIntToUnsigned","boolFalse","boolTrue","vector","gzipPacked","sliceMethod","TLSerialization","resultBuffer","resultInt32","typed","resultArray","needBytes","previousBuffer","previousArray","field","iHigh","iLow","sLong","_bigInt","intView","doubleView","sUTF8","methodName","methodData","itemType","schema","predicate","isBare","constructorData","flagsHandler","param","condType","fieldBit","isFlagHandler","paramName","TLDeserialization","ulong","fallback","checkType","constructorCmp","compressed","uncompressed","schemaFallback","int1","int2","overrideKey","isCond","jsonValue","objectValues","objectValue","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","longToBytes","bigIntBytes","bytesCmp","bytes1","bytes2","convertToUint8Array","sortLongsArray","DRAIN_TIMEOUT","delays","RESEND_OPTIONS","invokeAfterMsgConstructor","networkerTempId","MTPNetworker","networkerFactory","timeManager","pingMaxTime","lastPingTime","disconnectDelay","timeoutTime","pingId","rejectTimeout","onResolved","elapsedTime","onTimeout","isClean","serializer","pingMessage","sentMessageId","sentMessage","innerSentMessageId","innerSentMessage","notContentRelated","seqNo","invokeWithLayer","initConnection","maxWait","delay","noResponseMsgs","shouldResolve","sentMessages","isOnline","willChange","innerMsgId","dataWithPadding","msgKeyLargePlain","msgKeyLarge","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","ackMsgIds","pendingResendReqLength","outMessage","messagesByteLen","hasApiCall","hasHttpWait","lengthOverflow","messageByteLength","container","innerMessages","keyIv","encryptedData","dataBuffer","paddingLength","encryptedResult","requestData","baseError","responseBuffer","deserializer","calcMsgKey","sessionId","totalLength","messageBodyLength","messageBody","newServerSalt","nextReq","notEmpty","rawError","msg","serverTime","innerMessage","changedTimeOffset","badMessage","lastResend","pendingResend","badMsgId","NetworkerFactory","stoppedNetworkers","RSAKeysManager","keyParsed","RSAPublicKey","cryptoWorker","fingerprintBytes","fingerprints","fingerprintHex","foundKey","rsaKeysManager","bytesXor","Authorizer","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","publicKey","pAndQ","p_q_inner_data_dc","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","req_DH_params","requestBytes","newNonceHash","encryptedAnswer","answerWithHash","answerWithPadding","dhPrime","gA","dhPrimeHex","gABigInt","dhPrimeBigInt","twoPow","gBytes","gB","authKeyHash","authKeyAux","newNonceHash1","newNonceHash2","newNonceHash3","_try","TimeManager","timeTicks","timeSec","timeMSec","random","localTime","newTimeOffset","changed","AppWebDocsManager","AppPaymentsManager","invoice","paymentForm","formId","requestedInfoId","shippingOptionId","credentials","tipAmount","premiumGiftCodeOptions","helpPremiumPromo","getAttachMenuBotIcon","attachMenuBot","icon","BOTS_SUPPORTED","AppAttachMenuBotsManager","attachMenuBots","attachMenuBotsBot","fromBotMenu","fromSwitchWebView","fromSideMenu","themeParams","isSimpleWebView","app","writeAllowed","platform","buttonText","shortName","customMethod","AppSeamlessLoginManager","urlAuthResult","webAuthorizations","AppThemesManager","inputWallPaper","accountThemes","theme","themeSettings","accountWallpapers","wallPapers","AppUsernamesManager","active","AppChatInvitesManager","expireDate","usageLimit","requestNeeded","revoked","adminId","chatInvites","link","chatAdminsWithInvites","offsetUserId","requested","offsetUser","chatInviteImporters","StoriesCacheType","insertStory","storyItem","cacheType","storyId","AppStoriesManager","userStories","hadStoryBefore","isSubscribed","hasStories","peerStories","position","lastStoryId","lastStory","unreadType","isMe","isUnread","isChangelog","boolean","previousPosition","previousList","list","create","oldStoryItem","oldIsSkipped","isSkipped","modifiedPinned","modifiedArchive","preserveFlags","storyItems","indexesToDelete","newStoryItems","newPeer","wasStories","newStories","wasStoriesHidden","newStoriesHidden","storiesStories","segments","lastSegment","storiesAllStories","storiesPeerStories","justContacts","storiesStoryViews","newSentReaction","unsetPreviousReaction","ignoreNoSubscription","right","isMyStory","canEdit","canPost","canDelete","storyIds","cantPin","AppBotsManager","AppBoostsManager","createManagers","appStoragesManager","manager","CAN_USE_SERVICE_WORKER","AppManagersManager","originalUrl","newURLs","appManagersManager$1","listenMessagePort","messagePort","onConnect","onDisconnect","attachPort","listenPort","sendPort","pushedKeys","oldVersion","isFirst"],"mappings":"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Ac,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAckBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,MAAO,kBAAkB,MAAO,QAAQ,MAAO,kBAAkB,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,wCAAwC,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,GAAI,QAAQ,IAAK,QAAQ,IAAK,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkiBAAiB,KAAM,iBAAiB,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aA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","x_google_ignoreList":[200,202]}
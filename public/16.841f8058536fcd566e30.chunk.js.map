{"version":3,"sources":["webpack:///./src/components/monkeys/tracking.ts","webpack:///./src/components/codeInputField.ts","webpack:///./src/components/appSearch.ts","webpack:///./src/components/inputSearch.ts","webpack:///./src/helpers/listenerSetter.ts","webpack:///./src/components/buttonIcon.ts","webpack:///./src/components/sliderTab.ts","webpack:///./src/components/slider.ts","webpack:///./src/components/avatarEdit.ts","webpack:///./src/components/buttonCorner.ts","webpack:///./src/components/sidebarLeft/tabs/newGroup.ts","webpack:///./src/components/appMediaPlaybackController.ts","webpack:///./src/helpers/dom/attachGrabListeners.ts","webpack:///./src/components/rangeSelector.ts","webpack:///./src/lib/mediaPlayer.ts","webpack:///./src/components/audio.ts","webpack:///./src/components/divAndCaption.ts","webpack:///./src/components/chat/replyContainer.ts","webpack:///./src/components/groupedLayout.ts","webpack:///./src/components/editPeer.ts","webpack:///./src/components/row.ts","webpack:///./src/components/radioForm.ts","webpack:///./src/helpers/clipboard.ts","webpack:///./src/components/radioField.ts","webpack:///./src/components/toast.ts","webpack:///./src/components/usernameInputField.ts","webpack:///./src/components/popups/peer.ts","webpack:///./src/components/sidebarRight/tabs/chatType.ts","webpack:///./src/helpers/listLoader.ts","webpack:///./src/components/appSelectPeers.ts","webpack:///./src/components/popups/pickUser.ts","webpack:///./src/components/sidebarRight/tabs/userPermissions.ts","webpack:///./src/components/sidebarRight/tabs/groupPermissions.ts","webpack:///./src/components/popups/deleteDialog.ts","webpack:///./src/components/sidebarRight/tabs/editChat.ts","webpack:///./src/components/sidebarRight/tabs/editContact.ts","webpack:///./src/components/swipeHandler.ts","webpack:///./src/components/sidebarLeft/tabs/addMembers.ts","webpack:///./src/components/sidebarRight/tabs/sharedMedia.ts","webpack:///./src/components/sidebarRight/index.ts","webpack:///./src/components/sidebarRight/tabs/pollResults.ts","webpack:///./src/components/poll.ts","webpack:///./src/lib/appManagers/appStickersManager.ts","webpack:///./src/components/wrappers.ts","webpack:///./src/helpers/dom/positionElementByIndex.ts","webpack:///./src/components/sortedUserList.ts","webpack:///./src/components/appSearchSuper..ts","webpack:///./src/components/buttonMenu.ts","webpack:///./src/components/buttonMenuToggle.ts","webpack:///./src/lib/appManagers/appPrivacyManager.ts","webpack:///./src/components/privacySection.ts","webpack:///./src/components/sidebarLeft/tabs/privacy/phoneNumber.ts","webpack:///./src/components/sidebarLeft/tabs/2fa/passwordSet.ts","webpack:///./src/helpers/dom/canFocus.ts","webpack:///./src/components/sidebarLeft/tabs/2fa/emailConfirmation.ts","webpack:///./src/components/sidebarLeft/tabs/2fa/email.ts","webpack:///./src/components/sidebarLeft/tabs/2fa/hint.ts","webpack:///./src/components/sidebarLeft/tabs/2fa/reEnterPassword.ts","webpack:///./src/components/sidebarLeft/tabs/2fa/enterPassword.ts","webpack:///./src/components/sidebarLeft/tabs/2fa/index.ts","webpack:///./src/components/sidebarLeft/tabs/privacy/lastSeen.ts","webpack:///./src/components/sidebarLeft/tabs/privacy/profilePhoto.ts","webpack:///./src/components/sidebarLeft/tabs/privacy/forwardMessages.ts","webpack:///./src/components/sidebarLeft/tabs/privacy/addToGroups.ts","webpack:///./src/components/sidebarLeft/tabs/privacy/calls.ts","webpack:///./src/components/sidebarLeft/tabs/activeSessions.ts","webpack:///./src/components/sidebarLeft/tabs/blockedUsers.ts","webpack:///./src/components/sidebarLeft/tabs/privacyAndSecurity.ts","webpack:///./src/helpers/color.ts","webpack:///./src/helpers/highlightningColor.ts","webpack:///./src/components/colorPicker.ts","webpack:///./src/components/sidebarLeft/tabs/backgroundColor.ts","webpack:///./src/components/sidebarLeft/tabs/background.ts","webpack:///./src/helpers/averageColor.ts","webpack:///./src/components/popups/stickers.ts","webpack:///./src/components/sidebarLeft/tabs/generalSettings.ts","webpack:///./src/components/sidebarLeft/tabs/editProfile.ts","webpack:///./src/components/sidebarLeft/tabs/includedChats.ts","webpack:///./src/components/sidebarLeft/tabs/editFolder.ts","webpack:///./src/components/sidebarLeft/tabs/chatFolders.ts","webpack:///./src/components/sidebarLeft/tabs/notifications.ts","webpack:///./src/components/sidebarLeft/tabs/language.ts","webpack:///./src/components/sidebarLeft/tabs/settings.ts","webpack:///./src/components/sidebarLeft/tabs/newChannel.ts","webpack:///./src/components/sidebarLeft/tabs/contacts.ts","webpack:///./src/components/sidebarLeft/tabs/archivedTab.ts","webpack:///./src/components/sidebarLeft/index.ts","webpack:///./src/components/chat/bubbleGroups.ts","webpack:///./src/components/popups/datePicker.ts","webpack:///./src/components/popups/forward.ts","webpack:///./src/components/stickyIntersector.ts","webpack:///./src/components/chat/replies.ts","webpack:///./src/components/chat/messageRender.ts","webpack:///./src/helpers/dom/getElementByPoint.ts","webpack:///./src/helpers/dom/reflowScrollableElement.ts","webpack:///./src/helpers/dom/setInnerHTML.ts","webpack:///./src/components/chat/bubbles.ts","webpack:///./src/components/popups/deleteMessages.ts","webpack:///./src/components/popups/unpinMessage.ts","webpack:///./src/components/popups/sendNow.ts","webpack:///./src/helpers/dom/cancelSelection.ts","webpack:///./src/helpers/dom/isSelectionEmpty.ts","webpack:///./src/components/chat/contextMenu.ts","webpack:///./src/lib/appManagers/appEmojiManager.ts","webpack:///./src/components/emoticonsDropdown/tabs/emoji.ts","webpack:///./src/components/gifsMasonry.ts","webpack:///./src/components/emoticonsDropdown/tabs/gifs.ts","webpack:///./src/components/emoticonsDropdown/tabs/stickers.ts","webpack:///./src/lib/appManagers/appInlineBotsManager.ts","webpack:///./src/components/sidebarRight/tabs/gifs.ts","webpack:///./src/components/sidebarRight/tabs/stickers.ts","webpack:///./src/helpers/dropdownHover.ts","webpack:///./src/components/emoticonsDropdown/index.ts","webpack:///./src/components/chat/sendContextMenu.ts","webpack:///./src/components/popups/createPoll.ts","webpack:///./src/helpers/dom/isSendShortcutPressed.ts","webpack:///./src/helpers/dom/placeCaretAtEnd.ts","webpack:///./src/components/popups/newMedia.ts","webpack:///./src/helpers/dom/attachListNavigation.ts","webpack:///./src/components/chat/autocompleteHelper.ts","webpack:///./src/components/chat/stickersHelper.ts","webpack:///./src/components/popups/schedule.ts","webpack:///./src/helpers/dom/getRichValueWithCaret.ts","webpack:///./src/components/chat/emojiHelper.ts","webpack:///./src/components/chat/autocompletePeerHelper.ts","webpack:///./src/components/chat/commandsHelper.ts","webpack:///./src/components/chat/autocompleteHelperController.ts","webpack:///./src/components/chat/mentionsHelper.ts","webpack:///./src/components/chat/replyKeyboard.ts","webpack:///./src/components/chat/input.ts","webpack:///./src/helpers/dom/setRichFocus.ts","webpack:///./src/components/chat/selection.ts","webpack:///./src/helpers/dom/getSelectedText.ts","webpack:///./src/components/chat/pinnedContainer.ts","webpack:///./src/components/chat/audio.ts","webpack:///./src/components/chat/pinnedMessageBorder.ts","webpack:///./src/components/chat/pinnedMessage.ts","webpack:///./src/helpers/dom/handleScrollSideEvent.ts","webpack:///./src/components/chat/topbar.ts","webpack:///./src/components/sidebarRight/tabs/search.ts","webpack:///./src/components/chat/search.ts","webpack:///./src/components/chat/chat.ts","webpack:///./src/components/chat/markupTooltip.ts","webpack:///./src/helpers/dom/getSelectedNodes.ts","webpack:///./src/helpers/generatePathData.ts","webpack:///./src/components/chat/dragAndDrop.ts","webpack:///./src/helpers/dom/disableTransition.ts","webpack:///./src/components/popups/joinChatInvite.ts","webpack:///./src/lib/appManagers/appImManager.ts","webpack:///./src/components/appMediaViewer.ts","webpack:///./src/helpers/dom/getVisibleRect.ts","webpack:///./src/helpers/fillPropertyValue.ts","webpack:///./src/components/avatar.ts","webpack:///./src/components/dialogsContextMenu.ts","webpack:///./src/lib/mtproto/connectionStatus.ts","webpack:///./src/components/connectionStatus.ts","webpack:///./src/lib/appManagers/appDialogsManager.ts","webpack:///./public/recorder.min.js","webpack:///./src/components/scrollable.ts","webpack:///./src/components/checkboxField.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/dom/findUpTag.ts","webpack:///./src/lib/mtproto/passwordManager.ts","webpack:///./src/lib/filemanager.ts","webpack:///./src/lib/cacheStorage.ts","webpack:///./src/components/passwordInputField.ts","webpack:///./src/components/monkeys/password.ts"],"names":["TrackingMonkey","inputField","size","max","needFrame","this","container","document","createElement","classList","add","input","addEventListener","playAnimation","e","value","length","animation","frame","Math","min","round","idleAnimation","stop","canvas","style","display","direction","setDirection","setSpeed","play","loadPromise","Promise","all","loadAnimationFromURL","loop","autoplay","width","height","then","waitForFirstFrame","_animation","currentFrame","pause","remove","CodeInputField","options","super","plainText","type","setAttribute","autocomplete","lastLength","setLabel","replace","slice","setValueSilently","onFill","name","clearable","className","clickable","autonomous","onFound","list","createChatList","nameEl","append","setListClickListener","undefined","innerHTML","childElementCount","setActive","clear","searchInput","searchGroups","onSearch","minMsgId","loadedCount","foundCount","searchPromise","searchTimeout","query","listsContainer","peerId","threadId","scrollable","i","messages","setVirtualContainer","onChange","reset","searchMore","onScrolledBottom","trim","window","setTimeout","focus","resolve","maxId","getSearch","inputFilter","_","limit","res","count","history","mid","shift","searchGroup","forEach","message","fromId","dialog","dom","addDialogNew","drawStatus","avatarSize","meAsSaved","listEl","dataset","setLastMessage","toggle","replaceContent","catch","err","console","error","placeholder","prevValue","timeout","onInput","clearTimeout","onClearClick","onClear","searchIcon","clearBtn","removeEventListener","ListenerSetter","listeners","Set","element","event","callback","listener","addManual","once","onceCallback","onceFired","delete","_listener","icon","slider","destroyable","_constructor","header","closeBtn","noRipple","title","content","addTab","listenerSetter","closeTab","args","init","result","selectTab","tabs","removeAll","key","eventListener","dispatchEvent","cleanup","onCloseAfterTimeout","historyTabIds","canHideFirst","onCloseBtnClick","appNavigationController","findItemByType","navigationType","back","id","animate","isNavigation","closingId","pop","onCloseTab","tab","_selectTab","Map","tabsContainer","sidebarEl","querySelector","Array","from","querySelectorAll","el","get","onOpen","onOpenAfterTimeout","pushItem","onPop","canAnimate","push","findAndSplice","tabConstructor","preserveTab","removeTabFromHistory","find","t","getTab","removeByType","onClose","parentElement","open","getContext","clearRect","uploadAvatar","setTitle","avatarEdit","_upload","inputWrapper","groupNameInputField","label","maxLength","nextBtn","contains","disabled","createChat","userIds","chatId","inputFile","editPhoto","chatsContainer","userId","rippleEnabled","lastMessageSpan","getUserStatusString","textContent","appMediaPlaybackController","media","waitingMediaForLoad","onPause","rootScope","onEnded","nextMid","currentPeerId","resolveWaitingForLoadMedia","cssText","body","doc","autoload","storage","volume","playingMedia","paused","loadSiblingsMedia","onError","deferred","supportsStreaming","downloadDoc","handleSafariStreamable","cacheContext","appDownloadManager","getCacheContext","src","url","currentTime","duration","promise","safariBuffering","prevMid","backLimit","m","filter","Boolean","getMessageByPeer","addMedia","willBePlayedMedia","attachGrabListeners","onStart","onMove","onEnd","onMouseMove","x","pageX","y","pageY","onMouseUp","onMouseDown","button","onTouchMove","preventDefault","touches","clientX","clientY","isTouch","onTouchEnd","onTouchStart","passive","step","mousedown","events","scrub","rect","getBoundingClientRect","seek","setFilled","onScrub","filled","setProgress","stepStr","index","indexOf","decimals","_removeListeners","percents","offsetX","left","toFixed","streamable","stopAndScrubTimeout","progressRAF","onLoadedData","onPlay","r","requestAnimationFrame","cancelAnimationFrame","setLoadProgress","onProgress","filledLoad","prepend","setSeekMax","setListeners","setHandlers","scrubTime","isSafariBuffering","buf","buffered","numRanges","nearestStart","end","start","removeListeners","lastVolume","video","onFullScreen","webkitFullscreenElement","wrapper","parentNode","insertBefore","appendChild","skin","ckin","stylePlayer","controls","progress","muted","finally","initDuration","player","html","buildControls","timeDuration","insertAdjacentHTML","fullScreenButton","timeElapsed","String","toHHMMSS","volumeDiv","volumeSvg","firstElementChild","onMuteClick","cancelEvent","volumeProgress","setVolume","d","togglePlay","showControlsTimeout","showControls","code","toggleFullScreen","split","eventName","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitEnterFullscreen","enterFullscreen","isFullScreen","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","wrapVoiceMessage","audioEl","webpage","isOut","myId","isUnread","pFlags","media_unread","out","barHeightMax","mediaSizes","isMobile","svg","createElementNS","setAttributeNS","timeDiv","waveform","attributes","attribute","Uint8Array","valueCount","dataView","DataView","buffer","byteIndex","bitShift","getUint16","decodeWaveform","normValue","wfSize","barCount","maxValue","maxDelta","barX","sumI","bar_value","barWidth","rects","children","interval","lastIndex","audio","node","clearInterval","setInterval","isNaN","addAudioListener","readMessages","mousemove","MouseEvent","target","targetTouches","mids","elem","HTMLElement","withTime","voiceAsMusic","showSender","attachedHandlers","isRealVoice","isVoice","isOutgoing","is_outgoing","uploading","preloader","durationStr","downloadDiv","onTypeLoad","senderTitle","getSenderToPeerText","subtitle","audioTitle","file_name","audioPerformer","wrapPlainText","formatDate","date","titleAdditionHTML","Date","fontWeight","subtitleDiv","launched","progressLine","lastChild","replaceWith","onPlaying","wrapAudio","audioTimeDiv","onLoad","onTypeDisconnect","getTimeStr","innerText","attach","getDownloadPromise","cancelable","load","download","onClick","construct","setManual","setDownloadFunction","noAutoDownload","willBePlayed","readyState","capture","isConnected","customElements","define","DivAndCaption","fill","border","wrapReplyDivAndCaption","titleEl","subtitleEl","mediaEl","wrapEmojiText","setMedia","wrapMessageForReply","photo","boxSize","backgroundImage","wrapSticker","div","lazyLoadQueue","chat","bubbles","group","CHAT_ANIMATION_GROUP","choosePhotoSize","downloaded","sizes","thumbs","bytes","renderImageFromUrl","getPreviewURLFromThumb","preloadPhoto","isMediaSet","RectPart","maxWidth","minWidth","spacing","maxHeight","ratios","countRatios","proportions","countProportions","averageRatio","maxSizeRatio","layout","layoutTwo","layoutThree","layoutFour","layoutTwoTopBottom","layoutTwoLeftRightEqual","layoutTwoLeftRight","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutFourTopAndOther","layoutFourLeftAndOther","geometry","sides","minimalWidth","secondWidth","firstWidth","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","thirdWidth","w","h0","h","w0","w2","w1","h1","h2","map","ratio","join","cropRatios","attempts","multiHeight","offset","sum","pushAttempt","lineCounts","heights","first","second","third","fourth","optimalAttempt","optimalDiff","attempt","counts","lineCount","totalHeight","minLineHeight","bad1","bad2","line","diff","abs","optimalCounts","optimalHeights","rowCount","row","colCount","lineHeight","col","isChanged","inputFields","isValid","handleChange","avatarElem","doNotEditAvatar","freezed","radioField","checkboxField","subtitleLangKey","subtitleLangArgs","havePadding","isToggle","titleRight","noCheckboxSubtitle","checked","titleLangKey","c","navigationTab","ripple","RadioFormFromRows","rows","radios","form","RadioForm","copyTextToClipboard","text","navigator","clipboard","writeText","textArea","top","position","select","execCommand","removeChild","fallbackCopyTextToClipboard","stateKey","appStateManager","getState","state","setByKey","main","langKey","Event","toastEl","toast","checkUsernameDebounced","checkUsername","bind","getValue","originalValue","setState","Neutral","isUsernameValid","setError","invalidText","head","username","checkUsernamePromise","invokeApi","channel","getChannelInput","available","Valid","availableText","takenText","buttons","overlayClosable","avatarEl","descriptionLangKey","titleLangArgs","p","descriptionLangArgs","description","fragment","createDocumentFragment","checkboxes","o","withRipple","original","nextElementSibling","isBroadcast","section","random","privateRow","publicRow","a","privateSection","publicSection","reverse","getChat","linkRow","chatFull","exported_invite","link","format","btnRevoke","toggleDisability","getChatInviteLink","show","caption","noDelimiter","changed","linkInputField","applyBtn","migrateChat","channelId","updateUsername","close","setOriginalValue","loading","loaded","getPromise","done","checkForTriggers","loadAllDialogsPromise","loadedAllDialogs","selected","folderId","offsetIndex","loadedWhat","renderedPeerIds","peerType","multiSelect","tempIds","needSwitchList","f","renderResultsFunc","renderResults","peerIds","splitUp","notRendered","has","topContainer","selectedContainer","selectedScrollable","delimiter","findUpClassName","li","click","findUpAttribute","checkbox","includes","cachedContacts","getMoreResults","appendTo","getResultsPromise","onFirstRender","testSelfSearch","dialogs","archived","pageCount","windowH","tempId","getTempId","getConversations","newOffsetIndex","chatRightsAction","canSendToUser","hasRights","renderSaved","getMoreDialogs","contacts","getMoreContacts","getContacts","arr","splice","channelParticipants","getChannelParticipants","q","participants","participant","getParticipantPeerId","u","promises","getConversationsAll","getMoreChannelParticipants","isNonContactUser","containerEl","getChatMembersString","scroll","onlyFirstName","insertAdjacentElement","scrollIntoViewNew","offsetWidth","onAnimationEnd","settings","animationsEnabled","values","Static","closable","selector","getSelected","onSelect","hide","peerTypes","destroyListener","rights","takeOut","banned_rights","editBanned","btnDeleteException","clearChannelParticipantBannedRights","btnDelete","kickFromChannel","v","flags","exceptionText","toggleWith","defaultBannedRights","default_banned_rights","combineParticipantBannedRights","info","mainFlag","restriction","until_date","flag","chatPermissions","editChatDefaultBannedRights","addExceptionRow","openPermissions","getChannelParticipant","generateContentElement","findUpTag","setSubtitle","bannedRights","cantWhat","getPeerId","peer","update","needAdd","new_participant","view_messages","user_id","prev_participant","exceptionsCount","setLength","LOAD_COUNT","loader","onScroll","getDialogType","peerTitleElement","callbackLeave","leave","flushHistory","callbackDelete","descriptionArgs","isDanger","textArgs","getChatFull","isChannel","chatNameInputField","descriptionInputField","about","editPeer","chatTypeRow","setChatTypeSubtitle","permissionsRow","setPermissionsLength","reduce","acc","editTitle","editAbout","race","removeAttribute","deleteChannel","migrateFrom","migrateTo","_init","nameInputField","lastNameInputField","user","getUser","first_name","last_name","notificationsCheckboxField","isTrusted","mutePeer","enabled","isMuted","notify_settings","notificationsRow","isPeerLocalMuted","profileNameDiv","profileSubtitleDiv","addContact","phone","deleteContacts","getEvent","attachGlobalListenerTo","hadMove","xDown","yDown","handleMove","cursor","onReset","handleStart","_e","verifyTouchTarget","xUp","yUp","xDiff","yDiff","onFirstSwipe","onSwipe","skippable","attachToPromise","ret","selectedPeerIds","addInitial","setText","PARALLAX_SUPPORTED","previous","next","loadCount","loadedAllUp","loadedAllDown","items","item","current","unshift","onJump","older","loadPromiseDown","loadPromiseUp","anchor","loadMore","processed","processItem","photoId","avatar","BASE_CLASS","getPhoto","action","img","Image","draggable","getPeerPhoto","appAvatarsManager","putAvatar","avatars","gradient","checkScrollTop","scrollTop","cancel","freeze","clickX","listLoader","targets","concat","idx","prevTargets","nextTargets","openAvatarViewer","toRight","right","go","cancelNextClick","lastDiffX","minX","lastX","SCALE","transform","TRANSLATE_TEMPLATE","offsetLeft","addIndex","ceil","getUserPhotos","photos","Number","MAX_SAFE_INTEGER","chat_photo","generateFakeAvatarMessage","activeTab","photo_id","setPeerStatus","needClear","bio","tagName","getProfileByPeerId","full","getPeer","notifications","setBio","setPeerStatusInterval","setBioTimeout","oldAvatars","setPeer","cleaned","cleanupHTML","setAvatar","getPeerUsername","formatUserPhone","override","getProfile","userFull","rAbout","wrapRichText","canSetNext","historiesStorage","newCloseBtn","animatedCloseIcon","transitionContainer","transitionFirstItem","editBtn","transitionLastItem","secondTitle","cloneNode","profile","onAdditionalScroll","searchSuper","nav","isSharedMedia","transition","cleanScrollPositions","isHeavyAnimationInProgress","mediaTabs","onChangeTab","mediaTab","btnAddMembers","showConfirmation","inviteToChannel","addChatUser","filtered","filterMessagesByType","usedFromHistory","performSearchResult","findIndex","canViewMembers","loadMutex","peerChanged","setQuery","historyStorage","fillProfileElements","isContact","admin_rights","single","justLoad","AppSharedMediaTab","getElementById","to","medium","mobile","toggleSidebar","sharedMediaTab","enable","active","willChange","animationPromise","appSidebarRight","resultsDiv","poll","getPoll","quiz","rQuestion","results","voters","total_voters","roundPercents","hr","answer","answers","answerEl","answerTitle","answerPercents","minHeight","getVotes","option","votesList","votes","vote","showMore","lastElementChild","next_offset","down","lineTotalLength","minIndex","minRemainder","k","remainder","maxRemainder","pollElement","isClosed","closed","performResults","chosenIndexes","prevQuizHint","hideQuizHint","prevQuizHintOnHide","prevQuizHintTimeout","onHide","maxOffset","isQuiz","isRetracted","isPublic","isMultiple","chosingIndexes","sentVote","getTotalLength","pollId","descKey","is_scheduled","public_voters","multiple_choice","multipleSelect","regular","descDiv","typeDiv","avatarsDiv","close_period","close_date","timeLeftDiv","quizTimer","strokeWidth","radius","circumference","PI","circle","period","closeTime","serverTimeOffset","quizInterval","time","now","timeLeft","color","stroke","strokeDashoffset","strokeDasharray","getResults","answerDivs","svgLines","numberDivs","footerDiv","viewResults","votersCountDiv","isTabExists","sendVoteBtn","sendVotes","setVotersCount","clickHandler","solution","solution_entities","toggleHint","textEl","entities","bubblesContainer","setQuizHint","correctResult","correct","chosen","answerIndex","foundIndex","indexes","sendVotePromise","sendVote","initQuizHint","timeEl","setResults","recent_voters","maxPercents","setLineProgress","cb","getPercentValue","iterate","fullTime","votersCount","multiplier","getStickerSetPromises","getStickersByEmoticonsPromises","getStickerSet","saveById","addMultipleEventsListeners","updateNewStickerSet","saveStickerSet","stickerset","set","docs","saveDoc","params","overwrite","cachedSet","documents","refreshTime","useCache","saveStickers","stickerSet","getStickerSetInput","invokeApiHashable","stickers","emoji","getFromCache","pack","packs","emoticon","getDoc","newSet","Object","assign","setToCache","needSave","installed_date","thumb","dcId","thumb_dc_id","isAnimated","animated","location","thumb_version","mimeType","access_hash","short_name","sets","covered","excludeFeatured","exclude_featured","foundSaved","cache","getCache","toLowerCase","cover","getAllStickers","allStickers","preloadStickerSets","getRecentStickers","messagesStickers","installedSets","recentStickers","foundStickers","sticker","cachedStickersAnimated","cachedStickersStatic","iteratePacks","docId","appStickersManager","wrapVideo","boxWidth","boxHeight","withTail","middleware","noInfo","onlyPreview","withoutPreloader","loadPromises","noPlayButton","isAlbumItem","canAutoplay","autoPlay","gifs","videos","spanTime","spanPlay","needPlayButton","mime_type","photoRes","wrapPhoto","globalVideo","divRound","baseVal","ctx","setPeerPromise","isInDOM","onTimeUpdate","onPaused","onFrame","drawImage","foreignObject","images","getAttributeNS","gotThumb","getThumb","poster","aspecter","attachMethod","loadFunc","reject","detach","queueId","animationIntersector","addAnimation","render","timestamp","monthShort","withYear","month","getMonth","str","getDate","getFullYear","getHours","getMinutes","wrapDocument","searchContext","audioElement","extSplitted","ext","isArray","docDiv","icoDiv","imgs","wrapped","fileName","_downloadDiv","saveDocFile","noBlur","noThumb","noFadeIn","setAttachmentSize","thumbImage","image","isFit","loadThumbPromise","photoSize","getStrippedThumbIfNeeded","needFadeIn","sequentialDom","mutateElement","mutate","renderPromise","onlyThumb","withThumb","stickerType","loadLottieWorkers","Error","toneIndex","haveThumbCached","stickerCachedThumbs","afterRender","getPathFromPhotoPathSize","webpWorkerController","isWebpSupported","stickerThumbConverted","convert","getThumbURL","json","loadAnimationWorker","animationData","saveLottiePreview","getAnimation","restart","wrapStickerSetThumb","downloadOptions","getStickerSetThumbDownloadOptions","lottieLoader","needUpscale","blob","URL","createObjectURL","wrapReply","replyContainer","prepareAlbum","widthItem","heightItem","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","forMedia","mediaDiv","wrapAlbum","groupId","attachmentDiv","getMidsByAlbum","getMessage","album","positionElementByIndex","pos","prevPos","whichChild","users","sorted","doTimeout","updateList","good","SORT_INTERVAL","sortedUser","status","getUserStatusForSort","batch","prevTabId","urlsToRevoke","nextRates","loadedChats","firstLoad","log","logger","monthContainers","mediaTabsMap","asChatList","groupByMonth","hideEmptyTabs","onTransitionStart","onTransitionEnd","navScrollableContainer","navScrollable","tabsMenu","menuTab","span","contentTab","searchGroupMedia","horizontalMenu","tabContent","skipScroll","newMediaTab","fromMediaTab","offsetTop","scrollHeight","rect2","inputMessagesFilterPhotoVideo","warn","setSearchContext","copySearchContext","openMedia","useHeavyAnimationCheck","lock","unlockAndRefresh","elemsToAppend","sharedMediaDiv","entity","totalEntities","display_url","sliced","match","matchUrl","same","hostname","rDescription","previewDiv","getAbbreviation","rTitle","sender","method","details","monthContainer","getMonthContainerByTimestamp","afterPerforming","parent","child","inputMessagesFilterEmpty","showMembersCount","participants_count","regExp","RegExp","cleanSearchText","titleSpan","formatted","arg","searchContacts","my_results","globalContacts","isShort","minDate","renderRecentSearch","recent","recentSearch","getTopPeers","peers","people","renderParticipants","membersList","setInnerPeer","deleted","loadMembers","loadChats","logStr","used","slicedLength","ids","nextRate","maxDate","next_rate","filters","counters","getSearchCounters","firstMediaTab","counter","membersTab","toLoad","loadType","setHours","setDate","dateTimestamp","getTime","containers","haveTimestamps","clean","goFirst","revokeObjectURL","empty","newInputFilter","context","ButtonMenuItem","keepOpen","b","ButtonMenuToggleHandler","openedMenu","PrivacyType","asDiv","btnMenu","appPrivacyManager","privacy","updatePrivacy","rules","inputKey","privacyRules","saveApiUsers","saveApiChats","chats","apiUpdatesManager","processUpdateMessage","inputRule","rule","privacyKey","types","allowPeers","disallowPeers","onRadioChange","captions","captionElement","radioSection","exceptions","Everybody","Nobody","radioRows","Contacts","skipTypes","noExceptions","generateSection","exceptionTexts","exception","_peerIds","newPeerIds","generateStr","splitPeersByType","getPrivacy","getPrivacyRulesDetails","setRadio","s","chatKey","usersKey","splitted","getUserInput","setPrivacy","phoneSection","nextSibling","getAnimatedEmojiSticker","stickerContainer","inputContent","btnReturn","sliceTabsUntilTab","canFocus","isFirstInput","isFirst","email","codeInputField","passwordManager","confirmPasswordEmail","goNext","btnChange","btnResend","disable","cancelPasswordEmail","resendPasswordEmail","onContinueClick","btnContinue","btnSkip","matchEmail","toggleButtons","updateSettings","hint","currentPassword","plainPassword","newPassword","symbols","isCancel","onSkipClick","saveHint","passwordInputField","monkey","verifyInput","isNew","has_password","labelText","IntlElement","getStateInterval","_state","check","auth","btnChangePassword","btnDisablePassword","btnSetRecoveryEmail","has_recovery","btnSetPassword","Session","app_name","app_version","ip","country","date_active","date_created","hash","midtitle","device_model","system_version","platform","authorizations","session","btnTerminate","otherSection","privacyTab","updateActiveSessions","onTerminateClick","menuElement","cancelBubble","btnAdd","toggleBlock","bot","blocked","getBlocked","blockedPeerIds","blockedUsersRow","passwordState","twoFactorRow","email_unconfirmed_pattern","activeSessionsRow","setBlockedCount","updateBlocked","rowsByKeys","numberVisibilityRow","lastSeenTimeRow","photoVisibilityRow","callRow","linkAccountRow","groupChatsAddRow","updatePrivacyRow","disallowLength","allowLength","sensitive_can_change","sensitive_enabled","sensitiveRow","_enabled","auths","rgbaToHsla","g","l","hslaToRgba","hue2rgb","hexaToRgba","hexa","parseInt","rgbaToHexa","rgba","toString","hslaStringToHexa","hsla","alpha","val","endsWith","hslaStringToRgba","highlightningColor","hue","saturation","lightness","elements","onGrabStart","documentElement","boxDragger","onGrabEnd","box","sliders","hueDragger","hexInputField","rgbInputField","inputs","valid","setColor","rgbRegExp","attachBoxListeners","attachHueListeners","boxRect","saturationHandler","hueRect","hueHandler","updateHexInput","updateRgbInput","hexaToHsla","rgb","boxX","percentY","boxY","percentHue","hueX","updatePicker","rgbaArray","hex","hsl","getCurrentColor","maxX","maxY","posX","posY","lightnessX","lightnessY","_applyColor","updateColorPicker","colorPicker","background","theme","pushToState","applyCurrentTheme","onColorChange","applyColor","getTheme","grid","backgroundColor","uploadTempId","clicked","onUploadClick","file","dc_id","file_reference","wallpaper","slug","upload","addNotifyListener","_wallpaper","newDoc","newCacheContext","setBackgroundDocument","isUpload","tryAgainOnFail","addWallPaper","onResetClick","defaultTheme","themes","blurCheckboxField","blur","onGridClick","saveToCache","fetch","response","cacheStorage","save","_tempId","onReady","imageUrl","naturalWidth","naturalHeight","pixel","pixels","getImageData","data","pixelsLength","outPixel","Uint8ClampedArray","averageColor","uploadButton","colorButton","resetButton","accountWallpapers","wallpapers","pattern","stickerSetInput","onFooterClick","stickersFooter","toggleStickerSet","onStickersClick","fileId","sendMessageWithDocument","h6","setOnlyOnePlayableGroup","stickersDiv","btn","loadStickerSet","esgSticker","initialValue","minValue","nameDiv","valueDiv","range","messagesTextSize","chatBackgroundButton","animationsCheckboxField","enterRow","ctrlEnterRow","contactsCheckboxField","privateCheckboxField","groupsCheckboxField","channelsCheckboxField","gifsCheckboxField","videosCheckboxField","suggestCheckboxField","bigCheckboxField","loopCheckboxField","stickerSets","renderStickerSet","assumeType","firstNameInputField","bioInputField","getSelf","usernameInputField","setProfileUrl","profileUrlContainer","profileUrlAnchor","href","updateProfile","uploadProfilePhoto","foundInFilters","dialogsByFilters","onSelectChange","confirmBtn","pinned_peers","other","editFolderTab","setFilter","filtersStorage","getDialogFilters","dialogsStorage","getFolder","categoriesSection","exclude_muted","ico","exclude_archived","exclude_read","non_contacts","groups","broadcasts","bots","chatsSection","selectedPeers","include_peers","exclude_peers","addedInitial","_add","hasOwnProperty","originalFilter","deleteFolderButton","updateDialogFilter","bool","menuBtn","generateList","h2Text","categories","includedFlagsContainer","excludedFlagsContainer","include","createDialogFilter","editCheckForChange","loadAnimationPromise","wrapDraftText","ul","renderMore","_length","firstTime","onEditOpen","onCreateOpen","filtersRendered","dialogFilter","keys","folder","channels","isAnyGroup","filterId","orderIndex","createFolderBtn","foldersSection","suggestedSection","onFiltersContainerUpdate","renderFolder","getSuggestedFilters","suggestedFilters","NotifySection","enabledRow","typeText","previewEnabledRow","inputNotifyPeer","getNotifySettings","notifySettings","applySettings","show_previews","mute","showPreviews","inputSettings","mute_until","updateNotifySettings","contactsSignUpRow","soundRow","sound","getContactSignUpNotification","setContactSignUpNotification","invokeApiCacheable","lang_pack","languages","language","lang_code","native_name","getLangPack","getCacheLangPack","langPack","logOut","phoneDiv","buttonsDiv","edit","folders","general","fillElements","channelNameInputField","channelDescriptionInputField","onLengthChange","createChannel","alive","inputSearch","openContacts","_contacts","sort","renderPage","chatLists","chatList","generateScrollable","scrollables","wasFilterId","onTabChange","appSidebarLeft","sidebarHeader","onContactsClick","backBtn","btnArchive","verify","themeCheckboxField","menuButtons","openUsername","sessionStorage","kz_version","isMainDomain","toolsBtn","btnMenuFooter","suffix","version","newBtnMenu","initSearch","archivedCount","requestPeer","searchContainer","pickedElements","selectedPeerId","selectedMinDate","selectedMaxDate","updatePicked","setProperty","removeProperty","helper","unselectEntity","renderEntity","dates","dateData","getAttribute","peopleContainer","hideNewBtnMenuTimeout","onFocus","clearRecentSearchBtn","detailsMap","newGroupDiff","bubble","updateGroup","viaBotId","fwdFromId","removeBubble","insertObject","foundBubble","foundAtIndex","foundMidOnSameTimestamp","_timestamp","_mid","bubbleGroup","insertIndex","last","initDate","onPick","noButtons","selectedDate","onPrevClick","selectedMonth","setMonth","minMonth","prevBtn","onNextClick","maxMonth","onDateClick","selectedEl","setTimeTitle","setFullYear","controlsDiv","monthTitle","monthsContainer","handleTimeInput","onOverflow","maxString","hoursInputField","minutesInputField","number","setMinutes","btnConfirm","popupCenterer","noTitle","timeOptions","minute","hour","sendDate","dateOptions","day","year","IntlDateElement","firstChild","weekday","firstDate","weekStartDate","getDay","renderElement","dayIndex","clonedDate","showOverflowMonths","lines","fromPeerId","initMessagesForward","StickyIntersector","handler","observeHeaders","observeElements","headersObserver","IntersectionObserver","entries","entry","targetInfo","boundingClientRect","stickyTarget","rootBoundsInfo","rootBounds","bottom","threshold","root","elementsObserver","isIntersecting","sentinel","headerSentinel","addSentinel","observe","disconnect","unobserve","updated","postKey","replies","leftPart","recent_repliers","getHistoryStorage","channel_id","read_max_id","max_id","readMaxId","textSpan","iconSpan","rippleContainer","subscribeRepliesThread","updateMessage","MessageRender","setTime","bubbleContainer","messageDiv","views","postAuthor","post_author","fwd_from","saved_from_msg_id","forward","edit_date","edit_hide","pinned","timeSpan","renderReplies","isFooter","repliesFooter","setReply","isReplacing","currentReplyDiv","reply_to_mid","replyToPeerId","reply_to","reply_to_peer_id","appPeersManager","originalPeerTitle","originalMessage","appMessagesManager","wrapSingleMessage","needUpdate","replyMid","getElementByPoint","verticalSide","horizontalSide","floor","elementFromPoint","reflowScrollableElement","setInnerHTML","IGNORE_ACTIONS","TEST_SCROLL","appUsersManager","appInlineBotsManager","appPhotosManager","unreadOut","dateMessages","scrolledDown","isScrollingTimeout","unreaded","unreadedSeen","loadedTopTimes","loadedBottomTimes","messagesQueuePromise","messagesQueue","messagesQueueOnRender","messagesQueueOnRenderAdditional","firstUnreadBubble","replyFollowHistory","isFirstLoad","passEntities","onBubblesClick","chatInner","onDatePick","selection","isSelecting","selectedText","toggleByBubble","contactDiv","appImManager","bubbleMid","reply_to_top_id","generateThreadServiceStartMessage","filterMessages","getDiscussionMessage","savedFrom","msgId","isVideoComponentElement","messageId","hasAspecter","parents","albumItem","isReplyClick","replyToMid","reply_to_msg_id","getDistanceToEnd","loadedAll","topbar","pinnedMessage","setCorrectIndex","lastScrollDirection","requestHistory","setMessageId","setScroll","bubbleGroups","getMessagesStorage","setBubblePosition","scrollingToNewBubble","scrollToBubbleEnd","deleteMessagesByIds","tempMessage","mounted","getMountedBubble","repliesElement","grouped_id","newPoll","renderMessage","scrollToBubbleIfLast","updatePosition","deleteEmptyDateGroups","deletedMids","renderedId","renderMaxId","groupedMessagesStorage","getMiddleware","obj","highlightBubble","canWriteToPeer","initMessageReply","stickyIntersector","stuck","dateMessage","unlock","refresh","renderNewMessagesByIds","msgIdsByPeer","msgIds","msgs","setUnreadCount","updateUnreadByDialog","finishPeerChange","updateMessageInput","isScrolledDown","setMessagesQueuePromise","performHistoryResult","unreadedObserver","onUnreadedInViewport","wasHeight","offsetHeight","resizing","skip","scrolled","part","rAF","onResizeEnd","setEndRAF","ResizeObserver","contentRect","realDiff","_part","needScrollTop","readUnreaded","readPromise","idle","focusPromise","bubblesMaxId","readHistory","onUpdate","getScheduledMessagesStorage","bad","getGroupedBubble","getHistoryTopPromise","getHistoryBottomPromise","getHistory","onScrolledTop","loadMoreHistory","readOutboxMaxId","permanent","deleteSelectedMids","checkAnimations","replyTo","forceDirection","forceDuration","dateGroup","scrollToBubble","datasetKey","dateElement","today","bubbleContent","serviceMsg","firstTimestamp","observeStickyHeaderChanges","bubblesToo","attachedUnreadBubble","fetchNewPromise","lastMsgId","samePeer","topMessage","pinnedMessages","isTarget","savedPosition","getChatSavedPosition","getReadMaxIdIfUnread","isJump","apiManager","setQueueId","messageEntityBotCommand","isBot","additionMsgId","maxBubbleId","getBubbleByPoint","oldChatInner","cached","lockGroup","unlockGroup","fromUp","followingUnread","mountedByLastMsgId","findNextMountedBubbleByMsgId","needFetchInterval","isFetchIntervalNeeded","getNewHistory","isBottomEnd","isEnd","Bottom","onScrolledAllDown","getDialogOnly","unread_mark","markDialogUnread","canWrite","queue","setUnreadDelimiter","getDateContainerByMessage","addBubble","multipleRender","albumMustBeRenderedFull","our","isMegagroup","contentWrapper","wasClassNames","classNames","transitionDelay","originalMid","unread","wrapMessageActionTextNew","renderMessagesQueue","is_single","messageMessage","messageMedia","getAlbumText","richText","canHaveTail","needToSetHTML","emojiEntities","strLength","curr","big","reply_markup","containerDiv","rowDiv","noLinks","noLinebreaks","buttonEl","htmlToDocumentFragment","column","callbackButtonClick","messageWithReplies","getMessageWithReplies","withReplies","nameContainer","processingWebPage","noAutoDownloadMedia","previewResizer","preview","quote","quoteTextDiv","site_name","titleDiv","textDiv","isSquare","emojiSticker","animatedSticker","staticSticker","newNameContainer","getMidsByMid","wrapGroupedDocuments","lastContainer","texts","phone_number","wrapPoll","toggleBubbleCheckbox","needName","isForwardFromChannel","from_id","isHidden","from_name","getPeerColorById","goto","generateTail","isBackLimit","firstSlice","lastSlice","Top","previousScrollHeightMinusTop","needReflowScroll","newScrollTop","getScheduledMessages","realLoadCount","additionMsgIds","Both","resultPromise","isAdditionRender","isFirstMessageRender","processResult","historyResult","serviceStartMessageId","threadsServiceMessagesIdsStorage","sup","processPromise","waitPromise","times","targetMid","sortedMids","topIds","middleIds","bottomIds","getServerMessageId","setBubbles","delay","animateAsLadder","lastMsDelay","topRes","middleRes","bottomRes","delays","safeCount","mustBeCount","use","onConfirm","revoke","deleteScheduledMessages","deleteMessages","titleArgs","langArgs","canRevoke","unpin","canUnpin","canPinMessage","oneSide","silent","unpinAllMessages","hidePinnedMessages","updatePinnedMessage","buttonText","pinButtonText","sendScheduledMessages","cancelSelection","getSelection","removeAllRanges","isSelectionEmpty","rangeCount","selectionRange","getRangeAt","START_TO_END","attachTo","appPollsManager","appDocsManager","onSendScheduledClick","selectionSendNowBtn","onReplyClick","onEditClick","initMessageEditing","onCopyClick","selectedMids","onCopyAnchorLinkClick","onCopyLinkClick","onPinClick","onUnpinClick","onRetractVote","onStopPoll","stopPoll","onForwardClick","selectionForwardBtn","isTargetAGroupedItem","onSelectClick","onClearSelectionClick","onDeleteClick","selectionDeleteBtn","onContextMenu","selectedMid","isSelectable","canSelectBubble","isTextSelected","isAnchorTarget","groupedItem","withSelection","side","changedTouches","hasAttribute","notDirect","scheduleSending","editMessage","scheduleDate","onMessageSent","messageInput","canEditMessage","canDeleteMessage","EMOJI_LANG_PACK","keywords","langCode","langPackCode","keywordLangPacks","indexedLangPacks","getKeywordsPromises","storageKey","stateStorage","from_version","keywordsDifference","packKeywords","keyword","emoticons","getEmojiKeywords","lastRequestedLangCode","getRecentEmojis","indexObject","emojis","indexEmojis","search","POPULAR_EMOJI","getRecentEmojisPromise","recentEmoji","appEmojiManager","loadedURLs","appendEmoji","unify","spanEmoji","kek","emojiSupported","wrapSingleEmoji","fixEmoji","opacity","getEmojiFromElement","nodeType","nodeValue","onContentClick","inputHTML","inserted","savedRange","getSavedRange","sel","addRange","deleteContents","insertNode","setStart","createRange","setStartAfter","collapse","divs","Emoji","category","itemsDiv","unified","menu","previousElementSibling","emojiScroll","recentItemsDiv","menuOnClick","scrollPromise","processVisibleDiv","getAnimations","checkAnimation","intersector","isVisible","processInvisibleDiv","visible","gifWidth","gifHeight","willUseWidth","calcImageInBox","gifsContainer","onMediaClick","masonry","EMOTICONSSTICKERGROUP","addLazyLoadQueueRepeat","regularLazyLoadQueue","animatedDivs","checkAnimationContainer","renderSticker","queueCategoryPush","categoryDiv","categoryTitle","superStickerRenderer","recentDiv","categoryPush","menuWrapper","menuScroll","inlineResults","botId","geo","getInputPeerById","geo_point","lat","long","stopTime","noErrorBox","botResults","queryId","query_id","qId","savePhoto","msg_id","callbackAnswer","nextOffset","onGifsClick","gifsDiv","newSearch","gifBotPeerId","resolveUsername","getInlineResults","setsDiv","countDiv","stickerDiv","renderFeatured","getFeaturedStickers","coveredSets","filterRendered","renderSet","searchStickerSets","forceClose","inited","onMouseOut","displayTimeout","isActive","toElement","findUpAsChild","willBeActive","onmouseout","onmouseover","tabId","onSelectTabClick","searchButton","deleteBtn","checkRights","tabsEl","tabsElements","canSendStickers","toggleAttribute","canSendGifs","blurActiveElement","chatInput","activeElement","lockIntersectionGroup","unlockIntersectionGroup","emojiTab","stickersTab","gifsTab","0","1","2","getVisible","clearVisible","prevId","jumpedTo","which","scrollLeft","clearDraft","emoticonsDropdown","sendMenuButtons","onSilentClick","onScheduleClick","sendMenu","openSide","onContextElement","withConfirm","onSubmitClick","send","radioLabel","isEmpty","isInputEmpty","questions","appendMoreField","correctAnswers","optionInputFields","labelOptions","weakMap","questionInputField","sendSilent","setPeerId","dd","settingsCaption","anonymousCheckboxField","multipleCheckboxField","quizCheckboxField","quizSolutionField","quizElements","quizSolutionCaption","quizHr","quizSolutionContainer","quizSolutionSubtitle","onEscape","getFilledAnswers","HTMLInputElement","getRichValue","question","quizSolution","validate","force","quizSolutionEntities","btnClose","inputMediaPoll","getInputMediaPoll","sendOther","replyToMsgId","helperType","clearHelper","questionField","isSendShortcutPressed","isComposing","sendShortcut","shiftKey","ctrlKey","metaKey","secondaryKey","placeCaretAtEnd","selectNodeContents","createTextRange","textRange","moveToElementText","files","willAttachType","wasInputValue","willAttach","sendFileDetails","onKeyDown","attachFile","itemDiv","isVideo","source","objectURL","videoWidth","videoHeight","thumbBlob","thumbURL","onload","isPhoto","isAudio","finish","onerror","mediaContainer","showLengthOn","messageInputField","groupCheckboxField","attachFiles","isMedia","firstType","sendAlbum","sendText","sendFile","foundPhotos","foundVideos","albumsLength","albumContainer","attachListNavigation","waitForKey","keyNames","getCurrentTarget","setCurrentTarget","_target","scrollTo","hadTarget","fastSmoothScroll","getNextTargetX","currentTarget","isNext","nextTarget","handleArrowKey","property","endProperty","currentRect","targetRect","getNextTargetY","fireSelect","canContinue","resetTarget","_onKeyDown","hidden","onVisible","listType","navigationItem","noBlurOnPop","removeItem","attachNavigation","controller","addHelper","fromController","hideOtherHelpers","onChangeScreen","getStickersByEmoticon","ready","getMinDate","getRichValueWithCaret","field","withEntities","selNode","selOffset","startContainer","endContainer","startOffset","endOffset","getRichElementValue","caretPos","substr","combineSameEntities","onEmojiSelected","firstChar","getBothEmojiKeywords","searchEmojis","listElement","BASE","BASE_CLASS_LIST_ELEMENT","appProfileManager","sendMessage","botInfos","bot_info","commands","botInfo","botCommand","command","found","helpers","preserveHelper","insertAtCaret","topMsgId","trimmed","getMentions","onBodyTouchStart","btnHover","attachButtonListener","checkAvailability","touchListener","replyMarkup","getReplyMarkup","appChatsManager","appWebPagesManager","appDraftsManager","serverTimeManager","appNotificationsManager","lastUrl","lastTimeType","replyElements","willSendWebPage","forwardingMids","forwardingFromPeerId","recording","recordCanceled","recordStartTime","lockRedo","canRedoFromHTML","undoHistory","executedHistory","canUndoFromHTML","onCancelRecordClick","recorder","opusDecodeController","setKeepAlive","onEmoticonsOpen","toggleClass","btnToggleEmoticons","onEmoticonsClose","openScheduled","prepareDocumentExecute","undoRedo","needHTML","sameHTMLTimes","currentHTML","handleMarkdownShortcut","formatKeys","markupTooltip","showLinkEditor","applyMarkdown","onMessageInput","richValue","markdownEntities","parseMarkdown","mergeEntities","parseEntities","urlEntities","saveWebPage","setTopInfo","noWebPage","helperFunc","setTyping","editMsgId","saveDraftDebounced","checkAutocomplete","updateSendBtn","getEmojiEntityFromEmoji","onBtnSendClick","sourceNode","analyser","createAnalyser","connect","fftSize","frequencyData","frequencyBinCount","getByteFrequencyData","recordRippleEl","ms","recordTimeEl","onHelperCancel","needReturn","onHelperClick","helperWaitingForward","inputContainer","rowsWrapper","tail","fakeRowsWrapper","fakeSelectionWrapper","goDownBtn","onGoDownClick","cancelBtn","dac","newMessageWrapper","inputMessageContainer","goDownUnreadBadge","btnScheduled","btnToggleReplyMarkup","replyKeyboard","attachMenuButtons","fileInput","attachMenu","multiple","autocompleteHelperController","stickersHelper","emojiHelper","commandsHelper","mentionsHelper","btnCancelRecord","btnSendContainer","btnSend","attachMessageInputField","previousQuery","onFakeInput","draft","setDraft","saveDraft","encoderSampleRate","monitorGain","numberOfChannels","recordingGain","reuseWorker","touchMouseDown","onstop","ondataavailable","typedArray","dataBlob","Blob","decode","isVoiceMessage","pinnedControlBtn","fakeContainer","fakePinnedControlBtn","originalChat","pinnedMessageContainer","unread_count","no_webpage","syncDraft","helperToo","clearInput","fromUpdate","getDraft","setInputValue","rMessage","oldInputField","inputFake","attachMessageInputListeners","childNodes","readAllHistory","commandsMap","bold","italic","underline","strikethrough","monospace","saveExecuted","executed","haveThisType","isCollapsed","tag","commonAncestorContainer","matches","setActiveMarkupButton","insertText","insertEntity","isHelper","fullValue","prefix","AUTO_COMPLETE_REG_EXP","matchIndex","newValue","hadEntities","insertLength","addEntities","caret","selectNode","noCollapse","setRichFocus","_value","foundHelper","suggest","checkEmoticon","checkQuery","canSetDraft","fixSafariStickyInput","clearReply","unicode","pushRecentEmoji","webPage","forwardMessages","pushRecentSticker","replyFragment","smth","peerTitles","getPeerTitle","firstMessage","usingFullAlbum","albumMids","getMidsByMessage","callerFunc","toggleSelection","isGroupedBubbleSelected","getBubbleGroupedItems","groupContainer","isGroupedSelected","isGroupedMidsSelected","updateBubbleSelection","seen","selecting","canceledSelection","removeManual","documentListenerOptions","isBubbleSelected","hasCheckbox","getCheckboxInputFromBubble","isGrouped","forceSelection","selectionCountEl","cantForward","cantDelete","cantSend","toggleCheckboxes","wasSelecting","borderRadius","forwards","fakeSelectionRect","fakeRowsRect","widthFrom","widthTo","scale","initTranslateX","br","selectionInputWrapper","selectionContainer","btnCancel","updateContainer","isSelected","groupedCheckboxInput","divAndCaption","CLASSNAME_BASE","needClose","maxActive","setUtilsWidth","toggleEl","PinnedMessageBorder","drawRect","getClipPath","barHeight","clipPath","path","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","markTranslateY","trackTranslateY","defs","mark","AnimatedSuper","animateFirst","new","currentIndex","clearRow","DURATION","reflow","clearRows","previousIndex","fromTop","ignorePrevious","setNewRow","previousRow","AnimatedCounter","previousNumber","animatedSuper","decimal","previousDecimalNumber","getRow","EMPTY_INDEX","previousByDecimal","n","decimalNumber","getDecimal","hideLeft","pinnedMaxMid","pinnedMid","pinnedIndex","wasPinnedIndex","wasPinnedMediaIndex","locked","waitForScrollBottom","loadedBottom","loadedTop","scrollDownListenerSetter","getCurrentIndexPromise","isStatic","debug","pinnedMessageBorder","animatedSubtitle","animatedMedia","animatedCounter","btnOpen","openPinned","setPinnedMessage","_setPinnedMessage","unsetScrollDownListener","testMid","isNeededMore","getCurrentIndex","LOAD_OFFSET","correctAfter","gotRest","getPinnedMessage","backLimited","offset_id_offset","lastY","isDown","deltaY","handleScrollSideEvent","refreshPosition","setScrollDownListener","handleFollowingPinnedMessage","isLast","setCount","writeTo","writeMediaTo","onResize","chatAudio","resize","setUtilsRAF","chatUtils","chatInfo","btnBack","person","avatarElement","btnMore","getDeleteButtonText","btnJoin","btnPinned","btnMute","btnSearch","followPinnedMessage","activeScreen","onBtnBackClick","isFirstChat","chatContextMenuHintWasShown","joinChannel","setMutedState","isTopMessage","hiddenPinnedMessages","byCurrent","destroy","wasPeerId","newPinnedMessage","appSearch","beginSearch","btnPickDate","selectedIndex","selectResult","upBtn","downBtn","foundCountEl","renderedCount","onResultsClick","onUpClick","onDownClick","footer","dateBtn","wasAlreadyUsed","initPeerId","backgroundEl","Log","Warn","Debug","_item","prev","contextMenu","constructUtils","constructPeerHelpers","constructPinnedHelpers","constructDiscussionHelpers","constructScheduledHelpers","searchTab","setAutoDownloadMedia","setLoadMutex","loadSidebarMedia","autoDownload","setPrefix","getMessageFromStorage","addedListener","waitingForMouseUp","mouseUpCounter","onMouseUpSingle","resetSelection","tools1","tools2","cancelClosening","linkBackButton","linkInput","applyLink","isLinkValid","setTooltipPosition","linkApplyButton","applyDiv","delimiter1","delimiter2","delimiter3","matchUrlProtocol","hideTimeout","nodes","getSelectedNodes","currentMarkups","closest","activeButtons","getActiveMarkupButton","isLinkToggle","bodyRect","selectionRect","inputRect","selectionTop","sizesRect","containerRect","isFirstShow","setMouseUpEvent","arcParameter","rx","ry","xAxisRotation","largeArcFlag","sweepFlag","generatePathData","tl","tr","bl","onDragOver","onDragLeave","onDrop","outlineWrapper","dropIcon","dropHeader","dropSubtitle","disableTransition","chatInvite","broadcast","updates","putPhoto","peopleCount","FOCUS_EVENT_NAME","columnEl","offline","updateStatusInterval","backgroundPromises","onHashChange","parseUriParams","postId","post","generateMessageId","setSettings","chatsSelectTabDebounced","setLoop","onDocumentPaste","attachType","canDrag","DragEvent","_types","dataTransfer","isIDLE","updateStatus","createNewChat","chatsSelectTab","saveChatPosition","popup","singleInstance","activateInstance","addAnchorListener","noParams","hashtag","parsePathname","saveApiChat","pathname","uri","decodeURIComponent","broadcastEvent","STATE_INIT","getBackground","setBackground","getFile","chatPositions","themeColor","hslaStringToHex","themeColorElem","backgroundUrl","applyHighlightningColor","setTheme","setCurrentBackground","prevTab","prevIdx","IGNORE_KEYS","overlayIsActive","goodMid","renderNewMessages","deleteDeletedMessages","attachDragAndDropListeners","handleSelection","drops","mount","isFiles","foundMedia","foundDocuments","dropsContainer","drop","setPath","transitionTime","setUserStatus","invokeApiSingle","fromIndex","justReturn","spliced","beforeDestroy","chatIndex","spliceChats","existingIndex","setType","dot","typings","getPeerTypings","typing","langPackKeys","private","multi","mapa","langPackKey","typingElement","getTypingElement","descriptionElement","getPeerTyping","useWhitespace","typingContainer","getPeerStatus","topButtons","author","preloaderStreamable","lastTarget","isFirstOpen","loadMediaPromiseUp","loadMediaPromiseDown","loadedAllMediaUp","loadedAllMediaDown","needLoadMore","pageEl","setMoverAnimationPromise","highlightSwitchersTimeout","wholeDiv","mover","MEDIA_VIEWER_CLASSNAME","overlaysDiv","mainDiv","onlyMobile","setNewMover","onDownloadClick","setMoverPromise","windowW","evt","btnMenuToggle","setMoverToTarget","closing","fromRight","videoPlayer","removeCenterFromMover","wasActive","realParent","SVGImageElement","SVGForeignObjectElement","needOpacity","visibleRect","overflowElement","overflowRect","overflowTop","overflowBottom","sticky","overflow","vertical","horizontal","visualViewport","windowHeight","innerWidth","innerHeight","getVisibleRect","HTMLImageElement","HTMLVideoElement","setFullAspect","scaleX","scaleY","getComputedStyle","getPropertyValue","brSplitted","fillPropertyValue","SVGSVGElement","sizeTailPath","mediaElement","clipId","newClipId","newSvg","outerHTML","SVGUseElement","sX","sY","proportion","upscale","_br","toLeft","newTransform","p1","newMover","timeStr","dateStr","oldAvatar","replaceChild","setAuthorInfo","useContainerAsTarget","loadMoreMedia","moveTheMover","mainColumns","scrollWidth","thumbPromise","moverVideo","canPlayThrough","createPlayer","overlay","HAVE_FUTURE_DATA","attachCanPlay","networkState","NETWORK_LOADING","isntEnoughData","updateMediaSource","cancellablePromise","attachPromise","haveImage","currentMessageId","onAuthorClick","savePhotoFile","incrementMessageId","getMediaFromMessage","setBtnMenuToggle","_openMedia","setCaption","currentPhotoId","onAvatarUpdate","removeFromAvatarsCache","getFullPhoto","getTarget","hadMessage","believeMe","isDialog","addedToQueue","oldValue","getPeerMigratedTo","peerTitle","onArchiveClick","selectedId","editPeerFolders","folder_id","toggleDialogPin","onUnmuteClick","onUnreadClick","top_message","ConnectionStatus","hadConnect","connecting","timedOut","updating","setConnectionStatus","baseDcId","setFirstConnectionTimeout","connectionStatus","online","Connected","forceGetDifference","TimedOut","retryAt","setStatusText","currentLangPackKey","statusEl","statusPreloader","CHANGE_STATE_DELAY","getA","forceReconnect","timerSpan","forceReconnectTimeout","setStateTimeout","statusContainer","constructContainer","doms","menuScrollContainer","lastActiveElements","loadDialogsPromise","loadDialogs","onListLengthChange","emptyFolder","wrapLocalSticker","onChatsRegularScroll","sliceTimeout","scrollTopWas","rectContainer","rectTarget","firstY","firstElement","lastElement","elementOverflow","firstIndex","sliceFromStart","sliceFromEnd","deleteDialog","onChatsScrollTop","onChatsScroll","chatsPreloader","allUnreadCount","bottomPart","addFilter","getDialogDom","validateForFilter","setFiltersUnreadCount","updateDialog","setUnreadMessages","order","containerToAppend","renderedFilter","unsetTyping","onStateLoaded","foldersScrollable","isLoadedMain","isDialogsLoaded","isLoadedArchive","wasLoaded","accumulateArchivedUnread","updatesState","syncLoading","refreshConversations","getNotifyPeerTypeSettings","renderFiltersPromise","showFiltersPromise","storagesResults","addMissedDialogs","getDialogByPeerId","migratedTo","topOffset","getOffset","bottomOffset","isDialogMustBeInViewport","reorderDialogs","unreadSpan","mutedCount","notMutedCount","setFilterUnreadCount","_peerId","needIndex","getConversationPromise","withContext","openInner","lastActiveListElement","setPeerFunc","sameElement","reorderDialogsTimeout","currentOrder","peerIdByIndex","lastMessage","highlightWord","draftMessage","lastTimeSpan","senderBold","statusSpan","unreadMessagesSpan","isPinned","accumulateArchivedTimeout","addDialog","_dialog","originalDialog","getOutputPeer","testDialogForFilter","captionDiv","titleSpanContainer","verified","generateVerifiedIcon","titleP","rightSpan","messageP","use2","appDialogsManager","self","module","exports","call","defineProperty","enumerable","Symbol","toStringTag","__esModule","create","default","prototype","AudioContext","webkitAudioContext","isRecordingSupported","config","bufferLength","encoderApplication","encoderFrameSize","encoderPath","maxFramesPerPage","mediaTrackConstraints","resampleQuality","streamPages","wavBitDepth","encodedSamplePosition","mediaDevices","getUserMedia","WebAssembly","clearStream","stream","getTracks","audioContext","closeAudioContext","encodeBuffers","getChannelData","encoder","postMessage","buffers","initAudioContext","initAudioGraph","scriptProcessorNode","createScriptProcessor","destination","onaudioprocess","inputBuffer","monitorGainNode","createGain","setMonitorGain","recordingGainNode","setRecordingGain","initSourceNode","createMediaStreamSource","loadWorker","Worker","initWorker","streamPage","storePage","recordedPages","totalLength","samplePosition","page","originalSampleRate","sampleRate","wavSampleRate","onpause","resume","onresume","gain","setTargetAtTime","onstart","destroyWorker","Function","ScrollableBase","logPrefix","onScrollMeasure","needCheckAfterAnimation","margin","maxDistance","axis","Scrollable","onScrollOffset","withPaddingContainer","lastScrollTop","maxScrollTop","clientHeight","padding","ScrollableX","splitCount","scrollHorizontally","deltaX","clientWidth","CheckboxField","stateValue","stateValues","checkSvg","bg","withHover","currentHashPromise","newHashPromise","password","new_settings","computeSRP","newAlgo","new_algo","salt1","randomize","hashes","new_password_hash","inputCheckPassword","saveApiUser","setUserAuth","blobSupported","fileWriter","write","saveFileCallback","blobParts","truncate","finalize","saveToStorage","dbName","useStorage","test","STORAGES","openDatabase","openDbPromise","caches","entryName","timeoutOperation","put","Response","headers","rejected","fakeWriter","getFakeFileWriter","saveFile","deleteAll","PasswordInputField","passwordVisible","onVisibilityClick","toggleVisible","onVisibilityClickAdditional","stealthy","tabIndex","PasswordMonkey","noCache","curFrame"],"mappings":"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","file":"16.841f8058536fcd566e30.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField from \"../inputField\";\r\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\r\n\r\nexport default class TrackingMonkey {\r\n  public container: HTMLElement;\r\n\r\n  protected max = 45;\r\n  protected needFrame = 0;\r\n\r\n  protected animation: RLottiePlayer;\r\n  protected idleAnimation: RLottiePlayer;\r\n\r\n  protected loadPromise: Promise<any>;\r\n\r\n  constructor(protected inputField: InputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n\r\n    const input = inputField.input;\r\n\r\n    input.addEventListener('blur', () => {\r\n      this.playAnimation(0);\r\n    });\r\n\r\n    input.addEventListener('input', (e) => {\r\n      this.playAnimation(inputField.value.length);\r\n    });\r\n\r\n    /* codeInput.addEventListener('focus', () => {\r\n      playAnimation(Math.max(codeInput.value.length, 1));\r\n    }); */\r\n  }\r\n\r\n  // 1st symbol = frame 15\r\n  // end symbol = frame 165\r\n  public playAnimation(length: number) {\r\n    if(!this.animation) return;\r\n\r\n    length = Math.min(length, 30);\r\n    let frame: number;\r\n    if(length) {\r\n      frame = Math.round(Math.min(this.max, length) * (165 / this.max) + 11.33);\r\n\r\n      if(this.idleAnimation) {\r\n        this.idleAnimation.stop(true);\r\n        this.idleAnimation.canvas.style.display = 'none';\r\n      }\r\n      \r\n      this.animation.canvas.style.display = '';\r\n    } else {\r\n      /* const cb = (frameNo: number) => {\r\n        if(frameNo <= 1) { */\r\n          /* idleAnimation.play();\r\n          idleAnimation.canvas.style.display = '';\r\n          animation.canvas.style.display = 'none'; */\r\n      /*     animation.removeListener('enterFrame', cb);\r\n        }\r\n      };\r\n      animation.addListener('enterFrame', cb); */\r\n      \r\n      frame = 0;\r\n    }\r\n    //animation.playSegments([1, 2]);\r\n\r\n    const direction = this.needFrame > frame ? -1 : 1;\r\n    //console.log('keydown', length, frame, direction);\r\n\r\n    this.animation.setDirection(direction);\r\n    if(this.needFrame !== 0 && frame === 0) {\r\n      this.animation.setSpeed(7);\r\n    }\r\n    /* let diff = Math.abs(needFrame - frame * direction);\r\n    if((diff / 20) > 1) animation.setSpeed(diff / 20 | 0); */\r\n    this.needFrame = frame;\r\n    \r\n    this.animation.play();\r\n\r\n    /* animation.goToAndStop(15, true); */\r\n    //animation.goToAndStop(length / max * );\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = Promise.all([\r\n      lottieLoader.loadAnimationFromURL({\r\n        container: this.container,\r\n        loop: true,\r\n        autoplay: true,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'assets/img/TwoFactorSetupMonkeyIdle.tgs').then(animation => {\r\n        this.idleAnimation = animation;\r\n\r\n        // ! animationIntersector will stop animation instantly\r\n        if(!this.inputField.value.length) {\r\n          animation.play();\r\n        }\r\n\r\n        return lottieLoader.waitForFirstFrame(animation);\r\n      }),\r\n\r\n      lottieLoader.loadAnimationFromURL({\r\n        container: this.container,\r\n        loop: false,\r\n        autoplay: false,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'assets/img/TwoFactorSetupMonkeyTracking.tgs').then(_animation => {\r\n        this.animation = _animation;\r\n\r\n        if(!this.inputField.value.length) {\r\n          this.animation.canvas.style.display = 'none';\r\n        }\r\n\r\n        this.animation.addEventListener('enterFrame', currentFrame => {\r\n          //console.log('enterFrame', currentFrame, needFrame);\r\n          //let currentFrame = Math.round(e.currentTime);\r\n          \r\n          if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n            (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n          }\r\n\r\n          if(currentFrame === 0 && this.needFrame === 0) {\r\n            //animation.curFrame = 0;\r\n            \r\n            if(this.idleAnimation) {\r\n              this.idleAnimation.canvas.style.display = '';\r\n              this.idleAnimation.play();\r\n              this.animation.canvas.style.display = 'none';\r\n            }\r\n          }\r\n        });\r\n        //console.log(animation.getDuration(), animation.getDuration(true));\r\n\r\n        return lottieLoader.waitForFirstFrame(_animation);\r\n      })\r\n    ]);\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) this.animation.remove();\r\n    if(this.idleAnimation) this.idleAnimation.remove();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class CodeInputField extends InputField {\r\n  constructor(options: InputFieldOptions & {\r\n    length: number,\r\n    onFill: (code: number) => void\r\n  }) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'tel';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n\r\n    let lastLength = 0;\r\n    this.input.addEventListener('input', (e) => {\r\n      this.input.classList.remove('error');\r\n      this.setLabel();\r\n  \r\n      const value = this.value.replace(/\\D/g, '').slice(0, options.length);\r\n      this.setValueSilently(value);\r\n  \r\n      const length = this.value.length;\r\n      if(length === options.length) { // submit code\r\n        options.onFill(+this.value);\r\n      } else if(length === lastLength) {\r\n        return;\r\n      }\r\n  \r\n      lastLength = length;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDialogsManager from \"../lib/appManagers/appDialogsManager\";\r\nimport Scrollable from \"./scrollable\";\r\nimport appMessagesManager from \"../lib/appManagers/appMessagesManager\";\r\nimport InputSearch from \"./inputSearch\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\n\r\nexport class SearchGroup {\r\n  container: HTMLDivElement;\r\n  nameEl: HTMLDivElement;\r\n  list: HTMLUListElement;\r\n\r\n  constructor(public name: LangPackKey | boolean, public type: string, private clearable = true, className?: string, clickable = true, public autonomous = true, public onFound?: () => void) {\r\n    this.list = appDialogsManager.createChatList();\r\n    this.container = document.createElement('div');\r\n    if(className) this.container.className = className;\r\n    \r\n    if(name) {\r\n      this.nameEl = document.createElement('div');\r\n      this.nameEl.classList.add('search-group__name');\r\n      if(typeof(name) === 'string') {\r\n        this.nameEl.append(i18n(name));\r\n      }\r\n      this.container.append(this.nameEl);\r\n    }\r\n    \r\n    this.container.classList.add('search-group', 'search-group-' + type);\r\n    this.container.append(this.list);\r\n    this.container.style.display = 'none';\r\n\r\n    if(clickable) {\r\n      appDialogsManager.setListClickListener(this.list, onFound, undefined, autonomous);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.container.style.display = 'none';\r\n\r\n    if(this.clearable) {\r\n      this.list.innerHTML = '';\r\n    }\r\n  }\r\n\r\n  setActive() {\r\n    this.container.style.display = '';\r\n  }\r\n\r\n  toggle() {\r\n    if(this.list.childElementCount) {\r\n      this.setActive();\r\n    } else {\r\n      this.clear();\r\n    }\r\n  }\r\n}\r\n\r\nexport type SearchGroupType = 'contacts' | 'globalContacts' | 'messages' | string;\r\n\r\nexport default class AppSearch {\r\n  private minMsgId = 0;\r\n  private loadedCount = -1;\r\n  private foundCount = -1;\r\n\r\n  private searchPromise: Promise<void> = null;\r\n  private searchTimeout: number = 0;\r\n\r\n  private query = '';\r\n\r\n  private listsContainer: HTMLDivElement = null;\r\n\r\n  private peerId = 0; // 0 - means global\r\n  private threadId = 0;\r\n\r\n  private scrollable: Scrollable;\r\n\r\n  constructor(public container: HTMLElement, public searchInput: InputSearch, public searchGroups: {[group in SearchGroupType]: SearchGroup}, public onSearch?: (count: number) => void) {\r\n    this.scrollable = new Scrollable(this.container);\r\n    this.listsContainer = this.scrollable.container as HTMLDivElement;\r\n    for(let i in this.searchGroups) {\r\n      this.listsContainer.append(this.searchGroups[i as SearchGroupType].container);\r\n    }\r\n\r\n    if(this.searchGroups.messages) {\r\n      this.scrollable.setVirtualContainer(this.searchGroups.messages.list);\r\n    }\r\n\r\n    this.searchInput.onChange = (value) => {\r\n      /* if(!value.trim()) {\r\n        //this.peerId = 0;\r\n        return;\r\n      } */\r\n      \r\n      this.query = value;\r\n      this.reset(false);\r\n      this.searchMore();\r\n    };\r\n\r\n    this.scrollable.onScrolledBottom = () => {\r\n      if(!this.query.trim()) return;\r\n    \r\n      if(!this.searchTimeout) {\r\n        this.searchTimeout = window.setTimeout(() => {\r\n          this.searchMore();\r\n          this.searchTimeout = 0;\r\n        }, 0);\r\n      }\r\n    };\r\n  }\r\n\r\n  public reset(all = true) {\r\n    if(all) {\r\n      this.searchInput.value = '';\r\n      this.query = '';\r\n      this.peerId = 0;\r\n      this.threadId = 0;\r\n    }\r\n\r\n    this.minMsgId = 0;\r\n    this.loadedCount = -1;\r\n    this.foundCount = -1;\r\n\r\n    for(let i in this.searchGroups) {\r\n      this.searchGroups[i as SearchGroupType].clear();\r\n    }\r\n    \r\n    this.searchPromise = null;\r\n  }\r\n\r\n  public beginSearch(peerId = 0, threadId = 0) {\r\n    this.peerId = peerId;\r\n    this.threadId = threadId;\r\n    this.searchInput.input.focus();\r\n  }\r\n\r\n  public searchMore() {\r\n    if(this.searchPromise) return this.searchPromise;\r\n    \r\n    const query = this.query;\r\n    \r\n    if(!query.trim()) {\r\n      this.onSearch && this.onSearch(0);\r\n      return;\r\n    }\r\n    \r\n    if(this.foundCount !== -1 && this.loadedCount >= this.foundCount) {\r\n      return Promise.resolve();\r\n    }\r\n    \r\n    const maxId = this.minMsgId || 0;\r\n\r\n    return this.searchPromise = appMessagesManager.getSearch({\r\n      peerId: this.peerId, \r\n      query, \r\n      inputFilter: {_: 'inputMessagesFilterEmpty'}, \r\n      maxId, \r\n      limit: 20,\r\n      threadId: this.threadId\r\n    }).then(res => {\r\n      this.searchPromise = null;\r\n      \r\n      if(this.searchInput.value !== query) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('input search result:', this.peerId, query, null, maxId, 20, res);\r\n      \r\n      const {count, history} = res;\r\n      \r\n      if(history.length && history[0].mid === this.minMsgId) {\r\n        history.shift();\r\n      }\r\n      \r\n      const searchGroup = this.searchGroups.messages;\r\n\r\n      history.forEach((message) => {\r\n        const peerId = this.peerId ? message.fromId : message.peerId;\r\n        const {dialog, dom} = appDialogsManager.addDialogNew({\r\n          dialog: peerId, \r\n          container: this.scrollable/* searchGroup.list */, \r\n          drawStatus: false,\r\n          avatarSize: 54,\r\n          meAsSaved: false\r\n        });\r\n\r\n        if(message.peerId !== peerId) {\r\n          dom.listEl.dataset.peerId = '' + message.peerId;\r\n        }\r\n\r\n        appDialogsManager.setLastMessage(dialog, message, dom, query);\r\n      });\r\n\r\n      searchGroup.toggle();\r\n      \r\n      this.minMsgId = history.length && history[history.length - 1].mid;\r\n      \r\n      if(this.loadedCount === -1) {\r\n        this.loadedCount = 0;\r\n      }\r\n      this.loadedCount += history.length;\r\n      \r\n      if(this.foundCount === -1) {\r\n        this.foundCount = count;\r\n\r\n        if(searchGroup.nameEl) {\r\n          replaceContent(searchGroup.nameEl, i18n(count ? 'Chat.Search.MessagesFound' : 'Chat.Search.NoMessagesFound', [count]));\r\n        }\r\n        \r\n        this.onSearch && this.onSearch(this.foundCount);\r\n      }\r\n    }).catch(err => {\r\n      console.error('search error', err);\r\n      this.searchPromise = null;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n//import { getRichValue } from \"../helpers/dom\";\r\nimport { LangPackKey } from \"../lib/langPack\";\r\nimport InputField from \"./inputField\";\r\n\r\nexport default class InputSearch {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputField: InputField;\r\n  public clearBtn: HTMLElement;\r\n\r\n  public prevValue = '';\r\n  public timeout = 0;\r\n  public onChange: (value: string) => void;\r\n  public onClear: () => void;\r\n\r\n  constructor(placeholder: LangPackKey, onChange?: (value: string) => void) {\r\n    this.inputField = new InputField({\r\n      placeholder,\r\n      plainText: true\r\n    });\r\n\r\n    this.container = this.inputField.container;\r\n    this.container.classList.remove('input-field');\r\n    this.container.classList.add('input-search');\r\n\r\n    this.onChange = onChange;\r\n\r\n    this.input = this.inputField.input;\r\n    this.input.classList.add('input-search-input');\r\n\r\n    const searchIcon = document.createElement('i');\r\n    searchIcon.classList.add('tgico', 'tgico-search');\r\n\r\n    this.clearBtn = document.createElement('i');\r\n    this.clearBtn.classList.add('tgico', 'btn-icon', 'tgico-close');\r\n\r\n    this.input.addEventListener('input', this.onInput);\r\n    this.clearBtn.addEventListener('click', this.onClearClick);\r\n\r\n    this.container.append(searchIcon, this.clearBtn);\r\n  }\r\n  \r\n  onInput = () => {\r\n    if(!this.onChange) return;\r\n\r\n    let value = this.value;\r\n\r\n    //this.input.classList.toggle('is-empty', !value.trim());\r\n\r\n    if(value !== this.prevValue) {\r\n      this.prevValue = value;\r\n      clearTimeout(this.timeout);\r\n      this.timeout = window.setTimeout(() => {\r\n        this.onChange(value);\r\n      }, 200);\r\n    }\r\n  };\r\n\r\n  onClearClick = () => {\r\n    this.value = '';\r\n    this.onChange && this.onChange('');\r\n    this.onClear && this.onClear();\r\n  };\r\n\r\n  get value() {\r\n    return this.inputField.value;\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.prevValue = value;\r\n    clearTimeout(this.timeout);\r\n    this.inputField.value = value;\r\n  }\r\n\r\n  public remove() {\r\n    clearTimeout(this.timeout);\r\n    this.input.removeEventListener('input', this.onInput);\r\n    this.clearBtn.removeEventListener('click', this.onClearClick);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { RootScope } from \"../lib/rootScope\";\r\nimport { ArgumentTypes } from \"../types\";\r\n\r\n/* export type Listener<T extends ListenerElement> = {\r\n  element: ListenerElement, \r\n  event: ListenerEvent<T>, \r\n  callback: ListenerCallback<T>, \r\n  options?: ListenerOptions\r\n};\r\n\r\nexport type ListenerElement = HTMLElement | RootScope;\r\nexport type ListenerEvent<T extends ListenerElement> = ArgumentTypes<T['addEventListener']>[0];\r\nexport type ListenerCallback<T extends ListenerElement> = ArgumentTypes<T['addEventListener']>[1];\r\nexport type ListenerOptions = any; */\r\nexport type Listener<T extends ListenerElement> = {\r\n  element: ListenerElement, \r\n  event: ListenerEvent<T>, \r\n  callback: ListenerCallback, \r\n  options?: ListenerOptions,\r\n\r\n  onceFired?: true, // will be set only when options.once is set\r\n  onceCallback?: () => void,\r\n};\r\n\r\nexport type ListenerElement = Window | Document | HTMLElement | Element | RootScope | any;\r\n//export type ListenerEvent<T extends ListenerElement> = ArgumentTypes<T['addEventListener']>[0];\r\nexport type ListenerEvent<T extends ListenerElement> = string;\r\nexport type ListenerCallback = (...args: any[]) => any;\r\nexport type ListenerOptions = any;\r\n\r\nexport default class ListenerSetter {\r\n  private listeners: Set<Listener<any>> = new Set();\r\n\r\n  public add<T extends ListenerElement>(element: T, event: ListenerEvent<T>, callback: ListenerCallback, options?: ListenerOptions) {\r\n    const listener: Listener<T> = {element, event, callback, options};\r\n    this.addManual(listener);\r\n    return listener;\r\n  }\r\n\r\n  public addManual<T extends ListenerElement>(listener: Listener<T>) {\r\n    // @ts-ignore\r\n    listener.element.addEventListener(listener.event, listener.callback, listener.options);\r\n\r\n    if(listener.options?.once) { // remove listener when its called\r\n      listener.onceCallback = () => {\r\n        this.remove(listener);\r\n        listener.onceFired = true;\r\n      };\r\n      \r\n      // @ts-ignore\r\n      listener.element.addEventListener(listener.event, listener.onceCallback, listener.options);\r\n    }\r\n\r\n    this.listeners.add(listener);\r\n  }\r\n\r\n  public remove<T extends ListenerElement>(listener: Listener<T>) {\r\n    if(!listener.onceFired) {\r\n      // @ts-ignore\r\n      listener.element.removeEventListener(listener.event, listener.callback, listener.options);\r\n\r\n      if(listener.onceCallback) {\r\n        // @ts-ignore\r\n        listener.element.removeEventListener(listener.event, listener.onceCallback, listener.options);\r\n      }\r\n    }\r\n\r\n    this.listeners.delete(listener);\r\n  }\r\n\r\n  public removeManual<T extends ListenerElement>(element: T, event: ListenerEvent<T>, callback: ListenerCallback, options?: ListenerOptions) {\r\n    let listener: Listener<T>;\r\n    for(const _listener of this.listeners) {\r\n      if(_listener.element === element && _listener.event === event && _listener.callback === callback && _listener.options === options) {\r\n        listener = _listener;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(listener) {\r\n      this.remove(listener);\r\n    }\r\n  }\r\n\r\n  public removeAll() {\r\n    this.listeners.forEach(listener => {\r\n      this.remove(listener);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Button from \"./button\";\r\n\r\nconst ButtonIcon = (className: string, options: Partial<{noRipple: true, onlyMobile: true, asDiv: boolean}> = {}) => {\r\n  const button = Button('btn-icon', {icon: className, ...options});\r\n  return button;\r\n};\r\n\r\nexport default ButtonIcon;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport EventListenerBase from \"../helpers/eventListenerBase\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport ButtonIcon from \"./buttonIcon\";\r\nimport Scrollable from \"./scrollable\";\r\nimport SidebarSlider from \"./slider\";\r\n\r\nexport interface SliderTab {\r\n  onOpen?: () => void,\r\n  onOpenAfterTimeout?: () => void,\r\n  onClose?: () => void,\r\n  onCloseAfterTimeout?: () => void\r\n}\r\n\r\nexport interface SliderSuperTabConstructable {\r\n  new(slider: SidebarSlider, destroyable: boolean): SliderSuperTab;\r\n}\r\n\r\nexport default class SliderSuperTab implements SliderTab {\r\n  public container: HTMLElement;\r\n\r\n  public header: HTMLElement;\r\n  public closeBtn: HTMLElement;\r\n  public title: HTMLElement;\r\n\r\n  public content: HTMLElement;\r\n  public scrollable: Scrollable;\r\n\r\n  public slider: SidebarSlider;\r\n  public destroyable: boolean;\r\n  public listenerSetter: ListenerSetter;\r\n\r\n  constructor(slider: SidebarSlider, destroyable?: boolean) {\r\n    this._constructor(slider, destroyable);\r\n  }\r\n\r\n  public _constructor(slider: SidebarSlider, destroyable = true): any {\r\n    this.slider = slider;\r\n    this.destroyable = destroyable;\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('sidebar-slider-item');\r\n\r\n    // * Header\r\n    this.header = document.createElement('div');\r\n    this.header.classList.add('sidebar-header');\r\n\r\n    this.closeBtn = ButtonIcon('left sidebar-close-button', {noRipple: true});\r\n    this.title = document.createElement('div');\r\n    this.title.classList.add('sidebar-header__title');\r\n    this.header.append(this.closeBtn, this.title);\r\n\r\n    // * Content\r\n    this.content = document.createElement('div');\r\n    this.content.classList.add('sidebar-content');\r\n\r\n    this.scrollable = new Scrollable(this.content, undefined, undefined, true);\r\n\r\n    this.container.append(this.header, this.content);\r\n\r\n    this.slider.addTab(this);\r\n    \r\n    this.listenerSetter = new ListenerSetter();\r\n  }\r\n\r\n  public close() {\r\n    return this.slider.closeTab(this);\r\n  }\r\n\r\n  public async open(...args: any[]) {\r\n    if(this.init) {\r\n      try {\r\n        const result = this.init();\r\n        this.init = null;\r\n\r\n        if(result instanceof Promise) {\r\n          await result;\r\n        }\r\n      } catch(err) {\r\n        console.error('open tab error', err);\r\n      }\r\n    }\r\n\r\n    return this.slider.selectTab(this);\r\n  }\r\n\r\n  protected init(): Promise<any> | any {\r\n\r\n  }\r\n\r\n  public onCloseAfterTimeout() {\r\n    if(this.destroyable) { // ! WARNING, пока что это будет работать только с самой последней внутренней вкладкой !\r\n      this.slider.tabs.delete(this);\r\n      this.container.remove();\r\n    }\r\n\r\n    if(this.listenerSetter) {\r\n      this.listenerSetter.removeAll();\r\n    }\r\n  }\r\n\r\n  protected setTitle(key: LangPackKey) {\r\n    this.title.innerHTML = '';\r\n    this.title.append(i18n(key));\r\n  }\r\n}\r\n\r\nexport class SliderSuperTabEventable extends SliderSuperTab {\r\n  public eventListener: EventListenerBase<{\r\n    destroy: () => void\r\n  }>;\r\n\r\n  constructor(slider: SidebarSlider) {\r\n    super(slider);\r\n    this.eventListener = new EventListenerBase();\r\n  }\r\n\r\n  onCloseAfterTimeout() {\r\n    this.eventListener.dispatchEvent('destroy');\r\n    this.eventListener.cleanup();\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n\r\n/* // @ts-ignore\r\ninterface SliderSuperEventsTab extends SliderSuperTab, EventListenerBase<{}> {\r\n  superConstructor: (...args: any[]) => any;\r\n}\r\nclass SliderSuperEventsTab implements SliderSuperEventsTab {\r\n  constructor(slider: SidebarSlider) {\r\n    this.superConstructor([slider, true]);\r\n  }\r\n}\r\napplyMixins(SliderSuperEventsTab, [SliderSuperTab, EventListenerBase]);\r\n\r\n(window as any).lol = SliderSuperEventsTab\r\n\r\nexport {SliderSuperEventsTab}; */\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { horizontalMenu } from \"./horizontalMenu\";\r\nimport { TransitionSlider } from \"./transition\";\r\nimport appNavigationController, { NavigationItem } from \"./appNavigationController\";\r\nimport SliderSuperTab, { SliderSuperTabConstructable, SliderTab } from \"./sliderTab\";\r\nimport { safeAssign } from \"../helpers/object\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\n\r\nconst TRANSITION_TIME = 250;\r\n\r\nexport type {SliderTab};\r\nexport {SliderSuperTab};\r\n\r\nexport default class SidebarSlider {\r\n  protected _selectTab: ReturnType<typeof horizontalMenu>;\r\n  public historyTabIds: (number | SliderSuperTab)[] = []; // * key is any, since right sidebar is ugly nowz\r\n  public tabsContainer: HTMLElement;\r\n  public sidebarEl: HTMLElement;\r\n  public tabs: Map<any, SliderTab>; // * key is any, since right sidebar is ugly now\r\n  private canHideFirst = false;\r\n  private navigationType: NavigationItem['type']\r\n\r\n  constructor(options: {\r\n    sidebarEl: SidebarSlider['sidebarEl'],\r\n    tabs?: SidebarSlider['tabs'],\r\n    canHideFirst?: SidebarSlider['canHideFirst'],\r\n    navigationType: SidebarSlider['navigationType']\r\n  }) {\r\n    safeAssign(this, options);\r\n\r\n    if(!this.tabs) {\r\n      this.tabs = new Map();\r\n    }\r\n\r\n    this.tabsContainer = this.sidebarEl.querySelector('.sidebar-slider');\r\n    this._selectTab = TransitionSlider(this.tabsContainer, 'navigation', TRANSITION_TIME);\r\n    if(!this.canHideFirst) {\r\n      this._selectTab(0);\r\n    }\r\n\r\n    Array.from(this.sidebarEl.querySelectorAll('.sidebar-close-button') as any as HTMLElement[]).forEach(el => {\r\n      attachClickEvent(el, this.onCloseBtnClick);\r\n    });\r\n  }\r\n\r\n  public onCloseBtnClick = () => {\r\n    const item = appNavigationController.findItemByType(this.navigationType);\r\n    if(item) {\r\n      appNavigationController.back(this.navigationType);\r\n    } else if(this.historyTabIds.length) {\r\n      this.closeTab(this.historyTabIds[this.historyTabIds.length - 1]);\r\n    }\r\n    // this.closeTab();\r\n  };\r\n\r\n  public closeTab = (id?: number | SliderSuperTab, animate?: boolean, isNavigation?: boolean) => {\r\n    if(id !== undefined && this.historyTabIds[this.historyTabIds.length - 1] !== id) {\r\n      return false;\r\n    }\r\n\r\n    //console.log('sidebar-close-button click:', this.historyTabIDs);\r\n    const closingId = this.historyTabIds.pop(); // pop current\r\n    this.onCloseTab(closingId, animate, isNavigation);\r\n\r\n    const tab = this.historyTabIds[this.historyTabIds.length - 1];\r\n    this._selectTab(tab !== undefined ? (tab instanceof SliderSuperTab ? tab.container : tab) : (this.canHideFirst ? -1 : 0), animate);\r\n    return true;\r\n  };\r\n\r\n  public selectTab(id: number | SliderSuperTab): boolean {\r\n    /* if(id instanceof SliderSuperTab) {\r\n      id = id.id;\r\n    } */\r\n\r\n    if(this.historyTabIds[this.historyTabIds.length - 1] === id) {\r\n      return false;\r\n    }\r\n\r\n    const tab: SliderTab = id instanceof SliderSuperTab ? id : this.tabs.get(id);\r\n    if(tab) {\r\n      if(tab.onOpen) {\r\n        tab.onOpen();\r\n      }\r\n  \r\n      if(tab.onOpenAfterTimeout) {\r\n        setTimeout(() => {\r\n          tab.onOpenAfterTimeout();\r\n        }, TRANSITION_TIME);\r\n      }\r\n    }\r\n\r\n    //if(!this.canHideFirst || this.historyTabIds.length) {\r\n      appNavigationController.pushItem({\r\n        type: this.navigationType, \r\n        onPop: (canAnimate) => {\r\n          this.closeTab(undefined, canAnimate, true);\r\n          return true;\r\n        }\r\n      });\r\n    //}\r\n    \r\n    this.historyTabIds.push(id);\r\n    this._selectTab(id instanceof SliderSuperTab ? id.container : id);\r\n    return true;\r\n  }\r\n\r\n  public removeTabFromHistory(id: number | SliderSuperTab) {\r\n    this.historyTabIds.findAndSplice(i => i === id);\r\n    this.onCloseTab(id, undefined);\r\n  }\r\n\r\n  public sliceTabsUntilTab(tabConstructor: SliderSuperTabConstructable, preserveTab: SliderSuperTab) {\r\n    for(let i = this.historyTabIds.length - 1; i >= 0; --i) {\r\n      const tab = this.historyTabIds[i];\r\n      if(tab === preserveTab) continue;\r\n      else if(tab instanceof tabConstructor) {\r\n        break;\r\n      }\r\n\r\n      this.removeTabFromHistory(tab);\r\n      //appNavigationController.removeByType(this.navigationType, true);\r\n    }\r\n  }\r\n\r\n  public getTab(tabConstructor: SliderSuperTabConstructable) {\r\n    return this.historyTabIds.find(t => t instanceof tabConstructor) as SliderSuperTab;\r\n  }\r\n\r\n  public isTabExists(tabConstructor: SliderSuperTabConstructable) {\r\n    return !!this.getTab(tabConstructor);\r\n  }\r\n\r\n  protected onCloseTab(id: number | SliderSuperTab, animate: boolean, isNavigation?: boolean) {\r\n    if(!isNavigation) {\r\n      appNavigationController.removeByType(this.navigationType, true);\r\n    }\r\n\r\n    const tab: SliderTab = id instanceof SliderSuperTab ? id : this.tabs.get(id);\r\n    if(tab) {\r\n      if(tab.onClose) {\r\n        tab.onClose();\r\n      }\r\n\r\n      if(tab.onCloseAfterTimeout) {\r\n        setTimeout(() => {\r\n          tab.onCloseAfterTimeout();\r\n        }, TRANSITION_TIME);\r\n      }\r\n    }\r\n  }\r\n\r\n  public addTab(tab: SliderSuperTab) {\r\n    if(!tab.container.parentElement) {\r\n      this.tabsContainer.append(tab.container);\r\n\r\n      if(tab.closeBtn) {\r\n        tab.closeBtn.addEventListener('click', this.onCloseBtnClick);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { CancellablePromise } from \"../helpers/cancellablePromise\";\r\nimport type { InputFile } from \"../layer\";\r\nimport PopupAvatar from \"./popups/avatar\";\r\n\r\nexport default class AvatarEdit {\r\n  public container: HTMLElement;\r\n  private canvas: HTMLCanvasElement;\r\n  private icon: HTMLSpanElement;\r\n\r\n  constructor(onChange: (uploadAvatar: () => CancellablePromise<InputFile>) => void) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('avatar-edit');\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.classList.add('avatar-edit-canvas');\r\n\r\n    this.icon = document.createElement('span');\r\n    this.icon.classList.add('tgico', 'tgico-cameraadd');\r\n\r\n    this.container.append(this.canvas, this.icon);\r\n\r\n    this.container.addEventListener('click', () => {\r\n      new PopupAvatar().open(this.canvas, onChange);\r\n    });\r\n  }\r\n\r\n  public clear() {\r\n    const ctx = this.canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Button from \"./button\";\r\n\r\nconst ButtonCorner = (options: Partial<{className: string, icon: string, noRipple: true, onlyMobile: true, asDiv: boolean}> = {}) => {\r\n  const button = Button('btn-circle btn-corner z-depth-1' + (options.className ? ' ' + options.className : ''), options);\r\n  return button;\r\n};\r\n\r\nexport default ButtonCorner;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appSidebarLeft from \"..\";\r\nimport { InputFile } from \"../../../layer\";\r\nimport appChatsManager from \"../../../lib/appManagers/appChatsManager\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport { SearchGroup } from \"../../appSearch\";\r\nimport InputField from \"../../inputField\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport AvatarEdit from \"../../avatarEdit\";\r\nimport { i18n } from \"../../../lib/langPack\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\n\r\nexport default class AppNewGroupTab extends SliderSuperTab {\r\n  private searchGroup = new SearchGroup(true, 'contacts', true, 'new-group-members disable-hover', false);\r\n  private avatarEdit: AvatarEdit;\r\n  private uploadAvatar: () => Promise<InputFile> = null;\r\n  private userIds: number[];\r\n  private nextBtn: HTMLButtonElement;\r\n  private groupNameInputField: InputField;\r\n\r\n  protected init() {\r\n    this.container.classList.add('new-group-container');\r\n    this.setTitle('NewGroup');\r\n\r\n    this.avatarEdit = new AvatarEdit((_upload) => {\r\n      this.uploadAvatar = _upload;\r\n    });\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    this.groupNameInputField = new InputField({\r\n      label: 'CreateGroup.NameHolder',\r\n      maxLength: 128\r\n    });\r\n\r\n    inputWrapper.append(this.groupNameInputField.container);\r\n\r\n    this.groupNameInputField.input.addEventListener('input', () => {\r\n      const value = this.groupNameInputField.value;\r\n      this.nextBtn.classList.toggle('is-visible', !!value.length && !this.groupNameInputField.input.classList.contains('error'));\r\n    });\r\n\r\n    this.nextBtn = ButtonCorner({icon: 'arrow_next'});\r\n\r\n    this.nextBtn.addEventListener('click', () => {\r\n      const title = this.groupNameInputField.value;\r\n\r\n      this.nextBtn.disabled = true;\r\n      appChatsManager.createChat(title, this.userIds).then((chatId) => {\r\n        if(this.uploadAvatar) {\r\n          this.uploadAvatar().then((inputFile) => {\r\n            appChatsManager.editPhoto(chatId, inputFile);\r\n          });\r\n        }\r\n        \r\n        appSidebarLeft.removeTabFromHistory(this);\r\n        appSidebarLeft.selectTab(0);\r\n      });\r\n    });\r\n\r\n    const chatsContainer = document.createElement('div');\r\n    chatsContainer.classList.add('chatlist-container');\r\n    chatsContainer.append(this.searchGroup.container);\r\n\r\n    this.content.append(this.nextBtn);\r\n    this.scrollable.append(this.avatarEdit.container, inputWrapper, chatsContainer);\r\n  }\r\n\r\n  public onCloseAfterTimeout() {\r\n    this.searchGroup.clear();\r\n    this.avatarEdit.clear();\r\n    this.uploadAvatar = null;\r\n    this.groupNameInputField.value = '';\r\n    this.nextBtn.disabled = false;\r\n  }\r\n\r\n  public open(userIds: number[]) {\r\n    const result = super.open();\r\n    result.then(() => {\r\n      this.userIds = userIds;\r\n\r\n      this.userIds.forEach(userId => {\r\n        let {dom} = appDialogsManager.addDialogNew({\r\n          dialog: userId,\r\n          container: this.searchGroup.list,\r\n          drawStatus: false,\r\n          rippleEnabled: false,\r\n          avatarSize: 48\r\n        });\r\n\r\n        dom.lastMessageSpan.append(appUsersManager.getUserStatusString(userId));\r\n      });\r\n\r\n      this.searchGroup.nameEl.textContent = '';\r\n      this.searchGroup.nameEl.append(i18n('Members', [this.userIds.length]));\r\n      this.searchGroup.setActive();\r\n    });\r\n    \r\n    return result;\r\n  }\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\nimport appMessagesManager from \"../lib/appManagers/appMessagesManager\";\r\nimport appDocsManager, {MyDocument} from \"../lib/appManagers/appDocsManager\";\r\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\r\nimport { isSafari } from \"../helpers/userAgent\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport appDownloadManager from \"../lib/appManagers/appDownloadManager\";\r\n\r\n// TODO: если удалить сообщение, и при этом аудио будет играть - оно не остановится, и можно будет по нему перейти вникуда\r\n\r\n// TODO: Safari: проверить стрим, включить его и сразу попробовать включить видео или другую песню\r\n// TODO: Safari: попробовать замаскировать подгрузку последнего чанка\r\n// TODO: Safari: пофиксить момент, когда заканчивается песня и пытаешься включить её заново - прогресс сразу в конце\r\n\r\ntype HTMLMediaElement = HTMLAudioElement | HTMLVideoElement;\r\n\r\ntype MediaType = 'voice' | 'audio' | 'round';\r\n\r\nclass AppMediaPlaybackController {\r\n  private container: HTMLElement;\r\n  private media: {\r\n    [peerId: string]: {\r\n      [mid: string]: HTMLMediaElement\r\n    }\r\n  } = {};\r\n  private playingMedia: HTMLMediaElement;\r\n\r\n  private waitingMediaForLoad: {\r\n    [peerId: string]: {\r\n      [mid: string]: CancellablePromise<void>\r\n    }\r\n  } = {};\r\n  \r\n  public willBePlayedMedia: HTMLMediaElement;\r\n\r\n  private currentPeerId: number;\r\n  private prevMid: number;\r\n  private nextMid: number;\r\n\r\n  constructor() {\r\n    this.container = document.createElement('div');\r\n    //this.container.style.cssText = 'position: absolute; top: -10000px; left: -10000px;';\r\n    this.container.style.cssText = 'display: none;';\r\n    document.body.append(this.container);\r\n  }\r\n\r\n  public addMedia(peerId: number, doc: MyDocument, mid: number, autoload = true): HTMLMediaElement {\r\n    const storage = this.media[peerId] ?? (this.media[peerId] = {});\r\n    if(storage[mid]) return storage[mid];\r\n\r\n    const media = document.createElement(doc.type === 'round' ? 'video' : 'audio');\r\n    //const source = document.createElement('source');\r\n    //source.type = doc.type === 'voice' && !opusDecodeController.isPlaySupported() ? 'audio/wav' : doc.mime_type;\r\n\r\n    if(doc.type === 'round') {\r\n      media.setAttribute('playsinline', 'true');\r\n      //media.muted = true;\r\n    }\r\n\r\n    media.dataset.mid = '' + mid;\r\n    media.dataset.type = doc.type;\r\n    \r\n    //media.autoplay = true;\r\n    media.volume = 1;\r\n    //media.append(source);\r\n\r\n    this.container.append(media);\r\n\r\n    media.addEventListener('playing', () => {\r\n      this.currentPeerId = peerId;\r\n\r\n      //console.log('appMediaPlaybackController: video playing', this.currentPeerId, this.playingMedia, media);\r\n\r\n      if(this.playingMedia !== media) {\r\n        if(this.playingMedia && !this.playingMedia.paused) {\r\n          this.playingMedia.pause();\r\n        }\r\n  \r\n        this.playingMedia = media;\r\n        this.loadSiblingsMedia(peerId, doc.type as MediaType, mid);\r\n      }\r\n\r\n      // audio_pause не успеет сработать без таймаута\r\n      setTimeout(() => {\r\n        rootScope.dispatchEvent('audio_play', {peerId, doc, mid});\r\n      }, 0);\r\n    });\r\n\r\n    media.addEventListener('pause', this.onPause);\r\n    media.addEventListener('ended', this.onEnded);\r\n    \r\n    const onError = (e: Event) => {\r\n      //console.log('appMediaPlaybackController: video onError', e);\r\n\r\n      if(this.nextMid === mid) {\r\n        this.loadSiblingsMedia(peerId, doc.type as MediaType, mid).then(() => {\r\n          if(this.nextMid && storage[this.nextMid]) {\r\n            storage[this.nextMid].play();\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    media.addEventListener('error', onError);\r\n\r\n    const deferred = deferredPromise<void>();\r\n    if(autoload) {\r\n      deferred.resolve();\r\n    } else {\r\n      const waitingStorage = this.waitingMediaForLoad[peerId] ?? (this.waitingMediaForLoad[peerId] = {});\r\n      waitingStorage[mid] = deferred;\r\n    }\r\n\r\n    deferred.then(() => {\r\n      //media.autoplay = true;\r\n      //console.log('will set media url:', media, doc, doc.type, doc.url);\r\n\r\n      ((!doc.supportsStreaming ? appDocsManager.downloadDoc(doc) : Promise.resolve()) as Promise<any>).then(() => {\r\n        if(doc.type === 'audio' && doc.supportsStreaming && isSafari) {\r\n          this.handleSafariStreamable(media);\r\n        }\r\n  \r\n        const cacheContext = appDownloadManager.getCacheContext(doc);\r\n        media.src = cacheContext.url;\r\n      });\r\n    }, onError);\r\n    \r\n    return storage[mid] = media;\r\n  }\r\n\r\n  // safari подгрузит последний чанк и песня включится,\r\n  // при этом этот чанк нельзя руками отдать из SW, потому что браузер тогда теряется\r\n  private handleSafariStreamable(media: HTMLMediaElement) {\r\n    media.addEventListener('play', () => {\r\n      /* if(media.readyState === 4) { // https://developer.mozilla.org/ru/docs/Web/API/XMLHttpRequest/readyState\r\n        return;\r\n      } */\r\n\r\n      //media.volume = 0;\r\n      const currentTime = media.currentTime;\r\n      //this.setSafariBuffering(media, true);\r\n\r\n      media.addEventListener('progress', () => {\r\n        media.currentTime = media.duration - 1;\r\n\r\n        media.addEventListener('progress', () => {\r\n          media.currentTime = currentTime;\r\n          //media.volume = 1;\r\n          //this.setSafariBuffering(media, false);\r\n\r\n          if(!media.paused) {\r\n            media.play()/* .catch(() => {}) */;\r\n          }\r\n        }, {once: true});\r\n      }, {once: true});\r\n    }/* , {once: true} */);\r\n  }\r\n\r\n  public resolveWaitingForLoadMedia(peerId: number, mid: number) {\r\n    const storage = this.waitingMediaForLoad[peerId] ?? (this.waitingMediaForLoad[peerId] = {});\r\n    const promise = storage[mid];\r\n    if(promise) {\r\n      promise.resolve();\r\n      delete storage[mid];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Only for audio\r\n   */\r\n  public isSafariBuffering(media: HTMLMediaElement) {\r\n    /// @ts-ignore\r\n    return !!media.safariBuffering;\r\n  }\r\n\r\n  private setSafariBuffering(media: HTMLMediaElement, value: boolean) {\r\n    // @ts-ignore\r\n    media.safariBuffering = value;\r\n  }\r\n\r\n  onPause = (e?: Event) => {\r\n    /* const target = e.target as HTMLMediaElement;\r\n    if(!isInDOM(target)) {\r\n      this.container.append(target);\r\n      target.play();\r\n      return;\r\n    } */\r\n\r\n    rootScope.dispatchEvent('audio_pause');\r\n  };\r\n\r\n  onEnded = (e?: Event) => {\r\n    this.onPause(e);\r\n\r\n    //console.log('on media end');\r\n\r\n    if(this.nextMid) {\r\n      const media = this.media[this.currentPeerId][this.nextMid];\r\n\r\n      /* if(isSafari) {\r\n        media.autoplay = true;\r\n      } */\r\n\r\n      this.resolveWaitingForLoadMedia(this.currentPeerId, this.nextMid);\r\n\r\n      setTimeout(() => {\r\n        media.play()//.catch(() => {});\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  private loadSiblingsMedia(peerId: number, type: MediaType, mid: number) {\r\n    const media = this.playingMedia;\r\n    this.prevMid = this.nextMid = 0;\r\n\r\n    return appMessagesManager.getSearch({\r\n      peerId, \r\n      query: '', \r\n      inputFilter: {\r\n        //_: type === 'audio' ? 'inputMessagesFilterMusic' : (type === 'round' ? 'inputMessagesFilterRoundVideo' : 'inputMessagesFilterVoice')\r\n        _: type === 'audio' ? 'inputMessagesFilterMusic' : 'inputMessagesFilterRoundVoice'\r\n      },\r\n      maxId: mid,\r\n      limit: 3,\r\n      backLimit: 2\r\n    }).then(value => {\r\n      if(this.playingMedia !== media) {\r\n        return;\r\n      }\r\n \r\n      for(const {mid: m} of value.history) {\r\n        if(m > mid) {\r\n          this.nextMid = m;\r\n        } else if(m < mid) {\r\n          this.prevMid = m;\r\n          break;\r\n        }\r\n      }\r\n\r\n      [this.prevMid, this.nextMid].filter(Boolean).forEach(mid => {\r\n        const message = appMessagesManager.getMessageByPeer(peerId, mid);\r\n        this.addMedia(peerId, message.media.document, mid, false);\r\n      });\r\n      \r\n      //console.log('loadSiblingsAudio', audio, type, mid, value, this.prevMid, this.nextMid);\r\n    });\r\n  }\r\n  \r\n  public toggle() {\r\n    if(!this.playingMedia) return;\r\n\r\n    if(this.playingMedia.paused) {\r\n      this.playingMedia.play();\r\n    } else {\r\n      this.playingMedia.pause();\r\n    }\r\n  }\r\n\r\n  public pause() {\r\n    if(!this.playingMedia || this.playingMedia.paused) return;\r\n    this.playingMedia.pause();\r\n  }\r\n\r\n  public willBePlayed(media: HTMLMediaElement) {\r\n    this.willBePlayedMedia = media;\r\n  }\r\n}\r\n\r\nconst appMediaPlaybackController = new AppMediaPlaybackController();\r\nMOUNT_CLASS_TO.appMediaPlaybackController = appMediaPlaybackController;\r\nexport default appMediaPlaybackController;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type GrabEvent = {x: number, y: number, isTouch?: boolean};\r\n\r\nexport default function attachGrabListeners(element: HTMLElement, onStart: (position: GrabEvent) => void, onMove: (position: GrabEvent) => void, onEnd: (position: GrabEvent) => void) {\r\n  // * Mouse\r\n  const onMouseMove = (event: MouseEvent) => {\r\n    onMove({x: event.pageX, y: event.pageY});\r\n  };\r\n\r\n  const onMouseUp = (event: MouseEvent) => {\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    element.addEventListener('mousedown', onMouseDown, {once: true});\r\n    onEnd && onEnd({x: event.pageX, y: event.pageY});\r\n  };\r\n\r\n  const onMouseDown = (event: MouseEvent) => {\r\n    if(event.button !== 0) {\r\n      element.addEventListener('mousedown', onMouseDown, {once: true});\r\n      return;\r\n    }\r\n\r\n    onStart({x: event.pageX, y: event.pageY});\r\n    onMouseMove(event);\r\n\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp, {once: true});\r\n  };\r\n\r\n  element.addEventListener('mousedown', onMouseDown, {once: true});\r\n\r\n  // * Touch\r\n  const onTouchMove = (event: TouchEvent) => {\r\n    event.preventDefault();\r\n    onMove({x: event.touches[0].clientX, y: event.touches[0].clientY, isTouch: true});\r\n  };\r\n\r\n  const onTouchEnd = (event: TouchEvent) => {\r\n    document.removeEventListener('touchmove', onTouchMove);\r\n    element.addEventListener('touchstart', onTouchStart, {passive: false, once: true});\r\n    onEnd && onEnd({x: event.touches[0].clientX, y: event.touches[0].clientY, isTouch: true});\r\n  };\r\n\r\n  const onTouchStart = (event: TouchEvent) => {\r\n    onStart({x: event.touches[0].clientX, y: event.touches[0].clientY, isTouch: true});\r\n    onTouchMove(event);\r\n\r\n    document.addEventListener('touchmove', onTouchMove, {passive: false});\r\n    document.addEventListener('touchend', onTouchEnd, {passive: false, once: true});\r\n  };\r\n\r\n  element.addEventListener('touchstart', onTouchStart, {passive: false, once: true});\r\n\r\n  return () => {\r\n    element.removeEventListener('mousedown', onMouseDown);\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseup', onMouseUp);\r\n\r\n    element.removeEventListener('touchstart', onTouchStart);\r\n    document.removeEventListener('touchmove', onTouchMove);\r\n    document.removeEventListener('touchend', onTouchEnd);\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { clamp } from \"../helpers/number\";\r\nimport attachGrabListeners, { GrabEvent } from \"../helpers/dom/attachGrabListeners\";\r\n\r\nexport default class RangeSelector {\r\n  public container: HTMLDivElement;\r\n  protected filled: HTMLDivElement;\r\n  protected seek: HTMLInputElement;\r\n\r\n  public mousedown = false;\r\n  protected rect: DOMRect;\r\n  protected _removeListeners: () => void;\r\n\r\n  private events: Partial<{\r\n    //onMouseMove: ProgressLine['onMouseMove'],\r\n    onMouseDown: RangeSelector['onMouseDown'],\r\n    onMouseUp: RangeSelector['onMouseUp'],\r\n    onScrub: (value: number) => void\r\n  }> = {};\r\n\r\n  protected decimals: number;\r\n\r\n  constructor(protected step: number, protected value: number, protected min: number, protected max: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('progress-line');\r\n\r\n    this.filled = document.createElement('div');\r\n    this.filled.classList.add('progress-line__filled');\r\n\r\n    const seek = this.seek = document.createElement('input');\r\n    seek.classList.add('progress-line__seek');\r\n    //seek.setAttribute('max', '0');\r\n    seek.type = 'range';\r\n    seek.step = '' + step;\r\n    seek.min = '' + this.min;\r\n    seek.max = '' + this.max;\r\n    seek.value = '' + value;\r\n\r\n    if(value) {\r\n      this.setProgress(value);\r\n    }\r\n\r\n    const stepStr = '' + this.step;\r\n    const index = stepStr.indexOf('.');\r\n    this.decimals = index === -1 ? 0 : stepStr.length - index - 1;\r\n\r\n    //this.setListeners();\r\n\r\n    this.container.append(this.filled, seek);\r\n  }\r\n\r\n  public setHandlers(events: RangeSelector['events']) {\r\n    this.events = events;\r\n  }\r\n\r\n  protected onMouseMove = (event: GrabEvent) => {\r\n    this.scrub(event);\r\n  };\r\n\r\n  protected onMouseDown = (event: GrabEvent) => {\r\n    this.rect = this.container.getBoundingClientRect();\r\n    this.mousedown = true;\r\n    this.scrub(event);\r\n    this.events?.onMouseDown && this.events.onMouseDown(event);\r\n  };\r\n\r\n  protected onMouseUp = (event: GrabEvent) => {\r\n    this.mousedown = false;\r\n    this.events?.onMouseUp && this.events.onMouseUp(event);\r\n  };\r\n\r\n  public setListeners() {\r\n    this.seek.addEventListener('input', this.onInput);\r\n    this._removeListeners = attachGrabListeners(this.container, this.onMouseDown, this.onMouseMove, this.onMouseUp);\r\n  }\r\n\r\n  public onInput = () => {\r\n    const value = +this.seek.value;\r\n    this.setFilled(value);\r\n    this.events?.onScrub && this.events.onScrub(value);\r\n  };\r\n\r\n  public setProgress(value: number) {\r\n    this.setFilled(value);\r\n    this.seek.value = '' + value;\r\n  }\r\n\r\n  public setFilled(value: number) {\r\n    let percents = (value - this.min) / (this.max - this.min);\r\n    percents = clamp(percents, 0, 1);\r\n    \r\n    this.filled.style.width = (percents * 100) + '%';\r\n    //this.filled.style.transform = 'scaleX(' + scaleX + ')';\r\n  }\r\n\r\n  protected scrub(event: GrabEvent) {\r\n    const offsetX = clamp(event.x - this.rect.left, 0, this.rect.width);\r\n\r\n    let value = this.min + (offsetX / this.rect.width * (this.max - this.min));\r\n\r\n    if((value - this.min) < ((this.max - this.min) / 2)) {\r\n      value -= this.step / 10;\r\n    }\r\n    \r\n    value = +value.toFixed(this.decimals);\r\n    value = clamp(value, this.min, this.max);\r\n\r\n    //this.seek.value = '' + value;\r\n    //this.onInput();\r\n\r\n    this.setProgress(value);\r\n    this.events?.onScrub && this.events.onScrub(value);\r\n\r\n    return value;\r\n  }\r\n\r\n  public removeListeners() {\r\n    if(this._removeListeners) {\r\n      this._removeListeners();\r\n      this._removeListeners = null;\r\n    }\r\n\r\n    this.seek.removeEventListener('input', this.onInput);\r\n    \r\n    this.events = {};\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appMediaPlaybackController from \"../components/appMediaPlaybackController\";\r\nimport { isAppleMobile } from \"../helpers/userAgent\";\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport RangeSelector from \"../components/rangeSelector\";\r\nimport { onVideoLoad } from \"../helpers/files\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\n\r\nexport class MediaProgressLine extends RangeSelector {\r\n  private filledLoad: HTMLDivElement;\r\n  \r\n  private stopAndScrubTimeout = 0;\r\n  private progressRAF = 0;\r\n\r\n  constructor(private media: HTMLAudioElement | HTMLVideoElement, private streamable = false) {\r\n    super(1000 / 60 / 1000, 0, 0, 1);\r\n\r\n    if(streamable) {\r\n      this.filledLoad = document.createElement('div');\r\n      this.filledLoad.classList.add('progress-line__filled', 'progress-line__loaded');\r\n      this.container.prepend(this.filledLoad);\r\n      //this.setLoadProgress();\r\n    }\r\n\r\n    if(!media.paused || media.currentTime > 0) {\r\n      this.onPlay();\r\n    }\r\n\r\n    this.setSeekMax();\r\n    this.setListeners();\r\n    this.setHandlers({\r\n      onMouseDown: () => {\r\n        //super.onMouseDown(e);\r\n    \r\n        //Таймер для того, чтобы стопать видео, если зажал мышку и не отпустил клик\r\n        if(this.stopAndScrubTimeout) { // возможно лишнее\r\n          clearTimeout(this.stopAndScrubTimeout);\r\n        }\r\n    \r\n        this.stopAndScrubTimeout = window.setTimeout(() => {\r\n          !this.media.paused && this.media.pause();\r\n          this.stopAndScrubTimeout = 0;\r\n        }, 150);\r\n      },\r\n\r\n      onMouseUp: () => {\r\n        //super.onMouseUp(e);\r\n    \r\n        if(this.stopAndScrubTimeout) {\r\n          clearTimeout(this.stopAndScrubTimeout);\r\n          this.stopAndScrubTimeout = 0;\r\n        }\r\n    \r\n        this.media.paused && this.media.play();\r\n      }\r\n    })\r\n  }\r\n\r\n  onLoadedData = () => {\r\n    this.max = this.media.duration;\r\n    this.seek.setAttribute('max', '' + this.max);\r\n  };\r\n\r\n  onEnded = () => {\r\n    this.setProgress();\r\n  };\r\n\r\n  onPlay = () => {\r\n    let r = () => {\r\n      this.setProgress();\r\n\r\n      this.progressRAF = this.media.paused ? 0 : window.requestAnimationFrame(r);\r\n    };\r\n\r\n    if(this.progressRAF) {\r\n      window.cancelAnimationFrame(this.progressRAF);\r\n    }\r\n\r\n    if(this.streamable) {\r\n      this.setLoadProgress();\r\n    }\r\n\r\n    this.progressRAF = window.requestAnimationFrame(r);\r\n  };\r\n\r\n  onProgress = (e: Event) => {\r\n    this.setLoadProgress();\r\n  };\r\n\r\n  protected scrub(e: MouseEvent) {\r\n    const scrubTime = super.scrub(e);\r\n    this.media.currentTime = scrubTime;\r\n    return scrubTime;\r\n  }\r\n\r\n  protected setLoadProgress() {\r\n    if(appMediaPlaybackController.isSafariBuffering(this.media)) return;\r\n    const buf = this.media.buffered;\r\n    const numRanges = buf.length;\r\n\r\n    const currentTime = this.media.currentTime;\r\n    let nearestStart = 0, end = 0;\r\n    for(let i = 0; i < numRanges; ++i) {\r\n      const start = buf.start(i);\r\n      if(currentTime >= start && start >= nearestStart) {\r\n        nearestStart = start;\r\n        end = buf.end(i);\r\n      }\r\n\r\n      //console.log('onProgress range:', i, buf.start(i), buf.end(i), this.media);\r\n    }\r\n\r\n    //console.log('onProgress correct range:', nearestStart, end, this.media);\r\n\r\n    const percents = this.media.duration ? end / this.media.duration : 0;\r\n    this.filledLoad.style.width = (percents * 100) + '%';\r\n    //this.filledLoad.style.transform = 'scaleX(' + percents + ')';\r\n  }\r\n\r\n  protected setSeekMax() {\r\n    this.max = this.media.duration || 0;\r\n    if(this.max > 0) {\r\n      this.onLoadedData();\r\n    } else {\r\n      this.media.addEventListener('loadeddata', this.onLoadedData);\r\n    }\r\n  }\r\n\r\n  public setProgress() {\r\n    if(appMediaPlaybackController.isSafariBuffering(this.media)) return;\r\n    const currentTime = this.media.currentTime;\r\n\r\n    super.setProgress(currentTime);\r\n  }\r\n\r\n  public setListeners() {\r\n    super.setListeners();\r\n    this.media.addEventListener('ended', this.onEnded);\r\n    this.media.addEventListener('play', this.onPlay);\r\n    this.streamable && this.media.addEventListener('progress', this.onProgress);\r\n  }\r\n\r\n  public removeListeners() {\r\n    super.removeListeners();\r\n\r\n    this.media.removeEventListener('loadeddata', this.onLoadedData);\r\n    this.media.removeEventListener('ended', this.onEnded);\r\n    this.media.removeEventListener('play', this.onPlay);\r\n    this.streamable && this.media.removeEventListener('progress', this.onProgress);\r\n\r\n    if(this.stopAndScrubTimeout) {\r\n      clearTimeout(this.stopAndScrubTimeout);\r\n    }\r\n\r\n    if(this.progressRAF) {\r\n      window.cancelAnimationFrame(this.progressRAF);\r\n    }\r\n  }\r\n}\r\n\r\nlet lastVolume = 1, muted = !lastVolume;\r\nexport default class VideoPlayer {\r\n  private wrapper: HTMLDivElement;\r\n  private progress: MediaProgressLine;\r\n  private skin: string;\r\n\r\n  private listenerSetter: ListenerSetter;\r\n\r\n  /* private videoParent: HTMLElement;\r\n  private videoWhichChild: number; */\r\n\r\n  constructor(private video: HTMLVideoElement, play = false, streamable = false, duration?: number) {\r\n    this.wrapper = document.createElement('div');\r\n    this.wrapper.classList.add('ckin__player');\r\n\r\n    this.listenerSetter = new ListenerSetter();\r\n\r\n    video.parentNode.insertBefore(this.wrapper, video);\r\n    this.wrapper.appendChild(video);\r\n\r\n    this.skin = video.dataset.ckin ?? 'default';\r\n\r\n    this.stylePlayer(duration);\r\n\r\n    if(this.skin === 'default') {\r\n      const controls = this.wrapper.querySelector('.default__controls.ckin__controls') as HTMLDivElement;\r\n      this.progress = new MediaProgressLine(video, streamable);\r\n      controls.prepend(this.progress.container);\r\n    }\r\n\r\n    if(play/*  && video.paused */) {\r\n      const promise = video.play();\r\n      promise.catch((err: Error) => {\r\n        if(err.name === 'NotAllowedError') {\r\n          video.muted = true;\r\n          video.autoplay = true;\r\n          video.play();\r\n        }\r\n      }).finally(() => { // due to autoplay, play will not call\r\n        this.wrapper.classList.toggle('is-playing', !this.video.paused);\r\n      });\r\n      //(this.wrapper.querySelector('.toggle') as HTMLButtonElement).click();\r\n    }\r\n  }\r\n\r\n  private stylePlayer(initDuration: number) {\r\n    const {wrapper: player, video, skin} = this;\r\n\r\n    player.classList.add(skin);\r\n  \r\n    const html = this.buildControls();\r\n    player.insertAdjacentHTML('beforeend', html);\r\n    let timeDuration: HTMLElement;\r\n  \r\n    if(skin === 'default') {\r\n      const toggle = player.querySelectorAll('.toggle') as NodeListOf<HTMLElement>;\r\n      const fullScreenButton = player.querySelector('.fullscreen') as HTMLElement;\r\n      const timeElapsed = player.querySelector('#time-elapsed');\r\n      timeDuration = player.querySelector('#time-duration') as HTMLElement;\r\n      timeDuration.innerHTML = String(video.duration | 0).toHHMMSS();\r\n\r\n      const volumeDiv = document.createElement('div');\r\n      volumeDiv.classList.add('player-volume');\r\n\r\n      volumeDiv.innerHTML = `\r\n      <svg class=\"player-volume__icon\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"></svg>\r\n      `;\r\n      const volumeSvg = volumeDiv.firstElementChild as SVGSVGElement;\r\n\r\n      const onMuteClick = (e?: Event) => {\r\n        e && cancelEvent(e);\r\n        video.muted = !video.muted;\r\n      };\r\n\r\n      this.listenerSetter.add(volumeSvg, 'click', onMuteClick);\r\n\r\n      const volumeProgress = new RangeSelector(0.01, 1, 0, 1);\r\n      volumeProgress.setListeners();\r\n      volumeProgress.setHandlers({\r\n        onScrub: currentTime => {\r\n          const value = Math.max(Math.min(currentTime, 1), 0);\r\n\r\n          //console.log('volume scrub:', currentTime, value);\r\n\r\n          video.muted = false;\r\n          video.volume = value;\r\n        }\r\n      });\r\n      volumeDiv.append(volumeProgress.container);\r\n\r\n      const setVolume = () => {\r\n        const volume = video.volume;\r\n        let d: string;\r\n        if(!volume || video.muted) {\r\n          d = `M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z`;\r\n        } else if(volume > .5) {\r\n          d = `M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z`;\r\n        } else if(volume > 0 && volume < .25) {\r\n          d = `M7 9v6h4l5 5V4l-5 5H7z`;\r\n        } else {\r\n          d = `M18.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z`;\r\n        }\r\n\r\n        try {\r\n          volumeSvg.innerHTML = `<path d=\"${d}\"></path>`;\r\n        } catch(err) {}\r\n\r\n        if(!volumeProgress.mousedown) {\r\n          volumeProgress.setProgress(video.muted ? 0 : volume);\r\n        }\r\n      };\r\n      \r\n      // не вызовется повторно если на 1 установить 1\r\n      this.listenerSetter.add(video, 'volumechange', () => {\r\n        muted = video.muted;\r\n        lastVolume = video.volume;\r\n        setVolume();\r\n      });\r\n\r\n      video.volume = lastVolume;\r\n      video.muted = muted;\r\n\r\n      setVolume();\r\n\r\n      // volume end\r\n\r\n      const leftControls = player.querySelector('.left-controls');\r\n      leftControls.insertBefore(volumeDiv, timeElapsed.parentElement);\r\n\r\n      Array.from(toggle).forEach((button) => {\r\n        this.listenerSetter.add(button, 'click', () => {\r\n          this.togglePlay();\r\n        });\r\n      });\r\n\r\n      this.listenerSetter.add(video, 'click', () => {\r\n        if(!isTouchSupported) {\r\n          this.togglePlay();\r\n        }\r\n      });\r\n\r\n      let showControlsTimeout = 0;\r\n\r\n      const showControls = () => {\r\n        if(showControlsTimeout) clearTimeout(showControlsTimeout);\r\n        else player.classList.add('show-controls');\r\n\r\n        showControlsTimeout = window.setTimeout(() => {\r\n          showControlsTimeout = 0;\r\n          player.classList.remove('show-controls');\r\n        }, 3e3);\r\n      };\r\n\r\n      if(isTouchSupported) {\r\n        this.listenerSetter.add(player, 'click', () => {\r\n          showControls();\r\n        });\r\n\r\n        this.listenerSetter.add(player, 'touchstart', () => {\r\n          player.classList.add('show-controls');\r\n          clearTimeout(showControlsTimeout);\r\n        });\r\n\r\n        this.listenerSetter.add(player, 'touchend', () => {\r\n          if(player.classList.contains('is-playing')) {\r\n            showControls();\r\n          }\r\n        });\r\n      } else {\r\n        this.listenerSetter.add(this.wrapper, 'mousemove', () => {\r\n          showControls();\r\n        });\r\n\r\n        this.listenerSetter.add(document, 'keydown', (e: KeyboardEvent) => {\r\n          if(e.code === 'KeyF') {\r\n            this.toggleFullScreen(fullScreenButton);\r\n          } else if(e.code === 'KeyM') {\r\n            onMuteClick();\r\n          } else if(e.code === 'Space') {\r\n            this.togglePlay();\r\n          }\r\n        });\r\n      }\r\n  \r\n      /* player.addEventListener('click', (e) => {\r\n        if(e.target !== player) {\r\n          return;\r\n        }\r\n\r\n        this.togglePlay();\r\n      }); */\r\n  \r\n      /* video.addEventListener('play', () => {\r\n      }); */\r\n\r\n      this.listenerSetter.add(video, 'dblclick', () => {\r\n        if(!isTouchSupported) {\r\n          this.toggleFullScreen(fullScreenButton);\r\n        }\r\n      });\r\n\r\n      this.listenerSetter.add(fullScreenButton, 'click', (e) => {\r\n        this.toggleFullScreen(fullScreenButton);\r\n      });\r\n\r\n      'webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange'.split(' ').forEach(eventName => {\r\n        this.listenerSetter.add(player, eventName, this.onFullScreen, false);\r\n      });\r\n\r\n      this.listenerSetter.add(video, 'timeupdate', () => {\r\n        timeElapsed.innerHTML = String(video.currentTime | 0).toHHMMSS();\r\n      });\r\n\r\n      this.listenerSetter.add(video, 'play', () => {\r\n        this.wrapper.classList.add('played');\r\n      }, {once: true});\r\n    }\r\n\r\n    this.listenerSetter.add(video, 'play', () => {\r\n      this.wrapper.classList.add('is-playing');\r\n    });\r\n\r\n    this.listenerSetter.add(video, 'pause', () => {\r\n      this.wrapper.classList.remove('is-playing');\r\n    });\r\n  \r\n    if(video.duration || initDuration) {\r\n      timeDuration.innerHTML = String(Math.round(video.duration || initDuration)).toHHMMSS();\r\n    } else {\r\n      onVideoLoad(video).then(() => {\r\n        timeDuration.innerHTML = String(Math.round(video.duration)).toHHMMSS();\r\n      });\r\n    }\r\n  }\r\n\r\n  public togglePlay() {\r\n    this.video[this.video.paused ? 'play' : 'pause']();\r\n  }\r\n\r\n  private buildControls() {\r\n    const skin = this.skin;\r\n    if(skin === 'default') {\r\n      return `\r\n      <button class=\"${skin}__button--big toggle tgico\" title=\"Toggle Play\"></button>\r\n      <div class=\"${skin}__gradient-bottom ckin__controls\"></div>\r\n      <div class=\"${skin}__controls ckin__controls\">\r\n        <div class=\"bottom-controls\">\r\n          <div class=\"left-controls\">\r\n            <button class=\"${skin}__button toggle tgico\" title=\"Toggle Video\"></button>\r\n            <div class=\"time\">\r\n              <time id=\"time-elapsed\">0:00</time>\r\n              <span> / </span>\r\n              <time id=\"time-duration\">0:00</time>\r\n            </div>\r\n          </div>\r\n          <div class=\"right-controls\">\r\n            <button class=\"${skin}__button fullscreen tgico-fullscreen\" title=\"Full Screen\"></button>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n    }\r\n  }\r\n\r\n  public static isFullScreen(): boolean {\r\n    // @ts-ignore\r\n    return !!(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement);\r\n  }\r\n  \r\n  public toggleFullScreen(fullScreenButton: HTMLElement) {\r\n    // alternative standard method\r\n    const player = this.wrapper;\r\n\r\n    // * https://caniuse.com/#feat=fullscreen\r\n    if(isAppleMobile) {\r\n      const video = this.video as any;\r\n      video.webkitEnterFullscreen();\r\n      video.enterFullscreen();\r\n      return;\r\n    }\r\n    \r\n    if(!VideoPlayer.isFullScreen()) {\r\n      player.classList.add('ckin__fullscreen');\r\n\r\n      /* const videoParent = this.video.parentElement;\r\n      const videoWhichChild = whichChild(this.video);\r\n      const needVideoRemount = videoParent !== player;\r\n\r\n      if(needVideoRemount) {\r\n        this.videoParent = videoParent;\r\n        this.videoWhichChild = videoWhichChild;\r\n        player.prepend(this.video);\r\n      } */\r\n  \r\n      if(player.requestFullscreen) {\r\n        player.requestFullscreen();\r\n        // @ts-ignore\r\n      } else if(player.mozRequestFullScreen) {\r\n        // @ts-ignore\r\n        player.mozRequestFullScreen(); // Firefox\r\n        // @ts-ignore\r\n      } else if(player.webkitRequestFullscreen) {\r\n        // @ts-ignore\r\n        player.webkitRequestFullscreen(); // Chrome and Safari\r\n        // @ts-ignore\r\n      } else if(player.msRequestFullscreen) {\r\n        // @ts-ignore\r\n        player.msRequestFullscreen();\r\n      }\r\n  \r\n      fullScreenButton.classList.remove('tgico-fullscreen');\r\n      fullScreenButton.classList.add('tgico-smallscreen');\r\n      fullScreenButton.setAttribute('title', 'Exit Full Screen');\r\n    } else {\r\n      player.classList.remove('ckin__fullscreen');\r\n\r\n      /* if(this.videoParent) {\r\n        const {videoWhichChild, videoParent} = this;\r\n        if(!videoWhichChild) {\r\n          videoParent.prepend(this.video);\r\n        } else {\r\n          videoParent.insertBefore(this.video, videoParent.children[videoWhichChild]);\r\n        }\r\n\r\n        this.videoParent = null;\r\n        this.videoWhichChild = -1;\r\n      } */\r\n  \r\n      // @ts-ignore\r\n      if(document.cancelFullScreen) {\r\n        // @ts-ignore\r\n        document.cancelFullScreen();\r\n        // @ts-ignore\r\n      } else if(document.mozCancelFullScreen) {\r\n        // @ts-ignore\r\n        document.mozCancelFullScreen();\r\n        // @ts-ignore\r\n      } else if(document.webkitCancelFullScreen) {\r\n        // @ts-ignore\r\n        document.webkitCancelFullScreen();\r\n        // @ts-ignore\r\n      } else if(document.msExitFullscreen) {\r\n        // @ts-ignore\r\n        document.msExitFullscreen();\r\n      }\r\n  \r\n      fullScreenButton.classList.remove('tgico-smallscreen');\r\n      fullScreenButton.classList.add('tgico-fullscreen');\r\n      fullScreenButton.setAttribute('title', 'Full Screen');\r\n    }\r\n  }\r\n  \r\n  onFullScreen = () => {\r\n    // @ts-ignore\r\n    const isFullscreenNow = document.webkitFullscreenElement !== null;\r\n    if(!isFullscreenNow) {\r\n      this.wrapper.classList.remove('ckin__fullscreen');\r\n    }\r\n  };\r\n\r\n  public removeListeners() {\r\n    this.listenerSetter.removeAll();\r\n    this.progress.removeListeners();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDocsManager, {MyDocument} from \"../lib/appManagers/appDocsManager\";\r\nimport { RichTextProcessor } from \"../lib/richtextprocessor\";\r\nimport { formatDate } from \"./wrappers\";\r\nimport ProgressivePreloader from \"./preloader\";\r\nimport { MediaProgressLine } from \"../lib/mediaPlayer\";\r\nimport appMediaPlaybackController from \"./appMediaPlaybackController\";\r\nimport { DocumentAttribute } from \"../layer\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { isSafari } from \"../helpers/userAgent\";\r\nimport appMessagesManager from \"../lib/appManagers/appMessagesManager\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport './middleEllipsis';\r\nimport { SearchSuperContext } from \"./appSearchSuper.\";\r\nimport { formatDateAccordingToToday } from \"../helpers/date\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent, detachClickEvent } from \"../helpers/dom/clickEvent\";\r\n\r\nrootScope.addEventListener('messages_media_read', e => {\r\n  const {mids, peerId} = e;\r\n\r\n  mids.forEach(mid => {\r\n    (Array.from(document.querySelectorAll('audio-element[message-id=\"' + mid + '\"][peer-id=\"' + peerId + '\"]')) as AudioElement[]).forEach(elem => {\r\n      //console.log('updating avatar:', elem);\r\n      elem.classList.remove('is-unread');\r\n    });\r\n  });\r\n});\r\n\r\n// https://github.com/LonamiWebs/Telethon/blob/4393ec0b83d511b6a20d8a20334138730f084375/telethon/utils.py#L1285\r\nexport function decodeWaveform(waveform: Uint8Array | number[]) {\r\n  if(!(waveform instanceof Uint8Array)) {\r\n    waveform = new Uint8Array(waveform);\r\n  }\r\n\r\n  const bitCount = waveform.length * 8;\r\n  const valueCount = bitCount / 5 | 0;\r\n  if(!valueCount) {\r\n    return new Uint8Array([]);\r\n  }\r\n\r\n  let result: Uint8Array;\r\n  try {\r\n    const dataView = new DataView(waveform.buffer);\r\n    result = new Uint8Array(valueCount);\r\n    for(let i = 0; i < valueCount; i++) {\r\n      const byteIndex = i * 5 / 8 | 0;\r\n      const bitShift = i * 5 % 8;\r\n      const value = dataView.getUint16(byteIndex, true);\r\n      result[i] = (value >> bitShift) & 0b00011111;\r\n    }\r\n  } catch(err) {\r\n    result = new Uint8Array([]);\r\n  }\r\n\r\n  /* var byteIndex = (valueCount - 1) / 8 | 0;\r\n  var bitShift = (valueCount - 1) % 8;\r\n  if(byteIndex === waveform.length - 1) {\r\n    var value = waveform[byteIndex];\r\n  } else {\r\n    var value = dataView.getUint16(byteIndex, true);\r\n  }\r\n  console.log('decoded waveform, setting last value:', value, byteIndex, bitShift);\r\n  result[valueCount - 1] = (value >> bitShift) & 0b00011111; */\r\n  return result;\r\n}\r\n\r\nfunction wrapVoiceMessage(audioEl: AudioElement) {\r\n  audioEl.classList.add('is-voice');\r\n\r\n  const message = audioEl.message;\r\n  const doc = (message.media.document || message.media.webpage.document) as MyDocument;\r\n  const isOut = message.fromId === rootScope.myId && message.peerId !== rootScope.myId;\r\n  let isUnread = message && message.pFlags.media_unread;\r\n  if(isUnread) {\r\n    audioEl.classList.add('is-unread');\r\n  }\r\n\r\n  if(message.pFlags.out) {\r\n    audioEl.classList.add('is-out');\r\n  }\r\n\r\n  const barWidth = 2;\r\n  const barMargin = 2;      //mediaSizes.isMobile ? 2 : 1;\r\n  const barHeightMin = 4;   //mediaSizes.isMobile ? 3 : 2;\r\n  const barHeightMax = mediaSizes.isMobile ? 16 : 23;\r\n  const availW = 150;       //mediaSizes.isMobile ? 152 : 190;\r\n\r\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  svg.classList.add('audio-waveform');\r\n  svg.setAttributeNS(null, 'width', '' + availW);\r\n  svg.setAttributeNS(null, 'height', '' + barHeightMax);\r\n  svg.setAttributeNS(null, 'viewBox', `0 0 ${availW} ${barHeightMax}`);\r\n\r\n  const timeDiv = document.createElement('div');\r\n  timeDiv.classList.add('audio-time');\r\n  audioEl.append(svg, timeDiv);\r\n\r\n  let waveform = (doc.attributes.find(attribute => attribute._ === 'documentAttributeAudio') as DocumentAttribute.documentAttributeAudio).waveform || new Uint8Array([]);\r\n  waveform = decodeWaveform(waveform.slice(0, 63));\r\n\r\n  //console.log('decoded waveform:', waveform);\r\n\r\n  const normValue = Math.max(...waveform);\r\n  const wfSize = waveform.length ? waveform.length : 100;\r\n  const barCount = Math.min((availW / (barWidth + barMargin)) | 0, wfSize);\r\n\r\n  let maxValue = 0;\r\n  const maxDelta = barHeightMax - barHeightMin;\r\n\r\n  let html = '';\r\n  for(let i = 0, barX = 0, sumI = 0; i < wfSize; ++i) {\r\n    const value = waveform[i] || 0;\r\n    if((sumI + barCount) >= wfSize) { // draw bar\r\n      sumI = sumI + barCount - wfSize;\r\n\t\t\tif(sumI < (barCount + 1) / 2) {\r\n\t\t\t\tif(maxValue < value) maxValue = value;\r\n      }\r\n      \r\n      const bar_value = Math.max(((maxValue * maxDelta) + ((normValue + 1) / 2)) / (normValue + 1), barHeightMin);\r\n      \r\n      const h = `\r\n      <rect x=\"${barX}\" y=\"${barHeightMax - bar_value}\" width=\"${barWidth}\" height=\"${bar_value}\" rx=\"1\" ry=\"1\"></rect>\r\n      `;\r\n      html += h;\r\n\r\n      barX += barWidth + barMargin;\r\n\r\n      if(sumI < (barCount + 1) / 2) {\r\n        maxValue = 0;\r\n      } else {\r\n        maxValue = value;\r\n      }\r\n    } else {\r\n      if(maxValue < value) maxValue = value;\r\n\r\n      sumI += barCount;\r\n    }\r\n  }\r\n\r\n  svg.insertAdjacentHTML('beforeend', html);\r\n  const rects = Array.from(svg.children) as HTMLElement[];\r\n\r\n  let progress = audioEl.querySelector('.audio-waveform') as HTMLDivElement;\r\n  \r\n  const onLoad = () => {\r\n    let interval = 0;\r\n    let lastIndex = 0;\r\n\r\n    let audio = audioEl.audio;\r\n\r\n    if(!audio.paused || (audio.currentTime > 0 && audio.currentTime !== audio.duration)) {\r\n      lastIndex = Math.round(audio.currentTime / audio.duration * barCount);\r\n      rects.slice(0, lastIndex + 1).forEach(node => node.classList.add('active'));\r\n    }\r\n\r\n    let start = () => {\r\n      clearInterval(interval);\r\n      interval = window.setInterval(() => {\r\n        if(lastIndex > svg.childElementCount || isNaN(audio.duration) || audio.paused) {\r\n          clearInterval(interval);\r\n          return;\r\n        }\r\n\r\n        lastIndex = Math.round(audio.currentTime / audio.duration * barCount);\r\n        \r\n        //svg.children[lastIndex].setAttributeNS(null, 'fill', '#000');\r\n        //svg.children[lastIndex].classList.add('active'); #Иногда пропускает полоски..\r\n        rects.slice(0, lastIndex + 1).forEach(node => node.classList.add('active'));\r\n        //++lastIndex;\r\n        //console.log('lastIndex:', lastIndex, audio.currentTime);\r\n        //}, duration * 1000 / svg.childElementCount | 0/* 63 * duration / 10 */);\r\n      }, 20);\r\n    };\r\n\r\n    if(!audio.paused) {\r\n      start();\r\n    }\r\n\r\n    audioEl.addAudioListener('playing', () => {\r\n      if(isUnread && !isOut && audioEl.classList.contains('is-unread')) {\r\n        audioEl.classList.remove('is-unread');\r\n        appMessagesManager.readMessages(audioEl.message.peerId, [audioEl.message.mid]);\r\n        isUnread = false;\r\n      }\r\n\r\n      //rects.forEach(node => node.classList.remove('active'));\r\n      start();\r\n    });\r\n\r\n    audioEl.addAudioListener('pause', () => {\r\n      clearInterval(interval);\r\n    });\r\n    \r\n    audioEl.addAudioListener('ended', () => {\r\n      clearInterval(interval);\r\n      rects.forEach(node => node.classList.remove('active'));\r\n    });\r\n    \r\n    let mousedown = false, mousemove = false;\r\n    progress.addEventListener('mouseleave', (e) => {\r\n      if(mousedown) {\r\n        audio.play();\r\n        mousedown = false;\r\n      }\r\n      mousemove = false;\r\n    })\r\n    progress.addEventListener('mousemove', (e) => {\r\n      mousemove = true;\r\n      if(mousedown) scrub(e);\r\n    });\r\n    progress.addEventListener('mousedown', (e) => {\r\n      e.preventDefault();\r\n      if(!audio.paused) {\r\n        audio.pause();\r\n      }\r\n      \r\n      scrub(e);\r\n      mousedown = true;\r\n    });\r\n    progress.addEventListener('mouseup', (e) => {\r\n      if (mousemove && mousedown) {\r\n        audio.play();\r\n        mousedown = false;\r\n      }\r\n    });\r\n    attachClickEvent(progress, (e) => {\r\n      cancelEvent(e);\r\n      if(!audio.paused) scrub(e);\r\n    });\r\n    \r\n    function scrub(e: MouseEvent | TouchEvent) {\r\n      let offsetX: number;\r\n      if(e instanceof MouseEvent) {\r\n        offsetX = e.offsetX;\r\n      } else { // touch\r\n        const rect = (e.target as HTMLElement).getBoundingClientRect();\r\n        offsetX = e.targetTouches[0].pageX - rect.left;\r\n      }\r\n      \r\n      const scrubTime = offsetX / availW /* width */ * audio.duration;\r\n      lastIndex = Math.round(scrubTime / audio.duration * barCount);\r\n      \r\n      rects.slice(0, lastIndex + 1).forEach(node => node.classList.add('active'));\r\n      for(let i = lastIndex + 1; i < rects.length; ++i) {\r\n        rects[i].classList.remove('active')\r\n      }\r\n      audio.currentTime = scrubTime;\r\n    }\r\n    \r\n    return () => {\r\n      clearInterval(interval);\r\n      progress.remove();\r\n      progress = null;\r\n      audio = null;\r\n    };\r\n  };\r\n\r\n  return onLoad;\r\n}\r\n\r\nfunction wrapAudio(audioEl: AudioElement) {\r\n  const withTime = audioEl.withTime;\r\n\r\n  const message = audioEl.message;\r\n  const doc: MyDocument = message.media.document || message.media.webpage.document;\r\n\r\n  const senderTitle = audioEl.showSender ? appMessagesManager.getSenderToPeerText(message) : '';\r\n\r\n  let title = doc.type === 'voice' ? senderTitle : (doc.audioTitle || doc.file_name);\r\n  let subtitle: string;\r\n  \r\n  if(doc.type === 'voice') {\r\n    subtitle = '';\r\n  } else {\r\n    subtitle = doc.audioPerformer ? RichTextProcessor.wrapPlainText(doc.audioPerformer) : '';\r\n    if(withTime) {\r\n      subtitle += (subtitle ? ' • ' : '') + formatDate(doc.date);\r\n    } else if(!subtitle) {\r\n      subtitle = 'Unknown Artist';\r\n    }\r\n\r\n    if(audioEl.showSender) {\r\n      subtitle += ' • ' + senderTitle;\r\n    } else {\r\n      subtitle = ' • ' + subtitle;\r\n    }\r\n  }\r\n\r\n  let titleAdditionHTML = '';\r\n  if(audioEl.showSender) {\r\n    titleAdditionHTML = `<div class=\"sent-time\">${formatDateAccordingToToday(new Date(message.date * 1000))}</div>`;\r\n  }\r\n\r\n  const html = `\r\n  <div class=\"audio-details\">\r\n    <div class=\"audio-title\"><middle-ellipsis-element data-font-weight=\"${audioEl.dataset.fontWeight}\">${title}</middle-ellipsis-element>${titleAdditionHTML}</div>\r\n    <div class=\"audio-subtitle\"><div class=\"audio-time\"></div>${subtitle || '<div></div>'}</div>\r\n  </div>`;\r\n  \r\n  audioEl.insertAdjacentHTML('beforeend', html);\r\n\r\n  const onLoad = () => {\r\n    const subtitleDiv = audioEl.querySelector('.audio-subtitle') as HTMLDivElement;\r\n    let launched = false;\r\n\r\n    let progressLine = new MediaProgressLine(audioEl.audio, doc.supportsStreaming);\r\n\r\n    audioEl.addAudioListener('ended', () => {\r\n      audioEl.classList.remove('audio-show-progress');\r\n      // Reset subtitle\r\n      subtitleDiv.lastChild.replaceWith(subtitle);\r\n      launched = false;\r\n    });\r\n\r\n    const onPlaying = () => {\r\n      if(!launched) {\r\n        audioEl.classList.add('audio-show-progress');\r\n        launched = true;\r\n\r\n        if(progressLine) {\r\n          subtitleDiv.lastChild.replaceWith(progressLine.container);\r\n        }\r\n      }\r\n    };\r\n\r\n    audioEl.addAudioListener('playing', onPlaying);\r\n\r\n    if(!audioEl.audio.paused || audioEl.audio.currentTime > 0) {\r\n      onPlaying();\r\n    }\r\n\r\n    return () => {\r\n      progressLine.removeListeners();\r\n      progressLine.container.remove();\r\n      progressLine = null;\r\n    };\r\n  };\r\n\r\n  return onLoad;\r\n}\r\n\r\nexport default class AudioElement extends HTMLElement {\r\n  public audio: HTMLAudioElement;\r\n  public preloader: ProgressivePreloader;\r\n  public message: any;\r\n  public withTime = false;\r\n  public voiceAsMusic = false;\r\n  public searchContext: SearchSuperContext;\r\n  public showSender = false;\r\n  public noAutoDownload: boolean;\r\n\r\n  private attachedHandlers: {[name: string]: any[]} = {};\r\n  private onTypeDisconnect: () => void;\r\n  public onLoad: (autoload?: boolean) => void;\r\n\r\n  constructor() {\r\n    super();\r\n    // элемент создан\r\n  }\r\n\r\n  public render() {\r\n    this.classList.add('audio');\r\n\r\n    const doc = this.message.media.document || this.message.media.webpage.document;\r\n    const isRealVoice = doc.type === 'voice';\r\n    const isVoice = !this.voiceAsMusic && isRealVoice;\r\n    const isOutgoing = this.message.pFlags.is_outgoing;\r\n    const uploading = isOutgoing && this.preloader;\r\n\r\n    const durationStr = String(doc.duration | 0).toHHMMSS();\r\n\r\n    this.innerHTML = `<div class=\"audio-toggle audio-ico\">    \r\n                         <div class=\"part one\" x=\"0\" y=\"0\" fill=\"#fff\"></div>\r\n                         <div class=\"part two\" x=\"0\" y=\"0\" fill=\"#fff\"></div>\r\n                      </div>`;\r\n\r\n    const downloadDiv = document.createElement('div');\r\n    downloadDiv.classList.add('audio-download');\r\n\r\n    if(uploading) {\r\n      this.append(downloadDiv);\r\n    }\r\n\r\n    const onTypeLoad = isVoice ? wrapVoiceMessage(this) : wrapAudio(this);\r\n    \r\n    const audioTimeDiv = this.querySelector('.audio-time') as HTMLDivElement;\r\n    audioTimeDiv.innerHTML = durationStr;\r\n\r\n    const onLoad = this.onLoad = (autoload = true) => {\r\n      this.onLoad = undefined;\r\n\r\n      const audio = this.audio = appMediaPlaybackController.addMedia(this.message.peerId, this.message.media.document || this.message.media.webpage.document, this.message.mid, autoload);\r\n\r\n      this.onTypeDisconnect = onTypeLoad();\r\n      \r\n      const toggle = this.querySelector('.audio-toggle') as HTMLDivElement;\r\n\r\n      const getTimeStr = () => String(audio.currentTime | 0).toHHMMSS() + (isVoice ? (' / ' + durationStr) : '');\r\n\r\n      const onPlaying = () => {\r\n        audioTimeDiv.innerText = getTimeStr();\r\n        toggle.classList.toggle('playing', !audio.paused);\r\n      };\r\n\r\n      if(!audio.paused || (audio.currentTime > 0 && audio.currentTime !== audio.duration)) {\r\n        onPlaying();\r\n      }\r\n\r\n      attachClickEvent(toggle, (e) => {\r\n        cancelEvent(e);\r\n        if(audio.paused) audio.play().catch(() => {});\r\n        else audio.pause();\r\n      });\r\n\r\n      this.addAudioListener('ended', () => {\r\n        toggle.classList.remove('playing');\r\n      });\r\n\r\n      this.addAudioListener('timeupdate', () => {\r\n        if(appMediaPlaybackController.isSafariBuffering(audio)) return;\r\n        audioTimeDiv.innerText = getTimeStr();\r\n      });\r\n\r\n      this.addAudioListener('pause', () => {\r\n        toggle.classList.remove('playing');\r\n      });\r\n\r\n      this.addAudioListener('playing', onPlaying);\r\n    };\r\n\r\n    if(!isOutgoing) {\r\n      let preloader: ProgressivePreloader = this.preloader;\r\n\r\n      const getDownloadPromise = () => appDocsManager.downloadDoc(doc);\r\n\r\n      if(isRealVoice) {\r\n        if(!preloader) {\r\n          preloader = new ProgressivePreloader({\r\n            cancelable: true\r\n          });\r\n        }\r\n\r\n        const load = () => {\r\n          const download = getDownloadPromise();\r\n          preloader.attach(downloadDiv, false, download);\r\n\r\n          if(!downloadDiv.parentElement) {\r\n            this.append(downloadDiv);\r\n          }\r\n\r\n          (download as Promise<any>).then(() => {\r\n            detachClickEvent(this, onClick);\r\n            onLoad();\r\n\r\n            downloadDiv.classList.add('downloaded');\r\n            setTimeout(() => {\r\n              downloadDiv.remove();\r\n            }, 200);\r\n          });\r\n\r\n          return {download};\r\n        };\r\n\r\n        preloader.construct();\r\n        preloader.setManual();\r\n        preloader.attach(downloadDiv);\r\n        preloader.setDownloadFunction(load);\r\n\r\n        const onClick = (e?: Event) => {\r\n          preloader.onClick(e);\r\n        };\r\n    \r\n        attachClickEvent(this, onClick);\r\n\r\n        if(!this.noAutoDownload) {\r\n          onClick();\r\n        }\r\n      } else {\r\n        if(doc.supportsStreaming) {\r\n          onLoad(false);\r\n        }\r\n\r\n        //if(appMediaPlaybackController.mediaExists(mid)) { // чтобы показать прогресс, если аудио уже было скачано\r\n          //onLoad();\r\n        //} else {\r\n          const r = (e: Event) => {\r\n            if(!this.audio) {\r\n              onLoad(false);\r\n            }\r\n\r\n            if(this.audio.src) {\r\n              return;\r\n            }\r\n            //onLoad();\r\n            //cancelEvent(e);\r\n            appMediaPlaybackController.resolveWaitingForLoadMedia(this.message.peerId, this.message.mid);\r\n  \r\n            appMediaPlaybackController.willBePlayed(this.audio); // prepare for loading audio\r\n  \r\n            if(!preloader) {\r\n              if(doc.supportsStreaming) {\r\n                preloader = new ProgressivePreloader({\r\n                  cancelable: false\r\n                });\r\n\r\n                preloader.attach(downloadDiv, false);\r\n              } else {\r\n                preloader = new ProgressivePreloader({\r\n                  cancelable: true\r\n                });\r\n\r\n                const load = () => {\r\n                  const download = getDownloadPromise();\r\n                  preloader.attach(downloadDiv, false, download);\r\n                  return {download};\r\n                };\r\n\r\n                preloader.setDownloadFunction(load);\r\n                load();\r\n              }\r\n            }\r\n\r\n            if(isSafari) {\r\n              this.audio.autoplay = true;\r\n              this.audio.play().catch(() => {});\r\n            }\r\n\r\n            this.append(downloadDiv);\r\n    \r\n            new Promise<void>((resolve) => {\r\n              if(this.audio.readyState >= 2) resolve();\r\n              else this.addAudioListener('canplay', resolve);\r\n            }).then(() => {\r\n              downloadDiv.classList.add('downloaded');\r\n              setTimeout(() => {\r\n                downloadDiv.remove();\r\n              }, 200);\r\n  \r\n              //setTimeout(() => {\r\n                // release loaded audio\r\n                if(appMediaPlaybackController.willBePlayedMedia === this.audio) {\r\n                  this.audio.play();\r\n                  appMediaPlaybackController.willBePlayedMedia = null;\r\n                }\r\n              //}, 10e3);\r\n            });\r\n          };\r\n\r\n          if(!this.audio?.src) {\r\n            attachClickEvent(this, r, {once: true, capture: true, passive: false});\r\n          }\r\n        //}\r\n      }\r\n    } else if(uploading) {\r\n      this.preloader.attach(downloadDiv, false);\r\n      //onLoad();\r\n    }\r\n  }\r\n\r\n  /* connectedCallback() {\r\n    // браузер вызывает этот метод при добавлении элемента в документ\r\n    // (может вызываться много раз, если элемент многократно добавляется/удаляется)\r\n  } */\r\n\r\n  public addAudioListener(name: string, callback: any) {\r\n    if(!this.attachedHandlers[name]) this.attachedHandlers[name] = [];\r\n    this.attachedHandlers[name].push(callback);\r\n    this.audio.addEventListener(name, callback);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if(this.isConnected) {\r\n      return;\r\n    }\r\n    \r\n    // браузер вызывает этот метод при удалении элемента из документа\r\n    // (может вызываться много раз, если элемент многократно добавляется/удаляется)\r\n    if(this.onTypeDisconnect) {\r\n      this.onTypeDisconnect();\r\n      this.onTypeDisconnect = null;\r\n    }\r\n\r\n    for(let name in this.attachedHandlers) {\r\n      for(let callback of this.attachedHandlers[name]) {\r\n        this.audio.removeEventListener(name, callback);\r\n      }\r\n      \r\n      delete this.attachedHandlers[name];\r\n    }\r\n\r\n    this.preloader = null;\r\n  }\r\n}\r\n\r\ncustomElements.define(\"audio-element\", AudioElement);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default class DivAndCaption<T> {\r\n  public container: HTMLElement;\r\n  public border: HTMLElement;\r\n  public content: HTMLElement;\r\n  public title: HTMLElement;\r\n  public subtitle: HTMLElement;\r\n\r\n  constructor(protected className: string, public fill?: T) {\r\n    this.container = document.createElement('div');\r\n    this.container.className = className;\r\n\r\n    this.border = document.createElement('div');\r\n    this.border.classList.add(className + '-border');\r\n    \r\n    this.content = document.createElement('div');\r\n    this.content.classList.add(className + '-content');\r\n\r\n    this.title = document.createElement('div');\r\n    this.title.classList.add(className + '-title');\r\n    this.title.setAttribute('dir', 'auto');\r\n\r\n    this.subtitle = document.createElement('div');\r\n    this.subtitle.classList.add(className + '-subtitle');\r\n    this.subtitle.setAttribute('dir', 'auto');\r\n\r\n    this.content.append(this.title, this.subtitle);\r\n    this.container.append(this.border, this.content);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport renderImageFromUrl from \"../../helpers/dom/renderImageFromUrl\";\r\nimport replaceContent from \"../../helpers/dom/replaceContent\";\r\nimport { limitSymbols } from \"../../helpers/string\";\r\nimport appDownloadManager from \"../../lib/appManagers/appDownloadManager\";\r\nimport appImManager, { CHAT_ANIMATION_GROUP } from \"../../lib/appManagers/appImManager\";\r\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\r\nimport appPhotosManager from \"../../lib/appManagers/appPhotosManager\";\r\nimport { RichTextProcessor } from \"../../lib/richtextprocessor\";\r\nimport DivAndCaption from \"../divAndCaption\";\r\nimport { wrapSticker } from \"../wrappers\";\r\n\r\nexport function wrapReplyDivAndCaption(options: {\r\n  title: string | HTMLElement,\r\n  titleEl: HTMLElement,\r\n  subtitle: string | HTMLElement,\r\n  subtitleEl: HTMLElement,\r\n  message: any,\r\n  mediaEl: HTMLElement\r\n}) {\r\n  let {title, titleEl, subtitle, subtitleEl, mediaEl, message} = options;\r\n  if(title !== undefined) {\r\n    if(typeof(title) === 'string') {\r\n      title = limitSymbols(title, 140);\r\n      title = RichTextProcessor.wrapEmojiText(title);\r\n    }\r\n\r\n    replaceContent(titleEl, title);\r\n  }\r\n\r\n  let media = message && message.media;\r\n  let setMedia = false;\r\n  if(media && mediaEl) {\r\n    subtitleEl.textContent = '';\r\n    subtitleEl.append(appMessagesManager.wrapMessageForReply(message));\r\n\r\n    //console.log('wrap reply', media);\r\n\r\n    if(media.webpage) {\r\n      media = media.webpage;\r\n    }\r\n    \r\n    if(media.photo || (media.document && ['video', 'sticker', 'gif'].indexOf(media.document.type) !== -1)) {\r\n      /* const middlewareOriginal = appImManager.chat.bubbles.getMiddleware();\r\n      const middleware = () => {\r\n        \r\n      }; */\r\n\r\n      const boxSize = 32;\r\n      if(media.document?.type === 'sticker') {\r\n        if(mediaEl.style.backgroundImage) {\r\n          mediaEl.style.backgroundImage = ''; \r\n        }\r\n\r\n        setMedia = true;\r\n        wrapSticker({\r\n          doc: media.document,\r\n          div: mediaEl,\r\n          lazyLoadQueue: appImManager.chat.bubbles.lazyLoadQueue,\r\n          group: CHAT_ANIMATION_GROUP,\r\n          //onlyThumb: media.document.sticker === 2,\r\n          width: boxSize,\r\n          height: boxSize\r\n        });\r\n      } else {\r\n        if(mediaEl.firstElementChild) {\r\n          mediaEl.innerHTML = '';\r\n        }\r\n\r\n        const photo = media.photo || media.document;\r\n\r\n        const size = appPhotosManager.choosePhotoSize(photo, boxSize, boxSize/* mediaSizes.active.regular.width, mediaSizes.active.regular.height */);\r\n        const cacheContext = appDownloadManager.getCacheContext(photo, size.type);\r\n\r\n        if(!cacheContext.downloaded) {\r\n          const sizes = photo.sizes || photo.thumbs;\r\n          if(sizes && sizes[0].bytes) {\r\n            setMedia = true;\r\n            renderImageFromUrl(mediaEl, appPhotosManager.getPreviewURLFromThumb(photo, sizes[0]));\r\n          }\r\n        }\r\n\r\n        if(size._ !== 'photoSizeEmpty') {\r\n          setMedia = true;\r\n          appPhotosManager.preloadPhoto(photo, size)\r\n          .then(() => {\r\n            renderImageFromUrl(mediaEl, cacheContext.url);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if(message) {\r\n      subtitleEl.textContent = '';\r\n      subtitleEl.append(appMessagesManager.wrapMessageForReply(message, message.message && limitSymbols(message.message, 140)));\r\n    } else if(typeof(subtitle) === 'string') {\r\n      subtitle = limitSymbols(subtitle, 140);\r\n      subtitle = RichTextProcessor.wrapEmojiText(subtitle);\r\n      replaceContent(subtitleEl, subtitle);\r\n    }\r\n  }\r\n  \r\n  return setMedia;\r\n}\r\n\r\nexport default class ReplyContainer extends DivAndCaption<(title: string | HTMLElement, subtitle: string | HTMLElement, message?: any) => void> {\r\n  private mediaEl: HTMLElement;\r\n\r\n  constructor(protected className: string) {\r\n    super(className, (title: string | HTMLElement, subtitle: string | HTMLElement = '', message?: any) => {\r\n      if(!this.mediaEl) {\r\n        this.mediaEl = document.createElement('div');\r\n        this.mediaEl.classList.add(this.className + '-media');\r\n      }\r\n\r\n      const isMediaSet = wrapReplyDivAndCaption({\r\n        title,\r\n        titleEl: this.title,\r\n        subtitle,\r\n        subtitleEl: this.subtitle,\r\n        mediaEl: this.mediaEl,\r\n        message\r\n      });\r\n      \r\n      this.container.classList.toggle('is-media', isMediaSet);\r\n      if(isMediaSet) {\r\n        this.content.prepend(this.mediaEl);\r\n      } else {\r\n        this.mediaEl.remove();\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\nThis file is part of Telegram Desktop,\r\nthe official desktop application for the Telegram messaging service.\r\nFor license and copyright information please follow this link:\r\nhttps://github.com/telegramdesktop/tdesktop/blob/master/LEGAL\r\n*/\r\n\r\nimport { accumulate } from \"../helpers/array\";\r\nimport { clamp } from \"../helpers/number\";\r\n\r\ntype Size = {w: number, h: number};\r\nexport type GroupMediaLayout = {\r\n  geometry: {\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  },\r\n  sides: number\r\n};\r\ntype Attempt = {\r\n  lineCounts: number[],\r\n  heights: number[]\r\n};\r\nexport const RectPart = {\r\n  None: 0,\r\n  Top: 1,\r\n  Right: 2,\r\n  Bottom: 4,\r\n  Left: 8\r\n};\r\n\r\n// https://github.com/telegramdesktop/tdesktop/blob/4669c07dc5335cbf4795bbbe5b0ab7c007b9aee2/Telegram/SourceFiles/ui/grouped_layout.cpp\r\nexport class Layouter {\r\n  private count: number;\r\n  private ratios: number[];\r\n  private proportions: string;\r\n  private averageRatio: number;\r\n  private maxSizeRatio: number;\r\n\r\n  constructor(private sizes: Size[], private maxWidth: number, private minWidth: number, private spacing: number, private maxHeight = maxWidth) {\r\n    this.count = sizes.length;\r\n    this.ratios = Layouter.countRatios(sizes);\r\n    this.proportions = Layouter.countProportions(this.ratios);\r\n    this.averageRatio = accumulate(this.ratios, 1) / this.count; // warn\r\n    this.maxSizeRatio = maxWidth / this.maxHeight;\r\n  }\r\n\r\n  public layout(): GroupMediaLayout[] {\r\n    if(!this.count) return [];\r\n    //else if(this.count === 1) return this.layoutOne();\r\n\r\n    if(this.count >= 5 || this.ratios.find(r => r > 2)) {\r\n      return new ComplexLayouter(this.ratios, this.averageRatio, this.maxWidth, this.minWidth, this.spacing).layout();\r\n    }\r\n\r\n    if(this.count === 2) return this.layoutTwo();\r\n    else if(this.count === 3) return this.layoutThree();\r\n    return this.layoutFour();\r\n  }\r\n\r\n  private layoutTwo(): ReturnType<Layouter['layout']> {\r\n    if((this.proportions === \"ww\")\r\n      && (this.averageRatio > 1.4 * this.maxSizeRatio)\r\n      && (this.ratios[1] - this.ratios[0] < 0.2)) {\r\n      return this.layoutTwoTopBottom();\r\n    } else if(this.proportions === \"ww\" || this.proportions === \"qq\") {\r\n      return this.layoutTwoLeftRightEqual();\r\n    }\r\n    return this.layoutTwoLeftRight();\r\n  }\r\n\r\n  private layoutThree(): ReturnType<Layouter['layout']> {\r\n    //console.log('layoutThree:', this);\r\n    if(this.proportions[0] === 'n') {\r\n      return this.layoutThreeLeftAndOther();\r\n    }\r\n    return this.layoutThreeTopAndOther();\r\n  }\r\n\r\n  private layoutFour(): ReturnType<Layouter['layout']> {\r\n    if(this.proportions[0] === 'w') {\r\n      return this.layoutFourTopAndOther();\r\n    }\r\n    return this.layoutFourLeftAndOther();\r\n  }\r\n\r\n  private layoutTwoTopBottom(): ReturnType<Layouter['layout']> {\r\n    const width = this.maxWidth;\r\n    const height = Math.round(Math.min(\r\n      width / this.ratios[0],\r\n      Math.min(\r\n        width / this.ratios[1],\r\n        (this.maxHeight - this.spacing) / 2)));\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width, height},\r\n        sides: RectPart.Left | RectPart.Top | RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: 0, y: height + this.spacing, width, height},\r\n        sides: RectPart.Left | RectPart.Bottom | RectPart.Right\r\n      },\r\n    ];\r\n  }\r\n\r\n  private layoutTwoLeftRightEqual(): ReturnType<Layouter['layout']> {\r\n    const width = (this.maxWidth - this.spacing) / 2;\r\n    const height = Math.round(Math.min(\r\n      width / this.ratios[0],\r\n      Math.min(width / this.ratios[1], this.maxHeight * 1)));\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width, height},\r\n        sides: RectPart.Top | RectPart.Left | RectPart.Bottom\r\n      },\r\n      {\r\n        geometry: {x: width + this.spacing, y: 0, width, height},\r\n        sides: RectPart.Top | RectPart.Right | RectPart.Bottom\r\n      },\r\n    ];\r\n  }\r\n\r\n  private layoutTwoLeftRight(): ReturnType<Layouter['layout']> {\r\n    const minimalWidth = Math.round(this.minWidth * 1.5);\r\n    const secondWidth = Math.min(\r\n      Math.round(Math.max(\r\n        0.4 * (this.maxWidth - this.spacing),\r\n        (this.maxWidth - this.spacing) / this.ratios[0]\r\n          / (1 / this.ratios[0] + 1 / this.ratios[1]))),\r\n      this.maxWidth - this.spacing - minimalWidth);\r\n    const firstWidth = this.maxWidth\r\n      - secondWidth\r\n      - this.spacing;\r\n    const height = Math.min(\r\n      this.maxHeight,\r\n      Math.round(Math.min(\r\n        firstWidth / this.ratios[0],\r\n        secondWidth / this.ratios[1])));\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width: firstWidth, height},\r\n        sides: RectPart.Top | RectPart.Left | RectPart.Bottom\r\n      },\r\n      {\r\n        geometry: {x: firstWidth + this.spacing, y: 0, width: secondWidth, height},\r\n        sides: RectPart.Top | RectPart.Right | RectPart.Bottom\r\n      },\r\n    ];\r\n  }\r\n\r\n  private layoutThreeLeftAndOther(): ReturnType<Layouter['layout']> {\r\n    const firstHeight = this.maxHeight;\r\n    const thirdHeight = Math.round(Math.min(\r\n      (this.maxHeight - this.spacing) / 2.,\r\n      (this.ratios[1] * (this.maxWidth - this.spacing)\r\n        / (this.ratios[2] + this.ratios[1]))));\r\n    const secondHeight = firstHeight\r\n      - thirdHeight\r\n      - this.spacing;\r\n    const rightWidth = Math.max(\r\n      this.minWidth,\r\n      Math.round(Math.min(\r\n        (this.maxWidth - this.spacing) / 2.,\r\n        Math.min(\r\n          thirdHeight * this.ratios[2],\r\n          secondHeight * this.ratios[1]))));\r\n    const leftWidth = Math.min(\r\n      Math.round(firstHeight * this.ratios[0]),\r\n      this.maxWidth - this.spacing - rightWidth);\r\n\r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width: leftWidth, height: firstHeight},\r\n        sides: RectPart.Top | RectPart.Left | RectPart.Bottom\r\n      },\r\n      {\r\n        geometry: {x: leftWidth + this.spacing, y: 0, width: rightWidth, height: secondHeight},\r\n        sides: RectPart.Top | RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: leftWidth + this.spacing, y: secondHeight + this.spacing, width: rightWidth, height: thirdHeight},\r\n        sides: RectPart.Bottom | RectPart.Right\r\n      },\r\n    ];\r\n  }\r\n  \r\n  private layoutThreeTopAndOther(): ReturnType<Layouter['layout']> {\r\n    const firstWidth = this.maxWidth;\r\n    const firstHeight = Math.round(Math.min(\r\n      firstWidth / this.ratios[0],\r\n      (this.maxHeight - this.spacing) * 0.66));\r\n    const secondWidth = (this.maxWidth - this.spacing) / 2;\r\n    const secondHeight = Math.min(\r\n      this.maxHeight - firstHeight - this.spacing,\r\n      Math.round(Math.min(\r\n        secondWidth / this.ratios[1],\r\n        secondWidth / this.ratios[2])));\r\n    const thirdWidth = firstWidth - secondWidth - this.spacing;\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width: firstWidth, height: firstHeight},\r\n        sides: RectPart.Left | RectPart.Top | RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: 0, y: firstHeight + this.spacing, width: secondWidth, height: secondHeight},\r\n        sides: RectPart.Bottom | RectPart.Left\r\n      },\r\n      {\r\n        geometry: {x: secondWidth + this.spacing, y: firstHeight + this.spacing, width: thirdWidth, height: secondHeight},\r\n        sides: RectPart.Bottom | RectPart.Right\r\n      },\r\n    ];\r\n  }\r\n\r\n  private layoutFourTopAndOther(): ReturnType<Layouter['layout']> {\r\n    const w = this.maxWidth;\r\n    const h0 = Math.round(Math.min(\r\n      w / this.ratios[0],\r\n      (this.maxHeight - this.spacing) * 0.66));\r\n    const h = Math.round(\r\n      (this.maxWidth - 2 * this.spacing)\r\n        / (this.ratios[1] + this.ratios[2] + this.ratios[3]));\r\n    const w0 = Math.max(\r\n      this.minWidth,\r\n      Math.round(Math.min(\r\n        (this.maxWidth - 2 * this.spacing) * 0.4,\r\n        h * this.ratios[1])));\r\n    const w2 = Math.round(Math.max(\r\n      Math.max(\r\n        this.minWidth * 1.,\r\n        (this.maxWidth - 2 * this.spacing) * 0.33),\r\n      h * this.ratios[3]));\r\n    const w1 = w - w0 - w2 - 2 * this.spacing;\r\n    const h1 = Math.min(\r\n      this.maxHeight - h0 - this.spacing,\r\n      h);\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width: w, height: h0},\r\n        sides: RectPart.Left | RectPart.Top | RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: 0, y: h0 + this.spacing, width: w0, height: h1},\r\n        sides: RectPart.Bottom | RectPart.Left\r\n      },\r\n      {\r\n        geometry: {x: w0 + this.spacing, y: h0 + this.spacing, width: w1, height: h1},\r\n        sides: RectPart.Bottom,\r\n      },\r\n      {\r\n        geometry: {x: w0 + this.spacing + w1 + this.spacing, y: h0 + this.spacing, width: w2, height: h1},\r\n        sides: RectPart.Right | RectPart.Bottom\r\n      },\r\n    ];\r\n  }\r\n\r\n  private layoutFourLeftAndOther(): ReturnType<Layouter['layout']> {\r\n    const h = this.maxHeight;\r\n    const w0 = Math.round(Math.min(\r\n      h * this.ratios[0],\r\n      (this.maxWidth - this.spacing) * 0.6));\r\n  \r\n    const w = Math.round(\r\n      (this.maxHeight - 2 * this.spacing)\r\n        / (1. / this.ratios[1] + 1. / this.ratios[2] + 1. / this.ratios[3])\r\n    );\r\n    const h0 = Math.round(w / this.ratios[1]);\r\n    const h1 = Math.round(w / this.ratios[2]);\r\n    const h2 = h - h0 - h1 - 2 * this.spacing;\r\n    const w1 = Math.max(\r\n      this.minWidth,\r\n      Math.min(this.maxWidth - w0 - this.spacing, w));\r\n  \r\n    return [\r\n      {\r\n        geometry: {x: 0, y: 0, width: w0, height: h},\r\n        sides: RectPart.Top | RectPart.Left | RectPart.Bottom\r\n      },\r\n      {\r\n        geometry: {x: w0 + this.spacing, y: 0, width: w1, height: h0},\r\n        sides: RectPart.Top | RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: w0 + this.spacing, y: h0 + this.spacing, width: w1, height: h1},\r\n        sides: RectPart.Right\r\n      },\r\n      {\r\n        geometry: {x: w0 + this.spacing, y: h0 + h1 + 2 * this.spacing, width: w1, height: h2},\r\n        sides: RectPart.Bottom | RectPart.Right\r\n      },\r\n    ];\r\n  }\r\n\r\n  private static countRatios(sizes: Size[]) {\r\n    return sizes.map(size => size.w / size.h);\r\n  }\r\n\r\n  private static countProportions(ratios: number[]) {\r\n    return ratios.map(ratio => (ratio > 1.2) ? 'w' : (ratio < 0.8) ? 'n' : 'q').join('');\r\n  }\r\n}\r\n\r\nclass ComplexLayouter {\r\n  private ratios: number[];\r\n  private count: number;\r\n\r\n  constructor(ratios: number[], private averageRatio: number, private maxWidth: number, private minWidth: number, private spacing: number, private maxHeight = maxWidth * 4 / 3) {\r\n    this.ratios = ComplexLayouter.cropRatios(ratios, averageRatio);\r\n    this.count = ratios.length;\r\n  }\r\n\r\n  private static cropRatios(ratios: number[], averageRatio: number) {\r\n    const kMaxRatio = 2.75;\r\n    const kMinRatio = 0.6667;\r\n    return ratios.map(ratio => {\r\n      return averageRatio > 1.1\r\n\t\t\t  ? clamp(ratio, 1., kMaxRatio)\r\n\t\t\t  : clamp(ratio, kMinRatio, 1.);\r\n    });\r\n  }\r\n\r\n  public layout(): GroupMediaLayout[] {\r\n    let result = new Array<GroupMediaLayout>(this.count);\r\n\r\n    let attempts: Attempt[] = [];\r\n    const multiHeight = (offset: number, count: number) => {\r\n      const ratios = this.ratios.slice(offset, offset + count); // warn\r\n      const sum = accumulate(ratios, 0);\r\n      return (this.maxWidth - (count - 1) * this.spacing) / sum;\r\n    };\r\n    const pushAttempt = (lineCounts: number[]) => {\r\n      let heights: number[] = [];\r\n      let offset = 0;\r\n      for(let count of lineCounts) {\r\n        heights.push(multiHeight(offset, count));\r\n        offset += count;\r\n      }\r\n      attempts.push({lineCounts, heights}); // warn\r\n    };\r\n\r\n    for(let first = 1; first !== this.count; ++first) {\r\n      const second = this.count - first;\r\n      if(first > 3 || second > 3) {\r\n        continue;\r\n      }\r\n      pushAttempt([first, second]);\r\n    }\r\n    for(let first = 1; first !== this.count - 1; ++first) {\r\n      for(let second = 1; second !== this.count - first; ++second) {\r\n        const third = this.count - first - second;\r\n        if((first > 3)\r\n          || (second > ((this.averageRatio < 0.85) ? 4 : 3))\r\n          || (third > 3)) {\r\n          continue;\r\n        }\r\n        pushAttempt([first, second, third]);\r\n      }\r\n    }\r\n    for(let first = 1; first !== this.count - 1; ++first) {\r\n      for(let second = 1; second !== this.count - first; ++second) {\r\n        for(let third = 1; third !== this.count - first - second; ++third) {\r\n          const fourth = this.count - first - second - third;\r\n          if(first > 3 || second > 3 || third > 3 || fourth > 3) {\r\n            continue;\r\n          }\r\n          pushAttempt([first, second, third, fourth]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let optimalAttempt: Attempt = null;\r\n    let optimalDiff = 0;\r\n    for(const attempt of attempts) {\r\n      const {heights, lineCounts: counts} = attempt;\r\n      const lineCount = counts.length;\r\n      const totalHeight = accumulate(heights, 0) \r\n        + this.spacing * (lineCount - 1);\r\n      const minLineHeight = Math.min(...heights);\r\n      const maxLineHeight = Math.max(...heights);\r\n      const bad1 = (minLineHeight < this.minWidth) ? 1.5 : 1;\r\n      const bad2 = (() => {\r\n        for(let line = 1; line !== lineCount; ++line) {\r\n          if(counts[line - 1] > counts[line]) {\r\n            return 1.5;\r\n          }\r\n        }\r\n        return 1.;\r\n      })();\r\n      const diff = Math.abs(totalHeight - this.maxHeight) * bad1 * bad2;\r\n      if(!optimalAttempt || diff < optimalDiff) {\r\n        optimalAttempt = attempt;\r\n        optimalDiff = diff;\r\n      }\r\n    }\r\n\r\n    const optimalCounts = optimalAttempt.lineCounts;\r\n\t  const optimalHeights = optimalAttempt.heights;\r\n    const rowCount = optimalCounts.length;\r\n    \r\n    let index = 0;\r\n    let y = 0;\r\n    for(let row = 0; row !== rowCount; ++row) {\r\n      const colCount = optimalCounts[row];\r\n      const lineHeight = optimalHeights[row];\r\n      const height = Math.round(lineHeight);\r\n\r\n      let x = 0;\r\n      for(let col = 0; col !== colCount; ++col) {\r\n        const sides = RectPart.None\r\n          | (row === 0 ? RectPart.Top : RectPart.None)\r\n          | (row === rowCount - 1 ? RectPart.Bottom : RectPart.None)\r\n          | (col === 0 ? RectPart.Left : RectPart.None)\r\n          | (col === colCount - 1 ? RectPart.Right : RectPart.None);\r\n\r\n        const ratio = this.ratios[index];\r\n        const width = (col === colCount - 1)\r\n          ? (this.maxWidth - x)\r\n          : Math.round(ratio * lineHeight);\r\n        result[index] = {\r\n          geometry: {x, y, width, height},\r\n          sides\r\n        };\r\n\r\n        x += width + this.spacing;\r\n        ++index;\r\n      }\r\n      y += height + this.spacing;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { InputFile } from \"../layer\";\r\nimport AvatarEdit from \"./avatarEdit\";\r\nimport AvatarElement from \"./avatar\";\r\nimport InputField from \"./inputField\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport { safeAssign } from \"../helpers/object\";\r\nimport ButtonCorner from \"./buttonCorner\";\r\n\r\nexport default class EditPeer {\r\n  public nextBtn: HTMLButtonElement;\r\n\r\n  public uploadAvatar: () => Promise<InputFile>;\r\n  public avatarEdit: AvatarEdit;\r\n  public avatarElem: AvatarElement;\r\n\r\n  private inputFields: InputField[];\r\n  private listenerSetter: ListenerSetter;\r\n\r\n  private peerId: number;\r\n\r\n  constructor(options: {\r\n    peerId: number,\r\n    inputFields: EditPeer['inputFields'],\r\n    listenerSetter: ListenerSetter,\r\n    doNotEditAvatar?: boolean,\r\n  }) {\r\n    safeAssign(this, options);\r\n\r\n    this.nextBtn = ButtonCorner({icon: 'check'});\r\n\r\n    this.avatarElem = document.createElement('avatar-element') as AvatarElement;\r\n    this.avatarElem.classList.add('avatar-placeholder', 'avatar-120');\r\n    this.avatarElem.setAttribute('peer', '' + this.peerId);\r\n\r\n    if(!options.doNotEditAvatar) {\r\n      this.avatarEdit = new AvatarEdit((_upload) => {\r\n        this.uploadAvatar = _upload;\r\n        this.handleChange();\r\n        this.avatarElem.remove();\r\n      });\r\n\r\n      this.avatarEdit.container.append(this.avatarElem);\r\n    }\r\n\r\n    this.inputFields.forEach(inputField => {\r\n      this.listenerSetter.add(inputField.input, 'input', this.handleChange);\r\n    });\r\n  }\r\n\r\n  public isChanged = () => {\r\n    return !!this.uploadAvatar || !!this.inputFields.find(inputField => inputField.isValid());\r\n  };\r\n\r\n  public handleChange = () => {\r\n    this.nextBtn.classList.toggle('is-visible', this.isChanged());\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport CheckboxField from \"./checkboxField\";\r\nimport RadioField from \"./radioField\";\r\nimport { ripple } from \"./ripple\";\r\nimport { SliderSuperTab } from \"./slider\";\r\nimport RadioForm from \"./radioForm\";\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\n\r\nexport default class Row {\r\n  public container: HTMLElement;\r\n  public title: HTMLDivElement;\r\n  public subtitle: HTMLElement;\r\n\r\n  public checkboxField: CheckboxField;\r\n  public radioField: RadioField;\r\n\r\n  public freezed = false;\r\n\r\n  constructor(options: Partial<{\r\n    icon: string,\r\n    subtitle: string,\r\n    subtitleLangKey: LangPackKey,\r\n    subtitleLangArgs: any[],\r\n    radioField: Row['radioField'],\r\n    checkboxField: Row['checkboxField'],\r\n    noCheckboxSubtitle: boolean,\r\n    title: string,\r\n    titleLangKey: LangPackKey,\r\n    titleRight: string | HTMLElement,\r\n    clickable: boolean | ((e: Event) => void),\r\n    navigationTab: SliderSuperTab,\r\n    havePadding: boolean\r\n  }> = {}) {\r\n    this.container = document.createElement(options.radioField || options.checkboxField ? 'label' : 'div');\r\n    this.container.classList.add('row');\r\n\r\n    this.subtitle = document.createElement('div');\r\n    this.subtitle.classList.add('row-subtitle');\r\n    this.subtitle.setAttribute('dir', 'auto');\r\n    if(options.subtitle) {\r\n      this.subtitle.innerHTML = options.subtitle;\r\n    } else if(options.subtitleLangKey) {\r\n      this.subtitle.append(i18n(options.subtitleLangKey, options.subtitleLangArgs));\r\n    }\r\n    this.container.append(this.subtitle);\r\n\r\n    let havePadding = !!options.havePadding;\r\n    if(options.radioField || options.checkboxField) {\r\n      havePadding = true;\r\n      if(options.radioField) {\r\n        this.radioField = options.radioField;\r\n        this.container.append(this.radioField.label);\r\n      }\r\n\r\n      if(options.checkboxField) {\r\n        this.checkboxField = options.checkboxField;\r\n        \r\n        const isToggle = options.checkboxField.label.classList.contains('checkbox-field-toggle');\r\n        if(isToggle) {\r\n          this.container.classList.add('row-with-toggle');\r\n          options.titleRight = this.checkboxField.label;\r\n        } else {\r\n          this.container.append(this.checkboxField.label);\r\n        }\r\n\r\n        if(!options.noCheckboxSubtitle && !isToggle) {\r\n          this.checkboxField.input.addEventListener('change', () => {\r\n            replaceContent(this.subtitle, i18n(this.checkboxField.input.checked ? 'Checkbox.Enabled' : 'Checkbox.Disabled'));\r\n          });\r\n        }\r\n      }\r\n\r\n      const i = options.radioField || options.checkboxField;\r\n      i.label.classList.add('disable-hover');\r\n    } \r\n    \r\n    if(options.title || options.titleLangKey) {\r\n      let c: HTMLElement;\r\n      if(options.titleRight) {\r\n        c = document.createElement('div');\r\n        c.classList.add('row-title-row');\r\n        this.container.append(c);\r\n      } else {\r\n        c = this.container;\r\n      }\r\n\r\n      this.title = document.createElement('div');\r\n      this.title.classList.add('row-title');\r\n      this.title.setAttribute('dir', 'auto');\r\n      if(options.title) {\r\n        this.title.innerHTML = options.title;\r\n      } else {\r\n        this.title.append(i18n(options.titleLangKey));\r\n      }\r\n      c.append(this.title);\r\n\r\n      if(options.titleRight) {\r\n        const titleRight = document.createElement('div');\r\n        titleRight.classList.add('row-title', 'row-title-right');\r\n\r\n        if(typeof(options.titleRight) === 'string') {\r\n          titleRight.innerHTML = options.titleRight;\r\n        } else {\r\n          titleRight.append(options.titleRight);\r\n        }\r\n\r\n        c.append(titleRight);\r\n      }\r\n    }\r\n\r\n    if(options.icon) {\r\n      havePadding = true;\r\n      this.title.classList.add('tgico', 'tgico-' + options.icon);\r\n      this.container.classList.add('row-with-icon');\r\n    }\r\n\r\n    if(havePadding) {\r\n      this.container.classList.add('row-with-padding');\r\n    }\r\n\r\n    if(options.navigationTab) {\r\n      options.clickable = () => options.navigationTab.open();\r\n    }\r\n\r\n    if(options.clickable || options.radioField || options.checkboxField) {\r\n      if(typeof(options.clickable) === 'function') {\r\n        this.container.addEventListener('click', (e) => {\r\n          if(this.freezed) return;\r\n          (options.clickable as any)(e);\r\n        });\r\n      }\r\n\r\n      this.container.classList.add('row-clickable', 'hover-effect');\r\n      ripple(this.container, undefined, undefined, true);\r\n\r\n      /* if(options.radioField || options.checkboxField) {\r\n        this.container.prepend(this.container.lastElementChild);\r\n      } */\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nexport const RadioFormFromRows = (rows: Row[], onChange: (value: string) => void) => {\r\n  return RadioForm(rows.map(r => ({container: r.container, input: r.radioField.input})), onChange);\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function RadioForm(radios: {container: HTMLElement, input: HTMLInputElement}[], onChange: (value: string) => void) {\r\n  const form = document.createElement('form');\r\n\r\n  radios.forEach(r => {\r\n    const {container, input} = r;\r\n    form.append(container);\r\n    input.addEventListener('change', () => {\r\n      if(input.checked) {\r\n        onChange(input.value);\r\n      }\r\n    });\r\n  });\r\n\r\n  return form;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// https://stackoverflow.com/a/30810322\r\nfunction fallbackCopyTextToClipboard(text: string) {\r\n  var textArea = document.createElement(\"textarea\");\r\n  textArea.value = text;\r\n  \r\n  // Avoid scrolling to bottom\r\n  textArea.style.top = \"0\";\r\n  textArea.style.left = \"0\";\r\n  textArea.style.position = \"fixed\";\r\n\r\n  document.body.appendChild(textArea);\r\n  textArea.focus();\r\n  textArea.select();\r\n\r\n  try {\r\n    document.execCommand('copy');\r\n    //const successful = document.execCommand('copy');\r\n    //const msg = successful ? 'successful' : 'unsuccessful';\r\n    //console.log('Fallback: Copying text command was ' + msg);\r\n  } catch(err) {\r\n    //console.error('Fallback: Oops, unable to copy', err);\r\n  }\r\n\r\n  document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text: string) {\r\n  if(!navigator.clipboard) {\r\n    fallbackCopyTextToClipboard(text);\r\n    return;\r\n  }\r\n  \r\n  navigator.clipboard.writeText(text);/* .then(function() {\r\n    console.log('Async: Copying to clipboard was successful!');\r\n  }, function(err) {\r\n    console.error('Async: Could not copy text: ', err);\r\n  }); */\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport { getDeepProperty } from \"../helpers/object\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\n\r\nexport default class RadioField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public main: HTMLElement;\r\n\r\n  constructor(options: {\r\n    text?: string, \r\n    langKey?: LangPackKey,\r\n    name: string, \r\n    value?: string, \r\n    stateKey?: string\r\n  }) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('radio-field');\r\n  \r\n    const input = this.input = document.createElement('input');\r\n    input.type = 'radio';\r\n    /* input.id =  */input.name = 'input-radio-' + options.name;\r\n  \r\n    if(options.value) {\r\n      input.value = options.value;\r\n  \r\n      if(options.stateKey) {\r\n        appStateManager.getState().then(state => {\r\n          input.checked = getDeepProperty(state, options.stateKey) === options.value;\r\n        });\r\n    \r\n        input.addEventListener('change', () => {\r\n          appStateManager.setByKey(options.stateKey, options.value);\r\n        });\r\n      }\r\n    }\r\n  \r\n    const main = this.main = document.createElement('div');\r\n    main.classList.add('radio-field-main');\r\n  \r\n    if(options.text) {\r\n      main.innerHTML = options.text;\r\n      /* const caption = document.createElement('div');\r\n      caption.classList.add('radio-field-main-caption');\r\n      caption.innerHTML = text;\r\n  \r\n      if(subtitle) {\r\n        label.classList.add('radio-field-with-subtitle');\r\n        caption.insertAdjacentHTML('beforeend', `<div class=\"radio-field-main-subtitle\">${subtitle}</div>`);\r\n      }\r\n  \r\n      main.append(caption); */\r\n    } else if(options.langKey) {\r\n      _i18n(main, options.langKey);\r\n    }\r\n  \r\n    label.append(input, main);\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\n\r\nconst toastEl = document.createElement('div');\r\ntoastEl.classList.add('toast');\r\nexport function toast(content: string | Node) {\r\n  replaceContent(toastEl, content);\r\n  document.body.append(toastEl);\r\n\r\n  if(toastEl.dataset.timeout) clearTimeout(+toastEl.dataset.timeout);\r\n  toastEl.dataset.timeout = '' + setTimeout(() => {\r\n    toastEl.remove();\r\n    delete toastEl.dataset.timeout;\r\n  }, 3000);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport { debounce } from \"../helpers/schedulers\";\r\nimport appChatsManager from \"../lib/appManagers/appChatsManager\";\r\nimport { LangPackKey } from \"../lib/langPack\";\r\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\nimport InputField, { InputFieldOptions, InputState } from \"./inputField\";\r\n\r\nexport class UsernameInputField extends InputField {\r\n  private checkUsernamePromise: Promise<any>;\r\n  private checkUsernameDebounced: (username: string) => void;\r\n  public options: InputFieldOptions & {\r\n    peerId: number,\r\n    listenerSetter: ListenerSetter,\r\n    onChange?: () => void,\r\n    invalidText: LangPackKey,\r\n    takenText: LangPackKey,\r\n    availableText: LangPackKey,\r\n    head?: string\r\n  };\r\n\r\n  constructor(options: UsernameInputField['options']) {\r\n    super(options);\r\n\r\n    this.checkUsernameDebounced = debounce(this.checkUsername.bind(this), 150, false, true);\r\n\r\n    options.listenerSetter.add(this.input, 'input', () => {\r\n      const value = this.getValue();\r\n\r\n      //console.log('userNameInput:', value);\r\n      if(value === this.originalValue || !value.length) {\r\n        this.setState(InputState.Neutral, this.options.label);\r\n        this.options.onChange && this.options.onChange();\r\n        return;\r\n      } else if(!RichTextProcessor.isUsernameValid(value)) { // does not check the last underscore\r\n        this.setError(this.options.invalidText);\r\n      } else {\r\n        this.setState(InputState.Neutral);\r\n      }\r\n\r\n      if(this.input.classList.contains('error')) {\r\n        this.options.onChange && this.options.onChange();\r\n        return;\r\n      }\r\n\r\n      this.checkUsernameDebounced(value);\r\n    });\r\n  }\r\n\r\n  public getValue() {\r\n    let value = this.value;\r\n    if(this.options.head) {\r\n      value = value.slice(this.options.head.length);\r\n      this.setValueSilently(this.options.head + value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  private checkUsername(username: string) {\r\n    if(this.checkUsernamePromise) return;\r\n\r\n    if(this.options.peerId) {\r\n      this.checkUsernamePromise = apiManager.invokeApi('channels.checkUsername', {\r\n        channel: appChatsManager.getChannelInput(-this.options.peerId),\r\n        username\r\n      });\r\n    } else {\r\n      this.checkUsernamePromise = apiManager.invokeApi('account.checkUsername', {username});\r\n    }\r\n\r\n    this.checkUsernamePromise.then(available => {\r\n      if(this.getValue() !== username) return;\r\n\r\n      if(available) {\r\n        this.setState(InputState.Valid, this.options.availableText);\r\n      } else {\r\n        this.setError(this.options.takenText);\r\n      }\r\n    }, (err) => {\r\n      if(this.getValue() !== username) return;\r\n\r\n      switch(err.type) {\r\n        case 'USERNAME_INVALID': {\r\n          this.setError(this.options.invalidText);\r\n          break;\r\n        }\r\n      }\r\n    }).then(() => {\r\n      this.checkUsernamePromise = undefined;\r\n      this.options.onChange && this.options.onChange();\r\n\r\n      const value = this.getValue();\r\n      if(value !== username && this.isValid() && RichTextProcessor.isUsernameValid(value)) {\r\n        this.checkUsername(value);\r\n      }\r\n    });\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport AvatarElement from \"../avatar\";\r\nimport PopupElement, { addCancelButton, PopupButton, PopupOptions } from \".\";\r\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\r\nimport CheckboxField, { CheckboxFieldOptions } from \"../checkboxField\";\r\n\r\nexport type PopupPeerButtonCallbackCheckboxes = Partial<{[text in LangPackKey]: boolean}>;\r\nexport type PopupPeerButtonCallback = (checkboxes?: PopupPeerButtonCallbackCheckboxes) => void;\r\n\r\nexport type PopupPeerOptions = PopupOptions & Partial<{\r\n  peerId: number,\r\n  title: string,\r\n  titleLangKey?: LangPackKey,\r\n  titleLangArgs?: any[],\r\n  description: string,\r\n  descriptionLangKey?: LangPackKey,\r\n  descriptionLangArgs?: any[],\r\n  buttons: Array<Omit<PopupButton, 'callback'> & Partial<{callback: PopupPeerButtonCallback}>>,\r\n  checkboxes: Array<CheckboxFieldOptions & {checkboxField?: CheckboxField}>\r\n}>;\r\nexport default class PopupPeer extends PopupElement {\r\n  constructor(private className: string, options: PopupPeerOptions = {}) {\r\n    super('popup-peer' + (className ? ' ' + className : ''), addCancelButton(options.buttons), {overlayClosable: true, ...options});\r\n\r\n    if(options.peerId) {\r\n      let avatarEl = new AvatarElement();\r\n      avatarEl.setAttribute('dialog', '1');\r\n      avatarEl.setAttribute('peer', '' + options.peerId);\r\n      avatarEl.classList.add('avatar-32');\r\n      this.header.prepend(avatarEl);\r\n    }\r\n\r\n    if(options.descriptionLangKey) this.title.append(i18n(options.titleLangKey, options.titleLangArgs));\r\n    else this.title.innerText = options.title || '';\r\n\r\n    let p = document.createElement('p');\r\n    p.classList.add('popup-description');\r\n    if(options.descriptionLangKey) p.append(i18n(options.descriptionLangKey, options.descriptionLangArgs));\r\n    else p.innerHTML = options.description;\r\n\r\n    const fragment = document.createDocumentFragment();\r\n    fragment.append(p);\r\n\r\n    if(options.checkboxes) {\r\n      this.container.classList.add('have-checkbox');\r\n      \r\n      options.checkboxes.forEach(o => {\r\n        o.withRipple = true;\r\n        const checkboxField = new CheckboxField(o);\r\n        o.checkboxField = checkboxField;\r\n        fragment.append(checkboxField.label);\r\n      });\r\n\r\n      options.buttons.forEach(button => {\r\n        if(button.callback) {\r\n          const original = button.callback;\r\n          button.callback = () => {\r\n            const c: PopupPeerButtonCallbackCheckboxes = {};\r\n            options.checkboxes.forEach(o => {\r\n              c[o.text] = o.checkboxField.checked;\r\n            });\r\n            original(c);\r\n          };\r\n        }\r\n      });\r\n    }\r\n\r\n    this.container.insertBefore(fragment, this.header.nextElementSibling);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { copyTextToClipboard } from \"../../../helpers/clipboard\";\r\nimport { randomLong } from \"../../../helpers/random\";\r\nimport { Chat, ChatFull, ExportedChatInvite } from \"../../../layer\";\r\nimport appChatsManager from \"../../../lib/appManagers/appChatsManager\";\r\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\r\nimport Button from \"../../button\";\r\nimport { setButtonLoader } from \"../../misc\";\r\nimport RadioField from \"../../radioField\";\r\nimport Row, { RadioFormFromRows } from \"../../row\";\r\nimport { SettingSection } from \"../../sidebarLeft\";\r\nimport { toast } from \"../../toast\";\r\nimport { UsernameInputField } from \"../../usernameInputField\";\r\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\r\nimport I18n from \"../../../lib/langPack\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\r\n\r\nexport default class AppChatTypeTab extends SliderSuperTabEventable {\r\n  public chatId: number;\r\n  public chatFull: ChatFull;\r\n\r\n  protected init() {\r\n    this.container.classList.add('edit-peer-container', 'group-type-container');\r\n\r\n    const isBroadcast = appChatsManager.isBroadcast(this.chatId);\r\n\r\n    this.setTitle(isBroadcast ? 'ChannelType' : 'GroupType');\r\n\r\n    const section = new SettingSection({\r\n      name: isBroadcast ? 'ChannelType' : 'GroupType'\r\n    });\r\n\r\n    const random = randomLong();\r\n    const privateRow = new Row({\r\n      radioField: new RadioField({\r\n        langKey: isBroadcast ? 'ChannelPrivate' : 'MegaPrivate', \r\n        name: random, \r\n        value: 'private'\r\n      }),\r\n      subtitleLangKey: isBroadcast ? 'ChannelPrivateInfo' : 'MegaPrivateInfo'\r\n    });\r\n    const publicRow = new Row({\r\n      radioField: new RadioField({\r\n        langKey: isBroadcast ? 'ChannelPublic' : 'MegaPublic', \r\n        name: random, \r\n        value: 'public'\r\n      }),\r\n      subtitleLangKey: isBroadcast ? 'ChannelPublicInfo' : 'MegaPublicInfo'\r\n    });\r\n    const form = RadioFormFromRows([privateRow, publicRow], (value) => {\r\n      const a = [privateSection, publicSection];\r\n      if(value === 'public') a.reverse();\r\n\r\n      a[0].container.classList.remove('hide');\r\n      a[1].container.classList.add('hide');\r\n\r\n      onChange();\r\n    });\r\n\r\n    const chat: Chat = appChatsManager.getChat(this.chatId);\r\n\r\n    section.content.append(form);\r\n\r\n    const privateSection = new SettingSection({});\r\n\r\n    //let revoked = false;\r\n    const linkRow = new Row({\r\n      title: (this.chatFull.exported_invite as ExportedChatInvite.chatInviteExported).link,\r\n      subtitleLangKey: isBroadcast ? 'ChannelPrivateLinkHelp' : 'MegaPrivateLinkHelp',\r\n      clickable: () => {\r\n        copyTextToClipboard((this.chatFull.exported_invite as ExportedChatInvite.chatInviteExported).link);\r\n        toast(I18n.format('LinkCopied', true));\r\n      }\r\n    });\r\n\r\n    const btnRevoke = Button('btn-primary btn-transparent danger', {icon: 'delete', text: 'RevokeLink'});\r\n\r\n    attachClickEvent(btnRevoke, () => {\r\n      new PopupPeer('revoke-link', {\r\n        buttons: [{\r\n          langKey: 'RevokeButton',\r\n          callback: () => {\r\n            const toggle = toggleDisability([btnRevoke], true);\r\n            \r\n            appProfileManager.getChatInviteLink(this.chatId, true).then(link => {\r\n              toggle();\r\n              linkRow.title.innerHTML = link;\r\n              //revoked = true;\r\n              //onChange();\r\n            });\r\n          }\r\n        }],\r\n        titleLangKey: 'RevokeLink',\r\n        descriptionLangKey: 'RevokeAlert'\r\n      }).show();\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    privateSection.content.append(linkRow.container, btnRevoke);\r\n\r\n    const publicSection = new SettingSection({\r\n      caption: isBroadcast ? 'Channel.UsernameAboutChannel' : 'Channel.UsernameAboutGroup',\r\n      noDelimiter: true\r\n    });\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const placeholder = 't.me/';\r\n\r\n    const onChange = () => {\r\n      const changed = (privateRow.radioField.checked && (originalValue !== placeholder/*  || revoked */)) \r\n        || (linkInputField.isValid() && linkInputField.input.classList.contains('valid'));\r\n      applyBtn.classList.toggle('is-visible', changed);\r\n    };\r\n\r\n    const linkInputField = new UsernameInputField({\r\n      label: 'SetUrlPlaceholder',\r\n      name: 'group-public-link',\r\n      plainText: true,\r\n      listenerSetter: this.listenerSetter,\r\n      availableText: 'Link.Available',\r\n      invalidText: 'Link.Invalid',\r\n      takenText: 'Link.Taken',\r\n      onChange: onChange,\r\n      peerId: -this.chatId,\r\n      head: placeholder\r\n    });\r\n\r\n    const originalValue = placeholder + ((chat as Chat.channel).username || '');\r\n\r\n    inputWrapper.append(linkInputField.container)\r\n    publicSection.content.append(inputWrapper);\r\n\r\n    const applyBtn = ButtonCorner({icon: 'check', className: 'is-visible'});\r\n    this.content.append(applyBtn);\r\n\r\n    attachClickEvent(applyBtn, () => {\r\n      /* const unsetLoader =  */setButtonLoader(applyBtn);\r\n      const username = publicRow.radioField.checked ? linkInputField.getValue() : '';\r\n      appChatsManager.migrateChat(this.chatId).then(channelId => {\r\n        return appChatsManager.updateUsername(channelId, username);\r\n      }).then(() => {\r\n        //unsetLoader();\r\n        this.close();\r\n      });\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    (originalValue !== placeholder ? publicRow : privateRow).radioField.checked = true;\r\n    linkInputField.setOriginalValue(originalValue);\r\n\r\n    this.scrollable.append(section.container, privateSection.container, publicSection.container);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Scrollable from \"../components/scrollable\";\r\nimport { safeAssign } from \"./object\";\r\n\r\nexport default class ScrollableLoader {\r\n  public loading = false;\r\n  private scrollable: Scrollable;\r\n  private getPromise: () => Promise<any>;\r\n  private promise: Promise<any>;\r\n  private loaded = false;\r\n\r\n  constructor(options: {\r\n    scrollable: ScrollableLoader['scrollable'],\r\n    getPromise: ScrollableLoader['getPromise']\r\n  }) {\r\n    safeAssign(this, options);\r\n\r\n    options.scrollable.onScrolledBottom = () => {\r\n      this.load();\r\n    };\r\n  }\r\n  \r\n  public load() {\r\n    if(this.loaded) {\r\n      return Promise.resolve();\r\n    }\r\n    \r\n    if(this.loading) {\r\n      return this.promise;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.promise = this.getPromise().then(done => {\r\n      this.loading = false;\r\n      this.promise = undefined;\r\n\r\n      if(done) {\r\n        this.loaded = true;\r\n        this.scrollable.onScrolledBottom = null;\r\n      } else {\r\n        this.scrollable.checkForTriggers();\r\n      }\r\n    }, () => {\r\n      this.promise = undefined;\r\n      this.loading = false;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appChatsManager, { ChatRights } from \"../lib/appManagers/appChatsManager\";\r\nimport appDialogsManager from \"../lib/appManagers/appDialogsManager\";\r\nimport appMessagesManager, { Dialog } from \"../lib/appManagers/appMessagesManager\";\r\nimport appPhotosManager from \"../lib/appManagers/appPhotosManager\";\r\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport Scrollable from \"./scrollable\";\r\nimport { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport CheckboxField from \"./checkboxField\";\r\nimport appProfileManager from \"../lib/appManagers/appProfileManager\";\r\nimport { safeAssign } from \"../helpers/object\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport PeerTitle from \"./peerTitle\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\n\r\ntype PeerType = 'contacts' | 'dialogs' | 'channelParticipants';\r\n\r\n// TODO: правильная сортировка для addMembers, т.е. для peerType: 'contacts', потому что там идут сначала контакты - потом неконтакты, а должно всё сортироваться по имени\r\n\r\nlet loadedAllDialogs = false, loadAllDialogsPromise: Promise<any>;\r\nexport default class AppSelectPeers {\r\n  public container = document.createElement('div');\r\n  public list = appDialogsManager.createChatList(/* {\r\n    handheldsSize: 66,\r\n    avatarSize: 48\r\n  } */);\r\n  public chatsContainer = document.createElement('div');\r\n  public scrollable: Scrollable;\r\n  public selectedScrollable: Scrollable;\r\n  \r\n  public selectedContainer: HTMLElement;\r\n  public input: HTMLInputElement;\r\n  \r\n  //public selected: {[peerId: number]: HTMLElement} = {};\r\n  public selected = new Set<any>();\r\n\r\n  public freezed = false;\r\n\r\n  private folderId = 0;\r\n  private offsetIndex = 0;\r\n  private promise: Promise<any>;\r\n\r\n  private query = '';\r\n  private cachedContacts: number[];\r\n\r\n  private loadedWhat: Partial<{[k in 'dialogs' | 'archived' | 'contacts' | 'channelParticipants']: true}> = {};\r\n\r\n  private renderedPeerIds: Set<number> = new Set();\r\n\r\n  private appendTo: HTMLElement;\r\n  private onChange: (length: number) => void;\r\n  private peerType: PeerType[] = ['dialogs'];\r\n  private renderResultsFunc: (peerIds: number[]) => void;\r\n  private chatRightsAction: ChatRights;\r\n  private multiSelect = true;\r\n  private rippleEnabled = true;\r\n  private avatarSize = 48;\r\n\r\n  private tempIds: {[k in keyof AppSelectPeers['loadedWhat']]: number} = {};\r\n  private peerId = 0;\r\n\r\n  private placeholder: LangPackKey;\r\n  \r\n  constructor(options: {\r\n    appendTo: AppSelectPeers['appendTo'], \r\n    onChange?: AppSelectPeers['onChange'], \r\n    peerType?: AppSelectPeers['peerType'], \r\n    peerId?: number,\r\n    onFirstRender?: () => void, \r\n    renderResultsFunc?: AppSelectPeers['renderResultsFunc'], \r\n    chatRightsAction?: AppSelectPeers['chatRightsAction'], \r\n    multiSelect?: AppSelectPeers['multiSelect'],\r\n    rippleEnabled?: boolean,\r\n    avatarSize?: AppSelectPeers['avatarSize'],\r\n    placeholder?: LangPackKey\r\n  }) {\r\n    safeAssign(this, options);\r\n\r\n    this.container.classList.add('selector');\r\n\r\n    let needSwitchList = false;\r\n    const f = (this.renderResultsFunc || this.renderResults).bind(this);\r\n    this.renderResultsFunc = (peerIds: number[]) => {\r\n      if(needSwitchList) {\r\n        this.scrollable.splitUp.replaceWith(this.list);\r\n        this.scrollable.setVirtualContainer(this.list);\r\n        needSwitchList = false;\r\n      }\r\n      \r\n      peerIds = peerIds.filter(peerId => {\r\n        const notRendered = !this.renderedPeerIds.has(peerId);\r\n        if(notRendered) this.renderedPeerIds.add(peerId);\r\n        return notRendered;\r\n      });\r\n\r\n      return f(peerIds);\r\n    };\r\n\r\n    this.input = document.createElement('input');\r\n    this.input.classList.add('selector-search-input');\r\n    if(this.placeholder) {\r\n      _i18n(this.input, this.placeholder, undefined, 'placeholder');\r\n    } else {\r\n      _i18n(this.input, 'SendMessageTo', undefined, 'placeholder');\r\n    }\r\n\r\n    this.input.type = 'text';\r\n\r\n    if(this.multiSelect) {\r\n      let topContainer = document.createElement('div');\r\n      topContainer.classList.add('selector-search-container');\r\n  \r\n      this.selectedContainer = document.createElement('div');\r\n      this.selectedContainer.classList.add('selector-search');\r\n      \r\n      this.selectedContainer.append(this.input);\r\n      topContainer.append(this.selectedContainer);\r\n      this.selectedScrollable = new Scrollable(topContainer);\r\n  \r\n      let delimiter = document.createElement('hr');\r\n\r\n      this.selectedContainer.addEventListener('click', (e) => {\r\n        if(this.freezed) return;\r\n        let target = e.target as HTMLElement;\r\n        target = findUpClassName(target, 'selector-user');\r\n  \r\n        if(!target) return;\r\n  \r\n        const peerId = target.dataset.key;\r\n        const li = this.chatsContainer.querySelector('[data-peer-id=\"' + peerId + '\"]') as HTMLElement;\r\n        if(!li) {\r\n          this.remove(+peerId || peerId);\r\n        } else {\r\n          li.click();\r\n        }\r\n      });\r\n\r\n      this.container.append(topContainer, delimiter);\r\n    }\r\n\r\n    this.chatsContainer.classList.add('chatlist-container');\r\n    this.chatsContainer.append(this.list);\r\n    this.scrollable = new Scrollable(this.chatsContainer);\r\n    this.scrollable.setVirtualContainer(this.list);\r\n\r\n    this.chatsContainer.addEventListener('click', (e) => {\r\n      const target = findUpAttribute(e.target, 'data-peer-id') as HTMLElement;\r\n      cancelEvent(e);\r\n\r\n      if(!target) return;\r\n      if(this.freezed) return;\r\n\r\n      let key: any = target.dataset.peerId;\r\n      key = +key || key;\r\n\r\n      if(!this.multiSelect) {\r\n        this.add(key);\r\n        return;\r\n      }\r\n\r\n      //target.classList.toggle('active');\r\n      if(this.selected.has(key)) {\r\n        this.remove(key);\r\n      } else {\r\n        this.add(key);\r\n      }\r\n\r\n      const checkbox = target.querySelector('input') as HTMLInputElement;\r\n      checkbox.checked = !checkbox.checked;\r\n    });\r\n\r\n    this.input.addEventListener('input', () => {\r\n      const value = this.input.value;\r\n      if(this.query !== value) {\r\n        if(this.peerType.includes('contacts')) {\r\n          this.cachedContacts = null;\r\n        }\r\n        \r\n        //if(this.peerType.includes('dialogs')) {\r\n          this.folderId = 0;\r\n          this.offsetIndex = 0;\r\n        //}\r\n\r\n        for(let i in this.tempIds) {\r\n          // @ts-ignore\r\n          ++this.tempIds[i];\r\n        }\r\n\r\n        this.list = appDialogsManager.createChatList();\r\n\r\n        this.promise = null;\r\n        this.loadedWhat = {};\r\n        this.query = value;\r\n        this.renderedPeerIds.clear();\r\n        needSwitchList = true;\r\n        \r\n        //console.log('selectPeers input:', this.query);\r\n        this.getMoreResults();\r\n      }\r\n    });\r\n\r\n    this.scrollable.onScrolledBottom = () => {\r\n      this.getMoreResults();\r\n    };\r\n\r\n    this.container.append(this.chatsContainer);\r\n    this.appendTo.append(this.container);\r\n\r\n    // WARNING TIMEOUT\r\n    setTimeout(() => {\r\n      let getResultsPromise = this.getMoreResults() as Promise<any>;\r\n      if(options.onFirstRender) {\r\n        getResultsPromise.then(() => {\r\n          options.onFirstRender();\r\n        });\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  private renderSaved() {\r\n    if(!this.offsetIndex && this.folderId === 0 && this.peerType.includes('dialogs') && (!this.query || appUsersManager.testSelfSearch(this.query))) {\r\n      this.renderResultsFunc([rootScope.myId]);\r\n    }\r\n  }\r\n\r\n  private getTempId(type: keyof AppSelectPeers['tempIds']) {\r\n    if(this.tempIds[type] === undefined) {\r\n      this.tempIds[type] = 0;\r\n    }\r\n\r\n    return ++this.tempIds[type];\r\n  }\r\n\r\n  private async getMoreDialogs(): Promise<any> {\r\n    if(this.promise) return this.promise;\r\n\r\n    if(this.loadedWhat.dialogs && this.loadedWhat.archived) {\r\n      return;\r\n    }\r\n    \r\n    // в десктопе - сначала без группы, потом архивные, потом контакты без сообщений\r\n    const pageCount = appPhotosManager.windowH / 72 * 1.25 | 0;\r\n\r\n    const tempId = this.getTempId('dialogs');\r\n    this.promise = appMessagesManager.getConversations(this.query, this.offsetIndex, pageCount, this.folderId);\r\n    const value = await this.promise;\r\n    this.promise = null;\r\n\r\n    if(this.tempIds.dialogs !== tempId) {\r\n      return;\r\n    }\r\n\r\n    let dialogs = value.dialogs as Dialog[];\r\n    if(dialogs.length) {\r\n      const newOffsetIndex = dialogs[dialogs.length - 1].index || 0;\r\n\r\n      dialogs = dialogs.slice();\r\n      dialogs.findAndSplice(d => d.peerId === rootScope.myId); // no my account\r\n\r\n      if(this.chatRightsAction) {\r\n        dialogs = dialogs.filter(d => {\r\n          return (d.peerId > 0 && (this.chatRightsAction !== 'send_messages' || appUsersManager.canSendToUser(d.peerId))) || appChatsManager.hasRights(-d.peerId, this.chatRightsAction);\r\n        });\r\n      }\r\n\r\n      this.renderSaved();\r\n\r\n      this.offsetIndex = newOffsetIndex;\r\n\r\n      this.renderResultsFunc(dialogs.map(dialog => dialog.peerId));\r\n    } else {\r\n      if(!this.loadedWhat.dialogs) {\r\n        this.renderSaved();\r\n\r\n        this.loadedWhat.dialogs = true;\r\n        this.offsetIndex = 0;\r\n        this.folderId = 1;\r\n\r\n        return this.getMoreDialogs();\r\n      } else {\r\n        this.loadedWhat.archived = true;\r\n\r\n        if(!this.loadedWhat.contacts && this.peerType.includes('contacts')) {\r\n          return this.getMoreContacts();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getMoreContacts() {\r\n    if(this.promise) return this.promise;\r\n\r\n    if(this.loadedWhat.contacts) {\r\n      return;\r\n    }\r\n\r\n    if(!this.cachedContacts) {\r\n      /* const promises: Promise<any>[] = [appUsersManager.getContacts(this.query)];\r\n      if(!this.peerType.includes('dialogs')) {\r\n        promises.push(appMessagesManager.getConversationsAll());\r\n      }\r\n\r\n      this.promise = Promise.all(promises);\r\n      this.cachedContacts = (await this.promise)[0].slice(); */\r\n      const tempId = this.getTempId('contacts');\r\n      this.promise = appUsersManager.getContacts(this.query);\r\n      this.cachedContacts = (await this.promise).slice();\r\n      if(this.tempIds.contacts !== tempId) {\r\n        return;\r\n      }\r\n\r\n      this.cachedContacts.findAndSplice(userId => userId === rootScope.myId); // no my account\r\n      this.promise = null;\r\n    }\r\n\r\n    if(this.cachedContacts.length) {\r\n      const pageCount = appPhotosManager.windowH / 72 * 1.25 | 0;\r\n      const arr = this.cachedContacts.splice(0, pageCount);\r\n      this.renderResultsFunc(arr);\r\n    }\r\n    \r\n    if(!this.cachedContacts.length) {\r\n      this.loadedWhat.contacts = true;\r\n\r\n      // need to load non-contacts\r\n      if(!this.peerType.includes('dialogs')) {\r\n        return this.getMoreDialogs();\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getMoreChannelParticipants() {\r\n    if(this.promise) return this.promise;\r\n\r\n    if(this.loadedWhat.channelParticipants) {\r\n      return;\r\n    }\r\n\r\n    const pageCount = 50; // same as in group permissions to use cache\r\n\r\n    const tempId = this.getTempId('channelParticipants');\r\n    const promise = appProfileManager.getChannelParticipants(-this.peerId, {_: 'channelParticipantsSearch', q: this.query}, pageCount, this.list.childElementCount);\r\n    const participants = await promise;\r\n    if(this.tempIds.channelParticipants !== tempId) {\r\n      return;\r\n    }\r\n    \r\n    const peerIds = participants.participants.map(participant => {\r\n      return appChatsManager.getParticipantPeerId(participant);\r\n    });\r\n    peerIds.findAndSplice(u => u === rootScope.myId);\r\n    this.renderResultsFunc(peerIds);\r\n\r\n    if(this.list.childElementCount >= participants.count || participants.participants.length < pageCount) {\r\n      this.loadedWhat.channelParticipants = true;\r\n    }\r\n  }\r\n\r\n  checkForTriggers = () => {\r\n    this.scrollable.checkForTriggers();\r\n  };\r\n\r\n  private getMoreResults() {\r\n    const get = () => {\r\n      const promises: Promise<any>[] = [];\r\n\r\n      if(!loadedAllDialogs && (this.peerType.includes('dialogs') || this.peerType.includes('contacts'))) {\r\n        if(!loadAllDialogsPromise) {\r\n          loadAllDialogsPromise = appMessagesManager.getConversationsAll()\r\n          .then(() => {\r\n            loadedAllDialogs = true;\r\n          }).finally(() => {\r\n            loadAllDialogsPromise = null;\r\n          });\r\n        }\r\n\r\n        promises.push(loadAllDialogsPromise);\r\n      }\r\n  \r\n      if((this.peerType.includes('dialogs') || this.loadedWhat.contacts) && !this.loadedWhat.archived) { // to load non-contacts\r\n        promises.push(this.getMoreDialogs());\r\n  \r\n        if(!this.loadedWhat.archived) {\r\n          return promises;\r\n        }\r\n      }\r\n      \r\n      if(this.peerType.includes('contacts') && !this.loadedWhat.contacts) {\r\n        promises.push(this.getMoreContacts());\r\n      }\r\n\r\n      if(this.peerType.includes('channelParticipants') && !this.loadedWhat.channelParticipants) {\r\n        promises.push(this.getMoreChannelParticipants());\r\n      }\r\n  \r\n      return promises;\r\n    };\r\n    \r\n    const promises = get();\r\n    const promise = Promise.all(promises);\r\n    if(promises.length) {\r\n      promise.then(this.checkForTriggers);\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private renderResults(peerIds: number[]) {\r\n    //console.log('will renderResults:', peerIds);\r\n\r\n    // оставим только неконтакты с диалогов\r\n    if(!this.peerType.includes('dialogs') && this.loadedWhat.contacts) {\r\n      peerIds = peerIds.filter(peerId => {\r\n        return appUsersManager.isNonContactUser(peerId);\r\n      });\r\n    }\r\n\r\n    peerIds.forEach(peerId => {\r\n      const {dom} = appDialogsManager.addDialogNew({\r\n        dialog: peerId,\r\n        container: this.scrollable,\r\n        drawStatus: false,\r\n        rippleEnabled: this.rippleEnabled,\r\n        avatarSize: this.avatarSize\r\n      });\r\n\r\n      if(this.multiSelect) {\r\n        const selected = this.selected.has(peerId);\r\n        const checkboxField = new CheckboxField();\r\n\r\n        if(selected) {\r\n          //dom.listEl.classList.add('active');\r\n          checkboxField.input.checked = true;\r\n        }\r\n\r\n        dom.containerEl.prepend(checkboxField.label);\r\n      }\r\n\r\n      let subtitleEl: HTMLElement;\r\n      if(peerId < 0) {\r\n        subtitleEl = appProfileManager.getChatMembersString(-peerId);\r\n      } else if(peerId === rootScope.myId) {\r\n        subtitleEl = i18n('Presence.YourChat');\r\n      } else {\r\n        subtitleEl = appUsersManager.getUserStatusString(peerId);\r\n      }\r\n\r\n      dom.lastMessageSpan.append(subtitleEl);\r\n    });\r\n  }\r\n\r\n  public add(peerId: any, title?: string | HTMLElement, scroll = true) {\r\n    //console.trace('add');\r\n    this.selected.add(peerId);\r\n\r\n    if(!this.multiSelect) {\r\n      this.onChange(this.selected.size);\r\n      return;\r\n    }\r\n\r\n    const div = document.createElement('div');\r\n    div.classList.add('selector-user', 'scale-in');\r\n\r\n    const avatarEl = document.createElement('avatar-element');\r\n    avatarEl.classList.add('selector-user-avatar', 'tgico');\r\n    avatarEl.setAttribute('dialog', '1');\r\n    avatarEl.classList.add('avatar-32');\r\n\r\n    div.dataset.key = '' + peerId;\r\n    if(typeof(peerId) === 'number') {\r\n      if(title === undefined) {\r\n        title = new PeerTitle({peerId, onlyFirstName: true, dialog: true}).element;\r\n      }\r\n\r\n      avatarEl.setAttribute('peer', '' + peerId);\r\n    }\r\n\r\n    if(title) {\r\n      if(typeof(title) === 'string') {\r\n        div.innerHTML = title;\r\n      } else {\r\n        replaceContent(div, title);\r\n        div.append(title);\r\n      }\r\n    }\r\n\r\n    div.insertAdjacentElement('afterbegin', avatarEl);\r\n\r\n    this.selectedContainer.insertBefore(div, this.input);\r\n    //this.selectedScrollable.scrollTop = this.selectedScrollable.scrollHeight;\r\n    this.onChange && this.onChange(this.selected.size);\r\n    \r\n    if(scroll) {\r\n      this.selectedScrollable.scrollIntoViewNew(this.input, 'center');\r\n    }\r\n    \r\n    return div;\r\n  }\r\n\r\n  public remove(key: any) {\r\n    if(!this.multiSelect) return;\r\n    //const div = this.selected[peerId];\r\n    const div = this.selectedContainer.querySelector(`[data-key=\"${key}\"]`) as HTMLElement;\r\n    div.classList.remove('scale-in');\r\n    void div.offsetWidth;\r\n    div.classList.add('scale-out');\r\n\r\n    const onAnimationEnd = () => {\r\n      this.selected.delete(key);\r\n      div.remove();\r\n      this.onChange && this.onChange(this.selected.size);\r\n    };\r\n\r\n    if(rootScope.settings.animationsEnabled) {\r\n      div.addEventListener('animationend', onAnimationEnd, {once: true});\r\n    } else {\r\n      onAnimationEnd();\r\n    }\r\n  }\r\n\r\n  public getSelected() {\r\n    return [...this.selected];\r\n  }\r\n\r\n  public addInitial(values: any[]) {\r\n    values.forEach(value => {\r\n      this.add(value, undefined, false);\r\n    });\r\n\r\n    window.requestAnimationFrame(() => { // ! not the best place for this raf though it works\r\n      this.selectedScrollable.scrollIntoViewNew(this.input, 'center', undefined, undefined, FocusDirection.Static);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { isTouchSupported } from \"../../helpers/touchSupport\";\r\nimport AppSelectPeers from \"../appSelectPeers\";\r\nimport PopupElement from \".\";\r\nimport { LangPackKey, _i18n } from \"../../lib/langPack\";\r\n\r\nexport default class PopupPickUser extends PopupElement {\r\n  protected selector: AppSelectPeers;\r\n  \r\n  constructor(options: {\r\n    peerTypes: AppSelectPeers['peerType'], \r\n    onSelect?: (peerId: number) => Promise<void> | void, \r\n    onClose?: () => void,\r\n    placeholder: LangPackKey,\r\n    chatRightsAction?: AppSelectPeers['chatRightsAction'],\r\n    peerId?: number,\r\n  }) {\r\n    super('popup-forward', null, {closable: true, overlayClosable: true, body: true});\r\n\r\n    if(options.onClose) this.onClose = options.onClose;\r\n\r\n    this.selector = new AppSelectPeers({\r\n      appendTo: this.body, \r\n      onChange: async() => {\r\n        const peerId = this.selector.getSelected()[0];\r\n        \r\n        this.selector = null;\r\n        \r\n        if(options.onSelect) {\r\n          const res = options.onSelect(peerId);\r\n          if(res instanceof Promise) {\r\n            await res;\r\n          }\r\n        }\r\n        \r\n        this.hide();\r\n      }, \r\n      peerType: options.peerTypes, \r\n      onFirstRender: () => {\r\n        this.show();\r\n        this.selector.checkForTriggers(); // ! due to zero height before mounting\r\n\r\n        if(!isTouchSupported) {\r\n          this.selector.input.focus();\r\n        }\r\n      }, \r\n      chatRightsAction: options.chatRightsAction, \r\n      multiSelect: false,\r\n      rippleEnabled: false,\r\n      avatarSize: 46,\r\n      peerId: options.peerId,\r\n      placeholder: options.placeholder\r\n    });\r\n\r\n    //this.scrollable = new Scrollable(this.body);\r\n\r\n    this.title.append(this.selector.input);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\r\nimport { deepEqual } from \"../../../helpers/object\";\r\nimport { ChannelParticipant } from \"../../../layer\";\r\nimport appChatsManager from \"../../../lib/appManagers/appChatsManager\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport Button from \"../../button\";\r\nimport { SettingSection } from \"../../sidebarLeft\";\r\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\r\nimport { ChatPermissions } from \"./groupPermissions\";\r\n\r\nexport default class AppUserPermissionsTab extends SliderSuperTabEventable {\r\n  public participant: ChannelParticipant;\r\n  public chatId: number;\r\n  public userId: number;\r\n\r\n  protected init() {\r\n    this.container.classList.add('edit-peer-container', 'user-permissions-container');\r\n    this.setTitle('UserRestrictions');\r\n\r\n    let destroyListener: () => void;\r\n\r\n    {\r\n      const section = new SettingSection({\r\n        name: 'UserRestrictionsCanDo',\r\n      });\r\n      \r\n      const div = document.createElement('div');\r\n      div.classList.add('chatlist-container');\r\n      section.content.insertBefore(div, section.title);\r\n\r\n      const list = appDialogsManager.createChatList();\r\n      div.append(list);\r\n\r\n      const {dom} = appDialogsManager.addDialogNew({\r\n        dialog: this.userId,\r\n        container: list,\r\n        drawStatus: false,\r\n        rippleEnabled: true,\r\n        avatarSize: 48\r\n      });\r\n\r\n      dom.lastMessageSpan.append(appUsersManager.getUserStatusString(this.userId));\r\n\r\n      const p = new ChatPermissions({\r\n        chatId: this.chatId,\r\n        listenerSetter: this.listenerSetter,\r\n        appendTo: section.content,\r\n        participant: this.participant._ === 'channelParticipantBanned' ? this.participant : undefined\r\n      });\r\n\r\n      destroyListener = () => {\r\n        //appChatsManager.editChatDefaultBannedRights(this.chatId, p.takeOut());\r\n        const rights = p.takeOut();\r\n        if(this.participant._ === 'channelParticipantBanned' && deepEqual(this.participant.banned_rights.pFlags, rights.pFlags)) {\r\n          return;\r\n        }\r\n\r\n        appChatsManager.editBanned(this.chatId, this.participant, rights);\r\n      };\r\n\r\n      this.eventListener.addEventListener('destroy', destroyListener);\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n    \r\n    {\r\n      const section = new SettingSection({});\r\n\r\n      if(this.participant._ === 'channelParticipantBanned') {\r\n        const btnDeleteException = Button('btn-primary btn-transparent danger', {icon: 'delete', text: 'GroupPermission.Delete'});\r\n\r\n        attachClickEvent(btnDeleteException, () => {\r\n          const toggle = toggleDisability([btnDeleteException], true);\r\n          appChatsManager.clearChannelParticipantBannedRights(this.chatId, this.participant).then(() => {\r\n            this.eventListener.removeEventListener('destroy', destroyListener);\r\n            this.close();\r\n          }, () => {\r\n            toggle();\r\n          });\r\n        }, {listenerSetter: this.listenerSetter});\r\n  \r\n        section.content.append(btnDeleteException);\r\n      }\r\n\r\n      const btnDelete = Button('btn-primary btn-transparent danger', {icon: 'deleteuser', text: 'UserRestrictionsBlock'});\r\n\r\n      attachClickEvent(btnDelete, () => {\r\n        const toggle = toggleDisability([btnDelete], true);\r\n        appChatsManager.kickFromChannel(this.chatId, this.participant).then(() => {\r\n          this.eventListener.removeEventListener('destroy', destroyListener);\r\n          this.close();\r\n        });\r\n        /* new PopupPeer('popup-group-kick-user', {\r\n          peerId: -this.chatId,\r\n          title: 'Ban User?',\r\n          description: `Are you sure you want to ban <b>${appPeersManager.getPeerTitle(this.userId)}</b>`,\r\n          buttons: addCancelButton([{\r\n            text: 'BAN',\r\n            callback: () => {\r\n              const toggle = toggleDisability([btnDelete], true);\r\n\r\n              appChatsManager.kickFromChannel(this.chatId, this.participant).then(() => {\r\n                this.eventListener.removeEventListener('destroy', destroyListener);\r\n                this.close();\r\n              }, () => {\r\n                toggle();\r\n              });\r\n            },\r\n            isDanger: true\r\n          }])\r\n        }).show(); */\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      section.content.append(btnDelete);\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport findUpTag from \"../../../helpers/dom/findUpTag\";\r\nimport replaceContent from \"../../../helpers/dom/replaceContent\";\r\nimport ListenerSetter from \"../../../helpers/listenerSetter\";\r\nimport ScrollableLoader from \"../../../helpers/listLoader\";\r\nimport { ChannelParticipant, Chat, ChatBannedRights, Update } from \"../../../layer\";\r\nimport appChatsManager, { ChatRights } from \"../../../lib/appManagers/appChatsManager\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport appPeersManager from \"../../../lib/appManagers/appPeersManager\";\r\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\r\nimport I18n, { i18n, join, LangPackKey } from \"../../../lib/langPack\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport PopupPickUser from \"../../popups/pickUser\";\r\nimport Row from \"../../row\";\r\nimport { SettingSection } from \"../../sidebarLeft\";\r\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\r\nimport { toast } from \"../../toast\";\r\nimport AppUserPermissionsTab from \"./userPermissions\";\r\n\r\nexport class ChatPermissions {\r\n  public v: Array<{\r\n    flags: ChatRights[],\r\n    text: LangPackKey,\r\n    exceptionText: LangPackKey,\r\n    checkboxField?: CheckboxField,\r\n  }>;\r\n  private toggleWith: Partial<{[chatRight in ChatRights]: ChatRights[]}>;\r\n\r\n  constructor(options: {\r\n    chatId: number,\r\n    listenerSetter: ListenerSetter,\r\n    appendTo: HTMLElement,\r\n    participant?: ChannelParticipant.channelParticipantBanned\r\n  }) {\r\n    this.v = [\r\n      {flags: ['send_messages'], text: 'UserRestrictionsSend', exceptionText: 'UserRestrictionsNoSend'},\r\n      {flags: ['send_media'], text: 'UserRestrictionsSendMedia', exceptionText: 'UserRestrictionsNoSendMedia'},\r\n      {flags: ['send_stickers', 'send_gifs'], text: 'UserRestrictionsSendStickers', exceptionText: 'UserRestrictionsNoSendStickers'},\r\n      {flags: ['send_polls'], text: 'UserRestrictionsSendPolls', exceptionText: 'UserRestrictionsNoSendPolls'},\r\n      {flags: ['embed_links'], text: 'UserRestrictionsEmbedLinks', exceptionText: 'UserRestrictionsNoEmbedLinks'},\r\n      {flags: ['invite_users'], text: 'UserRestrictionsInviteUsers', exceptionText: 'UserRestrictionsNoInviteUsers'},\r\n      {flags: ['pin_messages'], text: 'UserRestrictionsPinMessages', exceptionText: 'UserRestrictionsNoPinMessages'},\r\n      {flags: ['change_info'], text: 'UserRestrictionsChangeInfo', exceptionText: 'UserRestrictionsNoChangeInfo'}\r\n    ];\r\n\r\n    this.toggleWith = {\r\n      'send_messages': ['send_media', 'send_stickers', 'send_polls', 'embed_links']\r\n    };\r\n\r\n    const chat: Chat.chat = appChatsManager.getChat(options.chatId);\r\n    const defaultBannedRights = chat.default_banned_rights;\r\n    const rights = options.participant ? appChatsManager.combineParticipantBannedRights(options.chatId, options.participant.banned_rights) : defaultBannedRights;\r\n    \r\n    for(const info of this.v) {\r\n      const mainFlag = info.flags[0];\r\n      info.checkboxField = new CheckboxField({\r\n        text: info.text,\r\n        checked: appChatsManager.hasRights(options.chatId, mainFlag, rights),\r\n        restriction: true,\r\n        withRipple: true\r\n      });\r\n\r\n      // @ts-ignore\r\n      if(options.participant && defaultBannedRights.pFlags[mainFlag]) {\r\n        info.checkboxField.input.disabled = true;\r\n        \r\n        /* options.listenerSetter.add(info.checkboxField.input, 'change', (e) => {\r\n          if(!e.isTrusted) {\r\n            return;\r\n          }\r\n\r\n          cancelEvent(e);\r\n          toast('This option is disabled for all members in Group Permissions.');\r\n          info.checkboxField.checked = false;\r\n        }); */\r\n\r\n        attachClickEvent(info.checkboxField.label, (e) => {\r\n          toast(I18n.format('UserRestrictionsDisabled', true));\r\n        }, {listenerSetter: options.listenerSetter});\r\n      }\r\n\r\n      if(this.toggleWith[mainFlag]) {\r\n        options.listenerSetter.add(info.checkboxField.input, 'change', () => {\r\n          if(!info.checkboxField.checked) {\r\n            const other = this.v.filter(i => this.toggleWith[mainFlag].includes(i.flags[0]));\r\n            other.forEach(info => {\r\n              info.checkboxField.checked = false;\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      options.appendTo.append(info.checkboxField.label);\r\n    }\r\n  }\r\n\r\n  public takeOut() {\r\n    const rights: ChatBannedRights = {\r\n      _: 'chatBannedRights',\r\n      until_date: 0x7FFFFFFF,\r\n      pFlags: {}\r\n    };\r\n\r\n    for(const info of this.v) {\r\n      const banned = !info.checkboxField.checked;\r\n      if(banned) {\r\n        info.flags.forEach(flag => {\r\n          // @ts-ignore\r\n          rights.pFlags[flag] = true;\r\n        });\r\n      }\r\n    }\r\n\r\n    return rights;\r\n  }\r\n}\r\n\r\nexport default class AppGroupPermissionsTab extends SliderSuperTabEventable {\r\n  public chatId: number;\r\n\r\n  protected async init() {\r\n    this.container.classList.add('edit-peer-container', 'group-permissions-container');\r\n    this.setTitle('ChannelPermissions');\r\n\r\n    let chatPermissions: ChatPermissions;\r\n    {\r\n      const section = new SettingSection({\r\n        name: 'ChannelPermissionsHeader',\r\n      });\r\n\r\n      chatPermissions = new ChatPermissions({\r\n        chatId: this.chatId,\r\n        listenerSetter: this.listenerSetter,\r\n        appendTo: section.content,\r\n      });\r\n\r\n      this.eventListener.addEventListener('destroy', () => {\r\n        appChatsManager.editChatDefaultBannedRights(this.chatId, chatPermissions.takeOut());\r\n      });\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n    \r\n    {\r\n      const section = new SettingSection({\r\n        name: 'PrivacyExceptions'\r\n      });\r\n\r\n      const addExceptionRow = new Row({\r\n        titleLangKey: 'ChannelAddException',\r\n        subtitleLangKey: 'Loading',\r\n        icon: 'adduser',\r\n        clickable: () => {\r\n          new PopupPickUser({\r\n            peerTypes: ['channelParticipants'],\r\n            onSelect: (peerId) => {\r\n              setTimeout(() => {\r\n                openPermissions(peerId);\r\n              }, 0);\r\n            },\r\n            placeholder: 'ExceptionModal.Search.Placeholder',\r\n            peerId: -this.chatId,\r\n          });\r\n        }\r\n      });\r\n\r\n      const openPermissions = async(peerId: number) => {\r\n        let participant: AppUserPermissionsTab['participant'];\r\n        try {\r\n          participant = await appProfileManager.getChannelParticipant(this.chatId, peerId) as any;\r\n        } catch(err) {\r\n          toast('User is no longer participant');\r\n          return;\r\n        }\r\n\r\n        const tab = new AppUserPermissionsTab(this.slider);\r\n        tab.participant = participant;\r\n        tab.chatId = this.chatId;\r\n        tab.userId = peerId;\r\n        tab.open();\r\n      };\r\n\r\n      section.content.append(addExceptionRow.container);\r\n\r\n      /* const removedUsersRow = new Row({\r\n        titleLangKey: 'ChannelBlockedUsers',\r\n        subtitleLangKey: 'NoBlockedUsers',\r\n        icon: 'deleteuser',\r\n        clickable: true\r\n      });\r\n\r\n      section.content.append(removedUsersRow.container); */\r\n\r\n      const c = section.generateContentElement();\r\n      c.classList.add('chatlist-container');\r\n      \r\n      const list = appDialogsManager.createChatList();\r\n      c.append(list);\r\n\r\n      attachClickEvent(list, (e) => {\r\n        const target = findUpTag(e.target, 'LI');\r\n        if(!target) return;\r\n\r\n        const peerId = +target.dataset.peerId;\r\n        openPermissions(peerId);\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      const setSubtitle = (li: Element, participant: ChannelParticipant.channelParticipantBanned) => {\r\n        const bannedRights = participant.banned_rights;//appChatsManager.combineParticipantBannedRights(this.chatId, participant.banned_rights);\r\n        const defaultBannedRights = (appChatsManager.getChat(this.chatId) as Chat.channel).default_banned_rights;\r\n        //const combinedRights = appChatsManager.combineParticipantBannedRights(this.chatId, bannedRights);\r\n\r\n        const cantWhat: LangPackKey[] = []/* , canWhat: LangPackKey[] = [] */;\r\n        chatPermissions.v.forEach(info => {\r\n          const mainFlag = info.flags[0];\r\n          // @ts-ignore\r\n          if(bannedRights.pFlags[mainFlag] && !defaultBannedRights.pFlags[mainFlag]) {\r\n            cantWhat.push(info.exceptionText);\r\n          // @ts-ignore\r\n          }/*  else if(!combinedRights.pFlags[mainFlag]) {\r\n            canWhat.push(info.exceptionText);\r\n          } */\r\n        });\r\n\r\n        const el = li.querySelector('.user-last-message') as HTMLElement;\r\n\r\n        if(cantWhat.length) {\r\n          el.innerHTML = '';\r\n          el.append(...join(cantWhat.map(t => i18n(t)), false));\r\n        }/*  else if(canWhat.length) {\r\n          str = 'Can ' + canWhat.join(canWhat.length === 2 ? ' and ' : ', ');\r\n        } */\r\n  \r\n        el.classList.toggle('hide', !cantWhat.length);\r\n      };\r\n\r\n      const add = (participant: ChannelParticipant.channelParticipantBanned, append: boolean) => {\r\n        const {dom} = appDialogsManager.addDialogNew({\r\n          dialog: appPeersManager.getPeerId(participant.peer),\r\n          container: list,\r\n          drawStatus: false,\r\n          rippleEnabled: true,\r\n          avatarSize: 48,\r\n          append\r\n        });\r\n\r\n        setSubtitle(dom.listEl, participant);\r\n\r\n        //dom.titleSpan.innerHTML = 'Chinaza Akachi';\r\n        //dom.lastMessageSpan.innerHTML = 'Can Add Users and Pin Messages';\r\n      };\r\n\r\n      this.listenerSetter.add(rootScope, 'updateChannelParticipant', (update: Update.updateChannelParticipant) => {\r\n        const needAdd = update.new_participant?._ === 'channelParticipantBanned' && !update.new_participant.banned_rights.pFlags.view_messages;\r\n        const li = list.querySelector(`[data-peer-id=\"${update.user_id}\"]`);\r\n        if(needAdd) {\r\n          if(!li) {\r\n            add(update.new_participant as ChannelParticipant.channelParticipantBanned, false);\r\n          } else {\r\n            setSubtitle(li, update.new_participant as ChannelParticipant.channelParticipantBanned);\r\n          }\r\n\r\n          if(update.prev_participant?._ !== 'channelParticipantBanned') {\r\n            ++exceptionsCount;\r\n          }\r\n        } else {\r\n          if(li) {\r\n            li.remove();\r\n          }\r\n\r\n          if(update.prev_participant?._ === 'channelParticipantBanned') {\r\n            --exceptionsCount;\r\n          }\r\n        }\r\n\r\n        setLength();\r\n      });\r\n\r\n      const setLength = () => {\r\n        replaceContent(addExceptionRow.subtitle, i18n(exceptionsCount ? 'Permissions.ExceptionsCount' : 'Permissions.NoExceptions', [exceptionsCount]));\r\n      };\r\n\r\n      let exceptionsCount = 0;\r\n      const LOAD_COUNT = 50;\r\n      const loader = new ScrollableLoader({\r\n        scrollable: this.scrollable,\r\n        getPromise: () => {\r\n          return appProfileManager.getChannelParticipants(this.chatId, {_: 'channelParticipantsBanned', q: ''}, LOAD_COUNT, list.childElementCount).then(res => {\r\n            for(const participant of res.participants) {\r\n              add(participant as ChannelParticipant.channelParticipantBanned, true);\r\n            }\r\n\r\n            exceptionsCount = res.count;\r\n            setLength();\r\n\r\n            return res.participants.length < LOAD_COUNT || res.count === list.childElementCount;\r\n          });\r\n        }\r\n      });\r\n\r\n      this.scrollable.append(section.container);\r\n\r\n      await loader.load();\r\n    }\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    this.scrollable.onScroll();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appChatsManager from \"../../lib/appManagers/appChatsManager\";\r\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\r\nimport appPeersManager, { PeerType } from \"../../lib/appManagers/appPeersManager\";\r\nimport { LangPackKey } from \"../../lib/langPack\";\r\nimport PeerTitle from \"../peerTitle\";\r\nimport PopupPeer, { PopupPeerButtonCallbackCheckboxes, PopupPeerOptions } from \"./peer\";\r\n\r\nexport default class PopupDeleteDialog {\r\n  constructor(peerId: number, peerType: PeerType = appPeersManager.getDialogType(peerId), onSelect?: (promise: Promise<any>) => void) {\r\n    const peerTitleElement = new PeerTitle({\r\n      peerId,\r\n      onlyFirstName: true\r\n    }).element;\r\n\r\n    /* const callbackFlush = (checked: PopupPeerButtonCallbackCheckboxes) => {\r\n      const promise = appMessagesManager.flushHistory(peerId, checkboxes ? !checked[checkboxes[0].text] : undefined);\r\n      onSelect && onSelect(promise);\r\n    }; */\r\n\r\n    const callbackLeave = (checked: PopupPeerButtonCallbackCheckboxes) => {\r\n      let promise = appChatsManager.leave(-peerId);\r\n      \r\n      if(checkboxes && checked[checkboxes[0].text]) {\r\n        promise = promise.then(() => {\r\n          return appMessagesManager.flushHistory(peerId);\r\n        }) as any;\r\n      }\r\n      \r\n      onSelect && onSelect(promise);\r\n    };\r\n\r\n    const callbackDelete = (checked: PopupPeerButtonCallbackCheckboxes) => {\r\n      let promise: Promise<any>;\r\n\r\n      if(peerId > 0) {\r\n        promise = appMessagesManager.flushHistory(peerId, false, checkboxes ? checked[checkboxes[0].text] : undefined);\r\n      } else {\r\n        if(checked[checkboxes[0].text]) {\r\n          promise = appChatsManager.delete(-peerId);\r\n        } else {\r\n          return callbackLeave(checked);\r\n        }\r\n      }\r\n      \r\n      onSelect && onSelect(promise);\r\n    };\r\n\r\n    let title: LangPackKey, description: LangPackKey, descriptionArgs: any[], buttons: PopupPeerOptions['buttons'], checkboxes: PopupPeerOptions['checkboxes'];\r\n    switch(peerType) {\r\n      case 'channel': {\r\n        title = 'LeaveChannelMenu';\r\n        description = 'ChannelLeaveAlertWithName';\r\n        descriptionArgs = [peerTitleElement];\r\n        buttons = [{\r\n          langKey: 'LeaveChannel',\r\n          isDanger: true,\r\n          callback: callbackLeave\r\n        }];\r\n\r\n        break;\r\n      }\r\n\r\n      /* case 'megagroup': {\r\n        title = 'Leave Group?';\r\n        description = `Are you sure you want to leave this group?`;\r\n        buttons = [{\r\n          text: 'LEAVE ' + peerTitleElement,\r\n          isDanger: true,\r\n          callback: callbackLeave\r\n        }];\r\n\r\n        break;\r\n      } */\r\n\r\n      case 'chat': {\r\n        title = 'DeleteChatUser';\r\n        description = 'AreYouSureDeleteThisChatWithUser';\r\n        descriptionArgs = [peerTitleElement];\r\n\r\n        checkboxes = [{\r\n          text: 'DeleteMessagesOptionAlso',\r\n          textArgs: [\r\n            new PeerTitle({\r\n              peerId,\r\n              onlyFirstName: true\r\n            }).element\r\n          ]\r\n        }];\r\n\r\n        buttons = [{\r\n          langKey: 'DeleteChatUser',\r\n          isDanger: true,\r\n          callback: callbackDelete\r\n        }];\r\n\r\n        break;\r\n      }\r\n\r\n      case 'saved': {\r\n        title = 'DeleteChatUser';\r\n        description = 'AreYouSureDeleteThisChatSavedMessages';\r\n        buttons = [{\r\n          langKey: 'DeleteChatUser',\r\n          isDanger: true,\r\n          callback: callbackDelete\r\n        }];\r\n\r\n        break;\r\n      }\r\n\r\n      case 'megagroup':\r\n      case 'group': {\r\n        if(appChatsManager.hasRights(-peerId, 'delete_chat')) {\r\n          title = 'DeleteMegaMenu';\r\n          description = 'AreYouSureDeleteAndExit';\r\n          buttons = [{\r\n            langKey: 'DeleteMegaMenu',\r\n            isDanger: true,\r\n            callback: callbackDelete\r\n          }];\r\n\r\n          checkboxes = [{\r\n            text: 'DeleteChat.DeleteGroupForAll'\r\n          }];\r\n        } else {\r\n          title = 'LeaveMegaMenu';\r\n          description = 'AreYouSureDeleteAndExitName';\r\n          descriptionArgs = [peerTitleElement];\r\n          buttons = [{\r\n            langKey: 'DeleteChatUser',\r\n            isDanger: true,\r\n            callback: callbackLeave\r\n          }];\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    new PopupPeer('popup-delete-chat', {\r\n      peerId,\r\n      titleLangKey: title,\r\n      descriptionLangKey: description,\r\n      descriptionLangArgs: descriptionArgs,\r\n      buttons,\r\n      checkboxes\r\n    }).show();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\"\r\nimport InputField from \"../../inputField\";\r\nimport EditPeer from \"../../editPeer\";\r\nimport { SettingSection } from \"../../sidebarLeft\";\r\nimport Row from \"../../row\";\r\nimport Button from \"../../button\";\r\nimport appChatsManager, { ChatRights } from \"../../../lib/appManagers/appChatsManager\";\r\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\r\nimport { Chat } from \"../../../layer\";\r\nimport AppChatTypeTab from \"./chatType\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport AppGroupPermissionsTab from \"./groupPermissions\";\r\nimport { i18n, LangPackKey } from \"../../../lib/langPack\";\r\nimport PopupDeleteDialog from \"../../popups/deleteDialog\";\r\nimport { addCancelButton } from \"../../popups\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\r\n\r\nexport default class AppEditChatTab extends SliderSuperTab {\r\n  private chatNameInputField: InputField;\r\n  private descriptionInputField: InputField;\r\n  private editPeer: EditPeer;\r\n  public chatId: number;\r\n\r\n  protected async _init() {\r\n    // * cleanup prev\r\n    this.listenerSetter.removeAll();\r\n    this.scrollable.container.innerHTML = '';\r\n\r\n    this.container.classList.add('edit-peer-container', 'edit-group-container');\r\n    this.setTitle('Edit');\r\n    \r\n    const chatFull = await appProfileManager.getChatFull(this.chatId, true);\r\n\r\n    const chat: Chat.chat | Chat.channel = appChatsManager.getChat(this.chatId);\r\n    const isBroadcast = appChatsManager.isBroadcast(this.chatId);\r\n    const isChannel = appChatsManager.isChannel(this.chatId);\r\n\r\n    {\r\n      const section = new SettingSection({noDelimiter: true});\r\n      const inputFields: InputField[] = [];\r\n\r\n      const inputWrapper = document.createElement('div');\r\n      inputWrapper.classList.add('input-wrapper');\r\n  \r\n      this.chatNameInputField = new InputField({\r\n        label: isBroadcast ? 'Channel.ChannelNameHolder' : 'CreateGroup.NameHolder',\r\n        name: 'chat-name',\r\n        maxLength: 255\r\n      });\r\n      this.descriptionInputField = new InputField({\r\n        label: 'DescriptionPlaceholder',\r\n        name: 'chat-description',\r\n        maxLength: 255\r\n      });\r\n      \r\n      this.chatNameInputField.setOriginalValue(chat.title);\r\n      this.descriptionInputField.setOriginalValue(chatFull.about);\r\n\r\n      inputWrapper.append(this.chatNameInputField.container, this.descriptionInputField.container);\r\n      \r\n      inputFields.push(this.chatNameInputField, this.descriptionInputField);\r\n\r\n      this.editPeer = new EditPeer({\r\n        peerId: -this.chatId,\r\n        inputFields,\r\n        listenerSetter: this.listenerSetter\r\n      });\r\n      this.content.append(this.editPeer.nextBtn);\r\n\r\n      section.content.append(this.editPeer.avatarEdit.container, inputWrapper);\r\n\r\n      if(appChatsManager.hasRights(this.chatId, 'change_type')) {\r\n        const chatTypeRow = new Row({\r\n          titleLangKey: isBroadcast ? 'ChannelType' : 'GroupType',\r\n          clickable: () => {\r\n            const tab = new AppChatTypeTab(this.slider);\r\n            tab.chatId = this.chatId;\r\n            tab.chatFull = chatFull;\r\n            tab.open();\r\n\r\n            this.listenerSetter.add(tab.eventListener, 'destroy', setChatTypeSubtitle);\r\n          },\r\n          icon: 'lock'\r\n        });\r\n\r\n        const setChatTypeSubtitle = () => {\r\n          chatTypeRow.subtitle.textContent = '';\r\n\r\n          let key: LangPackKey;\r\n          if(isBroadcast) {\r\n            key = (chat as Chat.channel).username ? 'TypePublic' : 'TypePrivate';\r\n          } else {\r\n            key = (chat as Chat.channel).username ? 'TypePublicGroup' : 'TypePrivateGroup';\r\n          }\r\n\r\n          chatTypeRow.subtitle.append(i18n(key));\r\n        };\r\n\r\n        setChatTypeSubtitle();\r\n        section.content.append(chatTypeRow.container);\r\n      }\r\n\r\n      if(appChatsManager.hasRights(this.chatId, 'change_permissions') && !isBroadcast) {\r\n        const flags = [\r\n          'send_messages',\r\n          'send_media',\r\n          'send_stickers',\r\n          'send_polls',\r\n          'embed_links',\r\n          'invite_users',\r\n          'pin_messages',\r\n          'change_info'\r\n        ] as ChatRights[];\r\n\r\n        const permissionsRow = new Row({\r\n          titleLangKey: 'ChannelPermissions',\r\n          clickable: () => {\r\n            const tab = new AppGroupPermissionsTab(this.slider);\r\n            tab.chatId = this.chatId;\r\n            tab.open();\r\n          },\r\n          icon: 'permissions',\r\n        });\r\n\r\n        const setPermissionsLength = () => {\r\n          permissionsRow.subtitle.innerHTML = flags.reduce((acc, f) => acc + +appChatsManager.hasRights(this.chatId, f, chat.default_banned_rights), 0) + '/' + flags.length;\r\n        };\r\n\r\n        setPermissionsLength();        \r\n        section.content.append(permissionsRow.container);\r\n\r\n        this.listenerSetter.add(rootScope, 'chat_update', (chatId) => {\r\n          if(this.chatId === chatId) {\r\n            setPermissionsLength();\r\n          }\r\n        });\r\n      }\r\n\r\n      /* const administratorsRow = new Row({\r\n        titleLangKey: 'PeerInfo.Administrators',\r\n        subtitle: '' + ((chatFull as ChatFull.channelFull).admins_count || 1),\r\n        icon: 'admin',\r\n        clickable: true\r\n      });\r\n\r\n      section.content.append(administratorsRow.container); */\r\n\r\n      this.scrollable.append(section.container);\r\n\r\n      attachClickEvent(this.editPeer.nextBtn, () => {\r\n        this.editPeer.nextBtn.disabled = true;\r\n  \r\n        let promises: Promise<any>[] = [];\r\n\r\n        const id = this.chatId;\r\n        if(this.chatNameInputField.isValid()) {\r\n          promises.push(appChatsManager.editTitle(id, this.chatNameInputField.value));\r\n        }\r\n\r\n        if(this.descriptionInputField.isValid()) {\r\n          promises.push(appChatsManager.editAbout(id, this.descriptionInputField.value));\r\n        }\r\n\r\n        if(this.editPeer.uploadAvatar) {\r\n          promises.push(this.editPeer.uploadAvatar().then(inputFile => {\r\n            return appChatsManager.editPhoto(id, inputFile);\r\n          }));\r\n        }\r\n  \r\n        Promise.race(promises).finally(() => {\r\n          this.editPeer.nextBtn.removeAttribute('disabled');\r\n          this.close();\r\n        });\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      /*\r\n      if(appChatsManager.hasRights(-this.peerId, 'change_info')) {\r\n        const discussionRow = new Row({\r\n          titleLangKey: 'PeerInfo.Discussion',\r\n          subtitleLangKey: 'PeerInfo.Discussion.Add',\r\n          clickable: true,\r\n          icon: 'message'\r\n        });\r\n\r\n        section.content.append(discussionRow.container);\r\n      }\r\n\r\n      const administratorsRow = new Row({\r\n        titleLangKey: 'PeerInfo.Administrators',\r\n        subtitle: '' + chatFull.admins_count,\r\n        icon: 'admin',\r\n        clickable: true\r\n      });\r\n\r\n      section.content.append(administratorsRow.container);\r\n\r\n      if(appChatsManager.hasRights(-this.peerId, 'change_info')) {\r\n        const signMessagesCheckboxField = new CheckboxField({\r\n          text: 'PeerInfo.SignMessages',\r\n          checked: false\r\n        });\r\n\r\n        section.content.append(signMessagesCheckboxField.label);\r\n      } */\r\n    }\r\n\r\n    /* {\r\n      const section = new SettingSection({\r\n\r\n      });\r\n\r\n      const membersRow = new Row({\r\n        titleLangKey: isBroadcast ? 'PeerInfo.Subscribers' : 'GroupMembers',\r\n        icon: 'newgroup',\r\n        clickable: true\r\n      });\r\n\r\n      membersRow.subtitle.append(i18n('Subscribers', [numberThousandSplitter(335356)]));\r\n\r\n      section.content.append(membersRow.container);\r\n\r\n      if(appChatsManager.hasRights(this.chatId, 'change_permissions')) {\r\n        const showChatHistoryCheckboxField = new CheckboxField({\r\n          text: 'Show chat history for new members',\r\n          withRipple: true\r\n        });\r\n  \r\n        if(appChatsManager.isChannel(this.chatId) && !(chatFull as ChatFull.channelFull).pFlags.hidden_prehistory) {\r\n          showChatHistoryCheckboxField.checked = true;\r\n        }\r\n  \r\n        section.content.append(showChatHistoryCheckboxField.label);\r\n      }\r\n\r\n      this.scrollable.append(section.container);\r\n    } */\r\n\r\n    if(appChatsManager.hasRights(this.chatId, 'delete_chat')) {\r\n      const section = new SettingSection({});\r\n\r\n      const btnDelete = Button('btn-primary btn-transparent danger', {icon: 'delete', text: isBroadcast ? 'PeerInfo.DeleteChannel' : 'DeleteMega'});\r\n\r\n      attachClickEvent(btnDelete, () => {\r\n        if(isBroadcast) {\r\n          new PopupPeer('popup-delete-channel', {\r\n            peerId: -this.chatId,\r\n            titleLangKey: 'ChannelDeleteMenu',\r\n            descriptionLangKey: 'AreYouSureDeleteAndExitChannel',\r\n            buttons: addCancelButton([{\r\n              langKey: 'ChannelDeleteMenu',\r\n              callback: () => {\r\n                const toggle = toggleDisability([btnDelete], true);\r\n  \r\n              },\r\n              isDanger: true\r\n            }, {\r\n              langKey: 'DeleteChannelForAll',\r\n              callback: () => {\r\n                const toggle = toggleDisability([btnDelete], true);\r\n  \r\n                appChatsManager.deleteChannel(this.chatId).then(() => {\r\n                  this.close();\r\n                }, () => {\r\n                  toggle();\r\n                });\r\n              },\r\n              isDanger: true\r\n            }])\r\n          }).show();\r\n        } else {\r\n          new PopupDeleteDialog(-this.chatId, undefined, (promise) => {\r\n            const toggle = toggleDisability([btnDelete], true);\r\n            promise.then(() => {\r\n              this.close();\r\n            }, () => {\r\n              toggle();\r\n            });\r\n          });\r\n        }\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      section.content.append(btnDelete);\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n\r\n    if(!isChannel) {\r\n      // ! this one will fire earlier than tab's closeAfterTimeout (destroy) event and listeners will be erased, so destroy won't fire\r\n      this.listenerSetter.add(rootScope, 'dialog_migrate', ({migrateFrom, migrateTo}) => {\r\n        if(-this.chatId === migrateFrom) {\r\n          this.chatId = -migrateTo;\r\n          this._init();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected init() {\r\n    return this._init();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\"\r\nimport InputField from \"../../inputField\";\r\nimport EditPeer from \"../../editPeer\";\r\nimport { SettingSection } from \"../../sidebarLeft\";\r\nimport Row from \"../../row\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport Button from \"../../button\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport appNotificationsManager from \"../../../lib/appManagers/appNotificationsManager\";\r\nimport PeerTitle from \"../../peerTitle\";\r\nimport appMessagesManager from \"../../../lib/appManagers/appMessagesManager\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport appPeersManager from \"../../../lib/appManagers/appPeersManager\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport { addCancelButton } from \"../../popups\";\r\nimport { i18n } from \"../../../lib/langPack\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\r\n\r\nexport default class AppEditContactTab extends SliderSuperTab {\r\n  private nameInputField: InputField;\r\n  private lastNameInputField: InputField;\r\n  private editPeer: EditPeer;\r\n  public peerId: number;\r\n\r\n  protected init() {\r\n    this.container.classList.add('edit-peer-container', 'edit-contact-container');\r\n    this.setTitle('Edit');\r\n\r\n    {\r\n      const section = new SettingSection({noDelimiter: true});\r\n      const inputFields: InputField[] = [];\r\n\r\n      const inputWrapper = document.createElement('div');\r\n      inputWrapper.classList.add('input-wrapper');\r\n  \r\n      this.nameInputField = new InputField({\r\n        label: 'EditProfile.FirstNameLabel',\r\n        name: 'contact-name',\r\n        maxLength: 70\r\n      });\r\n      this.lastNameInputField = new InputField({\r\n        label: 'Login.Register.LastName.Placeholder',\r\n        name: 'contact-lastname',\r\n        maxLength: 70\r\n      });\r\n      \r\n      const user = appUsersManager.getUser(this.peerId);\r\n\r\n      this.nameInputField.setOriginalValue(user.first_name);\r\n      this.lastNameInputField.setOriginalValue(user.last_name);\r\n\r\n      inputWrapper.append(this.nameInputField.container, this.lastNameInputField.container);\r\n      \r\n      inputFields.push(this.nameInputField, this.lastNameInputField);\r\n\r\n      this.editPeer = new EditPeer({\r\n        peerId: this.peerId,\r\n        inputFields,\r\n        listenerSetter: this.listenerSetter,\r\n        doNotEditAvatar: true\r\n      });\r\n      this.content.append(this.editPeer.nextBtn);\r\n\r\n      const div = document.createElement('div');\r\n      div.classList.add('avatar-edit');\r\n      div.append(this.editPeer.avatarElem);\r\n\r\n      const notificationsCheckboxField = new CheckboxField({\r\n        text: 'Notifications'\r\n      });\r\n\r\n      notificationsCheckboxField.input.addEventListener('change', (e) => {\r\n        if(!e.isTrusted) {\r\n          return;\r\n        }\r\n\r\n        appMessagesManager.mutePeer(this.peerId);\r\n      });\r\n\r\n      this.listenerSetter.add(rootScope, 'notify_settings', (update) => {\r\n        if(update.peer._ !== 'notifyPeer') return;\r\n        const peerId = appPeersManager.getPeerId(update.peer.peer);\r\n        if(this.peerId === peerId) {\r\n          const enabled = !appNotificationsManager.isMuted(update.notify_settings);\r\n          if(enabled !== notificationsCheckboxField.checked) {\r\n            notificationsCheckboxField.checked = enabled;\r\n          }\r\n        }\r\n      });\r\n\r\n      const notificationsRow = new Row({\r\n        checkboxField: notificationsCheckboxField\r\n      });\r\n\r\n      const enabled = !appNotificationsManager.isPeerLocalMuted(this.peerId, false);\r\n      notificationsCheckboxField.checked = enabled;\r\n\r\n      const profileNameDiv = document.createElement('div');\r\n      profileNameDiv.classList.add('profile-name');\r\n      profileNameDiv.append(new PeerTitle({\r\n        peerId: this.peerId\r\n      }).element);\r\n      //profileNameDiv.innerHTML = 'Karen Stanford';\r\n\r\n      const profileSubtitleDiv = document.createElement('div');\r\n      profileSubtitleDiv.classList.add('profile-subtitle');\r\n      profileSubtitleDiv.append(i18n('EditContact.OriginalName'));\r\n\r\n      section.content.append(div, profileNameDiv, profileSubtitleDiv, inputWrapper, notificationsRow.container);\r\n\r\n      this.scrollable.append(section.container);\r\n\r\n      attachClickEvent(this.editPeer.nextBtn, () => {\r\n        this.editPeer.nextBtn.disabled = true;\r\n\r\n        appUsersManager.addContact(this.peerId, this.nameInputField.value, this.lastNameInputField.value, appUsersManager.getUser(this.peerId).phone)\r\n        .finally(() => {\r\n          this.editPeer.nextBtn.removeAttribute('disabled');\r\n          this.close();\r\n        });\r\n      }, {listenerSetter: this.listenerSetter});\r\n    }\r\n\r\n    {\r\n      const section = new SettingSection({\r\n        \r\n      });\r\n\r\n      const btnDelete = Button('btn-primary btn-transparent danger', {icon: 'delete', text: 'PeerInfo.DeleteContact'});\r\n\r\n      attachClickEvent(btnDelete, () => {\r\n        new PopupPeer('popup-delete-contact', {\r\n          peerId: this.peerId,\r\n          titleLangKey: 'DeleteContact',\r\n          descriptionLangKey: 'AreYouSureDeleteContact',\r\n          buttons: addCancelButton([{\r\n            langKey: 'Delete',\r\n            callback: () => {\r\n              const toggle = toggleDisability([btnDelete], true);\r\n\r\n              appUsersManager.deleteContacts([this.peerId]).then(() => {\r\n                this.close();\r\n              }, () => {\r\n                toggle();\r\n              });\r\n            },\r\n            isDanger: true\r\n          }])\r\n        }).show();\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      section.content.append(btnDelete);\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { safeAssign } from \"../helpers/object\";\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\n\r\nconst getEvent = (e: TouchEvent | MouseEvent) => {\r\n  return (e as TouchEvent).touches ? (e as TouchEvent).touches[0] : e as MouseEvent;\r\n};\r\n\r\nconst attachGlobalListenerTo = window;\r\n\r\nexport default class SwipeHandler {\r\n  private element: HTMLElement;\r\n  private onSwipe: (xDiff: number, yDiff: number) => boolean;\r\n  private verifyTouchTarget: (evt: TouchEvent | MouseEvent) => boolean;\r\n  private onFirstSwipe: () => void;\r\n  private onReset: () => void;\r\n\r\n  private hadMove = false;\r\n  private xDown: number = null;\r\n  private yDown: number = null;\r\n\r\n  constructor(options: {\r\n    element: SwipeHandler['element'],\r\n    onSwipe: SwipeHandler['onSwipe'],\r\n    verifyTouchTarget?: SwipeHandler['verifyTouchTarget'],\r\n    onFirstSwipe?: SwipeHandler['onFirstSwipe'],\r\n    onReset?: SwipeHandler['onReset'],\r\n  }) {\r\n    safeAssign(this, options);\r\n\r\n    if(!isTouchSupported) {\r\n      this.element.addEventListener('mousedown', this.handleStart, false);\r\n      attachGlobalListenerTo.addEventListener('mouseup', this.reset);\r\n    } else {\r\n      this.element.addEventListener('touchstart', this.handleStart, false);\r\n      attachGlobalListenerTo.addEventListener('touchend', this.reset);\r\n    }\r\n  }\r\n\r\n  reset = (e?: Event) => {\r\n    /* if(e) {\r\n      cancelEvent(e);\r\n    } */\r\n\r\n    if(isTouchSupported) {\r\n      attachGlobalListenerTo.removeEventListener('touchmove', this.handleMove, {capture: true});\r\n    } else {\r\n      attachGlobalListenerTo.removeEventListener('mousemove', this.handleMove);\r\n      this.element.style.cursor = '';\r\n    }\r\n\r\n    if(this.onReset && this.hadMove) {\r\n      this.onReset();\r\n    }\r\n\r\n    this.xDown = this.yDown = null;\r\n    this.hadMove = false;\r\n  };\r\n\r\n  handleStart = (_e: TouchEvent | MouseEvent) => {\r\n    const e = getEvent(_e);\r\n    if(this.verifyTouchTarget && !this.verifyTouchTarget(_e)) {\r\n      return this.reset();\r\n    }\r\n\r\n    this.xDown = e.clientX;\r\n    this.yDown = e.clientY;\r\n\r\n    if(isTouchSupported) {\r\n      attachGlobalListenerTo.addEventListener('touchmove', this.handleMove, {passive: false, capture: true});\r\n    } else {\r\n      attachGlobalListenerTo.addEventListener('mousemove', this.handleMove, false);\r\n    }\r\n  };\r\n\r\n  handleMove = (_e: TouchEvent | MouseEvent) => {\r\n    if(this.xDown === null || this.yDown === null) {\r\n      return this.reset();\r\n    }\r\n\r\n    cancelEvent(_e);\r\n\r\n    const e = getEvent(_e);\r\n    const xUp = e.clientX;\r\n    const yUp = e.clientY;\r\n\r\n    const xDiff = this.xDown - xUp;\r\n    const yDiff = this.yDown - yUp;\r\n\r\n    if(!this.hadMove) {\r\n      if(!xDiff && !yDiff) {\r\n        return;\r\n      }\r\n\r\n      this.hadMove = true;\r\n\r\n      if(!isTouchSupported) {\r\n        this.element.style.cursor = 'grabbing';\r\n      }\r\n\r\n      if(this.onFirstSwipe) {\r\n        this.onFirstSwipe();\r\n      }\r\n    }\r\n\r\n    // if(Math.abs(xDiff) > Math.abs(yDiff)) { /*most significant*/\r\n    //   if(xDiff > 0) { /* left swipe */ \r\n\r\n    //   } else { /* right swipe */\r\n\r\n    //   }                       \r\n    // } else {\r\n    //   if(yDiff > 0) { /* up swipe */ \r\n        \r\n    //   } else { /* down swipe */\r\n        \r\n    //   }\r\n    // }\r\n\r\n    /* reset values */\r\n    if(this.onSwipe(xDiff, yDiff)) {\r\n      this.reset();\r\n    }\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport AppSelectPeers from \"../../appSelectPeers\";\r\nimport { putPreloader } from \"../../misc\";\r\nimport { LangPackKey, _i18n } from \"../../../lib/langPack\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\n\r\nexport default class AppAddMembersTab extends SliderSuperTab {\r\n  private nextBtn: HTMLButtonElement;\r\n  private selector: AppSelectPeers;\r\n  private peerType: 'channel' | 'chat' | 'privacy';\r\n  private takeOut: (peerIds: number[]) => Promise<any> | false | void;\r\n  private skippable: boolean;\r\n\r\n  protected init() {\r\n    this.nextBtn = ButtonCorner({icon: 'arrow_next'});\r\n    this.content.append(this.nextBtn);\r\n    this.scrollable.container.remove();\r\n    \r\n    this.nextBtn.addEventListener('click', () => {\r\n      const peerIds = this.selector.getSelected();\r\n\r\n      if(this.skippable) {\r\n        this.takeOut(peerIds);\r\n        this.close();\r\n      } else {\r\n        const promise = this.takeOut(peerIds);\r\n\r\n        if(promise instanceof Promise) {\r\n          this.attachToPromise(promise);\r\n        } else if(promise === undefined) {\r\n          this.close();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public attachToPromise(promise: Promise<any>) {\r\n    this.nextBtn.classList.remove('tgico-arrow_next');\r\n    this.nextBtn.disabled = true;\r\n    putPreloader(this.nextBtn);\r\n    this.selector.freezed = true;\r\n\r\n    promise.then(() => {\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  public open(options: {\r\n    title: LangPackKey,\r\n    placeholder: LangPackKey,\r\n    peerId?: number, \r\n    type: AppAddMembersTab['peerType'], \r\n    takeOut?: AppAddMembersTab['takeOut'],\r\n    skippable: boolean,\r\n    selectedPeerIds?: number[]\r\n  }) {\r\n    const ret = super.open();\r\n\r\n    this.setTitle(options.title);\r\n    this.peerType = options.type;\r\n    this.takeOut = options.takeOut;\r\n    this.skippable = options.skippable;\r\n\r\n    this.selector = new AppSelectPeers({\r\n      appendTo: this.content, \r\n      onChange: this.skippable ? null : (length) => {\r\n        this.nextBtn.classList.toggle('is-visible', !!length);\r\n      }, \r\n      peerType: ['contacts'],\r\n      placeholder: options.placeholder\r\n    });\r\n\r\n    if(options.selectedPeerIds) {\r\n      this.selector.addInitial(options.selectedPeerIds);\r\n    }\r\n\r\n    this.nextBtn.classList.add('tgico-arrow_next');\r\n    this.nextBtn.innerHTML = '';\r\n    this.nextBtn.disabled = false;\r\n    this.nextBtn.classList.toggle('is-visible', this.skippable);\r\n\r\n    return ret;\r\n  }\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appImManager from \"../../../lib/appManagers/appImManager\";\r\nimport appMessagesManager, { AppMessagesManager } from \"../../../lib/appManagers/appMessagesManager\";\r\nimport appPeersManager from \"../../../lib/appManagers/appPeersManager\";\r\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\r\nimport appUsersManager, { User } from \"../../../lib/appManagers/appUsersManager\";\r\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport AppSearchSuper, { SearchSuperType } from \"../../appSearchSuper.\";\r\nimport AvatarElement, { openAvatarViewer } from \"../../avatar\";\r\nimport SidebarSlider, { SliderSuperTab } from \"../../slider\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport appSidebarRight from \"..\";\r\nimport { TransitionSlider } from \"../../transition\";\r\nimport appNotificationsManager from \"../../../lib/appManagers/appNotificationsManager\";\r\nimport AppEditChatTab from \"./editChat\";\r\nimport PeerTitle from \"../../peerTitle\";\r\nimport AppEditContactTab from \"./editContact\";\r\nimport appChatsManager, { Channel } from \"../../../lib/appManagers/appChatsManager\";\r\nimport { Chat, Message, MessageAction, ChatFull, Photo } from \"../../../layer\";\r\nimport Button from \"../../button\";\r\nimport ButtonIcon from \"../../buttonIcon\";\r\nimport I18n, { i18n, LangPackKey } from \"../../../lib/langPack\";\r\nimport { SettingSection } from \"../../sidebarLeft\";\r\nimport Row from \"../../row\";\r\nimport { copyTextToClipboard } from \"../../../helpers/clipboard\";\r\nimport { toast } from \"../../toast\";\r\nimport { fastRaf } from \"../../../helpers/schedulers\";\r\nimport { safeAssign } from \"../../../helpers/object\";\r\nimport { forEachReverse } from \"../../../helpers/array\";\r\nimport appPhotosManager from \"../../../lib/appManagers/appPhotosManager\";\r\nimport renderImageFromUrl from \"../../../helpers/dom/renderImageFromUrl\";\r\nimport SwipeHandler from \"../../swipeHandler\";\r\nimport { MOUNT_CLASS_TO } from \"../../../config/debug\";\r\nimport AppAddMembersTab from \"../../sidebarLeft/tabs/addMembers\";\r\nimport PopupPickUser from \"../../popups/pickUser\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport Scrollable from \"../../scrollable\";\r\nimport { isTouchSupported } from \"../../../helpers/touchSupport\";\r\nimport { isFirefox } from \"../../../helpers/userAgent\";\r\nimport appDownloadManager from \"../../../lib/appManagers/appDownloadManager\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\nimport { cancelEvent } from \"../../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../../../helpers/dom/replaceContent\";\r\nimport appAvatarsManager from \"../../../lib/appManagers/appAvatarsManager\";\r\n\r\nlet setText = (text: string, row: Row) => {\r\n  //fastRaf(() => {\r\n    row.title.innerHTML = text;\r\n    row.container.style.display = '';\r\n  //});\r\n};\r\n\r\nconst PARALLAX_SUPPORTED = !isFirefox;\r\n\r\ntype ListLoaderResult<T> = {count: number, items: any[]};\r\nclass ListLoader<T> {\r\n  public current: T;\r\n  public previous: T[] = [];\r\n  public next: T[] = [];\r\n  public count: number;\r\n\r\n  public tempId = 0;\r\n  public loadMore: (anchor: T, older: boolean) => Promise<ListLoaderResult<T>>;\r\n  public processItem: (item: any) => false | T;\r\n  public onJump: (item: T, older: boolean) => void;\r\n  public loadCount = 50;\r\n  public reverse = false; // reverse means next = higher msgid\r\n\r\n  public loadedAllUp = false;\r\n  public loadedAllDown = false;\r\n  public loadPromiseUp: Promise<void>;\r\n  public loadPromiseDown: Promise<void>;\r\n\r\n  constructor(options: {\r\n    loadMore: ListLoader<T>['loadMore'],\r\n    loadCount: ListLoader<T>['loadCount'],\r\n    processItem?: ListLoader<T>['processItem'],\r\n    onJump: ListLoader<T>['onJump'],\r\n  }) {\r\n    safeAssign(this, options);\r\n\r\n\r\n  }\r\n\r\n  get index() {\r\n    return this.count !== undefined ? this.previous.length : -1;\r\n  }\r\n\r\n  public go(length: number) {\r\n    let items: T[], item: T;\r\n    if(length > 0) {\r\n      items = this.next.splice(0, length);\r\n      item = items.pop();\r\n      if(!item) {\r\n        return;\r\n      }\r\n\r\n      this.previous.push(this.current, ...items);\r\n    } else {\r\n      items = this.previous.splice(this.previous.length + length, -length);\r\n      item = items.shift();\r\n      if(!item) {\r\n        return;\r\n      }\r\n\r\n      this.next.unshift(...items, this.current);\r\n    }\r\n\r\n    this.current = item;\r\n    this.onJump(item, length > 0);\r\n  }\r\n\r\n  public load(older: boolean) {\r\n    if(older && this.loadedAllDown) return Promise.resolve();\r\n    else if(!older && this.loadedAllUp) return Promise.resolve();\r\n\r\n    if(older && this.loadPromiseDown) return this.loadPromiseDown;\r\n    else if(!older && this.loadPromiseUp) return this.loadPromiseUp;\r\n\r\n    /* const loadCount = 50;\r\n    const backLimit = older ? 0 : loadCount; */\r\n  \r\n    let anchor: T;\r\n    if(older) {\r\n      anchor = this.reverse ? this.previous[0] : this.next[this.next.length - 1];\r\n    } else {\r\n      anchor = this.reverse ? this.next[this.next.length - 1] : this.previous[0];\r\n    }\r\n\r\n    const promise = this.loadMore(anchor, older).then(result => {\r\n      if(result.items.length < this.loadCount) {\r\n        if(older) this.loadedAllDown = true;\r\n        else this.loadedAllUp = true;\r\n      }\r\n\r\n      if(this.count === undefined) {\r\n        this.count = result.count || result.items.length;\r\n      }\r\n\r\n      const method = older ? result.items.forEach.bind(result.items) : forEachReverse.bind(null, result.items);\r\n      method((item: any) => {\r\n        const processed = this.processItem ? this.processItem(item) : item;\r\n\r\n        if(!processed) return;\r\n\r\n        if(older) {\r\n          if(this.reverse) this.previous.unshift(processed);\r\n          else this.next.push(processed);\r\n        } else {\r\n          if(this.reverse) this.next.push(processed);\r\n          else this.previous.unshift(processed);\r\n        }\r\n      });\r\n    }, () => {}).then(() => {\r\n      if(older) this.loadPromiseDown = null;\r\n      else this.loadPromiseUp = null;\r\n    });\r\n\r\n    if(older) this.loadPromiseDown = promise;\r\n    else this.loadPromiseUp = promise;\r\n\r\n    return promise;\r\n  }\r\n}\r\n\r\nclass PeerProfileAvatars {\r\n  private static BASE_CLASS = 'profile-avatars';\r\n  private static SCALE = PARALLAX_SUPPORTED ? 2 : 1;\r\n  private static TRANSLATE_TEMPLATE = PARALLAX_SUPPORTED ? `translate3d({x}, 0, -1px) scale(${PeerProfileAvatars.SCALE})` : 'translate({x}, 0)';\r\n  public container: HTMLElement;\r\n  public avatars: HTMLElement;\r\n  public gradient: HTMLElement;\r\n  public info: HTMLElement;\r\n  private tabs: HTMLDivElement;\r\n  private listLoader: ListLoader<string | Message.messageService>;\r\n  private peerId: number;\r\n\r\n  constructor(public scrollable: Scrollable) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add(PeerProfileAvatars.BASE_CLASS + '-container');\r\n\r\n    this.avatars = document.createElement('div');\r\n    this.avatars.classList.add(PeerProfileAvatars.BASE_CLASS + '-avatars');\r\n\r\n    this.gradient = document.createElement('div');\r\n    this.gradient.classList.add(PeerProfileAvatars.BASE_CLASS + '-gradient');\r\n\r\n    this.info = document.createElement('div');\r\n    this.info.classList.add(PeerProfileAvatars.BASE_CLASS + '-info');\r\n\r\n    this.tabs = document.createElement('div');\r\n    this.tabs.classList.add(PeerProfileAvatars.BASE_CLASS + '-tabs');\r\n\r\n    this.container.append(this.avatars, this.gradient, this.info, this.tabs);\r\n\r\n    const checkScrollTop = () => {\r\n      if(this.scrollable.scrollTop !== 0) {\r\n        this.scrollable.scrollIntoViewNew(this.scrollable.container.firstElementChild as HTMLElement, 'start');\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    const SWITCH_ZONE = 1 / 3;\r\n    let cancel = false;\r\n    let freeze = false;\r\n    attachClickEvent(this.container, async(_e) => {\r\n      if(freeze) {\r\n        cancelEvent(_e);\r\n        return;\r\n      }\r\n\r\n      if(cancel) {\r\n        cancel = false;\r\n        return;\r\n      }\r\n\r\n      if(!checkScrollTop()) {\r\n        return;\r\n      }\r\n\r\n      const rect = this.container.getBoundingClientRect();\r\n\r\n      const e = (_e as TouchEvent).touches ? (_e as TouchEvent).touches[0] : _e as MouseEvent;\r\n      const x = e.pageX;\r\n\r\n      const clickX = x - rect.left;\r\n      if((!this.listLoader.previous.length && !this.listLoader.next.length) \r\n        || (clickX > (rect.width * SWITCH_ZONE) && clickX < (rect.width - rect.width * SWITCH_ZONE))) {\r\n        const peerId = this.peerId;\r\n\r\n        const targets: {element: HTMLElement, item: string | Message.messageService}[] = [];\r\n        this.listLoader.previous.concat(this.listLoader.current, this.listLoader.next).forEach((item, idx) => {\r\n          targets.push({\r\n            element: /* null */this.avatars.children[idx] as HTMLElement,\r\n            item\r\n          });\r\n        });\r\n\r\n        const prevTargets = targets.slice(0, this.listLoader.previous.length);\r\n        const nextTargets = targets.slice(this.listLoader.previous.length + 1);\r\n\r\n        const target = this.avatars.children[this.listLoader.previous.length] as HTMLElement;\r\n        freeze = true;\r\n        openAvatarViewer(target, peerId, () => peerId === this.peerId, this.listLoader.current, prevTargets, nextTargets);\r\n        freeze = false;\r\n      } else {\r\n        const centerX = rect.right - (rect.width / 2);\r\n        const toRight = x > centerX;\r\n  \r\n        // this.avatars.classList.remove('no-transition');\r\n        // fastRaf(() => {\r\n          this.listLoader.go(toRight ? 1 : -1);\r\n        // });\r\n      }\r\n    });\r\n\r\n    const cancelNextClick = () => {\r\n      cancel = true;\r\n      document.body.addEventListener(isTouchSupported ? 'touchend' : 'click', (e) => {\r\n        cancel = false;\r\n      }, {once: true});\r\n    };\r\n\r\n    let width = 0, x = 0, lastDiffX = 0, lastIndex = 0, minX = 0;\r\n    const swipeHandler = new SwipeHandler({\r\n      element: this.avatars, \r\n      onSwipe: (xDiff, yDiff) => {\r\n        lastDiffX = xDiff;\r\n        let lastX = x + xDiff * -PeerProfileAvatars.SCALE;\r\n        if(lastX > 0) lastX = 0;\r\n        else if(lastX < minX) lastX = minX;\r\n\r\n        this.avatars.style.transform = PeerProfileAvatars.TRANSLATE_TEMPLATE.replace('{x}', lastX + 'px');\r\n        //console.log(xDiff, yDiff);\r\n        return false;\r\n      }, \r\n      verifyTouchTarget: (e) => {\r\n        if(!checkScrollTop()) {\r\n          cancelNextClick();\r\n          cancelEvent(e);\r\n          return false;\r\n        } else if(this.tabs.classList.contains('hide') || freeze) {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      }, \r\n      onFirstSwipe: () => {\r\n        const rect = this.avatars.getBoundingClientRect();\r\n        width = rect.width;\r\n        minX = -width * (this.tabs.childElementCount - 1);\r\n\r\n        /* lastIndex = whichChild(this.tabs.querySelector('.active'));\r\n        x = -width * lastIndex; */\r\n        x = rect.left - this.container.getBoundingClientRect().left;\r\n        \r\n        this.avatars.style.transform = PeerProfileAvatars.TRANSLATE_TEMPLATE.replace('{x}', x + 'px');\r\n\r\n        this.avatars.classList.add('no-transition');\r\n        void this.avatars.offsetLeft; // reflow\r\n      },\r\n      onReset: () => {\r\n        const addIndex = Math.ceil(Math.abs(lastDiffX) / (width / PeerProfileAvatars.SCALE)) * (lastDiffX >= 0 ? 1 : -1);\r\n        cancelNextClick();\r\n        \r\n        //console.log(addIndex);\r\n\r\n        this.avatars.classList.remove('no-transition');\r\n        fastRaf(() => {\r\n          this.listLoader.go(addIndex);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPeer(peerId: number) {\r\n    this.peerId = peerId;\r\n\r\n    const photo = appPeersManager.getPeerPhoto(peerId);\r\n    if(!photo) {\r\n      return;\r\n    }\r\n\r\n    const loadCount = 50;\r\n    const listLoader: PeerProfileAvatars['listLoader'] = this.listLoader = new ListLoader<string | Message.messageService>({\r\n      loadCount,\r\n      loadMore: (anchor, older) => {\r\n        if(peerId > 0) {\r\n          return appPhotosManager.getUserPhotos(peerId, (anchor || listLoader.current) as any, loadCount).then(result => {\r\n            return {\r\n              count: result.count,\r\n              items: result.photos\r\n            };\r\n          });\r\n        } else {\r\n          const promises: [Promise<ChatFull>, ReturnType<AppMessagesManager['getSearch']>] = [] as any;\r\n          if(!listLoader.current) {\r\n            promises.push(appProfileManager.getChatFull(-peerId));\r\n          }\r\n          \r\n          promises.push(appMessagesManager.getSearch({\r\n            peerId,\r\n            maxId: Number.MAX_SAFE_INTEGER,\r\n            inputFilter: {\r\n              _: 'inputMessagesFilterChatPhotos'\r\n            },\r\n            limit: loadCount,\r\n            backLimit: 0\r\n          }));\r\n\r\n          return Promise.all(promises).then((result) => {\r\n            const value = result.pop() as typeof result[1];\r\n\r\n            if(!listLoader.current) {\r\n              const chatFull = result[0];\r\n              const message = value.history.findAndSplice(m => {\r\n                return ((m as Message.messageService).action as MessageAction.messageActionChannelEditPhoto).photo.id === chatFull.chat_photo.id;\r\n              }) as Message.messageService;\r\n              \r\n              listLoader.current = message || appMessagesManager.generateFakeAvatarMessage(this.peerId, chatFull.chat_photo);\r\n            }\r\n\r\n            //console.log('avatars loaded:', value);\r\n            return {\r\n              count: value.count,\r\n              items: value.history\r\n            };\r\n          });\r\n        }\r\n      },\r\n      processItem: this.processItem,\r\n      onJump: (item, older) => {\r\n        const id = this.listLoader.index;\r\n        //const nextId = Math.max(0, id);\r\n        const x = 100 * PeerProfileAvatars.SCALE * id;\r\n        this.avatars.style.transform = PeerProfileAvatars.TRANSLATE_TEMPLATE.replace('{x}', `-${x}%`);\r\n\r\n        const activeTab = this.tabs.querySelector('.active');\r\n        if(activeTab) activeTab.classList.remove('active');\r\n\r\n        const tab = this.tabs.children[id] as HTMLElement;\r\n        tab.classList.add('active');\r\n      }\r\n    });\r\n\r\n    if(photo._ === 'userProfilePhoto') {\r\n      listLoader.current = photo.photo_id;\r\n    }\r\n\r\n    this.processItem(listLoader.current);\r\n\r\n    listLoader.load(true);\r\n  }\r\n\r\n  public addTab() {\r\n    const tab = document.createElement('div');\r\n    tab.classList.add(PeerProfileAvatars.BASE_CLASS + '-tab');\r\n    this.tabs.append(tab);\r\n\r\n    if(this.tabs.childElementCount === 1) {\r\n      tab.classList.add('active');\r\n    }\r\n\r\n    this.tabs.classList.toggle('hide', this.tabs.childElementCount <= 1);\r\n  }\r\n\r\n  public processItem = (photoId: string | Message.messageService) => {\r\n    const avatar = document.createElement('div');\r\n    avatar.classList.add(PeerProfileAvatars.BASE_CLASS + '-avatar');\r\n\r\n    let photo: Photo.photo;\r\n    if(photoId) {\r\n      photo = typeof(photoId) === 'string' ? \r\n        appPhotosManager.getPhoto(photoId) : \r\n        (photoId.action as MessageAction.messageActionChannelEditPhoto).photo as Photo.photo;\r\n    }\r\n\r\n    const img = new Image();\r\n    img.classList.add(PeerProfileAvatars.BASE_CLASS + '-avatar-image');\r\n    img.draggable = false;\r\n\r\n    if(photo) {\r\n      const size = appPhotosManager.choosePhotoSize(photo, 420, 420, false);\r\n      appPhotosManager.preloadPhoto(photo, size).then(() => {\r\n        const cacheContext = appDownloadManager.getCacheContext(photo, size.type);\r\n        renderImageFromUrl(img, cacheContext.url, () => {\r\n          avatar.append(img);\r\n        });\r\n      });\r\n    } else {\r\n      const photo = appPeersManager.getPeerPhoto(this.peerId);\r\n      appAvatarsManager.putAvatar(avatar, this.peerId, photo, 'photo_big', img);\r\n    }\r\n\r\n    this.avatars.append(avatar);\r\n\r\n    this.addTab();\r\n\r\n    return photoId;\r\n  };\r\n}\r\n\r\nclass PeerProfile {\r\n  public element: HTMLElement;\r\n  public avatars: PeerProfileAvatars;\r\n  private avatar: AvatarElement;\r\n  private section: SettingSection;\r\n  private name: HTMLDivElement;\r\n  private subtitle: HTMLDivElement;\r\n  private bio: Row;\r\n  private username: Row;\r\n  private phone: Row;\r\n  private notifications: Row;\r\n  \r\n  private cleaned: boolean;\r\n  private setBioTimeout: number;\r\n  private setPeerStatusInterval: number;\r\n\r\n  private peerId = 0;\r\n  private threadId: number;\r\n\r\n  constructor(public scrollable: Scrollable) {\r\n    if(!PARALLAX_SUPPORTED) {\r\n      this.scrollable.container.classList.add('no-parallax');\r\n    }\r\n  }\r\n\r\n  public init() {\r\n    this.init = null;\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('profile-content');\r\n\r\n    this.section = new SettingSection({\r\n      noDelimiter: true\r\n    });\r\n\r\n    this.avatar = new AvatarElement();\r\n    this.avatar.classList.add('profile-avatar', 'avatar-120');\r\n    this.avatar.setAttribute('dialog', '1');\r\n    this.avatar.setAttribute('clickable', '');\r\n\r\n    this.name = document.createElement('div');\r\n    this.name.classList.add('profile-name');\r\n\r\n    this.subtitle = document.createElement('div');\r\n    this.subtitle.classList.add('profile-subtitle');\r\n\r\n    this.bio = new Row({\r\n      title: ' ',\r\n      subtitleLangKey: 'UserBio',\r\n      icon: 'info',\r\n      clickable: (e) => {\r\n        if((e.target as HTMLElement).tagName === 'A') {\r\n          return;\r\n        }\r\n        \r\n        appProfileManager.getProfileByPeerId(this.peerId).then(full => {\r\n          copyTextToClipboard(full.about);\r\n          toast(I18n.format('BioCopied', true));\r\n        });\r\n      }\r\n    });\r\n\r\n    this.bio.title.classList.add('pre-wrap');\r\n\r\n    this.username = new Row({\r\n      title: ' ',\r\n      subtitleLangKey: 'Username',\r\n      icon: 'username',\r\n      clickable: () => {\r\n        const peer: Channel | User = appPeersManager.getPeer(this.peerId);\r\n        copyTextToClipboard('@' + peer.username);\r\n        toast(I18n.format('UsernameCopied', true));\r\n      }\r\n    });\r\n\r\n    this.phone = new Row({\r\n      title: ' ',\r\n      subtitleLangKey: 'Phone',\r\n      icon: 'phone',\r\n      clickable: () => {\r\n        const peer: User = appUsersManager.getUser(this.peerId);\r\n        copyTextToClipboard('+' + peer.phone);\r\n        toast(I18n.format('PhoneCopied', true));\r\n      }\r\n    });\r\n\r\n    this.notifications = new Row({\r\n      checkboxField: new CheckboxField({toggle: true}),\r\n      titleLangKey: 'Notifications',\r\n      icon: 'unmute'\r\n    });\r\n    \r\n    this.section.content.append(this.phone.container, this.username.container, this.bio.container, this.notifications.container);\r\n\r\n    const delimiter = document.createElement('div');\r\n    delimiter.classList.add('gradient-delimiter');\r\n\r\n    this.element.append(this.section.container, delimiter);\r\n\r\n    this.notifications.checkboxField.input.addEventListener('change', (e) => {\r\n      if(!e.isTrusted) {\r\n        return;\r\n      }\r\n\r\n      //let checked = this.notificationsCheckbox.checked;\r\n      appMessagesManager.mutePeer(this.peerId);\r\n    });\r\n\r\n    rootScope.addEventListener('dialog_notify_settings', (dialog) => {\r\n      if(this.peerId === dialog.peerId) {\r\n        const muted = appNotificationsManager.isPeerLocalMuted(this.peerId, false);\r\n        this.notifications.checkboxField.checked = !muted;\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('peer_typings', (e) => {\r\n      const {peerId} = e;\r\n\r\n      if(this.peerId === peerId) {\r\n        this.setPeerStatus();\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('peer_bio_edit', (peerId) => {\r\n      if(peerId === this.peerId) {\r\n        this.setBio(true);\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('user_update', (e) => {\r\n      const userId = e;\r\n\r\n      if(this.peerId === userId) {\r\n        this.setPeerStatus();\r\n      }\r\n    });\r\n\r\n    this.setPeerStatusInterval = window.setInterval(this.setPeerStatus, 60e3);\r\n  }\r\n\r\n  public setPeerStatus = (needClear = false) => {\r\n    if(!this.peerId) return;\r\n\r\n    const peerId = this.peerId;\r\n    appImManager.setPeerStatus(this.peerId, this.subtitle, needClear, true, () => peerId === this.peerId);\r\n  };\r\n\r\n  public cleanupHTML() {\r\n    this.bio.container.style.display = 'none';\r\n    this.phone.container.style.display = 'none';\r\n    this.username.container.style.display = 'none';\r\n    this.notifications.container.style.display = '';\r\n    this.notifications.checkboxField.checked = true;\r\n    if(this.setBioTimeout) {\r\n      window.clearTimeout(this.setBioTimeout);\r\n      this.setBioTimeout = 0;\r\n    }\r\n  }\r\n\r\n  public setAvatar() {\r\n    if(this.peerId !== rootScope.myId) {\r\n      const photo = appPeersManager.getPeerPhoto(this.peerId);\r\n\r\n      if(photo) {\r\n        const oldAvatars = this.avatars;\r\n        this.avatars = new PeerProfileAvatars(this.scrollable);\r\n        this.avatars.setPeer(this.peerId);\r\n        this.avatars.info.append(this.name, this.subtitle);\r\n  \r\n        this.avatar.remove();\r\n    \r\n        if(oldAvatars) oldAvatars.container.replaceWith(this.avatars.container);\r\n        else this.element.prepend(this.avatars.container);\r\n\r\n        if(PARALLAX_SUPPORTED) {\r\n          this.scrollable.container.classList.add('parallax');\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    if(PARALLAX_SUPPORTED) {\r\n      this.scrollable.container.classList.remove('parallax');\r\n    }\r\n\r\n    if(this.avatars) {\r\n      this.avatars.container.remove();\r\n      this.avatars = undefined;\r\n    }\r\n\r\n    this.avatar.setAttribute('peer', '' + this.peerId);\r\n\r\n    this.section.content.prepend(this.avatar, this.name, this.subtitle);\r\n  }\r\n\r\n  public fillProfileElements() {\r\n    if(!this.cleaned) return;\r\n    this.cleaned = false;\r\n    \r\n    const peerId = this.peerId;\r\n\r\n    this.cleanupHTML();\r\n\r\n    this.setAvatar();\r\n\r\n    // username\r\n    if(peerId !== rootScope.myId) {\r\n      let username = appPeersManager.getPeerUsername(peerId);\r\n      if(username) {\r\n        setText(appPeersManager.getPeerUsername(peerId), this.username);\r\n      }\r\n      \r\n      const muted = appNotificationsManager.isPeerLocalMuted(peerId, false);\r\n      this.notifications.checkboxField.checked = !muted;\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        this.notifications.container.style.display = 'none';\r\n      });\r\n    }\r\n    \r\n    //let membersLi = this.profileTabs.firstElementChild.children[0] as HTMLLIElement;\r\n    if(peerId > 0) {\r\n      //membersLi.style.display = 'none';\r\n\r\n      let user = appUsersManager.getUser(peerId);\r\n      if(user.phone && peerId !== rootScope.myId) {\r\n        setText(appUsersManager.formatUserPhone(user.phone), this.phone);\r\n      }\r\n    }/*  else {\r\n      //membersLi.style.display = appPeersManager.isBroadcast(peerId) ? 'none' : '';\r\n    } */\r\n\r\n    this.setBio();\r\n\r\n    replaceContent(this.name, new PeerTitle({\r\n      peerId,\r\n      dialog: true\r\n    }).element);\r\n\r\n    this.setPeerStatus(true);\r\n  }\r\n\r\n  public setBio(override?: true) {\r\n    if(this.setBioTimeout) {\r\n      window.clearTimeout(this.setBioTimeout);\r\n      this.setBioTimeout = 0;\r\n    }\r\n\r\n    const peerId = this.peerId;\r\n    const threadId = this.threadId;\r\n\r\n    if(!peerId) {\r\n      return;\r\n    }\r\n\r\n    let promise: Promise<boolean>;\r\n    if(peerId > 0) {\r\n      promise = appProfileManager.getProfile(peerId, override).then(userFull => {\r\n        if(this.peerId !== peerId || this.threadId !== threadId) {\r\n          //this.log.warn('peer changed');\r\n          return false;\r\n        }\r\n        \r\n        if(userFull.rAbout && peerId !== rootScope.myId) {\r\n          setText(userFull.rAbout, this.bio);\r\n        }\r\n        \r\n        //this.log('userFull', userFull);\r\n        return true;\r\n      });\r\n    } else {\r\n      promise = appProfileManager.getChatFull(-peerId, override).then((chatFull) => {\r\n        if(this.peerId !== peerId || this.threadId !== threadId) {\r\n          //this.log.warn('peer changed');\r\n          return false;\r\n        }\r\n        \r\n        //this.log('chatInfo res 2:', chatFull);\r\n        \r\n        if(chatFull.about) {\r\n          setText(RichTextProcessor.wrapRichText(chatFull.about), this.bio);\r\n        }\r\n\r\n        return true;\r\n      });\r\n    }\r\n\r\n    promise.then((canSetNext) => {\r\n      if(canSetNext) {\r\n        this.setBioTimeout = window.setTimeout(() => this.setBio(true), 60e3);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPeer(peerId: number, threadId = 0) {\r\n    if(this.peerId === peerId && this.threadId === peerId) return;\r\n\r\n    if(this.init) {\r\n      this.init();\r\n    }\r\n\r\n    this.peerId = peerId;\r\n    this.threadId = threadId;\r\n    \r\n    this.cleaned = true;\r\n  }\r\n}\r\n\r\n// TODO: отредактированное сообщение не изменится\r\nexport default class AppSharedMediaTab extends SliderSuperTab {\r\n  private editBtn: HTMLElement;\r\n\r\n  private peerId = 0;\r\n  private threadId = 0;\r\n\r\n  private historiesStorage: {\r\n    [peerId: number]: Partial<{\r\n      [type in SearchSuperType]: {mid: number, peerId: number}[]\r\n    }>\r\n  } = {};\r\n\r\n  private searchSuper: AppSearchSuper;\r\n\r\n  private profile: PeerProfile;\r\n  peerChanged: boolean;\r\n\r\n  constructor(slider: SidebarSlider) {\r\n    super(slider, false);\r\n  }\r\n\r\n  public init() {\r\n    //const perf = performance.now();\r\n\r\n    this.container.classList.add('shared-media-container', 'profile-container');\r\n\r\n    // * header\r\n    const newCloseBtn = Button('btn-icon sidebar-close-button', {noRipple: true});\r\n    this.closeBtn.replaceWith(newCloseBtn);\r\n    this.closeBtn = newCloseBtn;\r\n\r\n    const animatedCloseIcon = document.createElement('div');\r\n    animatedCloseIcon.classList.add('animated-close-icon');\r\n    newCloseBtn.append(animatedCloseIcon);\r\n\r\n    const transitionContainer = document.createElement('div');\r\n    transitionContainer.className = 'transition slide-fade';\r\n    \r\n    const transitionFirstItem = document.createElement('div');\r\n    transitionFirstItem.classList.add('transition-item');\r\n\r\n    this.title.append(i18n('Profile'));\r\n    this.editBtn = ButtonIcon('edit');\r\n    //const moreBtn = ButtonIcon('more');\r\n\r\n    transitionFirstItem.append(this.title, this.editBtn/* , moreBtn */);\r\n\r\n    const transitionLastItem = document.createElement('div');\r\n    transitionLastItem.classList.add('transition-item');\r\n\r\n    const secondTitle: HTMLElement = this.title.cloneNode() as any;\r\n    secondTitle.append(i18n('PeerInfo.SharedMedia'));\r\n\r\n    transitionLastItem.append(secondTitle);\r\n\r\n    transitionContainer.append(transitionFirstItem, transitionLastItem);\r\n\r\n    this.header.append(transitionContainer);\r\n\r\n    // * body\r\n\r\n    this.profile = new PeerProfile(this.scrollable);\r\n    this.profile.init();\r\n    \r\n    this.scrollable.append(this.profile.element);\r\n\r\n    const HEADER_HEIGHT = 56;\r\n    this.scrollable.onAdditionalScroll = () => {\r\n      const rect = this.searchSuper.nav.getBoundingClientRect(); \r\n      if(!rect.width) return;\r\n\r\n      const top = rect.top - 1;\r\n      const isSharedMedia = top <= HEADER_HEIGHT;\r\n      animatedCloseIcon.classList.toggle('state-back', isSharedMedia);\r\n      this.searchSuper.container.classList.toggle('is-full-viewport', isSharedMedia);\r\n      transition(+isSharedMedia);\r\n\r\n      if(!isSharedMedia) {\r\n        this.searchSuper.cleanScrollPositions();\r\n      }\r\n    };\r\n\r\n    const transition = TransitionSlider(transitionContainer, 'slide-fade', 400, null, false);\r\n\r\n    transition(0);\r\n\r\n    attachClickEvent(this.closeBtn, (e) => {\r\n      if(this.closeBtn.firstElementChild.classList.contains('state-back')) {\r\n        this.scrollable.scrollIntoViewNew(this.scrollable.container.firstElementChild as HTMLElement, 'start');\r\n        transition(0);\r\n        animatedCloseIcon.classList.remove('state-back');\r\n      } else if(!this.scrollable.isHeavyAnimationInProgress) {\r\n        appSidebarRight.onCloseBtnClick();\r\n      }\r\n    });\r\n\r\n    attachClickEvent(this.editBtn, (e) => {\r\n      let tab: AppEditChatTab | AppEditContactTab;\r\n      if(this.peerId < 0) {\r\n        tab = new AppEditChatTab(appSidebarRight);\r\n      } else {\r\n        tab = new AppEditContactTab(appSidebarRight);\r\n      }\r\n\r\n      if(tab) {\r\n        if(tab instanceof AppEditChatTab) {\r\n          tab.chatId = -this.peerId;\r\n        } else {\r\n          tab.peerId = this.peerId;\r\n        }\r\n        \r\n        tab.open();\r\n      }\r\n    });\r\n\r\n    //this.container.prepend(this.closeBtn.parentElement);\r\n\r\n    this.searchSuper = new AppSearchSuper({\r\n      mediaTabs: [{\r\n        inputFilter: 'inputMessagesFilterEmpty',\r\n        name: 'PeerMedia.Members',\r\n        type: 'members'\r\n      }, {\r\n        inputFilter: 'inputMessagesFilterPhotoVideo',\r\n        name: 'SharedMediaTab2',\r\n        type: 'media'\r\n      }, {\r\n        inputFilter: 'inputMessagesFilterDocument',\r\n        name: 'SharedFilesTab2',\r\n        type: 'files'\r\n      }, {\r\n        inputFilter: 'inputMessagesFilterUrl',\r\n        name: 'SharedLinksTab2',\r\n        type: 'links'\r\n      }, {\r\n        inputFilter: 'inputMessagesFilterMusic',\r\n        name: 'SharedMusicTab2',\r\n        type: 'music'\r\n      }, {\r\n        inputFilter: 'inputMessagesFilterVoice',\r\n        name: 'SharedVoiceTab2',\r\n        type: 'voice'\r\n      }], \r\n      scrollable: this.scrollable,\r\n      onChangeTab: (mediaTab) => {\r\n        let timeout = mediaTab.type === 'members' && rootScope.settings.animationsEnabled ? 250 : 0;\r\n        setTimeout(() => {\r\n          btnAddMembers.classList.toggle('is-hidden', mediaTab.type !== 'members');\r\n        }, timeout);\r\n      }\r\n    });\r\n\r\n    this.profile.element.append(this.searchSuper.container);\r\n\r\n    const btnAddMembers = ButtonCorner({icon: 'addmember_filled'});\r\n    this.content.append(btnAddMembers);\r\n\r\n    btnAddMembers.addEventListener('click', () => {\r\n      const id = -this.peerId;\r\n      const isChannel = appChatsManager.isChannel(id);\r\n\r\n      const showConfirmation = (peerIds: number[], callback: () => void) => {\r\n        let titleLangKey: LangPackKey = 'GroupAddMembers', descriptionLangKey: LangPackKey, descriptionLangArgs: any[];\r\n\r\n        if(peerIds.length > 1) {\r\n          descriptionLangKey = 'PeerInfo.Confirm.AddMembers1';\r\n          descriptionLangArgs = [peerIds.length];\r\n        } else {\r\n          descriptionLangKey = 'PeerInfo.Confirm.AddMember';\r\n          descriptionLangArgs = [new PeerTitle({\r\n            peerId: peerIds[0],\r\n            onlyFirstName: true\r\n          }).element];\r\n        }\r\n\r\n        new PopupPeer('popup-add-members', {\r\n          peerId: -id,\r\n          titleLangKey,\r\n          descriptionLangKey,\r\n          descriptionLangArgs,\r\n          buttons: [{\r\n            langKey: 'Add',\r\n            callback: () => {\r\n              callback();\r\n            }\r\n          }]\r\n        }).show();\r\n      };\r\n      \r\n      if(isChannel) {\r\n        const tab = new AppAddMembersTab(this.slider);\r\n        tab.open({\r\n          peerId: this.peerId,\r\n          type: 'channel',\r\n          skippable: false,\r\n          takeOut: (peerIds) => {\r\n            showConfirmation(peerIds, () => {\r\n              tab.attachToPromise(appChatsManager.inviteToChannel(id, peerIds));\r\n            });\r\n\r\n            return false;\r\n          },\r\n          title: 'GroupAddMembers',\r\n          placeholder: 'SendMessageTo'\r\n        });\r\n      } else {\r\n        new PopupPickUser({\r\n          peerTypes: ['contacts'],\r\n          placeholder: 'Search',\r\n          onSelect: (peerId) => {\r\n            setTimeout(() => {\r\n              showConfirmation([peerId], () => {\r\n                appChatsManager.addChatUser(id, peerId);\r\n              });\r\n            }, 0);\r\n          },\r\n        });\r\n      }\r\n    });\r\n\r\n    //console.log('construct shared media time:', performance.now() - perf);\r\n  }\r\n\r\n  public renderNewMessages(peerId: number, mids: number[]) {\r\n    if(this.init) return; // * not inited yet\r\n\r\n    if(!this.historiesStorage[peerId]) return;\r\n    \r\n    mids = mids.slice().reverse(); // ! because it will be ascend sorted array\r\n    for(const mediaTab of this.searchSuper.mediaTabs) {\r\n      const inputFilter = mediaTab.inputFilter;\r\n      const filtered = this.searchSuper.filterMessagesByType(mids.map(mid => appMessagesManager.getMessageByPeer(peerId, mid)), inputFilter);\r\n      if(filtered.length) {\r\n        if(this.historiesStorage[peerId][inputFilter]) {\r\n          this.historiesStorage[peerId][inputFilter].unshift(...filtered.map(message => ({mid: message.mid, peerId: message.peerId})));\r\n        }\r\n\r\n        if(this.peerId === peerId && this.searchSuper.usedFromHistory[inputFilter] !== -1) {\r\n          this.searchSuper.usedFromHistory[inputFilter] += filtered.length;\r\n          this.searchSuper.performSearchResult(filtered, mediaTab, false);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public deleteDeletedMessages(peerId: number, mids: number[]) {\r\n    if(this.init) return; // * not inited yet\r\n\r\n    if(!this.historiesStorage[peerId]) return;\r\n\r\n    for(const mid of mids) {\r\n      for(const type of this.searchSuper.mediaTabs) {\r\n        const inputFilter = type.inputFilter;\r\n\r\n        if(!this.historiesStorage[peerId][inputFilter]) continue;\r\n\r\n        const history = this.historiesStorage[peerId][inputFilter];\r\n        const idx = history.findIndex(m => m.mid === mid);\r\n        if(idx !== -1) {\r\n          history.splice(idx, 1);\r\n\r\n          if(this.peerId === peerId) {\r\n            const container = this.searchSuper.tabs[inputFilter];\r\n            const div = container.querySelector(`div[data-mid=\"${mid}\"][data-peer-id=\"${peerId}\"]`);\r\n            if(div) {\r\n              div.remove();\r\n            }\r\n  \r\n            if(this.searchSuper.usedFromHistory[inputFilter] >= (idx + 1)) {\r\n              this.searchSuper.usedFromHistory[inputFilter]--;\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.scrollable.onScroll();\r\n  }\r\n\r\n  public cleanupHTML() {\r\n    // const perf = performance.now();\r\n    this.profile.cleanupHTML();\r\n    \r\n    this.editBtn.style.display = 'none';\r\n\r\n    this.searchSuper.cleanupHTML(true);\r\n\r\n    this.container.classList.toggle('can-add-members', this.searchSuper.canViewMembers() && appChatsManager.hasRights(-this.peerId, 'invite_users'));\r\n\r\n    // console.log('cleanupHTML shared media time:', performance.now() - perf);\r\n  }\r\n\r\n  public setLoadMutex(promise: Promise<any>) {\r\n    this.searchSuper.loadMutex = promise;\r\n  }\r\n\r\n  public setPeer(peerId: number, threadId = 0) {\r\n    if(this.peerId === peerId && this.threadId === threadId) return false;\r\n\r\n    this.peerId = peerId;\r\n    this.threadId = threadId;\r\n    this.peerChanged = true;\r\n\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    this.searchSuper.setQuery({\r\n      peerId, \r\n      //threadId, \r\n      historyStorage: this.historiesStorage[peerId] ?? (this.historiesStorage[peerId] = {})\r\n    });\r\n\r\n    this.profile.setPeer(peerId, threadId);\r\n    \r\n    return true;\r\n  }\r\n\r\n  public fillProfileElements() {\r\n    if(!this.peerChanged) {\r\n      return;\r\n    }\r\n\r\n    this.peerChanged = false;\r\n\r\n    this.cleanupHTML();\r\n\r\n    this.profile.fillProfileElements();\r\n\r\n    if(this.peerId > 0) {\r\n      if(this.peerId !== rootScope.myId && appUsersManager.isContact(this.peerId)) {\r\n        this.editBtn.style.display = '';\r\n      }\r\n    } else {\r\n      const chat: Chat = appChatsManager.getChat(-this.peerId);\r\n      if(chat._ === 'chat' || (chat as Chat.channel).admin_rights) {\r\n        this.editBtn.style.display = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  public loadSidebarMedia(single: boolean, justLoad = false) {\r\n    this.searchSuper.load(single, justLoad);\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    this.scrollable.onScroll();\r\n  }\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.AppSharedMediaTab = AppSharedMediaTab);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appImManager from \"../../lib/appManagers/appImManager\";\r\nimport SidebarSlider from \"../slider\";\r\nimport mediaSizes, { ScreenSize } from \"../../helpers/mediaSizes\";\r\nimport AppSharedMediaTab from \"./tabs/sharedMedia\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nexport const RIGHT_COLUMN_ACTIVE_CLASSNAME = 'is-right-column-shown';\r\n\r\nexport class AppSidebarRight extends SidebarSlider {\r\n  public sharedMediaTab: AppSharedMediaTab;\r\n\r\n  constructor() {\r\n    super({\r\n      sidebarEl: document.getElementById('column-right') as HTMLElement,\r\n      canHideFirst: true,\r\n      navigationType: 'right'\r\n    });\r\n\r\n    mediaSizes.addEventListener('changeScreen', (from, to) => {\r\n      if(to === ScreenSize.medium && from !== ScreenSize.mobile) {\r\n        this.toggleSidebar(false);\r\n      }\r\n    });\r\n\r\n    this.sharedMediaTab = new AppSharedMediaTab(this);\r\n  }\r\n\r\n  public onCloseTab(id: number, animate: boolean, isNavigation?: boolean) {\r\n    if(!this.historyTabIds.length) {\r\n      this.toggleSidebar(false, animate);\r\n    }\r\n\r\n    super.onCloseTab(id, animate, isNavigation);\r\n  }\r\n\r\n  /* public selectTab(id: number) {\r\n    const res = super.selectTab(id);\r\n\r\n    if(id !== -1) {\r\n      this.toggleSidebar(true);\r\n    }\r\n\r\n    return res;\r\n  } */\r\n\r\n  public toggleSidebar(enable?: boolean, animate?: boolean) {\r\n    /////this.log('sidebarEl', this.sidebarEl, enable, isElementInViewport(this.sidebarEl));\r\n\r\n    const active = document.body.classList.contains(RIGHT_COLUMN_ACTIVE_CLASSNAME);\r\n    let willChange: boolean;\r\n    if(enable !== undefined) {\r\n      if(enable) {\r\n        if(!active) {\r\n          willChange = true;\r\n        }\r\n      } else if(active) {\r\n        willChange = true;\r\n      }\r\n    } else {\r\n      willChange = true;\r\n    }\r\n\r\n    if(!willChange) return Promise.resolve();\r\n\r\n    if(!active && !this.historyTabIds.length) {\r\n      this.sharedMediaTab.open();\r\n      //this.selectTab(this.sharedMediaTab);\r\n    }\r\n\r\n    const animationPromise = appImManager.selectTab(active ? 1 : 2, animate);\r\n    document.body.classList.toggle(RIGHT_COLUMN_ACTIVE_CLASSNAME, enable);\r\n    return animationPromise;\r\n\r\n    /* return new Promise((resolve, reject) => {\r\n      const hidden: {element: HTMLDivElement, height: number}[] = [];\r\n      const observer = new IntersectionObserver((entries) => {\r\n        for(const entry of entries) {\r\n          const bubble = entry.target as HTMLDivElement;\r\n          if(!entry.isIntersecting) {\r\n            hidden.push({element: bubble, height: bubble.scrollHeight});\r\n          }\r\n        }\r\n  \r\n        for(const item of hidden) {\r\n          item.element.style.minHeight = item.height + 'px';\r\n          (item.element.firstElementChild as HTMLElement).style.display = 'none';\r\n          item.element.style.width = '1px';\r\n        }\r\n  \r\n        //console.log('hidden', hidden);\r\n        observer.disconnect();\r\n  \r\n        set();\r\n  \r\n        setTimeout(() => {\r\n          for(const item of hidden) {\r\n            item.element.style.minHeight = '';\r\n            item.element.style.width = '';\r\n            (item.element.firstElementChild as HTMLElement).style.display = '';\r\n          }\r\n\r\n          resolve();\r\n        }, 200);\r\n      });\r\n  \r\n      const length = Object.keys(appImManager.bubbles).length;\r\n      if(length) {\r\n        for(const i in appImManager.bubbles) {\r\n          observer.observe(appImManager.bubbles[i]);\r\n        }\r\n      } else {\r\n        set();\r\n        setTimeout(resolve, 200);\r\n      }\r\n    }); */\r\n  }\r\n}\r\n\r\nconst appSidebarRight = new AppSidebarRight();\r\nMOUNT_CLASS_TO.appSidebarRight = appSidebarRight;\r\nexport default appSidebarRight;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport appSidebarRight from \"..\";\r\nimport appPollsManager from \"../../../lib/appManagers/appPollsManager\";\r\nimport { roundPercents } from \"../../poll\";\r\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport { ripple } from \"../../ripple\";\r\nimport { i18n } from \"../../../lib/langPack\";\r\n\r\nexport default class AppPollResultsTab extends SliderSuperTab {\r\n  private resultsDiv: HTMLElement;\r\n\r\n  protected init() {\r\n    this.container.id = 'poll-results-container';\r\n    this.container.classList.add('chatlist-container');\r\n\r\n    this.resultsDiv = document.createElement('div');\r\n    this.resultsDiv.classList.add('poll-results');\r\n    this.scrollable.append(this.resultsDiv);\r\n  }\r\n\r\n  public open(message: any) {\r\n    const ret = super.open();\r\n    const poll = appPollsManager.getPoll(message.media.poll.id);\r\n\r\n    this.setTitle(poll.poll.pFlags.quiz ? 'PollResults.Title.Quiz' : 'PollResults.Title.Poll');\r\n\r\n    const title = document.createElement('h3');\r\n    title.innerHTML = poll.poll.rQuestion;\r\n\r\n    const percents = poll.results.results.map(v => v.voters / poll.results.total_voters * 100);\r\n    roundPercents(percents);\r\n\r\n    const fragment = document.createDocumentFragment();\r\n    poll.results.results.forEach((result, idx) => {\r\n      if(!result.voters) return;\r\n\r\n      const hr = document.createElement('hr');\r\n\r\n      const answer = poll.poll.answers[idx];\r\n\r\n      // Head\r\n      const answerEl = document.createElement('div');\r\n      answerEl.classList.add('poll-results-answer');\r\n\r\n      const answerTitle = document.createElement('div');\r\n      answerTitle.innerHTML = RichTextProcessor.wrapEmojiText(answer.text);\r\n\r\n      const answerPercents = document.createElement('div');\r\n      answerPercents.innerText = Math.round(percents[idx]) + '%';\r\n\r\n      answerEl.append(answerTitle, answerPercents);\r\n\r\n      // Humans\r\n      const list = appDialogsManager.createChatList();\r\n      list.classList.add('poll-results-voters');\r\n\r\n      appDialogsManager.setListClickListener(list, () => {\r\n        appSidebarRight.onCloseBtnClick();\r\n      }, undefined, true);\r\n\r\n      list.style.minHeight = Math.min(result.voters, 4) * 50 + 'px';\r\n\r\n      fragment.append(hr, answerEl, list);\r\n\r\n      let offset: string, limit = 4, loading = false, left = result.voters - 4;\r\n      const load = () => {\r\n        if(loading) return;\r\n        loading = true;\r\n\r\n        appPollsManager.getVotes(message, answer.option, offset, limit).then(votesList => {\r\n          votesList.votes.forEach(vote => {\r\n            const {dom} = appDialogsManager.addDialogNew({\r\n              dialog: vote.user_id,\r\n              container: list,\r\n              drawStatus: false,\r\n              rippleEnabled: false, \r\n              meAsSaved: false,\r\n              avatarSize: 32\r\n            });\r\n            dom.lastMessageSpan.parentElement.remove();\r\n          });\r\n\r\n          if(offset) {\r\n            left -= votesList.votes.length;\r\n            (showMore.lastElementChild as HTMLElement).replaceWith(i18n('PollResults.LoadMore', [Math.min(20, left)]));\r\n          }\r\n          \r\n          offset = votesList.next_offset;\r\n          limit = 20;\r\n\r\n          if(!left || !votesList.votes.length) {\r\n            showMore.remove();\r\n          }\r\n        }).finally(() => {\r\n          loading = false;\r\n        });\r\n      };\r\n\r\n      load();\r\n\r\n      if(left <= 0) return;\r\n\r\n      const showMore = document.createElement('div');\r\n      showMore.classList.add('poll-results-more', 'show-more', 'rp-overflow');\r\n      showMore.addEventListener('click', load);\r\n      ripple(showMore);\r\n      const down = document.createElement('div');\r\n      down.classList.add('tgico-down');\r\n      showMore.append(down, i18n('PollResults.LoadMore', [Math.min(20, left)]));\r\n\r\n      fragment.append(showMore);\r\n    });\r\n\r\n    this.resultsDiv.append(title, fragment);\r\n\r\n    appSidebarRight.toggleSidebar(true).then(() => {\r\n      /* appPollsManager.getVotes(mid).then(votes => {\r\n        console.log('gOt VotEs', votes);\r\n      }); */\r\n    });\r\n\r\n    return ret;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport appImManager from \"../lib/appManagers/appImManager\";\r\nimport appPollsManager, { Poll, PollResults } from \"../lib/appManagers/appPollsManager\";\r\nimport serverTimeManager from \"../lib/mtproto/serverTimeManager\";\r\nimport { RichTextProcessor } from \"../lib/richtextprocessor\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { ripple } from \"./ripple\";\r\nimport appSidebarRight from \"./sidebarRight\";\r\nimport AppPollResultsTab from \"./sidebarRight/tabs/pollResults\";\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport { fastRaf } from \"../helpers/schedulers\";\r\nimport SetTransition from \"./singleTransition\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent, detachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\n\r\nlet lineTotalLength = 0;\r\n//const tailLength = 9;\r\nconst times = 10;\r\nconst fullTime = 340;\r\nconst oneTime = fullTime / times;\r\n\r\nexport const roundPercents = (percents: number[]) => {\r\n  //console.log('roundPercents before percents:', percents);\r\n\r\n  const sum = percents.reduce((acc, p) => acc + Math.round(p), 0);\r\n  if(sum > 100) {\r\n    const diff = sum - 100;\r\n    const length = percents.length;\r\n    for(let i = 0; i < diff; ++i) {\r\n      let minIndex = -1, minRemainder = 1;\r\n      for(let k = 0; k < length; ++k) {\r\n        let remainder = percents[k] % 1;\r\n        if(remainder >= 0.5 && remainder < minRemainder) {\r\n          minRemainder = remainder;\r\n          minIndex = k;\r\n        }\r\n      }\r\n\r\n      if(minIndex === -1) {\r\n        //throw new Error('lol chto');\r\n        return;\r\n      }\r\n\r\n      percents[minIndex] -= minRemainder;\r\n    }\r\n  } else if(sum < 100) {\r\n    const diff = 100 - sum;\r\n    const length = percents.length;\r\n    for(let i = 0; i < diff; ++i) {\r\n      let minIndex = -1, maxRemainder = 0;\r\n      for(let k = 0; k < length; ++k) {\r\n        let remainder = percents[k] % 1;\r\n        if(remainder < 0.5 && remainder > maxRemainder) {\r\n          maxRemainder = remainder;\r\n          minIndex = k;\r\n        }\r\n      }\r\n\r\n      if(minIndex === -1) {\r\n        //throw new Error('lol chto');\r\n        return;\r\n      }\r\n\r\n      percents[minIndex] += 1 - maxRemainder;\r\n    }\r\n  }\r\n\r\n  //console.log('roundPercents after percents:', percents);\r\n};\r\n\r\n/* const connectedPolls: {id: string, element: PollElement}[] = [];\r\nrootScope.on('poll_update', (e) => {\r\n  const {poll, results} = e as {poll: Poll, results: PollResults};\r\n\r\n  //console.log('poll_update', poll, results);\r\n  for(const connected of connectedPolls) {\r\n    if(connected.id === poll.id) {\r\n      const pollElement = connected.element;\r\n      pollElement.isClosed = !!poll.pFlags.closed;\r\n      pollElement.performResults(results, poll.chosenIndexes);\r\n    }\r\n  }\r\n}); */\r\n\r\nrootScope.addEventListener('poll_update', (e) => {\r\n  const {poll, results} = e as {poll: Poll, results: PollResults};\r\n\r\n  const pollElements = Array.from(document.querySelectorAll(`poll-element[poll-id=\"${poll.id}\"]`)) as PollElement[];\r\n  pollElements.forEach(pollElement => {\r\n    //console.log('poll_update', poll, results);\r\n    pollElement.isClosed = !!poll.pFlags.closed;\r\n    pollElement.performResults(results, poll.chosenIndexes);\r\n  });\r\n});\r\n\r\nrootScope.addEventListener('peer_changed', () => {\r\n  if(prevQuizHint) {\r\n    hideQuizHint(prevQuizHint, prevQuizHintOnHide, prevQuizHintTimeout);\r\n  }\r\n});\r\n\r\nconst hideQuizHint = (element: HTMLElement, onHide: () => void, timeout: number) => {\r\n  element.classList.remove('active');\r\n\r\n  clearTimeout(timeout);\r\n  setTimeout(() => {\r\n    onHide();\r\n    element.remove();\r\n\r\n    if(prevQuizHint === element && prevQuizHintOnHide === onHide && prevQuizHintTimeout === timeout) {\r\n      prevQuizHint = prevQuizHintOnHide = null;\r\n      prevQuizHintTimeout = 0;\r\n    }\r\n  }, 200);\r\n};\r\n\r\nlet prevQuizHint: HTMLElement, prevQuizHintOnHide: () => void, prevQuizHintTimeout: number;\r\nconst setQuizHint = (solution: string, solution_entities: any[], onHide: () => void) => {\r\n  if(prevQuizHint) {\r\n    hideQuizHint(prevQuizHint, prevQuizHintOnHide, prevQuizHintTimeout);\r\n  }\r\n\r\n  const element = document.createElement('div');\r\n  element.classList.add('quiz-hint');\r\n\r\n  const container = document.createElement('div');\r\n  container.classList.add('container', 'tgico');\r\n\r\n  const textEl = document.createElement('div');\r\n  textEl.classList.add('text');\r\n\r\n  container.append(textEl);\r\n  element.append(container);\r\n\r\n  textEl.innerHTML = RichTextProcessor.wrapRichText(solution, {entities: solution_entities});\r\n  appImManager.chat.bubbles.bubblesContainer.append(element);\r\n\r\n  void element.offsetLeft; // reflow\r\n  element.classList.add('active');\r\n\r\n  prevQuizHint = element;\r\n  prevQuizHintOnHide = onHide;\r\n  prevQuizHintTimeout = window.setTimeout(() => {\r\n    hideQuizHint(element, onHide, prevQuizHintTimeout);\r\n  }, isTouchSupported ? 5000 : 7000);\r\n};\r\n\r\nexport default class PollElement extends HTMLElement {\r\n  private svgLines: SVGSVGElement[];\r\n  private numberDivs: HTMLDivElement[];\r\n  private answerDivs: HTMLDivElement[];\r\n  private descDiv: HTMLElement;\r\n  private typeDiv: HTMLElement;\r\n  private avatarsDiv: HTMLElement;\r\n  private viewResults: HTMLElement;\r\n  private votersCountDiv: HTMLDivElement;\r\n\r\n  private maxOffset = -46.5;\r\n  //private maxLength: number;\r\n  //private maxLengths: number[];\r\n  private maxPercents: number[];\r\n\r\n  public isClosed = false;\r\n  private isQuiz = false;\r\n  private isRetracted = false;\r\n  private isPublic = false;\r\n  private isMultiple = false;\r\n  private chosenIndexes: number[] = [];\r\n  private percents: number[];\r\n\r\n  public message: any;\r\n\r\n  private quizInterval: number;\r\n  private quizTimer: SVGSVGElement;\r\n\r\n  private sendVoteBtn: HTMLElement;\r\n  private chosingIndexes: number[] = [];\r\n\r\n  private sendVotePromise: Promise<void>;\r\n  private sentVote = false;\r\n\r\n  constructor() {\r\n    super();\r\n    // элемент создан\r\n  }\r\n\r\n  public render() {\r\n    // браузер вызывает этот метод при добавлении элемента в документ\r\n    // (может вызываться много раз, если элемент многократно добавляется/удаляется)\r\n\r\n    if(!lineTotalLength) {\r\n      lineTotalLength = (document.getElementById('poll-line') as any as SVGPathElement).getTotalLength();\r\n      //console.log('line total length:', lineTotalLength);\r\n    }\r\n\r\n    const pollId = this.message.media.poll.id;\r\n    const {poll, results} = appPollsManager.getPoll(pollId);\r\n\r\n    /* const timestamp = Date.now() / 1000 | 0;\r\n    if(timestamp < this.message.date) { */\r\n    if(this.message.pFlags.is_scheduled) {\r\n      this.classList.add('disable-hover');\r\n    }\r\n\r\n    //console.log('pollElement poll:', poll, results);\r\n\r\n    let descKey: LangPackKey;\r\n    if(poll.pFlags) {\r\n      this.isPublic = !!poll.pFlags.public_voters;\r\n      this.isQuiz = !!poll.pFlags.quiz;\r\n      this.isClosed = !!poll.pFlags.closed;\r\n      this.isMultiple = !!poll.pFlags.multiple_choice;\r\n\r\n      if(this.isClosed) {\r\n        descKey = 'Chat.Poll.Type.Closed';\r\n        this.classList.add('is-closed');\r\n      } else if(this.isQuiz) {\r\n        descKey = this.isPublic ? 'Chat.Poll.Type.Quiz' : 'Chat.Poll.Type.AnonymousQuiz';\r\n      } else {\r\n        descKey = this.isPublic ? 'Chat.Poll.Type.Public' : 'Chat.Poll.Type.Anonymous';\r\n      }\r\n    }\r\n\r\n    const multipleSelect = this.isMultiple ? '<span class=\"poll-answer-selected tgico-check\"></span>' : '';\r\n    const votes = poll.answers.map((answer, idx) => {\r\n      return `\r\n        <div class=\"poll-answer\" data-index=\"${idx}\">\r\n          <div class=\"circle-hover\">\r\n            <div class=\"animation-ring\"></div>\r\n            <svg class=\"progress-ring\">\r\n              <circle class=\"progress-ring__circle\" cx=\"13\" cy=\"13\" r=\"9\"></circle>\r\n            </svg>\r\n            ${multipleSelect}\r\n          </div>\r\n          <div class=\"poll-answer-percents\"></div>\r\n          <div class=\"poll-answer-text\">${RichTextProcessor.wrapEmojiText(answer.text)}</div>\r\n          <svg version=\"1.1\" class=\"poll-line\" style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 ${mediaSizes.active.regular.width} 35\" xml:space=\"preserve\">\r\n            <use href=\"#poll-line\"></use>\r\n          </svg>\r\n          <span class=\"poll-answer-selected tgico\"></span>\r\n        </div>\r\n      `;\r\n    }).join('');\r\n\r\n    this.innerHTML = `\r\n      <div class=\"poll-title\">${poll.rQuestion}</div>\r\n      <div class=\"poll-desc\">\r\n        <div class=\"poll-type\"></div>\r\n        <div class=\"poll-avatars\"></div>\r\n      </div>\r\n      ${votes}`;\r\n\r\n    this.descDiv = this.firstElementChild.nextElementSibling as HTMLElement;\r\n    this.typeDiv = this.descDiv.firstElementChild as HTMLElement;\r\n    this.avatarsDiv = this.descDiv.lastElementChild as HTMLElement;\r\n\r\n    if(descKey) {\r\n      this.typeDiv.append(i18n(descKey));\r\n    }\r\n\r\n    if(this.isQuiz) {\r\n      this.classList.add('is-quiz');\r\n\r\n      if(poll.close_period && poll.close_date) {\r\n        const timeLeftDiv = document.createElement('div');\r\n        timeLeftDiv.classList.add('poll-time');\r\n        this.descDiv.append(timeLeftDiv);\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        //svg.setAttributeNS(null, 'viewBox', '0 0 15 15');\r\n        svg.classList.add('poll-quiz-timer');\r\n\r\n        this.quizTimer = svg;\r\n\r\n        const strokeWidth = 2;\r\n        const radius = 7;\r\n        const circumference = 2 * Math.PI * radius;\r\n\r\n        const circle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        circle.classList.add('poll-quiz-timer-circle');\r\n        circle.setAttributeNS(null, 'cx', '16');\r\n        circle.setAttributeNS(null, 'cy', '16');\r\n        circle.setAttributeNS(null, 'r', '' + radius);\r\n        circle.setAttributeNS(null, 'stroke-width', '' + strokeWidth);\r\n\r\n        svg.append(circle);\r\n        this.descDiv.append(svg);\r\n        \r\n        const period = poll.close_period * 1000;\r\n        const closeTime = (poll.close_date - serverTimeManager.serverTimeOffset) * 1000;\r\n\r\n        //console.log('closeTime:', poll.close_date, serverTimeManager.serverTimeOffset, Date.now() / 1000 | 0);\r\n\r\n        // let time = Date.now();\r\n        // let percents = (closeTime - time) / period;\r\n\r\n        // timeLeftDiv.innerHTML = String((closeTime - time) / 1000 + 1 | 0).toHHMMSS();\r\n\r\n        // // @ts-ignore\r\n        // circle.style.strokeDashoffset = circumference + percents * circumference;\r\n        // circle.style.strokeDasharray = ${circumference} ${circumference};\r\n\r\n        this.quizInterval = window.setInterval(() => {\r\n          const time = Date.now();\r\n          const percents = (closeTime - time) / period;\r\n          const timeLeft = (closeTime - time) / 1000 + 1 | 0;\r\n          timeLeftDiv.innerHTML = String(timeLeft).toHHMMSS();\r\n          \r\n          if (timeLeft <= 5) {\r\n            timeLeftDiv.style.color = '#ee545c';\r\n            circle.style.stroke = '#ee545c';\r\n          }\r\n          //timeLeftDiv.style.visibility = 'visible';\r\n\r\n          // @ts-ignore\r\n          circle.style.strokeDashoffset = circumference + percents * circumference;\r\n          circle.style.strokeDasharray = `${circumference} ${circumference}`;\r\n\r\n          if(time >= closeTime) {\r\n            clearInterval(this.quizInterval);\r\n            timeLeftDiv.innerHTML = '';\r\n            // @ts-ignore\r\n            circle.style.strokeDashoffset = circumference;\r\n            this.quizInterval = 0;\r\n\r\n            setTimeout(() => {\r\n              // нужно запросить апдейт чтобы опрос обновился\r\n              appPollsManager.getResults(this.message);\r\n            }, 3e3);\r\n          }\r\n        }, 1e3);\r\n      }\r\n    }\r\n    \r\n    this.answerDivs = Array.from(this.querySelectorAll('.poll-answer')) as HTMLDivElement[];\r\n    this.svgLines = Array.from(this.querySelectorAll('.poll-line')) as SVGSVGElement[];\r\n    this.numberDivs = Array.from(this.querySelectorAll('.poll-answer-percents')) as HTMLDivElement[];\r\n\r\n    const footerDiv = document.createElement('div');\r\n    footerDiv.classList.add('poll-footer');\r\n\r\n    this.viewResults = document.createElement('div');\r\n    this.viewResults.className = 'poll-footer-button poll-view-results hide';\r\n    this.viewResults.append(i18n('Chat.Poll.ViewResults'));\r\n\r\n    this.votersCountDiv = document.createElement('div');\r\n    this.votersCountDiv.className = 'poll-votes-count';\r\n\r\n    footerDiv.append(this.viewResults, this.votersCountDiv);\r\n    this.append(footerDiv);\r\n\r\n    this.viewResults.addEventListener('click', (e) => {\r\n      cancelEvent(e);\r\n\r\n      if(!appSidebarRight.isTabExists(AppPollResultsTab)) {\r\n        new AppPollResultsTab(appSidebarRight).open(this.message);\r\n      }\r\n    });\r\n    ripple(this.viewResults);\r\n\r\n    if(this.isMultiple) {\r\n      this.sendVoteBtn = document.createElement('div');\r\n      this.sendVoteBtn.classList.add('poll-footer-button', 'poll-send-vote');\r\n      this.sendVoteBtn.append(i18n('Chat.Poll.SubmitVote'));\r\n      ripple(this.sendVoteBtn);\r\n\r\n      if(!poll.chosenIndexes.length) {\r\n        this.votersCountDiv.classList.add('hide');\r\n      }\r\n\r\n      attachClickEvent(this.sendVoteBtn, (e) => {\r\n        cancelEvent(e);\r\n        /* const indexes = this.answerDivs.filter(el => el.classList.contains('is-chosing')).map(el => +el.dataset.index);\r\n        if(indexes.length) {\r\n          \r\n        } */\r\n        if(this.chosingIndexes.length) {\r\n          this.sendVotes(this.chosingIndexes).then(() => {\r\n            this.chosingIndexes.length = 0;\r\n            this.answerDivs.forEach(el => {\r\n              el.classList.remove('is-chosing');\r\n            });\r\n          });\r\n        }\r\n      });\r\n\r\n      footerDiv.append(this.sendVoteBtn);\r\n    }\r\n\r\n    //const width = this.getBoundingClientRect().width;\r\n    //this.maxLength = width + tailLength + this.maxOffset + -13.7; // 13 - position left\r\n\r\n    if(poll.chosenIndexes.length || this.isClosed) {\r\n      this.performResults(results, poll.chosenIndexes, false);\r\n    } else if(!this.isClosed) {\r\n      this.setVotersCount(results);\r\n      attachClickEvent(this, this.clickHandler);\r\n    }\r\n  }\r\n\r\n  initQuizHint(results: PollResults) {\r\n    if(results.solution && results.solution_entities) {\r\n      const toggleHint = document.createElement('div');\r\n      toggleHint.classList.add('tgico-tip', 'poll-hint');\r\n      this.descDiv.append(toggleHint);\r\n\r\n      //let active = false;\r\n      attachClickEvent(toggleHint, (e) => {\r\n        cancelEvent(e);\r\n\r\n        //active = true;\r\n        toggleHint.classList.add('active');\r\n        setQuizHint(results.solution, results.solution_entities, () => {\r\n          //active = false;\r\n          toggleHint.classList.remove('active');\r\n        });\r\n      });\r\n\r\n      if(this.sentVote) {\r\n        const correctResult = results.results.find(r => r.pFlags.correct);\r\n        if(correctResult && !correctResult.pFlags.chosen) {\r\n          toggleHint.click();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clickHandler(e: Event) {\r\n    const target = findUpClassName(e.target, 'poll-answer') as HTMLElement;\r\n    if(!target) {\r\n      return;\r\n    }\r\n    \r\n    cancelEvent(e);\r\n    const answerIndex = +target.dataset.index;\r\n    if(this.isMultiple) {\r\n      target.classList.toggle('is-chosing');\r\n\r\n      const foundIndex = this.chosingIndexes.indexOf(answerIndex);\r\n      if(foundIndex !== -1) {\r\n        this.chosingIndexes.splice(foundIndex, 1);\r\n      } else {\r\n        this.chosingIndexes.push(answerIndex);\r\n      }\r\n    } else {\r\n      this.sendVotes([answerIndex]);\r\n    }\r\n    \r\n    /* target.classList.add('is-voting');\r\n    setTimeout(() => { // simulate\r\n      this.setResults([100, 0], answerIndex);\r\n      target.classList.remove('is-voting');\r\n    }, 1000); */\r\n  }\r\n\r\n  sendVotes(indexes: number[]) {\r\n    if(this.sendVotePromise) return this.sendVotePromise;\r\n\r\n    const targets = this.answerDivs.filter((_, idx) => indexes.includes(idx));\r\n    targets.forEach(target => {\r\n      target.classList.add('is-voting');\r\n    });\r\n    \r\n    this.classList.add('disable-hover');\r\n    this.sentVote = true;\r\n    return this.sendVotePromise = appPollsManager.sendVote(this.message, indexes).then(() => {\r\n      targets.forEach(target => {\r\n        target.classList.remove('is-voting');\r\n      });\r\n\r\n      this.classList.remove('disable-hover');\r\n    }).catch(() => {\r\n      this.sentVote = false;\r\n    }).finally(() => {\r\n      this.sendVotePromise = null;\r\n    });\r\n  }\r\n\r\n  performResults(results: PollResults, chosenIndexes: number[], animate = true) {\r\n    if(!rootScope.settings.animationsEnabled) {\r\n      animate = false;\r\n    }\r\n\r\n    if(this.isQuiz && (results.results?.length || this.isClosed)) {\r\n      this.answerDivs.forEach((el, idx) => {\r\n        el.classList.toggle('is-correct', !!results.results[idx].pFlags.correct);\r\n      });\r\n\r\n      if(this.initQuizHint) {\r\n        this.initQuizHint(results);\r\n        this.initQuizHint = null;\r\n      }\r\n\r\n      if(this.quizInterval) {\r\n        clearInterval(this.quizInterval);\r\n        this.quizInterval = 0;\r\n      }\r\n\r\n      if(this.quizTimer?.parentElement) {\r\n        this.quizTimer.remove();\r\n      }\r\n\r\n      const timeEl = this.descDiv.querySelector('.poll-time');\r\n      if(timeEl) {\r\n        timeEl.remove();\r\n      }\r\n    }\r\n\r\n    if(this.isClosed) {\r\n      this.classList.add('is-closed');\r\n      replaceContent(this.typeDiv, i18n('Chat.Poll.Type.Closed'));\r\n    }\r\n\r\n    // set chosen\r\n    if(this.chosenIndexes.length !== chosenIndexes.length || this.isClosed) { // if we voted\r\n      this.isRetracted = this.chosenIndexes.length && !chosenIndexes.length;\r\n      this.chosenIndexes = chosenIndexes.slice();\r\n\r\n      if(this.isRetracted) {\r\n        attachClickEvent(this, this.clickHandler);\r\n      } else {\r\n        detachClickEvent(this, this.clickHandler);\r\n      }\r\n    }\r\n    \r\n    // is need update\r\n    if(this.chosenIndexes.length || this.isRetracted || this.isClosed) {\r\n      const percents = results.results.map(v => results.total_voters ? v.voters / results.total_voters * 100 : 0);\r\n\r\n      this.classList.toggle('no-transition', !animate);\r\n      if(animate) {\r\n        SetTransition(this, '', !this.isRetracted, 340);\r\n      }\r\n\r\n      fastRaf(() => {\r\n        this.setResults(this.isRetracted ? this.percents : percents, this.chosenIndexes, animate);\r\n        this.percents = percents;\r\n        this.isRetracted = false;\r\n      });\r\n    }\r\n    \r\n    this.setVotersCount(results);\r\n\r\n    if(this.isPublic) {\r\n      if(!this.isMultiple) {\r\n        this.viewResults.classList.toggle('hide', !results.total_voters || !this.chosenIndexes.length);\r\n        this.votersCountDiv.classList.toggle('hide', !!this.chosenIndexes.length);\r\n      }\r\n\r\n      let html = '';\r\n      /**\r\n       * MACOS, ANDROID - без реверса\r\n       * WINDOWS DESKTOP - реверс\r\n       * все приложения накладывают аватарку первую на вторую, а в макете зато вторая на первую, ЛОЛ!\r\n       */\r\n      results.recent_voters/* .slice().reverse() */.forEach((userId, idx) => {\r\n        const style = idx === 0 ? '' : `style=\"transform: translateX(-${idx * 3}px);\"`;\r\n        html += `<avatar-element class=\"avatar-16\" dialog=\"0\" peer=\"${userId}\" ${style}></avatar-element>`;\r\n      });\r\n      this.avatarsDiv.innerHTML = html;\r\n    }\r\n\r\n    if(this.isMultiple) {\r\n      this.sendVoteBtn.classList.toggle('hide', !!this.chosenIndexes.length);\r\n      if(!this.chosenIndexes.length) {\r\n        this.votersCountDiv.classList.add('hide');\r\n        this.viewResults.classList.add('hide');\r\n      } else if(this.isPublic) {\r\n        this.viewResults.classList.toggle('hide', !results.total_voters || !this.chosenIndexes.length);\r\n        this.votersCountDiv.classList.toggle('hide', !!this.chosenIndexes.length);\r\n      } else {\r\n        this.votersCountDiv.classList.toggle('hide', !this.chosenIndexes.length);\r\n      }\r\n    }\r\n  }\r\n\r\n  setResults(percents: number[], chosenIndexes: number[], animate: boolean) {\r\n    this.svgLines.forEach(svg => svg.style.display = '');\r\n\r\n    this.answerDivs.forEach((el, idx) => {\r\n      el.classList.toggle('is-chosen', chosenIndexes.includes(idx));\r\n    });\r\n\r\n    const maxValue = Math.max(...percents);\r\n    //this.maxLengths = percents.map(p => p / maxValue * this.maxLength);\r\n    this.maxPercents = percents.map(p => p / maxValue);\r\n\r\n    // line\r\n    if(this.isRetracted) {\r\n      this.svgLines.forEach((svg, idx) => {\r\n        this.setLineProgress(idx, -1);\r\n      });\r\n    } else {\r\n      const cb = () => {\r\n        this.svgLines.forEach((svg, idx) => {\r\n          //void svg.getBoundingClientRect(); // reflow\r\n          this.setLineProgress(idx, 1);\r\n        });\r\n      };\r\n      \r\n      animate ? fastRaf(cb) : cb();\r\n    }\r\n\r\n    percents = percents.slice();\r\n    roundPercents(percents);\r\n    let getPercentValue: (percents: number, index: number) => number;\r\n    const iterate = (i: number) => {\r\n      percents.forEach((percents, idx) => {\r\n        const value = getPercentValue(percents, i);\r\n        this.numberDivs[idx].innerText = value + '%';\r\n      });\r\n    };\r\n    // numbers\r\n    if(this.isRetracted) {\r\n      getPercentValue = (percents, index) => Math.round(percents / times * index);\r\n\r\n      if(animate) {\r\n        for(let i = (times - 1), k = 0; i >= 0; --i, ++k) {\r\n          setTimeout(() => {\r\n            iterate(i);\r\n          }, oneTime * k);\r\n        }\r\n      } else {\r\n        iterate(0);\r\n      }\r\n    } else {\r\n      getPercentValue = (percents, index) => Math.round(percents / times * (index + 1));\r\n\r\n      if(animate) {\r\n        for(let i = 0; i < times; ++i) {\r\n          setTimeout(() => {\r\n            iterate(i);\r\n          }, oneTime * i);\r\n        }\r\n      } else {\r\n        iterate(times - 1);\r\n      }\r\n    }\r\n\r\n    if(this.isRetracted) {\r\n      if(animate) {\r\n        this.classList.add('is-retracting');\r\n      }\r\n\r\n      this.classList.remove('is-voted');\r\n      const cb = () => {\r\n        this.svgLines.forEach(svg => svg.style.display = 'none');\r\n      };\r\n\r\n      if(animate) {\r\n        setTimeout(() => {\r\n          this.classList.remove('is-retracting');\r\n          cb();\r\n        }, fullTime);\r\n      } else {\r\n        cb();\r\n      }\r\n    } else {\r\n      this.classList.add('is-voted');\r\n    }\r\n  }\r\n\r\n  setVotersCount(results: PollResults) {\r\n    const votersCount = results.total_voters || 0;\r\n    let key: LangPackKey, args = [votersCount];\r\n    if(this.isClosed) {\r\n      if(this.isQuiz) key = votersCount ? 'Chat.Quiz.TotalVotes' : 'Chat.Quiz.TotalVotesResultEmpty';\r\n      else key = votersCount ? 'Chat.Poll.TotalVotes1' : 'Chat.Poll.TotalVotesResultEmpty';\r\n    } else {\r\n      if(this.isQuiz) key = votersCount ? 'Chat.Quiz.TotalVotes' : 'Chat.Quiz.TotalVotesEmpty';\r\n      else key = votersCount ? 'Chat.Poll.TotalVotes1' : 'Chat.Poll.TotalVotesEmpty';\r\n    }\r\n    \r\n    replaceContent(this.votersCountDiv, i18n(key, args));\r\n  }\r\n\r\n  setLineProgress(index: number, multiplier: number) {\r\n    const svg = this.svgLines[index];\r\n\r\n    if(multiplier === -1) {\r\n      svg.style.strokeDasharray = '';\r\n      svg.style.strokeDashoffset = '';\r\n    } else {\r\n      //svg.style.strokeDasharray = (percents * this.maxLengths[index]) + ', 485.9';\r\n      svg.style.strokeDasharray = (multiplier * this.maxPercents[index] * 100) + '%, 485.9';\r\n      svg.style.strokeDashoffset = '' + multiplier * this.maxOffset;\r\n    }\r\n  }\r\n\r\n  // у элемента могут быть ещё другие методы и свойства\r\n}\r\n\r\ncustomElements.define(\"poll-element\", PollElement);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { Document, InputFileLocation, InputStickerSet, MessagesAllStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered } from '../../layer';\r\nimport { Modify } from '../../types';\r\nimport apiManager from '../mtproto/mtprotoworker';\r\nimport rootScope from '../rootScope';\r\nimport appDocsManager from './appDocsManager';\r\nimport AppStorage from '../storage';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport { forEachReverse } from '../../helpers/array';\r\nimport DATABASE_STATE from '../../config/databases/state';\r\n\r\nconst CACHE_TIME = 3600e3;\r\n\r\nexport type MyStickerSetInput = {\r\n  id: string,\r\n  access_hash?: string\r\n};\r\n\r\nexport class AppStickersManager {\r\n  private storage = new AppStorage<Record<string, MessagesStickerSet>, typeof DATABASE_STATE>(DATABASE_STATE, 'stickerSets');\r\n\r\n  private getStickerSetPromises: {[setId: string]: Promise<MessagesStickerSet>} = {};\r\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<Document[]>} = {};\r\n  \r\n  constructor() {\r\n    this.getStickerSet({id: 'emoji'}, {saveById: true});\r\n\r\n    rootScope.addMultipleEventsListeners({\r\n      updateNewStickerSet: (update) => {\r\n        this.saveStickerSet(update.stickerset, update.stickerset.set.id);\r\n        rootScope.dispatchEvent('stickers_installed', update.stickerset.set);\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveStickers(docs: Document[]) {\r\n    forEachReverse(docs, (doc, idx) => {\r\n      doc = appDocsManager.saveDoc(doc);\r\n\r\n      if(!doc) docs.splice(idx, 1);\r\n      else docs[idx] = doc;\r\n    });\r\n  }\r\n\r\n  public async getStickerSet(set: MyStickerSetInput, params: Partial<{\r\n    overwrite: boolean,\r\n    useCache: boolean,\r\n    saveById: boolean\r\n  }> = {}): Promise<MessagesStickerSet> {\r\n    const id = set.id;\r\n    if(this.getStickerSetPromises[id]) {\r\n      return this.getStickerSetPromises[id];\r\n    }\r\n\r\n    return this.getStickerSetPromises[id] = new Promise(async(resolve) => {\r\n      if(!params.overwrite) {\r\n        const cachedSet = await this.storage.get(id);\r\n        if(cachedSet && cachedSet.documents?.length && ((Date.now() - cachedSet.refreshTime) < CACHE_TIME || params.useCache)) {\r\n          this.saveStickers(cachedSet.documents);\r\n          resolve(cachedSet);\r\n          delete this.getStickerSetPromises[id];\r\n          return;\r\n        }\r\n      }\r\n\r\n      try {\r\n        const stickerSet = await apiManager.invokeApi('messages.getStickerSet', {\r\n          stickerset: this.getStickerSetInput(set)\r\n        });\r\n  \r\n        const saveById = params.saveById ? id : stickerSet.set.id;\r\n        this.saveStickerSet(stickerSet, saveById);\r\n  \r\n        resolve(stickerSet);\r\n      } catch(err) {\r\n        resolve(null);\r\n      }\r\n      \r\n      delete this.getStickerSetPromises[id];\r\n    });\r\n  }\r\n\r\n  public async getRecentStickers(): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\r\n    stickers: Document[]\r\n  }>> {\r\n    const res = await apiManager.invokeApiHashable('messages.getRecentStickers') as MessagesRecentStickers.messagesRecentStickers;\r\n\r\n    this.saveStickers(res.stickers);\r\n\r\n    return res;\r\n  }\r\n\r\n  public getAnimatedEmojiSticker(emoji: string) {\r\n    const stickerSet = this.storage.getFromCache('emoji');\r\n    if(!stickerSet || !stickerSet.documents) return undefined;\r\n\r\n    emoji = emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\r\n    const pack = stickerSet.packs.find(p => p.emoticon === emoji);\r\n    return pack ? appDocsManager.getDoc(pack.documents[0]) : undefined;\r\n  }\r\n  \r\n  public saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: string) {\r\n    //console.log('stickers save set', res);w\r\n\r\n    const newSet: MessagesStickerSet = {\r\n      _: 'messages.stickerSet',\r\n      set: res.set,\r\n      packs: res.packs,\r\n      documents: res.documents as Document[]\r\n    };\r\n    \r\n    let stickerSet = this.storage.getFromCache(id);\r\n    if(stickerSet) {\r\n      Object.assign(stickerSet, newSet);\r\n    } else {\r\n      stickerSet = this.storage.setToCache(id, newSet);\r\n    }\r\n\r\n    this.saveStickers(res.documents);\r\n    \r\n    //console.log('stickers wrote', this.stickerSets);\r\n    const needSave = stickerSet.set.installed_date || id === 'emoji';\r\n    stickerSet.refreshTime = Date.now();\r\n    this.storage.set({[id]: stickerSet}, !needSave);\r\n  }\r\n\r\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet) {\r\n    const thumb = stickerSet.thumbs.find(thumb => thumb._ === 'photoSize') as PhotoSize.photoSize;\r\n    const dcId = stickerSet.thumb_dc_id;\r\n\r\n    const isAnimated = stickerSet.pFlags?.animated;\r\n\r\n    const input: InputFileLocation.inputStickerSetThumb = {\r\n      _: 'inputStickerSetThumb',\r\n      stickerset: this.getStickerSetInput(stickerSet),\r\n      thumb_version: stickerSet.thumb_version\r\n    };\r\n\r\n    return {dcId, location: input, size: thumb.size, mimeType: isAnimated ? 'application/x-tgsticker' : 'image/webp'};\r\n  }\r\n\r\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\r\n    const thumb = stickerSet.thumb;\r\n    const dcId = stickerSet.thumb_dc_id;\r\n\r\n    const isAnimated = stickerSet.pFlags?.animated;\r\n\r\n    const input: inputStickerSetThumb = {\r\n      _: 'inputStickerSetThumb',\r\n      stickerset: this.getStickerSetInput(stickerSet),\r\n      volume_id: thumb.location.volume_id,\r\n      local_id: thumb.location.local_id\r\n    };\r\n\r\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\r\n    return url;\r\n\r\n    //return promise;\r\n  } */\r\n\r\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\r\n    if(set.id === 'emoji') {\r\n      return {\r\n        _: 'inputStickerSetAnimatedEmoji'\r\n      };\r\n    } else if(!set.access_hash) {\r\n      return {\r\n        _: 'inputStickerSetShortName',\r\n        short_name: set.id\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputStickerSetID',\r\n        id: set.id,\r\n        access_hash: set.access_hash\r\n      };\r\n    }\r\n  }\r\n\r\n  public async getFeaturedStickers() {\r\n    const res = await apiManager.invokeApiHashable('messages.getFeaturedStickers') as MessagesFeaturedStickers.messagesFeaturedStickers;\r\n    \r\n    res.sets.forEach(covered => {\r\n      this.saveStickerSet({set: covered.set, documents: [], packs: []}, covered.set.id);\r\n    });\r\n\r\n    return res.sets;\r\n  }\r\n\r\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\r\n    if(set.installed_date) {\r\n      const res = await apiManager.invokeApi('messages.uninstallStickerSet', {\r\n        stickerset: this.getStickerSetInput(set)\r\n      });\r\n\r\n      if(res) {\r\n        delete set.installed_date;\r\n        rootScope.dispatchEvent('stickers_deleted', set);\r\n        this.storage.delete(set.id, true);\r\n        return true;\r\n      }\r\n    } else {\r\n      const res = await apiManager.invokeApi('messages.installStickerSet', {\r\n        stickerset: this.getStickerSetInput(set),\r\n        archived: false\r\n      });\r\n\r\n      if(res) {\r\n        set.installed_date = Date.now() / 1000 | 0;\r\n        rootScope.dispatchEvent('stickers_installed', set);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public async searchStickerSets(query: string, excludeFeatured = true) {\r\n    const flags = excludeFeatured ? 1 : 0;\r\n    const res = await apiManager.invokeApiHashable('messages.searchStickerSets', {\r\n      flags,\r\n      exclude_featured: excludeFeatured || undefined,\r\n      q: query\r\n    }) as MessagesFoundStickerSets.messagesFoundStickerSets;\r\n\r\n    res.sets.forEach(covered => {\r\n      this.saveStickerSet({set: covered.set, documents: [], packs: []}, covered.set.id);\r\n    });\r\n\r\n    const foundSaved: StickerSetCovered[] = [];\r\n    const cache = this.storage.getCache();\r\n    for(let id in cache) {\r\n      const {set} = cache[id];\r\n\r\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find(c => c.set.id === set.id)) {\r\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\r\n      }\r\n    }\r\n\r\n    return res.sets.concat(foundSaved);\r\n  }\r\n\r\n  public getAllStickers() {\r\n    return apiManager.invokeApiHashable('messages.getAllStickers');\r\n  }\r\n\r\n  public preloadStickerSets() {\r\n    return this.getAllStickers().then(allStickers => {\r\n      return Promise.all((allStickers as MessagesAllStickers.messagesAllStickers).sets.map(set => this.getStickerSet(set, {useCache: true})));\r\n    });\r\n  }\r\n\r\n  public getStickersByEmoticon(emoticon: string) {\r\n    if(this.getStickersByEmoticonsPromises[emoticon]) return this.getStickersByEmoticonsPromises[emoticon];\r\n\r\n    return this.getStickersByEmoticonsPromises[emoticon] = Promise.all([\r\n      apiManager.invokeApiHashable('messages.getStickers', {\r\n        emoticon\r\n      }),\r\n      this.preloadStickerSets(),\r\n      this.getRecentStickers()\r\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\r\n      const foundStickers = (messagesStickers as MessagesStickers.messagesStickers).stickers.map(sticker => appDocsManager.saveDoc(sticker));\r\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\r\n\r\n      //console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\r\n\r\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\r\n        for(const pack of packs) {\r\n          if(pack.emoticon.includes(emoticon)) {\r\n            for(const docId of pack.documents) {\r\n              const doc = appDocsManager.getDoc(docId);\r\n              (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      iteratePacks(recentStickers.packs);\r\n\r\n      for(const set of installedSets) {\r\n        iteratePacks(set.packs);\r\n      }\r\n\r\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter(doc => !doc.animated) */;\r\n\r\n      return stickers;\r\n    });\r\n  }\r\n}\r\n\r\nconst appStickersManager = new AppStickersManager();\r\nMOUNT_CLASS_TO.appStickersManager = appStickersManager;\r\nexport default appStickersManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type Chat from './chat/chat';\r\nimport { getEmojiToneIndex } from '../vendor/emoji';\r\nimport { readBlobAsText } from '../helpers/blob';\r\nimport { deferredPromise } from '../helpers/cancellablePromise';\r\nimport { formatDateAccordingToToday, months } from '../helpers/date';\r\nimport mediaSizes from '../helpers/mediaSizes';\r\nimport { formatBytes } from '../helpers/number';\r\nimport { isSafari } from '../helpers/userAgent';\r\nimport { PhotoSize, StickerSet } from '../layer';\r\nimport appDocsManager, { MyDocument } from \"../lib/appManagers/appDocsManager\";\r\nimport appMessagesManager from '../lib/appManagers/appMessagesManager';\r\nimport appPhotosManager, { MyPhoto } from '../lib/appManagers/appPhotosManager';\r\nimport LottieLoader from '../lib/lottieLoader';\r\nimport webpWorkerController from '../lib/webp/webpWorkerController';\r\nimport animationIntersector from './animationIntersector';\r\nimport appMediaPlaybackController from './appMediaPlaybackController';\r\nimport AudioElement from './audio';\r\nimport ReplyContainer from './chat/replyContainer';\r\nimport { Layouter, RectPart } from './groupedLayout';\r\nimport LazyLoadQueue from './lazyLoadQueue';\r\nimport PollElement from './poll';\r\nimport ProgressivePreloader from './preloader';\r\nimport './middleEllipsis';\r\nimport RichTextProcessor from '../lib/richtextprocessor';\r\nimport appImManager from '../lib/appManagers/appImManager';\r\nimport { SearchSuperContext } from './appSearchSuper.';\r\nimport rootScope from '../lib/rootScope';\r\nimport { onVideoLoad } from '../helpers/files';\r\nimport { animateSingle } from '../helpers/animation';\r\nimport renderImageFromUrl from '../helpers/dom/renderImageFromUrl';\r\nimport sequentialDom from '../helpers/sequentialDom';\r\nimport { fastRaf } from '../helpers/schedulers';\r\nimport appDownloadManager, { DownloadBlob, ThumbCache } from '../lib/appManagers/appDownloadManager';\r\nimport appStickersManager from '../lib/appManagers/appStickersManager';\r\nimport { cancelEvent } from '../helpers/dom/cancelEvent';\r\nimport { attachClickEvent } from '../helpers/dom/clickEvent';\r\nimport isInDOM from '../helpers/dom/isInDOM';\r\nimport lottieLoader from '../lib/lottieLoader';\r\n\r\nconst MAX_VIDEO_AUTOPLAY_SIZE = 50 * 1024 * 1024; // 50 MB\r\n\r\nexport function wrapVideo({doc, container, message, boxWidth, boxHeight, withTail, isOut, middleware, lazyLoadQueue, noInfo, group, onlyPreview, withoutPreloader, loadPromises, noPlayButton, noAutoDownload, size}: {\r\n  doc: MyDocument, \r\n  container?: HTMLElement, \r\n  message?: any, \r\n  boxWidth?: number, \r\n  boxHeight?: number, \r\n  withTail?: boolean, \r\n  isOut?: boolean,\r\n  middleware?: () => boolean,\r\n  lazyLoadQueue?: LazyLoadQueue,\r\n  noInfo?: true,\r\n  noPlayButton?: boolean,\r\n  group?: string,\r\n  onlyPreview?: boolean,\r\n  withoutPreloader?: boolean,\r\n  loadPromises?: Promise<any>[],\r\n  noAutoDownload?: boolean,\r\n  size?: PhotoSize\r\n}) {\r\n  const isAlbumItem = !(boxWidth && boxHeight);\r\n  const canAutoplay = (doc.type !== 'video' || (doc.size <= MAX_VIDEO_AUTOPLAY_SIZE && !isAlbumItem)) \r\n    && (doc.type === 'gif' ? rootScope.settings.autoPlay.gifs : rootScope.settings.autoPlay.videos);\r\n  let spanTime: HTMLElement, spanPlay: HTMLElement;\r\n\r\n  if(!noInfo) {\r\n    spanTime = document.createElement('span');\r\n    spanTime.classList.add('video-time');\r\n    container.append(spanTime);\r\n  \r\n    let needPlayButton = false;\r\n    if(doc.type !== 'gif') {\r\n      spanTime.innerText = (doc.duration + '').toHHMMSS(false);\r\n\r\n      if(!noPlayButton && doc.type !== 'round') {\r\n        if(canAutoplay) {\r\n          spanTime.classList.add('tgico', 'can-autoplay');\r\n        } else {\r\n          needPlayButton = true;\r\n        }\r\n      }\r\n    } else {\r\n      spanTime.innerText = 'GIF';\r\n\r\n      if(!canAutoplay && !noPlayButton) {\r\n        needPlayButton = true;\r\n        noAutoDownload = undefined;\r\n      }\r\n    }\r\n\r\n    if(needPlayButton) {\r\n      spanPlay = document.createElement('span');\r\n      spanPlay.classList.add('video-play', 'tgico-largeplay', 'btn-circle', 'position-center');\r\n      container.append(spanPlay);\r\n    }\r\n  }\r\n\r\n  let res: {\r\n    thumb?: typeof photoRes,\r\n    loadPromise: Promise<any>\r\n  } = {} as any;\r\n\r\n  if(doc.mime_type === 'image/gif') {\r\n    const photoRes = wrapPhoto({\r\n      photo: doc, \r\n      message, \r\n      container, \r\n      boxWidth, \r\n      boxHeight, \r\n      withTail, \r\n      isOut, \r\n      lazyLoadQueue, \r\n      middleware,\r\n      withoutPreloader,\r\n      loadPromises,\r\n      noAutoDownload,\r\n      size\r\n    });\r\n\r\n    res.thumb = photoRes;\r\n    res.loadPromise = photoRes.loadPromises.full;\r\n    return res;\r\n  }\r\n\r\n  /* const video = doc.type === 'round' ? appMediaPlaybackController.addMedia(doc, message.mid) as HTMLVideoElement : document.createElement('video');\r\n  if(video.parentElement) {\r\n    video.remove();\r\n  } */\r\n\r\n  const video = document.createElement('video');\r\n  video.classList.add('media-video');\r\n  video.setAttribute('playsinline', 'true');\r\n  video.muted = true;\r\n  if(doc.type === 'round') {\r\n    const globalVideo = appMediaPlaybackController.addMedia(message.peerId, doc, message.mid, !noAutoDownload) as HTMLVideoElement;\r\n \r\n    const divRound = document.createElement('div');\r\n    divRound.classList.add('media-round', 'z-depth-1');\r\n\r\n    divRound.innerHTML = `<svg class=\"progress-ring\" width=\"200px\" height=\"200px\">\r\n      <circle class=\"progress-ring__circle\" stroke=\"white\" stroke-opacity=\"0.3\" stroke-width=\"3.5\" cx=\"100\" cy=\"100\" r=\"93\" fill=\"transparent\" transform=\"rotate(-90, 100, 100)\"/>\r\n    </svg>`;\r\n\r\n    const circle = divRound.querySelector('.progress-ring__circle') as SVGCircleElement;\r\n    const radius = circle.r.baseVal.value;\r\n    const circumference = 2 * Math.PI * radius;\r\n    circle.style.strokeDasharray = circumference + ' ' + circumference;\r\n    circle.style.strokeDashoffset = '' + circumference;\r\n    \r\n    spanTime.classList.add('tgico');\r\n\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = canvas.height = doc.w/*  * window.devicePixelRatio */;\r\n\r\n    divRound.prepend(canvas, spanTime);\r\n    divRound.append(video);\r\n    container.append(divRound);\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    /* ctx.beginPath();\r\n    ctx.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, Math.PI * 2);\r\n    ctx.clip(); */\r\n\r\n    const clear = () => {\r\n      (appImManager.chat.setPeerPromise || Promise.resolve()).finally(() => {\r\n        if(isInDOM(globalVideo)) {\r\n          return;\r\n        }\r\n\r\n        globalVideo.removeEventListener('play', onPlay);\r\n        globalVideo.removeEventListener('timeupdate', onTimeUpdate);\r\n        globalVideo.removeEventListener('pause', onPaused);\r\n      });\r\n    };\r\n\r\n    const onFrame = () => {\r\n      ctx.drawImage(globalVideo, 0, 0);\r\n\r\n      const offset = circumference - globalVideo.currentTime / globalVideo.duration * circumference;\r\n      circle.style.strokeDashoffset = '' + offset;\r\n\r\n      return !globalVideo.paused;\r\n    };\r\n\r\n    const onTimeUpdate = () => {\r\n      if(!globalVideo.duration) return;\r\n\r\n      if(!isInDOM(globalVideo)) {\r\n        clear();\r\n        return;\r\n      }\r\n\r\n      spanTime.innerText = (globalVideo.duration - globalVideo.currentTime + '').toHHMMSS(false);\r\n    };\r\n\r\n    const onPlay = () => {\r\n      video.classList.add('hide');\r\n      divRound.classList.remove('is-paused');\r\n      animateSingle(onFrame, canvas);\r\n    };\r\n\r\n    const onPaused = () => {\r\n      if(!isInDOM(globalVideo)) {\r\n        clear();\r\n        return;\r\n      }\r\n\r\n      divRound.classList.add('is-paused');\r\n    };\r\n\r\n    globalVideo.addEventListener('play', onPlay);\r\n    globalVideo.addEventListener('timeupdate', onTimeUpdate);\r\n    globalVideo.addEventListener('pause', onPaused);\r\n\r\n    attachClickEvent(canvas, (e) => {\r\n      cancelEvent(e);\r\n\r\n      if(globalVideo.paused) {\r\n        globalVideo.play();\r\n      } else {\r\n        globalVideo.pause();\r\n      }\r\n    });\r\n\r\n    if(globalVideo.paused) {\r\n      if(globalVideo.duration && globalVideo.currentTime !== globalVideo.duration) {\r\n        onFrame();\r\n        onTimeUpdate();\r\n        video.classList.add('hide');\r\n      } else {\r\n        onPaused();\r\n      }\r\n    } else {\r\n      onPlay();\r\n    }\r\n  } else {\r\n    video.autoplay = true; // для safari\r\n  }\r\n\r\n  let photoRes: ReturnType<typeof wrapPhoto>;\r\n  if(message) {\r\n    photoRes = wrapPhoto({\r\n      photo: doc, \r\n      message, \r\n      container, \r\n      boxWidth, \r\n      boxHeight, \r\n      withTail, \r\n      isOut, \r\n      lazyLoadQueue, \r\n      middleware,\r\n      withoutPreloader: true,\r\n      loadPromises,\r\n      noAutoDownload,\r\n      size\r\n    });\r\n\r\n    res.thumb = photoRes;\r\n\r\n    if((!canAutoplay && doc.type !== 'gif') || onlyPreview) {\r\n      res.loadPromise = photoRes.loadPromises.full;\r\n      return res;\r\n    }\r\n\r\n    if(withTail) {\r\n      const foreignObject = (photoRes.images.thumb || photoRes.images.full).parentElement;\r\n      video.width = +foreignObject.getAttributeNS(null, 'width');\r\n      video.height = +foreignObject.getAttributeNS(null, 'height');\r\n      foreignObject.append(video);\r\n    }\r\n  } else { // * gifs masonry\r\n    const gotThumb = appDocsManager.getThumb(doc, false);\r\n    if(gotThumb) {\r\n      gotThumb.promise.then(() => {\r\n        video.poster = gotThumb.cacheContext.url;\r\n      });\r\n    }\r\n  }\r\n\r\n  if(!video.parentElement && container) {\r\n    (photoRes?.aspecter || container).append(video);\r\n  }\r\n\r\n  const cacheContext = appDownloadManager.getCacheContext(doc);\r\n\r\n  let preloader: ProgressivePreloader;\r\n  if(message?.media?.preloader) { // means upload\r\n    preloader = message.media.preloader as ProgressivePreloader;\r\n    preloader.attach(container, false);\r\n    noAutoDownload = undefined;\r\n  } else if(!cacheContext.downloaded && !doc.supportsStreaming) {\r\n    preloader = new ProgressivePreloader({\r\n      attachMethod: 'prepend'\r\n    });\r\n  } else if(doc.supportsStreaming) {\r\n    preloader = new ProgressivePreloader({\r\n      cancelable: false,\r\n      attachMethod: 'prepend'\r\n    });\r\n  }\r\n\r\n  let f = noAutoDownload && photoRes?.preloader?.loadFunc;\r\n  const load = () => {\r\n    if(preloader && noAutoDownload && !withoutPreloader) {\r\n      preloader.construct();\r\n      preloader.setManual();\r\n    }\r\n\r\n    let loadPromise: Promise<any> = Promise.resolve();\r\n    if(preloader) {\r\n      if(!cacheContext.downloaded && !doc.supportsStreaming) {\r\n        const promise = loadPromise = appDocsManager.downloadDoc(doc, lazyLoadQueue?.queueId, noAutoDownload);\r\n        preloader.attach(container, false, promise);\r\n      } else if(doc.supportsStreaming) {\r\n        if(noAutoDownload) {\r\n          loadPromise = Promise.reject();\r\n        } else if(!cacheContext.downloaded) { // * check for uploading video\r\n          preloader.attach(container, false, null);\r\n          video.addEventListener(isSafari ? 'timeupdate' : 'canplay', () => {\r\n            preloader.detach();\r\n          }, {once: true});\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!noAutoDownload && f) {\r\n      f();\r\n      f = null;\r\n    }\r\n\r\n    noAutoDownload = undefined;\r\n\r\n    const deferred = deferredPromise<void>();\r\n    loadPromise.then(() => {\r\n      if(middleware && !middleware()) {\r\n        deferred.resolve();\r\n        return;\r\n      }\r\n\r\n      if(doc.type === 'round') {\r\n        appMediaPlaybackController.resolveWaitingForLoadMedia(message.peerId, message.mid);\r\n      }\r\n\r\n      onVideoLoad(video).then(() => {\r\n        if(group) {\r\n          animationIntersector.addAnimation(video, group);\r\n        }\r\n  \r\n        deferred.resolve();\r\n      });\r\n  \r\n      if(doc.type === 'video') {\r\n        video.addEventListener('timeupdate', () => {\r\n          spanTime.innerText = (video.duration - video.currentTime + '').toHHMMSS(false);\r\n        });\r\n      }\r\n  \r\n      video.addEventListener('error', (e) => {\r\n        deferred.resolve();\r\n      });\r\n  \r\n      video.muted = true;\r\n      video.loop = true;\r\n      //video.play();\r\n      video.autoplay = true;\r\n\r\n      renderImageFromUrl(video, cacheContext.url);\r\n    }, () => {});\r\n\r\n    return {download: loadPromise, render: deferred};\r\n  };\r\n\r\n  if(preloader) {\r\n    preloader.setDownloadFunction(load);\r\n  }\r\n\r\n  /* if(doc.size >= 20e6 && !doc.downloaded) {\r\n    let downloadDiv = document.createElement('div');\r\n    downloadDiv.classList.add('download');\r\n\r\n    let span = document.createElement('span');\r\n    span.classList.add('btn-circle', 'tgico-download');\r\n    downloadDiv.append(span);\r\n\r\n    downloadDiv.addEventListener('click', () => {\r\n      downloadDiv.remove();\r\n      loadVideo();\r\n    });\r\n\r\n    container.prepend(downloadDiv);\r\n\r\n    return;\r\n  } */\r\n\r\n  if(doc.type === 'gif' && !canAutoplay) {\r\n    attachClickEvent(container, (e) => {\r\n      cancelEvent(e);\r\n      spanPlay.remove();\r\n      load();\r\n    }, {capture: true, once: true});\r\n  } else {\r\n    res.loadPromise = !lazyLoadQueue ? load().render : (lazyLoadQueue.push({div: container, load: () => load().render}), Promise.resolve());\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nexport const formatDate = (timestamp: number, monthShort = false, withYear = true) => {\r\n  const date = new Date(timestamp * 1000);\r\n  \r\n  let month = months[date.getMonth()];\r\n  if(monthShort) month = month.slice(0, 3);\r\n\r\n  let str = month + ' ' + date.getDate();\r\n  if(withYear) {\r\n    str += ', ' + date.getFullYear();\r\n  }\r\n  \r\n  return str + ' at ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2);\r\n};\r\n\r\nexport function wrapDocument({message, withTime, fontWeight, voiceAsMusic, showSender, searchContext, loadPromises, noAutoDownload}: {\r\n  message: any, \r\n  withTime?: boolean,\r\n  fontWeight?: number,\r\n  voiceAsMusic?: boolean,\r\n  showSender?: boolean,\r\n  searchContext?: SearchSuperContext,\r\n  loadPromises?: Promise<any>[],\r\n  noAutoDownload?: boolean,\r\n}): HTMLElement {\r\n  if(!fontWeight) fontWeight = 500;\r\n\r\n  const doc = (message.media.document || message.media.webpage.document) as MyDocument;\r\n  const uploading = message.pFlags.is_outgoing && message.media?.preloader;\r\n  if(doc.type === 'audio' || doc.type === 'voice') {\r\n    const audioElement = new AudioElement();\r\n    audioElement.setAttribute('message-id', '' + message.mid);\r\n    audioElement.setAttribute('peer-id', '' + message.peerId);\r\n    audioElement.withTime = withTime;\r\n    audioElement.message = message;\r\n    audioElement.noAutoDownload = noAutoDownload;\r\n    \r\n    if(voiceAsMusic) audioElement.voiceAsMusic = voiceAsMusic;\r\n    if(searchContext) audioElement.searchContext = searchContext;\r\n    if(showSender) audioElement.showSender = showSender;\r\n    \r\n    if(uploading) {\r\n      audioElement.preloader = message.media.preloader;\r\n    }\r\n\r\n    audioElement.dataset.fontWeight = '' + fontWeight;\r\n    audioElement.render();\r\n    return audioElement;\r\n  }\r\n\r\n  let extSplitted = doc.file_name ? doc.file_name.split('.') : '';\r\n  let ext = '';\r\n  ext = extSplitted.length > 1 && Array.isArray(extSplitted) ? extSplitted.pop().toLowerCase() : 'file';\r\n\r\n  let docDiv = document.createElement('div');\r\n  docDiv.classList.add('document', `ext-${ext}`);\r\n  docDiv.dataset.docId = doc.id;\r\n\r\n  const icoDiv = document.createElement('div');\r\n  icoDiv.classList.add('document-ico');\r\n\r\n  const cacheContext = appDownloadManager.getCacheContext(doc);\r\n  if(doc.thumbs?.length || (message.pFlags.is_outgoing && cacheContext.url && doc.type === 'photo')) {\r\n    docDiv.classList.add('document-with-thumb');\r\n\r\n    let imgs: HTMLImageElement[] = [];\r\n    if(message.pFlags.is_outgoing) {\r\n      icoDiv.innerHTML = `<img src=\"${cacheContext.url}\">`;\r\n      imgs.push(icoDiv.firstElementChild as HTMLImageElement);\r\n    } else {\r\n      const wrapped = wrapPhoto({\r\n        photo: doc, \r\n        message: null, \r\n        container: icoDiv, \r\n        boxWidth: 54, \r\n        boxHeight: 54,\r\n        loadPromises,\r\n        withoutPreloader: true\r\n      });\r\n      icoDiv.style.width = icoDiv.style.height = '';\r\n      if(wrapped.images.thumb) imgs.push(wrapped.images.thumb);\r\n      if(wrapped.images.full) imgs.push(wrapped.images.full);\r\n    }\r\n\r\n    imgs.forEach(img => img.classList.add('document-thumb'));\r\n  } else {\r\n    icoDiv.innerText = ext;\r\n  }\r\n\r\n  //let fileName = stringMiddleOverflow(doc.file_name || 'Unknown.file', 26);\r\n  let fileName = doc.file_name || 'Unknown.file';\r\n  let size = formatBytes(doc.size);\r\n  \r\n  if(withTime) {\r\n    size += ' · ' + formatDate(doc.date);\r\n  }\r\n\r\n  if(showSender) {\r\n    size += ' · ' + appMessagesManager.getSenderToPeerText(message);\r\n  }\r\n\r\n  let titleAdditionHTML = '';\r\n  if(showSender) {\r\n    titleAdditionHTML = `<div class=\"sent-time\">${formatDateAccordingToToday(new Date(message.date * 1000))}</div>`;\r\n  }\r\n  \r\n  docDiv.innerHTML = `\r\n  ${cacheContext.downloaded && !uploading ? '' : `<div class=\"document-download\"></div>`}\r\n  <div class=\"document-name\"><middle-ellipsis-element data-font-weight=\"${fontWeight}\">${fileName}</middle-ellipsis-element>${titleAdditionHTML}</div>\r\n  <div class=\"document-size\">${size}</div>\r\n  `;\r\n\r\n  docDiv.prepend(icoDiv);\r\n\r\n  if(!uploading && message.pFlags.is_outgoing) {\r\n    return docDiv;\r\n  }\r\n\r\n  let downloadDiv: HTMLElement, preloader: ProgressivePreloader = null;\r\n  const onLoad = () => {\r\n    if(downloadDiv) {\r\n      downloadDiv.classList.add('downloaded');\r\n      const _downloadDiv = downloadDiv;\r\n      setTimeout(() => {\r\n        _downloadDiv.remove();\r\n      }, 200);\r\n      downloadDiv = null;\r\n    }\r\n\r\n    if(preloader) {\r\n      preloader = null;\r\n    }\r\n  };\r\n\r\n  const load = () => {\r\n    const doc = appDocsManager.getDoc(docDiv.dataset.docId);\r\n    let download: DownloadBlob;\r\n    if(doc.type === 'pdf') {\r\n      download = appDocsManager.downloadDoc(doc, appImManager.chat.bubbles ? appImManager.chat.bubbles.lazyLoadQueue.queueId : 0);\r\n      download.then(() => {\r\n        const cacheContext = appDownloadManager.getCacheContext(doc);\r\n        window.open(cacheContext.url);\r\n      });\r\n    } else {\r\n      download = appDocsManager.saveDocFile(doc, appImManager.chat.bubbles ? appImManager.chat.bubbles.lazyLoadQueue.queueId : 0);\r\n    }\r\n\r\n    if(downloadDiv) {\r\n      download.then(onLoad);\r\n      preloader.attach(downloadDiv, true, download);\r\n    }\r\n\r\n    return {download};\r\n  };\r\n\r\n  if(!(cacheContext.downloaded && !uploading)) {\r\n    downloadDiv = docDiv.querySelector('.document-download');\r\n    preloader = message.media.preloader as ProgressivePreloader;\r\n\r\n    if(!preloader) {\r\n      preloader = new ProgressivePreloader();\r\n\r\n      preloader.construct();\r\n      preloader.setManual();\r\n      preloader.attach(downloadDiv);\r\n      preloader.setDownloadFunction(load);\r\n    } else {\r\n      preloader.attach(downloadDiv);\r\n      message.media.promise.then(onLoad);\r\n    }\r\n  }\r\n\r\n  attachClickEvent(docDiv, (e) => {\r\n    if(preloader) {\r\n      preloader.onClick(e);\r\n    } else {\r\n      load();\r\n    }\r\n  });\r\n  \r\n  return docDiv;\r\n}\r\n\r\n/* function wrapMediaWithTail(photo: MyPhoto | MyDocument, message: {mid: number, message: string}, container: HTMLElement, boxWidth: number, boxHeight: number, isOut: boolean) {\r\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n  svg.classList.add('bubble__media-container', isOut ? 'is-out' : 'is-in');\r\n  \r\n  const foreignObject = document.createElementNS(\"http://www.w3.org/2000/svg\", 'foreignObject');\r\n\r\n  const gotThumb = appPhotosManager.getStrippedThumbIfNeeded(photo, true);\r\n  if(gotThumb) {\r\n    foreignObject.append(gotThumb.image);\r\n  }\r\n  appPhotosManager.setAttachmentSize(photo, foreignObject, boxWidth, boxHeight);\r\n  \r\n  const width = +foreignObject.getAttributeNS(null, 'width');\r\n  const height = +foreignObject.getAttributeNS(null, 'height');\r\n\r\n  svg.setAttributeNS(null, 'width', '' + width);\r\n  svg.setAttributeNS(null, 'height', '' + height);\r\n\r\n  svg.setAttributeNS(null, 'viewBox', '0 0 ' + width + ' ' + height);\r\n  svg.setAttributeNS(null, 'preserveAspectRatio', 'none');\r\n\r\n  const clipId = 'clip' + message.mid + '_' + nextRandomInt(9999);\r\n  svg.dataset.clipId = clipId;\r\n  \r\n  const defs = document.createElementNS(\"http://www.w3.org/2000/svg\", 'defs');\r\n  let clipPathHTML: string = '';\r\n  \r\n  if(message.message) {\r\n    //clipPathHTML += `<rect width=\"${width}\" height=\"${height}\"></rect>`;\r\n  } else {\r\n    if(isOut) {\r\n      clipPathHTML += `\r\n      <use href=\"#message-tail\" transform=\"translate(${width - 2}, ${height}) scale(-1, -1)\"></use>\r\n      <path />\r\n      `;\r\n    } else {\r\n      clipPathHTML += `\r\n      <use href=\"#message-tail\" transform=\"translate(2, ${height}) scale(1, -1)\"></use>\r\n      <path />\r\n      `;\r\n    }\r\n  }\r\n\r\n  defs.innerHTML = `<clipPath id=\"${clipId}\">${clipPathHTML}</clipPath>`;\r\n  \r\n  container.style.width = parseInt(container.style.width) - 9 + 'px';\r\n  container.classList.add('with-tail');\r\n\r\n  svg.append(defs, foreignObject);\r\n  container.append(svg);\r\n\r\n  let img = foreignObject.firstElementChild as HTMLImageElement;\r\n  if(!img) {\r\n    foreignObject.append(img = new Image());\r\n  }\r\n\r\n  return img;\r\n} */\r\n\r\nexport function wrapPhoto({photo, message, container, boxWidth, boxHeight, withTail, isOut, lazyLoadQueue, middleware, size, withoutPreloader, loadPromises, noAutoDownload, noBlur, noThumb, noFadeIn}: {\r\n  photo: MyPhoto | MyDocument, \r\n  message: any, \r\n  container: HTMLElement, \r\n  boxWidth?: number, \r\n  boxHeight?: number, \r\n  withTail?: boolean, \r\n  isOut?: boolean, \r\n  lazyLoadQueue?: LazyLoadQueue, \r\n  middleware?: () => boolean, \r\n  size?: PhotoSize,\r\n  withoutPreloader?: boolean,\r\n  loadPromises?: Promise<any>[],\r\n  noAutoDownload?: boolean,\r\n  noBlur?: boolean,\r\n  noThumb?: boolean,\r\n  noFadeIn?: boolean,\r\n}) {\r\n  if(!((photo as MyPhoto).sizes || (photo as MyDocument).thumbs)) {\r\n    if(boxWidth && boxHeight && !size && photo._ === 'document') {\r\n      appPhotosManager.setAttachmentSize(photo, container, boxWidth, boxHeight, undefined, message);\r\n    }\r\n\r\n    return {\r\n      loadPromises: {\r\n        thumb: Promise.resolve(),\r\n        full: Promise.resolve()\r\n      },\r\n      images: {\r\n        thumb: null,\r\n        full: null\r\n      },\r\n      preloader: null,\r\n      aspecter: null\r\n    };\r\n  }\r\n\r\n  if(!size) {\r\n    if(boxWidth === undefined) boxWidth = mediaSizes.active.regular.width;\r\n    if(boxHeight === undefined) boxHeight = mediaSizes.active.regular.height;\r\n  }\r\n\r\n  container.classList.add('media-container');\r\n  let aspecter = container;\r\n\r\n  let isFit = true;\r\n  let loadThumbPromise: Promise<any> = Promise.resolve();\r\n  let thumbImage: HTMLImageElement;\r\n  let image: HTMLImageElement;\r\n  let cacheContext: ThumbCache;\r\n  // if(withTail) {\r\n  //   image = wrapMediaWithTail(photo, message, container, boxWidth, boxHeight, isOut);\r\n  // } else {\r\n    image = new Image();\r\n\r\n    if(boxWidth && boxHeight && !size) { // !album\r\n      const set = appPhotosManager.setAttachmentSize(photo, container, boxWidth, boxHeight, undefined, message);\r\n      size = set.photoSize;\r\n      isFit = set.isFit;\r\n      cacheContext = appDownloadManager.getCacheContext(photo, size.type);\r\n\r\n      if(!isFit) {\r\n        aspecter = document.createElement('div');\r\n        aspecter.classList.add('media-container-aspecter');\r\n        aspecter.style.width = set.size.width + 'px';\r\n        aspecter.style.height = set.size.height + 'px';\r\n\r\n        const gotThumb = appPhotosManager.getStrippedThumbIfNeeded(photo, cacheContext, !noBlur, true);\r\n        if(gotThumb) {\r\n          loadThumbPromise = gotThumb.loadPromise;\r\n          const thumbImage = gotThumb.image; // local scope\r\n          thumbImage.classList.add('media-photo');\r\n          container.append(thumbImage);\r\n        } else {\r\n          const res = wrapPhoto({\r\n            container,\r\n            message,\r\n            photo,\r\n            boxWidth: 0,\r\n            boxHeight: 0,\r\n            size,\r\n            lazyLoadQueue,\r\n            isOut,\r\n            loadPromises,\r\n            middleware,\r\n            withoutPreloader,\r\n            withTail,\r\n            noAutoDownload,\r\n            noBlur,\r\n            noThumb: true,\r\n            //noFadeIn: true\r\n          });\r\n          const thumbImage = res.images.full;\r\n          thumbImage.classList.add('media-photo', 'thumbnail');\r\n          //container.append(thumbImage);\r\n        }\r\n\r\n        container.classList.add('media-container-fitted');\r\n        container.append(aspecter);\r\n      }\r\n    } else {\r\n      if(!size) {\r\n        size = appPhotosManager.choosePhotoSize(photo, boxWidth, boxHeight, true);\r\n      }\r\n      \r\n      cacheContext = appDownloadManager.getCacheContext(photo, size?.type);\r\n    }\r\n\r\n    if(!noThumb) {\r\n      const gotThumb = appPhotosManager.getStrippedThumbIfNeeded(photo, cacheContext, !noBlur);\r\n      if(gotThumb) {\r\n        loadThumbPromise = Promise.all([loadThumbPromise, gotThumb.loadPromise]);\r\n        thumbImage = gotThumb.image;\r\n        thumbImage.classList.add('media-photo');\r\n        aspecter.append(thumbImage);\r\n      }\r\n    }\r\n  // }\r\n\r\n  image.classList.add('media-photo');\r\n  \r\n  //console.log('wrapPhoto downloaded:', photo, photo.downloaded, container);\r\n\r\n  const needFadeIn = (thumbImage || !cacheContext.downloaded) && rootScope.settings.animationsEnabled && !noFadeIn;\r\n  if(needFadeIn) {\r\n    image.classList.add('fade-in');\r\n  }\r\n\r\n  let preloader: ProgressivePreloader;\r\n  if(message?.media?.preloader) { // means upload\r\n    preloader = message.media.preloader;\r\n    preloader.attach(container);\r\n    noAutoDownload = undefined;\r\n  } else {\r\n    preloader = new ProgressivePreloader({\r\n      attachMethod: 'prepend'\r\n    });\r\n  }\r\n\r\n  const getDownloadPromise = () => {\r\n    const promise = photo._ === 'document' && photo.mime_type === 'image/gif' ? \r\n      appDocsManager.downloadDoc(photo, /* undefined,  */lazyLoadQueue?.queueId) : \r\n      appPhotosManager.preloadPhoto(photo, size, lazyLoadQueue?.queueId, noAutoDownload);\r\n\r\n    noAutoDownload = undefined;\r\n\r\n    return promise;\r\n  };\r\n\r\n  const onLoad = (): Promise<void> => {\r\n    if(middleware && !middleware()) return Promise.resolve();\r\n\r\n    return new Promise((resolve) => {\r\n      /* if(photo._ === 'document') {\r\n        console.error('wrapPhoto: will render document', photo, size, cacheContext);\r\n        return resolve();\r\n      } */\r\n\r\n      renderImageFromUrl(image, cacheContext.url, () => {\r\n        sequentialDom.mutateElement(container, () => {\r\n          aspecter.append(image);\r\n\r\n          fastRaf(() => {\r\n            resolve();\r\n          });\r\n  \r\n          if(needFadeIn) {\r\n            image.addEventListener('animationend', () => {\r\n              sequentialDom.mutate(() => {\r\n                image.classList.remove('fade-in');\r\n    \r\n                if(thumbImage) {\r\n                  thumbImage.remove();\r\n                }\r\n              });\r\n            }, {once: true});\r\n          }\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  let loadPromise: Promise<any>;\r\n  const load = () => {\r\n    if(noAutoDownload && !withoutPreloader) {\r\n      preloader.construct();\r\n      preloader.setManual();\r\n    }\r\n\r\n    const promise = getDownloadPromise();\r\n\r\n    if(!cacheContext.downloaded && !withoutPreloader && (size as PhotoSize.photoSize).w >= 150 && (size as PhotoSize.photoSize).h >= 150) {\r\n      preloader.attach(container, false, promise);\r\n    }\r\n\r\n    const renderPromise = promise.then(onLoad);\r\n    renderPromise.catch(() => {});\r\n    return {download: promise, render: renderPromise};\r\n  };\r\n\r\n  preloader.setDownloadFunction(load);\r\n  \r\n  if(cacheContext.downloaded) {\r\n    loadThumbPromise = loadPromise = load().render;\r\n  } else {\r\n    if(!lazyLoadQueue) loadPromise = load().render;\r\n    /* else if(noAutoDownload) {\r\n      preloader.construct();\r\n      preloader.setManual();\r\n      preloader.attach(container);\r\n    } */ else lazyLoadQueue.push({div: container, load: () => load().download});\r\n  }\r\n\r\n  if(loadPromises && loadThumbPromise) {\r\n    loadPromises.push(loadThumbPromise);\r\n  }\r\n\r\n  return {\r\n    loadPromises: {\r\n      thumb: loadThumbPromise,\r\n      full: loadPromise || Promise.resolve()\r\n    },\r\n    images: {\r\n      thumb: thumbImage,\r\n      full: image\r\n    },\r\n    preloader,\r\n    aspecter\r\n  };\r\n}\r\n\r\nexport function wrapSticker({doc, div, middleware, lazyLoadQueue, group, play, onlyThumb, emoji, width, height, withThumb, loop, loadPromises, needFadeIn}: {\r\n  doc: MyDocument, \r\n  div: HTMLElement, \r\n  middleware?: () => boolean, \r\n  lazyLoadQueue?: LazyLoadQueue, \r\n  group?: string, \r\n  play?: boolean, \r\n  onlyThumb?: boolean,\r\n  emoji?: string,\r\n  width?: number,\r\n  height?: number,\r\n  withThumb?: boolean,\r\n  loop?: boolean,\r\n  loadPromises?: Promise<any>[],\r\n  needFadeIn?: boolean,\r\n}) {\r\n  const stickerType = doc.sticker;\r\n\r\n  if(!width) {\r\n    width = !emoji ? 200 : undefined;\r\n  }\r\n\r\n  if(!height) {\r\n    height = !emoji ? 200 : undefined;\r\n  }\r\n\r\n  if(stickerType === 2 && !LottieLoader.loaded) {\r\n    //LottieLoader.loadLottie();\r\n    LottieLoader.loadLottieWorkers();\r\n  }\r\n  \r\n  if(!stickerType) {\r\n    console.error('wrong doc for wrapSticker!', doc);\r\n    throw new Error('wrong doc for wrapSticker!');\r\n  }\r\n\r\n  div.dataset.docId = doc.id;\r\n  div.classList.add('media-sticker-wrapper');\r\n  \r\n  //console.log('wrap sticker', doc, div, onlyThumb);\r\n\r\n  const cacheContext = appDownloadManager.getCacheContext(doc);\r\n\r\n  const toneIndex = emoji ? getEmojiToneIndex(emoji) : -1;\r\n  const downloaded = cacheContext.downloaded && !needFadeIn;\r\n  \r\n  let loadThumbPromise = deferredPromise<void>();\r\n  let haveThumbCached = false;\r\n  if((doc.thumbs?.length || doc.stickerCachedThumbs) && !div.firstElementChild && (!downloaded || stickerType === 2 || onlyThumb)/*  && doc.thumbs[0]._ !== 'photoSizeEmpty' */) {\r\n    let thumb = doc.stickerCachedThumbs && doc.stickerCachedThumbs[toneIndex] || doc.thumbs[0];\r\n    \r\n    //console.log('wrap sticker', thumb, div);\r\n\r\n    let thumbImage: HTMLImageElement;\r\n    const afterRender = () => {\r\n      if(!div.childElementCount) {\r\n        thumbImage.classList.add('media-sticker', 'thumbnail');\r\n        \r\n        sequentialDom.mutateElement(div, () => {\r\n          div.append(thumbImage);\r\n          loadThumbPromise.resolve();\r\n        });\r\n      }\r\n    };\r\n\r\n    if('url' in thumb) {\r\n      thumbImage = new Image();\r\n      renderImageFromUrl(thumbImage, thumb.url, afterRender);\r\n      haveThumbCached = true;\r\n    } else if('bytes' in thumb) {\r\n      if(thumb._ === 'photoPathSize') {\r\n        if(thumb.bytes.length) {\r\n          const d = appPhotosManager.getPathFromPhotoPathSize(thumb);\r\n          div.innerHTML = `<svg class=\"rlottie-vector media-sticker thumbnail\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 ${doc.w || 512} ${doc.h || 512}\" xml:space=\"preserve\">\r\n            <path d=\"${d}\"/>\r\n          </svg>`;\r\n        } else {\r\n          thumb = doc.thumbs.find(t => (t as PhotoSize.photoStrippedSize).bytes?.length) || thumb;\r\n        }\r\n      } \r\n      \r\n      if(thumb && thumb._ !== 'photoPathSize' && toneIndex <= 0) {\r\n        thumbImage = new Image();\r\n\r\n        if((webpWorkerController.isWebpSupported() || doc.pFlags.stickerThumbConverted || cacheContext.url)/*  && false */) {\r\n          renderImageFromUrl(thumbImage, appPhotosManager.getPreviewURLFromThumb(doc, thumb as PhotoSize.photoStrippedSize, true), afterRender);\r\n          haveThumbCached = true;\r\n        } else {\r\n          webpWorkerController.convert(doc.id, (thumb as PhotoSize.photoStrippedSize).bytes as Uint8Array).then(bytes => {\r\n            (thumb as PhotoSize.photoStrippedSize).bytes = bytes;\r\n            doc.pFlags.stickerThumbConverted = true;\r\n            \r\n            if(middleware && !middleware()) return;\r\n  \r\n            if(!div.childElementCount) {\r\n              renderImageFromUrl(thumbImage, appPhotosManager.getPreviewURLFromThumb(doc, thumb as PhotoSize.photoStrippedSize, true), afterRender);\r\n            }\r\n          }).catch(() => {});\r\n        }\r\n      }\r\n    } else if(stickerType === 2 && (withThumb || onlyThumb) && toneIndex <= 0) {\r\n      thumbImage = new Image();\r\n\r\n      const load = () => {\r\n        if(div.childElementCount || (middleware && !middleware())) return;\r\n\r\n        const r = () => {\r\n          if(div.childElementCount || (middleware && !middleware())) return;\r\n          renderImageFromUrl(thumbImage, cacheContext.url, afterRender);\r\n        };\r\n  \r\n        if(cacheContext.url) {\r\n          r();\r\n          return Promise.resolve();\r\n        } else {\r\n          return appDocsManager.getThumbURL(doc, thumb as PhotoSize.photoStrippedSize).promise.then(r);\r\n        }\r\n      };\r\n      \r\n      if(lazyLoadQueue && onlyThumb) {\r\n        lazyLoadQueue.push({div, load});\r\n        return Promise.resolve();\r\n      } else {\r\n        load();\r\n\r\n        if((thumb as any).url) {\r\n          haveThumbCached = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if(loadPromises && haveThumbCached) {\r\n    loadPromises.push(loadThumbPromise);\r\n  }\r\n\r\n  if(onlyThumb) { // for sticker panel\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  const load = async() => {\r\n    if(middleware && !middleware()) return;\r\n\r\n    if(stickerType === 2) {\r\n      /* if(doc.id === '1860749763008266301') {\r\n        console.log('loaded sticker:', doc, div);\r\n      } */\r\n\r\n      //await new Promise((resolve) => setTimeout(resolve, 500));\r\n      //return;\r\n\r\n      //console.time('download sticker' + doc.id);\r\n\r\n      //appDocsManager.downloadDocNew(doc.id).promise.then(res => res.json()).then(async(json) => {\r\n      //fetch(doc.url).then(res => res.json()).then(async(json) => {\r\n      /* return */ await appDocsManager.downloadDoc(doc, /* undefined,  */lazyLoadQueue?.queueId)\r\n      .then(readBlobAsText)\r\n      //.then(JSON.parse)\r\n      .then(async(json) => {\r\n        //console.timeEnd('download sticker' + doc.id);\r\n        //console.log('loaded sticker:', doc, div/* , blob */);\r\n        if(middleware && !middleware()) return;\r\n\r\n        let animation = await LottieLoader.loadAnimationWorker({\r\n          container: div,\r\n          loop: loop && !emoji,\r\n          autoplay: play,\r\n          animationData: json,\r\n          width,\r\n          height\r\n        }, group, toneIndex);\r\n\r\n        //const deferred = deferredPromise<void>();\r\n  \r\n        animation.addEventListener('firstFrame', () => {\r\n          const element = div.firstElementChild;\r\n          needFadeIn = (needFadeIn || !element || element.tagName === 'svg') && rootScope.settings.animationsEnabled;\r\n\r\n          const cb = () => {\r\n            if(element && element !== animation.canvas) {\r\n              element.remove();\r\n            }\r\n          };\r\n\r\n          if(!needFadeIn) {\r\n            if(element) {\r\n              sequentialDom.mutate(cb);\r\n            }\r\n          } else {\r\n            sequentialDom.mutate(() => {\r\n              animation.canvas.classList.add('fade-in');\r\n              if(element) {\r\n                element.classList.add('fade-out');\r\n              }\r\n  \r\n              animation.canvas.addEventListener('animationend', () => {\r\n                sequentialDom.mutate(() => {\r\n                  animation.canvas.classList.remove('fade-in');\r\n                  cb();\r\n                });\r\n              }, {once: true});\r\n            });\r\n          }\r\n\r\n          appDocsManager.saveLottiePreview(doc, animation.canvas, toneIndex);\r\n\r\n          //deferred.resolve();\r\n        }, true);\r\n  \r\n        if(emoji) {\r\n          attachClickEvent(div, (e) => {\r\n            cancelEvent(e);\r\n            let animation = LottieLoader.getAnimation(div);\r\n  \r\n            if(animation.paused) {\r\n              animation.autoplay = true;\r\n              animation.restart();\r\n            }\r\n          });\r\n        }\r\n\r\n        //return deferred;\r\n        //await new Promise((resolve) => setTimeout(resolve, 5e3));\r\n      });\r\n\r\n      //console.timeEnd('render sticker' + doc.id);\r\n    } else if(stickerType === 1) {\r\n      const image = new Image();\r\n      const thumbImage = div.firstElementChild !== image && div.firstElementChild;\r\n      needFadeIn = (needFadeIn || !downloaded || thumbImage) && rootScope.settings.animationsEnabled;\r\n\r\n      image.classList.add('media-sticker');\r\n\r\n      if(needFadeIn) {\r\n        image.classList.add('fade-in');\r\n      }\r\n\r\n      return new Promise<void>((resolve, reject) => {\r\n        const r = () => {\r\n          if(middleware && !middleware()) return resolve();\r\n  \r\n          renderImageFromUrl(image, cacheContext.url, () => {\r\n            sequentialDom.mutateElement(div, () => {\r\n              div.append(image);\r\n              if(thumbImage) {\r\n                thumbImage.classList.add('fade-out');\r\n              }\r\n\r\n              resolve();\r\n\r\n              if(needFadeIn) {\r\n                image.addEventListener('animationend', () => {\r\n                  image.classList.remove('fade-in');\r\n                  if(thumbImage) {\r\n                    thumbImage.remove();\r\n                  }\r\n                }, {once: true});\r\n              }\r\n            });\r\n          });\r\n        };\r\n  \r\n        if(cacheContext.url) r();\r\n        else {\r\n          appDocsManager.downloadDoc(doc, /* undefined,  */lazyLoadQueue?.queueId).then(r, resolve);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadPromise: Promise<any> = lazyLoadQueue && (!downloaded || stickerType === 2) ? \r\n    (lazyLoadQueue.push({div, load}), Promise.resolve()) : \r\n    load();\r\n\r\n  if(downloaded && stickerType === 1) {\r\n    loadThumbPromise = loadPromise;\r\n    if(loadPromises) {\r\n      loadPromises.push(loadThumbPromise);\r\n    }\r\n  }\r\n\r\n  return loadPromise;\r\n}\r\n\r\nexport async function wrapStickerSetThumb({set, lazyLoadQueue, container, group, autoplay, width, height}: {\r\n  set: StickerSet.stickerSet,\r\n  lazyLoadQueue: LazyLoadQueue,\r\n  container: HTMLElement,\r\n  group: string,\r\n  autoplay: boolean,\r\n  width: number,\r\n  height: number\r\n}) {\r\n  if(set.thumbs?.length) {\r\n    container.classList.add('media-sticker-wrapper');\r\n    lazyLoadQueue.push({\r\n      div: container,\r\n      load: () => {\r\n        const downloadOptions = appStickersManager.getStickerSetThumbDownloadOptions(set);\r\n        const promise = appDownloadManager.download(downloadOptions);\r\n\r\n        if(set.pFlags.animated) {\r\n          return promise\r\n          .then(readBlobAsText)\r\n          //.then(JSON.parse)\r\n          .then(json => {\r\n            lottieLoader.loadAnimationWorker({\r\n              container,\r\n              loop: true,\r\n              autoplay,\r\n              animationData: json,\r\n              width,\r\n              height,\r\n              needUpscale: true\r\n            }, group);\r\n          });\r\n        } else {\r\n          const image = new Image();\r\n          image.classList.add('media-sticker');\r\n  \r\n          return promise.then(blob => {\r\n            renderImageFromUrl(image, URL.createObjectURL(blob), () => {\r\n              container.append(image);\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  const promise = appStickersManager.getStickerSet(set);\r\n  const stickerSet = await promise;\r\n  if(stickerSet.documents[0]._ !== 'documentEmpty') { // as thumb will be used first sticker\r\n    wrapSticker({\r\n      doc: stickerSet.documents[0],\r\n      div: container, \r\n      group: group,\r\n      lazyLoadQueue\r\n    }); // kostil\r\n  }\r\n}\r\n\r\nexport function wrapLocalSticker({emoji, width, height}: {\r\n  doc?: MyDocument,\r\n  url?: string,\r\n  emoji?: string,\r\n  width: number,\r\n  height: number,\r\n}) {\r\n  const container = document.createElement('div');\r\n\r\n  const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n  if(doc) {\r\n    wrapSticker({\r\n      doc,\r\n      div: container,\r\n      loop: false,\r\n      play: true,\r\n      width,\r\n      height,\r\n      emoji\r\n    }).then(() => {\r\n      // this.animation = player;\r\n    });\r\n  } else {\r\n    container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  return {container};\r\n}\r\n\r\nexport function wrapReply(title: string | HTMLElement, subtitle: string | HTMLElement, message?: any) {\r\n  const replyContainer = new ReplyContainer('reply');\r\n  replyContainer.fill(title, subtitle, message);\r\n  /////////console.log('wrapReply', title, subtitle, media);\r\n  return replyContainer.container;\r\n}\r\n\r\nexport function prepareAlbum(options: {\r\n  container: HTMLElement,\r\n  items: {w: number, h: number}[],\r\n  maxWidth: number,\r\n  minWidth: number,\r\n  spacing: number,\r\n  maxHeight?: number,\r\n  forMedia?: true\r\n}) {\r\n  const layouter = new Layouter(options.items, options.maxWidth, options.minWidth, options.spacing, options.maxHeight);\r\n  const layout = layouter.layout();\r\n\r\n  const widthItem = layout.find(item => item.sides & RectPart.Right);\r\n  const width = widthItem.geometry.width + widthItem.geometry.x;\r\n\r\n  const heightItem = layout.find(item => item.sides & RectPart.Bottom);\r\n  const height = heightItem.geometry.height + heightItem.geometry.y;\r\n\r\n  const container = options.container;\r\n  container.style.width = width + 'px';\r\n  container.style.height = height + 'px';\r\n  const children = container.children;\r\n\r\n  layout.forEach(({geometry, sides}, idx) => {\r\n    let div: HTMLElement;\r\n    div = children[idx] as HTMLElement;\r\n    if(!div) {\r\n      div = document.createElement('div');\r\n      container.append(div);\r\n    }\r\n\r\n    div.classList.add('album-item', 'grouped-item');\r\n\r\n    div.style.width = (geometry.width / width * 100) + '%';\r\n    div.style.height = (geometry.height / height * 100) + '%';\r\n    div.style.top = (geometry.y / height * 100) + '%';\r\n    div.style.left = (geometry.x / width * 100) + '%';\r\n\r\n    if(sides & RectPart.Left && sides & RectPart.Top) {\r\n      div.style.borderTopLeftRadius = 'inherit';\r\n    }\r\n\r\n    if(sides & RectPart.Left && sides & RectPart.Bottom) {\r\n      div.style.borderBottomLeftRadius = 'inherit';\r\n    }\r\n\r\n    if(sides & RectPart.Right && sides & RectPart.Top) {\r\n      div.style.borderTopRightRadius = 'inherit';\r\n    }\r\n\r\n    if(sides & RectPart.Right && sides & RectPart.Bottom) {\r\n      div.style.borderBottomRightRadius = 'inherit';\r\n    }\r\n\r\n    if(options.forMedia) {\r\n      const mediaDiv = document.createElement('div');\r\n      mediaDiv.classList.add('album-item-media');\r\n  \r\n      div.append(mediaDiv);\r\n    }\r\n\r\n    // @ts-ignore\r\n    //div.style.backgroundColor = '#' + Math.floor(Math.random() * (2 ** 24 - 1)).toString(16).padStart(6, '0');\r\n  });\r\n\r\n  /* if(options.forMedia) {\r\n    layout.forEach((_, i) => {\r\n      const mediaDiv = document.createElement('div');\r\n      mediaDiv.classList.add('album-item-media');\r\n  \r\n      options.container.children[i].append(mediaDiv);\r\n    });\r\n  } */\r\n}\r\n\r\nexport function wrapAlbum({groupId, attachmentDiv, middleware, uploading, lazyLoadQueue, isOut, chat, loadPromises, noAutoDownload}: {\r\n  groupId: string, \r\n  attachmentDiv: HTMLElement,\r\n  middleware?: () => boolean,\r\n  lazyLoadQueue?: LazyLoadQueue,\r\n  uploading?: boolean,\r\n  isOut: boolean,\r\n  chat: Chat,\r\n  loadPromises?: Promise<any>[],\r\n  noAutoDownload?: boolean,\r\n}) {\r\n  const items: {size: PhotoSize.photoSize, media: any, message: any}[] = [];\r\n\r\n  // !lowest msgID will be the FIRST in album\r\n  const storage = appMessagesManager.getMidsByAlbum(groupId);\r\n  for(const mid of storage) {\r\n    const m = chat.getMessage(mid);\r\n    const media = m.media.photo || m.media.document;\r\n\r\n    const size: any = media._ === 'photo' ? appPhotosManager.choosePhotoSize(media, 480, 480) : {w: media.w, h: media.h};\r\n    items.push({size, media, message: m});\r\n  }\r\n\r\n  /* // * pending\r\n  if(storage[0] < 0) {\r\n    items.reverse();\r\n  } */\r\n\r\n  prepareAlbum({\r\n    container: attachmentDiv,\r\n    items: items.map(i => ({w: i.size.w, h: i.size.h})),\r\n    maxWidth: mediaSizes.active.album.width,\r\n    minWidth: 100,\r\n    spacing: 2,\r\n    forMedia: true\r\n  });\r\n\r\n  items.forEach((item, idx) => {\r\n    const {size, media, message} = item;\r\n\r\n    const div = attachmentDiv.children[idx] as HTMLElement;\r\n    div.dataset.mid = '' + message.mid;\r\n    const mediaDiv = div.firstElementChild as HTMLElement;\r\n    if(media._ === 'photo') {\r\n      wrapPhoto({\r\n        photo: media,\r\n        message,\r\n        container: mediaDiv,\r\n        boxWidth: 0,\r\n        boxHeight: 0,\r\n        isOut,\r\n        lazyLoadQueue,\r\n        middleware,\r\n        size,\r\n        loadPromises,\r\n        noAutoDownload\r\n      });\r\n    } else {\r\n      wrapVideo({\r\n        doc: message.media.document,\r\n        container: mediaDiv,\r\n        message,\r\n        boxWidth: 0,\r\n        boxHeight: 0,\r\n        withTail: false,\r\n        isOut,\r\n        lazyLoadQueue,\r\n        middleware,\r\n        loadPromises,\r\n        noAutoDownload\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport function wrapGroupedDocuments({albumMustBeRenderedFull, message, bubble, messageDiv, chat, loadPromises, noAutoDownload}: {\r\n  albumMustBeRenderedFull: boolean,\r\n  message: any,\r\n  messageDiv: HTMLElement,\r\n  bubble: HTMLElement,\r\n  uploading?: boolean,\r\n  chat: Chat,\r\n  loadPromises?: Promise<any>[],\r\n  noAutoDownload?: boolean,\r\n}) {\r\n  let nameContainer: HTMLElement;\r\n  const mids = albumMustBeRenderedFull ? chat.getMidsByMid(message.mid) : [message.mid];\r\n  /* if(isPending) {\r\n    mids.reverse();\r\n  } */\r\n\r\n  mids.forEach((mid, idx) => {\r\n    const message = chat.getMessage(mid);\r\n    const div = wrapDocument({\r\n      message,\r\n      loadPromises,\r\n      noAutoDownload\r\n    });\r\n\r\n    const container = document.createElement('div');\r\n    container.classList.add('document-container');\r\n    container.dataset.mid = '' + mid;\r\n\r\n    const wrapper = document.createElement('div');\r\n    wrapper.classList.add('document-wrapper');\r\n    \r\n    if(message.message) {\r\n      const messageDiv = document.createElement('div');\r\n      messageDiv.classList.add('document-message');\r\n\r\n      const richText = RichTextProcessor.wrapRichText(message.message, {\r\n        entities: message.totalEntities\r\n      });\r\n\r\n      messageDiv.innerHTML = richText;\r\n      wrapper.append(messageDiv);\r\n    }\r\n\r\n    if(mids.length > 1) {\r\n      const selection = document.createElement('div');\r\n      selection.classList.add('document-selection');\r\n      container.append(selection);\r\n      \r\n      container.classList.add('grouped-item');\r\n\r\n      if(idx === 0) {\r\n        nameContainer = wrapper;\r\n      }\r\n    }\r\n\r\n    wrapper.append(div);\r\n    container.append(wrapper);\r\n    messageDiv.append(container);\r\n  });\r\n\r\n  if(mids.length > 1) {\r\n    bubble.classList.add('is-multiple-documents', 'is-grouped');\r\n  }\r\n\r\n  return nameContainer;\r\n}\r\n\r\nexport function wrapPoll(message: any) {\r\n  const elem = new PollElement();\r\n  elem.message = message;\r\n  elem.setAttribute('peer-id', '' + message.peerId);\r\n  elem.setAttribute('poll-id', message.media.poll.id);\r\n  elem.setAttribute('message-id', '' + message.mid);\r\n  elem.render();\r\n  return elem;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport whichChild from \"./whichChild\";\r\n\r\nexport default function positionElementByIndex(element: HTMLElement, container: HTMLElement, pos: number, prevPos?: number) {\r\n  if(prevPos === undefined) {\r\n    prevPos = element.parentElement === container ? whichChild(element) : -1;\r\n  }\r\n\r\n  if(prevPos === pos) {\r\n    return false;\r\n  } else if(prevPos !== -1 && prevPos < pos) { // was higher\r\n    pos += 1;\r\n  }\r\n\r\n  if(container.childElementCount > pos) {\r\n    container.insertBefore(element, container.children[pos]);\r\n  } else {\r\n    container.append(element);\r\n  }\r\n\r\n  return true;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { LazyLoadQueueIntersector } from \"./lazyLoadQueue\";\r\nimport appDialogsManager, { DialogDom } from \"../lib/appManagers/appDialogsManager\";\r\nimport { getHeavyAnimationPromise } from \"../hooks/useHeavyAnimationCheck\";\r\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\r\nimport { insertInDescendSortedArray } from \"../helpers/array\";\r\nimport isInDOM from \"../helpers/dom/isInDOM\";\r\nimport positionElementByIndex from \"../helpers/dom/positionElementByIndex\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\n\r\ntype SortedUser = {\r\n  peerId: number, \r\n  status: number, \r\n  dom: DialogDom\r\n};\r\nexport default class SortedUserList {\r\n  public static SORT_INTERVAL = 30e3;\r\n  public list: HTMLUListElement;\r\n  public users: Map<number, SortedUser>;\r\n  public sorted: Array<SortedUser>;\r\n  public lazyLoadQueue: LazyLoadQueueIntersector;\r\n\r\n  constructor() {\r\n    this.list = appDialogsManager.createChatList();\r\n\r\n    this.users = new Map();\r\n    this.sorted = [];\r\n\r\n    let timeout: number;\r\n    const doTimeout = () => {\r\n      timeout = window.setTimeout(() => {\r\n        this.updateList().then((good) => {\r\n          if(good) {\r\n            doTimeout();\r\n          }\r\n        });\r\n      }, SortedUserList.SORT_INTERVAL);\r\n    };\r\n\r\n    doTimeout();\r\n  }\r\n\r\n  public async updateList() {\r\n    if(!isInDOM(this.list)) {\r\n      return false;\r\n    }\r\n\r\n    await getHeavyAnimationPromise();\r\n\r\n    if(!isInDOM(this.list)) {\r\n      return false;\r\n    }\r\n\r\n    this.users.forEach(user => {\r\n      this.update(user.peerId, true);\r\n    });\r\n\r\n    this.sorted.forEach((sortedUser, idx) => {\r\n      positionElementByIndex(sortedUser.dom.listEl, this.list, idx);\r\n    });\r\n\r\n    return true;\r\n  }\r\n\r\n  public add(peerId: number) {\r\n    if(this.users.has(peerId)) {\r\n      return;\r\n    }\r\n\r\n    const {dom} = appDialogsManager.addDialogNew({\r\n      dialog: peerId,\r\n      container: false,\r\n      drawStatus: false,\r\n      avatarSize: 48,\r\n      autonomous: true,\r\n      meAsSaved: false,\r\n      rippleEnabled: false,\r\n      lazyLoadQueue: this.lazyLoadQueue\r\n    });\r\n\r\n    const sortedUser: SortedUser = {\r\n      peerId,\r\n      status: appUsersManager.getUserStatusForSort(peerId),\r\n      dom\r\n    };\r\n\r\n    this.users.set(peerId, sortedUser);\r\n    this.update(peerId);\r\n  }\r\n\r\n  public update(peerId: number, batch = false) {\r\n    const sortedUser = this.users.get(peerId);\r\n    sortedUser.status = appUsersManager.getUserStatusForSort(peerId);\r\n    const status = appUsersManager.getUserStatusString(peerId);\r\n    replaceContent(sortedUser.dom.lastMessageSpan, status);\r\n\r\n    const idx = insertInDescendSortedArray(this.sorted, sortedUser, 'status');\r\n    if(!batch) {\r\n      positionElementByIndex(sortedUser.dom.listEl, this.list, idx);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { formatDateAccordingToToday, months } from \"../helpers/date\";\r\nimport { copy, getObjectKeysAndSort, safeAssign } from \"../helpers/object\";\r\nimport { escapeRegExp, limitSymbols } from \"../helpers/string\";\r\nimport appChatsManager from \"../lib/appManagers/appChatsManager\";\r\nimport appDialogsManager from \"../lib/appManagers/appDialogsManager\";\r\nimport appMessagesManager, { MyInputMessagesFilter, MyMessage } from \"../lib/appManagers/appMessagesManager\";\r\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\r\nimport appPhotosManager from \"../lib/appManagers/appPhotosManager\";\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\r\nimport { logger } from \"../lib/logger\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport AppMediaViewer from \"./appMediaViewer\";\r\nimport { SearchGroup, SearchGroupType } from \"./appSearch\";\r\nimport { horizontalMenu } from \"./horizontalMenu\";\r\nimport LazyLoadQueue from \"./lazyLoadQueue\";\r\nimport { putPreloader, formatPhoneNumber } from \"./misc\";\r\nimport { ripple } from \"./ripple\";\r\nimport Scrollable, { ScrollableX } from \"./scrollable\";\r\nimport { wrapDocument, wrapPhoto, wrapVideo } from \"./wrappers\";\r\nimport useHeavyAnimationCheck, { getHeavyAnimationPromise } from \"../hooks/useHeavyAnimationCheck\";\r\nimport { isSafari } from \"../helpers/userAgent\";\r\nimport { LangPackKey, i18n } from \"../lib/langPack\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport { getMiddleware } from \"../helpers/middleware\";\r\nimport appProfileManager from \"../lib/appManagers/appProfileManager\";\r\nimport { ChannelParticipant, ChatFull, ChatParticipant, ChatParticipants } from \"../layer\";\r\nimport SortedUserList from \"./sortedUserList\";\r\nimport findUpTag from \"../helpers/dom/findUpTag\";\r\nimport appSidebarRight from \"./sidebarRight\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport appImManager from \"../lib/appManagers/appImManager\";\r\nimport positionElementByIndex from \"../helpers/dom/positionElementByIndex\";\r\nimport cleanSearchText from \"../helpers/cleanSearchText\";\r\n\r\n//const testScroll = false;\r\n\r\nexport type SearchSuperType = MyInputMessagesFilter/*  | 'members' */;\r\nexport type SearchSuperContext = {\r\n  peerId: number,\r\n  inputFilter: MyInputMessagesFilter,\r\n  query?: string,\r\n  maxId?: number,\r\n  folderId?: number,\r\n  threadId?: number,\r\n  date?: number,\r\n  nextRate?: number,\r\n  minDate?: number,\r\n  maxDate?: number\r\n};\r\n\r\nexport type SearchSuperMediaType = 'members' | 'media' | 'files' | 'links' | 'music' | 'chats' | 'voice';\r\nexport type SearchSuperMediaTab = {\r\n  inputFilter: SearchSuperType,\r\n  name: LangPackKey,\r\n  type: SearchSuperMediaType,\r\n  contentTab?: HTMLElement,\r\n  menuTab?: HTMLElement,\r\n  scroll?: {scrollTop: number, scrollHeight: number}\r\n};\r\n\r\nexport default class AppSearchSuper {\r\n  public tabs: {[t in SearchSuperType]: HTMLDivElement} = {} as any;\r\n\r\n  public mediaTab: SearchSuperMediaTab;\r\n\r\n  public container: HTMLElement;\r\n  public nav: HTMLElement;\r\n  private navScrollableContainer: HTMLDivElement;\r\n  private tabsContainer: HTMLElement;\r\n  private tabsMenu: HTMLElement;\r\n  private prevTabId = -1;\r\n  \r\n  private lazyLoadQueue = new LazyLoadQueue();\r\n  public middleware = getMiddleware();\r\n\r\n  public historyStorage: Partial<{[type in SearchSuperType]: {mid: number, peerId: number}[]}> = {};\r\n  public usedFromHistory: Partial<{[type in SearchSuperType]: number}> = {};\r\n  public urlsToRevoke: string[] = [];\r\n\r\n  private searchContext: SearchSuperContext;\r\n  public loadMutex: Promise<any> = Promise.resolve();\r\n\r\n  private nextRates: Partial<{[type in SearchSuperType]: number}> = {};\r\n  private loadPromises: Partial<{[type in SearchSuperType]: Promise<void>}> = {};\r\n  private loaded: Partial<{[type in SearchSuperType]: boolean}> = {};\r\n  private loadedChats = false;\r\n  private firstLoad = true;\r\n\r\n  private log = logger('SEARCH-SUPER');\r\n  public selectTab: ReturnType<typeof horizontalMenu>;\r\n  \r\n  private monthContainers: Partial<{\r\n    [type in SearchSuperType]: {\r\n      [timestamp: number]: {\r\n        container: HTMLElement,\r\n        items: HTMLElement\r\n      }\r\n    }\r\n  }> = {};\r\n\r\n  private searchGroupMedia: SearchGroup;\r\n\r\n  public mediaTabsMap: Map<SearchSuperMediaType, SearchSuperMediaTab> = new Map();\r\n\r\n  private membersList: SortedUserList;\r\n\r\n  private skipScroll: boolean;\r\n\r\n  // * arguments\r\n  public mediaTabs: SearchSuperMediaTab[];\r\n  public scrollable: Scrollable;\r\n  public searchGroups?: {[group in SearchGroupType]: SearchGroup};\r\n  public asChatList? = false;\r\n  public groupByMonth? = true;\r\n  public hideEmptyTabs? = true;\r\n  public onChangeTab?: (mediaTab: SearchSuperMediaTab) => void;\r\n  public showSender? = false;\r\n\r\n  constructor(options: Pick<AppSearchSuper, 'mediaTabs' | 'scrollable' | 'searchGroups' | 'asChatList' | 'groupByMonth' | 'hideEmptyTabs' | 'onChangeTab' | 'showSender'>) {\r\n    safeAssign(this, options);\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('search-super');\r\n\r\n    const navScrollableContainer = this.navScrollableContainer = document.createElement('div');\r\n    navScrollableContainer.classList.add('search-super-tabs-scrollable', 'menu-horizontal-scrollable', 'sticky');\r\n\r\n    const navScrollable = new ScrollableX(navScrollableContainer);\r\n\r\n    const nav = this.nav = document.createElement('nav');\r\n    nav.classList.add('search-super-tabs', 'menu-horizontal-div');\r\n    this.tabsMenu = nav;\r\n\r\n    navScrollable.container.append(nav);\r\n\r\n    for(const mediaTab of this.mediaTabs) {\r\n      const menuTab = document.createElement('div');\r\n      menuTab.classList.add('menu-horizontal-div-item');\r\n      const span = document.createElement('span');\r\n      const i = document.createElement('i');\r\n\r\n      span.append(i18n(mediaTab.name));\r\n      span.append(i);\r\n\r\n      menuTab.append(span);\r\n\r\n      ripple(menuTab);\r\n\r\n      this.tabsMenu.append(menuTab);\r\n\r\n      this.mediaTabsMap.set(mediaTab.type, mediaTab);\r\n\r\n      mediaTab.menuTab = menuTab;\r\n    }\r\n\r\n    this.tabsContainer = document.createElement('div');\r\n    this.tabsContainer.classList.add('search-super-tabs-container', 'tabs-container');\r\n\r\n    for(const mediaTab of this.mediaTabs) {\r\n      const container = document.createElement('div');\r\n      container.classList.add('search-super-container-' + mediaTab.type);\r\n\r\n      const content = document.createElement('div');\r\n      content.classList.add('search-super-content-' + mediaTab.type);\r\n\r\n      container.append(content);\r\n\r\n      this.tabsContainer.append(container);\r\n\r\n      this.tabs[mediaTab.inputFilter] = content;\r\n\r\n      mediaTab.contentTab = content;\r\n    }\r\n\r\n    this.container.append(navScrollableContainer, this.tabsContainer);\r\n\r\n    // * construct end\r\n\r\n    this.searchGroupMedia = new SearchGroup(false, 'messages', true);\r\n\r\n    this.scrollable.onScrolledBottom = () => {\r\n      if(this.mediaTab.contentTab && this.mediaTab.contentTab.childElementCount/* && false */) {\r\n        //this.log('onScrolledBottom will load media');\r\n        this.load(true);\r\n      }\r\n    };\r\n    //this.scroll.attachSentinels(undefined, 400);\r\n\r\n    this.selectTab = horizontalMenu(this.tabsMenu, this.tabsContainer, (id, tabContent, animate) => {\r\n      if(this.prevTabId === id && !this.skipScroll) {\r\n        this.scrollable.scrollIntoViewNew(this.container, 'start');\r\n        return;\r\n      }\r\n      \r\n      const newMediaTab = this.mediaTabs[id];\r\n      if(this.onChangeTab) {\r\n        this.onChangeTab(newMediaTab);\r\n      }\r\n      \r\n      const fromMediaTab = this.mediaTab;\r\n      this.mediaTab = newMediaTab;\r\n\r\n      if(this.prevTabId !== -1 && animate) {\r\n        this.onTransitionStart();\r\n      }\r\n\r\n      if(this.skipScroll) {\r\n        this.skipScroll = false;\r\n      } else {\r\n        const offsetTop = this.container.offsetTop;\r\n        let scrollTop = this.scrollable.scrollTop;\r\n        if(scrollTop < offsetTop) {\r\n          this.scrollable.scrollIntoViewNew(this.container, 'start');\r\n          scrollTop = offsetTop;\r\n        }\r\n        \r\n        fromMediaTab.scroll = {scrollTop: scrollTop, scrollHeight: this.scrollable.scrollHeight};\r\n  \r\n        if(newMediaTab.scroll === undefined) {\r\n          const rect = this.container.getBoundingClientRect();\r\n          const rect2 = this.container.parentElement.getBoundingClientRect();\r\n          const diff = rect.y - rect2.y;\r\n  \r\n          if(scrollTop > diff) {\r\n            newMediaTab.scroll = {scrollTop: diff, scrollHeight: 0};\r\n          }\r\n        }\r\n  \r\n        if(newMediaTab.scroll) {\r\n          const diff = fromMediaTab.scroll.scrollTop - newMediaTab.scroll.scrollTop;\r\n          //console.log('what you gonna do', this.goingHard, diff);\r\n  \r\n          //this.scrollable.scrollTop = scrollTop;\r\n          if(diff/*  && diff < 0 */) {\r\n            /* if(diff > -(fromMediaTab.contentTab.scrollHeight + this.nav.scrollHeight)) {\r\n              fromMediaTab.contentTab.style.transform = `translateY(${diff}px)`;\r\n              this.scrollable.scrollTop = scrollTop - diff;\r\n            } else { */\r\n              newMediaTab.contentTab.style.transform = `translateY(${diff}px)`;\r\n            //}\r\n          }\r\n        }\r\n      }\r\n      \r\n      /* if(this.prevTabId !== -1 && nav.offsetTop) {\r\n        this.scrollable.scrollTop -= nav.offsetTop;\r\n      } */\r\n\r\n      /* this.log('setVirtualContainer', id, this.sharedMediaSelected, this.sharedMediaSelected.childElementCount);\r\n      this.scroll.setVirtualContainer(this.sharedMediaSelected); */\r\n\r\n      if(this.prevTabId !== -1 && !newMediaTab.contentTab.childElementCount) { // quick brown fix\r\n        //this.contentContainer.classList.remove('loaded');\r\n        this.load(true);\r\n      }\r\n\r\n      this.prevTabId = id;\r\n    }, () => {\r\n      this.scrollable.onScroll();\r\n      \r\n      //console.log('what y', this.tabSelected.style.transform);\r\n      if(this.mediaTab.scroll !== undefined) {\r\n        this.mediaTab.contentTab.style.transform = '';\r\n        this.scrollable.scrollTop = this.mediaTab.scroll.scrollTop;\r\n      }\r\n\r\n      this.onTransitionEnd();\r\n    }, undefined, navScrollable);\r\n\r\n    this.tabs.inputMessagesFilterPhotoVideo.addEventListener('click', (e) => {\r\n      const target = findUpClassName(e.target as HTMLDivElement, 'grid-item');\r\n      \r\n      const mid = +target.dataset.mid;\r\n      if(!mid) {\r\n        this.log.warn('no messageId by click on target:', target);\r\n        return;\r\n      }\r\n\r\n      const peerId = +target.dataset.peerId;\r\n\r\n      const targets = (Array.from(this.tabs.inputMessagesFilterPhotoVideo.querySelectorAll('.grid-item')) as HTMLElement[]).map(el => {\r\n        return {element: el, mid: +el.dataset.mid, peerId: +el.dataset.peerId};\r\n      });\r\n\r\n      //const ids = Object.keys(this.mediaDivsByIds).map(k => +k).sort((a, b) => a - b);\r\n      const idx = targets.findIndex(item => item.mid === mid && item.peerId === peerId);\r\n      \r\n      const message = appMessagesManager.getMessageByPeer(peerId, mid);\r\n      new AppMediaViewer()\r\n      .setSearchContext(this.copySearchContext(this.mediaTab.inputFilter))\r\n      .openMedia(message, target, 0, false, targets.slice(0, idx), targets.slice(idx + 1));\r\n    });\r\n\r\n    this.mediaTab = this.mediaTabs[0];\r\n\r\n    useHeavyAnimationCheck(() => {\r\n      this.lazyLoadQueue.lock();\r\n    }, () => {\r\n      this.lazyLoadQueue.unlockAndRefresh(); // ! maybe not so efficient\r\n    });\r\n  }\r\n\r\n  private onTransitionStart = () => {\r\n    this.container.classList.add('sliding');\r\n  };\r\n\r\n  private onTransitionEnd = () => {\r\n    this.container.classList.remove('sliding');\r\n  };\r\n\r\n  public filterMessagesByType(messages: any[], type: SearchSuperType): MyMessage[] {\r\n    if(type === 'inputMessagesFilterEmpty') return messages;\r\n\r\n    if(type !== 'inputMessagesFilterUrl') {\r\n      messages = messages.filter(message => !!message.media);\r\n    }\r\n\r\n    /* if(!this.peerId) {\r\n      messages = messages.filter(message => {\r\n        if(message.peerId === rootScope.myId) {\r\n          return true;\r\n        }\r\n\r\n        const dialog = appMessagesManager.getDialogByPeerId(message.fromId)[0];\r\n        return dialog && dialog.folder_id === 0;\r\n      });\r\n    } */\r\n\r\n    let filtered: any[] = [];\r\n\r\n    switch(type) {\r\n      case 'inputMessagesFilterPhotoVideo': {\r\n        for(let message of messages) {\r\n          let media = message.media.photo || message.media.document || (message.media.webpage && message.media.webpage.document);\r\n          if(!media) {\r\n            //this.log('no media!', message);\r\n            continue;\r\n          }\r\n          \r\n          if(media._ === 'document' && media.type !== 'video'/*  && media.type !== 'gif' */) {\r\n            //this.log('broken video', media);\r\n            continue;\r\n          }\r\n\r\n          filtered.push(message);\r\n        }\r\n        \r\n        break;\r\n      }\r\n\r\n      case 'inputMessagesFilterDocument': {\r\n        for(let message of messages) {\r\n          if(!message.media.document || ['voice', 'audio', 'gif', 'sticker', 'round'].includes(message.media.document.type)) {\r\n            continue;\r\n          }\r\n          \r\n          filtered.push(message);\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'inputMessagesFilterUrl': {\r\n        //this.log('inputMessagesFilterUrl', messages);\r\n        for(let message of messages) {\r\n          //if((message.media.webpage && message.media.webpage._ !== 'webPageEmpty')) {\r\n            filtered.push(message);\r\n          //}\r\n        }\r\n        \r\n        break;\r\n      }\r\n\r\n      case 'inputMessagesFilterMusic': {\r\n        for(let message of messages) {\r\n          if(!message.media.document || message.media.document.type !== 'audio') {\r\n            continue;\r\n          }\r\n\r\n          filtered.push(message);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'inputMessagesFilterVoice': {\r\n        for(let message of messages) {\r\n          if(!message.media.document || message.media.document.type !== 'voice') {\r\n            continue;\r\n          }\r\n\r\n          filtered.push(message);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n  \r\n  public async performSearchResult(messages: any[], mediaTab: SearchSuperMediaTab, append = true) {\r\n    const elemsToAppend: {element: HTMLElement, message: any}[] = [];\r\n    const sharedMediaDiv: HTMLElement = mediaTab.contentTab;\r\n    const promises: Promise<any>[] = [];\r\n    const middleware = this.middleware.get();\r\n    let inputFilter = mediaTab.inputFilter;\r\n\r\n    await getHeavyAnimationPromise();\r\n    \r\n    let searchGroup: SearchGroup;\r\n    if(inputFilter === 'inputMessagesFilterPhotoVideo' && !!this.searchContext.query.trim()) {\r\n      inputFilter = 'inputMessagesFilterEmpty';\r\n      searchGroup = this.searchGroupMedia;\r\n      sharedMediaDiv.append(searchGroup.container);\r\n    } else if(inputFilter === 'inputMessagesFilterEmpty') {\r\n      searchGroup = this.searchGroups.messages;\r\n    }\r\n\r\n    // https://core.telegram.org/type/MessagesFilter\r\n    switch(inputFilter) {\r\n      case 'inputMessagesFilterEmpty': {\r\n        for(const message of messages) {\r\n          const {dialog, dom} = appDialogsManager.addDialogNew({\r\n            dialog: message.peerId, \r\n            container: searchGroup.list, \r\n            drawStatus: false,\r\n            avatarSize: 54\r\n          });\r\n          appDialogsManager.setLastMessage(dialog, message, dom, this.searchContext.query);\r\n        }\r\n\r\n        if(searchGroup.list.childElementCount) {\r\n          searchGroup.setActive();\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'inputMessagesFilterPhotoVideo': {\r\n        for(const message of messages) {\r\n          const media = message.media.photo || message.media.document || (message.media.webpage && message.media.webpage.document);\r\n\r\n          const div = document.createElement('div');\r\n          div.classList.add('grid-item');\r\n          //this.log(message, photo);\r\n\r\n          let wrapped: ReturnType<typeof wrapPhoto>;\r\n          const size = appPhotosManager.choosePhotoSize(media, 200, 200);\r\n          if(media._ !== 'photo') {\r\n            wrapped = wrapVideo({\r\n              doc: media,\r\n              message,\r\n              container: div,\r\n              boxWidth: 0,\r\n              boxHeight: 0,\r\n              lazyLoadQueue: this.lazyLoadQueue,\r\n              middleware,\r\n              onlyPreview: true,\r\n              withoutPreloader: true,\r\n              noPlayButton: true,\r\n              size\r\n            }).thumb;\r\n          } else {\r\n            wrapped = wrapPhoto({\r\n              photo: media,\r\n              message,\r\n              container: div,\r\n              boxWidth: 0,\r\n              boxHeight: 0,\r\n              lazyLoadQueue: this.lazyLoadQueue,\r\n              middleware,\r\n              withoutPreloader: true,\r\n              noBlur: true,\r\n              size\r\n            });\r\n          }\r\n\r\n          [wrapped.images.thumb, wrapped.images.full].filter(Boolean).forEach(image => {\r\n            image.classList.add('grid-item-media');\r\n          });\r\n\r\n          promises.push(wrapped.loadPromises.thumb);\r\n\r\n          elemsToAppend.push({element: div, message});\r\n        }\r\n        \r\n        break;\r\n      }\r\n      \r\n      case 'inputMessagesFilterVoice':\r\n      case 'inputMessagesFilterMusic':\r\n      case 'inputMessagesFilterDocument': {\r\n        for(const message of messages) {\r\n          const showSender = this.showSender || message.media.document.type === 'voice';\r\n          const div = wrapDocument({\r\n            message,\r\n            withTime: !showSender,\r\n            fontWeight: 400,\r\n            voiceAsMusic: true,\r\n            showSender: showSender,\r\n            searchContext: this.copySearchContext(inputFilter)\r\n          });\r\n\r\n          if(['audio', 'voice'].includes(message.media.document.type)) {\r\n            div.classList.add('audio-48');\r\n          }\r\n\r\n          elemsToAppend.push({element: div, message});\r\n        }\r\n        break;\r\n      }\r\n      \r\n      case 'inputMessagesFilterUrl': {\r\n        for(let message of messages) {\r\n          let webpage: any;\r\n\r\n          if(message.media?.webpage && message.media.webpage._ !== 'webPageEmpty') {\r\n            webpage = message.media.webpage;\r\n          } else {\r\n            const entity = message.totalEntities ? message.totalEntities.find((e: any) => e._ === 'messageEntityUrl' || e._ === 'messageEntityTextUrl') : null;\r\n            let url: string, display_url: string, sliced: string;\r\n\r\n            if(!entity) {\r\n              //this.log.error('NO ENTITY:', message);\r\n              const match = RichTextProcessor.matchUrl(message.message);\r\n              if(!match) {\r\n                //this.log.error('NO ENTITY AND NO MATCH:', message);\r\n                continue;\r\n              }\r\n\r\n              url = match[0];\r\n            } else {\r\n              sliced = message.message.slice(entity.offset, entity.offset + entity.length);\r\n            }\r\n\r\n            if(entity?._ === 'messageEntityTextUrl') {\r\n              url = entity.url;\r\n              //display_url = sliced;\r\n            } else {\r\n              url = url || sliced;\r\n            }\r\n\r\n            display_url = url;\r\n\r\n            const same = message.message === url;\r\n            if(!url.match(/^(ftp|http|https):\\/\\//)) {\r\n              display_url = 'https://' + url;\r\n              url = url.includes('@') ? url : 'https://' + url;\r\n            }\r\n\r\n            display_url = new URL(display_url).hostname;\r\n\r\n            webpage = {\r\n              url,\r\n              display_url\r\n            };\r\n\r\n            if(!same) {\r\n              webpage.description = message.message;\r\n              webpage.rDescription = RichTextProcessor.wrapRichText(limitSymbols(message.message, 150, 180));\r\n            }\r\n          }\r\n\r\n          let div = document.createElement('div');\r\n          \r\n          let previewDiv = document.createElement('div');\r\n          previewDiv.classList.add('preview');\r\n          \r\n          //this.log('wrapping webpage', webpage);\r\n          \r\n          if(webpage.photo) {\r\n            const res = wrapPhoto({\r\n              container: previewDiv,\r\n              message: null,\r\n              photo: webpage.photo,\r\n              boxWidth: 0,\r\n              boxHeight: 0,\r\n              withoutPreloader: true,\r\n              lazyLoadQueue: this.lazyLoadQueue,\r\n              middleware,\r\n              size: appPhotosManager.choosePhotoSize(webpage.photo, 60, 60, false),\r\n              loadPromises: promises,\r\n              noBlur: true\r\n            });\r\n          } else {\r\n            previewDiv.classList.add('empty');\r\n            previewDiv.innerHTML = RichTextProcessor.getAbbreviation(webpage.title || webpage.display_url || webpage.description || webpage.url, true);\r\n          }\r\n          \r\n          let title = webpage.rTitle || '';\r\n          let subtitle = webpage.rDescription || '';\r\n          let url = RichTextProcessor.wrapRichText(webpage.url || '');\r\n          \r\n          if(!title) {\r\n            //title = new URL(webpage.url).hostname;\r\n            title = RichTextProcessor.wrapPlainText(webpage.display_url.split('/', 1)[0]);\r\n          }\r\n\r\n          let sender = this.showSender ? `<div class=\"subtitle sender\">${appMessagesManager.getSenderToPeerText(message)}</div>` : '';\r\n\r\n          let titleAdditionHTML = '';\r\n          if(this.showSender) {\r\n            titleAdditionHTML = `<div class=\"sent-time\">${formatDateAccordingToToday(new Date(message.date * 1000))}</div>`;\r\n          }\r\n\r\n          div.append(previewDiv);\r\n          div.insertAdjacentHTML('beforeend', `\r\n          <div class=\"title\">${title}${titleAdditionHTML}</div>\r\n          <div class=\"subtitle\">${subtitle}</div>\r\n          <div class=\"url\">${url}</div>\r\n          ${sender}\r\n          `);\r\n          \r\n          if(div.innerText.trim().length) {\r\n            elemsToAppend.push({element: div, message});\r\n          }\r\n          \r\n        }\r\n        \r\n        break;\r\n      }\r\n\r\n      default:\r\n        //this.log.warn('death is my friend', messages);\r\n        break;\r\n    }\r\n\r\n    if(this.loadMutex) {\r\n      promises.push(this.loadMutex);\r\n    }\r\n\r\n    if(promises.length) {\r\n      await Promise.all(promises);\r\n      if(!middleware()) {\r\n        //this.log.warn('peer changed');\r\n        return;\r\n      }\r\n    }\r\n    \r\n    if(elemsToAppend.length) {\r\n      const method = append ? 'append' : 'prepend';\r\n      elemsToAppend.forEach(details => {\r\n        const {element, message} = details;\r\n        const monthContainer = this.getMonthContainerByTimestamp(this.groupByMonth ? message.date : 0, inputFilter);\r\n        element.classList.add('search-super-item');\r\n        element.dataset.mid = '' + message.mid;\r\n        element.dataset.peerId = '' + message.peerId;\r\n        monthContainer.items[method](element);\r\n      });\r\n    }\r\n    \r\n    //if(type !== 'inputMessagesFilterEmpty') {\r\n      this.afterPerforming(inputFilter === 'inputMessagesFilterEmpty' ? 1 : messages.length, sharedMediaDiv);\r\n    //}\r\n  }\r\n\r\n  private afterPerforming(length: number, contentTab: HTMLElement) {\r\n    if(contentTab) {\r\n      const parent = contentTab.parentElement;\r\n      Array.from(parent.children).slice(1).forEach(child => {\r\n        child.remove();\r\n      });\r\n\r\n      //this.contentContainer.classList.add('loaded');\r\n\r\n      if(!length && !contentTab.childElementCount) {\r\n        const div = document.createElement('div');\r\n        div.innerText = 'Nothing interesting here yet...';\r\n        div.classList.add('position-center', 'text-center', 'content-empty', 'no-select');\r\n\r\n        parent.append(div);\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadChats() {\r\n    const renderedPeerIds: Set<number> = new Set();\r\n    const middleware = this.middleware.get();\r\n\r\n    for(let i in this.searchGroups) {\r\n      const group = this.searchGroups[i as SearchGroupType];\r\n      this.tabs.inputMessagesFilterEmpty.append(group.container);\r\n      group.clear();\r\n    }\r\n\r\n    const query = this.searchContext.query;\r\n    if(query) {\r\n      const setResults = (results: number[], group: SearchGroup, showMembersCount = false) => {\r\n        results.forEach((peerId) => {\r\n          if(renderedPeerIds.has(peerId)) {\r\n            return;\r\n          }\r\n  \r\n          renderedPeerIds.add(peerId);\r\n  \r\n          const peer = appPeersManager.getPeer(peerId);\r\n  \r\n          //////////this.log('contacts peer', peer);\r\n  \r\n          const {dom} = appDialogsManager.addDialogNew({\r\n            dialog: peerId, \r\n            container: group.list, \r\n            drawStatus: false,\r\n            avatarSize: 48,\r\n            autonomous: group.autonomous\r\n          });\r\n  \r\n          if(showMembersCount && (peer.participants_count || peer.participants)) {\r\n            const regExp = new RegExp(`(${escapeRegExp(query)}|${escapeRegExp(cleanSearchText(query))})`, 'gi');\r\n            dom.titleSpan.innerHTML = dom.titleSpan.innerHTML.replace(regExp, '<i>$1</i>');\r\n            dom.lastMessageSpan.append(appProfileManager.getChatMembersString(-peerId));\r\n          } else if(peerId === rootScope.myId) {\r\n            dom.lastMessageSpan.append(i18n('Presence.YourChat'));\r\n          } else {\r\n            let username = appPeersManager.getPeerUsername(peerId);\r\n            if(!username) {\r\n              const user = appUsersManager.getUser(peerId);\r\n              if(user && user.phone) {\r\n                username = '+' + formatPhoneNumber(user.phone).formatted;\r\n              }\r\n            } else {\r\n              username = '@' + username;\r\n            }\r\n  \r\n            dom.lastMessageSpan.innerHTML = '<i>' + username + '</i>';\r\n          }\r\n        });\r\n  \r\n        group.toggle();\r\n      };\r\n  \r\n      const onLoad = <T>(arg: T) => {\r\n        if(!middleware()) {\r\n          return;\r\n        }\r\n  \r\n        //this.loadedContacts = true;\r\n  \r\n        return arg;\r\n      };\r\n  \r\n      return Promise.all([\r\n        appUsersManager.getContacts(query, true)\r\n        .then(onLoad)\r\n        .then((contacts) => {\r\n          if(contacts) {\r\n            setResults(contacts, this.searchGroups.contacts, true);\r\n          }\r\n        }),\r\n  \r\n        appUsersManager.searchContacts(query, 20)\r\n        .then(onLoad)\r\n        .then((contacts) => {\r\n          if(contacts) {\r\n            setResults(contacts.my_results, this.searchGroups.contacts, true);\r\n            setResults(contacts.results/* .concat(contacts.results, contacts.results, contacts.results) */, this.searchGroups.globalContacts);\r\n\r\n            if(this.searchGroups.globalContacts.nameEl.lastElementChild) {\r\n              this.searchGroups.globalContacts.nameEl.lastElementChild.remove();\r\n            }\r\n\r\n            this.searchGroups.globalContacts.container.classList.add('is-short');\r\n            \r\n            if(this.searchGroups.globalContacts.list.childElementCount > 3) {\r\n              const showMore = document.createElement('div');\r\n              showMore.classList.add('search-group__show-more');\r\n              showMore.innerText = 'Show more';\r\n              this.searchGroups.globalContacts.nameEl.append(showMore);\r\n              showMore.addEventListener('click', () => {\r\n                const isShort = this.searchGroups.globalContacts.container.classList.toggle('is-short');\r\n                showMore.innerText = isShort ? 'Show more' : 'Show less';\r\n              });\r\n            }\r\n          }\r\n        }),\r\n  \r\n        appMessagesManager.getConversations(query, 0, 20, 0)\r\n        .then(onLoad)\r\n        .then(value => {\r\n          if(value) {\r\n            setResults(value.dialogs.map(d => d.peerId), this.searchGroups.contacts, true);\r\n          }\r\n        })\r\n      ]);\r\n    } else if(!this.searchContext.peerId && !this.searchContext.minDate) {\r\n      const renderRecentSearch = (setActive = true) => {\r\n        return appStateManager.getState().then(state => {\r\n          if(!middleware()) {\r\n            return;\r\n          }\r\n    \r\n          this.searchGroups.recent.list.innerHTML = '';\r\n    \r\n          state.recentSearch.slice(0, 20).forEach(peerId => {\r\n            let {dialog, dom} = appDialogsManager.addDialogNew({\r\n              dialog: peerId,\r\n              container: this.searchGroups.recent.list,\r\n              drawStatus: false,\r\n              meAsSaved: true,\r\n              avatarSize: 48,\r\n              autonomous: true\r\n            });\r\n    \r\n            dom.lastMessageSpan.append(peerId > 0 ? appUsersManager.getUserStatusString(peerId) : appProfileManager.getChatMembersString(-peerId));\r\n          });\r\n    \r\n          if(!state.recentSearch.length) {\r\n            this.searchGroups.recent.clear();\r\n          } else if(setActive) {\r\n            this.searchGroups.recent.setActive();\r\n          }\r\n        });\r\n      };\r\n\r\n      return Promise.all([\r\n        appUsersManager.getTopPeers().then(peers => {\r\n          if(!middleware()) return;\r\n\r\n          const idx = peers.indexOf(rootScope.myId);\r\n          if(idx !== -1) {\r\n            peers = peers.slice();\r\n            peers.splice(idx, 1);\r\n          }\r\n          //console.log('got top categories:', categories);\r\n          if(peers.length) {\r\n            peers.forEach((peerId) => {\r\n              appDialogsManager.addDialogNew({\r\n                dialog: peerId, \r\n                container: this.searchGroups.people.list, \r\n                drawStatus: false,\r\n                onlyFirstName: true,\r\n                avatarSize: 54,\r\n                autonomous: false\r\n              });\r\n            });\r\n          }\r\n    \r\n          this.searchGroups.people.setActive();\r\n        }),\r\n\r\n        renderRecentSearch()\r\n      ]);\r\n    } else return Promise.resolve();\r\n  }\r\n\r\n  private loadMembers(mediaTab: SearchSuperMediaTab) {\r\n    const id = -this.searchContext.peerId;\r\n    const middleware = this.middleware.get();\r\n    let promise: Promise<void>;\r\n\r\n    const renderParticipants = async(participants: (ChatParticipant | ChannelParticipant)[]) => {\r\n      if(this.loadMutex) {\r\n        await this.loadMutex;\r\n\r\n        if(!middleware()) {\r\n          return;\r\n        }\r\n      }\r\n      \r\n      if(!this.membersList) {\r\n        this.membersList = new SortedUserList();\r\n        this.membersList.lazyLoadQueue = this.lazyLoadQueue;\r\n        this.membersList.list.addEventListener('click', (e) => {\r\n          const li = findUpTag(e.target, 'LI');\r\n          if(!li) {\r\n            return;\r\n          }\r\n\r\n          const peerId = +li.dataset.peerId;\r\n          let promise: Promise<any> = Promise.resolve();\r\n          if(mediaSizes.isMobile) {\r\n            promise = appSidebarRight.toggleSidebar(false);\r\n          }\r\n          \r\n          promise.then(() => {\r\n            appImManager.setInnerPeer(peerId);\r\n          });\r\n        });\r\n        mediaTab.contentTab.append(this.membersList.list);\r\n        this.afterPerforming(1, mediaTab.contentTab);\r\n      }\r\n\r\n      participants.forEach(participant => {\r\n        const peerId = appChatsManager.getParticipantPeerId(participant);\r\n        if(peerId < 0) {\r\n          return;\r\n        }\r\n\r\n        const user = appUsersManager.getUser(peerId);\r\n        if(user.pFlags.deleted) {\r\n          return;\r\n        }\r\n\r\n        this.membersList.add(peerId);\r\n      });\r\n    };\r\n\r\n    if(appChatsManager.isChannel(id)) {\r\n      const LOAD_COUNT = !this.membersList ? 50 : 200;\r\n      promise = appProfileManager.getChannelParticipants(id, undefined, LOAD_COUNT, this.nextRates[mediaTab.inputFilter]).then(participants => {\r\n        if(!middleware()) {\r\n          return;\r\n        }\r\n\r\n        let list = mediaTab.contentTab.firstElementChild as HTMLUListElement;\r\n        this.nextRates[mediaTab.inputFilter] = (list ? list.childElementCount : 0) + participants.participants.length;\r\n\r\n        if(participants.participants.length < LOAD_COUNT) {\r\n          this.loaded[mediaTab.inputFilter] = true;\r\n        }\r\n\r\n        return renderParticipants(participants.participants);\r\n      });\r\n    } else {\r\n      promise = (appProfileManager.getChatFull(id) as Promise<ChatFull.chatFull>).then(chatFull => {\r\n        if(!middleware()) {\r\n          return;\r\n        }\r\n\r\n        //console.log('anymore', chatFull);\r\n        this.loaded[mediaTab.inputFilter] = true;\r\n        const participants = chatFull.participants;\r\n        if(participants._ === 'chatParticipantsForbidden') {\r\n          return;\r\n        }\r\n        \r\n        return renderParticipants(participants.participants);\r\n      });\r\n    }\r\n\r\n    return this.loadPromises[mediaTab.inputFilter] = promise.finally(() => { \r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n\r\n      this.loadPromises[mediaTab.inputFilter] = null;\r\n    });\r\n  }\r\n\r\n  private loadType(mediaTab: SearchSuperMediaTab, justLoad: boolean, loadCount: number, middleware: () => boolean) {\r\n    const type = mediaTab.inputFilter;\r\n\r\n    if(this.loadPromises[type]) {\r\n      return this.loadPromises[type];\r\n    }\r\n\r\n    if(mediaTab.type === 'members') {\r\n      return this.loadMembers(mediaTab);\r\n    }\r\n\r\n    const history = this.historyStorage[type] ?? (this.historyStorage[type] = []);\r\n\r\n    if(type === 'inputMessagesFilterEmpty' && !history.length) {\r\n      if(!this.loadedChats) {\r\n        this.loadChats();\r\n        this.loadedChats = true;\r\n      }\r\n\r\n      if(!this.searchContext.query.trim() && !this.searchContext.peerId && !this.searchContext.minDate) {\r\n        this.loaded[type] = true;\r\n        return Promise.resolve();\r\n      }\r\n    }\r\n\r\n    const logStr = 'load [' + type + ']: ';\r\n\r\n    // render from cache\r\n    if(history.length && this.usedFromHistory[type] < history.length && !justLoad) {\r\n      let messages: any[] = [];\r\n      let used = Math.max(0, this.usedFromHistory[type]);\r\n      let slicedLength = 0;\r\n\r\n      do {\r\n        let ids = history.slice(used, used + loadCount);\r\n        //this.log(logStr + 'will render from cache', used, history, ids, loadCount);\r\n        used += ids.length;\r\n        slicedLength += ids.length;\r\n\r\n        messages.push(...this.filterMessagesByType(ids.map(m => appMessagesManager.getMessageByPeer(m.peerId, m.mid)), type));\r\n      } while(slicedLength < loadCount && used < history.length);\r\n      \r\n      // если перебор\r\n      /* if(slicedLength > loadCount) {\r\n        let diff = messages.length - loadCount;\r\n        messages = messages.slice(0, messages.length - diff);\r\n        used -= diff;\r\n      } */\r\n\r\n      this.usedFromHistory[type] = used;\r\n      //if(messages.length) {\r\n        return this.performSearchResult(messages, mediaTab).finally(() => {\r\n          setTimeout(() => {\r\n            this.scrollable.checkForTriggers();\r\n          }, 0);\r\n        });\r\n      //}\r\n\r\n      return Promise.resolve();\r\n    }\r\n    \r\n    let maxId = history.length ? history[history.length - 1].mid : 0;\r\n    \r\n    //this.log(logStr + 'search house of glass pre', type, maxId);\r\n    \r\n    //let loadCount = history.length ? 50 : 15;\r\n    return this.loadPromises[type] = appMessagesManager.getSearch({\r\n      peerId: this.searchContext.peerId, \r\n      query: this.searchContext.query,\r\n      inputFilter: {_: type},\r\n      maxId, \r\n      limit: loadCount,\r\n      nextRate: this.nextRates[type] ?? (this.nextRates[type] = 0),\r\n      threadId: this.searchContext.threadId,\r\n      folderId: this.searchContext.folderId,\r\n      minDate: this.searchContext.minDate,\r\n      maxDate: this.searchContext.maxDate\r\n    }).then(value => {\r\n      history.push(...value.history.map(m => ({mid: m.mid, peerId: m.peerId})));\r\n      \r\n      this.log(logStr + 'search house of glass', type, value);\r\n\r\n      if(!middleware()) {\r\n        //this.log.warn('peer changed');\r\n        return;\r\n      }\r\n\r\n      // ! Фикс случая, когда не загружаются документы при открытой панели разработчиков (происходит из-за того, что не совпадают критерии отбора документов в getSearch)\r\n      if(value.history.length < loadCount) {\r\n      //if((value.count || history.length === value.count) && history.length >= value.count) {\r\n        //this.log(logStr + 'loaded all media', value, loadCount);\r\n        this.loaded[type] = true;\r\n      }\r\n\r\n      this.nextRates[type] = value.next_rate;\r\n\r\n      if(justLoad) {\r\n        return Promise.resolve();\r\n      }\r\n\r\n      this.usedFromHistory[type] = history.length;\r\n\r\n      if(!this.loaded[type]) {\r\n        (this.loadPromises[type] || Promise.resolve()).then(() => {\r\n          setTimeout(() => {\r\n            if(!middleware()) return;\r\n            //this.log('will preload more');\r\n            if(this.mediaTab === mediaTab) {\r\n              const promise = this.load(true, true);\r\n              if(promise) {\r\n                promise.then(() => {\r\n                  if(!middleware()) return;\r\n                  //this.log('preloaded more');\r\n                  setTimeout(() => {\r\n                    this.scrollable.checkForTriggers();\r\n                  }, 0);\r\n                });\r\n              }\r\n            }\r\n          }, 0);\r\n        });\r\n      }\r\n\r\n      //if(value.history.length) {\r\n        return this.performSearchResult(this.filterMessagesByType(value.history, type), mediaTab);\r\n      //}\r\n    }).catch(err => {\r\n      this.log.error('load error:', err);\r\n    }).finally(() => {\r\n      this.loadPromises[type] = null;\r\n    });\r\n  }\r\n  \r\n  public async load(single = false, justLoad = false) {\r\n    // if(testScroll/*  || 1 === 1 */) {\r\n    //   return;\r\n    // }\r\n\r\n    //return;\r\n    \r\n    const peerId = this.searchContext.peerId;\r\n    this.log('load', single, peerId, this.loadPromises);\r\n    const middleware = this.middleware.get();\r\n\r\n    if(this.firstLoad) {\r\n      if(this.hideEmptyTabs) {\r\n        const mediaTabs = this.mediaTabs.filter(mediaTab => mediaTab.inputFilter !== 'inputMessagesFilterEmpty')\r\n        const filters = mediaTabs.map(mediaTab => ({_: mediaTab.inputFilter}));\r\n\r\n        const counters = await appMessagesManager.getSearchCounters(peerId, filters);\r\n        if(!middleware()) {\r\n          return;\r\n        }\r\n\r\n        if(this.loadMutex) {\r\n          await this.loadMutex;\r\n\r\n          if(!middleware()) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        let firstMediaTab: SearchSuperMediaTab;\r\n        let count = 0;\r\n        mediaTabs.forEach(mediaTab => {\r\n          const counter = counters.find(c => c.filter._ === mediaTab.inputFilter);\r\n\r\n          mediaTab.menuTab.classList.toggle('hide', !counter.count);\r\n          mediaTab.menuTab.classList.remove('active');\r\n          //mediaTab.contentTab.classList.toggle('hide', !counter.count);\r\n\r\n          if(counter.count && firstMediaTab === undefined) {\r\n            firstMediaTab = mediaTab;\r\n          }\r\n\r\n          if(counter.count) ++count;\r\n        });\r\n\r\n        const membersTab = this.mediaTabsMap.get('members');\r\n        const canViewMembers = this.canViewMembers();\r\n        membersTab.menuTab.classList.toggle('hide', !canViewMembers);\r\n\r\n        if(canViewMembers) {\r\n          firstMediaTab = membersTab;\r\n        }\r\n\r\n        this.container.classList.toggle('hide', !firstMediaTab);\r\n        this.container.parentElement.classList.toggle('search-empty', !firstMediaTab);\r\n        if(firstMediaTab) {\r\n          this.skipScroll = true;\r\n          this.selectTab(this.mediaTabs.indexOf(firstMediaTab), false);\r\n          firstMediaTab.menuTab.classList.add('active');\r\n\r\n          this.navScrollableContainer.classList.toggle('hide', count <= 1);\r\n        }\r\n      }\r\n\r\n      this.firstLoad = false;\r\n    }\r\n    \r\n    let toLoad = single ? [this.mediaTab] : this.mediaTabs.filter(t => t !== this.mediaTab);\r\n    toLoad = toLoad.filter(mediaTab => {\r\n      const inputFilter = mediaTab.inputFilter;\r\n      return !this.loaded[inputFilter] || (this.historyStorage[inputFilter] && this.usedFromHistory[inputFilter] < this.historyStorage[inputFilter].length);\r\n    });\r\n\r\n    if(peerId > 0) {\r\n      toLoad.findAndSplice(mediaTab => mediaTab.type === 'members');\r\n    }\r\n\r\n    if(!toLoad.length) {\r\n      return;\r\n    }\r\n\r\n    const loadCount = justLoad ? 50 : Math.round((appPhotosManager.windowH / 130 | 0) * 3 * 1.25); // that's good for all types\r\n\r\n    const promises: Promise<any>[] = toLoad.map(mediaTab => {\r\n      return this.loadType(mediaTab, justLoad, loadCount, middleware)\r\n    });\r\n\r\n    return Promise.all(promises).catch(err => {\r\n      this.log.error('Load error all promises:', err);\r\n    });\r\n  }\r\n  \r\n  public getMonthContainerByTimestamp(timestamp: number, type: SearchSuperType) {\r\n    const date = new Date(timestamp * 1000);\r\n    date.setHours(0, 0, 0);\r\n    date.setDate(1);\r\n    const dateTimestamp = date.getTime();\r\n    const containers = this.monthContainers[type] ?? (this.monthContainers[type] = {});\r\n    if(!(dateTimestamp in containers)) {\r\n      const str = months[date.getMonth()] + ' ' + date.getFullYear();\r\n      \r\n      const container = document.createElement('div');\r\n      container.className = 'search-super-month';\r\n\r\n      const name = document.createElement('div');\r\n      name.classList.add('search-super-month-name');\r\n      name.innerText = str;\r\n      container.append(name);\r\n\r\n      const items = document.createElement('div');\r\n      items.classList.add('search-super-month-items');\r\n\r\n      container.append(name, items);\r\n\r\n      const haveTimestamps = getObjectKeysAndSort(containers, 'desc');\r\n      let i = 0;\r\n      for(; i < haveTimestamps.length; ++i) {\r\n        const t = haveTimestamps[i];\r\n        if(dateTimestamp > t) {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      containers[dateTimestamp] = {container, items};\r\n      positionElementByIndex(container, this.tabs[type], i);\r\n    }\r\n\r\n    return containers[dateTimestamp];\r\n  }\r\n\r\n  public canViewMembers() {\r\n    return this.searchContext.peerId < 0 && !appChatsManager.isBroadcast(-this.searchContext.peerId) && appChatsManager.hasRights(-this.searchContext.peerId, 'view_participants');\r\n  }\r\n\r\n  public cleanup() {\r\n    this.loadPromises = {};\r\n    this.loaded = {};\r\n    this.loadedChats = false;\r\n    this.nextRates = {};\r\n    this.firstLoad = true;\r\n\r\n    this.lazyLoadQueue.clear();\r\n\r\n    this.mediaTabs.forEach(mediaTab => {\r\n      this.usedFromHistory[mediaTab.inputFilter] = -1;\r\n    });\r\n\r\n    // * must go to first tab (это костыль)\r\n    /* const membersTab = this.mediaTabsMap.get('members');\r\n    if(membersTab) {\r\n      const tab = this.canViewMembers() ? membersTab : this.mediaTabs[this.mediaTabs.indexOf(membersTab) + 1];\r\n      this.mediaTab = tab;\r\n    } */\r\n\r\n    this.middleware.clean();\r\n    this.cleanScrollPositions();\r\n    this.membersList = undefined;\r\n  }\r\n\r\n  public cleanScrollPositions() {\r\n    this.mediaTabs.forEach(mediaTab => {\r\n      mediaTab.scroll = undefined;\r\n    });\r\n  }\r\n\r\n  public cleanupHTML(goFirst = false) {\r\n    if(this.urlsToRevoke.length) {\r\n      this.urlsToRevoke.forEach(url => {\r\n        URL.revokeObjectURL(url);\r\n      });\r\n      this.urlsToRevoke.length = 0;\r\n    }\r\n\r\n    this.mediaTabs.forEach((tab) => {\r\n      tab.contentTab.innerHTML = '';\r\n\r\n      if(this.hideEmptyTabs) {\r\n        //tab.menuTab.classList.add('hide');\r\n        this.container.classList.add('hide');\r\n        this.container.parentElement.classList.add('search-empty');\r\n      }\r\n\r\n      if(tab.type === 'chats') {\r\n        return;\r\n      }\r\n      \r\n      if(!this.historyStorage[tab.inputFilter]) {\r\n        const parent = tab.contentTab.parentElement;\r\n        //if(!testScroll) {\r\n          if(!parent.querySelector('.preloader')) {\r\n            putPreloader(parent, true);\r\n          }\r\n        //}\r\n\r\n        const empty = parent.querySelector('.content-empty');\r\n        if(empty) {\r\n          empty.remove();\r\n        }\r\n      }\r\n    });\r\n\r\n    /* if(goFirst) {\r\n      const membersTab = this.mediaTabsMap.get('members');\r\n      if(membersTab) {\r\n        let idx = this.canViewMembers() ? 0 : 1;\r\n        membersTab.menuTab.classList.toggle('hide', idx !== 0);\r\n\r\n        this.selectTab(idx, false);\r\n      } else {\r\n        this.selectTab(0, false);\r\n      }\r\n    } */\r\n\r\n    this.monthContainers = {};\r\n    this.searchGroupMedia.clear();\r\n    this.scrollable.scrollTop = 0;\r\n\r\n    /* if(testScroll) {\r\n      for(let i = 0; i < 1500; ++i) {\r\n        let div = document.createElement('div');\r\n        div.insertAdjacentHTML('beforeend', `<img class=\"media-image\" src=\"assets/img/camomile.jpg\">`);\r\n        div.classList.add('grid-item');\r\n        div.dataset.id = '' + (i / 3 | 0);\r\n        //div.innerText = '' + (i / 3 | 0);\r\n        this.tabs.inputMessagesFilterPhotoVideo.append(div);\r\n      }\r\n    } */\r\n  }\r\n\r\n  private copySearchContext(newInputFilter: MyInputMessagesFilter) {\r\n    const context = copy(this.searchContext);\r\n    context.inputFilter = newInputFilter;\r\n    context.nextRate = this.nextRates[newInputFilter];\r\n    return context;\r\n  }\r\n\r\n  public setQuery({peerId, query, threadId, historyStorage, folderId, minDate, maxDate}: {\r\n    peerId: number, \r\n    query?: string, \r\n    threadId?: number, \r\n    historyStorage?: AppSearchSuper['historyStorage'], \r\n    folderId?: number,\r\n    minDate?: number,\r\n    maxDate?: number\r\n  }) {\r\n    this.searchContext = {\r\n      peerId: peerId || 0,\r\n      query: query || '',\r\n      inputFilter: this.mediaTab.inputFilter,\r\n      threadId,\r\n      folderId,\r\n      minDate,\r\n      maxDate\r\n    };\r\n    \r\n    this.historyStorage = historyStorage ?? {};\r\n\r\n    this.cleanup();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { AttachClickOptions, attachClickEvent, CLICK_EVENT_NAME } from \"../helpers/dom/clickEvent\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport CheckboxField from \"./checkboxField\";\r\nimport { closeBtnMenu } from \"./misc\";\r\nimport { ripple } from \"./ripple\";\r\n\r\nexport type ButtonMenuItemOptions = {\r\n  icon: string, \r\n  text: LangPackKey, \r\n  onClick: (e: MouseEvent | TouchEvent) => void, \r\n  element?: HTMLElement,\r\n  options?: AttachClickOptions,\r\n  checkboxField?: CheckboxField,\r\n  keepOpen?: boolean\r\n  /* , cancelEvent?: true */\r\n};\r\n\r\nconst ButtonMenuItem = (options: ButtonMenuItemOptions) => {\r\n  if(options.element) return options.element;\r\n\r\n  const {icon, text, onClick} = options;\r\n  const el = document.createElement('div');\r\n  el.className = 'btn-menu-item tgico-' + icon;\r\n  ripple(el);\r\n  const t = i18n(text);\r\n  t.classList.add('btn-menu-item-text');\r\n  el.append(t);\r\n\r\n  if(options.checkboxField) {\r\n    el.append(options.checkboxField.label);\r\n    attachClickEvent(el, () => {\r\n      options.checkboxField.checked = !options.checkboxField.checked;\r\n    }, options.options);\r\n  }\r\n\r\n  const keepOpen = !!options.checkboxField || !!options.keepOpen;\r\n\r\n  // * cancel mobile keyboard close\r\n  attachClickEvent(el, CLICK_EVENT_NAME !== 'click' || keepOpen ? (e) => {\r\n    cancelEvent(e);\r\n    onClick(e);\r\n\r\n    if(!keepOpen) {\r\n      closeBtnMenu();\r\n    }\r\n  } : onClick, options.options);\r\n\r\n  return options.element = el;\r\n};\r\n\r\nconst ButtonMenu = (buttons: ButtonMenuItemOptions[], listenerSetter?: ListenerSetter) => {\r\n  const el = document.createElement('div');\r\n  el.classList.add('btn-menu');\r\n\r\n  if(listenerSetter) {\r\n    buttons.forEach(b => {\r\n      if(b.options) {\r\n        b.options.listenerSetter = listenerSetter;\r\n      } else {\r\n        b.options = {listenerSetter};\r\n      }\r\n    });\r\n  }\r\n\r\n  const items = buttons.map(ButtonMenuItem);\r\n\r\n  el.append(...items);\r\n\r\n  return el;\r\n};\r\n\r\nexport default ButtonMenu;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { AttachClickOptions, CLICK_EVENT_NAME } from \"../helpers/dom/clickEvent\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport ButtonIcon from \"./buttonIcon\";\r\nimport ButtonMenu, { ButtonMenuItemOptions } from \"./buttonMenu\";\r\nimport { closeBtnMenu, openBtnMenu } from \"./misc\";\r\n\r\nconst ButtonMenuToggle = (options: Partial<{noRipple: true, onlyMobile: true, listenerSetter: ListenerSetter, asDiv: boolean}> = {}, direction: 'bottom-left' | 'bottom-right' | 'top-left' | 'top-right', buttons: ButtonMenuItemOptions[], onOpen?: (e: Event) => void) => {\r\n  options.asDiv = true;\r\n  const button = ButtonIcon('more btn-menu-toggle', options);\r\n\r\n  const btnMenu = ButtonMenu(buttons, options.listenerSetter);\r\n  btnMenu.classList.add(direction);\r\n  ButtonMenuToggleHandler(button, onOpen, options);\r\n  button.append(btnMenu);\r\n  return button;\r\n};\r\n\r\n// TODO: refactor for attachClickEvent, because if move finger after touchstart, it will start anyway\r\nconst ButtonMenuToggleHandler = (el: HTMLElement, onOpen?: (e: Event) => void, options?: AttachClickOptions) => {\r\n  const add = options?.listenerSetter ? options.listenerSetter.add.bind(options.listenerSetter, el) : el.addEventListener.bind(el);\r\n\r\n  //console.trace('ButtonMenuToggleHandler attach', el, onOpen, options);\r\n  add(CLICK_EVENT_NAME, (e: Event) => {\r\n    //console.log('ButtonMenuToggleHandler click', e);\r\n    if(!el.classList.contains('btn-menu-toggle')) return false;\r\n\r\n    //window.removeEventListener('mousemove', onMouseMove);\r\n    const openedMenu = el.querySelector('.btn-menu') as HTMLDivElement;\r\n    cancelEvent(e);\r\n\r\n    if(el.classList.contains('menu-open')) {\r\n      closeBtnMenu();\r\n    } else {\r\n      onOpen && onOpen(e);\r\n      openBtnMenu(openedMenu);\r\n    }\r\n  });\r\n};\r\n\r\nexport { ButtonMenuToggleHandler };\r\nexport default ButtonMenuToggle;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { InputPrivacyKey, InputPrivacyRule, PrivacyRule, Update, PrivacyKey } from \"../../layer\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport appChatsManager from \"./appChatsManager\";\r\nimport appUsersManager from \"./appUsersManager\";\r\nimport apiUpdatesManager from \"./apiUpdatesManager\";\r\nimport rootScope from \"../rootScope\";\r\nimport { convertInputKeyToKey } from \"../../helpers/string\";\r\n\r\nexport enum PrivacyType {\r\n  Everybody = 2,\r\n  Contacts = 1,\r\n  Nobody = 0\r\n}\r\n\r\nexport class AppPrivacyManager {\r\n  private privacy: Partial<{\r\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\r\n  }> = {};\r\n\r\n  constructor() {\r\n    rootScope.addMultipleEventsListeners({\r\n      updatePrivacy: (update) => {\r\n        const key = update.key._;\r\n        this.privacy[key] = update.rules;\r\n        rootScope.dispatchEvent('privacy_update', update);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\r\n    return apiManager.invokeApi('account.setPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      },\r\n      rules\r\n    }).then(privacyRules => {\r\n      appUsersManager.saveApiUsers(privacyRules.users);\r\n      appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      apiUpdatesManager.processUpdateMessage({\r\n        _: 'updateShort',\r\n        update: {\r\n          _: 'updatePrivacy',\r\n          key: {\r\n            _: convertInputKeyToKey(inputKey)\r\n          },\r\n          rules: rules.map(inputRule => {\r\n            const rule: PrivacyRule = {} as any;\r\n            Object.assign(rule, inputRule);\r\n            rule._ = convertInputKeyToKey(rule._) as any;\r\n            return rule;\r\n          })\r\n        } as Update.updatePrivacy\r\n      });\r\n\r\n      //console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\r\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\r\n    const rules = this.privacy[privacyKey];\r\n    if(rules) {\r\n      return Promise.resolve(rules);\r\n    }\r\n    \r\n    return this.privacy[privacyKey] = apiManager.invokeApi('account.getPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      }\r\n    }).then(privacyRules => {\r\n      appUsersManager.saveApiUsers(privacyRules.users);\r\n      appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      //console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return this.privacy[privacyKey] = privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getPrivacyRulesDetails(rules: PrivacyRule[]) {\r\n    const types: PrivacyType[] = [];\r\n\r\n    type peers = {users: number[], chats: number[]};\r\n    let allowPeers: peers = {users: [], chats: []}, disallowPeers: peers = {users: [], chats: []};\r\n    rules.forEach(rule => {\r\n      switch(rule._) {\r\n        case 'privacyValueAllowAll':\r\n          types.push(2);\r\n          break;\r\n        case 'privacyValueDisallowAll':\r\n          types.push(0);\r\n          break;\r\n        case 'privacyValueAllowContacts': \r\n          types.push(1);\r\n          break;\r\n        /* case 'privacyValueDisallowContacts':\r\n          types.push('Except My Contacts');\r\n          break; */\r\n        case 'privacyValueAllowChatParticipants':\r\n          allowPeers.chats.push(...rule.chats);\r\n          break;\r\n        case 'privacyValueAllowUsers':\r\n          allowPeers.users.push(...rule.users);\r\n          break;\r\n        case 'privacyValueDisallowChatParticipants':\r\n          disallowPeers.chats.push(...rule.chats);\r\n          break;\r\n        case 'privacyValueDisallowUsers':\r\n          disallowPeers.users.push(...rule.users);\r\n          break;\r\n      }\r\n    });\r\n\r\n    return {type: types[0], disallowPeers, allowPeers};\r\n  }\r\n}\r\n\r\nconst appPrivacyManager = new AppPrivacyManager();\r\nMOUNT_CLASS_TO.appPrivacyManager = appPrivacyManager;\r\nexport default appPrivacyManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { randomLong } from \"../helpers/random\";\r\nimport { InputPrivacyKey, InputPrivacyRule } from \"../layer\";\r\nimport appPrivacyManager, { PrivacyType } from \"../lib/appManagers/appPrivacyManager\";\r\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\r\nimport { i18n, join, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RadioField from \"./radioField\";\r\nimport Row, { RadioFormFromRows } from \"./row\";\r\nimport Scrollable from \"./scrollable\";\r\nimport { SettingSection, generateSection } from \"./sidebarLeft\";\r\nimport AppAddMembersTab from \"./sidebarLeft/tabs/addMembers\";\r\nimport { SliderSuperTabEventable } from \"./sliderTab\";\r\n\r\ntype PrivacySectionStr = LangPackKey | '';\r\nexport default class PrivacySection {\r\n  public radioRows: Map<PrivacyType, Row>;\r\n  public radioSection: SettingSection;\r\n  public exceptions: Map<keyof PrivacySection['peerIds'], {\r\n    titleLangKey: LangPackKey,\r\n    key: keyof PrivacySection['peerIds'],\r\n    row: Row,\r\n    icon: string,\r\n    subtitleLangKey: LangPackKey,\r\n    clickable: true\r\n  }>;\r\n  public peerIds: {\r\n    disallow?: number[],\r\n    allow?: number[]\r\n  };\r\n  public type: PrivacyType;\r\n\r\n  constructor(public options: {\r\n    tab: SliderSuperTabEventable,\r\n    title: LangPackKey, \r\n    inputKey: InputPrivacyKey['_'], \r\n    captions?: [PrivacySectionStr, PrivacySectionStr, PrivacySectionStr],\r\n    appendTo?: Scrollable,\r\n    noExceptions?: boolean,\r\n    onRadioChange?: (value: number) => any,\r\n    skipTypes?: PrivacyType[],\r\n    exceptionTexts?: [LangPackKey, LangPackKey]\r\n  }) {\r\n    if(options.captions) {\r\n      options.captions.reverse();\r\n    }\r\n\r\n    this.radioSection = new SettingSection({name: options.title, caption: true});\r\n\r\n    this.radioRows = new Map();\r\n\r\n    let r: Array<{type: PrivacyType, langKey: LangPackKey}> = [{\r\n      type: PrivacyType.Everybody,\r\n      langKey: 'PrivacySettingsController.Everbody'\r\n    }, {\r\n      type: PrivacyType.Contacts,\r\n      langKey: 'PrivacySettingsController.MyContacts'\r\n    }, {\r\n      type: PrivacyType.Nobody,\r\n      langKey: 'PrivacySettingsController.Nobody'\r\n    }];\r\n\r\n    if(options.skipTypes) {\r\n      r = r.filter(r => !options.skipTypes.includes(r.type));\r\n    }\r\n    \r\n    const random = randomLong();\r\n    r.forEach(({type, langKey}) => {\r\n      const row = new Row({\r\n        radioField: new RadioField({\r\n          langKey, \r\n          name: random, \r\n          value: '' + type\r\n        })\r\n      });\r\n      \r\n      this.radioRows.set(type, row);\r\n    });\r\n\r\n    const form = RadioFormFromRows([...this.radioRows.values()], this.onRadioChange);\r\n\r\n    this.radioSection.content.append(form);\r\n    if(options.appendTo) {\r\n      options.appendTo.append(this.radioSection.container);\r\n    }\r\n\r\n    if(!options.noExceptions) {\r\n      const container = generateSection(options.appendTo, 'PrivacyExceptions', 'PrivacySettingsController.PeerInfo');\r\n\r\n      this.exceptions = new Map([[\r\n        'disallow', \r\n        {\r\n          titleLangKey: options.exceptionTexts[0],\r\n          key: 'disallow',\r\n          row: null,\r\n          icon: 'deleteuser',\r\n          subtitleLangKey: 'PrivacySettingsController.AddUsers',\r\n          clickable: true\r\n        }\r\n      ], [\r\n        'allow', \r\n        {\r\n          titleLangKey: options.exceptionTexts[1],\r\n          key: 'allow',\r\n          row: null,\r\n          icon: 'adduser',\r\n          subtitleLangKey: 'PrivacySettingsController.AddUsers',\r\n          clickable: true\r\n        }\r\n      ]]);\r\n\r\n      this.exceptions.forEach((exception) => {\r\n        exception.row = new Row(exception);\r\n\r\n        exception.row.container.addEventListener('click', () => {\r\n          promise.then(() => {\r\n            const _peerIds = this.peerIds[exception.key];\r\n            new AppAddMembersTab(options.tab.slider).open({\r\n              type: 'privacy',\r\n              skippable: true,\r\n              title: exception.titleLangKey,\r\n              placeholder: 'PrivacyModal.Search.Placeholder',\r\n              takeOut: (newPeerIds) => {\r\n                _peerIds.length = 0;\r\n                _peerIds.push(...newPeerIds);\r\n                exception.row.subtitle.innerHTML = '';\r\n                exception.row.subtitle.append(...this.generateStr(this.splitPeersByType(newPeerIds)));\r\n              },\r\n              selectedPeerIds: _peerIds\r\n            });\r\n          });\r\n        });\r\n\r\n        container.append(exception.row.container);\r\n      });\r\n    }\r\n\r\n    /* setTimeout(() => {\r\n      this.setRadio(PrivacyType.Contacts);\r\n    }, 0); */\r\n\r\n    const promise = appPrivacyManager.getPrivacy(options.inputKey).then(rules => {\r\n      const details = appPrivacyManager.getPrivacyRulesDetails(rules);\r\n      this.setRadio(details.type);\r\n\r\n      if(this.exceptions) {\r\n        this.peerIds = {};\r\n        (['allow', 'disallow'] as ('allow' | 'disallow')[]).forEach(k => {\r\n          const arr = [];\r\n          const from = k === 'allow' ? details.allowPeers : details.disallowPeers;\r\n          arr.push(...from.users);\r\n          arr.push(...from.chats.map(id => -id));\r\n          this.peerIds[k] = arr;\r\n          const s = this.exceptions.get(k).row.subtitle;\r\n          s.innerHTML = '';\r\n          s.append(...this.generateStr(from));\r\n        });\r\n      }\r\n\r\n      options.tab.eventListener.addEventListener('destroy', () => {\r\n        const rules: InputPrivacyRule[] = [];\r\n\r\n        switch(this.type) {\r\n          case PrivacyType.Everybody:\r\n            rules.push({_: 'inputPrivacyValueAllowAll'});\r\n            break;\r\n          case PrivacyType.Contacts:\r\n            rules.push({_: 'inputPrivacyValueAllowContacts'});\r\n            break;\r\n          case PrivacyType.Nobody:\r\n            rules.push({_: 'inputPrivacyValueDisallowAll'});\r\n            break;\r\n        }\r\n\r\n        if(this.exceptions) {\r\n          ([\r\n            ['allow',     'inputPrivacyValueAllowChatParticipants',     'inputPrivacyValueAllowUsers'],\r\n            ['disallow',  'inputPrivacyValueDisallowChatParticipants',  'inputPrivacyValueDisallowUsers']\r\n          ] as Array<[\r\n            'allow' | 'disallow', \r\n            'inputPrivacyValueAllowChatParticipants' | 'inputPrivacyValueDisallowChatParticipants', \r\n            'inputPrivacyValueAllowUsers' | 'inputPrivacyValueDisallowUsers'\r\n          ]>).forEach(([k, chatKey, usersKey], idx) => {\r\n            if(this.exceptions.get(k).row.container.classList.contains('hide')) {\r\n              return;\r\n            }\r\n\r\n            const _peerIds: number[] = this.peerIds[k];\r\n            \r\n            if(_peerIds) {\r\n              const splitted = this.splitPeersByType(_peerIds);\r\n              if(splitted.chats.length) {\r\n                rules.push({_: chatKey, chats: splitted.chats.map(peerId => -peerId)});\r\n              }\r\n  \r\n              if(splitted.users.length) {\r\n                rules.push({_: usersKey, users: splitted.users.map(id => appUsersManager.getUserInput(id))});\r\n              }\r\n            }\r\n          });\r\n        }\r\n        \r\n        appPrivacyManager.setPrivacy(options.inputKey, rules);\r\n      }, true);\r\n    });\r\n  }\r\n\r\n  private onRadioChange = (value: string | PrivacySection['type']) => {\r\n    value = +value as PrivacySection['type'];\r\n    this.type = value;\r\n\r\n    const caption = this.options.captions[this.type];\r\n    const captionElement = this.radioSection.caption;\r\n    if(!caption) {\r\n      captionElement.innerHTML = '';\r\n    } else {\r\n      _i18n(captionElement, caption);\r\n    }\r\n    captionElement.classList.toggle('hide', !caption);\r\n\r\n    if(this.exceptions) {\r\n      this.exceptions.get('allow').row.container.classList.toggle('hide', this.type === PrivacyType.Everybody);\r\n      this.exceptions.get('disallow').row.container.classList.toggle('hide', this.type === PrivacyType.Nobody);\r\n    }\r\n\r\n    this.options.onRadioChange && this.options.onRadioChange(value);\r\n  };\r\n\r\n  public setRadio(type: PrivacySection['type']) {\r\n    const row = this.radioRows.get(type);\r\n    this.onRadioChange(type);\r\n    row.radioField.input.checked = true;\r\n  }\r\n  \r\n  private splitPeersByType(peerIds: number[]) {\r\n    const peers = {users: [] as number[], chats: [] as number[]};\r\n    peerIds.forEach(peerId => {\r\n      peers[peerId < 0 ? 'chats' : 'users'].push(peerId < 0 ? -peerId : peerId);\r\n    });\r\n\r\n    return peers;\r\n  }\r\n\r\n  private generateStr(peers: {users: number[], chats: number[]}): HTMLElement[] {\r\n    if(!peers.users.length && !peers.chats.length) {\r\n      return [i18n('PrivacySettingsController.AddUsers')];\r\n    }\r\n\r\n    return join([\r\n      peers.users.length ? i18n('Users', [peers.users.length]) : null, \r\n      peers.chats.length ? i18n('Chats', [peers.chats.length]) : null\r\n    ].filter(Boolean), false);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { PrivacyType } from \"../../../../lib/appManagers/appPrivacyManager\";\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\n\r\nexport default class AppPrivacyPhoneNumberTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.container.classList.add('privacy-tab', 'privacy-phone-number');\r\n    this.setTitle('PrivacyPhone');\r\n\r\n    const phoneCaption: LangPackKey = 'PrivacyPhoneInfo';\r\n    const phoneSection = new PrivacySection({\r\n      tab: this,\r\n      title: 'PrivacyPhoneTitle',\r\n      inputKey: 'inputPrivacyKeyPhoneNumber',\r\n      captions: [phoneCaption, phoneCaption, ''],\r\n      exceptionTexts: ['PrivacySettingsController.NeverShare', 'PrivacySettingsController.AlwaysShare'],\r\n      appendTo: this.scrollable,\r\n      onRadioChange: (type) => {\r\n        s.setRadio(PrivacyType.Everybody);\r\n        s.radioSection.container.classList.toggle('hide', type !== PrivacyType.Nobody);\r\n      }\r\n    });\r\n\r\n    const sCaption: LangPackKey = 'PrivacyPhoneInfo3';\r\n    const s = new PrivacySection({\r\n      tab: this,\r\n      title: 'PrivacyPhoneTitle2',\r\n      inputKey: 'inputPrivacyKeyAddedByPhone',\r\n      captions: [sCaption, sCaption, ''],\r\n      noExceptions: true,\r\n      skipTypes: [PrivacyType.Nobody]\r\n    });\r\n\r\n    this.scrollable.container.insertBefore(s.radioSection.container, phoneSection.radioSection.container.nextSibling);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\nimport appStickersManager from \"../../../../lib/appManagers/appStickersManager\";\r\nimport Button from \"../../../button\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport { wrapSticker } from \"../../../wrappers\";\r\nimport AppSettingsTab from \"../settings\";\r\n\r\nexport default class AppTwoStepVerificationSetTab extends SliderSuperTab {\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-set');\r\n    this.setTitle('TwoStepVerificationPasswordSet');\r\n\r\n    const section = new SettingSection({\r\n      caption: 'TwoStepVerificationPasswordSetInfo',\r\n      noDelimiter: true\r\n    });\r\n\r\n    const emoji = '🥳';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: true,\r\n        play: true,\r\n        width: 160,\r\n        height: 160\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    section.content.append(stickerContainer);\r\n\r\n    const inputContent = section.generateContentElement();\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const btnReturn = Button('btn-primary btn-color-primary', {text: 'TwoStepVerificationPasswordReturnSettings'});\r\n\r\n    attachClickEvent(btnReturn, (e) => {\r\n      this.close();\r\n    });\r\n\r\n    this.slider.sliceTabsUntilTab(AppSettingsTab, this);\r\n\r\n    inputWrapper.append(btnReturn);\r\n\r\n    inputContent.append(inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { isMobileSafari } from \"../userAgent\";\r\n\r\nexport function canFocus(isFirstInput: boolean) {\r\n  return !isMobileSafari || !isFirstInput;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport appStickersManager from \"../../../../lib/appManagers/appStickersManager\";\r\nimport Button from \"../../../button\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport { wrapSticker } from \"../../../wrappers\";\r\nimport passwordManager from \"../../../../lib/mtproto/passwordManager\";\r\nimport AppTwoStepVerificationSetTab from \"./passwordSet\";\r\nimport CodeInputField from \"../../../codeInputField\";\r\nimport AppTwoStepVerificationEmailTab from \"./email\";\r\nimport { putPreloader } from \"../../../misc\";\r\nimport { i18n, _i18n } from \"../../../../lib/langPack\";\r\nimport { canFocus } from \"../../../../helpers/dom/canFocus\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../../../../helpers/dom/replaceContent\";\r\nimport toggleDisability from \"../../../../helpers/dom/toggleDisability\";\r\n\r\nexport default class AppTwoStepVerificationEmailConfirmationTab extends SliderSuperTab {\r\n  public codeInputField: CodeInputField;\r\n  public state: AccountPassword;\r\n  public email: string;\r\n  public length: number;\r\n  public isFirst = false;\r\n\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-email-confirmation');\r\n    this.setTitle('TwoStepAuth.RecoveryTitle');\r\n\r\n    const section = new SettingSection({\r\n      caption: true,\r\n      noDelimiter: true\r\n    });\r\n\r\n    _i18n(section.caption, 'TwoStepAuth.ConfirmEmailCodeDesc', [this.email]);\r\n\r\n    const emoji = '📬';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: false,\r\n        play: true,\r\n        width: 160,\r\n        height: 160,\r\n        emoji\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    section.content.append(stickerContainer);\r\n\r\n    const inputContent = section.generateContentElement();\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const inputField = this.codeInputField = new CodeInputField({\r\n      name: 'recovery-email-code',\r\n      label: 'TwoStepAuth.RecoveryCode',\r\n      length: this.length,\r\n      onFill: (code) => {\r\n        freeze(true);\r\n        \r\n        passwordManager.confirmPasswordEmail('' + code)\r\n        .then(value => {\r\n          if(!value) {\r\n\r\n          }\r\n\r\n          goNext();\r\n        })\r\n        .catch(err => {\r\n          switch(err.type) {\r\n            case 'CODE_INVALID':\r\n              inputField.input.classList.add('error');\r\n              replaceContent(inputField.label, i18n('TwoStepAuth.RecoveryCodeInvalid'));\r\n              break;\r\n\r\n            case 'EMAIL_HASH_EXPIRED':\r\n              inputField.input.classList.add('error');\r\n              replaceContent(inputField.label, i18n('TwoStepAuth.RecoveryCodeExpired'));\r\n              break;\r\n            \r\n            default:\r\n              console.error('confirm error', err);\r\n              break;\r\n          }\r\n\r\n          freeze(false);\r\n        });\r\n      }\r\n    });\r\n\r\n    const btnChange = Button('btn-primary btn-primary-transparent primary', {text: 'TwoStepAuth.EmailCodeChangeEmail'});\r\n    const btnResend = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'ResendCode'});\r\n\r\n    const goNext = () => {\r\n      new AppTwoStepVerificationSetTab(this.slider).open();\r\n    };\r\n\r\n    const freeze = (disable: boolean) => {\r\n      toggleDisability([inputField.input, btnChange, btnResend], disable);\r\n    };\r\n\r\n    attachClickEvent(btnChange, (e) => {\r\n      freeze(true);\r\n      passwordManager.cancelPasswordEmail().then(value => {\r\n        this.slider.sliceTabsUntilTab(AppTwoStepVerificationEmailTab, this);\r\n        this.close();\r\n      }, () => {\r\n        freeze(false);\r\n      });\r\n    });\r\n\r\n    attachClickEvent(btnResend, (e) => {\r\n      freeze(true);\r\n      const d = putPreloader(btnResend);\r\n      passwordManager.resendPasswordEmail().then(value => {\r\n        d.remove();\r\n        freeze(false);\r\n      });\r\n    });\r\n\r\n    inputWrapper.append(inputField.container, btnChange, btnResend);\r\n\r\n    inputContent.append(inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    if(!canFocus(this.isFirst)) return;\r\n    this.codeInputField.input.focus();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport appStickersManager from \"../../../../lib/appManagers/appStickersManager\";\r\nimport Button from \"../../../button\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport { wrapSticker } from \"../../../wrappers\";\r\nimport InputField from \"../../../inputField\";\r\nimport { putPreloader } from \"../../../misc\";\r\nimport passwordManager from \"../../../../lib/mtproto/passwordManager\";\r\nimport AppTwoStepVerificationSetTab from \"./passwordSet\";\r\nimport AppTwoStepVerificationEmailConfirmationTab from \"./emailConfirmation\";\r\nimport RichTextProcessor from \"../../../../lib/richtextprocessor\";\r\nimport PopupPeer from \"../../../popups/peer\";\r\nimport { cancelEvent } from \"../../../../helpers/dom/cancelEvent\";\r\nimport { canFocus } from \"../../../../helpers/dom/canFocus\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\n\r\nexport default class AppTwoStepVerificationEmailTab extends SliderSuperTab {\r\n  public inputField: InputField;\r\n  public state: AccountPassword;\r\n  public plainPassword: string;\r\n  public newPassword: string;\r\n  public hint: string;\r\n  public isFirst = false;\r\n\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-email');\r\n    this.setTitle('RecoveryEmailTitle');\r\n\r\n    const section = new SettingSection({\r\n      caption: true,\r\n      noDelimiter: true\r\n    });\r\n\r\n    const emoji = '💌';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: false,\r\n        play: true,\r\n        width: 160,\r\n        height: 160,\r\n        emoji\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    section.content.append(stickerContainer);\r\n\r\n    const inputContent = section.generateContentElement();\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const inputField = this.inputField = new InputField({\r\n      name: 'recovery-email',\r\n      label: 'RecoveryEmail',\r\n      plainText: true\r\n    });\r\n\r\n    inputField.input.addEventListener('keypress', (e) => {\r\n      if(e.key === 'Enter') {\r\n        cancelEvent(e);\r\n        return onContinueClick();\r\n      }\r\n    });\r\n\r\n    inputField.input.addEventListener('input', (e) => {\r\n      inputField.input.classList.remove('error');\r\n    });\r\n\r\n    const btnContinue = Button('btn-primary btn-color-primary', {text: 'Continue'});\r\n    const btnSkip = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'YourEmailSkip'});\r\n\r\n    const goNext = () => {\r\n      new AppTwoStepVerificationSetTab(this.slider).open();\r\n    };\r\n\r\n    const onContinueClick = () => {\r\n      const email = inputField.value.trim();\r\n      const match = RichTextProcessor.matchEmail(email);\r\n      if(!match || match[0].length !== email.length) {\r\n        inputField.input.classList.add('error');\r\n        return;\r\n      }\r\n\r\n      toggleButtons(true);\r\n      const d = putPreloader(btnContinue);\r\n\r\n      passwordManager.updateSettings({\r\n        hint: this.hint,\r\n        currentPassword: this.plainPassword,\r\n        newPassword: this.newPassword,\r\n        email\r\n      }).then((value) => {\r\n        goNext();\r\n      }, (err) => {\r\n        if(err.type.includes('EMAIL_UNCONFIRMED')) {\r\n          const symbols = +err.type.match(/^EMAIL_UNCONFIRMED_(\\d+)/)[1];\r\n\r\n          const tab = new AppTwoStepVerificationEmailConfirmationTab(this.slider);\r\n          tab.state = this.state;\r\n          tab.email = email;\r\n          tab.length = symbols;\r\n          tab.open();\r\n        } else {\r\n          console.log('password set error', err);\r\n        }\r\n\r\n        toggleButtons(false);\r\n        d.remove();\r\n      });\r\n    };\r\n    attachClickEvent(btnContinue, onContinueClick);\r\n\r\n    const toggleButtons = (freeze: boolean) => {\r\n      if(freeze) {\r\n        btnContinue.setAttribute('disabled', 'true');\r\n        btnSkip.setAttribute('disabled', 'true');\r\n      } else {\r\n        btnContinue.removeAttribute('disabled');\r\n        btnSkip.removeAttribute('disabled');\r\n      }\r\n    };\r\n\r\n    attachClickEvent(btnSkip, (e) => {\r\n      const popup = new PopupPeer('popup-skip-email', {\r\n        buttons: [{\r\n          langKey: 'Cancel',\r\n          isCancel: true\r\n        }, {\r\n          langKey: 'YourEmailSkip',\r\n          callback: () => {\r\n            //inputContent.classList.add('sidebar-left-section-disabled');\r\n            toggleButtons(true);\r\n            putPreloader(btnSkip);\r\n            passwordManager.updateSettings({\r\n              hint: this.hint, \r\n              currentPassword: this.plainPassword,\r\n              newPassword: this.newPassword,\r\n              email: ''\r\n            }).then(() => {\r\n              goNext();\r\n            }, (err) => {\r\n              toggleButtons(false);\r\n            });\r\n          },\r\n          isDanger: true,\r\n        }], \r\n        titleLangKey: 'YourEmailSkipWarning',\r\n        descriptionLangKey: 'YourEmailSkipWarningText'\r\n      });\r\n\r\n      popup.show();\r\n    });\r\n\r\n    inputWrapper.append(inputField.container, btnContinue, btnSkip);\r\n\r\n    inputContent.append(inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    if(!canFocus(this.isFirst)) return;\r\n    this.inputField.input.focus();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport appStickersManager from \"../../../../lib/appManagers/appStickersManager\";\r\nimport Button from \"../../../button\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport { wrapSticker } from \"../../../wrappers\";\r\nimport InputField from \"../../../inputField\";\r\nimport AppTwoStepVerificationEmailTab from \"./email\";\r\nimport { toast } from \"../../../toast\";\r\nimport I18n from \"../../../../lib/langPack\";\r\nimport { cancelEvent } from \"../../../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\n\r\nexport default class AppTwoStepVerificationHintTab extends SliderSuperTab {\r\n  public inputField: InputField;\r\n  public state: AccountPassword;\r\n  public plainPassword: string;\r\n  public newPassword: string;\r\n\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-hint');\r\n    this.setTitle('TwoStepAuth.SetupHintTitle');\r\n\r\n    const section = new SettingSection({\r\n      noDelimiter: true\r\n    });\r\n\r\n    const emoji = '💡';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: false,\r\n        play: true,\r\n        width: 160,\r\n        height: 160,\r\n        emoji\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    section.content.append(stickerContainer);\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const inputField = this.inputField = new InputField({\r\n      name: 'hint',\r\n      label: 'TwoStepAuth.SetupHintPlaceholder'\r\n    });\r\n\r\n    inputField.input.addEventListener('keypress', (e) => {\r\n      if(e.key === 'Enter') {\r\n        cancelEvent(e);\r\n        return inputField.value ? onContinueClick() : onSkipClick();\r\n      }\r\n    });\r\n\r\n    const goNext = (e?: Event, saveHint?: boolean) => {\r\n      if(e) {\r\n        cancelEvent(e);\r\n      }\r\n      \r\n      const hint = saveHint ? inputField.value : undefined;\r\n      if(hint && this.newPassword === hint) {\r\n        toast(I18n.format('PasswordAsHintError', true));\r\n        return;\r\n      }\r\n\r\n      const tab = new AppTwoStepVerificationEmailTab(this.slider);\r\n      tab.state = this.state;\r\n      tab.plainPassword = this.plainPassword;\r\n      tab.newPassword = this.newPassword;\r\n      tab.hint = hint;\r\n\r\n      tab.open();\r\n    };\r\n\r\n    const btnContinue = Button('btn-primary btn-color-primary', {text: 'Continue'});\r\n    const btnSkip = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'YourEmailSkip'});\r\n\r\n    const onContinueClick = (e?: Event) => goNext(e, true);\r\n    const onSkipClick = (e?: Event) => goNext(e, false);\r\n    attachClickEvent(btnContinue, onContinueClick);\r\n    attachClickEvent(btnSkip, onSkipClick);\r\n\r\n    inputWrapper.append(inputField.container, btnContinue, btnSkip);\r\n\r\n    section.content.append(inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    this.inputField.input.focus();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport Button from \"../../../button\";\r\nimport PasswordInputField from \"../../../passwordInputField\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport TrackingMonkey from \"../../../monkeys/tracking\";\r\nimport AppTwoStepVerificationHintTab from \"./hint\";\r\nimport { InputState } from \"../../../inputField\";\r\nimport { cancelEvent } from \"../../../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\n\r\nexport default class AppTwoStepVerificationReEnterPasswordTab extends SliderSuperTab {\r\n  public state: AccountPassword;\r\n  public passwordInputField: PasswordInputField;\r\n  public plainPassword: string;\r\n  public newPassword: string;\r\n\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-enter-password', 'two-step-verification-re-enter-password');\r\n    this.setTitle('PleaseReEnterPassword');\r\n\r\n    const section = new SettingSection({\r\n      noDelimiter: true\r\n    });\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const passwordInputField = this.passwordInputField = new PasswordInputField({\r\n      name: 're-enter-password',\r\n      label: 'PleaseReEnterPassword'\r\n    });\r\n\r\n    const monkey = new TrackingMonkey(passwordInputField, 157);\r\n\r\n    const btnContinue = Button('btn-primary btn-color-primary', {text: 'Continue'});\r\n\r\n    inputWrapper.append(passwordInputField.container, btnContinue);\r\n    section.content.append(monkey.container, inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n\r\n    passwordInputField.input.addEventListener('keypress', (e) => {\r\n      if(passwordInputField.input.classList.contains('error')) {\r\n        passwordInputField.setState(InputState.Neutral);\r\n      }\r\n  \r\n      if(e.key === 'Enter') {\r\n        return onContinueClick();\r\n      }\r\n    });\r\n\r\n    const verifyInput = () => {\r\n      if(this.newPassword !== passwordInputField.value) {\r\n        passwordInputField.setError();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    const onContinueClick = (e?: Event) => {\r\n      if(e) {\r\n        cancelEvent(e);\r\n      }\r\n\r\n      if(!verifyInput()) return;\r\n\r\n      const tab = new AppTwoStepVerificationHintTab(this.slider);\r\n      tab.state = this.state;\r\n      tab.plainPassword = this.plainPassword;\r\n      tab.newPassword = this.newPassword;\r\n      tab.open();\r\n    };\r\n    attachClickEvent(btnContinue, onContinueClick);\r\n\r\n    return monkey.load();\r\n  }\r\n  \r\n  onOpenAfterTimeout() {\r\n    this.passwordInputField.input.focus();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport AppTwoStepVerificationTab from \".\";\r\nimport { SettingSection } from \"../..\";\r\nimport { cancelEvent } from \"../../../../helpers/dom/cancelEvent\";\r\nimport { canFocus } from \"../../../../helpers/dom/canFocus\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../../../../helpers/dom/replaceContent\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport I18n, { i18n } from \"../../../../lib/langPack\";\r\nimport passwordManager from \"../../../../lib/mtproto/passwordManager\";\r\nimport RichTextProcessor from \"../../../../lib/richtextprocessor\";\r\nimport Button from \"../../../button\";\r\nimport { putPreloader } from \"../../../misc\";\r\nimport PasswordMonkey from \"../../../monkeys/password\";\r\nimport PasswordInputField from \"../../../passwordInputField\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport AppTwoStepVerificationReEnterPasswordTab from \"./reEnterPassword\";\r\n\r\nexport default class AppTwoStepVerificationEnterPasswordTab extends SliderSuperTab {\r\n  public state: AccountPassword;\r\n  public passwordInputField: PasswordInputField;\r\n  public plainPassword: string;\r\n  public isFirst = true;\r\n  \r\n  protected init() {\r\n    const isNew = !this.state.pFlags.has_password || this.plainPassword;\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-enter-password');\r\n    this.setTitle(isNew ? 'PleaseEnterFirstPassword' : 'PleaseEnterCurrentPassword');\r\n\r\n    const section = new SettingSection({\r\n      noDelimiter: true\r\n    });\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    const passwordInputField = this.passwordInputField = new PasswordInputField({\r\n      name: 'enter-password',\r\n      label: isNew ? 'PleaseEnterFirstPassword' : (this.state.hint ? undefined : 'LoginPassword'),\r\n      labelText: !isNew && this.state.hint ? RichTextProcessor.wrapEmojiText(this.state.hint) : undefined\r\n    });\r\n\r\n    const monkey = new PasswordMonkey(passwordInputField, 157);\r\n\r\n    const btnContinue = Button('btn-primary btn-color-primary');\r\n    const textEl = new I18n.IntlElement({key: 'Continue'});\r\n\r\n    btnContinue.append(textEl.element);\r\n\r\n    inputWrapper.append(passwordInputField.container, btnContinue);\r\n    section.content.append(monkey.container, inputWrapper);\r\n\r\n    this.scrollable.container.append(section.container);\r\n\r\n    passwordInputField.input.addEventListener('keypress', (e) => {\r\n      if(passwordInputField.input.classList.contains('error')) {\r\n        passwordInputField.input.classList.remove('error');\r\n        textEl.key = 'Continue';\r\n        textEl.update();\r\n      }\r\n  \r\n      if(e.key === 'Enter') {\r\n        return onContinueClick();\r\n      }\r\n    });\r\n\r\n    const verifyInput = () => {\r\n      if(!passwordInputField.value.length) {\r\n        passwordInputField.input.classList.add('error');\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    let onContinueClick: (e?: Event) => void;\r\n    if(!isNew) {\r\n      let getStateInterval: number;\r\n\r\n      let getState = () => {\r\n        // * just to check session relevance\r\n        if(!getStateInterval) {\r\n          getStateInterval = window.setInterval(getState, 10e3);\r\n        }\r\n  \r\n        return passwordManager.getState().then(_state => {\r\n          this.state = _state;\r\n  \r\n          if(this.state.hint) {\r\n            passwordInputField.label.innerHTML = RichTextProcessor.wrapEmojiText(this.state.hint);\r\n          } else {\r\n            replaceContent(passwordInputField.label, i18n('LoginPassword'));\r\n          }\r\n        });\r\n      };\r\n  \r\n      const submit = (e?: Event) => {\r\n        if(!verifyInput()) {\r\n          cancelEvent(e);\r\n          return;\r\n        }\r\n\r\n        btnContinue.setAttribute('disabled', 'true');\r\n        textEl.key = 'PleaseWait';\r\n        textEl.update();\r\n        const preloader = putPreloader(btnContinue);\r\n  \r\n        const plainPassword = passwordInputField.value;\r\n        passwordManager.check(passwordInputField.value, this.state).then(auth => {\r\n          console.log(auth);\r\n  \r\n          if(auth._ === 'auth.authorization') {\r\n            clearInterval(getStateInterval);\r\n            if(monkey) monkey.remove();\r\n            const tab = new AppTwoStepVerificationTab(this.slider);\r\n            tab.state = this.state;\r\n            tab.plainPassword = plainPassword;\r\n            tab.open();\r\n            this.slider.removeTabFromHistory(this);\r\n          }\r\n        }, (err) => {\r\n          btnContinue.removeAttribute('disabled');\r\n          passwordInputField.input.classList.add('error');\r\n          \r\n          switch(err.type) {\r\n            default:\r\n              //btnContinue.innerText = err.type;\r\n              textEl.key = 'TwoStepAuth.InvalidPassword';\r\n              textEl.update();\r\n              preloader.remove();\r\n              passwordInputField.select();\r\n              break;\r\n          }\r\n  \r\n          getState();\r\n        });\r\n      };\r\n  \r\n      onContinueClick = submit;\r\n\r\n      getState();\r\n    } else {\r\n      onContinueClick = (e) => {\r\n        if(e) {\r\n          cancelEvent(e);\r\n        }\r\n\r\n        if(!verifyInput()) return;\r\n\r\n        const tab = new AppTwoStepVerificationReEnterPasswordTab(this.slider);\r\n        tab.state = this.state;\r\n        tab.newPassword = passwordInputField.value;\r\n        tab.plainPassword = this.plainPassword;\r\n        tab.open();\r\n      };\r\n    }\r\n\r\n    attachClickEvent(btnContinue, onContinueClick);\r\n\r\n    return monkey.load();\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    if(!canFocus(this.isFirst)) return;\r\n    this.passwordInputField.input.focus();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"../..\";\r\nimport { attachClickEvent } from \"../../../../helpers/dom/clickEvent\";\r\nimport { AccountPassword } from \"../../../../layer\";\r\nimport appStickersManager from \"../../../../lib/appManagers/appStickersManager\";\r\nimport { _i18n } from \"../../../../lib/langPack\";\r\nimport passwordManager from \"../../../../lib/mtproto/passwordManager\";\r\nimport Button from \"../../../button\";\r\nimport PopupPeer from \"../../../popups/peer\";\r\nimport { SliderSuperTab } from \"../../../slider\";\r\nimport { wrapSticker } from \"../../../wrappers\";\r\nimport AppSettingsTab from \"../settings\";\r\nimport AppTwoStepVerificationEmailTab from \"./email\";\r\nimport AppTwoStepVerificationEnterPasswordTab from \"./enterPassword\";\r\n\r\nexport default class AppTwoStepVerificationTab extends SliderSuperTab {\r\n  public state: AccountPassword;\r\n  public plainPassword: string;\r\n\r\n  protected init() {\r\n    this.container.classList.add('two-step-verification', 'two-step-verification-main');\r\n    this.setTitle('TwoStepVerificationTitle');\r\n\r\n    const section = new SettingSection({\r\n      caption: true,\r\n      noDelimiter: true\r\n    });\r\n\r\n    const emoji = '🔐';\r\n    const doc = appStickersManager.getAnimatedEmojiSticker(emoji);\r\n    const stickerContainer = document.createElement('div');\r\n\r\n    if(doc) {\r\n      wrapSticker({\r\n        doc,\r\n        div: stickerContainer,\r\n        loop: false,\r\n        play: true,\r\n        width: 168,\r\n        height: 168,\r\n        emoji\r\n      }).then(() => {\r\n        // this.animation = player;\r\n      });\r\n    } else {\r\n      stickerContainer.classList.add('media-sticker-wrapper');\r\n    }\r\n\r\n    section.content.append(stickerContainer);\r\n\r\n    const c = section.generateContentElement();\r\n    if(this.state.pFlags.has_password) {\r\n      _i18n(section.caption, 'TwoStepAuth.GenericHelp');\r\n\r\n      const btnChangePassword = Button('btn-primary btn-transparent', {icon: 'edit', text: 'TwoStepAuth.ChangePassword'});\r\n      const btnDisablePassword = Button('btn-primary btn-transparent', {icon: 'passwordoff', text: 'TwoStepAuth.RemovePassword'});\r\n      const btnSetRecoveryEmail = Button('btn-primary btn-transparent', {icon: 'email', text: this.state.pFlags.has_recovery ? 'TwoStepAuth.ChangeEmail' : 'TwoStepAuth.SetupEmail'});\r\n\r\n      attachClickEvent(btnChangePassword, () => {\r\n        const tab = new AppTwoStepVerificationEnterPasswordTab(this.slider);\r\n        tab.state = this.state;\r\n        tab.plainPassword = this.plainPassword;\r\n        tab.open();\r\n      });\r\n\r\n      attachClickEvent(btnDisablePassword, () => {\r\n        const popup = new PopupPeer('popup-disable-password', {\r\n          buttons: [{\r\n            langKey: 'Disable',\r\n            callback: () => {\r\n              passwordManager.updateSettings({currentPassword: this.plainPassword}).then(() => {\r\n                this.slider.sliceTabsUntilTab(AppSettingsTab, this);\r\n                this.close();\r\n              });\r\n            },\r\n            isDanger: true,\r\n          }], \r\n          titleLangKey: 'TurnPasswordOffQuestionTitle',\r\n          descriptionLangKey: 'TurnPasswordOffQuestion'\r\n        });\r\n\r\n        popup.show();\r\n      });\r\n\r\n      attachClickEvent(btnSetRecoveryEmail, () => {\r\n        const tab = new AppTwoStepVerificationEmailTab(this.slider);\r\n        tab.state = this.state;\r\n        tab.hint = this.state.hint;\r\n        tab.plainPassword = this.plainPassword;\r\n        tab.newPassword = this.plainPassword;\r\n        tab.isFirst = true;\r\n        tab.open();\r\n      });\r\n\r\n      c.append(btnChangePassword, btnDisablePassword, btnSetRecoveryEmail);\r\n    } else {\r\n      _i18n(section.caption, 'TwoStepAuth.SetPasswordHelp');\r\n\r\n      const inputWrapper = document.createElement('div');\r\n      inputWrapper.classList.add('input-wrapper');\r\n\r\n      const btnSetPassword = Button('btn-primary btn-color-primary', {text: 'TwoStepVerificationSetPassword'});\r\n      \r\n      inputWrapper.append(btnSetPassword);\r\n      c.append(inputWrapper);\r\n\r\n      attachClickEvent(btnSetPassword, (e) => {\r\n        const tab = new AppTwoStepVerificationEnterPasswordTab(this.slider);\r\n        tab.state = this.state;\r\n        tab.open();\r\n      });\r\n    }\r\n\r\n    this.scrollable.container.append(section.container);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\n\r\nexport default class AppPrivacyLastSeenTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.container.classList.add('privacy-tab', 'privacy-last-seen');\r\n    this.setTitle('PrivacyLastSeen');\r\n\r\n    const caption: LangPackKey = 'PrivacySettingsController.LastSeenDescription';\r\n    new PrivacySection({\r\n      tab: this,\r\n      title: 'LastSeenTitle',\r\n      inputKey: 'inputPrivacyKeyStatusTimestamp',\r\n      captions: [caption, caption, caption],\r\n      exceptionTexts: ['PrivacySettingsController.NeverShare', 'PrivacySettingsController.AlwaysShare'],\r\n      appendTo: this.scrollable\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { PrivacyType } from \"../../../../lib/appManagers/appPrivacyManager\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\n\r\nexport default class AppPrivacyProfilePhotoTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.container.classList.add('privacy-tab', 'privacy-profile-photo');\r\n    this.setTitle('PrivacyProfilePhoto');\r\n\r\n    const caption: LangPackKey = 'PrivacySettingsController.ProfilePhoto.CustomHelp';\r\n    new PrivacySection({\r\n      tab: this,\r\n      title: 'PrivacyProfilePhotoTitle',\r\n      inputKey: 'inputPrivacyKeyProfilePhoto',\r\n      captions: [caption, caption, caption],\r\n      exceptionTexts: ['PrivacySettingsController.NeverShare', 'PrivacySettingsController.AlwaysShare'],\r\n      appendTo: this.scrollable,\r\n      skipTypes: [PrivacyType.Nobody]\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\n\r\nexport default class AppPrivacyForwardMessagesTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.container.classList.add('privacy-tab', 'privacy-forward-messages');\r\n    this.setTitle('PrivacySettings.Forwards');\r\n\r\n    const caption: LangPackKey = 'PrivacySettingsController.Forwards.CustomHelp';\r\n    new PrivacySection({\r\n      tab: this,\r\n      title: 'PrivacyForwardsTitle',\r\n      inputKey: 'inputPrivacyKeyForwards',\r\n      captions: [caption, caption, caption],\r\n      exceptionTexts: ['PrivacySettingsController.NeverAllow', 'PrivacySettingsController.AlwaysAllow'],\r\n      appendTo: this.scrollable\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\nimport { PrivacyType } from \"../../../../lib/appManagers/appPrivacyManager\";\r\n\r\nexport default class AppPrivacyAddToGroupsTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.container.classList.add('privacy-tab', 'privacy-add-to-groups');\r\n    this.setTitle('PrivacySettings.Groups');\r\n\r\n    const caption: LangPackKey = 'PrivacySettingsController.GroupDescription';\r\n    new PrivacySection({\r\n      tab: this,\r\n      title: 'WhoCanAddMe',\r\n      inputKey: 'inputPrivacyKeyChatInvite',\r\n      captions: [caption, caption, caption],\r\n      exceptionTexts: ['PrivacySettingsController.NeverAllow', 'PrivacySettingsController.AlwaysAllow'],\r\n      appendTo: this.scrollable,\r\n      skipTypes: [PrivacyType.Nobody]\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../../sliderTab\";\r\nimport PrivacySection from \"../../../privacySection\";\r\nimport { LangPackKey } from \"../../../../lib/langPack\";\r\n\r\nexport default class AppPrivacyCallsTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.container.classList.add('privacy-tab', 'privacy-calls');\r\n    this.setTitle('PrivacySettings.VoiceCalls');\r\n\r\n    const caption: LangPackKey = 'PrivacySettingsController.PhoneCallDescription';\r\n    new PrivacySection({\r\n      tab: this,\r\n      title: 'WhoCanCallMe',\r\n      inputKey: 'inputPrivacyKeyPhoneCall',\r\n      captions: [caption, caption, caption],\r\n      exceptionTexts: ['PrivacySettingsController.NeverAllow', 'PrivacySettingsController.AlwaysAllow'],\r\n      appendTo: this.scrollable\r\n    });\r\n\r\n    {\r\n      const caption: LangPackKey = 'PrivacySettingsController.P2p.Desc';\r\n      new PrivacySection({\r\n        tab: this,\r\n        title: 'PrivacyP2PHeader',\r\n        inputKey: 'inputPrivacyKeyPhoneP2P',\r\n        captions: [caption, caption, caption],\r\n        exceptionTexts: ['PrivacySettingsController.NeverAllow', 'PrivacySettingsController.AlwaysAllow'],\r\n        appendTo: this.scrollable\r\n      });\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport { SettingSection } from \"..\";\r\nimport Button from \"../../button\";\r\nimport Row from \"../../row\";\r\nimport { Authorization } from \"../../../layer\";\r\nimport { formatDateAccordingToToday } from \"../../../helpers/date\";\r\nimport { attachContextMenuListener, openBtnMenu, positionMenu } from \"../../misc\";\r\nimport ButtonMenu from \"../../buttonMenu\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport { toast } from \"../../toast\";\r\nimport AppPrivacyAndSecurityTab from \"./privacyAndSecurity\";\r\nimport I18n from \"../../../lib/langPack\";\r\nimport PopupPeer from \"../../popups/peer\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport toggleDisability from \"../../../helpers/dom/toggleDisability\";\r\n\r\nexport default class AppActiveSessionsTab extends SliderSuperTab {\r\n  public privacyTab: AppPrivacyAndSecurityTab;\r\n  public authorizations: Authorization.authorization[];\r\n  private menuElement: HTMLElement;\r\n  \r\n  protected init() {\r\n    this.container.classList.add('active-sessions-container');\r\n    this.setTitle('SessionsTitle');\r\n\r\n    const Session = (auth: Authorization.authorization) => {\r\n      const row = new Row({\r\n        title: [auth.app_name, auth.app_version].join(' '),\r\n        subtitle: [auth.ip, auth.country].join(' - '),\r\n        clickable: true,\r\n        titleRight: auth.pFlags.current ? undefined : formatDateAccordingToToday(new Date(Math.max(auth.date_active, auth.date_created) * 1000))\r\n      });\r\n\r\n      row.container.dataset.hash = auth.hash;\r\n\r\n      const midtitle = document.createElement('div');\r\n      midtitle.classList.add('row-midtitle');\r\n      midtitle.innerHTML = [auth.device_model, auth.system_version || auth.platform].filter(Boolean).join(', ');\r\n\r\n      row.subtitle.parentElement.insertBefore(midtitle, row.subtitle);\r\n\r\n      return row;\r\n    };\r\n\r\n    const authorizations = this.authorizations.slice();\r\n\r\n    {\r\n      const section = new SettingSection({\r\n        name: 'CurrentSession'\r\n      });\r\n\r\n      const auth = authorizations.findAndSplice(auth => auth.pFlags.current);\r\n      const session = Session(auth);\r\n\r\n      section.content.append(session.container);\r\n\r\n      if(authorizations.length) {\r\n        const btnTerminate = Button('btn-primary btn-transparent danger', {icon: 'stop', text: 'TerminateAllSessions'});\r\n        attachClickEvent(btnTerminate, (e) => {\r\n          new PopupPeer('revoke-session', {\r\n            buttons: [{\r\n              langKey: 'Terminate',\r\n              isDanger: true,\r\n              callback: () => {\r\n                const toggle = toggleDisability([btnTerminate], true);\r\n                apiManager.invokeApi('auth.resetAuthorizations').then(value => {\r\n                  //toggleDisability([btnTerminate], false);\r\n                  btnTerminate.remove();\r\n                  otherSection.container.remove();\r\n                  this.privacyTab.updateActiveSessions();\r\n                }, onError).finally(() => {\r\n                  toggle();\r\n                });\r\n              }\r\n            }],\r\n            titleLangKey: 'AreYouSureSessionsTitle',\r\n            descriptionLangKey: 'AreYouSureSessions'\r\n          }).show();\r\n        });\r\n  \r\n        section.content.append(btnTerminate);\r\n      }\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n\r\n    if(!authorizations.length) {\r\n      return;\r\n    }\r\n\r\n    const otherSection = new SettingSection({\r\n      name: 'OtherSessions'\r\n    });\r\n\r\n    authorizations.forEach(auth => {\r\n      otherSection.content.append(Session(auth).container);\r\n    });\r\n\r\n    this.scrollable.append(otherSection.container);\r\n\r\n    const onError = (err: any) => {\r\n      if(err.type === 'FRESH_RESET_AUTHORISATION_FORBIDDEN') {\r\n        toast(I18n.format('RecentSessions.Error.FreshReset', true));\r\n      }\r\n    };\r\n\r\n    let target: HTMLElement;\r\n    const onTerminateClick = () => {\r\n      const hash = target.dataset.hash;\r\n      \r\n      new PopupPeer('revoke-session', {\r\n        buttons: [{\r\n          langKey: 'Terminate',\r\n          isDanger: true,\r\n          callback: () => {\r\n            apiManager.invokeApi('account.resetAuthorization', {hash})\r\n            .then(value => {\r\n              if(value) {\r\n                target.remove();\r\n                this.privacyTab.updateActiveSessions();\r\n              }\r\n            }, onError);\r\n          }\r\n        }],\r\n        titleLangKey: 'AreYouSureSessionTitle',\r\n        descriptionLangKey: 'TerminateSessionText'\r\n      }).show();\r\n    };\r\n\r\n    const element = this.menuElement = ButtonMenu([{\r\n      icon: 'stop',\r\n      text: 'Terminate',\r\n      onClick: onTerminateClick\r\n    }]);\r\n    element.id = 'active-sessions-contextmenu';\r\n    element.classList.add('contextmenu');\r\n\r\n    document.getElementById('page-chats').append(element);\r\n\r\n    attachContextMenuListener(this.scrollable.container, (e) => {\r\n      target = findUpClassName(e.target, 'row');\r\n      if(!target || target.dataset.hash === '0') {\r\n        return;\r\n      }\r\n\r\n      if(e instanceof MouseEvent) e.preventDefault();\r\n      // smth\r\n      if(e instanceof MouseEvent) e.cancelBubble = true;\r\n\r\n      positionMenu(e, element);\r\n      openBtnMenu(element);\r\n    });\r\n\r\n    attachClickEvent(this.scrollable.container, (e) => {\r\n      target = findUpClassName(e.target, 'row');\r\n      if(!target || target.dataset.hash === '0') {\r\n        return;\r\n      }\r\n\r\n      onTerminateClick();\r\n    });\r\n  }\r\n\r\n  onCloseAfterTimeout() {\r\n    if(this.menuElement) {\r\n      this.menuElement.remove();\r\n    }\r\n\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport { SettingSection } from \"..\";\r\nimport { attachContextMenuListener, openBtnMenu, positionMenu } from \"../../misc\";\r\nimport ButtonMenu from \"../../buttonMenu\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport PopupPickUser from \"../../popups/pickUser\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport findUpTag from \"../../../helpers/dom/findUpTag\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\n\r\nexport default class AppBlockedUsersTab extends SliderSuperTab {\r\n  public peerIds: number[];\r\n  private menuElement: HTMLElement;\r\n  \r\n  protected init() {\r\n    this.container.classList.add('blocked-users-container');\r\n    this.setTitle('BlockedUsers');\r\n\r\n    {\r\n      const section = new SettingSection({\r\n        caption: 'BlockedUsersInfo'\r\n      });\r\n\r\n      this.scrollable.append(section.container);\r\n    }\r\n\r\n    const btnAdd = ButtonCorner({icon: 'add', className: 'is-visible'});\r\n    this.content.append(btnAdd);\r\n\r\n    attachClickEvent(btnAdd, (e) => {\r\n      new PopupPickUser({\r\n        peerTypes: ['contacts'],\r\n        placeholder: 'BlockModal.Search.Placeholder',\r\n        onSelect: (peerId) => {\r\n          //console.log('block', peerId);\r\n          appUsersManager.toggleBlock(peerId, true);\r\n        },\r\n      });\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    const list = appDialogsManager.createChatList();\r\n    this.scrollable.container.classList.add('chatlist-container');\r\n    this.scrollable.append(list);\r\n\r\n    const add = (peerId: number, append: boolean) => {\r\n      const {dom} = appDialogsManager.addDialogNew({\r\n        dialog: peerId,\r\n        container: list,\r\n        drawStatus: false,\r\n        rippleEnabled: true,\r\n        avatarSize: 48,\r\n        append\r\n      });\r\n\r\n      const user = appUsersManager.getUser(peerId);\r\n      if(user.pFlags.bot) {\r\n        dom.lastMessageSpan.append('@' + user.username);\r\n      } else {\r\n        if(user.phone) dom.lastMessageSpan.innerHTML = appUsersManager.formatUserPhone(user.phone);\r\n        else dom.lastMessageSpan.append(user.username ? '@' + user.username : appUsersManager.getUserStatusString(peerId));\r\n      }\r\n\r\n      //dom.titleSpan.innerHTML = 'Raaid El Syed';\r\n      //dom.lastMessageSpan.innerHTML = '+1 234 567891';\r\n    };\r\n\r\n    for(const peerId of this.peerIds) {\r\n      add(peerId, true);\r\n    }\r\n\r\n    let target: HTMLElement;\r\n    const onUnblock = () => {\r\n      const peerId = +target.dataset.peerId;\r\n      appUsersManager.toggleBlock(peerId, false);\r\n    };\r\n\r\n    const element = this.menuElement = ButtonMenu([{\r\n      icon: 'lockoff',\r\n      text: 'Unblock',\r\n      onClick: onUnblock,\r\n      options: {listenerSetter: this.listenerSetter}\r\n    }]);\r\n    element.id = 'blocked-users-contextmenu';\r\n    element.classList.add('contextmenu');\r\n\r\n    document.getElementById('page-chats').append(element);\r\n\r\n    attachContextMenuListener(this.scrollable.container, (e) => {\r\n      target = findUpTag(e.target, 'LI');\r\n      if(!target) {\r\n        return;\r\n      }\r\n\r\n      if(e instanceof MouseEvent) e.preventDefault();\r\n      // smth\r\n      if(e instanceof MouseEvent) e.cancelBubble = true;\r\n\r\n      positionMenu(e, element);\r\n      openBtnMenu(element);\r\n    }, this.listenerSetter);\r\n\r\n    this.listenerSetter.add(rootScope, 'peer_block', (update) => {\r\n      const {peerId, blocked} = update;\r\n      const li = list.querySelector(`[data-peer-id=\"${peerId}\"]`);\r\n      if(blocked) {\r\n        if(!li) {\r\n          add(peerId, false);\r\n        }\r\n      } else {\r\n        if(li) {\r\n          li.remove();\r\n        }\r\n      }\r\n    });\r\n\r\n    const LOAD_COUNT = 50;\r\n    let loading = false;\r\n    this.scrollable.onScrolledBottom = () => {\r\n      if(loading) {\r\n        return;\r\n      }\r\n\r\n      loading = true;\r\n      appUsersManager.getBlocked(list.childElementCount, LOAD_COUNT).then(res => {\r\n        for(const peerId of res.peerIds) {\r\n          add(peerId, true);\r\n        }\r\n\r\n        if(res.peerIds.length < LOAD_COUNT || list.childElementCount === res.count) {\r\n          this.scrollable.onScrolledBottom = null;\r\n        }\r\n\r\n        this.scrollable.checkForTriggers();\r\n      }).finally(() => {\r\n        loading = false;\r\n      });\r\n    };\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    this.scrollable.onScroll();\r\n  }\r\n\r\n  onCloseAfterTimeout() {\r\n    if(this.menuElement) {\r\n      this.menuElement.remove();\r\n    }\r\n\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\r\nimport { SettingSection } from \"..\";\r\nimport Row from \"../../row\";\r\nimport { AccountPassword, Authorization, InputPrivacyKey } from \"../../../layer\";\r\nimport appPrivacyManager, { PrivacyType } from \"../../../lib/appManagers/appPrivacyManager\";\r\nimport AppPrivacyPhoneNumberTab from \"./privacy/phoneNumber\";\r\nimport AppTwoStepVerificationTab from \"./2fa\";\r\nimport passwordManager from \"../../../lib/mtproto/passwordManager\";\r\nimport AppTwoStepVerificationEnterPasswordTab from \"./2fa/enterPassword\";\r\nimport AppTwoStepVerificationEmailConfirmationTab from \"./2fa/emailConfirmation\";\r\nimport AppPrivacyLastSeenTab from \"./privacy/lastSeen\";\r\nimport AppPrivacyProfilePhotoTab from \"./privacy/profilePhoto\";\r\nimport AppPrivacyForwardMessagesTab from \"./privacy/forwardMessages\";\r\nimport AppPrivacyAddToGroupsTab from \"./privacy/addToGroups\";\r\nimport AppPrivacyCallsTab from \"./privacy/calls\";\r\nimport AppActiveSessionsTab from \"./activeSessions\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport AppBlockedUsersTab from \"./blockedUsers\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport { convertKeyToInputKey } from \"../../../helpers/string\";\r\nimport { i18n, LangPackKey, _i18n } from \"../../../lib/langPack\";\r\nimport replaceContent from \"../../../helpers/dom/replaceContent\";\r\nimport CheckboxField from \"../../checkboxField\";\r\n\r\nexport default class AppPrivacyAndSecurityTab extends SliderSuperTabEventable {\r\n  private activeSessionsRow: Row;\r\n  private authorizations: Authorization.authorization[];\r\n\r\n  protected async init() {\r\n    this.container.classList.add('dont-u-dare-block-me');\r\n    this.setTitle('PrivacySettings');\r\n\r\n    const SUBTITLE: LangPackKey = 'Loading';\r\n\r\n    {\r\n      const section = new SettingSection({noDelimiter: true});\r\n\r\n      let blockedPeerIds: number[];\r\n      const blockedUsersRow = new Row({\r\n        icon: 'deleteuser',\r\n        titleLangKey: 'BlockedUsers',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          const tab = new AppBlockedUsersTab(this.slider);\r\n          tab.peerIds = blockedPeerIds;\r\n          tab.open();\r\n        }\r\n      });\r\n      blockedUsersRow.freezed = true;\r\n\r\n      let passwordState: AccountPassword;\r\n      const twoFactorRowOptions = {\r\n        icon: 'lock',\r\n        titleLangKey: 'TwoStepVerification' as LangPackKey,\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: (e: Event) => {\r\n          let tab: AppTwoStepVerificationTab | AppTwoStepVerificationEnterPasswordTab | AppTwoStepVerificationEmailConfirmationTab;\r\n          if(passwordState.pFlags.has_password) {\r\n            tab = new AppTwoStepVerificationEnterPasswordTab(this.slider);\r\n          } else if(passwordState.email_unconfirmed_pattern) {\r\n            tab = new AppTwoStepVerificationEmailConfirmationTab(this.slider);\r\n            tab.email = passwordState.email_unconfirmed_pattern;\r\n            tab.length = 6;\r\n            tab.isFirst = true;\r\n            passwordManager.resendPasswordEmail();\r\n          } else {\r\n            tab = new AppTwoStepVerificationTab(this.slider);\r\n          }\r\n          \r\n          tab.state = passwordState;\r\n          tab.open();\r\n        }\r\n      };\r\n      \r\n      const twoFactorRow = new Row(twoFactorRowOptions);\r\n      twoFactorRow.freezed = true;\r\n\r\n      const activeSessionsRow = this.activeSessionsRow = new Row({\r\n        icon: 'activesessions',\r\n        titleLangKey: 'SessionsTitle',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          const tab = new AppActiveSessionsTab(this.slider);\r\n          tab.privacyTab = this;\r\n          tab.authorizations = this.authorizations;\r\n          tab.open();\r\n        }\r\n      });\r\n      activeSessionsRow.freezed = true;\r\n\r\n      section.content.append(blockedUsersRow.container, twoFactorRow.container, activeSessionsRow.container);\r\n      this.scrollable.append(section.container);\r\n\r\n      const setBlockedCount = (count: number) => {\r\n        if(count) {\r\n          replaceContent(blockedUsersRow.subtitle, i18n('PrivacySettingsController.UserCount', [count]));\r\n        } else {\r\n          replaceContent(blockedUsersRow.subtitle, i18n('BlockedEmpty', [count]));\r\n        }\r\n      };\r\n\r\n      this.listenerSetter.add(rootScope, 'peer_block', () => {\r\n        /* const {blocked, peerId} = update;\r\n        if(!blocked) blockedPeerIds.findAndSplice(p => p === peerId);\r\n        else blockedPeerIds.unshift(peerId);\r\n        blockedCount += blocked ? 1 : -1;\r\n        setBlockedCount(blockedCount); */\r\n        updateBlocked();\r\n      });\r\n\r\n      const updateBlocked = () => {\r\n        appUsersManager.getBlocked().then(res => {\r\n          blockedUsersRow.freezed = false;\r\n          setBlockedCount(res.count);\r\n          blockedPeerIds = res.peerIds;\r\n        });\r\n      };\r\n\r\n      updateBlocked();\r\n\r\n      passwordManager.getState().then(state => {\r\n        passwordState = state;\r\n        replaceContent(twoFactorRow.subtitle, i18n(state.pFlags.has_password ? 'PrivacyAndSecurity.Item.On' : 'PrivacyAndSecurity.Item.Off'));\r\n        twoFactorRow.freezed = false;\r\n        \r\n        //console.log('password state', state);\r\n      });\r\n\r\n      this.updateActiveSessions();\r\n    }\r\n\r\n    {\r\n      const section = new SettingSection({name: 'PrivacyTitle'});\r\n\r\n      section.content.classList.add('privacy-navigation-container');\r\n\r\n      const rowsByKeys: Partial<{\r\n        [key in InputPrivacyKey['_']]: Row\r\n      }> = {};\r\n\r\n      const numberVisibilityRow = rowsByKeys['inputPrivacyKeyPhoneNumber'] = new Row({\r\n        titleLangKey: 'PrivacyPhoneTitle',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyPhoneNumberTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const lastSeenTimeRow = rowsByKeys['inputPrivacyKeyStatusTimestamp'] = new Row({\r\n        titleLangKey: 'LastSeenTitle',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyLastSeenTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const photoVisibilityRow = rowsByKeys['inputPrivacyKeyProfilePhoto'] = new Row({\r\n        titleLangKey: 'PrivacyProfilePhotoTitle',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyProfilePhotoTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const callRow = rowsByKeys['inputPrivacyKeyPhoneCall'] = new Row({\r\n        titleLangKey: 'WhoCanCallMe',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyCallsTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const linkAccountRow = rowsByKeys['inputPrivacyKeyForwards'] = new Row({\r\n        titleLangKey: 'PrivacyForwardsTitle',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyForwardMessagesTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const groupChatsAddRow = rowsByKeys['inputPrivacyKeyChatInvite'] = new Row({\r\n        titleLangKey: 'WhoCanAddMe',\r\n        subtitleLangKey: SUBTITLE,\r\n        clickable: () => {\r\n          new AppPrivacyAddToGroupsTab(this.slider).open();\r\n        }\r\n      });\r\n\r\n      const updatePrivacyRow = (key: InputPrivacyKey['_']) => {\r\n        const row = rowsByKeys[key];\r\n        if(!row) {\r\n          return;\r\n        }\r\n\r\n        appPrivacyManager.getPrivacy(key).then(rules => {\r\n          const details = appPrivacyManager.getPrivacyRulesDetails(rules);\r\n          const langKey = details.type === PrivacyType.Everybody ? 'PrivacySettingsController.Everbody' : (details.type === PrivacyType.Contacts ? 'PrivacySettingsController.MyContacts' : 'PrivacySettingsController.Nobody');\r\n          const disallowLength = details.disallowPeers.users.length + details.disallowPeers.chats.length;\r\n          const allowLength = details.allowPeers.users.length + details.allowPeers.chats.length;\r\n\r\n          row.subtitle.innerHTML = '';\r\n          const s = i18n(langKey);\r\n          row.subtitle.append(s);\r\n          if(disallowLength || allowLength) {\r\n            row.subtitle.append(` (${[-disallowLength, allowLength ? '+' + allowLength : 0].filter(Boolean).join(', ')})`);\r\n          }\r\n        });\r\n      };\r\n\r\n      section.content.append(numberVisibilityRow.container, lastSeenTimeRow.container, photoVisibilityRow.container, callRow.container, linkAccountRow.container, groupChatsAddRow.container);\r\n      this.scrollable.append(section.container);\r\n\r\n      for(const key in rowsByKeys) {\r\n        updatePrivacyRow(key as keyof typeof rowsByKeys);\r\n      }\r\n\r\n      rootScope.addEventListener('privacy_update', (update) => {\r\n        updatePrivacyRow(convertKeyToInputKey(update.key._) as any);\r\n      });\r\n    }\r\n\r\n    {\r\n      await apiManager.invokeApi('account.getContentSettings').then(settings => {\r\n        if(!settings.pFlags.sensitive_can_change) {\r\n          return;\r\n        }\r\n        \r\n        const enabled = settings.pFlags.sensitive_enabled;\r\n        const section = new SettingSection({name: 'Privacy.SensitiveContent'});\r\n\r\n        const sensitiveRow = new Row({\r\n          checkboxField: new CheckboxField({text: 'PrivacyAndSecurity.SensitiveText', checked: enabled}),\r\n          subtitleLangKey: 'PrivacyAndSecurity.SensitiveDesc',\r\n          noCheckboxSubtitle: true\r\n        });\r\n        \r\n        section.content.append(sensitiveRow.container);\r\n  \r\n        this.scrollable.append(section.container);\r\n\r\n        this.eventListener.addEventListener('destroy', () => {\r\n          const _enabled = sensitiveRow.checkboxField.checked;\r\n          const isChanged = _enabled !== enabled;\r\n          if(!isChanged) {\r\n            return;\r\n          }\r\n\r\n          apiManager.invokeApi('account.setContentSettings', {\r\n            sensitive_enabled: _enabled\r\n          });\r\n        }, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  public updateActiveSessions() {\r\n    apiManager.invokeApi('account.getAuthorizations').then(auths => {\r\n      this.activeSessionsRow.freezed = false;\r\n      this.authorizations = auths.authorizations;\r\n      _i18n(this.activeSessionsRow.subtitle, 'Privacy.Devices', [this.authorizations.length]);\r\n      //console.log('auths', auths);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type ColorHsla = {\r\n  h: number,\r\n  s: number,\r\n  l: number,\r\n  a: number\r\n};\r\n\r\nexport type ColorRgba = [number, number, number, number];\r\n\r\n/**\r\n * @returns h [0, 360], s [0, 100], l [0, 100], a [0, 1]\r\n */\r\nexport function rgbaToHsla(r: number, g: number, b: number, a: number = 1): ColorHsla {\r\n  r /= 255, g /= 255, b /= 255;\r\n  const max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n\r\n  if(max === min) {\r\n    h = s = 0; // achromatic\r\n  } else {\r\n    let d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n\r\n  return {\r\n    h: h * 360,\r\n    s: s * 100,\r\n    l: l * 100,\r\n    a\r\n  };\r\n}\r\n\r\n// * https://stackoverflow.com/a/9493060/6758968\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h in [0, 360], s, and l are contained in the set [0, 1], a in [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * @param   {number}  h       The hue\r\n * @param   {number}  s       The saturation\r\n * @param   {number}  l       The lightness\r\n * @return  {Array}           The RGB representation\r\n */\r\nexport function hslaToRgba(h: number, s: number, l: number, a: number): ColorRgba {\r\n  h /= 360, s /= 100, l /= 100;\r\n  let r: number, g: number, b: number;\r\n\r\n  if(s === 0) {\r\n    r = g = b = l; // achromatic\r\n  } else {\r\n    const hue2rgb = function hue2rgb(p: number, q: number, t: number) {\r\n      if(t < 0) t += 1;\r\n      if(t > 1) t -= 1;\r\n      if(t < 1/6) return p + (q - p) * 6 * t;\r\n      if(t < 1/2) return q;\r\n      if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n      return p;\r\n    }\r\n\r\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    const p = 2 * l - q;\r\n    r = hue2rgb(p, q, h + 1/3);\r\n    g = hue2rgb(p, q, h);\r\n    b = hue2rgb(p, q, h - 1/3);\r\n  }\r\n\r\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), Math.round(a * 255)];\r\n}\r\n\r\nexport function hslaStringToRgba(hsla: string) {\r\n  const splitted = hsla.slice(5, -1).split(', ');\r\n  const alpha = +splitted.pop();\r\n  const arr = splitted.map((val) => {\r\n    if(val.endsWith('%')) {\r\n      return +val.slice(0, -1);\r\n    }\r\n    \r\n    return +val;\r\n  });\r\n\r\n  return hslaToRgba(arr[0], arr[1], arr[2], alpha);\r\n}\r\n\r\nexport function hexaToRgba(hexa: string) {\r\n  const arr: ColorRgba = [] as any;\r\n  const offset = 1;\r\n  if(hexa.length === (3 + offset)) {\r\n    for(let i = offset; i < hexa.length; ++i) {\r\n      arr.push(parseInt(hexa[i] + hexa[i], 16));\r\n    }\r\n  } else if(hexa.length === (4 + offset)) {\r\n    for(let i = offset; i < (hexa.length - 1); ++i) {\r\n      arr.push(parseInt(hexa[i] + hexa[i], 16));\r\n    }\r\n\r\n    arr.push(parseInt(hexa[hexa.length - 1], 16));\r\n  } else {\r\n    for(let i = offset; i < hexa.length; i += 2) {\r\n      arr.push(parseInt(hexa.slice(i, i + 2), 16));\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nexport function hexaToHsla(hexa: string) {\r\n  const rgba = hexaToRgba(hexa);\r\n  return rgbaToHsla(rgba[0], rgba[1], rgba[2], rgba[3]);\r\n}\r\n\r\nexport function rgbaToHexa(rgba: ColorRgba) {\r\n  return '#' + rgba.map(v => ('0' + v.toString(16)).slice(-2)).join('');\r\n}\r\n\r\nexport function hslaStringToHexa(hsla: string) {\r\n  return rgbaToHexa(hslaStringToRgba(hsla));\r\n}\r\n\r\nexport function hslaStringToHex(hsla: string) {\r\n  return hslaStringToHexa(hsla).slice(0, -2);\r\n}\r\n","import { rgbaToHsla } from \"./color\";\r\n\r\n// * https://github.com/TelegramMessenger/Telegram-iOS/blob/3d062fff78cc6b287c74e6171f855a3500c0156d/submodules/TelegramPresentationData/Sources/PresentationData.swift#L453\r\nexport default function highlightningColor(rgba: [number, number, number, number?]) {\r\n  let {h, s, l} = rgbaToHsla(rgba[0], rgba[1], rgba[2]);\r\n  if(s > 0) {\r\n    s = Math.min(100, s + 5 + 0.1 * (100 - s));\r\n  }\r\n  l = Math.max(0, l * .65);\r\n  \r\n  const hsla = `hsla(${h}, ${s}%, ${l}%, .4)`;\r\n  return hsla;\r\n}\r\n","import { ColorHsla, ColorRgba, hexaToHsla, hslaToRgba, rgbaToHexa as rgbaToHexa, rgbaToHsla } from \"../helpers/color\";\r\nimport attachGrabListeners from \"../helpers/dom/attachGrabListeners\";\r\nimport { clamp } from \"../helpers/number\";\r\nimport InputField, { InputState } from \"./inputField\";\r\n\r\nexport type ColorPickerColor = { \r\n  hsl: string; \r\n  rgb: string; \r\n  hex: string; \r\n  hsla: string; \r\n  rgba: string; \r\n  hexa: string; \r\n  rgbaArray: ColorRgba; \r\n};\r\n\r\nexport default class ColorPicker {\r\n  private static BASE_CLASS = 'color-picker';\r\n  public container: HTMLElement;\r\n\r\n  private boxRect: DOMRect;\r\n  //private boxDraggerRect: DOMRect;\r\n  private hueRect: DOMRect;\r\n  //private hueDraggerRect: DOMRect;\r\n\r\n\tprivate hue = 0;\r\n\tprivate saturation = 100;\r\n\tprivate lightness = 50;\r\n\tprivate alpha = 1;\r\n  private elements: {\r\n    box: SVGSVGElement,\r\n    boxDragger: SVGSVGElement,\r\n    sliders: HTMLElement,\r\n    hue: SVGSVGElement,\r\n    hueDragger: SVGSVGElement,\r\n    saturation: SVGLinearGradientElement,\r\n  } = {} as any;\r\n  private hexInputField: InputField;\r\n  private rgbInputField: InputField;\r\n  public onChange: (color: ReturnType<ColorPicker['getCurrentColor']>) => void;\r\n\r\n  constructor() {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add(ColorPicker.BASE_CLASS);\r\n\r\n    const html = `\r\n      <svg class=\"${ColorPicker.BASE_CLASS + '-box'}\" viewBox=\"0 0 380 198\">\r\n        <defs>\r\n          <linearGradient id=\"color-picker-saturation\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n            <stop offset=\"0%\" stop-color=\"#fff\"></stop>\r\n            <stop offset=\"100%\" stop-color=\"hsl(0,100%,50%)\"></stop>\r\n          </linearGradient>\r\n          <linearGradient id=\"color-picker-brightness\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n            <stop offset=\"0%\" stop-color=\"rgba(0,0,0,0)\"></stop>\r\n            <stop offset=\"100%\" stop-color=\"#000\"></stop>\r\n          </linearGradient>\r\n          <pattern id=\"color-picker-pattern\" width=\"100%\" height=\"100%\">\r\n            <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#color-picker-saturation)\"></rect>\r\n            <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#color-picker-brightness)\"></rect>\r\n          </pattern>\r\n        </defs>\r\n        <rect rx=\"10\" ry=\"10\" x=\"0\" y=\"0\" width=\"380\" height=\"198\" fill=\"url(#color-picker-pattern)\"></rect>\r\n        <svg class=\"${ColorPicker.BASE_CLASS + '-dragger'} ${ColorPicker.BASE_CLASS + '-box-dragger'}\" x=\"0\" y=\"0\">\r\n          <circle r=\"11\" fill=\"inherit\" stroke=\"#fff\" stroke-width=\"2\"></circle>\r\n        </svg>\r\n      </svg>\r\n      <div class=\"${ColorPicker.BASE_CLASS + '-sliders'}\">\r\n        <svg class=\"${ColorPicker.BASE_CLASS + '-color-slider'}\" viewBox=\"0 0 380 24\">\r\n          <defs>\r\n            <linearGradient id=\"hue\" x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"0%\">\r\n              <stop offset=\"0%\" stop-color=\"#f00\"></stop>\r\n              <stop offset=\"16.666%\" stop-color=\"#f0f\"></stop>\r\n              <stop offset=\"33.333%\" stop-color=\"#00f\"></stop>\r\n              <stop offset=\"50%\" stop-color=\"#0ff\"></stop>\r\n              <stop offset=\"66.666%\" stop-color=\"#0f0\"></stop>\r\n              <stop offset=\"83.333%\" stop-color=\"#ff0\"></stop>\r\n              <stop offset=\"100%\" stop-color=\"#f00\"></stop>\r\n            </linearGradient>\r\n          </defs>\r\n          <rect rx=\"4\" ry=\"4\" x=\"0\" y=\"9\" width=\"380\" height=\"8\" fill=\"url(#hue)\"></rect>\r\n          <svg class=\"${ColorPicker.BASE_CLASS + '-dragger'} ${ColorPicker.BASE_CLASS + '-color-slider-dragger'}\" x=\"0\" y=\"13\">\r\n            <circle r=\"11\" fill=\"inherit\" stroke=\"#fff\" stroke-width=\"2\"></circle>\r\n          </svg>\r\n        </svg>\r\n      </div>\r\n    `;\r\n\r\n    this.container.innerHTML = html;\r\n\r\n    this.elements.box = this.container.firstElementChild as any;\r\n    this.elements.boxDragger = this.elements.box.lastElementChild as any;\r\n    this.elements.saturation = this.elements.box.firstElementChild.firstElementChild as any;\r\n\r\n    this.elements.sliders = this.elements.box.nextElementSibling as any;\r\n\r\n    this.elements.hue = this.elements.sliders.firstElementChild as any;\r\n    this.elements.hueDragger = this.elements.hue.lastElementChild as any;\r\n\r\n    this.hexInputField = new InputField({plainText: true, label: 'Appearance.Color.Hex'});\r\n    this.rgbInputField = new InputField({plainText: true, label: 'Appearance.Color.RGB'});\r\n\r\n    const inputs = document.createElement('div');\r\n    inputs.className = ColorPicker.BASE_CLASS + '-inputs';\r\n    inputs.append(this.hexInputField.container, this.rgbInputField.container);\r\n    this.container.append(inputs);\r\n\r\n    this.hexInputField.input.addEventListener('input', () => {\r\n      let value = this.hexInputField.value.replace(/#/g, '').slice(0, 6);\r\n\r\n      const match = value.match(/([a-fA-F\\d]+)/);\r\n      const valid = match && match[0].length === value.length && [/* 3, 4,  */6].includes(value.length);\r\n      this.hexInputField.setState(valid ? InputState.Neutral : InputState.Error);\r\n\r\n      value = '#' + value;\r\n      this.hexInputField.setValueSilently(value);\r\n      \r\n      if(valid) {\r\n        this.setColor(value, false, true);\r\n      }\r\n    });\r\n\r\n    // patched https://stackoverflow.com/a/34029238/6758968\r\n    const rgbRegExp = /^(?:rgb)?\\(?([01]?\\d\\d?|2[0-4]\\d|25[0-5])(?:\\W+)([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\W+(?:([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\)?)$/;\r\n    this.rgbInputField.input.addEventListener('input', () => {\r\n      const match = this.rgbInputField.value.match(rgbRegExp);\r\n      this.rgbInputField.setState(match ? InputState.Neutral : InputState.Error);\r\n\r\n      if(match) {\r\n        this.setColor(rgbaToHsla(+match[1], +match[2], +match[3]), true, false);\r\n      }\r\n    });\r\n\r\n    this.attachBoxListeners();\r\n    this.attachHueListeners();\r\n  }\r\n\r\n  private onGrabStart = () => {\r\n    document.documentElement.style.cursor = this.elements.boxDragger.style.cursor = 'grabbing';\r\n  };\r\n\r\n  private onGrabEnd = () => {\r\n    document.documentElement.style.cursor = this.elements.boxDragger.style.cursor = '';\r\n  };\r\n\r\n  private attachBoxListeners() {\r\n    attachGrabListeners(this.elements.box as any, () => {\r\n      this.onGrabStart();\r\n      this.boxRect = this.elements.box.getBoundingClientRect();\r\n      //this.boxDraggerRect = this.elements.boxDragger.getBoundingClientRect();\r\n    }, (pos) => {\r\n      this.saturationHandler(pos.x, pos.y);\r\n    }, () => {\r\n      this.onGrabEnd();\r\n    });\r\n  }\r\n\r\n  private attachHueListeners() {\r\n    attachGrabListeners(this.elements.hue as any, () => {\r\n      this.onGrabStart();\r\n      this.hueRect = this.elements.hue.getBoundingClientRect();\r\n      //this.hueDraggerRect = this.elements.hueDragger.getBoundingClientRect();\r\n    }, (pos) => {\r\n      this.hueHandler(pos.x);\r\n    }, () => {\r\n      this.onGrabEnd();\r\n    });\r\n  }\r\n\r\n  public setColor(color: ColorHsla | string, updateHexInput = true, updateRgbInput = true) {\r\n    if(color === undefined) { // * set to red\r\n      color = {\r\n        h: 0,\r\n        s: 100,\r\n        l: 50,\r\n        a: 1\r\n      };\r\n    } else if(typeof(color) === 'string') {\r\n      if(color[0] === '#') {\r\n        color = hexaToHsla(color);\r\n      } else {\r\n        const rgb = color.match(/[.?\\d]+/g);\r\n        color = rgbaToHsla(+rgb[0], +rgb[1], +rgb[2], rgb[3] === undefined ? 1 : +rgb[3]);\r\n      }\r\n    }\r\n\r\n    // Set box\r\n    this.boxRect = this.elements.box.getBoundingClientRect();\r\n\r\n    const boxX = this.boxRect.width / 100 * color.s;\r\n    const percentY = 100 - (color.l / (100 - color.s / 2)) * 100;\r\n    const boxY = this.boxRect.height / 100 * percentY;\r\n\r\n    this.saturationHandler(this.boxRect.left + boxX, this.boxRect.top + boxY, false);\r\n\r\n    // Set hue\r\n    this.hueRect = this.elements.hue.getBoundingClientRect();\r\n\r\n    const percentHue = color.h / 360;\r\n    const hueX = this.hueRect.left + this.hueRect.width * percentHue;\r\n\r\n    this.hueHandler(hueX, false);\r\n\r\n    // Set values\r\n    this.hue = color.h;\r\n    this.saturation = color.s;\r\n    this.lightness = color.l;\r\n    this.alpha = color.a;\r\n\r\n    this.updatePicker(updateHexInput, updateRgbInput);\r\n  };\r\n\r\n  public getCurrentColor(): ColorPickerColor {\r\n    const rgbaArray = hslaToRgba(this.hue, this.saturation, this.lightness, this.alpha);\r\n    const hexa = rgbaToHexa(rgbaArray);\r\n    const hex = hexa.slice(0, -2);\r\n\r\n    return {\r\n      hsl: `hsl(${this.hue}, ${this.saturation}%, ${this.lightness}%)`,\r\n      rgb: `rgb(${rgbaArray[0]}, ${rgbaArray[1]}, ${rgbaArray[2]})`,\r\n      hex: hex,\r\n      hsla: `hsla(${this.hue}, ${this.saturation}%, ${this.lightness}%, ${this.alpha})`,\r\n      rgba: `rgba(${rgbaArray[0]}, ${rgbaArray[1]}, ${rgbaArray[2]}, ${rgbaArray[3]})`,\r\n      hexa: hexa,\r\n      rgbaArray: rgbaArray\r\n    };\r\n  }\r\n\r\n  public updatePicker(updateHexInput = true, updateRgbInput = true) {\r\n    const color = this.getCurrentColor();\r\n    this.elements.boxDragger.setAttributeNS(null, 'fill', color.hex);\r\n\r\n    if(updateHexInput) {\r\n      this.hexInputField.setValueSilently(color.hex);\r\n      this.hexInputField.setState(InputState.Neutral);\r\n    }\r\n\r\n    if(updateRgbInput) {\r\n      this.rgbInputField.setValueSilently(color.rgbaArray.slice(0, -1).join(', '));\r\n      this.rgbInputField.setState(InputState.Neutral);\r\n    }\r\n\r\n    if(this.onChange) {\r\n      this.onChange(color);\r\n    }\r\n  }\r\n\r\n  private hueHandler(pageX: number, update = true) {\r\n    const eventX = clamp(pageX - this.hueRect.left, 0, this.hueRect.width);\r\n\r\n    const percents = eventX / this.hueRect.width;\r\n    this.hue = Math.round(360 * percents);\r\n    \r\n    const hsla = `hsla(${this.hue}, 100%, 50%, ${this.alpha})`;\r\n\r\n    this.elements.hueDragger.setAttributeNS(null, 'x', (percents * 100) + '%');\r\n    this.elements.hueDragger.setAttributeNS(null, 'fill', hsla);\r\n    \r\n    this.elements.saturation.lastElementChild.setAttributeNS(null, 'stop-color', hsla);\r\n\r\n    if(update) {\r\n      this.updatePicker();\r\n    }\r\n  }\r\n\r\n  private saturationHandler(pageX: number, pageY: number, update = true) {\r\n    const maxX = this.boxRect.width;\r\n    const maxY = this.boxRect.height;\r\n\r\n    const eventX = clamp(pageX - this.boxRect.left, 0, maxX);\r\n    const eventY = clamp(pageY - this.boxRect.top, 0, maxY);\r\n\r\n    const posX = eventX / maxX * 100;\r\n    const posY = eventY / maxY * 100;\r\n    \r\n    const boxDragger = this.elements.boxDragger;\r\n    boxDragger.setAttributeNS(null, 'x', posX + '%');\r\n    boxDragger.setAttributeNS(null, 'y', posY + '%');\r\n\r\n    const saturation = clamp(posX, 0, 100);\r\n\r\n    const lightnessX = 100 - saturation / 2;\r\n    const lightnessY = 100 - clamp(posY, 0, 100);\r\n\r\n    const lightness = clamp(lightnessY / 100 * lightnessX, 0, 100);\r\n\r\n    this.saturation = saturation;\r\n    this.lightness = lightness;\r\n\r\n    if(update) {\r\n      this.updatePicker();\r\n    }\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"..\";\r\nimport { hexaToRgba } from \"../../../helpers/color\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport highlightningColor from \"../../../helpers/highlightningColor\";\r\nimport { throttle } from \"../../../helpers/schedulers\";\r\nimport appImManager from \"../../../lib/appManagers/appImManager\";\r\nimport appStateManager, { Theme } from \"../../../lib/appManagers/appStateManager\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport ColorPicker, { ColorPickerColor } from \"../../colorPicker\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\n\r\nexport default class AppBackgroundColorTab extends SliderSuperTab {\r\n  private colorPicker: ColorPicker;\r\n  private grid: HTMLElement;\r\n  private applyColor: (hex: string, updateColorPicker?: boolean) => void;\r\n  private theme: Theme;\r\n\r\n  init() {\r\n    this.container.classList.add('background-container', 'background-color-container');\r\n    this.setTitle('SetColor');\r\n\r\n    this.theme = rootScope.getTheme();\r\n\r\n    const section = new SettingSection({});\r\n    this.colorPicker = new ColorPicker();\r\n\r\n    section.content.append(this.colorPicker.container);\r\n\r\n    this.scrollable.append(section.container);\r\n\r\n    const grid = this.grid = document.createElement('div');\r\n    grid.classList.add('grid');\r\n\r\n    const colors = [\r\n      '#E6EBEE',\r\n      '#B2CEE1',\r\n      '#008DD0',\r\n      '#C6E7CB',\r\n      '#C4E1A6',\r\n      '#60B16E',\r\n      '#CCD0AF',\r\n      '#A6A997',\r\n      '#7A7072',\r\n      '#FDD7AF',\r\n      '#FDB76E',\r\n      '#DD8851'\r\n    ];\r\n\r\n    colors.forEach(color => {\r\n      const item = document.createElement('div');\r\n      item.classList.add('grid-item');\r\n      item.dataset.color = color.toLowerCase();\r\n\r\n      // * need for transform scale\r\n      const media = document.createElement('div');\r\n      media.classList.add('grid-item-media');\r\n      media.style.backgroundColor = color;\r\n\r\n      item.append(media);\r\n      grid.append(item);\r\n    });\r\n\r\n    attachClickEvent(grid, (e) => {\r\n      const target = findUpClassName(e.target, 'grid-item');\r\n      if(!target || target.classList.contains('active')) {\r\n        return;\r\n      }\r\n\r\n      const color = target.dataset.color;\r\n      if(!color) {\r\n        return;\r\n      }\r\n\r\n      this.applyColor(color);\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    this.scrollable.append(grid);\r\n\r\n    this.applyColor = throttle(this._applyColor, 16, true);\r\n  }\r\n\r\n  private setActive() {\r\n    const active = this.grid.querySelector('.active');\r\n    const background = this.theme.background;\r\n    const target = background.type === 'color' ? this.grid.querySelector(`.grid-item[data-color=\"${background.color}\"]`) : null;\r\n    if(active === target) {\r\n      return;\r\n    }\r\n\r\n    if(active) {\r\n      active.classList.remove('active');\r\n    }\r\n\r\n    if(target) {\r\n      target.classList.add('active');\r\n    }\r\n  }\r\n\r\n  private _applyColor = (hex: string, updateColorPicker = true) => {\r\n    if(updateColorPicker) {\r\n      this.colorPicker.setColor(hex);\r\n    } else {\r\n      const rgba = hexaToRgba(hex);\r\n      const background = this.theme.background;\r\n      const hsla = highlightningColor(rgba);\r\n    \r\n      background.color = hex.toLowerCase();\r\n      background.type = 'color';\r\n      background.highlightningColor = hsla;\r\n      appStateManager.pushToState('settings', rootScope.settings);\r\n    \r\n      appImManager.applyCurrentTheme(undefined, undefined, true);\r\n      this.setActive();\r\n    }\r\n  };\r\n\r\n  private onColorChange = (color: ColorPickerColor) => {\r\n    this.applyColor(color.hex, false);\r\n  };\r\n\r\n  onOpen() {\r\n    setTimeout(() => {\r\n      const background = this.theme.background;\r\n\r\n      // * set active if type is color\r\n      if(background.type === 'color') {\r\n        this.colorPicker.onChange = this.onColorChange;\r\n      }\r\n\r\n      this.colorPicker.setColor(background.color || '#cccccc');\r\n      \r\n      if(background.type !== 'color') {\r\n        this.colorPicker.onChange = this.onColorChange;\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  onCloseAfterTimeout() {\r\n    this.colorPicker.onChange = undefined;\r\n    this.colorPicker = undefined;\r\n\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { generateSection } from \"..\";\r\nimport { averageColor } from \"../../../helpers/averageColor\";\r\nimport blur from \"../../../helpers/blur\";\r\nimport { deferredPromise } from \"../../../helpers/cancellablePromise\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport { requestFile } from \"../../../helpers/files\";\r\nimport highlightningColor from \"../../../helpers/highlightningColor\";\r\nimport { copy } from \"../../../helpers/object\";\r\nimport sequentialDom from \"../../../helpers/sequentialDom\";\r\nimport { AccountWallPapers, PhotoSize, WallPaper } from \"../../../layer\";\r\nimport appDocsManager, { MyDocument } from \"../../../lib/appManagers/appDocsManager\";\r\nimport appDownloadManager from \"../../../lib/appManagers/appDownloadManager\";\r\nimport appImManager from \"../../../lib/appManagers/appImManager\";\r\nimport appPhotosManager from \"../../../lib/appManagers/appPhotosManager\";\r\nimport appStateManager, { Theme, STATE_INIT } from \"../../../lib/appManagers/appStateManager\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport Button from \"../../button\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport ProgressivePreloader from \"../../preloader\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport { wrapPhoto } from \"../../wrappers\";\r\nimport AppBackgroundColorTab from \"./backgroundColor\";\r\n\r\nlet uploadTempId = 0;\r\n\r\nexport default class AppBackgroundTab extends SliderSuperTab {\r\n  private grid: HTMLElement;\r\n  private tempId = 0;\r\n  private theme: Theme;\r\n  private clicked: Set<string> = new Set();\r\n  private blurCheckboxField: CheckboxField;\r\n\r\n  init() {\r\n    this.container.classList.add('background-container', 'background-image-container');\r\n    this.setTitle('ChatBackground');\r\n\r\n    this.theme = rootScope.getTheme();\r\n\r\n    {\r\n      const container = generateSection(this.scrollable);\r\n\r\n      const uploadButton = Button('btn-primary btn-transparent', {icon: 'cameraadd', text: 'ChatBackground.UploadWallpaper'});\r\n      const colorButton = Button('btn-primary btn-transparent', {icon: 'colorize', text: 'SetColor'});\r\n      const resetButton = Button('btn-primary btn-transparent', {icon: 'favourites', text: 'Appearance.Reset'});\r\n\r\n      attachClickEvent(uploadButton, this.onUploadClick, {listenerSetter: this.listenerSetter});\r\n\r\n      attachClickEvent(colorButton, () => {\r\n        new AppBackgroundColorTab(this.slider).open();\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      attachClickEvent(resetButton, this.onResetClick, {listenerSetter: this.listenerSetter});\r\n\r\n      const blurCheckboxField = this.blurCheckboxField = new CheckboxField({\r\n        text: 'ChatBackground.Blur', \r\n        name: 'blur', \r\n        checked: this.theme.background.blur,\r\n        withRipple: true\r\n      });\r\n\r\n      this.listenerSetter.add(blurCheckboxField.input, 'change', () => {\r\n        this.theme.background.blur = blurCheckboxField.input.checked;\r\n        appStateManager.pushToState('settings', rootScope.settings);\r\n\r\n        const active = grid.querySelector('.active') as HTMLElement;\r\n        if(!active) return;\r\n\r\n        // * wait for animation end\r\n        setTimeout(() => {\r\n          this.setBackgroundDocument(active.dataset.slug, appDocsManager.getDoc(active.dataset.docId));\r\n        }, 100);\r\n      });\r\n\r\n      container.append(uploadButton, colorButton, resetButton, blurCheckboxField.label);\r\n    }\r\n\r\n    rootScope.addEventListener('background_change', this.setActive);\r\n\r\n    apiManager.invokeApiHashable('account.getWallPapers').then((accountWallpapers) => {\r\n      const wallpapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers as WallPaper.wallPaper[];\r\n      wallpapers.forEach((wallpaper) => {\r\n        this.addWallPaper(wallpaper);\r\n      });\r\n\r\n      //console.log(accountWallpapers);\r\n    });\r\n\r\n    const grid = this.grid = document.createElement('div');\r\n    grid.classList.add('grid');\r\n    attachClickEvent(grid, this.onGridClick, {listenerSetter: this.listenerSetter});\r\n    this.scrollable.append(grid);\r\n  }\r\n\r\n  private onUploadClick = () => {\r\n    requestFile('image/x-png,image/png,image/jpeg').then(file => {\r\n      const id = 'wallpaper-upload-' + ++uploadTempId;\r\n\r\n      const thumb = {\r\n        _: 'photoSize',\r\n        h: 0,\r\n        w: 0,\r\n        location: {} as any,\r\n        size: file.size,\r\n        type: 'full',\r\n      } as PhotoSize.photoSize;\r\n      let document: MyDocument = {\r\n        _: 'document',\r\n        access_hash: '',\r\n        attributes: [],\r\n        dc_id: 0,\r\n        file_reference: [],\r\n        id,\r\n        mime_type: file.type,\r\n        size: file.size,\r\n        date: Date.now() / 1000,\r\n        pFlags: {},\r\n        thumbs: [thumb],\r\n        file_name: file.name\r\n      };\r\n\r\n      document = appDocsManager.saveDoc(document);\r\n\r\n      const cacheContext = appDownloadManager.getCacheContext(document);\r\n      cacheContext.downloaded = file.size;\r\n      cacheContext.url = URL.createObjectURL(file);\r\n\r\n      let wallpaper: WallPaper.wallPaper = {\r\n        _: 'wallPaper',\r\n        access_hash: '',\r\n        document: document,\r\n        id,\r\n        slug: id,\r\n        pFlags: {}\r\n      };\r\n\r\n      const upload = appDownloadManager.upload(file, file.name);\r\n\r\n      const deferred = deferredPromise<void>();\r\n      deferred.addNotifyListener = upload.addNotifyListener;\r\n      deferred.cancel = upload.cancel;\r\n\r\n      upload.then(inputFile => {\r\n        apiManager.invokeApi('account.uploadWallPaper', {\r\n          file: inputFile,\r\n          mime_type: file.type,\r\n          settings: {\r\n            _: 'wallPaperSettings'\r\n          }\r\n        }).then(_wallpaper => {\r\n          const newDoc = (_wallpaper as WallPaper.wallPaper).document as MyDocument;\r\n          const newCacheContext = appDownloadManager.getCacheContext(newDoc);\r\n          Object.assign(newCacheContext, cacheContext);\r\n\r\n          wallpaper = _wallpaper as WallPaper.wallPaper;\r\n          wallpaper.document = appDocsManager.saveDoc(wallpaper.document);\r\n\r\n          container.dataset.docId = wallpaper.document.id;\r\n          container.dataset.slug = wallpaper.slug;\r\n          \r\n          this.setBackgroundDocument(wallpaper.slug, wallpaper.document).then(deferred.resolve, deferred.reject);\r\n        }, deferred.reject);\r\n      }, deferred.reject);\r\n\r\n      deferred.then(() => {\r\n        this.clicked.delete(wallpaper.document.id);\r\n      }, (err) => {\r\n        container.remove();\r\n        //console.error('i saw the body drop', err);\r\n      });\r\n\r\n      const preloader = new ProgressivePreloader({\r\n        isUpload: true,\r\n        cancelable: true,\r\n        tryAgainOnFail: false\r\n      });\r\n\r\n      const container = this.addWallPaper(wallpaper, false);\r\n      this.clicked.add(wallpaper.document.id);\r\n\r\n      preloader.attach(container, false, deferred);\r\n    });\r\n  };\r\n\r\n  private onResetClick = () => {\r\n    const defaultTheme = STATE_INIT.settings.themes.find(t => t.name === this.theme.name);\r\n    if(defaultTheme) {\r\n      ++this.tempId;\r\n      this.theme.background = copy(defaultTheme.background);\r\n      appStateManager.pushToState('settings', rootScope.settings);\r\n      appImManager.applyCurrentTheme(undefined, undefined, true);\r\n      this.blurCheckboxField.setValueSilently(this.theme.background.blur);\r\n    }\r\n  };\r\n\r\n  private addWallPaper(wallpaper: WallPaper.wallPaper, append = true) {\r\n    if(wallpaper.pFlags.pattern || (wallpaper.document as MyDocument).mime_type.indexOf('application/') === 0) {\r\n      return;\r\n    }\r\n\r\n    wallpaper.document = appDocsManager.saveDoc(wallpaper.document);\r\n\r\n    const container = document.createElement('div');\r\n    container.classList.add('grid-item');\r\n\r\n    const media = document.createElement('div');\r\n    media.classList.add('grid-item-media');\r\n\r\n    const wrapped = wrapPhoto({\r\n      photo: wallpaper.document,\r\n      message: null,\r\n      container: media,\r\n      withoutPreloader: true,\r\n      size: appPhotosManager.choosePhotoSize(wallpaper.document, 200, 200)\r\n    });\r\n\r\n    container.dataset.docId = wallpaper.document.id;\r\n    container.dataset.slug = wallpaper.slug;\r\n\r\n    if(this.theme.background.type === 'image' && this.theme.background.slug === wallpaper.slug) {\r\n      container.classList.add('active');\r\n    }\r\n\r\n    (wrapped.loadPromises.thumb || wrapped.loadPromises.full).then(() => {\r\n      sequentialDom.mutate(() => {\r\n        container.append(media);\r\n      });\r\n    });\r\n\r\n    this.grid[append ? 'append' : 'prepend'](container);\r\n\r\n    return container;\r\n  }\r\n\r\n  private onGridClick = (e: MouseEvent | TouchEvent) => {\r\n    const target = findUpClassName(e.target, 'grid-item') as HTMLElement;\r\n    if(!target) return;\r\n\r\n    const {docId, slug} = target.dataset;\r\n    if(this.clicked.has(docId)) return;\r\n    this.clicked.add(docId);\r\n\r\n    const preloader = new ProgressivePreloader({\r\n      cancelable: true,\r\n      tryAgainOnFail: false\r\n    });\r\n\r\n    const doc = appDocsManager.getDoc(docId);\r\n\r\n    const load = () => {\r\n      const promise = this.setBackgroundDocument(slug, doc);\r\n      const cacheContext = appDownloadManager.getCacheContext(doc);\r\n      if(!cacheContext.url || this.theme.background.blur) {\r\n        preloader.attach(target, true, promise);\r\n      }\r\n    };\r\n\r\n    preloader.construct();\r\n\r\n    attachClickEvent(target, (e) => {\r\n      if(preloader.preloader.parentElement) {\r\n        preloader.onClick(e);\r\n        preloader.detach();\r\n      } else {\r\n        load();\r\n      }\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    load();\r\n\r\n    //console.log(doc);\r\n  };\r\n\r\n  private saveToCache = (slug: string, url: string) => {\r\n    fetch(url).then(response => {\r\n      appDownloadManager.cacheStorage.save('backgrounds/' + slug, response);\r\n    });\r\n  };\r\n\r\n  private setBackgroundDocument = (slug: string, doc: MyDocument) => {\r\n    let _tempId = ++this.tempId;\r\n    const middleware = () => _tempId === this.tempId;\r\n\r\n    const download = appDocsManager.downloadDoc(doc, appImManager.chat.bubbles ? appImManager.chat.bubbles.lazyLoadQueue.queueId : 0);\r\n\r\n    const deferred = deferredPromise<void>();\r\n    deferred.addNotifyListener = download.addNotifyListener;\r\n    deferred.cancel = download.cancel;\r\n\r\n    download.then(() => {\r\n      if(!middleware()) {\r\n        deferred.resolve();\r\n        return;\r\n      }\r\n\r\n      const background = this.theme.background;\r\n      const onReady = (url: string) => {\r\n        //const perf = performance.now();\r\n        averageColor(url).then(pixel => {\r\n          if(!middleware()) {\r\n            deferred.resolve();\r\n            return;\r\n          }\r\n          \r\n          const hsla = highlightningColor(Array.from(pixel) as any);\r\n          //console.log(doc, hsla, performance.now() - perf);\r\n\r\n          background.slug = slug;\r\n          background.type = 'image';\r\n          background.highlightningColor = hsla;\r\n          appStateManager.pushToState('settings', rootScope.settings);\r\n\r\n          this.saveToCache(slug, url);\r\n          appImManager.applyCurrentTheme(slug, url).then(deferred.resolve);\r\n        });\r\n      };\r\n\r\n      const cacheContext = appDownloadManager.getCacheContext(doc);\r\n      if(background.blur) {\r\n        setTimeout(() => {\r\n          blur(cacheContext.url, 12, 4)\r\n          .then(url => {\r\n            if(!middleware()) {\r\n              deferred.resolve();\r\n              return;\r\n            }\r\n\r\n            onReady(url);\r\n          });\r\n        }, 200);\r\n      } else {\r\n        onReady(cacheContext.url);\r\n      }\r\n    });\r\n\r\n    return deferred;\r\n  };\r\n\r\n  private setActive = () => {\r\n    const active = this.grid.querySelector('.active');\r\n    const background = this.theme.background;\r\n    const target = background.type === 'image' ? this.grid.querySelector(`.grid-item[data-slug=\"${background.slug}\"]`) : null;\r\n    if(active === target) {\r\n      return;\r\n    }\r\n\r\n    if(active) {\r\n      active.classList.remove('active');\r\n    }\r\n\r\n    if(target) {\r\n      target.classList.add('active');\r\n    }\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport renderImageFromUrl from \"./dom/renderImageFromUrl\";\r\n\r\nexport const averageColor = (imageUrl: string): Promise<Uint8ClampedArray> => {\r\n  const img = document.createElement('img');\r\n  return new Promise<Uint8ClampedArray>((resolve) => {\r\n    renderImageFromUrl(img, imageUrl, () => {\r\n      const canvas = document.createElement('canvas');\r\n      const ratio = img.naturalWidth / img.naturalHeight;\r\n      const DIMENSIONS = 50;\r\n      if(ratio === 1) {\r\n        canvas.width = DIMENSIONS;\r\n        canvas.height = canvas.width / ratio;\r\n      } else if(ratio > 1) {\r\n        canvas.height = DIMENSIONS;\r\n        canvas.width = canvas.height / ratio;\r\n      } else {\r\n        canvas.width = canvas.height = DIMENSIONS;\r\n      }\r\n      \r\n      const context = canvas.getContext('2d');\r\n      context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, canvas.width, canvas.height);\r\n\r\n      const pixel = new Array(4).fill(0);\r\n      const pixels = context.getImageData(0, 0, canvas.width, canvas.height).data;\r\n      for(let i = 0; i < pixels.length; i += 4) {\r\n        pixel[0] += pixels[i];\r\n        pixel[1] += pixels[i + 1];\r\n        pixel[2] += pixels[i + 2];\r\n        pixel[3] += pixels[i + 3];\r\n      }\r\n\r\n      const pixelsLength = pixels.length / 4;\r\n      const outPixel = new Uint8ClampedArray(4);\r\n      outPixel[0] = pixel[0] / pixelsLength;\r\n      outPixel[1] = pixel[1] / pixelsLength;\r\n      outPixel[2] = pixel[2] / pixelsLength;\r\n      outPixel[3] = pixel[3] / pixelsLength;\r\n      resolve(outPixel);\r\n    });\r\n  });\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport PopupElement from \".\";\r\nimport appStickersManager, { AppStickersManager } from \"../../lib/appManagers/appStickersManager\";\r\nimport { RichTextProcessor } from \"../../lib/richtextprocessor\";\r\nimport Scrollable from \"../scrollable\";\r\nimport { wrapSticker } from \"../wrappers\";\r\nimport LazyLoadQueue from \"../lazyLoadQueue\";\r\nimport { putPreloader } from \"../misc\";\r\nimport animationIntersector from \"../animationIntersector\";\r\nimport appImManager from \"../../lib/appManagers/appImManager\";\r\nimport { StickerSet } from \"../../layer\";\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport { i18n } from \"../../lib/langPack\";\r\nimport Button from \"../button\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport toggleDisability from \"../../helpers/dom/toggleDisability\";\r\n\r\nconst ANIMATION_GROUP = 'STICKERS-POPUP';\r\n\r\nexport default class PopupStickers extends PopupElement {\r\n  private stickersFooter: HTMLElement;\r\n  private stickersDiv: HTMLElement;\r\n  private h6: HTMLElement;\r\n\r\n  private set: StickerSet.stickerSet;\r\n\r\n  constructor(private stickerSetInput: Parameters<AppStickersManager['getStickerSet']>[0]) {\r\n    super('popup-stickers', null, {closable: true, overlayClosable: true, body: true});\r\n\r\n    this.h6 = document.createElement('h6');\r\n    this.h6.append(i18n('Loading'));\r\n\r\n    this.header.append(this.h6);\r\n\r\n    this.onClose = () => {\r\n      animationIntersector.setOnlyOnePlayableGroup('');\r\n      this.stickersFooter.removeEventListener('click', this.onFooterClick);\r\n      this.stickersDiv.removeEventListener('click', this.onStickersClick);\r\n    };\r\n\r\n    const div = document.createElement('div');\r\n    div.classList.add('sticker-set');\r\n\r\n    this.stickersDiv = document.createElement('div');\r\n    this.stickersDiv.classList.add('sticker-set-stickers', 'is-loading');\r\n\r\n    putPreloader(this.stickersDiv, true);\r\n\r\n    this.stickersFooter = document.createElement('div');\r\n    this.stickersFooter.classList.add('sticker-set-footer');\r\n\r\n    div.append(this.stickersDiv);\r\n\r\n    const btn = Button('btn-primary btn-primary-transparent disable-hover', {noRipple: true, text: 'Loading'});\r\n    this.stickersFooter.append(btn);\r\n\r\n    this.body.append(div);\r\n    const scrollable = new Scrollable(this.body);\r\n    this.body.append(this.stickersFooter);\r\n    \r\n    // const editButton = document.createElement('button');\r\n    // editButton.classList.add('btn-primary');\r\n\r\n    // this.stickersFooter.append(editButton);\r\n\r\n    this.loadStickerSet();\r\n  }\r\n\r\n  onFooterClick = () => {\r\n    const toggle = toggleDisability([this.stickersFooter], true);\r\n\r\n    appStickersManager.toggleStickerSet(this.set).then(() => {\r\n      this.hide();\r\n    }).catch(() => {\r\n      toggle();\r\n    });\r\n  };\r\n\r\n  onStickersClick = (e: MouseEvent) => {\r\n    const target = findUpClassName(e.target, 'sticker-set-sticker');\r\n    if(!target) return;\r\n\r\n    const fileId = target.dataset.docId;\r\n    if(appImManager.chat.input.sendMessageWithDocument(fileId)) {\r\n      this.hide();\r\n    } else {\r\n      console.warn('got no doc by id:', fileId);\r\n    }\r\n  };\r\n\r\n  private loadStickerSet() {\r\n    return appStickersManager.getStickerSet(this.stickerSetInput).then(set => {\r\n      //console.log('PopupStickers loadStickerSet got set:', set);\r\n\r\n      this.set = set.set;\r\n\r\n      animationIntersector.setOnlyOnePlayableGroup(ANIMATION_GROUP);\r\n\r\n      this.h6.innerHTML = RichTextProcessor.wrapEmojiText(set.set.title);\r\n      this.stickersFooter.classList.toggle('add', !set.set.installed_date);\r\n\r\n      let button: HTMLElement;\r\n      if(set.set.installed_date) {\r\n        button = Button('btn-primary btn-primary-transparent danger', {noRipple: true});\r\n        button.append(i18n('RemoveStickersCount', [i18n('Stickers', [set.set.count])]));\r\n      } else {\r\n        button = Button('btn-primary btn-color-primary', {noRipple: true});\r\n        button.append(i18n('AddStickersCount', [i18n('Stickers', [set.set.count])]));\r\n      }\r\n\r\n      this.stickersFooter.textContent = '';\r\n      this.stickersFooter.append(button);\r\n\r\n      button.addEventListener('click', this.onFooterClick);\r\n\r\n      if(set.documents.length) {\r\n        this.stickersDiv.addEventListener('click', this.onStickersClick);\r\n      }\r\n\r\n      const lazyLoadQueue = new LazyLoadQueue();\r\n      \r\n      this.stickersDiv.classList.remove('is-loading');\r\n      this.stickersDiv.innerHTML = '';\r\n      for(let doc of set.documents) {\r\n        if(doc._ === 'documentEmpty') {\r\n          continue;\r\n        }\r\n        \r\n        const div = document.createElement('div');\r\n        div.classList.add('sticker-set-sticker');\r\n\r\n        const size = mediaSizes.active.esgSticker.width;\r\n        \r\n        wrapSticker({\r\n          doc, \r\n          div, \r\n          lazyLoadQueue, \r\n          group: ANIMATION_GROUP, \r\n          play: true,\r\n          loop: true,\r\n          width: size,\r\n          height: size\r\n        });\r\n\r\n        this.stickersDiv.append(div);\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\"\r\nimport { generateSection } from \"..\";\r\nimport RangeSelector from \"../../rangeSelector\";\r\nimport Button from \"../../button\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport RadioField from \"../../radioField\";\r\nimport appStateManager from \"../../../lib/appManagers/appStateManager\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport { isApple } from \"../../../helpers/userAgent\";\r\nimport Row from \"../../row\";\r\nimport AppBackgroundTab from \"./background\";\r\nimport { LangPackKey, _i18n } from \"../../../lib/langPack\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport appStickersManager from \"../../../lib/appManagers/appStickersManager\";\r\nimport assumeType from \"../../../helpers/assumeType\";\r\nimport { MessagesAllStickers, StickerSet } from \"../../../layer\";\r\nimport RichTextProcessor from \"../../../lib/richtextprocessor\";\r\nimport { wrapStickerSetThumb } from \"../../wrappers\";\r\nimport LazyLoadQueue from \"../../lazyLoadQueue\";\r\nimport PopupStickers from \"../../popups/stickers\";\r\n\r\nexport class RangeSettingSelector {\r\n  public container: HTMLDivElement;\r\n  private range: RangeSelector;\r\n\r\n  public onChange: (value: number) => void;\r\n\r\n  constructor(name: LangPackKey, step: number, initialValue: number, minValue: number, maxValue: number) {\r\n    const BASE_CLASS = 'range-setting-selector';\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add(BASE_CLASS);\r\n\r\n    const details = document.createElement('div');\r\n    details.classList.add(BASE_CLASS + '-details');\r\n\r\n    const nameDiv = document.createElement('div');\r\n    nameDiv.classList.add(BASE_CLASS + '-name');\r\n    _i18n(nameDiv, name);\r\n\r\n    const valueDiv = document.createElement('div');\r\n    valueDiv.classList.add(BASE_CLASS + '-value');\r\n    valueDiv.innerHTML = '' + initialValue;\r\n\r\n    details.append(nameDiv, valueDiv);\r\n\r\n    this.range = new RangeSelector(step, initialValue, minValue, maxValue);\r\n    this.range.setListeners();\r\n    this.range.setHandlers({\r\n      onScrub: value => {\r\n        if(this.onChange) {\r\n          this.onChange(value);\r\n        }\r\n\r\n        //console.log('font size scrub:', value);\r\n        valueDiv.innerText = '' + value;\r\n      }\r\n    });\r\n\r\n    this.container.append(details, this.range.container);\r\n  }\r\n}\r\n\r\nexport default class AppGeneralSettingsTab extends SliderSuperTab {\r\n  init() {\r\n    this.container.classList.add('general-settings-container');\r\n    this.setTitle('General');\r\n\r\n    const section = generateSection.bind(null, this.scrollable);\r\n\r\n    {\r\n      const container = section('Settings');\r\n      \r\n      const range = new RangeSettingSelector('TextSize', 1, rootScope.settings.messagesTextSize, 12, 20);\r\n      range.onChange = (value) => {\r\n        appStateManager.setByKey('settings.messagesTextSize', value);\r\n      };\r\n\r\n      const chatBackgroundButton = Button('btn-primary btn-transparent', {icon: 'image', text: 'ChatBackground'});\r\n\r\n      attachClickEvent(chatBackgroundButton, () => {\r\n        new AppBackgroundTab(this.slider).open();\r\n      });\r\n\r\n      const animationsCheckboxField = new CheckboxField({\r\n        text: 'EnableAnimations', \r\n        name: 'animations', \r\n        stateKey: 'settings.animationsEnabled',\r\n        withRipple: true\r\n      });\r\n      \r\n      container.append(range.container, chatBackgroundButton, animationsCheckboxField.label);\r\n    }\r\n\r\n    {\r\n      const container = section('General.Keyboard');\r\n\r\n      const form = document.createElement('form');\r\n\r\n      const enterRow = new Row({\r\n        radioField: new RadioField({\r\n          langKey: 'General.SendShortcut.Enter', \r\n          name: 'send-shortcut', \r\n          value: 'enter', \r\n          stateKey: 'settings.sendShortcut'\r\n        }),\r\n        subtitleLangKey: 'General.SendShortcut.NewLine.ShiftEnter'\r\n      });\r\n\r\n      const ctrlEnterRow = new Row({\r\n        radioField: new RadioField({\r\n          name: 'send-shortcut',\r\n          value: 'ctrlEnter', \r\n          stateKey: 'settings.sendShortcut'\r\n        }),\r\n        subtitleLangKey: 'General.SendShortcut.NewLine.Enter'\r\n      });\r\n      _i18n(ctrlEnterRow.radioField.main, 'General.SendShortcut.CtrlEnter', [isApple ? '⌘' : 'Ctrl']);\r\n      \r\n      form.append(enterRow.container, ctrlEnterRow.container);\r\n      container.append(form);\r\n    }\r\n\r\n    {\r\n      const container = section('AutoDownloadMedia');\r\n      //container.classList.add('sidebar-left-section-disabled');\r\n\r\n      const contactsCheckboxField = new CheckboxField({\r\n        text: 'AutodownloadContacts', \r\n        name: 'contacts',\r\n        stateKey: 'settings.autoDownload.contacts',\r\n        withRipple: true\r\n      });\r\n      const privateCheckboxField = new CheckboxField({\r\n        text: 'AutodownloadPrivateChats', \r\n        name: 'private',\r\n        stateKey: 'settings.autoDownload.private',\r\n        withRipple: true\r\n      });\r\n      const groupsCheckboxField = new CheckboxField({\r\n        text: 'AutodownloadGroupChats', \r\n        name: 'groups',\r\n        stateKey: 'settings.autoDownload.groups',\r\n        withRipple: true\r\n      });\r\n      const channelsCheckboxField = new CheckboxField({\r\n        text: 'AutodownloadChannels', \r\n        name: 'channels',\r\n        stateKey: 'settings.autoDownload.channels',\r\n        withRipple: true\r\n      });\r\n\r\n      container.append(contactsCheckboxField.label, privateCheckboxField.label, groupsCheckboxField.label, channelsCheckboxField.label);\r\n    }\r\n\r\n    {\r\n      const container = section('General.AutoplayMedia');\r\n      //container.classList.add('sidebar-left-section-disabled');\r\n\r\n      const gifsCheckboxField = new CheckboxField({\r\n        text: 'AutoplayGIF', \r\n        name: 'gifs', \r\n        stateKey: 'settings.autoPlay.gifs',\r\n        withRipple: true\r\n      });\r\n      const videosCheckboxField = new CheckboxField({\r\n        text: 'AutoplayVideo', \r\n        name: 'videos', \r\n        stateKey: 'settings.autoPlay.videos',\r\n        withRipple: true\r\n      });\r\n\r\n      container.append(gifsCheckboxField.label, videosCheckboxField.label);\r\n    }\r\n\r\n    {\r\n      const container = section('Emoji');\r\n\r\n      const suggestCheckboxField = new CheckboxField({\r\n        text: 'GeneralSettings.EmojiPrediction', \r\n        name: 'suggest-emoji', \r\n        stateKey: 'settings.emoji.suggest',\r\n        withRipple: true\r\n      });\r\n      const bigCheckboxField = new CheckboxField({\r\n        text: 'GeneralSettings.BigEmoji', \r\n        name: 'emoji-big', \r\n        stateKey: 'settings.emoji.big',\r\n        withRipple: true\r\n      });\r\n\r\n      container.append(suggestCheckboxField.label, bigCheckboxField.label);\r\n    }\r\n    \r\n    {\r\n      const container = section('Telegram.InstalledStickerPacksController');\r\n\r\n      const suggestCheckboxField = new CheckboxField({\r\n        text: 'Stickers.SuggestStickers', \r\n        name: 'suggest', \r\n        stateKey: 'settings.stickers.suggest',\r\n        withRipple: true\r\n      });\r\n      const loopCheckboxField = new CheckboxField({\r\n        text: 'InstalledStickers.LoopAnimated', \r\n        name: 'loop', \r\n        stateKey: 'settings.stickers.loop',\r\n        withRipple: true\r\n      });\r\n\r\n      const stickerSets: {[id: string]: Row} = {};\r\n\r\n      const lazyLoadQueue = new LazyLoadQueue();\r\n      const renderStickerSet = (stickerSet: StickerSet.stickerSet, method: 'append' | 'prepend' = 'append') => {\r\n        const row = new Row({\r\n          title: RichTextProcessor.wrapEmojiText(stickerSet.title),\r\n          subtitleLangKey: 'Stickers',\r\n          subtitleLangArgs: [stickerSet.count],\r\n          havePadding: true,\r\n          clickable: () => {\r\n            new PopupStickers({id: stickerSet.id, access_hash: stickerSet.access_hash}).show();\r\n          }\r\n        });\r\n\r\n        stickerSets[stickerSet.id] = row;\r\n\r\n        const div = document.createElement('div');\r\n        div.classList.add('row-media');\r\n\r\n        wrapStickerSetThumb({\r\n          set: stickerSet,\r\n          container: div,\r\n          group: 'GENERAL-SETTINGS',\r\n          lazyLoadQueue,\r\n          width: 48,\r\n          height: 48,\r\n          autoplay: true\r\n        });\r\n\r\n        row.container.append(div);\r\n\r\n        container[method](row.container);\r\n      };\r\n\r\n      appStickersManager.getAllStickers().then(allStickers => {\r\n        assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\r\n        for(const stickerSet of allStickers.sets) {\r\n          renderStickerSet(stickerSet);\r\n        }\r\n      });\r\n\r\n      this.listenerSetter.add(rootScope, 'stickers_installed', (e) => {\r\n        const set: StickerSet.stickerSet = e;\r\n        \r\n        if(!stickerSets[set.id]) {\r\n          renderStickerSet(set, 'prepend');\r\n        }\r\n      });\r\n  \r\n      this.listenerSetter.add(rootScope, 'stickers_deleted', (e) => {\r\n        const set: StickerSet.stickerSet = e;\r\n        \r\n        if(stickerSets[set.id]) {\r\n          stickerSets[set.id].container.remove();\r\n          delete stickerSets[set.id];\r\n        }\r\n      });\r\n\r\n      container.append(suggestCheckboxField.label, loopCheckboxField.label);\r\n    }\r\n  }\r\n\r\n  onOpen() {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appProfileManager from \"../../../lib/appManagers/appProfileManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport InputField from \"../../inputField\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport EditPeer from \"../../editPeer\";\r\nimport { UsernameInputField } from \"../../usernameInputField\";\r\nimport { i18n, i18n_ } from \"../../../lib/langPack\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\n\r\n// TODO: аватарка не поменяется в этой вкладке после изменения почему-то (если поставить в другом клиенте, и потом тут проверить, для этого ещё вышел в чатлист)\r\n\r\nexport default class AppEditProfileTab extends SliderSuperTab {\r\n  private firstNameInputField: InputField;\r\n  private lastNameInputField: InputField;\r\n  private bioInputField: InputField;\r\n  private usernameInputField: InputField;\r\n  \r\n  private profileUrlContainer: HTMLDivElement;\r\n  private profileUrlAnchor: HTMLAnchorElement;\r\n\r\n  private editPeer: EditPeer;\r\n\r\n  protected async init() {\r\n    this.container.classList.add('edit-profile-container');\r\n    this.setTitle('EditAccount.Title');\r\n\r\n    const inputFields: InputField[] = [];\r\n\r\n    {\r\n      const inputWrapper = document.createElement('div');\r\n      inputWrapper.classList.add('input-wrapper');\r\n  \r\n      this.firstNameInputField = new InputField({\r\n        label: 'EditProfile.FirstNameLabel',\r\n        name: 'first-name',\r\n        maxLength: 70\r\n      });\r\n      this.lastNameInputField = new InputField({\r\n        label: 'Login.Register.LastName.Placeholder',\r\n        name: 'last-name',\r\n        maxLength: 64\r\n      });\r\n      this.bioInputField = new InputField({\r\n        label: 'EditProfile.BioLabel',\r\n        name: 'bio',\r\n        maxLength: 70\r\n      });\r\n  \r\n      inputWrapper.append(this.firstNameInputField.container, this.lastNameInputField.container, this.bioInputField.container);\r\n      \r\n      const caption = document.createElement('div');\r\n      caption.classList.add('caption');\r\n      i18n_({element: caption, key: 'Bio.Description'});\r\n\r\n      inputFields.push(this.firstNameInputField, this.lastNameInputField, this.bioInputField);\r\n      this.scrollable.append(inputWrapper, caption);\r\n    }\r\n\r\n    this.scrollable.append(document.createElement('hr'));\r\n\r\n    this.editPeer = new EditPeer({\r\n      peerId: appUsersManager.getSelf().id,\r\n      inputFields,\r\n      listenerSetter: this.listenerSetter\r\n    });\r\n    this.content.append(this.editPeer.nextBtn);\r\n    this.scrollable.prepend(this.editPeer.avatarEdit.container);\r\n\r\n    {\r\n      const h2 = document.createElement('div');\r\n      h2.classList.add('sidebar-left-h2');\r\n      i18n_({element: h2, key: 'EditAccount.Username'});\r\n\r\n      const inputWrapper = document.createElement('div');\r\n      inputWrapper.classList.add('input-wrapper');\r\n\r\n      this.usernameInputField = new UsernameInputField({\r\n        peerId: 0,\r\n        label: 'EditProfile.Username.Label',\r\n        name: 'username',\r\n        plainText: true,\r\n        listenerSetter: this.listenerSetter,\r\n        onChange: () => {\r\n          this.editPeer.handleChange();\r\n          this.setProfileUrl();\r\n        },\r\n        availableText: 'EditProfile.Username.Available',\r\n        takenText: 'EditProfile.Username.Taken',\r\n        invalidText: 'EditProfile.Username.Invalid'\r\n      });\r\n\r\n      inputWrapper.append(this.usernameInputField.container);\r\n\r\n      const caption = document.createElement('div');\r\n      caption.classList.add('caption');\r\n      caption.append(i18n('EditProfile.Username.Help'));\r\n      caption.append(document.createElement('br'), document.createElement('br'));\r\n\r\n      const profileUrlContainer = this.profileUrlContainer = document.createElement('div');\r\n      profileUrlContainer.classList.add('profile-url-container');\r\n      \r\n      const profileUrlAnchor = this.profileUrlAnchor = document.createElement('a');\r\n      profileUrlAnchor.classList.add('profile-url');\r\n      profileUrlAnchor.href = '#';\r\n      profileUrlAnchor.target = '_blank';\r\n\r\n      profileUrlContainer.append(i18n('UsernameHelpLink', [profileUrlAnchor]));\r\n\r\n      caption.append(profileUrlContainer);\r\n\r\n      inputFields.push(this.usernameInputField);\r\n      this.scrollable.append(h2, inputWrapper, caption);\r\n    }\r\n\r\n    attachClickEvent(this.editPeer.nextBtn, () => {\r\n      this.editPeer.nextBtn.disabled = true;\r\n\r\n      let promises: Promise<any>[] = [];\r\n      \r\n      promises.push(appProfileManager.updateProfile(this.firstNameInputField.value, this.lastNameInputField.value, this.bioInputField.value).then(() => {\r\n        this.close();\r\n      }, (err) => {\r\n        console.error('updateProfile error:', err);\r\n      }));\r\n\r\n      if(this.editPeer.uploadAvatar) {\r\n        promises.push(this.editPeer.uploadAvatar().then(inputFile => {\r\n          return appProfileManager.uploadProfilePhoto(inputFile);\r\n        }));\r\n      }\r\n\r\n      if(this.usernameInputField.isValid() && !this.usernameInputField.input.classList.contains('error')) {\r\n        promises.push(appUsersManager.updateUsername(this.usernameInputField.value));\r\n      }\r\n\r\n      Promise.race(promises).finally(() => {\r\n        this.editPeer.nextBtn.removeAttribute('disabled');\r\n      });\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    const user = appUsersManager.getSelf();\r\n\r\n    const userFull = await appProfileManager.getProfile(user.id, true);\r\n\r\n    this.firstNameInputField.setOriginalValue(user.first_name, true);\r\n    this.lastNameInputField.setOriginalValue(user.last_name, true);\r\n    this.bioInputField.setOriginalValue(userFull.about, true);\r\n    this.usernameInputField.setOriginalValue(user.username, true);\r\n\r\n    this.setProfileUrl();\r\n    this.editPeer.handleChange();\r\n  }\r\n\r\n  private setProfileUrl() {\r\n    if(this.usernameInputField.input.classList.contains('error') || !this.usernameInputField.value.length) {\r\n      this.profileUrlContainer.style.display = 'none';\r\n    } else {\r\n      this.profileUrlContainer.style.display = '';\r\n      let url = 'https://t.me/' + this.usernameInputField.value;\r\n      this.profileUrlAnchor.innerText = url;\r\n      this.profileUrlAnchor.href = url;\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport AppSelectPeers from \"../../appSelectPeers\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport { MyDialogFilter as DialogFilter } from \"../../../lib/storages/filters\";\r\nimport { copy } from \"../../../helpers/object\";\r\nimport ButtonIcon from \"../../buttonIcon\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport Button from \"../../button\";\r\nimport AppEditFolderTab from \"./editFolder\";\r\nimport I18n, { i18n, LangPackKey, _i18n, join } from \"../../../lib/langPack\";\r\nimport appMessagesManager from \"../../../lib/appManagers/appMessagesManager\";\r\nimport RichTextProcessor from \"../../../lib/richtextprocessor\";\r\nimport { SettingSection } from \"..\";\r\nimport { toast } from \"../../toast\";\r\n\r\nexport default class AppIncludedChatsTab extends SliderSuperTab {\r\n  private editFolderTab: AppEditFolderTab;\r\n  private confirmBtn: HTMLElement;\r\n\r\n  private selector: AppSelectPeers;\r\n  private type: 'included' | 'excluded';\r\n  private filter: DialogFilter;\r\n  private originalFilter: DialogFilter;\r\n\r\n  private dialogsByFilters: Map<DialogFilter, Set<number>>;\r\n\r\n  protected init() {\r\n    this.content.remove();\r\n    this.container.classList.add('included-chatlist-container');\r\n    this.confirmBtn = ButtonIcon('check btn-confirm blue', {noRipple: true});\r\n    this.confirmBtn.style.display = 'none';\r\n\r\n    this.header.append(this.confirmBtn);\r\n\r\n    this.confirmBtn.addEventListener('click', () => {\r\n      const selected = this.selector.getSelected();\r\n\r\n      //this.filter.pFlags = {};\r\n\r\n      if(this.type === 'included') {\r\n        for(const key in this.filter.pFlags) {\r\n          if(key.indexOf('exclude_') === 0) {\r\n            continue;\r\n          }\r\n\r\n          // @ts-ignore\r\n          delete this.filter.pFlags[key];\r\n        }\r\n      } else {\r\n        for(const key in this.filter.pFlags) {\r\n          if(key.indexOf('exclude_') !== 0) {\r\n            continue;\r\n          }\r\n\r\n          // @ts-ignore\r\n          delete this.filter.pFlags[key];\r\n        }\r\n      }\r\n\r\n      const peers: number[] = [];\r\n      for(const key of selected) {\r\n        if(typeof(key) === 'number') {\r\n          peers.push(key);\r\n        } else {\r\n          // @ts-ignore\r\n          this.filter.pFlags[key] = true;\r\n        }\r\n      }\r\n\r\n      if(this.type === 'included') {\r\n        this.filter.pinned_peers = this.filter.pinned_peers.filter(peerId => {\r\n          return peers.includes(peerId); // * because I have pinned peer in include_peers too\r\n          /* const index = peers.indexOf(peerId);\r\n          if(index !== -1) {\r\n            peers.splice(index, 1);\r\n            return true;\r\n          } else {\r\n            return false;\r\n          } */\r\n        });\r\n      } else {\r\n        this.filter.pinned_peers = this.filter.pinned_peers.filter(peerId => {\r\n          return !peers.includes(peerId);\r\n        });\r\n      }\r\n\r\n      const other = this.type === 'included' ? 'exclude_peers' : 'include_peers';\r\n      this.filter[other] = this.filter[other].filter(peerId => {\r\n        return !peers.includes(peerId);\r\n      });\r\n      \r\n      this.filter[this.type === 'included' ? 'include_peers' : 'exclude_peers'] = peers;\r\n      //this.filter.pinned_peers = this.filter.pinned_peers.filter(peerId => this.filter.include_peers.includes(peerId));\r\n\r\n      this.editFolderTab.setFilter(this.filter, false);\r\n      this.close();\r\n    });\r\n\r\n    this.dialogsByFilters = new Map();\r\n    return appMessagesManager.filtersStorage.getDialogFilters().then(filters => {\r\n      for(const filter of filters) {\r\n        this.dialogsByFilters.set(filter, new Set(appMessagesManager.dialogsStorage.getFolder(filter.id).map(d => d.peerId)));\r\n      }\r\n    });\r\n  }\r\n\r\n  checkbox(selected?: boolean) {\r\n    const checkboxField = new CheckboxField({\r\n      round: true\r\n    });\r\n    if(selected) {\r\n      checkboxField.input.checked = selected;\r\n    }\r\n\r\n    return checkboxField.label;\r\n  }\r\n\r\n  renderResults = async(peerIds: number[]) => {\r\n    //const other = this.type === 'included' ? this.filter.exclude_peers : this.filter.include_peers;\r\n\r\n    await appUsersManager.getContacts();\r\n    peerIds.forEach(peerId => {\r\n      //if(other.includes(peerId)) return;\r\n\r\n      const {dom} = appDialogsManager.addDialogNew({\r\n        dialog: peerId,\r\n        container: this.selector.scrollable,\r\n        drawStatus: false,\r\n        rippleEnabled: true,\r\n        avatarSize: 46\r\n      });\r\n\r\n      const selected = this.selector.selected.has(peerId);\r\n      dom.containerEl.append(this.checkbox(selected));\r\n      //if(selected) dom.listEl.classList.add('active');\r\n\r\n      const foundInFilters: HTMLElement[] = [];\r\n      this.dialogsByFilters.forEach((dialogs, filter) => {\r\n        if(dialogs.has(peerId)) {\r\n          const span = document.createElement('span');\r\n          span.innerHTML = RichTextProcessor.wrapEmojiText(filter.title);\r\n          foundInFilters.push(span);\r\n        }\r\n      });\r\n\r\n      const joined = join(foundInFilters, false);\r\n      joined.forEach(el => {\r\n        dom.lastMessageSpan.append(el);\r\n      });\r\n    });\r\n  };\r\n\r\n  onOpen() {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    this.confirmBtn.style.display = this.type === 'excluded' ? '' : 'none';\r\n    this.setTitle(this.type === 'included' ? 'FilterAlwaysShow' : 'FilterNeverShow');\r\n\r\n    const filter = this.filter;\r\n\r\n    const fragment = document.createDocumentFragment();\r\n\r\n    const categoriesSection = new SettingSection({\r\n      noDelimiter: true,\r\n      name: 'FilterChatTypes'\r\n    });\r\n\r\n    categoriesSection.container.classList.add('folder-categories');\r\n\r\n    let details: {[flag: string]: {ico: string, text: LangPackKey}};\r\n    if(this.type === 'excluded') {\r\n      details = {\r\n        exclude_muted: {ico: 'mute', text: 'ChatList.Filter.MutedChats'},\r\n        exclude_archived: {ico: 'archive', text: 'ChatList.Filter.Archive'},\r\n        exclude_read: {ico: 'readchats', text: 'ChatList.Filter.ReadChats'}\r\n      };\r\n    } else {\r\n      details = {\r\n        contacts: {ico: 'newprivate', text: 'ChatList.Filter.Contacts'},\r\n        non_contacts: {ico: 'noncontacts', text: 'ChatList.Filter.NonContacts'},\r\n        groups: {ico: 'group', text: 'ChatList.Filter.Groups'},\r\n        broadcasts: {ico: 'newchannel', text: 'ChatList.Filter.Channels'},\r\n        bots: {ico: 'bots', text: 'ChatList.Filter.Bots'}\r\n      };\r\n    }\r\n\r\n    const f = document.createDocumentFragment();\r\n    for(const key in details) {\r\n      const button = Button('btn-primary btn-transparent folder-category-button', {icon: details[key].ico, text: details[key].text});\r\n      button.dataset.peerId = key;\r\n      button.append(this.checkbox());\r\n      f.append(button);\r\n    }\r\n    categoriesSection.content.append(f);\r\n\r\n    const chatsSection = new SettingSection({\r\n      name: 'FilterChats'\r\n    });\r\n\r\n    fragment.append(categoriesSection.container, chatsSection.container);\r\n\r\n    /////////////////\r\n\r\n    const selectedPeers = (this.type === 'included' ? filter.include_peers : filter.exclude_peers).slice();\r\n\r\n    this.selector = new AppSelectPeers({\r\n      appendTo: this.container, \r\n      onChange: this.onSelectChange, \r\n      peerType: ['dialogs'], \r\n      renderResultsFunc: this.renderResults,\r\n      placeholder: 'Search'\r\n    });\r\n    this.selector.selected = new Set(selectedPeers);\r\n\r\n    let addedInitial = false;\r\n    const _add = this.selector.add.bind(this.selector);\r\n    this.selector.add = (peerId, title, scroll) => {\r\n      if(this.selector.selected.size >= 100 && addedInitial && !details[peerId]) {\r\n        const el: HTMLInputElement = this.selector.list.querySelector(`[data-peer-id=\"${peerId}\"] [type=\"checkbox\"]`);\r\n        if(el) {\r\n          setTimeout(() => {\r\n            el.checked = false;\r\n          }, 0);\r\n        }\r\n\r\n        const str = I18n.format(this.type === 'excluded' ? 'ChatList.Filter.Exclude.LimitReached': 'ChatList.Filter.Include.LimitReached', true);\r\n        toast(str);\r\n        return;\r\n      }\r\n\r\n      const div = _add(peerId, details[peerId] ? i18n(details[peerId].text) : undefined, scroll);\r\n      if(details[peerId]) {\r\n        div.querySelector('avatar-element').classList.add('tgico-' + details[peerId].ico);\r\n      }\r\n      return div;\r\n    };\r\n\r\n    const parent = this.selector.list.parentElement;\r\n    chatsSection.content.append(this.selector.list);\r\n    parent.append(fragment);\r\n\r\n    this.selector.addInitial(selectedPeers);\r\n    addedInitial = true;\r\n\r\n    for(const flag in filter.pFlags) {\r\n      // @ts-ignore\r\n      if(details.hasOwnProperty(flag) && !!filter.pFlags[flag]) {\r\n        (categoriesSection.content.querySelector(`[data-peer-id=\"${flag}\"]`) as HTMLElement).click();\r\n      }\r\n    }\r\n  }\r\n\r\n  onSelectChange = (length: number) => {\r\n    //const changed = !deepEqual(this.filter, this.originalFilter);\r\n    if(this.type === 'included') {\r\n      this.confirmBtn.style.display = length ? '' : 'none';\r\n    }\r\n  };\r\n\r\n  onCloseAfterTimeout() {\r\n    if(this.selector) {\r\n      this.selector.container.remove();\r\n      this.selector = null;\r\n    }\r\n\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n\r\n  /**\r\n   * Do not ignore arguments!\r\n   */\r\n  public open(filter?: DialogFilter, type?: 'included' | 'excluded', editFolderTab?: AppIncludedChatsTab['editFolderTab']) {\r\n    this.originalFilter = filter;\r\n    this.filter = copy(this.originalFilter);\r\n    this.type = type;\r\n    this.editFolderTab = editFolderTab;\r\n    \r\n    return super.open();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { deepEqual, copy } from \"../../../helpers/object\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport { MyDialogFilter as DialogFilter } from \"../../../lib/storages/filters\";\r\nimport lottieLoader, { RLottiePlayer } from \"../../../lib/lottieLoader\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport { toast } from \"../../toast\";\r\nimport appMessagesManager from \"../../../lib/appManagers/appMessagesManager\";\r\nimport InputField from \"../../inputField\";\r\nimport RichTextProcessor from \"../../../lib/richtextprocessor\";\r\nimport ButtonIcon from \"../../buttonIcon\";\r\nimport ButtonMenuToggle from \"../../buttonMenuToggle\";\r\nimport { ButtonMenuItemOptions } from \"../../buttonMenu\";\r\nimport Button from \"../../button\";\r\nimport AppIncludedChatsTab from \"./includedChats\";\r\nimport { i18n, i18n_, LangPackKey } from \"../../../lib/langPack\";\r\nimport { SettingSection } from \"..\";\r\n\r\nconst MAX_FOLDER_NAME_LENGTH = 12;\r\n\r\nexport default class AppEditFolderTab extends SliderSuperTab {\r\n  private caption: HTMLElement;\r\n  private stickerContainer: HTMLElement;\r\n\r\n  private confirmBtn: HTMLElement;\r\n  private menuBtn: HTMLElement;\r\n  private nameInputField: InputField;\r\n\r\n  private include_peers: SettingSection;\r\n  private exclude_peers: SettingSection;\r\n  private flags: {[k in 'contacts' | 'non_contacts' | 'groups' | 'broadcasts' | 'bots' | 'exclude_muted' | 'exclude_archived' | 'exclude_read']: HTMLElement} = {} as any;\r\n\r\n  private animation: RLottiePlayer;\r\n  private filter: DialogFilter;\r\n  private originalFilter: DialogFilter;\r\n\r\n  private type: 'edit' | 'create';\r\n  private loadAnimationPromise: Promise<void>;\r\n\r\n  protected init() {\r\n    this.container.classList.add('edit-folder-container');\r\n    this.caption = document.createElement('div');\r\n    this.caption.classList.add('caption');\r\n    this.caption.append(i18n('FilterIncludeExcludeInfo'));\r\n    this.stickerContainer = document.createElement('div');\r\n    this.stickerContainer.classList.add('sticker-container');\r\n\r\n    this.confirmBtn = ButtonIcon('check btn-confirm hide blue');\r\n    const deleteFolderButton: ButtonMenuItemOptions = {\r\n      icon: 'delete danger',\r\n      text: 'FilterMenuDelete',\r\n      onClick: () => {\r\n        deleteFolderButton.element.setAttribute('disabled', 'true');\r\n        appMessagesManager.filtersStorage.updateDialogFilter(this.filter, true).then(bool => {\r\n          if(bool) {\r\n            this.close();\r\n          }\r\n        }).finally(() => {\r\n          deleteFolderButton.element.removeAttribute('disabled');\r\n        });\r\n      }\r\n    };\r\n    this.menuBtn = ButtonMenuToggle({}, 'bottom-left', [deleteFolderButton]);\r\n    this.menuBtn.classList.add('hide');\r\n\r\n    this.header.append(this.confirmBtn, this.menuBtn);\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n    \r\n    this.nameInputField = new InputField({\r\n      label: 'FilterNameInputLabel',\r\n      maxLength: MAX_FOLDER_NAME_LENGTH\r\n    });\r\n\r\n    inputWrapper.append(this.nameInputField.container);\r\n\r\n    const generateList = (className: string, h2Text: LangPackKey, buttons: {icon: string, name?: string, withRipple?: true, text: LangPackKey}[], to: any) => {\r\n      const section = new SettingSection({\r\n        name: h2Text,\r\n        noDelimiter: true\r\n      });\r\n\r\n      section.container.classList.add('folder-list', className);\r\n\r\n      const categories = section.generateContentElement();\r\n      categories.classList.add('folder-categories');\r\n\r\n      buttons.forEach(o => {\r\n        const button = Button('folder-category-button btn btn-primary btn-transparent', {\r\n          icon: o.icon,\r\n          text: o.text,\r\n          noRipple: o.withRipple ? undefined : true\r\n        });\r\n\r\n        if(o.name) {\r\n          to[o.name] = button;\r\n        }\r\n\r\n        categories.append(button);\r\n      });\r\n\r\n      return section;\r\n    };\r\n\r\n    this.include_peers = generateList('folder-list-included', 'FilterInclude', [{\r\n      icon: 'add primary',\r\n      text: 'ChatList.Filter.Include.AddChat',\r\n      withRipple: true\r\n    }, {\r\n      text: 'ChatList.Filter.Contacts',\r\n      icon: 'newprivate',\r\n      name: 'contacts'\r\n    }, {\r\n      text: 'ChatList.Filter.NonContacts',\r\n      icon: 'noncontacts',\r\n      name: 'non_contacts'\r\n    }, {\r\n      text: 'ChatList.Filter.Groups',\r\n      icon: 'group',\r\n      name: 'groups'\r\n    }, {\r\n      text: 'ChatList.Filter.Channels',\r\n      icon: 'channel',\r\n      name: 'broadcasts'\r\n    }, {\r\n      text: 'ChatList.Filter.Bots',\r\n      icon: 'bots',\r\n      name: 'bots'\r\n    }], this.flags);\r\n\r\n    this.exclude_peers = generateList('folder-list-excluded', 'FilterExclude', [{\r\n      icon: 'minus primary',\r\n      text: 'ChatList.Filter.Exclude.AddChat',\r\n      withRipple: true\r\n    }, {\r\n      text: 'ChatList.Filter.MutedChats',\r\n      icon: 'mute',\r\n      name: 'exclude_muted'\r\n    }, {\r\n      text: 'ChatList.Filter.Archive',\r\n      icon: 'archive',\r\n      name: 'exclude_archived'\r\n    }, {\r\n      text: 'ChatList.Filter.ReadChats',\r\n      icon: 'readchats',\r\n      name: 'exclude_read'\r\n    }], this.flags);\r\n\r\n    this.scrollable.append(this.stickerContainer, this.caption, inputWrapper, this.include_peers.container, this.exclude_peers.container);\r\n\r\n    const includedFlagsContainer = this.include_peers.container.querySelector('.folder-categories');\r\n    const excludedFlagsContainer = this.exclude_peers.container.querySelector('.folder-categories');\r\n\r\n    includedFlagsContainer.querySelector('.btn').addEventListener('click', () => {\r\n      new AppIncludedChatsTab(this.slider).open(this.filter, 'included', this);\r\n    });\r\n\r\n    excludedFlagsContainer.querySelector('.btn').addEventListener('click', () => {\r\n      new AppIncludedChatsTab(this.slider).open(this.filter, 'excluded', this);\r\n    });\r\n\r\n    this.confirmBtn.addEventListener('click', () => {\r\n      if(this.nameInputField.input.classList.contains('error')) {\r\n        return;\r\n      }\r\n\r\n      if(!this.nameInputField.value.trim()) {\r\n        this.nameInputField.input.classList.add('error');\r\n        return;\r\n      }\r\n\r\n      let include = (Array.from(includedFlagsContainer.children) as HTMLElement[]).slice(1).reduce((acc, el) => acc + +!el.style.display, 0);\r\n      include += this.filter.include_peers.length;\r\n      \r\n      if(!include) {\r\n        toast('Please choose at least one chat for this folder.');\r\n        return;\r\n      }\r\n\r\n      this.confirmBtn.setAttribute('disabled', 'true');\r\n\r\n      let promise: Promise<boolean>;\r\n      if(!this.filter.id) {\r\n        promise = appMessagesManager.filtersStorage.createDialogFilter(this.filter);\r\n      } else {\r\n        promise = appMessagesManager.filtersStorage.updateDialogFilter(this.filter);\r\n      }\r\n\r\n      promise.then(bool => {\r\n        if(bool) {\r\n          this.close();\r\n        }\r\n      }).catch(err => {\r\n        if(err.type === 'DIALOG_FILTERS_TOO_MUCH') {\r\n          toast('Sorry, you can\\'t create more folders.');\r\n        } else {\r\n          console.error('updateDialogFilter error:', err);\r\n        }\r\n      }).finally(() => {\r\n        this.confirmBtn.removeAttribute('disabled');\r\n      });\r\n    });\r\n    \r\n    this.nameInputField.input.addEventListener('input', () => {\r\n      this.filter.title = this.nameInputField.value;\r\n      this.editCheckForChange();\r\n    });\r\n\r\n    return this.loadAnimationPromise = lottieLoader.loadAnimationFromURL({\r\n      container: this.stickerContainer,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: 86,\r\n      height: 86\r\n    }, 'assets/img/Folders_2.tgs').then(player => {\r\n      this.animation = player;\r\n\r\n      return lottieLoader.waitForFirstFrame(player);\r\n    });\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    this.loadAnimationPromise.then(() => {\r\n      this.animation.autoplay = true;\r\n      this.animation.play();\r\n    });\r\n  }\r\n\r\n  private onCreateOpen() {\r\n    this.caption.style.display = '';\r\n    this.setTitle('FilterNew');\r\n    this.menuBtn.classList.add('hide');\r\n    this.confirmBtn.classList.remove('hide');\r\n    this.nameInputField.value = '';\r\n\r\n    for(const flag in this.flags) {\r\n      // @ts-ignore\r\n      this.flags[flag].style.display = 'none';\r\n    }\r\n  }\r\n\r\n  private onEditOpen() {\r\n    this.caption.style.display = 'none';\r\n    this.setTitle(this.type === 'create' ? 'FilterNew' : 'FilterHeaderEdit');\r\n\r\n    if(this.type === 'edit') {\r\n      this.menuBtn.classList.remove('hide');\r\n      this.confirmBtn.classList.add('hide');\r\n    }\r\n    \r\n    const filter = this.filter;\r\n    this.nameInputField.value = RichTextProcessor.wrapDraftText(filter.title);\r\n\r\n    for(const flag in this.flags) {\r\n      this.flags[flag as keyof AppEditFolderTab['flags']].style.display = !!filter.pFlags[flag as keyof AppEditFolderTab['flags']] ? '' : 'none';\r\n    }\r\n\r\n    (['include_peers', 'exclude_peers'] as ['include_peers', 'exclude_peers']).forEach(key => {\r\n      const section = this[key];\r\n      const ul = appDialogsManager.createChatList();\r\n\r\n      const peers = filter[key].slice();\r\n\r\n      const renderMore = (_length: number) => {\r\n        for(let i = 0, length = Math.min(peers.length, _length); i < length; ++i) {\r\n          const peerId = peers.shift();\r\n\r\n          const {dom} = appDialogsManager.addDialogNew({\r\n            dialog: peerId,\r\n            container: ul,\r\n            drawStatus: false,\r\n            rippleEnabled: false,\r\n            meAsSaved: true,\r\n            avatarSize: 32\r\n          });\r\n          dom.lastMessageSpan.parentElement.remove();\r\n        }\r\n\r\n        if(peers.length) {\r\n          showMore.lastElementChild.replaceWith(i18n('FilterShowMoreChats', [peers.length]));\r\n        } else if(showMore) {\r\n          showMore.remove();\r\n        }\r\n      };\r\n      \r\n      section.generateContentElement().append(ul);\r\n\r\n      let showMore: HTMLElement;\r\n      if(peers.length) {\r\n        const content = section.generateContentElement();\r\n        showMore = Button('folder-category-button btn btn-primary btn-transparent', {icon: 'down'});\r\n        showMore.classList.add('load-more', 'rp-overflow');\r\n        showMore.addEventListener('click', () => renderMore(20));\r\n        showMore.append(i18n('FilterShowMoreChats', [peers.length]));\r\n\r\n        content.append(showMore);\r\n      }\r\n\r\n      renderMore(4);\r\n    });\r\n  }\r\n\r\n  editCheckForChange() {\r\n    if(this.type === 'edit') {\r\n      const changed = !deepEqual(this.originalFilter, this.filter);\r\n      this.confirmBtn.classList.toggle('hide', !changed);\r\n      this.menuBtn.classList.toggle('hide', changed);\r\n    }\r\n  };\r\n\r\n  setFilter(filter: DialogFilter, firstTime: boolean) {\r\n    // cleanup\r\n    Array.from(this.container.querySelectorAll('ul, .load-more')).forEach(el => el.remove());\r\n\r\n    if(firstTime) {\r\n      this.originalFilter = filter;\r\n      this.filter = copy(filter);\r\n    } else {\r\n      this.filter = filter;\r\n      this.onEditOpen();\r\n      this.editCheckForChange();\r\n    }\r\n  }\r\n\r\n  public open(filter?: DialogFilter) {\r\n    const ret = super.open();\r\n    \r\n    if(filter === undefined) {\r\n      this.setFilter({\r\n        _: 'dialogFilter',\r\n        id: 0,\r\n        title: '',\r\n        pFlags: {},\r\n        pinned_peers: [],\r\n        include_peers: [],\r\n        exclude_peers: []\r\n      }, true);\r\n      this.type = 'create';\r\n      this.onCreateOpen();\r\n    } else {\r\n      this.setFilter(filter, true);\r\n      this.type = 'edit';\r\n      this.onEditOpen();\r\n    }\r\n\r\n    return ret;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport lottieLoader, { RLottiePlayer } from \"../../../lib/lottieLoader\";\r\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\r\nimport { toast } from \"../../toast\";\r\nimport type { MyDialogFilter } from \"../../../lib/storages/filters\";\r\nimport type { DialogFilterSuggested, DialogFilter } from \"../../../layer\";\r\nimport type _rootScope from \"../../../lib/rootScope\";\r\nimport type { BroadcastEvents } from \"../../../lib/rootScope\";\r\nimport Button from \"../../button\";\r\nimport appMessagesManager from \"../../../lib/appManagers/appMessagesManager\";\r\nimport appPeersManager from \"../../../lib/appManagers/appPeersManager\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport AppEditFolderTab from \"./editFolder\";\r\nimport Row from \"../../row\";\r\nimport { SettingSection } from \"..\";\r\nimport { i18n, i18n_, LangPackKey, join } from \"../../../lib/langPack\";\r\nimport { cancelEvent } from \"../../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport positionElementByIndex from \"../../../helpers/dom/positionElementByIndex\";\r\n\r\nexport default class AppChatFoldersTab extends SliderSuperTab {\r\n  private createFolderBtn: HTMLElement;\r\n  private foldersSection: SettingSection;\r\n  private suggestedSection: SettingSection;\r\n  private stickerContainer: HTMLElement;\r\n  private animation: RLottiePlayer;\r\n\r\n  private filtersRendered: {[filterId: number]: Row} = {};\r\n  private loadAnimationPromise: Promise<void>;\r\n\r\n  private renderFolder(dialogFilter: DialogFilterSuggested | DialogFilter | MyDialogFilter, container?: HTMLElement, row?: Row) {\r\n    let filter: DialogFilter | MyDialogFilter;\r\n    let description = '';\r\n    let d: HTMLElement[] = [];\r\n    if(dialogFilter._ === 'dialogFilterSuggested') {\r\n      filter = dialogFilter.filter;\r\n      description = dialogFilter.description;\r\n    } else {\r\n      filter = dialogFilter;\r\n\r\n      let enabledFilters = Object.keys(filter.pFlags).length;\r\n      /* (['include_peers', 'exclude_peers'] as ['include_peers', 'exclude_peers']).forEach(key => {\r\n        enabledFilters += +!!filter[key].length;\r\n      }); */\r\n      \r\n      if(enabledFilters === 1) {\r\n        const pFlags = filter.pFlags;\r\n        let k: LangPackKey;\r\n        if(pFlags.contacts) k = 'FilterAllContacts';\r\n        else if(pFlags.non_contacts) k = 'FilterAllNonContacts';\r\n        else if(pFlags.groups) k = 'FilterAllGroups';\r\n        else if(pFlags.broadcasts) k = 'FilterAllChannels';\r\n        else if(pFlags.bots) k = 'FilterAllBots';\r\n\r\n        if(k) {\r\n          d.push(i18n(k));\r\n        }\r\n      }\r\n      \r\n      if(!d.length) {\r\n        const folder = appMessagesManager.dialogsStorage.getFolder(filter.id);\r\n        let chats = 0, channels = 0, groups = 0;\r\n        for(const dialog of folder) {\r\n          if(appPeersManager.isAnyGroup(dialog.peerId)) groups++;\r\n          else if(appPeersManager.isBroadcast(dialog.peerId)) channels++;\r\n          else chats++;\r\n        }\r\n\r\n        if(chats) d.push(i18n('Chats', [chats]));\r\n        if(channels) d.push(i18n('Channels', [channels]));\r\n        if(groups) d.push(i18n('Groups', [groups]));\r\n      }\r\n    }\r\n\r\n    let div: HTMLElement;\r\n    if(!row) {\r\n      row = new Row({\r\n        title: RichTextProcessor.wrapEmojiText(filter.title),\r\n        subtitle: description,\r\n        clickable: true\r\n      });\r\n\r\n      if(d.length) {\r\n        join(d).forEach(el => {\r\n          row.subtitle.append(el);\r\n        });\r\n      }\r\n  \r\n      if(dialogFilter._ === 'dialogFilter') {\r\n        const filterId = filter.id;\r\n        if(!this.filtersRendered.hasOwnProperty(filter.id)) {\r\n          attachClickEvent(row.container, () => {\r\n            new AppEditFolderTab(this.slider).open(appMessagesManager.filtersStorage.filters[filterId]);\r\n          }, {listenerSetter: this.listenerSetter});\r\n        }\r\n\r\n        this.filtersRendered[filter.id] = row;\r\n      }\r\n    } else {\r\n      row.subtitle.textContent = '';\r\n      join(d).forEach(el => {\r\n        row.subtitle.append(el);\r\n      });\r\n    }\r\n\r\n    div = row.container;\r\n\r\n    if((filter as MyDialogFilter).hasOwnProperty('orderIndex')) {\r\n       // ! header will be at 0 index\r\n      positionElementByIndex(div, div.parentElement || container, (filter as MyDialogFilter).orderIndex);\r\n    } else if(container) container.append(div);\r\n    \r\n    return div;\r\n  }\r\n\r\n  protected async init() {\r\n    this.container.classList.add('chat-folders-container');\r\n    this.setTitle('ChatList.Filter.List.Title');\r\n\r\n    this.scrollable.container.classList.add('chat-folders');\r\n\r\n    this.stickerContainer = document.createElement('div');\r\n    this.stickerContainer.classList.add('sticker-container');\r\n    \r\n    const caption = document.createElement('div');\r\n    caption.classList.add('caption');\r\n    i18n_({element: caption, key: 'ChatList.Filter.Header'});\r\n    \r\n    this.createFolderBtn = Button('btn-primary btn-color-primary btn-control tgico', {\r\n      text: 'ChatList.Filter.NewTitle',\r\n      icon: 'add'\r\n    });\r\n\r\n    this.foldersSection = new SettingSection({\r\n      name: 'Filters'\r\n    });\r\n    this.foldersSection.container.style.display = 'none';\r\n\r\n    this.suggestedSection = new SettingSection({\r\n      name: 'FilterRecommended'\r\n    });\r\n    this.suggestedSection.container.style.display = 'none';\r\n\r\n    this.scrollable.append(this.stickerContainer, caption, this.createFolderBtn, this.foldersSection.container, this.suggestedSection.container);\r\n\r\n    attachClickEvent(this.createFolderBtn, () => {\r\n      if(Object.keys(this.filtersRendered).length >= 10) {\r\n        toast('Sorry, you can\\'t create more folders.');\r\n      } else {\r\n        new AppEditFolderTab(this.slider).open();\r\n      }\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    const onFiltersContainerUpdate = () => {\r\n      this.foldersSection.container.style.display = Object.keys(this.filtersRendered).length ? '' : 'none';\r\n    };\r\n\r\n    appMessagesManager.filtersStorage.getDialogFilters().then(filters => {\r\n      for(const filter of filters) {\r\n        this.renderFolder(filter, this.foldersSection.content);\r\n      }\r\n\r\n      onFiltersContainerUpdate();\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'filter_update', (e) => {\r\n      const filter = e;\r\n      if(this.filtersRendered.hasOwnProperty(filter.id)) {\r\n        this.renderFolder(filter, null, this.filtersRendered[filter.id]);\r\n      } else {\r\n        this.renderFolder(filter, this.foldersSection.content);\r\n      }\r\n\r\n      onFiltersContainerUpdate();\r\n\r\n      this.getSuggestedFilters();\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'filter_delete', (e) => {\r\n      const filter = e;\r\n      if(this.filtersRendered.hasOwnProperty(filter.id)) {\r\n        /* for(const suggested of this.suggestedFilters) {\r\n          if(deepEqual(suggested.filter, filter)) {\r\n            \r\n          }\r\n        } */\r\n        this.getSuggestedFilters();\r\n\r\n        this.filtersRendered[filter.id].container.remove();\r\n        delete this.filtersRendered[filter.id];\r\n      }\r\n\r\n      onFiltersContainerUpdate();\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'filter_order', (e: BroadcastEvents['filter_order']) => {\r\n      const order = e;\r\n      order.forEach((filterId, idx) => {\r\n        const container = this.filtersRendered[filterId].container;\r\n        positionElementByIndex(container, container.parentElement, idx + 1); // ! + 1 due to header \r\n      });\r\n    });\r\n\r\n    this.getSuggestedFilters();\r\n\r\n    return this.loadAnimationPromise = lottieLoader.loadAnimationFromURL({\r\n      container: this.stickerContainer,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: 86,\r\n      height: 86\r\n    }, 'assets/img/Folders_1.tgs').then(player => {\r\n      this.animation = player;\r\n\r\n      return lottieLoader.waitForFirstFrame(player);\r\n    });\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    this.loadAnimationPromise.then(() => {\r\n      this.animation.autoplay = true;\r\n      this.animation.play();\r\n    });\r\n  }\r\n\r\n  private getSuggestedFilters() {\r\n    apiManager.invokeApi('messages.getSuggestedDialogFilters').then(suggestedFilters => {\r\n      this.suggestedSection.container.style.display = suggestedFilters.length ? '' : 'none';\r\n      Array.from(this.suggestedSection.content.children).slice(1).forEach(el => el.remove());\r\n\r\n      suggestedFilters.forEach(filter => {\r\n        const div = this.renderFolder(filter);\r\n        const button = Button('btn-primary btn-color-primary', {text: 'Add'});\r\n        div.append(button);\r\n        this.suggestedSection.content.append(div);\r\n\r\n        attachClickEvent(button, (e) => {\r\n          cancelEvent(e);\r\n\r\n          if(Object.keys(this.filtersRendered).length >= 10) {\r\n            toast('Sorry, you can\\'t create more folders.');\r\n            return;\r\n          }\r\n\r\n          button.setAttribute('disabled', 'true');\r\n\r\n          appMessagesManager.filtersStorage.createDialogFilter(filter.filter as any).then(bool => {\r\n            if(bool) {\r\n              div.remove();\r\n            }\r\n          }).finally(() => {\r\n            button.removeAttribute('disabled');\r\n          });\r\n        }, {listenerSetter: this.listenerSetter});\r\n      });\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"..\";\r\nimport Row from \"../../row\";\r\nimport CheckboxField from \"../../checkboxField\";\r\nimport { InputNotifyPeer, Update } from \"../../../layer\";\r\nimport appNotificationsManager from \"../../../lib/appManagers/appNotificationsManager\";\r\nimport { SliderSuperTabEventable } from \"../../sliderTab\";\r\nimport { copy } from \"../../../helpers/object\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport { convertKeyToInputKey } from \"../../../helpers/string\";\r\nimport { LangPackKey } from \"../../../lib/langPack\";\r\nimport appStateManager from \"../../../lib/appManagers/appStateManager\";\r\n\r\ntype InputNotifyKey = Exclude<InputNotifyPeer['_'], 'inputNotifyPeer'>;\r\n\r\nexport default class AppNotificationsTab extends SliderSuperTabEventable {\r\n  protected init() {\r\n    this.container.classList.add('notifications-container');\r\n    this.setTitle('Telegram.NotificationSettingsViewController');\r\n\r\n    const NotifySection = (options: {\r\n      name: LangPackKey,\r\n      typeText: LangPackKey,\r\n      inputKey: InputNotifyKey,\r\n    }) => {\r\n      const section = new SettingSection({\r\n        name: options.name\r\n      });\r\n\r\n      const enabledRow = new Row({\r\n        checkboxField: new CheckboxField({text: options.typeText, checked: true}),\r\n        subtitleLangKey: 'Loading',\r\n      });\r\n      \r\n      const previewEnabledRow = new Row({\r\n        checkboxField: new CheckboxField({text: 'Notifications.MessagePreview', checked: true}),\r\n        subtitleLangKey: 'Loading',\r\n      });\r\n\r\n      section.content.append(enabledRow.container, previewEnabledRow.container);\r\n\r\n      this.scrollable.append(section.container);\r\n\r\n      const inputNotifyPeer = {_: options.inputKey};\r\n      const ret = appNotificationsManager.getNotifySettings(inputNotifyPeer);\r\n      (ret instanceof Promise ? ret : Promise.resolve(ret)).then((notifySettings) => {\r\n        const applySettings = () => {\r\n          const muted = appNotificationsManager.isMuted(notifySettings);\r\n          enabledRow.checkboxField.checked = !muted;\r\n          previewEnabledRow.checkboxField.checked = notifySettings.show_previews;\r\n  \r\n          return muted;\r\n        };\r\n        \r\n        applySettings();\r\n\r\n        this.eventListener.addEventListener('destroy', () => {\r\n          const mute = !enabledRow.checkboxField.checked;\r\n          const showPreviews = previewEnabledRow.checkboxField.checked;\r\n\r\n          if(mute === appNotificationsManager.isMuted(notifySettings) && showPreviews === notifySettings.show_previews) {\r\n            return;\r\n          }\r\n\r\n          const inputSettings: any = copy(notifySettings);\r\n          inputSettings._ = 'inputPeerNotifySettings';\r\n          inputSettings.mute_until = mute ? 0x7FFFFFFF : 0;\r\n          inputSettings.show_previews = showPreviews;\r\n\r\n          appNotificationsManager.updateNotifySettings(inputNotifyPeer, inputSettings);\r\n        }, true);\r\n\r\n        this.listenerSetter.add(rootScope, 'notify_settings', (update: Update.updateNotifySettings) => {\r\n          const inputKey = convertKeyToInputKey(update.peer._) as any;\r\n          if(options.inputKey === inputKey) {\r\n            notifySettings = update.notify_settings;\r\n            applySettings();\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    NotifySection({\r\n      name: 'NotificationsPrivateChats',\r\n      typeText: 'NotificationsForPrivateChats',\r\n      inputKey: 'inputNotifyUsers'\r\n    });\r\n\r\n    NotifySection({\r\n      name: 'NotificationsGroups',\r\n      typeText: 'NotificationsForGroups',\r\n      inputKey: 'inputNotifyChats'\r\n    });\r\n\r\n    NotifySection({\r\n      name: 'NotificationsChannels',\r\n      typeText: 'NotificationsForChannels',\r\n      inputKey: 'inputNotifyBroadcasts'\r\n    });\r\n\r\n    {\r\n      const section = new SettingSection({\r\n        name: 'NotificationsOther'\r\n      });\r\n\r\n      const contactsSignUpRow = new Row({\r\n        checkboxField: new CheckboxField({text: 'ContactJoined', checked: true}),\r\n        subtitleLangKey: 'Loading',\r\n      });\r\n      \r\n      const soundRow = new Row({\r\n        checkboxField: new CheckboxField({text: 'Notifications.Sound', checked: true, stateKey: 'settings.notifications.sound'}),\r\n        subtitleLangKey: 'Loading',\r\n      });\r\n\r\n      appStateManager.getState().then(state => {\r\n        soundRow.checkboxField.checked = state.settings.notifications.sound;\r\n      });\r\n\r\n      section.content.append(contactsSignUpRow.container, soundRow.container);\r\n\r\n      this.scrollable.append(section.container);\r\n\r\n      appNotificationsManager.getContactSignUpNotification().then(enabled => {\r\n        contactsSignUpRow.checkboxField.checked = enabled;\r\n\r\n        this.eventListener.addEventListener('destroy', () => {\r\n          const _enabled = contactsSignUpRow.checkboxField.checked;\r\n          if(enabled !== _enabled) {\r\n            appNotificationsManager.setContactSignUpNotification(!_enabled);\r\n          }\r\n        }, true);\r\n      });\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SettingSection } from \"..\";\r\nimport { randomLong } from \"../../../helpers/random\";\r\nimport I18n from \"../../../lib/langPack\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport RadioField from \"../../radioField\";\r\nimport Row, { RadioFormFromRows } from \"../../row\";\r\nimport { SliderSuperTab } from \"../../slider\"\r\n\r\nexport default class AppLanguageTab extends SliderSuperTab {\r\n  protected async init() {\r\n    this.container.classList.add('language-container');\r\n    this.setTitle('Telegram.LanguageViewController');\r\n\r\n    const section = new SettingSection({});\r\n\r\n    const radioRows: Map<string, Row> = new Map();\r\n\r\n    const promise = apiManager.invokeApiCacheable('langpack.getLanguages', {\r\n      lang_pack: 'macos'\r\n    }).then((languages) => {\r\n      const random = randomLong();\r\n      languages.forEach((language) => {\r\n        const row = new Row({\r\n          radioField: new RadioField({\r\n            text: language.name, \r\n            name: random, \r\n            value: language.lang_code\r\n          }),\r\n          subtitle: language.native_name\r\n        });\r\n        \r\n        radioRows.set(language.lang_code, row);\r\n      });\r\n\r\n      const form = RadioFormFromRows([...radioRows.values()], (value) => {\r\n        I18n.getLangPack(value);\r\n      });\r\n  \r\n      I18n.getCacheLangPack().then(langPack => {\r\n        const row = radioRows.get(langPack.lang_code);\r\n        if(!row) {\r\n          console.error('no row', row, langPack);\r\n          return;\r\n        }\r\n  \r\n        row.radioField.setValueSilently(true);\r\n      });\r\n  \r\n      section.content.append(form);\r\n    });\r\n\r\n    this.scrollable.append(section.container);\r\n\r\n    return promise;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport AvatarElement from \"../../avatar\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport ButtonMenuToggle from \"../../buttonMenuToggle\";\r\nimport Button from \"../../button\";\r\nimport AppPrivacyAndSecurityTab from \"./privacyAndSecurity\";\r\nimport AppGeneralSettingsTab from \"./generalSettings\";\r\nimport AppEditProfileTab from \"./editProfile\";\r\nimport AppChatFoldersTab from \"./chatFolders\";\r\nimport AppNotificationsTab from \"./notifications\";\r\nimport PeerTitle from \"../../peerTitle\";\r\nimport AppLanguageTab from \"./language\";\r\nimport lottieLoader from \"../../../lib/lottieLoader\";\r\n//import AppMediaViewer from \"../../appMediaViewerNew\";\r\n\r\nexport default class AppSettingsTab extends SliderSuperTab {\r\n  private avatarElem: AvatarElement;\r\n  private nameDiv: HTMLElement;\r\n  private phoneDiv: HTMLElement;\r\n\r\n  private buttons: {\r\n    edit: HTMLButtonElement,\r\n    folders: HTMLButtonElement,\r\n    general: HTMLButtonElement,\r\n    notifications: HTMLButtonElement,\r\n    privacy: HTMLButtonElement,\r\n    language: HTMLButtonElement\r\n  } = {} as any;\r\n\r\n  protected init() {\r\n    this.container.classList.add('settings-container');\r\n    this.setTitle('Settings');\r\n    \r\n    const btnMenu = ButtonMenuToggle({}, 'bottom-left', [{\r\n      icon: 'logout',\r\n      text: 'EditAccount.Logout',\r\n      onClick: () => {\r\n        apiManager.logOut();\r\n      }\r\n    }]);\r\n\r\n    this.header.append(btnMenu);\r\n\r\n    this.avatarElem = new AvatarElement();\r\n    this.avatarElem.setAttribute('clickable', '');\r\n    this.avatarElem.classList.add('profile-avatar', 'avatar-120');\r\n\r\n    /* const div = document.createElement('div');\r\n    //div.style.cssText = 'border-radius: 8px; overflow: hidden; width: 396px; height: 264px; flex: 0 0 auto; position: relative; margin: 10rem 0 10rem auto;';\r\n    //div.style.width = '135px';\r\n    //div.style.height = '100px';\r\n    div.style.cssText = 'border-radius: 8px; overflow: hidden; width: 396px; height: 264px; flex: 0 0 auto; position: relative; margin: 10rem auto 10rem 0;';\r\n    div.style.width = '135px';\r\n    div.style.height = '100px';\r\n    \r\n    const img = document.createElement('img');\r\n    img.src = 'assets/img/pepe.jpg';\r\n    img.classList.add('media-photo');\r\n    img.style.cssText = 'max-width: 100%;max-height: 100%;';\r\n\r\n    div.append(img);\r\n\r\n    div.addEventListener('click', () => {\r\n      new AppMediaViewer().setSearchContext({peerId: 61004386, inputFilter: 'inputMessagesFilterPhotos'}).openMedia({\r\n        _: 'message',\r\n        mid: 1,\r\n        peerId: 61004386,\r\n        fromId: 61004386,\r\n        message: '',\r\n        media: {\r\n          _: 'messageMediaPhoto',\r\n          photo: {\r\n            _: 'photo',\r\n            url: img.src,\r\n            downloaded: 111,\r\n            sizes: [{\r\n              _: 'photoSize',\r\n              type: 'x',\r\n              w: 618,\r\n              h: 412\r\n            }]\r\n          }\r\n        },\r\n        date: Date.now() / 1000 | 0\r\n      }, img);\r\n    });\r\n\r\n    this.scrollable.append(div); */\r\n    \r\n    this.nameDiv = document.createElement('div');\r\n    this.nameDiv.classList.add('profile-name');\r\n\r\n    this.phoneDiv = document.createElement('div');\r\n    this.phoneDiv.classList.add('profile-subtitle');\r\n\r\n    const buttonsDiv = document.createElement('div');\r\n    buttonsDiv.classList.add('profile-buttons');\r\n\r\n    const className = 'profile-button btn-primary btn-transparent';\r\n    buttonsDiv.append(this.buttons.edit = Button(className, {icon: 'edit', text: 'EditAccount.Title'}));\r\n    buttonsDiv.append(this.buttons.folders = Button(className, {icon: 'folder', text: 'AccountSettings.Filters'}));\r\n    buttonsDiv.append(this.buttons.general = Button(className, {icon: 'settings', text: 'Telegram.GeneralSettingsViewController'}));\r\n    buttonsDiv.append(this.buttons.notifications = Button(className, {icon: 'unmute', text: 'AccountSettings.Notifications'}));\r\n    buttonsDiv.append(this.buttons.privacy = Button(className, {icon: 'lock', text: 'AccountSettings.PrivacyAndSecurity'}));\r\n    buttonsDiv.append(this.buttons.language = Button(className, {icon: 'language', text: 'AccountSettings.Language'}));\r\n    \r\n    this.scrollable.append(this.avatarElem, this.nameDiv, this.phoneDiv, buttonsDiv);\r\n    this.scrollable.container.classList.add('profile-content-wrapper');\r\n\r\n    /* rootScope.$on('user_auth', (e) => {\r\n      this.fillElements();\r\n    }); */\r\n\r\n    this.buttons.edit.addEventListener('click', () => {\r\n      const tab = new AppEditProfileTab(this.slider);\r\n      tab.open();\r\n    });\r\n\r\n    this.buttons.folders.addEventListener('click', () => {\r\n      new AppChatFoldersTab(this.slider).open();\r\n    });\r\n\r\n    this.buttons.general.addEventListener('click', () => {\r\n      new AppGeneralSettingsTab(this.slider).open();\r\n    });\r\n\r\n    this.buttons.notifications.addEventListener('click', () => {\r\n      new AppNotificationsTab(this.slider).open();\r\n    });\r\n\r\n    this.buttons.privacy.addEventListener('click', () => {\r\n      new AppPrivacyAndSecurityTab(this.slider).open();\r\n    });\r\n\r\n    this.buttons.language.addEventListener('click', () => {\r\n      new AppLanguageTab(this.slider).open();\r\n    });\r\n\r\n    lottieLoader.loadLottieWorkers();\r\n\r\n    this.fillElements();\r\n  }\r\n\r\n  public fillElements() {\r\n    let user = appUsersManager.getSelf();\r\n    this.avatarElem.setAttribute('peer', '' + user.id);\r\n\r\n    this.nameDiv.append(new PeerTitle({peerId: user.id}).element);\r\n    this.phoneDiv.innerHTML = user.phone ? appUsersManager.formatUserPhone(user.phone) : '';\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appSidebarLeft from \"..\";\r\nimport { InputFile } from \"../../../layer\";\r\nimport appChatsManager from \"../../../lib/appManagers/appChatsManager\";\r\nimport Button from \"../../button\";\r\nimport InputField from \"../../inputField\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport AvatarEdit from \"../../avatarEdit\";\r\nimport AppAddMembersTab from \"./addMembers\";\r\nimport { _i18n } from \"../../../lib/langPack\";\r\nimport ButtonCorner from \"../../buttonCorner\";\r\n\r\nexport default class AppNewChannelTab extends SliderSuperTab {\r\n  private uploadAvatar: () => Promise<InputFile> = null;\r\n\r\n  private channelNameInputField: InputField;\r\n  private channelDescriptionInputField: InputField;\r\n  private nextBtn: HTMLButtonElement;\r\n  private avatarEdit: AvatarEdit;\r\n\r\n  protected init() {\r\n    this.container.classList.add('new-channel-container');\r\n    this.setTitle('NewChannel');\r\n\r\n    this.avatarEdit = new AvatarEdit((_upload) => {\r\n      this.uploadAvatar = _upload;\r\n    });\r\n\r\n    const inputWrapper = document.createElement('div');\r\n    inputWrapper.classList.add('input-wrapper');\r\n\r\n    this.channelNameInputField = new InputField({\r\n      label: 'Channel.ChannelNameHolder',\r\n      maxLength: 128\r\n    });\r\n\r\n    this.channelDescriptionInputField = new InputField({\r\n      label: 'Channel.DescriptionPlaceholder',\r\n      maxLength: 255\r\n    });\r\n\r\n    inputWrapper.append(this.channelNameInputField.container, this.channelDescriptionInputField.container);\r\n\r\n    const onLengthChange = () => {\r\n      this.nextBtn.classList.toggle('is-visible', !!this.channelNameInputField.value.length && \r\n        !this.channelNameInputField.input.classList.contains('error') && \r\n        !this.channelDescriptionInputField.input.classList.contains('error'));\r\n    };\r\n\r\n    this.channelNameInputField.input.addEventListener('input', onLengthChange);\r\n    this.channelDescriptionInputField.input.addEventListener('input', onLengthChange);\r\n\r\n    const caption = document.createElement('div');\r\n    caption.classList.add('caption');\r\n    _i18n(caption, 'Channel.DescriptionHolderDescrpiton');\r\n\r\n    this.nextBtn = ButtonCorner({icon: 'arrow_next'});\r\n\r\n    this.nextBtn.addEventListener('click', () => {\r\n      const title = this.channelNameInputField.value;\r\n      const about = this.channelDescriptionInputField.value;\r\n\r\n      this.nextBtn.disabled = true;\r\n      appChatsManager.createChannel(title, about).then((channelId) => {\r\n        if(this.uploadAvatar) {\r\n          this.uploadAvatar().then((inputFile) => {\r\n            appChatsManager.editPhoto(channelId, inputFile);\r\n          });\r\n        }\r\n        \r\n        appSidebarLeft.removeTabFromHistory(this);\r\n        new AppAddMembersTab(this.slider).open({\r\n          peerId: channelId,\r\n          type: 'channel',\r\n          skippable: true,\r\n          title: 'GroupAddMembers',\r\n          placeholder: 'SendMessageTo',\r\n          takeOut: (peerIds) => {\r\n            return appChatsManager.inviteToChannel(Math.abs(channelId), peerIds);\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    this.content.append(this.nextBtn);\r\n    this.scrollable.append(this.avatarEdit.container, inputWrapper, caption);\r\n  }\r\n\r\n  public onCloseAfterTimeout() {\r\n    this.avatarEdit.clear();\r\n    this.uploadAvatar = null;\r\n    this.channelNameInputField.value = '';\r\n    this.channelDescriptionInputField.value = '';\r\n    this.nextBtn.disabled = false;\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport appPhotosManager from \"../../../lib/appManagers/appPhotosManager\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport InputSearch from \"../../inputSearch\";\r\nimport { isMobile } from \"../../../helpers/userAgent\";\r\nimport { canFocus } from \"../../../helpers/dom/canFocus\";\r\n\r\n// TODO: поиск по людям глобальный, если не нашло в контактах никого\r\n\r\nexport default class AppContactsTab extends SliderSuperTab {\r\n  private list: HTMLUListElement;\r\n  private promise: Promise<void>;\r\n\r\n  private inputSearch: InputSearch;\r\n  private alive = true;\r\n  \r\n  init() {\r\n    this.container.id = 'contacts-container';\r\n\r\n    this.list = appDialogsManager.createChatList(/* {avatarSize: 48, handheldsSize: 66} */);\r\n    this.list.id = 'contacts';\r\n    this.list.classList.add('contacts-container');\r\n\r\n    appDialogsManager.setListClickListener(this.list, () => {\r\n      (this.container.querySelector('.sidebar-close-button') as HTMLElement).click();\r\n    }, undefined, true);\r\n\r\n    this.inputSearch = new InputSearch('Search', (value) => {\r\n      this.list.innerHTML = '';\r\n      this.openContacts(value);\r\n    });\r\n\r\n    this.title.replaceWith(this.inputSearch.container);\r\n\r\n    this.scrollable.append(this.list);\r\n\r\n    // preload contacts\r\n    // appUsersManager.getContacts();\r\n  }\r\n\r\n  onClose() {\r\n    this.alive = false;\r\n    /* // need to clear, and left 1 page for smooth slide\r\n    let pageCount = appPhotosManager.windowH / 72 * 1.25 | 0;\r\n    (Array.from(this.list.children) as HTMLElement[]).slice(pageCount).forEach(el => el.remove()); */\r\n  }\r\n\r\n  onOpenAfterTimeout() {\r\n    if(isMobile || !canFocus(true)) return;\r\n    this.inputSearch.input.focus();\r\n  }\r\n\r\n  public openContacts(query?: string) {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    if(this.promise) return this.promise;\r\n    this.scrollable.onScrolledBottom = null;\r\n\r\n    this.promise = appUsersManager.getContacts(query).then(_contacts => {\r\n      this.promise = null;\r\n\r\n      if(!this.alive) {\r\n        //console.warn('user closed contacts before it\\'s loaded');\r\n        return;\r\n      }\r\n\r\n      const contacts = [..._contacts];\r\n\r\n      if(!query) {\r\n        contacts.findAndSplice(u => u === rootScope.myId);\r\n      }\r\n      /* if(query && 'saved messages'.includes(query.toLowerCase())) {\r\n        contacts.unshift(rootScope.myID);\r\n      } */\r\n\r\n      let sorted = contacts\r\n      .map(userId => {\r\n        let user = appUsersManager.getUser(userId);\r\n        let status = appUsersManager.getUserStatusForSort(user.status);\r\n\r\n        return {user, status};\r\n      })\r\n      .sort((a, b) => b.status - a.status);\r\n\r\n      let renderPage = () => {\r\n        let pageCount = appPhotosManager.windowH / 72 * 1.25 | 0;\r\n        let arr = sorted.splice(0, pageCount); // надо splice!\r\n\r\n        arr.forEach(({user}) => {\r\n          let {dialog, dom} = appDialogsManager.addDialogNew({\r\n            dialog: user.id,\r\n            container: this.list,\r\n            drawStatus: false,\r\n            avatarSize: 48,\r\n            autonomous: true\r\n          });\r\n  \r\n          let status = appUsersManager.getUserStatusString(user.id);\r\n          dom.lastMessageSpan.append(status);\r\n        });\r\n\r\n        if(!sorted.length) renderPage = undefined;\r\n      };\r\n\r\n      renderPage();\r\n      this.scrollable.onScrolledBottom = () => {\r\n        if(renderPage) {\r\n          renderPage();\r\n        } else {\r\n          this.scrollable.onScrolledBottom = null;\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  public open() {\r\n    this.openContacts();\r\n    return super.open();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDialogsManager from \"../../../lib/appManagers/appDialogsManager\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\n\r\nexport default class AppArchivedTab extends SliderSuperTab {\r\n  private static filterId = 1;\r\n  private wasFilterId: number;\r\n\r\n  init() {\r\n    this.container.id = 'chats-archived-container';\r\n    this.setTitle('ArchivedChats');\r\n\r\n    if(!appDialogsManager.chatLists[AppArchivedTab.filterId]) {\r\n      const chatList = appDialogsManager.createChatList();\r\n      appDialogsManager.generateScrollable(chatList, AppArchivedTab.filterId);\r\n      appDialogsManager.setListClickListener(chatList, null, true);\r\n      //appDialogsManager.setListClickListener(archivedChatList, null, true); // * to test peer changing\r\n    }\r\n\r\n    const scrollable = appDialogsManager.scrollables[AppArchivedTab.filterId];\r\n    this.scrollable.container.replaceWith(scrollable.container);\r\n    this.scrollable = scrollable;\r\n  }\r\n\r\n  onOpen() {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    this.wasFilterId = appDialogsManager.filterId;\r\n    appDialogsManager.filterId = AppArchivedTab.filterId;\r\n    appDialogsManager.onTabChange();\r\n  }\r\n\r\n  // вообще, так делать нельзя, но нет времени чтобы переделать главный чатлист на слайд...\r\n  onOpenAfterTimeout() {\r\n    appDialogsManager.chatLists[this.wasFilterId].innerHTML = '';\r\n  }\r\n\r\n  onClose() {\r\n    appDialogsManager.filterId = this.wasFilterId;\r\n    appDialogsManager.onTabChange();\r\n  }\r\n\r\n  onCloseAfterTimeout() {\r\n    appDialogsManager.chatLists[AppArchivedTab.filterId].innerHTML = '';\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { formatNumber } from \"../../helpers/number\";\r\nimport appImManager from \"../../lib/appManagers/appImManager\";\r\nimport appStateManager from \"../../lib/appManagers/appStateManager\";\r\nimport appUsersManager from \"../../lib/appManagers/appUsersManager\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { SearchGroup } from \"../appSearch\";\r\nimport \"../avatar\";\r\nimport Scrollable, { ScrollableX } from \"../scrollable\";\r\nimport InputSearch from \"../inputSearch\";\r\nimport SidebarSlider from \"../slider\";\r\nimport { TransitionSlider } from \"../transition\";\r\nimport AppNewGroupTab from \"./tabs/newGroup\";\r\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\r\nimport AppSearchSuper from \"../appSearchSuper.\";\r\nimport { DateData, fillTipDates } from \"../../helpers/date\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport AppSettingsTab from \"./tabs/settings\";\r\nimport AppNewChannelTab from \"./tabs/newChannel\";\r\nimport AppContactsTab from \"./tabs/contacts\";\r\nimport AppArchivedTab from \"./tabs/archivedTab\";\r\nimport AppAddMembersTab from \"./tabs/addMembers\";\r\nimport { i18n_, LangPackKey } from \"../../lib/langPack\";\r\nimport { ButtonMenuItemOptions } from \"../buttonMenu\";\r\nimport CheckboxField from \"../checkboxField\";\r\nimport { isMobileSafari } from \"../../helpers/userAgent\";\r\nimport appNavigationController from \"../appNavigationController\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport findUpTag from \"../../helpers/dom/findUpTag\";\r\nimport PeerTitle from \"../peerTitle\";\r\nimport App from \"../../config/app\";\r\nimport ButtonMenuToggle from \"../buttonMenuToggle\";\r\nimport replaceContent from \"../../helpers/dom/replaceContent\";\r\nimport sessionStorage from \"../../lib/sessionStorage\";\r\n\r\nexport const LEFT_COLUMN_ACTIVE_CLASSNAME = 'is-left-column-shown';\r\n\r\nexport class AppSidebarLeft extends SidebarSlider {\r\n  private toolsBtn: HTMLButtonElement;\r\n  private backBtn: HTMLButtonElement;\r\n  //private searchInput = document.getElementById('global-search') as HTMLInputElement;\r\n  private inputSearch: InputSearch;\r\n  \r\n  public archivedCount: HTMLSpanElement;\r\n\r\n  private newBtnMenu: HTMLElement;\r\n\r\n  //private log = logger('SL');\r\n\r\n  private searchGroups: {[k in 'contacts' | 'globalContacts' | 'messages' | 'people' | 'recent']: SearchGroup} = {} as any;\r\n  private searchSuper: AppSearchSuper;\r\n\r\n  constructor() {\r\n    super({\r\n      sidebarEl: document.getElementById('column-left') as HTMLDivElement,\r\n      navigationType: 'left'\r\n    });\r\n\r\n    //this._selectTab(0); // make first tab as default\r\n\r\n    this.inputSearch = new InputSearch('Search');\r\n    const sidebarHeader = this.sidebarEl.querySelector('.item-main .sidebar-header');\r\n    sidebarHeader.append(this.inputSearch.container);\r\n\r\n    const onNewGroupClick = () => {\r\n      new AppAddMembersTab(this).open({\r\n        peerId: 0,\r\n        type: 'chat',\r\n        skippable: false,\r\n        takeOut: (peerIds) => {\r\n          new AppNewGroupTab(this).open(peerIds);\r\n        },\r\n        title: 'GroupAddMembers',\r\n        placeholder: 'SendMessageTo'\r\n      });\r\n    };\r\n\r\n    const onContactsClick = () => {\r\n      new AppContactsTab(this).open();\r\n    };\r\n\r\n    //this.toolsBtn = this.sidebarEl.querySelector('.sidebar-tools-button') as HTMLButtonElement;\r\n    this.backBtn = this.sidebarEl.querySelector('.sidebar-back-button') as HTMLButtonElement;\r\n\r\n    const btnArchive: ButtonMenuItemOptions & {verify?: () => boolean} = {\r\n      icon: 'archive',\r\n      text: 'ArchivedChats',\r\n      onClick: () => {\r\n        new AppArchivedTab(this).open();\r\n      },\r\n      verify: () => {\r\n        const folder = appMessagesManager.dialogsStorage.getFolder(1);\r\n        return !!folder.length;\r\n      }\r\n    };\r\n\r\n    const themeCheckboxField = new CheckboxField({\r\n      toggle: true,\r\n      checked: rootScope.getTheme().name === 'night'\r\n    });\r\n    themeCheckboxField.input.addEventListener('change', () => {\r\n      rootScope.settings.theme = themeCheckboxField.input.checked ? 'night' : 'day';\r\n      appStateManager.pushToState('settings', rootScope.settings);\r\n      appImManager.applyCurrentTheme();\r\n    });\r\n\r\n    rootScope.addEventListener('theme_change', () => {\r\n      themeCheckboxField.setValueSilently(rootScope.getTheme().name === 'night');\r\n    });\r\n\r\n    const menuButtons: (ButtonMenuItemOptions & {verify?: () => boolean})[] = [{\r\n      icon: 'saved',\r\n      text: 'SavedMessages',\r\n      onClick: () => {\r\n        setTimeout(() => { // menu doesn't close if no timeout (lol)\r\n          appImManager.setPeer(appImManager.myId);\r\n        }, 0);\r\n      }\r\n    }, btnArchive, {\r\n      icon: 'user',\r\n      text: 'Contacts',\r\n      onClick: onContactsClick\r\n    }, {\r\n      icon: 'settings',\r\n      text: 'Settings',\r\n      onClick: () => {\r\n        new AppSettingsTab(this).open();\r\n      }\r\n    }, {\r\n      icon: 'darkmode',\r\n      text: 'DarkMode',\r\n      onClick: () => {\r\n        \r\n      },\r\n      checkboxField: themeCheckboxField\r\n    }, {\r\n      icon: 'animations',\r\n      text: 'Animations',\r\n      onClick: () => {\r\n        \r\n      },\r\n      checkboxField: new CheckboxField({\r\n        toggle: true, \r\n        checked: true,\r\n        stateKey: 'settings.animationsEnabled',\r\n      })\r\n    }, {\r\n      icon: 'help',\r\n      text: 'TelegramFeatures',\r\n      onClick: () => {\r\n        appImManager.openUsername('TelegramTips');\r\n      }\r\n    }, {\r\n      icon: 'bug',\r\n      text: 'ReportBug',\r\n      onClick: () => {\r\n        const a = document.createElement('a');\r\n        a.target = '_blank';\r\n        a.href = 'https://bugs.telegram.org/?tag_ids=40&sort=time';\r\n        document.body.append(a);\r\n        a.click();\r\n        setTimeout(() => {\r\n          a.remove();\r\n        }, 0);\r\n      }\r\n    }, {\r\n      icon: 'char z',\r\n      text: 'ChatList.Menu.SwitchTo.Z',\r\n      onClick: () => {\r\n        sessionStorage.set({kz_version: 'Z'}).then(() => {\r\n          location.href = 'https://web.telegram.org/z/';\r\n        });\r\n      },\r\n      verify: () => App.isMainDomain\r\n    }, {\r\n      icon: 'char w',\r\n      text: 'ChatList.Menu.SwitchTo.Webogram',\r\n      onClick: () => {\r\n        location.href = 'https://web.telegram.org/?legacy=1';\r\n      },\r\n      verify: () => App.isMainDomain\r\n    }];\r\n\r\n    this.toolsBtn = ButtonMenuToggle({}, 'bottom-right', menuButtons, (e) => {\r\n      menuButtons.forEach(button => {\r\n        if(button.verify) {\r\n          button.element.classList.toggle('hide', !button.verify());\r\n        }\r\n      });\r\n    });\r\n    this.toolsBtn.classList.remove('tgico-more');\r\n    this.toolsBtn.classList.add('sidebar-tools-button', 'is-visible');\r\n\r\n    this.backBtn.parentElement.insertBefore(this.toolsBtn, this.backBtn);\r\n\r\n    const btnMenu = this.toolsBtn.querySelector('.btn-menu') as HTMLElement;\r\n\r\n    const btnMenuFooter = document.createElement('div');\r\n    btnMenuFooter.classList.add('btn-menu-footer');\r\n    const t = document.createElement('span');\r\n    t.classList.add('btn-menu-footer-text');\r\n    t.innerHTML = 'Telegram Web' + App.suffix + ' alpha ' + App.version;\r\n    btnMenuFooter.append(t); \r\n    btnMenu.classList.add('has-footer');\r\n    btnMenu.append(btnMenuFooter);\r\n\r\n    this.newBtnMenu = ButtonMenuToggle({}, 'top-left', [{\r\n      icon: 'newchannel',\r\n      text: 'NewChannel',\r\n      onClick: () => {\r\n        new AppNewChannelTab(this).open();\r\n      }\r\n    }, {\r\n      icon: 'newgroup',\r\n      text: 'NewGroup',\r\n      onClick: onNewGroupClick\r\n    }, {\r\n      icon: 'newprivate',\r\n      text: 'NewPrivateChat',\r\n      onClick: onContactsClick\r\n    }]);\r\n    this.newBtnMenu.className = 'btn-circle rp btn-corner z-depth-1 btn-menu-toggle animated-button-icon';\r\n    this.newBtnMenu.insertAdjacentHTML('afterbegin', `\r\n    <span class=\"tgico tgico-newchat_filled\"></span>\r\n    <span class=\"tgico tgico-close\"></span>\r\n    `);\r\n    this.newBtnMenu.id = 'new-menu';\r\n    sidebarHeader.nextElementSibling.append(this.newBtnMenu);\r\n\r\n    this.inputSearch.input.addEventListener('focus', () => this.initSearch(), {once: true});\r\n\r\n    //parseMenuButtonsTo(this.newButtons, this.newBtnMenu.firstElementChild.children);\r\n\r\n    this.archivedCount = document.createElement('span');\r\n    this.archivedCount.className = 'archived-count badge badge-24 badge-gray';\r\n\r\n    btnArchive.element.append(this.archivedCount);\r\n\r\n    rootScope.addEventListener('dialogs_archived_unread', (e) => {\r\n      this.archivedCount.innerText = '' + formatNumber(e.count, 1);\r\n      this.archivedCount.classList.toggle('hide', !e.count);\r\n    });\r\n\r\n    appUsersManager.getTopPeers();\r\n\r\n    appStateManager.getState().then(state => {\r\n      const recentSearch = state.recentSearch || [];\r\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\r\n        appStateManager.requestPeer(recentSearch[i], 'recentSearch');\r\n      }\r\n    });\r\n  }\r\n\r\n  private initSearch() {\r\n    const searchContainer = this.sidebarEl.querySelector('#search-container') as HTMLDivElement;\r\n\r\n    const scrollable = new Scrollable(searchContainer);\r\n\r\n    const close = () => {\r\n      //setTimeout(() => {\r\n        this.backBtn.click();\r\n      //}, 0);\r\n    };\r\n\r\n    this.searchGroups = {\r\n      contacts: new SearchGroup('Search.Chats', 'contacts', undefined, undefined, undefined, undefined, close),\r\n      globalContacts: new SearchGroup('Search.Global', 'contacts', undefined, undefined, undefined, undefined, close),\r\n      messages: new SearchGroup('Search.Messages', 'messages'),\r\n      people: new SearchGroup(false, 'contacts', true, 'search-group-people', true, false, close),\r\n      recent: new SearchGroup('Recent', 'contacts', true, 'search-group-recent', true, true, close)\r\n    };\r\n\r\n    const searchSuper = this.searchSuper = new AppSearchSuper({\r\n      mediaTabs: [{\r\n        inputFilter: 'inputMessagesFilterEmpty',\r\n        name: 'FilterChats',\r\n        type: 'chats'\r\n      }, {\r\n        inputFilter: 'inputMessagesFilterPhotoVideo',\r\n        name: 'SharedMediaTab2',\r\n        type: 'media'\r\n      }, {\r\n        inputFilter: 'inputMessagesFilterUrl',\r\n        name: 'SharedLinksTab2',\r\n        type: 'links'\r\n      }, {\r\n        inputFilter: 'inputMessagesFilterDocument',\r\n        name: 'SharedFilesTab2',\r\n        type: 'files'\r\n      }, {\r\n        inputFilter: 'inputMessagesFilterMusic',\r\n        name: 'SharedMusicTab2',\r\n        type: 'music'\r\n      }, {\r\n        inputFilter: 'inputMessagesFilterVoice',\r\n        name: 'SharedVoiceTab2',\r\n        type: 'voice'\r\n      }], \r\n      scrollable, \r\n      searchGroups: this.searchGroups, \r\n      asChatList: true,\r\n      hideEmptyTabs: false,\r\n      showSender: true\r\n    });\r\n\r\n    searchContainer.prepend(searchSuper.nav.parentElement.parentElement);\r\n    scrollable.container.append(searchSuper.container);\r\n\r\n    const resetSearch = () => {\r\n      searchSuper.setQuery({\r\n        peerId: 0, \r\n        folderId: 0\r\n      });\r\n      searchSuper.selectTab(0);\r\n      searchSuper.load(true); \r\n    };\r\n\r\n    resetSearch();\r\n\r\n    let pickedElements: HTMLElement[] = [];\r\n    let selectedPeerId = 0;\r\n    let selectedMinDate = 0;\r\n    let selectedMaxDate = 0;\r\n    const updatePicked = () => {\r\n      //(this.inputSearch.input as HTMLInputElement).placeholder = pickedElements.length ? 'Search' : 'Telegram Search';\r\n      this.inputSearch.container.classList.toggle('is-picked-twice', pickedElements.length === 2);\r\n      this.inputSearch.container.classList.toggle('is-picked', !!pickedElements.length);\r\n\r\n      if(pickedElements.length) {\r\n        this.inputSearch.input.style.setProperty('--paddingLeft', (pickedElements[pickedElements.length - 1].getBoundingClientRect().right - this.inputSearch.input.getBoundingClientRect().left) + 'px');\r\n      } else {\r\n        this.inputSearch.input.style.removeProperty('--paddingLeft');\r\n      }\r\n    };\r\n\r\n    const helper = document.createElement('div');\r\n    helper.classList.add('search-helper');\r\n    helper.addEventListener('click', (e) => {\r\n      const target = findUpClassName(e.target, 'selector-user');\r\n      if(!target) {\r\n        return;\r\n      }\r\n\r\n      const key = target.dataset.key;\r\n      if(key.indexOf('date_') === 0) {\r\n        const [_, minDate, maxDate] = key.split('_');\r\n        selectedMinDate = +minDate;\r\n        selectedMaxDate = +maxDate;\r\n      } else {\r\n        selectedPeerId = +key;\r\n      }\r\n\r\n      target.addEventListener('click', () => {\r\n        unselectEntity(target);\r\n      });\r\n\r\n      this.inputSearch.container.append(target);\r\n      this.inputSearch.onChange(this.inputSearch.value = '');\r\n      pickedElements.push(target);\r\n      updatePicked();\r\n    });\r\n\r\n    searchSuper.nav.parentElement.append(helper);\r\n\r\n    const renderEntity = (peerId: any, title?: string | HTMLElement) => {\r\n      const div = document.createElement('div');\r\n      div.classList.add('selector-user'/* , 'scale-in' */);\r\n\r\n      const avatarEl = document.createElement('avatar-element');\r\n      avatarEl.classList.add('selector-user-avatar', 'tgico');\r\n      avatarEl.setAttribute('dialog', '1');\r\n      avatarEl.classList.add('avatar-30');\r\n\r\n      div.dataset.key = '' + peerId;\r\n      if(typeof(peerId) === 'number') {\r\n        if(title === undefined) {\r\n          title = new PeerTitle({peerId, onlyFirstName: true}).element;\r\n        }\r\n\r\n        avatarEl.setAttribute('peer', '' + peerId);\r\n      } else {\r\n        avatarEl.classList.add('tgico-calendarfilter');\r\n      }\r\n\r\n      if(title) {\r\n        if(typeof(title) === 'string') {\r\n          div.innerHTML = title;\r\n        } else {\r\n          replaceContent(div, title);\r\n          div.append(title);\r\n        }\r\n      }\r\n\r\n      div.insertAdjacentElement('afterbegin', avatarEl);\r\n\r\n      return div;\r\n    };\r\n\r\n    const unselectEntity = (target: HTMLElement) => {\r\n      const key = target.dataset.key;\r\n      if(key.indexOf('date_') === 0) {\r\n        selectedMinDate = selectedMaxDate = 0;\r\n      } else {\r\n        selectedPeerId = 0;\r\n      }\r\n      \r\n      target.remove();\r\n      pickedElements.findAndSplice(t => t === target);\r\n\r\n      setTimeout(() => {\r\n        updatePicked();\r\n        this.inputSearch.onChange(this.inputSearch.value);\r\n      }, 0);\r\n    };\r\n\r\n    this.inputSearch.onClear = () => {\r\n      pickedElements.forEach(el => {\r\n        unselectEntity(el);\r\n      });\r\n    };\r\n\r\n    this.inputSearch.onChange = (value) => {\r\n      searchSuper.cleanupHTML();\r\n      searchSuper.setQuery({\r\n        peerId: selectedPeerId, \r\n        folderId: selectedPeerId ? undefined : 0,\r\n        query: value,\r\n        minDate: selectedMinDate,\r\n        maxDate: selectedMaxDate\r\n      });\r\n      searchSuper.load(true);\r\n\r\n      helper.innerHTML = '';\r\n      searchSuper.nav.classList.remove('hide');\r\n      if(!value) {\r\n      }\r\n      \r\n      if(!selectedPeerId && value.trim()) {\r\n        const middleware = searchSuper.middleware.get();\r\n        Promise.all([\r\n          appMessagesManager.getConversationsAll(value).then(dialogs => dialogs.map(d => d.peerId)),\r\n          appUsersManager.getContacts(value, true)\r\n        ]).then(results => {\r\n          if(!middleware()) return;\r\n          const peerIds = new Set(results[0].concat(results[1]));\r\n  \r\n          peerIds.forEach(peerId => {\r\n            helper.append(renderEntity(peerId));\r\n          });\r\n  \r\n          searchSuper.nav.classList.toggle('hide', !!helper.innerHTML);\r\n          //console.log('got peerIds by value:', value, [...peerIds]);\r\n        });\r\n      }\r\n      \r\n      if(!selectedMinDate && value.trim()) {\r\n        const dates: DateData[] = [];\r\n        fillTipDates(value, dates);\r\n        dates.forEach(dateData => {\r\n          helper.append(renderEntity('date_' + dateData.minDate + '_' + dateData.maxDate, dateData.title));\r\n        });\r\n\r\n        searchSuper.nav.classList.toggle('hide', !!helper.innerHTML);\r\n      }\r\n    };\r\n\r\n    searchSuper.tabs.inputMessagesFilterEmpty.addEventListener('mousedown', (e) => {\r\n      const target = findUpTag(e.target, 'LI') as HTMLElement;\r\n      if(!target) {\r\n        return;\r\n      }\r\n\r\n      const searchGroup = findUpClassName(target, 'search-group');\r\n      if(!searchGroup || searchGroup.classList.contains('search-group-recent') || searchGroup.classList.contains('search-group-people')) {\r\n        return;\r\n      }\r\n\r\n      const peerId = +target.getAttribute('data-peer-id');\r\n      appStateManager.getState().then(state => {\r\n        const recentSearch = state.recentSearch || [];\r\n        if(recentSearch[0] !== peerId) {\r\n          recentSearch.findAndSplice(p => p === peerId);\r\n          recentSearch.unshift(peerId);\r\n          if(recentSearch.length > 20) {\r\n            recentSearch.length = 20;\r\n          }\r\n  \r\n          appStateManager.pushToState('recentSearch', recentSearch);\r\n          for(const peerId of recentSearch) {\r\n            appStateManager.requestPeer(peerId, 'recentSearch');\r\n          }\r\n        }\r\n      });\r\n    }, {capture: true});\r\n\r\n    let peopleContainer = document.createElement('div');\r\n    peopleContainer.classList.add('search-group-scrollable');\r\n    peopleContainer.append(this.searchGroups.people.list);\r\n    this.searchGroups.people.container.append(peopleContainer);\r\n    let peopleScrollable = new ScrollableX(peopleContainer);\r\n\r\n    let first = true;\r\n    let hideNewBtnMenuTimeout: number;\r\n    //const transition = Transition.bind(null, searchContainer.parentElement, 150);\r\n    const transition = TransitionSlider(searchContainer.parentElement, 'zoom-fade', 150, (id) => {\r\n      if(hideNewBtnMenuTimeout) clearTimeout(hideNewBtnMenuTimeout);\r\n\r\n      if(id === 0 && !first) {\r\n        searchSuper.selectTab(0, false);\r\n        this.inputSearch.onClearClick();\r\n        hideNewBtnMenuTimeout = window.setTimeout(() => {\r\n          hideNewBtnMenuTimeout = 0;\r\n          this.newBtnMenu.classList.remove('is-hidden');\r\n        }, 150);\r\n      }\r\n\r\n      first = false;\r\n    });\r\n\r\n    transition(0);\r\n\r\n    const activeClassName = 'is-visible';\r\n    const onFocus = () => {\r\n      this.toolsBtn.classList.remove(activeClassName);\r\n      this.backBtn.classList.add(activeClassName);\r\n      this.newBtnMenu.classList.add('is-hidden');\r\n      this.toolsBtn.parentElement.firstElementChild.classList.toggle('state-back', true);\r\n\r\n      if(!isMobileSafari && !appNavigationController.findItemByType('global-search')) {\r\n        appNavigationController.pushItem({\r\n          onPop: () => {\r\n            close();\r\n          },\r\n          type: 'global-search'\r\n        });\r\n      }\r\n\r\n      transition(1);\r\n    };\r\n\r\n    this.inputSearch.input.addEventListener('focus', onFocus);\r\n    onFocus();\r\n\r\n    this.backBtn.addEventListener('click', (e) => {\r\n      this.toolsBtn.classList.add(activeClassName);\r\n      this.backBtn.classList.remove(activeClassName);\r\n      this.toolsBtn.parentElement.firstElementChild.classList.toggle('state-back', false);\r\n\r\n      appNavigationController.removeByType('global-search');\r\n\r\n      transition(0);\r\n    });\r\n\r\n    const clearRecentSearchBtn = document.createElement('button');\r\n    clearRecentSearchBtn.classList.add('btn-icon', 'tgico-close');\r\n    this.searchGroups.recent.nameEl.append(clearRecentSearchBtn);\r\n    clearRecentSearchBtn.addEventListener('click', () => {\r\n      this.searchGroups.recent.clear();\r\n      appStateManager.pushToState('recentSearch', []);\r\n    });\r\n  }\r\n}\r\n\r\nexport class SettingSection {\r\n  public container: HTMLElement;\r\n  public content: HTMLElement;\r\n  public title: HTMLElement;\r\n  public caption: HTMLElement;\r\n\r\n  constructor(options: {\r\n    name?: LangPackKey, \r\n    caption?: LangPackKey | true,\r\n    noDelimiter?: boolean\r\n  }) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('sidebar-left-section');\r\n\r\n    if(!options.noDelimiter) {\r\n      const hr = document.createElement('hr');\r\n      this.container.append(hr);\r\n    } else {\r\n      this.container.classList.add('no-delimiter');\r\n    }\r\n\r\n    this.content = this.generateContentElement();\r\n\r\n    if(options.name) {\r\n      this.title = document.createElement('div');\r\n      this.title.classList.add('sidebar-left-h2', 'sidebar-left-section-name');\r\n      i18n_({element: this.title, key: options.name});\r\n      this.content.append(this.title);\r\n    }\r\n\r\n    if(options.caption) {\r\n      this.caption = this.generateContentElement();\r\n      this.caption.classList.add('sidebar-left-section-caption');\r\n\r\n      if(options.caption !== true) {\r\n        i18n_({element: this.caption, key: options.caption});\r\n      }\r\n    }\r\n  }\r\n\r\n  public generateContentElement() {\r\n    const content = document.createElement('div');\r\n    content.classList.add('sidebar-left-section-content');\r\n    this.container.append(content);\r\n    return content;\r\n  }\r\n}\r\n\r\nexport const generateSection = (appendTo: Scrollable, name?: LangPackKey, caption?: LangPackKey) => {\r\n  const section = new SettingSection({name, caption});\r\n  appendTo.append(section.container);\r\n  return section.content;\r\n};\r\n\r\nconst appSidebarLeft = new AppSidebarLeft();\r\nMOUNT_CLASS_TO.appSidebarLeft = appSidebarLeft;\r\nexport default appSidebarLeft;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../../lib/rootScope\";\r\n//import { generatePathData } from \"../../helpers/dom\";\r\nimport { MyMessage } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type Chat from \"./chat\";\r\n\r\ntype Group = {bubble: HTMLElement, mid: number, timestamp: number}[];\r\ntype BubbleGroup = {timestamp: number, fromId: number, mid: number, group: Group};\r\nexport default class BubbleGroups {\r\n  private bubbles: Array<BubbleGroup> = []; // map to group\r\n  private detailsMap: Map<HTMLElement, BubbleGroup> = new Map();\r\n  private groups: Array<Group> = [];\r\n  //updateRAFs: Map<HTMLElement[], number> = new Map();\r\n  private newGroupDiff = 121; // * 121 in scheduled messages\r\n\r\n  constructor(private chat: Chat) {\r\n\r\n  }\r\n\r\n  removeBubble(bubble: HTMLElement) {\r\n    const details = this.detailsMap.get(bubble);\r\n    if(details) {\r\n      if(details.group.length) {\r\n        details.group.findAndSplice(d => d.bubble === bubble);\r\n        if(!details.group.length) {\r\n          this.groups.findAndSplice(g => g === details.group);\r\n        } else {\r\n          this.updateGroup(details.group);\r\n        }\r\n      }\r\n      \r\n      this.detailsMap.delete(bubble);\r\n    }\r\n  }\r\n  \r\n  addBubble(bubble: HTMLElement, message: MyMessage, reverse: boolean) {\r\n    //return;\r\n\r\n    const timestamp = message.date;\r\n    const mid = message.mid;\r\n    let fromId = message.viaBotId || message.fromId;\r\n    let group: Group;\r\n\r\n    // fix for saved messages forward to self\r\n    if(fromId === rootScope.myId && message.peerId === rootScope.myId && (message as any).fwdFromId === fromId) {\r\n      fromId = -fromId;\r\n    }\r\n    \r\n    // try to find added\r\n    this.removeBubble(bubble);\r\n    \r\n    const insertObject = {bubble, mid, timestamp};\r\n    if(this.bubbles.length) {\r\n      let foundBubble: BubbleGroup;\r\n      let foundAtIndex = -1;\r\n      for(let i = 0; i < this.bubbles.length; ++i) {\r\n        const bubble = this.bubbles[i];\r\n        const diff = Math.abs(bubble.timestamp - timestamp);\r\n        const good = bubble.fromId === fromId && diff <= this.newGroupDiff;\r\n\r\n        if(good) {\r\n          foundAtIndex = i;\r\n\r\n          if(this.chat.type === 'scheduled') {\r\n            break;\r\n          }\r\n        } else {\r\n          foundAtIndex = -1;\r\n        }\r\n\r\n        if(this.chat.type !== 'scheduled') {\r\n          if(mid > bubble.mid) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(foundAtIndex !== -1) {\r\n        foundBubble = this.bubbles[foundAtIndex];\r\n      }\r\n      /* const foundBubble = this.bubbles.find(bubble => {\r\n        const diff = Math.abs(bubble.timestamp - timestamp);\r\n        return bubble.fromId === fromId && diff <= this.newGroupDiff;\r\n      }); */\r\n\r\n      if(!foundBubble) this.groups.push(group = [insertObject]);\r\n      else {\r\n        group = foundBubble.group;\r\n        \r\n        let i = 0, foundMidOnSameTimestamp = 0;\r\n        for(; i < group.length; ++i) {\r\n          const _timestamp = group[i].timestamp;\r\n          const _mid = group[i].mid;\r\n\r\n          if(timestamp < _timestamp) {\r\n            break;\r\n          } else if(timestamp === _timestamp) {\r\n            foundMidOnSameTimestamp = _mid;\r\n          } \r\n          \r\n          if(foundMidOnSameTimestamp && mid < foundMidOnSameTimestamp) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        group.splice(i, 0, insertObject);\r\n      }\r\n    } else {\r\n      this.groups.push(group = [insertObject]);\r\n    }\r\n\r\n    //console.log('[BUBBLE]: addBubble', bubble, message.mid, fromId, reverse, group);\r\n\r\n    const bubbleGroup = {timestamp, fromId, mid: message.mid, group};\r\n    let insertIndex = 0;\r\n    for(; insertIndex < this.bubbles.length; ++insertIndex) {\r\n      if(this.bubbles[insertIndex].mid < mid) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    this.bubbles.splice(insertIndex, 0, {timestamp, fromId, mid: message.mid, group});\r\n    this.updateGroup(group);\r\n\r\n    this.detailsMap.set(bubble, bubbleGroup);\r\n  }\r\n\r\n  /* setClipIfNeeded(bubble: HTMLDivElement, remove = false) {\r\n    //console.log('setClipIfNeeded', bubble, remove);\r\n    const className = bubble.className;\r\n    if(className.includes('is-message-empty') && (className.includes('photo') || className.includes('video'))) {\r\n      let container = bubble.querySelector('.bubble__media-container') as SVGSVGElement;\r\n      //console.log('setClipIfNeeded', bubble, remove, container);\r\n      if(!container) return;\r\n\r\n      try {\r\n        Array.from(container.children).forEach(object => {\r\n          if(object instanceof SVGDefsElement) return;\r\n  \r\n          if(remove) {\r\n            object.removeAttributeNS(null, 'clip-path');\r\n          } else {\r\n            let clipId = container.dataset.clipId;\r\n            let path = container.firstElementChild.firstElementChild.lastElementChild as SVGPathElement;\r\n            let width = +object.getAttributeNS(null, 'width');\r\n            let height = +object.getAttributeNS(null, 'height');\r\n            let isOut = className.includes('is-out');\r\n            let isReply = className.includes('is-reply');\r\n            let d = '';\r\n    \r\n            //console.log('setClipIfNeeded', object, width, height, isOut);\r\n    \r\n            let tr: number, tl: number;\r\n            if(className.includes('forwarded') || isReply) {\r\n              tr = tl = 0;\r\n            } else if(isOut) {\r\n              tr = className.includes('is-group-first') ? 12 : 6;\r\n              tl = 12;\r\n            } else {\r\n              tr = 12;\r\n              tl = className.includes('is-group-first') ? 12 : 6;\r\n            }\r\n    \r\n            if(isOut) {\r\n              d = generatePathData(0, 0, width - 9, height, tl, tr, 0, 12);\r\n            } else {\r\n              d = generatePathData(9, 0, width - 9, height, tl, tr, 12, 0);\r\n            }\r\n            \r\n            path.setAttributeNS(null, 'd', d);\r\n            object.setAttributeNS(null, 'clip-path', 'url(#' + clipId + ')');\r\n          }\r\n        });\r\n      } catch(err) {}\r\n    }\r\n  } */\r\n  \r\n  updateGroup(group: Group) {\r\n    /* if(this.updateRAFs.has(group)) {\r\n      window.cancelAnimationFrame(this.updateRAFs.get(group));\r\n      this.updateRAFs.delete(group);\r\n    } */\r\n    \r\n    //this.updateRAFs.set(group, window.requestAnimationFrame(() => {\r\n      //this.updateRAFs.delete(group);\r\n      \r\n      if(!group.length) {\r\n        return;\r\n      }\r\n      \r\n      const first = group[0].bubble;\r\n\r\n      //console.log('[BUBBLE]: updateGroup', group, first);\r\n      \r\n      if(group.length === 1) {\r\n        first.classList.add('is-group-first', 'is-group-last');\r\n        //this.setClipIfNeeded(first);\r\n        return;\r\n      } else {\r\n        first.classList.remove('is-group-last');\r\n        first.classList.add('is-group-first');\r\n        //this.setClipIfNeeded(first, true);\r\n      }\r\n      \r\n      const length = group.length - 1;\r\n      for(let i = 1; i < length; ++i) {\r\n        const bubble = group[i].bubble;\r\n        bubble.classList.remove('is-group-last', 'is-group-first');\r\n        //this.setClipIfNeeded(bubble, true);\r\n      }\r\n      \r\n      const last = group[group.length - 1].bubble;\r\n      last.classList.remove('is-group-first');\r\n      last.classList.add('is-group-last');\r\n      //this.setClipIfNeeded(last);\r\n    //}));\r\n  }\r\n\r\n  updateGroupByMessageId(mid: number) {\r\n    const details = this.bubbles.find(g => g.mid === mid);\r\n    if(details) {\r\n      this.updateGroup(details.group);\r\n    }\r\n  }\r\n  \r\n  cleanup() {\r\n    this.bubbles = [];\r\n    this.groups = [];\r\n    this.detailsMap.clear();\r\n    /* for(let value of this.updateRAFs.values()) {\r\n      window.cancelAnimationFrame(value);\r\n    }\r\n    this.updateRAFs.clear(); */\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport PopupElement, { PopupOptions } from \".\";\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport I18n, { i18n, LangPackKey } from \"../../lib/langPack\";\r\nimport InputField from \"../inputField\";\r\n\r\nexport default class PopupDatePicker extends PopupElement {\r\n  protected controlsDiv: HTMLElement;\r\n  protected monthTitle: HTMLElement;\r\n  protected prevBtn: HTMLElement;\r\n  protected nextBtn: HTMLElement;\r\n\r\n  protected monthsContainer: HTMLElement;\r\n  protected month: HTMLElement;\r\n\r\n  protected minMonth: Date;\r\n  protected maxMonth: Date;\r\n  protected minDate: Date;\r\n  protected maxDate: Date;\r\n  protected selectedDate: Date;\r\n  protected selectedMonth: Date;\r\n  protected selectedEl: HTMLElement;\r\n\r\n  protected timeDiv: HTMLDivElement;\r\n  protected hoursInputField: InputField;\r\n  protected minutesInputField: InputField;\r\n\r\n  constructor(initDate: Date, public onPick: (timestamp: number) => void, protected options: Partial<{\r\n    noButtons: true, \r\n    noTitle: true, \r\n    minDate: Date,\r\n    maxDate: Date\r\n    withTime: true,\r\n    showOverflowMonths: true\r\n  }> & PopupOptions = {}) {\r\n    super('popup-date-picker', options.noButtons ? [] : [{\r\n      langKey: 'JumpToDate',\r\n      callback: () => {\r\n        if(this.onPick) {\r\n          this.onPick(this.selectedDate.getTime() / 1000 | 0);\r\n        }\r\n      }\r\n    }, {\r\n      langKey: 'Cancel',\r\n      isCancel: true\r\n    }], {body: true, overlayClosable: true, ...options});\r\n\r\n    this.minDate = options.minDate || new Date('2013-08-01T00:00:00');\r\n\r\n    if(initDate < this.minDate) {\r\n      initDate.setFullYear(this.minDate.getFullYear(), this.minDate.getMonth(), this.minDate.getDate());\r\n    }\r\n\r\n    // Controls\r\n    this.controlsDiv = document.createElement('div');\r\n    this.controlsDiv.classList.add('date-picker-controls');\r\n\r\n    this.prevBtn = document.createElement('button');\r\n    this.prevBtn.classList.add('btn-icon', 'tgico-down', 'date-picker-prev');\r\n    this.prevBtn.addEventListener('click', this.onPrevClick);\r\n\r\n    this.nextBtn = document.createElement('button');\r\n    this.nextBtn.classList.add('btn-icon', 'tgico-down', 'date-picker-next');\r\n    this.nextBtn.addEventListener('click', this.onNextClick);\r\n    \r\n    this.monthTitle = document.createElement('div');\r\n    this.monthTitle.classList.add('date-picker-month-title');\r\n\r\n    this.controlsDiv.append(this.prevBtn, this.monthTitle, this.nextBtn);\r\n\r\n    // Month\r\n    this.monthsContainer = document.createElement('div');\r\n    this.monthsContainer.classList.add('date-picker-months');\r\n    this.monthsContainer.addEventListener('click', this.onDateClick);\r\n\r\n    this.body.append(this.controlsDiv, this.monthsContainer);\r\n\r\n    // Time inputs\r\n    if(options.withTime) {\r\n      this.timeDiv = document.createElement('div');\r\n      this.timeDiv.classList.add('date-picker-time');\r\n\r\n      const delimiter = document.createElement('div');\r\n      delimiter.classList.add('date-picker-time-delimiter');\r\n      delimiter.append(':');\r\n\r\n      const handleTimeInput = (max: number, inputField: InputField, onInput: (length: number) => void, onOverflow?: (number: number) => void) => {\r\n        const maxString = '' + max;\r\n        inputField.input.addEventListener('input', (e) => {\r\n          let value = inputField.value.replace(/\\D/g, '');\r\n          if(value.length > 2) {\r\n            value = value.slice(0, 2);\r\n          } else {\r\n            if((value.length === 1 && +value[0] > +maxString[0]) || (value.length === 2 && +value > max)) {\r\n              if(value.length === 2 && onOverflow) {\r\n                onOverflow(+value[1]);\r\n              }\r\n\r\n              value = '0' + value[0];\r\n            }\r\n          }\r\n\r\n          inputField.setValueSilently(value);\r\n          onInput(value.length);\r\n        });\r\n      };\r\n\r\n      this.hoursInputField = new InputField({plainText: true});\r\n      this.minutesInputField = new InputField({plainText: true});\r\n\r\n      handleTimeInput(23, this.hoursInputField, (length) => {\r\n        if(length === 2) {\r\n          this.minutesInputField.input.focus();\r\n        }\r\n\r\n        this.setTimeTitle();\r\n      }, (number) => {\r\n        this.minutesInputField.value = (number + this.minutesInputField.value).slice(0, 2);\r\n      });\r\n      handleTimeInput(59, this.minutesInputField, (length) => {\r\n        if(!length) {\r\n          this.hoursInputField.input.focus();\r\n        }\r\n\r\n        this.setTimeTitle();\r\n      });\r\n\r\n      this.selectedDate = initDate;\r\n\r\n      initDate.setMinutes(initDate.getMinutes() + 10);\r\n      \r\n      this.hoursInputField.setValueSilently(('0' + initDate.getHours()).slice(-2));\r\n      this.minutesInputField.setValueSilently(('0' + initDate.getMinutes()).slice(-2));\r\n\r\n      initDate.setHours(0, 0, 0, 0);\r\n      \r\n      this.timeDiv.append(this.hoursInputField.container, delimiter, this.minutesInputField.container);\r\n\r\n      this.btnConfirm.addEventListener('click', () => {\r\n        if(this.onPick) {\r\n          this.selectedDate.setHours(+this.hoursInputField.value || 0, +this.minutesInputField.value || 0, 0, 0);\r\n          this.onPick(this.selectedDate.getTime() / 1000 | 0);\r\n        }\r\n\r\n        this.hide();\r\n      }, {once: true});\r\n\r\n      this.body.append(this.timeDiv);\r\n\r\n      this.prevBtn.classList.add('primary');\r\n      this.nextBtn.classList.add('primary');\r\n    }\r\n\r\n    const popupCenterer = document.createElement('div');\r\n    popupCenterer.classList.add('popup-centerer');\r\n    popupCenterer.append(this.container);\r\n    this.element.append(popupCenterer);\r\n\r\n    //const passed = (initDate.getTime() - (initDate.getTimezoneOffset() * 60000)) % 86400000;\r\n    //this.selectedDate = this.maxDate = new Date(initDate.getTime() - passed);\r\n    initDate.setHours(0, 0, 0, 0);\r\n    this.selectedDate = initDate;\r\n\r\n    this.maxDate = options.maxDate || new Date();\r\n    this.maxDate.setHours(0, 0, 0, 0);\r\n\r\n    this.selectedMonth = new Date(this.selectedDate);\r\n    this.selectedMonth.setDate(1);\r\n\r\n    this.maxMonth = new Date(this.maxDate);\r\n    this.maxMonth.setDate(1);\r\n\r\n    this.minMonth = new Date(this.minDate);\r\n    this.minMonth.setHours(0, 0, 0, 0);\r\n    this.minMonth.setDate(1);\r\n\r\n    if(this.selectedMonth.getTime() === this.minMonth.getTime()) {\r\n      this.prevBtn.setAttribute('disabled', 'true');\r\n    }\r\n\r\n    if(this.selectedMonth.getTime() === this.maxMonth.getTime()) {\r\n      this.nextBtn.setAttribute('disabled', 'true');\r\n    }\r\n\r\n    if(options.noTitle) {\r\n      this.setTitle = () => {};\r\n    }\r\n\r\n    this.setTimeTitle();\r\n    this.setTitle();\r\n    this.setMonth();\r\n  }\r\n\r\n  onPrevClick = (e: MouseEvent) => {\r\n    this.selectedMonth.setMonth(this.selectedMonth.getMonth() - 1);\r\n    this.setMonth();\r\n\r\n    if(this.selectedMonth.getTime() === this.minMonth.getTime()) {\r\n      this.prevBtn.setAttribute('disabled', 'true');\r\n    }\r\n    \r\n    this.nextBtn.removeAttribute('disabled');\r\n  };\r\n\r\n  onNextClick = (e: MouseEvent) => {\r\n    this.selectedMonth.setMonth(this.selectedMonth.getMonth() + 1);\r\n    this.setMonth();\r\n\r\n    if(this.selectedMonth.getTime() === this.maxMonth.getTime()) {\r\n      this.nextBtn.setAttribute('disabled', 'true');\r\n    }\r\n\r\n    this.prevBtn.removeAttribute('disabled');\r\n  };\r\n\r\n  onDateClick = (e: MouseEvent) => {\r\n    //cancelEvent(e);\r\n    const target = e.target as HTMLElement;\r\n\r\n    if(!target.dataset.timestamp) return;\r\n\r\n    if(this.selectedEl) {\r\n      if(this.selectedEl === target) return;\r\n      this.selectedEl.classList.remove('active');\r\n    }\r\n\r\n    this.selectedEl = target;\r\n    \r\n    target.classList.add('active');\r\n    const timestamp = +target.dataset.timestamp;\r\n\r\n    this.selectedDate = new Date(timestamp);\r\n\r\n    this.setTitle();\r\n    this.setTimeTitle();\r\n  };\r\n\r\n  public setTimeTitle() {\r\n    if(this.btnConfirm && this.selectedDate) {\r\n      let key: LangPackKey, args: any[] = [];\r\n      const date = new Date();\r\n      date.setHours(0, 0, 0, 0);\r\n\r\n      const timeOptions: Intl.DateTimeFormatOptions = {\r\n        minute: '2-digit',\r\n        hour: '2-digit'\r\n      };\r\n      \r\n      const sendDate = new Date(this.selectedDate.getTime());\r\n      sendDate.setHours(+this.hoursInputField.value, +this.minutesInputField.value);\r\n\r\n      if(this.selectedDate.getTime() === date.getTime()) {\r\n        key = 'Schedule.SendToday';\r\n      }/*  else if(this.selectedDate.getTime() === (date.getTime() + 86400e3)) {\r\n        dayStr = 'Tomorrow';\r\n      } */ else {\r\n        key = 'Schedule.SendDate';\r\n\r\n        const dateOptions: Intl.DateTimeFormatOptions = {\r\n          month: 'short',\r\n          day: 'numeric'\r\n        };\r\n\r\n        if(sendDate.getFullYear() !== date.getFullYear()) {\r\n          dateOptions.year = 'numeric';\r\n        }\r\n\r\n        args.push(new I18n.IntlDateElement({\r\n          date: sendDate,\r\n          options: dateOptions\r\n        }).element);\r\n      }\r\n\r\n      args.push(new I18n.IntlDateElement({\r\n        date: sendDate,\r\n        options: timeOptions\r\n      }).element);\r\n\r\n      this.btnConfirm.firstChild.replaceWith(i18n(key, args));\r\n    }\r\n  }\r\n\r\n  public setTitle() {\r\n    //const splitted = this.selectedDate.toString().split(' ', 3);\r\n    //this.title.innerText = splitted[0] + ', ' + splitted[1] + ' ' + splitted[2];\r\n    this.title.textContent = '';\r\n    this.title.append(new I18n.IntlDateElement({\r\n      date: this.selectedDate,\r\n      options: {\r\n        day: 'numeric',\r\n        month: 'long',\r\n        weekday: 'short'\r\n      }\r\n    }).element);\r\n  }\r\n\r\n  private renderElement(disabled: boolean, innerText: string | HTMLElement = '') {\r\n    const el = document.createElement('button');\r\n    el.classList.add('btn-icon', 'date-picker-month-date');\r\n\r\n    if(disabled) {\r\n      el.setAttribute('disabled', 'true');\r\n    }\r\n\r\n    if(innerText) {\r\n      el.append(innerText);\r\n    }\r\n\r\n    return el;\r\n  }\r\n\r\n  public setMonth() {\r\n    const firstDate = new Date(this.selectedMonth);\r\n\r\n    const options: Intl.DateTimeFormatOptions = {\r\n      year: 'numeric',\r\n      month: this.timeDiv && mediaSizes.isMobile ? 'short' : 'long'\r\n    };\r\n\r\n    this.monthTitle.textContent = '';\r\n    this.monthTitle.append(new I18n.IntlDateElement({date: firstDate, options}).element);\r\n    //this.monthTitle.innerText = (this.timeDiv && mediaSizes.isMobile ? monthName.slice(0, 3) : monthName) + ' ' + this.selectedMonth.getFullYear();\r\n\r\n    if(this.month) {\r\n      this.month.remove();\r\n    }\r\n\r\n    this.month = document.createElement('div');\r\n    this.month.classList.add('date-picker-month');\r\n\r\n    const weekStartDate = new Date();\r\n    const day = weekStartDate.getDay();\r\n    if(day !== 1) {\r\n      weekStartDate.setHours(-24 * (day - 1)); \r\n    }\r\n\r\n    for(let i = 0; i < 7; ++i) {\r\n      const el = this.renderElement(true, new I18n.IntlDateElement({date: weekStartDate, options: {weekday: 'narrow'}}).element);\r\n      el.classList.remove('date-picker-month-date');\r\n      el.classList.add('date-picker-month-day');\r\n      this.month.append(el);\r\n      weekStartDate.setDate(weekStartDate.getDate() + 1);\r\n    }\r\n\r\n    // 0 - sunday\r\n    let dayIndex = firstDate.getDay() - 1;\r\n    if(dayIndex === -1) dayIndex = 7 - 1;\r\n\r\n    const clonedDate = new Date(firstDate.getTime());\r\n    clonedDate.setDate(clonedDate.getDate() - dayIndex - 1);\r\n\r\n    // Padding first week\r\n    for(let i = 0; i < dayIndex; ++i) {\r\n      if(this.options.showOverflowMonths) {\r\n        clonedDate.setDate(clonedDate.getDate() + 1);\r\n        this.month.append(this.renderElement(true, '' + clonedDate.getDate()));\r\n      } else {\r\n        this.month.append(this.renderElement(true));\r\n      }\r\n    }\r\n\r\n    do {\r\n      const date = firstDate.getDate();\r\n      const el = this.renderElement(firstDate > this.maxDate || firstDate < this.minDate, '' + date);\r\n      el.dataset.timestamp = '' + firstDate.getTime();\r\n\r\n      if(firstDate.getTime() === this.selectedDate.getTime()) {\r\n        this.selectedEl = el;\r\n        el.classList.add('active');\r\n      }\r\n\r\n      this.month.append(el);\r\n\r\n      firstDate.setDate(date + 1);\r\n    } while(firstDate.getDate() !== 1);\r\n\r\n    const remainder = this.month.childElementCount % 7;\r\n    if(this.options.showOverflowMonths && remainder) {\r\n      for(let i = remainder; i < 7; ++i) {\r\n        this.month.append(this.renderElement(true, '' + firstDate.getDate()));\r\n        firstDate.setDate(firstDate.getDate() + 1);\r\n      }\r\n    }\r\n\r\n    const lines = Math.ceil(this.month.childElementCount / 7);\r\n    this.container.dataset.lines = '' + lines;\r\n\r\n    this.monthsContainer.append(this.month);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appImManager from \"../../lib/appManagers/appImManager\";\r\nimport PopupPickUser from \"./pickUser\";\r\n\r\nexport default class PopupForward extends PopupPickUser {\r\n  constructor(fromPeerId: number, mids: number[], onSelect?: () => Promise<void> | void, onClose?: () => void) {\r\n    super({\r\n      peerTypes: ['dialogs', 'contacts'],\r\n      onSelect: async(peerId) => {\r\n        if(onSelect) {\r\n          const res = onSelect();\r\n          if(res instanceof Promise) {\r\n            await res;\r\n          }\r\n        }\r\n\r\n        appImManager.setInnerPeer(peerId);\r\n        appImManager.chat.input.initMessagesForward(fromPeerId, mids.slice());\r\n      },\r\n      onClose,\r\n      placeholder: 'ShareModal.Search.ForwardPlaceholder',\r\n      chatRightsAction: 'send_messages'\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default class StickyIntersector {\r\n  private headersObserver: IntersectionObserver;\r\n  private elementsObserver: IntersectionObserver;\r\n\r\n  constructor(private container: HTMLElement, private handler: (stuck: boolean, target: HTMLElement) => void) {\r\n    this.observeHeaders();\r\n    this.observeElements();\r\n  }\r\n\r\n  /**\r\n   * Sets up an intersection observer to notify when elements with the class\r\n   * `.sticky_sentinel--top` become visible/invisible at the top of the container.\r\n   * @param {!Element} container\r\n   */\r\n  private observeHeaders() {\r\n    this.headersObserver = new IntersectionObserver((entries) => {\r\n      for(const entry of entries) {\r\n        const targetInfo = entry.boundingClientRect;\r\n        const stickyTarget = entry.target.parentElement;\r\n        const rootBoundsInfo = entry.rootBounds;\r\n  \r\n        // Started sticking.\r\n        if(targetInfo.bottom < rootBoundsInfo.top) {\r\n          this.handler(true, stickyTarget);\r\n        }\r\n  \r\n        // Stopped sticking.\r\n        if(targetInfo.bottom >= rootBoundsInfo.top &&\r\n            targetInfo.bottom < rootBoundsInfo.bottom) {\r\n          this.handler(false, stickyTarget);\r\n        }\r\n      }\r\n    }, {threshold: 0, root: this.container});\r\n  }\r\n  \r\n  private observeElements() {\r\n    this.elementsObserver = new IntersectionObserver((entries) => {\r\n      let entry = entries.filter(entry => entry.boundingClientRect.top < 0).sort((a, b) => a.boundingClientRect.top - b.boundingClientRect.top)[0];\r\n      if(!entry) return;\r\n      let container = entry.isIntersecting ? entry.target : entry.target.nextElementSibling;\r\n      this.handler(true, container as HTMLElement);\r\n    }, {root: this.container});\r\n  }\r\n\r\n  /**\r\n   * @param {!Element} container\r\n   * @param {string} className\r\n   */\r\n  private addSentinel(container: HTMLElement, className: string) {\r\n    const sentinel = document.createElement('div');\r\n    sentinel.classList.add('sticky_sentinel', className);\r\n    return container.appendChild(sentinel);\r\n  }\r\n\r\n  /**\r\n   * Notifies when elements w/ the `sticky` class begin to stick or stop sticking.\r\n   * Note: the elements should be children of `container`.\r\n   * @param {!Element} container\r\n   */\r\n  public observeStickyHeaderChanges(element: HTMLElement) {\r\n    const headerSentinel = this.addSentinel(element, 'sticky_sentinel--top');\r\n    this.headersObserver.observe(headerSentinel);\r\n\r\n    this.elementsObserver.observe(element);\r\n  }\r\n\r\n  public disconnect() {\r\n    this.headersObserver.disconnect();\r\n    this.elementsObserver.disconnect();\r\n  }\r\n\r\n  public unobserve(element: HTMLElement, headerSentinel: HTMLElement) {\r\n    this.elementsObserver.unobserve(element);\r\n    this.headersObserver.unobserve(headerSentinel);\r\n  }\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { LazyLoadQueueIntersector } from \"../lazyLoadQueue\";\r\nimport { formatNumber } from \"../../helpers/number\";\r\nimport { Message } from \"../../layer\";\r\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\r\nimport appPeersManager from \"../../lib/appManagers/appPeersManager\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { ripple } from \"../ripple\";\r\nimport AvatarElement from \"../avatar\";\r\n\r\nconst TAG_NAME = 'replies-element';\r\n\r\nrootScope.addEventListener('replies_updated', (e) => {\r\n  const message = e;\r\n  (Array.from(document.querySelectorAll(TAG_NAME + `[data-post-key=\"${message.peerId}_${message.mid}\"]`)) as RepliesElement[]).forEach(element => {\r\n    element.message = message;\r\n    element.render();\r\n  });\r\n});\r\n\r\nexport default class RepliesElement extends HTMLElement {\r\n  public message: Message.message;\r\n  public type: 'footer' | 'beside';\r\n  public loadPromises: Promise<any>[];\r\n  public lazyLoadQueue: LazyLoadQueueIntersector;\r\n  \r\n  private updated = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public init() {\r\n    this.render();\r\n    this.dataset.postKey = this.message.peerId + '_' + this.message.mid;\r\n    this.classList.add('replies', 'replies-' + this.type);\r\n  }\r\n\r\n  public render() {\r\n    const replies = this.message.replies;\r\n\r\n    /* if(this.firstChild) {\r\n      this.innerHTML = '';\r\n    } */\r\n\r\n    if(this.type === 'footer') {\r\n      let leftPart: HTMLElement;\r\n      if(this.firstElementChild) {\r\n        leftPart = this.firstElementChild as HTMLElement;\r\n      }\r\n\r\n      if(replies?.recent_repliers) {\r\n        if(leftPart && !leftPart.classList.contains('replies-footer-avatars')) {\r\n          this.innerHTML = '';\r\n          leftPart = null;\r\n        }\r\n\r\n        if(!leftPart) {\r\n          leftPart = document.createElement('div');\r\n          leftPart.classList.add('replies-footer-avatars');\r\n        }\r\n\r\n        replies.recent_repliers.slice().reverse().forEach((peer, idx) => {\r\n          let avatarElem = leftPart.children[idx] as AvatarElement;\r\n          if(!avatarElem) {\r\n            avatarElem = new AvatarElement();\r\n            avatarElem.setAttribute('dialog', '0');\r\n            avatarElem.classList.add('avatar-30');\r\n            avatarElem.lazyLoadQueue = this.lazyLoadQueue;\r\n            \r\n            if(this.loadPromises) {\r\n              avatarElem.loadPromises = this.loadPromises;\r\n            }\r\n          }\r\n          \r\n          avatarElem.setAttribute('peer', '' + appPeersManager.getPeerId(peer));\r\n          \r\n          if(!avatarElem.parentNode) {\r\n            leftPart.append(avatarElem);\r\n          }\r\n        });\r\n\r\n        // if were 3 and became 2\r\n        (Array.from(leftPart.children) as HTMLElement[]).slice(replies.recent_repliers.length).forEach(el => el.remove());\r\n      } else {\r\n        if(leftPart && !leftPart.classList.contains('tgico-comments')) {\r\n          leftPart.remove();\r\n          leftPart = null;\r\n        }\r\n\r\n        if(!leftPart) {\r\n          leftPart = document.createElement('span');\r\n          leftPart.classList.add('tgico-comments');\r\n        }\r\n      }\r\n\r\n      if(!leftPart.parentElement) {\r\n        this.append(leftPart);\r\n      }\r\n  \r\n      let text: string;\r\n      if(replies) {\r\n        if(replies.replies) {\r\n          text = replies.replies + ' ' + (replies.replies > 1 ? 'Comments' : 'Comment');\r\n        } else {\r\n          text = 'Leave a Comment';\r\n        }\r\n      } else {\r\n        text = 'View in chat';\r\n      }\r\n\r\n      if(replies) {\r\n        const historyStorage = appMessagesManager.getHistoryStorage(-replies.channel_id);\r\n        let isUnread = false;\r\n        if(replies.replies) {\r\n          if(replies.read_max_id !== undefined && replies.max_id !== undefined) {\r\n            isUnread = replies.read_max_id < replies.max_id;\r\n          } else {\r\n            isUnread = !historyStorage.readMaxId || historyStorage.readMaxId < (replies.max_id || 0);\r\n          }\r\n        }\r\n        this.classList.toggle('is-unread', isUnread);\r\n      }\r\n\r\n      let textSpan = this.children[1] as HTMLElement;\r\n      if(!textSpan) {\r\n        textSpan = document.createElement('span');\r\n        textSpan.classList.add('replies-footer-text');\r\n\r\n        const iconSpan = document.createElement('span');\r\n        iconSpan.classList.add('tgico-next');\r\n\r\n        const rippleContainer = document.createElement('div');\r\n        ripple(rippleContainer);\r\n\r\n        this.append(textSpan, iconSpan, rippleContainer);\r\n      }\r\n\r\n      textSpan.innerHTML = text;\r\n    } else {\r\n      this.classList.add('bubble-beside-button');\r\n      this.innerHTML = `<span class=\"tgico-commentssticker\"></span><span class=\"replies-beside-text\">${replies?.replies ? formatNumber(replies.replies, 0) : ''}</span>`;\r\n    }\r\n\r\n    if(replies && !this.updated && !this.message.pFlags.is_outgoing) {\r\n      appMessagesManager.subscribeRepliesThread(this.message.peerId, this.message.mid);\r\n      appMessagesManager.updateMessage(this.message.peerId, this.message.mid, 'replies_updated');\r\n      this.updated = true;\r\n    }\r\n\r\n    if(this.loadPromises) {\r\n      this.loadPromises = undefined;\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define(TAG_NAME, RepliesElement);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { getFullDate } from \"../../helpers/date\";\r\nimport { formatNumber } from \"../../helpers/number\";\r\nimport { i18n } from \"../../lib/langPack\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport { LazyLoadQueueIntersector } from \"../lazyLoadQueue\";\r\nimport PeerTitle from \"../peerTitle\";\r\nimport { wrapReply } from \"../wrappers\";\r\nimport Chat from \"./chat\";\r\nimport RepliesElement from \"./replies\";\r\n\r\nexport namespace MessageRender {\r\n  /* export const setText = () => {\r\n\r\n  }; */\r\n\r\n  export const setTime = (chat: Chat, message: any, bubble: HTMLElement, bubbleContainer: HTMLElement, messageDiv: HTMLElement) => {\r\n    const date = new Date(message.date * 1000);\r\n    let time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2);\r\n\r\n    if(message.views) {\r\n      const postAuthor = message.post_author || message.fwd_from?.post_author;\r\n\r\n      bubble.classList.add('channel-post');\r\n      time = formatNumber(message.views, 1) + ' <i class=\"tgico-channelviews time-icon\"></i> ' + (postAuthor ? RichTextProcessor.wrapEmojiText(postAuthor) + ', ' : '') + time;\r\n  \r\n      if(!message.fwd_from?.saved_from_msg_id) {\r\n        const forward = document.createElement('div');\r\n        forward.classList.add('bubble-beside-button', 'forward');\r\n        forward.innerHTML = `\r\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\">\r\n          <defs>\r\n            <path d=\"M13.55 3.24L13.64 3.25L13.73 3.27L13.81 3.29L13.9 3.32L13.98 3.35L14.06 3.39L14.14 3.43L14.22 3.48L14.29 3.53L14.36 3.59L14.43 3.64L22.23 10.85L22.36 10.99L22.48 11.15L22.57 11.31L22.64 11.48L22.69 11.66L22.72 11.85L22.73 12.04L22.71 12.22L22.67 12.41L22.61 12.59L22.53 12.76L22.42 12.93L22.29 13.09L22.23 13.15L14.43 20.36L14.28 20.48L14.12 20.58L13.95 20.66L13.77 20.72L13.58 20.76L13.4 20.77L13.22 20.76L13.03 20.73L12.85 20.68L12.68 20.61L12.52 20.52L12.36 20.4L12.22 20.27L12.16 20.2L12.1 20.13L12.05 20.05L12.01 19.98L11.96 19.9L11.93 19.82L11.89 19.73L11.87 19.65L11.84 19.56L11.83 19.47L11.81 19.39L11.81 19.3L11.8 19.2L11.8 16.42L11 16.49L10.23 16.58L9.51 16.71L8.82 16.88L8.18 17.09L7.57 17.33L7.01 17.6L6.48 17.91L5.99 18.26L5.55 18.64L5.14 19.05L4.77 19.51L4.43 19.99L4.29 20.23L4.21 20.35L4.11 20.47L4 20.57L3.88 20.65L3.75 20.72L3.62 20.78L3.48 20.82L3.33 20.84L3.19 20.84L3.04 20.83L2.9 20.79L2.75 20.74L2.62 20.68L2.53 20.62L2.45 20.56L2.38 20.5L2.31 20.43L2.25 20.36L2.2 20.28L2.15 20.19L2.11 20.11L2.07 20.02L2.04 19.92L2.02 19.83L2.01 19.73L2 19.63L2.04 17.99L2.19 16.46L2.46 15.05L2.85 13.75L3.35 12.58L3.97 11.53L4.7 10.6L5.55 9.8L6.51 9.12L7.59 8.56L8.77 8.13L10.07 7.83L11.48 7.65L11.8 7.63L11.8 4.8L11.91 4.56L12.02 4.35L12.14 4.16L12.25 3.98L12.37 3.82L12.48 3.68L12.61 3.56L12.73 3.46L12.85 3.38L12.98 3.31L13.11 3.27L13.24 3.24L13.37 3.23L13.46 3.23L13.55 3.24Z\" id=\"b13RmHDQtl\"></path>\r\n          </defs>\r\n          <use xlink:href=\"#b13RmHDQtl\" opacity=\"1\" fill=\"#fff\" fill-opacity=\"1\"></use>\r\n        </svg>`;\r\n        bubbleContainer.append(forward);\r\n        bubble.classList.add('with-beside-button');\r\n      }\r\n    }\r\n\r\n    if(message.edit_date && chat.type !== 'scheduled' && !message.pFlags.edit_hide) {\r\n      bubble.classList.add('is-edited');\r\n      time = '<i class=\"edited\">edited</i> ' + time;\r\n    }\r\n\r\n    if(chat.type !== 'pinned' && message.pFlags.pinned) {\r\n      bubble.classList.add('is-pinned');\r\n      time = '<i class=\"tgico-pinnedchat time-icon\"></i>' + time;\r\n    }\r\n\r\n    const title = getFullDate(date) \r\n      + (message.edit_date ? `\\nEdited: ${getFullDate(new Date(message.edit_date * 1000))}` : '')\r\n      + (message.fwd_from ? `\\nOriginal: ${getFullDate(new Date(message.fwd_from.date * 1000))}` : '');\r\n\r\n    const timeSpan = document.createElement('span');\r\n    timeSpan.classList.add('time', 'tgico');\r\n    timeSpan.title = title;\r\n    timeSpan.innerHTML = `${time}<div class=\"inner tgico\" title=\"${title}\">${time}</div>`;\r\n\r\n    messageDiv.append(timeSpan);\r\n\r\n    return timeSpan;\r\n  };\r\n\r\n  export const renderReplies = ({bubble, bubbleContainer, message, messageDiv, loadPromises, lazyLoadQueue}: {\r\n    bubble: HTMLElement,\r\n    bubbleContainer: HTMLElement,\r\n    message: any,\r\n    messageDiv: HTMLElement,\r\n    loadPromises?: Promise<any>[],\r\n    lazyLoadQueue?: LazyLoadQueueIntersector\r\n  }) => {\r\n    const isFooter = !bubble.classList.contains('sticker') && !bubble.classList.contains('emoji-big') && !bubble.classList.contains('round');\r\n    const repliesFooter = new RepliesElement();\r\n    repliesFooter.message = message;\r\n    repliesFooter.type = isFooter ? 'footer' : 'beside';\r\n    repliesFooter.loadPromises = loadPromises;\r\n    repliesFooter.lazyLoadQueue = lazyLoadQueue;\r\n    repliesFooter.init();\r\n    bubbleContainer.prepend(repliesFooter);\r\n    return isFooter;\r\n  };\r\n\r\n  export const setReply = ({chat, bubble, bubbleContainer, message}: {\r\n    chat: Chat,\r\n    bubble: HTMLElement,\r\n    bubbleContainer?: HTMLElement,\r\n    message: any\r\n  }) => {\r\n    const isReplacing = !bubbleContainer;\r\n    if(isReplacing) {\r\n      bubbleContainer = bubble.querySelector('.bubble-content');\r\n    }\r\n\r\n    const currentReplyDiv = isReplacing ? bubbleContainer.querySelector('.reply') : null;\r\n    if(!message.reply_to_mid) {\r\n      if(currentReplyDiv) {\r\n        currentReplyDiv.remove();\r\n      }\r\n\r\n      bubble.classList.remove('is-reply');\r\n      return;\r\n    }\r\n\r\n\r\n    const replyToPeerId = message.reply_to.reply_to_peer_id ? chat.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : chat.peerId;\r\n\r\n    let originalMessage = chat.appMessagesManager.getMessageByPeer(replyToPeerId, message.reply_to_mid);\r\n    let originalPeerTitle: string | HTMLElement;\r\n    \r\n    /////////this.log('message to render reply', originalMessage, originalPeerTitle, bubble, message);\r\n    \r\n    // need to download separately\r\n    if(originalMessage._ === 'messageEmpty') {\r\n      //////////this.log('message to render reply empty, need download', message, message.reply_to_mid);\r\n      chat.appMessagesManager.wrapSingleMessage(replyToPeerId, message.reply_to_mid);\r\n      chat.bubbles.needUpdate.push({replyToPeerId, replyMid: message.reply_to_mid, mid: message.mid});\r\n      \r\n      originalPeerTitle = i18n('Loading');\r\n    } else {\r\n      originalPeerTitle = new PeerTitle({\r\n        peerId: originalMessage.fromId || originalMessage.fwdFromId,\r\n        dialog: false,\r\n        onlyFirstName: false,\r\n        plainText: false\r\n      }).element;\r\n    }\r\n\r\n    const wrapped = wrapReply(originalPeerTitle, undefined, originalMessage);\r\n    if(currentReplyDiv) {\r\n      currentReplyDiv.replaceWith(wrapped);\r\n    } else {\r\n      bubbleContainer.append(wrapped);\r\n    }\r\n    //bubbleContainer.insertBefore(, nameContainer);\r\n    bubble.classList.add('is-reply');\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nexport function getElementByPoint(container: HTMLElement, verticalSide: 'top' | 'bottom', horizontalSide: 'center' | 'left'): HTMLElement {\r\n  //return null;\r\n  const rect = container.getBoundingClientRect();\r\n  const x = horizontalSide === 'center' ? Math.ceil(rect.left + ((rect.right - rect.left) / 2) + 1) : Math.ceil(rect.left + 1);\r\n  const y = verticalSide === 'bottom' ? Math.floor(rect.top + rect.height - 1) : Math.ceil(rect.top + 1);\r\n  return document.elementFromPoint(x, y) as any;\r\n};\r\n\r\nMOUNT_CLASS_TO.getElementByPoint = getElementByPoint;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function reflowScrollableElement(element: HTMLElement) {\r\n  element.style.display = 'none';\r\n  void element.offsetLeft; // reflow\r\n  element.style.display = '';\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function setInnerHTML(elem: HTMLElement, html: string) {\r\n  elem.setAttribute('dir', 'auto');\r\n  elem.innerHTML = html;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppImManager } from \"../../lib/appManagers/appImManager\";\r\nimport type { AppMessagesManager, HistoryResult, HistoryStorage, MyMessage } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type { AppStickersManager } from \"../../lib/appManagers/appStickersManager\";\r\nimport type { AppUsersManager } from \"../../lib/appManagers/appUsersManager\";\r\nimport type { AppInlineBotsManager } from \"../../lib/appManagers/appInlineBotsManager\";\r\nimport type { AppPhotosManager } from \"../../lib/appManagers/appPhotosManager\";\r\nimport type { AppDocsManager, MyDocument } from \"../../lib/appManagers/appDocsManager\";\r\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\r\nimport type stateStorage from '../../lib/stateStorage';\r\nimport type Chat from \"./chat\";\r\nimport { CHAT_ANIMATION_GROUP } from \"../../lib/appManagers/appImManager\";\r\nimport { getObjectKeysAndSort } from \"../../helpers/object\";\r\nimport { isTouchSupported } from \"../../helpers/touchSupport\";\r\nimport { logger } from \"../../lib/logger\";\r\nimport rootScope, { BroadcastEvents } from \"../../lib/rootScope\";\r\nimport AppMediaViewer from \"../appMediaViewer\";\r\nimport BubbleGroups from \"./bubbleGroups\";\r\nimport PopupDatePicker from \"../popups/datePicker\";\r\nimport PopupForward from \"../popups/forward\";\r\nimport PopupStickers from \"../popups/stickers\";\r\nimport ProgressivePreloader from \"../preloader\";\r\nimport Scrollable from \"../scrollable\";\r\nimport StickyIntersector from \"../stickyIntersector\";\r\nimport animationIntersector from \"../animationIntersector\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport { isAndroid, isApple, isMobile, isSafari } from \"../../helpers/userAgent\";\r\nimport I18n, { i18n, langPack } from \"../../lib/langPack\";\r\nimport AvatarElement from \"../avatar\";\r\nimport { formatPhoneNumber } from \"../misc\";\r\nimport { ripple } from \"../ripple\";\r\nimport { wrapAlbum, wrapPhoto, wrapVideo, wrapDocument, wrapSticker, wrapPoll, wrapGroupedDocuments } from \"../wrappers\";\r\nimport { MessageRender } from \"./messageRender\";\r\nimport LazyLoadQueue from \"../lazyLoadQueue\";\r\nimport { AppChatsManager } from \"../../lib/appManagers/appChatsManager\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport PollElement from \"../poll\";\r\nimport AudioElement from \"../audio\";\r\nimport { Message, MessageEntity,  MessageReplyHeader, Update } from \"../../layer\";\r\nimport { REPLIES_PEER_ID } from \"../../lib/mtproto/mtproto_config\";\r\nimport { FocusDirection } from \"../../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck, { getHeavyAnimationPromise, dispatchHeavyAnimationEvent, interruptHeavyAnimation } from \"../../hooks/useHeavyAnimationCheck\";\r\nimport { fastRaf } from \"../../helpers/schedulers\";\r\nimport { deferredPromise } from \"../../helpers/cancellablePromise\";\r\nimport RepliesElement from \"./replies\";\r\nimport DEBUG from \"../../config/debug\";\r\nimport { SliceEnd } from \"../../helpers/slicedArray\";\r\nimport serverTimeManager from \"../../lib/mtproto/serverTimeManager\";\r\nimport PeerTitle from \"../peerTitle\";\r\nimport { forEachReverse } from \"../../helpers/array\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport findUpTag from \"../../helpers/dom/findUpTag\";\r\nimport { toast } from \"../toast\";\r\nimport { getElementByPoint } from \"../../helpers/dom/getElementByPoint\";\r\nimport { getMiddleware } from \"../../helpers/middleware\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport htmlToDocumentFragment from \"../../helpers/dom/htmlToDocumentFragment\";\r\nimport positionElementByIndex from \"../../helpers/dom/positionElementByIndex\";\r\nimport reflowScrollableElement from \"../../helpers/dom/reflowScrollableElement\";\r\nimport replaceContent from \"../../helpers/dom/replaceContent\";\r\nimport setInnerHTML from \"../../helpers/dom/setInnerHTML\";\r\nimport whichChild from \"../../helpers/dom/whichChild\";\r\nimport { cancelAnimationByKey } from \"../../helpers/animation\";\r\n\r\nconst USE_MEDIA_TAILS = false;\r\nconst IGNORE_ACTIONS: Message.messageService['action']['_'][] = [/* 'messageActionHistoryClear' */];\r\n\r\nconst TEST_SCROLL_TIMES: number = undefined;\r\nlet TEST_SCROLL = TEST_SCROLL_TIMES;\r\n\r\nlet queueId = 0;\r\n\r\nexport default class ChatBubbles {\r\n  public bubblesContainer: HTMLDivElement;\r\n  private chatInner: HTMLDivElement;\r\n  public scrollable: Scrollable;\r\n\r\n  private getHistoryTopPromise: Promise<boolean>;\r\n  private getHistoryBottomPromise: Promise<boolean>;\r\n\r\n  public peerId = 0;\r\n  //public messagesCount: number = -1;\r\n\r\n  private unreadOut = new Set<number>();\r\n  public needUpdate: {replyToPeerId: number, replyMid: number, mid: number}[] = []; // if need wrapSingleMessage\r\n\r\n  public bubbles: {[mid: string]: HTMLDivElement} = {};\r\n  private dateMessages: {[timestamp: number]: { \r\n    div: HTMLDivElement, \r\n    firstTimestamp: number, \r\n    container: HTMLDivElement,\r\n    timeout?: number \r\n  }} = {};\r\n\r\n  private scrolledDown = true;\r\n  private isScrollingTimeout = 0;\r\n\r\n  private stickyIntersector: StickyIntersector;\r\n\r\n  private unreadedObserver: IntersectionObserver;\r\n  private unreaded: Map<HTMLElement, number> = new Map();\r\n  private unreadedSeen: Set<number> = new Set();\r\n  private readPromise: Promise<void>;\r\n\r\n  private bubbleGroups: BubbleGroups;\r\n\r\n  private preloader: ProgressivePreloader = null;\r\n  \r\n  private loadedTopTimes = 0;\r\n  private loadedBottomTimes = 0;\r\n\r\n  private messagesQueuePromise: Promise<void> = null;\r\n  private messagesQueue: {message: any, bubble: HTMLDivElement, reverse: boolean, promises: Promise<void>[]}[] = [];\r\n  private messagesQueueOnRender: () => void = null;\r\n  private messagesQueueOnRenderAdditional: () => void = null;\r\n\r\n  private firstUnreadBubble: HTMLDivElement = null;\r\n  private attachedUnreadBubble: boolean;\r\n\r\n  public lazyLoadQueue: LazyLoadQueue;\r\n\r\n  private middleware = getMiddleware();\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  public listenerSetter: ListenerSetter;\r\n\r\n  private replyFollowHistory: number[] = [];\r\n\r\n  private isHeavyAnimationInProgress = false;\r\n  private scrollingToNewBubble: HTMLElement;\r\n\r\n  private isFirstLoad = true;\r\n  private needReflowScroll: boolean;\r\n\r\n  private fetchNewPromise: Promise<void>;\r\n  private historyStorage: HistoryStorage;\r\n\r\n  private passEntities: Partial<{\r\n    [_ in MessageEntity['_']]: boolean\r\n  }> = {};\r\n\r\n  constructor(private chat: Chat, \r\n    private appMessagesManager: AppMessagesManager, \r\n    private appStickersManager: AppStickersManager, \r\n    private appUsersManager: AppUsersManager, \r\n    private appInlineBotsManager: AppInlineBotsManager, \r\n    private appPhotosManager: AppPhotosManager, \r\n    private appPeersManager: AppPeersManager\r\n  ) {\r\n    //this.chat.log.error('Bubbles construction');\r\n    \r\n    this.listenerSetter = new ListenerSetter();\r\n\r\n    this.bubblesContainer = document.createElement('div');\r\n    this.bubblesContainer.classList.add('bubbles', 'scrolled-down');\r\n\r\n    this.chatInner = document.createElement('div');\r\n    this.chatInner.classList.add('bubbles-inner');\r\n\r\n    this.setScroll();\r\n\r\n    this.bubblesContainer.append(this.scrollable.container);\r\n\r\n    // * constructor end\r\n\r\n    this.log = this.chat.log;\r\n    this.bubbleGroups = new BubbleGroups(this.chat);\r\n    this.preloader = new ProgressivePreloader({\r\n      cancelable: false\r\n    });\r\n    this.lazyLoadQueue = new LazyLoadQueue();\r\n    this.lazyLoadQueue.queueId = ++queueId;\r\n\r\n    // * events\r\n\r\n    // will call when sent for update pos\r\n    this.listenerSetter.add(rootScope, 'history_update', (e) => {\r\n      const {storage, peerId, mid} = e;\r\n      \r\n      if(mid && peerId === this.peerId && this.chat.getMessagesStorage() === storage) {\r\n        const bubble = this.bubbles[mid];\r\n        if(!bubble) return;\r\n\r\n        const message = this.chat.getMessage(mid);\r\n        \r\n        if(+bubble.dataset.timestamp >= (message.date + serverTimeManager.serverTimeOffset - 1)) {\r\n          //this.bubbleGroups.addBubble(bubble, message, false); // ! TEMP COMMENTED\r\n          return;\r\n        }\r\n\r\n        this.setBubblePosition(bubble, message, false);\r\n        //this.log('history_update', this.bubbles[mid], mid, message);\r\n\r\n        if(this.scrollingToNewBubble) {\r\n          this.scrollToBubbleEnd();\r\n        }\r\n\r\n        //this.renderMessage(message, false, false, bubble);\r\n      }\r\n    });\r\n\r\n    //this.listenerSetter.add(rootScope, '')\r\n\r\n    this.listenerSetter.add(rootScope, 'dialog_flush', (e) => {\r\n      let peerId: number = e.peerId;\r\n      if(this.peerId === peerId) {\r\n        this.deleteMessagesByIds(Object.keys(this.bubbles).map(m => +m));\r\n      }\r\n    });\r\n\r\n    // Calls when message successfully sent and we have an id\r\n    this.listenerSetter.add(rootScope, 'message_sent', (e) => {\r\n      const {storage, tempId, tempMessage, mid} = e;\r\n\r\n      // ! can't use peerId to validate here, because id can be the same in 'scheduled' and 'chat' types\r\n      if(this.chat.getMessagesStorage() !== storage) {\r\n        return;\r\n      }\r\n      \r\n      //this.log('message_sent', e);\r\n\r\n      const mounted = this.getMountedBubble(tempId, tempMessage) || this.getMountedBubble(mid);\r\n      if(mounted) {\r\n        const message = this.chat.getMessage(mid);\r\n        const bubble = mounted.bubble;\r\n        //this.bubbles[mid] = bubble;\r\n        \r\n        /////this.log('message_sent', bubble);\r\n\r\n        if(message.replies) {\r\n          const repliesElement = bubble.querySelector('replies-element') as RepliesElement;\r\n          if(repliesElement) {\r\n            repliesElement.message = message;\r\n            repliesElement.init();\r\n          }\r\n        }\r\n\r\n        if(message.media?.document && !message.media.document.type) {\r\n          const div = bubble.querySelector(`.document-container[data-mid=\"${tempId}\"] .document`);\r\n          if(div) {\r\n            div.replaceWith(wrapDocument({message}));\r\n          }\r\n        }\r\n\r\n        // set new mids to album items for mediaViewer\r\n        if(message.grouped_id) {\r\n          const item = (bubble.querySelector(`.grouped-item[data-mid=\"${tempId}\"]`) as HTMLElement) || bubble; // * it can be .document-container\r\n          if(item) {\r\n            item.dataset.mid = '' + mid;\r\n          }\r\n        }\r\n\r\n        if(message.media?.poll) {\r\n          const pollElement = bubble.querySelector('poll-element') as PollElement;\r\n          if(pollElement) {\r\n            const newPoll = message.media.poll;\r\n            pollElement.message = message;\r\n            pollElement.setAttribute('poll-id', newPoll.id);\r\n            pollElement.setAttribute('message-id', '' + mid);\r\n          }\r\n        }\r\n\r\n        if(message.media?.document) {\r\n          const element = bubble.querySelector(`audio-element[message-id=\"${tempId}\"], .document[data-doc-id=\"${tempId}\"]`) as HTMLElement;\r\n          if(element) {\r\n            if(element instanceof AudioElement) {\r\n              element.setAttribute('doc-id', message.media.document.id);\r\n              element.setAttribute('message-id', '' + mid);\r\n              element.message = message;\r\n              element.onLoad(true);\r\n            } else {\r\n              element.dataset.docId = message.media.document.id;\r\n            }\r\n          }\r\n        }\r\n\r\n        /* bubble.classList.remove('is-sending');\r\n        bubble.classList.add('is-sent');\r\n        bubble.dataset.mid = '' + mid;\r\n\r\n        this.bubbleGroups.removeBubble(bubble, tempId); */\r\n\r\n        if(message.media?.webpage && !bubble.querySelector('.web')) {\r\n          getHeavyAnimationPromise().then(() => {\r\n            this.renderMessage(message, true, false, bubble, false);\r\n            this.scrollToBubbleIfLast(bubble);\r\n          });\r\n          /* const mounted = this.getMountedBubble(mid);\r\n          if(!mounted) return;\r\n          this.renderMessage(mounted.message, true, false, mounted.bubble, false); */\r\n        }\r\n        \r\n        //delete this.bubbles[tempId];\r\n      } else {\r\n        this.log.warn('message_sent there is no bubble', e);\r\n      }\r\n\r\n      if(this.bubbles[tempId]) {\r\n        const bubble = this.bubbles[tempId];\r\n        this.bubbles[mid] = bubble;\r\n        delete this.bubbles[tempId];\r\n\r\n        //getHeavyAnimationPromise().then(() => {\r\n          fastRaf(() => {\r\n            if(bubble.classList.contains('is-sending')) {\r\n              bubble.classList.remove('is-sending');\r\n              bubble.classList.add(this.peerId === rootScope.myId && this.chat.type !== 'scheduled' ? 'is-read' : 'is-sent');\r\n            }\r\n          });\r\n        //});\r\n\r\n        bubble.dataset.mid = '' + mid;\r\n      }\r\n\r\n      if(this.unreadOut.has(tempId)) {\r\n        this.unreadOut.delete(tempId);\r\n        this.unreadOut.add(mid);\r\n      }\r\n\r\n      // * check timing of scheduled message\r\n      if(this.chat.type === 'scheduled') {\r\n        const timestamp = Date.now() / 1000 | 0;\r\n        const maxTimestamp = tempMessage.date - 10;\r\n        //this.log('scheduled timing:', timestamp, maxTimestamp);\r\n        if(timestamp >= maxTimestamp) {\r\n          this.deleteMessagesByIds([mid]);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'message_edit', (e) => {\r\n      fastRaf(() => {\r\n        const {storage, peerId, mid} = e;\r\n      \r\n        if(peerId !== this.peerId || storage !== this.chat.getMessagesStorage()) return;\r\n        const mounted = this.getMountedBubble(mid);\r\n        if(!mounted) return;\r\n\r\n        const updatePosition = this.chat.type === 'scheduled';\r\n        this.renderMessage(mounted.message, true, false, mounted.bubble, updatePosition);\r\n        this.scrollToBubbleIfLast(mounted.bubble);\r\n\r\n        if(updatePosition) {\r\n          (this.messagesQueuePromise || Promise.resolve()).then(() => {\r\n            this.deleteEmptyDateGroups();\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'album_edit', (e) => {\r\n      //fastRaf(() => { // ! can't use delayed smth here, need original bubble to be edited\r\n        const {peerId, groupId, deletedMids} = e;\r\n      \r\n        if(peerId !== this.peerId) return;\r\n        const mids = this.appMessagesManager.getMidsByAlbum(groupId);\r\n        const renderedId = mids.concat(deletedMids).find(mid => this.bubbles[mid]);\r\n        if(!renderedId) return;\r\n\r\n        const renderMaxId = getObjectKeysAndSort(this.appMessagesManager.groupedMessagesStorage[groupId], 'asc').pop();\r\n\r\n        this.renderMessage(this.chat.getMessage(renderMaxId), true, false, this.bubbles[renderedId], false);\r\n      //});\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'messages_downloaded', (e) => {\r\n      const {peerId, mids} = e;\r\n\r\n      const middleware = this.getMiddleware();\r\n      getHeavyAnimationPromise().then(() => {\r\n        if(!middleware()) return;\r\n\r\n        (mids as number[]).forEach(mid => {\r\n          /* const promise = (this.scrollable.scrollLocked && this.scrollable.scrollLockedPromise) || Promise.resolve();\r\n          promise.then(() => {\r\n  \r\n          }); */\r\n          forEachReverse(this.needUpdate, (obj, idx) => {\r\n            if(obj.replyMid === mid && obj.replyToPeerId === peerId) {\r\n              const {mid, replyMid} = this.needUpdate.splice(idx, 1)[0];\r\n              \r\n              //this.log('messages_downloaded', mid, replyMid, i, this.needUpdate, this.needUpdate.length, mids, this.bubbles[mid]);\r\n              const bubble = this.bubbles[mid];\r\n              if(!bubble) return;\r\n              \r\n              const message = this.chat.getMessage(mid);\r\n              \r\n              const repliedMessage = this.appMessagesManager.getMessageByPeer(obj.replyToPeerId, replyMid);\r\n              if(repliedMessage.deleted) { // ! чтобы не пыталось бесконечно загрузить удалённое сообщение\r\n                delete message.reply_to_mid; // ! WARNING!\r\n              }\r\n              \r\n              MessageRender.setReply({\r\n                chat: this.chat,\r\n                bubble,\r\n                message\r\n              });\r\n            }\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    this.listenerSetter.add(this.bubblesContainer, 'click', this.onBubblesClick/* , {capture: true, passive: false} */);\r\n\r\n    if(DEBUG) {\r\n      this.listenerSetter.add(this.bubblesContainer, 'dblclick', (e) => {\r\n        const bubble = findUpClassName(e.target, 'grouped-item') || findUpClassName(e.target, 'bubble');\r\n        if(bubble) {\r\n          const mid = +bubble.dataset.mid\r\n          this.log('debug message:', this.chat.getMessage(mid));\r\n          this.highlightBubble(bubble);\r\n        }\r\n      });\r\n    }\r\n\r\n    if(!isMobile) {\r\n      this.listenerSetter.add(this.bubblesContainer, 'dblclick', (e) => {\r\n        if(this.chat.selection.isSelecting || !this.appMessagesManager.canWriteToPeer(this.peerId, this.chat.threadId)) {\r\n          return;\r\n        }\r\n        \r\n        const bubble = (e.target as HTMLElement).classList.contains('bubble') ? e.target as HTMLElement : null;\r\n        if(bubble) {\r\n          const mid = +bubble.dataset.mid\r\n          this.chat.input.initMessageReply(mid);\r\n        }\r\n      });\r\n    }\r\n\r\n    /* if(false)  */this.stickyIntersector = new StickyIntersector(this.scrollable.container, (stuck, target) => {\r\n      for(const timestamp in this.dateMessages) {\r\n        const dateMessage = this.dateMessages[timestamp];\r\n        if(dateMessage.container === target) {\r\n          dateMessage.div.classList.toggle('is-sticky', stuck);\r\n          break;\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n    let middleware: ReturnType<ChatBubbles['getMiddleware']>;\r\n    useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n      this.lazyLoadQueue.lock();\r\n      middleware = this.getMiddleware();\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(middleware && middleware()) {\r\n        this.lazyLoadQueue.unlock();\r\n        this.lazyLoadQueue.refresh();\r\n      }\r\n\r\n      middleware = null;\r\n    }, this.listenerSetter);\r\n  }\r\n\r\n  public constructPeerHelpers() {\r\n    // will call when message is sent (only 1)\r\n    this.listenerSetter.add(rootScope, 'history_append', (e) => {\r\n      const {peerId, storage, mid} = e;\r\n\r\n      if(peerId !== this.peerId || storage !== this.chat.getMessagesStorage()) return;\r\n\r\n      if(!this.scrollable.loadedAll.bottom) {\r\n        this.chat.setMessageId();\r\n      } else {\r\n        this.renderNewMessagesByIds([mid], true);\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'history_multiappend', (e) => {\r\n      const msgIdsByPeer = e;\r\n\r\n      if(!(this.peerId in msgIdsByPeer)) return;\r\n      const msgIds = Array.from(msgIdsByPeer[this.peerId] as number[]).slice().sort((a, b) => b - a);\r\n      this.renderNewMessagesByIds(msgIds);\r\n    });\r\n    \r\n    this.listenerSetter.add(rootScope, 'history_delete', (e) => {\r\n      const {peerId, msgs} = e;\r\n\r\n      const mids = Object.keys(msgs).map(s => +s);\r\n\r\n      if(peerId === this.peerId) {\r\n        this.deleteMessagesByIds(mids);\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'dialog_unread', (e) => {\r\n      const info = e;\r\n\r\n      if(info.peerId === this.peerId) {\r\n        this.chat.input.setUnreadCount();\r\n        this.updateUnreadByDialog();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'dialogs_multiupdate', (e) => {\r\n      const dialogs = e;\r\n\r\n      if(dialogs[this.peerId]) {\r\n        this.chat.input.setUnreadCount();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'dialog_notify_settings', (dialog) => {\r\n      if(this.peerId === dialog.peerId) {\r\n        this.chat.input.setUnreadCount();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'chat_update', (e) => {\r\n      const chatId: number = e;\r\n      if(this.peerId === -chatId) {\r\n        const hadRights = this.chatInner.classList.contains('has-rights');\r\n        const hasRights = this.appMessagesManager.canWriteToPeer(this.peerId, this.chat.threadId);\r\n\r\n        if(hadRights !== hasRights) {\r\n          this.finishPeerChange();\r\n          this.chat.input.updateMessageInput();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'settings_updated', (e: BroadcastEvents['settings_updated']) => {\r\n      if(e.key === 'settings.emoji.big') {\r\n        const isScrolledDown = this.scrollable.isScrolledDown;\r\n        if(!isScrolledDown) {\r\n          this.setMessagesQueuePromise();\r\n        }\r\n        \r\n        const mids = getObjectKeysAndSort(this.bubbles, 'desc');\r\n        mids.forEach(mid => {\r\n          const bubble = this.bubbles[mid];\r\n          if(bubble.classList.contains('can-have-big-emoji')) {\r\n            const message = this.chat.getMessage(mid);\r\n            this.renderMessage(message, undefined, false, bubble);\r\n            // this.bubbleGroups.addBubble(bubble, message, false);\r\n          }\r\n        });\r\n\r\n        if(isScrolledDown) {\r\n          this.scrollable.scrollTop = 99999;\r\n        } else {\r\n          this.performHistoryResult([], true, false, undefined);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.unreadedObserver = new IntersectionObserver((entries) => {\r\n      entries.forEach(entry => {\r\n        if(entry.isIntersecting) {\r\n          const target = entry.target as HTMLElement;\r\n          const mid = this.unreaded.get(target as HTMLElement);\r\n          this.onUnreadedInViewport(target, mid);\r\n        }\r\n      });\r\n    });\r\n\r\n    if('ResizeObserver' in window) {\r\n      let wasHeight = this.scrollable.container.offsetHeight;\r\n      let resizing = false;\r\n      let skip = false;\r\n      let scrolled = 0;\r\n      let part = 0;\r\n      let rAF = 0;\r\n\r\n      const onResizeEnd = () => {\r\n        const height = this.scrollable.container.offsetHeight;\r\n        const isScrolledDown = this.scrollable.isScrolledDown;\r\n        if(height !== wasHeight && (!skip || !isScrolledDown)) { // * fix opening keyboard while ESG is active, offsetHeight will change right between 'start' and this first frame\r\n          part += wasHeight - height;\r\n        }\r\n\r\n        /* if(DEBUG) {\r\n          this.log('resize end', scrolled, part, this.scrollable.scrollTop, height, wasHeight, this.scrollable.isScrolledDown);\r\n        } */\r\n\r\n        if(part) {\r\n          this.scrollable.scrollTop += Math.round(part);\r\n        }\r\n\r\n        wasHeight = height;\r\n        scrolled = 0;\r\n        rAF = 0;\r\n        part = 0;\r\n        resizing = false;\r\n        skip = false;\r\n      };\r\n\r\n      const setEndRAF = (single: boolean) => {\r\n        if(rAF) window.cancelAnimationFrame(rAF);\r\n        rAF = window.requestAnimationFrame(single ? onResizeEnd : () => {\r\n          rAF = window.requestAnimationFrame(onResizeEnd);\r\n          //this.log('resize after RAF', part);\r\n        });\r\n      };\r\n\r\n      const processEntries = (entries: any) => {\r\n        if(skip) {\r\n          setEndRAF(false);\r\n          return;\r\n        }\r\n\r\n        const entry = entries[0];\r\n        const height = entry.contentRect.height;/* Math.ceil(entry.contentRect.height); */\r\n        \r\n        if(!wasHeight) {\r\n          wasHeight = height;\r\n          return;\r\n        }\r\n\r\n        const realDiff = wasHeight - height;\r\n        let diff = realDiff + part;\r\n        const _part = diff % 1;\r\n        diff -= _part;\r\n \r\n        if(!resizing) {\r\n          resizing = true;\r\n\r\n          /* if(DEBUG) {\r\n            this.log('resize start', realDiff, this.scrollable.scrollTop, this.scrollable.container.offsetHeight, this.scrollable.isScrolledDown);\r\n          } */\r\n\r\n          if(realDiff < 0 && this.scrollable.isScrolledDown) {\r\n            //if(isSafari) { // * fix opening keyboard while ESG is active \r\n              part = -realDiff;\r\n            //}\r\n\r\n            skip = true;\r\n            setEndRAF(false);\r\n            return;\r\n          }\r\n        }\r\n\r\n        scrolled += diff;\r\n\r\n        /* if(DEBUG) {\r\n          this.log('resize', wasHeight - height, diff, this.scrollable.container.offsetHeight, this.scrollable.isScrolledDown, height, wasHeight);\r\n        } */\r\n\r\n        if(diff) {\r\n          const needScrollTop = this.scrollable.scrollTop + diff;\r\n          this.scrollable.scrollTop = needScrollTop;\r\n        }\r\n        \r\n        setEndRAF(false);\r\n\r\n        part = _part;\r\n        wasHeight = height;\r\n      };\r\n\r\n      // @ts-ignore\r\n      const resizeObserver = new ResizeObserver(processEntries);\r\n      resizeObserver.observe(this.bubblesContainer);\r\n    }\r\n  }\r\n\r\n  private onUnreadedInViewport(target: HTMLElement, mid: number) {\r\n    this.unreadedSeen.add(mid);\r\n    this.unreadedObserver.unobserve(target);\r\n    this.unreaded.delete(target);\r\n    this.readUnreaded();\r\n  }\r\n\r\n  private readUnreaded() {\r\n    if(this.readPromise) return;\r\n\r\n    const middleware = this.getMiddleware();\r\n    this.readPromise = rootScope.idle.focusPromise.then(() => {\r\n      if(!middleware()) return;\r\n      let maxId = Math.max(...Array.from(this.unreadedSeen));\r\n\r\n      // ? if message with maxId is not rendered ?\r\n      if(this.scrollable.loadedAll.bottom) {\r\n        const bubblesMaxId = Math.max(...Object.keys(this.bubbles).map(i => +i));\r\n        if(maxId >= bubblesMaxId) {\r\n          maxId = Math.max(this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId).maxId || 0, maxId);\r\n        }\r\n      }\r\n\r\n      this.unreaded.forEach((mid, target) => {\r\n        if(mid <= maxId) {\r\n          this.onUnreadedInViewport(target, mid);\r\n        }\r\n      });\r\n\r\n      this.unreadedSeen.clear();\r\n\r\n      if(DEBUG) {\r\n        this.log('will readHistory by maxId:', maxId);\r\n      }\r\n      \r\n      return this.appMessagesManager.readHistory(this.peerId, maxId, this.chat.threadId).catch((err: any) => {\r\n        this.log.error('readHistory err:', err);\r\n        this.appMessagesManager.readHistory(this.peerId, maxId, this.chat.threadId);\r\n      }).finally(() => {\r\n        if(!middleware()) return;\r\n        this.readPromise = undefined;\r\n\r\n        if(this.unreadedSeen.size) {\r\n          this.readUnreaded();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public constructPinnedHelpers() {\r\n    this.listenerSetter.add(rootScope, 'peer_pinned_messages', (e) => {\r\n      const {peerId, mids, pinned} = e;\r\n      if(peerId !== this.peerId) return;\r\n\r\n      if(mids) {\r\n        if(!pinned) {\r\n          this.deleteMessagesByIds(mids);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public constructScheduledHelpers() {\r\n    const onUpdate = () => {\r\n      this.chat.topbar.setTitle(Object.keys(this.appMessagesManager.getScheduledMessagesStorage(this.peerId)).length);\r\n    };\r\n\r\n    this.listenerSetter.add(rootScope, 'scheduled_new', (e) => {\r\n      const {peerId, mid} = e;\r\n      if(peerId !== this.peerId) return;\r\n\r\n      this.renderNewMessagesByIds([mid]);\r\n      onUpdate();\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'scheduled_delete', (e) => {\r\n      const {peerId, mids} = e;\r\n      if(peerId !== this.peerId) return;\r\n\r\n      this.deleteMessagesByIds(mids);\r\n      onUpdate();\r\n    });\r\n  }\r\n\r\n  public onBubblesClick = (e: Event) => {\r\n    let target = e.target as HTMLElement;\r\n    let bubble: HTMLElement = null;\r\n    try {\r\n      bubble = findUpClassName(target, 'bubble');\r\n    } catch(err) {}\r\n    \r\n    if(!bubble) return;\r\n\r\n    if(bubble.classList.contains('is-date') && findUpClassName(target, 'bubble-content')) {\r\n      if(bubble.classList.contains('is-sticky') && !this.chatInner.classList.contains('is-scrolling')) {\r\n        return;\r\n      }\r\n\r\n      for(const timestamp in this.dateMessages) {\r\n        const d = this.dateMessages[timestamp];\r\n        if(d.div === bubble) {\r\n          new PopupDatePicker(new Date(+timestamp), this.onDatePick).show();\r\n          break;\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // ! Trusted - due to audio autoclick\r\n    if(this.chat.selection.isSelecting && e.isTrusted) {\r\n      if(bubble.classList.contains('service') && bubble.dataset.mid === undefined) {\r\n        return;\r\n      }\r\n\r\n      cancelEvent(e);\r\n      //console.log('bubble click', e);\r\n\r\n      if(isTouchSupported && this.chat.selection.selectedText) {\r\n        this.chat.selection.selectedText = undefined;\r\n        return;\r\n      }\r\n\r\n      //this.chatSelection.toggleByBubble(bubble);\r\n      this.chat.selection.toggleByBubble(findUpClassName(target, 'grouped-item') || bubble);\r\n      return;\r\n    }\r\n\r\n    const contactDiv: HTMLElement = findUpClassName(target, 'contact');\r\n    if(contactDiv) {\r\n      this.chat.appImManager.setInnerPeer(+contactDiv.dataset.peerId);\r\n      return;\r\n    }\r\n\r\n    const commentsDiv: HTMLElement = findUpClassName(target, 'replies');\r\n    if(commentsDiv) {\r\n      const bubbleMid = +bubble.dataset.mid;\r\n      if(this.peerId === REPLIES_PEER_ID) {\r\n        const message = this.chat.getMessage(bubbleMid) as Message.message;\r\n        const peerId = this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id);\r\n        const threadId = message.reply_to.reply_to_top_id;\r\n\r\n        this.appMessagesManager.wrapSingleMessage(peerId, threadId).then(() => {\r\n          this.appMessagesManager.generateThreadServiceStartMessage(this.appMessagesManager.getMessageByPeer(peerId, threadId));\r\n          this.chat.appImManager.setInnerPeer(peerId, message.fwd_from.saved_from_msg_id, 'discussion', threadId);\r\n        });\r\n      } else {\r\n        const message = this.appMessagesManager.filterMessages(this.chat.getMessage(bubbleMid), message => !!(message as Message.message).replies)[0] as Message.message;\r\n        const replies = message.replies;\r\n        if(replies) {\r\n          this.appMessagesManager.getDiscussionMessage(this.peerId, message.mid).then(message => {\r\n            this.chat.appImManager.setInnerPeer(-replies.channel_id, undefined, 'discussion', (message as MyMessage).mid);\r\n          });\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const nameDiv = findUpClassName(target, 'peer-title') || findUpClassName(target, 'name') || findUpTag(target, 'AVATAR-ELEMENT');\r\n    if(nameDiv) {\r\n      target = nameDiv || target;\r\n      const peerId = +(target.dataset.peerId || target.getAttribute('peer'));\r\n      const savedFrom = target.dataset.savedFrom;\r\n      if(savedFrom) {\r\n        const splitted = savedFrom.split('_');\r\n        const peerId = +splitted[0];\r\n        const msgId = +splitted[1];\r\n\r\n        this.chat.appImManager.setInnerPeer(peerId, msgId);\r\n      } else {\r\n        if(peerId) {\r\n          this.chat.appImManager.setInnerPeer(peerId);\r\n        } else {\r\n          toast(I18n.format('HidAccount', true));\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    //this.log('chatInner click:', target);\r\n    const isVideoComponentElement = target.tagName === 'SPAN';\r\n    /* if(isVideoComponentElement) {\r\n      const video = target.parentElement.querySelector('video') as HTMLElement;\r\n      if(video) {\r\n        video.click(); // hot-fix for time and play button\r\n        return;\r\n      }\r\n    } */\r\n\r\n    if(bubble.classList.contains('sticker') && target.parentElement.classList.contains('attachment')) {\r\n      const messageId = +bubble.dataset.mid;\r\n      const message = this.chat.getMessage(messageId);\r\n\r\n      const doc = message.media?.document;\r\n\r\n      if(doc?.stickerSetInput) {\r\n        new PopupStickers(doc.stickerSetInput).show();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if((target.tagName === 'IMG' && !target.classList.contains('emoji') && !target.classList.contains('document-thumb')) \r\n      || target.classList.contains('album-item')\r\n      || isVideoComponentElement\r\n      || (target.tagName === 'VIDEO' && !bubble.classList.contains('round'))) {\r\n      let messageId = +findUpClassName(target, 'album-item')?.dataset.mid || +bubble.dataset.mid;\r\n      let message = this.chat.getMessage(messageId);\r\n      if(!message) {\r\n        this.log.warn('no message by messageId:', messageId);\r\n        return;\r\n      }\r\n\r\n      let targets: {element: HTMLElement, mid: number, peerId: number}[] = [];\r\n      let ids = Object.keys(this.bubbles).map(k => +k).filter(id => {\r\n        //if(!this.scrollable.visibleElements.find(e => e.element === this.bubbles[id])) return false;\r\n\r\n        let message = this.chat.getMessage(id);\r\n        \r\n        return message.media && (message.media.photo || (message.media.document && (message.media.document.type === 'video' || message.media.document.type === 'gif')) || (message.media.webpage && (message.media.webpage.document || message.media.webpage.photo)));\r\n      }).sort((a, b) => a - b);\r\n\r\n      ids.forEach(id => {\r\n        let withTail = this.bubbles[id].classList.contains('with-media-tail');\r\n        let str = '.album-item video, .album-item img, .preview video, .preview img, ';\r\n        if(withTail) {\r\n          str += '.bubble__media-container';\r\n        } else {\r\n          str += '.attachment video, .attachment img';\r\n        }\r\n\r\n        const hasAspecter = !!this.bubbles[id].querySelector('.media-container-aspecter');\r\n        let elements = this.bubbles[id].querySelectorAll(str) as NodeListOf<HTMLElement>;\r\n        const parents: Set<HTMLElement> = new Set();\r\n        Array.from(elements).forEach((element: HTMLElement) => {\r\n          if(hasAspecter && !findUpClassName(element, 'media-container-aspecter')) return;\r\n          let albumItem = findUpClassName(element, 'album-item');\r\n          const parent = albumItem || element.parentElement;\r\n          if(parents.has(parent)) return;\r\n          parents.add(parent);\r\n          targets.push({\r\n            element,\r\n            mid: +albumItem?.dataset.mid || id,\r\n            peerId: this.peerId\r\n          });\r\n        });\r\n      });\r\n\r\n      targets.sort((a, b) => a.mid - b.mid);\r\n\r\n      let idx = targets.findIndex(t => t.mid === messageId);\r\n\r\n      if(DEBUG) {\r\n        this.log('open mediaViewer single with ids:', ids, idx, targets);\r\n      }\r\n\r\n      if(!targets[idx]) {\r\n        this.log('no target for media viewer!', target);\r\n        return;\r\n      }\r\n\r\n      new AppMediaViewer()\r\n      .setSearchContext({\r\n        threadId: this.chat.threadId,\r\n        peerId: this.peerId,\r\n        inputFilter: 'inputMessagesFilterPhotoVideo'\r\n      })\r\n      .openMedia(message, targets[idx].element, 0, true, targets.slice(0, idx), targets.slice(idx + 1));\r\n      \r\n      cancelEvent(e);\r\n      //appMediaViewer.openMedia(message, target as HTMLImageElement);\r\n      return;\r\n    }\r\n    \r\n    if(['IMG', 'DIV', 'SPAN'/* , 'A' */].indexOf(target.tagName) === -1) target = findUpTag(target, 'DIV');\r\n    \r\n    if(['DIV', 'SPAN'].indexOf(target.tagName) !== -1/*  || target.tagName === 'A' */) {\r\n      if(target.classList.contains('goto-original')) {\r\n        const savedFrom = bubble.dataset.savedFrom;\r\n        const splitted = savedFrom.split('_');\r\n        const peerId = +splitted[0];\r\n        const msgId = +splitted[1];\r\n        ////this.log('savedFrom', peerId, msgID);\r\n        this.chat.appImManager.setInnerPeer(peerId, msgId);\r\n        return;\r\n      } else if(target.classList.contains('forward')) {\r\n        const mid = +bubble.dataset.mid;\r\n        new PopupForward(this.peerId, [mid]);\r\n        //appSidebarRight.forwardTab.open([mid]);\r\n        return;\r\n      }\r\n      \r\n      let isReplyClick = false;\r\n      \r\n      try {\r\n        isReplyClick = !!findUpClassName(e.target, 'reply');\r\n      } catch(err) {}\r\n      \r\n      if(isReplyClick && bubble.classList.contains('is-reply')/*  || bubble.classList.contains('forwarded') */) {\r\n        const bubbleMid = +bubble.dataset.mid;\r\n        this.replyFollowHistory.push(bubbleMid);\r\n\r\n        const message = this.chat.getMessage(bubbleMid) as Message.message;\r\n\r\n        const replyToPeerId = message.reply_to.reply_to_peer_id ? this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : this.peerId;\r\n        const replyToMid = message.reply_to.reply_to_msg_id;\r\n\r\n        this.chat.appImManager.setInnerPeer(replyToPeerId, replyToMid, this.chat.type, this.chat.threadId);\r\n\r\n        /* if(this.chat.type === 'discussion') {\r\n          this.chat.appImManager.setMessageId(, originalMessageId);\r\n        } else {\r\n          this.chat.appImManager.setInnerPeer(this.peerId, originalMessageId);\r\n        } */\r\n        //this.chat.setMessageId(, originalMessageId);\r\n      }\r\n    }\r\n    \r\n    //console.log('chatInner click', e);\r\n  };\r\n\r\n  public onGoDownClick() {\r\n    if(this.replyFollowHistory.length) {\r\n      forEachReverse(this.replyFollowHistory, (mid, idx) => {\r\n        const bubble = this.bubbles[mid];\r\n        let bad = true;\r\n        if(bubble) {\r\n          const rect = bubble.getBoundingClientRect();\r\n          bad = (this.appPhotosManager.windowH / 2) > rect.top;\r\n        } else {\r\n          const message = this.chat.getMessage(mid);\r\n          if(!message.deleted) {\r\n            bad = false;\r\n          }\r\n        }\r\n  \r\n        if(bad) {\r\n          this.replyFollowHistory.splice(idx, 1);\r\n        }\r\n      });\r\n\r\n      this.replyFollowHistory.sort((a, b) => b - a);\r\n\r\n      const mid = this.replyFollowHistory.pop();\r\n      this.chat.setMessageId(mid);\r\n    } else {\r\n      this.chat.setMessageId(/* , dialog.top_message */);\r\n      // const dialog = this.appMessagesManager.getDialogByPeerId(this.peerId)[0];\r\n      \r\n      // if(dialog) {\r\n      //   this.chat.setPeer(this.peerId/* , dialog.top_message */);\r\n      // } else {\r\n      //   this.log('will scroll down 3');\r\n      //   this.scroll.scrollTop = this.scroll.scrollHeight;\r\n      // }\r\n    }\r\n  }\r\n\r\n  public getBubbleByPoint(verticalSide: 'top' | 'bottom') {\r\n    let element = getElementByPoint(this.scrollable.container, verticalSide, 'center');\r\n    /* if(element) {\r\n      if(element.classList.contains('bubbles-date-group')) {\r\n        const children = Array.from(element.children) as HTMLElement[];\r\n        if(verticalSide === 'top') {\r\n          element = children[this.stickyIntersector ? 2 : 1];\r\n        } else {\r\n          element = children[children.length - 1];\r\n        }\r\n      } else {\r\n        element = findUpClassName(element, 'bubble');\r\n        if(element && element.classList.contains('is-date')) {\r\n          element = element.nextElementSibling as HTMLElement;\r\n        }\r\n      }\r\n    } */\r\n    if(element) element = findUpClassName(element, 'bubble');\r\n\r\n    return element;\r\n  }\r\n\r\n  public getGroupedBubble(groupId: string) {\r\n    const group = this.appMessagesManager.groupedMessagesStorage[groupId];\r\n    for(const mid in group) {\r\n      if(this.bubbles[mid]) {\r\n        const maxId = Math.max(...Object.keys(group).map(id => +id)); // * because in scheduled album can be rendered by lowest mid during sending\r\n        return {\r\n          bubble: this.bubbles[mid], \r\n          mid: +mid,\r\n          message: this.chat.getMessage(maxId)\r\n        };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public getBubbleGroupedItems(bubble: HTMLElement) {\r\n    return Array.from(bubble.querySelectorAll('.grouped-item')) as HTMLElement[];\r\n  }\r\n\r\n  public getMountedBubble(mid: number, message = this.chat.getMessage(mid)) {\r\n    if(message.grouped_id && this.appMessagesManager.getMidsByAlbum(message.grouped_id).length > 1) {\r\n      const a = this.getGroupedBubble(message.grouped_id);\r\n      if(a) {\r\n        a.bubble = a.bubble.querySelector(`.document-container[data-mid=\"${mid}\"]`) || a.bubble;\r\n        return a;\r\n      }\r\n    }\r\n\r\n    const bubble = this.bubbles[mid];\r\n    if(!bubble) return;\r\n\r\n    return {bubble, mid, message};\r\n  }\r\n\r\n  private findNextMountedBubbleByMsgId(mid: number) {\r\n    return this.bubbles[getObjectKeysAndSort(this.bubbles).find(id => {\r\n      if(id < mid) return false;\r\n      return !!this.bubbles[id]?.parentElement;\r\n    })];\r\n  }\r\n\r\n  public loadMoreHistory(top: boolean, justLoad = false) {\r\n    //this.log('loadMoreHistory', top);\r\n    if(!this.peerId || \r\n      /* TEST_SCROLL || */ \r\n      this.chat.setPeerPromise || \r\n      this.isHeavyAnimationInProgress || \r\n      (top && (this.getHistoryTopPromise || this.scrollable.loadedAll.top)) || \r\n      (!top && (this.getHistoryBottomPromise || this.scrollable.loadedAll.bottom))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // warning, если иды только отрицательные то вниз не попадёт (хотя мб и так не попадёт)\r\n    const history = Object.keys(this.bubbles).map(id => +id).sort((a, b) => a - b);\r\n    if(!history.length) return;\r\n    \r\n    if(top) {\r\n      if(DEBUG) {\r\n        this.log('Will load more (up) history by id:', history[0], 'maxId:', history[history.length - 1], justLoad/* , history */);\r\n      }\r\n\r\n      /* if(history.length === 75) {\r\n        this.log('load more', this.scrollable.scrollHeight, this.scrollable.scrollTop, this.scrollable);\r\n        return;\r\n      } */\r\n      /* false &&  */this.getHistory(history[0], true, undefined, undefined, justLoad);\r\n    } else {\r\n      //let dialog = this.appMessagesManager.getDialogByPeerId(this.peerId)[0];\r\n      const historyStorage = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId);\r\n          \r\n      // if scroll down after search\r\n      if(history.indexOf(historyStorage.maxId) !== -1) {\r\n        this.scrollable.loadedAll.bottom = true;\r\n        return;\r\n      }\r\n\r\n      if(DEBUG) {\r\n        this.log('Will load more (down) history by id:', history[history.length - 1], justLoad/* , history */);\r\n      }\r\n\r\n      /* false &&  */this.getHistory(history[history.length - 1], false, true, undefined, justLoad);\r\n    }\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //return;\r\n    \r\n    // * В таком случае, кнопка не будет моргать если чат в самом низу, и правильно отработает случай написания нового сообщения и проскролла вниз\r\n    if(this.isHeavyAnimationInProgress && this.scrolledDown) return;\r\n      //lottieLoader.checkAnimations(false, 'chat');\r\n\r\n    if(!isTouchSupported) {\r\n      if(this.isScrollingTimeout) {\r\n        clearTimeout(this.isScrollingTimeout);\r\n      } else if(!this.chatInner.classList.contains('is-scrolling')) {\r\n        this.chatInner.classList.add('is-scrolling');\r\n      }\r\n  \r\n      this.isScrollingTimeout = window.setTimeout(() => {\r\n        this.chatInner.classList.remove('is-scrolling');\r\n        this.isScrollingTimeout = 0;\r\n      }, 1350);\r\n    }\r\n    \r\n    if(this.scrollable.getDistanceToEnd() < 300 && this.scrollable.loadedAll.bottom) {\r\n      this.bubblesContainer.classList.add('scrolled-down');\r\n      this.scrolledDown = true;\r\n    } else if(this.bubblesContainer.classList.contains('scrolled-down')) {\r\n      this.bubblesContainer.classList.remove('scrolled-down');\r\n      this.scrolledDown = false;\r\n    }\r\n\r\n    if(this.chat.topbar.pinnedMessage) {\r\n      this.chat.topbar.pinnedMessage.setCorrectIndex(this.scrollable.lastScrollDirection);\r\n    }\r\n  };\r\n\r\n  public setScroll() {\r\n    this.scrollable = new Scrollable(null, 'IM', /* 10300 */300);\r\n    this.scrollable.loadedAll.top = false;\r\n    this.scrollable.loadedAll.bottom = false;\r\n\r\n    this.scrollable.container.append(this.chatInner);\r\n\r\n    /* const getScrollOffset = () => {\r\n      //return Math.round(Math.max(300, appPhotosManager.windowH / 1.5));\r\n      return 300; \r\n    };\r\n\r\n    window.addEventListener('resize', () => {\r\n      this.scrollable.onScrollOffset = getScrollOffset();\r\n    });\r\n\r\n    this.scrollable = new Scrollable(this.bubblesContainer, 'y', 'IM', this.chatInner, getScrollOffset()); */\r\n\r\n    this.scrollable.onAdditionalScroll = this.onScroll;\r\n    this.scrollable.onScrolledTop = () => this.loadMoreHistory(true);\r\n    this.scrollable.onScrolledBottom = () => this.loadMoreHistory(false);\r\n    //this.scrollable.attachSentinels(undefined, 300);\r\n\r\n    if(isTouchSupported) {\r\n      this.scrollable.container.addEventListener('touchmove', () => {\r\n        if(this.isScrollingTimeout) {\r\n          clearTimeout(this.isScrollingTimeout);\r\n        } else if(!this.chatInner.classList.contains('is-scrolling')) {\r\n          this.chatInner.classList.add('is-scrolling');\r\n        }\r\n      }, {passive: true});\r\n\r\n      this.scrollable.container.addEventListener('touchend', () => {\r\n        if(!this.chatInner.classList.contains('is-scrolling')) {\r\n          return;\r\n        }\r\n\r\n        if(this.isScrollingTimeout) {\r\n          clearTimeout(this.isScrollingTimeout);\r\n        }\r\n\r\n        this.isScrollingTimeout = window.setTimeout(() => {\r\n          this.chatInner.classList.remove('is-scrolling');\r\n          this.isScrollingTimeout = 0;\r\n        }, 1350);\r\n      }, {passive: true});\r\n    }\r\n  }\r\n\r\n  public updateUnreadByDialog() {\r\n    const historyStorage = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId);\r\n    const maxId = this.peerId === rootScope.myId ? historyStorage.readMaxId : historyStorage.readOutboxMaxId;\r\n    \r\n    ///////this.log('updateUnreadByDialog', maxId, dialog, this.unreadOut);\r\n    \r\n    for(const msgId of this.unreadOut) {\r\n      if(msgId > 0 && msgId <= maxId) {\r\n        const bubble = this.bubbles[msgId];\r\n        if(bubble) {\r\n          bubble.classList.remove('is-sent', 'is-sending'); // is-sending can be when there are bulk of updates (e.g. sending command to Stickers bot)\r\n          bubble.classList.add('is-read');\r\n        }\r\n        \r\n        this.unreadOut.delete(msgId);\r\n      }\r\n    }\r\n  }\r\n  \r\n  public deleteMessagesByIds(mids: number[], permanent = true) {\r\n    mids.forEach(mid => {\r\n      if(!(mid in this.bubbles)) return;\r\n      \r\n      /* const mounted = this.getMountedBubble(mid);\r\n      if(!mounted) return; */\r\n\r\n      const bubble = this.bubbles[mid];\r\n      delete this.bubbles[mid];\r\n\r\n      if(this.firstUnreadBubble === bubble) {\r\n        this.firstUnreadBubble = null;\r\n      }\r\n\r\n      this.bubbleGroups.removeBubble(bubble);\r\n      if(this.unreadedObserver) {\r\n        this.unreadedObserver.unobserve(bubble);\r\n        this.unreaded.delete(bubble);\r\n      }\r\n      //this.unreaded.findAndSplice(mid => mid === id);\r\n      bubble.remove();\r\n      //bubble.remove();\r\n    });\r\n\r\n    if(permanent && this.chat.selection.isSelecting) {\r\n      this.chat.selection.deleteSelectedMids(mids);\r\n    }\r\n    \r\n    animationIntersector.checkAnimations(false, CHAT_ANIMATION_GROUP);\r\n    this.deleteEmptyDateGroups();\r\n  }\r\n  \r\n  public renderNewMessagesByIds(mids: number[], scrolledDown = this.scrolledDown) {\r\n    if(!this.scrollable.loadedAll.bottom) { // seems search active or sliced\r\n      //this.log('renderNewMessagesByIds: seems search is active, skipping render:', mids);\r\n      return;\r\n    }\r\n\r\n    if(this.chat.threadId) {\r\n      mids = mids.filter(mid => {\r\n        const message = this.chat.getMessage(mid);\r\n        const replyTo = message.reply_to as MessageReplyHeader;\r\n        return replyTo && (replyTo.reply_to_top_id || replyTo.reply_to_msg_id) === this.chat.threadId;\r\n      });\r\n    }\r\n\r\n    mids = mids.filter(mid => !this.bubbles[mid]);\r\n    // ! should scroll even without new messages\r\n    /* if(!mids.length) {\r\n      return;\r\n    } */\r\n\r\n    const promise = this.performHistoryResult(mids, false, true);\r\n    if(scrolledDown) {\r\n      promise.then(() => {\r\n        //this.log('renderNewMessagesByIDs: messagesQueuePromise after', this.scrollable.isScrolledDown);\r\n        //this.scrollable.scrollTo(this.scrollable.scrollHeight, 'top', true, true, 5000);\r\n        //const bubble = this.bubbles[Math.max(...mids)];\r\n        this.scrollToBubbleEnd();\r\n\r\n        //this.scrollable.scrollIntoViewNew(this.chatInner, 'end');\r\n\r\n        /* setTimeout(() => {\r\n          this.log('messagesQueuePromise afterafter:', this.chatInner.childElementCount, this.scrollable.scrollHeight);\r\n        }, 10); */\r\n      });\r\n    }\r\n  }\r\n\r\n  public scrollToBubble(\r\n    element: HTMLElement, \r\n    position: ScrollLogicalPosition,\r\n    forceDirection?: FocusDirection,\r\n    forceDuration?: number\r\n  ) {\r\n    // * 4 = .25rem\r\n    const bubble = findUpClassName(element, 'bubble');\r\n\r\n    // * if it's a start, then scroll to start of the group\r\n    if(position === 'center' && whichChild(bubble) === (this.stickyIntersector ? 2 : 1)) {\r\n      const dateGroup = bubble.parentElement;\r\n      if(whichChild(dateGroup) === 0) {\r\n        element = dateGroup;\r\n        position = 'start';\r\n      }\r\n    }\r\n\r\n    return this.scrollable.scrollIntoViewNew(element, position, 4, undefined, forceDirection, forceDuration);\r\n  }\r\n\r\n  public scrollToBubbleEnd(bubble = this.chatInner.lastElementChild.lastElementChild as HTMLElement) {\r\n    /* if(DEBUG) {\r\n      this.log('scrollToNewLastBubble: will scroll into view:', bubble);\r\n    } */\r\n\r\n    if(bubble) {\r\n      this.scrollingToNewBubble = bubble;\r\n      this.scrollToBubble(bubble, 'end').then(() => {\r\n        this.scrollingToNewBubble = null;\r\n      });\r\n    }\r\n  }\r\n\r\n  public scrollToBubbleIfLast(bubble: HTMLElement) {\r\n    if(bubble.parentElement.lastElementChild === bubble && \r\n      bubble.parentElement.parentElement.lastElementChild === bubble.parentElement) {\r\n      this.scrollToBubbleEnd(bubble);\r\n    }\r\n  }\r\n\r\n  public highlightBubble(element: HTMLElement) {\r\n    const datasetKey = 'highlightTimeout';\r\n    if(element.dataset[datasetKey]) {\r\n      clearTimeout(+element.dataset[datasetKey]);\r\n      element.classList.remove('is-highlighted');\r\n      void element.offsetWidth; // reflow\r\n    }\r\n\r\n    element.classList.add('is-highlighted');\r\n    element.dataset[datasetKey] = '' + setTimeout(() => {\r\n      element.classList.remove('is-highlighted');\r\n      delete element.dataset[datasetKey];\r\n    }, 2000);\r\n  }\r\n\r\n  public getDateContainerByMessage(message: any, reverse: boolean) {\r\n    const date = new Date(message.date * 1000);\r\n    date.setHours(0, 0, 0);\r\n    const dateTimestamp = date.getTime();\r\n    if(!(dateTimestamp in this.dateMessages)) {\r\n      let dateElement: HTMLElement;\r\n      \r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      \r\n      if(today.getTime() === date.getTime()) {\r\n        dateElement = i18n(this.chat.type === 'scheduled' ? 'Chat.Date.ScheduledForToday' : 'Date.Today');\r\n      } else {\r\n        const options: Intl.DateTimeFormatOptions = {\r\n          day: 'numeric',\r\n          month: 'long'\r\n        };\r\n\r\n        if(date.getFullYear() !== today.getFullYear()) {\r\n          options.year = 'numeric';\r\n        }\r\n\r\n        dateElement = new I18n.IntlDateElement({\r\n          date,\r\n          options\r\n        }).element;\r\n\r\n        if(this.chat.type === 'scheduled') {\r\n          dateElement = i18n('Chat.Date.ScheduledFor', [dateElement]);\r\n        }\r\n      }\r\n\r\n      /* if(this.chat.type === 'scheduled') {\r\n        str = 'Scheduled for ' + str;\r\n      } */\r\n      \r\n      const div = document.createElement('div');\r\n      div.className = 'bubble service is-date';\r\n      const bubbleContent = document.createElement('div');\r\n      bubbleContent.classList.add('bubble-content');\r\n      const serviceMsg = document.createElement('div');\r\n      serviceMsg.classList.add('service-msg');\r\n\r\n      serviceMsg.append(dateElement);\r\n\r\n      bubbleContent.append(serviceMsg);\r\n      div.append(bubbleContent);\r\n      ////////this.log('need to render date message', dateTimestamp, str);\r\n\r\n      const container = document.createElement('div');\r\n      container.className = 'bubbles-date-group';\r\n\r\n      const haveTimestamps = getObjectKeysAndSort(this.dateMessages, 'asc');\r\n      let i = 0;\r\n      for(; i < haveTimestamps.length; ++i) {\r\n        const t = haveTimestamps[i];\r\n        if(dateTimestamp < t) {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      this.dateMessages[dateTimestamp] = {\r\n        div,\r\n        container,\r\n        firstTimestamp: date.getTime()\r\n      };\r\n\r\n      container.append(div);\r\n\r\n      positionElementByIndex(container, this.chatInner, i);\r\n\r\n      /* if(reverse) {\r\n        this.chatInner.prepend(container);\r\n      } else {\r\n        this.chatInner.append(container);\r\n      } */\r\n\r\n      if(this.stickyIntersector) {\r\n        this.stickyIntersector.observeStickyHeaderChanges(container);\r\n      }\r\n    }\r\n\r\n    return this.dateMessages[dateTimestamp];\r\n  }\r\n\r\n  public destroy() {\r\n    //this.chat.log.error('Bubbles destroying');\r\n\r\n    this.scrollable.onScrolledTop = this.scrollable.onScrolledBottom = this.scrollable.onAdditionalScroll = null;\r\n\r\n    this.listenerSetter.removeAll();\r\n\r\n    this.lazyLoadQueue.clear();\r\n    this.unreadedObserver && this.unreadedObserver.disconnect();\r\n    this.stickyIntersector && this.stickyIntersector.disconnect();\r\n\r\n    delete this.lazyLoadQueue;\r\n    this.unreadedObserver && delete this.unreadedObserver;\r\n    this.stickyIntersector && delete this.stickyIntersector;\r\n  }\r\n\r\n  public cleanup(bubblesToo = false) {\r\n    ////console.time('appImManager cleanup');\r\n    this.scrollable.loadedAll.top = false;\r\n    this.scrollable.loadedAll.bottom = false;\r\n\r\n    // cancel scroll\r\n    cancelAnimationByKey(this.scrollable.container);\r\n\r\n    // do not wait ending of previous scale animation\r\n    interruptHeavyAnimation();\r\n\r\n    if(TEST_SCROLL !== undefined) {\r\n      TEST_SCROLL = TEST_SCROLL_TIMES;\r\n    }\r\n\r\n    this.bubbles = {};\r\n    this.dateMessages = {};\r\n    this.bubbleGroups.cleanup();\r\n    this.unreadOut.clear();\r\n    this.needUpdate.length = 0;\r\n    this.lazyLoadQueue.clear();\r\n\r\n    // clear messages\r\n    if(bubblesToo) {\r\n      this.scrollable.container.textContent = '';\r\n    }\r\n\r\n    this.firstUnreadBubble = null;\r\n    this.attachedUnreadBubble = false;\r\n\r\n    this.messagesQueue.length = 0;\r\n    this.messagesQueuePromise = null;\r\n\r\n    this.getHistoryTopPromise = this.getHistoryBottomPromise = undefined;\r\n    this.fetchNewPromise = undefined;\r\n\r\n    if(this.stickyIntersector) {\r\n      this.stickyIntersector.disconnect();\r\n    }\r\n    \r\n    if(this.unreadedObserver) {\r\n      this.unreadedObserver.disconnect();\r\n      this.unreaded.clear();\r\n      this.unreadedSeen.clear();\r\n      this.readPromise = undefined;\r\n    }\r\n\r\n    this.loadedTopTimes = this.loadedBottomTimes = 0;\r\n\r\n    this.middleware.clean();\r\n\r\n    ////console.timeEnd('appImManager cleanup');\r\n  }\r\n\r\n  public setPeer(peerId: number, lastMsgId?: number): {cached?: boolean, promise: Chat['setPeerPromise']} {\r\n    //console.time('appImManager setPeer');\r\n    //console.time('appImManager setPeer pre promise');\r\n    ////console.time('appImManager: pre render start');\r\n    if(!peerId) {\r\n      this.cleanup(true);\r\n      this.peerId = 0;\r\n      return null;\r\n    }\r\n\r\n    const samePeer = this.peerId === peerId;\r\n\r\n    /* if(samePeer && this.chat.setPeerPromise) {\r\n      return {cached: true, promise: this.chat.setPeerPromise};\r\n    } */\r\n\r\n    this.historyStorage = this.appMessagesManager.getHistoryStorage(peerId, this.chat.threadId);\r\n    let topMessage = this.chat.type === 'pinned' ? this.appMessagesManager.pinnedMessages[peerId].maxId : this.historyStorage.maxId ?? 0;\r\n    const isTarget = lastMsgId !== undefined;\r\n\r\n    // * this one will fix topMessage for null message in history (e.g. channel comments with only 1 comment and it is a topMessage)\r\n    /* if(this.chat.type !== 'pinned' && topMessage && !historyStorage.history.slice.includes(topMessage)) {\r\n      topMessage = 0;\r\n    } */\r\n\r\n    let readMaxId = 0, savedPosition: ReturnType<AppImManager['getChatSavedPosition']>;\r\n    if(!isTarget) {\r\n      if(!samePeer) {\r\n        savedPosition = this.chat.appImManager.getChatSavedPosition(this.chat);\r\n      }\r\n\r\n      if(savedPosition) {\r\n        \r\n      } else if(topMessage) {\r\n        readMaxId = this.appMessagesManager.getReadMaxIdIfUnread(peerId, this.chat.threadId);\r\n        if(/* dialog.unread_count */readMaxId && !samePeer) {\r\n          lastMsgId = readMaxId;\r\n        } else {\r\n          lastMsgId = topMessage;\r\n          //lastMsgID = topMessage;\r\n        }\r\n      }\r\n    }\r\n\r\n    const isJump = lastMsgId !== topMessage;\r\n    \r\n    if(samePeer) {\r\n      const mounted = this.getMountedBubble(lastMsgId);\r\n      if(mounted) {\r\n        if(isTarget) {\r\n          this.scrollToBubble(mounted.bubble, 'center');\r\n          this.highlightBubble(mounted.bubble);\r\n          this.chat.dispatchEvent('setPeer', lastMsgId, false);\r\n        } else if(topMessage && !isJump) {\r\n          //this.log('will scroll down', this.scroll.scrollTop, this.scroll.scrollHeight);\r\n          this.scrollable.scrollTop = this.scrollable.scrollHeight;\r\n          this.chat.dispatchEvent('setPeer', lastMsgId, true);\r\n        }\r\n        \r\n        return null;\r\n      }\r\n    } else {\r\n      if(this.peerId) { // * set new queue id if new peer (setting not from 0)\r\n        this.lazyLoadQueue.queueId = ++queueId;\r\n        this.chat.apiManager.setQueueId(this.chat.bubbles.lazyLoadQueue.queueId);\r\n      }\r\n\r\n      this.peerId = peerId;\r\n      this.replyFollowHistory.length = 0;\r\n\r\n      this.passEntities = {\r\n        messageEntityBotCommand: this.appPeersManager.isAnyGroup(this.peerId) || this.appUsersManager.isBot(this.peerId)\r\n      };\r\n    }\r\n\r\n    if(DEBUG) {\r\n      this.log('setPeer peerId:', this.peerId, this.historyStorage, lastMsgId, topMessage);\r\n    }\r\n\r\n    // add last message, bc in getHistory will load < max_id\r\n    const additionMsgId = isJump || this.chat.type === 'scheduled' ? 0 : topMessage;\r\n\r\n    /* this.setPeerPromise = null;\r\n    this.preloader.detach();\r\n    return true; */\r\n\r\n    //////appSidebarRight.toggleSidebar(true);\r\n\r\n    let maxBubbleId = 0;\r\n    if(samePeer) {\r\n      let el = this.getBubbleByPoint('bottom'); // ! this may not work if being called when chat is hidden\r\n      //this.chat.log('[PM]: setCorrectIndex: get last element perf:', performance.now() - perf, el);\r\n      if(el) {\r\n        maxBubbleId = +el.dataset.mid;\r\n      }\r\n\r\n      if(maxBubbleId <= 0) {\r\n        maxBubbleId = Math.max(...Object.keys(this.bubbles).map(mid => +mid));\r\n      }\r\n    } else {\r\n      this.isFirstLoad = true;\r\n    }\r\n\r\n    const oldChatInner = this.chatInner;\r\n    this.cleanup();\r\n    this.chatInner = document.createElement('div');\r\n    if(samePeer) {\r\n      this.chatInner.className = oldChatInner.className;\r\n      this.chatInner.classList.remove('disable-hover', 'is-scrolling');\r\n    } else {\r\n      this.chatInner.classList.add('bubbles-inner');\r\n    }\r\n\r\n    this.lazyLoadQueue.lock();\r\n\r\n    let result: ReturnType<ChatBubbles['getHistory']>;\r\n    if(!savedPosition) {\r\n      result = this.getHistory(lastMsgId, true, isJump, additionMsgId);\r\n    } else {\r\n      result = {\r\n        promise: getHeavyAnimationPromise().then(() => {\r\n          return this.performHistoryResult(savedPosition.mids, true, false, undefined);\r\n        }) as any,\r\n        cached: true\r\n      };\r\n    }\r\n\r\n    const {promise, cached} = result;\r\n\r\n    // clear \r\n    if(!cached) {\r\n      if(!samePeer) {\r\n        this.scrollable.container.textContent = '';\r\n        //oldChatInner.remove();\r\n        this.chat.finishPeerChange(isTarget, isJump, lastMsgId);\r\n        this.preloader.attach(this.bubblesContainer);\r\n      }\r\n    }\r\n\r\n    //console.timeEnd('appImManager setPeer pre promise');\r\n    \r\n    animationIntersector.lockGroup(CHAT_ANIMATION_GROUP);\r\n    const setPeerPromise = promise.then(() => {\r\n      ////this.log('setPeer removing preloader');\r\n\r\n      if(cached) {\r\n        if(!samePeer) {\r\n          this.chat.finishPeerChange(isTarget, isJump, lastMsgId); // * костыль\r\n        }\r\n      } else {\r\n        this.preloader.detach();\r\n      }\r\n\r\n      replaceContent(this.scrollable.container, this.chatInner);\r\n\r\n      animationIntersector.unlockGroup(CHAT_ANIMATION_GROUP);\r\n      animationIntersector.checkAnimations(false, CHAT_ANIMATION_GROUP/* , true */);\r\n\r\n      //fastRaf(() => {\r\n        this.lazyLoadQueue.unlock();\r\n      //});\r\n\r\n      //if(dialog && lastMsgID && lastMsgID !== topMessage && (this.bubbles[lastMsgID] || this.firstUnreadBubble)) {\r\n      if(savedPosition) {\r\n        this.scrollable.scrollTop = savedPosition.top;\r\n        /* const mountedByLastMsgId = this.getMountedBubble(lastMsgId);\r\n        let bubble: HTMLElement = mountedByLastMsgId?.bubble;\r\n        if(!bubble?.parentElement) {\r\n          bubble = this.findNextMountedBubbleByMsgId(lastMsgId);\r\n        }\r\n\r\n        if(bubble) {\r\n          const top = bubble.getBoundingClientRect().top;\r\n          const distance = savedPosition.top - top;\r\n          this.scrollable.scrollTop += distance;\r\n        } */\r\n      } else if((topMessage && isJump) || isTarget) {\r\n        const fromUp = maxBubbleId > 0 && (maxBubbleId < lastMsgId || lastMsgId < 0);\r\n        const followingUnread = readMaxId === lastMsgId && !isTarget;\r\n        if(!fromUp && samePeer) {\r\n          this.scrollable.scrollTop = 99999;\r\n        } else if(fromUp/*  && (samePeer || forwardingUnread) */) {\r\n          this.scrollable.scrollTop = 0;\r\n        }\r\n\r\n        const mountedByLastMsgId = this.getMountedBubble(lastMsgId);\r\n        let bubble: HTMLElement = (followingUnread && this.firstUnreadBubble) || mountedByLastMsgId?.bubble;\r\n        if(!bubble?.parentElement) {\r\n          bubble = this.findNextMountedBubbleByMsgId(lastMsgId);\r\n        }\r\n        \r\n        // ! sometimes there can be no bubble\r\n        if(bubble) {\r\n          this.scrollToBubble(bubble, followingUnread ? 'start' : 'center', !samePeer ? FocusDirection.Static : undefined);\r\n          if(!followingUnread) {\r\n            this.highlightBubble(bubble);\r\n          }\r\n        }\r\n      } else {\r\n        this.scrollable.scrollTop = 99999;\r\n      }\r\n\r\n      this.onScroll();\r\n\r\n      this.chat.dispatchEvent('setPeer', lastMsgId, !isJump);\r\n\r\n      const needFetchInterval = this.appMessagesManager.isFetchIntervalNeeded(peerId);\r\n      const needFetchNew = savedPosition || needFetchInterval;\r\n      if(!needFetchNew) {\r\n        // warning\r\n        if(!lastMsgId || this.bubbles[topMessage] || lastMsgId === topMessage) {\r\n          this.scrollable.loadedAll.bottom = true;\r\n        }\r\n      } else {\r\n        const middleware = this.getMiddleware();\r\n        Promise.all([setPeerPromise, getHeavyAnimationPromise()]).then(() => {\r\n          if(!middleware()) {\r\n            return;\r\n          }\r\n\r\n          this.scrollable.checkForTriggers();\r\n\r\n          if(needFetchInterval) {\r\n            const f = () => {\r\n              this.fetchNewPromise = new Promise<void>((resolve) => {\r\n                if(!middleware() || !this.appMessagesManager.isFetchIntervalNeeded(peerId)) {\r\n                  resolve();\r\n                  return;\r\n                }\r\n  \r\n                this.appMessagesManager.getNewHistory(peerId, this.chat.threadId).then((historyStorage) => {\r\n                  if(!middleware()) {\r\n                    resolve();\r\n                    return;\r\n                  }\r\n  \r\n                  const slice = historyStorage.history.slice;\r\n                  const isBottomEnd = slice.isEnd(SliceEnd.Bottom);\r\n                  if(this.scrollable.loadedAll.bottom && this.scrollable.loadedAll.bottom !== isBottomEnd) {\r\n                    this.scrollable.loadedAll.bottom = isBottomEnd;\r\n                    this.onScroll();\r\n                  }\r\n\r\n                  setTimeout(f, 30e3);\r\n                  resolve();\r\n                });\r\n              }).finally(() => {\r\n                this.fetchNewPromise = undefined;\r\n              });\r\n            };\r\n            \r\n            if(samePeer) {\r\n              setTimeout(f, 30e3);\r\n            } else {\r\n              f();\r\n            }\r\n          }\r\n        });\r\n      }\r\n      \r\n      this.log('scrolledAllDown:', this.scrollable.loadedAll.bottom);\r\n\r\n      //if(!this.unreaded.length && dialog) { // lol\r\n      if(this.scrollable.loadedAll.bottom && topMessage && !this.unreaded.size) { // lol\r\n        this.onScrolledAllDown();\r\n      }\r\n\r\n      if(this.chat.type === 'chat') {\r\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n        if(dialog?.pFlags.unread_mark) {\r\n          this.appMessagesManager.markDialogUnread(peerId, true);\r\n        }\r\n      }\r\n\r\n      //this.chatInner.classList.remove('disable-hover', 'is-scrolling'); // warning, performance!\r\n\r\n      /* if(!document.body.classList.contains(RIGHT_COLUMN_ACTIVE_CLASSNAME)) {\r\n        return new Promise<void>((resolve) => fastRaf(resolve));\r\n      } */\r\n      //console.timeEnd('appImManager setPeer');\r\n    }).catch(err => {\r\n      this.log.error('getHistory promise error:', err);\r\n      this.preloader.detach();\r\n      throw err;\r\n    });\r\n\r\n    return {cached, promise: setPeerPromise};\r\n  }\r\n\r\n  public onScrolledAllDown() {\r\n    if(this.chat.type === 'chat' || this.chat.type === 'discussion') {\r\n      const storage = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId);\r\n      this.appMessagesManager.readHistory(this.peerId, storage.maxId, this.chat.threadId, true);\r\n    }\r\n  }\r\n\r\n  public finishPeerChange() {\r\n    const peerId = this.peerId;\r\n    const isChannel = this.appPeersManager.isChannel(peerId);\r\n    const canWrite = this.appMessagesManager.canWriteToPeer(peerId, this.chat.threadId);\r\n    \r\n    this.chatInner.classList.toggle('has-rights', canWrite);\r\n    this.bubblesContainer.classList.toggle('is-chat-input-hidden', !canWrite);\r\n\r\n    this.chatInner.classList.toggle('is-chat', this.chat.isAnyGroup());\r\n    this.chatInner.classList.toggle('is-channel', isChannel);\r\n  }\r\n\r\n  public renderMessagesQueue(message: any, bubble: HTMLDivElement, reverse: boolean, promises: Promise<any>[]) {\r\n    /* let dateMessage = this.getDateContainerByMessage(message, reverse);\r\n    if(reverse) dateMessage.container.insertBefore(bubble, dateMessage.div.nextSibling);\r\n    else dateMessage.container.append(bubble);\r\n    return; */\r\n\r\n    /* if(DEBUG && message.mid === 4314759167) {\r\n      this.log('renderMessagesQueue', message, bubble, reverse, promises);\r\n    } */\r\n\r\n    this.messagesQueue.push({message, bubble, reverse, promises});\r\n\r\n    this.setMessagesQueuePromise();    \r\n  }\r\n\r\n  public setMessagesQueuePromise() {\r\n    if(this.messagesQueuePromise || !this.messagesQueue.length) return;\r\n\r\n    this.messagesQueuePromise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        const queue = this.messagesQueue.slice();\r\n        this.messagesQueue.length = 0;\r\n\r\n        const promises = queue.reduce((acc, {promises}) => acc.concat(promises), []);\r\n\r\n        // * это нужно для того, чтобы если захочет подгрузить reply или какое-либо сообщение, то скролл не прервался\r\n        // * если добавить этот промис - в таком случае нужно сделать, чтобы скроллило к последнему сообщению после рендера\r\n        // promises.push(getHeavyAnimationPromise());\r\n\r\n        this.log('promises to call', promises, queue, this.isHeavyAnimationInProgress);\r\n        const middleware = this.getMiddleware();\r\n        Promise.all(promises).then(() => {\r\n          if(!middleware()) {\r\n            return Promise.reject('setMessagesQueuePromise: peer changed!');\r\n          }\r\n\r\n          if(this.messagesQueueOnRender) {\r\n            this.messagesQueueOnRender();\r\n          }\r\n\r\n          if(this.messagesQueueOnRenderAdditional) {\r\n            this.messagesQueueOnRenderAdditional();\r\n          }\r\n\r\n          queue.forEach(({message, bubble, reverse}) => {\r\n            this.setBubblePosition(bubble, message, reverse);\r\n          });\r\n\r\n          //setTimeout(() => {\r\n            resolve();\r\n          //}, 500);\r\n          this.messagesQueuePromise = null;\r\n\r\n          if(this.messagesQueue.length) {\r\n            this.setMessagesQueuePromise();\r\n          }\r\n\r\n          this.setUnreadDelimiter(); // не нашёл места лучше\r\n        }).catch(reject);\r\n      }, 0);\r\n    });\r\n\r\n    //this.messagesQueuePromise.catch(() => {});\r\n  }\r\n\r\n  public setBubblePosition(bubble: HTMLElement, message: any, reverse: boolean) {\r\n    const dateMessage = this.getDateContainerByMessage(message, reverse);\r\n    if(this.chat.type === 'scheduled' || this.chat.type === 'pinned'/*  || true */) { // ! TEMP COMMENTED\r\n      const offset = this.stickyIntersector ? 2 : 1;\r\n      let children = Array.from(dateMessage.container.children).slice(offset) as HTMLElement[];\r\n      let i = 0, foundMidOnSameTimestamp = 0;\r\n      for(; i < children.length; ++i) {\r\n        const t = children[i];\r\n        const timestamp = +t.dataset.timestamp;\r\n        if(message.date < timestamp) {\r\n          break;\r\n        } else if(message.date === timestamp) {\r\n          foundMidOnSameTimestamp = +t.dataset.mid;\r\n        }\r\n        \r\n        if(foundMidOnSameTimestamp && message.mid < foundMidOnSameTimestamp) {\r\n          break;\r\n        }\r\n      }\r\n  \r\n      // * 1 for date, 1 for date sentinel\r\n      let index = offset + i;\r\n      /* if(bubble.parentElement) { // * if already mounted\r\n        const currentIndex = whichChild(bubble);\r\n        if(index > currentIndex) {\r\n          index -= 1; // * minus for already mounted\r\n        }\r\n      } */\r\n  \r\n      positionElementByIndex(bubble, dateMessage.container, index);\r\n    } else {\r\n      if(reverse) {\r\n        dateMessage.container.insertBefore(bubble, dateMessage.container.children[this.stickyIntersector ? 1 : 0].nextSibling);\r\n      } else {\r\n        dateMessage.container.append(bubble);\r\n      }\r\n    }\r\n\r\n    this.bubbleGroups.addBubble(bubble, message, reverse);\r\n  }\r\n\r\n  public getMiddleware() {\r\n    return this.middleware.get();\r\n  }\r\n  \r\n  // reverse means top\r\n  public renderMessage(message: any, reverse = false, multipleRender = false, bubble: HTMLDivElement = null, updatePosition = true) {\r\n    /* if(DEBUG) {\r\n      this.log.debug('message to render:', message);\r\n    } */\r\n    if(!bubble && this.bubbles[message.mid]) {\r\n      return;\r\n    }\r\n\r\n    //return;\r\n    const albumMustBeRenderedFull = this.chat.type !== 'pinned';\r\n    if(message.deleted) return;\r\n    else if(message.grouped_id && albumMustBeRenderedFull) { // will render only last album's message\r\n      const storage = this.appMessagesManager.groupedMessagesStorage[message.grouped_id];\r\n      const maxId = Math.max(...Object.keys(storage).map(i => +i));\r\n      if(message.mid < maxId) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    const peerId = this.peerId;\r\n    // * can't use 'message.pFlags.out' here because this check will be used to define side of message (left-right)\r\n    const our = message.fromId === rootScope.myId || (message.pFlags.out && this.appPeersManager.isMegagroup(this.peerId));\r\n    \r\n    const messageDiv = document.createElement('div');\r\n    messageDiv.classList.add('message');\r\n    \r\n    //messageDiv.innerText = message.message;\r\n\r\n    let bubbleContainer: HTMLDivElement;\r\n    let contentWrapper: HTMLElement;\r\n    \r\n    // bubble\r\n    if(!bubble) {\r\n      contentWrapper = document.createElement('div');\r\n      contentWrapper.classList.add('bubble-content-wrapper');\r\n      \r\n      bubbleContainer = document.createElement('div');\r\n      bubbleContainer.classList.add('bubble-content');\r\n      \r\n      bubble = document.createElement('div');\r\n      bubble.classList.add('bubble');\r\n      contentWrapper.appendChild(bubbleContainer);\r\n      bubble.appendChild(contentWrapper);\r\n\r\n      if(!our && !message.pFlags.out && this.unreadedObserver) {\r\n        //this.log('not our message', message, message.pFlags.unread);\r\n        const isUnread = message.pFlags.unread || (this.historyStorage.readMaxId !== undefined && this.historyStorage.readMaxId < message.mid);\r\n        if(isUnread) {\r\n          this.unreadedObserver.observe(bubble); \r\n          this.unreaded.set(bubble, message.mid);\r\n        }\r\n      }\r\n    } else {\r\n      const save = ['is-highlighted', 'is-group-first', 'is-group-last'];\r\n      const wasClassNames = bubble.className.split(' ');\r\n      const classNames = ['bubble'].concat(save.filter(c => wasClassNames.includes(c)));\r\n      bubble.className = classNames.join(' ');\r\n\r\n      contentWrapper = bubble.lastElementChild as HTMLElement;\r\n      bubbleContainer = contentWrapper.firstElementChild as HTMLDivElement;\r\n      bubbleContainer.innerHTML = '';\r\n      bubbleContainer.style.cssText = '';\r\n      contentWrapper.innerHTML = '';\r\n      contentWrapper.appendChild(bubbleContainer);\r\n      //bubbleContainer.style.marginBottom = '';\r\n      const transitionDelay = contentWrapper.style.transitionDelay;\r\n      contentWrapper.style.cssText = '';\r\n      contentWrapper.style.transitionDelay = transitionDelay;\r\n\r\n      if(bubble === this.firstUnreadBubble) {\r\n        bubble.classList.add('is-first-unread');\r\n      }\r\n\r\n      // * Нужно очистить прошлую информацию, полезно если удалить последний элемент из альбома в ПОСЛЕДНЕМ БАББЛЕ ГРУППЫ (видно по аватару)\r\n      const originalMid = +bubble.dataset.mid;\r\n      const sameMid = +message.mid === originalMid;\r\n      /* if(updatePosition) {\r\n        bubble.remove(); // * for positionElementByIndex\r\n      } */\r\n\r\n      if(!sameMid) {\r\n        delete this.bubbles[originalMid];\r\n      }\r\n\r\n      //bubble.innerHTML = '';\r\n    }\r\n\r\n    // ! reset due to album edit or delete item\r\n    this.bubbles[+message.mid] = bubble;\r\n    bubble.dataset.mid = message.mid;\r\n    bubble.dataset.timestamp = message.date;\r\n\r\n    const loadPromises: Promise<any>[] = [];\r\n\r\n    if(message._ === 'messageService') {\r\n      let action = message.action;\r\n      let _ = action._;\r\n      if(IGNORE_ACTIONS.includes(_) || (langPack.hasOwnProperty(_) && !langPack[_])) {\r\n        return bubble;\r\n      }\r\n\r\n      bubble.className = 'bubble service';\r\n\r\n      bubbleContainer.innerHTML = '';\r\n      const s = document.createElement('div');\r\n      s.classList.add('service-msg');\r\n      s.append(this.appMessagesManager.wrapMessageActionTextNew(message));\r\n      bubbleContainer.append(s);\r\n\r\n      if(updatePosition) {\r\n        this.renderMessagesQueue(message, bubble, reverse, loadPromises);\r\n\r\n        if(message.pFlags.is_single) { // * Ignore 'Discussion started'\r\n          bubble.classList.add('is-group-last');\r\n        }\r\n      }\r\n\r\n      return bubble;\r\n    }\r\n\r\n    let messageMedia = message.media;\r\n\r\n    let messageMessage: string, totalEntities: MessageEntity[];\r\n    if(messageMedia?.document && !['video', 'gif'].includes(messageMedia.document.type)) {\r\n      // * just filter these cases for documents caption\r\n    } else if(message.grouped_id && albumMustBeRenderedFull) {\r\n      const t = this.appMessagesManager.getAlbumText(message.grouped_id);\r\n      messageMessage = t.message;\r\n      //totalEntities = t.entities;\r\n      totalEntities = t.totalEntities;\r\n    } else if(messageMedia?.document?.type !== 'sticker') {\r\n      messageMessage = message.message;\r\n      //totalEntities = message.entities;\r\n      totalEntities = message.totalEntities;\r\n    }\r\n    \r\n    /* let richText = RichTextProcessor.wrapRichText(messageMessage, {\r\n      entities: totalEntities\r\n    }); */\r\n    let richText = RichTextProcessor.wrapRichText(messageMessage, {\r\n      entities: totalEntities,\r\n      passEntities: this.passEntities\r\n    });\r\n\r\n    let canHaveTail = true;\r\n    \r\n    let needToSetHTML = true;\r\n    if(totalEntities && !messageMedia) {\r\n      let emojiEntities = totalEntities.filter((e) => e._ === 'messageEntityEmoji');\r\n      let strLength = messageMessage.length;\r\n      let emojiStrLength = emojiEntities.reduce((acc: number, curr: any) => acc + curr.length, 0);\r\n      \r\n      if(emojiStrLength === strLength && emojiEntities.length <= 3) {\r\n        if(rootScope.settings.emoji.big) {\r\n          let sticker = this.appStickersManager.getAnimatedEmojiSticker(messageMessage);\r\n          if(emojiEntities.length === 1 && !messageMedia && sticker) {\r\n            messageMedia = {\r\n              _: 'messageMediaDocument',\r\n              document: sticker\r\n            };\r\n          } else {\r\n            let attachmentDiv = document.createElement('div');\r\n            attachmentDiv.classList.add('attachment');\r\n            \r\n            attachmentDiv.innerHTML = richText;\r\n            \r\n            bubble.classList.add('emoji-' + emojiEntities.length + 'x');\r\n            \r\n            bubbleContainer.append(attachmentDiv);\r\n          }\r\n\r\n          bubble.classList.add('is-message-empty', 'emoji-big');\r\n          canHaveTail = false;\r\n          needToSetHTML = false;\r\n        }\r\n        \r\n        bubble.classList.add('can-have-big-emoji');\r\n      }\r\n      \r\n      /* if(strLength === emojiStrLength) {\r\n        messageDiv.classList.add('emoji-only');\r\n        messageDiv.classList.add('message-empty');\r\n      } */\r\n    }\r\n\r\n    if(needToSetHTML) {\r\n      setInnerHTML(messageDiv, richText);\r\n    }\r\n    \r\n    const timeSpan = MessageRender.setTime(this.chat, message, bubble, bubbleContainer, messageDiv);\r\n    bubbleContainer.prepend(messageDiv);\r\n    //bubble.prepend(timeSpan, messageDiv); // that's bad\r\n\r\n    if(message.reply_markup && message.reply_markup._ === 'replyInlineMarkup' && message.reply_markup.rows && message.reply_markup.rows.length) {\r\n      const rows = message.reply_markup.rows;\r\n\r\n      const containerDiv = document.createElement('div');\r\n      containerDiv.classList.add('reply-markup');\r\n      rows.forEach((row: any) => {\r\n        const buttons = row.buttons;\r\n        if(!buttons || !buttons.length) return;\r\n\r\n        const rowDiv = document.createElement('div');\r\n        rowDiv.classList.add('reply-markup-row');\r\n\r\n        buttons.forEach((button: any) => {\r\n          const text = RichTextProcessor.wrapRichText(button.text, {noLinks: true, noLinebreaks: true});\r\n\r\n          let buttonEl: HTMLButtonElement | HTMLAnchorElement;\r\n          \r\n          switch(button._) {\r\n            case 'keyboardButtonUrl': {\r\n              const r = RichTextProcessor.wrapRichText(' ', {\r\n                entities: [{\r\n                  _: 'messageEntityTextUrl',\r\n                  length: 1,\r\n                  offset: 0,\r\n                  url: button.url\r\n                }]\r\n              });\r\n\r\n              buttonEl = htmlToDocumentFragment(r).firstElementChild as HTMLAnchorElement;\r\n              buttonEl.classList.add('is-link', 'tgico');\r\n\r\n              break;\r\n            }\r\n\r\n            default: {\r\n              buttonEl = document.createElement('button');\r\n              break;\r\n            }\r\n          }\r\n          \r\n          buttonEl.classList.add('reply-markup-button', 'rp');\r\n          buttonEl.innerHTML = text;\r\n\r\n          ripple(buttonEl);\r\n\r\n          rowDiv.append(buttonEl);\r\n        });\r\n\r\n        containerDiv.append(rowDiv);\r\n      });\r\n\r\n      attachClickEvent(containerDiv, (e) => {\r\n        let target = e.target as HTMLElement;\r\n        \r\n        if(!target.classList.contains('reply-markup-button')) target = findUpClassName(target, 'reply-markup-button');\r\n        if(!target || target.classList.contains('is-link')) return;\r\n\r\n        cancelEvent(e);\r\n\r\n        const column = whichChild(target);\r\n        const row = rows[whichChild(target.parentElement)];\r\n\r\n        if(!row.buttons || !row.buttons[column]) {\r\n          this.log.warn('no such button', row, column, message);\r\n          return;\r\n        }\r\n\r\n        const button = row.buttons[column];\r\n        this.appInlineBotsManager.callbackButtonClick(this.peerId, message.mid, button);\r\n      });\r\n\r\n      canHaveTail = false;\r\n      bubble.classList.add('with-reply-markup');\r\n      contentWrapper.append(containerDiv);\r\n    }\r\n    \r\n    const isOutgoing = message.pFlags.is_outgoing/*  && this.peerId !== rootScope.myId */;\r\n    if(our) {\r\n      if(message.pFlags.unread || isOutgoing) this.unreadOut.add(message.mid);\r\n      let status = '';\r\n      if(isOutgoing) status = 'is-sending';\r\n      else status = message.pFlags.unread ? 'is-sent' : 'is-read';\r\n      bubble.classList.add(status);\r\n    }\r\n\r\n    const messageWithReplies = this.appMessagesManager.getMessageWithReplies(message);\r\n    const withReplies = !!messageWithReplies;\r\n\r\n    if(withReplies) {\r\n      bubble.classList.add('with-replies');\r\n    }\r\n\r\n    const isOut = our && (!message.fwd_from || this.peerId !== rootScope.myId);\r\n    let nameContainer: HTMLElement = bubbleContainer;\r\n    \r\n    // media\r\n    if(messageMedia/*  && messageMedia._ === 'messageMediaPhoto' */) {\r\n      let attachmentDiv = document.createElement('div');\r\n      attachmentDiv.classList.add('attachment');\r\n      \r\n      if(!messageMessage) {\r\n        bubble.classList.add('is-message-empty');\r\n      }\r\n      \r\n      let processingWebPage = false;\r\n      \r\n      switch(messageMedia._) {\r\n        case 'messageMediaPhoto': {\r\n          const photo = messageMedia.photo;\r\n          ////////this.log('messageMediaPhoto', photo);\r\n\r\n          if(!messageMessage) {\r\n            canHaveTail = false;\r\n          }\r\n          \r\n          bubble.classList.add('hide-name', 'photo');\r\n          \r\n          const storage = this.appMessagesManager.groupedMessagesStorage[message.grouped_id];\r\n          if(message.grouped_id && Object.keys(storage).length !== 1 && albumMustBeRenderedFull) {\r\n            bubble.classList.add('is-album', 'is-grouped');\r\n            wrapAlbum({\r\n              groupId: message.grouped_id, \r\n              attachmentDiv,\r\n              middleware: this.getMiddleware(),\r\n              isOut: our,\r\n              lazyLoadQueue: this.lazyLoadQueue,\r\n              chat: this.chat,\r\n              loadPromises,\r\n              noAutoDownload: this.chat.noAutoDownloadMedia,\r\n            });\r\n            \r\n            break;\r\n          }\r\n          \r\n          const withTail = !isAndroid && canHaveTail && !withReplies && USE_MEDIA_TAILS;\r\n          if(withTail) bubble.classList.add('with-media-tail');\r\n          wrapPhoto({\r\n            photo, \r\n            message,\r\n            container: attachmentDiv,\r\n            withTail, \r\n            isOut, \r\n            lazyLoadQueue: this.lazyLoadQueue,\r\n            middleware: this.getMiddleware(),\r\n            loadPromises,\r\n            noAutoDownload: this.chat.noAutoDownloadMedia,\r\n          });\r\n\r\n          break;\r\n        }\r\n        \r\n        case 'messageMediaWebPage': {\r\n          processingWebPage = true;\r\n          \r\n          let webpage = messageMedia.webpage;\r\n          ////////this.log('messageMediaWebPage', webpage);\r\n          if(webpage._ === 'webPageEmpty') {\r\n            break;\r\n          } \r\n          \r\n          bubble.classList.add('webpage');\r\n          \r\n          let box = document.createElement('div');\r\n          box.classList.add('web');\r\n          \r\n          let quote = document.createElement('div');\r\n          quote.classList.add('quote');\r\n\r\n          let previewResizer: HTMLDivElement, preview: HTMLDivElement;\r\n          if(webpage.photo || webpage.document) {\r\n            previewResizer = document.createElement('div');\r\n            previewResizer.classList.add('preview-resizer');\r\n            preview = document.createElement('div');\r\n            preview.classList.add('preview');\r\n            previewResizer.append(preview);\r\n          }\r\n          \r\n          let doc: any = null;\r\n          if(webpage.document) {\r\n            doc = webpage.document;\r\n            \r\n            if(doc.type === 'gif' || doc.type === 'video') {\r\n              //if(doc.size <= 20e6) {\r\n              bubble.classList.add('video');\r\n              wrapVideo({\r\n                doc, \r\n                container: preview, \r\n                message, \r\n                boxWidth: mediaSizes.active.webpage.width,\r\n                boxHeight: mediaSizes.active.webpage.height,\r\n                lazyLoadQueue: this.lazyLoadQueue,\r\n                middleware: this.getMiddleware(),\r\n                isOut,\r\n                group: CHAT_ANIMATION_GROUP,\r\n                loadPromises,\r\n                noAutoDownload: this.chat.noAutoDownloadMedia,\r\n              });\r\n              //}\r\n            } else {\r\n              const docDiv = wrapDocument({\r\n                message,\r\n                noAutoDownload: this.chat.noAutoDownloadMedia,\r\n              });\r\n              preview.append(docDiv);\r\n              preview.classList.add('preview-with-document');\r\n              //messageDiv.classList.add((webpage.type || 'document') + '-message');\r\n              //doc = null;\r\n            }\r\n          }\r\n          \r\n          if(previewResizer) {\r\n            quote.append(previewResizer);\r\n          }\r\n          \r\n          let quoteTextDiv = document.createElement('div');\r\n          quoteTextDiv.classList.add('quote-text');\r\n\r\n          if(webpage.site_name) {\r\n            let nameEl = document.createElement('a');\r\n            nameEl.classList.add('webpage-name');\r\n            nameEl.setAttribute('target', '_blank');\r\n            nameEl.href = webpage.url || '#';\r\n            setInnerHTML(nameEl, RichTextProcessor.wrapEmojiText(webpage.site_name));\r\n            quoteTextDiv.append(nameEl);\r\n          }\r\n\r\n          if(webpage.rTitle) {\r\n            let titleDiv = document.createElement('div');\r\n            titleDiv.classList.add('title');\r\n            setInnerHTML(titleDiv, webpage.rTitle);\r\n            quoteTextDiv.append(titleDiv);\r\n          }\r\n\r\n          if(webpage.rDescription) {\r\n            let textDiv = document.createElement('div');\r\n            textDiv.classList.add('text');\r\n            setInnerHTML(textDiv, webpage.rDescription);\r\n            quoteTextDiv.append(textDiv);\r\n          }\r\n\r\n          quote.append(quoteTextDiv);\r\n\r\n          if(webpage.photo && !doc) {\r\n            bubble.classList.add('photo');\r\n\r\n            const size = webpage.photo.sizes[webpage.photo.sizes.length - 1];\r\n            let isSquare = false;\r\n            if(size.w === size.h && quoteTextDiv.childElementCount) {\r\n              bubble.classList.add('is-square-photo');\r\n              isSquare = true;\r\n              this.appPhotosManager.setAttachmentSize(webpage.photo, preview, 80, 80, false);\r\n            } else if(size.h > size.w) {\r\n              bubble.classList.add('is-vertical-photo');\r\n            }\r\n\r\n            wrapPhoto({\r\n              photo: webpage.photo, \r\n              message, \r\n              container: preview, \r\n              boxWidth: isSquare ? 0 : mediaSizes.active.webpage.width, \r\n              boxHeight: isSquare ? 0 : mediaSizes.active.webpage.height, \r\n              isOut, \r\n              lazyLoadQueue: this.lazyLoadQueue, \r\n              middleware: this.getMiddleware(),\r\n              loadPromises,\r\n              withoutPreloader: isSquare,\r\n              noAutoDownload: this.chat.noAutoDownloadMedia,\r\n            });\r\n          }\r\n          \r\n          box.append(quote);\r\n          \r\n          //bubble.prepend(box);\r\n          messageDiv.insertBefore(box, messageDiv.lastElementChild);\r\n          \r\n          //this.log('night running', bubble.scrollHeight);\r\n          \r\n          break;\r\n        }\r\n        \r\n        case 'messageMediaDocument': {\r\n          let doc = messageMedia.document;\r\n\r\n          //this.log('messageMediaDocument', doc, bubble);\r\n          \r\n          if(doc.sticker/*  && doc.size <= 1e6 */) {\r\n            bubble.classList.add('sticker');\r\n            canHaveTail = false;\r\n            \r\n            if(doc.animated) {\r\n              bubble.classList.add('sticker-animated');\r\n            }\r\n            \r\n            const sizes = mediaSizes.active;\r\n            const size = bubble.classList.contains('emoji-big') ? sizes.emojiSticker : (doc.animated ? sizes.animatedSticker : sizes.staticSticker);\r\n            this.appPhotosManager.setAttachmentSize(doc, attachmentDiv, size.width, size.height);\r\n            //let preloader = new ProgressivePreloader(attachmentDiv, false);\r\n            bubbleContainer.style.height = attachmentDiv.style.height;\r\n            bubbleContainer.style.width = attachmentDiv.style.width;\r\n            //appPhotosManager.setAttachmentSize(doc, bubble);\r\n            wrapSticker({\r\n              doc, \r\n              div: attachmentDiv,\r\n              middleware: this.getMiddleware(),\r\n              lazyLoadQueue: this.lazyLoadQueue,\r\n              group: CHAT_ANIMATION_GROUP,\r\n              //play: !!message.pending || !multipleRender,\r\n              play: true,\r\n              loop: true,\r\n              emoji: bubble.classList.contains('emoji-big') ? messageMessage : undefined,\r\n              withThumb: true,\r\n              loadPromises\r\n            });\r\n\r\n            break;\r\n          } else if(doc.type === 'video' || doc.type === 'gif' || doc.type === 'round'/*  && doc.size <= 20e6 */) {\r\n            //this.log('never get free 2', doc);\r\n\r\n            if(doc.type === 'round' || !messageMessage) {\r\n              canHaveTail = false;\r\n            }\r\n            \r\n            bubble.classList.add('hide-name', doc.type === 'round' ? 'round' : 'video');\r\n            const storage = this.appMessagesManager.groupedMessagesStorage[message.grouped_id];\r\n            if(message.grouped_id && Object.keys(storage).length !== 1 && albumMustBeRenderedFull) {\r\n              bubble.classList.add('is-album', 'is-grouped');\r\n  \r\n              wrapAlbum({\r\n                groupId: message.grouped_id, \r\n                attachmentDiv,\r\n                middleware: this.getMiddleware(),\r\n                isOut: our,\r\n                lazyLoadQueue: this.lazyLoadQueue,\r\n                chat: this.chat,\r\n                loadPromises,\r\n                noAutoDownload: this.chat.noAutoDownloadMedia,\r\n              });\r\n            } else {\r\n              const withTail = !isAndroid && !isApple && doc.type !== 'round' && canHaveTail && !withReplies && USE_MEDIA_TAILS;\r\n              if(withTail) bubble.classList.add('with-media-tail');\r\n              wrapVideo({\r\n                doc, \r\n                container: attachmentDiv, \r\n                message, \r\n                boxWidth: mediaSizes.active.regular.width,\r\n                boxHeight: mediaSizes.active.regular.height, \r\n                withTail, \r\n                isOut,\r\n                lazyLoadQueue: this.lazyLoadQueue,\r\n                middleware: this.getMiddleware(),\r\n                group: CHAT_ANIMATION_GROUP,\r\n                loadPromises,\r\n                noAutoDownload: this.chat.noAutoDownloadMedia,\r\n              });\r\n            }\r\n            \r\n            break;\r\n          } else {\r\n            const newNameContainer = wrapGroupedDocuments({\r\n              albumMustBeRenderedFull,\r\n              message,\r\n              bubble,\r\n              messageDiv,\r\n              chat: this.chat,\r\n              loadPromises,\r\n              noAutoDownload: this.chat.noAutoDownloadMedia\r\n            });\r\n\r\n            if(newNameContainer) {\r\n              nameContainer = newNameContainer;\r\n            }\r\n\r\n            const lastContainer = messageDiv.lastElementChild.querySelector('.document-message, .document-size, .audio');\r\n            lastContainer && lastContainer.append(timeSpan.cloneNode(true));\r\n\r\n            bubble.classList.remove('is-message-empty');\r\n            messageDiv.classList.add((!(['photo', 'pdf'] as MyDocument['type'][]).includes(doc.type) ? doc.type || 'document' : 'document') + '-message');\r\n            processingWebPage = true;\r\n            \r\n            break;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        case 'messageMediaContact': {\r\n          //this.log('wrapping contact', message);\r\n\r\n          const contactDiv = document.createElement('div');\r\n          contactDiv.classList.add('contact');\r\n          contactDiv.dataset.peerId = '' + messageMedia.user_id;\r\n\r\n          messageDiv.classList.add('contact-message');\r\n          processingWebPage = true;\r\n\r\n          const texts = [];\r\n          if(message.media.first_name) texts.push(RichTextProcessor.wrapEmojiText(message.media.first_name));\r\n          if(message.media.last_name) texts.push(RichTextProcessor.wrapEmojiText(message.media.last_name));\r\n\r\n          contactDiv.innerHTML = `\r\n            <div class=\"contact-details\">\r\n              <div class=\"contact-name\">${texts.join(' ')}</div>\r\n              <div class=\"contact-number\">${message.media.phone_number ? '+' + formatPhoneNumber(message.media.phone_number).formatted : 'Unknown phone number'}</div>\r\n            </div>`;\r\n\r\n          const avatarElem = new AvatarElement();\r\n          //avatarElem.lazyLoadQueue = this.lazyLoadQueue;\r\n          avatarElem.setAttribute('peer', '' + message.media.user_id);\r\n          avatarElem.classList.add('contact-avatar', 'avatar-54');\r\n\r\n          contactDiv.prepend(avatarElem);\r\n\r\n          bubble.classList.remove('is-message-empty');\r\n          messageDiv.classList.add('contact-message');\r\n          messageDiv.append(contactDiv);\r\n\r\n          break;\r\n        }\r\n\r\n        case 'messageMediaPoll': {\r\n          bubble.classList.remove('is-message-empty');\r\n          \r\n          const pollElement = wrapPoll(message);\r\n          messageDiv.prepend(pollElement);\r\n          messageDiv.classList.add('poll-message');\r\n\r\n          break;\r\n        }\r\n        \r\n        default:\r\n          bubble.classList.remove('is-message-empty');\r\n          messageDiv.innerHTML = '<i class=\"media-not-supported\">This message is currently not supported on Telegram Web. Try <a href=\"https://desktop.telegram.org/\" target=\"_blank\">desktop.telegram.org</a></i>';\r\n          messageDiv.append(timeSpan);\r\n          this.log.warn('unrecognized media type:', message.media._, message);\r\n          break;\r\n      }\r\n      \r\n      if(!processingWebPage) {\r\n        bubbleContainer.append(attachmentDiv);\r\n      }\r\n\r\n      /* if(bubble.classList.contains('is-message-empty') && (bubble.classList.contains('photo') || bubble.classList.contains('video'))) {\r\n        bubble.classList.add('no-tail');\r\n\r\n        if(!bubble.classList.contains('with-media-tail')) {\r\n          bubble.classList.add('use-border-radius');\r\n        }\r\n      } */\r\n    }\r\n\r\n    if(this.chat.selection.isSelecting) {\r\n      this.chat.selection.toggleBubbleCheckbox(bubble, true);\r\n    }\r\n\r\n    let savedFrom = '';\r\n    \r\n    const needName = ((peerId < 0 && (peerId !== message.fromId || our)) && message.fromId !== rootScope.myId) || message.viaBotId;\r\n    if(needName || message.fwd_from || message.reply_to_mid) { // chat\r\n      let title: HTMLSpanElement;\r\n\r\n      const isForwardFromChannel = message.from_id && message.from_id._ === 'peerChannel' && message.fromId === message.fwdFromId;\r\n      \r\n      let isHidden = message.fwd_from && !message.fwd_from.from_id && !message.fwd_from.channel_id;\r\n      if(message.viaBotId) {\r\n        title = document.createElement('span');\r\n        title.innerText = '@' + this.appUsersManager.getUser(message.viaBotId).username;\r\n      } else if(isHidden) {\r\n        ///////this.log('message to render hidden', message);\r\n        title = document.createElement('span');\r\n        title.innerHTML = RichTextProcessor.wrapEmojiText(message.fwd_from.from_name);\r\n        title.classList.add('peer-title');\r\n        //title = message.fwd_from.from_name;\r\n        bubble.classList.add('hidden-profile');\r\n      } else {\r\n        title = new PeerTitle({peerId: message.viaBotId || message.fwdFromId || message.fromId}).element;\r\n      }\r\n      \r\n      //this.log(title);\r\n      \r\n      if(message.viaBotId) {\r\n        if(!bubble.classList.contains('sticker')) {\r\n          let nameDiv = document.createElement('div');\r\n          nameDiv.classList.add('name');\r\n          nameDiv.dataset.peerId = message.viaBotId;\r\n          nameDiv.append(i18n('ViaBot'), ' ', title);\r\n          nameContainer.append(nameDiv);\r\n        } else {\r\n          bubble.classList.add('hide-name');\r\n        }\r\n      } else if((message.fwdFromId || message.fwd_from)) {\r\n        if(this.peerId !== rootScope.myId && !isForwardFromChannel) {\r\n          bubble.classList.add('forwarded');\r\n        }\r\n        \r\n        if(message.savedFrom) {\r\n          savedFrom = message.savedFrom;\r\n        }\r\n        \r\n        if(!bubble.classList.contains('sticker')) {\r\n          let nameDiv = document.createElement('div');\r\n          nameDiv.classList.add('name');\r\n          nameDiv.dataset.peerId = message.fwdFromId;\r\n\r\n          if(this.peerId === rootScope.myId || this.peerId === REPLIES_PEER_ID || isForwardFromChannel) {\r\n            nameDiv.style.color = this.appPeersManager.getPeerColorById(message.fwdFromId, false);\r\n            nameDiv.append(title);\r\n          } else {\r\n            /* const fromTitle = message.fromId === this.myID || appPeersManager.isBroadcast(message.fwdFromId || message.fromId) ? '' : `<div class=\"name\" data-peer-id=\"${message.fromId}\" style=\"color: ${appPeersManager.getPeerColorByID(message.fromId, false)};\">${appPeersManager.getPeerTitle(message.fromId)}</div>`;\r\n            nameDiv.innerHTML = fromTitle + 'Forwarded from ' + title; */\r\n            nameDiv.append(i18n('ForwardedFrom', [title]));\r\n\r\n            if(savedFrom) {\r\n              nameDiv.dataset.savedFrom = savedFrom;\r\n            }\r\n          }\r\n          \r\n          nameContainer.append(nameDiv);\r\n        }\r\n      } else {\r\n        if(!bubble.classList.contains('sticker') && needName) {\r\n          let nameDiv = document.createElement('div');\r\n          nameDiv.classList.add('name');\r\n          nameDiv.append(title);\r\n\r\n          if(!our) {\r\n            nameDiv.style.color = this.appPeersManager.getPeerColorById(message.fromId, false);\r\n          }\r\n\r\n          nameDiv.dataset.peerId = message.fromId;\r\n          nameContainer.append(nameDiv);\r\n        } else /* if(!message.reply_to_mid) */ {\r\n          bubble.classList.add('hide-name');\r\n        }\r\n      }\r\n\r\n      if(message.reply_to_mid && message.reply_to_mid !== this.chat.threadId) {\r\n        MessageRender.setReply({\r\n          chat: this.chat,\r\n          bubble,\r\n          bubbleContainer,\r\n          message\r\n        });\r\n      }\r\n      \r\n      const needAvatar = this.chat.isAnyGroup() && !isOut;\r\n      if(needAvatar) {\r\n        let avatarElem = new AvatarElement();\r\n        //avatarElem.lazyLoadQueue = this.lazyLoadQueue;\r\n        avatarElem.classList.add('user-avatar', 'avatar-40');\r\n        avatarElem.loadPromises = loadPromises;\r\n\r\n        if(!message.fwdFromId && message.fwd_from && message.fwd_from.from_name) {\r\n          avatarElem.setAttribute('peer-title', /* '🔥 FF 🔥' */message.fwd_from.from_name);\r\n        }\r\n\r\n        avatarElem.setAttribute('peer', '' + (((message.fwd_from && (this.peerId === rootScope.myId || this.peerId === REPLIES_PEER_ID)) || isForwardFromChannel ? message.fwdFromId : message.fromId) || 0));\r\n        //avatarElem.update();\r\n        \r\n        //this.log('exec loadDialogPhoto', message);\r\n\r\n        contentWrapper.append(avatarElem);\r\n      }\r\n    } else {\r\n      bubble.classList.add('hide-name');\r\n    }\r\n\r\n    if(this.chat.type === 'pinned') {\r\n      savedFrom = `${this.chat.peerId}_${message.mid}`;\r\n    }\r\n\r\n    const isThreadStarter = messageWithReplies && messageWithReplies.mid === this.chat.threadId;\r\n    if(isThreadStarter) {\r\n      bubble.classList.add('is-thread-starter', 'is-group-last');\r\n    }\r\n\r\n    if(savedFrom && (this.chat.type === 'pinned' || message.fwd_from.saved_from_msg_id) && this.peerId !== REPLIES_PEER_ID) {\r\n      const goto = document.createElement('div');\r\n      goto.classList.add('bubble-beside-button', 'goto-original', 'tgico-arrow_next');\r\n      bubbleContainer.append(goto);\r\n      bubble.dataset.savedFrom = savedFrom;\r\n      bubble.classList.add('with-beside-button');\r\n    }\r\n    \r\n    bubble.classList.add(isOut ? 'is-out' : 'is-in');\r\n    if(updatePosition) {\r\n      this.renderMessagesQueue(message, bubble, reverse, loadPromises);\r\n    }\r\n\r\n    if(withReplies) {\r\n      const isFooter = MessageRender.renderReplies({\r\n        bubble,\r\n        bubbleContainer,\r\n        message: messageWithReplies,\r\n        messageDiv,\r\n        loadPromises,\r\n        lazyLoadQueue: this.lazyLoadQueue\r\n      });\r\n\r\n      if(isFooter) {\r\n        canHaveTail = true;\r\n      }\r\n    }\r\n\r\n    if(canHaveTail) {\r\n      bubble.classList.add('can-have-tail');\r\n\r\n      bubbleContainer.append(generateTail());\r\n    }\r\n\r\n    return bubble;\r\n  }\r\n\r\n  public performHistoryResult(history: number[], reverse: boolean, isBackLimit: boolean, additionMsgId?: number) {\r\n    // commented bot getProfile in getHistory!\r\n    // if(!history/* .filter((id: number) => id > 0) */.length) {\r\n    //   if(!isBackLimit) {\r\n    //     this.scrollable.loadedAll.top = true;\r\n\r\n    //     /* if(this.chat.type === 'discussion') {\r\n    //       const serviceStartMessageId = this.appMessagesManager.threadsServiceMessagesIdsStorage[this.peerId + '_' + this.chat.threadId];\r\n    //       if(serviceStartMessageId) history.push(serviceStartMessageId);\r\n    //       history.push(this.chat.threadId);\r\n    //     } */\r\n    //   } else {\r\n    //     this.scrollable.loadedAll.bottom = true;\r\n    //   }\r\n    // }\r\n\r\n    history = history.slice(); // need\r\n\r\n    if(additionMsgId) {\r\n      history.unshift(additionMsgId);\r\n    }\r\n\r\n    /* if(testScroll && additionMsgID) {\r\n      for(let i = 0; i < 3; ++i) {\r\n        let _history = history.slice();\r\n        setTimeout(() => {\r\n          this.performHistoryResult(_history, reverse, isBackLimit, 0, resetPromises);\r\n        }, 0);\r\n      }\r\n    } */\r\n\r\n    const historyStorage = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId);\r\n    const firstSlice = historyStorage.history.first;\r\n    const lastSlice = historyStorage.history.last;\r\n    if(firstSlice.isEnd(SliceEnd.Bottom) && (!firstSlice.length || history.includes(firstSlice[0]))) {\r\n      this.scrollable.loadedAll.bottom = true;\r\n    }\r\n    \r\n    if(lastSlice.isEnd(SliceEnd.Top) && (!lastSlice.length || history.includes(lastSlice[lastSlice.length - 1]))) {\r\n      this.scrollable.loadedAll.top = true;\r\n    }\r\n\r\n    //console.time('appImManager render history');\r\n\r\n    return new Promise<boolean>((resolve, reject) => {\r\n      //await new Promise((resolve) => setTimeout(resolve, 1e3));\r\n\r\n      /* if(DEBUG) {\r\n        this.log('performHistoryResult: will render some messages:', history.length, this.isHeavyAnimationInProgress, this.messagesQueuePromise);\r\n      } */\r\n\r\n      const method = (reverse ? history.shift : history.pop).bind(history);\r\n\r\n      //const padding = 10000;\r\n      //const realLength = this.scrollable.container.childElementCount;\r\n      let previousScrollHeightMinusTop: number/* , previousScrollHeight: number */;\r\n      //if(realLength > 0/*  && (reverse || isSafari) */) { // for safari need set when scrolling bottom too\r\n      //if(!this.scrollable.isHeavyScrolling) {\r\n        this.messagesQueueOnRender = () => {\r\n          const {scrollTop, scrollHeight} = this.scrollable;\r\n\r\n          //previousScrollHeight = scrollHeight;\r\n          //previousScrollHeight = scrollHeight + padding;\r\n          previousScrollHeightMinusTop = reverse ? scrollHeight - scrollTop : scrollTop;\r\n\r\n          //this.chatInner.style.paddingTop = padding + 'px';\r\n          /* if(reverse) {\r\n            previousScrollHeightMinusTop = this.scrollable.scrollHeight - scrollTop;\r\n          } else {\r\n            previousScrollHeightMinusTop = scrollTop;\r\n          } */\r\n\r\n          /* if(DEBUG) {\r\n            this.log('performHistoryResult: messagesQueueOnRender, scrollTop:', scrollTop, scrollHeight, previousScrollHeightMinusTop);\r\n          } */\r\n          this.messagesQueueOnRender = undefined;\r\n        };\r\n      //}\r\n      //}\r\n\r\n      if(this.needReflowScroll) {\r\n        reflowScrollableElement(this.scrollable.container);\r\n        this.needReflowScroll = false;\r\n      }\r\n\r\n      while(history.length) {\r\n        let message = this.chat.getMessage(method());\r\n        this.renderMessage(message, reverse, true);\r\n      }\r\n\r\n      (this.messagesQueuePromise || Promise.resolve())\r\n      //.then(() => new Promise(resolve => setTimeout(resolve, 100)))\r\n      .then(() => {\r\n        if(previousScrollHeightMinusTop !== undefined) {\r\n          /* const scrollHeight = this.scrollable.scrollHeight;\r\n          const addedHeight = scrollHeight - previousScrollHeight;\r\n          \r\n          this.chatInner.style.paddingTop = (10000 - addedHeight) + 'px'; */\r\n          /* const scrollHeight = this.scrollable.scrollHeight;\r\n          const addedHeight = scrollHeight - previousScrollHeight;\r\n          \r\n          this.chatInner.style.paddingTop = (padding - addedHeight) + 'px';\r\n          \r\n          //const newScrollTop = reverse ? scrollHeight - previousScrollHeightMinusTop : previousScrollHeightMinusTop;\r\n          const newScrollTop = reverse ? scrollHeight - addedHeight - previousScrollHeightMinusTop : previousScrollHeightMinusTop;\r\n          this.log('performHistoryResult: will set scrollTop', \r\n          previousScrollHeightMinusTop, this.scrollable.scrollHeight, \r\n          newScrollTop, this.scrollable.container.clientHeight); */\r\n          //const newScrollTop = reverse ? scrollHeight - previousScrollHeightMinusTop : previousScrollHeightMinusTop;\r\n          const newScrollTop = reverse ? this.scrollable.scrollHeight - previousScrollHeightMinusTop : previousScrollHeightMinusTop;\r\n          \r\n          /* if(DEBUG) {\r\n            this.log('performHistoryResult: will set up scrollTop:', newScrollTop, this.isHeavyAnimationInProgress);\r\n          } */\r\n\r\n          // touchSupport for safari iOS\r\n          //isTouchSupported && isApple && (this.scrollable.container.style.overflow = 'hidden');\r\n          this.scrollable.scrollTop = newScrollTop;\r\n          //this.scrollable.scrollTop = this.scrollable.scrollHeight;\r\n          //isTouchSupported && isApple && (this.scrollable.container.style.overflow = '');\r\n\r\n          if(isSafari/*  && !isAppleMobile */) { // * fix blinking and jumping\r\n            reflowScrollableElement(this.scrollable.container);\r\n          }\r\n\r\n          /* if(DEBUG) {\r\n            this.log('performHistoryResult: have set up scrollTop:', newScrollTop, this.scrollable.scrollTop, this.scrollable.scrollHeight, this.isHeavyAnimationInProgress);\r\n          } */\r\n        }\r\n\r\n        resolve(true);\r\n      }, reject);\r\n    }).then(() => {\r\n      //console.timeEnd('appImManager render history');\r\n\r\n      //return new Promise<boolean>((resolve) => setTimeout(() => resolve(true), 300));\r\n      return true;\r\n    });\r\n  }\r\n\r\n  onDatePick = (timestamp: number) => {\r\n    const peerId = this.peerId;\r\n    this.appMessagesManager.requestHistory(peerId, 0, 2, -1, timestamp, this.chat.threadId).then(history => {\r\n      if(!history?.messages?.length) {\r\n        this.log.error('no history!');\r\n        return;\r\n      } else if(this.peerId !== peerId) {\r\n        return;\r\n      }\r\n\r\n      this.chat.setMessageId((history.messages[0] as MyMessage).mid);\r\n      //console.log('got history date:', history);\r\n    });\r\n  };\r\n\r\n  public requestHistory(maxId: number, loadCount: number, backLimit: number) {\r\n    //const middleware = this.getMiddleware();\r\n    if(this.chat.type === 'chat' || this.chat.type === 'discussion') {\r\n      return this.appMessagesManager.getHistory(this.peerId, maxId, loadCount, backLimit, this.chat.threadId);\r\n    } else if(this.chat.type === 'pinned') {\r\n      const promise = this.appMessagesManager.getSearch({\r\n        peerId: this.peerId, \r\n        inputFilter: {_: 'inputMessagesFilterPinned'}, \r\n        maxId, \r\n        limit: loadCount, \r\n        backLimit\r\n      })\r\n      .then(value => ({history: value.history.map(m => m.mid)}));\r\n\r\n      return promise;\r\n    } else if(this.chat.type === 'scheduled') {\r\n      return this.appMessagesManager.getScheduledMessages(this.peerId).then(mids => {\r\n        this.scrollable.loadedAll.top = true;\r\n        this.scrollable.loadedAll.bottom = true;\r\n        return {history: mids.slice().reverse()};\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load and render history\r\n   * @param maxId max message id\r\n   * @param reverse 'true' means up\r\n   * @param isBackLimit is search\r\n   * @param additionMsgId for the last message\r\n   * @param justLoad do not render\r\n   */\r\n  public getHistory(maxId = 0, reverse = false, isBackLimit = false, additionMsgId = 0, justLoad = false): {cached: boolean, promise: Promise<boolean>} {\r\n    const peerId = this.peerId;\r\n\r\n    //console.time('appImManager call getHistory');\r\n    const pageCount = Math.min(30, this.appPhotosManager.windowH / 38/*  * 1.25 */ | 0);\r\n    //const loadCount = Object.keys(this.bubbles).length > 0 ? 50 : pageCount;\r\n    const realLoadCount = Object.keys(this.bubbles).length > 0/*  || additionMsgId */ ? Math.max(40, pageCount) : pageCount;//const realLoadCount = 50;\r\n    //const realLoadCount = pageCount;//const realLoadCount = 50;\r\n    let loadCount = realLoadCount;\r\n    \r\n    /* if(TEST_SCROLL) {\r\n      //loadCount = 1;\r\n      if(Object.keys(this.bubbles).length > 0)\r\n      return {cached: false, promise: Promise.resolve(true)};\r\n    } */\r\n    if(TEST_SCROLL !== undefined) {\r\n      if(TEST_SCROLL) {\r\n        if(Object.keys(this.bubbles).length > 0) {\r\n          --TEST_SCROLL;\r\n        }\r\n      } else {\r\n        return {cached: false, promise: Promise.resolve(true)};\r\n      }\r\n    }\r\n    \r\n    ////console.time('render history total');\r\n    \r\n    let backLimit = 0;\r\n    if(isBackLimit) {\r\n      backLimit = loadCount;\r\n\r\n      if(!reverse) { // if not jump\r\n        loadCount = 0;\r\n        //maxId = this.appMessagesManager.incrementMessageId(maxId, 1);\r\n      }\r\n    }\r\n\r\n    let additionMsgIds: number[];\r\n    if(additionMsgId && !isBackLimit) {\r\n      if(this.chat.type === 'pinned') {\r\n        additionMsgIds = [additionMsgId];\r\n      } else {\r\n        const historyStorage = this.appMessagesManager.getHistoryStorage(peerId, this.chat.threadId);\r\n        const slice = historyStorage.history.slice;\r\n        if(slice.length < loadCount && !slice.isEnd(SliceEnd.Both)) {\r\n          additionMsgIds = slice.slice();\r\n\r\n          // * filter last album, because we don't know is it the last item\r\n          for(let i = additionMsgIds.length - 1; i >= 0; --i) {\r\n            const message = this.chat.getMessage(additionMsgIds[i]);\r\n            if(message.grouped_id) additionMsgIds.splice(i, 1);\r\n            else break;\r\n          }\r\n\r\n          maxId = additionMsgIds[additionMsgIds.length - 1] || maxId;\r\n        }\r\n      }\r\n    }\r\n\r\n    /* const result = additionMsgID ? \r\n      {history: [additionMsgID]} : \r\n      appMessagesManager.getHistory(this.peerId, maxId, loadCount, backLimit); */\r\n    let result: ReturnType<AppMessagesManager['getHistory']> | {history: number[]} = this.requestHistory(maxId, loadCount, backLimit) as any;\r\n    let resultPromise: Promise<any>;\r\n\r\n    //const isFirstMessageRender = !!additionMsgID && result instanceof Promise && !appMessagesManager.getMessage(additionMsgID).grouped_id;\r\n    const isAdditionRender = additionMsgIds?.length && result instanceof Promise;\r\n    const isFirstMessageRender = (this.isFirstLoad && backLimit && result instanceof Promise) || isAdditionRender;\r\n    if(isAdditionRender) {\r\n      resultPromise = result as Promise<any>;\r\n      result = {history: additionMsgIds};\r\n      //additionMsgID = 0;\r\n    }\r\n\r\n    this.isFirstLoad = false;\r\n\r\n    const processResult = (historyResult: typeof result) => {\r\n      if(this.chat.type === 'discussion' && 'offsetIdOffset' in historyResult) {\r\n        //this.log('discussion got history', loadCount, backLimit, historyResult, isTopEnd);\r\n\r\n        // * inject discussion start\r\n        if(historyResult.history.isEnd(SliceEnd.Top)) {\r\n          const serviceStartMessageId = this.appMessagesManager.threadsServiceMessagesIdsStorage[this.peerId + '_' + this.chat.threadId];\r\n          if(serviceStartMessageId) historyResult.history.push(serviceStartMessageId);\r\n          historyResult.history.push(...this.chat.getMidsByMid(this.chat.threadId).reverse());\r\n          this.scrollable.loadedAll.top = true;\r\n        }\r\n      }\r\n    };\r\n\r\n    const sup = (result: HistoryResult) => {\r\n      /* if(maxId && result.history?.length) {\r\n        if(this.bubbles[maxId]) {\r\n          result.history.findAndSplice(mid => mid === maxId);  \r\n        }\r\n      } */\r\n\r\n      processResult(result);\r\n        \r\n      ////console.timeEnd('render history total');\r\n      \r\n      return getHeavyAnimationPromise().then(() => {\r\n        return this.performHistoryResult(result.history || [], reverse, isBackLimit, !isAdditionRender && additionMsgId);\r\n      });\r\n    };\r\n\r\n    const processPromise = (result: Promise<HistoryResult>) => {\r\n      const promise = result.then((result) => {\r\n        //this.log('getHistory not cached result by maxId:', maxId, reverse, isBackLimit, result, peerId, justLoad);\r\n\r\n        if(reverse ? this.getHistoryTopPromise !== promise : this.getHistoryBottomPromise !== promise) {\r\n          this.log.warn('getHistory: peer changed');\r\n          ////console.timeEnd('render history total');\r\n          return Promise.reject();\r\n        }\r\n\r\n        if(justLoad) {\r\n          this.scrollable.onScroll(); // нужно делать из-за ранней прогрузки\r\n          return true;\r\n        }\r\n        //console.timeEnd('appImManager call getHistory');\r\n\r\n        return sup(result);\r\n      }, (err) => {\r\n        this.log.error('getHistory error:', err);\r\n        throw err;\r\n      });\r\n      \r\n      return promise;\r\n    };\r\n\r\n    let promise: Promise<boolean>, cached: boolean;\r\n    if(result instanceof Promise) {\r\n      cached = false;\r\n      promise = processPromise(result);\r\n    } else if(justLoad) {\r\n      return null;\r\n    } else {\r\n      cached = true;\r\n      //this.log('getHistory cached result by maxId:', maxId, reverse, isBackLimit, result, peerId, justLoad);\r\n      promise = sup(result as HistoryResult);\r\n      //return (reverse ? this.getHistoryTopPromise = promise : this.getHistoryBottomPromise = promise);\r\n      //return this.performHistoryResult(result.history || [], reverse, isBackLimit, additionMsgID, true);\r\n    }\r\n\r\n    const waitPromise = isAdditionRender ? processPromise(resultPromise) : promise;\r\n\r\n    if(isFirstMessageRender && rootScope.settings.animationsEnabled/*  && false */) {\r\n      let times = isAdditionRender ? 2 : 1;\r\n      this.messagesQueueOnRenderAdditional = () => {\r\n        this.log('ship went past rocks of magnets');\r\n\r\n        if(--times) return;\r\n\r\n        this.messagesQueueOnRenderAdditional = undefined;\r\n        if(!Object.keys(this.bubbles).length) {\r\n          return;\r\n        }\r\n\r\n        let sortedMids = getObjectKeysAndSort(this.bubbles, 'desc');\r\n\r\n        if(isAdditionRender && additionMsgIds.length) {\r\n          sortedMids = sortedMids.filter(mid => !additionMsgIds.includes(mid));\r\n        }\r\n\r\n        let targetMid: number;\r\n        if(backLimit) {\r\n          targetMid = maxId || Math.max(...sortedMids); // * on discussion enter\r\n        } else {\r\n          if(additionMsgId) {\r\n            targetMid = additionMsgId;\r\n          } else { // * if maxId === 0\r\n            targetMid = Math.max(...sortedMids);\r\n          }\r\n        }\r\n\r\n        const topIds = sortedMids.slice(sortedMids.findIndex(mid => targetMid > mid));\r\n        const middleIds = isAdditionRender ? [] : [targetMid];\r\n        const bottomIds = isAdditionRender ? [] : sortedMids.slice(0, sortedMids.findIndex(mid => targetMid >= mid)).reverse();\r\n        \r\n        if(DEBUG) {\r\n          this.log('getHistory: targeting mid:', targetMid, maxId, additionMsgId, \r\n            topIds.map(m => this.appMessagesManager.getServerMessageId(m)), \r\n            bottomIds.map(m => this.appMessagesManager.getServerMessageId(m)));\r\n        }\r\n\r\n        const setBubbles: HTMLElement[] = [];\r\n\r\n        this.chatInner.classList.add('zoom-fading');\r\n        const delay = isAdditionRender ? 10 : 40;\r\n        const offsetIndex = isAdditionRender ? 0 : 1;\r\n        const animateAsLadder = (mids: number[], offsetIndex = 0) => {\r\n          const animationPromise = deferredPromise<void>();\r\n          let lastMsDelay = 0;\r\n          mids.forEach((mid, idx) => {\r\n            if(!this.bubbles[mid]) {\r\n              this.log.warn('animateAsLadder: no bubble by mid:', mid);\r\n              return;\r\n            }\r\n\r\n            const contentWrapper = this.bubbles[mid].lastElementChild as HTMLElement;\r\n\r\n            lastMsDelay = ((idx + offsetIndex) || 0.1) * delay;\r\n            //lastMsDelay = (idx + offsetIndex) * delay;\r\n            //lastMsDelay = (idx || 0.1) * 1000;\r\n            \r\n            contentWrapper.classList.add('zoom-fade');\r\n            contentWrapper.style.transitionDelay = lastMsDelay + 'ms';\r\n\r\n            if(idx === (mids.length - 1)) {\r\n              const onTransitionEnd = (e: TransitionEvent) => {\r\n                if(e.target !== contentWrapper) {\r\n                  return;\r\n                }\r\n\r\n                animationPromise.resolve();\r\n                contentWrapper.removeEventListener('transitionend', onTransitionEnd);\r\n              };\r\n  \r\n              contentWrapper.addEventListener('transitionend', onTransitionEnd);\r\n            }\r\n            \r\n            //this.log('supa', bubble);\r\n\r\n            setBubbles.push(contentWrapper);\r\n          });\r\n\r\n          if(!mids.length) {\r\n            animationPromise.resolve();\r\n          }\r\n\r\n          return {lastMsDelay, animationPromise};\r\n        };\r\n\r\n        const topRes = animateAsLadder(topIds, offsetIndex);\r\n        const middleRes = animateAsLadder(middleIds);\r\n        const bottomRes = animateAsLadder(bottomIds, offsetIndex);\r\n        const promises = [topRes.animationPromise, middleRes.animationPromise, bottomRes.animationPromise];\r\n        const delays: number[] = [topRes.lastMsDelay, middleRes.lastMsDelay, bottomRes.lastMsDelay];\r\n\r\n        fastRaf(() => {\r\n          setBubbles.forEach(contentWrapper => {\r\n            contentWrapper.classList.remove('zoom-fade');\r\n          });\r\n        });\r\n\r\n        let promise: Promise<any>;\r\n        if(topIds.length || middleIds.length || bottomIds.length) {\r\n          promise = Promise.all(promises);\r\n\r\n          dispatchHeavyAnimationEvent(promise, Math.max(...delays) + 200) // * 200 - transition time\r\n          .then(() => { \r\n            fastRaf(() => {\r\n              setBubbles.forEach(contentWrapper => {\r\n                contentWrapper.style.transitionDelay = '';\r\n              });\r\n\r\n              this.chatInner.classList.remove('zoom-fading');\r\n            });\r\n\r\n            // ! в хроме, каким-то образом из-за zoom-fade класса начинает прыгать скролл при подгрузке сообщений вверх, \r\n            // ! т.е. скролл не ставится, так же, как в сафари при translateZ на блок выше scrollable\r\n            if(!isSafari) {\r\n              this.needReflowScroll = true;\r\n            }\r\n          });\r\n        }\r\n\r\n        (promise || Promise.resolve()).then(() => {\r\n          setTimeout(() => { // preload messages\r\n            this.loadMoreHistory(reverse, true);\r\n          }, 0);\r\n        });\r\n      };\r\n    } else {\r\n      this.messagesQueueOnRenderAdditional = undefined;\r\n    }\r\n\r\n    (reverse ? this.getHistoryTopPromise = waitPromise : this.getHistoryBottomPromise = waitPromise);\r\n    waitPromise.then(() => {\r\n      (reverse ? this.getHistoryTopPromise = undefined : this.getHistoryBottomPromise = undefined);\r\n    });\r\n\r\n    if(justLoad) {\r\n      return null;\r\n    }\r\n\r\n    /* false &&  */!isFirstMessageRender && promise.then(() => {\r\n      if(reverse) {\r\n        this.loadedTopTimes++;\r\n        this.loadedBottomTimes = Math.max(0, --this.loadedBottomTimes);\r\n      } else {\r\n        this.loadedBottomTimes++;\r\n        this.loadedTopTimes = Math.max(0, --this.loadedTopTimes);\r\n      }\r\n\r\n      let ids: number[];\r\n      if((reverse && this.loadedTopTimes > 2) || (!reverse && this.loadedBottomTimes > 2)) {\r\n        ids = getObjectKeysAndSort(this.bubbles);\r\n      }\r\n\r\n      //let removeCount = loadCount / 2;\r\n      const safeCount = realLoadCount * 2; // cause i've been runningrunningrunning all day\r\n      //this.log('getHistory: slice loadedTimes:', reverse, pageCount, this.loadedTopTimes, this.loadedBottomTimes, ids?.length, safeCount);\r\n      if(ids && ids.length > safeCount) {\r\n        if(reverse) {\r\n          //ids = ids.slice(-removeCount);\r\n          //ids = ids.slice(removeCount * 2);\r\n          ids = ids.slice(safeCount);\r\n          this.scrollable.loadedAll.bottom = false;\r\n\r\n          //this.log('getHistory: slice bottom messages:', ids.length, loadCount);\r\n          //this.getHistoryBottomPromise = undefined; // !WARNING, это нужно для обратной загрузки истории, если запрос словил флуд\r\n        } else {\r\n          //ids = ids.slice(0, removeCount);\r\n          //ids = ids.slice(0, ids.length - (removeCount * 2));\r\n          ids = ids.slice(0, ids.length - safeCount);\r\n          this.scrollable.loadedAll.top = false;\r\n\r\n          //this.log('getHistory: slice up messages:', ids.length, loadCount);\r\n          //this.getHistoryTopPromise = undefined; // !WARNING, это нужно для обратной загрузки истории, если запрос словил флуд\r\n        }\r\n\r\n        //this.log('getHistory: will slice ids:', ids, reverse);\r\n\r\n        this.deleteMessagesByIds(ids, false);\r\n      }\r\n    });\r\n\r\n    promise.then(() => {\r\n      // preload more\r\n      //if(!isFirstMessageRender) {\r\n      if(this.chat.type === 'chat'/*  || this.chat.type === 'discussion' */) {\r\n        /* const storage = this.appMessagesManager.getHistoryStorage(peerId, this.chat.threadId);\r\n        const isMaxIdInHistory = storage.history.indexOf(maxId) !== -1;\r\n        if(isMaxIdInHistory || true) { // * otherwise it is a search or jump */\r\n          setTimeout(() => {\r\n            if(reverse) {\r\n              this.loadMoreHistory(true, true);\r\n            } else {\r\n              this.loadMoreHistory(false, true);\r\n            }\r\n          }, 0);\r\n        //}\r\n      }\r\n      //}\r\n    });\r\n\r\n    return {cached, promise};\r\n  }\r\n\r\n  public setUnreadDelimiter() {\r\n    if(!(this.chat.type === 'chat' || this.chat.type === 'discussion')) {\r\n      return;\r\n    }\r\n\r\n    if(this.attachedUnreadBubble) {\r\n      return;\r\n    }\r\n\r\n    const historyStorage = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId);\r\n    let readMaxId = this.appMessagesManager.getReadMaxIdIfUnread(this.peerId, this.chat.threadId);\r\n    if(!readMaxId) return;\r\n\r\n    readMaxId = Object.keys(this.bubbles)\r\n    .filter(mid => !this.bubbles[mid].classList.contains('is-out'))\r\n    .map(i => +i)\r\n    .sort((a, b) => a - b)\r\n    .find(i => i > readMaxId);\r\n\r\n    if(readMaxId && this.bubbles[readMaxId]) {\r\n      let bubble = this.bubbles[readMaxId];\r\n      if(this.firstUnreadBubble && this.firstUnreadBubble !== bubble) {\r\n        this.firstUnreadBubble.classList.remove('is-first-unread');\r\n        this.firstUnreadBubble = null;\r\n      }\r\n\r\n      if(readMaxId !== historyStorage.maxId) {\r\n        bubble.classList.add('is-first-unread');\r\n      }\r\n\r\n      this.firstUnreadBubble = bubble;\r\n      this.attachedUnreadBubble = true;\r\n    }\r\n  }\r\n\r\n  public deleteEmptyDateGroups() {\r\n    const mustBeCount = 1 + +!!this.stickyIntersector;\r\n    for(const i in this.dateMessages) {\r\n      const dateMessage = this.dateMessages[i];\r\n\r\n      if(dateMessage.container.childElementCount === mustBeCount) { // only date div + sentinel div\r\n        dateMessage.container.remove();\r\n        if(this.stickyIntersector) {\r\n          this.stickyIntersector.unobserve(dateMessage.container, dateMessage.div);\r\n        }\r\n        delete this.dateMessages[i];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function generateTail() {\r\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n  svg.setAttributeNS(null, 'viewBox', '0 0 11 20');\r\n  svg.setAttributeNS(null, 'width', '11');\r\n  svg.setAttributeNS(null, 'height', '20');\r\n  svg.classList.add('bubble-tail');\r\n\r\n  const use = document.createElementNS('http://www.w3.org/2000/svg', 'use');\r\n  use.setAttributeNS(null, 'href', '#message-tail-filled');\r\n\r\n  svg.append(use);\r\n\r\n  return svg;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appChatsManager from \"../../lib/appManagers/appChatsManager\";\r\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { addCancelButton, PopupButton } from \".\";\r\nimport PopupPeer from \"./peer\";\r\nimport { ChatType } from \"../chat/chat\";\r\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\r\nimport PeerTitle from \"../peerTitle\";\r\n\r\nexport default class PopupDeleteMessages {\r\n  constructor(peerId: number, mids: number[], type: ChatType, onConfirm?: () => void) {\r\n    const peerTitleElement = new PeerTitle({\r\n      peerId,\r\n      onlyFirstName: true\r\n    }).element;\r\n\r\n    mids = mids.slice();\r\n    const callback = (revoke?: true) => {\r\n      onConfirm && onConfirm();\r\n      if(type === 'scheduled') {\r\n        appMessagesManager.deleteScheduledMessages(peerId, mids);\r\n      } else {\r\n        appMessagesManager.deleteMessages(peerId, mids, revoke);\r\n      }\r\n    };\r\n\r\n    let title: LangPackKey, titleArgs: any[], description: LangPackKey, descriptionArgs: any[], buttons: PopupButton[];\r\n    if(mids.length === 1) {\r\n      title = 'DeleteSingleMessagesTitle';\r\n    } else {\r\n      title = 'DeleteMessagesTitle';\r\n      titleArgs = [i18n('messages', [mids.length])];\r\n    }\r\n    \r\n    description = mids.length === 1 ? 'AreYouSureDeleteSingleMessage' : 'AreYouSureDeleteFewMessages';\r\n\r\n    buttons = [{\r\n      langKey: 'Delete',\r\n      isDanger: true,\r\n      callback: () => callback()\r\n    }];\r\n\r\n    if(peerId === rootScope.myId || type === 'scheduled') {\r\n      \r\n    } else {\r\n      if(peerId > 0) {\r\n        buttons.push({\r\n          langKey: 'DeleteMessagesOptionAlso',\r\n          langArgs: [peerTitleElement],\r\n          isDanger: true,\r\n          callback: () => callback(true)\r\n        });\r\n      } else {\r\n        const chat = appChatsManager.getChat(-peerId);\r\n\r\n        const hasRights = appChatsManager.hasRights(-peerId, 'delete_messages');\r\n        if(chat._ === 'chat') {\r\n          const canRevoke = hasRights ? mids.slice() : mids.filter(mid => {\r\n            const message = appMessagesManager.getMessageByPeer(peerId, mid);\r\n            return message.fromId === rootScope.myId;\r\n          });\r\n\r\n          if(canRevoke.length) {\r\n            if(canRevoke.length === mids.length) {\r\n              buttons.push({\r\n                langKey: 'DeleteForAll',\r\n                isDanger: true,\r\n                callback: () => callback(true)\r\n              });\r\n            } else {\r\n              buttons.push({\r\n                langKey: 'DeleteMessagesOption',\r\n                isDanger: true,\r\n                callback: () => callback(true)\r\n              });\r\n\r\n              description = 'DeleteMessagesTextGroup';\r\n              descriptionArgs = [i18n('messages', [canRevoke.length])];\r\n              //description = `You can also delete the ${canRevoke.length} message${canRevoke.length > 1 ? 's' : ''} you sent from the inboxes of other group members by pressing \"${buttonText}\".`;\r\n            }\r\n          }\r\n        } else {\r\n          buttons[0].callback = () => callback(true);\r\n        }\r\n      }\r\n    }\r\n\r\n    addCancelButton(buttons);\r\n\r\n    const popup = new PopupPeer('popup-delete-chat', {\r\n      peerId,\r\n      titleLangKey: title,\r\n      titleLangArgs: titleArgs,\r\n      descriptionLangKey: description,\r\n      descriptionLangArgs: descriptionArgs,\r\n      buttons\r\n    });\r\n\r\n    popup.show();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\r\nimport { addCancelButton, PopupButton } from \".\";\r\nimport PopupPeer from \"./peer\";\r\nimport appPeersManager from \"../../lib/appManagers/appPeersManager\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { LangPackKey } from \"../../lib/langPack\";\r\nimport appChatsManager from \"../../lib/appManagers/appChatsManager\";\r\nimport PeerTitle from \"../peerTitle\";\r\n\r\nexport default class PopupPinMessage {\r\n  constructor(peerId: number, mid: number, unpin?: true, onConfirm?: () => void) {\r\n    let title: LangPackKey, description: LangPackKey, buttons: PopupButton[] = [];\r\n\r\n    const canUnpin = appPeersManager.canPinMessage(peerId);\r\n\r\n    const callback = (oneSide?: true, silent?: true) => {\r\n      setTimeout(() => { // * костыль, потому что document.elementFromPoint вернёт popup-peer пока он будет закрываться\r\n        let promise: Promise<any>;\r\n        if(unpin && !mid) {\r\n          if(canUnpin) {\r\n            promise = appMessagesManager.unpinAllMessages(peerId);\r\n          } else {\r\n            promise = appMessagesManager.hidePinnedMessages(peerId);\r\n          }\r\n        } else {\r\n          promise = appMessagesManager.updatePinnedMessage(peerId, mid, unpin, silent, oneSide);\r\n        }\r\n\r\n        if(onConfirm) {\r\n          promise.then(onConfirm);\r\n        }\r\n      }, 300);\r\n    };\r\n\r\n    if(unpin) {\r\n      let buttonText: LangPackKey = 'UnpinMessage';\r\n      if(!mid) {\r\n        if(canUnpin) {\r\n          title = 'Popup.Unpin.AllTitle';\r\n          description = 'Chat.UnpinAllMessagesConfirmation';\r\n        } else {\r\n          title = 'Popup.Unpin.HideTitle';\r\n          description = 'Popup.Unpin.HideDescription';\r\n          buttonText = 'Popup.Unpin.Hide';\r\n        }\r\n      } else {\r\n        title = 'UnpinMessageAlertTitle';\r\n        description = 'Chat.Confirm.Unpin';\r\n      }\r\n      \r\n      buttons.push({\r\n        langKey: buttonText,\r\n        isDanger: true,\r\n        callback: () => callback()\r\n      });\r\n    } else {\r\n      title = 'PinMessageAlertTitle';\r\n      const pinButtonText: LangPackKey = 'PinMessage';\r\n      \r\n      if(peerId < 0) {\r\n        buttons.push({\r\n          langKey: pinButtonText,\r\n          callback: () => callback()\r\n        });\r\n\r\n        if(appChatsManager.isBroadcast(-peerId)) {\r\n          description = 'PinMessageAlertChannel';\r\n        } else {\r\n          description = 'PinMessageAlert';\r\n  \r\n          buttons.push({\r\n            langKey: 'PinNotify',\r\n            callback: () => callback(undefined, true)\r\n          });\r\n        }\r\n      } else {\r\n        description = 'PinMessageAlertChat';\r\n\r\n        if(peerId === rootScope.myId) {\r\n          buttons.push({\r\n            langKey: pinButtonText,\r\n            callback: () => callback()\r\n          });\r\n        } else {\r\n          buttons.push({\r\n            langKey: pinButtonText,\r\n            callback: () => callback(true)\r\n          });\r\n  \r\n          buttons.push({\r\n            langKey: 'PinAlsoFor',\r\n            langArgs: [new PeerTitle({peerId, onlyFirstName: true}).element],\r\n            callback: () => callback()\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    addCancelButton(buttons);\r\n\r\n    const popup = new PopupPeer('popup-delete-chat', {\r\n      peerId,\r\n      titleLangKey: title,\r\n      descriptionLangKey: description,\r\n      buttons\r\n    });\r\n\r\n    popup.show();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appMessagesManager from \"../../lib/appManagers/appMessagesManager\";\r\nimport { PopupButton } from \".\";\r\nimport PopupPeer from \"./peer\";\r\n\r\nexport default class PopupSendNow {\r\n  constructor(peerId: number, mids: number[], onConfirm?: () => void) {\r\n    let title: string, description: string, buttons: PopupButton[] = [];\r\n\r\n    title = `Send Message${mids.length > 1 ? 's' : ''} Now`;\r\n    description = mids.length > 1 ? 'Send ' + mids.length + ' messages now?' : 'Send message now?';\r\n\r\n    const callback = () => {\r\n      onConfirm && onConfirm();\r\n      appMessagesManager.sendScheduledMessages(peerId, mids);\r\n    };\r\n\r\n    buttons.push({\r\n      text: 'SEND',\r\n      callback\r\n    });\r\n\r\n    buttons.push({\r\n      text: 'CANCEL',\r\n      isCancel: true\r\n    });\r\n\r\n    const popup = new PopupPeer('popup-delete-chat', {\r\n      peerId,\r\n      title,\r\n      description,\r\n      buttons\r\n    });\r\n\r\n    popup.show();\r\n  }\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function cancelSelection() {\r\n  if(window.getSelection) {\r\n    if(window.getSelection().empty) {  // Chrome\r\n      window.getSelection().empty();\r\n    } else if(window.getSelection().removeAllRanges) {  // Firefox\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n    // @ts-ignore\r\n  } else if(document.selection) {  // IE?\r\n    // @ts-ignore\r\n    document.selection.empty();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function isSelectionEmpty(selection = window.getSelection()) {\r\n  if(!selection || !selection.rangeCount) {\r\n    return true;\r\n  }\r\n\r\n  const selectionRange = selection.getRangeAt(0);\r\n  if(!selectionRange.toString() || !selectionRange.START_TO_END) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type { AppChatsManager } from \"../../lib/appManagers/appChatsManager\";\r\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\r\nimport type { AppPollsManager, Poll } from \"../../lib/appManagers/appPollsManager\";\r\nimport type { AppDocsManager, MyDocument } from \"../../lib/appManagers/appDocsManager\";\r\nimport type { AppStateManager } from \"../../lib/appManagers/appStateManager\";\r\nimport type Chat from \"./chat\";\r\nimport { isTouchSupported } from \"../../helpers/touchSupport\";\r\nimport ButtonMenu, { ButtonMenuItemOptions } from \"../buttonMenu\";\r\nimport { attachContextMenuListener, openBtnMenu, positionMenu } from \"../misc\";\r\nimport PopupDeleteMessages from \"../popups/deleteMessages\";\r\nimport PopupForward from \"../popups/forward\";\r\nimport PopupPinMessage from \"../popups/unpinMessage\";\r\nimport { copyTextToClipboard } from \"../../helpers/clipboard\";\r\nimport PopupSendNow from \"../popups/sendNow\";\r\nimport { toast } from \"../toast\";\r\nimport I18n, { i18n, LangPackKey } from \"../../lib/langPack\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport cancelSelection from \"../../helpers/dom/cancelSelection\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport isSelectionEmpty from \"../../helpers/dom/isSelectionEmpty\";\r\n\r\nexport default class ChatContextMenu {\r\n  private buttons: (ButtonMenuItemOptions & {verify: () => boolean, notDirect?: () => boolean, withSelection?: true})[];\r\n  private element: HTMLElement;\r\n\r\n  private isSelectable: boolean;\r\n  private target: HTMLElement;\r\n  private isTargetAGroupedItem: boolean;\r\n  private isTextSelected: boolean;\r\n  private isAnchorTarget: boolean;\r\n  private peerId: number;\r\n  private mid: number;\r\n  private message: any;\r\n\r\n  constructor(private attachTo: HTMLElement, \r\n    private chat: Chat, \r\n    private appMessagesManager: AppMessagesManager, \r\n    private appPeersManager: AppPeersManager, \r\n    private appPollsManager: AppPollsManager,\r\n    private appDocsManager: AppDocsManager\r\n  ) {\r\n    const onContextMenu = (e: MouseEvent | Touch | TouchEvent) => {\r\n      if(this.init) {\r\n        this.init();\r\n        this.init = null;\r\n      }\r\n\r\n      let bubble: HTMLElement, contentWrapper: HTMLElement;\r\n\r\n      try {\r\n        contentWrapper = findUpClassName(e.target, 'bubble-content-wrapper');\r\n        bubble = contentWrapper ? contentWrapper.parentElement : findUpClassName(e.target, 'bubble');\r\n      } catch(e) {}\r\n\r\n      // ! context menu click by date bubble (there is no pointer-events)\r\n      if(!bubble) return;\r\n\r\n      if(e instanceof MouseEvent || e.hasOwnProperty('preventDefault')) (e as any).preventDefault();\r\n      if(this.element.classList.contains('active')) {\r\n        return false;\r\n      }\r\n      if(e instanceof MouseEvent || e.hasOwnProperty('cancelBubble')) (e as any).cancelBubble = true;\r\n\r\n      let mid = +bubble.dataset.mid;\r\n      if(!mid) return;\r\n\r\n      // * если открыть контекстное меню для альбома не по бабблу, и последний элемент не выбран, чтобы показать остальные пункты\r\n      if(chat.selection.isSelecting && !contentWrapper) {\r\n        const mids = this.chat.getMidsByMid(mid);\r\n        if(mids.length > 1) {\r\n          const selectedMid = chat.selection.selectedMids.has(mid) ? mid : mids.find(mid => chat.selection.selectedMids.has(mid));\r\n          if(selectedMid) {\r\n            mid = selectedMid;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.isSelectable = this.chat.selection.canSelectBubble(bubble);\r\n      this.peerId = this.chat.peerId;\r\n      //this.msgID = msgID;\r\n      this.target = e.target as HTMLElement;\r\n      this.isTextSelected = !isSelectionEmpty();\r\n      this.isAnchorTarget = this.target.tagName === 'A' && (this.target as HTMLAnchorElement).target === '_blank';\r\n\r\n      const groupedItem = findUpClassName(this.target, 'grouped-item');\r\n      this.isTargetAGroupedItem = !!groupedItem;\r\n      if(groupedItem) {\r\n        this.mid = +groupedItem.dataset.mid;\r\n      } else {\r\n        this.mid = mid;\r\n      }\r\n\r\n      this.message = this.chat.getMessage(this.mid);\r\n\r\n      this.buttons.forEach(button => {\r\n        let good: boolean;\r\n\r\n        //if((appImManager.chatSelection.isSelecting && !button.withSelection) || (button.withSelection && !appImManager.chatSelection.isSelecting)) {\r\n        if(chat.selection.isSelecting && !button.withSelection) {\r\n          good = false;\r\n        } else {\r\n          good = contentWrapper || isTouchSupported || true ? \r\n            button.verify() : \r\n            button.notDirect && button.verify() && button.notDirect();\r\n        }\r\n\r\n        button.element.classList.toggle('hide', !good);\r\n      });\r\n\r\n      const side: 'left' | 'right' = bubble.classList.contains('is-in') ? 'left' : 'right';\r\n      //bubble.parentElement.append(this.element);\r\n      //appImManager.log('contextmenu', e, bubble, side);\r\n      positionMenu((e as TouchEvent).touches ? (e as TouchEvent).touches[0] : e as MouseEvent, this.element, side);\r\n      openBtnMenu(this.element, () => {\r\n        this.peerId = this.mid = 0;\r\n        this.target = null;\r\n      });\r\n    };\r\n\r\n    if(isTouchSupported/*  && false */) {\r\n      attachClickEvent(attachTo, (e) => {\r\n        if(chat.selection.isSelecting) {\r\n          return;\r\n        }\r\n\r\n        const className = (e.target as HTMLElement).className;\r\n        if(!className || !className.includes) return;\r\n\r\n        chat.log('touchend', e);\r\n\r\n        const good = ['bubble', 'bubble-content-wrapper', 'bubble-content', 'message', 'time', 'inner'].find(c => className.match(new RegExp(c + '($|\\\\s)')));\r\n        if(good) {\r\n          cancelEvent(e);\r\n          //onContextMenu((e as TouchEvent).changedTouches[0]);\r\n          onContextMenu((e as TouchEvent).changedTouches ? (e as TouchEvent).changedTouches[0] : e as MouseEvent);\r\n        }\r\n      }, {listenerSetter: this.chat.bubbles.listenerSetter});\r\n\r\n      attachContextMenuListener(attachTo, (e) => {\r\n        if(chat.selection.isSelecting) return;\r\n\r\n        // * these two lines will fix instant text selection on iOS Safari\r\n        document.body.classList.add('no-select'); // * need no-select on body because chat-input transforms in channels\r\n        attachTo.addEventListener('touchend', (e) => {\r\n          cancelEvent(e); // ! this one will fix propagation to document loader button, etc\r\n          document.body.classList.remove('no-select');\r\n\r\n          //this.chat.bubbles.onBubblesClick(e);\r\n        }, {once: true, capture: true});\r\n\r\n        cancelSelection();\r\n        //cancelEvent(e as any);\r\n        const bubble = findUpClassName(e.target, 'grouped-item') || findUpClassName(e.target, 'bubble');\r\n        if(bubble) {\r\n          chat.selection.toggleByBubble(bubble);\r\n        }\r\n      }, this.chat.bubbles.listenerSetter);\r\n    } else attachContextMenuListener(attachTo, onContextMenu, this.chat.bubbles.listenerSetter);\r\n  }\r\n\r\n  private init() {\r\n    this.buttons = [{\r\n      icon: 'send2',\r\n      text: 'MessageScheduleSend',\r\n      onClick: this.onSendScheduledClick,\r\n      verify: () => this.chat.type === 'scheduled' && !this.message.pFlags.is_outgoing\r\n    }, {\r\n      icon: 'send2',\r\n      text: 'Message.Context.Selection.SendNow',\r\n      onClick: this.onSendScheduledClick,\r\n      verify: () => this.chat.type === 'scheduled' && this.chat.selection.selectedMids.has(this.mid) && !this.chat.selection.selectionSendNowBtn.hasAttribute('disabled'),\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'schedule',\r\n      text: 'MessageScheduleEditTime',\r\n      onClick: () => {\r\n        this.chat.input.scheduleSending(() => {\r\n          this.appMessagesManager.editMessage(this.message, this.message.message, {\r\n            scheduleDate: this.chat.input.scheduleDate,\r\n            entities: this.message.entities\r\n          });\r\n\r\n          this.chat.input.onMessageSent(false, false);\r\n        }, new Date(this.message.date * 1000));\r\n      },\r\n      verify: () => this.chat.type === 'scheduled'\r\n    }, {\r\n      icon: 'reply',\r\n      text: 'Reply',\r\n      onClick: this.onReplyClick,\r\n      verify: () => this.appMessagesManager.canWriteToPeer(this.peerId, this.chat.threadId) && \r\n        !this.message.pFlags.is_outgoing && \r\n        !!this.chat.input.messageInput && \r\n        this.chat.type !== 'scheduled'/* ,\r\n      cancelEvent: true */\r\n    }, {\r\n      icon: 'edit',\r\n      text: 'Edit',\r\n      onClick: this.onEditClick,\r\n      verify: () => this.appMessagesManager.canEditMessage(this.message, 'text') && !!this.chat.input.messageInput\r\n    }, {\r\n      icon: 'copy',\r\n      text: 'Copy',\r\n      onClick: this.onCopyClick,\r\n      verify: () => !!this.message.message && !this.isTextSelected\r\n    }, {\r\n      icon: 'copy',\r\n      text: 'Chat.CopySelectedText',\r\n      onClick: this.onCopyClick,\r\n      verify: () => !!this.message.message && this.isTextSelected\r\n    }, {\r\n      icon: 'copy',\r\n      text: 'Message.Context.Selection.Copy',\r\n      onClick: this.onCopyClick,\r\n      verify: () => this.chat.selection.selectedMids.has(this.mid) && !![...this.chat.selection.selectedMids].find(mid => !!this.chat.getMessage(mid).message),\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'copy',\r\n      text: 'CopyLink',\r\n      onClick: this.onCopyAnchorLinkClick,\r\n      verify: () => this.isAnchorTarget,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'link',\r\n      text: 'MessageContext.CopyMessageLink1',\r\n      onClick: this.onCopyLinkClick,\r\n      verify: () => this.appPeersManager.isChannel(this.peerId) && !this.message.pFlags.is_outgoing\r\n    }, {\r\n      icon: 'pin',\r\n      text: 'Message.Context.Pin',\r\n      onClick: this.onPinClick,\r\n      verify: () => !this.message.pFlags.is_outgoing && \r\n        this.message._ !== 'messageService' && \r\n        !this.message.pFlags.pinned && \r\n        this.appPeersManager.canPinMessage(this.peerId) && \r\n        this.chat.type !== 'scheduled',\r\n    }, {\r\n      icon: 'unpin',\r\n      text: 'Message.Context.Unpin',\r\n      onClick: this.onUnpinClick,\r\n      verify: () => this.message.pFlags.pinned && this.appPeersManager.canPinMessage(this.peerId),\r\n    }, {\r\n      icon: 'download',\r\n      text: 'MediaViewer.Context.Download',\r\n      onClick: () => {\r\n        this.appDocsManager.saveDocFile(this.message.media.document);\r\n      },\r\n      verify: () => {\r\n        if(this.message.pFlags.is_outgoing) {\r\n          return false;\r\n        }\r\n        \r\n        const doc: MyDocument = this.message.media?.document;\r\n        return doc && doc.type && !(['gif', 'photo', 'video', 'sticker'] as MyDocument['type'][]).includes(doc.type);\r\n      }\r\n    }, {\r\n      icon: 'checkretract',\r\n      text: 'Chat.Poll.Unvote',\r\n      onClick: this.onRetractVote,\r\n      verify: () => {\r\n        const poll = this.message.media?.poll as Poll;\r\n        return poll && poll.chosenIndexes.length && !poll.pFlags.closed && !poll.pFlags.quiz;\r\n      }/* ,\r\n      cancelEvent: true */\r\n    }, {\r\n      icon: 'stop',\r\n      text: 'Chat.Poll.Stop',\r\n      onClick: this.onStopPoll,\r\n      verify: () => {\r\n        const poll = this.message.media?.poll;\r\n        return this.appMessagesManager.canEditMessage(this.message, 'poll') && poll && !poll.pFlags.closed && !this.message.pFlags.is_outgoing;\r\n      }/* ,\r\n      cancelEvent: true */\r\n    }, {\r\n      icon: 'forward',\r\n      text: 'Forward',\r\n      onClick: this.onForwardClick,\r\n      verify: () => this.chat.type !== 'scheduled' && !this.message.pFlags.is_outgoing && this.message._ !== 'messageService'\r\n    }, {\r\n      icon: 'forward',\r\n      text: 'Message.Context.Selection.Forward',\r\n      onClick: this.onForwardClick,\r\n      verify: () => this.chat.selection.selectionForwardBtn && \r\n        this.chat.selection.selectedMids.has(this.mid) && \r\n        !this.chat.selection.selectionForwardBtn.hasAttribute('disabled'),\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'select',\r\n      text: 'Message.Context.Select',\r\n      onClick: this.onSelectClick,\r\n      verify: () => !this.message.action && !this.chat.selection.selectedMids.has(this.mid) && this.isSelectable,\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'select',\r\n      text: 'Message.Context.Selection.Clear',\r\n      onClick: this.onClearSelectionClick,\r\n      verify: () => this.chat.selection.selectedMids.has(this.mid),\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }, {\r\n      icon: 'delete danger',\r\n      text: 'Delete',\r\n      onClick: this.onDeleteClick,\r\n      verify: () => this.appMessagesManager.canDeleteMessage(this.message)\r\n    }, {\r\n      icon: 'delete danger',\r\n      text: 'Message.Context.Selection.Delete',\r\n      onClick: this.onDeleteClick,\r\n      verify: () => this.chat.selection.selectedMids.has(this.mid) && !this.chat.selection.selectionDeleteBtn.hasAttribute('disabled'),\r\n      notDirect: () => true,\r\n      withSelection: true\r\n    }];\r\n\r\n    this.element = ButtonMenu(this.buttons, this.chat.bubbles.listenerSetter);\r\n    this.element.id = 'bubble-contextmenu';\r\n    this.element.classList.add('contextmenu');\r\n    this.chat.container.append(this.element);\r\n  };\r\n\r\n  private onSendScheduledClick = () => {\r\n    if(this.chat.selection.isSelecting) {\r\n      this.chat.selection.selectionSendNowBtn.click();\r\n    } else {\r\n      new PopupSendNow(this.peerId, this.chat.getMidsByMid(this.mid));\r\n    }\r\n  };\r\n\r\n  private onReplyClick = () => {\r\n    this.chat.input.initMessageReply(this.mid);\r\n  };\r\n\r\n  private onEditClick = () => {\r\n    this.chat.input.initMessageEditing(this.mid);\r\n  };\r\n\r\n  private onCopyClick = () => {\r\n    if(isSelectionEmpty()) {\r\n      const mids = this.chat.selection.isSelecting ? [...this.chat.selection.selectedMids].sort((a, b) => a - b) : [this.mid];\r\n      const str = mids.reduce((acc, mid) => {\r\n        const message = this.chat.getMessage(mid);\r\n        return acc + (message?.message ? message.message + '\\n' : '');\r\n      }, '').trim();\r\n      copyTextToClipboard(str);\r\n    } else {\r\n      document.execCommand('copy');\r\n      //cancelSelection();\r\n    }\r\n  };\r\n\r\n  private onCopyAnchorLinkClick = () => {\r\n    copyTextToClipboard((this.target as HTMLAnchorElement).href);\r\n  };\r\n\r\n  private onCopyLinkClick = () => {\r\n    const username = this.appPeersManager.getPeerUsername(this.peerId);\r\n    const msgId = this.appMessagesManager.getServerMessageId(this.mid);\r\n    let url = 'https://t.me/';\r\n    let key: LangPackKey;\r\n    if(username) {\r\n      url += username + '/' + msgId;\r\n      key = 'LinkCopied';\r\n    } else {\r\n      url += 'c/' + Math.abs(this.peerId) + '/' + msgId;\r\n      key = 'LinkCopiedPrivateInfo';\r\n    }\r\n\r\n    toast(I18n.format(key, true));\r\n\r\n    copyTextToClipboard(url);\r\n  };\r\n\r\n  private onPinClick = () => {\r\n    new PopupPinMessage(this.peerId, this.mid);\r\n  };\r\n\r\n  private onUnpinClick = () => {\r\n    new PopupPinMessage(this.peerId, this.mid, true);\r\n  };\r\n\r\n  private onRetractVote = () => {\r\n    this.appPollsManager.sendVote(this.message, []);\r\n  };\r\n\r\n  private onStopPoll = () => {\r\n    this.appPollsManager.stopPoll(this.message);\r\n  };\r\n\r\n  private onForwardClick = () => {\r\n    if(this.chat.selection.isSelecting) {\r\n      this.chat.selection.selectionForwardBtn.click();\r\n    } else {\r\n      new PopupForward(this.peerId, this.isTargetAGroupedItem ? [this.mid] : this.chat.getMidsByMid(this.mid));\r\n    }\r\n  };\r\n\r\n  private onSelectClick = () => {\r\n    this.chat.selection.toggleByBubble(findUpClassName(this.target, 'grouped-item') || findUpClassName(this.target, 'bubble'));\r\n  };\r\n\r\n  private onClearSelectionClick = () => {\r\n    this.chat.selection.cancelSelection();\r\n  };\r\n\r\n  private onDeleteClick = () => {\r\n    if(this.chat.selection.isSelecting) {\r\n      this.chat.selection.selectionDeleteBtn.click();\r\n    } else {\r\n      new PopupDeleteMessages(this.peerId, this.isTargetAGroupedItem ? [this.mid] : this.chat.getMidsByMid(this.mid), this.chat.type);\r\n    }\r\n  };\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport App from \"../../config/app\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { validateInitObject } from \"../../helpers/object\";\r\nimport I18n from \"../langPack\";\r\nimport { isObject } from \"../mtproto/bin_utils\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport rootScope from \"../rootScope\";\r\nimport SearchIndex from \"../searchIndex\";\r\nimport stateStorage from \"../stateStorage\";\r\nimport appStateManager from \"./appStateManager\";\r\n\r\ntype EmojiLangPack = {\r\n  keywords: {\r\n    [keyword: string]: string[],\r\n  },\r\n  version: number,\r\n  langCode: string\r\n};\r\n\r\nconst EMOJI_LANG_PACK: EmojiLangPack = {\r\n  keywords: {},\r\n  version: 0,\r\n  langCode: App.langPackCode\r\n};\r\n\r\nconst RECENT_MAX_LENGTH = 36;\r\n\r\nexport class AppEmojiManager {\r\n  private static POPULAR_EMOJI = [\"😂\", \"😘\", \"❤️\", \"😍\", \"😊\", \"😁\", \"👍\", \"☺️\", \"😔\", \"😄\", \"😭\", \"💋\", \"😒\", \"😳\", \"😜\", \"🙈\", \"😉\", \"😃\", \"😢\", \"😝\", \"😱\", \"😡\", \"😏\", \"😞\", \"😅\", \"😚\", \"🙊\", \"😌\", \"😀\", \"😋\", \"😆\", \"👌\", \"😐\", \"😕\"];\r\n  private keywordLangPacks: {\r\n    [langCode: string]: EmojiLangPack\r\n  } = {};\r\n\r\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\r\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\r\n\r\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\r\n\r\n  private recent: string[];\r\n  private getRecentEmojisPromise: Promise<AppEmojiManager['recent']>;\r\n\r\n  /* public getPopularEmoji() {\r\n    return stateStorage.get('emojis_popular').then(popEmojis => {\r\n      var result = []\r\n      if (popEmojis && popEmojis.length) {\r\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\r\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\r\n        }\r\n        callback(result)\r\n        return\r\n      }\r\n\r\n      return stateStorage.get('emojis_recent').then(recentEmojis => {\r\n        recentEmojis = recentEmojis || popular || []\r\n        var shortcut\r\n        var code\r\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\r\n          shortcut = recentEmojis[i]\r\n          if (Array.isArray(shortcut)) {\r\n            shortcut = shortcut[0]\r\n          }\r\n          if (shortcut && typeof shortcut === 'string') {\r\n            if (shortcut.charAt(0) == ':') {\r\n              shortcut = shortcut.substr(1, shortcut.length - 2)\r\n            }\r\n            if (code = shortcuts[shortcut]) {\r\n              result.push({code: code, rate: 1})\r\n            }\r\n          }\r\n        }\r\n        callback(result)\r\n      });\r\n    });\r\n  }\r\n\r\n  function pushPopularEmoji (code) {\r\n    getPopularEmoji(function (popularEmoji) {\r\n      var exists = false\r\n      var count = popularEmoji.length\r\n      var result = []\r\n      for (var i = 0; i < count; i++) {\r\n        if (popularEmoji[i].code == code) {\r\n          exists = true\r\n          popularEmoji[i].rate++\r\n        }\r\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\r\n      }\r\n      if (exists) {\r\n        result.sort(function (a, b) {\r\n          return b[1] - a[1]\r\n        })\r\n      } else {\r\n        if (result.length > 41) {\r\n          result = result.slice(0, 41)\r\n        }\r\n        result.push([code, 1])\r\n      }\r\n      ConfigStorage.set({emojis_popular: result})\r\n    })\r\n  } */\r\n\r\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\r\n    const promise = this.getKeywordsPromises[langCode];\r\n    if(promise) {\r\n      return promise;\r\n    }\r\n\r\n    const storageKey: any = 'emojiKeywords_' + langCode;\r\n    return this.getKeywordsPromises[langCode] = stateStorage.get(storageKey).then((pack: EmojiLangPack) => {\r\n      if(!isObject(pack)) {\r\n        pack = {} as any;\r\n      }\r\n\r\n      validateInitObject(EMOJI_LANG_PACK, pack);\r\n\r\n      // important\r\n      pack.langCode = langCode;\r\n      this.keywordLangPacks[langCode] = pack;\r\n\r\n      return apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\r\n        lang_code: pack.langCode,\r\n        from_version: pack.version\r\n      }).then((keywordsDifference) => {\r\n        pack.version = keywordsDifference.version;\r\n        \r\n        const packKeywords = pack.keywords;\r\n        const keywords = keywordsDifference.keywords;\r\n        for(let i = 0, length = keywords.length; i < length; ++i) {\r\n          const {keyword, emoticons} = keywords[i];\r\n          packKeywords[keyword] = emoticons;\r\n        }\r\n\r\n        stateStorage.set({\r\n          [storageKey]: pack\r\n        });\r\n\r\n        return pack;\r\n      }, () => {\r\n        return pack;\r\n      });\r\n    });\r\n  }\r\n\r\n  public getBothEmojiKeywords() {\r\n    const promises: Promise<any>[] = [\r\n      this.getEmojiKeywords()\r\n    ];\r\n\r\n    if(I18n.lastRequestedLangCode !== App.langPackCode) {\r\n      promises.push(this.getEmojiKeywords(I18n.lastRequestedLangCode));\r\n    }\r\n\r\n    if(!this.recent) {\r\n      promises.push(this.getRecentEmojis());\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  public indexEmojis() {\r\n    if(!this.index) {\r\n      this.index = new SearchIndex(false, false, 2);\r\n    }\r\n\r\n    for(const langCode in this.keywordLangPacks) {\r\n      if(this.indexedLangPacks[langCode]) {\r\n        continue;\r\n      }\r\n\r\n      const pack = this.keywordLangPacks[langCode];\r\n      const keywords = pack.keywords;\r\n\r\n      for(const keyword in keywords) {\r\n        const emoticons = keywords[keyword];\r\n        this.index.indexObject(emoticons, keyword);\r\n      }\r\n\r\n      this.indexedLangPacks[langCode] = true;\r\n    }\r\n  }\r\n\r\n  public searchEmojis(q: string) {\r\n    this.indexEmojis();\r\n\r\n    q = q.toLowerCase().replace(/_/g, ' ');\r\n    \r\n    //const perf = performance.now();\r\n    let emojis: Array<string>;\r\n    if(q.trim()) {\r\n      const set = this.index.search(q);\r\n      emojis = Array.from(set).reduce((acc, v) => acc.concat(v), []);\r\n    } else {\r\n      emojis = this.recent.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\r\n    }\r\n\r\n    emojis = Array.from(new Set(emojis));\r\n    //console.log('searchEmojis', q, 'time', performance.now() - perf);\r\n\r\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\r\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\r\n        emojis[i] += '\\ufe0f';\r\n      }\r\n    } */\r\n\r\n    return emojis;\r\n  }\r\n\r\n  public getRecentEmojis() {\r\n    if(this.getRecentEmojisPromise) return this.getRecentEmojisPromise;\r\n    return this.getRecentEmojisPromise = appStateManager.getState().then(state => {\r\n      return this.recent = Array.isArray(state.recentEmoji) ? state.recentEmoji : [];\r\n    });\r\n  }\r\n\r\n  public pushRecentEmoji(emoji: string) {\r\n    this.getRecentEmojis().then(recent => {\r\n      recent.findAndSplice(e => e === emoji);\r\n      recent.unshift(emoji);\r\n      if(recent.length > RECENT_MAX_LENGTH) {\r\n        recent.length = RECENT_MAX_LENGTH;\r\n      }\r\n\r\n      appStateManager.pushToState('recentEmoji', recent);\r\n      rootScope.dispatchEvent('emoji_recent', emoji);\r\n    });\r\n  }\r\n}\r\n\r\nconst appEmojiManager = new AppEmojiManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appEmojiManager = appEmojiManager);\r\nexport default appEmojiManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport emoticonsDropdown, { EmoticonsDropdown, EmoticonsTab } from \"..\";\r\nimport { cancelEvent } from \"../../../helpers/dom/cancelEvent\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport { fastRaf, pause } from \"../../../helpers/schedulers\";\r\nimport { isTouchSupported } from \"../../../helpers/touchSupport\";\r\nimport appEmojiManager from \"../../../lib/appManagers/appEmojiManager\";\r\nimport appImManager from \"../../../lib/appManagers/appImManager\";\r\nimport Config from \"../../../lib/config\";\r\nimport { i18n, LangPackKey } from \"../../../lib/langPack\";\r\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport { emojiFromCodePoints } from \"../../../vendor/emoji\";\r\nimport { putPreloader } from \"../../misc\";\r\nimport Scrollable from \"../../scrollable\";\r\nimport StickyIntersector from \"../../stickyIntersector\";\r\n\r\nconst loadedURLs: Set<string> = new Set();\r\nexport function appendEmoji(emoji: string, container: HTMLElement, prepend = false, unify = false) {\r\n  //const emoji = details.unified;\r\n  //const emoji = (details.unified as string).split('-')\r\n  //.reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\r\n\r\n  const spanEmoji = document.createElement('span');\r\n  spanEmoji.classList.add('super-emoji');\r\n\r\n  let kek: string;\r\n  if(unify && !RichTextProcessor.emojiSupported) {\r\n    kek = RichTextProcessor.wrapSingleEmoji(emoji);\r\n  } else {\r\n    emoji = RichTextProcessor.fixEmoji(emoji);\r\n    kek = RichTextProcessor.wrapEmojiText(emoji);\r\n  }\r\n\r\n  /* if(!kek.includes('emoji')) {\r\n    console.log(emoji, kek, spanEmoji, emoji.length, new TextEncoder().encode(emoji), emojiUnicode(emoji));\r\n    return;\r\n  } */\r\n\r\n  //console.log(kek);\r\n\r\n  spanEmoji.innerHTML = kek;\r\n\r\n  if(spanEmoji.children.length > 1) {\r\n    const first = spanEmoji.firstElementChild;\r\n    spanEmoji.innerHTML = '';\r\n    spanEmoji.append(first);\r\n  }\r\n\r\n  if(spanEmoji.firstElementChild && !RichTextProcessor.emojiSupported) {\r\n    const image = spanEmoji.firstElementChild as HTMLImageElement;\r\n    \r\n    const url = image.src;\r\n    if(!loadedURLs.has(url)) {\r\n      image.setAttribute('loading', 'lazy');\r\n      const placeholder = document.createElement('span');\r\n      placeholder.classList.add('emoji-placeholder');\r\n\r\n      if(rootScope.settings.animationsEnabled) {\r\n        image.style.opacity = '0';\r\n        placeholder.style.opacity = '1';\r\n      }\r\n\r\n      image.addEventListener('load', () => {\r\n        fastRaf(() => {\r\n          if(rootScope.settings.animationsEnabled) {\r\n            image.style.opacity = '';\r\n            placeholder.style.opacity = '';\r\n          }\r\n\r\n          spanEmoji.classList.remove('empty');\r\n\r\n          loadedURLs.add(url);\r\n        });\r\n      }, {once: true});\r\n\r\n      spanEmoji.append(placeholder);\r\n    }\r\n  }\r\n\r\n  //spanEmoji = spanEmoji.firstElementChild as HTMLSpanElement;\r\n  //spanEmoji.setAttribute('emoji', emoji);\r\n  if(prepend) container.prepend(spanEmoji);\r\n  else container.appendChild(spanEmoji);\r\n}\r\n\r\nexport function getEmojiFromElement(element: HTMLElement) {\r\n  if(!findUpClassName(element, 'super-emoji')) return '';\r\n\r\n  if(element.nodeType === 3) return element.nodeValue;\r\n  if(element.tagName === 'SPAN' && !element.classList.contains('emoji') && element.firstElementChild) {\r\n    element = element.firstElementChild as HTMLElement;\r\n  }\r\n  \r\n  return element.getAttribute('alt') || element.innerText;\r\n}\r\n\r\nexport default class EmojiTab implements EmoticonsTab {\r\n  private content: HTMLElement;\r\n\r\n  private recentItemsDiv: HTMLElement;\r\n\r\n  private scroll: Scrollable;\r\n  private stickyIntersector: StickyIntersector;\r\n\r\n  init() {\r\n    this.content = document.getElementById('content-emoji') as HTMLDivElement;\r\n\r\n    const categories: LangPackKey[] = [\r\n      'Emoji.SmilesAndPeople', \r\n      'Emoji.AnimalsAndNature', \r\n      'Emoji.FoodAndDrink', \r\n      'Emoji.TravelAndPlaces', \r\n      'Emoji.ActivityAndSport', \r\n      'Emoji.Objects', \r\n      /* 'Emoji.Symbols',  */\r\n      'Emoji.Flags', \r\n      'Skin Tones' as any\r\n    ];\r\n    const divs: {\r\n      [category in LangPackKey]?: HTMLDivElement\r\n    } = {};\r\n\r\n    const sorted: Map<LangPackKey, string[]> = new Map([\r\n      [\r\n        'Emoji.Recent',\r\n        []\r\n      ]\r\n    ]);\r\n\r\n    for(const emoji in Config.Emoji) {\r\n      const details = Config.Emoji[emoji];\r\n      const i = '' + details;\r\n      const category = categories[+i[0] - 1];\r\n      if(!category) continue; // maybe it's skin tones\r\n\r\n      let s = sorted.get(category);\r\n      if(!s) {\r\n        s = [];\r\n        sorted.set(category, s);\r\n      }\r\n      \r\n      s[+i.slice(1) || 0] = emoji;\r\n    }\r\n\r\n    //console.log('emoticons sorted:', sorted);\r\n\r\n    //Object.keys(sorted).forEach(c => sorted[c].sort((a, b) => a - b));\r\n\r\n    sorted.delete(categories.pop());\r\n\r\n    //console.time('emojiParse');\r\n    sorted.forEach((emojis, category) => {\r\n      const div = document.createElement('div');\r\n      div.classList.add('emoji-category');\r\n\r\n      const titleDiv = document.createElement('div');\r\n      titleDiv.classList.add('category-title');\r\n      titleDiv.append(i18n(category));\r\n\r\n      const itemsDiv = document.createElement('div');\r\n      itemsDiv.classList.add('super-emojis');\r\n\r\n      div.append(titleDiv, itemsDiv);\r\n\r\n      emojis.forEach(unified => {\r\n        /* if(emojiUnicode(emoji) === '1f481-200d-2642') {\r\n          console.log('append emoji', emoji, emojiUnicode(emoji));\r\n        } */\r\n\r\n        let emoji = emojiFromCodePoints(unified);\r\n        //if(emoji.includes('🕵')) {\r\n          //console.log('toCodePoints', toCodePoints(emoji));\r\n          //emoji = emoji.replace(/(\\u200d[\\u2640\\u2642\\u2695])(?!\\ufe0f)/, '\\ufe0f$1');\r\n          // const zwjIndex = emoji.indexOf('\\u200d');\r\n          // if(zwjIndex !== -1 && !emoji.includes('\\ufe0f')) {\r\n          //   /* if(zwjIndex !== (emoji.length - 1)) {\r\n          //     emoji = emoji.replace(/(\\u200d)/g, '\\ufe0f$1');\r\n          //   } */\r\n\r\n          //   emoji += '\\ufe0f';\r\n          //   //emoji += '\\ufe0f';\r\n          // }\r\n\r\n          //debugger;\r\n        //}\r\n\r\n        appendEmoji(emoji/* .replace(/[\\ufe0f\\u2640\\u2642\\u2695]/g, '') */, itemsDiv, false/* , false */);\r\n\r\n        /* if(category === 'Smileys & Emotion') {\r\n          console.log('appended emoji', emoji, itemsDiv.children[itemsDiv.childElementCount - 1].innerHTML, emojiUnicode(emoji));\r\n        } */\r\n      });\r\n\r\n      divs[category] = div;\r\n    });\r\n\r\n    //console.timeEnd('emojiParse');\r\n\r\n    const menu = this.content.previousElementSibling as HTMLElement;\r\n    const emojiScroll = this.scroll = new Scrollable(this.content, 'EMOJI');\r\n\r\n    //emojiScroll.setVirtualContainer(emojiScroll.container);\r\n\r\n    const preloader = putPreloader(this.content, true);\r\n\r\n    Promise.all([\r\n      pause(200),\r\n      appEmojiManager.getRecentEmojis()\r\n    ]).then(([_, recent]) => {\r\n      preloader.remove();\r\n\r\n      this.recentItemsDiv = divs['Emoji.Recent'].querySelector('.super-emojis');\r\n      for(const emoji of recent) {\r\n        appendEmoji(emoji, this.recentItemsDiv);\r\n      }\r\n\r\n      this.recentItemsDiv.parentElement.classList.toggle('hide', !this.recentItemsDiv.childElementCount);\r\n\r\n      categories.unshift('Emoji.Recent');\r\n      categories.map(category => {\r\n        const div = divs[category];\r\n  \r\n        if(!div) {\r\n          console.error('no div by category:', category);\r\n        }\r\n  \r\n        emojiScroll.container.append(div);\r\n        this.stickyIntersector.observeStickyHeaderChanges(div);\r\n        return div;\r\n      });\r\n    });\r\n\r\n    this.content.addEventListener('click', this.onContentClick);\r\n    this.stickyIntersector = EmoticonsDropdown.menuOnClick(menu, emojiScroll);\r\n    this.init = null;\r\n\r\n    rootScope.addEventListener('emoji_recent', (emoji) => {\r\n      const children = Array.from(this.recentItemsDiv.children) as HTMLElement[];\r\n      for(let i = 0, length = children.length; i < length; ++i) {\r\n        const el = children[i];\r\n        const _emoji = getEmojiFromElement(el);\r\n        if(emoji === _emoji) {\r\n          if(i === 0) {\r\n            return;\r\n          }\r\n\r\n          el.remove();\r\n        }\r\n      }\r\n\r\n      appendEmoji(emoji, this.recentItemsDiv, true);\r\n      this.recentItemsDiv.parentElement.classList.remove('hide');\r\n    });\r\n  }\r\n\r\n  onContentClick = (e: MouseEvent) => {\r\n    cancelEvent(e);\r\n    \r\n    const emoji = getEmojiFromElement(e.target as HTMLElement);\r\n    if(!emoji) {\r\n      return;\r\n    }\r\n\r\n    const messageInput = appImManager.chat.input.messageInput;\r\n    let inputHTML = messageInput.innerHTML;\r\n\r\n    const html = RichTextProcessor.wrapEmojiText(emoji);\r\n    let inserted = false;\r\n    if(window.getSelection) {\r\n      const savedRange = isTouchSupported ? undefined : emoticonsDropdown.getSavedRange();\r\n      let sel = window.getSelection();\r\n      if(savedRange) {\r\n        sel.removeAllRanges();\r\n        sel.addRange(savedRange);\r\n      }\r\n\r\n      if(sel.getRangeAt && sel.rangeCount) {\r\n        var el = document.createElement('div');\r\n        el.innerHTML = html;\r\n        var node = el.firstChild;\r\n        var range = sel.getRangeAt(0);\r\n        range.deleteContents();\r\n        //range.insertNode(document.createTextNode(' '));\r\n        range.insertNode(node);\r\n        range.setStart(node, 0);\r\n        inserted = true;\r\n  \r\n        setTimeout(() => {\r\n          range = document.createRange();\r\n          range.setStartAfter(node);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    if(!inserted || messageInput.innerHTML === inputHTML) {\r\n      messageInput.insertAdjacentHTML('beforeend', html);\r\n    }\r\n    \r\n    // Append to input\r\n    const event = new Event('input', {bubbles: true, cancelable: true});\r\n    messageInput.dispatchEvent(event);\r\n  };\r\n\r\n  onClose() {\r\n\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDocsManager, {MyDocument} from \"../lib/appManagers/appDocsManager\";\r\nimport { wrapVideo } from \"./wrappers\";\r\nimport { LazyLoadQueueRepeat2 } from \"./lazyLoadQueue\";\r\nimport animationIntersector from \"./animationIntersector\";\r\nimport Scrollable from \"./scrollable\";\r\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\r\nimport renderImageFromUrl from \"../helpers/dom/renderImageFromUrl\";\r\nimport calcImageInBox from \"../helpers/calcImageInBox\";\r\n\r\nconst width = 400;\r\nconst maxSingleWidth = width - 100;\r\nconst height = 100;\r\n\r\nexport default class GifsMasonry {\r\n  public lazyLoadQueue: LazyLoadQueueRepeat2;\r\n  private scrollPromise: CancellablePromise<void> = Promise.resolve();\r\n\r\n  constructor(private element: HTMLElement, private group: string, private scrollable: Scrollable) {\r\n    this.lazyLoadQueue = new LazyLoadQueueRepeat2(undefined, (target, visible) => {\r\n      if(visible) {\r\n        this.processVisibleDiv(target);\r\n      } else {\r\n        this.processInvisibleDiv(target);\r\n      }\r\n    });\r\n\r\n    /* setInterval(() => {\r\n      // @ts-ignore\r\n      const players = animationIntersector.byGroups[group];\r\n\r\n      if(players) {\r\n        console.log(`GIFS RENDERED IN ${group}:`, players.length, players.filter(p => !p.animation.paused).length, this.lazyLoadQueue.intersector.getVisible().length);\r\n      }\r\n    }, .25e3); */\r\n\r\n    let timeout = 0;\r\n    // memory leak\r\n    scrollable.container.addEventListener('scroll', () => {\r\n      if(timeout) {\r\n        clearTimeout(timeout);\r\n      } else {\r\n        this.scrollPromise = deferredPromise<void>();\r\n        //animationIntersector.checkAnimations(true, group);\r\n      }\r\n\r\n      timeout = window.setTimeout(() => {\r\n        timeout = 0;\r\n        this.scrollPromise.resolve();\r\n        //animationIntersector.checkAnimations(false, group);\r\n      }, 150);\r\n    });\r\n  }\r\n\r\n  processVisibleDiv = (div: HTMLElement) => {\r\n    const video = div.querySelector('video');\r\n    if(video) {\r\n      return;\r\n    }\r\n\r\n    //console.log('processVisibleDiv');\r\n\r\n    const load = () => {\r\n      const docId = div.dataset.docId;\r\n      const doc = appDocsManager.getDoc(docId);\r\n\r\n      const promise = this.scrollPromise.then(() => {\r\n        const res = wrapVideo({\r\n          doc,\r\n          container: div as HTMLDivElement,\r\n          lazyLoadQueue: null,\r\n          //lazyLoadQueue: EmoticonsDropdown.lazyLoadQueue,\r\n          group: this.group,\r\n          noInfo: true,\r\n        });\r\n    \r\n        const promise = res.loadPromise;\r\n        promise.finally(() => {\r\n          const video = div.querySelector('video');\r\n\r\n          div.style.opacity = '';\r\n          const img = div.querySelector('img');\r\n          img && img.classList.add('hide');\r\n\r\n          if(video && !video.parentElement) {\r\n            setTimeout(() => {\r\n              video.src = '';\r\n              video.load();\r\n              const animations = animationIntersector.getAnimations(video);\r\n              animations.forEach(item => {\r\n                animationIntersector.checkAnimation(item, true, true);\r\n              });\r\n            }, 0);\r\n          }\r\n\r\n          //clearTimeout(timeout);\r\n          if(!this.lazyLoadQueue.intersector.isVisible(div)) {\r\n            this.processInvisibleDiv(div);\r\n          }\r\n        });\r\n\r\n        return promise;\r\n      });\r\n\r\n      /* let timeout = window.setTimeout(() => {\r\n        console.error('processVisibleDiv timeout', div, doc);\r\n      }, 1e3); */\r\n\r\n      return promise;\r\n    };\r\n\r\n    //return load();\r\n    \r\n    this.lazyLoadQueue.push({div, load});\r\n  };\r\n\r\n  processInvisibleDiv = async(div: HTMLElement) => {\r\n    return this.scrollPromise.then(async() => {\r\n      //return;\r\n\r\n      if(this.lazyLoadQueue.intersector.isVisible(div)) {\r\n        return;\r\n      }\r\n\r\n      const video = div.querySelector('video');\r\n      const img = div.querySelector('img');\r\n  \r\n      if(img) {\r\n        img && img.classList.remove('hide');\r\n  \r\n        await new Promise((resolve) => {\r\n          window.requestAnimationFrame(() => window.requestAnimationFrame(resolve));\r\n        });\r\n      }\r\n\r\n      if(this.lazyLoadQueue.intersector.isVisible(div)) {\r\n        return;\r\n      }\r\n  \r\n      if(video) {\r\n        video.remove();\r\n        video.src = '';\r\n        video.load();\r\n        const animations = animationIntersector.getAnimations(video);\r\n        animations.forEach(item => {\r\n          animationIntersector.checkAnimation(item, true, true);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  public add(doc: MyDocument) {\r\n    let gifWidth = doc.w;\r\n    let gifHeight = doc.h;\r\n    if(gifHeight < height) {\r\n      gifWidth = height / gifHeight * gifWidth;\r\n      gifHeight = height;\r\n    }\r\n\r\n    const willUseWidth = Math.min(maxSingleWidth, width, gifWidth);\r\n    const size = calcImageInBox(gifWidth, gifHeight, willUseWidth, height);\r\n\r\n    /* wastedWidth += w;\r\n\r\n    if(wastedWidth === width || h < height) {\r\n      wastedWidth = 0;\r\n      console.log('completed line', i, line);\r\n      line = [];\r\n      continue;\r\n    }\r\n\r\n    line.push(gif); */\r\n\r\n    //console.log('gif:', gif, w, h);\r\n\r\n    const div = document.createElement('div');\r\n    div.classList.add('gif', 'fade-in-transition');\r\n    div.style.width = size.width + 'px';\r\n    div.style.opacity = '0';\r\n    //div.style.height = h + 'px';\r\n    div.dataset.docId = doc.id;\r\n\r\n    this.element.append(div);\r\n\r\n    //this.lazyLoadQueue.observe({div, load: this.processVisibleDiv});\r\n    this.lazyLoadQueue.observe(div);\r\n\r\n    //let preloader = new ProgressivePreloader(div);\r\n\r\n    const gotThumb = appDocsManager.getThumb(doc, false);\r\n\r\n    const willBeAPoster = !!gotThumb;\r\n    let img: HTMLImageElement;\r\n    if(willBeAPoster) {\r\n      img = new Image();\r\n\r\n      if(!gotThumb.cacheContext.url) {\r\n        gotThumb.promise.then(() => {\r\n          img.src = gotThumb.cacheContext.url;\r\n        });\r\n      }\r\n    }\r\n\r\n    const afterRender = () => {\r\n      if(img) {\r\n        div.append(img);\r\n        div.style.opacity = '';\r\n      }\r\n    };\r\n\r\n    (gotThumb?.cacheContext?.url ? renderImageFromUrl(img, gotThumb.cacheContext.url, afterRender) : afterRender());\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport emoticonsDropdown, { EmoticonsDropdown, EmoticonsTab, EMOTICONSSTICKERGROUP } from \"..\";\r\nimport GifsMasonry from \"../../gifsMasonry\";\r\nimport Scrollable from \"../../scrollable\";\r\nimport { putPreloader } from \"../../misc\";\r\nimport apiManager from \"../../../lib/mtproto/mtprotoworker\";\r\nimport appDocsManager, {MyDocument} from \"../../../lib/appManagers/appDocsManager\";\r\n\r\nexport default class GifsTab implements EmoticonsTab {\r\n  private content: HTMLElement;\r\n\r\n  init() {\r\n    this.content = document.getElementById('content-gifs');\r\n    const gifsContainer = this.content.firstElementChild as HTMLDivElement;\r\n    gifsContainer.addEventListener('click', EmoticonsDropdown.onMediaClick);\r\n\r\n    const scroll = new Scrollable(this.content, 'GIFS');\r\n    const masonry = new GifsMasonry(gifsContainer, EMOTICONSSTICKERGROUP, scroll);\r\n    const preloader = putPreloader(this.content, true);\r\n\r\n    apiManager.invokeApi('messages.getSavedGifs', {hash: 0}).then((res) => {\r\n      //console.log('getSavedGifs res:', res);\r\n\r\n      if(res._ === 'messages.savedGifs') {\r\n        res.gifs.forEach((doc, idx) => {\r\n          res.gifs[idx] = doc = appDocsManager.saveDoc(doc);\r\n          //if(doc._ === 'documentEmpty') return;\r\n          masonry.add(doc as MyDocument);\r\n        });\r\n      }\r\n\r\n      preloader.remove();\r\n    });\r\n\r\n    emoticonsDropdown.addLazyLoadQueueRepeat(masonry.lazyLoadQueue, masonry.processInvisibleDiv);\r\n\r\n    this.init = null;\r\n  }\r\n\r\n  onClose() {\r\n\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport emoticonsDropdown, { EmoticonsDropdown, EMOTICONSSTICKERGROUP, EmoticonsTab } from \"..\";\r\nimport { readBlobAsText } from \"../../../helpers/blob\";\r\nimport renderImageFromUrl from \"../../../helpers/dom/renderImageFromUrl\";\r\nimport mediaSizes from \"../../../helpers/mediaSizes\";\r\nimport { MessagesAllStickers, StickerSet } from \"../../../layer\";\r\nimport appDocsManager, { MyDocument } from \"../../../lib/appManagers/appDocsManager\";\r\nimport appDownloadManager from \"../../../lib/appManagers/appDownloadManager\";\r\nimport appStickersManager from \"../../../lib/appManagers/appStickersManager\";\r\nimport { i18n } from \"../../../lib/langPack\";\r\nimport lottieLoader from \"../../../lib/lottieLoader\";\r\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\r\nimport rootScope from \"../../../lib/rootScope\";\r\nimport animationIntersector from \"../../animationIntersector\";\r\nimport LazyLoadQueue, { LazyLoadQueueRepeat } from \"../../lazyLoadQueue\";\r\nimport { putPreloader } from \"../../misc\";\r\nimport Scrollable, { ScrollableX } from \"../../scrollable\";\r\nimport StickyIntersector from \"../../stickyIntersector\";\r\nimport { wrapSticker, wrapStickerSetThumb } from \"../../wrappers\";\r\n\r\nexport class SuperStickerRenderer {\r\n  public lazyLoadQueue: LazyLoadQueueRepeat;\r\n  private animatedDivs: Set<HTMLDivElement> = new Set();\r\n\r\n  constructor(private regularLazyLoadQueue: LazyLoadQueue, private group: string) {\r\n    this.lazyLoadQueue = new LazyLoadQueueRepeat(undefined, (target, visible) => {\r\n      if(!visible) {\r\n        this.processInvisibleDiv(target as HTMLDivElement);\r\n      }\r\n    });\r\n  }\r\n\r\n  public renderSticker(doc: MyDocument, div?: HTMLDivElement, loadPromises?: Promise<any>[]) {\r\n    if(!div) {\r\n      div = document.createElement('div');\r\n      div.classList.add('grid-item', 'super-sticker');\r\n\r\n      if(doc.sticker === 2) {\r\n        this.animatedDivs.add(div);\r\n\r\n        this.lazyLoadQueue.observe({\r\n          div, \r\n          load: this.processVisibleDiv\r\n        });\r\n      }\r\n    }\r\n\r\n    // * This will wrap only a thumb\r\n    wrapSticker({\r\n      doc, \r\n      div,\r\n      lazyLoadQueue: this.regularLazyLoadQueue, \r\n      group: this.group, \r\n      onlyThumb: doc.sticker === 2,\r\n      loadPromises\r\n    });\r\n\r\n    return div;\r\n  }\r\n\r\n  private checkAnimationContainer = (div: HTMLElement, visible: boolean) => {\r\n    //console.error('checkAnimationContainer', div, visible);\r\n    const players = animationIntersector.getAnimations(div);\r\n    players.forEach(player => {\r\n      if(!visible) {\r\n        animationIntersector.checkAnimation(player, true, true);\r\n      } else {\r\n        animationIntersector.checkAnimation(player, false);\r\n      }\r\n    });\r\n  };\r\n\r\n  private processVisibleDiv = (div: HTMLElement) => {\r\n    const docId = div.dataset.docId;\r\n    const doc = appDocsManager.getDoc(docId);\r\n    \r\n    const size = mediaSizes.active.esgSticker.width;\r\n\r\n    //console.log('processVisibleDiv:', div);\r\n\r\n    const promise = wrapSticker({\r\n      doc, \r\n      div: div as HTMLDivElement,\r\n      width: size,\r\n      height: size,\r\n      lazyLoadQueue: null, \r\n      group: this.group, \r\n      onlyThumb: false,\r\n      play: true,\r\n      loop: true\r\n    });\r\n\r\n    promise.then(() => {\r\n      //clearTimeout(timeout);\r\n      this.checkAnimationContainer(div, this.lazyLoadQueue.intersector.isVisible(div));\r\n    });\r\n\r\n    /* let timeout = window.setTimeout(() => {\r\n      console.error('processVisibleDiv timeout', div, doc);\r\n    }, 1e3); */\r\n\r\n    return promise;\r\n  };\r\n\r\n  public processInvisibleDiv = (div: HTMLElement) => {\r\n    const docId = div.dataset.docId;\r\n    const doc = appDocsManager.getDoc(docId);\r\n\r\n    //console.log('STICKER INvisible:', /* div,  */docId);\r\n\r\n    this.checkAnimationContainer(div, false);\r\n\r\n    div.innerHTML = '';\r\n    this.renderSticker(doc, div as HTMLDivElement);\r\n  };\r\n}\r\n\r\nexport default class StickersTab implements EmoticonsTab {\r\n  private content: HTMLElement;\r\n  private stickersDiv: HTMLElement;\r\n\r\n  private stickerSets: {[id: string]: {\r\n    stickers: HTMLElement,\r\n    tab: HTMLElement\r\n  }} = {};\r\n\r\n  private recentDiv: HTMLElement;\r\n  private recentStickers: MyDocument[] = [];\r\n\r\n  private scroll: Scrollable;\r\n\r\n  private menu: HTMLElement;\r\n  \r\n  private mounted = false;\r\n\r\n  private queueCategoryPush: {element: HTMLElement, prepend: boolean}[] = [];\r\n\r\n  private stickyIntersector: StickyIntersector;\r\n\r\n  private superStickerRenderer: SuperStickerRenderer;\r\n\r\n  categoryPush(categoryDiv: HTMLElement, categoryTitle: string = '', promise: Promise<MyDocument[]>, prepend?: boolean) {\r\n    //if((docs.length % 5) !== 0) categoryDiv.classList.add('not-full');\r\n\r\n    const itemsDiv = document.createElement('div');\r\n    itemsDiv.classList.add('category-items', 'super-stickers');\r\n\r\n    const titleDiv = document.createElement('div');\r\n    titleDiv.classList.add('category-title');\r\n\r\n    if(categoryTitle) {\r\n      titleDiv.innerHTML = categoryTitle;\r\n    }\r\n\r\n    categoryDiv.append(titleDiv, itemsDiv);\r\n\r\n    this.stickyIntersector.observeStickyHeaderChanges(categoryDiv);\r\n\r\n    this.queueCategoryPush.push({element: categoryDiv, prepend});\r\n\r\n    promise.then(documents => {\r\n      documents.forEach(doc => {\r\n        //if(doc._ === 'documentEmpty') return;\r\n        itemsDiv.append(this.superStickerRenderer.renderSticker(doc));\r\n      });\r\n\r\n      if(this.queueCategoryPush.length) {\r\n        this.queueCategoryPush.forEach(({element, prepend}) => {\r\n          if(prepend) {\r\n            if(this.recentDiv.parentElement) {\r\n              this.stickersDiv.prepend(element);\r\n              this.stickersDiv.prepend(this.recentDiv);\r\n            } else {\r\n              this.stickersDiv.prepend(element);\r\n            }\r\n          } else this.stickersDiv.append(element);\r\n        });\r\n\r\n        this.queueCategoryPush.length = 0;\r\n      }\r\n    });\r\n\r\n    return {titleDiv};\r\n  }\r\n\r\n  async renderStickerSet(set: StickerSet.stickerSet, prepend = false) {\r\n    const categoryDiv = document.createElement('div');\r\n    categoryDiv.classList.add('sticker-category');\r\n\r\n    const button = document.createElement('button');\r\n    button.classList.add('btn-icon', 'menu-horizontal-div-item');\r\n\r\n    this.stickerSets[set.id] = {\r\n      stickers: categoryDiv,\r\n      tab: button\r\n    };\r\n\r\n    if(prepend) {\r\n      this.menu.insertBefore(button, this.menu.firstElementChild.nextSibling);\r\n    } else {\r\n      this.menu.append(button);\r\n    }\r\n\r\n    //stickersScroll.append(categoryDiv);\r\n\r\n    const promise = appStickersManager.getStickerSet(set);\r\n    this.categoryPush(categoryDiv, RichTextProcessor.wrapEmojiText(set.title), promise.then(stickerSet => stickerSet.documents as MyDocument[]), prepend);\r\n    const stickerSet = await promise;\r\n\r\n    //console.log('got stickerSet', stickerSet, li);\r\n    \r\n    wrapStickerSetThumb({\r\n      set,\r\n      container: button,\r\n      group: EMOTICONSSTICKERGROUP,\r\n      lazyLoadQueue: EmoticonsDropdown.lazyLoadQueue,\r\n      width: 32,\r\n      height: 32,\r\n      autoplay: false\r\n    });\r\n  }\r\n\r\n  init() {\r\n    this.content = document.getElementById('content-stickers');\r\n    //let stickersDiv = contentStickersDiv.querySelector('.os-content') as HTMLDivElement;\r\n\r\n    this.recentDiv = document.createElement('div');\r\n    this.recentDiv.classList.add('sticker-category');\r\n\r\n    let menuWrapper = this.content.previousElementSibling as HTMLDivElement;\r\n    this.menu = menuWrapper.firstElementChild as HTMLUListElement;\r\n\r\n    let menuScroll = new ScrollableX(menuWrapper);\r\n\r\n    this.stickersDiv = document.createElement('div');\r\n    this.stickersDiv.classList.add('stickers-categories');\r\n    this.content.append(this.stickersDiv);\r\n\r\n    /* stickersDiv.addEventListener('mouseover', (e) => {\r\n      let target = e.target as HTMLElement;\r\n\r\n      if(target.tagName === 'CANVAS') { // turn on sticker\r\n        let animation = lottieLoader.getAnimation(target.parentElement, EMOTICONSSTICKERGROUP);\r\n\r\n        if(animation) {\r\n          // @ts-ignore\r\n          if(animation.currentFrame === animation.totalFrames - 1) {\r\n            animation.goToAndPlay(0, true);\r\n          } else {\r\n            animation.play();\r\n          }\r\n        }\r\n      }\r\n    }); */\r\n\r\n    rootScope.addEventListener('stickers_installed', (e) => {\r\n      const set: StickerSet.stickerSet = e;\r\n      \r\n      if(!this.stickerSets[set.id] && this.mounted) {\r\n        this.renderStickerSet(set, true);\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('stickers_deleted', (e) => {\r\n      const set: StickerSet.stickerSet = e;\r\n      \r\n      if(this.stickerSets[set.id] && this.mounted) {\r\n        const elements = this.stickerSets[set.id];\r\n        elements.stickers.remove();\r\n        elements.tab.remove();\r\n        delete this.stickerSets[set.id];\r\n      }\r\n    });\r\n\r\n    this.stickersDiv.addEventListener('click', EmoticonsDropdown.onMediaClick);\r\n\r\n    this.scroll = new Scrollable(this.content, 'STICKERS');\r\n    this.scroll.setVirtualContainer(this.stickersDiv);\r\n\r\n    this.stickyIntersector = EmoticonsDropdown.menuOnClick(this.menu, this.scroll, menuScroll);\r\n\r\n    const preloader = putPreloader(this.content, true);\r\n\r\n    Promise.all([\r\n      appStickersManager.getRecentStickers().then(stickers => {\r\n        this.recentStickers = stickers.stickers.slice(0, 20) as MyDocument[];\r\n  \r\n        //stickersScroll.prepend(categoryDiv);\r\n\r\n        this.stickerSets['recent'] = {\r\n          stickers: this.recentDiv,\r\n          tab: this.menu.firstElementChild as HTMLElement\r\n        };\r\n\r\n        preloader.remove();\r\n        const {titleDiv} = this.categoryPush(this.recentDiv, '', Promise.resolve(this.recentStickers), true);\r\n        titleDiv.append(i18n('Stickers.Recent'));\r\n      }),\r\n\r\n      appStickersManager.getAllStickers().then((res) => {\r\n        preloader.remove();\r\n\r\n        for(let set of (res as MessagesAllStickers.messagesAllStickers).sets) {\r\n          this.renderStickerSet(set);\r\n        }\r\n      })\r\n    ]).finally(() => {\r\n      this.mounted = true;\r\n    });\r\n\r\n    this.superStickerRenderer = new SuperStickerRenderer(EmoticonsDropdown.lazyLoadQueue, EMOTICONSSTICKERGROUP);\r\n\r\n    emoticonsDropdown.addLazyLoadQueueRepeat(this.superStickerRenderer.lazyLoadQueue, this.superStickerRenderer.processInvisibleDiv);\r\n\r\n    /* setInterval(() => {\r\n      // @ts-ignore\r\n      const players = Object.values(lottieLoader.players).filter(p => p.width === 80);\r\n      \r\n      console.log('STICKERS RENDERED IN PANEL:', players.length, players.filter(p => !p.paused).length, this.superStickerRenderer.lazyLoadQueue.intersector.getVisible().length);\r\n    }, .25e3); */\r\n    \r\n\r\n    this.init = null;\r\n  }\r\n\r\n  pushRecentSticker(doc: MyDocument) {\r\n    if(!this.recentDiv?.parentElement) {\r\n      return;\r\n    }\r\n\r\n    let div = this.recentDiv.querySelector(`[data-doc-id=\"${doc.id}\"]`);\r\n    if(!div) {\r\n      div = this.superStickerRenderer.renderSticker(doc);\r\n    }\r\n\r\n    const items = this.recentDiv.querySelector('.category-items');\r\n    items.prepend(div);\r\n\r\n    if(items.childElementCount > 20) {\r\n      (Array.from(items.children) as HTMLElement[]).slice(20).forEach(el => el.remove());\r\n    }\r\n  }\r\n\r\n  onClose() {\r\n\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { toast } from \"../../components/toast\";\r\nimport { BotInlineResult } from \"../../layer\";\r\nimport appPeersManager from \"./appPeersManager\";\r\nimport apiManagerProxy from \"../mtproto/mtprotoworker\";\r\nimport { RichTextProcessor } from \"../richtextprocessor\";\r\nimport appDocsManager from \"./appDocsManager\";\r\nimport appPhotosManager from \"./appPhotosManager\";\r\nimport appUsersManager from \"./appUsersManager\";\r\nimport appMessagesManager from \"./appMessagesManager\";\r\n\r\nexport class AppInlineBotsManager {\r\n  private inlineResults: {[qId: string]: BotInlineResult} = {};\r\n\r\n  public getInlineResults(peerId: number, botId: number, query = '', offset = '', geo?: any) {\r\n    return apiManagerProxy.invokeApi('messages.getInlineBotResults', {\r\n      bot: appUsersManager.getUserInput(botId),\r\n      peer: appPeersManager.getInputPeerById(peerId),\r\n      query: query,\r\n      geo_point: (geo && {_: 'inputGeoPoint', lat: geo['lat'], long: geo['long']}) || undefined,\r\n      offset\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then(botResults => {\r\n      const queryId = botResults.query_id;\r\n      /* delete botResults._;\r\n      delete botResults.query_id; */\r\n      \r\n      /* if(botResults.switch_pm) {\r\n        botResults.switch_pm.rText = RichTextProcessor.wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\r\n      } */\r\n      \r\n      botResults.results.forEach(result => {\r\n        const qId = queryId + '_' + result.id;\r\n        /* result.qID = qID;\r\n        result.botID = botID;\r\n        \r\n        result.rTitle = RichTextProcessor.wrapRichText(result.title, {noLinebreaks: true, noLinks: true});\r\n        result.rDescription = RichTextProcessor.wrapRichText(result.description, {noLinebreaks: true, noLinks: true});\r\n        result.initials = ((result as botInlineResult).url || result.title || result.type || '').substr(0, 1); */\r\n\r\n        if(result._ === 'botInlineMediaResult') {\r\n          if(result.document) {\r\n            result.document = appDocsManager.saveDoc(result.document);\r\n          }\r\n          \r\n          if(result.photo) {\r\n            result.photo = appPhotosManager.savePhoto(result.photo);\r\n          }\r\n        }\r\n        \r\n        this.inlineResults[qId] = result;\r\n      });\r\n\r\n      return botResults;\r\n    });\r\n  }\r\n  \r\n  /* function getPopularBots () {\r\n    return Storage.get('inline_bots_popular').then(function (bots) {\r\n      var result = []\r\n      var i, len\r\n      var userId\r\n      if (bots && bots.length) {\r\n        var now = tsNow(true)\r\n        for (i = 0, len = bots.length; i < len; i++) {\r\n          if ((now - bots[i][3]) > 14 * 86400) {\r\n            continue\r\n          }\r\n          userId = bots[i][0]\r\n          if (!AppUsersManager.hasUser(userId)) {\r\n            AppUsersManager.saveApiUser(bots[i][1])\r\n          }\r\n          result.push({id: userId, rate: bots[i][2], date: bots[i][3]})\r\n        }\r\n      }\r\n      return result\r\n    })\r\n  }\r\n  \r\n  function pushPopularBot (id) {\r\n    getPopularBots().then(function (bots) {\r\n      var exists = false\r\n      var count = bots.length\r\n      var result = []\r\n      for (var i = 0; i < count; i++) {\r\n        if (bots[i].id === id) {\r\n          exists = true\r\n          bots[i].rate++\r\n          bots[i].date = tsNow(true)\r\n        }\r\n        var user = AppUsersManager.getUser(bots[i].id)\r\n        result.push([bots[i].id, user, bots[i].rate, bots[i].date])\r\n      }\r\n      if (exists) {\r\n        result.sort(function (a, b) {\r\n          return b[2] - a[2]\r\n        })\r\n      } else {\r\n        if (result.length > 15) {\r\n          result = result.slice(0, 15)\r\n        }\r\n        result.push([id, AppUsersManager.getUser(id), 1, tsNow(true)])\r\n      }\r\n      ConfigStorage.set({inline_bots_popular: result})\r\n      \r\n      rootScope.$broadcast('inline_bots_popular')\r\n    })\r\n  }\r\n  \r\n  function resolveInlineMention (username) {\r\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\r\n      if (peerId > 0) {\r\n        var bot = AppUsersManager.getUser(peerId)\r\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\r\n          var resolvedBot = {\r\n            username: username,\r\n            id: peerId,\r\n            placeholder: bot.bot_inline_placeholder\r\n          }\r\n          if (bot.pFlags.bot_inline_geo &&\r\n            GeoLocationManager.isAvailable()) {\r\n              return checkGeoLocationAccess(peerId).then(function () {\r\n                return GeoLocationManager.getPosition().then(function (coords) {\r\n                  resolvedBot.geo = coords\r\n                  return qSync.when(resolvedBot)\r\n                })\r\n              })['catch'](function () {\r\n                return qSync.when(resolvedBot)\r\n              })\r\n            }\r\n            return qSync.when(resolvedBot)\r\n          }\r\n        }\r\n        return $q.reject()\r\n      }, function (error) {\r\n        error.handled = true\r\n        return $q.reject(error)\r\n      })\r\n    }\r\n    \r\n    function regroupWrappedResults (results, rowW, rowH) {\r\n      if (!results ||\r\n        !results[0] ||\r\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\r\n          return\r\n        }\r\n        var ratios = []\r\n        angular.forEach(results, function (result) {\r\n          var w\r\n          var h, doc\r\n          var photo\r\n          if (result._ === 'botInlineMediaResult') {\r\n            if (doc = result.document) {\r\n              w = result.document.w\r\n              h = result.document.h\r\n            }\r\n            else if (photo = result.photo) {\r\n              var photoSize = (photo.sizes || [])[0]\r\n              w = photoSize && photoSize.w\r\n              h = photoSize && photoSize.h\r\n            }\r\n          }else {\r\n            w = result.w\r\n            h = result.h\r\n          }\r\n          if (!w || !h) {\r\n            w = h = 1\r\n          }\r\n          ratios.push(w / h)\r\n        })\r\n        \r\n        var rows = []\r\n        var curCnt = 0\r\n        var curW = 0\r\n        angular.forEach(ratios, function (ratio) {\r\n          var w = ratio * rowH\r\n          curW += w\r\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\r\n            curCnt++\r\n          } else {\r\n            rows.push(curCnt)\r\n            curCnt = 1\r\n            curW = w\r\n          }\r\n        })\r\n        if (curCnt) {\r\n          rows.push(curCnt)\r\n        }\r\n        \r\n        var i = 0\r\n        var thumbs = []\r\n        var lastRowI = rows.length - 1\r\n        angular.forEach(rows, function (rowCnt, rowI) {\r\n          var lastRow = rowI === lastRowI\r\n          var curRatios = ratios.slice(i, i + rowCnt)\r\n          var sumRatios = 0\r\n          angular.forEach(curRatios, function (ratio) {\r\n            sumRatios += ratio\r\n          })\r\n          angular.forEach(curRatios, function (ratio, j) {\r\n            var thumbH = rowH\r\n            var thumbW = rowW * ratio / sumRatios\r\n            var realW = thumbH * ratio\r\n            if (lastRow && thumbW > realW) {\r\n              thumbW = realW\r\n            }\r\n            var result = results[i + j]\r\n            result.thumbW = Math.floor(thumbW) - 2\r\n            result.thumbH = Math.floor(thumbH) - 2\r\n          })\r\n          \r\n          i += rowCnt\r\n        })\r\n      }\r\n      \r\n      function switchToPM (fromPeerID, botID, startParam) {\r\n        var peerString = AppPeersManager.getPeerString(fromPeerID)\r\n        var setHash = {}\r\n        setHash['inline_switch_pm' + botID] = {peer: peerString, time: tsNow()}\r\n        Storage.set(setHash)\r\n        rootScope.$broadcast('history_focus', {peerString: AppPeersManager.getPeerString(botID)})\r\n        AppMessagesManager.startBot(botID, 0, startParam)\r\n      }\r\n      \r\n      function checkSwitchReturn (botID) {\r\n        var bot = AppUsersManager.getUser(botID)\r\n        if (!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\r\n          return qSync.when(false)\r\n        }\r\n        var key = 'inline_switch_pm' + botID\r\n        return Storage.get(key).then(function (peerData) {\r\n          if (peerData) {\r\n            Storage.remove(key)\r\n            if (tsNow() - peerData.time < 3600000) {\r\n              return peerData.peer\r\n            }\r\n          }\r\n          return false\r\n        })\r\n      }\r\n      \r\n      function switchInlineQuery (botID, toPeerString, query) {\r\n        rootScope.$broadcast('history_focus', {\r\n          peerString: toPeerString,\r\n          attachment: {\r\n            _: 'inline_query',\r\n            mention: '@' + AppUsersManager.getUser(botID).username,\r\n            query: query\r\n          }\r\n        })\r\n      }\r\n      \r\n      function switchInlineButtonClick (id, button) {\r\n        var message = AppMessagesManager.getMessage(id)\r\n        var botID = message.viaBotId || message.fromId\r\n        if (button.pFlags && button.pFlags.same_peer) {\r\n          var peerId = AppMessagesManager.getMessagePeer(message)\r\n          var toPeerString = AppPeersManager.getPeerString(peerId)\r\n          switchInlineQuery(botID, toPeerString, button.query)\r\n          return\r\n        }\r\n        return checkSwitchReturn(botID).then(function (retPeerString) {\r\n          if (retPeerString) {\r\n            return switchInlineQuery(botID, retPeerString, button.query)\r\n          }\r\n          PeersSelectService.selectPeer({\r\n            canSend: true\r\n          }).then(function (toPeerString) {\r\n            return switchInlineQuery(botID, toPeerString, button.query)\r\n          })\r\n        })\r\n      } */\r\n      \r\n  public callbackButtonClick(peerId: number, mid: number, button: any) {\r\n    return apiManagerProxy.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: appPeersManager.getInputPeerById(peerId),\r\n      msg_id: appMessagesManager.getServerMessageId(mid),\r\n      data: button.data\r\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then((callbackAnswer) => {\r\n      if(typeof callbackAnswer.message === 'string' && callbackAnswer.message.length) {\r\n        toast(RichTextProcessor.wrapRichText(callbackAnswer.message, {noLinks: true, noLinebreaks: true}));\r\n      }\r\n      \r\n      //console.log('callbackButtonClick callbackAnswer:', callbackAnswer);\r\n    });\r\n  }\r\n      \r\n  /* function gameButtonClick (id) {\r\n    var message = AppMessagesManager.getMessage(id)\r\n    var peerId = AppMessagesManager.getMessagePeer(message)\r\n    \r\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: AppPeersManager.getInputPeerByID(peerId),\r\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\r\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\r\n      if (typeof callbackAnswer.message === 'string' &&\r\n      callbackAnswer.message.length) {\r\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\r\n      }\r\n      else if (typeof callbackAnswer.url === 'string') {\r\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\r\n      }\r\n    })\r\n  }\r\n\r\n  function sendInlineResult (peerId, qID, options) {\r\n    var inlineResult = inlineResults[qID]\r\n    if (inlineResult === undefined) {\r\n      return false\r\n    }\r\n    pushPopularBot(inlineResult.botID)\r\n    var splitted = qID.split('_')\r\n    var queryID = splitted.shift()\r\n    var resultID = splitted.join('_')\r\n    options = options || {}\r\n    options.viaBotId = inlineResult.botID\r\n    options.queryID = queryID\r\n    options.resultID = resultID\r\n    if (inlineResult.send_message.reply_markup) {\r\n      options.reply_markup = inlineResult.send_message.reply_markup\r\n    }\r\n    \r\n    if (inlineResult.send_message._ === 'botInlineMessageText') {\r\n      options.entities = inlineResult.send_message.entities\r\n      AppMessagesManager.sendText(peerId, inlineResult.send_message.message, options)\r\n    } else {\r\n      var caption = ''\r\n      var inputMedia = false\r\n      switch (inlineResult.send_message._) {\r\n        case 'botInlineMessageMediaAuto':\r\n        caption = inlineResult.send_message.caption\r\n        if (inlineResult._ === 'botInlineMediaResult') {\r\n          var doc = inlineResult.document\r\n          var photo = inlineResult.photo\r\n          if (doc) {\r\n            inputMedia = {\r\n              _: 'inputMediaDocument',\r\n              id: {_: 'inputDocument', id: doc.id, access_hash: doc.access_hash},\r\n              caption: caption\r\n            }\r\n          } else {\r\n            inputMedia = {\r\n              _: 'inputMediaPhoto',\r\n              id: {_: 'inputPhoto', id: photo.id, access_hash: photo.access_hash},\r\n              caption: caption\r\n            }\r\n          }\r\n        }\r\n        break\r\n        \r\n        case 'botInlineMessageMediaGeo':\r\n        inputMedia = {\r\n          _: 'inputMediaGeoPoint',\r\n          geo_point: {\r\n            _: 'inputGeoPoint',\r\n            'lat': inlineResult.send_message.geo['lat'],\r\n            'long': inlineResult.send_message.geo['long']\r\n          }\r\n        }\r\n        break\r\n        \r\n        case 'botInlineMessageMediaVenue':\r\n        inputMedia = {\r\n          _: 'inputMediaVenue',\r\n          geo_point: {\r\n            _: 'inputGeoPoint',\r\n            'lat': inlineResult.send_message.geo['lat'],\r\n            'long': inlineResult.send_message.geo['long']\r\n          },\r\n          title: inlineResult.send_message.title,\r\n          address: inlineResult.send_message.address,\r\n          provider: inlineResult.send_message.provider,\r\n          venue_id: inlineResult.send_message.venue_id\r\n        }\r\n        break\r\n        \r\n        case 'botInlineMessageMediaContact':\r\n        inputMedia = {\r\n          _: 'inputMediaContact',\r\n          phone_number: inlineResult.send_message.phone_number,\r\n          first_name: inlineResult.send_message.first_name,\r\n          last_name: inlineResult.send_message.last_name\r\n        }\r\n        break\r\n      }\r\n      if (!inputMedia) {\r\n        inputMedia = {\r\n          _: 'messageMediaPending',\r\n          type: inlineResult.type,\r\n          file_name: inlineResult.title || inlineResult.content_url || inlineResult.url,\r\n          size: 0,\r\n          progress: {percent: 30, total: 0}\r\n        }\r\n      }\r\n      AppMessagesManager.sendOther(peerId, inputMedia, options)\r\n    }\r\n  }\r\n  \r\n  function checkGeoLocationAccess (botID) {\r\n    var key = 'bot_access_geo' + botID\r\n    return Storage.get(key).then(function (geoAccess) {\r\n      if (geoAccess && geoAccess.granted) {\r\n        return true\r\n      }\r\n      return ErrorService.confirm({\r\n        type: 'BOT_ACCESS_GEO_INLINE'\r\n      }).then(function () {\r\n        var setHash = {}\r\n        setHash[key] = {granted: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return true\r\n      }, function () {\r\n        var setHash = {}\r\n        setHash[key] = {denied: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return $q.reject()\r\n      })\r\n    })\r\n  } */\r\n}\r\n\r\nconst appInlineBotsManager = new AppInlineBotsManager();\r\nexport default appInlineBotsManager;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport InputSearch from \"../../inputSearch\";\r\nimport animationIntersector from \"../../animationIntersector\";\r\nimport appSidebarRight from \"..\";\r\nimport appUsersManager from \"../../../lib/appManagers/appUsersManager\";\r\nimport appInlineBotsManager, { AppInlineBotsManager } from \"../../../lib/appManagers/appInlineBotsManager\";\r\nimport GifsMasonry from \"../../gifsMasonry\";\r\nimport appImManager from \"../../../lib/appManagers/appImManager\";\r\nimport type { MyDocument } from \"../../../lib/appManagers/appDocsManager\";\r\nimport mediaSizes from \"../../../helpers/mediaSizes\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\n\r\nconst ANIMATIONGROUP = 'GIFS-SEARCH';\r\n\r\nexport default class AppGifsTab extends SliderSuperTab {\r\n  private inputSearch: InputSearch;\r\n  private gifsDiv: HTMLDivElement;\r\n\r\n  private nextOffset = '';\r\n  private loadedAll = false;\r\n\r\n  private gifBotPeerId: number;\r\n  private masonry: GifsMasonry;\r\n\r\n  private searchPromise: ReturnType<AppInlineBotsManager['getInlineResults']>;\r\n\r\n  protected init() {\r\n    this.container.id = 'search-gifs-container';\r\n    \r\n    this.inputSearch = new InputSearch('SearchGifsTitle', (value) => {\r\n      this.reset();\r\n      this.search(value);\r\n    });\r\n    \r\n    this.title.replaceWith(this.inputSearch.container);\r\n    \r\n    this.gifsDiv = document.createElement('div');\r\n    this.gifsDiv.classList.add('gifs-masonry');\r\n    attachClickEvent(this.gifsDiv, this.onGifsClick, {listenerSetter: this.listenerSetter});\r\n    \r\n    this.scrollable.append(this.gifsDiv);\r\n    \r\n    this.masonry = new GifsMasonry(this.gifsDiv, ANIMATIONGROUP, this.scrollable);\r\n    //this.backBtn.parentElement.append(this.inputSearch.container);\r\n  }\r\n\r\n  private onGifsClick = (e: MouseEvent | TouchEvent) => {\r\n    const target = findUpClassName(e.target, 'gif');\r\n    if(!target) return;\r\n\r\n    const fileId = target.dataset.docId;\r\n    if(appImManager.chat.input.sendMessageWithDocument(fileId)) {\r\n      if(mediaSizes.isMobile) {\r\n        appSidebarRight.onCloseBtnClick();\r\n      }\r\n    } else {\r\n      console.warn('got no doc by id:', fileId);\r\n    }\r\n  };\r\n\r\n  public onClose() {\r\n    this.scrollable.onScrolledBottom = () => {};\r\n  }\r\n\r\n  public onCloseAfterTimeout() {\r\n    this.reset();\r\n    this.gifsDiv.innerHTML = '';\r\n    animationIntersector.checkAnimations(undefined, ANIMATIONGROUP);\r\n    this.inputSearch.remove();\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n\r\n  private reset() {\r\n    this.searchPromise = null;\r\n    this.nextOffset = '';\r\n    this.loadedAll = false;\r\n    this.masonry.lazyLoadQueue.clear();\r\n  }\r\n\r\n  public open() {\r\n    const ret = super.open();\r\n    appSidebarRight.toggleSidebar(true).then(() => {\r\n      this.search('', true);\r\n\r\n      this.scrollable.onScrolledBottom = () => {\r\n        this.search(this.inputSearch.value, false);\r\n      };\r\n    });\r\n    return ret;\r\n  }\r\n\r\n  public async search(query: string, newSearch = true) {\r\n    if(this.searchPromise || this.loadedAll) return;\r\n\r\n    if(!this.gifBotPeerId) {\r\n      this.gifBotPeerId = (await appUsersManager.resolveUsername('gif')).id;\r\n    }\r\n\r\n    try {\r\n      this.searchPromise = appInlineBotsManager.getInlineResults(0, this.gifBotPeerId, query, this.nextOffset);\r\n      const { results, next_offset } = await this.searchPromise;\r\n\r\n      if(this.inputSearch.value !== query) {\r\n        return;\r\n      }\r\n\r\n      this.searchPromise = null;\r\n      this.nextOffset = next_offset;\r\n      if(newSearch) {\r\n        this.gifsDiv.innerHTML = '';\r\n      }\r\n\r\n      if(results.length) {\r\n        results.forEach((result) => {\r\n          if(result._ === 'botInlineMediaResult' && result.document) {\r\n            this.masonry.add(result.document as MyDocument);\r\n          }\r\n        });\r\n      } else {\r\n        this.loadedAll = true;\r\n      }\r\n\r\n      this.scrollable.onScroll();\r\n    } catch(err) {\r\n      this.searchPromise = null;\r\n      console.error('gifs loading error:', err);\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { SliderSuperTab } from \"../../slider\";\r\nimport InputSearch from \"../../inputSearch\";\r\nimport LazyLoadQueue from \"../../lazyLoadQueue\";\r\nimport appImManager from \"../../../lib/appManagers/appImManager\";\r\nimport appStickersManager from \"../../../lib/appManagers/appStickersManager\";\r\nimport PopupStickers from \"../../popups/stickers\";\r\nimport animationIntersector from \"../../animationIntersector\";\r\nimport { RichTextProcessor } from \"../../../lib/richtextprocessor\";\r\nimport { wrapSticker } from \"../../wrappers\";\r\nimport appSidebarRight from \"..\";\r\nimport { StickerSet, StickerSetCovered } from \"../../../layer\";\r\nimport { forEachReverse } from \"../../../helpers/array\";\r\nimport { i18n } from \"../../../lib/langPack\";\r\nimport findUpClassName from \"../../../helpers/dom/findUpClassName\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\n\r\nexport default class AppStickersTab extends SliderSuperTab {\r\n  private inputSearch: InputSearch;\r\n  private setsDiv: HTMLDivElement;\r\n  private lazyLoadQueue: LazyLoadQueue;\r\n\r\n  protected init() {\r\n    this.container.id = 'stickers-container';\r\n    this.container.classList.add('chatlist-container');\r\n\r\n    this.lazyLoadQueue = new LazyLoadQueue();\r\n\r\n    this.inputSearch = new InputSearch('StickersTab.SearchPlaceholder', (value) => {\r\n      this.search(value);\r\n    });\r\n\r\n    this.title.replaceWith(this.inputSearch.container);\r\n\r\n    this.setsDiv = document.createElement('div');\r\n    this.setsDiv.classList.add('sticker-sets');\r\n    this.scrollable.append(this.setsDiv);\r\n\r\n    attachClickEvent(this.setsDiv, (e) => {\r\n      const sticker = findUpClassName(e.target, 'sticker-set-sticker');\r\n      if(sticker) {\r\n        const docId = sticker.dataset.docId;\r\n        appImManager.chat.input.sendMessageWithDocument(docId);\r\n        return;\r\n      }\r\n\r\n      const target = findUpClassName(e.target, 'sticker-set');\r\n      if(!target) return;\r\n\r\n      const id = target.dataset.stickerSet as string;\r\n      const access_hash = target.dataset.access_hash as string;\r\n\r\n      const button = findUpClassName(e.target, 'sticker-set-button') as HTMLElement;\r\n      if(button) {\r\n        e.preventDefault();\r\n        e.cancelBubble = true;\r\n\r\n        button.setAttribute('disabled', 'true');\r\n        \r\n        appStickersManager.getStickerSet({id, access_hash}).then(full => {\r\n          appStickersManager.toggleStickerSet(full.set).then(changed => {\r\n            if(changed) {\r\n              button.textContent = '';\r\n              button.append(i18n(full.set.installed_date ? 'Stickers.SearchAdded' : 'Stickers.SearchAdd'));\r\n              button.classList.toggle('gray', !!full.set.installed_date);\r\n            }\r\n          }).finally(() => {\r\n            //button.style.width = set.installed_date ? '68px' : '52px';\r\n            button.removeAttribute('disabled');\r\n          });\r\n        });\r\n      } else {\r\n        appStickersManager.getStickerSet({id, access_hash}).then(full => {\r\n          new PopupStickers(full.set).show();\r\n        });\r\n      }\r\n    }, {listenerSetter: this.listenerSetter});\r\n  }\r\n\r\n  public onCloseAfterTimeout() {\r\n    this.setsDiv.innerHTML = '';\r\n    animationIntersector.checkAnimations(undefined, 'STICKERS-SEARCH');\r\n    return super.onCloseAfterTimeout();\r\n  }\r\n\r\n  public renderSet(set: StickerSet.stickerSet) {\r\n    //console.log('renderSet:', set);\r\n    const div = document.createElement('div');\r\n    div.classList.add('sticker-set');\r\n\r\n    const header = document.createElement('div');\r\n    header.classList.add('sticker-set-header');\r\n\r\n    const details = document.createElement('div');\r\n    details.classList.add('sticker-set-details');\r\n    details.innerHTML = `\r\n      <div class=\"sticker-set-name\">${RichTextProcessor.wrapEmojiText(set.title)}</div>\r\n    `;\r\n\r\n    const countDiv = document.createElement('div');\r\n    countDiv.classList.add('sticker-set-count');\r\n    countDiv.append(i18n('Stickers', [set.count]));\r\n    details.append(countDiv);\r\n    \r\n    const button = document.createElement('button');\r\n    button.classList.add('btn-primary', 'btn-color-primary', 'sticker-set-button');\r\n    button.append(i18n(set.installed_date ? 'Stickers.SearchAdded' : 'Stickers.SearchAdd'));\r\n   // button.style.width = set.installed_date ? '68px' : '52px';\r\n\r\n    if(set.installed_date) {\r\n      button.classList.add('gray');\r\n    }\r\n\r\n    //ripple(button);\r\n\r\n    header.append(details, button);\r\n\r\n    const stickersDiv = document.createElement('div');\r\n    stickersDiv.classList.add('sticker-set-stickers');\r\n\r\n    const count = Math.min(5, set.count);\r\n    for(let i = 0; i < count; ++i) {\r\n      const stickerDiv = document.createElement('div');\r\n      stickerDiv.classList.add('sticker-set-sticker');\r\n\r\n      stickersDiv.append(stickerDiv);\r\n    }\r\n\r\n    appStickersManager.getStickerSet(set).then(set => {\r\n      //console.log('renderSet got set:', set);\r\n      \r\n      for(let i = 0; i < count; ++i) {\r\n        const div = stickersDiv.children[i] as HTMLDivElement;\r\n        const doc = set.documents[i];\r\n        if(doc._ === 'documentEmpty') {\r\n          continue;\r\n        }\r\n\r\n        wrapSticker({\r\n          doc, \r\n          div, \r\n          lazyLoadQueue: this.lazyLoadQueue, \r\n          group: 'STICKERS-SEARCH', \r\n          /* play: false,\r\n          loop: false, */\r\n          play: true,\r\n          loop: true,\r\n          width: 68,\r\n          height: 68\r\n        });\r\n      }\r\n    });\r\n\r\n    /* const onMouseOver = () => {\r\n      const animations: AnimationItem['animation'][] = [];\r\n      for(let i = 0; i < count; ++i) {\r\n        const stickerDiv = stickersDiv.children[i] as HTMLElement;\r\n        const animationItem = animationIntersector.getAnimation(stickerDiv);\r\n        if(!animationItem) continue;\r\n\r\n        const animation = animationItem.animation;\r\n\r\n        animations.push(animation);\r\n        animation.loop = true;\r\n        animation.play();\r\n      }\r\n\r\n      div.addEventListener('mouseout', () => {\r\n        animations.forEach(animation => {\r\n          animation.loop = false;\r\n        });\r\n\r\n        div.addEventListener('mouseover', onMouseOver, {once: true});\r\n      }, {once: true});\r\n    };\r\n\r\n    div.addEventListener('mouseover', onMouseOver, {once: true}); */\r\n\r\n    div.dataset.stickerSet = set.id;\r\n    div.dataset.access_hash = set.access_hash;\r\n    div.dataset.title = set.title;\r\n\r\n    div.append(header, stickersDiv);\r\n\r\n    this.setsDiv.append(div);\r\n  }\r\n\r\n  public open() {\r\n    const ret = super.open();\r\n    appSidebarRight.toggleSidebar(true).then(() => {\r\n      this.renderFeatured();\r\n    });\r\n\r\n    return ret;\r\n  }\r\n\r\n  public renderFeatured() {\r\n    return appStickersManager.getFeaturedStickers().then(coveredSets => {\r\n      if(this.inputSearch.value) {\r\n        return;\r\n      }\r\n\r\n      coveredSets = this.filterRendered('', coveredSets);\r\n      coveredSets.forEach(set => {\r\n        this.renderSet(set.set);\r\n      });\r\n    });\r\n  }\r\n\r\n  private filterRendered(query: string, coveredSets: StickerSetCovered[]) {\r\n    coveredSets = coveredSets.slice();\r\n\r\n    const children = Array.from(this.setsDiv.children) as HTMLElement[];\r\n    forEachReverse(children, el => {\r\n      const id = el.dataset.stickerSet;\r\n      const index = coveredSets.findIndex(covered => covered.set.id === id);\r\n  \r\n      if(index !== -1) {\r\n        coveredSets.splice(index, 1);\r\n      } else if(!query || !el.dataset.title.toLowerCase().includes(query.toLowerCase())) {\r\n        el.remove();\r\n      }\r\n    });\r\n\r\n    animationIntersector.checkAnimations(undefined, 'STICKERS-SEARCH');\r\n\r\n    return coveredSets;\r\n  }\r\n\r\n  public search(query: string) {\r\n    if(!query) {\r\n      return this.renderFeatured();\r\n    }\r\n\r\n    return appStickersManager.searchStickerSets(query, false).then(coveredSets => {\r\n      if(this.inputSearch.value !== query) {\r\n        return;\r\n      }\r\n\r\n      //console.log('search result:', coveredSets);\r\n\r\n      coveredSets = this.filterRendered(query, coveredSets);\r\n      coveredSets.forEach(set => {\r\n        this.renderSet(set.set);\r\n      });\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { attachClickEvent } from \"./dom/clickEvent\";\r\nimport findUpAsChild from \"./dom/findUpAsChild\";\r\nimport EventListenerBase from \"./eventListenerBase\";\r\nimport ListenerSetter from \"./listenerSetter\";\r\nimport { safeAssign } from \"./object\";\r\nimport { isTouchSupported } from \"./touchSupport\";\r\n\r\nconst KEEP_OPEN = false;\r\nconst TOGGLE_TIMEOUT = 200;\r\nconst ANIMATION_DURATION = 200;\r\n\r\nexport default class DropdownHover extends EventListenerBase<{\r\n  open: () => Promise<any> | void,\r\n  opened: () => any,\r\n  close: () => any,\r\n  closed: () => any\r\n}> {\r\n  protected element: HTMLElement;\r\n  protected displayTimeout: number;\r\n  protected forceClose = false;\r\n  protected inited = false;\r\n\r\n  constructor(options: {\r\n    element: DropdownHover['element']\r\n  }) {\r\n    super(false);\r\n    safeAssign(this, options);\r\n  }\r\n\r\n  public attachButtonListener(button: HTMLElement, listenerSetter: ListenerSetter) {\r\n    let firstTime = true;\r\n    if(isTouchSupported) {\r\n      attachClickEvent(button, () => {\r\n        if(firstTime) {\r\n          firstTime = false;\r\n          this.toggle(true);\r\n        } else {\r\n          this.toggle();\r\n        }\r\n      }, {listenerSetter});\r\n    } else {\r\n      listenerSetter.add(button, 'mouseover', (e) => {\r\n        //console.log('onmouseover button');\r\n        if(firstTime) {\r\n          listenerSetter.add(button, 'mouseout', this.onMouseOut);\r\n          firstTime = false;\r\n        }\r\n\r\n        clearTimeout(this.displayTimeout);\r\n        this.displayTimeout = window.setTimeout(() => {\r\n          this.toggle(true);\r\n        }, TOGGLE_TIMEOUT);\r\n      });\r\n    }\r\n  }\r\n\r\n  private onMouseOut = (e: MouseEvent) => {\r\n    if(KEEP_OPEN) return;\r\n    clearTimeout(this.displayTimeout);\r\n    if(!this.isActive()) return;\r\n\r\n    const toElement = (e as any).toElement as Element;\r\n    if(toElement && findUpAsChild(toElement, this.element)) {\r\n      return;\r\n    }\r\n\r\n    this.displayTimeout = window.setTimeout(() => {\r\n      this.toggle(false);\r\n    }, TOGGLE_TIMEOUT);\r\n  };\r\n\r\n  protected init() {\r\n    if(!isTouchSupported) {\r\n      this.element.onmouseout = this.onMouseOut;\r\n      this.element.onmouseover = (e) => {\r\n        if(this.forceClose) {\r\n          return;\r\n        }\r\n\r\n        //console.log('onmouseover element');\r\n        clearTimeout(this.displayTimeout);\r\n      };\r\n    }\r\n  }\r\n\r\n  public toggle = async(enable?: boolean) => {\r\n    //if(!this.element) return;\r\n    const willBeActive = (!!this.element.style.display && enable === undefined) || enable;\r\n    if(this.init) {\r\n      if(willBeActive) {\r\n        this.init();\r\n        this.init = null;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if(willBeActive === this.isActive()) {\r\n      return;\r\n    }\r\n    \r\n    if((this.element.style.display && enable === undefined) || enable) {\r\n      const res = this.dispatchEvent('open');\r\n      await Promise.all(res);\r\n\r\n      this.element.style.display = '';\r\n      void this.element.offsetLeft; // reflow\r\n      this.element.classList.add('active');\r\n\r\n      clearTimeout(this.displayTimeout);\r\n      this.displayTimeout = window.setTimeout(() => {\r\n        this.forceClose = false;\r\n        this.dispatchEvent('opened');\r\n      }, isTouchSupported ? 0 : ANIMATION_DURATION);\r\n\r\n      // ! can't use together with resizeObserver\r\n      /* if(isTouchSupported) {\r\n        const height = this.element.scrollHeight + appImManager.chat.input.inputContainer.scrollHeight - 10;\r\n        console.log('[ESG]: toggle: enable height', height);\r\n        appImManager.chat.bubbles.scrollable.scrollTop += height;\r\n      } */\r\n\r\n      /* if(touchSupport) {\r\n        this.restoreScroll();\r\n      } */\r\n    } else {\r\n      this.dispatchEvent('close');\r\n\r\n      this.element.classList.remove('active');\r\n\r\n      clearTimeout(this.displayTimeout);\r\n      this.displayTimeout = window.setTimeout(() => {\r\n        this.element.style.display = 'none';\r\n        this.forceClose = false;\r\n        this.dispatchEvent('closed');\r\n      }, isTouchSupported ? 0 : ANIMATION_DURATION);\r\n\r\n      /* if(isTouchSupported) {\r\n        const scrollHeight = this.container.scrollHeight;\r\n        if(scrollHeight) {\r\n          const height = this.container.scrollHeight + appImManager.chat.input.inputContainer.scrollHeight - 10;\r\n          appImManager.chat.bubbles.scrollable.scrollTop -= height;\r\n        }\r\n      } */\r\n\r\n      /* if(touchSupport) {\r\n        this.restoreScroll();\r\n      } */\r\n    }\r\n\r\n    //animationIntersector.checkAnimations(false, EMOTICONSSTICKERGROUP);\r\n  };\r\n\r\n  public isActive() {\r\n    return this.element.classList.contains('active');\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { isTouchSupported } from \"../../helpers/touchSupport\";\r\nimport appChatsManager from \"../../lib/appManagers/appChatsManager\";\r\nimport appImManager from \"../../lib/appManagers/appImManager\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport animationIntersector from \"../animationIntersector\";\r\nimport { horizontalMenu } from \"../horizontalMenu\";\r\nimport LazyLoadQueue, { LazyLoadQueueIntersector } from \"../lazyLoadQueue\";\r\nimport Scrollable, { ScrollableX } from \"../scrollable\";\r\nimport appSidebarRight from \"../sidebarRight\";\r\nimport StickyIntersector from \"../stickyIntersector\";\r\nimport EmojiTab from \"./tabs/emoji\";\r\nimport GifsTab from \"./tabs/gifs\";\r\nimport StickersTab from \"./tabs/stickers\";\r\nimport { pause } from \"../../helpers/schedulers\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport AppGifsTab from \"../sidebarRight/tabs/gifs\";\r\nimport AppStickersTab from \"../sidebarRight/tabs/stickers\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport findUpTag from \"../../helpers/dom/findUpTag\";\r\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\r\nimport whichChild from \"../../helpers/dom/whichChild\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport DropdownHover from \"../../helpers/dropdownHover\";\r\n\r\nexport const EMOTICONSSTICKERGROUP = 'emoticons-dropdown';\r\n\r\nexport interface EmoticonsTab {\r\n  init: () => void,\r\n  onCloseAfterTimeout?: () => void\r\n}\r\n\r\nexport class EmoticonsDropdown extends DropdownHover {\r\n  public static lazyLoadQueue = new LazyLoadQueue();\r\n\r\n  private emojiTab: EmojiTab;\r\n  public stickersTab: StickersTab;\r\n  private gifsTab: GifsTab;\r\n\r\n  private container: HTMLElement;\r\n  private tabsEl: HTMLElement;\r\n  private tabId = -1;\r\n\r\n  private tabs: {[id: number]: EmoticonsTab};\r\n\r\n  private searchButton: HTMLElement;\r\n  private deleteBtn: HTMLElement;\r\n\r\n  private selectTab: ReturnType<typeof horizontalMenu>;\r\n\r\n  private savedRange: Range;\r\n\r\n  constructor() {\r\n    super({\r\n      element: document.getElementById('emoji-dropdown') as HTMLDivElement\r\n    });\r\n\r\n    this.addEventListener('open', async() => {\r\n      if(isTouchSupported) {\r\n        //appImManager.chat.input.saveScroll();\r\n        if(blurActiveElement()) {\r\n          await pause(100);\r\n        }\r\n      }\r\n\r\n      if(this.element.parentElement !== appImManager.chat.input.chatInput) {\r\n        appImManager.chat.input.chatInput.append(this.element);\r\n      }\r\n\r\n      const sel = document.getSelection();\r\n      if(sel.rangeCount && document.activeElement === appImManager.chat.input.messageInput) {\r\n        this.savedRange = sel.getRangeAt(0);\r\n      } else {\r\n        this.savedRange = undefined;\r\n      }\r\n\r\n      EmoticonsDropdown.lazyLoadQueue.lock();\r\n      //EmoticonsDropdown.lazyLoadQueue.unlock();\r\n      animationIntersector.lockIntersectionGroup(EMOTICONSSTICKERGROUP);\r\n    });\r\n\r\n    this.addEventListener('opened', () => {\r\n      animationIntersector.unlockIntersectionGroup(EMOTICONSSTICKERGROUP);\r\n      EmoticonsDropdown.lazyLoadQueue.unlock();\r\n      EmoticonsDropdown.lazyLoadQueue.refresh();\r\n\r\n      this.container.classList.remove('disable-hover');\r\n    });\r\n\r\n    this.addEventListener('close', () => {\r\n      EmoticonsDropdown.lazyLoadQueue.lock();\r\n      //EmoticonsDropdown.lazyLoadQueue.lock();\r\n\r\n      // нужно залочить группу и выключить стикеры\r\n      animationIntersector.lockIntersectionGroup(EMOTICONSSTICKERGROUP);\r\n      animationIntersector.checkAnimations(true, EMOTICONSSTICKERGROUP);\r\n    });\r\n\r\n    this.addEventListener('closed', () => {\r\n      // теперь можно убрать visible, чтобы они не включились после фокуса\r\n      animationIntersector.unlockIntersectionGroup(EMOTICONSSTICKERGROUP);\r\n      EmoticonsDropdown.lazyLoadQueue.unlock();\r\n      EmoticonsDropdown.lazyLoadQueue.refresh();\r\n\r\n      this.container.classList.remove('disable-hover');\r\n\r\n      this.savedRange = undefined;\r\n    });\r\n  }\r\n\r\n  protected init() {\r\n    this.emojiTab = new EmojiTab();\r\n    this.stickersTab = new StickersTab();\r\n    this.gifsTab = new GifsTab();\r\n\r\n    this.tabs = {\r\n      0: this.emojiTab,\r\n      1: this.stickersTab,\r\n      2: this.gifsTab\r\n    };\r\n\r\n    this.container = this.element.querySelector('.emoji-container .tabs-container') as HTMLDivElement;\r\n    this.tabsEl = this.element.querySelector('.emoji-tabs') as HTMLUListElement;\r\n    this.selectTab = horizontalMenu(this.tabsEl, this.container, this.onSelectTabClick, () => {\r\n      const tab = this.tabs[this.tabId];\r\n      if(tab.init) {\r\n        tab.init();\r\n      }\r\n\r\n      tab.onCloseAfterTimeout && tab.onCloseAfterTimeout();\r\n      animationIntersector.checkAnimations(false, EMOTICONSSTICKERGROUP);\r\n    });\r\n\r\n    this.searchButton = this.element.querySelector('.emoji-tabs-search');\r\n    this.searchButton.addEventListener('click', () => {\r\n      if(this.tabId === 1) {\r\n        if(!appSidebarRight.isTabExists(AppStickersTab)) {\r\n          new AppStickersTab(appSidebarRight).open();\r\n        }\r\n      } else {\r\n        if(!appSidebarRight.isTabExists(AppGifsTab)) {\r\n          new AppGifsTab(appSidebarRight).open();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.deleteBtn = this.element.querySelector('.emoji-tabs-delete');\r\n    this.deleteBtn.addEventListener('click', (e) => {\r\n      const input = appImManager.chat.input.messageInput;\r\n      if((input.lastChild as any)?.tagName) {\r\n        input.lastElementChild.remove();\r\n      } else if(input.lastChild) {\r\n        if(!input.lastChild.textContent.length) {\r\n          input.lastChild.remove();\r\n        } else {\r\n          input.lastChild.textContent = input.lastChild.textContent.slice(0, -1);\r\n        }\r\n      }\r\n\r\n      const event = new Event('input', {bubbles: true, cancelable: true});\r\n      appImManager.chat.input.messageInput.dispatchEvent(event);\r\n      //appSidebarRight.stickersTab.init();\r\n\r\n      cancelEvent(e);\r\n    });\r\n\r\n    (this.tabsEl.children[1] as HTMLLIElement).click(); // set emoji tab\r\n    if(this.tabs[0].init) {\r\n      this.tabs[0].init(); // onTransitionEnd не вызовется, т.к. это первая открытая вкладка\r\n    }\r\n\r\n    rootScope.addEventListener('peer_changed', this.checkRights);\r\n    this.checkRights();\r\n\r\n    return super.init();\r\n  }\r\n\r\n  private onSelectTabClick = (id: number) => {\r\n    if(this.tabId === id) {\r\n      return;\r\n    }\r\n    \r\n    animationIntersector.checkAnimations(true, EMOTICONSSTICKERGROUP);\r\n\r\n    this.tabId = id;\r\n    this.searchButton.classList.toggle('hide', this.tabId === 0);\r\n    this.deleteBtn.classList.toggle('hide', this.tabId !== 0);\r\n  };\r\n\r\n  private checkRights = () => {\r\n    const peerId = appImManager.chat.peerId;\r\n    const children = this.tabsEl.children;\r\n    const tabsElements = Array.from(children) as HTMLElement[];\r\n\r\n    const canSendStickers = peerId > 0 || appChatsManager.hasRights(peerId, 'send_stickers');\r\n    tabsElements[2].toggleAttribute('disabled', !canSendStickers);\r\n\r\n    const canSendGifs = peerId > 0 || appChatsManager.hasRights(peerId, 'send_gifs');\r\n    tabsElements[3].toggleAttribute('disabled', !canSendGifs);\r\n\r\n    const active = this.tabsEl.querySelector('.active');\r\n    if(active && whichChild(active) !== 1 && (!canSendStickers || !canSendGifs)) {\r\n      this.selectTab(0, false);\r\n    }\r\n  };\r\n\r\n  public static menuOnClick = (menu: HTMLElement, scroll: Scrollable, menuScroll?: ScrollableX) => {\r\n    let prevId = 0;\r\n    let jumpedTo = -1;\r\n\r\n    const setActive = (id: number) => {\r\n      if(id === prevId) {\r\n        return false;\r\n      }\r\n\r\n      menu.children[prevId].classList.remove('active');\r\n      menu.children[id].classList.add('active');\r\n      prevId = id;\r\n\r\n      return true;\r\n    };\r\n\r\n    const stickyIntersector = new StickyIntersector(scroll.container, (stuck, target) => {\r\n      //console.log('sticky scrollTOp', stuck, target, scroll.container.scrollTop);\r\n\r\n      if(Math.abs(jumpedTo - scroll.container.scrollTop) <= 1) {\r\n        return;\r\n      } else {\r\n        jumpedTo = -1;\r\n      }\r\n\r\n      const which = whichChild(target);\r\n      if(!stuck && which) { // * due to stickyIntersector\r\n        return;\r\n      }\r\n\r\n      setActive(which);\r\n\r\n      if(menuScroll) {\r\n        if(which < menu.childElementCount - 4) {\r\n          menuScroll.container.scrollLeft = (which - 3) * 47;\r\n        } else {\r\n          menuScroll.container.scrollLeft = which * 47;\r\n        }\r\n      }\r\n    });\r\n\r\n    menu.addEventListener('click', (e) => {\r\n      let target = e.target as HTMLElement;\r\n      target = findUpClassName(target, 'menu-horizontal-div-item');\r\n\r\n      if(!target) {\r\n        return;\r\n      }\r\n\r\n      const which = whichChild(target);\r\n\r\n      /* if(menuScroll) {\r\n        menuScroll.scrollIntoView(target, false, 0);\r\n      } */\r\n\r\n      if(!setActive(which)) {\r\n        return;\r\n      }\r\n\r\n      const element = (scroll.splitUp || scroll.container).children[which] as HTMLElement;\r\n      const offsetTop = element.offsetTop + 1; // * due to stickyIntersector\r\n\r\n      scroll.container.scrollTop = jumpedTo = offsetTop;\r\n\r\n      //console.log('set scrollTop:', offsetTop);\r\n    });\r\n\r\n    return stickyIntersector;\r\n  };\r\n\r\n  public static onMediaClick = (e: {target: EventTarget | Element}, clearDraft = false) => {\r\n    let target = e.target as HTMLElement;\r\n    target = findUpTag(target, 'DIV');\r\n\r\n    if(!target) return;\r\n    \r\n    const fileId = target.dataset.docId;\r\n    if(!fileId) return;\r\n\r\n    if(appImManager.chat.input.sendMessageWithDocument(fileId, undefined, clearDraft)) {\r\n      /* dropdown.classList.remove('active');\r\n      toggleEl.classList.remove('active'); */\r\n      if(emoticonsDropdown.container) {\r\n        emoticonsDropdown.forceClose = true;\r\n        emoticonsDropdown.container.classList.add('disable-hover');\r\n        emoticonsDropdown.toggle(false);\r\n      }\r\n    } else {\r\n      console.warn('got no doc by id:', fileId);\r\n    }\r\n  };\r\n\r\n  public addLazyLoadQueueRepeat(lazyLoadQueue: LazyLoadQueueIntersector, processInvisibleDiv: (div: HTMLElement) => void) {\r\n    this.addEventListener('close', () => {\r\n      lazyLoadQueue.lock();\r\n    });\r\n\r\n    this.addEventListener('closed', () => {\r\n      const divs = lazyLoadQueue.intersector.getVisible();\r\n\r\n      for(const div of divs) {\r\n        processInvisibleDiv(div);\r\n      }\r\n\r\n      lazyLoadQueue.intersector.clearVisible();\r\n    });\r\n\r\n    this.addEventListener('opened', () => {\r\n      lazyLoadQueue.unlockAndRefresh();\r\n    });\r\n  }\r\n\r\n  public getSavedRange() {\r\n    return this.savedRange;\r\n  }\r\n}\r\n\r\nconst emoticonsDropdown = new EmoticonsDropdown();\r\nMOUNT_CLASS_TO.emoticonsDropdown = emoticonsDropdown;\r\nexport default emoticonsDropdown;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport ButtonMenu, { ButtonMenuItemOptions } from \"../buttonMenu\";\r\nimport { attachContextMenuListener, openBtnMenu } from \"../misc\";\r\n\r\nexport default class SendMenu {\r\n  public sendMenu: HTMLDivElement;\r\n  private sendMenuButtons: (ButtonMenuItemOptions & {verify: () => boolean})[];\r\n  private type: 'schedule' | 'reminder';\r\n  \r\n  constructor(options: {\r\n    onSilentClick: () => void,\r\n    onScheduleClick: () => void,\r\n    listenerSetter?: ListenerSetter,\r\n    openSide: string,\r\n    onContextElement: HTMLElement,\r\n    onOpen?: () => boolean\r\n  }) {\r\n    this.sendMenuButtons = [{\r\n      icon: 'mute',\r\n      text: 'Chat.Send.WithoutSound',\r\n      onClick: options.onSilentClick,\r\n      verify: () => this.type === 'schedule'\r\n    }, {\r\n      icon: 'schedule',\r\n      text: 'Chat.Send.ScheduledMessage',\r\n      onClick: options.onScheduleClick,\r\n      verify: () => this.type === 'schedule'\r\n    }, {\r\n      icon: 'schedule',\r\n      text: 'Chat.Send.SetReminder',\r\n      onClick: options.onScheduleClick,\r\n      verify: () => this.type === 'reminder'\r\n    }];\r\n  \r\n    this.sendMenu = ButtonMenu(this.sendMenuButtons, options.listenerSetter);\r\n    this.sendMenu.classList.add('menu-send', options.openSide);\r\n\r\n    attachContextMenuListener(options.onContextElement, (e: any) => {\r\n      if(options.onOpen && !options.onOpen()) {\r\n        return;\r\n      }\r\n\r\n      this.sendMenuButtons.forEach(button => {\r\n        button.element.classList.toggle('hide', !button.verify());\r\n      });\r\n      \r\n      cancelEvent(e);\r\n      openBtnMenu(this.sendMenu);\r\n    }, options.listenerSetter);\r\n  }\r\n\r\n  public setPeerId(peerId: number) {\r\n    this.type = peerId === rootScope.myId ? 'reminder' : 'schedule';\r\n  }\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { Poll } from \"../../lib/appManagers/appPollsManager\";\r\nimport type Chat from \"../chat/chat\";\r\nimport PopupElement from \".\";\r\nimport CheckboxField from \"../checkboxField\";\r\nimport InputField from \"../inputField\";\r\nimport RadioField from \"../radioField\";\r\nimport Scrollable from \"../scrollable\";\r\nimport SendContextMenu from \"../chat/sendContextMenu\";\r\nimport I18n, { _i18n, i18n } from \"../../lib/langPack\";\r\nimport findUpTag from \"../../helpers/dom/findUpTag\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport getRichValue from \"../../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../../helpers/dom/isInputEmpty\";\r\nimport whichChild from \"../../helpers/dom/whichChild\";\r\n\r\nconst MAX_LENGTH_QUESTION = 255;\r\nconst MAX_LENGTH_OPTION = 100;\r\nconst MAX_LENGTH_SOLUTION = 200;\r\n\r\nexport default class PopupCreatePoll extends PopupElement {\r\n  private questionInputField: InputField;\r\n  private questions: HTMLElement;\r\n  private scrollable: Scrollable;\r\n  private tempId = 0;\r\n\r\n  private anonymousCheckboxField: CheckboxField;\r\n  private multipleCheckboxField: PopupCreatePoll['anonymousCheckboxField'];\r\n  private quizCheckboxField: PopupCreatePoll['anonymousCheckboxField'];\r\n\r\n  private correctAnswers: Uint8Array[];\r\n  private quizSolutionField: InputField;\r\n  private optionInputFields: InputField[];\r\n\r\n  constructor(private chat: Chat) {\r\n    super('popup-create-poll popup-new-media', null, {closable: true, withConfirm: 'NewPoll.Create', body: true});\r\n\r\n    _i18n(this.title, 'NewPoll');\r\n\r\n    this.questionInputField = new InputField({\r\n      placeholder: 'AskAQuestion',\r\n      label: 'AskAQuestion', \r\n      name: 'question', \r\n      maxLength: MAX_LENGTH_QUESTION\r\n    });\r\n\r\n    this.questionInputField.input.addEventListener('input', () => {\r\n      this.handleChange();\r\n    });\r\n\r\n    this.optionInputFields = [];\r\n\r\n    if(this.chat.type !== 'scheduled') {\r\n      const sendMenu = new SendContextMenu({\r\n        onSilentClick: () => {\r\n          this.chat.input.sendSilent = true;\r\n          this.send();\r\n        },\r\n        onScheduleClick: () => {\r\n          this.chat.input.scheduleSending(() => {\r\n            this.send();\r\n          });\r\n        },\r\n        openSide: 'bottom-left',\r\n        onContextElement: this.btnConfirm,\r\n      });\r\n  \r\n      sendMenu.setPeerId(this.chat.peerId);\r\n\r\n      this.header.append(sendMenu.sendMenu);\r\n    }\r\n\r\n    this.header.append(this.questionInputField.container);\r\n\r\n    const hr = document.createElement('hr');\r\n    const d = document.createElement('div');\r\n    d.classList.add('caption');\r\n    _i18n(d, 'PollOptions');\r\n\r\n    this.questions = document.createElement('form');\r\n    this.questions.classList.add('poll-create-questions');\r\n\r\n    const dd = document.createElement('div');\r\n    dd.classList.add('poll-create-settings');\r\n    \r\n    const settingsCaption = document.createElement('div');\r\n    settingsCaption.classList.add('caption');\r\n    _i18n(settingsCaption, 'Settings');\r\n\r\n    if(!this.chat.appPeersManager.isBroadcast(this.chat.peerId)) {\r\n      this.anonymousCheckboxField = new CheckboxField({\r\n        text: 'NewPoll.Anonymous', \r\n        name: 'anonymous'\r\n      });\r\n      this.anonymousCheckboxField.input.checked = true;\r\n      dd.append(this.anonymousCheckboxField.label);\r\n    }\r\n    \r\n    this.multipleCheckboxField = new CheckboxField({\r\n      text: 'NewPoll.MultipleChoice', \r\n      name: 'multiple'\r\n    });\r\n    this.quizCheckboxField = new CheckboxField({\r\n      text: 'NewPoll.Quiz', \r\n      name: 'quiz'\r\n    });\r\n\r\n    this.multipleCheckboxField.input.addEventListener('change', () => {\r\n      const checked = this.multipleCheckboxField.input.checked;\r\n      this.quizCheckboxField.input.toggleAttribute('disabled', checked);\r\n    });\r\n\r\n    this.quizCheckboxField.input.addEventListener('change', () => {\r\n      const checked = this.quizCheckboxField.input.checked;\r\n\r\n      (Array.from(this.questions.children) as HTMLElement[]).map(el => {\r\n        el.classList.toggle('radio-field', checked);\r\n      });\r\n\r\n      if(!checked) {\r\n        this.correctAnswers = undefined;\r\n        this.quizSolutionField.setValueSilently('');\r\n      }\r\n\r\n      quizElements.forEach(el => el.classList.toggle('hide', !checked));\r\n\r\n      this.multipleCheckboxField.input.toggleAttribute('disabled', checked);\r\n      this.handleChange();\r\n    });\r\n\r\n    dd.append(this.multipleCheckboxField.label, this.quizCheckboxField.label);\r\n\r\n    const quizElements: HTMLElement[] = [];\r\n\r\n    const quizSolutionCaption = document.createElement('div');\r\n    quizSolutionCaption.classList.add('caption');\r\n    _i18n(quizSolutionCaption, 'AccDescrQuizExplanation');\r\n\r\n    const quizHr = document.createElement('hr');\r\n\r\n    const quizSolutionContainer = document.createElement('div');\r\n    quizSolutionContainer.classList.add('poll-create-questions');\r\n\r\n    this.quizSolutionField = new InputField({\r\n      placeholder: 'NewPoll.Explanation.Placeholder', \r\n      label: 'NewPoll.Explanation.Placeholder',\r\n      name: 'solution',\r\n      maxLength: MAX_LENGTH_SOLUTION\r\n    });\r\n\r\n    this.questionInputField.input.addEventListener('input', () => {\r\n      this.handleChange();\r\n    });\r\n\r\n    const quizSolutionSubtitle = document.createElement('div');\r\n    quizSolutionSubtitle.classList.add('subtitle');\r\n    _i18n(quizSolutionSubtitle, 'AddAnExplanationInfo');\r\n\r\n    quizSolutionContainer.append(this.quizSolutionField.container, quizSolutionSubtitle);\r\n\r\n    quizElements.push(quizHr, quizSolutionCaption, quizSolutionContainer);\r\n    quizElements.forEach(el => el.classList.add('hide'));\r\n\r\n    this.body.parentElement.insertBefore(hr, this.body);\r\n    this.body.append(d, this.questions, document.createElement('hr'), settingsCaption, dd, ...quizElements);\r\n\r\n    this.btnConfirm.addEventListener('click', this.onSubmitClick);\r\n\r\n    this.scrollable = new Scrollable(this.body);\r\n    this.appendMoreField();\r\n\r\n    this.onEscape = () => {\r\n      return !this.getFilledAnswers().length;\r\n    };\r\n\r\n    this.handleChange();\r\n  }\r\n\r\n  private getFilledAnswers() {\r\n    const answers = Array.from(this.questions.children).map((el, idx) => {\r\n      const input = el.querySelector('.input-field-input') as HTMLElement;\r\n      return input instanceof HTMLInputElement ? input.value : getRichValue(input, false).value;\r\n    }).filter(v => !!v.trim());\r\n\r\n    return answers;\r\n  }\r\n\r\n  private onSubmitClick = () => {\r\n    this.send();\r\n  };\r\n\r\n  private validate() {\r\n    const question = this.questionInputField.value;\r\n    if(!question) {\r\n      return false;\r\n    }\r\n\r\n    if(question.length > MAX_LENGTH_QUESTION) {\r\n      return false;\r\n    }\r\n\r\n    if(this.quizCheckboxField.input.checked && !this.correctAnswers?.length) {\r\n      return false;\r\n    }\r\n\r\n    const answers = this.getFilledAnswers();\r\n    if(answers.length < 2) {\r\n      return false;\r\n    }\r\n    \r\n    const tooLongOption = answers.find(a => a.length > MAX_LENGTH_OPTION);\r\n    if(tooLongOption) {\r\n      return false;\r\n    }\r\n\r\n    const {value: quizSolution} = getRichValue(this.quizSolutionField.input, false);\r\n    if(quizSolution.length > MAX_LENGTH_SOLUTION) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private handleChange() {\r\n    const valid = this.validate();\r\n    this.btnConfirm.toggleAttribute('disabled', !valid);\r\n  }\r\n\r\n  public send(force = false) {\r\n    const question = this.questionInputField.value;\r\n\r\n    const answers = this.getFilledAnswers();\r\n\r\n    const {value: quizSolution, entities: quizSolutionEntities} = getRichValue(this.quizSolutionField.input);\r\n\r\n    if(this.chat.type === 'scheduled' && !force) {\r\n      this.chat.input.scheduleSending(() => {\r\n        this.send(true);\r\n      });\r\n      \r\n      return;\r\n    }\r\n\r\n    this.btnClose.click();\r\n    this.btnConfirm.removeEventListener('click', this.onSubmitClick);\r\n\r\n    //const randomID = [nextRandomInt(0xFFFFFFFF), nextRandomInt(0xFFFFFFFF)];\r\n    //const randomIDS = bigint(randomID[0]).shiftLeft(32).add(bigint(randomID[1])).toString();\r\n\r\n    const pFlags: Poll['pFlags'] = {};\r\n\r\n    if(this.anonymousCheckboxField && !this.anonymousCheckboxField.input.checked) {\r\n      pFlags.public_voters = true;\r\n    }\r\n\r\n    if(this.multipleCheckboxField.input.checked) {\r\n      pFlags.multiple_choice = true;\r\n    }\r\n\r\n    if(this.quizCheckboxField.input.checked) {\r\n      pFlags.quiz = true;\r\n    }\r\n\r\n    const poll: Poll = {\r\n      _: 'poll',\r\n      pFlags,\r\n      question,\r\n      answers: answers.map((value, idx) => {\r\n        return {\r\n          _: 'pollAnswer',\r\n          text: value,\r\n          option: new Uint8Array([idx])\r\n        };\r\n      }),\r\n      id: undefined\r\n    };\r\n    //poll.id = randomIDS;\r\n\r\n    const inputMediaPoll = this.chat.appPollsManager.getInputMediaPoll(poll, this.correctAnswers, quizSolution, quizSolutionEntities);\r\n\r\n    //console.log('Will try to create poll:', inputMediaPoll);\r\n\r\n    this.chat.appMessagesManager.sendOther(this.chat.peerId, inputMediaPoll, {\r\n      threadId: this.chat.threadId,\r\n      replyToMsgId: this.chat.input.replyToMsgId,\r\n      scheduleDate: this.chat.input.scheduleDate,\r\n      silent: this.chat.input.sendSilent\r\n    });\r\n\r\n    if(this.chat.input.helperType === 'reply') {\r\n      this.chat.input.clearHelper();\r\n    }\r\n\r\n    this.chat.input.onMessageSent(false, false);\r\n  }\r\n\r\n  onInput = (e: Event) => {\r\n    const target = e.target as HTMLInputElement;\r\n\r\n    const radioLabel = findUpTag(target, 'LABEL');\r\n    const isEmpty = isInputEmpty(target);\r\n    if(!isEmpty) {\r\n      target.parentElement.classList.add('is-filled');\r\n      radioLabel.classList.remove('hidden-widget');\r\n      radioLabel.firstElementChild.removeAttribute('disabled');\r\n    }\r\n\r\n    const isLast = !radioLabel.nextElementSibling;\r\n    if(isLast && !isEmpty && this.questions.childElementCount < 10) {\r\n      this.appendMoreField();\r\n    }\r\n\r\n    this.handleChange();\r\n  };\r\n\r\n  onDeleteClick = (e: MouseEvent) => {\r\n    const target = e.target as HTMLSpanElement;\r\n    const label = findUpTag(target, 'LABEL');\r\n    const idx = whichChild(label);\r\n\r\n    if(this.correctAnswers && this.correctAnswers[0][0] === idx) {\r\n      this.correctAnswers = undefined;\r\n    }\r\n\r\n    label.remove();\r\n    this.optionInputFields.splice(idx, 1);\r\n\r\n    this.optionInputFields.forEach((inputField, idx) => {\r\n      inputField.options.labelOptions.length = 0;\r\n      inputField.options.labelOptions.push(idx + 1);\r\n      const i18nElement = I18n.weakMap.get(inputField.label.firstElementChild as HTMLElement);\r\n      i18nElement.update();\r\n    });\r\n\r\n    this.handleChange();\r\n  };\r\n\r\n  private appendMoreField() {\r\n    const tempId = this.tempId++;\r\n    const idx = this.questions.childElementCount + 1;\r\n    const questionField = new InputField({\r\n      placeholder: 'NewPoll.OptionsAddOption', \r\n      label: 'NewPoll.OptionLabel',\r\n      labelOptions: [idx],\r\n      name: 'question-' + tempId, \r\n      maxLength: MAX_LENGTH_OPTION\r\n    });\r\n    questionField.input.addEventListener('input', this.onInput);\r\n\r\n    const radioField = new RadioField({\r\n      text: '', \r\n      name: 'question'\r\n    });\r\n    radioField.main.append(questionField.container);\r\n    questionField.input.addEventListener('click', cancelEvent);\r\n    radioField.label.classList.add('hidden-widget');\r\n    radioField.input.disabled = true;\r\n    if(!this.quizCheckboxField.input.checked) {\r\n      radioField.label.classList.remove('radio-field');\r\n    }\r\n    radioField.input.addEventListener('change', () => {\r\n      const checked = radioField.input.checked;\r\n      if(checked) {\r\n        const idx = whichChild(radioField.label);\r\n        this.correctAnswers = [new Uint8Array([idx])];\r\n        this.handleChange();\r\n      }\r\n    });\r\n\r\n    const deleteBtn = document.createElement('span');\r\n    deleteBtn.classList.add('btn-icon', 'tgico-close');\r\n    questionField.container.append(deleteBtn);\r\n  \r\n    deleteBtn.addEventListener('click', this.onDeleteClick, {once: true});\r\n\r\n    this.questions.append(radioField.label);\r\n\r\n    this.scrollable.scrollIntoViewNew(this.questions.lastElementChild as HTMLElement, 'center');\r\n    //this.scrollable.scrollTo(this.scrollable.scrollHeight, 'top', true, true);\r\n\r\n    this.optionInputFields.push(questionField);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { isMobile, isApple } from \"../userAgent\";\r\n\r\nexport default function isSendShortcutPressed(e: KeyboardEvent) {\r\n  if(e.key === 'Enter' && !isMobile && !e.isComposing) {\r\n    /* if(e.ctrlKey || e.metaKey) {\r\n      this.messageInput.innerHTML += '<br>';\r\n      placeCaretAtEnd(this.message)\r\n      return;\r\n    } */\r\n\r\n    if(rootScope.settings.sendShortcut === 'enter') {\r\n      if(e.shiftKey || e.ctrlKey || e.metaKey) {\r\n        return;\r\n      }\r\n\r\n      return true;\r\n    } else {\r\n      const secondaryKey = isApple ? e.metaKey : e.ctrlKey;\r\n      if(e.shiftKey || (isApple ? e.ctrlKey : e.metaKey)) {\r\n        return;\r\n      }\r\n\r\n      if(secondaryKey) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { isTouchSupported } from \"../touchSupport\";\r\n\r\nexport default function placeCaretAtEnd(el: HTMLElement) {\r\n  if(isTouchSupported) {\r\n    return;\r\n  }\r\n  \r\n  el.focus();\r\n  if(typeof window.getSelection !== \"undefined\" && typeof document.createRange !== \"undefined\") {\r\n    var range = document.createRange();\r\n    range.selectNodeContents(el);\r\n    range.collapse(false);\r\n    var sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n    // @ts-ignore\r\n  } else if(typeof document.body.createTextRange !== \"undefined\") {\r\n    // @ts-ignore\r\n    var textRange = document.body.createTextRange();\r\n    textRange.moveToElementText(el);\r\n    textRange.collapse(false);\r\n    textRange.select();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type Chat from \"../chat/chat\";\r\nimport InputField from \"../inputField\";\r\nimport PopupElement from \".\";\r\nimport Scrollable from \"../scrollable\";\r\nimport { toast } from \"../toast\";\r\nimport { prepareAlbum, wrapDocument } from \"../wrappers\";\r\nimport CheckboxField from \"../checkboxField\";\r\nimport SendContextMenu from \"../chat/sendContextMenu\";\r\nimport { createPosterFromVideo, onVideoLoad } from \"../../helpers/files\";\r\nimport { MyDocument } from \"../../lib/appManagers/appDocsManager\";\r\nimport I18n, { i18n, LangPackKey } from \"../../lib/langPack\";\r\nimport appDownloadManager from \"../../lib/appManagers/appDownloadManager\";\r\nimport calcImageInBox from \"../../helpers/calcImageInBox\";\r\nimport isSendShortcutPressed from \"../../helpers/dom/isSendShortcutPressed\";\r\nimport placeCaretAtEnd from \"../../helpers/dom/placeCaretAtEnd\";\r\n\r\ntype SendFileParams = Partial<{\r\n  file: File,\r\n  objectURL: string,\r\n  thumbBlob: Blob,\r\n  thumbURL: string,\r\n  width: number,\r\n  height: number,\r\n  duration: number\r\n}>;\r\n\r\nconst MAX_LENGTH_CAPTION = 1024;\r\n\r\n// TODO: .gif upload as video\r\n\r\nexport default class PopupNewMedia extends PopupElement {\r\n  private input: HTMLElement;\r\n  private mediaContainer: HTMLElement;\r\n  private groupCheckboxField: CheckboxField;\r\n  private wasInputValue = '';\r\n\r\n  private willAttach: Partial<{\r\n    type: 'media' | 'document',\r\n    isMedia: true,\r\n    group: boolean,\r\n    sendFileDetails: SendFileParams[]\r\n  }> = {\r\n    sendFileDetails: [],\r\n    group: false\r\n  };\r\n  private inputField: InputField;\r\n\r\n  constructor(private chat: Chat, files: File[], willAttachType: PopupNewMedia['willAttach']['type']) {\r\n    super('popup-send-photo popup-new-media', null, {closable: true, withConfirm: 'Modal.Send'});\r\n\r\n    this.willAttach.type = willAttachType;\r\n\r\n    this.btnConfirm.addEventListener('click', () => this.send());\r\n\r\n    if(this.chat.type !== 'scheduled') {\r\n      const sendMenu = new SendContextMenu({\r\n        onSilentClick: () => {\r\n          this.chat.input.sendSilent = true;\r\n          this.send();\r\n        },\r\n        onScheduleClick: () => {\r\n          this.chat.input.scheduleSending(() => {\r\n            this.send();\r\n          });\r\n        },\r\n        openSide: 'bottom-left',\r\n        onContextElement: this.btnConfirm,\r\n      });\r\n\r\n      sendMenu.setPeerId(this.chat.peerId);\r\n\r\n      this.header.append(sendMenu.sendMenu);\r\n    }\r\n\r\n    this.mediaContainer = document.createElement('div');\r\n    this.mediaContainer.classList.add('popup-photo');\r\n    const scrollable = new Scrollable(null);\r\n    scrollable.container.append(this.mediaContainer);\r\n    \r\n    this.inputField = new InputField({\r\n      placeholder: 'PreviewSender.CaptionPlaceholder',\r\n      label: 'Caption',\r\n      name: 'photo-caption',\r\n      maxLength: MAX_LENGTH_CAPTION,\r\n      showLengthOn: 80\r\n    });\r\n    this.input = this.inputField.input;\r\n\r\n    this.inputField.value = this.wasInputValue = this.chat.input.messageInputField.value;\r\n    this.chat.input.messageInputField.value = '';\r\n\r\n    this.container.append(scrollable.container);\r\n\r\n    if(files.length > 1) {\r\n      this.groupCheckboxField = new CheckboxField({\r\n        text: 'PreviewSender.GroupItems', \r\n        name: 'group-items'\r\n      });\r\n      this.container.append(this.groupCheckboxField.label, this.inputField.container);\r\n  \r\n      this.groupCheckboxField.input.checked = true;\r\n      this.willAttach.group = true;\r\n\r\n      this.groupCheckboxField.input.addEventListener('change', () => {\r\n        const checked = this.groupCheckboxField.input.checked;\r\n  \r\n        this.willAttach.group = checked;\r\n        this.willAttach.sendFileDetails.length = 0;\r\n\r\n        //this.mediaContainer.innerHTML = '';\r\n        //this.container.classList.remove('is-media', 'is-document', 'is-album');\r\n        this.attachFiles(files);\r\n      });\r\n    }\r\n    \r\n    this.container.append(this.inputField.container);\r\n\r\n    this.attachFiles(files);\r\n  }\r\n\r\n  private onKeyDown = (e: KeyboardEvent) => {\r\n    const target = e.target as HTMLElement;\r\n    if(target !== this.input) {\r\n      if(target.tagName === 'INPUT' || target.hasAttribute('contenteditable')) {\r\n        return;\r\n      }\r\n\r\n      this.input.focus();\r\n      placeCaretAtEnd(this.input);\r\n    }\r\n    \r\n    if(isSendShortcutPressed(e)) {\r\n      this.btnConfirm.click();\r\n    }\r\n  };\r\n\r\n  public send(force = false) {\r\n    if(this.chat.type === 'scheduled' && !force) {\r\n      this.chat.input.scheduleSending(() => {\r\n        this.send(true);\r\n      });\r\n      \r\n      return;\r\n    }\r\n\r\n    let caption = this.inputField.value;\r\n    if(caption.length > MAX_LENGTH_CAPTION) {\r\n      toast(I18n.format('Error.PreviewSender.CaptionTooLong', true));\r\n      return;\r\n    }\r\n\r\n    this.hide();\r\n    const willAttach = this.willAttach;\r\n    willAttach.isMedia = willAttach.type === 'media' ? true : undefined;\r\n\r\n    //console.log('will send files with options:', willAttach);\r\n\r\n    const peerId = this.chat.peerId;\r\n    const input = this.chat.input;\r\n    const silent = input.sendSilent;\r\n    const scheduleDate = input.scheduleDate;\r\n\r\n    if(willAttach.sendFileDetails.length > 1 && willAttach.group) {\r\n      for(let i = 0; i < willAttach.sendFileDetails.length;) {\r\n        let firstType = willAttach.sendFileDetails[i].file.type.split('/')[0];\r\n        for(var k = 0; k < 10 && i < willAttach.sendFileDetails.length; ++i, ++k) {\r\n          const type = willAttach.sendFileDetails[i].file.type.split('/')[0];\r\n          if(firstType !== type) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        const w = {...willAttach};\r\n        w.sendFileDetails = willAttach.sendFileDetails.slice(i - k, i);\r\n\r\n        this.chat.appMessagesManager.sendAlbum(peerId, w.sendFileDetails.map(d => d.file), Object.assign({\r\n          caption,\r\n          replyToMsgId: input.replyToMsgId,\r\n          threadId: this.chat.threadId,\r\n          isMedia: willAttach.isMedia,\r\n          silent,\r\n          scheduleDate,\r\n          clearDraft: true as true\r\n        }, w));\r\n\r\n        caption = undefined;\r\n        input.replyToMsgId = this.chat.threadId;\r\n      }\r\n    } else {\r\n      if(caption) {\r\n        if(willAttach.sendFileDetails.length > 1) {\r\n          this.chat.appMessagesManager.sendText(peerId, caption, {\r\n            replyToMsgId: input.replyToMsgId, \r\n            threadId: this.chat.threadId,\r\n            silent, \r\n            scheduleDate,\r\n            clearDraft: true\r\n          });\r\n          caption = '';\r\n          //input.replyToMsgId = undefined;\r\n        }\r\n      }\r\n  \r\n      const promises = willAttach.sendFileDetails.map(params => {\r\n        const promise = this.chat.appMessagesManager.sendFile(peerId, params.file, Object.assign({\r\n          //isMedia: willAttach.isMedia, \r\n          isMedia: willAttach.isMedia, \r\n          caption,\r\n          replyToMsgId: input.replyToMsgId,\r\n          threadId: this.chat.threadId,\r\n          silent,\r\n          scheduleDate,\r\n          clearDraft: true as true\r\n        }, params));\r\n\r\n        caption = '';\r\n        return promise;\r\n      });\r\n\r\n      input.replyToMsgId = this.chat.threadId;\r\n    }\r\n\r\n    //Promise.all(promises);\r\n\r\n    //appMessagesManager.sendFile(appImManager.peerId, willAttach.file, willAttach);\r\n    \r\n    input.onMessageSent();\r\n  }\r\n\r\n  public attachFile = (file: File) => {\r\n    const willAttach = this.willAttach;\r\n    return new Promise<HTMLDivElement>((resolve) => {\r\n      const params: SendFileParams = {};\r\n      params.file = file;\r\n      //console.log('selected file:', file, typeof(file), willAttach);\r\n      const itemDiv = document.createElement('div');\r\n      switch(willAttach.type) {\r\n        case 'media': {\r\n          const isVideo = file.type.indexOf('video/') === 0;\r\n\r\n          itemDiv.classList.add('popup-item-media');\r\n\r\n          if(isVideo) {\r\n            const video = document.createElement('video');\r\n            const source = document.createElement('source');\r\n            source.src = params.objectURL = URL.createObjectURL(file);\r\n            video.autoplay = true;\r\n            video.controls = false;\r\n            video.muted = true;\r\n            video.setAttribute('playsinline', 'true');\r\n\r\n            video.addEventListener('timeupdate', () => {\r\n              video.pause();\r\n            }, {once: true});\r\n\r\n            onVideoLoad(video).then(() => {\r\n              params.width = video.videoWidth;\r\n              params.height = video.videoHeight;\r\n              params.duration = Math.floor(video.duration);\r\n\r\n              itemDiv.append(video);\r\n              createPosterFromVideo(video).then(blob => {\r\n                params.thumbBlob = blob;\r\n                params.thumbURL = URL.createObjectURL(blob);\r\n                resolve(itemDiv);\r\n              });\r\n            });\r\n\r\n            video.append(source);\r\n          } else {\r\n            const img = new Image();\r\n            img.src = params.objectURL = URL.createObjectURL(file);\r\n            img.onload = () => {\r\n              params.width = img.naturalWidth;\r\n              params.height = img.naturalHeight;\r\n\r\n              itemDiv.append(img);\r\n              resolve(itemDiv);\r\n            };\r\n          }\r\n          \r\n          break;\r\n        }\r\n\r\n        case 'document': {\r\n          const isPhoto = file.type.indexOf('image/') !== -1;\r\n          const isAudio = file.type.indexOf('audio/') !== -1;\r\n          if(isPhoto || isAudio) {\r\n            params.objectURL = URL.createObjectURL(file);\r\n          }\r\n\r\n          const doc = {\r\n            _: 'document',\r\n            file: file,\r\n            file_name: file.name || '',\r\n            size: file.size,\r\n            type: isPhoto ? 'photo' : 'doc'\r\n          } as MyDocument;\r\n\r\n          const cacheContext = appDownloadManager.getCacheContext(doc);\r\n          cacheContext.url = params.objectURL;\r\n          cacheContext.downloaded = file.size;\r\n\r\n          const docDiv = wrapDocument({\r\n            message: {\r\n              _: 'message',\r\n              pFlags: {\r\n                is_outgoing: true\r\n              },\r\n              mid: 0,\r\n              peerId: 0,\r\n              media: {\r\n                _: 'messageMediaDocument',\r\n                document: doc\r\n              }\r\n            } as any\r\n          });\r\n\r\n          const finish = () => {\r\n            itemDiv.append(docDiv);\r\n            resolve(itemDiv);\r\n          };\r\n\r\n          if(isPhoto) {\r\n            const img = new Image();\r\n            img.src = params.objectURL;\r\n            img.onload = () => {\r\n              params.width = img.naturalWidth;\r\n              params.height = img.naturalHeight;\r\n\r\n              finish();\r\n            };\r\n\r\n            img.onerror = finish;\r\n          } else {\r\n            finish();\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      willAttach.sendFileDetails.push(params);\r\n    });\r\n  };\r\n\r\n  public attachFiles(files: File[]) {\r\n    const container = this.container;\r\n    const willAttach = this.willAttach;\r\n\r\n    /* if(files.length > 10 && willAttach.type === 'media') {\r\n      willAttach.type = 'document';\r\n    } */\r\n\r\n    files = files.filter(file => {\r\n      if(willAttach.type === 'media') {\r\n        return ['image/', 'video/'].find(s => file.type.indexOf(s) === 0);\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    Promise.all(files.map(this.attachFile)).then(results => {\r\n      this.container.classList.remove('is-media', 'is-document', 'is-album');\r\n      this.mediaContainer.innerHTML = '';\r\n\r\n      if(files.length) {\r\n        let key: LangPackKey;\r\n        const args: any[] = [];\r\n        if(willAttach.type === 'document') {\r\n          key = 'PreviewSender.SendFile';\r\n          args.push(files.length);\r\n          container.classList.add('is-document');\r\n        } else {\r\n          container.classList.add('is-media');\r\n  \r\n          let foundPhotos = 0;\r\n          let foundVideos = 0;\r\n          files.forEach(file => {\r\n            if(file.type.indexOf('image/') === 0) ++foundPhotos;\r\n            else if(file.type.indexOf('video/') === 0) ++foundVideos;\r\n          });\r\n          \r\n          const sum = foundPhotos + foundVideos;\r\n          if(sum > 1 && willAttach.group) {\r\n            key = 'PreviewSender.SendAlbum';\r\n            const albumsLength = Math.ceil(sum / 10);\r\n            args.push(albumsLength);\r\n          } else if(foundPhotos) {\r\n            key = 'PreviewSender.SendPhoto';\r\n            args.push(foundPhotos);\r\n          } else if(foundVideos) {\r\n            key = 'PreviewSender.SendVideo';\r\n            args.push(foundVideos);\r\n          }\r\n        }\r\n\r\n        this.title.textContent = '';\r\n        this.title.append(i18n(key, args));\r\n      }\r\n\r\n      if(willAttach.type === 'media') {\r\n        if(willAttach.sendFileDetails.length > 1 && willAttach.group) {\r\n          container.classList.add('is-album');\r\n\r\n          for(let i = 0; i < results.length; i += 10) {\r\n            const albumContainer = document.createElement('div');\r\n            albumContainer.classList.add('popup-album');\r\n\r\n            albumContainer.append(...results.slice(i, i + 10));\r\n            prepareAlbum({\r\n              container: albumContainer,\r\n              items: willAttach.sendFileDetails.slice(i, i + 10).map(o => ({w: o.width, h: o.height})),\r\n              maxWidth: 380,\r\n              minWidth: 100,\r\n              spacing: 4\r\n            });\r\n\r\n            this.mediaContainer.append(albumContainer);\r\n          }\r\n\r\n          //console.log('chatInput album layout:', layout);\r\n        } else {\r\n          for(let i = 0; i < results.length; ++i) {\r\n            const params = willAttach.sendFileDetails[i];\r\n            const div = results[i];\r\n            const size = calcImageInBox(params.width, params.height, 380, 320);\r\n            div.style.width = size.width + 'px';\r\n            div.style.height = size.height + 'px';\r\n            this.mediaContainer.append(div);\r\n          }\r\n        }\r\n      } else {\r\n        this.mediaContainer.append(...results);\r\n      }\r\n\r\n      // show now\r\n      if(!this.element.classList.contains('active')) {\r\n        document.body.addEventListener('keydown', this.onKeyDown);\r\n        this.onClose = () => {\r\n          if(this.wasInputValue) {\r\n            this.chat.input.messageInputField.value = this.wasInputValue;\r\n          }\r\n\r\n          document.body.removeEventListener('keydown', this.onKeyDown);\r\n        };\r\n        this.show();\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport fastSmoothScroll from \"../fastSmoothScroll\";\r\nimport { cancelEvent } from \"./cancelEvent\";\r\nimport { attachClickEvent, detachClickEvent } from \"./clickEvent\";\r\nimport findUpAsChild from \"./findUpAsChild\";\r\nimport findUpClassName from \"./findUpClassName\";\r\n\r\ntype ArrowKey = 'ArrowUp' | 'ArrowDown' | 'ArrowLeft' | 'ArrowRight';\r\nconst HANDLE_EVENT = 'keydown';\r\nconst ACTIVE_CLASS_NAME = 'active';\r\n\r\nexport default function attachListNavigation({list, type, onSelect, once, waitForKey}: {\r\n  list: HTMLElement, \r\n  type: 'xy' | 'x' | 'y',\r\n  onSelect: (target: Element) => void | boolean,\r\n  once: boolean,\r\n  waitForKey?: string\r\n}) {\r\n  const keyNames: Set<ArrowKey> = new Set(['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight']);\r\n\r\n  let target: Element;\r\n  const getCurrentTarget = () => {\r\n    return target || list.querySelector('.' + ACTIVE_CLASS_NAME) || list.firstElementChild;\r\n  };\r\n\r\n  const setCurrentTarget = (_target: Element, scrollTo: boolean) => {\r\n    if(target === _target) {\r\n      return;\r\n    }\r\n\r\n    let hadTarget = false;\r\n    if(target) {\r\n      hadTarget = true;\r\n      target.classList.remove(ACTIVE_CLASS_NAME);\r\n    }\r\n\r\n    target = _target;\r\n    target.classList.add(ACTIVE_CLASS_NAME);\r\n\r\n    if(hadTarget && scrollable && scrollTo) {\r\n      fastSmoothScroll(scrollable, target as HTMLElement, 'center', undefined, undefined, undefined, 100, type === 'x' ? 'x' : 'y');\r\n    }\r\n  };\r\n\r\n  const getNextTargetX = (currentTarget: Element, isNext: boolean) => {\r\n    let nextTarget: Element;\r\n    if(isNext) nextTarget = currentTarget.nextElementSibling || list.firstElementChild;\r\n    else nextTarget = currentTarget.previousElementSibling || list.lastElementChild;\r\n\r\n    return nextTarget;\r\n  };\r\n\r\n  const getNextTargetY = (currentTarget: Element, isNext: boolean) => {\r\n    const property = isNext ? 'nextElementSibling' : 'previousElementSibling';\r\n    const endProperty = isNext ? 'firstElementChild' : 'lastElementChild';\r\n    const currentRect = currentTarget.getBoundingClientRect();\r\n\r\n    let nextTarget = currentTarget[property] || list[endProperty];\r\n    while(nextTarget !== currentTarget) {\r\n      const targetRect = nextTarget.getBoundingClientRect();\r\n      if(targetRect.x === currentRect.x && targetRect.y !== currentRect.y) {\r\n        break;\r\n      }\r\n\r\n      nextTarget = nextTarget[property] || list[endProperty];\r\n    }\r\n\r\n    return nextTarget;\r\n  };\r\n\r\n  let handleArrowKey: (currentTarget: Element, key: ArrowKey) => Element;\r\n  if(type === 'xy') { // flex-direction: row; flex-wrap: wrap;\r\n    handleArrowKey = (currentTarget, key) => {\r\n      if(key === 'ArrowUp' || key === 'ArrowDown') return getNextTargetY(currentTarget, key === 'ArrowDown');\r\n      else return getNextTargetX(currentTarget, key === 'ArrowRight');\r\n    };\r\n  } else { // flex-direction: row | column;\r\n    handleArrowKey = (currentTarget, key) => getNextTargetX(currentTarget, key === 'ArrowRight' || key === 'ArrowDown');\r\n  }\r\n\r\n  let onKeyDown = (e: KeyboardEvent) => {\r\n    if(!keyNames.has(e.key as any)) {\r\n      if(e.key === 'Enter') {\r\n        cancelEvent(e);\r\n        fireSelect(getCurrentTarget());\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    cancelEvent(e);\r\n\r\n    if(list.childElementCount > 1) {\r\n      let currentTarget = getCurrentTarget();\r\n      currentTarget = handleArrowKey(currentTarget, e.key as any);\r\n      setCurrentTarget(currentTarget, true);\r\n    }\r\n  };\r\n\r\n  const scrollable = findUpClassName(list, 'scrollable');\r\n  list.classList.add('navigable-list');\r\n\r\n  const onMouseMove = (e: MouseEvent) => {\r\n    const target = findUpAsChild(e.target, list) as HTMLElement;\r\n    if(!target) {\r\n      return;\r\n    }\r\n\r\n    setCurrentTarget(target, false);\r\n  };\r\n\r\n  const onClick = (e: Event) => {\r\n    cancelEvent(e); // cancel keyboard closening\r\n\r\n    const target = findUpAsChild(e.target, list) as HTMLElement;\r\n    if(!target) {\r\n      return;\r\n    }\r\n\r\n    setCurrentTarget(target, false);\r\n    fireSelect(getCurrentTarget());\r\n  };\r\n\r\n  const fireSelect = (target: Element) => {\r\n    const canContinue = onSelect(target);\r\n    if(canContinue !== undefined ? !canContinue : once) {\r\n      detach();\r\n    }\r\n  };\r\n\r\n  const detach = () => {\r\n    // input.removeEventListener(HANDLE_EVENT, onKeyDown, {capture: true});\r\n    document.removeEventListener(HANDLE_EVENT, onKeyDown, {capture: true});\r\n    list.removeEventListener('mousemove', onMouseMove);\r\n    detachClickEvent(list, onClick);\r\n  };\r\n\r\n  const resetTarget = () => {\r\n    if(waitForKey) return;\r\n    setCurrentTarget(list.firstElementChild, false);\r\n  };\r\n\r\n  if(waitForKey) {\r\n    const _onKeyDown = onKeyDown;\r\n    onKeyDown = (e) => {\r\n      if(e.key === waitForKey) {\r\n        cancelEvent(e);\r\n\r\n        document.removeEventListener(HANDLE_EVENT, onKeyDown, {capture: true});\r\n        onKeyDown = _onKeyDown;\r\n        document.addEventListener(HANDLE_EVENT, onKeyDown, {capture: true, passive: false});\r\n\r\n        waitForKey = undefined;\r\n        resetTarget();\r\n      }\r\n    };\r\n  } else {\r\n    resetTarget();\r\n  }\r\n\r\n  // const input = document.activeElement as HTMLElement;\r\n  // input.addEventListener(HANDLE_EVENT, onKeyDown, {capture: true, passive: false});\r\n  document.addEventListener(HANDLE_EVENT, onKeyDown, {capture: true, passive: false});\r\n  list.addEventListener('mousemove', onMouseMove, {passive: true});\r\n  attachClickEvent(list, onClick);\r\n\r\n  return {\r\n    detach,\r\n    resetTarget\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport attachListNavigation from \"../../helpers/dom/attachListNavigation\";\r\nimport EventListenerBase from \"../../helpers/eventListenerBase\";\r\nimport { safeAssign } from \"../../helpers/object\";\r\nimport { isMobile } from \"../../helpers/userAgent\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport appNavigationController, { NavigationItem } from \"../appNavigationController\";\r\nimport SetTransition from \"../singleTransition\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\n\r\nexport default class AutocompleteHelper extends EventListenerBase<{\r\n  hidden: () => void,\r\n  visible: () => void,\r\n}> {\r\n  protected hidden = true;\r\n  protected container: HTMLElement;\r\n  protected list: HTMLElement;\r\n  protected resetTarget: () => void;\r\n  protected detach: () => void;\r\n  protected init?(): void;\r\n\r\n  protected controller: AutocompleteHelperController;\r\n  protected listType: 'xy' | 'x' | 'y';\r\n  protected onSelect: (target: Element) => boolean | void;\r\n  protected waitForKey?: string;\r\n\r\n  protected navigationItem: NavigationItem;\r\n\r\n  constructor(options: {\r\n    appendTo: HTMLElement,\r\n    controller: AutocompleteHelper['controller'],\r\n    listType: AutocompleteHelper['listType'],\r\n    onSelect: AutocompleteHelper['onSelect'],\r\n    waitForKey?: AutocompleteHelper['waitForKey']\r\n  }) {\r\n    super(false);\r\n\r\n    safeAssign(this, options);\r\n    \r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('autocomplete-helper', 'z-depth-1');\r\n    \r\n    options.appendTo.append(this.container);\r\n    \r\n    this.attachNavigation();\r\n\r\n    this.controller.addHelper(this);\r\n  }\r\n\r\n  protected onVisible = () => {\r\n    if(this.detach) { // it can be so because 'visible' calls before animation's end\r\n      this.detach();\r\n    }\r\n\r\n    const list = this.list;\r\n    const {detach, resetTarget} = attachListNavigation({\r\n      list, \r\n      type: this.listType,\r\n      onSelect: this.onSelect,\r\n      once: true,\r\n      waitForKey: this.waitForKey\r\n    });\r\n\r\n    this.detach = detach;\r\n    this.resetTarget = resetTarget;\r\n    if(!isMobile && !this.navigationItem) {\r\n      this.navigationItem = {\r\n        type: 'autocomplete-helper',\r\n        onPop: () => this.toggle(true),\r\n        noBlurOnPop: true\r\n      };\r\n\r\n      appNavigationController.pushItem(this.navigationItem);\r\n    }\r\n\r\n    this.addEventListener('hidden', () => {\r\n      this.resetTarget = undefined;\r\n      this.detach = undefined;\r\n\r\n      list.innerHTML = '';\r\n      detach();\r\n\r\n      if(this.navigationItem) {\r\n        appNavigationController.removeItem(this.navigationItem);\r\n      }\r\n    }, true);\r\n  };\r\n\r\n  protected attachNavigation() {\r\n    this.addEventListener('visible', this.onVisible);\r\n  }\r\n\r\n  public toggle(hide?: boolean, fromController = false) {\r\n    if(this.init) {\r\n      return;\r\n    }\r\n    \r\n    if(hide === undefined) {\r\n      hide = this.container.classList.contains('is-visible') && !this.container.classList.contains('backwards');\r\n    }\r\n\r\n    if(this.hidden === hide) {\r\n      if(!hide && this.resetTarget) {\r\n        this.resetTarget();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.hidden = hide;\r\n\r\n    if(!hide) {\r\n      this.controller.hideOtherHelpers(this);\r\n      this.dispatchEvent('visible'); // fire it before so target will be set\r\n    } else if(!fromController) {\r\n      this.controller.hideOtherHelpers();\r\n    }\r\n\r\n    SetTransition(this.container, 'is-visible', !hide, rootScope.settings.animationsEnabled ? 200 : 0, () => {\r\n      this.hidden && this.dispatchEvent('hidden');\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport { MyDocument } from \"../../lib/appManagers/appDocsManager\";\r\nimport { CHAT_ANIMATION_GROUP } from \"../../lib/appManagers/appImManager\";\r\nimport appStickersManager from \"../../lib/appManagers/appStickersManager\";\r\nimport { EmoticonsDropdown } from \"../emoticonsDropdown\";\r\nimport { SuperStickerRenderer } from \"../emoticonsDropdown/tabs/stickers\";\r\nimport LazyLoadQueue from \"../lazyLoadQueue\";\r\nimport Scrollable from \"../scrollable\";\r\nimport AutocompleteHelper from \"./autocompleteHelper\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\n\r\nexport default class StickersHelper extends AutocompleteHelper {\r\n  private scrollable: Scrollable;\r\n  private superStickerRenderer: SuperStickerRenderer;\r\n  private lazyLoadQueue: LazyLoadQueue;\r\n  private onChangeScreen: () => void;\r\n\r\n  constructor(appendTo: HTMLElement, controller: AutocompleteHelperController) {\r\n    super({\r\n      appendTo, \r\n      controller,\r\n      listType: 'xy', \r\n      onSelect: (target) => {\r\n        EmoticonsDropdown.onMediaClick({target}, true);\r\n      }, \r\n      waitForKey: 'ArrowUp'\r\n    });\r\n\r\n    this.container.classList.add('stickers-helper');\r\n\r\n    this.addEventListener('visible', () => {\r\n      setTimeout(() => { // it is not rendered yet\r\n        this.scrollable.container.scrollTop = 0;\r\n      }, 0);\r\n    });\r\n\r\n    this.addEventListener('hidden', () => {\r\n      if(this.onChangeScreen) {\r\n        mediaSizes.removeEventListener('changeScreen', this.onChangeScreen);\r\n        this.onChangeScreen = undefined;\r\n      }\r\n    });\r\n  }\r\n\r\n  public checkEmoticon(emoticon: string) {\r\n    const middleware = this.controller.getMiddleware();\r\n\r\n    if(this.lazyLoadQueue) {\r\n      this.lazyLoadQueue.clear();\r\n    }\r\n\r\n    appStickersManager.getStickersByEmoticon(emoticon)\r\n    .then((stickers) => {\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n\r\n      if(this.init) {\r\n        this.init();\r\n        this.init = null;\r\n      }\r\n\r\n      const container = this.list.cloneNode() as HTMLElement;\r\n\r\n      let ready: Promise<void>;\r\n\r\n      this.lazyLoadQueue.clear();\r\n      if(stickers.length) {\r\n        ready = new Promise<void>((resolve) => {\r\n          const promises: Promise<any>[] = [];\r\n          stickers.forEach(sticker => {\r\n            container.append(this.superStickerRenderer.renderSticker(sticker as MyDocument, undefined, promises));\r\n          });\r\n\r\n          (Promise.all(promises) as Promise<any>).then(resolve, resolve);\r\n        });\r\n      } else {\r\n        ready = Promise.resolve();\r\n      }\r\n\r\n      ready.then(() => {\r\n        this.list.replaceWith(container);\r\n        this.list = container;\r\n\r\n        if(!this.onChangeScreen) {\r\n          this.onChangeScreen = () => {\r\n            const width = (this.list.childElementCount * mediaSizes.active.esgSticker.width) + (this.list.childElementCount - 1 * 1);\r\n            this.list.style.width = width + 'px';\r\n          };\r\n          mediaSizes.addEventListener('changeScreen', this.onChangeScreen);\r\n        }\r\n\r\n        this.onChangeScreen();\r\n\r\n        this.toggle(!stickers.length);\r\n        this.scrollable.scrollTop = 0;\r\n      });\r\n    });\r\n  }\r\n\r\n  protected init() {\r\n    this.list = document.createElement('div');\r\n    this.list.classList.add('stickers-helper-stickers', 'super-stickers');\r\n\r\n    this.container.append(this.list);\r\n\r\n    this.scrollable = new Scrollable(this.container);\r\n    this.lazyLoadQueue = new LazyLoadQueue();\r\n    this.superStickerRenderer = new SuperStickerRenderer(this.lazyLoadQueue, CHAT_ANIMATION_GROUP);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport PopupDatePicker from \"./datePicker\";\r\n\r\nconst getMinDate = () => {\r\n  const date = new Date();\r\n  //date.setDate(date.getDate() - 1);\r\n  date.setHours(0, 0, 0, 0);\r\n  return date;\r\n};\r\n\r\nexport default class PopupSchedule extends PopupDatePicker {\r\n  constructor(initDate: Date, onPick: (timestamp: number) => void) {\r\n    super(initDate, onPick, {\r\n      noButtons: true,\r\n      noTitle: true,\r\n      closable: true,\r\n      withConfirm: true,\r\n      minDate: getMinDate(),\r\n      maxDate: (() => {\r\n        const date = new Date();\r\n        date.setFullYear(date.getFullYear() + 1);\r\n        date.setDate(date.getDate() - 1);\r\n        return date;\r\n      })(),\r\n      withTime: true,\r\n      showOverflowMonths: true\r\n    });\r\n\r\n    this.element.classList.add('popup-schedule');\r\n    this.header.append(this.controlsDiv);\r\n    this.title.replaceWith(this.monthTitle);\r\n    this.body.append(this.btnConfirm);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValueWithCaret(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const sel = window.getSelection();\r\n  let selNode: Node;\r\n  let selOffset: number;\r\n  if(sel && sel.rangeCount) {\r\n    const range = sel.getRangeAt(0);\r\n    if(range.startContainer &&\r\n      range.startContainer == range.endContainer &&\r\n      range.startOffset == range.endOffset) {\r\n      selNode = range.startContainer;\r\n      selOffset = range.startOffset;\r\n    }\r\n  }\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, selNode, selOffset, entities);\r\n\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  const caretPos = value.indexOf('\\x01');\r\n  if(caretPos != -1) {\r\n    value = value.substr(0, caretPos) + value.substr(caretPos + 1);\r\n  }\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities) {\r\n    RichTextProcessor.combineSameEntities(entities);\r\n  }\r\n\r\n  return {value, entities, caretPos};\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ChatInput from \"./input\";\r\nimport type { AppEmojiManager } from \"../../lib/appManagers/appEmojiManager\";\r\nimport { appendEmoji, getEmojiFromElement } from \"../emoticonsDropdown/tabs/emoji\";\r\nimport { ScrollableX } from \"../scrollable\";\r\nimport AutocompleteHelper from \"./autocompleteHelper\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\n\r\nexport default class EmojiHelper extends AutocompleteHelper {\r\n  private scrollable: ScrollableX;\r\n\r\n  constructor(appendTo: HTMLElement, \r\n    controller: AutocompleteHelperController, \r\n    chatInput: ChatInput, \r\n    private appEmojiManager: AppEmojiManager) {\r\n    super({\r\n      appendTo,\r\n      controller, \r\n      listType: 'x', \r\n      onSelect: (target) => {\r\n        chatInput.onEmojiSelected(getEmojiFromElement(target as any), true);\r\n      }\r\n    });\r\n\r\n    this.container.classList.add('emoji-helper');\r\n  }\r\n\r\n  protected init() {\r\n    this.list = document.createElement('div');\r\n    this.list.classList.add('emoji-helper-emojis', 'super-emojis');\r\n\r\n    this.container.append(this.list);\r\n\r\n    this.scrollable = new ScrollableX(this.container);\r\n\r\n    this.addEventListener('visible', () => {\r\n      setTimeout(() => { // it is not rendered yet\r\n        this.scrollable.container.scrollLeft = 0;\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  public render(emojis: string[], waitForKey: boolean) {\r\n    if(this.init) {\r\n      if(!emojis.length) {\r\n        return;\r\n      }\r\n\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n    \r\n    emojis = emojis.slice(0, 80);\r\n\r\n    if(emojis.length) {\r\n      this.list.innerHTML = '';\r\n      emojis.forEach(emoji => {\r\n        appendEmoji(emoji, this.list, false, true);\r\n      });\r\n    }\r\n\r\n    this.waitForKey = waitForKey ? 'ArrowUp' : undefined;\r\n    this.toggle(!emojis.length);\r\n\r\n    /* window.requestAnimationFrame(() => {\r\n      this.container.style.width = (3 * 2) + (emojis.length * 44) + 'px';\r\n    }); */\r\n  }\r\n\r\n  public checkQuery(query: string, firstChar: string) {\r\n    const middleware = this.controller.getMiddleware();\r\n    this.appEmojiManager.getBothEmojiKeywords().then(() => {\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n\r\n      const q = query.replace(/^:/, '');\r\n      const emojis = this.appEmojiManager.searchEmojis(q);\r\n      this.render(emojis, firstChar !== ':');\r\n      //console.log(emojis);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport AvatarElement from \"../avatar\";\r\nimport PeerTitle from \"../peerTitle\";\r\nimport Scrollable from \"../scrollable\";\r\nimport AutocompleteHelper from \"./autocompleteHelper\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\n\r\nexport default class AutocompletePeerHelper extends AutocompleteHelper {\r\n  protected static BASE_CLASS = 'autocomplete-peer-helper';\r\n  protected static BASE_CLASS_LIST_ELEMENT = AutocompletePeerHelper.BASE_CLASS + '-list-element';\r\n  private scrollable: Scrollable;\r\n\r\n  constructor(appendTo: HTMLElement, controller: AutocompleteHelperController, protected className: string, onSelect: (target: Element) => boolean | void) {\r\n    super({\r\n      appendTo, \r\n      controller,\r\n      listType: 'y', \r\n      onSelect\r\n    });\r\n\r\n    this.container.classList.add(AutocompletePeerHelper.BASE_CLASS, className);\r\n  }\r\n\r\n  protected init() {\r\n    this.list = document.createElement('div');\r\n    this.list.classList.add(AutocompletePeerHelper.BASE_CLASS + '-list');\r\n\r\n    this.container.append(this.list);\r\n\r\n    this.scrollable = new Scrollable(this.container);\r\n\r\n    this.addEventListener('visible', () => {\r\n      setTimeout(() => { // it is not rendered yet\r\n        this.scrollable.container.scrollTop = 0;\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  public render(data: {peerId: number, name?: string, description?: string}[]) {\r\n    if(this.init) {\r\n      if(!data.length) {\r\n        return;\r\n      }\r\n\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    if(data.length) {\r\n      this.list.innerHTML = '';\r\n      data.forEach(d => {\r\n        const div = AutocompletePeerHelper.listElement({\r\n          className: this.className,\r\n          peerId: d.peerId,\r\n          name: d.name,\r\n          description: d.description\r\n        });\r\n\r\n        this.list.append(div);\r\n      });\r\n    }\r\n\r\n    this.toggle(!data.length);\r\n  }\r\n\r\n  public static listElement(options: {\r\n    className: string,\r\n    peerId: number,\r\n    name?: string,\r\n    description?: string\r\n  }) {\r\n    const BASE = AutocompletePeerHelper.BASE_CLASS_LIST_ELEMENT;\r\n    options.className += '-list-element';\r\n\r\n    const div = document.createElement('div');\r\n    div.classList.add(BASE, options.className);\r\n    div.dataset.peerId = '' + options.peerId;\r\n  \r\n    const avatar = new AvatarElement();\r\n    avatar.classList.add('avatar-30');\r\n    avatar.setAttribute('dialog', '0');\r\n    avatar.setAttribute('peer', '' + options.peerId);\r\n  \r\n    const name = document.createElement('div');\r\n    name.classList.add(BASE + '-name', options.className + '-name');\r\n    if(!options.name) {\r\n      name.append(new PeerTitle({\r\n        peerId: options.peerId,\r\n        dialog: false,\r\n        onlyFirstName: false,\r\n        plainText: false\r\n      }).element);\r\n    } else {\r\n      name.innerHTML = RichTextProcessor.wrapEmojiText(options.name);\r\n    }\r\n  \r\n    div.append(avatar, name);\r\n\r\n    if(options.description) {\r\n      const description = document.createElement('div');\r\n      description.classList.add(BASE + '-description', options.className + '-description');\r\n      description.innerHTML = RichTextProcessor.wrapEmojiText(options.description);\r\n      div.append(description);\r\n    }\r\n  \r\n    return div;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ChatInput from \"./input\";\r\nimport type { AppProfileManager } from \"../../lib/appManagers/appProfileManager\";\r\nimport type { AppUsersManager } from \"../../lib/appManagers/appUsersManager\";\r\nimport type { BotInfo } from \"../../layer\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\nimport AutocompletePeerHelper from \"./autocompletePeerHelper\";\r\nimport SearchIndex from \"../../lib/searchIndex\";\r\n\r\nexport default class CommandsHelper extends AutocompletePeerHelper {\r\n  constructor(appendTo: HTMLElement, \r\n    controller: AutocompleteHelperController, \r\n    chatInput: ChatInput, \r\n    private appProfileManager: AppProfileManager,\r\n    private appUsersManager: AppUsersManager) {\r\n    super(appendTo, \r\n      controller,\r\n      'commands-helper',\r\n      (target) => {\r\n        const innerHTML = target.querySelector(`.${AutocompletePeerHelper.BASE_CLASS_LIST_ELEMENT}-name`).innerHTML;\r\n        chatInput.messageInput.innerHTML = innerHTML;\r\n        chatInput.sendMessage();\r\n      }\r\n    );\r\n  }\r\n\r\n  public checkQuery(query: string, peerId: number) {\r\n    if(!this.appUsersManager.isBot(peerId)) {\r\n      return false;\r\n    }\r\n\r\n    const middleware = this.controller.getMiddleware();\r\n    this.appProfileManager.getProfileByPeerId(peerId).then(full => {\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n\r\n      const botInfos: BotInfo.botInfo[] = [].concat(full.bot_info);\r\n      const index = new SearchIndex<string>(false, false);\r\n      \r\n      const commands: Map<string, {peerId: number, name: string, description: string}> = new Map();\r\n      botInfos.forEach(botInfo => {\r\n        botInfo.commands.forEach(botCommand => {\r\n          const c = '/' + botCommand.command;\r\n          commands.set(botCommand.command, {\r\n            peerId: botInfo.user_id, \r\n            name: c, \r\n            description: botCommand.description\r\n          });\r\n\r\n          index.indexObject(botCommand.command, c);\r\n        });\r\n      });\r\n\r\n      const found = index.search(query);\r\n      const filtered = Array.from(found).map(command => commands.get(command));\r\n      this.render(filtered);\r\n      // console.log('found commands', found, filtered);\r\n    });\r\n\r\n    return true;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { getMiddleware } from \"../../helpers/middleware\";\r\nimport AutocompleteHelper from \"./autocompleteHelper\";\r\n\r\nexport default class AutocompleteHelperController {\r\n  private helpers: Set<AutocompleteHelper> = new Set();\r\n  private middleware = getMiddleware();\r\n  /* private tempId = 0;\r\n\r\n  public incrementToggleCount() {\r\n    return ++this.tempId;\r\n  }\r\n\r\n  public getToggleCount() {\r\n    return this.tempId;\r\n  } */\r\n\r\n  public getMiddleware() {\r\n    this.middleware.clean();\r\n    return this.middleware.get();\r\n  }\r\n\r\n  public addHelper(helper: AutocompleteHelper) {\r\n    this.helpers.add(helper);\r\n  }\r\n\r\n  public hideOtherHelpers(preserveHelper?: AutocompleteHelper) {\r\n    this.helpers.forEach(helper => {\r\n      if(helper !== preserveHelper) {\r\n        helper.toggle(true, true);\r\n      }\r\n    });\r\n\r\n    if(!preserveHelper) {\r\n      this.middleware.clean();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ChatInput from \"./input\";\r\nimport type { MessageEntity } from \"../../layer\";\r\nimport type { AppProfileManager } from \"../../lib/appManagers/appProfileManager\";\r\nimport type { AppUsersManager } from \"../../lib/appManagers/appUsersManager\";\r\nimport AutocompleteHelperController from \"./autocompleteHelperController\";\r\nimport AutocompletePeerHelper from \"./autocompletePeerHelper\";\r\n\r\nexport default class MentionsHelper extends AutocompletePeerHelper {\r\n  constructor(appendTo: HTMLElement, \r\n    controller: AutocompleteHelperController, \r\n    chatInput: ChatInput, \r\n    private appProfileManager: AppProfileManager,\r\n    private appUsersManager: AppUsersManager) {\r\n    super(appendTo, \r\n      controller,\r\n      'mentions-helper',\r\n      (target) => {\r\n        const user = appUsersManager.getUser(+(target as HTMLElement).dataset.peerId);\r\n        let str = '', entity: MessageEntity;\r\n        if(user.username) {\r\n          str = '@' + user.username;\r\n        } else {\r\n          str = user.first_name || user.last_name;\r\n          entity = {\r\n            _: 'messageEntityMentionName',\r\n            length: str.length,\r\n            offset: 0,\r\n            user_id: user.id\r\n          };\r\n        }\r\n\r\n        str += ' ';\r\n        chatInput.insertAtCaret(str, entity);\r\n      }\r\n    );\r\n  }\r\n\r\n  public checkQuery(query: string, peerId: number, topMsgId: number) {\r\n    const trimmed = query.trim(); // check that there is no whitespace\r\n    if(peerId > 0 || query.length !== trimmed.length) return false;\r\n\r\n    this.appProfileManager.getMentions(-peerId, trimmed, topMsgId).then(peerIds => {\r\n      const username = trimmed.slice(1).toLowerCase();\r\n      this.render(peerIds.map(peerId => {\r\n        const user = this.appUsersManager.getUser(peerId);\r\n        if(user.username && user.username.toLowerCase() === username) { // hide full matched suggestion\r\n          return;\r\n        }\r\n\r\n        return {\r\n          peerId,\r\n          description: user.username ? '@' + user.username : undefined\r\n        };\r\n      }).filter(Boolean));\r\n    });\r\n\r\n    return true;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport DropdownHover from \"../../helpers/dropdownHover\";\r\nimport { ReplyMarkup } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { safeAssign } from \"../../helpers/object\";\r\nimport ListenerSetter, { Listener } from \"../../helpers/listenerSetter\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport { isTouchSupported } from \"../../helpers/touchSupport\";\r\nimport findUpAsChild from \"../../helpers/dom/findUpAsChild\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\n\r\nexport default class ReplyKeyboard extends DropdownHover {\r\n  private static BASE_CLASS = 'reply-keyboard';\r\n  private appendTo: HTMLElement;\r\n  private listenerSetter: ListenerSetter;\r\n  private appMessagesManager: AppMessagesManager;\r\n  private btnHover: HTMLElement;\r\n  private peerId: number;\r\n  private touchListener: Listener<HTMLElement>;\r\n\r\n  constructor(options: {\r\n    listenerSetter: ListenerSetter,\r\n    appMessagesManager: AppMessagesManager,\r\n    appendTo: HTMLElement,\r\n    btnHover: HTMLElement\r\n  }) {\r\n    super({\r\n      element: document.createElement('div')\r\n    });\r\n\r\n    safeAssign(this, options);\r\n\r\n    this.element.classList.add(ReplyKeyboard.BASE_CLASS);\r\n    this.element.style.display = 'none';\r\n\r\n    this.attachButtonListener(this.btnHover, this.listenerSetter);\r\n    this.listenerSetter.add(rootScope, 'history_reply_markup', ({peerId}) => {\r\n      if(this.peerId === peerId && this.checkAvailability() && this.isActive()) {\r\n        this.render();\r\n      }\r\n    });\r\n  }\r\n\r\n  protected init() {\r\n    this.appendTo.append(this.element);\r\n\r\n    this.listenerSetter.add(this, 'open', () => {\r\n      this.render();\r\n\r\n      if(isTouchSupported) {\r\n        this.touchListener = this.listenerSetter.add(document.body, 'touchstart', this.onBodyTouchStart, {passive: false, capture: true});\r\n        this.listenerSetter.add(this, 'close', () => {\r\n          this.listenerSetter.remove(this.touchListener);\r\n        }, {once: true});\r\n      }\r\n    });\r\n    \r\n    this.listenerSetter.add(this.element, 'click', (e) => {\r\n      const target = findUpClassName(e.target, 'btn');\r\n      if(!target) {\r\n        return;\r\n      }\r\n\r\n      this.appMessagesManager.sendText(this.peerId, target.dataset.text);\r\n      this.toggle(false);\r\n    });\r\n\r\n    return super.init();\r\n  }\r\n\r\n  private onBodyTouchStart = (e: TouchEvent) => {\r\n    const target = e.touches[0].target as HTMLElement;\r\n    if(!findUpAsChild(target, this.element) && target !== this.btnHover) {\r\n      cancelEvent(e);\r\n      this.toggle(false);\r\n    }\r\n  };\r\n\r\n  private getReplyMarkup(): ReplyMarkup {\r\n    return this.appMessagesManager.getHistoryStorage(this.peerId).reply_markup ?? {\r\n      _: 'replyKeyboardHide'\r\n    };\r\n  }\r\n\r\n  public render(replyMarkup: ReplyMarkup.replyKeyboardMarkup = this.getReplyMarkup() as any) {\r\n    this.element.innerHTML = '';\r\n\r\n    for(const row of replyMarkup.rows) {\r\n      const div = document.createElement('div');\r\n      div.classList.add(ReplyKeyboard.BASE_CLASS + '-row');\r\n\r\n      for(const button of row.buttons) {\r\n        const btn = document.createElement('button');\r\n        btn.classList.add(ReplyKeyboard.BASE_CLASS + '-button', 'btn');\r\n        btn.innerHTML = RichTextProcessor.wrapEmojiText(button.text);\r\n        btn.dataset.text = button.text;\r\n        div.append(btn);\r\n      }\r\n\r\n      this.element.append(div);\r\n    }\r\n  }\r\n\r\n  public checkAvailability(replyMarkup: ReplyMarkup = this.getReplyMarkup()) {\r\n    const hide = replyMarkup._ === 'replyKeyboardHide';\r\n    this.btnHover.classList.toggle('hide', hide);\r\n\r\n    if(hide) {\r\n      this.toggle(false);\r\n    }\r\n\r\n    return !hide;\r\n  }\r\n\r\n  public setPeer(peerId: number) {\r\n    this.peerId = peerId;\r\n\r\n    this.checkAvailability();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppNotificationsManager } from '../../lib/appManagers/appNotificationsManager';\r\nimport type { AppChatsManager } from '../../lib/appManagers/appChatsManager';\r\nimport type { AppDocsManager, MyDocument } from \"../../lib/appManagers/appDocsManager\";\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type { AppPeersManager } from '../../lib/appManagers/appPeersManager';\r\nimport type { AppWebPagesManager } from \"../../lib/appManagers/appWebPagesManager\";\r\nimport type { AppImManager } from '../../lib/appManagers/appImManager';\r\nimport type { AppDraftsManager, MyDraftMessage } from '../../lib/appManagers/appDraftsManager';\r\nimport type { AppEmojiManager } from '../../lib/appManagers/appEmojiManager';\r\nimport type { ServerTimeManager } from '../../lib/mtproto/serverTimeManager';\r\nimport type Chat from './chat';\r\nimport Recorder from '../../../public/recorder.min';\r\nimport { isTouchSupported } from \"../../helpers/touchSupport\";\r\nimport apiManager from \"../../lib/mtproto/mtprotoworker\";\r\n//import Recorder from '../opus-recorder/dist/recorder.min';\r\nimport opusDecodeController from \"../../lib/opusDecodeController\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport { ButtonMenuItemOptions } from '../buttonMenu';\r\nimport emoticonsDropdown from \"../emoticonsDropdown\";\r\nimport PopupCreatePoll from \"../popups/createPoll\";\r\nimport PopupForward from '../popups/forward';\r\nimport PopupNewMedia from '../popups/newMedia';\r\nimport { toast } from \"../toast\";\r\nimport { wrapReply } from \"../wrappers\";\r\nimport InputField from '../inputField';\r\nimport { MessageEntity, DraftMessage, BotInfo, BotCommand } from '../../layer';\r\nimport StickersHelper from './stickersHelper';\r\nimport ButtonIcon from '../buttonIcon';\r\nimport DivAndCaption from '../divAndCaption';\r\nimport ButtonMenuToggle from '../buttonMenuToggle';\r\nimport ListenerSetter from '../../helpers/listenerSetter';\r\nimport Button from '../button';\r\nimport PopupSchedule from '../popups/schedule';\r\nimport SendMenu from './sendContextMenu';\r\nimport rootScope from '../../lib/rootScope';\r\nimport PopupPinMessage from '../popups/unpinMessage';\r\nimport { debounce } from '../../helpers/schedulers';\r\nimport { tsNow } from '../../helpers/date';\r\nimport appNavigationController from '../appNavigationController';\r\nimport { isMobile, isMobileSafari } from '../../helpers/userAgent';\r\nimport { i18n } from '../../lib/langPack';\r\nimport { generateTail } from './bubbles';\r\nimport findUpClassName from '../../helpers/dom/findUpClassName';\r\nimport ButtonCorner from '../buttonCorner';\r\nimport blurActiveElement from '../../helpers/dom/blurActiveElement';\r\nimport { cancelEvent } from '../../helpers/dom/cancelEvent';\r\nimport cancelSelection from '../../helpers/dom/cancelSelection';\r\nimport { attachClickEvent } from '../../helpers/dom/clickEvent';\r\nimport getRichValue from '../../helpers/dom/getRichValue';\r\nimport isInputEmpty from '../../helpers/dom/isInputEmpty';\r\nimport isSendShortcutPressed from '../../helpers/dom/isSendShortcutPressed';\r\nimport placeCaretAtEnd from '../../helpers/dom/placeCaretAtEnd';\r\nimport { MarkdownType, markdownTags } from '../../helpers/dom/getRichElementValue';\r\nimport getRichValueWithCaret from '../../helpers/dom/getRichValueWithCaret';\r\nimport EmojiHelper from './emojiHelper';\r\nimport setRichFocus from '../../helpers/dom/setRichFocus';\r\nimport CommandsHelper from './commandsHelper';\r\nimport AutocompleteHelperController from './autocompleteHelperController';\r\nimport AutocompleteHelper from './autocompleteHelper';\r\nimport MentionsHelper from './mentionsHelper';\r\nimport fixSafariStickyInput from '../../helpers/dom/fixSafariStickyInput';\r\nimport { emojiFromCodePoints } from '../../vendor/emoji';\r\nimport ReplyKeyboard from './replyKeyboard';\r\n\r\nconst RECORD_MIN_TIME = 500;\r\nconst POSTING_MEDIA_NOT_ALLOWED = 'Posting media content isn\\'t allowed in this group.';\r\n\r\ntype ChatInputHelperType = 'edit' | 'webpage' | 'forward' | 'reply';\r\n\r\nexport default class ChatInput {\r\n  private static AUTO_COMPLETE_REG_EXP = /(\\s|^)((?::|.)(?!.*[:@]).*|(?:[@\\/]\\S*))$/;\r\n  public messageInput: HTMLElement;\r\n  public messageInputField: InputField;\r\n  private fileInput: HTMLInputElement;\r\n  private inputMessageContainer: HTMLDivElement;\r\n  private btnSend: HTMLButtonElement;\r\n  private btnCancelRecord: HTMLButtonElement;\r\n  private lastUrl = '';\r\n  private lastTimeType = 0;\r\n\r\n  public chatInput: HTMLElement;\r\n  private inputContainer: HTMLElement;\r\n  public rowsWrapper: HTMLDivElement;\r\n  private newMessageWrapper: HTMLDivElement;\r\n  private btnToggleEmoticons: HTMLButtonElement;\r\n  private btnToggleReplyMarkup: HTMLButtonElement;\r\n  private btnSendContainer: HTMLDivElement;\r\n\r\n  private replyKeyboard: ReplyKeyboard;\r\n\r\n  private attachMenu: HTMLButtonElement;\r\n  private attachMenuButtons: (ButtonMenuItemOptions & {verify: (peerId: number) => boolean})[];\r\n\r\n  private sendMenu: SendMenu;\r\n\r\n  private replyElements: {\r\n    container?: HTMLElement,\r\n    cancelBtn?: HTMLButtonElement,\r\n    titleEl?: HTMLElement,\r\n    subtitleEl?: HTMLElement\r\n  } = {};\r\n\r\n  private willSendWebPage: any = null;\r\n  private forwardingMids: number[] = [];\r\n  private forwardingFromPeerId: number = 0;\r\n  public replyToMsgId: number;\r\n  public editMsgId: number;\r\n  private noWebPage: true;\r\n  public scheduleDate: number;\r\n  public sendSilent: true;\r\n\r\n  private recorder: any;\r\n  public recording = false;\r\n  private recordCanceled = false;\r\n  private recordTimeEl: HTMLElement;\r\n  private recordRippleEl: HTMLElement;\r\n  private recordStartTime = 0;\r\n\r\n  // private scrollTop = 0;\r\n  // private scrollOffsetTop = 0;\r\n  // private scrollDiff = 0;\r\n\r\n  public helperType: Exclude<ChatInputHelperType, 'webpage'>;\r\n  private helperFunc: () => void;\r\n  private helperWaitingForward: boolean;\r\n\r\n  public willAttachType: 'document' | 'media';\r\n\r\n  private lockRedo = false;\r\n  private canRedoFromHTML = '';\r\n  private readonly undoHistory: string[] = [];\r\n  private readonly executedHistory: string[] = [];\r\n  private canUndoFromHTML = '';\r\n\r\n  private autocompleteHelperController: AutocompleteHelperController;\r\n  private stickersHelper: StickersHelper;\r\n  private emojiHelper: EmojiHelper;\r\n  private commandsHelper: CommandsHelper;\r\n  private mentionsHelper: MentionsHelper;\r\n  private listenerSetter: ListenerSetter;\r\n\r\n  private pinnedControlBtn: HTMLButtonElement;\r\n\r\n  private goDownBtn: HTMLButtonElement;\r\n  private goDownUnreadBadge: HTMLElement;\r\n  private btnScheduled: HTMLButtonElement;\r\n\r\n  private saveDraftDebounced: () => void;\r\n\r\n  private fakeRowsWrapper: HTMLDivElement;\r\n  private fakePinnedControlBtn: HTMLElement;\r\n\r\n  private previousQuery: string;\r\n\r\n  constructor(private chat: Chat, \r\n    private appMessagesManager: AppMessagesManager, \r\n    private appDocsManager: AppDocsManager, \r\n    private appChatsManager: AppChatsManager, \r\n    private appPeersManager: AppPeersManager, \r\n    private appWebPagesManager: AppWebPagesManager, \r\n    private appImManager: AppImManager, \r\n    private appDraftsManager: AppDraftsManager, \r\n    private serverTimeManager: ServerTimeManager, \r\n    private appNotificationsManager: AppNotificationsManager,\r\n    private appEmojiManager: AppEmojiManager\r\n  ) {\r\n    this.listenerSetter = new ListenerSetter();\r\n  }\r\n\r\n  public construct() {\r\n    this.chatInput = document.createElement('div');\r\n    this.chatInput.classList.add('chat-input');\r\n    this.chatInput.style.display = 'none';\r\n\r\n    this.inputContainer = document.createElement('div');\r\n    this.inputContainer.classList.add('chat-input-container');\r\n\r\n    this.rowsWrapper = document.createElement('div');\r\n    this.rowsWrapper.classList.add('rows-wrapper', 'chat-input-wrapper');\r\n\r\n    const tail = generateTail();\r\n    this.rowsWrapper.append(tail);\r\n\r\n    const fakeRowsWrapper = this.fakeRowsWrapper = document.createElement('div');\r\n    fakeRowsWrapper.classList.add('fake-wrapper', 'fake-rows-wrapper');\r\n\r\n    const fakeSelectionWrapper = document.createElement('div');\r\n    fakeSelectionWrapper.classList.add('fake-wrapper', 'fake-selection-wrapper');\r\n\r\n    this.inputContainer.append(this.rowsWrapper, fakeRowsWrapper, fakeSelectionWrapper);\r\n    this.chatInput.append(this.inputContainer);\r\n\r\n    this.goDownBtn = ButtonCorner({icon: 'arrow_down', className: 'bubbles-go-down hide'});\r\n    this.inputContainer.append(this.goDownBtn);\r\n\r\n    attachClickEvent(this.goDownBtn, (e) => {\r\n      cancelEvent(e);\r\n      this.chat.bubbles.onGoDownClick();\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    // * constructor end\r\n\r\n    /* let setScrollTopTimeout: number;\r\n    // @ts-ignore\r\n    let height = window.visualViewport.height; */\r\n    // @ts-ignore\r\n    // this.listenerSetter.add(window.visualViewport, 'resize', () => {\r\n    //   const scrollable = this.chat.bubbles.scrollable;\r\n    //   const wasScrolledDown = scrollable.isScrolledDown;\r\n      \r\n    //   /* if(wasScrolledDown) {\r\n    //     this.saveScroll();\r\n    //   } */\r\n      \r\n    //   // @ts-ignore\r\n    //   let newHeight = window.visualViewport.height;\r\n    //   const diff = height - newHeight;\r\n    //   const scrollTop = scrollable.scrollTop;\r\n    //   const needScrollTop = wasScrolledDown ? scrollable.scrollHeight : scrollTop + diff; // * wasScrolledDown это проверка для десктоп хрома, когда пропадает панель загрузок снизу\r\n\r\n    //   console.log('resize before', scrollable.scrollTop, scrollable.container.clientHeight, scrollable.scrollHeight, wasScrolledDown, scrollable.lastScrollTop, diff, needScrollTop);\r\n\r\n    //   scrollable.scrollTop = needScrollTop;\r\n\r\n    //   if(setScrollTopTimeout) clearTimeout(setScrollTopTimeout);\r\n    //   setScrollTopTimeout = window.setTimeout(() => {\r\n    //     const diff = height - newHeight;\r\n    //     const isScrolledDown = scrollable.scrollHeight - Math.round(scrollable.scrollTop + scrollable.container.offsetHeight + diff) <= 1;\r\n    //     height = newHeight;\r\n\r\n    //     scrollable.scrollTop = needScrollTop;\r\n        \r\n    //     console.log('resize after', scrollable.scrollTop, scrollable.container.clientHeight, scrollable.scrollHeight, scrollable.isScrolledDown, scrollable.lastScrollTop, isScrolledDown);\r\n\r\n    //     /* if(isScrolledDown) {\r\n    //       scrollable.scrollTop = scrollable.scrollHeight;\r\n    //     } */\r\n\r\n    //     //scrollable.scrollTop += diff;\r\n    //     setScrollTopTimeout = 0;\r\n    //   }, 0);\r\n    // });\r\n\r\n    // ! Can't use it with resizeObserver\r\n    /* this.listenerSetter.add(window.visualViewport, 'resize', () => {\r\n      const scrollable = this.chat.bubbles.scrollable;\r\n      const wasScrolledDown = scrollable.isScrolledDown;\r\n\r\n      // @ts-ignore\r\n      let newHeight = window.visualViewport.height;\r\n      const diff = height - newHeight;\r\n      const needScrollTop = wasScrolledDown ? scrollable.scrollHeight : scrollable.scrollTop + diff; // * wasScrolledDown это проверка для десктоп хрома, когда пропадает панель загрузок снизу\r\n\r\n      //console.log('resize before', scrollable.scrollTop, scrollable.container.clientHeight, scrollable.scrollHeight, wasScrolledDown, scrollable.lastScrollTop, diff, needScrollTop);\r\n\r\n      scrollable.scrollTop = needScrollTop;\r\n      height = newHeight;\r\n\r\n      if(setScrollTopTimeout) clearTimeout(setScrollTopTimeout);\r\n      setScrollTopTimeout = window.setTimeout(() => { // * try again for scrolled down Android Chrome\r\n        scrollable.scrollTop = needScrollTop;\r\n        \r\n        //console.log('resize after', scrollable.scrollTop, scrollable.container.clientHeight, scrollable.scrollHeight, scrollable.isScrolledDown, scrollable.lastScrollTop, isScrolledDown);\r\n        setScrollTopTimeout = 0;\r\n      }, 0);\r\n    }); */\r\n  }\r\n\r\n  public constructPeerHelpers() {\r\n    this.replyElements.container = document.createElement('div');\r\n    this.replyElements.container.classList.add('reply-wrapper');\r\n\r\n    this.replyElements.cancelBtn = ButtonIcon('close reply-cancel');\r\n\r\n    const dac = new DivAndCaption('reply');\r\n\r\n    this.replyElements.titleEl = dac.title;\r\n    this.replyElements.subtitleEl = dac.subtitle;\r\n\r\n    this.replyElements.container.append(this.replyElements.cancelBtn, dac.container);\r\n\r\n    this.newMessageWrapper = document.createElement('div');\r\n    this.newMessageWrapper.classList.add('new-message-wrapper');\r\n\r\n    this.btnToggleEmoticons = ButtonIcon('none toggle-emoticons', {noRipple: true});\r\n\r\n    this.inputMessageContainer = document.createElement('div');\r\n    this.inputMessageContainer.classList.add('input-message-container');\r\n\r\n    if(this.chat.type === 'chat') {\r\n      this.goDownUnreadBadge = document.createElement('span');\r\n      this.goDownUnreadBadge.classList.add('badge', 'badge-24', 'badge-primary');\r\n      this.goDownBtn.append(this.goDownUnreadBadge);\r\n\r\n      this.btnScheduled = ButtonIcon('scheduled btn-scheduled float hide', {noRipple: true});\r\n\r\n      attachClickEvent(this.btnScheduled, (e) => {\r\n        this.appImManager.openScheduled(this.chat.peerId);\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      this.listenerSetter.add(rootScope, 'scheduled_new', (e) => {\r\n        const peerId = e.peerId;\r\n\r\n        if(this.chat.peerId !== peerId) {\r\n          return;\r\n        }\r\n\r\n        this.btnScheduled.classList.remove('hide');\r\n      });\r\n\r\n      this.listenerSetter.add(rootScope, 'scheduled_delete', (e) => {\r\n        const peerId = e.peerId;\r\n\r\n        if(this.chat.peerId !== peerId) {\r\n          return;\r\n        }\r\n\r\n        this.appMessagesManager.getScheduledMessages(this.chat.peerId).then(value => {\r\n          this.btnScheduled.classList.toggle('hide', !value.length);\r\n        });\r\n      });\r\n\r\n      this.btnToggleReplyMarkup = ButtonIcon('botcom toggle-reply-markup float hide', {noRipple: true});\r\n      this.replyKeyboard = new ReplyKeyboard({\r\n        appendTo: this.rowsWrapper,\r\n        listenerSetter: this.listenerSetter,\r\n        appMessagesManager: this.appMessagesManager,\r\n        btnHover: this.btnToggleReplyMarkup\r\n      });\r\n      this.listenerSetter.add(this.replyKeyboard, 'open', () => this.btnToggleReplyMarkup.classList.add('active'));\r\n      this.listenerSetter.add(this.replyKeyboard, 'close', () => this.btnToggleReplyMarkup.classList.remove('active'));\r\n    }\r\n\r\n    this.attachMenuButtons = [{\r\n      icon: 'image',\r\n      text: 'Chat.Input.Attach.PhotoOrVideo',\r\n      onClick: () => {\r\n        this.fileInput.value = '';\r\n        this.fileInput.setAttribute('accept', 'image/*, video/*');\r\n        this.willAttachType = 'media';\r\n        this.fileInput.click();\r\n      },\r\n      verify: (peerId: number) => peerId > 0 || this.appChatsManager.hasRights(peerId, 'send_media')\r\n    }, {\r\n      icon: 'document',\r\n      text: 'Chat.Input.Attach.Document',\r\n      onClick: () => {\r\n        this.fileInput.value = '';\r\n        this.fileInput.removeAttribute('accept');\r\n        this.willAttachType = 'document';\r\n        this.fileInput.click();\r\n      },\r\n      verify: (peerId: number) => peerId > 0 || this.appChatsManager.hasRights(peerId, 'send_media')\r\n    }, {\r\n      icon: 'poll',\r\n      text: 'Poll',\r\n      onClick: () => {\r\n        new PopupCreatePoll(this.chat).show();\r\n      },\r\n      verify: (peerId: number) => peerId < 0 && this.appChatsManager.hasRights(peerId, 'send_polls')\r\n    }];\r\n\r\n    this.attachMenu = ButtonMenuToggle({noRipple: true, listenerSetter: this.listenerSetter}, 'top-left', this.attachMenuButtons);\r\n    this.attachMenu.classList.add('attach-file', 'tgico-attach');\r\n    this.attachMenu.classList.remove('tgico-more');\r\n\r\n    //this.inputContainer.append(this.sendMenu);\r\n\r\n    this.recordTimeEl = document.createElement('div');\r\n    this.recordTimeEl.classList.add('record-time');\r\n\r\n    this.fileInput = document.createElement('input');\r\n    this.fileInput.type = 'file';\r\n    this.fileInput.multiple = true;\r\n    this.fileInput.style.display = 'none';\r\n\r\n    this.newMessageWrapper.append(...[this.btnToggleEmoticons, this.inputMessageContainer, this.btnScheduled, this.btnToggleReplyMarkup, this.attachMenu, this.recordTimeEl, this.fileInput].filter(Boolean));\r\n\r\n    this.rowsWrapper.append(this.replyElements.container);\r\n    this.autocompleteHelperController = new AutocompleteHelperController();\r\n    this.stickersHelper = new StickersHelper(this.rowsWrapper, this.autocompleteHelperController);\r\n    this.emojiHelper = new EmojiHelper(this.rowsWrapper, this.autocompleteHelperController, this, this.appEmojiManager);\r\n    this.commandsHelper = new CommandsHelper(this.rowsWrapper, this.autocompleteHelperController, this, this.chat.appProfileManager, this.chat.appUsersManager);\r\n    this.mentionsHelper = new MentionsHelper(this.rowsWrapper, this.autocompleteHelperController, this, this.chat.appProfileManager, this.chat.appUsersManager);\r\n    this.rowsWrapper.append(this.newMessageWrapper);\r\n\r\n    this.btnCancelRecord = ButtonIcon('delete danger btn-circle z-depth-1 btn-record-cancel');\r\n\r\n    this.btnSendContainer = document.createElement('div');\r\n    this.btnSendContainer.classList.add('btn-send-container');\r\n\r\n    this.recordRippleEl = document.createElement('div');\r\n    this.recordRippleEl.classList.add('record-ripple');\r\n\r\n    this.btnSend = ButtonIcon('none btn-circle z-depth-1 btn-send animated-button-icon');\r\n    this.btnSend.insertAdjacentHTML('afterbegin', `\r\n    <span class=\"tgico tgico-send\"></span>\r\n    <span class=\"tgico tgico-schedule\"></span>\r\n    <span class=\"tgico tgico-check\"></span>\r\n    <span class=\"tgico tgico-microphone\"></span>\r\n    `);\r\n\r\n    this.btnSendContainer.append(this.recordRippleEl, this.btnSend);\r\n\r\n    if(this.chat.type !== 'scheduled') {\r\n      this.sendMenu = new SendMenu({\r\n        onSilentClick: () => {\r\n          this.sendSilent = true;\r\n          this.sendMessage();\r\n        },\r\n        onScheduleClick: () => {\r\n          this.scheduleSending(undefined);\r\n        },\r\n        listenerSetter: this.listenerSetter,\r\n        openSide: 'top-left',\r\n        onContextElement: this.btnSend,\r\n        onOpen: () => {\r\n          return !this.isInputEmpty();\r\n        }\r\n      });\r\n      \r\n      this.btnSendContainer.append(this.sendMenu.sendMenu);\r\n    }\r\n\r\n    this.inputContainer.append(this.btnCancelRecord, this.btnSendContainer);\r\n\r\n    emoticonsDropdown.attachButtonListener(this.btnToggleEmoticons, this.listenerSetter);\r\n    this.listenerSetter.add(emoticonsDropdown, 'open', this.onEmoticonsOpen);\r\n    this.listenerSetter.add(emoticonsDropdown, 'close', this.onEmoticonsClose);\r\n\r\n    this.attachMessageInputField();\r\n\r\n    /* this.attachMenu.addEventListener('mousedown', (e) => {\r\n      const hidden = this.attachMenu.querySelectorAll('.hide');\r\n      if(hidden.length === this.attachMenuButtons.length) {\r\n        toast(POSTING_MEDIA_NOT_ALLOWED);\r\n        cancelEvent(e);\r\n        return false;\r\n      }\r\n    }, {passive: false, capture: true}); */\r\n\r\n    this.listenerSetter.add(rootScope, 'settings_updated', () => {\r\n      if(this.stickersHelper || this.emojiHelper) {\r\n        this.previousQuery = undefined;\r\n        this.checkAutocomplete();\r\n        /* if(!rootScope.settings.stickers.suggest) {\r\n          this.stickersHelper.checkEmoticon('');\r\n        } else {\r\n          this.onMessageInput();\r\n        } */\r\n      }\r\n\r\n      if(this.messageInputField) {\r\n        this.messageInputField.onFakeInput();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'draft_updated', (e) => {\r\n      const {peerId, threadId, draft} = e;\r\n      if(this.chat.threadId !== threadId || this.chat.peerId !== peerId) return;\r\n      this.setDraft(draft);\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'peer_changing', (chat) => {\r\n      if(this.chat === chat) {\r\n        this.saveDraft();\r\n      }\r\n    });\r\n\r\n    try {\r\n      this.recorder = new Recorder({\r\n        //encoderBitRate: 32,\r\n        //encoderPath: \"../dist/encoderWorker.min.js\",\r\n        encoderSampleRate: 48000,\r\n        monitorGain: 0,\r\n        numberOfChannels: 1,\r\n        recordingGain: 1,\r\n        reuseWorker: true\r\n      });\r\n    } catch(err) {\r\n      console.error('Recorder constructor error:', err);\r\n    }\r\n\r\n    this.updateSendBtn();\r\n\r\n    this.listenerSetter.add(this.fileInput, 'change', (e) => {\r\n      let files = (e.target as HTMLInputElement & EventTarget).files;\r\n      if(!files.length) {\r\n        return;\r\n      }\r\n      \r\n      new PopupNewMedia(this.chat, Array.from(files).slice(), this.willAttachType);\r\n      this.fileInput.value = '';\r\n    }, false);\r\n\r\n    /* let time = Date.now();\r\n    this.btnSend.addEventListener('touchstart', (e) => {\r\n      time = Date.now();\r\n    });\r\n\r\n    let eventName1 = 'touchend';\r\n    this.btnSend.addEventListener(eventName1, (e: Event) => {\r\n      //cancelEvent(e);\r\n      console.log(eventName1 + ', time: ' + (Date.now() - time));\r\n    });\r\n\r\n    let eventName = 'mousedown';\r\n    this.btnSend.addEventListener(eventName, (e: Event) => {\r\n      cancelEvent(e);\r\n      console.log(eventName + ', time: ' + (Date.now() - time));\r\n    }); */\r\n    attachClickEvent(this.btnSend, this.onBtnSendClick, {listenerSetter: this.listenerSetter, touchMouseDown: true});\r\n\r\n    if(this.recorder) {\r\n      attachClickEvent(this.btnCancelRecord, this.onCancelRecordClick, {listenerSetter: this.listenerSetter});\r\n\r\n      this.recorder.onstop = () => {\r\n        this.recording = false;\r\n        this.chatInput.classList.remove('is-recording', 'is-locked');\r\n        this.updateSendBtn();\r\n        this.recordRippleEl.style.transform = '';\r\n      };\r\n  \r\n      this.recorder.ondataavailable = (typedArray: Uint8Array) => {\r\n        if(this.recordCanceled) return;\r\n  \r\n        const duration = (Date.now() - this.recordStartTime) / 1000 | 0;\r\n        const dataBlob = new Blob([typedArray], {type: 'audio/ogg'});\r\n        /* const fileName = new Date().toISOString() + \".opus\";\r\n        console.log('Recorder data received', typedArray, dataBlob); */\r\n\r\n        //let perf = performance.now();\r\n        opusDecodeController.decode(typedArray, true).then(result => {\r\n          //console.log('WAVEFORM!:', /* waveform,  */performance.now() - perf);\r\n  \r\n          opusDecodeController.setKeepAlive(false);\r\n  \r\n          let peerId = this.chat.peerId;\r\n          // тут objectURL ставится уже с audio/wav\r\n          this.appMessagesManager.sendFile(peerId, dataBlob, {\r\n            isVoiceMessage: true,\r\n            isMedia: true,\r\n            duration,\r\n            waveform: result.waveform,\r\n            objectURL: result.url,\r\n            replyToMsgId: this.replyToMsgId,\r\n            threadId: this.chat.threadId,\r\n            clearDraft: true\r\n          });\r\n\r\n          this.onMessageSent(false, true);\r\n        });\r\n      };\r\n    }\r\n\r\n    attachClickEvent(this.replyElements.cancelBtn, this.onHelperCancel, {listenerSetter: this.listenerSetter});\r\n    attachClickEvent(this.replyElements.container, this.onHelperClick, {listenerSetter: this.listenerSetter});\r\n\r\n    this.saveDraftDebounced = debounce(() => this.saveDraft(), 2500, false, true);\r\n  }\r\n\r\n  public constructPinnedHelpers() {\r\n    const container = document.createElement('div');\r\n    container.classList.add('pinned-container');\r\n\r\n    this.pinnedControlBtn = Button('btn-primary btn-transparent text-bold pinned-container-button', {icon: 'unpin'});\r\n    container.append(this.pinnedControlBtn);\r\n\r\n    const fakeContainer = container.cloneNode(true);\r\n    this.fakePinnedControlBtn = fakeContainer.firstChild as HTMLElement;\r\n    this.fakeRowsWrapper.append(fakeContainer);\r\n\r\n    this.listenerSetter.add(this.pinnedControlBtn, 'click', () => {\r\n      const peerId = this.chat.peerId;\r\n\r\n      new PopupPinMessage(peerId, 0, true, () => {\r\n        this.chat.appImManager.setPeer(0); // * close tab\r\n\r\n        // ! костыль, это скроет закреплённые сообщения сразу, вместо того, чтобы ждать пока анимация перехода закончится\r\n        const originalChat = this.chat.appImManager.chat;\r\n        if(originalChat.topbar.pinnedMessage) {\r\n          originalChat.topbar.pinnedMessage.pinnedMessageContainer.toggle(true);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.rowsWrapper.append(container);\r\n\r\n    this.chatInput.classList.add('type-pinned');\r\n    this.rowsWrapper.classList.add('is-centered');\r\n  }\r\n\r\n  private onCancelRecordClick = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n    \r\n    this.recordCanceled = true;\r\n    this.recorder.stop();\r\n    opusDecodeController.setKeepAlive(false);\r\n  };\r\n\r\n  private onEmoticonsOpen = () => {\r\n    const toggleClass = isTouchSupported ? 'flip-icon' : 'active';\r\n    this.btnToggleEmoticons.classList.toggle(toggleClass, true);\r\n  };\r\n\r\n  private onEmoticonsClose = () => {\r\n    const toggleClass = isTouchSupported ? 'flip-icon' : 'active';\r\n    this.btnToggleEmoticons.classList.toggle(toggleClass, false);\r\n  };\r\n\r\n  public scheduleSending = (callback: () => void = this.sendMessage.bind(this, true), initDate = new Date()) => {\r\n    new PopupSchedule(initDate, (timestamp) => {\r\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\r\n      if(timestamp <= minTimestamp) {\r\n        timestamp = undefined;\r\n      }\r\n\r\n      this.scheduleDate = timestamp;\r\n      callback();\r\n\r\n      if(this.chat.type !== 'scheduled' && timestamp) {\r\n        this.appImManager.openScheduled(this.chat.peerId);\r\n      }\r\n    }).show();\r\n  };\r\n\r\n  public setUnreadCount() {\r\n    const dialog = this.appMessagesManager.getDialogOnly(this.chat.peerId);\r\n    const count = dialog?.unread_count;\r\n    this.goDownUnreadBadge.innerText = '' + (count || '');\r\n    this.goDownUnreadBadge.classList.toggle('badge-gray', this.appNotificationsManager.isPeerLocalMuted(this.chat.peerId, true));\r\n  }\r\n\r\n  public saveDraft() {\r\n    if(!this.chat.peerId || this.editMsgId || this.chat.type === 'scheduled') return;\r\n    \r\n    const {value, entities} = getRichValue(this.messageInputField.input);\r\n\r\n    let draft: DraftMessage.draftMessage;\r\n    if(value.length || this.replyToMsgId) {\r\n      draft = {\r\n        _: 'draftMessage',\r\n        date: tsNow(true) + this.serverTimeManager.serverTimeOffset,\r\n        message: value,\r\n        entities: entities.length ? entities : undefined,\r\n        pFlags: {\r\n          no_webpage: this.noWebPage\r\n        },\r\n        reply_to_msg_id: this.replyToMsgId\r\n      };\r\n    }\r\n\r\n    this.appDraftsManager.syncDraft(this.chat.peerId, this.chat.threadId, draft);\r\n  }\r\n\r\n  public destroy() {\r\n    //this.chat.log.error('Input destroying');\r\n\r\n    this.listenerSetter.removeAll();\r\n  }\r\n\r\n  public cleanup(helperToo = true) {\r\n    if(!this.chat.peerId) {\r\n      this.chatInput.style.display = 'none';\r\n      this.goDownBtn.classList.add('hide');\r\n    }\r\n\r\n    cancelSelection();\r\n\r\n    this.lastTimeType = 0;\r\n\r\n    if(this.messageInput) {\r\n      this.clearInput();\r\n      helperToo && this.clearHelper();\r\n    }\r\n  }\r\n\r\n  public setDraft(draft?: MyDraftMessage, fromUpdate = true) {\r\n    if(!isInputEmpty(this.messageInput) || this.chat.type === 'scheduled') return false;\r\n    \r\n    if(!draft) {\r\n      draft = this.appDraftsManager.getDraft(this.chat.peerId, this.chat.threadId);\r\n\r\n      if(!draft) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    this.noWebPage = draft.pFlags.no_webpage;\r\n    if(draft.reply_to_msg_id) {\r\n      this.initMessageReply(draft.reply_to_msg_id);\r\n    }\r\n\r\n    this.setInputValue(draft.rMessage, fromUpdate, fromUpdate);\r\n    return true;\r\n  }\r\n\r\n  public finishPeerChange() {\r\n    const peerId = this.chat.peerId;\r\n\r\n    this.chatInput.style.display = '';\r\n    \r\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\r\n    this.goDownBtn.classList.toggle('is-broadcast', isBroadcast);\r\n    this.goDownBtn.classList.remove('hide');\r\n\r\n    if(this.goDownUnreadBadge) {\r\n      this.setUnreadCount();\r\n    }\r\n\r\n    if(this.chat.type === 'pinned') {\r\n      this.chatInput.classList.toggle('can-pin', this.appPeersManager.canPinMessage(peerId));\r\n    }/*  else if(this.chat.type === 'chat') {\r\n    } */\r\n\r\n    if(this.btnScheduled) {\r\n      this.btnScheduled.classList.add('hide');\r\n      const middleware = this.chat.bubbles.getMiddleware();\r\n      this.appMessagesManager.getScheduledMessages(peerId).then(mids => {\r\n        if(!middleware()) return;\r\n        this.btnScheduled.classList.toggle('hide', !mids.length);\r\n      });\r\n    }\r\n\r\n    if(this.replyKeyboard) {\r\n      this.replyKeyboard.setPeer(peerId);\r\n    }\r\n\r\n    if(this.sendMenu) {\r\n      this.sendMenu.setPeerId(peerId);\r\n    }\r\n\r\n    if(this.messageInput) {\r\n      this.updateMessageInput();\r\n    } else if(this.pinnedControlBtn) {\r\n      if(this.appPeersManager.canPinMessage(this.chat.peerId)) {\r\n        this.pinnedControlBtn.append(i18n('Chat.Input.UnpinAll'));\r\n        this.fakePinnedControlBtn.append(i18n('Chat.Input.UnpinAll'));\r\n      } else {\r\n        this.pinnedControlBtn.append(i18n('Chat.Pinned.DontShow'));\r\n        this.fakePinnedControlBtn.append(i18n('Chat.Pinned.DontShow'));\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateMessageInput() {\r\n    const canWrite = this.appMessagesManager.canWriteToPeer(this.chat.peerId, this.chat.threadId);\r\n    this.chatInput.classList.add('no-transition');\r\n    this.chatInput.classList.toggle('is-hidden', !canWrite);\r\n    void this.chatInput.offsetLeft; // reflow\r\n    this.chatInput.classList.remove('no-transition');\r\n\r\n    const visible = this.attachMenuButtons.filter(button => {\r\n      const good = button.verify(this.chat.peerId);\r\n      button.element.classList.toggle('hide', !good);\r\n      return good;\r\n    });\r\n\r\n    if(!canWrite) {\r\n      this.messageInput.removeAttribute('contenteditable');\r\n    } else {\r\n      this.messageInput.setAttribute('contenteditable', 'true');\r\n      this.setDraft(undefined, false);\r\n\r\n      if(!this.messageInput.innerHTML) {\r\n        this.messageInputField.onFakeInput();\r\n      }\r\n    }\r\n    \r\n    this.attachMenu.toggleAttribute('disabled', !visible.length);\r\n    this.updateSendBtn();\r\n  }\r\n\r\n  private attachMessageInputField() {\r\n    const oldInputField = this.messageInputField;\r\n    this.messageInputField = new InputField({\r\n      placeholder: 'Message',\r\n      name: 'message',\r\n      animate: true\r\n    });\r\n\r\n    this.messageInputField.input.classList.replace('input-field-input', 'input-message-input');\r\n    this.messageInputField.inputFake.classList.replace('input-field-input', 'input-message-input');\r\n    this.messageInput = this.messageInputField.input;\r\n    this.attachMessageInputListeners();\r\n\r\n    if(oldInputField) {\r\n      oldInputField.input.replaceWith(this.messageInputField.input);\r\n      oldInputField.inputFake.replaceWith(this.messageInputField.inputFake);\r\n    } else {\r\n      this.inputMessageContainer.append(this.messageInputField.input, this.messageInputField.inputFake);\r\n    }\r\n  }\r\n\r\n  private attachMessageInputListeners() {\r\n    this.listenerSetter.add(this.messageInput, 'keydown', (e: KeyboardEvent) => {\r\n      if(isSendShortcutPressed(e)) {\r\n        this.sendMessage();\r\n      } else if(e.ctrlKey || e.metaKey) {\r\n        this.handleMarkdownShortcut(e);\r\n      } else if((e.key === 'PageUp' || e.key === 'PageDown') && !e.shiftKey) { // * fix pushing page to left (Chrome Windows)\r\n        e.preventDefault();\r\n\r\n        if(e.key === 'PageUp') {\r\n          const range = document.createRange();\r\n          const sel = window.getSelection();\r\n          \r\n          range.setStart(this.messageInput.childNodes[0] || this.messageInput, 0);\r\n          range.collapse(true);\r\n          \r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n        } else {\r\n          placeCaretAtEnd(this.messageInput);\r\n        }\r\n      }\r\n    });\r\n\r\n    if(isTouchSupported) {\r\n      attachClickEvent(this.messageInput, (e) => {\r\n        this.appImManager.selectTab(1); // * set chat tab for album orientation\r\n        //this.saveScroll();\r\n        emoticonsDropdown.toggle(false);\r\n      }, {listenerSetter: this.listenerSetter});\r\n\r\n      /* this.listenerSetter.add(window, 'resize', () => {\r\n        this.restoreScroll();\r\n      }); */\r\n\r\n      /* if(isSafari) {  \r\n        this.listenerSetter.add(this.messageInput, 'mousedown', () => {\r\n          window.requestAnimationFrame(() => {\r\n            window.requestAnimationFrame(() => {\r\n              emoticonsDropdown.toggle(false);\r\n            });\r\n          });\r\n        });\r\n      } */\r\n    }\r\n\r\n    /* this.listenerSetter.add(this.messageInput, 'beforeinput', (e: Event) => {\r\n      // * validate due to manual formatting through browser's context menu\r\n      const inputType = (e as InputEvent).inputType;\r\n      //console.log('message beforeinput event', e);\r\n\r\n      if(inputType.indexOf('format') === 0) {\r\n        //console.log('message beforeinput format', e, inputType, this.messageInput.innerHTML);\r\n        const markdownType = inputType.split('format')[1].toLowerCase() as MarkdownType;\r\n        if(this.applyMarkdown(markdownType)) {\r\n          cancelEvent(e); // * cancel legacy markdown event\r\n        }\r\n      }\r\n    }); */\r\n    this.listenerSetter.add(this.messageInput, 'input', this.onMessageInput);\r\n    this.listenerSetter.add(this.messageInput, 'keyup', () => {\r\n      this.checkAutocomplete();\r\n    });\r\n\r\n    if(this.chat.type === 'chat' || this.chat.type === 'discussion') {\r\n      this.listenerSetter.add(this.messageInput, 'focusin', () => {\r\n        if(this.chat.bubbles.scrollable.loadedAll.bottom) {\r\n          this.appMessagesManager.readAllHistory(this.chat.peerId, this.chat.threadId);\r\n        }\r\n      }); \r\n    }\r\n  }\r\n\r\n  private prepareDocumentExecute = () => {\r\n    this.executedHistory.push(this.messageInput.innerHTML);\r\n    return () => this.canUndoFromHTML = this.messageInput.innerHTML;\r\n  };\r\n\r\n  private undoRedo = (e: Event, type: 'undo' | 'redo', needHTML: string) => {\r\n    cancelEvent(e); // cancel legacy event\r\n\r\n    let html = this.messageInput.innerHTML;\r\n    if(html && html !== needHTML) {\r\n      this.lockRedo = true;\r\n\r\n      let sameHTMLTimes = 0;\r\n      do {\r\n        document.execCommand(type, false, null);\r\n        const currentHTML = this.messageInput.innerHTML;\r\n        if(html === currentHTML) {\r\n          if(++sameHTMLTimes > 2) { // * unlink, removeFormat (а может и нет, случай: заболдить подчёркнутый текст (выделить ровно его), попробовать отменить)\r\n            break;\r\n          }\r\n        } else {\r\n          sameHTMLTimes = 0;\r\n        }\r\n\r\n        html = currentHTML;\r\n      } while(html !== needHTML);\r\n\r\n      this.lockRedo = false;\r\n    }\r\n  };\r\n\r\n  public applyMarkdown(type: MarkdownType, href?: string) {\r\n    const commandsMap: Partial<{[key in typeof type]: string | (() => void)}> = {\r\n      bold: 'Bold',\r\n      italic: 'Italic',\r\n      underline: 'Underline',\r\n      strikethrough: 'Strikethrough',\r\n      monospace: () => document.execCommand('fontName', false, 'monospace'),\r\n      link: href ? () => document.execCommand('createLink', false, href) : () => document.execCommand('unlink', false, null)\r\n    };\r\n\r\n    if(!commandsMap[type]) {\r\n      return false;\r\n    }\r\n\r\n    const command = commandsMap[type];\r\n\r\n    //type = 'monospace';\r\n\r\n    const saveExecuted = this.prepareDocumentExecute();\r\n    const executed: any[] = [];\r\n    /**\r\n     * * clear previous formatting, due to Telegram's inability to handle several entities\r\n     */\r\n    /* const checkForSingle = () => {\r\n      const nodes = getSelectedNodes();\r\n      //console.log('Using formatting:', commandsMap[type], nodes, this.executedHistory);\r\n\r\n      const parents = [...new Set(nodes.map(node => node.parentNode))];\r\n      //const differentParents = !!nodes.find(node => node.parentNode !== firstParent);\r\n      const differentParents = parents.length > 1;\r\n\r\n      let notSingle = false;\r\n      if(differentParents) {\r\n        notSingle = true;\r\n      } else {\r\n        const node = nodes[0];\r\n        if(node && (node.parentNode as HTMLElement) !== this.messageInput && (node.parentNode.parentNode as HTMLElement) !== this.messageInput) {\r\n          notSingle = true;\r\n        }\r\n      }\r\n\r\n      if(notSingle) {\r\n        //if(type === 'monospace') {\r\n          executed.push(document.execCommand('styleWithCSS', false, 'true'));\r\n        //}\r\n\r\n        executed.push(document.execCommand('unlink', false, null));\r\n        executed.push(document.execCommand('removeFormat', false, null));\r\n        executed.push(typeof(command) === 'function' ? command() : document.execCommand(command, false, null));\r\n\r\n        //if(type === 'monospace') {\r\n          executed.push(document.execCommand('styleWithCSS', false, 'false'));\r\n        //}\r\n      }\r\n    }; */\r\n\r\n    executed.push(document.execCommand('styleWithCSS', false, 'true'));\r\n    \r\n    if(type === 'monospace') {\r\n      let haveThisType = false;\r\n      //executed.push(document.execCommand('styleWithCSS', false, 'true'));\r\n\r\n      const selection = window.getSelection();\r\n      if(!selection.isCollapsed) {\r\n        const range = selection.getRangeAt(0);\r\n        const tag = markdownTags[type];\r\n\r\n        const node = range.commonAncestorContainer;\r\n        if((node.parentNode as HTMLElement).matches(tag.match) || (node instanceof HTMLElement && node.matches(tag.match))) {\r\n          haveThisType = true;\r\n        }\r\n      }\r\n\r\n      //executed.push(document.execCommand('removeFormat', false, null));\r\n\r\n      if(haveThisType) {\r\n        executed.push(document.execCommand('fontName', false, 'Roboto'));\r\n      } else {\r\n        executed.push(typeof(command) === 'function' ? command() : document.execCommand(command, false, null));\r\n      }\r\n    } else {\r\n      executed.push(typeof(command) === 'function' ? command() : document.execCommand(command, false, null));\r\n    }\r\n\r\n    executed.push(document.execCommand('styleWithCSS', false, 'false'));\r\n\r\n    //checkForSingle();\r\n    saveExecuted();\r\n    if(this.appImManager.markupTooltip) {\r\n      this.appImManager.markupTooltip.setActiveMarkupButton();\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private handleMarkdownShortcut = (e: KeyboardEvent) => {\r\n    // console.log('handleMarkdownShortcut', e);\r\n    const formatKeys: {[key: string]: MarkdownType} = {\r\n      'B': 'bold',\r\n      'I': 'italic',\r\n      'U': 'underline',\r\n      'S': 'strikethrough',\r\n      'M': 'monospace',\r\n      'K': 'link'\r\n    };\r\n\r\n    const selection = document.getSelection();\r\n    if(selection.toString().trim().length) {\r\n      for(const key in formatKeys) {\r\n        const good = e.code === ('Key' + key);\r\n  \r\n        if(good) {\r\n          // * костыльчик\r\n          if(key === 'K') {\r\n            this.appImManager.markupTooltip.showLinkEditor();\r\n            cancelEvent(e);\r\n            break;\r\n          }\r\n  \r\n          this.applyMarkdown(formatKeys[key]);\r\n          cancelEvent(e); // cancel legacy event\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //return;\r\n    if(e.code === 'KeyZ') {\r\n      let html = this.messageInput.innerHTML;\r\n\r\n      if(e.shiftKey) {\r\n        if(this.undoHistory.length) {\r\n          this.executedHistory.push(html);\r\n          html = this.undoHistory.pop();\r\n          this.undoRedo(e, 'redo', html);\r\n          html = this.messageInput.innerHTML;\r\n          this.canRedoFromHTML = this.undoHistory.length ? html : '';\r\n          this.canUndoFromHTML = html;\r\n        }\r\n      } else {\r\n        // * подождём, когда пользователь сам восстановит поле до нужного состояния, которое стало сразу после saveExecuted\r\n        if(this.executedHistory.length && (!this.canUndoFromHTML || html === this.canUndoFromHTML)) {\r\n          this.undoHistory.push(html);\r\n          html = this.executedHistory.pop();\r\n          this.undoRedo(e, 'undo', html);\r\n\r\n          // * поставим новое состояние чтобы снова подождать, если пользователь изменит что-то, и потом попробует откатить до предыдущего состояния\r\n          this.canUndoFromHTML = this.canRedoFromHTML = this.messageInput.innerHTML;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  private onMessageInput = (e?: Event) => {\r\n    // * validate due to manual formatting through browser's context menu\r\n    /* const inputType = (e as InputEvent).inputType;\r\n    console.log('message input event', e);\r\n    if(inputType === 'formatBold') {\r\n      console.log('message input format', this.messageInput.innerHTML);\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(!isSelectionSingle()) {\r\n      alert('not single');\r\n    } */\r\n\r\n    //console.log('messageInput input', this.messageInput.innerText);\r\n    //const value = this.messageInput.innerText;\r\n    const {value: richValue, entities: markdownEntities, caretPos} = getRichValueWithCaret(this.messageInputField.input);\r\n      \r\n    //const entities = RichTextProcessor.parseEntities(value);\r\n    const value = RichTextProcessor.parseMarkdown(richValue, markdownEntities, true);\r\n    const entities = RichTextProcessor.mergeEntities(markdownEntities, RichTextProcessor.parseEntities(value));\r\n\r\n    //this.chat.log('messageInput entities', richValue, value, markdownEntities, caretPos);\r\n\r\n    if(this.canRedoFromHTML && !this.lockRedo && this.messageInput.innerHTML !== this.canRedoFromHTML) {\r\n      this.canRedoFromHTML = '';\r\n      this.undoHistory.length = 0;\r\n    }\r\n\r\n    const urlEntities: Array<MessageEntity.messageEntityUrl | MessageEntity.messageEntityTextUrl> = entities.filter(e => e._ === 'messageEntityUrl' || e._ === 'messageEntityTextUrl') as any;\r\n    if(urlEntities.length) {\r\n      for(const entity of urlEntities) {\r\n        let url: string;\r\n        if(entity._ === 'messageEntityTextUrl') {\r\n          url = entity.url;\r\n        } else {\r\n          url = richValue.slice(entity.offset, entity.offset + entity.length);\r\n\r\n          if(!(url.includes('http://') || url.includes('https://'))) {\r\n            continue;\r\n          }\r\n        }\r\n\r\n        //console.log('messageInput url:', url);\r\n\r\n        if(this.lastUrl !== url) {\r\n          this.lastUrl = url;\r\n          this.willSendWebPage = null;\r\n          apiManager.invokeApi('messages.getWebPage', {\r\n            url,\r\n            hash: 0\r\n          }).then((webpage) => {\r\n            webpage = this.appWebPagesManager.saveWebPage(webpage);\r\n            if(webpage._  === 'webPage') {\r\n              if(this.lastUrl !== url) return;\r\n              //console.log('got webpage: ', webpage);\r\n\r\n              this.setTopInfo('webpage', () => {}, webpage.site_name || webpage.title || 'Webpage', webpage.description || webpage.url || '');\r\n\r\n              delete this.noWebPage;\r\n              this.willSendWebPage = webpage;\r\n            }\r\n          });\r\n        }\r\n\r\n        break;\r\n      }\r\n    } else if(this.lastUrl) {\r\n      this.lastUrl = '';\r\n      delete this.noWebPage;\r\n      this.willSendWebPage = null;\r\n      \r\n      if(this.helperType) {\r\n        this.helperFunc();\r\n      } else {\r\n        this.clearHelper();\r\n      }\r\n    }\r\n\r\n    if(!richValue.trim()) {\r\n      if(this.lastTimeType) {\r\n        this.appMessagesManager.setTyping(this.chat.peerId, {_: 'sendMessageCancelAction'});\r\n      }\r\n\r\n      this.appImManager.markupTooltip.hide();\r\n    } else {\r\n      const time = Date.now();\r\n      if(time - this.lastTimeType >= 6000) {\r\n        this.lastTimeType = time;\r\n        this.appMessagesManager.setTyping(this.chat.peerId, {_: 'sendMessageTypingAction'});\r\n      }\r\n    }\r\n\r\n    if(!this.editMsgId) {\r\n      this.saveDraftDebounced();\r\n    }\r\n\r\n    this.checkAutocomplete(richValue, caretPos, entities);\r\n\r\n    this.updateSendBtn();\r\n  };\r\n\r\n  public insertAtCaret(insertText: string, insertEntity?: MessageEntity, isHelper = true) {\r\n    const {value: fullValue, caretPos, entities} = getRichValueWithCaret(this.messageInput);\r\n    const pos = caretPos >= 0 ? caretPos : fullValue.length;\r\n    const prefix = fullValue.substr(0, pos);\r\n    const suffix = fullValue.substr(pos);\r\n\r\n    const matches = isHelper ? prefix.match(ChatInput.AUTO_COMPLETE_REG_EXP) : null;\r\n\r\n    const matchIndex = matches ? matches.index + (matches[0].length - matches[2].length) : prefix.length;\r\n    const newPrefix = prefix.slice(0, matchIndex);\r\n    const newValue = newPrefix + insertText + suffix;\r\n\r\n    // merge emojis\r\n    const hadEntities = RichTextProcessor.parseEntities(fullValue);\r\n    RichTextProcessor.mergeEntities(entities, hadEntities);\r\n\r\n    // max for additional whitespace\r\n    const insertLength = insertEntity ? Math.max(insertEntity.length, insertText.length) : insertText.length;\r\n    const addEntities: MessageEntity[] = [];\r\n    if(insertEntity) {\r\n      addEntities.push(insertEntity);\r\n      insertEntity.offset = matchIndex;\r\n    }\r\n\r\n    addEntities.push({\r\n      _: 'messageEntityCaret',\r\n      length: 0,\r\n      offset: matchIndex + insertLength\r\n    });\r\n    \r\n    // add offset to entities next to emoji\r\n    const diff = insertLength - (matches ? matches[2].length : prefix.length);\r\n    entities.forEach(entity => {\r\n      if(entity.offset >= matchIndex) {\r\n        entity.offset += diff;\r\n      }\r\n    });\r\n\r\n    RichTextProcessor.mergeEntities(entities, addEntities);\r\n\r\n    //const saveExecuted = this.prepareDocumentExecute();\r\n    // can't exec .value here because it will instantly check for autocomplete\r\n    this.messageInputField.setValueSilently(RichTextProcessor.wrapDraftText(newValue, {entities}), true);\r\n\r\n    const caret = this.messageInput.querySelector('.composer-sel');\r\n    setRichFocus(this.messageInput, caret);\r\n    caret.remove();\r\n\r\n    // but it's needed to be checked only here\r\n    this.onMessageInput();\r\n\r\n    //saveExecuted();\r\n\r\n    //document.execCommand('insertHTML', true, RichTextProcessor.wrapEmojiText(emoji));\r\n  }\r\n\r\n  public onEmojiSelected = (emoji: string, autocomplete: boolean) => {\r\n    if(autocomplete) {\r\n      this.insertAtCaret(emoji, RichTextProcessor.getEmojiEntityFromEmoji(emoji));\r\n    }\r\n  };\r\n\r\n  private checkAutocomplete(value?: string, caretPos?: number, entities?: MessageEntity[]) {\r\n    //return;\r\n\r\n    if(value === undefined) {\r\n      const r = getRichValueWithCaret(this.messageInputField.input, true);\r\n      value = r.value;\r\n      caretPos = r.caretPos;\r\n      entities = r.entities;\r\n    }\r\n\r\n    if(caretPos === -1) {\r\n      caretPos = value.length;\r\n    }\r\n\r\n    if(entities === undefined) {\r\n      const _value = RichTextProcessor.parseMarkdown(value, entities, true);\r\n      entities = RichTextProcessor.mergeEntities(entities, RichTextProcessor.parseEntities(_value));\r\n    }\r\n\r\n    value = value.substr(0, caretPos);\r\n\r\n    const matches = value.match(ChatInput.AUTO_COMPLETE_REG_EXP);\r\n    if(!matches) {\r\n      this.previousQuery = undefined;\r\n      this.autocompleteHelperController.hideOtherHelpers();\r\n      return;\r\n    }\r\n\r\n    if(this.previousQuery === matches[0]) {\r\n      return;\r\n    }\r\n    \r\n    this.previousQuery = matches[0];\r\n\r\n    let foundHelper: AutocompleteHelper;\r\n    const entity = entities[0];\r\n\r\n    const query = matches[2];\r\n    const firstChar = query[0];\r\n\r\n    if(this.stickersHelper && \r\n      rootScope.settings.stickers.suggest && \r\n      (this.chat.peerId > 0 || this.appChatsManager.hasRights(this.chat.peerId, 'send_stickers')) &&\r\n      entity?._ === 'messageEntityEmoji' && entity.length === value.length && !entity.offset) {\r\n      foundHelper = this.stickersHelper;\r\n      this.stickersHelper.checkEmoticon(value);\r\n    } else \r\n    //let query = cleanSearchText(query);\r\n\r\n    //console.log('autocomplete matches', matches);\r\n\r\n    if(firstChar === '@') { // mentions\r\n      const topMsgId = this.chat.threadId ? this.appMessagesManager.getServerMessageId(this.chat.threadId) : undefined;\r\n      if(this.mentionsHelper.checkQuery(query, this.chat.peerId, topMsgId)) {\r\n        foundHelper = this.mentionsHelper;\r\n      }\r\n    } else if(!matches[1] && firstChar === '/') { // commands\r\n      if(this.commandsHelper.checkQuery(query, this.chat.peerId)) {\r\n        foundHelper = this.commandsHelper;\r\n      }\r\n    } else if(rootScope.settings.emoji.suggest) { // emoji\r\n      if(!value.match(/^\\s*:(.+):\\s*$/) && !value.match(/:[;!@#$%^&*()-=|]/)) {\r\n        foundHelper = this.emojiHelper;\r\n        this.emojiHelper.checkQuery(query, firstChar);\r\n      }\r\n    }\r\n\r\n    this.autocompleteHelperController.hideOtherHelpers(foundHelper);\r\n  }\r\n\r\n  private onBtnSendClick = (e: Event) => {\r\n    cancelEvent(e);\r\n\r\n    if(!this.recorder || this.recording || !this.isInputEmpty() || this.forwardingMids.length || this.editMsgId) {\r\n      if(this.recording) {\r\n        if((Date.now() - this.recordStartTime) < RECORD_MIN_TIME) {\r\n          this.onCancelRecordClick();\r\n        } else {\r\n          this.recorder.stop();\r\n        }\r\n      } else {\r\n        this.sendMessage();\r\n      }\r\n    } else {\r\n      if(this.chat.peerId < 0 && !this.appChatsManager.hasRights(this.chat.peerId, 'send_media')) {\r\n        toast(POSTING_MEDIA_NOT_ALLOWED);\r\n        return;\r\n      }\r\n\r\n      this.chatInput.classList.add('is-locked');\r\n      blurActiveElement();\r\n      this.recorder.start().then(() => {\r\n        this.recordCanceled = false;\r\n        \r\n        this.chatInput.classList.add('is-recording');\r\n        this.recording = true;\r\n        this.updateSendBtn();\r\n        opusDecodeController.setKeepAlive(true);\r\n\r\n        this.recordStartTime = Date.now();\r\n\r\n        const sourceNode: MediaStreamAudioSourceNode = this.recorder.sourceNode;\r\n        const context = sourceNode.context;\r\n\r\n        const analyser = context.createAnalyser();\r\n        sourceNode.connect(analyser);\r\n        //analyser.connect(context.destination);\r\n        analyser.fftSize = 32;\r\n\r\n        const frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n        const max = frequencyData.length * 255;\r\n        const min = 54 / 150;\r\n        let r = () => {\r\n          if(!this.recording) return;\r\n\r\n          analyser.getByteFrequencyData(frequencyData);\r\n\r\n          let sum = 0;\r\n          frequencyData.forEach(value => {\r\n            sum += value;\r\n          });\r\n          \r\n          let percents = Math.min(1, (sum / max) + min);\r\n          //console.log('frequencyData', frequencyData, percents);\r\n\r\n          this.recordRippleEl.style.transform = `scale(${percents})`;\r\n\r\n          let diff = Date.now() - this.recordStartTime;\r\n          let ms = diff % 1000;\r\n\r\n          let formatted = ('' + (diff / 1000)).toHHMMSS() + ',' + ('00' + Math.round(ms / 10)).slice(-2);\r\n\r\n          this.recordTimeEl.innerText = formatted;\r\n\r\n          window.requestAnimationFrame(r);\r\n        };\r\n\r\n        r();\r\n      }).catch((e: Error) => {\r\n        switch(e.name as string) {\r\n          case 'NotAllowedError': {\r\n            toast('Please allow access to your microphone');\r\n            break;\r\n          }\r\n\r\n          case 'NotReadableError': {\r\n            toast(e.message);\r\n            break;\r\n          }\r\n\r\n          default:\r\n            console.error('Recorder start error:', e, e.name, e.message);\r\n            toast(e.message);\r\n            break;\r\n        }\r\n\r\n        this.chatInput.classList.remove('is-recording', 'is-locked');\r\n      });\r\n    }\r\n  };\r\n\r\n  private onHelperCancel = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(this.willSendWebPage) {\r\n      const lastUrl = this.lastUrl;\r\n      let needReturn = false;\r\n      if(this.helperType) {\r\n        //if(this.helperFunc) {\r\n          this.helperFunc();\r\n        //}\r\n\r\n        needReturn = true;\r\n      }\r\n\r\n      // * restore values\r\n      this.lastUrl = lastUrl;\r\n      this.noWebPage = true;\r\n      this.willSendWebPage = null;\r\n\r\n      if(needReturn) return;\r\n    }\r\n\r\n    this.clearHelper();\r\n    this.updateSendBtn();\r\n  };\r\n\r\n  private onHelperClick = (e: Event) => {\r\n    cancelEvent(e);\r\n      \r\n    if(!findUpClassName(e.target, 'reply-wrapper')) return;\r\n    if(this.helperType === 'forward') {\r\n      if(this.helperWaitingForward) return;\r\n      this.helperWaitingForward = true;\r\n\r\n      const fromId = this.forwardingFromPeerId;\r\n      const mids = this.forwardingMids.slice();\r\n      const helperFunc = this.helperFunc;\r\n      this.clearHelper();\r\n      let selected = false;\r\n      new PopupForward(fromId, mids, () => {\r\n        selected = true;\r\n      }, () => {\r\n        this.helperWaitingForward = false;\r\n\r\n        if(!selected) {\r\n          helperFunc();\r\n        }\r\n      });\r\n    } else if(this.helperType === 'reply') {\r\n      this.chat.setMessageId(this.replyToMsgId);\r\n    } else if(this.helperType === 'edit') {\r\n      this.chat.setMessageId(this.editMsgId);\r\n    }\r\n  };\r\n\r\n  public clearInput(canSetDraft = true) {\r\n    if(document.activeElement === this.messageInput && isMobileSafari) {\r\n      const i = document.createElement('input');\r\n      document.body.append(i);\r\n      fixSafariStickyInput(i);\r\n      this.messageInputField.value = '';\r\n      fixSafariStickyInput(this.messageInput);\r\n      i.remove();\r\n    } else {\r\n      this.messageInputField.value = '';\r\n    }\r\n\r\n    if(isTouchSupported) {\r\n      //this.messageInput.innerText = '';\r\n    } else {\r\n      //this.attachMessageInputField();\r\n      //this.messageInput.innerText = '';\r\n\r\n      // clear executions\r\n      this.canRedoFromHTML = '';\r\n      this.undoHistory.length = 0;\r\n      this.executedHistory.length = 0;\r\n      this.canUndoFromHTML = '';\r\n    }\r\n\r\n    let set = false;\r\n    if(canSetDraft) {\r\n      set = this.setDraft(undefined, false);\r\n    }\r\n\r\n    /* if(!set) {\r\n      this.onMessageInput();\r\n    } */\r\n  }\r\n\r\n  public isInputEmpty() {\r\n    return isInputEmpty(this.messageInput);\r\n  }\r\n\r\n  public updateSendBtn() {\r\n    let icon: 'send' | 'record' | 'edit' | 'schedule';\r\n\r\n    const isInputEmpty = this.isInputEmpty();\r\n\r\n    if(this.editMsgId) icon = 'edit';\r\n    else if(!this.recorder || this.recording || !isInputEmpty || this.forwardingMids.length) icon = this.chat.type === 'scheduled' ? 'schedule' : 'send';\r\n    else icon = 'record';\r\n\r\n    ['send', 'record', 'edit', 'schedule'].forEach(i => {\r\n      this.btnSend.classList.toggle(i, icon === i);\r\n    });\r\n\r\n    if(this.btnScheduled) {\r\n      this.btnScheduled.classList.toggle('show', isInputEmpty);\r\n    }\r\n\r\n    if(this.btnToggleReplyMarkup) {\r\n      this.btnToggleReplyMarkup.classList.toggle('show', isInputEmpty);\r\n    }\r\n  }\r\n\r\n  public onMessageSent(clearInput = true, clearReply?: boolean) {\r\n    if(this.chat.type !== 'scheduled') {\r\n      this.appMessagesManager.readAllHistory(this.chat.peerId, this.chat.threadId, true);\r\n    }\r\n\r\n    this.scheduleDate = undefined;\r\n    this.sendSilent = undefined;\r\n\r\n    const value = this.messageInputField.value;\r\n    const entities = RichTextProcessor.parseEntities(value);\r\n    const emojiEntities: MessageEntity.messageEntityEmoji[] = entities.filter(entity => entity._ === 'messageEntityEmoji') as any;\r\n    emojiEntities.forEach(entity => {\r\n      const emoji = emojiFromCodePoints(entity.unicode);\r\n      this.appEmojiManager.pushRecentEmoji(emoji);\r\n    });\r\n\r\n    if(clearInput) {\r\n      this.lastUrl = '';\r\n      delete this.noWebPage;\r\n      this.willSendWebPage = null;\r\n      this.clearInput();\r\n    }\r\n\r\n    if(clearReply || clearInput) {\r\n      this.clearHelper();\r\n    }\r\n\r\n    this.updateSendBtn();\r\n  }\r\n\r\n  public sendMessage(force = false) {\r\n    if(this.chat.type === 'scheduled' && !force && !this.editMsgId) {\r\n      this.scheduleSending();\r\n      return;\r\n    }\r\n\r\n    const {value, entities} = getRichValue(this.messageInputField.input);\r\n\r\n    //return;\r\n    if(this.editMsgId) {\r\n      this.appMessagesManager.editMessage(this.chat.getMessage(this.editMsgId), value, {\r\n        entities,\r\n        noWebPage: this.noWebPage\r\n      });\r\n    } else {\r\n      this.appMessagesManager.sendText(this.chat.peerId, value, {\r\n        entities,\r\n        replyToMsgId: this.replyToMsgId,\r\n        threadId: this.chat.threadId,\r\n        noWebPage: this.noWebPage,\r\n        webPage: this.willSendWebPage,\r\n        scheduleDate: this.scheduleDate,\r\n        silent: this.sendSilent,\r\n        clearDraft: true\r\n      });\r\n    }\r\n\r\n    // * wait for sendText set messageId for invokeAfterMsg\r\n    if(this.forwardingMids.length) {\r\n      const mids = this.forwardingMids.slice();\r\n      const fromPeerId = this.forwardingFromPeerId;\r\n      const peerId = this.chat.peerId;\r\n      const silent = this.sendSilent;\r\n      const scheduleDate = this.scheduleDate;\r\n      setTimeout(() => {\r\n        this.appMessagesManager.forwardMessages(peerId, fromPeerId, mids, {\r\n          silent,\r\n          scheduleDate: scheduleDate\r\n        });\r\n      }, 0);\r\n    }\r\n\r\n    this.onMessageSent();\r\n  }\r\n\r\n  public sendMessageWithDocument(document: MyDocument | string, force = false, clearDraft = false) {\r\n    document = this.appDocsManager.getDoc(document);\r\n\r\n    const flag = document.type === 'sticker' ? 'send_stickers' : (document.type === 'gif' ? 'send_gifs' : 'send_media');\r\n    if(this.chat.peerId < 0 && !this.appChatsManager.hasRights(this.chat.peerId, flag)) {\r\n      toast(POSTING_MEDIA_NOT_ALLOWED);\r\n      return;\r\n    }\r\n\r\n    if(this.chat.type === 'scheduled' && !force) {\r\n      this.scheduleSending(() => this.sendMessageWithDocument(document, true));\r\n      return false;\r\n    }\r\n\r\n    if(document) {\r\n      this.appMessagesManager.sendFile(this.chat.peerId, document, {\r\n        isMedia: true, \r\n        replyToMsgId: this.replyToMsgId, \r\n        threadId: this.chat.threadId,\r\n        silent: this.sendSilent, \r\n        scheduleDate: this.scheduleDate,\r\n        clearDraft: clearDraft || undefined\r\n      });\r\n      this.onMessageSent(clearDraft, true);\r\n\r\n      if(document.type === 'sticker') {\r\n        emoticonsDropdown.stickersTab?.pushRecentSticker(document);\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /* public sendSomething(callback: () => void, force = false) {\r\n    if(this.chat.type === 'scheduled' && !force) {\r\n      this.scheduleSending(() => this.sendSomething(callback, true));\r\n      return false;\r\n    }\r\n\r\n    callback();\r\n    this.onMessageSent(false, true);\r\n\r\n    return true;\r\n  } */\r\n\r\n  public initMessageEditing(mid: number) {\r\n    const message = this.chat.getMessage(mid);\r\n\r\n    let input = RichTextProcessor.wrapDraftText(message.message, {entities: message.totalEntities});\r\n    const f = () => {\r\n      // ! костыль\r\n      const replyFragment = this.appMessagesManager.wrapMessageForReply(message, undefined, [message.mid]);\r\n      this.setTopInfo('edit', f, 'Editing', undefined, input, message);\r\n      const subtitleEl = this.replyElements.container.querySelector('.reply-subtitle');\r\n      subtitleEl.textContent = '';\r\n      subtitleEl.append(replyFragment);\r\n\r\n      this.editMsgId = mid;\r\n      input = undefined;\r\n    };\r\n    f();\r\n  }\r\n\r\n  public initMessagesForward(fromPeerId: number, mids: number[]) {\r\n    const f = () => {\r\n      //const peerTitles: string[]\r\n      const smth: Set<string | number> = new Set(mids.map(mid => {\r\n        const message = this.appMessagesManager.getMessageByPeer(fromPeerId, mid);\r\n        if(message.fwd_from && message.fwd_from.from_name && !message.fromId && !message.fwdFromId) {\r\n          return message.fwd_from.from_name;\r\n        } else {\r\n          return message.fromId;\r\n        }\r\n      }));\r\n\r\n      const onlyFirstName = smth.size > 1;\r\n      const peerTitles = [...smth].map(smth => {\r\n        return typeof(smth) === 'number' ? \r\n          this.appPeersManager.getPeerTitle(smth, true, onlyFirstName) : \r\n          (onlyFirstName ? smth.split(' ')[0] : smth);\r\n      });\r\n\r\n      const title = peerTitles.length < 3 ? peerTitles.join(' and ') : peerTitles[0] + ' and ' + (peerTitles.length - 1) + ' others';\r\n      const firstMessage = this.appMessagesManager.getMessageByPeer(fromPeerId, mids[0]);\r\n\r\n      let usingFullAlbum = true;\r\n      if(firstMessage.grouped_id) {\r\n        const albumMids = this.appMessagesManager.getMidsByMessage(firstMessage);\r\n        if(albumMids.length !== mids.length || albumMids.find(mid => !mids.includes(mid))) {\r\n          usingFullAlbum = false;\r\n        }\r\n      }\r\n\r\n      const replyFragment = this.appMessagesManager.wrapMessageForReply(firstMessage, undefined, mids);\r\n      if(usingFullAlbum || mids.length === 1) {\r\n        this.setTopInfo('forward', f, title);\r\n\r\n        // ! костыль\r\n        const subtitleEl = this.replyElements.container.querySelector('.reply-subtitle');\r\n        subtitleEl.textContent = '';\r\n        subtitleEl.append(replyFragment);\r\n      } else {\r\n        this.setTopInfo('forward', f, title, mids.length + ' ' + (mids.length > 1 ? 'forwarded messages' : 'forwarded message'));\r\n      }\r\n\r\n      this.forwardingMids = mids.slice();\r\n      this.forwardingFromPeerId = fromPeerId;\r\n    };\r\n    \r\n    f();\r\n  }\r\n\r\n  public initMessageReply(mid: number) {\r\n    const message = this.chat.getMessage(mid);\r\n    const f = () => {\r\n      this.setTopInfo('reply', f, this.appPeersManager.getPeerTitle(message.fromId, true), message.message, undefined, message);\r\n      this.replyToMsgId = mid;\r\n    };\r\n    f();\r\n  }\r\n\r\n  public clearHelper(type?: ChatInputHelperType) {\r\n    if(this.helperType === 'edit' && type !== 'edit') {\r\n      this.clearInput();\r\n    }\r\n\r\n    if(type) {\r\n      this.lastUrl = '';\r\n      delete this.noWebPage;\r\n      this.willSendWebPage = null;\r\n    }\r\n    \r\n    this.replyToMsgId = undefined;\r\n    this.forwardingMids.length = 0;\r\n    this.forwardingFromPeerId = 0;\r\n    this.editMsgId = undefined;\r\n    this.helperType = this.helperFunc = undefined;\r\n\r\n    if(this.chat.container.classList.contains('is-helper-active')) {\r\n      appNavigationController.removeByType('input-helper');\r\n      this.chat.container.classList.remove('is-helper-active');\r\n    }\r\n  }\r\n\r\n  public setInputValue(value: string, clear = true, focus = true) {\r\n    clear && this.clearInput();\r\n    this.messageInputField.value = value || '';\r\n    window.requestAnimationFrame(() => {\r\n      focus && placeCaretAtEnd(this.messageInput);\r\n      this.messageInput.scrollTop = this.messageInput.scrollHeight;\r\n    });\r\n  }\r\n\r\n  public setTopInfo(type: ChatInputHelperType, callerFunc: () => void, title = '', subtitle = '', input?: string, message?: any) {\r\n    if(type !== 'webpage') {\r\n      this.clearHelper(type);\r\n      this.helperType = type;\r\n      this.helperFunc = callerFunc;\r\n    }\r\n\r\n    if(this.replyElements.container.lastElementChild.tagName === 'DIV') {\r\n      this.replyElements.container.lastElementChild.remove();\r\n      this.replyElements.container.append(wrapReply(title, subtitle, message));\r\n    }\r\n\r\n    this.chat.container.classList.add('is-helper-active');\r\n    /* const scroll = appImManager.scrollable;\r\n    if(scroll.isScrolledDown && !scroll.scrollLocked && !appImManager.messagesQueuePromise && !appImManager.setPeerPromise) {\r\n      scroll.scrollTo(scroll.scrollHeight, 'top', true, true, 200);\r\n    } */\r\n\r\n    if(!isMobile) {\r\n      appNavigationController.pushItem({\r\n        type: 'input-helper',\r\n        onPop: () => {\r\n          this.onHelperCancel();\r\n        }\r\n      });\r\n    }\r\n\r\n    if(input !== undefined) {\r\n      this.setInputValue(input);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.updateSendBtn();\r\n    }, 0);\r\n  }\r\n\r\n  // public saveScroll() {\r\n  //   this.scrollTop = this.chat.bubbles.scrollable.container.scrollTop;\r\n  //   this.scrollOffsetTop = this.chatInput.offsetTop;\r\n  // }\r\n\r\n  // public restoreScroll() {\r\n  //   if(this.chatInput.style.display) return;\r\n  //   //console.log('input resize', offsetTop, this.chatInput.offsetTop);\r\n  //   let newOffsetTop = this.chatInput.offsetTop;\r\n  //   let container = this.chat.bubbles.scrollable.container;\r\n  //   let scrollTop = container.scrollTop;\r\n  //   let clientHeight = container.clientHeight;\r\n  //   let maxScrollTop = container.scrollHeight;\r\n\r\n  //   if(newOffsetTop < this.scrollOffsetTop) {\r\n  //     this.scrollDiff = this.scrollOffsetTop - newOffsetTop;\r\n  //     container.scrollTop += this.scrollDiff;\r\n  //   } else if(scrollTop !== this.scrollTop) {\r\n  //     let endDiff = maxScrollTop - (scrollTop + clientHeight);\r\n  //     if(endDiff < this.scrollDiff/*  && false */) {\r\n  //       //container.scrollTop -= endDiff;\r\n  //     } else {\r\n  //       container.scrollTop -= this.scrollDiff;\r\n  //     }\r\n  //   }\r\n  // }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function setRichFocus(field: HTMLElement, selectNode: Node, noCollapse?: boolean) {\r\n  field.focus();\r\n  if(selectNode &&\r\n    selectNode.parentNode == field &&\r\n    !selectNode.nextSibling &&\r\n    !noCollapse) {\r\n    field.removeChild(selectNode);\r\n    selectNode = null;\r\n  }\r\n\r\n  if(window.getSelection && document.createRange) {\r\n    const range = document.createRange();\r\n    if(selectNode) {\r\n      range.selectNode(selectNode);\r\n    } else {\r\n      range.selectNodeContents(field);\r\n    }\r\n\r\n    if(!noCollapse) {\r\n      range.collapse(false);\r\n    }\r\n\r\n    const sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n  }\r\n  /* else if (document.body.createTextRange !== undefined) {\r\n    var textRange = document.body.createTextRange()\r\n    textRange.moveToElementText(selectNode || field)\r\n    if (!noCollapse) {\r\n      textRange.collapse(false)\r\n    }\r\n    textRange.select()\r\n  } */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type ChatBubbles from \"./bubbles\";\r\nimport type ChatInput from \"./input\";\r\nimport type Chat from \"./chat\";\r\nimport { isTouchSupported } from \"../../helpers/touchSupport\";\r\nimport Button from \"../button\";\r\nimport ButtonIcon from \"../buttonIcon\";\r\nimport CheckboxField from \"../checkboxField\";\r\nimport PopupDeleteMessages from \"../popups/deleteMessages\";\r\nimport PopupForward from \"../popups/forward\";\r\nimport { toast } from \"../toast\";\r\nimport SetTransition from \"../singleTransition\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport PopupSendNow from \"../popups/sendNow\";\r\nimport appNavigationController from \"../appNavigationController\";\r\nimport { isMobileSafari } from \"../../helpers/userAgent\";\r\nimport I18n, { i18n, _i18n } from \"../../lib/langPack\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport cancelSelection from \"../../helpers/dom/cancelSelection\";\r\nimport getSelectedText from \"../../helpers/dom/getSelectedText\";\r\n\r\nconst MAX_SELECTION_LENGTH = 100;\r\n//const MIN_CLICK_MOVE = 32; // minimum bubble height\r\n\r\nexport default class ChatSelection {\r\n  public selectedMids: Set<number> = new Set();\r\n  public isSelecting = false;\r\n\r\n  private selectionInputWrapper: HTMLElement;\r\n  private selectionContainer: HTMLElement;\r\n  private selectionCountEl: HTMLElement;\r\n  public selectionSendNowBtn: HTMLElement;\r\n  public selectionForwardBtn: HTMLElement;\r\n  public selectionDeleteBtn: HTMLElement;\r\n\r\n  public selectedText: string;\r\n\r\n  private listenerSetter: ListenerSetter;\r\n\r\n  constructor(private chat: Chat, private bubbles: ChatBubbles, private input: ChatInput, private appMessagesManager: AppMessagesManager) {\r\n    const bubblesContainer = bubbles.bubblesContainer;\r\n    this.listenerSetter = bubbles.listenerSetter;\r\n\r\n    if(isTouchSupported) {\r\n      this.listenerSetter.add(bubblesContainer, 'touchend', (e) => {\r\n        if(!this.isSelecting) return;\r\n        this.selectedText = getSelectedText();\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.listenerSetter.add(bubblesContainer, 'mousedown', (e) => {\r\n      //console.log('selection mousedown', e);\r\n      const bubble = findUpClassName(e.target, 'bubble');\r\n      // LEFT BUTTON\r\n      // проверка внизу нужна для того, чтобы не активировать селект если target потомок .bubble\r\n      if(e.button !== 0\r\n        || (\r\n          !this.selectedMids.size \r\n          && !(e.target as HTMLElement).classList.contains('bubble')\r\n          && !(e.target as HTMLElement).classList.contains('document-selection')\r\n          && bubble\r\n          )\r\n        ) {\r\n        return;\r\n      }\r\n      \r\n      const seen: Set<number> = new Set();\r\n      let selecting: boolean;\r\n\r\n      /* let good = false;\r\n      const {x, y} = e; */\r\n\r\n      /* const bubbles = appImManager.bubbles;\r\n      for(const mid in bubbles) {\r\n        const bubble = bubbles[mid];\r\n        bubble.addEventListener('mouseover', () => {\r\n          console.log('mouseover');\r\n        }, {once: true});\r\n      } */\r\n\r\n      //const foundTargets: Map<HTMLElement, true> = new Map();\r\n      let canceledSelection = false;\r\n      const onMouseMove = (e: MouseEvent) => {\r\n        if(!canceledSelection) {\r\n          cancelSelection();\r\n          canceledSelection = true;\r\n        }\r\n        /* if(!good) {\r\n          if(Math.abs(e.x - x) > MIN_CLICK_MOVE || Math.abs(e.y - y) > MIN_CLICK_MOVE) {\r\n            good = true;\r\n          } else {\r\n            return;\r\n          }\r\n        } */\r\n\r\n        /* if(foundTargets.has(e.target as HTMLElement)) return;\r\n        foundTargets.set(e.target as HTMLElement, true); */\r\n        const bubble = findUpClassName(e.target, 'grouped-item') || findUpClassName(e.target, 'bubble');\r\n        if(!bubble) {\r\n          //console.error('found no bubble', e);\r\n          return;\r\n        }\r\n\r\n        const mid = +bubble.dataset.mid;\r\n        if(!mid) return;\r\n\r\n        // * cancel selecting if selecting message text\r\n        if(e.target !== bubble && !(e.target as HTMLElement).classList.contains('document-selection') && selecting === undefined && !this.selectedMids.size) {\r\n          this.listenerSetter.removeManual(bubblesContainer, 'mousemove', onMouseMove);\r\n          this.listenerSetter.removeManual(document, 'mouseup', onMouseUp, documentListenerOptions);\r\n          return;\r\n        }\r\n\r\n        if(!seen.has(mid)) {\r\n          const isBubbleSelected = this.selectedMids.has(mid);\r\n          if(selecting === undefined) {\r\n            //bubblesContainer.classList.add('no-select');\r\n            selecting = !isBubbleSelected;\r\n          }\r\n\r\n          seen.add(mid);\r\n\r\n          if((selecting && !isBubbleSelected) || (!selecting && isBubbleSelected)) {\r\n            if(!this.selectedMids.size) {\r\n              if(seen.size === 2) {\r\n                [...seen].forEach(mid => {\r\n                  const mounted = this.bubbles.getMountedBubble(mid);\r\n                  if(mounted) {\r\n                    this.toggleByBubble(mounted.bubble);\r\n                  }\r\n                })\r\n              }\r\n            } else {\r\n              this.toggleByBubble(bubble);\r\n            }\r\n          }\r\n        }\r\n        //console.log('onMouseMove', target);\r\n      };\r\n\r\n      const onMouseUp = (e: MouseEvent) => {\r\n        if(seen.size) {\r\n          window.addEventListener('click', (e) => {\r\n            cancelEvent(e);\r\n          }, {capture: true, once: true, passive: false});\r\n        }\r\n\r\n        this.listenerSetter.removeManual(bubblesContainer, 'mousemove', onMouseMove);\r\n        //bubblesContainer.classList.remove('no-select');\r\n\r\n        // ! CANCEL USER SELECTION !\r\n        cancelSelection();\r\n      };\r\n\r\n      const documentListenerOptions = {once: true};\r\n      this.listenerSetter.add(bubblesContainer, 'mousemove', onMouseMove);\r\n      this.listenerSetter.add(document, 'mouseup', onMouseUp, documentListenerOptions);\r\n    });\r\n  }\r\n\r\n  public toggleBubbleCheckbox(bubble: HTMLElement, show: boolean) {\r\n    if(!this.canSelectBubble(bubble)) return;\r\n\r\n    const hasCheckbox = !!this.getCheckboxInputFromBubble(bubble);\r\n    const isGrouped = bubble.classList.contains('is-grouped');\r\n    if(show) {\r\n      if(hasCheckbox) return;\r\n      \r\n      const checkboxField = new CheckboxField({\r\n        name: bubble.dataset.mid, \r\n        round: true\r\n      });\r\n      checkboxField.label.classList.add('bubble-select-checkbox');\r\n\r\n      // * if it is a render of new message\r\n      if(this.isSelecting) { // ! avoid breaking animation on start\r\n        const mid = +bubble.dataset.mid;\r\n        if(this.selectedMids.has(mid) && (!isGrouped || this.isGroupedMidsSelected(mid))) {\r\n          checkboxField.input.checked = true;\r\n          bubble.classList.add('is-selected');\r\n        }\r\n      }\r\n\r\n      if(bubble.classList.contains('document-container')) {\r\n        bubble.querySelector('.document, audio-element').append(checkboxField.label);\r\n      } else {\r\n        bubble.prepend(checkboxField.label);\r\n      }\r\n    } else if(hasCheckbox) {\r\n      this.getCheckboxInputFromBubble(bubble).parentElement.remove();\r\n    }\r\n\r\n    if(isGrouped) {\r\n      this.bubbles.getBubbleGroupedItems(bubble).forEach(item => this.toggleBubbleCheckbox(item, show));\r\n    }\r\n  }\r\n\r\n  private getCheckboxInputFromBubble(bubble: HTMLElement): HTMLInputElement {\r\n    /* let perf = performance.now();\r\n    let checkbox = bubble.firstElementChild.tagName === 'LABEL' && bubble.firstElementChild.firstElementChild as HTMLInputElement;\r\n    console.log('getCheckboxInputFromBubble firstElementChild time:', performance.now() - perf);\r\n\r\n    perf = performance.now();\r\n    checkbox = bubble.querySelector('label input');\r\n    console.log('getCheckboxInputFromBubble querySelector time:', performance.now() - perf); */\r\n    /* let perf = performance.now();\r\n    let contains = bubble.classList.contains('document-container');\r\n    console.log('getCheckboxInputFromBubble classList time:', performance.now() - perf);\r\n\r\n    perf = performance.now();\r\n    contains = bubble.className.includes('document-container');\r\n    console.log('getCheckboxInputFromBubble className time:', performance.now() - perf); */\r\n\r\n    return bubble.classList.contains('document-container') ? \r\n      bubble.querySelector('label input') : \r\n      bubble.firstElementChild.tagName === 'LABEL' && bubble.firstElementChild.firstElementChild as HTMLInputElement;\r\n  }\r\n\r\n  private updateContainer(forceSelection = false) {\r\n    if(!this.selectedMids.size && !forceSelection) return;\r\n    this.selectionCountEl.textContent = '';\r\n    this.selectionCountEl.append(i18n('Chat.Selection.MessagesCount', [this.selectedMids.size]));\r\n\r\n    let cantForward = !this.selectedMids.size, cantDelete = !this.selectedMids.size, cantSend = !this.selectedMids.size;\r\n    for(const mid of this.selectedMids.values()) {\r\n      const message = this.appMessagesManager.getMessageByPeer(this.bubbles.peerId, mid);\r\n      if(!cantForward) {\r\n        if(message.action) {\r\n          cantForward = true;\r\n        }\r\n      }\r\n      \r\n\r\n      if(!cantDelete) {\r\n        const canDelete = this.appMessagesManager.canDeleteMessage(this.chat.getMessage(mid));\r\n        if(!canDelete) {\r\n          cantDelete = true;\r\n        }\r\n      }\r\n\r\n      if(cantForward && cantDelete) break;\r\n    }\r\n\r\n    this.selectionSendNowBtn && this.selectionSendNowBtn.toggleAttribute('disabled', cantSend);\r\n    this.selectionForwardBtn && this.selectionForwardBtn.toggleAttribute('disabled', cantForward);\r\n    this.selectionDeleteBtn.toggleAttribute('disabled', cantDelete);\r\n  }\r\n\r\n  public toggleSelection(toggleCheckboxes = true, forceSelection = false) {\r\n    const wasSelecting = this.isSelecting;\r\n    this.isSelecting = this.selectedMids.size > 0 || forceSelection;\r\n\r\n    if(wasSelecting === this.isSelecting) return;\r\n    \r\n    const bubblesContainer = this.bubbles.bubblesContainer;\r\n    //bubblesContainer.classList.toggle('is-selecting', !!this.selectedMids.size);\r\n\r\n    /* if(bubblesContainer.classList.contains('is-chat-input-hidden')) {\r\n      const scrollable = this.appImManager.scrollable;\r\n      if(scrollable.isScrolledDown) {\r\n        scrollable.scrollTo(scrollable.scrollHeight, 'top', true, true, 200);\r\n      }\r\n    } */\r\n\r\n    if(!isTouchSupported) {\r\n      bubblesContainer.classList.toggle('no-select', this.isSelecting);\r\n\r\n      if(wasSelecting) {\r\n        // ! CANCEL USER SELECTION !\r\n        cancelSelection();\r\n      }\r\n    }/*  else {\r\n      if(!wasSelecting) {\r\n        bubblesContainer.classList.add('no-select');\r\n        setTimeout(() => {\r\n          cancelSelection();\r\n          bubblesContainer.classList.remove('no-select');\r\n          cancelSelection();\r\n        }, 100);\r\n      }\r\n    } */\r\n\r\n    blurActiveElement();\r\n\r\n    let transform = '', borderRadius = '';\r\n    const forwards = !!this.selectedMids.size || forceSelection;\r\n    if(forwards) {\r\n      const p = this.input.rowsWrapper.parentElement;\r\n      const fakeSelectionWrapper = p.querySelector('.fake-selection-wrapper');\r\n      const fakeRowsWrapper = p.querySelector('.fake-rows-wrapper');\r\n      const fakeSelectionRect = fakeSelectionWrapper.getBoundingClientRect();\r\n      const fakeRowsRect = fakeRowsWrapper.getBoundingClientRect();\r\n      const widthFrom = fakeRowsRect.width;\r\n      const widthTo = fakeSelectionRect.width;\r\n\r\n      if(widthFrom !== widthTo) {\r\n        const scale = (widthTo/*  - 8 */) / widthFrom;\r\n        const initTranslateX = (widthFrom - widthTo) / 2;\r\n        const needTranslateX = fakeSelectionRect.left - fakeRowsRect.left - initTranslateX;\r\n        transform = `translateX(${needTranslateX}px) scaleX(${scale})`;\r\n\r\n        if(scale < 1) {\r\n          const br = 12;\r\n          borderRadius = '' + (br + br * (1 - scale)) + 'px';\r\n        }\r\n        //scale = widthTo / widthFrom;\r\n      }\r\n    }\r\n\r\n    SetTransition(this.input.rowsWrapper, 'is-centering', forwards, 200);\r\n    this.input.rowsWrapper.style.transform = transform;\r\n    this.input.rowsWrapper.style.borderRadius = borderRadius;\r\n    SetTransition(bubblesContainer, 'is-selecting', forwards, 200, () => {\r\n      if(!this.isSelecting) {\r\n        this.selectionInputWrapper.remove();\r\n        this.selectionInputWrapper = this.selectionContainer = this.selectionSendNowBtn = this.selectionForwardBtn = this.selectionDeleteBtn = null;\r\n        this.selectedText = undefined;\r\n      }\r\n      \r\n      window.requestAnimationFrame(() => {\r\n        this.bubbles.onScroll();\r\n      });\r\n    });\r\n\r\n    if(!isMobileSafari) {\r\n      if(forwards) {\r\n        appNavigationController.pushItem({\r\n          type: 'multiselect',\r\n          onPop: () => {\r\n            this.cancelSelection();\r\n          }\r\n        });\r\n      } else {\r\n        appNavigationController.removeByType('multiselect');\r\n      }\r\n    }\r\n\r\n    //const chatInput = this.appImManager.chatInput;\r\n\r\n    if(this.isSelecting) {\r\n      if(!this.selectionContainer) {\r\n        this.selectionInputWrapper = document.createElement('div');\r\n        this.selectionInputWrapper.classList.add('chat-input-wrapper', 'selection-wrapper');\r\n\r\n        this.selectionContainer = document.createElement('div');\r\n        this.selectionContainer.classList.add('selection-container');\r\n\r\n        const btnCancel = ButtonIcon('close', {noRipple: true});\r\n        this.listenerSetter.add(btnCancel, 'click', this.cancelSelection, {once: true});\r\n\r\n        this.selectionCountEl = document.createElement('div');\r\n        this.selectionCountEl.classList.add('selection-container-count');\r\n\r\n        if(this.chat.type === 'scheduled') {\r\n          this.selectionSendNowBtn = Button('btn-primary btn-transparent btn-short text-bold selection-container-send', {icon: 'send2'});\r\n          this.selectionSendNowBtn.append(i18n('MessageScheduleSend'));\r\n          this.listenerSetter.add(this.selectionSendNowBtn, 'click', () => {\r\n            new PopupSendNow(this.bubbles.peerId, [...this.selectedMids], () => {\r\n              this.cancelSelection();\r\n            })\r\n          });\r\n        } else {\r\n          this.selectionForwardBtn = Button('btn-primary btn-transparent text-bold selection-container-forward', {icon: 'forward'});\r\n          this.selectionForwardBtn.append(i18n('Forward'));\r\n          this.listenerSetter.add(this.selectionForwardBtn, 'click', () => {\r\n            new PopupForward(this.bubbles.peerId, [...this.selectedMids], () => {\r\n              this.cancelSelection();\r\n            });\r\n          });\r\n        }\r\n\r\n        this.selectionDeleteBtn = Button('btn-primary btn-transparent danger text-bold selection-container-delete', {icon: 'delete'});\r\n        this.selectionDeleteBtn.append(i18n('Delete'));\r\n        this.listenerSetter.add(this.selectionDeleteBtn, 'click', () => {\r\n          new PopupDeleteMessages(this.bubbles.peerId, [...this.selectedMids], this.chat.type, () => {\r\n            this.cancelSelection();\r\n          });\r\n        });\r\n\r\n        this.selectionContainer.append(...[btnCancel, this.selectionCountEl, this.selectionSendNowBtn, this.selectionForwardBtn, this.selectionDeleteBtn].filter(Boolean));\r\n\r\n        this.selectionInputWrapper.style.opacity = '0';\r\n        this.selectionInputWrapper.append(this.selectionContainer);\r\n        this.input.rowsWrapper.parentElement.append(this.selectionInputWrapper);\r\n\r\n        void this.selectionInputWrapper.offsetLeft; // reflow\r\n        this.selectionInputWrapper.style.opacity = '';\r\n      }\r\n    }\r\n\r\n    if(toggleCheckboxes) {\r\n      for(const mid in this.bubbles.bubbles) {\r\n        const bubble = this.bubbles.bubbles[mid];\r\n        this.toggleBubbleCheckbox(bubble, this.isSelecting);\r\n      }\r\n    }\r\n\r\n    if(forceSelection) {\r\n      this.updateContainer(forceSelection);\r\n    }\r\n  }\r\n\r\n  public cancelSelection = () => {\r\n    for(const mid of this.selectedMids) {\r\n      const mounted = this.bubbles.getMountedBubble(mid);\r\n      if(mounted) {\r\n        //this.toggleByBubble(mounted.message.grouped_id ? mounted.bubble.querySelector(`.grouped-item[data-mid=\"${mid}\"]`) : mounted.bubble);\r\n        this.toggleByBubble(mounted.bubble);\r\n      }\r\n      /* const bubble = this.appImManager.bubbles[mid];\r\n      if(bubble) {\r\n        this.toggleByBubble(bubble);\r\n      } */\r\n    }\r\n\r\n    this.selectedMids.clear();\r\n    this.toggleSelection();\r\n    cancelSelection();\r\n  };\r\n\r\n  public cleanup() {\r\n    this.selectedMids.clear();\r\n    this.toggleSelection(false);\r\n  }\r\n\r\n  private updateBubbleSelection(bubble: HTMLElement, isSelected: boolean) {\r\n    this.toggleBubbleCheckbox(bubble, true);\r\n    const input = this.getCheckboxInputFromBubble(bubble);\r\n    input.checked = isSelected;\r\n\r\n    this.toggleSelection();\r\n    this.updateContainer();\r\n    SetTransition(bubble, 'is-selected', isSelected, 200);\r\n  }\r\n\r\n  private isGroupedBubbleSelected(bubble: HTMLElement) {\r\n    const groupedCheckboxInput = this.getCheckboxInputFromBubble(bubble);\r\n    return groupedCheckboxInput?.checked;\r\n  }\r\n\r\n  private isGroupedMidsSelected(mid: number) {\r\n    const mids = this.chat.getMidsByMid(mid);\r\n    const selectedMids = mids.filter(mid => this.selectedMids.has(mid));\r\n    return mids.length === selectedMids.length;\r\n  }\r\n\r\n  public toggleByBubble = (bubble: HTMLElement) => {\r\n    if(!this.canSelectBubble(bubble)) return;\r\n\r\n    const mid = +bubble.dataset.mid;\r\n\r\n    const isGrouped = bubble.classList.contains('is-grouped');\r\n    if(isGrouped) {\r\n      if(!this.isGroupedBubbleSelected(bubble)) {\r\n        const mids = this.chat.getMidsByMid(mid);\r\n        mids.forEach(mid => this.selectedMids.delete(mid));\r\n      }\r\n\r\n      this.bubbles.getBubbleGroupedItems(bubble).forEach(this.toggleByBubble);\r\n      return;\r\n    }\r\n\r\n    const found = this.selectedMids.has(mid);\r\n    if(found) {\r\n      this.selectedMids.delete(mid);\r\n    } else {\r\n      const diff = MAX_SELECTION_LENGTH - this.selectedMids.size - 1;\r\n      if(diff < 0) {\r\n        toast(I18n.format('Chat.Selection.LimitToast', true));\r\n        return;\r\n        /* const it = this.selectedMids.values();\r\n        do {\r\n          const mid = it.next().value;\r\n          const mounted = this.appImManager.getMountedBubble(mid);\r\n          if(mounted) {\r\n            this.toggleByBubble(mounted.bubble);\r\n          } else {\r\n            const mids = this.appMessagesManager.getMidsByMid(mid);\r\n            for(const mid of mids) {\r\n              this.selectedMids.delete(mid);\r\n            }\r\n          }\r\n        } while(this.selectedMids.size > MAX_SELECTION_LENGTH); */\r\n      }\r\n\r\n      this.selectedMids.add(mid);\r\n    }\r\n\r\n    const isGroupedItem = bubble.classList.contains('grouped-item');\r\n    if(isGroupedItem) {\r\n      const groupContainer = findUpClassName(bubble, 'bubble');\r\n      const isGroupedSelected = this.isGroupedBubbleSelected(groupContainer);\r\n      const isGroupedMidsSelected = this.isGroupedMidsSelected(mid);\r\n\r\n      const willChange = isGroupedMidsSelected || isGroupedSelected;\r\n      if(willChange) {\r\n        this.updateBubbleSelection(groupContainer, isGroupedMidsSelected);\r\n      }\r\n    }\r\n\r\n    this.updateBubbleSelection(bubble, !found);\r\n  };\r\n\r\n  /**\r\n   * ! Call this method only to handle deleted messages\r\n   */\r\n  public deleteSelectedMids(mids: number[]) {\r\n    mids.forEach(mid => {\r\n      this.selectedMids.delete(mid);\r\n    });\r\n\r\n    this.updateContainer();\r\n    this.toggleSelection();\r\n  }\r\n\r\n  public canSelectBubble(bubble: HTMLElement) {\r\n    return !bubble.classList.contains('service') && !bubble.classList.contains('is-sending');\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function getSelectedText(): string {\r\n  if(window.getSelection) {\r\n    return window.getSelection().toString();\r\n    // @ts-ignore\r\n  } else if(document.selection) {\r\n    // @ts-ignore\r\n    return document.selection.createRange().text;\r\n  }\r\n  \r\n  return '';\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type Chat from \"./chat\";\r\nimport type ChatTopbar from \"./topbar\";\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport DivAndCaption from \"../divAndCaption\";\r\nimport { ripple } from \"../ripple\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\n\r\n//const classNames: string[] = [];\r\nconst classNames: string[] = ['is-pinned-message-shown', 'is-pinned-audio-shown'];\r\nconst CLASSNAME_BASE = 'pinned-container';\r\nconst HEIGHT = 52;\r\n\r\nexport default class PinnedContainer {\r\n  private close: HTMLElement;\r\n  protected wrapper: HTMLElement;\r\n\r\n  constructor(protected topbar: ChatTopbar, protected chat: Chat, public listenerSetter: ListenerSetter, protected className: string, public divAndCaption: DivAndCaption<(title: string | HTMLElement, subtitle: string | HTMLElement, message?: any) => void>, onClose?: () => void | Promise<boolean>) {\r\n    /* const prev = this.divAndCaption.fill;\r\n    this.divAndCaption.fill = (mid, title, subtitle) => {\r\n      this.divAndCaption.container.dataset.mid = '' + mid;\r\n      prev(mid, title, subtitle);\r\n    }; */\r\n\r\n    //classNames.push(`is-pinned-${className}-shown`);\r\n\r\n    divAndCaption.container.classList.add(CLASSNAME_BASE, 'hide');\r\n    divAndCaption.title.classList.add(CLASSNAME_BASE + '-title');\r\n    divAndCaption.subtitle.classList.add(CLASSNAME_BASE + '-subtitle');\r\n    divAndCaption.content.classList.add(CLASSNAME_BASE + '-content');\r\n\r\n    this.close = document.createElement('button');\r\n    this.close.classList.add(CLASSNAME_BASE + '-close', `pinned-${className}-close`, 'btn-icon', 'tgico-close');\r\n\r\n    //divAndCaption.container.prepend(this.close);\r\n\r\n    this.wrapper = document.createElement('div');\r\n    this.wrapper.classList.add(CLASSNAME_BASE + '-wrapper');\r\n    this.wrapper.append(...Array.from(divAndCaption.container.children));\r\n    ripple(this.wrapper);\r\n    \r\n    divAndCaption.container.append(this.close, this.wrapper);\r\n\r\n    attachClickEvent(this.close, (e) => {\r\n      cancelEvent(e);\r\n\r\n      ((onClose ? onClose() : null) || Promise.resolve(true)).then(needClose => {\r\n        if(needClose) {\r\n          this.toggle(true);\r\n        }\r\n      });\r\n    }, {listenerSetter: this.listenerSetter});\r\n  }\r\n\r\n  public toggle(hide?: boolean) {\r\n    const isHidden = this.divAndCaption.container.classList.contains('hide');\r\n    if(hide === undefined) {\r\n      hide = !isHidden;\r\n    } else if(hide === isHidden) {\r\n      return;\r\n    }\r\n\r\n    this.divAndCaption.container.classList.toggle('is-floating', mediaSizes.isMobile);\r\n    this.topbar.container.classList.toggle('is-pinned-floating', mediaSizes.isMobile);\r\n\r\n    const scrollable = this.chat.bubbles.scrollable;\r\n\r\n    const scrollTop = mediaSizes.isMobile /* && !appImManager.scrollable.isScrolledDown */ ? scrollable.scrollTop : undefined;\r\n    this.divAndCaption.container.classList.toggle('hide', hide);\r\n    const className = `is-pinned-${this.className}-shown`;\r\n    this.topbar.container.classList.toggle(className, !hide);\r\n\r\n    const active = classNames.filter(className => this.topbar.container.classList.contains(className));\r\n    const maxActive = hide ? 0 : 1;\r\n    \r\n    if(scrollTop !== undefined && active.length <= maxActive/*  && !scrollable.isScrolledDown */) {\r\n      scrollable.scrollTop = scrollTop + ((hide ? -1 : 1) * HEIGHT);\r\n    }\r\n\r\n    this.topbar.setUtilsWidth();\r\n  }\r\n\r\n  public fill(title: string | HTMLElement, subtitle: string | HTMLElement, message: any) {\r\n    this.divAndCaption.container.dataset.peerId = '' + message.peerId;\r\n    this.divAndCaption.container.dataset.mid = '' + message.mid;\r\n    this.divAndCaption.fill(title, subtitle, message);\r\n    this.topbar.setUtilsWidth();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type ChatTopbar from \"./topbar\";\r\nimport { RichTextProcessor } from \"../../lib/richtextprocessor\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport appMediaPlaybackController from \"../appMediaPlaybackController\";\r\nimport DivAndCaption from \"../divAndCaption\";\r\nimport { formatDate } from \"../wrappers\";\r\nimport PinnedContainer from \"./pinnedContainer\";\r\nimport Chat from \"./chat\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport replaceContent from \"../../helpers/dom/replaceContent\";\r\nimport PeerTitle from \"../peerTitle\";\r\n\r\nexport default class ChatAudio extends PinnedContainer {\r\n  private toggleEl: HTMLElement;\r\n\r\n  constructor(protected topbar: ChatTopbar, protected chat: Chat, protected appMessagesManager: AppMessagesManager) {\r\n    super(topbar, chat, topbar.listenerSetter, 'audio', new DivAndCaption('pinned-audio', (title: string | HTMLElement, subtitle: string | HTMLElement) => {\r\n      replaceContent(this.divAndCaption.title, title);\r\n      replaceContent(this.divAndCaption.subtitle, subtitle);\r\n    }), () => {\r\n      if(this.toggleEl.classList.contains('flip-icon')) {\r\n        appMediaPlaybackController.toggle();\r\n      }\r\n    });\r\n\r\n    this.divAndCaption.border.remove();\r\n\r\n    this.toggleEl = document.createElement('button');\r\n    this.toggleEl.classList.add('pinned-audio-ico', 'tgico', 'btn-icon');\r\n    attachClickEvent(this.toggleEl, (e) => {\r\n      cancelEvent(e);\r\n      appMediaPlaybackController.toggle();\r\n    }, {listenerSetter: this.topbar.listenerSetter});\r\n\r\n    this.wrapper.prepend(this.toggleEl);\r\n\r\n    this.topbar.listenerSetter.add(rootScope, 'audio_play', (e) => {\r\n      const {doc, mid, peerId} = e;\r\n\r\n      let title: string | HTMLElement, subtitle: string;\r\n      const message = appMessagesManager.getMessageByPeer(peerId, mid);\r\n      if(doc.type === 'voice' || doc.type === 'round') {\r\n        title = new PeerTitle({\r\n          peerId: message.fromId,\r\n          onlyFirstName: true\r\n        }).element;\r\n\r\n        //subtitle = 'Voice message';\r\n        subtitle = formatDate(message.date, false, false);\r\n      } else {\r\n        title = doc.audioTitle || doc.file_name;\r\n        subtitle = doc.audioPerformer ? RichTextProcessor.wrapPlainText(doc.audioPerformer) : 'Unknown Artist';\r\n      }\r\n\r\n      this.fill(title, subtitle, message);\r\n      this.toggleEl.classList.add('flip-icon');\r\n      this.toggle(false);\r\n    });\r\n\r\n    this.topbar.listenerSetter.add(rootScope, 'audio_pause', () => {\r\n      this.toggleEl.classList.remove('flip-icon');\r\n    });\r\n  }\r\n}\r\n","// https://github.com/evgeny-nadymov/telegram-react/blob/master/src/Components/ColumnMiddle/PinnedMessageBorder.js\r\n\r\nexport default class PinnedMessageBorder {\r\n  private border: HTMLElement;\r\n  private wrapper: HTMLElement;\r\n  private svg: SVGSVGElement;\r\n  private defs: SVGDefsElement;\r\n  private clipPath: SVGClipPathElement;\r\n  private path: SVGPathElement;\r\n  private mark: HTMLElement;\r\n\r\n  private count: number;\r\n  private index: number;\r\n\r\n  private drawRect = (x: number, y: number, width: number, height: number, radius: number) => {\r\n    return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\r\n  };\r\n\r\n  private getClipPath = (id: string, barHeight: number, count: number) => {\r\n    const radius = 1;\r\n\r\n    let d = '';\r\n    if(count === 3) {\r\n      d = this.drawRect(0, 0, 2, barHeight, radius)\r\n        + this.drawRect(0, 11, 2, barHeight + 1, radius)\r\n        + this.drawRect(0, 23, 2, barHeight, radius);\r\n    } else {\r\n      for(let i = 0; i < count; i++) {\r\n        d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\r\n      }\r\n    }\r\n\r\n    if(!this.clipPath) {\r\n      this.clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\r\n      this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n\r\n      this.clipPath.append(this.path);\r\n    }\r\n\r\n    this.clipPath.id = id;\r\n    this.path.setAttributeNS(null, 'd', d);\r\n\r\n    return this.clipPath;\r\n  };\r\n\r\n  private getBarHeight = (count: number, index: number) => {\r\n    let barHeight = 32;\r\n    if(count === 1) {\r\n      barHeight = 32;\r\n    } else if(count === 2) {\r\n      barHeight = 15;\r\n    } else if(count === 3) {\r\n      barHeight = 9;\r\n    } else if(count === 4) {\r\n      barHeight = 7;\r\n    } else if(count > 3) {\r\n      barHeight = 7;\r\n    }\r\n\r\n    return barHeight;\r\n  };\r\n\r\n  private getMarkHeight = (count: number, index: number) => {\r\n    let barHeight = 32;\r\n    if(count === 1) {\r\n      barHeight = 32;\r\n    } else if(count === 2) {\r\n      barHeight = 15;\r\n    } else if(count === 3) {\r\n      barHeight = index === 1 ? 10 : 9;\r\n    } else if(count === 4) {\r\n      barHeight = 7;\r\n    } else if(count > 3) {\r\n      barHeight = 7;\r\n    }\r\n\r\n    return barHeight;\r\n  };\r\n\r\n  private getMarkTranslateY = (index: number, barHeight: number, count: number) => {\r\n    if(count === 1) {\r\n      return 0;\r\n    } else if(count === 2) {\r\n      return index === 0 ? 0 : barHeight + 2;\r\n    }\r\n\r\n    if(count === 3) {\r\n      if(index === 0) {\r\n        return 0;\r\n      } else if (index === 1) {\r\n        return 11;\r\n      }\r\n\r\n      return 23;\r\n    } else {\r\n      return (barHeight + 2) * index;\r\n    }\r\n  };\r\n\r\n  private getTrackTranslateY = (index: number, count: number, barHeight: number, trackHeight: number) => {\r\n    if(count <= 4) {\r\n      return 0;\r\n    }\r\n\r\n    if(index <= 1) {\r\n      return 0;\r\n    } else if(index >= count - 2) {\r\n      return trackHeight - 32;\r\n    }\r\n\r\n    return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\r\n  };\r\n\r\n  private getTrackHeight = (count: number, barHeight: number) => {\r\n    return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\r\n  };\r\n\r\n  public render(count: number, index: number) {\r\n    if(!this.border) {\r\n      this.border = document.createElement('div');\r\n      this.border.classList.add('pinned-message-border');\r\n\r\n      this.wrapper = document.createElement('div');\r\n      this.border.append(this.wrapper);\r\n    }\r\n    \r\n    if(count === 1) {\r\n      if(this.count !== count) {\r\n        this.wrapper.className = 'pinned-message-border-wrapper-1';\r\n        this.border.classList.remove('pinned-message-border-mask');\r\n        this.wrapper.innerHTML = this.wrapper.style.cssText = '';\r\n      }\r\n\r\n      return this.border;\r\n    }\r\n\r\n    const barHeight = this.getBarHeight(count, index);\r\n    const markHeight = this.getMarkHeight(count, index);\r\n    const trackHeight = this.getTrackHeight(count, barHeight);\r\n\r\n    const clipPathId = `clipPath_${count}`;\r\n    const clipPath = this.getClipPath(clipPathId, barHeight, count);\r\n\r\n    const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\r\n    const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\r\n\r\n    this.border.classList.toggle('pinned-message-border-mask', count > 4);\r\n\r\n    this.wrapper.className = 'pinned-message-border-wrapper';\r\n    this.wrapper.style.cssText = `clip-path: url(#${clipPathId}); width: 2px; height: ${trackHeight}px; transform: translateY(-${trackTranslateY}px);`;\r\n    \r\n    if(!this.svg) {\r\n      this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n      this.svg.setAttributeNS(null, 'height', '0');\r\n      this.svg.setAttributeNS(null, 'width', '0');\r\n  \r\n      this.defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\r\n      this.defs.append(clipPath);\r\n\r\n      this.svg.append(this.defs);\r\n\r\n      this.mark = document.createElement('div');\r\n      this.mark.classList.add('pinned-message-border-mark');\r\n    }\r\n\r\n    if(!this.svg.parentElement) {\r\n      this.wrapper.append(this.svg, this.mark);\r\n    }\r\n\r\n    this.mark.style.cssText = `height: ${markHeight}px; transform: translateY(${markTranslateY}px);`;\r\n    \r\n    this.count = count;\r\n    this.index = index;\r\n\r\n    return this.border;\r\n  }\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\r\nimport type ChatTopbar from \"./topbar\";\r\nimport PopupPinMessage from \"../popups/unpinMessage\";\r\nimport PinnedContainer from \"./pinnedContainer\";\r\nimport PinnedMessageBorder from \"./pinnedMessageBorder\";\r\nimport ReplyContainer, { wrapReplyDivAndCaption } from \"./replyContainer\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport Chat from \"./chat\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport ButtonIcon from \"../buttonIcon\";\r\nimport { debounce } from \"../../helpers/schedulers\";\r\nimport { getHeavyAnimationPromise } from \"../../hooks/useHeavyAnimationCheck\";\r\nimport { i18n } from \"../../lib/langPack\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport handleScrollSideEvent from \"../../helpers/dom/handleScrollSideEvent\";\r\n\r\nclass AnimatedSuper {\r\n  static DURATION = 200;\r\n  static BASE_CLASS = 'animated-super';\r\n  container: HTMLDivElement;\r\n  rows: {[index: string]: {element: HTMLElement, timeout?: number, new?: true}} = {};\r\n  clearTimeout: number;\r\n\r\n  constructor() {\r\n    this.container = document.createElement('div');\r\n    this.container.className = AnimatedSuper.BASE_CLASS;\r\n  }\r\n\r\n  public getRow(index: number, animateFirst = false) {\r\n    if(this.rows[index]) return this.rows[index].element;\r\n    const row = document.createElement('div');\r\n    const isFirst = !Object.keys(this.rows).length && !animateFirst;\r\n    row.className = AnimatedSuper.BASE_CLASS + '-row' + (isFirst ? '' : ' is-hiding hide');\r\n    this.rows[index] = {element: row, new: true};\r\n    this.container.append(row);\r\n    return row;\r\n  }\r\n\r\n  public clearRow(index: number) {\r\n    if(!this.rows[index]) return;\r\n    this.rows[index].element.remove();\r\n    delete this.rows[index];\r\n  }\r\n\r\n  public clearRows(currentIndex?: number) {\r\n    if(this.clearTimeout) clearTimeout(this.clearTimeout);\r\n    this.clearTimeout = window.setTimeout(() => {\r\n      for(const i in this.rows) {\r\n        if(+i === currentIndex) continue;\r\n        this.clearRow(+i);\r\n      }\r\n    }, AnimatedSuper.DURATION);\r\n  }\r\n\r\n  public setNewRow(index: number, reflow = false) {\r\n    const row = this.rows[index];\r\n    if(row.new) {\r\n      if(reflow) {\r\n        row.element.classList.remove('hide');\r\n        void row.element.offsetLeft; // reflow\r\n      } else {\r\n        row.element.classList.remove('is-hiding', 'hide');\r\n      }\r\n\r\n      delete row.new;\r\n    }\r\n\r\n    this.clearRows(index);\r\n  }\r\n\r\n  public animate(index: number, previousIndex: number, fromTop = index > previousIndex, ignorePrevious = false) {\r\n    if(index === previousIndex) { // * handle if set index 0 and previousIndex 0\r\n      return this.setNewRow(index);\r\n    }\r\n\r\n    const row = this.rows[index];\r\n    const previousRow = this.rows[previousIndex];\r\n    if(!previousRow && !ignorePrevious) {\r\n      return this.setNewRow(index);\r\n    }\r\n\r\n    const sides = ['from-top', 'from-bottom'];\r\n    if(!fromTop) sides.reverse();\r\n\r\n    row.element.classList.add(sides[0]);\r\n    row.element.classList.remove(sides[1]);\r\n    if(previousRow) {\r\n      previousRow.element.classList.add(sides[1]);\r\n      previousRow.element.classList.remove(sides[0]);\r\n    }\r\n\r\n    if(row.new) {\r\n      this.setNewRow(index, true);\r\n    }\r\n\r\n    row.element.classList.toggle('is-hiding', false);\r\n    previousRow && previousRow.element.classList.toggle('is-hiding', true);\r\n\r\n    /* const height = row.element.getBoundingClientRect().height;\r\n    row.element.style.transform = `translateY(${fromTop ? height * -1 : height}px)`;\r\n    if(previousRow) {\r\n      previousRow.element.style.transform = `translateY(${fromTop ? height : height * -1}px)`;\r\n    } */\r\n\r\n    /* row.element.style.setProperty('--height', row.element.getBoundingClientRect().height + 'px');\r\n    if(previousRow) {\r\n      previousRow.element.style.setProperty('--height', previousRow.element.getBoundingClientRect().height + 'px');\r\n    } */\r\n    \r\n    this.clearRows(index);\r\n  }\r\n}\r\n\r\nclass AnimatedCounter {\r\n  static EMPTY_INDEX = -1;\r\n  static BASE_CLASS = 'animated-counter';\r\n  container: HTMLElement;\r\n  decimals: {\r\n    container: HTMLElement,\r\n    placeholder: HTMLElement,\r\n    animatedSuper: AnimatedSuper\r\n  }[] = [];\r\n  previousNumber = 0;\r\n  clearTimeout: number;\r\n\r\n  constructor(private reverse = false) {\r\n    this.container = document.createElement('div');\r\n    this.container.className = AnimatedCounter.BASE_CLASS;\r\n  }\r\n\r\n  getDecimal(index: number) {\r\n    if(this.decimals[index]) return this.decimals[index];\r\n    const item = document.createElement('div');\r\n    item.className = AnimatedCounter.BASE_CLASS + '-decimal';\r\n\r\n    const placeholder = document.createElement('div');\r\n    placeholder.className = AnimatedCounter.BASE_CLASS + '-decimal-placeholder';\r\n\r\n    const animatedSuper = new AnimatedSuper();\r\n    animatedSuper.container.className = AnimatedCounter.BASE_CLASS + '-decimal-wrapper';\r\n\r\n    item.append(placeholder, animatedSuper.container);\r\n\r\n    this.container.append(item);\r\n\r\n    return this.decimals[index] = {container: item, placeholder, animatedSuper};\r\n  }\r\n\r\n  clear(number: number) {\r\n    if(this.clearTimeout) clearTimeout(this.clearTimeout);\r\n\r\n    const decimals = ('' + number).length;\r\n    if(decimals >= this.decimals.length) {\r\n      return;\r\n    }\r\n\r\n    this.clearTimeout = window.setTimeout(() => {\r\n      const byDecimal = this.decimals.splice(decimals, this.decimals.length - decimals);\r\n      byDecimal.forEach((decimal) => {\r\n        decimal.container.remove();\r\n      });\r\n    }, AnimatedSuper.DURATION);\r\n  }\r\n\r\n  /* prepareNumber(number: number) {\r\n    const decimals = ('' + number).length;\r\n    if(this.decimals.length < decimals) {\r\n      for(let i = this.decimals.length; i < decimals; ++i) {\r\n        this.getDecimal(i);\r\n      }\r\n    }\r\n  } */\r\n\r\n  hideLeft(number: number) {\r\n    const decimals = ('' + number).length;\r\n    const byDecimal = this.decimals.slice(decimals);//this.decimals.splice(deleteCount, this.decimals.length - deleteCount);\r\n    byDecimal.forEach((decimal) => {\r\n      const previousDecimalNumber = +decimal.placeholder.innerText || 0;\r\n      const row = decimal.animatedSuper.getRow(AnimatedCounter.EMPTY_INDEX, true);\r\n      decimal.animatedSuper.animate(AnimatedCounter.EMPTY_INDEX, previousDecimalNumber, this.reverse ? number < this.previousNumber : number > this.previousNumber, true);\r\n    });\r\n\r\n    this.clear(number);\r\n  }\r\n\r\n  setCount(number: number) {\r\n    //this.prepareNumber(number);\r\n\r\n    const previousByDecimal = Array.from('' + this.previousNumber).map(n => +n);\r\n    const byDecimal = Array.from('' + number).map(n => +n);\r\n    byDecimal.forEach((decimalNumber, idx) => {\r\n      const decimal = this.getDecimal(idx);\r\n      //const row = decimal.animatedSuper.getRow(number, true);\r\n      const row = decimal.animatedSuper.getRow(decimalNumber, true);\r\n      const previousDecimalNumber = previousByDecimal[idx] ?? AnimatedCounter.EMPTY_INDEX;\r\n      row.innerText = decimal.placeholder.innerText = '' + decimalNumber;\r\n      //decimal.animatedSuper.animate(number, this.previousNumber, this.reverse ? number < this.previousNumber : number > this.previousNumber, true);\r\n      decimal.animatedSuper.animate(decimalNumber, previousDecimalNumber, this.reverse ? number < this.previousNumber : number > this.previousNumber, true);\r\n    });\r\n\r\n    this.hideLeft(number);\r\n    //this.clear(number);\r\n    this.previousNumber = number;\r\n  }\r\n}\r\n\r\nexport default class ChatPinnedMessage {\r\n  public static LOAD_COUNT = 50;\r\n  public static LOAD_OFFSET = 5;\r\n\r\n  public pinnedMessageContainer: PinnedContainer;\r\n  public pinnedMessageBorder: PinnedMessageBorder;\r\n\r\n  public pinnedMaxMid = 0;\r\n  public pinnedMid = 0;\r\n  public pinnedIndex = -1;\r\n  public wasPinnedIndex = 0;\r\n  public wasPinnedMediaIndex = 0;\r\n  \r\n  public locked = false;\r\n  public waitForScrollBottom = false;\r\n\r\n  public count = 0;\r\n  public mids: number[] = [];\r\n  public offsetIndex = 0;\r\n\r\n  public loading = false;\r\n  public loadedBottom = false;\r\n  public loadedTop = false;\r\n\r\n  public animatedSubtitle: AnimatedSuper;\r\n  public animatedMedia: AnimatedSuper;\r\n  public animatedCounter: AnimatedCounter;\r\n\r\n  public listenerSetter: ListenerSetter;\r\n  public scrollDownListenerSetter: ListenerSetter = null;\r\n\r\n  public hidden = false;\r\n\r\n  public getCurrentIndexPromise: Promise<any> = null;\r\n  public btnOpen: HTMLButtonElement;\r\n  \r\n  public setPinnedMessage: () => void;\r\n\r\n  private isStatic = false;\r\n\r\n  private debug = false;\r\n  \r\n  constructor(private topbar: ChatTopbar, private chat: Chat, private appMessagesManager: AppMessagesManager, private appPeersManager: AppPeersManager) {\r\n    this.listenerSetter = new ListenerSetter();\r\n\r\n    this.pinnedMessageContainer = new PinnedContainer(topbar, chat, this.listenerSetter, 'message', new ReplyContainer('pinned-message'), async() => {\r\n      if(appPeersManager.canPinMessage(this.topbar.peerId)) {\r\n        new PopupPinMessage(this.topbar.peerId, this.pinnedMid, true);\r\n      } else {\r\n        new PopupPinMessage(this.topbar.peerId, 0, true);\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n    this.pinnedMessageBorder = new PinnedMessageBorder();\r\n    this.pinnedMessageContainer.divAndCaption.border.replaceWith(this.pinnedMessageBorder.render(1, 0));\r\n\r\n    this.animatedSubtitle = new AnimatedSuper();\r\n    this.pinnedMessageContainer.divAndCaption.subtitle.append(this.animatedSubtitle.container);\r\n\r\n    this.animatedMedia = new AnimatedSuper();\r\n    this.animatedMedia.container.classList.add('pinned-message-media-container');\r\n    this.pinnedMessageContainer.divAndCaption.content.prepend(this.animatedMedia.container);\r\n\r\n    this.animatedCounter = new AnimatedCounter(true);\r\n    this.pinnedMessageContainer.divAndCaption.title.append(i18n('PinnedMessage'), ' ', this.animatedCounter.container);\r\n\r\n    this.btnOpen = ButtonIcon('pinlist pinned-container-close pinned-message-pinlist', {noRipple: true});\r\n    this.pinnedMessageContainer.divAndCaption.container.prepend(this.btnOpen);\r\n\r\n    attachClickEvent(this.btnOpen, (e) => {\r\n      cancelEvent(e);\r\n      this.topbar.openPinned(true);\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    this.listenerSetter.add(rootScope, 'peer_pinned_messages', (e) => {\r\n      const peerId = e.peerId;\r\n\r\n      if(peerId === this.topbar.peerId) {\r\n        //this.wasPinnedIndex = 0;\r\n        //setTimeout(() => {\r\n          if(this.hidden) {\r\n            this.pinnedMessageContainer.toggle(this.hidden = false);\r\n          }\r\n\r\n          this.loadedTop = this.loadedBottom = false;\r\n          this.pinnedIndex = -1;\r\n          this.pinnedMid = 0;\r\n          this.count = 0;\r\n          this.mids = [];\r\n          this.offsetIndex = 0;\r\n          this.pinnedMaxMid = 0;\r\n          this.setCorrectIndex(0);\r\n        //}, 300);\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'peer_pinned_hidden', (e) => {\r\n      const {peerId, maxId} = e;\r\n\r\n      if(peerId === this.topbar.peerId) {\r\n        this.pinnedMessageContainer.toggle(this.hidden = true);\r\n      }\r\n    });\r\n\r\n    // * 200 - no lags\r\n    // * 100 - need test\r\n    this.setPinnedMessage = debounce(() => this._setPinnedMessage(), 100, true, true);\r\n\r\n    this.isStatic = this.chat.type === 'discussion';\r\n  }\r\n\r\n  public destroy() {\r\n    this.pinnedMessageContainer.divAndCaption.container.remove();\r\n    this.pinnedMessageContainer.toggle(true);\r\n    this.listenerSetter.removeAll();\r\n    this.unsetScrollDownListener(false);\r\n  }\r\n\r\n  public setCorrectIndex(lastScrollDirection?: number) {\r\n    if(this.isStatic) return;\r\n    //return;\r\n\r\n    if(this.locked || this.hidden/*  || this.chat.setPeerPromise || this.chat.bubbles.messagesQueuePromise */) {\r\n      return;\r\n    }\r\n\r\n    if((this.loadedBottom || this.loadedTop) && !this.count) {\r\n      return;\r\n    }\r\n\r\n    //const perf = performance.now();\r\n    let el = this.chat.bubbles.getBubbleByPoint('bottom');\r\n    //this.chat.log('[PM]: setCorrectIndex: get last element perf:', performance.now() - perf, el);\r\n    if(!el) return;\r\n\r\n    //return;\r\n\r\n    const mid = el.dataset.mid;\r\n    if(el && mid !== undefined) {\r\n      //this.chat.log('[PM]: setCorrectIndex will test mid:', mid);\r\n      this.testMid(+mid, lastScrollDirection);\r\n    }\r\n  }\r\n\r\n  public testMid(mid: number, lastScrollDirection?: number) {\r\n    if(this.isStatic) return;\r\n    \r\n    //if(lastScrollDirection !== undefined) return;\r\n    if(this.hidden) return;\r\n\r\n    //this.chat.log('[PM]: testMid', mid);\r\n\r\n    let currentIndex: number = this.mids.findIndex(_mid => _mid <= mid);\r\n    if(currentIndex !== -1 && !this.isNeededMore(currentIndex)) {\r\n      currentIndex += this.offsetIndex;\r\n    } else if(this.loadedTop && mid < this.mids[this.mids.length - 1]) {\r\n      //currentIndex = 0;\r\n      currentIndex = this.mids.length - 1 + this.offsetIndex;\r\n    } else {\r\n      if(!this.getCurrentIndexPromise) {\r\n        this.getCurrentIndexPromise = this.getCurrentIndex(mid, lastScrollDirection !== undefined);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    //const idx = Math.max(0, this.mids.indexOf(mid));\r\n\r\n    /* if(currentIndex === this.count) {\r\n      currentIndex = 0;\r\n    } */\r\n\r\n    //this.chat.log('[PM]: testMid: pinned currentIndex', currentIndex, mid);\r\n\r\n    const changed = this.pinnedIndex !== currentIndex;\r\n    if(changed) {\r\n      if(this.waitForScrollBottom && lastScrollDirection !== undefined) {\r\n        if(this.pinnedIndex === 0 || this.pinnedIndex > currentIndex) { // если не скроллил вниз и пытается поставить нижний пиннед - выйти\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.pinnedIndex = currentIndex;\r\n      this.pinnedMid = this.mids.find(_mid => _mid <= mid) || this.mids[this.mids.length - 1];\r\n      this.setPinnedMessage();\r\n    }\r\n  }\r\n\r\n  private isNeededMore(currentIndex: number) {\r\n    return (this.count > ChatPinnedMessage.LOAD_COUNT && \r\n      (\r\n        (!this.loadedBottom && currentIndex <= ChatPinnedMessage.LOAD_OFFSET) || \r\n        (!this.loadedTop && (this.count - 1 - currentIndex) <= ChatPinnedMessage.LOAD_OFFSET)\r\n      )\r\n    );\r\n  }\r\n\r\n  private async getCurrentIndex(mid: number, correctAfter = true) {\r\n    if(this.loading) return;\r\n    this.loading = true;\r\n\r\n    try {\r\n      let gotRest = false;\r\n      const promises = [\r\n        this.appMessagesManager.getSearch({\r\n          peerId: this.topbar.peerId, \r\n          inputFilter: {_: 'inputMessagesFilterPinned'}, \r\n          maxId: mid, \r\n          limit: ChatPinnedMessage.LOAD_COUNT, \r\n          backLimit: ChatPinnedMessage.LOAD_COUNT\r\n        })\r\n        .then(r => {\r\n          gotRest = true;\r\n          return r;\r\n        })\r\n      ];\r\n  \r\n      if(!this.pinnedMaxMid) {\r\n        const promise = this.appMessagesManager.getPinnedMessage(this.topbar.peerId).then(p => {\r\n          if(!p.maxId) return;\r\n          this.pinnedMaxMid = p.maxId;\r\n\r\n          if(!gotRest && correctAfter) {\r\n            this.mids = [this.pinnedMaxMid];\r\n            this.count = p.count;\r\n            this.pinnedIndex = 0;\r\n            this.pinnedMid = this.mids[0];\r\n            this.setPinnedMessage();\r\n            //this.pinnedMessageContainer.toggle(false);\r\n          }\r\n        });\r\n  \r\n        promises.push(promise as any);\r\n      }\r\n      \r\n      const result = (await Promise.all(promises))[0];\r\n  \r\n      let backLimited = result.history.findIndex(message => message.mid <= mid);\r\n      if(backLimited === -1) {\r\n        backLimited = result.history.length;\r\n      }/*  else {\r\n        backLimited -= 1;\r\n      } */\r\n      \r\n      this.offsetIndex = result.offset_id_offset ? result.offset_id_offset - backLimited : 0;\r\n      this.mids = result.history.map(message => message.mid).slice();\r\n      this.count = result.count;\r\n\r\n      if(!this.count) {\r\n        this.pinnedMessageContainer.toggle(true);\r\n      }\r\n  \r\n      this.loadedTop = (this.offsetIndex + this.mids.length) === this.count;\r\n      this.loadedBottom = !this.offsetIndex;\r\n  \r\n      this.debug && this.chat.log('[PM]: getCurrentIndex result:', mid, result, backLimited, this.offsetIndex, this.loadedTop, this.loadedBottom);\r\n    } catch(err) {\r\n      this.chat.log.error('[PM]: getCurrentIndex error', err);\r\n    }\r\n    \r\n    this.loading = false;\r\n\r\n    if(this.locked) {\r\n      this.testMid(mid);\r\n    } else if(correctAfter) {\r\n      this.setCorrectIndex(0);\r\n    }\r\n\r\n    this.getCurrentIndexPromise = null;\r\n    //return result.offset_id_offset || 0;\r\n  }\r\n\r\n  public setScrollDownListener() {\r\n    this.waitForScrollBottom = true;\r\n\r\n    if(!this.scrollDownListenerSetter) {\r\n      this.scrollDownListenerSetter = new ListenerSetter();\r\n      handleScrollSideEvent(this.chat.bubbles.scrollable.container, 'bottom', () => {\r\n        this.unsetScrollDownListener();\r\n      }, this.scrollDownListenerSetter);\r\n    }\r\n  }\r\n\r\n  public unsetScrollDownListener(refreshPosition = true) {\r\n    this.waitForScrollBottom = false;\r\n\r\n    if(this.scrollDownListenerSetter) {\r\n      this.scrollDownListenerSetter.removeAll();\r\n      this.scrollDownListenerSetter = null;\r\n    }\r\n\r\n    if(refreshPosition) {\r\n      this.setCorrectIndex(0);\r\n    }\r\n  }\r\n\r\n  public async handleFollowingPinnedMessage() {\r\n    this.locked = true;\r\n\r\n    this.debug && this.chat.log('[PM]: handleFollowingPinnedMessage');\r\n    try {\r\n      this.setScrollDownListener();\r\n\r\n      const setPeerPromise = this.chat.setPeerPromise;\r\n      if(setPeerPromise instanceof Promise) {\r\n        await setPeerPromise;\r\n      }\r\n  \r\n      //await this.chat.bubbles.scrollable.scrollLockedPromise;\r\n      await getHeavyAnimationPromise();\r\n\r\n      if(this.getCurrentIndexPromise) {\r\n        await this.getCurrentIndexPromise;\r\n      }\r\n\r\n      this.debug && this.chat.log('[PM]: handleFollowingPinnedMessage: unlock');\r\n      this.locked = false;\r\n\r\n      /* // подождём, пока скролл остановится\r\n      setTimeout(() => {\r\n        this.chat.log('[PM]: handleFollowingPinnedMessage: unlock');\r\n        this.locked = false;\r\n      }, 50); */\r\n    } catch(err) {\r\n      this.chat.log.error('[PM]: handleFollowingPinnedMessage error:', err);\r\n\r\n      this.locked = false;\r\n      this.waitForScrollBottom = false;\r\n      this.setCorrectIndex(0);\r\n    }\r\n  }\r\n\r\n  public async followPinnedMessage(mid: number) {\r\n    const message = this.chat.getMessage(mid);\r\n    if(message && !message.deleted) {\r\n      this.chat.setMessageId(mid);\r\n      (this.chat.setPeerPromise || Promise.resolve()).then(() => { // * debounce fast clicker\r\n        this.handleFollowingPinnedMessage();\r\n        this.testMid(this.pinnedIndex >= (this.count - 1) ? this.pinnedMaxMid : mid - 1);\r\n      });\r\n    }\r\n  }\r\n\r\n  public _setPinnedMessage() {\r\n    /////this.log('setting pinned message', message);\r\n    //return;\r\n    /* const promise: Promise<any> = this.chat.setPeerPromise || this.chat.bubbles.messagesQueuePromise || Promise.resolve();\r\n    Promise.all([\r\n      promise\r\n    ]).then(() => { */\r\n      //const mids = results[0];\r\n      const count = this.count;\r\n      if(count) {\r\n        const pinnedIndex = this.pinnedIndex;\r\n        const message = this.chat.getMessage(this.pinnedMid);\r\n\r\n        //this.animatedCounter.prepareNumber(count);\r\n\r\n        //setTimeout(() => {\r\n          const isLast = pinnedIndex === 0;\r\n          this.animatedCounter.container.classList.toggle('is-last', isLast);\r\n          //SetTransition(this.animatedCounter.container, 'is-last', isLast, AnimatedSuper.DURATION);\r\n          if(!isLast) {\r\n            this.animatedCounter.setCount(count - pinnedIndex);\r\n          }\r\n        //}, 100);\r\n\r\n        //this.pinnedMessageContainer.fill(undefined, message.message, message);\r\n        this.pinnedMessageContainer.toggle(false);\r\n\r\n        const fromTop = pinnedIndex > this.wasPinnedIndex;\r\n\r\n        this.debug && this.chat.log('[PM]: setPinnedMessage: fromTop', fromTop, pinnedIndex, this.wasPinnedIndex);\r\n\r\n        const writeTo = this.animatedSubtitle.getRow(pinnedIndex);\r\n        const writeMediaTo = this.animatedMedia.getRow(pinnedIndex);\r\n        writeMediaTo.classList.add('pinned-message-media');\r\n        //writeMediaTo.innerHTML = writeMediaTo.style.cssText = writeMediaTo.dataset.docId = '';\r\n        const isMediaSet = wrapReplyDivAndCaption({\r\n          title: undefined,\r\n          titleEl: null,\r\n          subtitle: message.message,\r\n          subtitleEl: writeTo,\r\n          message,\r\n          mediaEl: writeMediaTo\r\n        });\r\n\r\n        this.pinnedMessageContainer.divAndCaption.container.classList.toggle('is-media', isMediaSet);\r\n\r\n        //if(this.wasPinnedIndex !== this.pinnedIndex) {\r\n          this.animatedSubtitle.animate(pinnedIndex, this.wasPinnedIndex);\r\n          if(isMediaSet) {\r\n            this.animatedMedia.animate(pinnedIndex, this.wasPinnedMediaIndex); // * wasPinnedMediaIndex из-за того, что блок меняется с другим алгоритмом\r\n            this.wasPinnedMediaIndex = pinnedIndex;\r\n          } else {\r\n            this.animatedMedia.clearRows();\r\n          }\r\n        //}\r\n\r\n        this.pinnedMessageBorder.render(count, count - pinnedIndex - 1);\r\n        this.wasPinnedIndex = pinnedIndex;\r\n        this.pinnedMessageContainer.divAndCaption.container.dataset.mid = '' + message.mid;\r\n      } else {\r\n        this.pinnedMessageContainer.toggle(true);\r\n        this.wasPinnedIndex = 0;\r\n      }\r\n\r\n      this.pinnedMessageContainer.divAndCaption.container.classList.toggle('is-many', this.count > 1);\r\n    //});\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ListenerSetter from \"../listenerSetter\";\r\nimport { isTouchSupported } from \"../touchSupport\";\r\n\r\nexport default function handleScrollSideEvent(elem: HTMLElement, side: 'top' | 'bottom', callback: () => void, listenerSetter: ListenerSetter) {\r\n  if(isTouchSupported) {\r\n    let lastY: number;\r\n    const options = {passive: true};\r\n    listenerSetter.add(elem, 'touchstart', (e) => {\r\n      if(e.touches.length > 1) {\r\n        onTouchEnd();\r\n        return;\r\n      }\r\n\r\n      lastY = e.touches[0].clientY;\r\n\r\n      listenerSetter.add(elem, 'touchmove', onTouchMove, options);\r\n      listenerSetter.add(elem, 'touchend', onTouchEnd, options);\r\n    }, options);\r\n\r\n    const onTouchMove = (e: TouchEvent) => {\r\n      const clientY = e.touches[0].clientY;\r\n\r\n      const isDown = clientY < lastY;\r\n      if(side === 'bottom' && isDown) callback();\r\n      else if(side === 'top' && !isDown) callback();\r\n      lastY = clientY;\r\n      //alert('isDown: ' + !!isDown);\r\n    };\r\n    \r\n    const onTouchEnd = () => {\r\n      listenerSetter.removeManual(elem, 'touchmove', onTouchMove, options);\r\n      listenerSetter.removeManual(elem, 'touchend', onTouchEnd, options);\r\n    };\r\n  } else {\r\n    listenerSetter.add(elem, 'wheel', (e) => {\r\n      const isDown = e.deltaY > 0;\r\n      //this.log('wheel', e, isDown);\r\n      if(side === 'bottom' && isDown) callback();\r\n      else if(side === 'top' && !isDown) callback();\r\n    }, {passive: true});\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppNotificationsManager } from \"../../lib/appManagers/appNotificationsManager\";\r\nimport type { AppChatsManager, Channel } from \"../../lib/appManagers/appChatsManager\";\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\r\nimport type { AppSidebarRight } from \"../sidebarRight\";\r\nimport type Chat from \"./chat\";\r\nimport { RIGHT_COLUMN_ACTIVE_CLASSNAME } from \"../sidebarRight\";\r\nimport mediaSizes, { ScreenSize } from \"../../helpers/mediaSizes\";\r\nimport { isSafari } from \"../../helpers/userAgent\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport AvatarElement from \"../avatar\";\r\nimport Button from \"../button\";\r\nimport ButtonIcon from \"../buttonIcon\";\r\nimport ButtonMenuToggle from \"../buttonMenuToggle\";\r\nimport ChatAudio from \"./audio\";\r\nimport ChatPinnedMessage from \"./pinnedMessage\";\r\nimport { ButtonMenuItemOptions } from \"../buttonMenu\";\r\nimport ListenerSetter from \"../../helpers/listenerSetter\";\r\nimport appStateManager from \"../../lib/appManagers/appStateManager\";\r\nimport PopupDeleteDialog from \"../popups/deleteDialog\";\r\nimport appNavigationController from \"../appNavigationController\";\r\nimport { LEFT_COLUMN_ACTIVE_CLASSNAME } from \"../sidebarLeft\";\r\nimport PeerTitle from \"../peerTitle\";\r\nimport { i18n } from \"../../lib/langPack\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport findUpTag from \"../../helpers/dom/findUpTag\";\r\nimport { toast } from \"../toast\";\r\n\r\nexport default class ChatTopbar {\r\n  public container: HTMLDivElement;\r\n  private btnBack: HTMLButtonElement;\r\n  private chatInfo: HTMLDivElement;\r\n  private avatarElement: AvatarElement;\r\n  private title: HTMLDivElement;\r\n  private subtitle: HTMLDivElement;\r\n  private chatUtils: HTMLDivElement;\r\n  private btnJoin: HTMLButtonElement;\r\n  private btnPinned: HTMLButtonElement;\r\n  private btnMute: HTMLButtonElement;\r\n  private btnSearch: HTMLButtonElement;\r\n  private btnMore: HTMLButtonElement;\r\n  \r\n  private chatAudio: ChatAudio;\r\n  public pinnedMessage: ChatPinnedMessage;\r\n\r\n  private setUtilsRAF: number;\r\n  public peerId: number;\r\n  private wasPeerId: number;\r\n  private setPeerStatusInterval: number;\r\n\r\n  public listenerSetter: ListenerSetter;\r\n\r\n  private menuButtons: (ButtonMenuItemOptions & {verify: () => boolean})[] = [];\r\n\r\n  constructor(private chat: Chat, private appSidebarRight: AppSidebarRight, private appMessagesManager: AppMessagesManager, private appPeersManager: AppPeersManager, private appChatsManager: AppChatsManager, private appNotificationsManager: AppNotificationsManager) {\r\n    this.listenerSetter = new ListenerSetter();\r\n  }\r\n\r\n  public construct() {\r\n    //this.chat.log.error('Topbar construction');\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('sidebar-header', 'topbar');\r\n\r\n    this.btnBack = ButtonIcon('left sidebar-close-button', {noRipple: true});\r\n\r\n    // * chat info section\r\n    this.chatInfo = document.createElement('div');\r\n    this.chatInfo.classList.add('chat-info');\r\n\r\n    const person = document.createElement('div');\r\n    person.classList.add('person');\r\n\r\n    const content = document.createElement('div');\r\n    content.classList.add('content');\r\n\r\n    const top = document.createElement('div');\r\n    top.classList.add('top');\r\n\r\n    this.title = document.createElement('div');\r\n    this.title.classList.add('user-title');\r\n\r\n    top.append(this.title);\r\n\r\n    const bottom = document.createElement('div');\r\n    bottom.classList.add('bottom');\r\n\r\n    if(this.subtitle) {\r\n      bottom.append(this.subtitle);\r\n    }\r\n\r\n    content.append(top, bottom);\r\n    if(this.avatarElement) {\r\n      person.append(this.avatarElement);\r\n    }\r\n\r\n    person.append(content);\r\n    this.chatInfo.append(person);\r\n\r\n    // * chat utils section\r\n    this.chatUtils = document.createElement('div');\r\n    this.chatUtils.classList.add('chat-utils');\r\n\r\n    this.chatAudio = new ChatAudio(this, this.chat, this.appMessagesManager);\r\n\r\n    if(this.menuButtons.length) {\r\n      this.btnMore = ButtonMenuToggle({listenerSetter: this.listenerSetter}, 'bottom-left', this.menuButtons, (e) => {\r\n        cancelEvent(e);\r\n        this.menuButtons.forEach(button => {\r\n          button.element.classList.toggle('hide', !button.verify());\r\n        });\r\n\r\n        // delete button\r\n        this.menuButtons[this.menuButtons.length - 1].element.lastChild.replaceWith(i18n(this.appPeersManager.getDeleteButtonText(this.peerId)));\r\n      });\r\n    }\r\n\r\n    this.chatUtils.append(...[this.chatAudio ? this.chatAudio.divAndCaption.container : null, this.pinnedMessage ? this.pinnedMessage.pinnedMessageContainer.divAndCaption.container : null, this.btnJoin, this.btnPinned, this.btnMute, this.btnSearch, this.btnMore].filter(Boolean));\r\n\r\n    this.container.append(this.btnBack, this.chatInfo, this.chatUtils);\r\n\r\n    // * construction end\r\n\r\n    // * fix topbar overflow section\r\n\r\n    this.listenerSetter.add(window, 'resize', this.onResize);\r\n    mediaSizes.addEventListener('changeScreen', this.onChangeScreen);\r\n\r\n    attachClickEvent(this.container, (e) => {\r\n      const container: HTMLElement = findUpClassName(e.target, 'pinned-container');\r\n      blurActiveElement();\r\n      if(container) {\r\n        cancelEvent(e);\r\n        \r\n        const mid = +container.dataset.mid;\r\n        const peerId = +container.dataset.peerId;\r\n        if(container.classList.contains('pinned-message')) {\r\n          //if(!this.pinnedMessage.locked) {\r\n            this.pinnedMessage.followPinnedMessage(mid);\r\n          //}\r\n        } else {\r\n          this.chat.appImManager.setInnerPeer(peerId, mid);\r\n        }\r\n      } else {\r\n        if(mediaSizes.activeScreen === ScreenSize.medium && document.body.classList.contains(LEFT_COLUMN_ACTIVE_CLASSNAME)) {\r\n          onBtnBackClick();\r\n        } else if(findUpTag(e.target, 'AVATAR-ELEMENT')) {\r\n          this.appSidebarRight.toggleSidebar(!document.body.classList.contains(RIGHT_COLUMN_ACTIVE_CLASSNAME));\r\n        } else {\r\n          this.appSidebarRight.toggleSidebar(true);\r\n        }\r\n      }\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    const onBtnBackClick = (e?: Event) => {\r\n      if(e) {\r\n        cancelEvent(e);\r\n      }\r\n\r\n      //const item = appNavigationController.findItemByType('chat');\r\n      // * return manually to chat by arrow, since can't get back to\r\n      if(mediaSizes.activeScreen === ScreenSize.medium && document.body.classList.contains(LEFT_COLUMN_ACTIVE_CLASSNAME)) {\r\n        this.chat.appImManager.setPeer(this.peerId);\r\n      } else {\r\n        const isFirstChat = this.chat.appImManager.chats.indexOf(this.chat) === 0;\r\n        appNavigationController.back(isFirstChat ? 'im' : 'chat');\r\n        return;\r\n\r\n        if(mediaSizes.activeScreen === ScreenSize.medium && !appNavigationController.findItemByType('chat')) {\r\n          this.chat.appImManager.setPeer(0);\r\n          blurActiveElement();\r\n        } else {\r\n          appNavigationController.back('chat');\r\n        }\r\n      }\r\n    };\r\n\r\n    attachClickEvent(this.btnBack, onBtnBackClick, {listenerSetter: this.listenerSetter});\r\n  }\r\n\r\n  public constructUtils() {\r\n    this.menuButtons = [{\r\n      icon: 'search',\r\n      text: 'Search',\r\n      onClick: () => {\r\n        this.chat.initSearch()\r\n      },\r\n      verify: () => mediaSizes.isMobile\r\n    }, /* {\r\n      icon: 'pinlist',\r\n      text: 'Pinned Messages',\r\n      onClick: () => this.openPinned(false),\r\n      verify: () => mediaSizes.isMobile\r\n    }, */ {\r\n      icon: 'mute',\r\n      text: 'ChatList.Context.Mute',\r\n      onClick: () => {\r\n        this.appMessagesManager.mutePeer(this.peerId);\r\n      },\r\n      verify: () => this.chat.type === 'chat' && rootScope.myId !== this.peerId && !this.appNotificationsManager.isPeerLocalMuted(this.peerId, false)\r\n    }, {\r\n      icon: 'unmute',\r\n      text: 'ChatList.Context.Unmute',\r\n      onClick: () => {\r\n        this.appMessagesManager.mutePeer(this.peerId);\r\n      },\r\n      verify: () => this.chat.type === 'chat' && rootScope.myId !== this.peerId && this.appNotificationsManager.isPeerLocalMuted(this.peerId, false)\r\n    }, {\r\n      icon: 'select',\r\n      text: 'Chat.Menu.SelectMessages',\r\n      onClick: () => {\r\n        const selection = this.chat.selection;\r\n        selection.toggleSelection(true, true);\r\n        appStateManager.getState().then(state => {\r\n          if(state.chatContextMenuHintWasShown) {\r\n            return;\r\n          }\r\n\r\n          const original = selection.toggleByBubble.bind(selection);\r\n          selection.toggleByBubble = (bubble) => {\r\n            appStateManager.pushToState('chatContextMenuHintWasShown', true);\r\n            toast(i18n('Chat.Menu.Hint'));\r\n\r\n            selection.toggleByBubble = original;\r\n            selection.toggleByBubble(bubble);\r\n          };\r\n        });\r\n      },\r\n      verify: () => !this.chat.selection.isSelecting && !!Object.keys(this.chat.bubbles.bubbles).length\r\n    }, {\r\n      icon: 'select',\r\n      text: 'Chat.Menu.ClearSelection',\r\n      onClick: () => {\r\n        this.chat.selection.cancelSelection();\r\n      },\r\n      verify: () => this.chat.selection.isSelecting\r\n    }, {\r\n      icon: 'delete danger',\r\n      text: 'Delete',\r\n      onClick: () => {\r\n        new PopupDeleteDialog(this.peerId);\r\n      },\r\n      verify: () => this.chat.type === 'chat' && !!this.appMessagesManager.getDialogOnly(this.peerId)\r\n    }];\r\n\r\n    this.btnSearch = ButtonIcon('search');\r\n    attachClickEvent(this.btnSearch, (e) => {\r\n      cancelEvent(e);\r\n      this.chat.initSearch();\r\n    }, {listenerSetter: this.listenerSetter});\r\n  }\r\n\r\n  public constructPeerHelpers() {\r\n    this.avatarElement = new AvatarElement();\r\n    this.avatarElement.setAttribute('dialog', '1');\r\n    //this.avatarElement.setAttribute('clickable', '');\r\n    this.avatarElement.classList.add('avatar-42', 'person-avatar');\r\n\r\n    this.subtitle = document.createElement('div');\r\n    this.subtitle.classList.add('info');\r\n\r\n    this.pinnedMessage = new ChatPinnedMessage(this, this.chat, this.appMessagesManager, this.appPeersManager);\r\n\r\n    this.btnJoin = Button('btn-primary btn-color-primary chat-join hide');\r\n    this.btnJoin.append(i18n('Chat.Subscribe'));\r\n\r\n    this.btnPinned = ButtonIcon('pinlist');\r\n    this.btnMute = ButtonIcon('mute');\r\n\r\n    attachClickEvent(this.btnPinned, (e) => {\r\n      cancelEvent(e);\r\n      blurActiveElement();\r\n      this.openPinned(true);\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    attachClickEvent(this.btnMute, (e) => {\r\n      cancelEvent(e);\r\n      blurActiveElement();\r\n      this.appMessagesManager.mutePeer(this.peerId);\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    attachClickEvent(this.btnJoin, (e) => {\r\n      cancelEvent(e);\r\n\r\n      blurActiveElement();\r\n      this.btnJoin.setAttribute('disabled', 'true');\r\n      this.appChatsManager.joinChannel(-this.peerId).finally(() => {\r\n        this.btnJoin.removeAttribute('disabled');\r\n      });\r\n    //});\r\n    }, {listenerSetter: this.listenerSetter});\r\n\r\n    this.listenerSetter.add(rootScope, 'chat_update', (e) => {\r\n      const chatId: number = e;\r\n      if(this.peerId === -chatId) {\r\n        const chat = this.appChatsManager.getChat(chatId) as Channel/*  | Chat */;\r\n        \r\n        this.btnJoin.classList.toggle('hide', !(chat as Channel)?.pFlags?.left);\r\n        this.setUtilsWidth();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'dialog_notify_settings', (dialog) => {\r\n      if(dialog.peerId === this.peerId) {\r\n        this.setMutedState();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'peer_typings', (e) => {\r\n      const {peerId} = e;\r\n\r\n      if(this.peerId === peerId) {\r\n        this.setPeerStatus();\r\n      }\r\n    });\r\n\r\n    this.listenerSetter.add(rootScope, 'user_update', (e) => {\r\n      const userId = e;\r\n\r\n      if(this.peerId === userId) {\r\n        this.setPeerStatus();\r\n      }\r\n    });\r\n\r\n    if(this.pinnedMessage) {\r\n      this.chat.addEventListener('setPeer', (mid, isTopMessage) => {\r\n        const middleware = this.chat.bubbles.getMiddleware();\r\n        appStateManager.getState().then((state) => {\r\n          if(!middleware()) return;\r\n  \r\n          this.pinnedMessage.hidden = !!state.hiddenPinnedMessages[this.chat.peerId];\r\n  \r\n          if(isTopMessage) {\r\n            this.pinnedMessage.unsetScrollDownListener();\r\n            this.pinnedMessage.testMid(mid, 0); // * because slider will not let get bubble by document.elementFromPoint\r\n          } else if(!this.pinnedMessage.locked) {\r\n            this.pinnedMessage.handleFollowingPinnedMessage();\r\n            this.pinnedMessage.testMid(mid);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    this.setPeerStatusInterval = window.setInterval(this.setPeerStatus, 60e3);\r\n\r\n    return this;\r\n  }\r\n\r\n  public constructPinnedHelpers() {\r\n    this.listenerSetter.add(rootScope, 'peer_pinned_messages', (e) => {\r\n      const {peerId, mids, pinned} = e;\r\n\r\n      if(peerId !== this.peerId) return;\r\n\r\n      if(mids) {\r\n        this.setTitle();\r\n      }\r\n    });\r\n  }\r\n  \r\n  public constructDiscussionHelpers() {\r\n    this.pinnedMessage = new ChatPinnedMessage(this, this.chat, this.appMessagesManager, this.appPeersManager);\r\n  }\r\n\r\n  public openPinned(byCurrent: boolean) {\r\n    this.chat.appImManager.setInnerPeer(this.peerId, byCurrent ? +this.pinnedMessage.pinnedMessageContainer.divAndCaption.container.dataset.mid : 0, 'pinned');\r\n  }\r\n\r\n  private onResize = () => {\r\n    this.setUtilsWidth(true);\r\n  };\r\n\r\n  private onChangeScreen = (from: ScreenSize, to: ScreenSize) => {\r\n    this.container.classList.toggle('is-pinned-floating', mediaSizes.isMobile);\r\n    this.chatAudio && this.chatAudio.divAndCaption.container.classList.toggle('is-floating', to === ScreenSize.mobile);\r\n    this.pinnedMessage && this.pinnedMessage.pinnedMessageContainer.divAndCaption.container.classList.toggle('is-floating', to === ScreenSize.mobile);\r\n    this.setUtilsWidth(true);\r\n  };\r\n\r\n  public destroy() {\r\n    //this.chat.log.error('Topbar destroying');\r\n\r\n    this.listenerSetter.removeAll();\r\n    mediaSizes.removeEventListener('changeScreen', this.onChangeScreen);\r\n    window.clearInterval(this.setPeerStatusInterval);\r\n    \r\n    if(this.pinnedMessage) {\r\n      this.pinnedMessage.destroy(); // * возможно это можно не делать\r\n    }\r\n\r\n    delete this.chatAudio;\r\n    delete this.pinnedMessage;\r\n  }\r\n\r\n  public setPeer(peerId: number) {\r\n    this.wasPeerId = this.peerId;\r\n    this.peerId = peerId;\r\n\r\n    this.container.style.display = peerId ? '' : 'none';\r\n  }\r\n\r\n  public finishPeerChange(isTarget: boolean, isJump: boolean, lastMsgId: number) {\r\n    const peerId = this.peerId;\r\n\r\n    if(this.avatarElement) {\r\n      this.avatarElement.setAttribute('peer', '' + peerId);\r\n      this.avatarElement.update();\r\n    }\r\n\r\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\r\n\r\n    this.btnMute && this.btnMute.classList.toggle('hide', !isBroadcast);\r\n    this.btnJoin && this.btnJoin.classList.toggle('hide', !this.appChatsManager.getChat(-peerId)?.pFlags?.left);\r\n    this.setUtilsWidth();\r\n\r\n    const middleware = this.chat.bubbles.getMiddleware();\r\n    if(this.pinnedMessage) { // * replace with new one\r\n      if(this.chat.type === 'chat') {\r\n        if(this.wasPeerId) { // * change\r\n          const newPinnedMessage = new ChatPinnedMessage(this, this.chat, this.appMessagesManager, this.appPeersManager);\r\n          this.pinnedMessage.pinnedMessageContainer.divAndCaption.container.replaceWith(newPinnedMessage.pinnedMessageContainer.divAndCaption.container);\r\n          this.pinnedMessage.destroy();\r\n          //this.pinnedMessage.pinnedMessageContainer.toggle(true);\r\n          this.pinnedMessage = newPinnedMessage;\r\n        }\r\n        \r\n        appStateManager.getState().then((state) => {\r\n          if(!middleware()) return;\r\n  \r\n          this.pinnedMessage.hidden = !!state.hiddenPinnedMessages[peerId];\r\n  \r\n          if(!isTarget) {\r\n            this.pinnedMessage.setCorrectIndex(0);\r\n          }\r\n        });\r\n      } else if(this.chat.type === 'discussion') {\r\n        this.pinnedMessage.pinnedMid = this.chat.threadId;\r\n        this.pinnedMessage.count = 1;\r\n        this.pinnedMessage.pinnedIndex = 0;\r\n        this.pinnedMessage._setPinnedMessage();\r\n      }\r\n    }\r\n\r\n    window.requestAnimationFrame(() => {\r\n      this.setTitle();\r\n      this.setPeerStatus(true);\r\n      this.setMutedState();\r\n    });\r\n  }\r\n\r\n  public setTitle(count?: number) {\r\n    let titleEl: HTMLElement;\r\n    if(this.chat.type === 'pinned') {\r\n      if(count === undefined) titleEl = i18n('Loading');\r\n      else titleEl = i18n('PinnedMessagesCount', [count]);\r\n\r\n      if(count === undefined) {\r\n        this.appMessagesManager.getSearchCounters(this.peerId, [{_: 'inputMessagesFilterPinned'}], false).then(result => {\r\n          const count = result[0].count;\r\n          this.setTitle(count);\r\n\r\n          // ! костыль х2, это нужно делать в другом месте\r\n          if(!count) {\r\n            this.chat.appImManager.setPeer(0); // * close tab\r\n\r\n            // ! костыль, это скроет закреплённые сообщения сразу, вместо того, чтобы ждать пока анимация перехода закончится\r\n            const originalChat = this.chat.appImManager.chat;\r\n            if(originalChat.topbar.pinnedMessage) {\r\n              originalChat.topbar.pinnedMessage.pinnedMessageContainer.toggle(true);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else if(this.chat.type === 'scheduled') {\r\n      if(this.peerId === rootScope.myId) {\r\n        //title = [count > 1 ? count : false, 'Reminders'].filter(Boolean).join(' ');\r\n        titleEl = i18n('Reminders');\r\n      } else {\r\n        titleEl = i18n('ScheduledMessages');\r\n        //title = [count > 1 ? count : false, 'Scheduled Messages'].filter(Boolean).join(' ');\r\n      }\r\n      \r\n      if(count === undefined) {\r\n        this.appMessagesManager.getScheduledMessages(this.peerId).then(mids => {\r\n          this.setTitle(mids.length);\r\n        });\r\n      }\r\n    } else if(this.chat.type === 'discussion') {\r\n      if(count === undefined) titleEl = i18n('Loading');\r\n      else titleEl = i18n('Chat.Title.Comments', [count]);\r\n\r\n      if(count === undefined) {\r\n        Promise.all([\r\n          this.appMessagesManager.getHistory(this.peerId, 0, 1, 0, this.chat.threadId),\r\n          Promise.resolve()\r\n        ]).then(() => {\r\n          const count = this.appMessagesManager.getHistoryStorage(this.peerId, this.chat.threadId).count;\r\n          if(count === null) {\r\n            setTimeout(() => {\r\n              this.setTitle();\r\n            }, 30);\r\n          } else {\r\n            this.setTitle(count);\r\n          }\r\n        });\r\n      }\r\n    } else if(this.chat.type === 'chat') {\r\n      titleEl = new PeerTitle({\r\n        peerId: this.peerId,\r\n        dialog: true,\r\n      }).element;\r\n    }\r\n    \r\n    this.title.textContent = '';\r\n    this.title.append(titleEl);\r\n  }\r\n\r\n  public setMutedState() {\r\n    if(!this.btnMute) return;\r\n\r\n    const peerId = this.peerId;\r\n    let muted = this.appNotificationsManager.isPeerLocalMuted(peerId, false);\r\n    if(this.appPeersManager.isBroadcast(peerId)) { // not human\r\n      this.btnMute.classList.remove('tgico-mute', 'tgico-unmute');\r\n      this.btnMute.classList.add(muted ? 'tgico-unmute' : 'tgico-mute');\r\n      this.btnMute.style.display = '';\r\n    } else {\r\n      this.btnMute.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  // ! У МЕНЯ ПРОСТО СГОРЕЛО, САФАРИ КОНЧЕННЫЙ БРАУЗЕР - ЕСЛИ НЕ СКРЫВАТЬ БЛОК, ТО ПРИ ПЕРЕВОРОТЕ ЭКРАНА НА АЙФОНЕ БЛОК БУДЕТ НЕПРАВИЛЬНО ШИРИНЫ, ДАЖЕ БЕЗ ЭТОЙ ФУНКЦИИ!\r\n  public setUtilsWidth = (resize = false) => {\r\n    //return;\r\n    if(this.setUtilsRAF) window.cancelAnimationFrame(this.setUtilsRAF);\r\n\r\n    if(isSafari && resize) {\r\n      this.chatUtils.classList.add('hide');\r\n    }\r\n\r\n    //mutationObserver.disconnect();\r\n    this.setUtilsRAF = window.requestAnimationFrame(() => {\r\n      \r\n      //mutationRAF = window.requestAnimationFrame(() => {\r\n        \r\n        //setTimeout(() => {\r\n          if(isSafari && resize) {\r\n            this.chatUtils.classList.remove('hide');\r\n          }\r\n          /* this.chatInfo.style.removeProperty('--utils-width');\r\n          void this.chatInfo.offsetLeft; // reflow */\r\n          const width = /* chatUtils.scrollWidth */this.chatUtils.getBoundingClientRect().width;\r\n          this.chat.log('utils width:', width);\r\n          this.chatInfo.style.setProperty('--utils-width', width + 'px');\r\n          //this.chatInfo.classList.toggle('have-utils-width', !!width);\r\n        //}, 0);\r\n        \r\n        this.setUtilsRAF = 0;\r\n\r\n        //mutationObserver.observe(chatUtils, observeOptions);\r\n      //});\r\n    });\r\n  };\r\n\r\n  public setPeerStatus = (needClear = false) => {\r\n    if(!this.subtitle) return;\r\n\r\n    const peerId = this.peerId;\r\n    this.chat.appImManager.setPeerStatus(this.peerId, this.subtitle, needClear, false, () => peerId === this.peerId);\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appSidebarRight from \"..\";\r\nimport { attachClickEvent } from \"../../../helpers/dom/clickEvent\";\r\nimport AppSearch, { SearchGroup } from \"../../appSearch\";\r\nimport ButtonIcon from \"../../buttonIcon\";\r\nimport InputSearch from \"../../inputSearch\";\r\nimport PopupDatePicker from \"../../popups/datePicker\";\r\nimport { SliderSuperTab } from \"../../slider\";\r\n\r\nexport default class AppPrivateSearchTab extends SliderSuperTab {\r\n  private inputSearch: InputSearch;\r\n  private appSearch: AppSearch;\r\n  private btnPickDate: HTMLElement;\r\n\r\n  private peerId = 0;\r\n  private threadId = 0;\r\n  private onDatePick: (timestamp: number) => void;\r\n\r\n  onOpenAfterTimeout() {\r\n    this.appSearch.beginSearch(this.peerId, this.threadId);\r\n  }\r\n\r\n  protected init() {\r\n    this.container.id = 'search-private-container';\r\n    this.container.classList.add('chatlist-container');\r\n    this.inputSearch = new InputSearch('Search');\r\n    this.title.replaceWith(this.inputSearch.container);\r\n\r\n    this.btnPickDate = ButtonIcon('calendar sidebar-header-right');\r\n    this.header.append(this.btnPickDate);\r\n\r\n    const c = document.createElement('div');\r\n    c.classList.add('chatlist-container');\r\n    this.scrollable.container.replaceWith(c);\r\n    this.appSearch = new AppSearch(c, this.inputSearch, {\r\n      messages: new SearchGroup('Chat.Search.PrivateSearch', 'messages')\r\n    });\r\n  }\r\n\r\n  open(peerId: number, threadId?: number, onDatePick?: AppPrivateSearchTab['onDatePick'], query?: string) {\r\n    const ret = super.open();\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    query && (this.inputSearch.inputField.value = query);\r\n\r\n    if(this.peerId !== 0) {\r\n      this.appSearch.beginSearch(this.peerId, this.threadId);\r\n      return ret;\r\n    }\r\n\r\n    this.peerId = peerId;\r\n    this.threadId = threadId;\r\n    this.onDatePick = onDatePick;\r\n\r\n    this.btnPickDate.classList.toggle('hide', !this.onDatePick);\r\n    if(this.onDatePick) {\r\n      attachClickEvent(this.btnPickDate, () => {\r\n        new PopupDatePicker(new Date(), this.onDatePick).show();\r\n      });\r\n    }\r\n\r\n    appSidebarRight.toggleSidebar(true);\r\n    return ret;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ChatTopbar from \"./topbar\";\r\nimport AppSearch, { SearchGroup } from \"../appSearch\";\r\nimport PopupDatePicker from \"../popups/datePicker\";\r\nimport { ripple } from \"../ripple\";\r\nimport InputSearch from \"../inputSearch\";\r\nimport type Chat from \"./chat\";\r\nimport findUpTag from \"../../helpers/dom/findUpTag\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport whichChild from \"../../helpers/dom/whichChild\";\r\nimport replaceContent from \"../../helpers/dom/replaceContent\";\r\nimport { i18n } from \"../../lib/langPack\";\r\n\r\nexport default class ChatSearch {\r\n  private element: HTMLElement;\r\n  private backBtn: HTMLElement;\r\n  private inputSearch: InputSearch;\r\n\r\n  private results: HTMLElement;\r\n\r\n  private footer: HTMLElement;\r\n  private dateBtn: HTMLElement;\r\n  private foundCountEl: HTMLElement;\r\n  private controls: HTMLElement;\r\n  private downBtn: HTMLElement;\r\n  private upBtn: HTMLElement;\r\n\r\n  private appSearch: AppSearch;\r\n  private searchGroup: SearchGroup;\r\n\r\n  private foundCount = 0;\r\n  private selectedIndex = 0;\r\n  private setPeerPromise: Promise<any>;\r\n\r\n  constructor(private topbar: ChatTopbar, private chat: Chat, private query?: string) {\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('sidebar-header', 'chat-search', 'chatlist-container');\r\n\r\n    this.backBtn = document.createElement('button');\r\n    this.backBtn.classList.add('btn-icon', 'tgico-left', 'sidebar-close-button');\r\n    ripple(this.backBtn);\r\n    \r\n    this.backBtn.addEventListener('click', () => {\r\n      this.topbar.container.classList.remove('hide-pinned');\r\n      this.element.remove();\r\n      this.inputSearch.remove();\r\n      this.results.remove();\r\n      this.footer.remove();\r\n      this.footer.removeEventListener('click', this.onFooterClick);\r\n      this.dateBtn.removeEventListener('click', this.onDateClick);\r\n      this.upBtn.removeEventListener('click', this.onUpClick);\r\n      this.downBtn.removeEventListener('click', this.onDownClick);\r\n      this.searchGroup.list.removeEventListener('click', this.onResultsClick);\r\n      this.chat.bubbles.bubblesContainer.classList.remove('search-results-active');\r\n    }, {once: true});\r\n\r\n    this.inputSearch = new InputSearch('Search');\r\n    \r\n    // Results\r\n    this.results = document.createElement('div');\r\n    this.results.classList.add('chat-search-results', 'chatlist-container');\r\n\r\n    this.searchGroup = new SearchGroup(false, 'messages', undefined, '', false);\r\n    this.searchGroup.list.addEventListener('click', this.onResultsClick);\r\n\r\n    this.appSearch = new AppSearch(this.results, this.inputSearch, {\r\n      messages: this.searchGroup\r\n    }, (count) => {\r\n      this.foundCount = count;\r\n\r\n      if(!this.foundCount) {\r\n        this.foundCountEl.replaceWith(this.inputSearch.value ? i18n('NoResult') : '');\r\n        this.results.classList.remove('active');\r\n        this.chat.bubbles.bubblesContainer.classList.remove('search-results-active');\r\n        this.upBtn.setAttribute('disabled', 'true');\r\n        this.downBtn.setAttribute('disabled', 'true');\r\n      } else {\r\n        this.selectResult(this.searchGroup.list.children[0] as HTMLElement);\r\n      }\r\n    });\r\n    this.appSearch.beginSearch(this.chat.peerId, this.chat.threadId);\r\n\r\n    //appImManager.topbar.parentElement.insertBefore(this.results, appImManager.bubblesContainer);\r\n    this.chat.bubbles.bubblesContainer.append(this.results);\r\n\r\n    // Footer\r\n    this.footer = document.createElement('div');\r\n    this.footer.classList.add('chat-search-footer');\r\n\r\n    this.footer.addEventListener('click', this.onFooterClick);\r\n    ripple(this.footer);\r\n\r\n    this.foundCountEl = document.createElement('span');\r\n    this.foundCountEl.classList.add('chat-search-count');\r\n\r\n    this.dateBtn = document.createElement('button');\r\n    this.dateBtn.classList.add('btn-icon', 'tgico-calendar');\r\n\r\n    this.controls = document.createElement('div');\r\n    this.controls.classList.add('chat-search-controls');\r\n\r\n    this.upBtn = document.createElement('button');\r\n    this.upBtn.classList.add('btn-icon', 'tgico-up');\r\n    this.downBtn = document.createElement('button');\r\n    this.downBtn.classList.add('btn-icon', 'tgico-down');\r\n\r\n    this.upBtn.setAttribute('disabled', 'true');\r\n    this.downBtn.setAttribute('disabled', 'true');\r\n\r\n    this.dateBtn.addEventListener('click', this.onDateClick);\r\n    this.upBtn.addEventListener('click', this.onUpClick);\r\n    this.downBtn.addEventListener('click', this.onDownClick);\r\n    this.controls.append(this.upBtn, this.downBtn);\r\n\r\n    this.footer.append(this.foundCountEl, this.dateBtn, this.controls);\r\n    \r\n    this.topbar.container.parentElement.insertBefore(this.footer, chat.input.chatInput);\r\n\r\n    // Append container\r\n    this.element.append(this.backBtn, this.inputSearch.container);\r\n\r\n    this.topbar.container.classList.add('hide-pinned');\r\n    this.topbar.container.parentElement.append(this.element);\r\n\r\n    this.inputSearch.input.focus();\r\n\r\n    query && (this.inputSearch.inputField.value = query);\r\n  }\r\n\r\n  onDateClick = (e: MouseEvent) => {\r\n    cancelEvent(e);\r\n    new PopupDatePicker(new Date(), this.chat.bubbles.onDatePick).show();\r\n  };\r\n\r\n  selectResult = (elem: HTMLElement) => {\r\n    if(this.setPeerPromise) return this.setPeerPromise;\r\n\r\n    const peerId = +elem.dataset.peerId;\r\n    const lastMsgId = +elem.dataset.mid || undefined;\r\n\r\n    const index = whichChild(elem);\r\n\r\n    if(index === (this.foundCount - 1)) {\r\n      this.upBtn.setAttribute('disabled', 'true');\r\n    } else {\r\n      this.upBtn.removeAttribute('disabled');\r\n    }\r\n\r\n    if(!index) {\r\n      this.downBtn.setAttribute('disabled', 'true');\r\n    } else {\r\n      this.downBtn.removeAttribute('disabled');\r\n    }\r\n\r\n    this.results.classList.remove('active');\r\n    this.chat.bubbles.bubblesContainer.classList.remove('search-results-active');\r\n\r\n    const res = this.chat.setPeer(peerId, lastMsgId);\r\n    this.setPeerPromise = ((res instanceof Promise ? res : Promise.resolve(res)) as Promise<any>).then(() => {\r\n      this.selectedIndex = index;\r\n      replaceContent(this.foundCountEl, i18n('Of', [index + 1, this.foundCount]));\r\n\r\n      const renderedCount = this.searchGroup.list.childElementCount;\r\n      if(this.selectedIndex >= (renderedCount - 6)) {\r\n        this.appSearch.searchMore();\r\n      }\r\n    }).finally(() => {\r\n      this.setPeerPromise = null;\r\n    });\r\n  };\r\n\r\n  onResultsClick = (e: MouseEvent) => {\r\n    const target = findUpTag(e.target, 'LI');\r\n    if(target) {\r\n      this.selectResult(target);\r\n    }\r\n  };\r\n\r\n  onFooterClick = (e: MouseEvent) => {\r\n    if(this.foundCount) {\r\n      this.chat.bubbles.bubblesContainer.classList.toggle('search-results-active');\r\n      this.results.classList.toggle('active');\r\n    }\r\n  };\r\n\r\n  onUpClick = (e: MouseEvent) => {\r\n    cancelEvent(e);\r\n    this.selectResult(this.searchGroup.list.children[this.selectedIndex + 1] as HTMLElement);\r\n  };\r\n\r\n  onDownClick = (e: MouseEvent) => {\r\n    cancelEvent(e);\r\n    this.selectResult(this.searchGroup.list.children[this.selectedIndex - 1] as HTMLElement);\r\n  };\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppNotificationsManager } from \"../../lib/appManagers/appNotificationsManager\";\r\nimport type { AppChatsManager } from \"../../lib/appManagers/appChatsManager\";\r\nimport type { AppDocsManager } from \"../../lib/appManagers/appDocsManager\";\r\nimport type { AppImManager } from \"../../lib/appManagers/appImManager\";\r\nimport type { AppInlineBotsManager } from \"../../lib/appManagers/appInlineBotsManager\";\r\nimport type { AppMessagesManager } from \"../../lib/appManagers/appMessagesManager\";\r\nimport type { AppPeersManager } from \"../../lib/appManagers/appPeersManager\";\r\nimport type { AppPhotosManager } from \"../../lib/appManagers/appPhotosManager\";\r\nimport type { AppPollsManager } from \"../../lib/appManagers/appPollsManager\";\r\nimport type { AppProfileManager } from \"../../lib/appManagers/appProfileManager\";\r\nimport type { AppStickersManager } from \"../../lib/appManagers/appStickersManager\";\r\nimport type { AppUsersManager } from \"../../lib/appManagers/appUsersManager\";\r\nimport type { AppWebPagesManager } from \"../../lib/appManagers/appWebPagesManager\";\r\nimport type { ApiManagerProxy } from \"../../lib/mtproto/mtprotoworker\";\r\nimport type { AppDraftsManager } from \"../../lib/appManagers/appDraftsManager\";\r\nimport type { AppEmojiManager } from \"../../lib/appManagers/appEmojiManager\";\r\nimport type { ServerTimeManager } from \"../../lib/mtproto/serverTimeManager\";\r\nimport type { State } from \"../../lib/appManagers/appStateManager\";\r\nimport type stateStorage from '../../lib/stateStorage';\r\nimport EventListenerBase from \"../../helpers/eventListenerBase\";\r\nimport { logger, LogTypes } from \"../../lib/logger\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport appSidebarRight from \"../sidebarRight\";\r\nimport ChatBubbles from \"./bubbles\";\r\nimport ChatContextMenu from \"./contextMenu\";\r\nimport ChatInput from \"./input\";\r\nimport ChatSelection from \"./selection\";\r\nimport ChatTopbar from \"./topbar\";\r\nimport { REPLIES_PEER_ID } from \"../../lib/mtproto/mtproto_config\";\r\nimport SetTransition from \"../singleTransition\";\r\nimport { fastRaf } from \"../../helpers/schedulers\";\r\nimport AppPrivateSearchTab from \"../sidebarRight/tabs/search\";\r\nimport renderImageFromUrl from \"../../helpers/dom/renderImageFromUrl\";\r\nimport mediaSizes from \"../../helpers/mediaSizes\";\r\nimport ChatSearch from \"./search\";\r\n\r\nexport type ChatType = 'chat' | 'pinned' | 'replies' | 'discussion' | 'scheduled';\r\n\r\nexport default class Chat extends EventListenerBase<{\r\n  setPeer: (mid: number, isTopMessage: boolean) => void\r\n}> {\r\n  public container: HTMLElement;\r\n  public backgroundEl: HTMLElement;\r\n\r\n  public topbar: ChatTopbar;\r\n  public bubbles: ChatBubbles;\r\n  public input: ChatInput;\r\n  public selection: ChatSelection;\r\n  public contextMenu: ChatContextMenu;\r\n\r\n  public wasAlreadyUsed = false;\r\n  public initPeerId = 0;\r\n  public peerId = 0;\r\n  public threadId: number;\r\n  public setPeerPromise: Promise<void>;\r\n  public peerChanged: boolean;\r\n\r\n  public log: ReturnType<typeof logger>;\r\n\r\n  public type: ChatType = 'chat';\r\n\r\n  public noAutoDownloadMedia: boolean;\r\n  \r\n  constructor(public appImManager: AppImManager, \r\n    public appChatsManager: AppChatsManager, \r\n    public appDocsManager: AppDocsManager, \r\n    public appInlineBotsManager: AppInlineBotsManager, \r\n    public appMessagesManager: AppMessagesManager, \r\n    public appPeersManager: AppPeersManager, \r\n    public appPhotosManager: AppPhotosManager, \r\n    public appProfileManager: AppProfileManager, \r\n    public appStickersManager: AppStickersManager, \r\n    public appUsersManager: AppUsersManager, \r\n    public appWebPagesManager: AppWebPagesManager, \r\n    public appPollsManager: AppPollsManager, \r\n    public apiManager: ApiManagerProxy, \r\n    public appDraftsManager: AppDraftsManager, \r\n    public serverTimeManager: ServerTimeManager, \r\n    public storage: typeof stateStorage, \r\n    public appNotificationsManager: AppNotificationsManager,\r\n    public appEmojiManager: AppEmojiManager\r\n  ) {\r\n    super();\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('chat');\r\n\r\n    this.backgroundEl = document.createElement('div');\r\n    this.backgroundEl.classList.add('chat-background');\r\n\r\n    // * constructor end\r\n\r\n    this.log = logger('CHAT', LogTypes.Log | LogTypes.Warn | LogTypes.Debug | LogTypes.Error);\r\n    //this.log.error('Chat construction');\r\n\r\n    this.container.append(this.backgroundEl);\r\n    this.appImManager.chatsContainer.append(this.container);\r\n  }\r\n\r\n  public setBackground(url: string): Promise<void> {\r\n    const theme = rootScope.getTheme();\r\n\r\n    let item: HTMLElement;\r\n    if(theme.background.type === 'color' && document.documentElement.style.cursor === 'grabbing') {\r\n      const _item = this.backgroundEl.lastElementChild as HTMLElement;\r\n      if(_item && _item.dataset.type === theme.background.type) {\r\n        item = _item;\r\n      }\r\n    }\r\n    \r\n    if(!item) {\r\n      item = document.createElement('div');\r\n      item.classList.add('chat-background-item');\r\n      item.dataset.type = theme.background.type;\r\n    }\r\n\r\n    if(theme.background.type === 'color') {\r\n      item.style.backgroundColor = theme.background.color;\r\n      item.style.backgroundImage = 'none';\r\n    }\r\n\r\n    return new Promise<void>((resolve) => {\r\n      const cb = () => {\r\n        const prev = this.backgroundEl.lastElementChild as HTMLElement;\r\n\r\n        if(prev === item) {\r\n          resolve();\r\n          return;\r\n        }\r\n\r\n        this.backgroundEl.append(item);\r\n\r\n        // * одного недостаточно, при обновлении страницы все равно фон появляется неплавно\r\n        // ! с requestAnimationFrame лучше, но все равно иногда моргает, так что использую два фаста.\r\n        fastRaf(() => {\r\n          fastRaf(() => {\r\n            SetTransition(item, 'is-visible', true, 200, prev ? () => {\r\n              prev.remove();\r\n            } : null);\r\n          });\r\n        });\r\n\r\n        resolve();\r\n      };\r\n\r\n      if(url) {\r\n        renderImageFromUrl(item, url, cb);\r\n      } else {\r\n        cb();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setType(type: ChatType) {\r\n    this.type = type;\r\n\r\n    if(this.type === 'scheduled') {\r\n      this.getMessagesStorage = () => this.appMessagesManager.getScheduledMessagesStorage(this.peerId);\r\n      //this.getMessage = (mid) => this.appMessagesManager.getMessageFromStorage(this.appMessagesManager.getScheduledMessagesStorage(this.peerId), mid);\r\n    }\r\n  }\r\n\r\n  public init(peerId: number) {\r\n    this.initPeerId = peerId;\r\n\r\n    this.topbar = new ChatTopbar(this, appSidebarRight, this.appMessagesManager, this.appPeersManager, this.appChatsManager, this.appNotificationsManager);\r\n    this.bubbles = new ChatBubbles(this, this.appMessagesManager, this.appStickersManager, this.appUsersManager, this.appInlineBotsManager, this.appPhotosManager, this.appPeersManager);\r\n    this.input = new ChatInput(this, this.appMessagesManager, this.appDocsManager, this.appChatsManager, this.appPeersManager, this.appWebPagesManager, this.appImManager, this.appDraftsManager, this.serverTimeManager, this.appNotificationsManager, this.appEmojiManager);\r\n    this.selection = new ChatSelection(this, this.bubbles, this.input, this.appMessagesManager);\r\n    this.contextMenu = new ChatContextMenu(this.bubbles.bubblesContainer, this, this.appMessagesManager, this.appPeersManager, this.appPollsManager, this.appDocsManager);\r\n\r\n    if(this.type === 'chat') {\r\n      this.topbar.constructUtils();\r\n      this.topbar.constructPeerHelpers();\r\n    } else if(this.type === 'pinned') {\r\n      this.topbar.constructPinnedHelpers();\r\n    } else if(this.type === 'discussion') {\r\n      this.topbar.constructUtils();\r\n      this.topbar.constructDiscussionHelpers();\r\n    }\r\n\r\n    this.topbar.construct();\r\n    this.input.construct();\r\n\r\n    if(this.type === 'chat') { // * гений в деле, разный порядок из-за разной последовательности действий\r\n      this.bubbles.constructPeerHelpers();\r\n      this.input.constructPeerHelpers();\r\n    } else if(this.type === 'pinned') {\r\n      this.bubbles.constructPinnedHelpers();\r\n      this.input.constructPinnedHelpers();\r\n    } else if(this.type === 'scheduled') {\r\n      this.bubbles.constructScheduledHelpers();\r\n      this.input.constructPeerHelpers();\r\n    } else if(this.type === 'discussion') {\r\n      this.bubbles.constructPeerHelpers();\r\n      this.input.constructPeerHelpers();\r\n    }\r\n\r\n    this.container.classList.add('type-' + this.type);\r\n    this.container.append(this.topbar.container, this.bubbles.bubblesContainer, this.input.chatInput);\r\n\r\n    this.bubbles.listenerSetter.add(rootScope, 'dialog_migrate', ({migrateFrom, migrateTo}) => {\r\n      if(this.peerId === migrateFrom) {\r\n        this.setPeer(migrateTo);\r\n      }\r\n    });\r\n\r\n    this.bubbles.listenerSetter.add(rootScope, 'dialog_drop', (e) => {\r\n      if(e.peerId === this.peerId) {\r\n        this.appImManager.setPeer(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  public beforeDestroy() {\r\n    this.bubbles.cleanup();\r\n  }\r\n\r\n  public destroy() {\r\n    //const perf = performance.now();\r\n\r\n    this.topbar.destroy();\r\n    this.bubbles.destroy();\r\n    this.input.destroy();\r\n\r\n    delete this.topbar;\r\n    delete this.bubbles;\r\n    delete this.input;\r\n    delete this.selection;\r\n    delete this.contextMenu;\r\n\r\n    this.container.remove();\r\n\r\n    //this.log.error('Chat destroy time:', performance.now() - perf);\r\n  }\r\n\r\n  public cleanup(helperToo = true) {\r\n    this.input.cleanup(helperToo);\r\n    this.selection.cleanup();\r\n  }\r\n\r\n  public setPeer(peerId: number, lastMsgId?: number) {\r\n    if(this.init) {\r\n      this.init(peerId);\r\n      this.init = null;\r\n    }\r\n\r\n    const samePeer = this.peerId === peerId;\r\n    if(!samePeer) {\r\n      rootScope.dispatchEvent('peer_changing', this);\r\n      this.peerId = peerId;\r\n    } else if(this.setPeerPromise) {\r\n      return;\r\n    }\r\n\r\n    //console.time('appImManager setPeer');\r\n    //console.time('appImManager setPeer pre promise');\r\n    ////console.time('appImManager: pre render start');\r\n    if(!peerId) {\r\n      appSidebarRight.toggleSidebar(false);\r\n      this.cleanup(true);\r\n      this.topbar.setPeer(peerId);\r\n      this.bubbles.setPeer(peerId);\r\n      rootScope.dispatchEvent('peer_changed', peerId);\r\n\r\n      return;\r\n    }\r\n\r\n    // set new\r\n    if(!samePeer) {\r\n      const searchTab = appSidebarRight.getTab(AppPrivateSearchTab);\r\n      if(searchTab) {\r\n        searchTab.close();\r\n      }\r\n\r\n      appSidebarRight.sharedMediaTab.setPeer(peerId, this.threadId);\r\n      this.input.clearHelper(); // костыль\r\n      this.selection.cleanup(); // TODO: REFACTOR !!!!!!\r\n      this.setAutoDownloadMedia();\r\n    }\r\n\r\n    this.peerChanged = samePeer;\r\n\r\n    const result = this.bubbles.setPeer(peerId, lastMsgId);\r\n    if(!result) {\r\n      return;\r\n    }\r\n\r\n    const {promise} = result;\r\n\r\n    //console.timeEnd('appImManager setPeer pre promise');\r\n    \r\n    const setPeerPromise = this.setPeerPromise = promise.finally(() => {\r\n      if(this.setPeerPromise === setPeerPromise) {\r\n        this.setPeerPromise = null;\r\n      }\r\n    });\r\n\r\n    if(!samePeer) {\r\n      appSidebarRight.sharedMediaTab.setLoadMutex(this.setPeerPromise);\r\n      appSidebarRight.sharedMediaTab.loadSidebarMedia(true);\r\n    }\r\n    /* this.setPeerPromise.then(() => {\r\n      appSidebarRight.sharedMediaTab.loadSidebarMedia(false);\r\n    }); */\r\n\r\n    return result;\r\n  }\r\n\r\n  public setAutoDownloadMedia() {\r\n    let type: keyof State['settings']['autoDownload'];\r\n    if(this.peerId < 0) {\r\n      if(this.appPeersManager.isBroadcast(this.peerId)) {\r\n        type = 'channels';\r\n      } else {\r\n        type = 'groups';\r\n      }\r\n    } else {\r\n      if(this.appUsersManager.isContact(this.peerId)) {\r\n        type = 'contacts';\r\n      } else {\r\n        type = 'private';\r\n      }\r\n    }\r\n\r\n    this.noAutoDownloadMedia = !rootScope.settings.autoDownload[type];\r\n  }\r\n\r\n  public setMessageId(messageId?: number) {\r\n    return this.setPeer(this.peerId, messageId);\r\n  }\r\n\r\n  public finishPeerChange(isTarget: boolean, isJump: boolean, lastMsgId: number) {\r\n    if(this.peerChanged) return;\r\n\r\n    let peerId = this.peerId;\r\n    this.peerChanged = true;\r\n\r\n    this.cleanup(false);\r\n\r\n    this.topbar.setPeer(peerId);\r\n    this.topbar.finishPeerChange(isTarget, isJump, lastMsgId);\r\n    this.bubbles.finishPeerChange();\r\n    this.input.finishPeerChange();\r\n\r\n    appSidebarRight.sharedMediaTab.fillProfileElements();\r\n\r\n    this.log.setPrefix('CHAT-' + peerId + '-' + this.type);\r\n\r\n    rootScope.dispatchEvent('peer_changed', peerId);\r\n    this.wasAlreadyUsed = true;\r\n  }\r\n\r\n  public getMessagesStorage() {\r\n    return this.appMessagesManager.getMessagesStorage(this.peerId);\r\n  }\r\n\r\n  public getMessage(mid: number) {\r\n    return this.appMessagesManager.getMessageFromStorage(this.getMessagesStorage(), mid);\r\n    //return this.appMessagesManager.getMessageByPeer(this.peerId, mid);\r\n  }\r\n\r\n  public getMidsByMid(mid: number) {\r\n    return this.appMessagesManager.getMidsByMessage(this.getMessage(mid));\r\n  }\r\n\r\n  public isAnyGroup() {\r\n    return this.peerId === rootScope.myId || this.peerId === REPLIES_PEER_ID || this.appPeersManager.isAnyGroup(this.peerId);\r\n  }\r\n\r\n  public initSearch(query?: string) {\r\n    if(!this.peerId) return;\r\n\r\n    if(mediaSizes.isMobile) {\r\n      new ChatSearch(this.topbar, this, query);\r\n    } else {\r\n      let tab = appSidebarRight.getTab(AppPrivateSearchTab);\r\n      if(!tab) {\r\n        tab = new AppPrivateSearchTab(appSidebarRight);\r\n      }\r\n\r\n      tab.open(this.peerId, this.threadId, this.bubbles.onDatePick, query);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppImManager } from \"../../lib/appManagers/appImManager\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport ButtonIcon from \"../buttonIcon\";\r\nimport { clamp } from \"../../helpers/number\";\r\nimport { isTouchSupported } from \"../../helpers/touchSupport\";\r\nimport { isApple, isMobile } from \"../../helpers/userAgent\";\r\nimport appNavigationController from \"../appNavigationController\";\r\nimport { _i18n } from \"../../lib/langPack\";\r\nimport { cancelEvent } from \"../../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport getSelectedNodes from \"../../helpers/dom/getSelectedNodes\";\r\nimport isSelectionEmpty from \"../../helpers/dom/isSelectionEmpty\";\r\nimport { MarkdownType, markdownTags } from \"../../helpers/dom/getRichElementValue\";\r\n//import { logger } from \"../../lib/logger\";\r\n\r\nexport default class MarkupTooltip {\r\n  public container: HTMLElement;\r\n  private wrapper: HTMLElement;\r\n  private buttons: {[type in MarkdownType]: HTMLElement} = {} as any;\r\n  private linkBackButton: HTMLElement;\r\n  private linkApplyButton: HTMLButtonElement;\r\n  private hideTimeout: number;\r\n  private addedListener = false;\r\n  private waitingForMouseUp = false;\r\n  private linkInput: HTMLInputElement;\r\n  private savedRange: Range;\r\n  private mouseUpCounter: number = 0;\r\n  //private log: ReturnType<typeof logger>;\r\n\r\n  constructor(private appImManager: AppImManager) {\r\n    //this.log = logger('MARKUP');\r\n  }\r\n\r\n  private init() {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('markup-tooltip', 'z-depth-1', 'hide');\r\n\r\n    this.wrapper = document.createElement('div');\r\n    this.wrapper.classList.add('markup-tooltip-wrapper');\r\n    \r\n    const tools1 = document.createElement('div');\r\n    const tools2 = document.createElement('div');\r\n    tools1.classList.add('markup-tooltip-tools');\r\n    tools2.classList.add('markup-tooltip-tools');\r\n\r\n    const arr = ['bold', 'italic', 'underline', 'strikethrough', 'monospace', 'link'] as (keyof MarkupTooltip['buttons'])[];\r\n    arr.forEach(c => {\r\n      const button = ButtonIcon(c, {noRipple: true});\r\n      tools1.append(this.buttons[c] = button);\r\n\r\n      if(c !== 'link') {\r\n        button.addEventListener('mousedown', (e) => {\r\n          cancelEvent(e); \r\n          this.appImManager.chat.input.applyMarkdown(c);\r\n          this.cancelClosening();\r\n          \r\n          /* this.mouseUpCounter = 0;\r\n          this.setMouseUpEvent(); */\r\n          //this.hide();\r\n        });\r\n      } else {\r\n        attachClickEvent(button, (e) => {\r\n          cancelEvent(e);\r\n          this.showLinkEditor();\r\n          this.cancelClosening();\r\n        });\r\n      }\r\n    });\r\n\r\n    this.linkBackButton = ButtonIcon('left', {noRipple: true});\r\n    this.linkInput = document.createElement('input');\r\n    _i18n(this.linkInput, 'MarkupTooltip.LinkPlaceholder', undefined, 'placeholder');\r\n    this.linkInput.classList.add('input-clear');\r\n    this.linkInput.addEventListener('keydown', (e) => {\r\n      const valid = !this.linkInput.value.length || !!RichTextProcessor.matchUrl(this.linkInput.value);///^(http)|(https):\\/\\//i.test(this.linkInput.value);\r\n\r\n      if(e.code === 'Enter') {\r\n        if(!valid) {\r\n          if(this.linkInput.classList.contains('error')) {\r\n            this.linkInput.classList.remove('error');\r\n            void this.linkInput.offsetLeft; // reflow\r\n          }\r\n\r\n          this.linkInput.classList.add('error');\r\n        } else {\r\n          this.applyLink(e);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.linkInput.addEventListener('input', (e) => {\r\n      const valid = this.isLinkValid();\r\n\r\n      this.linkInput.classList.toggle('is-valid', valid);\r\n      this.linkInput.classList.remove('error');\r\n    });\r\n\r\n    this.linkBackButton.addEventListener('mousedown', (e) => {\r\n      //this.log('linkBackButton click');\r\n      cancelEvent(e);\r\n      this.container.classList.remove('is-link');\r\n      //input.value = '';\r\n      this.resetSelection();\r\n      this.setTooltipPosition();\r\n      this.cancelClosening();\r\n    });\r\n\r\n    this.linkApplyButton = ButtonIcon('check markup-tooltip-link-apply', {noRipple: true});\r\n    this.linkApplyButton.addEventListener('mousedown', (e) => {\r\n      //this.log('linkApplyButton click');\r\n      this.applyLink(e);\r\n    });\r\n\r\n    const applyDiv = document.createElement('div');\r\n    applyDiv.classList.add('markup-tooltip-link-apply-container');\r\n    \r\n    const delimiter1 = document.createElement('span');\r\n    const delimiter2 = document.createElement('span');\r\n    const delimiter3 = document.createElement('span');\r\n    delimiter1.classList.add('markup-tooltip-delimiter');\r\n    delimiter2.classList.add('markup-tooltip-delimiter');\r\n    delimiter3.classList.add('markup-tooltip-delimiter');\r\n    tools1.insertBefore(delimiter1, this.buttons.link);\r\n    applyDiv.append(delimiter3, this.linkApplyButton);\r\n    tools2.append(this.linkBackButton, delimiter2, this.linkInput, applyDiv);\r\n    //tools1.insertBefore(delimiter2, this.buttons.link.nextSibling);\r\n\r\n    this.wrapper.append(tools1, tools2);\r\n    this.container.append(this.wrapper);\r\n    document.body.append(this.container);\r\n    \r\n    window.addEventListener('resize', () => {\r\n      this.hide();\r\n    });\r\n  }\r\n\r\n  public showLinkEditor() {\r\n    if(!this.container || !this.container.classList.contains('is-visible')) { // * if not inited yet (Ctrl+A + Ctrl+K)\r\n      this.show();\r\n    }\r\n\r\n    const button = this.buttons.link;\r\n    this.container.classList.add('is-link');\r\n\r\n    const selection = document.getSelection();\r\n    this.savedRange = selection.getRangeAt(0);\r\n    \r\n    if(button.classList.contains('active')) {\r\n      const startContainer = this.savedRange.startContainer;\r\n      const anchor = startContainer.parentElement as HTMLAnchorElement;\r\n      this.linkInput.value = anchor.href;\r\n    } else {\r\n      this.linkInput.value = '';\r\n    }\r\n\r\n    this.setTooltipPosition(true);\r\n\r\n    setTimeout(() => {\r\n      this.linkInput.focus(); // !!! instant focus will break animation\r\n    }, 200);\r\n    this.linkInput.classList.toggle('is-valid', this.isLinkValid());\r\n  }\r\n\r\n  private applyLink(e: Event) {\r\n    cancelEvent(e);\r\n    this.resetSelection();\r\n    let url = this.linkInput.value;\r\n    if(url && !RichTextProcessor.matchUrlProtocol(url)) {\r\n      url = 'https://' + url;\r\n    }\r\n    this.appImManager.chat.input.applyMarkdown('link', url);\r\n    setTimeout(() => {\r\n      this.hide();\r\n    }, 0);\r\n  }\r\n\r\n  private isLinkValid() {\r\n    return !this.linkInput.value.length || !!RichTextProcessor.matchUrl(this.linkInput.value);\r\n  }\r\n\r\n  private resetSelection(range: Range = this.savedRange) {\r\n    const selection = window.getSelection();\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n    this.appImManager.chat.input.messageInput.focus();\r\n  }\r\n\r\n  public hide() {\r\n    //return;\r\n\r\n    if(this.init) return;\r\n\r\n    this.container.classList.remove('is-visible');\r\n    //document.removeEventListener('mouseup', this.onMouseUp);\r\n    document.removeEventListener('mouseup', this.onMouseUpSingle);\r\n    this.waitingForMouseUp = false;\r\n\r\n    appNavigationController.removeByType('markup');\r\n\r\n    if(this.hideTimeout) clearTimeout(this.hideTimeout);\r\n    this.hideTimeout = window.setTimeout(() => {\r\n      this.hideTimeout = undefined;\r\n      this.container.classList.add('hide');\r\n      this.container.classList.remove('is-link');\r\n    }, 200);\r\n  }\r\n\r\n  public getActiveMarkupButton() {\r\n    const nodes = getSelectedNodes();\r\n    const parents = [...new Set(nodes.map(node => node.parentNode))];\r\n    //if(parents.length > 1 && parents) return [];\r\n\r\n    const currentMarkups: Set<HTMLElement> = new Set();\r\n    (parents as HTMLElement[]).forEach(node => {\r\n      for(const type in markdownTags) {\r\n        const tag = markdownTags[type as MarkdownType];\r\n        const closest = node.closest(tag.match + ', [contenteditable]');\r\n        if(closest !== this.appImManager.chat.input.messageInput) {\r\n          currentMarkups.add(this.buttons[type as MarkdownType]);\r\n        }\r\n      }\r\n    });\r\n    \r\n\r\n    return [...currentMarkups];\r\n  }\r\n\r\n  public setActiveMarkupButton() {\r\n    const activeButtons = this.getActiveMarkupButton();\r\n\r\n    for(const i in this.buttons) {\r\n      // @ts-ignore\r\n      const button = this.buttons[i];\r\n      button.classList.toggle('active', activeButtons.includes(button));\r\n    }\r\n  }\r\n\r\n  private setTooltipPosition(isLinkToggle = false) {\r\n    const selection = document.getSelection();\r\n    const range = selection.getRangeAt(0);\r\n\r\n    const bodyRect = document.body.getBoundingClientRect();\r\n    const selectionRect = range.getBoundingClientRect();\r\n    const inputRect = this.appImManager.chat.input.rowsWrapper.getBoundingClientRect();\r\n\r\n    this.container.style.maxWidth = inputRect.width + 'px';\r\n\r\n    const selectionTop = selectionRect.top + (bodyRect.top * -1);\r\n    \r\n    const currentTools = this.container.classList.contains('is-link') ? this.wrapper.lastElementChild : this.wrapper.firstElementChild;\r\n\r\n    const sizesRect = currentTools.getBoundingClientRect();\r\n    const top = selectionTop - sizesRect.height - 8;\r\n    \r\n    const minX = inputRect.left;\r\n    const maxX = (inputRect.left + inputRect.width) - Math.min(inputRect.width, sizesRect.width);\r\n    let left: number;\r\n    if(isLinkToggle) {\r\n      const containerRect = this.container.getBoundingClientRect();\r\n      left = clamp(containerRect.left, minX, maxX);\r\n    } else {\r\n      const x = selectionRect.left + (selectionRect.width - sizesRect.width) / 2;\r\n      left = clamp(x, minX, maxX);\r\n    }\r\n\r\n    /* const isClamped = x !== minX && x !== maxX && (left === minX || left === maxX || this.container.getBoundingClientRect().left >= maxX);\r\n\r\n    if(isLinkToggle && this.container.classList.contains('is-link') && !isClamped) return; */\r\n    \r\n    this.container.style.transform = `translate3d(${left}px, ${top}px, 0)`;\r\n  }\r\n\r\n  public show() {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    if(isSelectionEmpty()) {\r\n      this.hide();\r\n      return;\r\n    }\r\n\r\n    if(this.hideTimeout !== undefined) {\r\n      clearTimeout(this.hideTimeout);\r\n    }\r\n\r\n    if(this.container.classList.contains('is-visible')) {\r\n      return;\r\n    }\r\n\r\n    this.setActiveMarkupButton();\r\n    \r\n    this.container.classList.remove('is-link');\r\n    const isFirstShow = this.container.classList.contains('hide');\r\n    if(isFirstShow) {\r\n      this.container.classList.remove('hide');\r\n      this.container.classList.add('no-transition');\r\n    }\r\n    \r\n    this.setTooltipPosition();\r\n    \r\n    if(isFirstShow) {\r\n      void this.container.offsetLeft; // reflow\r\n      this.container.classList.remove('no-transition');\r\n    }\r\n    \r\n    this.container.classList.add('is-visible');\r\n\r\n    if(!isMobile) {\r\n      appNavigationController.pushItem({\r\n        type: 'markup',\r\n        onPop: () => {\r\n          this.hide();\r\n        }\r\n      });\r\n    }\r\n\r\n    //this.log('selection', selectionRect, activeButton);\r\n  }\r\n\r\n  /* private onMouseUp = (e: Event) => {\r\n    this.log('onMouseUp');\r\n    if(findUpClassName(e.target, 'markup-tooltip')) return;\r\n\r\n    this.hide();\r\n    //document.removeEventListener('mouseup', this.onMouseUp);\r\n  }; */\r\n\r\n  private onMouseUpSingle = (e: Event) => {\r\n    //this.log('onMouseUpSingle');\r\n    this.waitingForMouseUp = false;\r\n\r\n    if(isTouchSupported) {\r\n      cancelEvent(e);\r\n      if(this.mouseUpCounter++ === 0) {\r\n        this.resetSelection(this.savedRange);\r\n      } else {\r\n        this.hide();\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.show();\r\n\r\n    /* !isTouchSupported && document.addEventListener('mouseup', this.onMouseUp); */\r\n  };\r\n\r\n  public setMouseUpEvent() {\r\n    if(this.waitingForMouseUp) return;\r\n    this.waitingForMouseUp = true;\r\n\r\n    //this.log('setMouseUpEvent');\r\n\r\n    document.addEventListener('mouseup', this.onMouseUpSingle, {once: true});\r\n  }\r\n\r\n  public cancelClosening() {\r\n    if(isTouchSupported && !isApple) {\r\n      document.removeEventListener('mouseup', this.onMouseUpSingle);\r\n      document.addEventListener('mouseup', (e) => {\r\n        cancelEvent(e);\r\n        this.mouseUpCounter = 1;\r\n        this.waitingForMouseUp = false;\r\n        this.setMouseUpEvent();\r\n      }, {once: true});\r\n    }\r\n  }\r\n\r\n  public handleSelection() {\r\n    if(this.addedListener) return;\r\n    this.addedListener = true;\r\n    document.addEventListener('selectionchange', (e) => {\r\n      //this.log('selectionchange');\r\n\r\n      if(document.activeElement === this.linkInput) {\r\n        return;\r\n      }\r\n\r\n      if(document.activeElement !== this.appImManager.chat.input.messageInput) {\r\n        this.hide();\r\n        return;\r\n      }\r\n\r\n      const selection = document.getSelection();\r\n      if(isSelectionEmpty(selection)) {\r\n        this.hide();\r\n        return;\r\n      }\r\n\r\n      if(isTouchSupported) {\r\n        if(isApple) {\r\n          this.show();\r\n          this.setTooltipPosition(); // * because can skip this in .show();\r\n        } else {\r\n          if(this.mouseUpCounter === 2) {\r\n            this.mouseUpCounter = 0;\r\n            return;\r\n          }\r\n\r\n          this.savedRange = selection.getRangeAt(0);\r\n          this.setMouseUpEvent();\r\n          /* document.addEventListener('touchend', (e) => {\r\n            cancelEvent(e);\r\n            this.resetSelection(range);\r\n            this.show();\r\n          }, {once: true, passive: false}); */\r\n        }\r\n      } else {\r\n        this.setMouseUpEvent();\r\n      }\r\n    });\r\n  }\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function getSelectedNodes() {\r\n  const nodes: Node[] = [];\r\n  const selection = window.getSelection();\r\n  for(let i = 0; i < selection.rangeCount; ++i) {\r\n    const range = selection.getRangeAt(i);\r\n    let {startContainer, endContainer} = range;\r\n    if(endContainer.nodeType !== 3) endContainer = endContainer.firstChild;\r\n    \r\n    while(startContainer && startContainer !== endContainer) {\r\n      nodes.push(startContainer.nodeType === 3 ? startContainer : startContainer.firstChild);\r\n      startContainer = startContainer.nextSibling;\r\n    }\r\n    \r\n    if(nodes[nodes.length - 1] !== endContainer) {\r\n      nodes.push(endContainer);\r\n    }\r\n  }\r\n\r\n  // * filter null's due to <br>\r\n  return nodes.filter(node => !!node);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// generate a path's arc data parameter\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\n\r\n// http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\r\nfunction arcParameter(rx: number, ry: number, xAxisRotation: number, largeArcFlag: number, sweepFlag: number, x: number, y: number) {\r\n  return [rx, ',', ry, ' ',\r\n          xAxisRotation, ' ',\r\n          largeArcFlag, ',',\r\n          sweepFlag, ' ',\r\n          x, ',', y ].join('');\r\n}\r\n\r\nexport default function generatePathData(x: number, y: number, width: number, height: number, tl: number, tr: number, br: number, bl: number) {\r\n  const data: string[] = [];\r\n\r\n  // start point in top-middle of the rectangle\r\n  data.push('M' + (x + width / 2) + ',' + y);\r\n\r\n  // next we go to the right\r\n  data.push('H' + (x + width - tr));\r\n\r\n  if(tr > 0) {\r\n    // now we draw the arc in the top-right corner\r\n    data.push('A' + arcParameter(tr, tr, 0, 0, 1, (x + width), (y + tr)));\r\n  }\r\n\r\n  // next we go down\r\n  data.push('V' + (y + height - br));\r\n\r\n  if(br > 0) {\r\n    // now we draw the arc in the lower-right corner\r\n    data.push('A' + arcParameter(br, br, 0, 0, 1, (x + width - br), (y + height)));\r\n  }\r\n\r\n  // now we go to the left\r\n  data.push('H' + (x + bl));\r\n\r\n  if(bl > 0) {\r\n    // now we draw the arc in the lower-left corner\r\n    data.push('A' + arcParameter(bl, bl, 0, 0, 1, (x + 0), (y + height - bl)));\r\n  }\r\n\r\n  // next we go up\r\n  data.push('V' + (y + tl));\r\n\r\n  if(tl > 0) {\r\n    // now we draw the arc in the top-left corner\r\n    data.push('A' + arcParameter(tl, tl, 0, 0, 1, (x + tl), (y + 0)));\r\n  }\r\n\r\n  // and we close the path\r\n  data.push('Z');\r\n\r\n  return data.join(' ');\r\n}\r\n\r\nMOUNT_CLASS_TO.generatePathData = generatePathData;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport generatePathData from \"../../helpers/generatePathData\";\r\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\r\n\r\nexport default class ChatDragAndDrop {\r\n  container: HTMLDivElement;\r\n  svg: SVGSVGElement;\r\n  outlineWrapper: HTMLDivElement;\r\n  path: SVGPathElement;\r\n\r\n  constructor(appendTo: HTMLElement, private options: {\r\n    icon: string,\r\n    header: LangPackKey,\r\n    subtitle: LangPackKey,\r\n    onDrop: (e: DragEvent) => void\r\n  }) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('drop', 'z-depth-1');\r\n\r\n    this.outlineWrapper = document.createElement('div');\r\n    this.outlineWrapper.classList.add('drop-outline-wrapper');\r\n\r\n    this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n    this.svg.classList.add('drop-outline');\r\n\r\n    this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    this.path.classList.add('drop-outline-path');\r\n\r\n    const dropIcon = document.createElement('div');\r\n    dropIcon.classList.add('drop-icon', 'tgico-' + options.icon);\r\n\r\n    const dropHeader = document.createElement('div');\r\n    dropHeader.classList.add('drop-header');\r\n    dropHeader.append(i18n(options.header));\r\n\r\n    const dropSubtitle = document.createElement('div');\r\n    dropSubtitle.classList.add('drop-subtitle');\r\n    dropSubtitle.append(i18n(options.subtitle));\r\n\r\n    this.svg.append(this.path);\r\n    this.outlineWrapper.append(this.svg);\r\n\r\n    this.container.append(this.outlineWrapper, dropIcon, dropHeader, dropSubtitle);\r\n    appendTo.append(this.container);\r\n\r\n    this.container.addEventListener('dragover', this.onDragOver);\r\n    this.container.addEventListener('dragleave', this.onDragLeave);\r\n    this.container.addEventListener('drop', this.onDrop);\r\n  }\r\n\r\n  onDragOver = (e: DragEvent) => {\r\n    this.container.classList.add('is-dragover');\r\n    //SetTransition(this.container, 'is-dragover', true, 500);\r\n  };\r\n\r\n  onDragLeave = (e: DragEvent) => {\r\n    this.container.classList.remove('is-dragover');\r\n    //SetTransition(this.container, 'is-dragover', false, 500);\r\n  };\r\n\r\n  onDrop = (e: DragEvent) => {\r\n    this.options.onDrop(e);\r\n  };\r\n\r\n  destroy() {\r\n    delete this.options;\r\n    this.container.remove();\r\n    this.container.removeEventListener('dragover', this.onDragOver);\r\n    this.container.removeEventListener('dragleave', this.onDragLeave);\r\n    this.container.removeEventListener('drop', this.onDrop);\r\n  }\r\n\r\n  setPath() {\r\n    const rect = this.outlineWrapper.getBoundingClientRect();\r\n    this.svg.setAttributeNS(null, 'preserveAspectRatio', 'none');\r\n    this.svg.setAttributeNS(null, 'viewBox', `0 0 ${rect.width} ${rect.height}`);\r\n    this.svg.setAttributeNS(null, 'width', `${rect.width}`);\r\n    this.svg.setAttributeNS(null, 'height', `${rect.height}`);\r\n\r\n    const radius = 10;\r\n    //const strokeWidth = 2;\r\n    const sizeX = rect.width - radius;\r\n    const sizeY = rect.height - radius;\r\n    const pos = radius / 2;\r\n    const d = generatePathData(pos, pos, sizeX, sizeY, radius, radius, radius, radius);\r\n    this.path.setAttributeNS(null, 'd', d);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { doubleRaf } from \"../schedulers\";\r\n\r\nexport default function disableTransition(elements: HTMLElement[]) {\r\n  elements.forEach(el => el.classList.add('no-transition'));\r\n\r\n  doubleRaf().then(() => {\r\n    elements.forEach(el => el.classList.remove('no-transition'));\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport PopupElement, { addCancelButton } from \".\";\r\nimport { ChatInvite, Updates } from \"../../layer\";\r\nimport apiUpdatesManager from \"../../lib/appManagers/apiUpdatesManager\";\r\nimport appAvatarsManager from \"../../lib/appManagers/appAvatarsManager\";\r\nimport appPhotosManager from \"../../lib/appManagers/appPhotosManager\";\r\nimport { i18n } from \"../../lib/langPack\";\r\nimport apiManager from \"../../lib/mtproto/mtprotoworker\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport AvatarElement from \"../avatar\";\r\nimport { wrapPhoto } from \"../wrappers\";\r\n\r\n// const FAKE_CHAT_ID = Number.MAX_SAFE_INTEGER - 0x1000;\r\n\r\nexport default class PopupJoinChatInvite extends PopupElement {\r\n  constructor(hash: string, chatInvite: ChatInvite.chatInvite) {\r\n    super('popup-join-chat-invite', addCancelButton([{\r\n      langKey: chatInvite.pFlags.broadcast ? 'JoinByPeekChannelTitle' : 'JoinByPeekGroupTitle',\r\n      callback: () => {\r\n        apiManager.invokeApi('messages.importChatInvite', {hash})\r\n        .then((updates) => {\r\n          apiUpdatesManager.processUpdateMessage(updates);\r\n          const chat = (updates as Updates.updates).chats[0];\r\n          const peerId = -chat.id;\r\n          rootScope.dispatchEvent('history_focus', {peerId});\r\n        });\r\n      }\r\n    }]), {closable: true, overlayClosable: true, body: true});\r\n\r\n    this.header.remove();\r\n\r\n    /* const fakeChat: Chat.channel | Chat.chat = {\r\n      _: chatInvite.pFlags.channel ? 'channel' : 'chat',\r\n      id: FAKE_CHAT_ID,\r\n      title: chatInvite.title,\r\n      photo: chatInvite.photo as any,\r\n      date: Date.now() / 1000 | 0,\r\n      version: 0,\r\n      participants_count: chatInvite.participants_count,\r\n      pFlags: chatInvite.pFlags as any\r\n    };\r\n\r\n    appChatsManager.saveApiChat(fakeChat); */\r\n    \r\n    const avatarElem = new AvatarElement();\r\n    avatarElem.setAttribute('dialog', '0');\r\n    avatarElem.classList.add('avatar-100');\r\n    if(chatInvite.photo._ === 'photo') {\r\n      chatInvite.photo = appPhotosManager.savePhoto(chatInvite.photo);\r\n      wrapPhoto({\r\n        container: avatarElem,\r\n        message: null,\r\n        photo: chatInvite.photo,\r\n        boxHeight: 100,\r\n        boxWidth: 100,\r\n        withoutPreloader: true\r\n      });\r\n      avatarElem.style.width = avatarElem.style.height = '';\r\n    } else {\r\n      appAvatarsManager.putPhoto(avatarElem, -0, false, chatInvite.title);\r\n    }\r\n\r\n    const title = document.createElement('div');\r\n    title.classList.add('chat-title');\r\n    title.innerHTML = RichTextProcessor.wrapEmojiText(chatInvite.title);\r\n    //avatarElem.setAttribute('peer', '' + -fakeChat.id);\r\n    \r\n    const isBroadcast = chatInvite.pFlags.broadcast;\r\n    const peopleCount = i18n(isBroadcast ? 'Subscribers' : 'Members', [chatInvite.participants_count]);\r\n    peopleCount.classList.add('chat-participants-count');\r\n\r\n    this.body.append(avatarElem, title, peopleCount);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n//import apiManager from '../mtproto/apiManager';\r\nimport animationIntersector from '../../components/animationIntersector';\r\nimport appSidebarLeft, { LEFT_COLUMN_ACTIVE_CLASSNAME } from \"../../components/sidebarLeft\";\r\nimport appSidebarRight, { RIGHT_COLUMN_ACTIVE_CLASSNAME } from '../../components/sidebarRight';\r\nimport mediaSizes, { ScreenSize } from '../../helpers/mediaSizes';\r\nimport { logger, LogTypes } from \"../logger\";\r\nimport apiManager from '../mtproto/mtprotoworker';\r\nimport rootScope from '../rootScope';\r\nimport apiUpdatesManager from './apiUpdatesManager';\r\nimport appUsersManager from \"./appUsersManager\";\r\nimport Chat, { ChatType } from '../../components/chat/chat';\r\nimport appChatsManager from './appChatsManager';\r\nimport appDocsManager from './appDocsManager';\r\nimport appInlineBotsManager from './appInlineBotsManager';\r\nimport appMessagesManager from './appMessagesManager';\r\nimport appPeersManager from './appPeersManager';\r\nimport appPhotosManager from './appPhotosManager';\r\nimport appProfileManager from './appProfileManager';\r\nimport appStickersManager from './appStickersManager';\r\nimport appWebPagesManager from './appWebPagesManager';\r\nimport PopupNewMedia from '../../components/popups/newMedia';\r\nimport MarkupTooltip from '../../components/chat/markupTooltip';\r\nimport { isTouchSupported } from '../../helpers/touchSupport';\r\nimport appPollsManager from './appPollsManager';\r\nimport SetTransition from '../../components/singleTransition';\r\nimport ChatDragAndDrop from '../../components/chat/dragAndDrop';\r\nimport { debounce, pause, doubleRaf } from '../../helpers/schedulers';\r\nimport lottieLoader from '../lottieLoader';\r\nimport useHeavyAnimationCheck, { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\r\nimport appDraftsManager from './appDraftsManager';\r\nimport serverTimeManager from '../mtproto/serverTimeManager';\r\nimport stateStorage from '../stateStorage';\r\nimport appDownloadManager from './appDownloadManager';\r\nimport { AppStateManager } from './appStateManager';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport appNavigationController from '../../components/appNavigationController';\r\nimport appNotificationsManager from './appNotificationsManager';\r\nimport AppPrivateSearchTab from '../../components/sidebarRight/tabs/search';\r\nimport { i18n, LangPackKey } from '../langPack';\r\nimport { ChatInvite, SendMessageAction } from '../../layer';\r\nimport { hslaStringToHex } from '../../helpers/color';\r\nimport { copy, getObjectKeysAndSort } from '../../helpers/object';\r\nimport { getFilesFromEvent } from '../../helpers/files';\r\nimport PeerTitle from '../../components/peerTitle';\r\nimport PopupPeer from '../../components/popups/peer';\r\nimport { SliceEnd } from '../../helpers/slicedArray';\r\nimport blurActiveElement from '../../helpers/dom/blurActiveElement';\r\nimport { cancelEvent } from '../../helpers/dom/cancelEvent';\r\nimport disableTransition from '../../helpers/dom/disableTransition';\r\nimport placeCaretAtEnd from '../../helpers/dom/placeCaretAtEnd';\r\nimport replaceContent from '../../helpers/dom/replaceContent';\r\nimport whichChild from '../../helpers/dom/whichChild';\r\nimport appEmojiManager from './appEmojiManager';\r\nimport PopupElement from '../../components/popups';\r\nimport singleInstance from '../mtproto/singleInstance';\r\nimport PopupStickers from '../../components/popups/stickers';\r\nimport PopupJoinChatInvite from '../../components/popups/joinChatInvite';\r\n\r\n//console.log('appImManager included33!');\r\n\r\nappSidebarLeft; // just to include\r\n\r\nexport const CHAT_ANIMATION_GROUP = 'chat';\r\nconst FOCUS_EVENT_NAME = isTouchSupported ? 'touchstart' : 'mousemove';\r\n\r\nexport type ChatSavedPosition = {\r\n  mids: number[], \r\n  top: number\r\n};\r\n\r\nexport class AppImManager {\r\n  public columnEl = document.getElementById('column-center') as HTMLDivElement;\r\n  public chatsContainer: HTMLElement;\r\n\r\n  public offline = false;\r\n  public updateStatusInterval = 0;\r\n\r\n  public log: ReturnType<typeof logger>;\r\n\r\n  public setPeerPromise: Promise<void> = null;\r\n\r\n  public tabId = -1;\r\n  \r\n  public chats: Chat[] = [];\r\n  private prevTab: HTMLElement;\r\n  private chatsSelectTabDebounced: () => void;\r\n  \r\n  public markupTooltip: MarkupTooltip;\r\n  private themeColorElem: Element;\r\n  private backgroundPromises: {[slug: string]: Promise<string>} = {};\r\n\r\n  get myId() {\r\n    return rootScope.myId;\r\n  }\r\n\r\n  get chat(): Chat {\r\n    return this.chats[this.chats.length - 1];\r\n  }\r\n\r\n  constructor() {\r\n    apiUpdatesManager.attach();\r\n    appNotificationsManager.start();\r\n\r\n    this.log = logger('IM', LogTypes.Log | LogTypes.Warn | LogTypes.Debug | LogTypes.Error);\r\n\r\n    this.selectTab(0);\r\n    \r\n    window.addEventListener('blur', () => {\r\n      animationIntersector.checkAnimations(true);\r\n      \r\n      this.offline = rootScope.idle.isIDLE = true;\r\n      this.updateStatus();\r\n      clearInterval(this.updateStatusInterval);\r\n      rootScope.dispatchEvent('idle', rootScope.idle.isIDLE);\r\n      \r\n      window.addEventListener('focus', () => {\r\n        this.offline = rootScope.idle.isIDLE = false;\r\n        this.updateStatus();\r\n        this.updateStatusInterval = window.setInterval(() => this.updateStatus(), 50e3);\r\n        \r\n        // в обратном порядке\r\n        animationIntersector.checkAnimations(false);\r\n\r\n        rootScope.dispatchEvent('idle', rootScope.idle.isIDLE);\r\n      }, {once: true});\r\n    });\r\n\r\n    // * Prevent setting online after reloading page\r\n    window.addEventListener(FOCUS_EVENT_NAME, () => {\r\n      this.updateStatusInterval = window.setInterval(() => this.updateStatus(), 50e3);\r\n      this.updateStatus();\r\n\r\n      this.offline = rootScope.idle.isIDLE = false;\r\n      rootScope.dispatchEvent('idle', rootScope.idle.isIDLE);\r\n    }, {once: true, passive: true});\r\n\r\n    this.chatsContainer = document.createElement('div');\r\n    this.chatsContainer.classList.add('chats-container', 'tabs-container');\r\n    this.chatsContainer.dataset.animation = 'navigation';\r\n\r\n    this.columnEl.append(this.chatsContainer);\r\n    \r\n    this.createNewChat();\r\n    this.chatsSelectTab(this.chat.container);\r\n\r\n    appNavigationController.onHashChange = this.onHashChange;\r\n    //window.addEventListener('hashchange', this.onHashChange);\r\n\r\n    this.setSettings();\r\n    rootScope.addEventListener('settings_updated', this.setSettings);\r\n\r\n    useHeavyAnimationCheck(() => {\r\n      animationIntersector.setOnlyOnePlayableGroup('lock');\r\n      animationIntersector.checkAnimations(true);\r\n    }, () => {\r\n      animationIntersector.setOnlyOnePlayableGroup('');\r\n      animationIntersector.checkAnimations(false);\r\n    });\r\n\r\n    this.applyCurrentTheme();\r\n\r\n    // * fix simultaneous opened both sidebars, can happen when floating sidebar is opened with left sidebar\r\n    mediaSizes.addEventListener('changeScreen', (from, to) => {\r\n      if(document.body.classList.contains(LEFT_COLUMN_ACTIVE_CLASSNAME) \r\n        && document.body.classList.contains(RIGHT_COLUMN_ACTIVE_CLASSNAME)) {\r\n        appSidebarRight.toggleSidebar(false);\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('history_focus', (e) => {\r\n      let {peerId, mid} = e;\r\n      if(mid) {\r\n        mid = appMessagesManager.generateMessageId(mid); // because mid can come from notification, i.e. server message id\r\n      }\r\n      \r\n      this.setInnerPeer(peerId, mid);\r\n    });\r\n\r\n    rootScope.addEventListener('peer_changing', (chat) => {\r\n      this.saveChatPosition(chat);\r\n    });\r\n\r\n    rootScope.addEventListener('theme_change', () => {\r\n      this.applyCurrentTheme();\r\n    });\r\n\r\n    rootScope.addEventListener('instance_deactivated', () => {\r\n      const popup = new PopupElement('popup-instance-deactivated', undefined, {overlayClosable: true});\r\n      const c = document.createElement('div');\r\n      c.classList.add('instance-deactivated-container');\r\n      (popup as any).container.replaceWith(c);\r\n\r\n      const header = document.createElement('div');\r\n      header.classList.add('header');\r\n      header.append(i18n('Deactivated.Title'));\r\n\r\n      const subtitle = document.createElement('div');\r\n      subtitle.classList.add('subtitle');\r\n      subtitle.append(i18n('Deactivated.Subtitle'));\r\n\r\n      c.append(header, subtitle);\r\n\r\n      document.body.classList.add('deactivated');\r\n\r\n      (popup as any).onClose = () => {\r\n        document.body.classList.add('deactivated-backwards');\r\n\r\n        singleInstance.activateInstance();\r\n\r\n        setTimeout(() => {\r\n          document.body.classList.remove('deactivated', 'deactivated-backwards');\r\n        }, 333);\r\n      };\r\n\r\n      popup.show();\r\n    });\r\n\r\n    stateStorage.get('chatPositions').then((c) => {\r\n      stateStorage.setToCache('chatPositions', c || {});\r\n    });\r\n\r\n    this.addAnchorListener<void>({\r\n      name: 'showMaskedAlert', \r\n      callback: (params, element) => {\r\n        const href = element.href;\r\n\r\n        const a = element.cloneNode(true) as HTMLAnchorElement;\r\n        a.className = 'anchor-url';\r\n        a.innerText = href;\r\n        a.removeAttribute('onclick');\r\n\r\n        new PopupPeer('popup-masked-url', {\r\n          titleLangKey: 'OpenUrlTitle',\r\n          descriptionLangKey: 'OpenUrlAlert2',\r\n          descriptionLangArgs: [a],\r\n          buttons: [{\r\n            langKey: 'Open',\r\n            callback: () => {\r\n              a.click();\r\n            },\r\n          }]\r\n        }).show();\r\n      }, \r\n      noParams: true\r\n    });\r\n\r\n    this.addAnchorListener<{command: string, bot: string}>({\r\n      name: 'execBotCommand', \r\n      callback: (params) => {\r\n        const {command, bot} = params;\r\n\r\n        /* const promise = bot ? this.openUsername(bot).then(() => this.chat.peerId) : Promise.resolve(this.chat.peerId);\r\n        promise.then(peerId => {\r\n          appMessagesManager.sendText(peerId, '/' + command);\r\n        }); */\r\n\r\n        appMessagesManager.sendText(this.chat.peerId, '/' + command + (bot ? '@' + bot : ''));\r\n\r\n        //console.log(command, bot);\r\n      }\r\n    });\r\n\r\n    this.addAnchorListener<{hashtag: string}>({\r\n      name: 'searchByHashtag', \r\n      callback: (params) => {\r\n        if(!params) {\r\n          return;\r\n        }\r\n\r\n        const {hashtag} = params;\r\n        this.chat.initSearch('#' + hashtag + ' ');\r\n      }\r\n    });\r\n\r\n    this.addAnchorListener<['addstickers', string]>({\r\n      name: 'addstickers', \r\n      callback: (params) => {\r\n        new PopupStickers({id: params[1]}).show();\r\n      }, \r\n      parsePathname: true\r\n    });\r\n\r\n    this.addAnchorListener<['joinchat', string]>({\r\n      name: 'joinchat', \r\n      callback: (params) => {\r\n        apiManager.invokeApi('messages.checkChatInvite', {\r\n          hash: params[1]\r\n        }).then(chatInvite => {\r\n          if((chatInvite as ChatInvite.chatInvitePeek).chat) {\r\n            appChatsManager.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\r\n          }\r\n\r\n          // console.log(chatInvite);\r\n\r\n          if(chatInvite._ === 'chatInviteAlready' ||\r\n            chatInvite._ === 'chatInvitePeek'/*  && chatInvite.expires > tsNow(true) */) {\r\n            this.setInnerPeer(-chatInvite.chat.id);\r\n            return;\r\n          }\r\n\r\n          new PopupJoinChatInvite(params[1], chatInvite).show();\r\n        });\r\n      },\r\n      parsePathname: true\r\n    });\r\n  }\r\n\r\n  private addAnchorListener<Params extends any>(options: {\r\n    name: 'showMaskedAlert' | 'execBotCommand' | 'searchByHashtag' | 'addstickers' | 'joinchat', \r\n    callback: (params: Params, element: HTMLAnchorElement) => boolean | void, \r\n    noParams?: boolean, \r\n    parsePathname?: boolean\r\n  }) {\r\n    (window as any)[options.name] = (element: HTMLAnchorElement/* , e: Event */) => {\r\n      cancelEvent(null);\r\n\r\n      const href = element.href;\r\n      let params: any;\r\n      if(!options.noParams) {\r\n        params = options.parsePathname ? new URL(element.href).pathname.split('/').slice(1) : this.parseUriParams(href);\r\n      }\r\n\r\n      const res = options.callback(params, element);\r\n      return res === undefined ? res : false;\r\n    };\r\n  }\r\n\r\n  private parseUriParams(uri: string, splitted = uri.split('?')) {\r\n    if(!splitted[1]) {\r\n      return;\r\n    }\r\n\r\n    const params: any = {};\r\n    splitted[1].split('&').forEach(item => {\r\n      params[item.split('=')[0]] = decodeURIComponent(item.split('=')[1]);\r\n    });\r\n\r\n    return params;\r\n  }\r\n\r\n  private onHashChange = () => {\r\n    const hash = location.hash;\r\n    const splitted = hash.split('?');\r\n\r\n    const params = this.parseUriParams(hash, splitted);\r\n\r\n    this.log('hashchange', hash, splitted[0], params);\r\n\r\n    switch(splitted[0]) {\r\n      case '#/im': {\r\n        const p = params.p;\r\n        let postId = params.post !== undefined ? appMessagesManager.generateMessageId(+params.post) : undefined;\r\n\r\n        switch(p[0]) {\r\n          case '@': {\r\n            this.openUsername(p, postId);\r\n            break;\r\n          }\r\n\r\n          default: { // peerId\r\n            this.setInnerPeer(postId ? -+p : +p, postId);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //appNavigationController.replaceState();\r\n    //location.hash = '';\r\n  };\r\n\r\n  public openUsername(username: string, msgId?: number) {\r\n    return appUsersManager.resolveUsername(username).then(peer => {\r\n      const isUser = peer._ === 'user';\r\n      const peerId = isUser ? peer.id : -peer.id;\r\n\r\n      return this.setInnerPeer(peerId, msgId);\r\n    });\r\n  }\r\n\r\n  public setCurrentBackground(broadcastEvent = false) {\r\n    const theme = rootScope.getTheme();\r\n\r\n    if(theme.background.type === 'image' || (theme.background.type === 'default' && theme.background.slug)) {\r\n      const defaultTheme = AppStateManager.STATE_INIT.settings.themes.find(t => t.name === theme.name);\r\n      const isDefaultBackground = theme.background.blur === defaultTheme.background.blur && \r\n        theme.background.slug === defaultTheme.background.slug;\r\n\r\n      if(!isDefaultBackground) {\r\n        return this.getBackground(theme.background.slug).then((url) => {\r\n          return this.setBackground(url, broadcastEvent);\r\n        }, () => { // * if NO_ENTRY_FOUND\r\n          theme.background = copy(defaultTheme.background); // * reset background\r\n          return this.setBackground('', true);\r\n        });\r\n      }\r\n    }\r\n    \r\n    return this.setBackground('', broadcastEvent);\r\n  }\r\n\r\n  private getBackground(slug: string) {\r\n    if(this.backgroundPromises[slug]) return this.backgroundPromises[slug];\r\n    return this.backgroundPromises[slug] = appDownloadManager.cacheStorage.getFile('backgrounds/' + slug).then(blob => {\r\n      return URL.createObjectURL(blob);\r\n    });\r\n  }\r\n\r\n  public setBackground(url: string, broadcastEvent = true): Promise<void> {\r\n    const promises = this.chats.map(chat => chat.setBackground(url));\r\n    return promises[promises.length - 1].then(() => {\r\n      if(broadcastEvent) {\r\n        rootScope.dispatchEvent('background_change');\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveChatPosition(chat: Chat) {\r\n    if(!(['chat', 'discussion'] as ChatType[]).includes(chat.type) || !chat.peerId) {\r\n      return;\r\n    }\r\n\r\n    //const bubble = chat.bubbles.getBubbleByPoint('top');\r\n    //if(bubble) {\r\n      //const top = bubble.getBoundingClientRect().top;\r\n      const top = chat.bubbles.scrollable.scrollTop;\r\n\r\n      const key = chat.peerId + (chat.threadId ? '_' + chat.threadId : '');\r\n\r\n      const chatPositions = stateStorage.getFromCache('chatPositions');\r\n      if(!(chat.bubbles.scrollable.getDistanceToEnd() <= 16 && chat.bubbles.scrollable.loadedAll.bottom) && Object.keys(chat.bubbles.bubbles).length) {\r\n        const position = {\r\n          mids: getObjectKeysAndSort(chat.bubbles.bubbles, 'desc'),\r\n          top\r\n        };\r\n\r\n        chatPositions[key] = position;\r\n\r\n        this.log('saved chat position:', position);\r\n      } else {\r\n        delete chatPositions[key];\r\n\r\n        this.log('deleted chat position');\r\n      }\r\n\r\n      stateStorage.set({chatPositions}, true);\r\n    //}\r\n  }\r\n\r\n  public getChatSavedPosition(chat: Chat): ChatSavedPosition {\r\n    if(!(['chat', 'discussion'] as ChatType[]).includes(chat.type) || !chat.peerId) {\r\n      return;\r\n    }\r\n    \r\n    const key = chat.peerId + (chat.threadId ? '_' + chat.threadId : '');\r\n    const cache = stateStorage.getFromCache('chatPositions');\r\n    return cache && cache[key];\r\n  }\r\n\r\n  public applyHighlightningColor() {\r\n    let hsla: string;\r\n    const theme = rootScope.getTheme();\r\n    if(theme.background.highlightningColor) {\r\n      hsla = theme.background.highlightningColor;\r\n      document.documentElement.style.setProperty('--message-highlightning-color', hsla);\r\n    } else {\r\n      document.documentElement.style.removeProperty('--message-highlightning-color');\r\n    }\r\n\r\n    let themeColor = '#ffffff';\r\n    if(hsla) {\r\n      themeColor = hslaStringToHex(hsla);\r\n    }\r\n\r\n    if(this.themeColorElem === undefined) {\r\n      this.themeColorElem = document.head.querySelector('[name=\"theme-color\"]') as Element || null;\r\n    }\r\n\r\n    if(this.themeColorElem) {\r\n      this.themeColorElem.setAttribute('content', themeColor);\r\n    }\r\n  }\r\n\r\n  public applyCurrentTheme(slug?: string, backgroundUrl?: string, broadcastEvent?: boolean) {\r\n    this.applyHighlightningColor();\r\n\r\n    rootScope.setTheme();\r\n\r\n    if(backgroundUrl) {\r\n      this.backgroundPromises[slug] = Promise.resolve(backgroundUrl);\r\n    }\r\n    \r\n    return this.setCurrentBackground(broadcastEvent === undefined ? !!slug : broadcastEvent);\r\n  }\r\n\r\n  private setSettings = () => {\r\n    document.documentElement.style.setProperty('--messages-text-size', rootScope.settings.messagesTextSize + 'px');\r\n    \r\n    document.body.classList.toggle('animation-level-0', !rootScope.settings.animationsEnabled);\r\n    document.body.classList.toggle('animation-level-1', false);\r\n    document.body.classList.toggle('animation-level-2', rootScope.settings.animationsEnabled);\r\n\r\n    this.chatsSelectTabDebounced = debounce(() => {\r\n      const topbar = this.chat.topbar;\r\n      if(topbar.pinnedMessage) { // * буду молиться богам, чтобы это ничего не сломало, но это исправляет получение пиннеда после анимации\r\n        topbar.pinnedMessage.setCorrectIndex(0);\r\n      }\r\n\r\n      apiManager.setQueueId(this.chat.bubbles.lazyLoadQueue.queueId);\r\n    }, rootScope.settings.animationsEnabled ? 250 : 0, false, true);\r\n\r\n    lottieLoader.setLoop(rootScope.settings.stickers.loop);\r\n    animationIntersector.checkAnimations(false);\r\n    \r\n    for(const chat of this.chats) {\r\n      chat.setAutoDownloadMedia();\r\n    }\r\n  };\r\n\r\n  // * не могу использовать тут TransitionSlider, так как мне нужен отрисованный блок рядом \r\n  // * (или под текущим чатом) чтобы правильно отрендерить чат (напр. scrollTop)\r\n  private chatsSelectTab(tab: HTMLElement, animate?: boolean) {\r\n    if(this.prevTab === tab) {\r\n      return;\r\n    }\r\n\r\n    if(animate === false && this.prevTab) { // * will be used for Safari iOS history swipe\r\n      disableTransition([tab, this.prevTab].filter(Boolean));\r\n    }\r\n\r\n    if(this.prevTab) {\r\n      this.prevTab.classList.remove('active');\r\n      this.chatsSelectTabDebounced();\r\n\r\n      // ! нужно переделать на animation, так как при лаге анимация будет длиться не 250мс\r\n      if(rootScope.settings.animationsEnabled && animate !== false) { \r\n        dispatchHeavyAnimationEvent(pause(250 + 150), 250 + 150);\r\n      }\r\n\r\n      const prevIdx = whichChild(this.prevTab);\r\n      const idx = whichChild(tab);\r\n      if(idx > prevIdx) {\r\n        appNavigationController.pushItem({\r\n          type: 'chat', \r\n          onPop: (canAnimate) => {\r\n            this.setPeer(0, undefined, canAnimate);\r\n            blurActiveElement();\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    tab.classList.add('active');\r\n    this.prevTab = tab;\r\n  }\r\n\r\n  private init() {\r\n    document.addEventListener('paste', this.onDocumentPaste, true);\r\n    \r\n    const IGNORE_KEYS = new Set(['PageUp', 'PageDown', 'Meta', 'Control']);\r\n    const onKeyDown = (e: KeyboardEvent) => {\r\n      if(rootScope.overlayIsActive || IGNORE_KEYS.has(e.key)) return;\r\n      \r\n      const target = e.target as HTMLElement;\r\n      \r\n      //if(target.tagName === 'INPUT') return;\r\n      \r\n      //this.log('onkeydown', e, document.activeElement);\r\n\r\n      const chat = this.chat;\r\n\r\n      if(e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT') {\r\n        return;\r\n      } else if(e.code === 'ArrowUp') {\r\n        if(!chat.input.editMsgId && chat.input.isInputEmpty()) {\r\n          const historyStorage = appMessagesManager.getHistoryStorage(chat.peerId, chat.threadId);\r\n          const slice = historyStorage.history.slice;\r\n          if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\r\n            let goodMid: number;\r\n            for(const mid of slice) {\r\n              const message = chat.getMessage(mid);\r\n              const good = this.myId === chat.peerId ? message.fromId === this.myId : message.pFlags.out;\r\n\r\n              if(good) {\r\n                if(appMessagesManager.canEditMessage(chat.getMessage(mid), 'text')) {\r\n                  goodMid = mid;\r\n                  break;\r\n                }\r\n\r\n                // * this check will allow editing only last message\r\n                //break;\r\n              }\r\n            }\r\n  \r\n            if(goodMid) {\r\n              chat.input.initMessageEditing(goodMid);\r\n              cancelEvent(e); // * prevent from scrolling\r\n            }\r\n          }\r\n        } else {\r\n          return;\r\n        }\r\n      } else if(e.code === 'ArrowDown') {\r\n        return;\r\n      }\r\n      \r\n      if(chat.input.messageInput && \r\n        e.target !== chat.input.messageInput && \r\n        target.tagName !== 'INPUT' && \r\n        !target.hasAttribute('contenteditable') && \r\n        !isTouchSupported && \r\n        (!mediaSizes.isMobile || this.tabId === 1) && \r\n        !this.chat.selection.isSelecting && \r\n        !this.chat.input.recording) {\r\n        chat.input.messageInput.focus();\r\n        placeCaretAtEnd(chat.input.messageInput);\r\n      }\r\n    };\r\n    \r\n    document.body.addEventListener('keydown', onKeyDown);\r\n\r\n    rootScope.addEventListener('history_multiappend', (e) => {\r\n      const msgIdsByPeer = e;\r\n\r\n      for(const peerId in msgIdsByPeer) {\r\n        appSidebarRight.sharedMediaTab.renderNewMessages(+peerId, Array.from(msgIdsByPeer[peerId]));\r\n      }\r\n    });\r\n    \r\n    rootScope.addEventListener('history_delete', (e) => {\r\n      const {peerId, msgs} = e;\r\n\r\n      const mids = Object.keys(msgs).map(s => +s);\r\n      appSidebarRight.sharedMediaTab.deleteDeletedMessages(peerId, mids);\r\n    });\r\n\r\n    // Calls when message successfully sent and we have an id\r\n    rootScope.addEventListener('message_sent', (e) => {\r\n      const {storage, tempId, mid} = e;\r\n      const message = appMessagesManager.getMessageFromStorage(storage, mid);\r\n      appSidebarRight.sharedMediaTab.renderNewMessages(message.peerId, [mid]);\r\n    });\r\n\r\n    if(!isTouchSupported) {\r\n      this.attachDragAndDropListeners();\r\n    }\r\n\r\n    //if(!isTouchSupported) {\r\n      this.markupTooltip = new MarkupTooltip(this);\r\n      this.markupTooltip.handleSelection();\r\n    //}\r\n  }\r\n\r\n  private attachDragAndDropListeners() {\r\n    const drops: ChatDragAndDrop[] = [];\r\n    let mounted = false;\r\n    const toggle = async(e: DragEvent, mount: boolean) => {\r\n      if(mount === mounted) return;\r\n\r\n      const _types = e.dataTransfer.types;\r\n      // @ts-ignore\r\n      const isFiles = _types.contains ? _types.contains('Files') : _types.indexOf('Files') >= 0;\r\n\r\n      if(!isFiles || !this.canDrag()) { // * skip dragging text case\r\n        counter = 0;\r\n        return;\r\n      }\r\n\r\n      if(mount && !drops.length) {\r\n        const types: string[] = await getFilesFromEvent(e, true)\r\n        const force = isFiles && !types.length; // * can't get file items not from 'drop' on Safari\r\n        \r\n        const foundMedia = types.filter(t => ['image', 'video'].includes(t.split('/')[0])).length;\r\n        const foundDocuments = types.length - foundMedia;\r\n  \r\n        this.log('drag files', types);\r\n        \r\n        if(types.length || force) {\r\n          drops.push(new ChatDragAndDrop(dropsContainer, {\r\n            icon: 'dragfiles',\r\n            header: 'Chat.DropTitle',\r\n            subtitle: 'Chat.DropAsFilesDesc',\r\n            onDrop: (e: DragEvent) => {\r\n              toggle(e, false);\r\n              appImManager.log('drop', e);\r\n              appImManager.onDocumentPaste(e, 'document');\r\n            }\r\n          }));\r\n        }\r\n  \r\n        if((foundMedia && !foundDocuments) || force) {\r\n          drops.push(new ChatDragAndDrop(dropsContainer, {\r\n            icon: 'dragmedia',\r\n            header: 'Chat.DropTitle',\r\n            subtitle: 'Chat.DropQuickDesc',\r\n            onDrop: (e: DragEvent) => {\r\n              toggle(e, false);\r\n              appImManager.log('drop', e);\r\n              appImManager.onDocumentPaste(e, 'media');\r\n            }\r\n          }));\r\n        }\r\n  \r\n        this.chat.container.append(dropsContainer);\r\n      }\r\n\r\n      //if(!mount) return;\r\n\r\n      SetTransition(dropsContainer, 'is-visible', mount, 200, () => {\r\n        if(!mount) {\r\n          drops.forEach(drop => {\r\n            drop.destroy();\r\n          });\r\n\r\n          drops.length = 0;\r\n        }\r\n      });\r\n\r\n      if(mount) {\r\n        drops.forEach(drop => {\r\n          drop.setPath();\r\n        });\r\n      } else {\r\n        counter = 0;\r\n      }\r\n\r\n      document.body.classList.toggle('is-dragging', mount);\r\n      mounted = mount;\r\n    };\r\n\r\n    /* document.body.addEventListener('dragover', (e) => {\r\n      cancelEvent(e);\r\n    }); */\r\n\r\n    let counter = 0;\r\n    document.body.addEventListener('dragenter', (e) => {\r\n      counter++;\r\n    });\r\n\r\n    document.body.addEventListener('dragover', (e) => {\r\n      //this.log('dragover', e/* , e.dataTransfer.types[0] */);\r\n      toggle(e, true);\r\n      cancelEvent(e);\r\n    });\r\n\r\n    document.body.addEventListener('dragleave', (e) => {\r\n      //this.log('dragleave', e, counter);\r\n      //if((e.pageX <= 0 || e.pageX >= appPhotosManager.windowW) || (e.pageY <= 0 || e.pageY >= appPhotosManager.windowH)) {\r\n      counter--;\r\n      if(counter === 0) { \r\n      //if(!findUpClassName(e.target, 'drops-container')) {\r\n        toggle(e, false);\r\n      }\r\n    });\r\n\r\n    const dropsContainer = document.createElement('div');\r\n    dropsContainer.classList.add('drops-container');\r\n  }\r\n\r\n  private canDrag() {\r\n    const peerId = this.chat?.peerId;\r\n    return !(!peerId || rootScope.overlayIsActive || (peerId < 0 && !appChatsManager.hasRights(peerId, 'send_media')));\r\n  }\r\n\r\n  private onDocumentPaste = (e: ClipboardEvent | DragEvent, attachType?: 'media' | 'document') => {\r\n    if(!this.canDrag()) return;\r\n\r\n    //console.log('document paste');\r\n    //console.log('item', event.clipboardData.getData());\r\n\r\n    if(e instanceof DragEvent) {\r\n      const _types = e.dataTransfer.types;\r\n      // @ts-ignore\r\n      const isFiles = _types.contains ? _types.contains('Files') : _types.indexOf('Files') >= 0;\r\n      if(isFiles) {\r\n        cancelEvent(e);\r\n      }\r\n    }\r\n    \r\n    getFilesFromEvent(e).then((files: File[]) => {\r\n      if(files.length) {\r\n        if(attachType === 'media' && files.find(file => !['image', 'video'].includes(file.type.split('/')[0]))) {\r\n          attachType = 'document';\r\n        }\r\n  \r\n        const chatInput = this.chat.input;\r\n        chatInput.willAttachType = attachType || (files[0].type.indexOf('image/') === 0 ? 'media' : \"document\");\r\n        new PopupNewMedia(this.chat, files, chatInput.willAttachType);\r\n      }\r\n    });\r\n  };\r\n\r\n  public selectTab(id: number, animate?: boolean) {\r\n    if(animate === false) { // * will be used for Safari iOS history swipe\r\n      disableTransition([appSidebarLeft.sidebarEl, this.columnEl, appSidebarRight.sidebarEl]);\r\n    }\r\n\r\n    document.body.classList.toggle(LEFT_COLUMN_ACTIVE_CLASSNAME, id === 0);\r\n\r\n    const prevTabId = this.tabId;\r\n\r\n    this.log('selectTab', id, prevTabId);\r\n\r\n    let animationPromise: Promise<any> = doubleRaf();\r\n    if(prevTabId !== -1 && prevTabId !== id && rootScope.settings.animationsEnabled && animate !== false) {\r\n      const transitionTime = (mediaSizes.isMobile ? 250 : 200) + 100; // * cause transition time could be > 250ms\r\n      animationPromise = pause(transitionTime);\r\n      dispatchHeavyAnimationEvent(animationPromise, transitionTime);\r\n\r\n      this.columnEl.classList.add('disable-hover');\r\n      animationPromise.finally(() => {\r\n        this.columnEl.classList.remove('disable-hover');\r\n      });\r\n    }\r\n\r\n    this.tabId = id;\r\n    blurActiveElement();\r\n    if(mediaSizes.isMobile && prevTabId === 2 && id < 2) {\r\n      document.body.classList.remove(RIGHT_COLUMN_ACTIVE_CLASSNAME);\r\n    }\r\n\r\n    if(prevTabId !== -1 && id > prevTabId) {\r\n      if(id < 2 || !appNavigationController.findItemByType('im')) {\r\n        appNavigationController.pushItem({\r\n          type: 'im', \r\n          onPop: (canAnimate) => {\r\n            //this.selectTab(prevTabId, !isSafari);\r\n            this.setPeer(0, undefined, canAnimate);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    rootScope.dispatchEvent('im_tab_change', id);\r\n\r\n    //this._selectTab(id, mediaSizes.isMobile);\r\n    //document.body.classList.toggle(RIGHT_COLUMN_ACTIVE_CLASSNAME, id === 2);\r\n\r\n    return animationPromise;\r\n  }\r\n  \r\n  public updateStatus() {\r\n    if(!this.myId) return Promise.resolve();\r\n    \r\n    appUsersManager.setUserStatus(this.myId, this.offline);\r\n    return apiManager.invokeApiSingle('account.updateStatus', {offline: this.offline});\r\n  }\r\n\r\n  private createNewChat() {\r\n    const chat = new Chat(this, \r\n      appChatsManager, \r\n      appDocsManager, \r\n      appInlineBotsManager, \r\n      appMessagesManager, \r\n      appPeersManager, \r\n      appPhotosManager, \r\n      appProfileManager, \r\n      appStickersManager, \r\n      appUsersManager, \r\n      appWebPagesManager, \r\n      appPollsManager, \r\n      apiManager, \r\n      appDraftsManager, \r\n      serverTimeManager, \r\n      stateStorage, \r\n      appNotificationsManager, \r\n      appEmojiManager\r\n    );\r\n\r\n    if(this.chats.length) {\r\n      chat.backgroundEl.append(this.chat.backgroundEl.lastElementChild.cloneNode(true));\r\n    }\r\n\r\n    this.chats.push(chat);\r\n  }\r\n\r\n  private spliceChats(fromIndex: number, justReturn = true, animate?: boolean, spliced?: Chat[]) {\r\n    if(fromIndex >= this.chats.length) return;\r\n\r\n    if(this.chats.length > 1 && justReturn) {\r\n      rootScope.dispatchEvent('peer_changing', this.chat);\r\n    }\r\n\r\n    if(!spliced) {\r\n      spliced = this.chats.splice(fromIndex, this.chats.length - fromIndex);\r\n    }\r\n\r\n    // * -1 because one item is being sliced when closing the chat by calling .removeByType\r\n    for(let i = 0; i < spliced.length - 1; ++i) {\r\n      appNavigationController.removeByType('chat', true);\r\n    }\r\n\r\n    // * fix middle chat z-index on animation\r\n    if(spliced.length > 1) {\r\n      spliced.slice(0, -1).forEach(chat => {\r\n        chat.container.remove();\r\n      });\r\n    }\r\n\r\n    this.chatsSelectTab(this.chat.container, animate);\r\n\r\n    if(justReturn) {\r\n      rootScope.dispatchEvent('peer_changed', this.chat.peerId);\r\n\r\n      const searchTab = appSidebarRight.getTab(AppPrivateSearchTab);\r\n      if(searchTab) {\r\n        searchTab.close();\r\n      }\r\n  \r\n      const isSet = appSidebarRight.sharedMediaTab.setPeer(this.chat.peerId, this.chat.threadId);\r\n      if(isSet) {\r\n        appSidebarRight.sharedMediaTab.loadSidebarMedia(true);\r\n        appSidebarRight.sharedMediaTab.fillProfileElements();\r\n      }\r\n      \r\n      /* setTimeout(() => {\r\n        appSidebarRight.sharedMediaTab.loadSidebarMedia(false);\r\n      }); */\r\n    }\r\n\r\n    spliced.forEach(chat => {\r\n      chat.beforeDestroy();\r\n    });\r\n    \r\n    setTimeout(() => {\r\n      //chat.setPeer(0);\r\n      spliced.forEach(chat => {\r\n        chat.destroy();\r\n      });\r\n    }, 250 + 100);\r\n  }\r\n\r\n  public setPeer(peerId: number, lastMsgId?: number, animate?: boolean): boolean {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    const chat = this.chat;\r\n    const chatIndex = this.chats.indexOf(chat);\r\n\r\n    if(!peerId) {\r\n      if(chatIndex > 0) {\r\n        this.spliceChats(chatIndex, undefined, animate);\r\n        return;\r\n      } else if(mediaSizes.activeScreen === ScreenSize.medium) { // * floating sidebar case\r\n        this.selectTab(+!this.tabId, animate);\r\n        return;\r\n      }\r\n    } else if(chatIndex > 0 && chat.peerId && chat.peerId !== peerId) {\r\n      // const firstChat = this.chats[0];\r\n      // if(firstChat.peerId !== chat.peerId) {\r\n        /* // * slice idx > 0, set background and slice first, so new one will be the first\r\n        const spliced = this.chats.splice(1, this.chats.length - 1);\r\n        this.createNewChat();\r\n        this.chats.splice(0, 1); */\r\n        const spliced = this.chats.splice(1, this.chats.length - 1);\r\n        if(this.chat.peerId === peerId) {\r\n          this.spliceChats(0, true, true, spliced);\r\n          return;\r\n        } else {\r\n          const ret = this.setPeer(peerId, lastMsgId);\r\n          this.spliceChats(0, false, false, spliced);\r\n          return ret;\r\n        }\r\n      // } else {\r\n      //   this.spliceChats(1, false, animate);\r\n      // }\r\n\r\n      //return ret;\r\n    }\r\n\r\n    // * don't reset peer if returning\r\n    if(peerId === chat.peerId && mediaSizes.activeScreen <= ScreenSize.medium && document.body.classList.contains(LEFT_COLUMN_ACTIVE_CLASSNAME)) {\r\n      this.selectTab(1, animate);\r\n      return false;\r\n    }\r\n\r\n    if(peerId || mediaSizes.activeScreen !== ScreenSize.mobile) {\r\n      const result = chat.setPeer(peerId, lastMsgId);\r\n\r\n      // * wait for cached render\r\n      const promise = result?.cached ? result.promise : Promise.resolve();\r\n      if(peerId) {\r\n        promise.then(() => {\r\n          //window.requestAnimationFrame(() => {\r\n          setTimeout(() => { // * setTimeout is better here\r\n            setTimeout(() => {\r\n              this.chatsSelectTab(this.chat.container);\r\n            }, 0);\r\n            this.selectTab(1, animate);\r\n          }, 0);\r\n        });\r\n      }\r\n    }\r\n\r\n    if(!peerId) {\r\n      this.selectTab(0, animate);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public setInnerPeer(peerId: number, lastMsgId?: number, type: ChatType = 'chat', threadId?: number) {\r\n    // * prevent opening already opened peer\r\n    const existingIndex = this.chats.findIndex(chat => chat.peerId === peerId && chat.type === type);\r\n    if(existingIndex !== -1) {\r\n      this.spliceChats(existingIndex + 1);\r\n      return this.setPeer(peerId, lastMsgId);\r\n    }\r\n\r\n    const chat = this.chat;\r\n    if(!chat.init) { // * use first not inited chat\r\n      this.createNewChat();\r\n    }\r\n\r\n    if(type) {\r\n      this.chat.setType(type);\r\n\r\n      if(threadId) {\r\n        this.chat.threadId = threadId;\r\n      }\r\n    }\r\n\r\n    //this.chatsSelectTab(this.chat.container);\r\n\r\n    return this.setPeer(peerId, lastMsgId);\r\n  }\r\n\r\n  public openScheduled(peerId: number) {\r\n    this.setInnerPeer(peerId, undefined, 'scheduled');\r\n  }\r\n\r\n  private getTypingElement(action: SendMessageAction) {\r\n    const el = document.createElement('span');\r\n    el.classList.add('peer-typing');\r\n    el.dataset.action = action._;\r\n    switch(action._) {\r\n      case 'sendMessageTypingAction': {\r\n      //default: {\r\n        const c = 'peer-typing-text';\r\n        el.classList.add(c);\r\n        for(let i = 0; i < 3; ++i) {\r\n          const dot = document.createElement('span');\r\n          dot.className = c + '-dot';\r\n          el.append(dot);\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'sendMessageUploadAudioAction':\r\n      case 'sendMessageUploadDocumentAction':\r\n      case 'sendMessageUploadRoundAction':\r\n      case 'sendMessageUploadVideoAction':\r\n      case 'sendMessageUploadPhotoAction': {\r\n        const c = 'peer-typing-upload';\r\n        el.classList.add(c);\r\n        /* const trail = document.createElement('span');\r\n        trail.className = c + '-trail';\r\n        el.append(trail); */\r\n        break;\r\n      }\r\n\r\n      case 'sendMessageRecordAudioAction':\r\n      case 'sendMessageRecordRoundAction':\r\n      case 'sendMessageRecordVideoAction': {\r\n        const c = 'peer-typing-record';\r\n        el.classList.add(c);\r\n        break;\r\n      }\r\n    }\r\n\r\n    return el;\r\n  }\r\n\r\n  public getPeerTyping(peerId: number, container?: HTMLElement) {\r\n    if(!appUsersManager.isBot(peerId)) {\r\n      const typings = appProfileManager.getPeerTypings(peerId);\r\n      if(!typings || !typings.length) {\r\n        return;\r\n      }\r\n\r\n      const typing = typings[0];\r\n\r\n      const langPackKeys: {\r\n        [peerType in 'private' | 'chat' | 'multi']?: Partial<{[action in SendMessageAction['_']]: LangPackKey}>\r\n      } = {\r\n        private: {\r\n          'sendMessageTypingAction': 'Peer.Activity.User.TypingText',\r\n          'sendMessageUploadAudioAction': 'Peer.Activity.User.SendingFile',\r\n          'sendMessageUploadDocumentAction': 'Peer.Activity.User.SendingFile',\r\n          'sendMessageUploadPhotoAction': 'Peer.Activity.User.SendingPhoto',\r\n          'sendMessageUploadVideoAction': 'Peer.Activity.User.SendingVideo',\r\n          'sendMessageUploadRoundAction': 'Peer.Activity.User.SendingVideo',\r\n          'sendMessageRecordVideoAction': 'Peer.Activity.User.RecordingVideo',\r\n          'sendMessageRecordAudioAction': 'Peer.Activity.User.RecordingAudio',\r\n          'sendMessageRecordRoundAction': 'Peer.Activity.User.RecordingVideo',\r\n          'sendMessageGamePlayAction': 'Peer.Activity.User.PlayingGame'\r\n        },\r\n        chat: {\r\n          'sendMessageTypingAction': 'Peer.Activity.Chat.TypingText',\r\n          'sendMessageUploadAudioAction': 'Peer.Activity.Chat.SendingFile',\r\n          'sendMessageUploadDocumentAction': 'Peer.Activity.Chat.SendingFile',\r\n          'sendMessageUploadPhotoAction': 'Peer.Activity.Chat.SendingPhoto',\r\n          'sendMessageUploadVideoAction': 'Peer.Activity.Chat.SendingVideo',\r\n          'sendMessageUploadRoundAction': 'Peer.Activity.Chat.SendingVideo',\r\n          'sendMessageRecordVideoAction': 'Peer.Activity.Chat.RecordingVideo',\r\n          'sendMessageRecordAudioAction': 'Peer.Activity.Chat.RecordingAudio',\r\n          'sendMessageRecordRoundAction': 'Peer.Activity.Chat.RecordingVideo',\r\n          'sendMessageGamePlayAction': 'Peer.Activity.Chat.PlayingGame'\r\n        },\r\n        multi: {\r\n          'sendMessageTypingAction': 'Peer.Activity.Chat.Multi.TypingText1',\r\n          'sendMessageUploadAudioAction': 'Peer.Activity.Chat.Multi.SendingFile1',\r\n          'sendMessageUploadDocumentAction': 'Peer.Activity.Chat.Multi.SendingFile1',\r\n          'sendMessageUploadPhotoAction': 'Peer.Activity.Chat.Multi.SendingPhoto1',\r\n          'sendMessageUploadVideoAction': 'Peer.Activity.Chat.Multi.SendingVideo1',\r\n          'sendMessageUploadRoundAction': 'Peer.Activity.Chat.Multi.SendingVideo1',\r\n          'sendMessageRecordVideoAction': 'Peer.Activity.Chat.Multi.RecordingVideo1',\r\n          'sendMessageRecordAudioAction': 'Peer.Activity.Chat.Multi.RecordingAudio1',\r\n          'sendMessageRecordRoundAction': 'Peer.Activity.Chat.Multi.RecordingVideo1',\r\n          'sendMessageGamePlayAction': 'Peer.Activity.Chat.Multi.PlayingGame1'\r\n        }\r\n      };\r\n\r\n      const mapa = peerId > 0 ? langPackKeys.private : (typings.length > 1 ? langPackKeys.multi : langPackKeys.chat);\r\n      let action = typing.action;\r\n\r\n      if(typings.length > 1) {\r\n        const s: any = {};\r\n        typings.forEach(typing => {\r\n          const type = typing.action._;\r\n          if(s[type] === undefined) s[type] = 0;\r\n          ++s[type];\r\n        });\r\n\r\n        if(Object.keys(s).length > 1) {\r\n          action = {\r\n            _: 'sendMessageTypingAction'\r\n          };\r\n        }\r\n      }\r\n\r\n      const langPackKey = mapa[action._];\r\n      if(!langPackKey) {\r\n        return;\r\n      }\r\n\r\n      if(!container) {\r\n        container = document.createElement('span');\r\n        container.classList.add('online', 'peer-typing-container');\r\n      }\r\n\r\n      let typingElement = container.firstElementChild as HTMLElement;\r\n      if(!typingElement) {\r\n        typingElement = this.getTypingElement(action);\r\n        container.prepend(typingElement);\r\n      } else {\r\n        if(typingElement.dataset.action !== action._) {\r\n          typingElement.replaceWith(this.getTypingElement(action));\r\n        }\r\n      }\r\n\r\n      let args: any[];\r\n      if(peerId < 0) {\r\n        args = [\r\n          new PeerTitle({peerId: typing.userId, onlyFirstName: true}).element,\r\n          typings.length - 1\r\n        ];\r\n      }\r\n      const descriptionElement = i18n(langPackKey, args);\r\n      descriptionElement.classList.add('peer-typing-description');\r\n\r\n      if(container.childElementCount > 1) container.lastElementChild.replaceWith(descriptionElement);\r\n      else container.append(descriptionElement);\r\n      return container;\r\n    }\r\n  }\r\n\r\n  public async getPeerStatus(peerId: number) {\r\n    let subtitle: HTMLElement;\r\n    if(!peerId) return '';\r\n\r\n    if(peerId < 0) { // not human\r\n      let span = this.getPeerTyping(peerId);\r\n      if(span) {\r\n        return span;\r\n      }\r\n\r\n      const chatInfo = await appProfileManager.getChatFull(-peerId) as any;\r\n      this.chat.log('chatInfo res:', chatInfo);\r\n\r\n      const participants_count = chatInfo.participants_count || (chatInfo.participants && chatInfo.participants.participants && chatInfo.participants.participants.length) || 1;\r\n      //if(participants_count) {\r\n        subtitle = appProfileManager.getChatMembersString(-peerId);\r\n\r\n        if(participants_count < 2) return subtitle;\r\n        /* const onlines = await appChatsManager.getOnlines(chat.id);\r\n        if(onlines > 1) {\r\n          subtitle += ', ' + numberThousandSplitter(onlines) + ' online';\r\n        } */\r\n  \r\n        return subtitle;\r\n      //}\r\n    } else { // user\r\n      const user = appUsersManager.getUser(peerId);\r\n      \r\n      if(rootScope.myId === peerId) {\r\n        return '';\r\n      } else if(user) {\r\n        subtitle = appUsersManager.getUserStatusString(user.id);\r\n\r\n        if(!appUsersManager.isBot(peerId)) {\r\n          let span = this.getPeerTyping(peerId);\r\n          if(!span && user.status?._ === 'userStatusOnline') {\r\n            span = document.createElement('span');\r\n            span.classList.add('online');\r\n            span.append(subtitle);\r\n          }\r\n\r\n          if(span) {\r\n            return span;\r\n          }\r\n        }\r\n        \r\n        return subtitle;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setPeerStatus(peerId: number, element: HTMLElement, needClear: boolean, useWhitespace: boolean, middleware: () => boolean) {\r\n    if(needClear) {\r\n      element.innerHTML = useWhitespace ? '‎' : ''; // ! HERE U CAN FIND WHITESPACE\r\n    }\r\n\r\n    // * good good good\r\n    const typingContainer = element.querySelector('.peer-typing-container') as HTMLElement;\r\n    if(typingContainer && this.getPeerTyping(peerId, typingContainer)) {\r\n      return;\r\n    }\r\n\r\n    this.getPeerStatus(peerId).then((subtitle) => {\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n\r\n      replaceContent(element, subtitle || (useWhitespace ? '‎' : ''));\r\n    });\r\n  }\r\n}\r\n\r\nconst appImManager = new AppImManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appImManager = appImManager);\r\nexport default appImManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { deferredPromise } from \"../helpers/cancellablePromise\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport { isMobileSafari, isSafari } from \"../helpers/userAgent\";\r\nimport appDocsManager, { MyDocument } from \"../lib/appManagers/appDocsManager\";\r\nimport appImManager from \"../lib/appManagers/appImManager\";\r\nimport appMessagesManager from \"../lib/appManagers/appMessagesManager\";\r\nimport appPhotosManager from \"../lib/appManagers/appPhotosManager\";\r\nimport { logger } from \"../lib/logger\";\r\nimport VideoPlayer from \"../lib/mediaPlayer\";\r\nimport { RichTextProcessor } from \"../lib/richtextprocessor\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport animationIntersector from \"./animationIntersector\";\r\nimport appMediaPlaybackController from \"./appMediaPlaybackController\";\r\nimport AvatarElement from \"./avatar\";\r\nimport ButtonIcon from \"./buttonIcon\";\r\nimport { ButtonMenuItemOptions } from \"./buttonMenu\";\r\nimport ButtonMenuToggle from \"./buttonMenuToggle\";\r\nimport { LazyLoadQueueBase } from \"./lazyLoadQueue\";\r\nimport PopupForward from \"./popups/forward\";\r\nimport ProgressivePreloader from \"./preloader\";\r\nimport Scrollable from \"./scrollable\";\r\nimport appSidebarRight, { AppSidebarRight } from \"./sidebarRight\";\r\nimport SwipeHandler from \"./swipeHandler\";\r\nimport { months, ONE_DAY } from \"../helpers/date\";\r\nimport { SearchSuperContext } from \"./appSearchSuper.\";\r\nimport DEBUG from \"../config/debug\";\r\nimport appNavigationController from \"./appNavigationController\";\r\nimport { Message } from \"../layer\";\r\nimport { forEachReverse } from \"../helpers/array\";\r\nimport AppSharedMediaTab from \"./sidebarRight/tabs/sharedMedia\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport renderImageFromUrl from \"../helpers/dom/renderImageFromUrl\";\r\nimport findUpAsChild from \"../helpers/dom/findUpAsChild\";\r\nimport getVisibleRect from \"../helpers/dom/getVisibleRect\";\r\nimport appDownloadManager from \"../lib/appManagers/appDownloadManager\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport fillPropertyValue from \"../helpers/fillPropertyValue\";\r\nimport generatePathData from \"../helpers/generatePathData\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport PeerTitle from \"./peerTitle\";\r\n\r\n// TODO: масштабирование картинок (не SVG) при ресайзе, и правильный возврат на исходную позицию\r\n// TODO: картинки \"обрезаются\" если возвращаются или появляются с места, где есть их перекрытие (топбар, поле ввода)\r\n// TODO: видео в мобильной вёрстке, если показываются элементы управления: если свайпнуть в сторону, то элементы вернутся на место, т.е. прыгнут - это не ок, надо бы замаскировать\r\n\r\nconst MEDIA_VIEWER_CLASSNAME = 'media-viewer';\r\n\r\nclass AppMediaViewerBase<ContentAdditionType extends string, ButtonsAdditionType extends string, TargetType extends object> {\r\n  public wholeDiv: HTMLElement;\r\n  protected overlaysDiv: HTMLElement;\r\n  protected author: {[k in 'container' | 'avatarEl' | 'nameEl' | 'date']: HTMLElement} = {} as any;\r\n  protected content: {[k in 'main' | 'container' | 'media' | 'mover' | ContentAdditionType]: HTMLElement} = {} as any;\r\n  public buttons: {[k in 'download' | 'close' | 'prev' | 'next' | 'mobile-close' | ButtonsAdditionType]: HTMLElement} = {} as any;\r\n  \r\n  protected tempId = 0;\r\n  protected preloader: ProgressivePreloader = null;\r\n  protected preloaderStreamable: ProgressivePreloader = null;\r\n\r\n  protected lastTarget: HTMLElement = null;\r\n  protected prevTargets: TargetType[] = [];\r\n  protected nextTargets: TargetType[] = [];\r\n  //protected targetContainer: HTMLElement = null;\r\n  //protected loadMore: () => void = null;\r\n\r\n  public log: ReturnType<typeof logger>; \r\n\r\n  protected isFirstOpen = true;\r\n  protected loadMediaPromiseUp: Promise<void> = null;\r\n  protected loadMediaPromiseDown: Promise<void> = null;\r\n  protected loadedAllMediaUp = false;\r\n  protected loadedAllMediaDown = false;\r\n\r\n  protected reverse = false; // reverse means next = higher msgid\r\n  protected needLoadMore = true;\r\n\r\n  protected pageEl = document.getElementById('page-chats') as HTMLDivElement;\r\n\r\n  protected setMoverPromise: Promise<void>;\r\n  protected setMoverAnimationPromise: Promise<void>;\r\n\r\n  protected lazyLoadQueue: LazyLoadQueueBase;\r\n\r\n  protected highlightSwitchersTimeout: number;\r\n\r\n  protected onDownloadClick: (e: MouseEvent) => void;\r\n  protected onPrevClick: (target: TargetType) => void;\r\n  protected onNextClick: (target: TargetType) => void;\r\n  protected loadMoreMedia: (older: boolean) => Promise<void>;\r\n\r\n  protected videoPlayer: VideoPlayer;\r\n  \r\n  constructor(topButtons: Array<keyof AppMediaViewerBase<ContentAdditionType, ButtonsAdditionType, TargetType>['buttons']>) {\r\n    this.log = logger('AMV');\r\n    this.preloader = new ProgressivePreloader();\r\n    this.preloaderStreamable = new ProgressivePreloader({\r\n      cancelable: false,\r\n      streamable: true\r\n    });\r\n    this.preloader.construct();\r\n    this.preloaderStreamable.construct();\r\n    this.lazyLoadQueue = new LazyLoadQueueBase();\r\n\r\n    this.wholeDiv = document.createElement('div');\r\n    this.wholeDiv.classList.add(MEDIA_VIEWER_CLASSNAME + '-whole');\r\n\r\n    this.overlaysDiv = document.createElement('div');\r\n    this.overlaysDiv.classList.add('overlays');\r\n\r\n    const mainDiv = document.createElement('div');\r\n    mainDiv.classList.add(MEDIA_VIEWER_CLASSNAME);\r\n\r\n    // * author\r\n    this.author.container = document.createElement('div');\r\n    this.author.container.classList.add(MEDIA_VIEWER_CLASSNAME + '-author', 'no-select');\r\n\r\n    this.author.avatarEl = new AvatarElement();\r\n    this.author.avatarEl.classList.add(MEDIA_VIEWER_CLASSNAME + '-userpic', 'avatar-44');\r\n\r\n    this.author.nameEl = document.createElement('div');\r\n    this.author.nameEl.classList.add(MEDIA_VIEWER_CLASSNAME + '-name');\r\n\r\n    this.author.date = document.createElement('div');\r\n    this.author.date.classList.add(MEDIA_VIEWER_CLASSNAME + '-date');\r\n\r\n    this.author.container.append(this.author.avatarEl, this.author.nameEl, this.author.date);\r\n\r\n    // * buttons\r\n    const buttonsDiv = document.createElement('div');\r\n    buttonsDiv.classList.add(MEDIA_VIEWER_CLASSNAME + '-buttons');\r\n\r\n    topButtons.concat(['download', 'close']).forEach(name => {\r\n      const button = ButtonIcon(name, {noRipple: name === 'close' || undefined});\r\n      this.buttons[name] = button;\r\n      buttonsDiv.append(button);\r\n    });\r\n\r\n    // * content\r\n    this.content.main = document.createElement('div');\r\n    this.content.main.classList.add(MEDIA_VIEWER_CLASSNAME + '-content');\r\n\r\n    this.content.container = document.createElement('div');\r\n    this.content.container.classList.add(MEDIA_VIEWER_CLASSNAME + '-container');\r\n\r\n    this.content.media = document.createElement('div');\r\n    this.content.media.classList.add(MEDIA_VIEWER_CLASSNAME + '-media');\r\n\r\n    this.content.container.append(this.content.media);\r\n\r\n    this.content.main.append(this.content.container);\r\n    mainDiv.append(this.author.container, buttonsDiv, this.content.main);\r\n    this.overlaysDiv.append(mainDiv);\r\n    // * overlays end\r\n\r\n    this.buttons[\"mobile-close\"] = ButtonIcon('close', {onlyMobile: true});\r\n\r\n    this.buttons.prev = document.createElement('div');\r\n    this.buttons.prev.className = `${MEDIA_VIEWER_CLASSNAME}-switcher ${MEDIA_VIEWER_CLASSNAME}-switcher-left`;\r\n    this.buttons.prev.innerHTML = `<span class=\"tgico-down ${MEDIA_VIEWER_CLASSNAME}-prev-button\"></span>`;\r\n\r\n    this.buttons.next = document.createElement('div');\r\n    this.buttons.next.className = `${MEDIA_VIEWER_CLASSNAME}-switcher ${MEDIA_VIEWER_CLASSNAME}-switcher-right`;\r\n    this.buttons.next.innerHTML = `<span class=\"tgico-down ${MEDIA_VIEWER_CLASSNAME}-next-button\"></span>`;\r\n\r\n    this.wholeDiv.append(this.overlaysDiv, this.buttons['mobile-close'], this.buttons.prev, this.buttons.next);\r\n\r\n    // * constructing html end\r\n    \r\n    this.setNewMover();\r\n  }\r\n\r\n  protected setListeners() {\r\n    this.buttons.download.addEventListener('click', this.onDownloadClick);\r\n    [this.buttons.close, this.buttons[\"mobile-close\"], this.preloaderStreamable.preloader].forEach(el => {\r\n      el.addEventListener('click', this.close.bind(this));\r\n    });\r\n\r\n    this.buttons.prev.addEventListener('click', (e) => {\r\n      cancelEvent(e);\r\n      if(this.setMoverPromise) return;\r\n\r\n      const target = this.prevTargets.pop();\r\n      if(target) {\r\n        this.onPrevClick(target);\r\n      } else {\r\n        this.buttons.prev.style.display = 'none';\r\n      }\r\n    });\r\n    \r\n    this.buttons.next.addEventListener('click', (e) => {\r\n      cancelEvent(e);\r\n      if(this.setMoverPromise) return;\r\n\r\n      let target = this.nextTargets.shift();\r\n      if(target) {\r\n        this.onNextClick(target);\r\n      } else {\r\n        this.buttons.next.style.display = 'none';\r\n      }\r\n    });\r\n\r\n    this.wholeDiv.addEventListener('click', this.onClick);\r\n\r\n    if(isTouchSupported) {\r\n      const swipeHandler = new SwipeHandler({\r\n        element: this.wholeDiv, \r\n        onSwipe: (xDiff, yDiff) => {\r\n          if(VideoPlayer.isFullScreen()) {\r\n            return;\r\n          }\r\n          //console.log(xDiff, yDiff);\r\n\r\n          const percents = Math.abs(xDiff) / appPhotosManager.windowW;\r\n          if(percents > .2 || xDiff > 125) {\r\n            //console.log('will swipe', xDiff);\r\n\r\n            if(xDiff < 0) {\r\n              this.buttons.prev.click();\r\n            } else {\r\n              this.buttons.next.click();\r\n            }\r\n\r\n            return true;\r\n          }\r\n\r\n          const percentsY = Math.abs(yDiff) / appPhotosManager.windowH;\r\n          if(percentsY > .2 || yDiff > 125) {\r\n            this.buttons.close.click();\r\n            return true;\r\n          }\r\n\r\n          return false;\r\n        }, \r\n        verifyTouchTarget: (evt) => {\r\n          // * Fix for seek input\r\n          if((evt.target as HTMLElement).tagName === 'INPUT' || findUpClassName(evt.target, 'media-viewer-caption')) {\r\n            return false;\r\n          }\r\n\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected setBtnMenuToggle(buttons: ButtonMenuItemOptions[]) {\r\n    const btnMenuToggle = ButtonMenuToggle({onlyMobile: true}, 'bottom-left', buttons);\r\n    this.wholeDiv.append(btnMenuToggle);\r\n  }\r\n\r\n  public close(e?: MouseEvent) {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(this.setMoverAnimationPromise) return;\r\n\r\n    appNavigationController.removeByType('media');\r\n\r\n    this.lazyLoadQueue.clear();\r\n\r\n    const promise = this.setMoverToTarget(this.lastTarget, true).then(({onAnimationEnd}) => onAnimationEnd);\r\n\r\n    this.lastTarget = null;\r\n    this.prevTargets = [];\r\n    this.nextTargets = [];\r\n    this.loadedAllMediaUp = this.loadedAllMediaDown = false;\r\n    this.loadMediaPromiseUp = this.loadMediaPromiseDown = null;\r\n    this.setMoverPromise = null;\r\n    this.tempId = -1;\r\n\r\n    /* if(appSidebarRight.historyTabIDs.slice(-1)[0] === AppSidebarRight.SLIDERITEMSIDS.forward) {\r\n      promise.then(() => {\r\n        appSidebarRight.forwardTab.closeBtn.click();\r\n      });\r\n    } */\r\n\r\n    window.removeEventListener('keydown', this.onKeyDown);\r\n\r\n    promise.finally(() => {\r\n      this.wholeDiv.remove();\r\n      rootScope.overlayIsActive = false;\r\n      animationIntersector.checkAnimations(false);\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  onClick = (e: MouseEvent) => {\r\n    if(this.setMoverAnimationPromise) return;\r\n\r\n    const target = e.target as HTMLElement;\r\n    if(target.tagName === 'A') return;\r\n    cancelEvent(e);\r\n\r\n    if(isTouchSupported) {\r\n      if(this.highlightSwitchersTimeout) {\r\n        clearTimeout(this.highlightSwitchersTimeout);\r\n      } else {\r\n        this.wholeDiv.classList.add('highlight-switchers');\r\n      }\r\n\r\n      this.highlightSwitchersTimeout = window.setTimeout(() => {\r\n        this.wholeDiv.classList.remove('highlight-switchers');\r\n        this.highlightSwitchersTimeout = 0;\r\n      }, 3e3);\r\n      \r\n      return;\r\n    }\r\n\r\n    let mover: HTMLElement = null;\r\n    ['media-viewer-mover', 'media-viewer-buttons', 'media-viewer-author', 'media-viewer-caption'].find(s => {\r\n      try {\r\n        mover = findUpClassName(target, s);\r\n        if(mover) return true;\r\n      } catch(err) {return false;}\r\n    });\r\n\r\n    if(/* target === this.mediaViewerDiv */!mover || target.tagName === 'IMG' || target.tagName === 'image') {\r\n      this.buttons.close.click();\r\n    }\r\n  };\r\n\r\n  private onKeyDown = (e: KeyboardEvent) => {\r\n    //this.log('onKeyDown', e);\r\n    \r\n    if(e.key === 'ArrowRight') {\r\n      this.buttons.next.click();\r\n    } else if(e.key === 'ArrowLeft') {\r\n      this.buttons.prev.click();\r\n    }\r\n  };\r\n\r\n  protected async setMoverToTarget(target: HTMLElement, closing = false, fromRight = 0) {\r\n    if(this.videoPlayer) { // there could be a better place for it\r\n      this.videoPlayer.removeListeners();\r\n      this.videoPlayer = undefined;\r\n    }\r\n\r\n    const mover = this.content.mover;\r\n\r\n    if(!closing) {\r\n      mover.innerHTML = '';\r\n      //mover.append(this.buttons.prev, this.buttons.next);\r\n    }\r\n    \r\n    this.removeCenterFromMover(mover);\r\n\r\n    const wasActive = fromRight !== 0;\r\n\r\n    const delay = rootScope.settings.animationsEnabled ? (wasActive ? 350 : 200) : 0;\r\n    //let delay = wasActive ? 350 : 10000;\r\n\r\n    /* if(wasActive) {\r\n      this.moveTheMover(mover);\r\n      mover = this.setNewMover();\r\n    } */\r\n\r\n    /* if(DEBUG) {\r\n      this.log('setMoverToTarget', target, closing, wasActive, fromRight);\r\n    } */\r\n\r\n    let realParent: HTMLElement;\r\n\r\n    let rect: DOMRect;\r\n    if(target) {\r\n      if(target instanceof AvatarElement || target.classList.contains('grid-item')) {\r\n        realParent = target;\r\n        rect = target.getBoundingClientRect();\r\n      } else if(target instanceof SVGImageElement || target.parentElement instanceof SVGForeignObjectElement) {\r\n        realParent = findUpClassName(target, 'attachment');\r\n        rect = realParent.getBoundingClientRect();\r\n      } else if(target.classList.contains('profile-avatars-avatar')) {\r\n        realParent = findUpClassName(target, 'profile-avatars-container');\r\n        rect = realParent.getBoundingClientRect();\r\n\r\n        // * if not active avatar\r\n        if(closing && target.getBoundingClientRect().left !== rect.left) {\r\n          target = realParent = rect = undefined;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!target) {\r\n      target = this.content.media;\r\n    }\r\n\r\n    if(!rect) {\r\n      realParent = target.parentElement as HTMLElement;\r\n      rect = target.getBoundingClientRect();\r\n    }\r\n\r\n    let needOpacity = false;\r\n    if(target !== this.content.media && !target.classList.contains('profile-avatars-avatar')) {\r\n      const overflowElement = findUpClassName(realParent, 'scrollable');\r\n      const visibleRect = getVisibleRect(realParent, overflowElement);\r\n\r\n      if(closing && (!visibleRect || visibleRect.overflow.vertical === 2 || visibleRect.overflow.horizontal === 2)) {\r\n        target = this.content.media;\r\n        realParent = target.parentElement as HTMLElement;\r\n        rect = target.getBoundingClientRect();\r\n      } else if(visibleRect && (visibleRect.overflow.vertical === 1 || visibleRect.overflow.horizontal === 1)) {\r\n        needOpacity = true;\r\n      }\r\n    }\r\n\r\n    const containerRect = this.content.media.getBoundingClientRect();\r\n    \r\n    let transform = '';\r\n    let left: number;\r\n    let top: number;\r\n\r\n    if(wasActive) {\r\n      left = fromRight === 1 ? appPhotosManager.windowW : -containerRect.width;\r\n      top = containerRect.top;\r\n    } else {\r\n      left = rect.left;\r\n      top = rect.top;\r\n    }\r\n\r\n    transform += `translate3d(${left}px,${top}px,0) `;\r\n\r\n    /* if(wasActive) {\r\n      left = fromRight === 1 ? appPhotosManager.windowW / 2 : -(containerRect.width + appPhotosManager.windowW / 2);\r\n      transform += `translate(${left}px,-50%) `;\r\n    } else {\r\n      left = rect.left - (appPhotosManager.windowW / 2);\r\n      top = rect.top - (appPhotosManager.windowH / 2);\r\n      transform += `translate(${left}px,${top}px) `;\r\n    } */\r\n\r\n    let aspecter: HTMLDivElement;\r\n    if(target instanceof HTMLImageElement || target instanceof HTMLVideoElement || target.tagName === 'DIV') {\r\n      if(mover.firstElementChild && mover.firstElementChild.classList.contains('media-viewer-aspecter')) {\r\n        aspecter = mover.firstElementChild as HTMLDivElement;\r\n\r\n        const player = aspecter.querySelector('.ckin__player');\r\n        if(player) {\r\n          const video = player.firstElementChild as HTMLVideoElement;\r\n          aspecter.append(video);\r\n          player.remove();\r\n        }\r\n\r\n        if(!aspecter.style.cssText) { // всё из-за видео, элементы управления скейлятся, так бы можно было этого не делать\r\n          mover.classList.remove('active');\r\n          this.setFullAspect(aspecter, containerRect, rect);\r\n          void mover.offsetLeft; // reflow\r\n          mover.classList.add('active');\r\n        }\r\n      } else {\r\n        aspecter = document.createElement('div');\r\n        aspecter.classList.add('media-viewer-aspecter'/* , 'disable-hover' */);\r\n        mover.prepend(aspecter);\r\n      }\r\n      \r\n      aspecter.style.cssText = `width: ${rect.width}px; height: ${rect.height}px; transform: scale3d(${containerRect.width / rect.width}, ${containerRect.height / rect.height}, 1);`;\r\n    }\r\n\r\n    mover.style.width = containerRect.width + 'px';\r\n    mover.style.height = containerRect.height + 'px';\r\n\r\n    const scaleX = rect.width / containerRect.width;\r\n    const scaleY = rect.height / containerRect.height;\r\n    if(!wasActive) {\r\n      transform += `scale3d(${scaleX},${scaleY},1) `;\r\n    }\r\n\r\n    let borderRadius = window.getComputedStyle(realParent).getPropertyValue('border-radius');\r\n    const brSplitted = fillPropertyValue(borderRadius) as string[];\r\n    borderRadius = brSplitted.map(r => (parseInt(r) / scaleX) + 'px').join(' ');\r\n    if(!wasActive) {\r\n      mover.style.borderRadius = borderRadius;\r\n    }\r\n    //let borderRadius = '0px 0px 0px 0px';\r\n\r\n    mover.style.transform = transform;\r\n\r\n    needOpacity && (mover.style.opacity = '0'/* !closing ? '0' : '' */);\r\n\r\n    /* if(wasActive) {\r\n      this.log('setMoverToTarget', mover.style.transform);\r\n    } */\r\n\r\n    let path: SVGPathElement;\r\n    const isOut = target.classList.contains('is-out');\r\n\r\n    const deferred = this.setMoverAnimationPromise = deferredPromise<void>();\r\n    const ret = {onAnimationEnd: deferred};\r\n\r\n    this.setMoverAnimationPromise.then(() => {\r\n      this.setMoverAnimationPromise = null;\r\n    });\r\n\r\n    if(!closing) {\r\n      let mediaElement: HTMLImageElement | HTMLVideoElement;\r\n      let src: string;\r\n\r\n      if(target.tagName === 'DIV' || target.tagName === 'AVATAR-ELEMENT') { // useContainerAsTarget\r\n        if(target.firstElementChild) {\r\n          mediaElement = new Image();\r\n          src = (target.firstElementChild as HTMLImageElement).src;\r\n          mover.append(mediaElement);\r\n        }\r\n        /* mediaElement = new Image();\r\n        src = target.style.backgroundImage.slice(5, -2); */\r\n        \r\n      } else if(target instanceof HTMLImageElement) {\r\n        mediaElement = new Image();\r\n        src = target.src;\r\n      } else if(target instanceof HTMLVideoElement) {\r\n        const video = mediaElement = document.createElement('video');\r\n        video.src = target?.src;\r\n      } else if(target instanceof SVGSVGElement) {\r\n        const clipId = target.dataset.clipId;\r\n        const newClipId = clipId + '-mv';\r\n\r\n        const {width, height} = containerRect;\r\n\r\n        const newSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        newSvg.setAttributeNS(null, 'width', '' + width);\r\n        newSvg.setAttributeNS(null, 'height', '' + height);\r\n\r\n        // нижние два свойства для масштабирования\r\n        newSvg.setAttributeNS(null, 'viewBox', `0 0 ${width} ${height}`);\r\n        newSvg.setAttributeNS(null, 'preserveAspectRatio', 'xMidYMid meet');\r\n\r\n        newSvg.insertAdjacentHTML('beforeend', target.firstElementChild.outerHTML.replace(clipId, newClipId));\r\n        newSvg.insertAdjacentHTML('beforeend', target.lastElementChild.outerHTML.replace(clipId, newClipId));\r\n\r\n        // теперь надо выставить новую позицию для хвостика\r\n        const defs = newSvg.firstElementChild;\r\n        const use = defs.firstElementChild.firstElementChild as SVGUseElement;\r\n        if(use instanceof SVGUseElement) {\r\n          let transform = use.getAttributeNS(null, 'transform');\r\n          transform = transform.replace(/translate\\((.+?), (.+?)\\) scale\\((.+?), (.+?)\\)/, (match, x, y, sX, sY) => {\r\n            x = +x;\r\n            if(x !== 2) {\r\n              x = width - (2 / scaleX);\r\n            } else {\r\n              x = 2 / scaleX;\r\n            }\r\n            \r\n            y = height;\r\n  \r\n            return `translate(${x}, ${y}) scale(${+sX / scaleX}, ${+sY / scaleY})`;\r\n          });\r\n          use.setAttributeNS(null, 'transform', transform);\r\n  \r\n          // и новый RECT\r\n          path = defs.firstElementChild.lastElementChild as SVGPathElement;\r\n\r\n          // код ниже нужен только чтобы скрыть моргание до момента как сработает таймаут\r\n          let d: string;\r\n          const br: [number, number, number, number] = borderRadius.split(' ').map(v => parseInt(v)) as any;\r\n          if(isOut) d = generatePathData(0, 0, width - 9 / scaleX, height, ...br);\r\n          else d = generatePathData(9 / scaleX, 0, width - 9 / scaleX, height, ...br);\r\n          path.setAttributeNS(null, 'd', d);\r\n        }\r\n\r\n        const foreignObject = newSvg.lastElementChild;\r\n        foreignObject.setAttributeNS(null, 'width', '' + containerRect.width);\r\n        foreignObject.setAttributeNS(null, 'height', '' + containerRect.height);\r\n        \r\n        mover.prepend(newSvg);\r\n      }\r\n\r\n      if(aspecter) {\r\n        aspecter.style.borderRadius = borderRadius;\r\n\r\n        if(mediaElement) {\r\n          aspecter.append(mediaElement);\r\n        }\r\n      }\r\n\r\n      mediaElement = mover.querySelector('video, img');\r\n      if(mediaElement instanceof HTMLImageElement) {\r\n        mediaElement.classList.add('thumbnail');\r\n        if(!aspecter) {\r\n          mediaElement.style.width = containerRect.width + 'px';\r\n          mediaElement.style.height = containerRect.height + 'px';\r\n        }\r\n\r\n        if(src) {\r\n          await new Promise((resolve, reject) => {\r\n            mediaElement.addEventListener('load', resolve);\r\n  \r\n            if(src) {\r\n              mediaElement.src = src;\r\n            }\r\n          });\r\n        }\r\n      }/*  else if(mediaElement instanceof HTMLVideoElement && mediaElement.firstElementChild && ((mediaElement.firstElementChild as HTMLSourceElement).src || src)) {\r\n        await new Promise((resolve, reject) => {\r\n          mediaElement.addEventListener('loadeddata', resolve);\r\n\r\n          if(src) {\r\n            (mediaElement.firstElementChild as HTMLSourceElement).src = src;\r\n          }\r\n        });\r\n      } */\r\n  \r\n      mover.style.display = '';\r\n\r\n      window.requestAnimationFrame(() => {\r\n        mover.classList.add(wasActive ? 'moving' : 'active');\r\n      });\r\n    } else {\r\n      /* if(mover.classList.contains('center')) {\r\n        mover.classList.remove('center');\r\n        void mover.offsetLeft; // reflow\r\n      } */\r\n      \r\n      if(target instanceof SVGSVGElement) {\r\n        path = mover.querySelector('path');\r\n\r\n        if(path) {\r\n          this.sizeTailPath(path, containerRect, scaleX, delay, false, isOut, borderRadius);\r\n        }\r\n      }\r\n\r\n      if(target.classList.contains('media-viewer-media')) {\r\n        mover.classList.add('hiding');\r\n      }\r\n\r\n      setTimeout(() => {\r\n        this.wholeDiv.classList.remove('active');\r\n      }, 0);\r\n\r\n      setTimeout(() => {\r\n        mover.style.borderRadius = borderRadius;\r\n\r\n        if(mover.firstElementChild) {\r\n          (mover.firstElementChild as HTMLElement).style.borderRadius = borderRadius;\r\n        }\r\n      }, delay / 2);\r\n\r\n      setTimeout(() => {\r\n        mover.innerHTML = '';\r\n        mover.classList.remove('moving', 'active', 'hiding');\r\n        mover.style.cssText = 'display: none;';\r\n\r\n        deferred.resolve();\r\n      }, delay);\r\n\r\n      return ret;\r\n    }\r\n\r\n    mover.classList.toggle('opening', !closing);\r\n\r\n    //await new Promise((resolve) => setTimeout(resolve, 0));\r\n    //await new Promise((resolve) => window.requestAnimationFrame(resolve));\r\n    // * одного RAF'а недостаточно, иногда анимация с одним не срабатывает (преимущественно на мобильных)\r\n    await new Promise((resolve) => window.requestAnimationFrame(() => window.requestAnimationFrame(resolve)));\r\n\r\n    // чтобы проверить установленную позицию - раскомментировать\r\n    // throw '';\r\n\r\n    //await new Promise((resolve) => setTimeout(resolve, 5e3));\r\n\r\n    mover.style.transform = `translate3d(${containerRect.left}px,${containerRect.top}px,0) scale3d(1,1,1)`;\r\n    //mover.style.transform = `translate(-50%,-50%) scale(1,1)`;\r\n    needOpacity && (mover.style.opacity = ''/* closing ? '0' : '' */);\r\n\r\n    if(aspecter) {\r\n      this.setFullAspect(aspecter, containerRect, rect);\r\n    }\r\n\r\n    //throw '';\r\n\r\n    setTimeout(() => {\r\n      mover.style.borderRadius = '';\r\n\r\n      if(mover.firstElementChild) {\r\n        (mover.firstElementChild as HTMLElement).style.borderRadius = '';\r\n      }\r\n    }, 0/* delay / 2 */);\r\n\r\n    mover.dataset.timeout = '' + setTimeout(() => {\r\n      mover.classList.remove('moving');\r\n\r\n      if(aspecter) { // всё из-за видео, элементы управления скейлятся, так бы можно было этого не делать\r\n        if(mover.querySelector('video') || true) {\r\n          mover.classList.remove('active');\r\n          aspecter.style.cssText = '';\r\n          void mover.offsetLeft; // reflow\r\n        }\r\n        \r\n        //aspecter.classList.remove('disable-hover');\r\n      }\r\n\r\n      // эти строки нужны для установки центральной позиции, в случае ресайза это будет нужно\r\n      mover.classList.add('center', 'no-transition');\r\n      /* mover.style.left = mover.style.top = '50%';\r\n      mover.style.transform = 'translate(-50%, -50%)';\r\n      void mover.offsetLeft; // reflow */\r\n\r\n      // это уже нужно для будущих анимаций\r\n      mover.classList.add('active');\r\n      delete mover.dataset.timeout;\r\n\r\n      deferred.resolve();\r\n    }, delay);\r\n\r\n    if(path) {\r\n      this.sizeTailPath(path, containerRect, scaleX, delay, true, isOut, borderRadius);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  protected setFullAspect(aspecter: HTMLDivElement, containerRect: DOMRect, rect: DOMRect) {\r\n    /* let media = aspecter.firstElementChild;\r\n    let proportion: number;\r\n    if(media instanceof HTMLImageElement) {\r\n      proportion = media.naturalWidth / media.naturalHeight;\r\n    } else if(media instanceof HTMLVideoElement) {\r\n      proportion = media.videoWidth / media.videoHeight;\r\n    } */\r\n    const proportion = containerRect.width / containerRect.height;\r\n\r\n    let {width, height} = rect;\r\n    /* if(proportion === 1) {\r\n      aspecter.style.cssText = '';\r\n    } else { */\r\n      if(proportion > 0) {\r\n        width = height * proportion;\r\n      } else {\r\n        height = width * proportion;\r\n      }\r\n\r\n      //this.log('will set style aspecter:', `width: ${width}px; height: ${height}px; transform: scale(${containerRect.width / width}, ${containerRect.height / height});`);\r\n\r\n      aspecter.style.cssText = `width: ${width}px; height: ${height}px; transform: scale3d(${containerRect.width / width}, ${containerRect.height / height}, 1);`;\r\n    //}\r\n  }\r\n\r\n  protected sizeTailPath(path: SVGPathElement, rect: DOMRect, scaleX: number, delay: number, upscale: boolean, isOut: boolean, borderRadius: string) {\r\n    const start = Date.now();\r\n    const {width, height} = rect;\r\n    delay = delay / 2;\r\n\r\n    const br = borderRadius.split(' ').map(v => parseInt(v));\r\n\r\n    const step = () => {\r\n      const diff = Date.now() - start;\r\n\r\n      let progress = delay ? diff / delay : 1;\r\n      if(progress > 1) progress = 1;\r\n      if(upscale) progress = 1 - progress;\r\n\r\n      const _br: [number, number, number, number] = br.map(v => v * progress) as any;\r\n\r\n      let d: string;\r\n      if(isOut) d = generatePathData(0, 0, width - (9 / scaleX * progress), height, ..._br);\r\n      else d = generatePathData(9 / scaleX * progress, 0, width/* width - (9 / scaleX * progress) */, height, ..._br);\r\n      path.setAttributeNS(null, 'd', d);\r\n\r\n      if(diff < delay) window.requestAnimationFrame(step);\r\n    };\r\n    \r\n    //window.requestAnimationFrame(step);\r\n    step();\r\n  }\r\n\r\n  protected removeCenterFromMover(mover: HTMLElement) {\r\n    if(mover.classList.contains('center')) {\r\n      //const rect = mover.getBoundingClientRect();\r\n      const rect = this.content.media.getBoundingClientRect();\r\n      mover.style.transform = `translate3d(${rect.left}px,${rect.top}px,0)`;\r\n      mover.classList.remove('center');\r\n      void mover.offsetLeft; // reflow\r\n      mover.classList.remove('no-transition');\r\n    }\r\n  }\r\n\r\n  protected moveTheMover(mover: HTMLElement, toLeft = true) {\r\n    const windowW = appPhotosManager.windowW;\r\n\r\n    this.removeCenterFromMover(mover);\r\n\r\n    //mover.classList.remove('active');\r\n    mover.classList.add('moving');\r\n\r\n    if(mover.dataset.timeout) { // и это тоже всё из-за скейла видео, так бы это не нужно было\r\n      clearTimeout(+mover.dataset.timeout);\r\n    }\r\n\r\n    const rect = mover.getBoundingClientRect();\r\n\r\n    const newTransform = mover.style.transform.replace(/translate3d\\((.+?),/, (match, p1) => {\r\n      const x = toLeft ? -rect.width : windowW;\r\n      //const x = toLeft ? -(rect.right + (rect.width / 2)) : windowW / 2;\r\n\r\n      return match.replace(p1, x + 'px');\r\n    });\r\n\r\n    ////////this.log('set newTransform:', newTransform, mover.style.transform, toLeft);\r\n    mover.style.transform = newTransform;\r\n\r\n    setTimeout(() => {\r\n      mover.remove();\r\n    }, 350);\r\n  }\r\n\r\n  protected setNewMover() {\r\n    const newMover = document.createElement('div');\r\n    newMover.classList.add('media-viewer-mover');\r\n\r\n    if(this.content.mover) {\r\n      const oldMover = this.content.mover;\r\n      oldMover.parentElement.append(newMover);\r\n    } else {\r\n      this.wholeDiv.append(newMover);\r\n    }\r\n\r\n    return this.content.mover = newMover;\r\n  }\r\n\r\n  /* public isElementVisible(container: HTMLElement, target: HTMLElement) {\r\n    const rect = container.getBoundingClientRect();\r\n    const targetRect = target.getBoundingClientRect();\r\n\r\n    return targetRect.bottom > rect.top && targetRect.top < rect.bottom;\r\n  } */\r\n\r\n  protected updateMediaSource(target: HTMLElement, url: string, tagName: 'video' | 'img') {\r\n    //if(target instanceof SVGSVGElement) {\r\n      const el = target.tagName.toLowerCase() === tagName ? target : target.querySelector(tagName) as HTMLElement;\r\n      if(el) {\r\n        renderImageFromUrl(el, url);\r\n      }\r\n    /* } else {\r\n\r\n    } */\r\n  }\r\n\r\n  protected setAuthorInfo(fromId: number, timestamp: number) {\r\n    const date = new Date();\r\n    const time = new Date(timestamp * 1000);\r\n    const now = date.getTime() / 1000;\r\n\r\n    const timeStr = time.getHours() + ':' + ('0' + time.getMinutes()).slice(-2);\r\n    let dateStr: string;\r\n    if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\r\n      dateStr = 'Today';\r\n    } else if((now - timestamp) < (ONE_DAY * 2) && (date.getDate() - 1) === time.getDate()) { // yesterday\r\n      dateStr = 'Yesterday';\r\n    } else if(date.getFullYear() !== time.getFullYear()) { // different year\r\n      dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate() + ', ' + time.getFullYear();\r\n    } else {\r\n      dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate();\r\n    }\r\n\r\n    this.author.date.innerText = dateStr + ' at ' + timeStr;\r\n\r\n    replaceContent(this.author.nameEl, new PeerTitle({\r\n      peerId: fromId,\r\n      dialog: false,\r\n      onlyFirstName: false,\r\n      plainText: false\r\n    }).element);\r\n\r\n    let oldAvatar = this.author.avatarEl;\r\n    this.author.avatarEl = (this.author.avatarEl.cloneNode() as AvatarElement);\r\n    this.author.avatarEl.setAttribute('peer', '' + fromId);\r\n    oldAvatar.parentElement.replaceChild(this.author.avatarEl, oldAvatar);\r\n  }\r\n  \r\n  protected async _openMedia(media: any, timestamp: number, fromId: number, fromRight: number, target?: HTMLElement, reverse = false, \r\n    prevTargets: TargetType[] = [], nextTargets: TargetType[] = [], needLoadMore = true) {\r\n    if(this.setMoverPromise) return this.setMoverPromise;\r\n\r\n    /* if(DEBUG) {\r\n      this.log('openMedia:', media, fromId, prevTargets, nextTargets);\r\n    } */\r\n\r\n    this.setAuthorInfo(fromId, timestamp);\r\n    \r\n    const isVideo = (media as MyDocument).type === 'video' || (media as MyDocument).type === 'gif';\r\n\r\n    if(this.isFirstOpen) {\r\n      //this.targetContainer = targetContainer;\r\n      this.prevTargets = prevTargets;\r\n      this.nextTargets = nextTargets;\r\n      this.reverse = reverse;\r\n      this.needLoadMore = needLoadMore;\r\n      this.isFirstOpen = false;\r\n      //this.loadMore = loadMore;\r\n\r\n      /* if(appSidebarRight.historyTabIDs.slice(-1)[0] === AppSidebarRight.SLIDERITEMSIDS.forward) {\r\n        appSidebarRight.forwardTab.closeBtn.click();\r\n        await new Promise((resolve) => setTimeout(resolve, 200));\r\n      } */\r\n    }\r\n\r\n    /* if(this.nextTargets.length < 10 && this.loadMore) {\r\n      this.loadMore();\r\n    } */\r\n\r\n    //if(prevTarget && (!prevTarget.parentElement || !this.isElementVisible(this.targetContainer, prevTarget))) prevTarget = null;\r\n    //if(nextTarget && (!nextTarget.parentElement || !this.isElementVisible(this.targetContainer, nextTarget))) nextTarget = null;\r\n\r\n    this.buttons.prev.classList.toggle('hide', !this.prevTargets.length);\r\n    this.buttons.next.classList.toggle('hide', !this.nextTargets.length);\r\n    \r\n    const container = this.content.media;\r\n    const useContainerAsTarget = !target || target === container;\r\n    if(useContainerAsTarget) target = container;\r\n\r\n    this.lastTarget = target;\r\n    const tempId = ++this.tempId;\r\n\r\n    if(this.needLoadMore) {\r\n      if(this.nextTargets.length < 20) {\r\n        this.loadMoreMedia(!this.reverse);\r\n      }\r\n  \r\n      if(this.prevTargets.length < 20) {\r\n        this.loadMoreMedia(this.reverse);\r\n      }\r\n    }\r\n    \r\n    if(container.firstElementChild) {\r\n      container.innerHTML = '';\r\n    }\r\n    \r\n    // ok set\r\n\r\n    const wasActive = fromRight !== 0;\r\n    if(wasActive) {\r\n      this.moveTheMover(this.content.mover, fromRight === 1);\r\n      this.setNewMover();\r\n    } else {\r\n      window.addEventListener('keydown', this.onKeyDown);\r\n      const mainColumns = this.pageEl.querySelector('#main-columns');\r\n      this.pageEl.insertBefore(this.wholeDiv, mainColumns);\r\n      void this.wholeDiv.offsetLeft; // reflow\r\n      this.wholeDiv.classList.add('active');\r\n      rootScope.overlayIsActive = true;\r\n      animationIntersector.checkAnimations(true);\r\n\r\n      if(!isMobileSafari) {\r\n        appNavigationController.pushItem({\r\n          type: 'media',\r\n          onPop: (canAnimate) => {\r\n            if(this.setMoverAnimationPromise) {\r\n              return false;\r\n            }\r\n            \r\n            this.close();\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    ////////this.log('wasActive:', wasActive);\r\n\r\n    const mover = this.content.mover;\r\n\r\n    //const maxWidth = appPhotosManager.windowW - 16;\r\n    const maxWidth = mediaSizes.isMobile ? this.pageEl.scrollWidth : this.pageEl.scrollWidth - 16;\r\n    // TODO: const maxHeight = mediaSizes.isMobile ? appPhotosManager.windowH : appPhotosManager.windowH - 100;\r\n    const maxHeight = appPhotosManager.windowH - 100;\r\n    let thumbPromise: Promise<any> = Promise.resolve();\r\n    const size = appPhotosManager.setAttachmentSize(media, container, maxWidth, maxHeight, mediaSizes.isMobile ? false : true).photoSize;\r\n    if(useContainerAsTarget) {\r\n      const cacheContext = appDownloadManager.getCacheContext(media, size.type);\r\n      let img: HTMLImageElement;\r\n      if(cacheContext.downloaded) {\r\n        img = new Image();\r\n        img.src = cacheContext.url;\r\n      } else {\r\n        const gotThumb = appPhotosManager.getStrippedThumbIfNeeded(media, cacheContext, true);\r\n        if(gotThumb) {\r\n          thumbPromise = gotThumb.loadPromise;\r\n          img = gotThumb.image;\r\n        }\r\n      }\r\n\r\n      if(img) {\r\n        img.classList.add('thumbnail');\r\n        container.append(img);\r\n      }\r\n    }\r\n\r\n    // need after setAttachmentSize\r\n    /* if(useContainerAsTarget) {\r\n      target = target.querySelector('img, video') || target;\r\n    } */\r\n\r\n    const preloader = media.supportsStreaming ? this.preloaderStreamable : this.preloader;\r\n\r\n    let setMoverPromise: Promise<void>;\r\n    if(isVideo) {\r\n      ////////this.log('will wrap video', media, size);\r\n\r\n      // потому что для safari нужно создать элемент из event'а\r\n      const video = document.createElement('video');\r\n\r\n      const set = () => this.setMoverToTarget(target, false, fromRight).then(({onAnimationEnd}) => {\r\n      //return; // set and don't move\r\n      //if(wasActive) return;\r\n        //return;\r\n  \r\n        const div = mover.firstElementChild && mover.firstElementChild.classList.contains('media-viewer-aspecter') ? mover.firstElementChild : mover;\r\n        //const video = mover.querySelector('video') || document.createElement('video');\r\n  \r\n        const moverVideo = mover.querySelector('video');\r\n        if(moverVideo) {\r\n          moverVideo.remove();\r\n        }\r\n  \r\n        //video.src = '';\r\n  \r\n        video.setAttribute('playsinline', 'true');\r\n  \r\n        // * fix for playing video if viewer is closed (https://contest.com/javascript-web-bonus/entry1425#issue11629)\r\n        video.addEventListener('timeupdate', () => {\r\n          if(this.tempId !== tempId) {\r\n            video.pause();\r\n          }\r\n        });\r\n  \r\n        if(isSafari) {\r\n          // test stream\r\n          // video.controls = true;\r\n          video.autoplay = true;\r\n        }\r\n  \r\n        if(media.type === 'gif') {\r\n          video.muted = true;\r\n          video.autoplay = true;\r\n          video.loop = true;\r\n        }\r\n  \r\n        if(!video.parentElement) {\r\n          div.append(video);\r\n        }\r\n  \r\n        const canPlayThrough = new Promise((resolve) => {\r\n          video.addEventListener('canplay', resolve, {once: true});\r\n        });\r\n  \r\n        const createPlayer = () => {\r\n          if(media.type !== 'gif') {\r\n            video.dataset.ckin = 'default';\r\n            video.dataset.overlay = '1';\r\n  \r\n            // fix for simultaneous play\r\n            appMediaPlaybackController.pause();\r\n            appMediaPlaybackController.willBePlayedMedia = null;\r\n            \r\n            Promise.all([canPlayThrough, onAnimationEnd]).then(() => {\r\n              if(this.tempId !== tempId) {\r\n                return;\r\n              }\r\n  \r\n              const player = new VideoPlayer(video, true, media.supportsStreaming);\r\n              this.videoPlayer = player;\r\n              /* div.append(video);\r\n              mover.append(player.wrapper); */\r\n            });\r\n          }\r\n        };\r\n  \r\n        if(media.supportsStreaming) {\r\n          onAnimationEnd.then(() => {\r\n            if(video.readyState < video.HAVE_FUTURE_DATA) {\r\n              preloader.attach(mover, true);\r\n            }\r\n  \r\n            /* canPlayThrough.then(() => {\r\n              preloader.detach();\r\n            }); */\r\n          });\r\n  \r\n          const attachCanPlay = () => {\r\n            video.addEventListener('canplay', () => {\r\n              //this.log('video waited and progress loaded');\r\n              preloader.detach();\r\n              video.parentElement.classList.remove('is-buffering');\r\n            }, {once: true});\r\n          };\r\n  \r\n          video.addEventListener('waiting', (e) => {\r\n            const loading = video.networkState === video.NETWORK_LOADING;\r\n            const isntEnoughData = video.readyState < video.HAVE_FUTURE_DATA;\r\n  \r\n            //this.log('video waiting for progress', loading, isntEnoughData);\r\n            if(loading && isntEnoughData) {\r\n              attachCanPlay();\r\n  \r\n              preloader.attach(mover, true);\r\n  \r\n              // поставлю класс для плеера, чтобы убрать большую иконку пока прелоадер на месте\r\n              video.parentElement.classList.add('is-buffering');\r\n            }\r\n          });\r\n  \r\n          attachCanPlay();\r\n        }\r\n        \r\n        //if(!video.src || media.url !== video.src) {\r\n          const load = () => {\r\n            const cacheContext = appDownloadManager.getCacheContext(media);\r\n            const promise = media.supportsStreaming ? Promise.resolve() : appDocsManager.downloadDoc(media);\r\n            \r\n            if(!media.supportsStreaming) {\r\n              onAnimationEnd.then(() => {\r\n                if(!cacheContext.url) {\r\n                  preloader.attach(mover, true, promise);\r\n                }\r\n              });\r\n            }\r\n  \r\n            (promise as Promise<any>).then(async() => {\r\n              if(this.tempId !== tempId) {\r\n                this.log.warn('media viewer changed video');\r\n                return;\r\n              }\r\n  \r\n              const url = cacheContext.url;\r\n              if(target instanceof SVGSVGElement/*  && (video.parentElement || !isSafari) */) { // if video exists\r\n                //if(!video.parentElement) {\r\n                  div.firstElementChild.lastElementChild.append(video);\r\n                //}\r\n                \r\n                this.updateMediaSource(mover, url, 'video');\r\n              } else {\r\n                renderImageFromUrl(video, url);\r\n              }\r\n  \r\n              createPlayer();\r\n            });\r\n  \r\n            return promise;\r\n          };\r\n  \r\n          this.lazyLoadQueue.unshift({load});\r\n        //} else createPlayer();\r\n      });\r\n\r\n      setMoverPromise = thumbPromise.then(set);\r\n    } else {\r\n      const set = () => this.setMoverToTarget(target, false, fromRight).then(({onAnimationEnd}) => {\r\n      //return; // set and don't move\r\n      //if(wasActive) return;\r\n        //return;\r\n        \r\n        const load = () => {\r\n          const cacheContext = appDownloadManager.getCacheContext(media, size.type);\r\n          const cancellablePromise = appPhotosManager.preloadPhoto(media.id, size);\r\n  \r\n          onAnimationEnd.then(() => {\r\n            if(!cacheContext.url) {\r\n              this.preloader.attachPromise(cancellablePromise);\r\n              //this.preloader.attach(mover, true, cancellablePromise);\r\n            }\r\n          });\r\n          \r\n          Promise.all([onAnimationEnd, cancellablePromise]).then(() => {\r\n            if(this.tempId !== tempId) {\r\n              this.log.warn('media viewer changed photo');\r\n              return;\r\n            }\r\n            \r\n            ///////this.log('indochina', blob);\r\n    \r\n            const url = cacheContext.url;\r\n            if(target instanceof SVGSVGElement) {\r\n              this.updateMediaSource(target, url, 'img');\r\n              this.updateMediaSource(mover, url, 'img');\r\n  \r\n              if(mediaSizes.isMobile) {\r\n                const imgs = mover.querySelectorAll('img');\r\n                if(imgs && imgs.length) {\r\n                  imgs.forEach(img => {\r\n                    img.classList.remove('thumbnail'); // может здесь это вообще не нужно\r\n                  });\r\n                }\r\n              }\r\n            } else {\r\n              const div = mover.firstElementChild && mover.firstElementChild.classList.contains('media-viewer-aspecter') ? mover.firstElementChild : mover;\r\n              const haveImage = div.firstElementChild?.tagName === 'IMG' ? div.firstElementChild as HTMLImageElement : null;\r\n              if(!haveImage || haveImage.src !== url)  {\r\n                let image = new Image();\r\n                image.classList.add('thumbnail');\r\n    \r\n                //this.log('will renderImageFromUrl:', image, div, target);\r\n    \r\n                renderImageFromUrl(image, url, () => {\r\n                  this.updateMediaSource(target, url, 'img');\r\n  \r\n                  if(haveImage) {\r\n                    window.requestAnimationFrame(() => {\r\n                      haveImage.remove();\r\n                    });\r\n                  }\r\n    \r\n                  div.append(image);\r\n                });\r\n              }\r\n            }\r\n    \r\n            //this.preloader.detach();\r\n          }).catch(err => {\r\n            this.log.error(err);\r\n            this.preloader.attach(mover);\r\n            this.preloader.setManual();\r\n          });\r\n  \r\n          return cancellablePromise;\r\n        };\r\n  \r\n        this.lazyLoadQueue.unshift({load});\r\n      });\r\n\r\n      setMoverPromise = thumbPromise.then(set);\r\n    }\r\n\r\n    return this.setMoverPromise = setMoverPromise.catch(() => {\r\n      this.setMoverAnimationPromise = null;\r\n    }).finally(() => {\r\n      this.setMoverPromise = null;\r\n    });\r\n  }\r\n}\r\n\r\ntype AppMediaViewerTargetType = {\r\n  element: HTMLElement,\r\n  mid: number,\r\n  peerId: number\r\n};\r\nexport default class AppMediaViewer extends AppMediaViewerBase<'caption', 'delete' | 'forward', AppMediaViewerTargetType> {\r\n  public currentMessageId = 0;\r\n  public currentPeerId = 0;\r\n  public searchContext: SearchSuperContext;\r\n\r\n  constructor() {\r\n    super([/* 'delete',  */'forward']);\r\n\r\n    /* const stub = document.createElement('div');\r\n    stub.classList.add(MEDIA_VIEWER_CLASSNAME + '-stub');\r\n    this.content.main.prepend(stub); */\r\n\r\n    this.content.caption = document.createElement('div');\r\n    this.content.caption.classList.add(MEDIA_VIEWER_CLASSNAME + '-caption'/* , 'media-viewer-stub' */);\r\n\r\n    new Scrollable(this.content.caption);\r\n\r\n    //this.content.main.append(this.content.caption);\r\n    this.wholeDiv.append(this.content.caption);\r\n\r\n    this.setBtnMenuToggle([{\r\n      icon: 'forward',\r\n      text: 'Forward',\r\n      onClick: this.onForwardClick\r\n    }, {\r\n      icon: 'download',\r\n      text: 'MediaViewer.Context.Download',\r\n      onClick: this.onDownloadClick\r\n    }/* , {\r\n      icon: 'delete danger btn-disabled',\r\n      text: 'Delete',\r\n      onClick: () => {}\r\n    } */]);\r\n\r\n    // * constructing html end\r\n    \r\n    this.setListeners();\r\n  }\r\n\r\n  protected setListeners() {\r\n    super.setListeners();\r\n    this.buttons.forward.addEventListener('click', this.onForwardClick);\r\n    this.author.container.addEventListener('click', this.onAuthorClick);\r\n  }\r\n\r\n  /* public close(e?: MouseEvent) {\r\n    const good = !this.setMoverAnimationPromise;\r\n    const promise = super.close(e);\r\n\r\n    if(good) { // clear\r\n      this.currentMessageId = 0;\r\n      this.peerId = 0;\r\n    }\r\n\r\n    return promise;\r\n  } */\r\n\r\n  onPrevClick = (target: AppMediaViewerTargetType) => {\r\n    this.nextTargets.unshift({element: this.lastTarget, mid: this.currentMessageId, peerId: this.currentPeerId});\r\n    this.openMedia(appMessagesManager.getMessageByPeer(target.peerId, target.mid), target.element, -1);\r\n  };\r\n\r\n  onNextClick = (target: AppMediaViewerTargetType) => {\r\n    this.prevTargets.push({element: this.lastTarget, mid: this.currentMessageId, peerId: this.currentPeerId});\r\n    this.openMedia(appMessagesManager.getMessageByPeer(target.peerId, target.mid), target.element, 1);\r\n  };\r\n\r\n  onForwardClick = () => {\r\n    if(this.currentMessageId) {\r\n      //appSidebarRight.forwardTab.open([this.currentMessageId]);\r\n      new PopupForward(this.currentPeerId, [this.currentMessageId], () => {\r\n        return this.close();\r\n      });\r\n    }\r\n  };\r\n\r\n  onAuthorClick = (e: MouseEvent) => {\r\n    if(this.currentMessageId && this.currentMessageId !== Number.MAX_SAFE_INTEGER) {\r\n      const mid = this.currentMessageId;\r\n      const peerId = this.currentPeerId;\r\n      const threadId = this.searchContext.threadId;\r\n      this.close(e)\r\n      //.then(() => mediaSizes.isMobile ? appSidebarRight.sharedMediaTab.closeBtn.click() : Promise.resolve())\r\n      .then(() => {\r\n        if(mediaSizes.isMobile) {\r\n          const tab = appSidebarRight.getTab(AppSharedMediaTab);\r\n          if(tab) {\r\n            tab.close();\r\n          }\r\n        }\r\n\r\n        const message = appMessagesManager.getMessageByPeer(peerId, mid);\r\n        appImManager.setInnerPeer(message.peerId, mid, threadId ? 'discussion' : undefined, threadId);\r\n      });\r\n    }\r\n  };\r\n\r\n  onDownloadClick = () => {\r\n    const message = appMessagesManager.getMessageByPeer(this.currentPeerId, this.currentMessageId);\r\n    if(message.media.photo) {\r\n      appPhotosManager.savePhotoFile(message.media.photo, appImManager.chat.bubbles.lazyLoadQueue.queueId);\r\n    } else {\r\n      let document: MyDocument = null;\r\n\r\n      if(message.media.webpage) document = message.media.webpage.document;\r\n      else document = message.media.document;\r\n\r\n      if(document) {\r\n        //console.log('will save document:', document);\r\n        appDocsManager.saveDocFile(document, appImManager.chat.bubbles.lazyLoadQueue.queueId);\r\n      }\r\n    }\r\n  };\r\n\r\n  // нет смысла делать проверку для reverse и loadMediaPromise\r\n  protected loadMoreMedia = (older = true) => {\r\n    //if(!older && this.reverse) return;\r\n\r\n    if(older && this.loadedAllMediaDown) return Promise.resolve();\r\n    else if(!older && this.loadedAllMediaUp) return Promise.resolve();\r\n\r\n    if(older && this.loadMediaPromiseDown) return this.loadMediaPromiseDown;\r\n    else if(!older && this.loadMediaPromiseUp) return this.loadMediaPromiseUp;\r\n\r\n    const loadCount = 50;\r\n    const backLimit = older ? 0 : loadCount;\r\n    let maxId = this.currentMessageId;\r\n  \r\n    let anchor: AppMediaViewerTargetType;\r\n    if(older) {\r\n      anchor = this.reverse ? this.prevTargets[0] : this.nextTargets[this.nextTargets.length - 1];\r\n    } else {\r\n      anchor = this.reverse ? this.nextTargets[this.nextTargets.length - 1] : this.prevTargets[0];\r\n    }\r\n\r\n    if(anchor) maxId = anchor.mid;\r\n    if(!older) maxId = appMessagesManager.incrementMessageId(maxId, 1);\r\n\r\n    const promise = appMessagesManager.getSearch({\r\n      peerId: this.searchContext.peerId,\r\n      query: this.searchContext.query,\r\n      inputFilter: {\r\n        _: this.searchContext.inputFilter\r\n      },\r\n      maxId,\r\n      limit: backLimit ? 0 : loadCount,\r\n      backLimit,\r\n      threadId: this.searchContext.threadId,\r\n      folderId: this.searchContext.folderId,\r\n      nextRate: this.searchContext.nextRate,\r\n      minDate: this.searchContext.minDate,\r\n      maxDate: this.searchContext.maxDate\r\n    }).then(value => {\r\n      if(DEBUG) {\r\n        this.log('loaded more media by maxId:', maxId, value, older, this.reverse);\r\n      }\r\n\r\n      if(value.next_rate) {\r\n        this.searchContext.nextRate = value.next_rate;\r\n      }\r\n\r\n      if(value.history.length < loadCount) {\r\n        /* if(this.reverse) {\r\n          if(older) this.loadedAllMediaUp = true;\r\n          else this.loadedAllMediaDown = true;\r\n        } else { */\r\n          if(older) this.loadedAllMediaDown = true;\r\n          else this.loadedAllMediaUp = true;\r\n        //}\r\n      }\r\n\r\n      const method: any = older ? value.history.forEach.bind(value.history) : forEachReverse.bind(null, value.history);\r\n      method((message: Message.message) => {\r\n        const {mid, peerId} = message;\r\n        const media = this.getMediaFromMessage(message);\r\n\r\n        if(!media) return;\r\n        //if(media._ === 'document' && media.type !== 'video') return;\r\n\r\n        const t = {element: null as HTMLElement, mid, peerId};\r\n        if(older) {\r\n          if(this.reverse) this.prevTargets.unshift(t);\r\n          else this.nextTargets.push(t);\r\n        } else {\r\n          if(this.reverse) this.nextTargets.push(t);\r\n          else this.prevTargets.unshift(t);\r\n        }\r\n      });\r\n\r\n      this.buttons.prev.classList.toggle('hide', !this.prevTargets.length);\r\n      this.buttons.next.classList.toggle('hide', !this.nextTargets.length);\r\n    }, () => {}).then(() => {\r\n      if(older) this.loadMediaPromiseDown = null;\r\n      else this.loadMediaPromiseUp = null;\r\n    });\r\n\r\n    if(older) this.loadMediaPromiseDown = promise;\r\n    else this.loadMediaPromiseUp = promise;\r\n\r\n    return promise;\r\n  };\r\n\r\n  private getMediaFromMessage(message: any) {\r\n    return message.action ? message.action.photo : message.media.photo \r\n      || message.media.document \r\n      || (message.media.webpage && (message.media.webpage.document || message.media.webpage.photo));\r\n  }\r\n\r\n  private setCaption(message: any) {\r\n    const caption = message.message;\r\n    this.content.caption.classList.toggle('hide', !caption);\r\n    if(caption) {\r\n      this.content.caption.firstElementChild.innerHTML = RichTextProcessor.wrapRichText(caption, {\r\n        entities: message.totalEntities\r\n      });\r\n    } else {\r\n      this.content.caption.firstElementChild.innerHTML = '';\r\n    }\r\n  }\r\n\r\n  public setSearchContext(context: SearchSuperContext) {\r\n    this.searchContext = context;\r\n\r\n    if(this.searchContext.folderId !== undefined) {\r\n      this.loadedAllMediaUp = true;\r\n\r\n      if(this.searchContext.nextRate === undefined) {\r\n        this.loadedAllMediaDown = true;\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public async openMedia(message: any, target?: HTMLElement, fromRight = 0, reverse = false, \r\n    prevTargets: AppMediaViewer['prevTargets'] = [], nextTargets: AppMediaViewer['prevTargets'] = [], needLoadMore = true) {\r\n    if(this.setMoverPromise) return this.setMoverPromise;\r\n\r\n    const mid = message.mid;\r\n    const fromId = message.fromId;\r\n    const media = this.getMediaFromMessage(message);\r\n\r\n    this.currentMessageId = mid;\r\n    this.currentPeerId = message.peerId;\r\n    const promise = super._openMedia(media, message.date, fromId, fromRight, target, reverse, prevTargets, nextTargets, needLoadMore);\r\n    this.setCaption(message);\r\n\r\n    return promise;\r\n  }\r\n}\r\n\r\ntype AppMediaViewerAvatarTargetType = {element: HTMLElement, photoId: string};\r\nexport class AppMediaViewerAvatar extends AppMediaViewerBase<'', 'delete', AppMediaViewerAvatarTargetType> {\r\n  public currentPhotoId: string;\r\n  public peerId: number;\r\n\r\n  constructor(peerId: number) {\r\n    super([/* 'delete' */]);\r\n\r\n    this.peerId = peerId;\r\n\r\n    this.setBtnMenuToggle([{\r\n      icon: 'download',\r\n      text: 'MediaViewer.Context.Download',\r\n      onClick: this.onDownloadClick\r\n    }/* , {\r\n      icon: 'delete danger btn-disabled',\r\n      text: 'Delete',\r\n      onClick: () => {}\r\n    } */]);\r\n\r\n    // * constructing html end\r\n    \r\n    this.setListeners();\r\n  }\r\n\r\n  onPrevClick = (target: AppMediaViewerAvatarTargetType) => {\r\n    this.nextTargets.unshift({element: this.lastTarget, photoId: this.currentPhotoId});\r\n    this.openMedia(target.photoId, target.element, -1);\r\n  };\r\n\r\n  onNextClick = (target: AppMediaViewerAvatarTargetType) => {\r\n    this.prevTargets.push({element: this.lastTarget, photoId: this.currentPhotoId});\r\n    this.openMedia(target.photoId, target.element, 1);\r\n  };\r\n\r\n  onDownloadClick = () => {\r\n    appPhotosManager.savePhotoFile(appPhotosManager.getPhoto(this.currentPhotoId), appImManager.chat.bubbles.lazyLoadQueue.queueId);\r\n  };\r\n\r\n  protected loadMoreMedia = (older = true) => {\r\n    if(this.peerId < 0) return Promise.resolve(); // ! это значит, что открыло аватар чата, но следующих фотографий нет.\r\n    if(this.loadedAllMediaDown) return Promise.resolve();\r\n    if(this.loadMediaPromiseDown) return this.loadMediaPromiseDown;\r\n\r\n    const peerId = this.peerId;\r\n    const loadCount = 50;\r\n\r\n    const maxId = this.nextTargets.length ? this.nextTargets[this.nextTargets.length - 1].photoId : this.currentPhotoId;\r\n\r\n    const promise = appPhotosManager.getUserPhotos(peerId, maxId, loadCount).then(value => {\r\n      if(this.peerId !== peerId) {\r\n        this.log.warn('peer changed');\r\n        return;\r\n      }\r\n\r\n      // if(DEBUG) {\r\n      //   this.log('loaded more media by maxId:', /* maxId,  */value, older, this.reverse);\r\n      // }\r\n\r\n      if(value.photos.length < loadCount) {\r\n        this.loadedAllMediaDown = true;\r\n      }\r\n\r\n      value.photos.forEach(photoId => {\r\n        if(this.currentPhotoId === photoId) return;\r\n        this.nextTargets.push({element: null as HTMLElement, photoId: photoId});\r\n      });\r\n\r\n      this.buttons.prev.classList.toggle('hide', !this.prevTargets.length);\r\n      this.buttons.next.classList.toggle('hide', !this.nextTargets.length);\r\n    }, () => {}).then(() => {\r\n      this.loadMediaPromiseDown = null;\r\n    });\r\n\r\n    return this.loadMediaPromiseDown = promise;\r\n  };\r\n\r\n  public async openMedia(photoId: string, target?: HTMLElement, fromRight = 0, prevTargets?: AppMediaViewerAvatarTargetType[], nextTargets?: AppMediaViewerAvatarTargetType[]) {\r\n    if(this.setMoverPromise) return this.setMoverPromise;\r\n\r\n    const photo = appPhotosManager.getPhoto(photoId);\r\n\r\n    this.currentPhotoId = photo.id;\r\n  \r\n    return super._openMedia(photo, photo.date, this.peerId, fromRight, target, false, prevTargets, nextTargets);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function getVisibleRect(element: HTMLElement, overflowElement: HTMLElement) {\r\n  const rect = element.getBoundingClientRect();\r\n  const overflowRect = overflowElement.getBoundingClientRect();\r\n\r\n  let {top: overflowTop, bottom: overflowBottom} = overflowRect;\r\n\r\n  // * respect sticky headers\r\n  const sticky = overflowElement.querySelector('.sticky');\r\n  if(sticky) {\r\n    const stickyRect = sticky.getBoundingClientRect();\r\n    overflowTop = stickyRect.bottom;\r\n  }\r\n\r\n  if(rect.top >= overflowBottom\r\n    || rect.bottom <= overflowTop\r\n    || rect.right <= overflowRect.left\r\n    || rect.left >= overflowRect.right) {\r\n    return null;\r\n  }\r\n\r\n  const overflow = {\r\n    top: false,\r\n    right: false,\r\n    bottom: false,\r\n    left: false,\r\n    vertical: 0 as 0 | 1 | 2,\r\n    horizontal: 0 as 0 | 1 | 2\r\n  };\r\n\r\n  // @ts-ignore\r\n  const w: any = 'visualViewport' in window ? window.visualViewport : window;\r\n  const windowWidth = w.width || w.innerWidth;\r\n  const windowHeight = w.height || w.innerHeight;\r\n\r\n  return {\r\n    rect: {\r\n      top: rect.top < overflowTop && overflowTop !== 0 ? (overflow.top = true, ++overflow.vertical, overflowTop) : rect.top,\r\n      right: 0,\r\n      bottom: rect.bottom > overflowBottom && overflowBottom !== windowHeight ? (overflow.bottom = true, ++overflow.vertical, overflowBottom) : rect.bottom,\r\n      left: 0\r\n    },\r\n    overflow\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function fillPropertyValue(str: string) {\r\n  let splitted = str.split(' ');\r\n  if(splitted.length !== 4) {\r\n    if(!splitted[0]) splitted[0] = '0px';\r\n    for(let i = splitted.length; i < 4; ++i) {\r\n      splitted[i] = splitted[i % 2] || splitted[0] || '0px';\r\n    }\r\n  }\r\n\r\n  return splitted;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appMessagesManager from \"../lib/appManagers/appMessagesManager\";\r\nimport appProfileManager from \"../lib/appManagers/appProfileManager\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport AppMediaViewer, { AppMediaViewerAvatar } from \"./appMediaViewer\";\r\nimport { Message } from \"../layer\";\r\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\r\nimport appPhotosManager from \"../lib/appManagers/appPhotosManager\";\r\nimport type { LazyLoadQueueIntersector } from \"./lazyLoadQueue\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport appAvatarsManager from \"../lib/appManagers/appAvatarsManager\";\r\n\r\nconst onAvatarUpdate = (peerId: number) => {\r\n  appAvatarsManager.removeFromAvatarsCache(peerId);\r\n  (Array.from(document.querySelectorAll('avatar-element[peer=\"' + peerId + '\"]')) as AvatarElement[]).forEach(elem => {\r\n    //console.log('updating avatar:', elem);\r\n    elem.update();\r\n  });\r\n};\r\n\r\nrootScope.addEventListener('avatar_update', onAvatarUpdate);\r\nrootScope.addEventListener('peer_title_edit', onAvatarUpdate);\r\n\r\nexport async function openAvatarViewer(target: HTMLElement, peerId: number, middleware: () => boolean, message?: any, prevTargets?: {element: HTMLElement, item: string | Message.messageService}[], nextTargets?: typeof prevTargets) {\r\n  let photo = await appProfileManager.getFullPhoto(peerId);\r\n  if(!middleware() || !photo) {\r\n    return;\r\n  }\r\n\r\n  const getTarget = () => {\r\n    const good = Array.from(target.querySelectorAll('img')).find(img => !img.classList.contains('emoji'));\r\n    return good ? target : null;\r\n  };\r\n\r\n  if(peerId < 0) {\r\n    const hadMessage = !!message;\r\n    const inputFilter = 'inputMessagesFilterChatPhotos';\r\n    if(!message) {\r\n      message = await appMessagesManager.getSearch({\r\n        peerId, \r\n        inputFilter: {_: inputFilter}, \r\n        maxId: 0, \r\n        limit: 1 \r\n      }).then(value => {\r\n        //console.log(lol);\r\n        // ! by descend\r\n        return value.history[0];\r\n      });\r\n\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if(message) {\r\n      // ! гений в деле, костылируем (но это гениально)\r\n      const messagePhoto = message.action.photo;\r\n      if(messagePhoto.id !== photo.id) {\r\n        if(!hadMessage) {\r\n          message = appMessagesManager.generateFakeAvatarMessage(peerId, photo);\r\n        } else {\r\n          \r\n        }\r\n      }\r\n\r\n      const f = (arr: typeof prevTargets) => arr.map(el => ({\r\n        element: el.element,\r\n        mid: (el.item as Message.messageService).mid,\r\n        peerId: (el.item as Message.messageService).peerId\r\n      }));\r\n\r\n      new AppMediaViewer()\r\n      .setSearchContext({\r\n        peerId,\r\n        inputFilter,\r\n      })\r\n      .openMedia(message, getTarget(), undefined, undefined, prevTargets ? f(prevTargets) : undefined, nextTargets ? f(nextTargets) : undefined);\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n  if(photo) {\r\n    if(typeof(message) === 'string') {\r\n      photo = appPhotosManager.getPhoto(message);\r\n    }\r\n    \r\n    const f = (arr: typeof prevTargets) => arr.map(el => ({\r\n      element: el.element,\r\n      photoId: el.item as string\r\n    }));\r\n\r\n    new AppMediaViewerAvatar(peerId).openMedia(photo.id, getTarget(), undefined, prevTargets ? f(prevTargets) : undefined, nextTargets ? f(nextTargets) : undefined);\r\n  }\r\n}\r\n\r\nconst believeMe: Map<number, Set<AvatarElement>> = new Map();\r\nconst seen: Set<number> = new Set();\r\n\r\nexport default class AvatarElement extends HTMLElement {\r\n  private peerId: number;\r\n  private isDialog = false;\r\n  private peerTitle: string;\r\n  public loadPromises: Promise<any>[];\r\n  public lazyLoadQueue: LazyLoadQueueIntersector;\r\n  private addedToQueue = false;\r\n\r\n  connectedCallback() {\r\n    // браузер вызывает этот метод при добавлении элемента в документ\r\n    // (может вызываться много раз, если элемент многократно добавляется/удаляется)\r\n\r\n    this.isDialog = this.getAttribute('dialog') === '1';\r\n    if(this.getAttribute('clickable') === '') {\r\n      this.setAttribute('clickable', 'set');\r\n      let loading = false;\r\n      attachClickEvent(this, async(e) => {\r\n        cancelEvent(e);\r\n        if(loading) return;\r\n        //console.log('avatar clicked');\r\n        const peerId = this.peerId;\r\n        loading = true;\r\n        await openAvatarViewer(this, this.peerId, () => this.peerId === peerId);\r\n        loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // браузер вызывает этот метод при удалении элемента из документа\r\n    // (может вызываться много раз, если элемент многократно добавляется/удаляется)\r\n    const set = believeMe.get(this.peerId);\r\n    if(set && set.has(this)) {\r\n      set.delete(this);\r\n      if(!set.size) {\r\n        believeMe.delete(this.peerId);\r\n      }\r\n    }\r\n\r\n    if(this.lazyLoadQueue) {\r\n      this.lazyLoadQueue.unobserve(this);\r\n    }\r\n  }\r\n\r\n  static get observedAttributes(): string[] {\r\n    return ['peer', 'dialog', 'peer-title'/* массив имён атрибутов для отслеживания их изменений */];\r\n  }\r\n\r\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n    //console.log('avatar changed attribute:', name, oldValue, newValue);\r\n    // вызывается при изменении одного из перечисленных выше атрибутов\r\n    if(name === 'peer') {\r\n      if(this.peerId === +newValue) {\r\n        return;\r\n      }\r\n      \r\n      this.peerId = appPeersManager.getPeerMigratedTo(+newValue) || +newValue;\r\n\r\n      const wasPeerId = +oldValue;\r\n      if(wasPeerId) {\r\n        const set = believeMe.get(wasPeerId);\r\n        if(set) {\r\n          set.delete(this);\r\n          if(!set.size) {\r\n            believeMe.delete(wasPeerId);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.update();\r\n    } else if(name === 'peer-title') {\r\n      this.peerTitle = newValue;\r\n    } else if(name === 'dialog') {\r\n      this.isDialog = newValue === '1';\r\n    }\r\n  }\r\n\r\n  private r(onlyThumb = false) {\r\n    const res = appAvatarsManager.putPhoto(this, this.peerId, this.isDialog, this.peerTitle, onlyThumb);\r\n    const promise = res ? res.loadPromise : Promise.resolve();\r\n    if(this.loadPromises) {\r\n      if(res && res.cached) {\r\n        this.loadPromises.push(promise);\r\n      }\r\n\r\n      promise.finally(() => {\r\n        this.loadPromises = undefined;\r\n      });\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  public update() {\r\n    if(this.lazyLoadQueue) {\r\n      if(!seen.has(this.peerId)) {\r\n        if(this.addedToQueue) return;\r\n        this.addedToQueue = true;\r\n        \r\n        let set = believeMe.get(this.peerId);\r\n        if(!set) {\r\n          set = new Set();\r\n          believeMe.set(this.peerId, set);\r\n        }\r\n  \r\n        set.add(this);\r\n\r\n        this.r(true);\r\n\r\n        this.lazyLoadQueue.push({\r\n          div: this, \r\n          load: () => {\r\n            seen.add(this.peerId);\r\n            return this.update();\r\n          }\r\n        });\r\n\r\n        return;\r\n      } else if(this.addedToQueue) {\r\n        this.lazyLoadQueue.unobserve(this);\r\n      }\r\n    } \r\n    \r\n    seen.add(this.peerId);\r\n    \r\n    const res = this.r();\r\n    const promise = res ? res.loadPromise : Promise.resolve();\r\n\r\n    if(this.addedToQueue) {\r\n      promise.finally(() => {\r\n        this.addedToQueue = false;\r\n      });\r\n    }\r\n\r\n    const set = believeMe.get(this.peerId);\r\n    if(set) {\r\n      set.delete(this);\r\n      const arr = Array.from(set);\r\n      believeMe.delete(this.peerId);\r\n      \r\n\r\n      for(let i = 0, length = arr.length; i < length; ++i) {\r\n        arr[i].update();\r\n      }\r\n    }\r\n\r\n    return promise;\r\n  }\r\n}\r\n\r\ncustomElements.define('avatar-element', AvatarElement);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDialogsManager from \"../lib/appManagers/appDialogsManager\";\r\nimport appMessagesManager, {Dialog} from \"../lib/appManagers/appMessagesManager\";\r\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { positionMenu, openBtnMenu } from \"./misc\";\r\nimport ButtonMenu, { ButtonMenuItemOptions } from \"./buttonMenu\";\r\nimport PopupDeleteDialog from \"./popups/deleteDialog\";\r\nimport { i18n } from \"../lib/langPack\";\r\nimport findUpTag from \"../helpers/dom/findUpTag\";\r\nimport appNotificationsManager from \"../lib/appManagers/appNotificationsManager\";\r\n\r\nexport default class DialogsContextMenu {\r\n  private element: HTMLElement;\r\n  private buttons: (ButtonMenuItemOptions & {verify: () => boolean})[];\r\n\r\n  private selectedId: number;\r\n  private filterId: number;\r\n  private dialog: Dialog;\r\n\r\n  private init() {\r\n    this.buttons = [{\r\n      icon: 'unread',\r\n      text: 'MarkAsUnread',\r\n      onClick: this.onUnreadClick,\r\n      verify: () => {\r\n        const isUnread = !!(this.dialog.pFlags?.unread_mark || this.dialog.unread_count);\r\n        return !isUnread;\r\n      }\r\n    }, {\r\n      icon: 'readchats',\r\n      text: 'MarkAsRead',\r\n      onClick: this.onUnreadClick,\r\n      verify: () => { \r\n        const isUnread = !!(this.dialog.pFlags?.unread_mark || this.dialog.unread_count);\r\n        return isUnread;\r\n      }\r\n    }, {\r\n      icon: 'pin',\r\n      text: 'ChatList.Context.Pin',\r\n      onClick: this.onPinClick,\r\n      verify: () => {\r\n        const isPinned = this.filterId > 1 ? appMessagesManager.filtersStorage.filters[this.filterId].pinned_peers.includes(this.dialog.peerId) : !!this.dialog.pFlags?.pinned;\r\n        return !isPinned;\r\n      }\r\n    }, {\r\n      icon: 'unpin',\r\n      text: 'ChatList.Context.Unpin',\r\n      onClick: this.onPinClick,\r\n      verify: () => {\r\n        const isPinned = this.filterId > 1 ? appMessagesManager.filtersStorage.filters[this.filterId].pinned_peers.includes(this.dialog.peerId) : !!this.dialog.pFlags?.pinned;\r\n        return isPinned;\r\n      }\r\n    }, {\r\n      icon: 'mute',\r\n      text: 'ChatList.Context.Mute',\r\n      onClick: this.onMuteClick,\r\n      verify: () => {\r\n        return this.selectedId !== rootScope.myId && !appNotificationsManager.isPeerLocalMuted(this.dialog.peerId); \r\n      }\r\n    }, {\r\n      icon: 'unmute',\r\n      text: 'ChatList.Context.Unmute',\r\n      onClick: this.onUnmuteClick,\r\n      verify: () => {\r\n        return this.selectedId !== rootScope.myId && appNotificationsManager.isPeerLocalMuted(this.dialog.peerId); \r\n      }\r\n    }, {\r\n      icon: 'archive',\r\n      text: 'Archive',\r\n      onClick: this.onArchiveClick,\r\n      verify: () => this.filterId === 0 && this.selectedId !== rootScope.myId\r\n    }, {\r\n      icon: 'unarchive',\r\n      text: 'Unarchive',\r\n      onClick: this.onArchiveClick,\r\n      verify: () => this.filterId === 1 && this.selectedId !== rootScope.myId\r\n    }, {\r\n      icon: 'delete danger',\r\n      text: 'Delete',\r\n      onClick: this.onDeleteClick,\r\n      verify: () => true\r\n    }];\r\n\r\n    this.element = ButtonMenu(this.buttons);\r\n    this.element.id = 'dialogs-contextmenu';\r\n    this.element.classList.add('contextmenu');\r\n    document.getElementById('page-chats').append(this.element);\r\n  }\r\n\r\n  private onArchiveClick = () => {\r\n    let dialog = appMessagesManager.getDialogOnly(this.selectedId);\r\n    if(dialog) {\r\n      appMessagesManager.editPeerFolders([dialog.peerId], +!dialog.folder_id);\r\n    }\r\n  };\r\n\r\n  private onPinClick = () => {\r\n    appMessagesManager.toggleDialogPin(this.selectedId, this.filterId);\r\n  };\r\n\r\n  private onUnmuteClick = () => {\r\n    appMessagesManager.mutePeer(this.selectedId, false);\r\n  };\r\n  \r\n  private onMuteClick = () => {\r\n    appMessagesManager.mutePeer(this.selectedId, true);\r\n  };\r\n\r\n  private onUnreadClick = () => {\r\n    const dialog = appMessagesManager.getDialogOnly(this.selectedId);\r\n    if(!dialog) return;\r\n\r\n    if(dialog.unread_count) {\r\n      appMessagesManager.readHistory(this.selectedId, dialog.top_message);\r\n      appMessagesManager.markDialogUnread(this.selectedId, true);\r\n    } else {\r\n      appMessagesManager.markDialogUnread(this.selectedId);\r\n    }\r\n  };\r\n\r\n  private onDeleteClick = () => {\r\n    new PopupDeleteDialog(this.selectedId);\r\n  };\r\n\r\n  onContextMenu = (e: MouseEvent | Touch) => {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    let li: HTMLElement = null;\r\n    \r\n    try {\r\n      li = findUpTag(e.target, 'LI');\r\n    } catch(e) {}\r\n    \r\n    if(!li) return;\r\n\r\n    if(e instanceof MouseEvent) e.preventDefault();\r\n    if(this.element.classList.contains('active')) {\r\n      return false;\r\n    }\r\n    if(e instanceof MouseEvent) e.cancelBubble = true;\r\n\r\n    this.filterId = appDialogsManager.filterId;\r\n\r\n    this.selectedId = +li.dataset.peerId;\r\n    this.dialog = appMessagesManager.getDialogOnly(this.selectedId);\r\n\r\n    this.buttons.forEach(button => {\r\n      const good = button.verify();\r\n\r\n      button.element.classList.toggle('hide', !good);\r\n    });\r\n\r\n    // delete button\r\n    this.buttons[this.buttons.length - 1].element.lastChild.replaceWith(i18n(appPeersManager.getDeleteButtonText(this.selectedId)));\r\n\r\n    li.classList.add('menu-open');\r\n    positionMenu(e, this.element);\r\n    openBtnMenu(this.element, () => {\r\n      li.classList.remove('menu-open');\r\n      this.selectedId = this.dialog = this.filterId = undefined;\r\n    });\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport enum ConnectionStatus {\r\n  Connected,\r\n  Connecting,\r\n  Closed,\r\n  TimedOut\r\n};\r\n\r\nexport type ConnectionStatusChange = {\r\n  _: 'networkerStatus', \r\n  status: ConnectionStatus,\r\n  dcId: number,\r\n  name: string,\r\n  isFileNetworker: boolean,\r\n  isFileDownload: boolean,\r\n  isFileUpload: boolean,\r\n  retryAt?: number\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport App from \"../config/app\";\r\nimport DEBUG from \"../config/debug\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport apiUpdatesManager from \"../lib/appManagers/apiUpdatesManager\";\r\nimport { LangPackKey, i18n } from \"../lib/langPack\";\r\nimport { logger } from \"../lib/logger\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport Button from \"./button\";\r\nimport ProgressivePreloader from \"./preloader\";\r\nimport SetTransition from \"./singleTransition\";\r\nimport sessionStorage from '../lib/sessionStorage';\r\nimport { ConnectionStatus } from \"../lib/mtproto/connectionStatus\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\r\n\r\nexport default class ConnectionStatusComponent {\r\n  public static CHANGE_STATE_DELAY = 1000;\r\n\r\n  private statusContainer: HTMLElement;\r\n  private statusEl: HTMLElement;\r\n  private statusPreloader: ProgressivePreloader;\r\n\r\n  private currentLangPackKey: LangPackKey;\r\n\r\n  private hadConnect = false;\r\n  private retryAt: number;\r\n  private connecting = false;\r\n  private timedOut = false;\r\n  private updating = false;\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private setFirstConnectionTimeout: number;\r\n  private setStateTimeout: number;\r\n\r\n  constructor(chatsContainer: HTMLElement) {\r\n    this.log = logger('CS');\r\n  \r\n    this.statusContainer = document.createElement('div');\r\n    this.statusContainer.classList.add('connection-status');\r\n\r\n    this.statusEl = Button('btn-primary bg-warning connection-status-button', {noRipple: true});\r\n    this.statusPreloader = new ProgressivePreloader({cancelable: false});\r\n    this.statusPreloader.constructContainer({color: 'transparent', bold: true});\r\n    this.statusContainer.append(this.statusEl);\r\n\r\n    chatsContainer.prepend(this.statusContainer);\r\n\r\n    rootScope.addEventListener('connection_status_change', (e) => {\r\n      const status = e;\r\n      console.log(status);\r\n\r\n      this.setConnectionStatus();\r\n    });\r\n\r\n    rootScope.addEventListener('state_synchronizing', (e) => {\r\n      const channelId = e;\r\n      if(!channelId) {\r\n        this.updating = true;\r\n        DEBUG && this.log('updating', this.updating);\r\n        this.setState();\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('state_synchronized', (e) => {\r\n      const channelId = e;\r\n      DEBUG && this.log('state_synchronized', channelId);\r\n      if(!channelId) {\r\n        this.updating = false;\r\n        DEBUG && this.log('updating', this.updating);\r\n        this.setState();\r\n      }\r\n    });\r\n\r\n    this.setFirstConnectionTimeout = window.setTimeout(this.setConnectionStatus, ConnectionStatusComponent.CHANGE_STATE_DELAY + 1e3);\r\n\r\n    /* let bool = true;\r\n    document.addEventListener('dblclick', () => {\r\n      rootScope.dispatchEvent('connection_status_change', {\r\n        dcId: 2,\r\n        isFileDownload: false,\r\n        isFileNetworker: false,\r\n        isFileUpload: false,\r\n        name: \"NET-2\",\r\n        status: bool ? (bool = false, ConnectionStatus.Closed) : (bool = true, ConnectionStatus.Connected),\r\n        _: \"networkerStatus\"\r\n      });\r\n    }); */\r\n  }\r\n\r\n  private setConnectionStatus = () => {\r\n    sessionStorage.get('dc').then(baseDcId => {\r\n      if(!baseDcId) {\r\n        baseDcId = App.baseDcId;\r\n      }\r\n      \r\n      if(this.setFirstConnectionTimeout) {\r\n        clearTimeout(this.setFirstConnectionTimeout);\r\n        this.setFirstConnectionTimeout = 0;\r\n      }\r\n\r\n      const status = rootScope.connectionStatus['NET-' + baseDcId];\r\n      const online = status && status.status === ConnectionStatus.Connected;\r\n\r\n      if(this.connecting && online) {\r\n        apiUpdatesManager.forceGetDifference();\r\n      }\r\n\r\n      if(online && !this.hadConnect) {\r\n        this.hadConnect = true;\r\n      }\r\n      \r\n      this.timedOut = status && status.status === ConnectionStatus.TimedOut;\r\n      this.connecting = !online;\r\n      this.retryAt = status && status.retryAt;\r\n      DEBUG && this.log('connecting', this.connecting);\r\n      this.setState();\r\n    });\r\n  };\r\n\r\n  private setStatusText = (langPackKey: LangPackKey, args?: any[]) => {\r\n    if(this.currentLangPackKey === langPackKey) return;\r\n    this.currentLangPackKey = langPackKey;\r\n    replaceContent(this.statusEl, i18n(langPackKey, args));\r\n    this.statusPreloader.attach(this.statusEl);\r\n  };\r\n\r\n  private getA(langPackKey: LangPackKey, callback: () => void) {\r\n    const a = document.createElement('a');\r\n    a.classList.add('force-reconnect');\r\n    a.append(i18n(langPackKey));\r\n    a.addEventListener('click', (e) => {\r\n      cancelEvent(e);\r\n      callback();\r\n    });\r\n\r\n    return a;\r\n  }\r\n\r\n  private setState = () => {\r\n    const timeout = ConnectionStatusComponent.CHANGE_STATE_DELAY;\r\n    if(this.connecting) {\r\n      if(this.timedOut) {\r\n        const a = this.getA('ConnectionStatus.ForceReconnect', () => apiManager.forceReconnect());\r\n        this.setStatusText('ConnectionStatus.TimedOut', [a]);\r\n      } else if(this.hadConnect) {\r\n        if(this.retryAt !== undefined) {\r\n          const timerSpan = document.createElement('span');\r\n          const retryAt = this.retryAt;\r\n          const setTime = () => {\r\n            const now = Date.now();\r\n            timerSpan.innerText = '' + Math.round((retryAt - now) / 1000);\r\n            if(now > retryAt) {\r\n              clearInterval(interval);\r\n            }\r\n          };\r\n          const interval = setInterval(setTime, 1e3);\r\n          setTime();\r\n  \r\n          const a = this.getA('ConnectionStatus.Reconnect', () => apiManager.forceReconnectTimeout());\r\n          this.setStatusText('ConnectionStatus.ReconnectIn', [timerSpan, a]);\r\n        } else {\r\n          this.setStatusText('ConnectionStatus.Reconnecting');\r\n        }\r\n      } else {\r\n        this.setStatusText('ConnectionStatus.Waiting');\r\n      }\r\n    } else if(this.updating) {\r\n      this.setStatusText('Updating');\r\n    }\r\n\r\n    DEBUG && this.log('setState', this.connecting || this.updating);\r\n    window.requestAnimationFrame(() => {\r\n      if(this.setStateTimeout) clearTimeout(this.setStateTimeout);\r\n\r\n      const cb = () => {\r\n        SetTransition(this.statusContainer, 'is-shown', this.connecting || this.updating, 200);\r\n        this.setStateTimeout = 0;\r\n        DEBUG && this.log('setState: isShown:', this.connecting || this.updating);\r\n      };\r\n\r\n      this.setStateTimeout = window.setTimeout(cb, timeout);\r\n      //cb();\r\n      /* if(timeout) this.setStateTimeout = window.setTimeout(cb, timeout);\r\n      else cb(); */\r\n    });\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport AvatarElement from \"../../components/avatar\";\r\nimport DialogsContextMenu from \"../../components/dialogsContextMenu\";\r\nimport { horizontalMenu } from \"../../components/horizontalMenu\";\r\nimport { attachContextMenuListener, putPreloader } from \"../../components/misc\";\r\nimport { ripple } from \"../../components/ripple\";\r\n//import Scrollable from \"../../components/scrollable\";\r\nimport Scrollable, { ScrollableX, SliceSides } from \"../../components/scrollable\";\r\nimport { formatDateAccordingToTodayNew } from \"../../helpers/date\";\r\nimport { isSafari } from \"../../helpers/userAgent\";\r\nimport { logger, LogTypes } from \"../logger\";\r\nimport { RichTextProcessor } from \"../richtextprocessor\";\r\nimport rootScope from \"../rootScope\";\r\nimport apiUpdatesManager from \"./apiUpdatesManager\";\r\nimport appPeersManager from './appPeersManager';\r\nimport appImManager from \"./appImManager\";\r\nimport appMessagesManager, { Dialog } from \"./appMessagesManager\";\r\nimport {MyDialogFilter as DialogFilter} from \"../storages/filters\";\r\nimport appStateManager, { AppStateManager, State } from \"./appStateManager\";\r\nimport appUsersManager from \"./appUsersManager\";\r\nimport Button from \"../../components/button\";\r\nimport SetTransition from \"../../components/singleTransition\";\r\nimport appDraftsManager, { MyDraftMessage } from \"./appDraftsManager\";\r\nimport DEBUG, { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport appNotificationsManager from \"./appNotificationsManager\";\r\nimport PeerTitle from \"../../components/peerTitle\";\r\nimport { i18n, _i18n } from \"../langPack\";\r\nimport findUpTag from \"../../helpers/dom/findUpTag\";\r\nimport { LazyLoadQueueIntersector } from \"../../components/lazyLoadQueue\";\r\nimport lottieLoader from \"../lottieLoader\";\r\nimport { wrapLocalSticker } from \"../../components/wrappers\";\r\nimport AppEditFolderTab from \"../../components/sidebarLeft/tabs/editFolder\";\r\nimport appSidebarLeft from \"../../components/sidebarLeft\";\r\nimport { attachClickEvent } from \"../../helpers/dom/clickEvent\";\r\nimport positionElementByIndex from \"../../helpers/dom/positionElementByIndex\";\r\nimport replaceContent from \"../../helpers/dom/replaceContent\";\r\nimport ConnectionStatusComponent from \"../../components/connectionStatus\";\r\nimport appChatsManager from \"./appChatsManager\";\r\n\r\nexport type DialogDom = {\r\n  avatarEl: AvatarElement,\r\n  captionDiv: HTMLDivElement,\r\n  titleSpan: HTMLSpanElement,\r\n  titleSpanContainer: HTMLSpanElement,\r\n  statusSpan: HTMLSpanElement,\r\n  lastTimeSpan: HTMLSpanElement,\r\n  unreadMessagesSpan: HTMLSpanElement,\r\n  lastMessageSpan: HTMLSpanElement,\r\n  containerEl: HTMLElement,\r\n  listEl: HTMLLIElement,\r\n  muteAnimationTimeout?: number\r\n};\r\n\r\n//const testScroll = false;\r\n//let testTopSlice = 1;\r\n\r\nexport class AppDialogsManager {\r\n  private chatList: HTMLUListElement;\r\n\r\n  private doms: {[peerId: number]: DialogDom} = {};\r\n\r\n  private chatsContainer = document.getElementById('chatlist-container') as HTMLDivElement;\r\n  private chatsPreloader: HTMLElement;\r\n\r\n  private loadDialogsPromise: Promise<any>;\r\n\r\n  private scroll: Scrollable = null;\r\n  \r\n  private log = logger('DIALOGS', LogTypes.Log | LogTypes.Error | LogTypes.Warn | LogTypes.Debug);\r\n\r\n  private contextMenu = new DialogsContextMenu();\r\n\r\n  public chatLists: {[filterId: number]: HTMLUListElement} = {};\r\n  public scrollables: {[filterId: number]: Scrollable} = {};\r\n  public filterId: number;\r\n  private folders: {[k in 'menu' | 'container' | 'menuScrollContainer']: HTMLElement} = {\r\n    menu: document.getElementById('folders-tabs'),\r\n    menuScrollContainer: null,\r\n    container: document.getElementById('folders-container')\r\n  };\r\n  private filtersRendered: {\r\n    [filterId: string]: {\r\n      menu: HTMLElement, \r\n      container: HTMLElement,\r\n      unread: HTMLElement,\r\n      title: HTMLElement\r\n    }\r\n  } = {};\r\n  private showFiltersPromise: Promise<void>;\r\n  private allUnreadCount: HTMLElement;\r\n\r\n  private accumulateArchivedTimeout: number;\r\n\r\n  //private topOffsetIndex = 0;\r\n\r\n  private sliceTimeout: number;\r\n  private reorderDialogsTimeout: number;\r\n\r\n  private lastActiveElements: Set<HTMLElement> = new Set();\r\n\r\n  constructor() {\r\n    this.chatsPreloader = putPreloader(null, true);\r\n\r\n    this.allUnreadCount = this.folders.menu.querySelector('.badge');\r\n    \r\n    this.folders.menuScrollContainer = this.folders.menu.parentElement;\r\n\r\n    const bottomPart = document.createElement('div');\r\n    bottomPart.classList.add('connection-status-bottom');\r\n    bottomPart.append(this.folders.container);\r\n\r\n    /* if(isTouchSupported && isSafari) {\r\n      let allowUp: boolean, allowDown: boolean, slideBeginY: number;\r\n      const container = this.scroll.container;\r\n      container.addEventListener('touchstart', (event) => {\r\n        allowUp = container.scrollTop > 0;\r\n        allowDown = (container.scrollTop < container.scrollHeight - container.clientHeight);\r\n        // @ts-ignore\r\n        slideBeginY = event.pageY;\r\n      });\r\n      \r\n      container.addEventListener('touchmove', (event: any) => {\r\n        var up = (event.pageY > slideBeginY);\r\n        var down = (event.pageY < slideBeginY);\r\n        slideBeginY = event.pageY;\r\n        if((up && allowUp) || (down && allowDown)) {\r\n          event.stopPropagation();\r\n        } else if(up || down) {\r\n          event.preventDefault();\r\n        }\r\n      });\r\n    } */\r\n\r\n    this.filterId = 0;\r\n    this.addFilter({\r\n      id: this.filterId,\r\n      title: '',\r\n      titleEl: i18n('ChatList.Filter.AllChats'),\r\n      orderIndex: 0\r\n    });\r\n\r\n    this.chatList = this.chatLists[this.filterId];\r\n    this.scroll = this.scrollables[this.filterId];\r\n\r\n    /* if(testScroll) {\r\n      let i = 0;\r\n      let add = () => {\r\n        let li = document.createElement('li');\r\n        li.dataset.id = '' + i;\r\n        li.id = '' + i;\r\n        li.innerHTML = `<div class=\"rp\"><avatar-element style=\"background-color: rgb(166, 149, 231); font-size: 0px;\"><img src=\"assets/img/pepe.jpg\"></avatar-element><div class=\"user-caption\"><p><span class=\"user-title\">${i}</span><span><span class=\"message-status\"></span><span class=\"message-time\">18:33</span></span></p><p><span class=\"user-last-message\"><b>-_-_-_-: </b>qweasd</span><span></span></p></div></div>`;\r\n        i++;\r\n        this.scroll.append(li);\r\n      };\r\n      for(let i = 0; i < 500; ++i) {\r\n        add();\r\n      }\r\n      (window as any).addElement = add;\r\n    } */\r\n\r\n    rootScope.addEventListener('user_update', (userId) => {\r\n      //console.log('updating user:', user, dialog);\r\n      \r\n      const dom = this.getDialogDom(userId);\r\n      if(dom && !appUsersManager.isBot(userId) && userId !== rootScope.myId) {\r\n        const user = appUsersManager.getUser(userId);\r\n        const online = user.status?._ === 'userStatusOnline';\r\n        dom.avatarEl.classList.toggle('is-online', online);\r\n      }\r\n    });\r\n\r\n    /* rootScope.$on('dialog_top', (e) => {\r\n      const dialog = e;\r\n\r\n      this.setLastMessage(dialog);\r\n      this.setDialogPosition(dialog);\r\n\r\n      this.setFiltersUnreadCount();\r\n    }); */\r\n\r\n    rootScope.addEventListener('dialog_flush', (e) => {\r\n      const peerId: number = e.peerId;\r\n      const dialog = appMessagesManager.getDialogOnly(peerId);\r\n      if(dialog) {\r\n        this.setLastMessage(dialog);\r\n        this.validateForFilter();\r\n        this.setFiltersUnreadCount();\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('dialogs_multiupdate', (e) => {\r\n      const dialogs = e;\r\n\r\n      for(const id in dialogs) {\r\n        const dialog = dialogs[id];\r\n        this.updateDialog(dialog);\r\n      }\r\n\r\n      this.validateForFilter();\r\n      this.setFiltersUnreadCount();\r\n    });\r\n\r\n    rootScope.addEventListener('dialog_drop', (e) => {\r\n      const {peerId} = e;\r\n\r\n      this.deleteDialog(peerId);\r\n      this.setFiltersUnreadCount();\r\n    });\r\n\r\n    rootScope.addEventListener('dialog_unread', (e) => {\r\n      const info = e;\r\n\r\n      const dialog = appMessagesManager.getDialogOnly(info.peerId);\r\n      if(dialog) {\r\n        this.setUnreadMessages(dialog);\r\n        this.validateForFilter();\r\n        this.setFiltersUnreadCount();\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('dialog_notify_settings', (dialog) => {\r\n      this.setUnreadMessages(dialog); // возможно это не нужно, но нужно менять is-muted\r\n    });\r\n\r\n    rootScope.addEventListener('dialog_draft', (e) => {\r\n      const dialog = appMessagesManager.getDialogOnly(e.peerId);\r\n      if(dialog) {\r\n        this.updateDialog(dialog);\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('peer_changed', (e) => {\r\n      const peerId = e;\r\n\r\n      //const perf = performance.now();\r\n      for(const element of this.lastActiveElements) {\r\n        if(+element.dataset.peerId !== peerId) {\r\n          element.classList.remove('active');\r\n          this.lastActiveElements.delete(element);\r\n        }\r\n      }\r\n\r\n      const elements = Array.from(document.querySelectorAll(`[data-autonomous=\"0\"] li[data-peer-id=\"${peerId}\"]`)) as HTMLElement[];\r\n      elements.forEach(element => {\r\n        element.classList.add('active');\r\n        this.lastActiveElements.add(element);\r\n      });\r\n      //this.log('peer_changed total time:', performance.now() - perf);\r\n    });\r\n\r\n    rootScope.addEventListener('filter_update', (e) => {\r\n      const filter: DialogFilter = e;\r\n      if(!this.filtersRendered[filter.id]) {\r\n        this.addFilter(filter);\r\n        return;\r\n      } else if(filter.id === this.filterId) { // это нет тут смысла вызывать, так как будет dialogs_multiupdate\r\n        //this.validateForFilter();\r\n        const folder = appMessagesManager.dialogsStorage.getFolder(filter.id);\r\n        this.validateForFilter();\r\n        for(let i = 0, length = folder.length; i < length; ++i) {\r\n          const dialog = folder[i];\r\n          this.updateDialog(dialog);\r\n        }\r\n        this.setFiltersUnreadCount();\r\n      }\r\n\r\n      const elements = this.filtersRendered[filter.id];\r\n      elements.title.innerHTML = RichTextProcessor.wrapEmojiText(filter.title);\r\n    });\r\n\r\n    rootScope.addEventListener('filter_delete', (e) => {\r\n      const filter: DialogFilter = e;\r\n      const elements = this.filtersRendered[filter.id];\r\n      if(!elements) return;\r\n\r\n      // set tab\r\n      //(this.folders.menu.firstElementChild.children[Math.max(0, filter.id - 2)] as HTMLElement).click();\r\n      (this.folders.menu.firstElementChild as HTMLElement).click();\r\n\r\n      elements.container.remove();\r\n      elements.menu.remove();\r\n      \r\n      delete this.chatLists[filter.id];\r\n      delete this.scrollables[filter.id];\r\n      delete this.filtersRendered[filter.id];\r\n\r\n      if(Object.keys(this.filtersRendered).length <= 1) {\r\n        this.folders.menuScrollContainer.classList.add('hide');\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('filter_order', (e) => {\r\n      const order = e;\r\n      \r\n      const containerToAppend = this.folders.menu as HTMLElement;\r\n      order.forEach((filterId) => {\r\n        const filter = appMessagesManager.filtersStorage.filters[filterId];\r\n        const renderedFilter = this.filtersRendered[filterId];\r\n\r\n        positionElementByIndex(renderedFilter.menu, containerToAppend, filter.orderIndex);\r\n        positionElementByIndex(renderedFilter.container, this.folders.container, filter.orderIndex);\r\n      });\r\n\r\n      /* if(this.filterId) {\r\n        const tabIndex = order.indexOf(this.filterId) + 1;\r\n        selectTab.prevId = tabIndex;\r\n      } */\r\n    });\r\n\r\n    rootScope.addEventListener('peer_typings', (e) => {\r\n      const {peerId, typings} = e;\r\n\r\n      const dialog = appMessagesManager.getDialogOnly(peerId);\r\n      if(!dialog) return;\r\n\r\n      if(typings.length) {\r\n        this.setTyping(dialog);\r\n      } else {\r\n        this.unsetTyping(dialog);\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('state_cleared', () => {\r\n      //setTimeout(() => \r\n      appStateManager.getState().then((state) => {\r\n        appUsersManager.clear();\r\n        appChatsManager.clear();\r\n        \r\n        const filtersStorage = appMessagesManager.filtersStorage;\r\n        const filters = filtersStorage.filters;\r\n        for(const filterId in filters) { // delete filters\r\n          rootScope.dispatchEvent('updateDialogFilter', {\r\n            _: 'updateDialogFilter',\r\n            id: +filterId,\r\n          });\r\n        }\r\n\r\n        appMessagesManager.clear();\r\n\r\n        /* const clearPromises: Promise<any>[] = [];\r\n        for(const name in appStateManager.storagesResults) {\r\n          const results = appStateManager.storagesResults[name as keyof AppStateManager['storages']];\r\n          const storage = appStateManager.storages[name as keyof AppStateManager['storages']];\r\n          results.length = 0;\r\n          clearPromises.push(storage.clear());\r\n        } */\r\n\r\n        this.validateForFilter();\r\n\r\n        this.onStateLoaded(state);\r\n      })//, 5000);\r\n    });\r\n\r\n    const foldersScrollable = new ScrollableX(this.folders.menuScrollContainer);\r\n    bottomPart.prepend(this.folders.menuScrollContainer);\r\n    const selectTab = horizontalMenu(this.folders.menu, this.folders.container, (id, tabContent) => {\r\n      /* if(id !== 0) {\r\n        id += 1;\r\n      } */\r\n\r\n      id = +tabContent.dataset.filterId || 0;\r\n\r\n      if(this.filterId === id) return;\r\n\r\n      this.chatLists[id].innerHTML = '';\r\n      this.filterId = id;\r\n      this.onTabChange();\r\n    }, () => {\r\n      for(const folderId in this.chatLists) {\r\n        if(+folderId !== this.filterId) {\r\n          this.chatLists[folderId].innerHTML = '';\r\n        }\r\n      }\r\n    }, undefined, foldersScrollable);\r\n\r\n    //selectTab(0);\r\n    (this.folders.menu.firstElementChild as HTMLElement).click();\r\n    appMessagesManager.construct();\r\n    appStateManager.getState().then((state) => {\r\n      return this.onStateLoaded(state);\r\n    }).then(() => {\r\n      //return;\r\n      \r\n      const isLoadedMain = appMessagesManager.dialogsStorage.isDialogsLoaded(0);\r\n      const isLoadedArchive = appMessagesManager.dialogsStorage.isDialogsLoaded(1);\r\n      const wasLoaded = isLoadedMain || isLoadedArchive;\r\n      const a: Promise<any> = isLoadedMain ? Promise.resolve() : appMessagesManager.getConversationsAll('', 0);\r\n      const b: Promise<any> = isLoadedArchive ? Promise.resolve() : appMessagesManager.getConversationsAll('', 1);\r\n      a.finally(() => {\r\n        b.then(() => {\r\n          this.accumulateArchivedUnread();\r\n\r\n          if(wasLoaded) {\r\n            (apiUpdatesManager.updatesState.syncLoading || Promise.resolve()).then(() => {\r\n              appMessagesManager.refreshConversations();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    new ConnectionStatusComponent(this.chatsContainer);\r\n    this.chatsContainer.append(bottomPart);\r\n\r\n    setTimeout(() => {\r\n      lottieLoader.loadLottieWorkers();\r\n    }, 200);\r\n  }\r\n\r\n  private async onStateLoaded(state: State) {\r\n    appNotificationsManager.getNotifyPeerTypeSettings();\r\n      \r\n    const renderFiltersPromise = appMessagesManager.filtersStorage.getDialogFilters().then((filters) => {\r\n      for(const filter of filters) {\r\n        this.addFilter(filter);\r\n      }\r\n    });\r\n\r\n    if(state.filters && Object.keys(state.filters).length) {\r\n      await renderFiltersPromise;\r\n      if(this.showFiltersPromise) {\r\n        await this.showFiltersPromise;\r\n      }\r\n    }\r\n\r\n    if(appStateManager.storagesResults.dialogs.length) {\r\n      appDraftsManager.addMissedDialogs();\r\n    }\r\n\r\n    return this.loadDialogs();\r\n  }\r\n\r\n  private getOffset(side: 'top' | 'bottom'): {index: number, pos: number} {\r\n    if(!this.scroll.loadedAll[side]) {\r\n      const element = (side === 'top' ? this.chatList.firstElementChild : this.chatList.lastElementChild) as HTMLElement;\r\n      if(element) {\r\n        const peerId = +element.dataset.peerId;\r\n        const dialog = appMessagesManager.getDialogByPeerId(peerId);\r\n        return {index: dialog[0].index, pos: dialog[1]};\r\n      }\r\n    }\r\n\r\n    return {index: 0, pos: -1};\r\n  }\r\n\r\n  private isDialogMustBeInViewport(dialog: Dialog) {\r\n    if(dialog.migratedTo !== undefined) return false;\r\n    //return true;\r\n    const topOffset = this.getOffset('top');\r\n    const bottomOffset = this.getOffset('bottom');\r\n    \r\n    if(!topOffset.index && !bottomOffset.index) {\r\n      return true;\r\n    }\r\n    \r\n    const index = dialog.index;\r\n    return (!topOffset.index || index <= topOffset.index) && (!bottomOffset.index || index >= bottomOffset.index);\r\n  }\r\n\r\n  private deleteDialog(peerId: number) {\r\n    const dom = this.getDialogDom(peerId);\r\n    if(dom) {\r\n      dom.listEl.remove();\r\n      delete this.doms[peerId];\r\n\r\n      this.onListLengthChange();\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private updateDialog(dialog: Dialog) {\r\n    if(!dialog) {\r\n      return;\r\n    }\r\n\r\n    if(this.isDialogMustBeInViewport(dialog)) {\r\n      if(!this.doms.hasOwnProperty(dialog.peerId)) {\r\n        const ret = this.addDialogNew({dialog});\r\n        if(ret) {\r\n          const idx = appMessagesManager.getDialogByPeerId(dialog.peerId)[1];\r\n          positionElementByIndex(ret.dom.listEl, this.chatList, idx);\r\n          this.onListLengthChange();\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    } else {\r\n      this.deleteDialog(dialog.peerId);\r\n      return;\r\n    }\r\n\r\n    /* const topOffset = this.getOffset('top');\r\n    if(topOffset.index && dialog.index > topOffset.index) {\r\n      const dom = this.getDialogDom(dialog.peerId);\r\n      if(dom) {\r\n        dom.listEl.remove();\r\n        delete this.doms[dialog.peerId];\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if(!this.doms.hasOwnProperty(dialog.peerId)) {\r\n      this.addDialogNew({dialog});\r\n    } */\r\n\r\n    if(this.getDialogDom(dialog.peerId)) {\r\n      this.setLastMessage(dialog);\r\n      this.reorderDialogs();\r\n    }\r\n  }\r\n\r\n  public onTabChange = () => {\r\n    this.doms = {};\r\n    this.scroll = this.scrollables[this.filterId];\r\n    this.scroll.loadedAll.top = true;\r\n    this.scroll.loadedAll.bottom = false;\r\n    this.loadDialogsPromise = undefined;\r\n    this.chatList = this.chatLists[this.filterId];\r\n    this.loadDialogs();\r\n  };\r\n\r\n  private setFilterUnreadCount(filterId: number, folder?: Dialog[]) {\r\n    const unreadSpan = filterId === 0 ? this.allUnreadCount : this.filtersRendered[filterId]?.unread;\r\n    if(!unreadSpan) {\r\n      return;\r\n    }\r\n\r\n    folder = folder || appMessagesManager.dialogsStorage.getFolder(filterId);\r\n    let mutedCount = 0;\r\n    let notMutedCount = 0;\r\n    folder.forEach(dialog => {\r\n      const isMuted = appNotificationsManager.isPeerLocalMuted(dialog.peerId, true);\r\n\r\n      if(isMuted && filterId === 0) {\r\n        return;\r\n      }\r\n\r\n      const value = +!!dialog.unread_count || +dialog.pFlags.unread_mark || 0; // * unread_mark can be undefined\r\n      if(isMuted) mutedCount += value;\r\n      else notMutedCount += value;\r\n    });\r\n    \r\n    unreadSpan.classList.toggle('badge-gray', mutedCount && !notMutedCount);\r\n    \r\n    const sum = mutedCount + notMutedCount;\r\n    unreadSpan.innerText = sum ? '' + sum : '';\r\n  }\r\n\r\n  private setFiltersUnreadCount() {\r\n    for(const filterId in this.filtersRendered) {\r\n      this.setFilterUnreadCount(+filterId);\r\n    }\r\n\r\n    this.setFilterUnreadCount(0);\r\n  }\r\n\r\n  /**\r\n   * Удалит неподходящие чаты из списка, но не добавит их(!)\r\n   */\r\n  private validateForFilter() {\r\n    // !WARNING, возможно это было зачем-то, но комментарий исправил архивирование\r\n    //if(this.filterId === 0) return;\r\n\r\n    const folder = appMessagesManager.dialogsStorage.getFolder(this.filterId);\r\n    for(const _peerId in this.doms) {\r\n      const peerId = +_peerId;\r\n\r\n      // если больше не подходит по фильтру, удаляем\r\n      if(folder.findIndex((dialog) => dialog.peerId === peerId) === -1) {\r\n        this.deleteDialog(peerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public generateScrollable(list: HTMLUListElement, filterId: number) {\r\n    const scrollable = new Scrollable(null, 'CL', 500);\r\n    scrollable.container.addEventListener('scroll', this.onChatsRegularScroll);\r\n    scrollable.container.dataset.filterId = '' + filterId;\r\n    scrollable.container.append(list);\r\n    scrollable.onScrolledTop = this.onChatsScrollTop;\r\n    scrollable.onScrolledBottom = this.onChatsScroll;\r\n    scrollable.setVirtualContainer(list);\r\n\r\n    this.chatLists[filterId] = list;\r\n    this.scrollables[filterId] = scrollable;\r\n\r\n    return scrollable;\r\n  }\r\n\r\n  private addFilter(filter: Pick<DialogFilter, 'title' | 'id' | 'orderIndex'> & Partial<{titleEl: HTMLElement}>) {\r\n    if(this.filtersRendered[filter.id]) return;\r\n\r\n    const menuTab = document.createElement('div');\r\n    menuTab.classList.add('menu-horizontal-div-item');\r\n    const span = document.createElement('span');\r\n    const titleSpan = document.createElement('span');\r\n    titleSpan.classList.add('text-super');\r\n    if(filter.titleEl) titleSpan.append(filter.titleEl);\r\n    else titleSpan.innerHTML = RichTextProcessor.wrapEmojiText(filter.title);\r\n    const unreadSpan = document.createElement('div');\r\n    unreadSpan.classList.add('badge', 'badge-20', 'badge-primary');\r\n    const i = document.createElement('i');\r\n    span.append(titleSpan, unreadSpan, i);\r\n    menuTab.append(span);\r\n    ripple(menuTab);\r\n\r\n    const containerToAppend = this.folders.menu as HTMLElement;\r\n    positionElementByIndex(menuTab, containerToAppend, filter.orderIndex);\r\n    //containerToAppend.append(li);\r\n\r\n    const ul = this.createChatList();\r\n    const scrollable = this.generateScrollable(ul, filter.id);\r\n    const div = scrollable.container;\r\n    //this.folders.container.append(div);\r\n    positionElementByIndex(scrollable.container, this.folders.container, filter.orderIndex);\r\n\r\n    this.setListClickListener(ul, null, true);\r\n\r\n    this.filtersRendered[filter.id] = {\r\n      menu: menuTab,\r\n      container: div,\r\n      unread: unreadSpan,\r\n      title: titleSpan\r\n    };\r\n\r\n    if(!this.showFiltersPromise && Object.keys(this.filtersRendered).length > 1) {\r\n      this.showFiltersPromise = new Promise<void>((resolve) => {\r\n        window.setTimeout(() => {\r\n          this.showFiltersPromise = undefined;\r\n          if(Object.keys(this.filtersRendered).length > 1) {\r\n            this.folders.menuScrollContainer.classList.remove('hide');\r\n            this.setFiltersUnreadCount();\r\n          }\r\n          resolve();\r\n        }, 0);\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadDialogs(side: SliceSides = 'bottom') {\r\n    /* if(testScroll) {\r\n      return;\r\n    } */\r\n    \r\n    if(this.loadDialogsPromise/*  || 1 === 1 */) return this.loadDialogsPromise;\r\n\r\n    const promise = new Promise<void>(async(resolve, reject) => {\r\n      if(!this.chatList.childElementCount) {\r\n        const container = this.chatList.parentElement;\r\n        container.append(this.chatsPreloader);\r\n      }\r\n  \r\n      //return;\r\n  \r\n      const filterId = this.filterId;\r\n      let loadCount = 30/*this.chatsLoadCount */;\r\n      let offsetIndex = 0;\r\n      \r\n      if(side === 'top') {\r\n        const element = this.chatList.firstElementChild as HTMLElement;\r\n        if(element) {\r\n          const peerId = +element.dataset.peerId;\r\n          const storage = appMessagesManager.dialogsStorage.getFolder(filterId);\r\n          const index = storage.findIndex(dialog => dialog.peerId === peerId);\r\n          const needIndex = Math.max(0, index - loadCount);\r\n          loadCount = index - needIndex;\r\n          offsetIndex = storage[needIndex].index + 1;\r\n        }\r\n      } else {\r\n        const element = this.chatList.lastElementChild as HTMLElement;\r\n        if(element) {\r\n          const peerId = +element.dataset.peerId;\r\n          const dialog = appMessagesManager.getDialogOnly(peerId);\r\n          offsetIndex = dialog.index;\r\n        }\r\n      }\r\n      \r\n      //let offset = storage[storage.length - 1]?.index || 0;\r\n  \r\n      try {\r\n        //console.time('getDialogs time');\r\n  \r\n        const getConversationPromise = (this.filterId > 1 ? appUsersManager.getContacts() as Promise<any> : Promise.resolve()).then(() => {\r\n          return appMessagesManager.getConversations('', offsetIndex, loadCount, filterId);\r\n        });\r\n  \r\n        const result = await getConversationPromise;\r\n  \r\n        if(this.filterId !== filterId) {\r\n          return;\r\n        }\r\n  \r\n        //console.timeEnd('getDialogs time');\r\n  \r\n        // * loaded all\r\n        //if(!result.dialogs.length || this.chatList.childElementCount === result.count) {\r\n        // !result.dialogs.length не подходит, так как при супердревном диалоге getConversations его не выдаст.\r\n        //if(this.chatList.childElementCount === result.count) {\r\n        if(side === 'bottom') {\r\n          if(result.isEnd) {\r\n            this.scroll.loadedAll[side] = true;\r\n          }\r\n        } else {\r\n          const storage = appMessagesManager.dialogsStorage.getFolder(filterId);\r\n          if(!result.dialogs.length || (storage.length && storage[0].index < offsetIndex)) {\r\n            this.scroll.loadedAll[side] = true;\r\n          }\r\n        }\r\n        \r\n        if(result.dialogs.length) {\r\n          const dialogs = side === 'top' ? result.dialogs.slice().reverse() : result.dialogs;\r\n  \r\n          dialogs.forEach((dialog) => {\r\n            this.addDialogNew({\r\n              dialog,\r\n              append: side === 'bottom'\r\n            });\r\n          });\r\n        }\r\n\r\n        this.onListLengthChange();\r\n  \r\n        this.log.debug('getDialogs ' + loadCount + ' dialogs by offset:', offsetIndex, result, this.chatList.childElementCount);\r\n  \r\n        setTimeout(() => {\r\n          this.scroll.onScroll();\r\n        }, 0);\r\n      } catch(err) {\r\n        this.log.error(err);\r\n      }\r\n      \r\n      this.chatsPreloader.remove();\r\n      resolve();\r\n    });\r\n\r\n    return this.loadDialogsPromise = promise.finally(() => {\r\n      this.loadDialogsPromise = undefined;\r\n    });\r\n  }\r\n\r\n  private onListLengthChange = () => {\r\n    //return;\r\n\r\n    if(this.filterId < 2) return;\r\n    \r\n    const emptyFolder = this.chatList.parentElement.querySelector('.empty-folder');\r\n    if(this.scroll.loadedAll.bottom && !this.chatList.childElementCount) {\r\n      if(emptyFolder) {\r\n        return;\r\n      }\r\n\r\n      const BASE_CLASS = 'empty-folder';\r\n      const div = document.createElement('div');\r\n      div.classList.add(BASE_CLASS);\r\n      \r\n      div.append(wrapLocalSticker({\r\n        emoji: '📂',\r\n        width: 128,\r\n        height: 128\r\n      }).container);\r\n\r\n      const header = document.createElement('div');\r\n      header.classList.add(BASE_CLASS + '-header');\r\n      _i18n(header, 'FilterNoChatsToDisplay');\r\n\r\n      const subtitle = document.createElement('div');\r\n      subtitle.classList.add(BASE_CLASS + '-subtitle');\r\n      _i18n(subtitle, 'FilterNoChatsToDisplayInfo');\r\n\r\n      const button = Button('btn-primary btn-color-primary btn-control tgico', {\r\n        text: 'FilterHeaderEdit',\r\n        icon: 'settings'\r\n      });\r\n\r\n      attachClickEvent(button, () => {\r\n        new AppEditFolderTab(appSidebarLeft).open(appMessagesManager.filtersStorage.filters[this.filterId]);\r\n      });\r\n\r\n      div.append(header, subtitle, button);\r\n\r\n      this.chatList.parentElement.append(div);\r\n    } else if(emptyFolder) {\r\n      emptyFolder.remove();\r\n    }\r\n  };\r\n\r\n  public onChatsRegularScroll = () => {\r\n    if(this.sliceTimeout) clearTimeout(this.sliceTimeout);\r\n    this.sliceTimeout = window.setTimeout(() => {\r\n      this.sliceTimeout = undefined;\r\n\r\n      if(!this.chatList.childElementCount) {\r\n        return;\r\n      }\r\n\r\n      /* const observer = new IntersectionObserver((entries) => {\r\n        const \r\n      });\r\n\r\n      Array.from(this.chatList.children).forEach(el => {\r\n        observer.observe(el);\r\n      }); */\r\n\r\n      const scrollTopWas = this.scroll.scrollTop;\r\n\r\n      const firstElementChild = this.chatList.firstElementChild;\r\n      const rectContainer = this.scroll.container.getBoundingClientRect();\r\n      const rectTarget = firstElementChild.getBoundingClientRect();\r\n      const children = Array.from(this.scroll.splitUp.children) as HTMLElement[];\r\n\r\n      // const padding = 8;\r\n      // const offsetTop = this.folders.container.offsetTop;\r\n      let offsetTop = this.scroll.splitUp.offsetTop;\r\n      if(offsetTop && scrollTopWas < offsetTop) offsetTop -= scrollTopWas;\r\n      // const offsetTop = scrollTopWas < padding ? padding - scrollTopWas : 0;\r\n      const firstY = rectContainer.y + offsetTop;\r\n      const lastY = rectContainer.y/*  - 8 */; // 8px - .chatlist padding-bottom\r\n      \r\n      const firstElement = findUpTag(document.elementFromPoint(Math.ceil(rectTarget.x), Math.ceil(firstY + 1)), firstElementChild.tagName) as HTMLElement;\r\n      const lastElement = findUpTag(document.elementFromPoint(Math.ceil(rectTarget.x), Math.floor(lastY + rectContainer.height - 1)), firstElementChild.tagName) as HTMLElement;\r\n\r\n      //alert('got element:' + rect.y);\r\n\r\n      if(!firstElement || !lastElement) {\r\n        return;\r\n      }\r\n\r\n      //alert('got element:' + !!firstElement);\r\n\r\n      const firstElementRect = firstElement.getBoundingClientRect();\r\n      const elementOverflow = firstElementRect.y - firstY;\r\n\r\n      const sliced: HTMLElement[] = [];\r\n      const firstIndex = children.indexOf(firstElement);\r\n      const lastIndex = children.indexOf(lastElement);\r\n\r\n      const saveLength = 10;\r\n\r\n      const sliceFromStart = isSafari ? [] : children.slice(0, Math.max(0, firstIndex - saveLength));\r\n      const sliceFromEnd = children.slice(lastIndex + saveLength);\r\n\r\n      /* if(sliceFromStart.length !== sliceFromEnd.length) {\r\n        console.log('not equal', sliceFromStart.length, sliceFromEnd.length);\r\n      }\r\n\r\n      if(sliceFromStart.length > sliceFromEnd.length) {\r\n        const diff = sliceFromStart.length - sliceFromEnd.length;\r\n        sliceFromStart.splice(0, diff);\r\n      } else if(sliceFromEnd.length > sliceFromStart.length) {\r\n        const diff = sliceFromEnd.length - sliceFromStart.length;\r\n        sliceFromEnd.splice(sliceFromEnd.length - diff, diff);\r\n      } */\r\n\r\n      if(sliceFromStart.length) {\r\n        this.scroll.loadedAll['top'] = false;\r\n      }\r\n\r\n      if(sliceFromEnd.length) {\r\n        this.scroll.loadedAll['bottom'] = false;\r\n      }\r\n\r\n      sliced.push(...sliceFromStart);\r\n      sliced.push(...sliceFromEnd);\r\n\r\n      sliced.forEach(el => {\r\n        const peerId = +el.dataset.peerId;\r\n        this.deleteDialog(peerId);\r\n      });\r\n\r\n      //this.log('[slicer] elements', firstElement, lastElement, rect, sliced, sliceFromStart.length, sliceFromEnd.length);\r\n\r\n      //this.log('[slicer] reset scrollTop', this.scroll.scrollTop, firstElement.offsetTop, firstElementRect.y, rect.y, elementOverflow);\r\n\r\n      //alert('left length:' + children.length);\r\n\r\n      this.scroll.scrollTop = firstElement.offsetTop - elementOverflow;\r\n      /* const firstElementRect = firstElement.getBoundingClientRect();\r\n      const scrollTop =  */\r\n\r\n      //this.scroll.scrollIntoView(firstElement, false);\r\n    }, 200);\r\n  };\r\n\r\n  public onChatsScrollTop = () => {\r\n    this.onChatsScroll('top');\r\n  };\r\n  \r\n  public onChatsScroll = (side: SliceSides = 'bottom') => {\r\n    if(this.scroll.loadedAll[side] || this.loadDialogsPromise) return;\r\n    this.log('onChatsScroll', side);\r\n    this.loadDialogs(side);\r\n  };\r\n\r\n  public setListClickListener(list: HTMLUListElement, onFound?: () => void, withContext = false, autonomous = false, openInner = false) {\r\n    let lastActiveListElement: HTMLElement;\r\n\r\n    const setPeerFunc = (openInner ? appImManager.setInnerPeer : appImManager.setPeer).bind(appImManager);\r\n\r\n    list.dataset.autonomous = '' + +autonomous;\r\n    list.addEventListener('mousedown', (e) => {\r\n      if(e.button !== 0) return;\r\n      //cancelEvent(e);\r\n\r\n      this.log('dialogs click list');\r\n      const target = e.target as HTMLElement;\r\n      const elem = findUpTag(target, 'LI');\r\n\r\n      if(!elem) {\r\n        return;\r\n      }\r\n\r\n      if(autonomous) {\r\n        const sameElement = lastActiveListElement === elem;\r\n        if(lastActiveListElement && !sameElement) {\r\n          lastActiveListElement.classList.remove('active');\r\n        }\r\n\r\n        if(elem) {\r\n          elem.classList.add('active');\r\n          lastActiveListElement = elem;\r\n          this.lastActiveElements.add(elem);\r\n        }\r\n      }\r\n\r\n      if(elem) {\r\n        if(onFound) onFound();\r\n\r\n        const peerId = +elem.dataset.peerId;\r\n        const lastMsgId = +elem.dataset.mid || undefined;\r\n\r\n        setPeerFunc(peerId, lastMsgId);\r\n      } else {\r\n        setPeerFunc(0);\r\n      }\r\n    }, {capture: true});\r\n\r\n    if(DEBUG) {\r\n      list.addEventListener('dblclick', (e) => {\r\n        const li = findUpTag(e.target, 'LI');\r\n        if(li) {\r\n          const peerId = +li.dataset.peerId;\r\n          this.log('debug dialog:', appMessagesManager.getDialogByPeerId(peerId));\r\n        }\r\n      });\r\n    }\r\n\r\n    if(withContext) {\r\n      attachContextMenuListener(list, this.contextMenu.onContextMenu);\r\n    }\r\n  }\r\n\r\n  public createChatList(/* options: {\r\n    avatarSize?: number,\r\n    handheldsSize?: number,\r\n    //size?: number,\r\n  } = {} */) {\r\n    const list = document.createElement('ul');\r\n    list.classList.add('chatlist'/* , \r\n      'chatlist-avatar-' + (options.avatarSize || 54) *//* , 'chatlist-' + (options.size || 72) */);\r\n\r\n    /* if(options.handheldsSize) {\r\n      list.classList.add('chatlist-handhelds-' + options.handheldsSize);\r\n    } */\r\n\r\n    return list;\r\n  }\r\n\r\n  private reorderDialogs() {\r\n    //const perf = performance.now();\r\n    if(this.reorderDialogsTimeout) {\r\n      window.cancelAnimationFrame(this.reorderDialogsTimeout);\r\n    }\r\n    \r\n    this.reorderDialogsTimeout = window.requestAnimationFrame(() => {\r\n      this.reorderDialogsTimeout = 0;\r\n      const offset = Math.max(0, this.getOffset('top').pos);\r\n  \r\n      const dialogs = appMessagesManager.dialogsStorage.getFolder(this.filterId);\r\n      const currentOrder = (Array.from(this.chatList.children) as HTMLElement[]).map(el => +el.dataset.peerId);\r\n  \r\n      dialogs.forEach((dialog, index) => {\r\n        const dom = this.getDialogDom(dialog.peerId);\r\n        if(!dom) {\r\n          return;\r\n        }\r\n  \r\n        const needIndex = index - offset;\r\n        if(needIndex > currentOrder.length) {\r\n          this.deleteDialog(dialog.peerId);\r\n          return;\r\n        }\r\n\r\n        const peerIdByIndex = currentOrder[needIndex];\r\n  \r\n        if(peerIdByIndex !== dialog.peerId) {\r\n          if(positionElementByIndex(dom.listEl, this.chatList, needIndex)) {\r\n            this.log.debug('setDialogPosition:', dialog, dom, peerIdByIndex, needIndex);\r\n          }\r\n        }\r\n      });\r\n  \r\n      //this.log('Reorder time:', performance.now() - perf);\r\n    });\r\n  }\r\n\r\n  public setLastMessage(dialog: Dialog, lastMessage?: any, dom?: DialogDom, highlightWord?: string) {\r\n    ///////console.log('setlastMessage:', lastMessage);\r\n    if(!dom) {\r\n      dom = this.getDialogDom(dialog.peerId);\r\n\r\n      if(!dom) {\r\n        //this.log.error('no dom for dialog:', dialog, lastMessage, dom, highlightWord);\r\n        return;\r\n      }\r\n    }\r\n\r\n    let draftMessage: MyDraftMessage;\r\n    if(!lastMessage) {\r\n      if(dialog.draft && dialog.draft._ === 'draftMessage') {\r\n        draftMessage = dialog.draft;\r\n      }\r\n      \r\n      lastMessage = appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\r\n    }\r\n\r\n    if(lastMessage._ === 'messageEmpty'/*  || (lastMessage._ === 'messageService' && !lastMessage.rReply) */) {\r\n      dom.lastMessageSpan.innerHTML = '';\r\n      dom.lastTimeSpan.innerHTML = '';\r\n      delete dom.listEl.dataset.mid;\r\n      return;\r\n    }\r\n\r\n    let peer = dialog.peer;\r\n    let peerId = dialog.peerId;\r\n    //let peerId = appMessagesManager.getMessagePeer(lastMessage);\r\n\r\n    //console.log('setting last message:', lastMessage);\r\n\r\n    /* if(!dom.lastMessageSpan.classList.contains('user-typing')) */ {\r\n\r\n      dom.lastMessageSpan.textContent = '';\r\n      if(highlightWord && lastMessage.message) {\r\n        dom.lastMessageSpan.append(appMessagesManager.wrapMessageForReply(lastMessage, undefined, undefined, false, highlightWord));\r\n      } else if(draftMessage) {\r\n        dom.lastMessageSpan.append(appMessagesManager.wrapMessageForReply(draftMessage));\r\n      } else if(!lastMessage.deleted) {\r\n        dom.lastMessageSpan.append(appMessagesManager.wrapMessageForReply(lastMessage));\r\n      }\r\n  \r\n      /* if(lastMessage.from_id === auth.id) { // You:  */\r\n      if(draftMessage) {\r\n        const bold = document.createElement('b');\r\n        bold.classList.add('danger');\r\n        bold.append(i18n('Draft'));\r\n        bold.append(': ');\r\n        dom.lastMessageSpan.prepend(bold);\r\n      } else if(peer._ !== 'peerUser' && peerId !== lastMessage.fromId && !lastMessage.action) {\r\n        const sender = appPeersManager.getPeer(lastMessage.fromId);\r\n        if(sender && sender.id) {\r\n          const senderBold = document.createElement('b');\r\n\r\n          if(sender.id === rootScope.myId) {\r\n            senderBold.append(i18n('FromYou'));\r\n          } else {\r\n            //str = sender.first_name || sender.last_name || sender.username;\r\n            senderBold.append(new PeerTitle({\r\n              peerId: lastMessage.fromId,\r\n              onlyFirstName: true,\r\n            }).element);\r\n          }\r\n\r\n          senderBold.append(': ');\r\n          //console.log(sender, senderBold.innerText);\r\n          dom.lastMessageSpan.prepend(senderBold);\r\n        } //////// else console.log('no sender', lastMessage, peerId);\r\n      }\r\n    }\r\n\r\n    if(!lastMessage.deleted || draftMessage/*  && lastMessage._ !== 'draftMessage' */) {\r\n      const date = draftMessage ? Math.max(draftMessage.date, lastMessage.date || 0) : lastMessage.date;\r\n      dom.lastTimeSpan.textContent = '';\r\n      dom.lastTimeSpan.append(formatDateAccordingToTodayNew(new Date(date * 1000)));\r\n    } else dom.lastTimeSpan.textContent = '';\r\n\r\n    if(this.doms[peerId] === dom) {\r\n      this.setUnreadMessages(dialog);\r\n    } else { // means search\r\n      dom.listEl.dataset.mid = lastMessage.mid;\r\n    }\r\n  }\r\n\r\n  private setUnreadMessages(dialog: Dialog) {\r\n    const dom = this.getDialogDom(dialog.peerId);\r\n\r\n    if(dialog.folder_id === 1) {\r\n      this.accumulateArchivedUnread();\r\n    }\r\n\r\n    if(!dom) {\r\n      //this.log.error('setUnreadMessages no dom!', dialog);\r\n      return;\r\n    }\r\n\r\n    const isMuted = appNotificationsManager.isPeerLocalMuted(dialog.peerId, true);\r\n    const wasMuted = dom.listEl.classList.contains('is-muted');\r\n    if(isMuted !== wasMuted) {\r\n      SetTransition(dom.listEl, 'is-muted', isMuted, 200);\r\n    }\r\n\r\n    const lastMessage = dialog.draft && dialog.draft._ === 'draftMessage' ? \r\n      dialog.draft : \r\n      appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\r\n    if(lastMessage._ !== 'messageEmpty' && !lastMessage.deleted && \r\n      lastMessage.pFlags.out && lastMessage.peerId !== rootScope.myId/*  && \r\n      dialog.read_outbox_max_id */) { // maybe comment, 06.20.2020\r\n      const outgoing = (lastMessage.pFlags && lastMessage.pFlags.unread)\r\n        /*  && dialog.read_outbox_max_id !== 0 */; // maybe uncomment, 31.01.2020\r\n    \r\n      //console.log('outgoing', outgoing, lastMessage);\r\n  \r\n      if(outgoing) {\r\n        dom.statusSpan.classList.remove('tgico-checks');\r\n        dom.statusSpan.classList.add('tgico-check');\r\n      } else {\r\n        dom.statusSpan.classList.remove('tgico-check');\r\n        dom.statusSpan.classList.add('tgico-checks');\r\n      }\r\n    } else dom.statusSpan.classList.remove('tgico-check', 'tgico-checks');\r\n\r\n    dom.unreadMessagesSpan.innerText = '';\r\n\r\n    const filter = appMessagesManager.filtersStorage.filters[this.filterId];\r\n    let isPinned: boolean;\r\n    if(filter) {\r\n      isPinned = filter.pinned_peers.findIndex(peerId => peerId === dialog.peerId) !== -1;\r\n    } else {\r\n      isPinned = !!dialog.pFlags.pinned;\r\n    }\r\n\r\n    if(isPinned) {\r\n      dom.unreadMessagesSpan.classList.add('tgico-chatspinned', 'tgico');\r\n    } else {\r\n      dom.unreadMessagesSpan.classList.remove('tgico-chatspinned', 'tgico');\r\n    }\r\n\r\n    if(dialog.unread_count || dialog.pFlags.unread_mark) {\r\n      //dom.unreadMessagesSpan.innerText = '' + (dialog.unread_count ? formatNumber(dialog.unread_count, 1) : ' ');\r\n      dom.unreadMessagesSpan.innerText = '' + (dialog.unread_count || ' ');\r\n      dom.unreadMessagesSpan.classList.add('unread');\r\n    } else {\r\n      dom.unreadMessagesSpan.classList.remove('unread');\r\n    }\r\n  }\r\n\r\n  private accumulateArchivedUnread() {\r\n    if(this.accumulateArchivedTimeout) return;\r\n    this.accumulateArchivedTimeout = window.setTimeout(() => {\r\n      this.accumulateArchivedTimeout = 0;\r\n      const dialogs = appMessagesManager.dialogsStorage.getFolder(1);\r\n      const sum = dialogs.reduce((acc, dialog) => acc + dialog.unread_count, 0);\r\n      rootScope.dispatchEvent('dialogs_archived_unread', {count: sum});\r\n    }, 0);\r\n  }\r\n\r\n  private getDialogDom(peerId: number) {\r\n    return this.doms[peerId];\r\n  }\r\n\r\n  public addDialogNew(options: {\r\n    dialog: Dialog | number,\r\n    container?: HTMLUListElement | Scrollable | false,\r\n    drawStatus?: boolean,\r\n    rippleEnabled?: boolean,\r\n    onlyFirstName?: boolean,\r\n    meAsSaved?: boolean,\r\n    append?: boolean,\r\n    avatarSize?: number,\r\n    autonomous?: boolean,\r\n    lazyLoadQueue?: LazyLoadQueueIntersector,\r\n  }) {\r\n    return this.addDialog(options.dialog, options.container, options.drawStatus, options.rippleEnabled, options.onlyFirstName, options.meAsSaved, options.append, options.avatarSize, options.autonomous, options.lazyLoadQueue);\r\n  }\r\n\r\n  public addDialog(_dialog: Dialog | number, container?: HTMLUListElement | Scrollable | false, drawStatus = true, rippleEnabled = true, onlyFirstName = false, meAsSaved = true, append = true, avatarSize = 54, autonomous = !!container, lazyLoadQueue?: LazyLoadQueueIntersector) {\r\n    let dialog: Dialog;\r\n    \r\n    if(typeof(_dialog) === 'number') {\r\n      let originalDialog = appMessagesManager.getDialogOnly(_dialog);\r\n      if(!originalDialog) {\r\n        originalDialog = {\r\n          peerId: _dialog,\r\n          peer: appPeersManager.getOutputPeer(_dialog),\r\n          pFlags: {}\r\n        } as any;\r\n      }\r\n\r\n      dialog = originalDialog;\r\n    } else {\r\n      dialog = _dialog;\r\n    }\r\n\r\n    const peerId: number = dialog.peerId;\r\n\r\n    if(container === undefined) {\r\n      if(this.doms[peerId] || dialog.migratedTo !== undefined) return;\r\n\r\n      const filter = appMessagesManager.filtersStorage.filters[this.filterId];\r\n      if((filter && !appMessagesManager.filtersStorage.testDialogForFilter(dialog, filter)) || (!filter && this.filterId !== dialog.folder_id)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const avatarEl = new AvatarElement();\r\n    avatarEl.lazyLoadQueue = lazyLoadQueue;\r\n    avatarEl.setAttribute('dialog', meAsSaved ? '1' : '0');\r\n    avatarEl.setAttribute('peer', '' + peerId);\r\n    avatarEl.classList.add('dialog-avatar', 'avatar-' + avatarSize);\r\n\r\n    if(drawStatus && peerId !== rootScope.myId && dialog.peer) {\r\n      const peer = dialog.peer;\r\n      \r\n      switch(peer._) {\r\n        case 'peerUser':\r\n          const user = appUsersManager.getUser(peerId);\r\n          //console.log('found user', user);\r\n  \r\n          if(user.status && user.status._ === 'userStatusOnline') {\r\n            avatarEl.classList.add('is-online');\r\n          }\r\n  \r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    const captionDiv = document.createElement('div');\r\n    captionDiv.classList.add('user-caption');\r\n\r\n    const titleSpanContainer = document.createElement('span');\r\n    titleSpanContainer.classList.add('user-title');\r\n\r\n    const peerTitle = new PeerTitle({\r\n      peerId,\r\n      dialog: meAsSaved,\r\n      onlyFirstName,\r\n      plainText: false\r\n    });\r\n\r\n    titleSpanContainer.append(peerTitle.element);\r\n    //p.classList.add('')\r\n\r\n    // в других случаях иконка верификации не нужна (а первый - это главные чатлисты)\r\n    //if(!container) {\r\n      const peer = appPeersManager.getPeer(peerId);\r\n\r\n      // for muted icon\r\n      titleSpanContainer.classList.add('tgico'); // * эта строка будет актуальна только для !container, но ладно\r\n\r\n      if(peer?.pFlags?.verified) {\r\n        titleSpanContainer.classList.add('is-verified');\r\n        titleSpanContainer.append(generateVerifiedIcon());\r\n      }\r\n    //}\r\n    \r\n    const span = document.createElement('span');\r\n    span.classList.add('user-last-message');\r\n    span.setAttribute('dir', 'auto');\r\n\r\n    //captionDiv.append(titleSpan);\r\n    //captionDiv.append(span);\r\n\r\n    const li = document.createElement('li');\r\n    if(rippleEnabled) {\r\n      ripple(li);\r\n    }\r\n\r\n    li.append(avatarEl, captionDiv);\r\n    li.dataset.peerId = '' + peerId;\r\n\r\n    const statusSpan = document.createElement('span');\r\n    statusSpan.classList.add('message-status');\r\n\r\n    const lastTimeSpan = document.createElement('span');\r\n    lastTimeSpan.classList.add('message-time');\r\n\r\n    const unreadMessagesSpan = document.createElement('div');\r\n    unreadMessagesSpan.className = 'dialog-subtitle-badge badge badge-24';\r\n\r\n    const titleP = document.createElement('p');\r\n    titleP.classList.add('dialog-title');\r\n\r\n    const rightSpan = document.createElement('span');\r\n    rightSpan.classList.add('dialog-title-details');\r\n    rightSpan.append(statusSpan, lastTimeSpan);\r\n    titleP.append(titleSpanContainer, rightSpan);\r\n\r\n    const messageP = document.createElement('p');\r\n    messageP.classList.add('dialog-subtitle');\r\n    messageP.append(span, unreadMessagesSpan);\r\n\r\n    captionDiv.append(titleP, messageP);\r\n\r\n    const dom: DialogDom = {\r\n      avatarEl,\r\n      captionDiv,\r\n      titleSpan: peerTitle.element,\r\n      titleSpanContainer,\r\n      statusSpan,\r\n      lastTimeSpan,\r\n      unreadMessagesSpan,\r\n      lastMessageSpan: span,\r\n      containerEl: li,\r\n      listEl: li\r\n    };\r\n\r\n    /* let good = false;\r\n    for(const folderId in this.chatLists) {\r\n      if(this.chatLists[folderId] === container) {\r\n        good = true;\r\n      }\r\n    } */\r\n    const method: 'append' | 'prepend' = append ? 'append' : 'prepend';\r\n    if(container === undefined/*  || good */) {\r\n      this.scroll[method](li);\r\n\r\n      this.doms[dialog.peerId] = dom;\r\n\r\n      /* if(container) {\r\n        container.append(li);\r\n      } */\r\n\r\n      const isMuted = appNotificationsManager.isPeerLocalMuted(dialog.peerId, true);\r\n      if(isMuted) {\r\n        li.classList.add('is-muted');\r\n      }\r\n\r\n      this.setLastMessage(dialog);\r\n    } else if(container) {\r\n      container[method](li);\r\n    }\r\n\r\n    if(!autonomous && appImManager.chat?.peerId === peerId) {\r\n      li.classList.add('active');\r\n      this.lastActiveElements.add(li);\r\n    } \r\n    \r\n    return {dom, dialog};\r\n  }\r\n\r\n  public setTyping(dialog: Dialog) {\r\n    const dom = this.getDialogDom(dialog.peerId);\r\n    if(!dom) {\r\n      return;\r\n    }\r\n\r\n    let typingElement = dom.lastMessageSpan.querySelector('.peer-typing-container') as HTMLElement;\r\n    if(typingElement) {\r\n      appImManager.getPeerTyping(dialog.peerId, typingElement);\r\n    } else {\r\n      typingElement = appImManager.getPeerTyping(dialog.peerId);\r\n      replaceContent(dom.lastMessageSpan, typingElement);\r\n      dom.lastMessageSpan.classList.add('user-typing');\r\n    }\r\n  }\r\n\r\n  public unsetTyping(dialog: Dialog) {\r\n    const dom = this.getDialogDom(dialog.peerId);\r\n    if(!dom) {\r\n      return;\r\n    }\r\n\r\n    dom.lastMessageSpan.classList.remove('user-typing');\r\n    this.setLastMessage(dialog, null, dom);\r\n  }\r\n}\r\n\r\nexport function generateVerifiedIcon() {\r\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n  svg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n  svg.setAttributeNS(null, 'width', '24');\r\n  svg.setAttributeNS(null, 'height', '24');\r\n  svg.classList.add('verified-icon');\r\n\r\n  const use = document.createElementNS('http://www.w3.org/2000/svg', 'use');\r\n  use.setAttributeNS(null, 'href', '#verified-background');\r\n  use.classList.add('verified-background');\r\n\r\n  const use2 = document.createElementNS('http://www.w3.org/2000/svg', 'use');\r\n  use2.setAttributeNS(null, 'href', '#verified-check');\r\n  use2.classList.add('verified-check');\r\n\r\n  svg.append(use, use2);\r\n\r\n  return svg;\r\n}\r\n\r\nconst appDialogsManager = new AppDialogsManager();\r\nMOUNT_CLASS_TO.appDialogsManager = appDialogsManager;\r\nexport default appDialogsManager;\r\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.Recorder=t():e.Recorder=t()}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var t={};function o(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,i){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)o.d(i,n,function(t){return e[t]}.bind(null,n));return i},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=0)}([function(e,t,o){\"use strict\";(function(t){var o=t.AudioContext||t.webkitAudioContext,i=function(e){if(!i.isRecordingSupported())throw new Error(\"Recording is not supported in this browser\");e||(e={}),this.state=\"inactive\",this.config=Object.assign({bufferLength:4096,encoderApplication:2049,encoderFrameSize:20,encoderPath:\"encoderWorker.min.js\",encoderSampleRate:48e3,maxFramesPerPage:40,mediaTrackConstraints:!0,monitorGain:0,numberOfChannels:1,recordingGain:1,resampleQuality:3,streamPages:!1,reuseWorker:!1,wavBitDepth:16},e),this.encodedSamplePosition=0};i.isRecordingSupported=function(){return o&&t.navigator&&t.navigator.mediaDevices&&t.navigator.mediaDevices.getUserMedia&&t.WebAssembly},i.prototype.clearStream=function(){this.stream&&(this.stream.getTracks?this.stream.getTracks().forEach((function(e){e.stop()})):this.stream.stop(),delete this.stream),this.audioContext&&this.closeAudioContext&&(this.audioContext.close(),delete this.audioContext)},i.prototype.encodeBuffers=function(e){if(\"recording\"===this.state){for(var t=[],o=0;o<e.numberOfChannels;o++)t[o]=e.getChannelData(o);this.encoder.postMessage({command:\"encode\",buffers:t})}},i.prototype.initAudioContext=function(e){return e&&e.context?(this.audioContext=e.context,this.closeAudioContext=!1):(this.audioContext=new o,this.closeAudioContext=!0),this.audioContext},i.prototype.initAudioGraph=function(){this.encodeBuffers=function(){delete this.encodeBuffers},this.scriptProcessorNode=this.audioContext.createScriptProcessor(this.config.bufferLength,this.config.numberOfChannels,this.config.numberOfChannels),this.scriptProcessorNode.connect(this.audioContext.destination),this.scriptProcessorNode.onaudioprocess=e=>{this.encodeBuffers(e.inputBuffer)},this.monitorGainNode=this.audioContext.createGain(),this.setMonitorGain(this.config.monitorGain),this.monitorGainNode.connect(this.audioContext.destination),this.recordingGainNode=this.audioContext.createGain(),this.setRecordingGain(this.config.recordingGain),this.recordingGainNode.connect(this.scriptProcessorNode)},i.prototype.initSourceNode=function(e){return e&&e.context?t.Promise.resolve(e):t.navigator.mediaDevices.getUserMedia({audio:this.config.mediaTrackConstraints}).then(e=>(this.stream=e,this.audioContext.createMediaStreamSource(e)))},i.prototype.loadWorker=function(){this.encoder||(this.encoder=new t.Worker(this.config.encoderPath))},i.prototype.initWorker=function(){var e=(this.config.streamPages?this.streamPage:this.storePage).bind(this);return this.recordedPages=[],this.totalLength=0,this.loadWorker(),new Promise((t,o)=>{var i=o=>{switch(o.data.message){case\"ready\":t();break;case\"page\":this.encodedSamplePosition=o.data.samplePosition,e(o.data.page);break;case\"done\":this.encoder.removeEventListener(\"message\",i),this.finish()}};this.encoder.addEventListener(\"message\",i),this.encoder.postMessage(Object.assign({command:\"init\",originalSampleRate:this.audioContext.sampleRate,wavSampleRate:this.audioContext.sampleRate},this.config))})},i.prototype.pause=function(e){if(\"recording\"===this.state){if(this.state=\"paused\",e&&this.config.streamPages){var t=this.encoder;return new Promise((e,o)=>{var i=o=>{\"flushed\"===o.data.message&&(t.removeEventListener(\"message\",i),this.onpause(),e())};t.addEventListener(\"message\",i),t.postMessage({command:\"flush\"})})}return this.onpause(),Promise.resolve()}},i.prototype.resume=function(){\"paused\"===this.state&&(this.state=\"recording\",this.onresume())},i.prototype.setRecordingGain=function(e){this.config.recordingGain=e,this.recordingGainNode&&this.audioContext&&this.recordingGainNode.gain.setTargetAtTime(e,this.audioContext.currentTime,.01)},i.prototype.setMonitorGain=function(e){this.config.monitorGain=e,this.monitorGainNode&&this.audioContext&&this.monitorGainNode.gain.setTargetAtTime(e,this.audioContext.currentTime,.01)},i.prototype.start=function(e){if(\"inactive\"===this.state)return this.initAudioContext(e),this.initAudioGraph(),this.encodedSamplePosition=0,this.initWorker().then(()=>this.initSourceNode(e)).then(e=>{this.sourceNode=e,this.state=\"recording\",this.onstart(),this.encoder.postMessage({command:\"getHeaderPages\"}),this.sourceNode.connect(this.monitorGainNode),this.sourceNode.connect(this.recordingGainNode)})},i.prototype.stop=function(){if(\"inactive\"!==this.state){this.state=\"inactive\",this.monitorGainNode.disconnect(),this.scriptProcessorNode.disconnect(),this.recordingGainNode.disconnect(),this.sourceNode.disconnect(),this.clearStream();var e=this.encoder;return new Promise(t=>{var o=i=>{\"done\"===i.data.message&&(e.removeEventListener(\"message\",o),t())};e.addEventListener(\"message\",o),e.postMessage({command:\"done\"}),this.config.reuseWorker||e.postMessage({command:\"close\"})})}return Promise.resolve()},i.prototype.destroyWorker=function(){\"inactive\"===this.state&&this.encoder&&(this.encoder.postMessage({command:\"close\"}),delete this.encoder)},i.prototype.storePage=function(e){this.recordedPages.push(e),this.totalLength+=e.length},i.prototype.streamPage=function(e){this.ondataavailable(e)},i.prototype.finish=function(){if(!this.config.streamPages){var e=new Uint8Array(this.totalLength);this.recordedPages.reduce((function(t,o){return e.set(o,t),t+o.length}),0),this.ondataavailable(e)}this.onstop(),this.config.reuseWorker||delete this.encoder},i.prototype.ondataavailable=function(){},i.prototype.onpause=function(){},i.prototype.onresume=function(){},i.prototype.onstart=function(){},i.prototype.onstop=function(){},e.exports=i}).call(this,o(1))},function(e,t){var o;o=function(){return this}();try{o=o||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(o=window)}e.exports=o}])}));","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport fastSmoothScroll, { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n/*\r\nvar el = $0;\r\nvar height = 0;\r\nvar checkUp = false;\r\n\r\ndo {\r\n  height += el.scrollHeight;\r\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\r\nconsole.log(height);\r\n*/\r\n\r\n/*\r\nArray.from($0.querySelectorAll('.bubble-content')).forEach(_el => {\r\n\t//_el.style.display = '';\t\r\n\t//return;\r\n\r\n\tlet el = _el.parentElement;\r\n\tlet height = el.scrollHeight;\r\n\tlet width = el.scrollWidth;\r\n\tel.style.width = width + 'px';\r\n\tel.style.height = height + 'px';\r\n\t_el.style.display = 'none';\r\n});\r\n*/\r\n\r\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\r\nconst scrollsIntersector = new IntersectionObserver(entries => {\r\n  for(let entry of entries) {\r\n    const scrollable = scrollables.get(entry.target as HTMLElement);\r\n\r\n    if(entry.isIntersecting) {\r\n      scrollable.isVisible = true;\r\n    } else {\r\n      scrollable.isVisible = false;\r\n\r\n      if(!isInDOM(entry.target)) {\r\n        scrollsIntersector.unobserve(scrollable.container);\r\n        scrollables.delete(scrollable.container);\r\n      }\r\n    }\r\n  }\r\n}); */\r\n\r\nexport class ScrollableBase {\r\n  protected log: ReturnType<typeof logger>;\r\n\r\n  public onScrollMeasure: number = 0;\r\n  protected onScroll: () => void;\r\n\r\n  public isHeavyAnimationInProgress = false;\r\n  protected needCheckAfterAnimation = false;\r\n\r\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\r\n    this.container.classList.add('scrollable');\r\n\r\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\r\n\r\n    if(el) {\r\n      Array.from(el.children).forEach(c => this.container.append(c));\r\n\r\n      el.append(this.container);\r\n    }\r\n    //this.onScroll();\r\n  }\r\n\r\n  protected setListeners() {\r\n    window.addEventListener('resize', this.onScroll, {passive: true});\r\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\r\n\r\n    useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n\r\n      if(this.onScrollMeasure) {\r\n        this.needCheckAfterAnimation = true;\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(this.needCheckAfterAnimation) {\r\n        this.onScroll();\r\n        this.needCheckAfterAnimation = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public append(element: HTMLElement) {\r\n    this.container.append(element);\r\n  }\r\n\r\n  public scrollIntoViewNew(\r\n    element: HTMLElement,\r\n    position: ScrollLogicalPosition,\r\n    margin?: number,\r\n    maxDistance?: number,\r\n    forceDirection?: FocusDirection,\r\n    forceDuration?: number,\r\n    axis?: 'x' | 'y'\r\n  ) {\r\n    //return Promise.resolve();\r\n    return fastSmoothScroll(this.container, element, position, margin, maxDistance, forceDirection, forceDuration, axis);\r\n  }\r\n}\r\n\r\nexport type SliceSides = 'top' | 'bottom';\r\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\r\n\r\nexport default class Scrollable extends ScrollableBase {\r\n  public splitUp: HTMLElement;\r\n  public padding: HTMLElement;\r\n  \r\n  public onAdditionalScroll: () => void = null;\r\n  public onScrolledTop: () => void = null;\r\n  public onScrolledBottom: () => void = null;\r\n  \r\n  public lastScrollTop: number = 0;\r\n  public lastScrollDirection: number = 0;\r\n\r\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\r\n\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\r\n    super(el, logPrefix);\r\n\r\n    /* if(withPaddingContainer) {\r\n      this.padding = document.createElement('div');\r\n      this.padding.classList.add('scrollable-padding');\r\n      Array.from(this.container.children).forEach(c => this.padding.append(c));\r\n      this.container.append(this.padding);\r\n    } */\r\n\r\n    this.container.classList.add('scrollable-y');\r\n    this.setListeners();\r\n  }\r\n\r\n  public setVirtualContainer(el?: HTMLElement) {\r\n    this.splitUp = el;\r\n    this.log('setVirtualContainer:', el, this);\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //if(this.debug) {\r\n      //this.log('onScroll call', this.onScrollMeasure);\r\n    //}\r\n\r\n    //return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      if(this.onScrollMeasure) {\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n\r\n      this.needCheckAfterAnimation = true;\r\n      return;\r\n    }\r\n\r\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\r\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\r\n    if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\r\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\r\n      this.onScrollMeasure = 0;\r\n\r\n      const scrollTop = this.container.scrollTop;\r\n      this.lastScrollDirection = this.lastScrollTop === scrollTop ? 0 : (this.lastScrollTop < scrollTop ? 1 : -1); // * 1 - bottom, -1 - top\r\n      this.lastScrollTop = scrollTop;\r\n\r\n      if(this.onAdditionalScroll && this.lastScrollDirection !== 0) {\r\n        this.onAdditionalScroll();\r\n      }\r\n      \r\n      if(this.checkForTriggers) {\r\n        this.checkForTriggers();\r\n      }\r\n    });\r\n  };\r\n\r\n  public checkForTriggers = () => {\r\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.onScroll();\r\n      return;\r\n    }\r\n\r\n    const scrollHeight = this.container.scrollHeight;\r\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\r\n      return;\r\n    }\r\n\r\n    const clientHeight = this.container.clientHeight;\r\n    const maxScrollTop = scrollHeight - clientHeight;\r\n    const scrollTop = this.lastScrollTop;\r\n\r\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\r\n\r\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\r\n      this.onScrolledTop();\r\n    }\r\n\r\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\r\n      this.onScrolledBottom();\r\n    }\r\n  };\r\n\r\n  public prepend(...elements: HTMLElement[]) {\r\n    (this.splitUp || this.padding || this.container).prepend(...elements);\r\n  }\r\n\r\n  public append(...elements: HTMLElement[]) {\r\n    (this.splitUp || this.padding || this.container).append(...elements);\r\n  }\r\n\r\n  public getDistanceToEnd() {\r\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\r\n  }\r\n\r\n  get isScrolledDown() {\r\n    return this.getDistanceToEnd() <= 1;\r\n  }\r\n\r\n  set scrollTop(y: number) {\r\n    this.container.scrollTop = y;\r\n  }\r\n  \r\n  get scrollTop() {\r\n    //this.log.trace('get scrollTop');\r\n    return this.container.scrollTop;\r\n  }\r\n  \r\n  get scrollHeight() {\r\n    return this.container.scrollHeight;\r\n  }\r\n}\r\n\r\nexport class ScrollableX extends ScrollableBase {\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\r\n    super(el, logPrefix, container);\r\n\r\n    this.container.classList.add('scrollable-x');\r\n\r\n    if(!isTouchSupported) {\r\n      const scrollHorizontally = (e: any) => {\r\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\r\n          this.container.scrollLeft += e.deltaY / 4;\r\n          cancelEvent(e);\r\n        }\r\n      };\r\n      \r\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport { getDeepProperty } from \"../helpers/object\";\r\nimport { ripple } from \"./ripple\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\n\r\nexport type CheckboxFieldOptions = {\r\n  text?: LangPackKey,\r\n  textArgs?: any[],\r\n  name?: string, \r\n  round?: boolean, \r\n  toggle?: boolean,\r\n  stateKey?: string,\r\n  stateValues?: any[],\r\n  disabled?: boolean,\r\n  checked?: boolean,\r\n  restriction?: boolean,\r\n  withRipple?: boolean,\r\n  withHover?: boolean,\r\n};\r\nexport default class CheckboxField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public span: HTMLSpanElement;\r\n\r\n  constructor(options: CheckboxFieldOptions = {}) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('checkbox-field');\r\n\r\n    if(options.restriction) {\r\n      label.classList.add('checkbox-field-restriction');\r\n    }\r\n\r\n    if(options.round) {\r\n      label.classList.add('checkbox-field-round');\r\n    }\r\n\r\n    if(options.disabled) {\r\n      this.toggleDisability(true);\r\n    }\r\n\r\n    const input = this.input = document.createElement('input');\r\n    input.type = 'checkbox';\r\n    if(options.name) {\r\n      input.id = 'input-' + options.name;\r\n    }\r\n\r\n    if(options.checked) {\r\n      input.checked = true;\r\n    }\r\n\r\n    if(options.stateKey) {\r\n      appStateManager.getState().then(state => {\r\n        const stateValue = getDeepProperty(state, options.stateKey);\r\n        let checked: boolean;\r\n        if(options.stateValues) {\r\n          checked = options.stateValues.indexOf(stateValue) === 1;\r\n        } else {\r\n          checked = stateValue;\r\n        }\r\n\r\n        this.setValueSilently(checked);\r\n\r\n        input.addEventListener('change', () => {\r\n          let value: any;\r\n          if(options.stateValues) {\r\n            value = options.stateValues[input.checked ? 1 : 0];\r\n          } else {\r\n            value = input.checked;\r\n          }\r\n\r\n          appStateManager.setByKey(options.stateKey, value);\r\n        });\r\n      });\r\n    }\r\n\r\n    let span: HTMLSpanElement;\r\n    if(options.text) {\r\n      span = this.span = document.createElement('span');\r\n      span.classList.add('checkbox-caption');\r\n      _i18n(span, options.text, options.textArgs);\r\n    } else {\r\n      label.classList.add('checkbox-without-caption');\r\n    }\r\n\r\n    label.append(input);\r\n\r\n    if(options.toggle) {\r\n      label.classList.add('checkbox-field-toggle');\r\n\r\n      const toggle = document.createElement('div');\r\n      toggle.classList.add('checkbox-toggle');\r\n      label.append(toggle);\r\n    } else {\r\n      const box = document.createElement('div');\r\n      box.classList.add('checkbox-box');\r\n  \r\n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      checkSvg.classList.add('checkbox-box-check');\r\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n      use.setAttributeNS(null, 'href', '#check');\r\n      use.setAttributeNS(null, 'x', '-1');\r\n      checkSvg.append(use);\r\n  \r\n      const bg = document.createElement('div');\r\n      bg.classList.add('checkbox-box-background');\r\n  \r\n      const border = document.createElement('div');\r\n      border.classList.add('checkbox-box-border');\r\n  \r\n      box.append(border, bg, checkSvg);\r\n  \r\n      label.append(box);\r\n    }\r\n\r\n    if(span) {\r\n      label.append(span);\r\n    }\r\n\r\n    if(options.withRipple) {\r\n      label.classList.add('checkbox-ripple', 'hover-effect');\r\n      ripple(label, undefined, undefined, true);\r\n      //label.prepend(input);\r\n    } else if(options.withHover) {\r\n      label.classList.add('hover-effect');\r\n    }\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n\r\n  public toggleDisability(disable: boolean) {\r\n    this.label.classList.toggle('checkbox-disabled', disable);\r\n    return () => this.toggleDisability(!disable);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean) {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpTag(el: any, tag: string): HTMLElement {\r\n  return el.closest(tag);\r\n  /* if(el.tagName === tag) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.tagName === tag) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountPasswordInputSettings, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport type CryptoWorkerMethods from '../crypto/crypto_methods';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport appUsersManager from '../appManagers/appUsersManager';\r\nimport apiManager from './mtprotoworker';\r\n//import { computeCheck } from \"../crypto/srp\";\r\n\r\nexport class PasswordManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then(state => {\r\n      let currentHashPromise: ReturnType<CryptoWorkerMethods['computeSRP']>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = apiManager.computeSRP(settings.currentPassword, state);\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      salt1.randomize();\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = apiManager.computeSRP(settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return apiManager.computeSRP(password, state).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword\r\n      }, options).then(auth => {\r\n        if(auth._ === 'auth.authorization') {\r\n          appUsersManager.saveApiUser(auth.user);\r\n          apiManager.setUserAuth(auth.user.id);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n\r\nconst passwordManager = new PasswordManager();\r\nMOUNT_CLASS_TO.passwordManager = passwordManager;\r\nexport default passwordManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { blobConstruct, readBlobAsUint8Array } from \"../helpers/blob\";\r\n\r\nexport class FileManager {\r\n  public blobSupported = true;\r\n  \r\n  constructor() {\r\n    try {\r\n      blobConstruct([], '');\r\n    } catch(e) {\r\n      this.blobSupported = false;\r\n    }\r\n  }\r\n  \r\n  public isAvailable() {\r\n    return this.blobSupported;\r\n  }\r\n  \r\n  public write(fileWriter: ReturnType<FileManager['getFakeFileWriter']>, bytes: Uint8Array | Blob | string): Promise<void> {\r\n    if(bytes instanceof Blob) { // is file bytes\r\n      return readBlobAsUint8Array(bytes).then(arr => {\r\n        return fileWriter.write(arr);\r\n      });\r\n    } else {\r\n      return fileWriter.write(bytes);\r\n    }\r\n  }\r\n\r\n  public getFakeFileWriter(mimeType: string, saveFileCallback?: (blob: Blob) => Promise<Blob>) {\r\n    const blobParts: Array<Uint8Array | string> = [];\r\n    const fakeFileWriter = {\r\n      write: async(part: Uint8Array | string) => {\r\n        if(!this.blobSupported) {\r\n          throw false;\r\n        }\r\n        \r\n        blobParts.push(part);\r\n      },\r\n      truncate: () => {\r\n        blobParts.length = 0;\r\n      },\r\n      finalize: (saveToStorage = true) => {\r\n        const blob = blobConstruct(blobParts, mimeType);\r\n\r\n        if(saveToStorage && saveFileCallback) {\r\n          saveFileCallback(blob);\r\n        }\r\n        \r\n        return blob;\r\n      }\r\n    };\r\n    \r\n    return fakeFileWriter;\r\n  }\r\n}\r\n\r\nexport default new FileManager();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../config/modes';\r\nimport { blobConstruct } from '../helpers/blob';\r\nimport FileManager from './filemanager';\r\n//import { MOUNT_CLASS_TO } from './mtproto/mtproto_config';\r\n//import { logger } from './polyfill';\r\n\r\nexport type CacheStorageDbName = 'cachedFiles' | 'cachedStreamChunks' | 'cachedAssets';\r\n\r\nexport default class CacheStorageController {\r\n  private static STORAGES: CacheStorageController[] = [];\r\n  private openDbPromise: Promise<Cache>;\r\n\r\n  private useStorage = true;\r\n\r\n  //private log: ReturnType<typeof logger> = logger('CS');\r\n\r\n  constructor(private dbName: CacheStorageDbName) {\r\n    if(Modes.test) {\r\n      this.dbName += '_test';\r\n    }\r\n\r\n    if(CacheStorageController.STORAGES.length) {\r\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\r\n    }\r\n    \r\n    this.openDatabase();\r\n    CacheStorageController.STORAGES.push(this);\r\n  }\r\n\r\n  private openDatabase(): Promise<Cache> {\r\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\r\n  }\r\n\r\n  public delete(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\r\n  }\r\n\r\n  public deleteAll() {\r\n    return caches.delete(this.dbName);\r\n  }\r\n\r\n  public get(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.match('/' + entryName));\r\n  }\r\n\r\n  public save(entryName: string, response: Response) {\r\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, response));\r\n  }\r\n\r\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\r\n    /* if(method === 'blob') {\r\n      return Promise.reject();\r\n    } */\r\n\r\n    // const str = `get fileName: ${fileName}`;\r\n    // console.time(str);\r\n    return this.get(fileName).then((response) => {\r\n      if(!response) {\r\n        //console.warn('getFile:', response, fileName);\r\n        throw 'NO_ENTRY_FOUND';\r\n      }\r\n\r\n      const promise = response[method]();\r\n      // promise.then(() => {\r\n      //   console.timeEnd(str);\r\n      // });\r\n      return promise;\r\n    });\r\n  }\r\n\r\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n    //return Promise.resolve(blobConstruct([blob]));\r\n    if(!(blob instanceof Blob)) {\r\n      blob = blobConstruct(blob) as Blob;\r\n    }\r\n\r\n    const response = new Response(blob, {\r\n      headers: {\r\n        'Content-Length': '' + blob.size\r\n      }\r\n    });\r\n    \r\n    return this.save(fileName, response).then(() => blob as Blob);\r\n  }\r\n\r\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\r\n    if(!this.useStorage) {\r\n      return Promise.reject('STORAGE_OFFLINE');\r\n    }\r\n\r\n    return new Promise<T>(async(resolve, reject) => {\r\n      let rejected = false;\r\n      const timeout = setTimeout(() => {\r\n        reject();\r\n        //console.warn('CACHESTORAGE TIMEOUT');\r\n        rejected = true;\r\n      }, 15e3);\r\n\r\n      try {\r\n        const cache = await this.openDatabase();\r\n        if(!cache) {\r\n          this.useStorage = false;\r\n          this.openDbPromise = undefined;\r\n          throw 'no cache?';\r\n        }\r\n\r\n        const res = await callback(cache);\r\n\r\n        if(rejected) return;\r\n        resolve(res);\r\n      } catch(err) {\r\n        reject(err);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n    });\r\n  }\r\n\r\n  public getFileWriter(fileName: string, mimeType: string) {\r\n    const fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob).catch(() => blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean) {\r\n    return Promise.all(this.STORAGES.map(storage => {\r\n      storage.useStorage = enabled;\r\n      \r\n      if(!enabled) {\r\n        return storage.deleteAll();\r\n      }\r\n    }));\r\n  }\r\n}\r\n\r\n//const cacheStorage = new CacheStorageController(); \r\n//MOUNT_CLASS_TO.cacheStorage = cacheStorage;\r\n//export default cacheStorage;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class PasswordInputField extends InputField {\r\n  public passwordVisible = false;\r\n  public toggleVisible: HTMLElement;\r\n  public onVisibilityClickAdditional: () => void;\r\n\r\n  constructor(options: InputFieldOptions = {}) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'password';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n    /* input.readOnly = true;\r\n\r\n    input.addEventListener('focus', () => {\r\n      input.removeAttribute('readonly');\r\n    }, {once: true}); */\r\n\r\n    // * https://stackoverflow.com/a/35949954/6758968\r\n    const stealthy = document.createElement('input');\r\n    stealthy.classList.add('stealthy');\r\n    stealthy.tabIndex = -1;\r\n    stealthy.type = 'password';\r\n    input.parentElement.prepend(stealthy);\r\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\r\n\r\n    const toggleVisible = this.toggleVisible = document.createElement('span');\r\n    toggleVisible.classList.add('toggle-visible', 'tgico');\r\n\r\n    this.container.classList.add('input-field-password');\r\n    this.container.append(toggleVisible);\r\n\r\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\r\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\r\n  }\r\n\r\n  public onVisibilityClick = (e: Event) => {\r\n    cancelEvent(e);\r\n    this.passwordVisible = !this.passwordVisible;\r\n\r\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\r\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\r\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\r\nimport PasswordInputField from \"../passwordInputField\";\r\n\r\nexport default class PasswordMonkey {\r\n  public container: HTMLElement;\r\n  public animation: RLottiePlayer;\r\n  public needFrame = 0;\r\n  protected loadPromise: Promise<void>;\r\n\r\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = lottieLoader.loadAnimationFromURL({\r\n      container: this.container,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: this.size,\r\n      height: this.size,\r\n      noCache: true\r\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\r\n    }, 'assets/img/TwoFactorSetupMonkeyPeek.tgs').then(_animation => {\r\n      //return;\r\n      this.animation = _animation;\r\n      this.animation.addEventListener('enterFrame', currentFrame => {\r\n        //console.log('enterFrame', currentFrame, this.needFrame);\r\n\r\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n        } \r\n      });\r\n\r\n      this.passwordInputField.onVisibilityClickAdditional = () => {\r\n        if(this.passwordInputField.passwordVisible) {\r\n          this.animation.setDirection(1);\r\n          this.animation.curFrame = 0;\r\n          this.needFrame = 16;\r\n          this.animation.play();\r\n        } else {\r\n          this.animation.setDirection(-1);\r\n          this.animation.curFrame = 16;\r\n          this.needFrame = 0;\r\n          this.animation.play();\r\n        }\r\n      };\r\n\r\n      return lottieLoader.waitForFirstFrame(_animation);\r\n    });\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) {\r\n      this.animation.remove();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}
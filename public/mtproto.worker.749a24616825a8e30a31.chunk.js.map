{"version":3,"file":"mtproto.worker.749a24616825a8e30a31.chunk.js","mappings":"uBAAIA,ECEIC,EACAC,EACAC,EACAC,ECLJC,E,mCCQG,MAAMC,EAAyE,CAAC,GAAK,CAAC,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,IAAK,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,GAAI,GAAG,CAAC,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,KAAM,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,IAAK,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,OAAO,MAAO,OAAO,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAckBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,MAAO,kBAAkB,MAAO,QAAQ,MAAO,kBAAkB,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,wCAAwC,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,GAAI,QAAQ,IAAK,QAAQ,IAAK,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkiBAAiB,KAAM,iBAAiB,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wB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","sources":["webpack://tweb/webpack/runtime/chunk loaded","webpack://tweb/webpack/runtime/compat","webpack://tweb/webpack/runtime/startup chunk dependencies","webpack://tweb/./src/config/emoji.ts","webpack://tweb/./src/environment/userAgent.ts","webpack://tweb/./src/helpers/cleanSearchText.ts","webpack://tweb/./src/helpers/fileName.ts","webpack://tweb/./src/lib/files/idb.ts","webpack://tweb/./src/environment/utils.ts","webpack://tweb/./src/lib/rootScope.ts","webpack://tweb/./src/lib/appManagers/appStateManager.ts","webpack://tweb/./src/helpers/object/setDeepProperty.ts","webpack://tweb/./src/helpers/object/getDeepProperty.ts","webpack://tweb/./src/lib/mtproto/transports/http.ts","webpack://tweb/./src/lib/mtproto/transports/websocket.ts","webpack://tweb/./src/helpers/array/randomize.ts","webpack://tweb/./src/lib/mtproto/transports/obfuscation.ts","webpack://tweb/./src/lib/mtproto/transports/abridged.ts","webpack://tweb/./src/helpers/bytes/bytesToHex.ts","webpack://tweb/./src/lib/mtproto/transports/tcpObfuscated.ts","webpack://tweb/./src/lib/mtproto/dcConfigurator.ts","webpack://tweb/./src/lib/mtproto/transports/controller.ts","webpack://tweb/./src/lib/appManagers/utils/storages/resetStoragesPromise.ts","webpack://tweb/./src/lib/appManagers/manager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/loadStorages.ts","webpack://tweb/./src/lib/appManagers/appStoragesManager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/createStorages.ts","webpack://tweb/./src/lib/mtproto/passwordManager.ts","webpack://tweb/./src/lib/mtproto/referenceDatabase.ts","webpack://tweb/./src/helpers/object/safeReplaceObject.ts","webpack://tweb/./src/lib/appManagers/utils/messages/getPeerIdsFromMessage.ts","webpack://tweb/./src/helpers/object/defineNotNumerableProperties.ts","webpack://tweb/./src/lib/appManagers/utils/dialogs/setDialogIndex.ts","webpack://tweb/./src/lib/storages/dialogs.ts","webpack://tweb/./src/lib/storages/filters.ts","webpack://tweb/./src/helpers/applyMixins.ts","webpack://tweb/./src/lib/appManagers/apiUpdatesManager.ts","webpack://tweb/./src/lib/appManagers/appAvatarsManager.ts","webpack://tweb/./src/lib/appManagers/appCallsManager.ts","webpack://tweb/./src/helpers/restrictions.ts","webpack://tweb/./src/lib/appManagers/appChatsManager.ts","webpack://tweb/./src/lib/langPack.ts","webpack://tweb/./src/helpers/date.ts","webpack://tweb/./src/helpers/object/safeReplaceArrayInObject.ts","webpack://tweb/./src/lib/appManagers/appDocsManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentURL.ts","webpack://tweb/./src/lib/appManagers/appDraftsManager.ts","webpack://tweb/./src/lib/appManagers/appEmojiManager.ts","webpack://tweb/./src/lib/appManagers/appGroupCallsManager.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoInput.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoMediaInput.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentMediaInput.ts","webpack://tweb/./src/lib/appManagers/appInlineBotsManager.ts","webpack://tweb/./src/lib/appManagers/appMessagesIdsManager.ts","webpack://tweb/./src/lib/mtproto/telegramMeWebManager.ts","webpack://tweb/./src/helpers/string/splitStringByLength.ts","webpack://tweb/./src/lib/appManagers/appTabsManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentInput.ts","webpack://tweb/./src/lib/appManagers/appMessagesManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentInputFileName.ts","webpack://tweb/./src/helpers/string/convertInputKeyToKey.ts","webpack://tweb/./src/lib/appManagers/appNotificationsManager.ts","webpack://tweb/./src/lib/appManagers/appPeersManager.ts","webpack://tweb/./src/lib/appManagers/appPhotosManager.ts","webpack://tweb/./src/lib/appManagers/appPollsManager.ts","webpack://tweb/./src/lib/appManagers/appPrivacyManager.ts","webpack://tweb/./src/lib/appManagers/appProfileManager.ts","webpack://tweb/./src/helpers/callbackifyAll.ts","webpack://tweb/./src/lib/appManagers/appReactionsManager.ts","webpack://tweb/./src/lib/appManagers/appStickersManager.ts","webpack://tweb/./src/helpers/fixBase64String.ts","webpack://tweb/./src/helpers/cleanUsername.ts","webpack://tweb/./src/lib/appManagers/appUsersManager.ts","webpack://tweb/./src/lib/appManagers/appWebPagesManager.ts","webpack://tweb/./src/helpers/blob/readBlobAsArrayBuffer.ts","webpack://tweb/./src/helpers/blob/readBlobAs.ts","webpack://tweb/./src/helpers/string/fileNameRFC.ts","webpack://tweb/./src/lib/files/downloadWriter.ts","webpack://tweb/./src/lib/files/downloadStorage.ts","webpack://tweb/./src/lib/mtproto/apiFileManager.ts","webpack://tweb/./src/helpers/fixFirefoxSvg.ts","webpack://tweb/./src/helpers/blob/readBlobAsUint8Array.ts","webpack://tweb/./src/lib/mtproto/api_methods.ts","webpack://tweb/./src/lib/mtproto/apiManager.ts","webpack://tweb/./src/lib/storages/peers.ts","webpack://tweb/./src/lib/storages/thumbs.ts","webpack://tweb/./src/lib/mtproto/schema.ts","webpack://tweb/./src/helpers/number/intToUint.ts","webpack://tweb/./src/helpers/long/ulongFromInts.ts","webpack://tweb/./src/helpers/bigInt/bigIntConstants.ts","webpack://tweb/./src/helpers/bigInt/bigIntConversion.ts","webpack://tweb/./src/lib/mtproto/tl_utils.ts","webpack://tweb/./src/helpers/gzipUncompress.ts","webpack://tweb/./src/helpers/bytes/addPadding.ts","webpack://tweb/./src/lib/mtproto/networker.ts","webpack://tweb/./src/helpers/long/sortLongsArray.ts","webpack://tweb/./src/helpers/long/longToBytes.ts","webpack://tweb/./src/lib/mtproto/networkerFactory.ts","webpack://tweb/./src/lib/mtproto/rsaKeysManager.ts","webpack://tweb/./src/helpers/bytes/bytesXor.ts","webpack://tweb/./src/lib/mtproto/authorizer.ts","webpack://tweb/./src/lib/mtproto/timeManager.ts","webpack://tweb/./src/lib/appManagers/appWebDocsManager.ts","webpack://tweb/./src/lib/appManagers/appPaymentsManager.ts","webpack://tweb/./src/lib/appManagers/appManagersManager.ts","webpack://tweb/./src/lib/appManagers/createManagers.ts","webpack://tweb/./src/lib/mtproto/mtproto.worker.ts","webpack://tweb/./src/helpers/listenMessagePort.ts","webpack://tweb/./src/lib/mtproto/mtproto_config.ts","webpack://tweb/./src/lib/richTextProcessor/combineSameEntities.ts","webpack://tweb/./src/lib/richTextProcessor/findConflictingEntity.ts","webpack://tweb/./src/lib/richTextProcessor/index.ts","webpack://tweb/./src/lib/richTextProcessor/mergeEntities.ts","webpack://tweb/./src/lib/richTextProcessor/sortEntities.ts","webpack://tweb/./src/vendor/emoji/index.ts","webpack://tweb/webpack/bootstrap","webpack://tweb/webpack/runtime/compat get default export","webpack://tweb/webpack/runtime/define property getters","webpack://tweb/webpack/runtime/ensure chunk","webpack://tweb/webpack/runtime/get javascript chunk filename","webpack://tweb/webpack/runtime/get mini-css chunk filename","webpack://tweb/webpack/runtime/global","webpack://tweb/webpack/runtime/hasOwnProperty shorthand","webpack://tweb/webpack/runtime/make namespace object","webpack://tweb/webpack/runtime/node module decorator","webpack://tweb/webpack/runtime/publicPath","webpack://tweb/webpack/runtime/importScripts chunk loading","webpack://tweb/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","(() => {\n  if (typeof __webpack_require__ !== 'undefined') {\n    var oldGetScript = __webpack_require__.u;\n    var oldLoadScript = __webpack_require__.e;\n    var queryMap = new Map();\n    var countMap = new Map();\n    __webpack_require__.u = function (chunkId) {\n      var result = oldGetScript(chunkId);\n      return (\n        result + (queryMap.has(chunkId) ? '?' + queryMap.get(chunkId) : '')\n      );\n    };\n    __webpack_require__.e = function (chunkId) {\n      var result = oldLoadScript(chunkId);\n      return result.catch(function (error) {\n        var retries = countMap.has(chunkId) ? countMap.get(chunkId) : 999999;\n        if (retries < 1) {\n          var realSrc = oldGetScript(chunkId);\n          error.message =\n            'Loading chunk ' +\n            chunkId +\n            ' failed after 999999 retries.\\n(' +\n            realSrc +\n            ')';\n          error.request = realSrc;\n          throw error;\n        }\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            var retryAttempt = 999999 - retries + 1;\n            var retryAttemptString = '&retry-attempt=' + retryAttempt;\n            var cacheBust = (function () {\n              return Date.now();\n            })();\n            +retryAttemptString;\n            queryMap.set(chunkId, cacheBust);\n            countMap.set(chunkId, retries - 1);\n            resolve(__webpack_require__.e(chunkId));\n          }, 3000);\n        });\n      });\n    };\n  }\n})();\n","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([699,211,725,437,21,292].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {EMOJI_VERSION} from '../environment/emojiVersionsSupport';\n\nexport const EmojiVersions: {[version in EMOJI_VERSION]: {[emoji: string]: number}} = {'14':{'1f6dd':4867, '1f6de':4916, '1f6df':4923, '1f7f0':62832, '1f979':183, '1f9cc':1557, '1fa7b':61332, '1fa7c':61330, '1faa9':51093, '1faaa':61364, '1faab':61189, '1faac':51085, '1fab7':2651, '1fab8':2631, '1fab9':2672, '1faba':2673, '1fac3':1520, '1fac4':1521, '1fac5':1505, '1fad7':3793, '1fad8':3707, '1fad9':3804, '1fae0':111, '1fae1':136, '1fae2':132, '1fae3':133, '1fae4':174, '1fae5':142, '1fae6':1385, '1fae7':61353, '1faf0':1341, '1faf1':1332, '1faf2':1333, '1faf3':1334, '1faf4':1335, '1faf5':1351, '1faf6':1360, '1faf1-1f3fb-200d-1faf2-1f3fc':0, '1faf1-1f3fb-200d-1faf2-1f3fd':0, '1faf1-1f3fb-200d-1faf2-1f3fe':0, '1faf1-1f3fb-200d-1faf2-1f3ff':0, '1faf1-1f3fc-200d-1faf2-1f3fb':0, '1faf1-1f3fc-200d-1faf2-1f3fd':0, '1faf1-1f3fc-200d-1faf2-1f3fe':0, '1faf1-1f3fc-200d-1faf2-1f3ff':0, '1faf1-1f3fd-200d-1faf2-1f3fb':0, '1faf1-1f3fd-200d-1faf2-1f3fc':0, '1faf1-1f3fd-200d-1faf2-1f3fe':0, '1faf1-1f3fd-200d-1faf2-1f3ff':0, '1faf1-1f3fe-200d-1faf2-1f3fb':0, '1faf1-1f3fe-200d-1faf2-1f3fc':0, '1faf1-1f3fe-200d-1faf2-1f3fd':0, '1faf1-1f3fe-200d-1faf2-1f3ff':0, '1faf1-1f3ff-200d-1faf2-1f3fb':0, '1faf1-1f3ff-200d-1faf2-1f3fc':0, '1faf1-1f3ff-200d-1faf2-1f3fd':0, '1faf1-1f3ff-200d-1faf2-1f3fe':0, '1fac3-1f3fb':0, '1fac3-1f3fc':0, '1fac3-1f3fd':0, '1fac3-1f3fe':0, '1fac3-1f3ff':0, '1fac4-1f3fb':0, '1fac4-1f3fc':0, '1fac4-1f3fd':0, '1fac4-1f3fe':0, '1fac4-1f3ff':0, '1fac5-1f3fb':0, '1fac5-1f3fc':0, '1fac5-1f3fd':0, '1fac5-1f3fe':0, '1fac5-1f3ff':0, '1faf0-1f3fb':0, '1faf0-1f3fc':0, '1faf0-1f3fd':0, '1faf0-1f3fe':0, '1faf0-1f3ff':0, '1faf1-1f3fb':0, '1faf1-1f3fc':0, '1faf1-1f3fd':0, '1faf1-1f3fe':0, '1faf1-1f3ff':0, '1faf2-1f3fb':0, '1faf2-1f3fc':0, '1faf2-1f3fd':0, '1faf2-1f3fe':0, '1faf2-1f3ff':0, '1faf3-1f3fb':0, '1faf3-1f3fc':0, '1faf3-1f3fd':0, '1faf3-1f3fe':0, '1faf3-1f3ff':0, '1faf4-1f3fb':0, '1faf4-1f3fc':0, '1faf4-1f3fd':0, '1faf4-1f3fe':0, '1faf4-1f3ff':0, '1faf5-1f3fb':0, '1faf5-1f3fc':0, '1faf5-1f3fd':0, '1faf5-1f3fe':0, '1faf5-1f3ff':0, '1faf6-1f3fb':0, '1faf6-1f3fc':0, '1faf6-1f3fd':0, '1faf6-1f3fe':0, '1faf6-1f3ff':0}, '':{'2049':62835, '2122':62863, '2139':62888, '2194':62764, '2195':62763, '2196':62762, '2197':62756, '2198':62758, '2199':62760, '2328':61194, '2600':4990, '2601':4998, '2602':41013, '2603':41018, '2604':41020, '2611':62851, '2614':41014, '2615':3781, '2618':2667, '2620':1106, '2622':62753, '2623':62754, '2626':62783, '2638':62780, '2639':177, '2648':62788, '2649':62789, '2650':62796, '2651':62797, '2652':62798, '2653':62799, '2660':51095, '2663':51098, '2665':51096, '2666':51097, '2668':4865, '2692':61297, '2693':4922, '2694':61300, '2696':61311, '2697':61319, '2699':61309, '2702':61284, '2705':62850, '2708':4931, '2709':61245, '2712':61259, '2714':62852, '2716':62828, '2721':62779, '2728':51029, '2733':62858, '2734':62859, '2744':41017, '2747':62860, '2753':62836, '2754':62837, '2755':62838, '2757':62839, '2763':1137, '2764':1141, '2795':62829, '2796':62830, '2797':62831, '2934':62767, '2935':62768, '3030':62840, '3297':62912, '3299':62913, '0023-20e3':62864, '002a-20e3':62865, '0030-20e3':62866, '0031-20e3':62867, '0032-20e3':62868, '0033-20e3':62869, '0034-20e3':62870, '0035-20e3':62871, '0036-20e3':62872, '0037-20e3':62873, '0038-20e3':62874, '0039-20e3':62875, '00a9':62861, '00ae':62862, '1f004':51101, '1f0cf':51100, '1f170':62882, '1f171':62884, '1f17e':62893, '1f17f':62895, '1f18e':62883, '1f191':62885, '1f192':62886, '1f193':62887, '1f194':62889, '1f195':62891, '1f196':62892, '1f197':62894, '1f198':62896, '1f199':62897, '1f19a':62898, '1f1e6-1f1e8':71594, '1f1e6-1f1e9':71595, '1f1e6-1f1ea':71596, '1f1e6-1f1eb':71597, '1f1e6-1f1ec':71598, '1f1e6-1f1ee':71599, '1f1e6-1f1f1':71600, '1f1e6-1f1f2':71601, '1f1e6-1f1f4':71602, '1f1e6-1f1f6':71603, '1f1e6-1f1f7':71604, '1f1e6-1f1f8':71605, '1f1e6-1f1f9':71606, '1f1e6-1f1fa':71607, '1f1e6-1f1fc':71608, '1f1e6-1f1fd':71609, '1f1e6-1f1ff':71610, '1f1e7-1f1e6':71611, '1f1e7-1f1e7':71612, '1f1e7-1f1e9':71613, '1f1e7-1f1ea':71614, '1f1e7-1f1eb':71615, '1f1e7-1f1ec':71616, '1f1e7-1f1ed':71617, '1f1e7-1f1ee':71618, '1f1e7-1f1ef':71619, '1f1e7-1f1f1':71620, '1f1e7-1f1f2':71621, '1f1e7-1f1f3':71622, '1f1e7-1f1f4':71623, '1f1e7-1f1f6':71624, '1f1e7-1f1f7':71625, '1f1e7-1f1f8':71626, '1f1e7-1f1f9':71627, '1f1e7-1f1fb':71628, '1f1e7-1f1fc':71629, '1f1e7-1f1fe':71630, '1f1e7-1f1ff':71631, '1f1e8-1f1e6':71632, '1f1e8-1f1e8':71633, '1f1e8-1f1e9':71634, '1f1e8-1f1eb':71635, '1f1e8-1f1ec':71636, '1f1e8-1f1ed':71637, '1f1e8-1f1ee':71638, '1f1e8-1f1f0':71639, '1f1e8-1f1f1':71640, '1f1e8-1f1f2':71641, '1f1e8-1f1f3':71642, '1f1e8-1f1f4':71643, '1f1e8-1f1f5':71644, '1f1e8-1f1f7':71645, '1f1e8-1f1fa':71646, '1f1e8-1f1fb':71647, '1f1e8-1f1fc':71648, '1f1e8-1f1fd':71649, '1f1e8-1f1fe':71650, '1f1e8-1f1ff':71651, '1f1e9-1f1ea':71652, '1f1e9-1f1ec':71653, '1f1e9-1f1ef':71654, '1f1e9-1f1f0':71655, '1f1e9-1f1f2':71656, '1f1e9-1f1f4':71657, '1f1e9-1f1ff':71658, '1f1ea-1f1e6':71659, '1f1ea-1f1e8':71660, '1f1ea-1f1ea':71661, '1f1ea-1f1ec':71662, '1f1ea-1f1ed':71663, '1f1ea-1f1f7':71664, '1f1ea-1f1f8':71665, '1f1ea-1f1f9':71666, '1f1ea-1f1fa':71667, '1f1eb-1f1ee':71668, '1f1eb-1f1ef':71669, '1f1eb-1f1f0':71670, '1f1eb-1f1f2':71671, '1f1eb-1f1f4':71672, '1f1eb-1f1f7':71673, '1f1ec-1f1e6':71674, '1f1ec-1f1e7':71675, '1f1ec-1f1e9':71676, '1f1ec-1f1ea':71677, '1f1ec-1f1eb':71678, '1f1ec-1f1ec':71679, '1f1ec-1f1ed':71680, '1f1ec-1f1ee':71681, '1f1ec-1f1f1':71682, '1f1ec-1f1f2':71683, '1f1ec-1f1f3':71684, '1f1ec-1f1f5':71685, '1f1ec-1f1f6':71686, '1f1ec-1f1f7':71687, '1f1ec-1f1f8':71688, '1f1ec-1f1f9':71689, '1f1ec-1f1fa':71690, '1f1ec-1f1fc':71691, '1f1ec-1f1fe':71692, '1f1ed-1f1f0':71693, '1f1ed-1f1f2':71694, '1f1ed-1f1f3':71695, '1f1ed-1f1f7':71696, '1f1ed-1f1f9':71697, '1f1ed-1f1fa':71698, '1f1ee-1f1e8':71699, '1f1ee-1f1e9':71700, '1f1ee-1f1ea':71701, '1f1ee-1f1f1':71702, '1f1ee-1f1f2':71703, '1f1ee-1f1f3':71704, '1f1ee-1f1f4':71705, '1f1ee-1f1f6':71706, '1f1ee-1f1f7':71707, '1f1ee-1f1f8':71708, '1f1ee-1f1f9':71709, '1f1ef-1f1ea':71710, '1f1ef-1f1f2':71711, '1f1ef-1f1f4':71712, '1f1ef-1f1f5':71713, '1f1f0-1f1ea':71714, '1f1f0-1f1ec':71715, '1f1f0-1f1ed':71716, '1f1f0-1f1ee':71717, '1f1f0-1f1f2':71718, '1f1f0-1f1f3':71719, '1f1f0-1f1f5':71720, '1f1f0-1f1f7':71721, '1f1f0-1f1fc':71722, '1f1f0-1f1fe':71723, '1f1f0-1f1ff':71724, '1f1f1-1f1e6':71725, '1f1f1-1f1e7':71726, '1f1f1-1f1e8':71727, '1f1f1-1f1ee':71728, '1f1f1-1f1f0':71729, '1f1f1-1f1f7':71730, '1f1f1-1f1f8':71731, '1f1f1-1f1f9':71732, '1f1f1-1f1fa':71733, '1f1f1-1f1fb':71734, '1f1f1-1f1fe':71735, '1f1f2-1f1e6':71736, '1f1f2-1f1e8':71737, '1f1f2-1f1e9':71738, '1f1f2-1f1ea':71739, '1f1f2-1f1eb':71740, '1f1f2-1f1ec':71741, '1f1f2-1f1ed':71742, '1f1f2-1f1f0':71743, '1f1f2-1f1f1':71744, '1f1f2-1f1f2':71745, '1f1f2-1f1f3':71746, '1f1f2-1f1f4':71747, '1f1f2-1f1f5':71748, '1f1f2-1f1f6':71749, '1f1f2-1f1f7':71750, '1f1f2-1f1f8':71751, '1f1f2-1f1f9':71752, '1f1f2-1f1fa':71753, '1f1f2-1f1fb':71754, '1f1f2-1f1fc':71755, '1f1f2-1f1fd':71756, '1f1f2-1f1fe':71757, '1f1f2-1f1ff':71758, '1f1f3-1f1e6':71759, '1f1f3-1f1e8':71760, '1f1f3-1f1ea':71761, '1f1f3-1f1eb':71762, '1f1f3-1f1ec':71763, '1f1f3-1f1ee':71764, '1f1f3-1f1f1':71765, '1f1f3-1f1f4':71766, '1f1f3-1f1f5':71767, '1f1f3-1f1f7':71768, '1f1f3-1f1fa':71769, '1f1f3-1f1ff':71770, '1f1f4-1f1f2':71771, '1f1f5-1f1e6':71772, '1f1f5-1f1ea':71773, '1f1f5-1f1eb':71774, '1f1f5-1f1ec':71775, '1f1f5-1f1ed':71776, '1f1f5-1f1f0':71777, '1f1f5-1f1f1':71778, '1f1f5-1f1f2':71779, '1f1f5-1f1f3':71780, '1f1f5-1f1f7':71781, '1f1f5-1f1f8':71782, '1f1f5-1f1f9':71783, '1f1f5-1f1fc':71784, '1f1f5-1f1fe':71785, '1f1f6-1f1e6':71786, '1f1f7-1f1ea':71787, '1f1f7-1f1f4':71788, '1f1f7-1f1f8':71789, '1f1f7-1f1fa':71790, '1f1f7-1f1fc':71791, '1f1f8-1f1e6':71792, '1f1f8-1f1e7':71793, '1f1f8-1f1e8':71794, '1f1f8-1f1e9':71795, '1f1f8-1f1ea':71796, '1f1f8-1f1ec':71797, '1f1f8-1f1ed':71798, '1f1f8-1f1ee':71799, '1f1f8-1f1ef':71800, '1f1f8-1f1f0':71801, '1f1f8-1f1f1':71802, '1f1f8-1f1f2':71803, '1f1f8-1f1f3':71804, '1f1f8-1f1f4':71805, '1f1f8-1f1f7':71806, '1f1f8-1f1f8':71807, '1f1f8-1f1f9':71808, '1f1f8-1f1fb':71809, '1f1f8-1f1fd':71810, '1f1f8-1f1fe':71811, '1f1f8-1f1ff':71812, '1f1f9-1f1e6':71813, '1f1f9-1f1e8':71814, '1f1f9-1f1e9':71815, '1f1f9-1f1eb':71816, '1f1f9-1f1ec':71817, '1f1f9-1f1ed':71818, '1f1f9-1f1ef':71819, '1f1f9-1f1f0':71820, '1f1f9-1f1f1':71821, '1f1f9-1f1f2':71822, '1f1f9-1f1f3':71823, '1f1f9-1f1f4':71824, '1f1f9-1f1f7':71825, '1f1f9-1f1f9':71826, '1f1f9-1f1fb':71827, '1f1f9-1f1fc':71828, '1f1f9-1f1ff':71829, '1f1fa-1f1e6':71830, '1f1fa-1f1ec':71831, '1f1fa-1f1f2':71832, '1f1fa-1f1f3':71833, '1f1fa-1f1f8':71834, '1f1fa-1f1fe':71835, '1f1fa-1f1ff':71836, '1f1fb-1f1e6':71837, '1f1fb-1f1e8':71838, '1f1fb-1f1ea':71839, '1f1fb-1f1ec':71840, '1f1fb-1f1ee':71841, '1f1fb-1f1f3':71842, '1f1fb-1f1fa':71843, '1f1fc-1f1eb':71844, '1f1fc-1f1f8':71845, '1f1fd-1f1f0':71846, '1f1fe-1f1ea':71847, '1f1fe-1f1f9':71848, '1f1ff-1f1e6':71849, '1f1ff-1f1f2':71850, '1f1ff-1f1fc':71851, '1f201':62899, '1f202':62900, '1f21a':62906, '1f22f':62903, '1f232':62907, '1f233':62911, '1f234':62910, '1f235':62915, '1f236':62902, '1f237':62901, '1f238':62909, '1f239':62905, '1f23a':62914, '1f250':62904, '1f251':62908, '1f300':41010, '1f301':4857, '1f302':41012, '1f303':4858, '1f304':4860, '1f305':4861, '1f306':4862, '1f307':4863, '1f308':41011, '1f309':4864, '1f30a':41023, '1f30b':4815, '1f30c':4997, '1f30d':4806, '1f30e':4807, '1f30f':4808, '1f310':4809, '1f311':4977, '1f312':4978, '1f313':4979, '1f314':4980, '1f315':4981, '1f316':4982, '1f317':4983, '1f318':4984, '1f319':4985, '1f31a':4986, '1f31b':4987, '1f31c':4988, '1f31d':4991, '1f31e':4992, '1f31f':4995, '1f320':4996, '1f321':4989, '1f324':41001, '1f325':41002, '1f326':41003, '1f327':41004, '1f328':41005, '1f329':41006, '1f32a':41007, '1f32b':41008, '1f32c':41009, '1f32d':3725, '1f32e':3727, '1f32f':3728, '1f330':3708, '1f331':2659, '1f332':2661, '1f333':2662, '1f334':2663, '1f335':2664, '1f336':3698, '1f337':2658, '1f338':2649, '1f339':2653, '1f33a':2655, '1f33b':2656, '1f33c':2657, '1f33d':3697, '1f33e':2665, '1f33f':2666, '1f340':2668, '1f341':2669, '1f342':2670, '1f343':2671, '1f344':3705, '1f345':3690, '1f346':3694, '1f347':3674, '1f348':3675, '1f349':3676, '1f34a':3677, '1f34b':3678, '1f34c':3679, '1f34d':3680, '1f34e':3682, '1f34f':3683, '1f350':3684, '1f351':3685, '1f352':3686, '1f353':3687, '1f354':3722, '1f355':3724, '1f356':3718, '1f357':3719, '1f358':3744, '1f359':3745, '1f35a':3746, '1f35b':3747, '1f35c':3748, '1f35d':3749, '1f35e':3709, '1f35f':3723, '1f360':3750, '1f361':3756, '1f362':3751, '1f363':3752, '1f364':3753, '1f365':3754, '1f366':3765, '1f367':3766, '1f368':3767, '1f369':3768, '1f36a':3769, '1f36b':3774, '1f36c':3775, '1f36d':3776, '1f36e':3777, '1f36f':3778, '1f370':3771, '1f371':3743, '1f372':3735, '1f373':3733, '1f374':3801, '1f375':3783, '1f376':3784, '1f377':3786, '1f378':3787, '1f379':3788, '1f37a':3789, '1f37b':3790, '1f37c':3779, '1f37d':3800, '1f37e':3785, '1f37f':3739, '1f380':51040, '1f381':51041, '1f382':3770, '1f383':51024, '1f384':51025, '1f385':1527, '1f386':51026, '1f387':51027, '1f388':51030, '1f389':51031, '1f38a':51032, '1f38b':51033, '1f38c':71588, '1f38d':51034, '1f38e':51035, '1f38f':51036, '1f390':51037, '1f391':51038, '1f392':61134, '1f393':61147, '1f396':51045, '1f397':51042, '1f399':61167, '1f39a':61168, '1f39b':61169, '1f39e':61203, '1f39f':51043, '1f3a0':4866, '1f3a1':4868, '1f3a2':4869, '1f3a3':51072, '1f3a4':61170, '1f3a5':61202, '1f3a6':62819, '1f3a7':61171, '1f3a8':51105, '1f3a9':61146, '1f3aa':4871, '1f3ab':51044, '1f3ac':61205, '1f3ad':51103, '1f3ae':51086, '1f3af':51078, '1f3b0':51088, '1f3b1':51081, '1f3b2':51089, '1f3b3':51060, '1f3b4':51102, '1f3b5':61165, '1f3b6':61166, '1f3b7':61173, '1f3b8':61175, '1f3b9':61176, '1f3ba':61177, '1f3bb':61178, '1f3bc':61164, '1f3bd':51074, '1f3be':51058, '1f3bf':51075, '1f3c0':51054, '1f3c1':71586, '1f3c2':1600, '1f3c3-200d-2640':1584, '1f3c3-200d-2642':1583, '1f3c3':1582, '1f3c4-200d-2640':1606, '1f3c4-200d-2642':1605, '1f3c4':1604, '1f3c5':51047, '1f3c6':51046, '1f3c7':1598, '1f3c8':51056, '1f3c9':51057, '1f3ca-200d-2640':1612, '1f3ca-200d-2642':1611, '1f3ca':1610, '1f3cb-200d-2640':1618, '1f3cb-200d-2642':1617, '1f3cb':1616, '1f3cc-200d-2640':1603, '1f3cc-200d-2642':1602, '1f3cc':1601, '1f3cd':4902, '1f3ce':4901, '1f3cf':51061, '1f3d0':51055, '1f3d1':51062, '1f3d2':51063, '1f3d3':51065, '1f3d4':4813, '1f3d5':4817, '1f3d6':4818, '1f3d7':4824, '1f3d8':4829, '1f3d9':4859, '1f3da':4830, '1f3db':4823, '1f3dc':4819, '1f3dd':4820, '1f3de':4821, '1f3df':4822, '1f3e0':4831, '1f3e1':4832, '1f3e2':4833, '1f3e3':4834, '1f3e4':4835, '1f3e5':4836, '1f3e6':4837, '1f3e7':62729, '1f3e8':4838, '1f3e9':4839, '1f3ea':4840, '1f3eb':4841, '1f3ec':4842, '1f3ed':4843, '1f3ee':61216, '1f3ef':4844, '1f3f0':4845, '1f3f3-200d-1f308':71591, '1f3f3-200d-26a7':71592, '1f3f3':71590, '1f3f4-200d-2620':71593, '1f3f4-e0067-e0062-e0065-e006e-e0067-e007f':71852, '1f3f4-e0067-e0062-e0073-e0063-e0074-e007f':71853, '1f3f4-e0067-e0062-e0077-e006c-e0073-e007f':71854, '1f3f4':71589, '1f3f5':2652, '1f3f7':61234, '1f3f8':51066, '1f3f9':61303, '1f3fa':3805, '1f3fb':9525, '1f3fc':9526, '1f3fd':9527, '1f3fe':9528, '1f3ff':9529, '1f400':2576, '1f401':2575, '1f402':2556, '1f403':2557, '1f404':2558, '1f405':2547, '1f406':2548, '1f407':2579, '1f408-200d-2b1b':2544, '1f408':2543, '1f409':2618, '1f40a':2613, '1f40b':2622, '1f40c':2632, '1f40d':2616, '1f40e':2550, '1f40f':2563, '1f410':2565, '1f411':2564, '1f412':2531, '1f413':2596, '1f414':2595, '1f415-200d-1f9ba':2537, '1f415':2535, '1f416':2560, '1f417':2561, '1f418':2570, '1f419':2629, '1f41a':2630, '1f41b':2634, '1f41c':2635, '1f41d':2636, '1f41e':2638, '1f41f':2625, '1f420':2626, '1f421':2627, '1f422':2614, '1f423':2597, '1f424':2598, '1f425':2599, '1f426':2600, '1f427':2601, '1f428':2586, '1f429':2538, '1f42a':2566, '1f42b':2567, '1f42c':2623, '1f42d':2574, '1f42e':2555, '1f42f':2546, '1f430':2578, '1f431':2542, '1f432':2617, '1f433':2621, '1f434':2549, '1f435':2530, '1f436':2534, '1f437':2559, '1f438':2612, '1f439':2577, '1f43a':2539, '1f43b-200d-2744':2585, '1f43b':2584, '1f43c':2587, '1f43d':2562, '1f43e':2593, '1f43f':2580, '1f440':1381, '1f441-200d-1f5e8':1159, '1f441':1382, '1f442':1373, '1f443':1375, '1f444':1384, '1f445':1383, '1f446':1347, '1f447':1349, '1f448':1345, '1f449':1346, '1f44a':1355, '1f44b':1327, '1f44c':1336, '1f44d':1352, '1f44e':1353, '1f44f':1358, '1f450':1361, '1f451':61144, '1f452':61145, '1f453':61110, '1f454':61115, '1f455':61116, '1f456':61117, '1f457':61122, '1f458':61123, '1f459':61128, '1f45a':61129, '1f45b':61130, '1f45c':61131, '1f45d':61132, '1f45e':61136, '1f45f':61137, '1f460':61140, '1f461':61141, '1f462':61143, '1f463':1687, '1f464':1684, '1f465':1685, '1f466':1388, '1f467':1389, '1f468-200d-1f33e':1457, '1f468-200d-1f373':1460, '1f468-200d-1f37c':1524, '1f468-200d-1f393':1448, '1f468-200d-1f3a4':1478, '1f468-200d-1f3a8':1481, '1f468-200d-1f3eb':1451, '1f468-200d-1f3ed':1466, '1f468-200d-1f466-200d-1f466':1674, '1f468-200d-1f466':1673, '1f468-200d-1f467-200d-1f466':1676, '1f468-200d-1f467-200d-1f467':1677, '1f468-200d-1f467':1675, '1f468-200d-1f468-200d-1f466':1663, '1f468-200d-1f468-200d-1f466-200d-1f466':1666, '1f468-200d-1f468-200d-1f467':1664, '1f468-200d-1f468-200d-1f467-200d-1f466':1665, '1f468-200d-1f468-200d-1f467-200d-1f467':1667, '1f468-200d-1f469-200d-1f466':1658, '1f468-200d-1f469-200d-1f466-200d-1f466':1661, '1f468-200d-1f469-200d-1f467':1659, '1f468-200d-1f469-200d-1f467-200d-1f466':1660, '1f468-200d-1f469-200d-1f467-200d-1f467':1662, '1f468-200d-1f4bb':1475, '1f468-200d-1f4bc':1469, '1f468-200d-1f527':1463, '1f468-200d-1f52c':1472, '1f468-200d-1f680':1487, '1f468-200d-1f692':1490, '1f468-200d-1f9af':1574, '1f468-200d-1f9b0':1396, '1f468-200d-1f9b1':1397, '1f468-200d-1f9b2':1399, '1f468-200d-1f9b3':1398, '1f468-200d-1f9bc':1577, '1f468-200d-1f9bd':1580, '1f468-200d-2695':1445, '1f468-200d-2696':1454, '1f468-200d-2708':1484, '1f468-200d-2764-200d-1f468':1655, '1f468-200d-2764-200d-1f48b-200d-1f468':1651, '1f468':1392, '1f469-200d-1f33e':1458, '1f469-200d-1f373':1461, '1f469-200d-1f37c':1523, '1f469-200d-1f393':1449, '1f469-200d-1f3a4':1479, '1f469-200d-1f3a8':1482, '1f469-200d-1f3eb':1452, '1f469-200d-1f3ed':1467, '1f469-200d-1f466-200d-1f466':1679, '1f469-200d-1f466':1678, '1f469-200d-1f467-200d-1f466':1681, '1f469-200d-1f467-200d-1f467':1682, '1f469-200d-1f467':1680, '1f469-200d-1f469-200d-1f466':1668, '1f469-200d-1f469-200d-1f466-200d-1f466':1671, '1f469-200d-1f469-200d-1f467':1669, '1f469-200d-1f469-200d-1f467-200d-1f466':1670, '1f469-200d-1f469-200d-1f467-200d-1f467':1672, '1f469-200d-1f4bb':1476, '1f469-200d-1f4bc':1470, '1f469-200d-1f527':1464, '1f469-200d-1f52c':1473, '1f469-200d-1f680':1488, '1f469-200d-1f692':1491, '1f469-200d-1f9af':1575, '1f469-200d-1f9b0':1401, '1f469-200d-1f9b1':1403, '1f469-200d-1f9b2':1407, '1f469-200d-1f9b3':1405, '1f469-200d-1f9bc':1578, '1f469-200d-1f9bd':1581, '1f469-200d-2695':1446, '1f469-200d-2696':1455, '1f469-200d-2708':1485, '1f469-200d-2764-200d-1f468':1654, '1f469-200d-2764-200d-1f469':1656, '1f469-200d-2764-200d-1f48b-200d-1f468':1650, '1f469-200d-2764-200d-1f48b-200d-1f469':1652, '1f469':1400, '1f46a':1657, '1f46b':1647, '1f46c':1648, '1f46d':1646, '1f46e-200d-2640':1494, '1f46e-200d-2642':1493, '1f46e':1492, '1f46f-200d-2640':1590, '1f46f-200d-2642':1589, '1f46f':1588, '1f470-200d-2640':1518, '1f470-200d-2642':1517, '1f470':1516, '1f471-200d-2640':1409, '1f471-200d-2642':1410, '1f471':1391, '1f472':1511, '1f473-200d-2640':1510, '1f473-200d-2642':1509, '1f473':1508, '1f474':1412, '1f475':1413, '1f476':1386, '1f477-200d-2640':1504, '1f477-200d-2642':1503, '1f477':1502, '1f478':1507, '1f479':1109, '1f47a':1110, '1f47b':1111, '1f47c':1526, '1f47d':1112, '1f47e':1113, '1f47f':1104, '1f480':1105, '1f481-200d-2640':1428, '1f481-200d-2642':1427, '1f481':1426, '1f482-200d-2640':1500, '1f482-200d-2642':1499, '1f482':1498, '1f483':1585, '1f484':61152, '1f485':1366, '1f486-200d-2640':1560, '1f486-200d-2642':1559, '1f486':1558, '1f487-200d-2640':1563, '1f487-200d-2642':1562, '1f487':1561, '1f488':4870, '1f489':61326, '1f48a':61328, '1f48b':1127, '1f48c':1128, '1f48d':61153, '1f48e':61154, '1f48f':1649, '1f490':2648, '1f491':1653, '1f492':4846, '1f493':1133, '1f494':1138, '1f495':1135, '1f496':1131, '1f497':1132, '1f498':1129, '1f499':1145, '1f49a':1144, '1f49b':1143, '1f49c':1146, '1f49d':1130, '1f49e':1134, '1f49f':1136, '1f4a0':62946, '1f4a1':61214, '1f4a2':1151, '1f4a3':1157, '1f4a4':1163, '1f4a5':1152, '1f4a6':1154, '1f4a7':41022, '1f4a8':1155, '1f4a9':1107, '1f4aa':1368, '1f4ab':1153, '1f4ac':1158, '1f4ad':1162, '1f4ae':2650, '1f4af':1150, '1f4b0':61235, '1f4b1':62841, '1f4b2':62842, '1f4b3':61242, '1f4b4':61237, '1f4b5':61238, '1f4b6':61239, '1f4b7':61240, '1f4b8':61241, '1f4b9':61244, '1f4ba':4936, '1f4bb':61191, '1f4bc':61265, '1f4bd':61197, '1f4be':61198, '1f4bf':61199, '1f4c0':61200, '1f4c1':61266, '1f4c2':61267, '1f4c3':61227, '1f4c4':61229, '1f4c5':61269, '1f4c6':61270, '1f4c7':61273, '1f4c8':61274, '1f4c9':61275, '1f4ca':61276, '1f4cb':61277, '1f4cc':61278, '1f4cd':61279, '1f4ce':61280, '1f4cf':61282, '1f4d0':61283, '1f4d1':61232, '1f4d2':61226, '1f4d3':61225, '1f4d4':61218, '1f4d5':61219, '1f4d6':61220, '1f4d7':61221, '1f4d8':61222, '1f4d9':61223, '1f4da':61224, '1f4db':62847, '1f4dc':61228, '1f4dd':61264, '1f4de':61185, '1f4df':61186, '1f4e0':61187, '1f4e1':61325, '1f4e2':61159, '1f4e3':61160, '1f4e4':61249, '1f4e5':61250, '1f4e6':61251, '1f4e7':61246, '1f4e8':61247, '1f4e9':61248, '1f4ea':61253, '1f4eb':61252, '1f4ec':61254, '1f4ed':61255, '1f4ee':61256, '1f4ef':61161, '1f4f0':61230, '1f4f1':61182, '1f4f2':61183, '1f4f3':62823, '1f4f4':62824, '1f4f5':62751, '1f4f6':62822, '1f4f7':61207, '1f4f8':61208, '1f4f9':61209, '1f4fa':61206, '1f4fb':61172, '1f4fc':61210, '1f4fd':61204, '1f4ff':61151, '1f500':62801, '1f501':62802, '1f502':62803, '1f503':62769, '1f504':62770, '1f505':62820, '1f506':62821, '1f507':61155, '1f508':61156, '1f509':61157, '1f50a':61158, '1f50b':61188, '1f50c':61190, '1f50d':61211, '1f50e':61212, '1f50f':61290, '1f510':61291, '1f511':61292, '1f512':61288, '1f513':61289, '1f514':61162, '1f515':61163, '1f516':61233, '1f517':61313, '1f518':62947, '1f519':62771, '1f51a':62772, '1f51b':62773, '1f51c':62774, '1f51d':62775, '1f51e':62752, '1f51f':62876, '1f520':62877, '1f521':62878, '1f522':62879, '1f523':62880, '1f524':62881, '1f525':41021, '1f526':61215, '1f527':61306, '1f528':61294, '1f529':61308, '1f52a':3803, '1f52b':61301, '1f52c':61323, '1f52d':61324, '1f52e':51082, '1f52f':62787, '1f530':62848, '1f531':62846, '1f532':62949, '1f533':62948, '1f534':62916, '1f535':62920, '1f536':62940, '1f537':62941, '1f538':62942, '1f539':62943, '1f53a':62944, '1f53b':62945, '1f53c':62811, '1f53d':62813, '1f549':62778, '1f54a':2602, '1f54b':4854, '1f54c':4850, '1f54d':4852, '1f54e':62786, '1f550':4955, '1f551':4957, '1f552':4959, '1f553':4961, '1f554':4963, '1f555':4965, '1f556':4967, '1f557':4969, '1f558':4971, '1f559':4973, '1f55a':4975, '1f55b':4953, '1f55c':4956, '1f55d':4958, '1f55e':4960, '1f55f':4962, '1f560':4964, '1f561':4966, '1f562':4968, '1f563':4970, '1f564':4972, '1f565':4974, '1f566':4976, '1f567':4954, '1f56f':61213, '1f570':4952, '1f573':1156, '1f574':1587, '1f575-200d-2640':1497, '1f575-200d-2642':1496, '1f575':1495, '1f576':61111, '1f577':2641, '1f578':2642, '1f579':51087, '1f57a':1586, '1f587':61281, '1f58a':61261, '1f58b':61260, '1f58c':61262, '1f58d':61263, '1f590':1329, '1f595':1348, '1f596':1331, '1f5a4':1148, '1f5a5':61192, '1f5a8':61193, '1f5b1':61195, '1f5b2':61196, '1f5bc':51104, '1f5c2':61268, '1f5c3':61285, '1f5c4':61286, '1f5d1':61287, '1f5d2':61271, '1f5d3':61272, '1f5dc':61310, '1f5dd':61293, '1f5de':61231, '1f5e1':61299, '1f5e3':1683, '1f5e8':1160, '1f5ef':1161, '1f5f3':61257, '1f5fa':4810, '1f5fb':4816, '1f5fc':4847, '1f5fd':4848, '1f5fe':4811, '1f5ff':61362, '1f600':11, '1f601':14, '1f602':18, '1f603':12, '1f604':13, '1f605':16, '1f606':15, '1f607':114, '1f608':1103, '1f609':112, '1f60a':113, '1f60b':124, '1f60c':150, '1f60d':116, '1f60e':170, '1f60f':144, '1f610':139, '1f611':140, '1f612':145, '1f613':195, '1f614':151, '1f615':173, '1f616':192, '1f617':119, '1f618':118, '1f619':122, '1f61a':121, '1f61b':125, '1f61c':126, '1f61d':128, '1f61e':194, '1f61f':175, '1f620':1101, '1f621':1100, '1f622':189, '1f623':193, '1f624':199, '1f625':188, '1f626':184, '1f627':185, '1f628':186, '1f629':196, '1f62a':152, '1f62b':197, '1f62c':147, '1f62d':190, '1f62e-200d-1f4a8':148, '1f62e':178, '1f62f':179, '1f630':187, '1f631':191, '1f632':180, '1f633':181, '1f634':154, '1f635-200d-1f4ab':165, '1f635':164, '1f636-200d-1f32b':143, '1f636':141, '1f637':155, '1f638':1116, '1f639':1117, '1f63a':1115, '1f63b':1118, '1f63c':1119, '1f63d':1120, '1f63e':1123, '1f63f':1122, '1f640':1121, '1f641':176, '1f642':19, '1f643':110, '1f644':146, '1f645-200d-2640':1422, '1f645-200d-2642':1421, '1f645':1420, '1f646-200d-2640':1425, '1f646-200d-2642':1424, '1f646':1423, '1f647-200d-2640':1437, '1f647-200d-2642':1436, '1f647':1435, '1f648':1124, '1f649':1125, '1f64a':1126, '1f64b-200d-2640':1431, '1f64b-200d-2642':1430, '1f64b':1429, '1f64c':1359, '1f64d-200d-2640':1416, '1f64d-200d-2642':1415, '1f64d':1414, '1f64e-200d-2640':1419, '1f64e-200d-2642':1418, '1f64e':1417, '1f64f':1364, '1f680':4942, '1f681':4937, '1f682':4872, '1f683':4873, '1f684':4874, '1f685':4875, '1f686':4876, '1f687':4877, '1f688':4878, '1f689':4879, '1f68a':4880, '1f68b':4883, '1f68c':4884, '1f68d':4885, '1f68e':4886, '1f68f':4911, '1f690':4887, '1f691':4888, '1f692':4889, '1f693':4890, '1f694':4891, '1f695':4892, '1f696':4893, '1f697':4894, '1f698':4895, '1f699':4896, '1f69a':4898, '1f69b':4899, '1f69c':4900, '1f69d':4881, '1f69e':4882, '1f69f':4938, '1f6a0':4939, '1f6a1':4940, '1f6a2':4930, '1f6a3-200d-2640':1609, '1f6a3-200d-2642':1608, '1f6a3':1607, '1f6a4':4926, '1f6a5':4918, '1f6a6':4919, '1f6a7':4921, '1f6a8':4917, '1f6a9':71587, '1f6aa':61333, '1f6ab':62745, '1f6ac':61358, '1f6ad':62747, '1f6ae':62730, '1f6af':62748, '1f6b0':62731, '1f6b1':62749, '1f6b2':4907, '1f6b3':62746, '1f6b4-200d-2640':1621, '1f6b4-200d-2642':1620, '1f6b4':1619, '1f6b5-200d-2640':1624, '1f6b5-200d-2642':1623, '1f6b5':1622, '1f6b6-200d-2640':1566, '1f6b6-200d-2642':1565, '1f6b6':1564, '1f6b7':62750, '1f6b8':62743, '1f6b9':62733, '1f6ba':62734, '1f6bb':62735, '1f6bc':62736, '1f6bd':61340, '1f6be':62737, '1f6bf':61342, '1f6c0':1643, '1f6c1':61343, '1f6c2':62738, '1f6c3':62739, '1f6c4':62740, '1f6c5':62741, '1f6cb':61338, '1f6cc':1644, '1f6cd':61133, '1f6ce':4944, '1f6cf':61337, '1f6d0':62776, '1f6d1':4920, '1f6d2':61357, '1f6d5':4851, '1f6d6':4828, '1f6d7':61334, '1f6e0':61298, '1f6e1':61304, '1f6e2':4914, '1f6e3':4912, '1f6e4':4913, '1f6e5':4929, '1f6e9':4932, '1f6eb':4933, '1f6ec':4934, '1f6f0':4941, '1f6f3':4927, '1f6f4':4908, '1f6f5':4903, '1f6f6':4925, '1f6f7':51076, '1f6f8':4943, '1f6f9':4909, '1f6fa':4906, '1f6fb':4897, '1f6fc':4910, '1f7e0':62917, '1f7e1':62918, '1f7e2':62919, '1f7e3':62921, '1f7e4':62922, '1f7e5':62925, '1f7e6':62929, '1f7e7':62926, '1f7e8':62927, '1f7e9':62928, '1f7ea':62930, '1f7eb':62931, '1f90c':1337, '1f90d':1149, '1f90e':1147, '1f90f':1338, '1f910':137, '1f911':129, '1f912':156, '1f913':171, '1f914':135, '1f915':157, '1f916':1114, '1f917':130, '1f918':1343, '1f919':1344, '1f91a':1328, '1f91b':1356, '1f91c':1357, '1f91d':1363, '1f91e':1340, '1f91f':1342, '1f920':167, '1f921':1108, '1f922':158, '1f923':17, '1f924':153, '1f925':149, '1f926-200d-2640':1440, '1f926-200d-2642':1439, '1f926':1438, '1f927':160, '1f928':138, '1f929':117, '1f92a':127, '1f92b':134, '1f92c':1102, '1f92d':131, '1f92e':159, '1f92f':166, '1f930':1519, '1f931':1522, '1f932':1362, '1f933':1367, '1f934':1506, '1f935-200d-2640':1515, '1f935-200d-2642':1514, '1f935':1513, '1f936':1528, '1f937-200d-2640':1443, '1f937-200d-2642':1442, '1f937':1441, '1f938-200d-2640':1627, '1f938-200d-2642':1626, '1f938':1625, '1f939-200d-2640':1639, '1f939-200d-2642':1638, '1f939':1637, '1f93a':1597, '1f93c-200d-2640':1630, '1f93c-200d-2642':1629, '1f93c':1628, '1f93d-200d-2640':1633, '1f93d-200d-2642':1632, '1f93d':1631, '1f93e-200d-2640':1636, '1f93e-200d-2642':1635, '1f93e':1634, '1f93f':51073, '1f940':2654, '1f941':61180, '1f942':3791, '1f943':3792, '1f944':3802, '1f945':51069, '1f947':51048, '1f948':51049, '1f949':51050, '1f94a':51067, '1f94b':51068, '1f94c':51077, '1f94d':51064, '1f94e':51053, '1f94f':51059, '1f950':3710, '1f951':3693, '1f952':3700, '1f953':3721, '1f954':3695, '1f955':3696, '1f956':3711, '1f957':3738, '1f958':3734, '1f959':3730, '1f95a':3732, '1f95b':3780, '1f95c':3706, '1f95d':3689, '1f95e':3715, '1f95f':3757, '1f960':3758, '1f961':3759, '1f962':3799, '1f963':3737, '1f964':3794, '1f965':3692, '1f966':3702, '1f967':3773, '1f968':3713, '1f969':3720, '1f96a':3726, '1f96b':3742, '1f96c':3701, '1f96d':3681, '1f96e':3755, '1f96f':3714, '1f970':115, '1f971':198, '1f972':123, '1f973':168, '1f974':163, '1f975':161, '1f976':162, '1f977':1501, '1f978':169, '1f97a':182, '1f97b':61124, '1f97c':61113, '1f97d':61112, '1f97e':61138, '1f97f':61139, '1f980':3760, '1f981':2545, '1f982':2643, '1f983':2594, '1f984':2551, '1f985':2603, '1f986':2604, '1f987':2583, '1f988':2628, '1f989':2606, '1f98a':2540, '1f98b':2633, '1f98c':2553, '1f98d':2532, '1f98e':2615, '1f98f':2572, '1f990':3762, '1f991':3763, '1f992':2569, '1f993':2552, '1f994':2582, '1f995':2619, '1f996':2620, '1f997':2639, '1f998':2591, '1f999':2568, '1f99a':2610, '1f99b':2573, '1f99c':2611, '1f99d':2541, '1f99e':3761, '1f99f':2644, '1f9a0':2647, '1f9a1':2592, '1f9a2':2605, '1f9a3':2571, '1f9a4':2607, '1f9a5':2588, '1f9a6':2589, '1f9a7':2533, '1f9a8':2590, '1f9a9':2609, '1f9aa':3764, '1f9ab':2581, '1f9ac':2554, '1f9ad':2624, '1f9ae':2536, '1f9af':61312, '1f9b4':1380, '1f9b5':1371, '1f9b6':1372, '1f9b7':1379, '1f9b8-200d-2640':1532, '1f9b8-200d-2642':1531, '1f9b8':1530, '1f9b9-200d-2640':1535, '1f9b9-200d-2642':1534, '1f9b9':1533, '1f9ba':61114, '1f9bb':1374, '1f9bc':4905, '1f9bd':4904, '1f9be':1369, '1f9bf':1370, '1f9c0':3717, '1f9c1':3772, '1f9c2':3741, '1f9c3':3796, '1f9c4':3703, '1f9c5':3704, '1f9c6':3731, '1f9c7':3716, '1f9c8':3740, '1f9c9':3797, '1f9ca':3798, '1f9cb':3795, '1f9cd-200d-2640':1569, '1f9cd-200d-2642':1568, '1f9cd':1567, '1f9ce-200d-2640':1572, '1f9ce-200d-2642':1571, '1f9ce':1570, '1f9cf-200d-2640':1434, '1f9cf-200d-2642':1433, '1f9cf':1432, '1f9d0':172, '1f9d1-200d-1f33e':1456, '1f9d1-200d-1f373':1459, '1f9d1-200d-1f37c':1525, '1f9d1-200d-1f384':1529, '1f9d1-200d-1f393':1447, '1f9d1-200d-1f3a4':1477, '1f9d1-200d-1f3a8':1480, '1f9d1-200d-1f3eb':1450, '1f9d1-200d-1f3ed':1465, '1f9d1-200d-1f4bb':1474, '1f9d1-200d-1f4bc':1468, '1f9d1-200d-1f527':1462, '1f9d1-200d-1f52c':1471, '1f9d1-200d-1f680':1486, '1f9d1-200d-1f692':1489, '1f9d1-200d-1f91d-200d-1f9d1':1645, '1f9d1-200d-1f9af':1573, '1f9d1-200d-1f9b0':1402, '1f9d1-200d-1f9b1':1404, '1f9d1-200d-1f9b2':1408, '1f9d1-200d-1f9b3':1406, '1f9d1-200d-1f9bc':1576, '1f9d1-200d-1f9bd':1579, '1f9d1-200d-2695':1444, '1f9d1-200d-2696':1453, '1f9d1-200d-2708':1483, '1f9d1':1390, '1f9d2':1387, '1f9d3':1411, '1f9d4-200d-2640':1395, '1f9d4-200d-2642':1394, '1f9d4':1393, '1f9d5':1512, '1f9d6-200d-2640':1593, '1f9d6-200d-2642':1592, '1f9d6':1591, '1f9d7-200d-2640':1596, '1f9d7-200d-2642':1595, '1f9d7':1594, '1f9d8-200d-2640':1642, '1f9d8-200d-2642':1641, '1f9d8':1640, '1f9d9-200d-2640':1538, '1f9d9-200d-2642':1537, '1f9d9':1536, '1f9da-200d-2640':1541, '1f9da-200d-2642':1540, '1f9da':1539, '1f9db-200d-2640':1544, '1f9db-200d-2642':1543, '1f9db':1542, '1f9dc-200d-2640':1547, '1f9dc-200d-2642':1546, '1f9dc':1545, '1f9dd-200d-2640':1550, '1f9dd-200d-2642':1549, '1f9dd':1548, '1f9de-200d-2640':1553, '1f9de-200d-2642':1552, '1f9de':1551, '1f9df-200d-2640':1556, '1f9df-200d-2642':1555, '1f9df':1554, '1f9e0':1376, '1f9e1':1142, '1f9e2':61148, '1f9e3':61118, '1f9e4':61119, '1f9e5':61120, '1f9e6':61121, '1f9e7':51039, '1f9e8':51028, '1f9e9':51090, '1f9ea':61320, '1f9eb':61321, '1f9ec':61322, '1f9ed':4812, '1f9ee':61201, '1f9ef':61356, '1f9f0':61316, '1f9f1':4825, '1f9f2':61317, '1f9f3':4945, '1f9f4':61346, '1f9f5':51106, '1f9f6':51108, '1f9f7':61347, '1f9f8':51091, '1f9f9':61348, '1f9fa':61349, '1f9fb':61350, '1f9fc':61352, '1f9fd':61355, '1f9fe':61243, '1f9ff':51084, '1fa70':61142, '1fa71':61125, '1fa72':61126, '1fa73':61127, '1fa74':61135, '1fa78':61327, '1fa79':61329, '1fa7a':61331, '1fa80':51079, '1fa81':51080, '1fa82':4935, '1fa83':61302, '1fa84':51083, '1fa85':51092, '1fa86':51094, '1fa90':4993, '1fa91':61339, '1fa92':61345, '1fa93':61295, '1fa94':61217, '1fa95':61179, '1fa96':61149, '1fa97':61174, '1fa98':61181, '1fa99':61236, '1fa9a':61305, '1fa9b':61307, '1fa9c':61318, '1fa9d':61315, '1fa9e':61335, '1fa9f':61336, '1faa0':61341, '1faa1':51107, '1faa2':51109, '1faa3':61351, '1faa4':61344, '1faa5':61354, '1faa6':61360, '1faa7':61363, '1faa8':4826, '1fab0':2645, '1fab1':2646, '1fab2':2637, '1fab3':2640, '1fab4':2660, '1fab5':4827, '1fab6':2608, '1fac0':1377, '1fac1':1378, '1fac2':1686, '1fad0':3688, '1fad1':3699, '1fad2':3691, '1fad3':3712, '1fad4':3729, '1fad5':3736, '1fad6':3782, '203c':62834, '21a9':62765, '21aa':62766, '231a':4948, '231b':4946, '23cf':62818, '23e9':62805, '23ea':62809, '23eb':62812, '23ec':62814, '23ed':62806, '23ee':62810, '23ef':62807, '23f0':4949, '23f1':4950, '23f2':4951, '23f3':4947, '23f8':62815, '23f9':62816, '23fa':62817, '24c2':62890, '25aa':62938, '25ab':62939, '25b6':62804, '25c0':62808, '25fb':62935, '25fc':62934, '25fd':62937, '25fe':62936, '260e':61184, '261d':1350, '262a':62784, '262e':62785, '262f':62781, '263a':120, '264a':62790, '264b':62791, '264c':62792, '264d':62793, '264e':62794, '264f':62795, '265f':51099, '267b':62844, '267e':62833, '267f':62732, '269b':62777, '269c':62845, '26a0':62742, '26a1':41016, '26a7':62827, '26aa':62924, '26ab':62923, '26b0':61359, '26b1':61361, '26bd':51051, '26be':51052, '26c4':41019, '26c5':4999, '26c8':41000, '26ce':62800, '26cf':61296, '26d1':61150, '26d3':61314, '26d4':62744, '26e9':4853, '26ea':4849, '26f0':4814, '26f1':41015, '26f2':4855, '26f3':51070, '26f4':4928, '26f5':4924, '26f7':1599, '26f8':51071, '26f9-200d-2640':1615, '26f9-200d-2642':1614, '26f9':1613, '26fa':4856, '26fd':4915, '270a':1354, '270b':1330, '270c':1339, '270d':1365, '270f':61258, '271d':62782, '274c':62853, '274e':62854, '2764-200d-1f525':1139, '2764-200d-1fa79':1140, '27a1':62757, '27b0':62855, '27bf':62856, '2b05':62761, '2b06':62755, '2b07':62759, '2b1b':62932, '2b1c':62933, '2b50':4994, '2b55':62849, '303d':62857, '1f385-1f3fb':0, '1f385-1f3fc':0, '1f385-1f3fd':0, '1f385-1f3fe':0, '1f385-1f3ff':0, '1f3c2-1f3fb':0, '1f3c2-1f3fc':0, '1f3c2-1f3fd':0, '1f3c2-1f3fe':0, '1f3c2-1f3ff':0, '1f3c3-1f3fb-200d-2640':0, '1f3c3-1f3fc-200d-2640':0, '1f3c3-1f3fd-200d-2640':0, '1f3c3-1f3fe-200d-2640':0, '1f3c3-1f3ff-200d-2640':0, '1f3c3-1f3fb-200d-2642':0, '1f3c3-1f3fc-200d-2642':0, '1f3c3-1f3fd-200d-2642':0, '1f3c3-1f3fe-200d-2642':0, '1f3c3-1f3ff-200d-2642':0, '1f3c3-1f3fb':0, '1f3c3-1f3fc':0, '1f3c3-1f3fd':0, '1f3c3-1f3fe':0, '1f3c3-1f3ff':0, '1f3c4-1f3fb-200d-2640':0, '1f3c4-1f3fc-200d-2640':0, '1f3c4-1f3fd-200d-2640':0, '1f3c4-1f3fe-200d-2640':0, '1f3c4-1f3ff-200d-2640':0, '1f3c4-1f3fb-200d-2642':0, '1f3c4-1f3fc-200d-2642':0, '1f3c4-1f3fd-200d-2642':0, '1f3c4-1f3fe-200d-2642':0, '1f3c4-1f3ff-200d-2642':0, '1f3c4-1f3fb':0, '1f3c4-1f3fc':0, '1f3c4-1f3fd':0, '1f3c4-1f3fe':0, '1f3c4-1f3ff':0, '1f3c7-1f3fb':0, '1f3c7-1f3fc':0, '1f3c7-1f3fd':0, '1f3c7-1f3fe':0, '1f3c7-1f3ff':0, '1f3ca-1f3fb-200d-2640':0, '1f3ca-1f3fc-200d-2640':0, '1f3ca-1f3fd-200d-2640':0, '1f3ca-1f3fe-200d-2640':0, '1f3ca-1f3ff-200d-2640':0, '1f3ca-1f3fb-200d-2642':0, '1f3ca-1f3fc-200d-2642':0, '1f3ca-1f3fd-200d-2642':0, '1f3ca-1f3fe-200d-2642':0, '1f3ca-1f3ff-200d-2642':0, '1f3ca-1f3fb':0, '1f3ca-1f3fc':0, '1f3ca-1f3fd':0, '1f3ca-1f3fe':0, '1f3ca-1f3ff':0, '1f3cb-1f3fb-200d-2640':0, '1f3cb-1f3fc-200d-2640':0, '1f3cb-1f3fd-200d-2640':0, '1f3cb-1f3fe-200d-2640':0, '1f3cb-1f3ff-200d-2640':0, '1f3cb-1f3fb-200d-2642':0, '1f3cb-1f3fc-200d-2642':0, '1f3cb-1f3fd-200d-2642':0, '1f3cb-1f3fe-200d-2642':0, '1f3cb-1f3ff-200d-2642':0, '1f3cb-1f3fb':0, '1f3cb-1f3fc':0, '1f3cb-1f3fd':0, '1f3cb-1f3fe':0, '1f3cb-1f3ff':0, '1f3cc-1f3fb-200d-2640':0, '1f3cc-1f3fc-200d-2640':0, '1f3cc-1f3fd-200d-2640':0, '1f3cc-1f3fe-200d-2640':0, '1f3cc-1f3ff-200d-2640':0, '1f3cc-1f3fb-200d-2642':0, '1f3cc-1f3fc-200d-2642':0, '1f3cc-1f3fd-200d-2642':0, '1f3cc-1f3fe-200d-2642':0, '1f3cc-1f3ff-200d-2642':0, '1f3cc-1f3fb':0, '1f3cc-1f3fc':0, '1f3cc-1f3fd':0, '1f3cc-1f3fe':0, '1f3cc-1f3ff':0, '1f442-1f3fb':0, '1f442-1f3fc':0, '1f442-1f3fd':0, '1f442-1f3fe':0, '1f442-1f3ff':0, '1f443-1f3fb':0, '1f443-1f3fc':0, '1f443-1f3fd':0, '1f443-1f3fe':0, '1f443-1f3ff':0, '1f446-1f3fb':0, '1f446-1f3fc':0, '1f446-1f3fd':0, '1f446-1f3fe':0, '1f446-1f3ff':0, '1f447-1f3fb':0, '1f447-1f3fc':0, '1f447-1f3fd':0, '1f447-1f3fe':0, '1f447-1f3ff':0, '1f448-1f3fb':0, '1f448-1f3fc':0, '1f448-1f3fd':0, '1f448-1f3fe':0, '1f448-1f3ff':0, '1f449-1f3fb':0, '1f449-1f3fc':0, '1f449-1f3fd':0, '1f449-1f3fe':0, '1f449-1f3ff':0, '1f44a-1f3fb':0, '1f44a-1f3fc':0, '1f44a-1f3fd':0, '1f44a-1f3fe':0, '1f44a-1f3ff':0, '1f44b-1f3fb':0, '1f44b-1f3fc':0, '1f44b-1f3fd':0, '1f44b-1f3fe':0, '1f44b-1f3ff':0, '1f44c-1f3fb':0, '1f44c-1f3fc':0, '1f44c-1f3fd':0, '1f44c-1f3fe':0, '1f44c-1f3ff':0, '1f44d-1f3fb':0, '1f44d-1f3fc':0, '1f44d-1f3fd':0, '1f44d-1f3fe':0, '1f44d-1f3ff':0, '1f44e-1f3fb':0, '1f44e-1f3fc':0, '1f44e-1f3fd':0, '1f44e-1f3fe':0, '1f44e-1f3ff':0, '1f44f-1f3fb':0, '1f44f-1f3fc':0, '1f44f-1f3fd':0, '1f44f-1f3fe':0, '1f44f-1f3ff':0, '1f450-1f3fb':0, '1f450-1f3fc':0, '1f450-1f3fd':0, '1f450-1f3fe':0, '1f450-1f3ff':0, '1f466-1f3fb':0, '1f466-1f3fc':0, '1f466-1f3fd':0, '1f466-1f3fe':0, '1f466-1f3ff':0, '1f467-1f3fb':0, '1f467-1f3fc':0, '1f467-1f3fd':0, '1f467-1f3fe':0, '1f467-1f3ff':0, '1f468-1f3fb-200d-1f33e':0, '1f468-1f3fc-200d-1f33e':0, '1f468-1f3fd-200d-1f33e':0, '1f468-1f3fe-200d-1f33e':0, '1f468-1f3ff-200d-1f33e':0, '1f468-1f3fb-200d-1f373':0, '1f468-1f3fc-200d-1f373':0, '1f468-1f3fd-200d-1f373':0, '1f468-1f3fe-200d-1f373':0, '1f468-1f3ff-200d-1f373':0, '1f468-1f3fb-200d-1f37c':0, '1f468-1f3fc-200d-1f37c':0, '1f468-1f3fd-200d-1f37c':0, '1f468-1f3fe-200d-1f37c':0, '1f468-1f3ff-200d-1f37c':0, '1f468-1f3fb-200d-1f393':0, '1f468-1f3fc-200d-1f393':0, '1f468-1f3fd-200d-1f393':0, '1f468-1f3fe-200d-1f393':0, '1f468-1f3ff-200d-1f393':0, '1f468-1f3fb-200d-1f3a4':0, '1f468-1f3fc-200d-1f3a4':0, '1f468-1f3fd-200d-1f3a4':0, '1f468-1f3fe-200d-1f3a4':0, '1f468-1f3ff-200d-1f3a4':0, '1f468-1f3fb-200d-1f3a8':0, '1f468-1f3fc-200d-1f3a8':0, '1f468-1f3fd-200d-1f3a8':0, '1f468-1f3fe-200d-1f3a8':0, '1f468-1f3ff-200d-1f3a8':0, '1f468-1f3fb-200d-1f3eb':0, '1f468-1f3fc-200d-1f3eb':0, '1f468-1f3fd-200d-1f3eb':0, '1f468-1f3fe-200d-1f3eb':0, '1f468-1f3ff-200d-1f3eb':0, '1f468-1f3fb-200d-1f3ed':0, '1f468-1f3fc-200d-1f3ed':0, '1f468-1f3fd-200d-1f3ed':0, '1f468-1f3fe-200d-1f3ed':0, '1f468-1f3ff-200d-1f3ed':0, '1f468-1f3fb-200d-1f4bb':0, '1f468-1f3fc-200d-1f4bb':0, '1f468-1f3fd-200d-1f4bb':0, '1f468-1f3fe-200d-1f4bb':0, '1f468-1f3ff-200d-1f4bb':0, '1f468-1f3fb-200d-1f4bc':0, '1f468-1f3fc-200d-1f4bc':0, '1f468-1f3fd-200d-1f4bc':0, '1f468-1f3fe-200d-1f4bc':0, '1f468-1f3ff-200d-1f4bc':0, '1f468-1f3fb-200d-1f527':0, '1f468-1f3fc-200d-1f527':0, '1f468-1f3fd-200d-1f527':0, '1f468-1f3fe-200d-1f527':0, '1f468-1f3ff-200d-1f527':0, '1f468-1f3fb-200d-1f52c':0, '1f468-1f3fc-200d-1f52c':0, '1f468-1f3fd-200d-1f52c':0, '1f468-1f3fe-200d-1f52c':0, '1f468-1f3ff-200d-1f52c':0, '1f468-1f3fb-200d-1f680':0, '1f468-1f3fc-200d-1f680':0, '1f468-1f3fd-200d-1f680':0, '1f468-1f3fe-200d-1f680':0, '1f468-1f3ff-200d-1f680':0, '1f468-1f3fb-200d-1f692':0, '1f468-1f3fc-200d-1f692':0, '1f468-1f3fd-200d-1f692':0, '1f468-1f3fe-200d-1f692':0, '1f468-1f3ff-200d-1f692':0, '1f468-1f3fb-200d-1f9af':0, '1f468-1f3fc-200d-1f9af':0, '1f468-1f3fd-200d-1f9af':0, '1f468-1f3fe-200d-1f9af':0, '1f468-1f3ff-200d-1f9af':0, '1f468-1f3fb-200d-1f9b0':0, '1f468-1f3fc-200d-1f9b0':0, '1f468-1f3fd-200d-1f9b0':0, '1f468-1f3fe-200d-1f9b0':0, '1f468-1f3ff-200d-1f9b0':0, '1f468-1f3fb-200d-1f9b1':0, '1f468-1f3fc-200d-1f9b1':0, '1f468-1f3fd-200d-1f9b1':0, '1f468-1f3fe-200d-1f9b1':0, '1f468-1f3ff-200d-1f9b1':0, '1f468-1f3fb-200d-1f9b2':0, '1f468-1f3fc-200d-1f9b2':0, '1f468-1f3fd-200d-1f9b2':0, '1f468-1f3fe-200d-1f9b2':0, '1f468-1f3ff-200d-1f9b2':0, '1f468-1f3fb-200d-1f9b3':0, '1f468-1f3fc-200d-1f9b3':0, '1f468-1f3fd-200d-1f9b3':0, '1f468-1f3fe-200d-1f9b3':0, '1f468-1f3ff-200d-1f9b3':0, '1f468-1f3fb-200d-1f9bc':0, '1f468-1f3fc-200d-1f9bc':0, '1f468-1f3fd-200d-1f9bc':0, '1f468-1f3fe-200d-1f9bc':0, '1f468-1f3ff-200d-1f9bc':0, '1f468-1f3fb-200d-1f9bd':0, '1f468-1f3fc-200d-1f9bd':0, '1f468-1f3fd-200d-1f9bd':0, '1f468-1f3fe-200d-1f9bd':0, '1f468-1f3ff-200d-1f9bd':0, '1f468-1f3fb-200d-2695':0, '1f468-1f3fc-200d-2695':0, '1f468-1f3fd-200d-2695':0, '1f468-1f3fe-200d-2695':0, '1f468-1f3ff-200d-2695':0, '1f468-1f3fb-200d-2696':0, '1f468-1f3fc-200d-2696':0, '1f468-1f3fd-200d-2696':0, '1f468-1f3fe-200d-2696':0, '1f468-1f3ff-200d-2696':0, '1f468-1f3fb-200d-2708':0, '1f468-1f3fc-200d-2708':0, '1f468-1f3fd-200d-2708':0, '1f468-1f3fe-200d-2708':0, '1f468-1f3ff-200d-2708':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fb':0, '1f468-1f3fc':0, '1f468-1f3fd':0, '1f468-1f3fe':0, '1f468-1f3ff':0, '1f469-1f3fb-200d-1f33e':0, '1f469-1f3fc-200d-1f33e':0, '1f469-1f3fd-200d-1f33e':0, '1f469-1f3fe-200d-1f33e':0, '1f469-1f3ff-200d-1f33e':0, '1f469-1f3fb-200d-1f373':0, '1f469-1f3fc-200d-1f373':0, '1f469-1f3fd-200d-1f373':0, '1f469-1f3fe-200d-1f373':0, '1f469-1f3ff-200d-1f373':0, '1f469-1f3fb-200d-1f37c':0, '1f469-1f3fc-200d-1f37c':0, '1f469-1f3fd-200d-1f37c':0, '1f469-1f3fe-200d-1f37c':0, '1f469-1f3ff-200d-1f37c':0, '1f469-1f3fb-200d-1f393':0, '1f469-1f3fc-200d-1f393':0, '1f469-1f3fd-200d-1f393':0, '1f469-1f3fe-200d-1f393':0, '1f469-1f3ff-200d-1f393':0, '1f469-1f3fb-200d-1f3a4':0, '1f469-1f3fc-200d-1f3a4':0, '1f469-1f3fd-200d-1f3a4':0, '1f469-1f3fe-200d-1f3a4':0, '1f469-1f3ff-200d-1f3a4':0, '1f469-1f3fb-200d-1f3a8':0, '1f469-1f3fc-200d-1f3a8':0, '1f469-1f3fd-200d-1f3a8':0, '1f469-1f3fe-200d-1f3a8':0, '1f469-1f3ff-200d-1f3a8':0, '1f469-1f3fb-200d-1f3eb':0, '1f469-1f3fc-200d-1f3eb':0, '1f469-1f3fd-200d-1f3eb':0, '1f469-1f3fe-200d-1f3eb':0, '1f469-1f3ff-200d-1f3eb':0, '1f469-1f3fb-200d-1f3ed':0, '1f469-1f3fc-200d-1f3ed':0, '1f469-1f3fd-200d-1f3ed':0, '1f469-1f3fe-200d-1f3ed':0, '1f469-1f3ff-200d-1f3ed':0, '1f469-1f3fb-200d-1f4bb':0, '1f469-1f3fc-200d-1f4bb':0, '1f469-1f3fd-200d-1f4bb':0, '1f469-1f3fe-200d-1f4bb':0, '1f469-1f3ff-200d-1f4bb':0, '1f469-1f3fb-200d-1f4bc':0, '1f469-1f3fc-200d-1f4bc':0, '1f469-1f3fd-200d-1f4bc':0, '1f469-1f3fe-200d-1f4bc':0, '1f469-1f3ff-200d-1f4bc':0, '1f469-1f3fb-200d-1f527':0, '1f469-1f3fc-200d-1f527':0, '1f469-1f3fd-200d-1f527':0, '1f469-1f3fe-200d-1f527':0, '1f469-1f3ff-200d-1f527':0, '1f469-1f3fb-200d-1f52c':0, '1f469-1f3fc-200d-1f52c':0, '1f469-1f3fd-200d-1f52c':0, '1f469-1f3fe-200d-1f52c':0, '1f469-1f3ff-200d-1f52c':0, '1f469-1f3fb-200d-1f680':0, '1f469-1f3fc-200d-1f680':0, '1f469-1f3fd-200d-1f680':0, '1f469-1f3fe-200d-1f680':0, '1f469-1f3ff-200d-1f680':0, '1f469-1f3fb-200d-1f692':0, '1f469-1f3fc-200d-1f692':0, '1f469-1f3fd-200d-1f692':0, '1f469-1f3fe-200d-1f692':0, '1f469-1f3ff-200d-1f692':0, '1f469-1f3fb-200d-1f9af':0, '1f469-1f3fc-200d-1f9af':0, '1f469-1f3fd-200d-1f9af':0, '1f469-1f3fe-200d-1f9af':0, '1f469-1f3ff-200d-1f9af':0, '1f469-1f3fb-200d-1f9b0':0, '1f469-1f3fc-200d-1f9b0':0, '1f469-1f3fd-200d-1f9b0':0, '1f469-1f3fe-200d-1f9b0':0, '1f469-1f3ff-200d-1f9b0':0, '1f469-1f3fb-200d-1f9b1':0, '1f469-1f3fc-200d-1f9b1':0, '1f469-1f3fd-200d-1f9b1':0, '1f469-1f3fe-200d-1f9b1':0, '1f469-1f3ff-200d-1f9b1':0, '1f469-1f3fb-200d-1f9b2':0, '1f469-1f3fc-200d-1f9b2':0, '1f469-1f3fd-200d-1f9b2':0, '1f469-1f3fe-200d-1f9b2':0, '1f469-1f3ff-200d-1f9b2':0, '1f469-1f3fb-200d-1f9b3':0, '1f469-1f3fc-200d-1f9b3':0, '1f469-1f3fd-200d-1f9b3':0, '1f469-1f3fe-200d-1f9b3':0, '1f469-1f3ff-200d-1f9b3':0, '1f469-1f3fb-200d-1f9bc':0, '1f469-1f3fc-200d-1f9bc':0, '1f469-1f3fd-200d-1f9bc':0, '1f469-1f3fe-200d-1f9bc':0, '1f469-1f3ff-200d-1f9bc':0, '1f469-1f3fb-200d-1f9bd':0, '1f469-1f3fc-200d-1f9bd':0, '1f469-1f3fd-200d-1f9bd':0, '1f469-1f3fe-200d-1f9bd':0, '1f469-1f3ff-200d-1f9bd':0, '1f469-1f3fb-200d-2695':0, '1f469-1f3fc-200d-2695':0, '1f469-1f3fd-200d-2695':0, '1f469-1f3fe-200d-2695':0, '1f469-1f3ff-200d-2695':0, '1f469-1f3fb-200d-2696':0, '1f469-1f3fc-200d-2696':0, '1f469-1f3fd-200d-2696':0, '1f469-1f3fe-200d-2696':0, '1f469-1f3ff-200d-2696':0, '1f469-1f3fb-200d-2708':0, '1f469-1f3fc-200d-2708':0, '1f469-1f3fd-200d-2708':0, '1f469-1f3fe-200d-2708':0, '1f469-1f3ff-200d-2708':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fb':0, '1f469-1f3fc':0, '1f469-1f3fd':0, '1f469-1f3fe':0, '1f469-1f3ff':0, '1f46b-1f3fb':0, '1f46b-1f3fc':0, '1f46b-1f3fd':0, '1f46b-1f3fe':0, '1f46b-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46c-1f3fb':0, '1f46c-1f3fc':0, '1f46c-1f3fd':0, '1f46c-1f3fe':0, '1f46c-1f3ff':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46d-1f3fb':0, '1f46d-1f3fc':0, '1f46d-1f3fd':0, '1f46d-1f3fe':0, '1f46d-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe':0, '1f46e-1f3fb-200d-2640':0, '1f46e-1f3fc-200d-2640':0, '1f46e-1f3fd-200d-2640':0, '1f46e-1f3fe-200d-2640':0, '1f46e-1f3ff-200d-2640':0, '1f46e-1f3fb-200d-2642':0, '1f46e-1f3fc-200d-2642':0, '1f46e-1f3fd-200d-2642':0, '1f46e-1f3fe-200d-2642':0, '1f46e-1f3ff-200d-2642':0, '1f46e-1f3fb':0, '1f46e-1f3fc':0, '1f46e-1f3fd':0, '1f46e-1f3fe':0, '1f46e-1f3ff':0, '1f470-1f3fb-200d-2640':0, '1f470-1f3fc-200d-2640':0, '1f470-1f3fd-200d-2640':0, '1f470-1f3fe-200d-2640':0, '1f470-1f3ff-200d-2640':0, '1f470-1f3fb-200d-2642':0, '1f470-1f3fc-200d-2642':0, '1f470-1f3fd-200d-2642':0, '1f470-1f3fe-200d-2642':0, '1f470-1f3ff-200d-2642':0, '1f470-1f3fb':0, '1f470-1f3fc':0, '1f470-1f3fd':0, '1f470-1f3fe':0, '1f470-1f3ff':0, '1f471-1f3fb-200d-2640':0, '1f471-1f3fc-200d-2640':0, '1f471-1f3fd-200d-2640':0, '1f471-1f3fe-200d-2640':0, '1f471-1f3ff-200d-2640':0, '1f471-1f3fb-200d-2642':0, '1f471-1f3fc-200d-2642':0, '1f471-1f3fd-200d-2642':0, '1f471-1f3fe-200d-2642':0, '1f471-1f3ff-200d-2642':0, '1f471-1f3fb':0, '1f471-1f3fc':0, '1f471-1f3fd':0, '1f471-1f3fe':0, '1f471-1f3ff':0, '1f472-1f3fb':0, '1f472-1f3fc':0, '1f472-1f3fd':0, '1f472-1f3fe':0, '1f472-1f3ff':0, '1f473-1f3fb-200d-2640':0, '1f473-1f3fc-200d-2640':0, '1f473-1f3fd-200d-2640':0, '1f473-1f3fe-200d-2640':0, '1f473-1f3ff-200d-2640':0, '1f473-1f3fb-200d-2642':0, '1f473-1f3fc-200d-2642':0, '1f473-1f3fd-200d-2642':0, '1f473-1f3fe-200d-2642':0, '1f473-1f3ff-200d-2642':0, '1f473-1f3fb':0, '1f473-1f3fc':0, '1f473-1f3fd':0, '1f473-1f3fe':0, '1f473-1f3ff':0, '1f474-1f3fb':0, '1f474-1f3fc':0, '1f474-1f3fd':0, '1f474-1f3fe':0, '1f474-1f3ff':0, '1f475-1f3fb':0, '1f475-1f3fc':0, '1f475-1f3fd':0, '1f475-1f3fe':0, '1f475-1f3ff':0, '1f476-1f3fb':0, '1f476-1f3fc':0, '1f476-1f3fd':0, '1f476-1f3fe':0, '1f476-1f3ff':0, '1f477-1f3fb-200d-2640':0, '1f477-1f3fc-200d-2640':0, '1f477-1f3fd-200d-2640':0, '1f477-1f3fe-200d-2640':0, '1f477-1f3ff-200d-2640':0, '1f477-1f3fb-200d-2642':0, '1f477-1f3fc-200d-2642':0, '1f477-1f3fd-200d-2642':0, '1f477-1f3fe-200d-2642':0, '1f477-1f3ff-200d-2642':0, '1f477-1f3fb':0, '1f477-1f3fc':0, '1f477-1f3fd':0, '1f477-1f3fe':0, '1f477-1f3ff':0, '1f478-1f3fb':0, '1f478-1f3fc':0, '1f478-1f3fd':0, '1f478-1f3fe':0, '1f478-1f3ff':0, '1f47c-1f3fb':0, '1f47c-1f3fc':0, '1f47c-1f3fd':0, '1f47c-1f3fe':0, '1f47c-1f3ff':0, '1f481-1f3fb-200d-2640':0, '1f481-1f3fc-200d-2640':0, '1f481-1f3fd-200d-2640':0, '1f481-1f3fe-200d-2640':0, '1f481-1f3ff-200d-2640':0, '1f481-1f3fb-200d-2642':0, '1f481-1f3fc-200d-2642':0, '1f481-1f3fd-200d-2642':0, '1f481-1f3fe-200d-2642':0, '1f481-1f3ff-200d-2642':0, '1f481-1f3fb':0, '1f481-1f3fc':0, '1f481-1f3fd':0, '1f481-1f3fe':0, '1f481-1f3ff':0, '1f482-1f3fb-200d-2640':0, '1f482-1f3fc-200d-2640':0, '1f482-1f3fd-200d-2640':0, '1f482-1f3fe-200d-2640':0, '1f482-1f3ff-200d-2640':0, '1f482-1f3fb-200d-2642':0, '1f482-1f3fc-200d-2642':0, '1f482-1f3fd-200d-2642':0, '1f482-1f3fe-200d-2642':0, '1f482-1f3ff-200d-2642':0, '1f482-1f3fb':0, '1f482-1f3fc':0, '1f482-1f3fd':0, '1f482-1f3fe':0, '1f482-1f3ff':0, '1f483-1f3fb':0, '1f483-1f3fc':0, '1f483-1f3fd':0, '1f483-1f3fe':0, '1f483-1f3ff':0, '1f485-1f3fb':0, '1f485-1f3fc':0, '1f485-1f3fd':0, '1f485-1f3fe':0, '1f485-1f3ff':0, '1f486-1f3fb-200d-2640':0, '1f486-1f3fc-200d-2640':0, '1f486-1f3fd-200d-2640':0, '1f486-1f3fe-200d-2640':0, '1f486-1f3ff-200d-2640':0, '1f486-1f3fb-200d-2642':0, '1f486-1f3fc-200d-2642':0, '1f486-1f3fd-200d-2642':0, '1f486-1f3fe-200d-2642':0, '1f486-1f3ff-200d-2642':0, '1f486-1f3fb':0, '1f486-1f3fc':0, '1f486-1f3fd':0, '1f486-1f3fe':0, '1f486-1f3ff':0, '1f487-1f3fb-200d-2640':0, '1f487-1f3fc-200d-2640':0, '1f487-1f3fd-200d-2640':0, '1f487-1f3fe-200d-2640':0, '1f487-1f3ff-200d-2640':0, '1f487-1f3fb-200d-2642':0, '1f487-1f3fc-200d-2642':0, '1f487-1f3fd-200d-2642':0, '1f487-1f3fe-200d-2642':0, '1f487-1f3ff-200d-2642':0, '1f487-1f3fb':0, '1f487-1f3fc':0, '1f487-1f3fd':0, '1f487-1f3fe':0, '1f487-1f3ff':0, '1f48f-1f3fb':0, '1f48f-1f3fc':0, '1f48f-1f3fd':0, '1f48f-1f3fe':0, '1f48f-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f491-1f3fb':0, '1f491-1f3fc':0, '1f491-1f3fd':0, '1f491-1f3fe':0, '1f491-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fe':0, '1f4aa-1f3fb':0, '1f4aa-1f3fc':0, '1f4aa-1f3fd':0, '1f4aa-1f3fe':0, '1f4aa-1f3ff':0, '1f574-1f3fb':0, '1f574-1f3fc':0, '1f574-1f3fd':0, '1f574-1f3fe':0, '1f574-1f3ff':0, '1f575-1f3fb-200d-2640':0, '1f575-1f3fc-200d-2640':0, '1f575-1f3fd-200d-2640':0, '1f575-1f3fe-200d-2640':0, '1f575-1f3ff-200d-2640':0, '1f575-1f3fb-200d-2642':0, '1f575-1f3fc-200d-2642':0, '1f575-1f3fd-200d-2642':0, '1f575-1f3fe-200d-2642':0, '1f575-1f3ff-200d-2642':0, '1f575-1f3fb':0, '1f575-1f3fc':0, '1f575-1f3fd':0, '1f575-1f3fe':0, '1f575-1f3ff':0, '1f57a-1f3fb':0, '1f57a-1f3fc':0, '1f57a-1f3fd':0, '1f57a-1f3fe':0, '1f57a-1f3ff':0, '1f590-1f3fb':0, '1f590-1f3fc':0, '1f590-1f3fd':0, '1f590-1f3fe':0, '1f590-1f3ff':0, '1f595-1f3fb':0, '1f595-1f3fc':0, '1f595-1f3fd':0, '1f595-1f3fe':0, '1f595-1f3ff':0, '1f596-1f3fb':0, '1f596-1f3fc':0, '1f596-1f3fd':0, '1f596-1f3fe':0, '1f596-1f3ff':0, '1f645-1f3fb-200d-2640':0, '1f645-1f3fc-200d-2640':0, '1f645-1f3fd-200d-2640':0, '1f645-1f3fe-200d-2640':0, '1f645-1f3ff-200d-2640':0, '1f645-1f3fb-200d-2642':0, '1f645-1f3fc-200d-2642':0, '1f645-1f3fd-200d-2642':0, '1f645-1f3fe-200d-2642':0, '1f645-1f3ff-200d-2642':0, '1f645-1f3fb':0, '1f645-1f3fc':0, '1f645-1f3fd':0, '1f645-1f3fe':0, '1f645-1f3ff':0, '1f646-1f3fb-200d-2640':0, '1f646-1f3fc-200d-2640':0, '1f646-1f3fd-200d-2640':0, '1f646-1f3fe-200d-2640':0, '1f646-1f3ff-200d-2640':0, '1f646-1f3fb-200d-2642':0, '1f646-1f3fc-200d-2642':0, '1f646-1f3fd-200d-2642':0, '1f646-1f3fe-200d-2642':0, '1f646-1f3ff-200d-2642':0, '1f646-1f3fb':0, '1f646-1f3fc':0, '1f646-1f3fd':0, '1f646-1f3fe':0, '1f646-1f3ff':0, '1f647-1f3fb-200d-2640':0, '1f647-1f3fc-200d-2640':0, '1f647-1f3fd-200d-2640':0, '1f647-1f3fe-200d-2640':0, '1f647-1f3ff-200d-2640':0, '1f647-1f3fb-200d-2642':0, '1f647-1f3fc-200d-2642':0, '1f647-1f3fd-200d-2642':0, '1f647-1f3fe-200d-2642':0, '1f647-1f3ff-200d-2642':0, '1f647-1f3fb':0, '1f647-1f3fc':0, '1f647-1f3fd':0, '1f647-1f3fe':0, '1f647-1f3ff':0, '1f64b-1f3fb-200d-2640':0, '1f64b-1f3fc-200d-2640':0, '1f64b-1f3fd-200d-2640':0, '1f64b-1f3fe-200d-2640':0, '1f64b-1f3ff-200d-2640':0, '1f64b-1f3fb-200d-2642':0, '1f64b-1f3fc-200d-2642':0, '1f64b-1f3fd-200d-2642':0, '1f64b-1f3fe-200d-2642':0, '1f64b-1f3ff-200d-2642':0, '1f64b-1f3fb':0, '1f64b-1f3fc':0, '1f64b-1f3fd':0, '1f64b-1f3fe':0, '1f64b-1f3ff':0, '1f64c-1f3fb':0, '1f64c-1f3fc':0, '1f64c-1f3fd':0, '1f64c-1f3fe':0, '1f64c-1f3ff':0, '1f64d-1f3fb-200d-2640':0, '1f64d-1f3fc-200d-2640':0, '1f64d-1f3fd-200d-2640':0, '1f64d-1f3fe-200d-2640':0, '1f64d-1f3ff-200d-2640':0, '1f64d-1f3fb-200d-2642':0, '1f64d-1f3fc-200d-2642':0, '1f64d-1f3fd-200d-2642':0, '1f64d-1f3fe-200d-2642':0, '1f64d-1f3ff-200d-2642':0, '1f64d-1f3fb':0, '1f64d-1f3fc':0, '1f64d-1f3fd':0, '1f64d-1f3fe':0, '1f64d-1f3ff':0, '1f64e-1f3fb-200d-2640':0, '1f64e-1f3fc-200d-2640':0, '1f64e-1f3fd-200d-2640':0, '1f64e-1f3fe-200d-2640':0, '1f64e-1f3ff-200d-2640':0, '1f64e-1f3fb-200d-2642':0, '1f64e-1f3fc-200d-2642':0, '1f64e-1f3fd-200d-2642':0, '1f64e-1f3fe-200d-2642':0, '1f64e-1f3ff-200d-2642':0, '1f64e-1f3fb':0, '1f64e-1f3fc':0, '1f64e-1f3fd':0, '1f64e-1f3fe':0, '1f64e-1f3ff':0, '1f64f-1f3fb':0, '1f64f-1f3fc':0, '1f64f-1f3fd':0, '1f64f-1f3fe':0, '1f64f-1f3ff':0, '1f6a3-1f3fb-200d-2640':0, '1f6a3-1f3fc-200d-2640':0, '1f6a3-1f3fd-200d-2640':0, '1f6a3-1f3fe-200d-2640':0, '1f6a3-1f3ff-200d-2640':0, '1f6a3-1f3fb-200d-2642':0, '1f6a3-1f3fc-200d-2642':0, '1f6a3-1f3fd-200d-2642':0, '1f6a3-1f3fe-200d-2642':0, '1f6a3-1f3ff-200d-2642':0, '1f6a3-1f3fb':0, '1f6a3-1f3fc':0, '1f6a3-1f3fd':0, '1f6a3-1f3fe':0, '1f6a3-1f3ff':0, '1f6b4-1f3fb-200d-2640':0, '1f6b4-1f3fc-200d-2640':0, '1f6b4-1f3fd-200d-2640':0, '1f6b4-1f3fe-200d-2640':0, '1f6b4-1f3ff-200d-2640':0, '1f6b4-1f3fb-200d-2642':0, '1f6b4-1f3fc-200d-2642':0, '1f6b4-1f3fd-200d-2642':0, '1f6b4-1f3fe-200d-2642':0, '1f6b4-1f3ff-200d-2642':0, '1f6b4-1f3fb':0, '1f6b4-1f3fc':0, '1f6b4-1f3fd':0, '1f6b4-1f3fe':0, '1f6b4-1f3ff':0, '1f6b5-1f3fb-200d-2640':0, '1f6b5-1f3fc-200d-2640':0, '1f6b5-1f3fd-200d-2640':0, '1f6b5-1f3fe-200d-2640':0, '1f6b5-1f3ff-200d-2640':0, '1f6b5-1f3fb-200d-2642':0, '1f6b5-1f3fc-200d-2642':0, '1f6b5-1f3fd-200d-2642':0, '1f6b5-1f3fe-200d-2642':0, '1f6b5-1f3ff-200d-2642':0, '1f6b5-1f3fb':0, '1f6b5-1f3fc':0, '1f6b5-1f3fd':0, '1f6b5-1f3fe':0, '1f6b5-1f3ff':0, '1f6b6-1f3fb-200d-2640':0, '1f6b6-1f3fc-200d-2640':0, '1f6b6-1f3fd-200d-2640':0, '1f6b6-1f3fe-200d-2640':0, '1f6b6-1f3ff-200d-2640':0, '1f6b6-1f3fb-200d-2642':0, '1f6b6-1f3fc-200d-2642':0, '1f6b6-1f3fd-200d-2642':0, '1f6b6-1f3fe-200d-2642':0, '1f6b6-1f3ff-200d-2642':0, '1f6b6-1f3fb':0, '1f6b6-1f3fc':0, '1f6b6-1f3fd':0, '1f6b6-1f3fe':0, '1f6b6-1f3ff':0, '1f6c0-1f3fb':0, '1f6c0-1f3fc':0, '1f6c0-1f3fd':0, '1f6c0-1f3fe':0, '1f6c0-1f3ff':0, '1f6cc-1f3fb':0, '1f6cc-1f3fc':0, '1f6cc-1f3fd':0, '1f6cc-1f3fe':0, '1f6cc-1f3ff':0, '1f90c-1f3fb':0, '1f90c-1f3fc':0, '1f90c-1f3fd':0, '1f90c-1f3fe':0, '1f90c-1f3ff':0, '1f90f-1f3fb':0, '1f90f-1f3fc':0, '1f90f-1f3fd':0, '1f90f-1f3fe':0, '1f90f-1f3ff':0, '1f918-1f3fb':0, '1f918-1f3fc':0, '1f918-1f3fd':0, '1f918-1f3fe':0, '1f918-1f3ff':0, '1f919-1f3fb':0, '1f919-1f3fc':0, '1f919-1f3fd':0, '1f919-1f3fe':0, '1f919-1f3ff':0, '1f91a-1f3fb':0, '1f91a-1f3fc':0, '1f91a-1f3fd':0, '1f91a-1f3fe':0, '1f91a-1f3ff':0, '1f91b-1f3fb':0, '1f91b-1f3fc':0, '1f91b-1f3fd':0, '1f91b-1f3fe':0, '1f91b-1f3ff':0, '1f91c-1f3fb':0, '1f91c-1f3fc':0, '1f91c-1f3fd':0, '1f91c-1f3fe':0, '1f91c-1f3ff':0, '1f91d-1f3fb':0, '1f91d-1f3fc':0, '1f91d-1f3fd':0, '1f91d-1f3fe':0, '1f91d-1f3ff':0, '1f91e-1f3fb':0, '1f91e-1f3fc':0, '1f91e-1f3fd':0, '1f91e-1f3fe':0, '1f91e-1f3ff':0, '1f91f-1f3fb':0, '1f91f-1f3fc':0, '1f91f-1f3fd':0, '1f91f-1f3fe':0, '1f91f-1f3ff':0, '1f926-1f3fb-200d-2640':0, '1f926-1f3fc-200d-2640':0, '1f926-1f3fd-200d-2640':0, '1f926-1f3fe-200d-2640':0, '1f926-1f3ff-200d-2640':0, '1f926-1f3fb-200d-2642':0, '1f926-1f3fc-200d-2642':0, '1f926-1f3fd-200d-2642':0, '1f926-1f3fe-200d-2642':0, '1f926-1f3ff-200d-2642':0, '1f926-1f3fb':0, '1f926-1f3fc':0, '1f926-1f3fd':0, '1f926-1f3fe':0, '1f926-1f3ff':0, '1f930-1f3fb':0, '1f930-1f3fc':0, '1f930-1f3fd':0, '1f930-1f3fe':0, '1f930-1f3ff':0, '1f931-1f3fb':0, '1f931-1f3fc':0, '1f931-1f3fd':0, '1f931-1f3fe':0, '1f931-1f3ff':0, '1f932-1f3fb':0, '1f932-1f3fc':0, '1f932-1f3fd':0, '1f932-1f3fe':0, '1f932-1f3ff':0, '1f933-1f3fb':0, '1f933-1f3fc':0, '1f933-1f3fd':0, '1f933-1f3fe':0, '1f933-1f3ff':0, '1f934-1f3fb':0, '1f934-1f3fc':0, '1f934-1f3fd':0, '1f934-1f3fe':0, '1f934-1f3ff':0, '1f935-1f3fb-200d-2640':0, '1f935-1f3fc-200d-2640':0, '1f935-1f3fd-200d-2640':0, '1f935-1f3fe-200d-2640':0, '1f935-1f3ff-200d-2640':0, '1f935-1f3fb-200d-2642':0, '1f935-1f3fc-200d-2642':0, '1f935-1f3fd-200d-2642':0, '1f935-1f3fe-200d-2642':0, '1f935-1f3ff-200d-2642':0, '1f935-1f3fb':0, '1f935-1f3fc':0, '1f935-1f3fd':0, '1f935-1f3fe':0, '1f935-1f3ff':0, '1f936-1f3fb':0, '1f936-1f3fc':0, '1f936-1f3fd':0, '1f936-1f3fe':0, '1f936-1f3ff':0, '1f937-1f3fb-200d-2640':0, '1f937-1f3fc-200d-2640':0, '1f937-1f3fd-200d-2640':0, '1f937-1f3fe-200d-2640':0, '1f937-1f3ff-200d-2640':0, '1f937-1f3fb-200d-2642':0, '1f937-1f3fc-200d-2642':0, '1f937-1f3fd-200d-2642':0, '1f937-1f3fe-200d-2642':0, '1f937-1f3ff-200d-2642':0, '1f937-1f3fb':0, '1f937-1f3fc':0, '1f937-1f3fd':0, '1f937-1f3fe':0, '1f937-1f3ff':0, '1f938-1f3fb-200d-2640':0, '1f938-1f3fc-200d-2640':0, '1f938-1f3fd-200d-2640':0, '1f938-1f3fe-200d-2640':0, '1f938-1f3ff-200d-2640':0, '1f938-1f3fb-200d-2642':0, '1f938-1f3fc-200d-2642':0, '1f938-1f3fd-200d-2642':0, '1f938-1f3fe-200d-2642':0, '1f938-1f3ff-200d-2642':0, '1f938-1f3fb':0, '1f938-1f3fc':0, '1f938-1f3fd':0, '1f938-1f3fe':0, '1f938-1f3ff':0, '1f939-1f3fb-200d-2640':0, '1f939-1f3fc-200d-2640':0, '1f939-1f3fd-200d-2640':0, '1f939-1f3fe-200d-2640':0, '1f939-1f3ff-200d-2640':0, '1f939-1f3fb-200d-2642':0, '1f939-1f3fc-200d-2642':0, '1f939-1f3fd-200d-2642':0, '1f939-1f3fe-200d-2642':0, '1f939-1f3ff-200d-2642':0, '1f939-1f3fb':0, '1f939-1f3fc':0, '1f939-1f3fd':0, '1f939-1f3fe':0, '1f939-1f3ff':0, '1f93d-1f3fb-200d-2640':0, '1f93d-1f3fc-200d-2640':0, '1f93d-1f3fd-200d-2640':0, '1f93d-1f3fe-200d-2640':0, '1f93d-1f3ff-200d-2640':0, '1f93d-1f3fb-200d-2642':0, '1f93d-1f3fc-200d-2642':0, '1f93d-1f3fd-200d-2642':0, '1f93d-1f3fe-200d-2642':0, '1f93d-1f3ff-200d-2642':0, '1f93d-1f3fb':0, '1f93d-1f3fc':0, '1f93d-1f3fd':0, '1f93d-1f3fe':0, '1f93d-1f3ff':0, '1f93e-1f3fb-200d-2640':0, '1f93e-1f3fc-200d-2640':0, '1f93e-1f3fd-200d-2640':0, '1f93e-1f3fe-200d-2640':0, '1f93e-1f3ff-200d-2640':0, '1f93e-1f3fb-200d-2642':0, '1f93e-1f3fc-200d-2642':0, '1f93e-1f3fd-200d-2642':0, '1f93e-1f3fe-200d-2642':0, '1f93e-1f3ff-200d-2642':0, '1f93e-1f3fb':0, '1f93e-1f3fc':0, '1f93e-1f3fd':0, '1f93e-1f3fe':0, '1f93e-1f3ff':0, '1f977-1f3fb':0, '1f977-1f3fc':0, '1f977-1f3fd':0, '1f977-1f3fe':0, '1f977-1f3ff':0, '1f9b5-1f3fb':0, '1f9b5-1f3fc':0, '1f9b5-1f3fd':0, '1f9b5-1f3fe':0, '1f9b5-1f3ff':0, '1f9b6-1f3fb':0, '1f9b6-1f3fc':0, '1f9b6-1f3fd':0, '1f9b6-1f3fe':0, '1f9b6-1f3ff':0, '1f9b8-1f3fb-200d-2640':0, '1f9b8-1f3fc-200d-2640':0, '1f9b8-1f3fd-200d-2640':0, '1f9b8-1f3fe-200d-2640':0, '1f9b8-1f3ff-200d-2640':0, '1f9b8-1f3fb-200d-2642':0, '1f9b8-1f3fc-200d-2642':0, '1f9b8-1f3fd-200d-2642':0, '1f9b8-1f3fe-200d-2642':0, '1f9b8-1f3ff-200d-2642':0, '1f9b8-1f3fb':0, '1f9b8-1f3fc':0, '1f9b8-1f3fd':0, '1f9b8-1f3fe':0, '1f9b8-1f3ff':0, '1f9b9-1f3fb-200d-2640':0, '1f9b9-1f3fc-200d-2640':0, '1f9b9-1f3fd-200d-2640':0, '1f9b9-1f3fe-200d-2640':0, '1f9b9-1f3ff-200d-2640':0, '1f9b9-1f3fb-200d-2642':0, '1f9b9-1f3fc-200d-2642':0, '1f9b9-1f3fd-200d-2642':0, '1f9b9-1f3fe-200d-2642':0, '1f9b9-1f3ff-200d-2642':0, '1f9b9-1f3fb':0, '1f9b9-1f3fc':0, '1f9b9-1f3fd':0, '1f9b9-1f3fe':0, '1f9b9-1f3ff':0, '1f9bb-1f3fb':0, '1f9bb-1f3fc':0, '1f9bb-1f3fd':0, '1f9bb-1f3fe':0, '1f9bb-1f3ff':0, '1f9cd-1f3fb-200d-2640':0, '1f9cd-1f3fc-200d-2640':0, '1f9cd-1f3fd-200d-2640':0, '1f9cd-1f3fe-200d-2640':0, '1f9cd-1f3ff-200d-2640':0, '1f9cd-1f3fb-200d-2642':0, '1f9cd-1f3fc-200d-2642':0, '1f9cd-1f3fd-200d-2642':0, '1f9cd-1f3fe-200d-2642':0, '1f9cd-1f3ff-200d-2642':0, '1f9cd-1f3fb':0, '1f9cd-1f3fc':0, '1f9cd-1f3fd':0, '1f9cd-1f3fe':0, '1f9cd-1f3ff':0, '1f9ce-1f3fb-200d-2640':0, '1f9ce-1f3fc-200d-2640':0, '1f9ce-1f3fd-200d-2640':0, '1f9ce-1f3fe-200d-2640':0, '1f9ce-1f3ff-200d-2640':0, '1f9ce-1f3fb-200d-2642':0, '1f9ce-1f3fc-200d-2642':0, '1f9ce-1f3fd-200d-2642':0, '1f9ce-1f3fe-200d-2642':0, '1f9ce-1f3ff-200d-2642':0, '1f9ce-1f3fb':0, '1f9ce-1f3fc':0, '1f9ce-1f3fd':0, '1f9ce-1f3fe':0, '1f9ce-1f3ff':0, '1f9cf-1f3fb-200d-2640':0, '1f9cf-1f3fc-200d-2640':0, '1f9cf-1f3fd-200d-2640':0, '1f9cf-1f3fe-200d-2640':0, '1f9cf-1f3ff-200d-2640':0, '1f9cf-1f3fb-200d-2642':0, '1f9cf-1f3fc-200d-2642':0, '1f9cf-1f3fd-200d-2642':0, '1f9cf-1f3fe-200d-2642':0, '1f9cf-1f3ff-200d-2642':0, '1f9cf-1f3fb':0, '1f9cf-1f3fc':0, '1f9cf-1f3fd':0, '1f9cf-1f3fe':0, '1f9cf-1f3ff':0, '1f9d1-1f3fb-200d-1f33e':0, '1f9d1-1f3fc-200d-1f33e':0, '1f9d1-1f3fd-200d-1f33e':0, '1f9d1-1f3fe-200d-1f33e':0, '1f9d1-1f3ff-200d-1f33e':0, '1f9d1-1f3fb-200d-1f373':0, '1f9d1-1f3fc-200d-1f373':0, '1f9d1-1f3fd-200d-1f373':0, '1f9d1-1f3fe-200d-1f373':0, '1f9d1-1f3ff-200d-1f373':0, '1f9d1-1f3fb-200d-1f37c':0, '1f9d1-1f3fc-200d-1f37c':0, '1f9d1-1f3fd-200d-1f37c':0, '1f9d1-1f3fe-200d-1f37c':0, '1f9d1-1f3ff-200d-1f37c':0, '1f9d1-1f3fb-200d-1f384':0, '1f9d1-1f3fc-200d-1f384':0, '1f9d1-1f3fd-200d-1f384':0, '1f9d1-1f3fe-200d-1f384':0, '1f9d1-1f3ff-200d-1f384':0, '1f9d1-1f3fb-200d-1f393':0, '1f9d1-1f3fc-200d-1f393':0, '1f9d1-1f3fd-200d-1f393':0, '1f9d1-1f3fe-200d-1f393':0, '1f9d1-1f3ff-200d-1f393':0, '1f9d1-1f3fb-200d-1f3a4':0, '1f9d1-1f3fc-200d-1f3a4':0, '1f9d1-1f3fd-200d-1f3a4':0, '1f9d1-1f3fe-200d-1f3a4':0, '1f9d1-1f3ff-200d-1f3a4':0, '1f9d1-1f3fb-200d-1f3a8':0, '1f9d1-1f3fc-200d-1f3a8':0, '1f9d1-1f3fd-200d-1f3a8':0, '1f9d1-1f3fe-200d-1f3a8':0, '1f9d1-1f3ff-200d-1f3a8':0, '1f9d1-1f3fb-200d-1f3eb':0, '1f9d1-1f3fc-200d-1f3eb':0, '1f9d1-1f3fd-200d-1f3eb':0, '1f9d1-1f3fe-200d-1f3eb':0, '1f9d1-1f3ff-200d-1f3eb':0, '1f9d1-1f3fb-200d-1f3ed':0, '1f9d1-1f3fc-200d-1f3ed':0, '1f9d1-1f3fd-200d-1f3ed':0, '1f9d1-1f3fe-200d-1f3ed':0, '1f9d1-1f3ff-200d-1f3ed':0, '1f9d1-1f3fb-200d-1f4bb':0, '1f9d1-1f3fc-200d-1f4bb':0, '1f9d1-1f3fd-200d-1f4bb':0, '1f9d1-1f3fe-200d-1f4bb':0, '1f9d1-1f3ff-200d-1f4bb':0, '1f9d1-1f3fb-200d-1f4bc':0, '1f9d1-1f3fc-200d-1f4bc':0, '1f9d1-1f3fd-200d-1f4bc':0, '1f9d1-1f3fe-200d-1f4bc':0, '1f9d1-1f3ff-200d-1f4bc':0, '1f9d1-1f3fb-200d-1f527':0, '1f9d1-1f3fc-200d-1f527':0, '1f9d1-1f3fd-200d-1f527':0, '1f9d1-1f3fe-200d-1f527':0, '1f9d1-1f3ff-200d-1f527':0, '1f9d1-1f3fb-200d-1f52c':0, '1f9d1-1f3fc-200d-1f52c':0, '1f9d1-1f3fd-200d-1f52c':0, '1f9d1-1f3fe-200d-1f52c':0, '1f9d1-1f3ff-200d-1f52c':0, '1f9d1-1f3fb-200d-1f680':0, '1f9d1-1f3fc-200d-1f680':0, '1f9d1-1f3fd-200d-1f680':0, '1f9d1-1f3fe-200d-1f680':0, '1f9d1-1f3ff-200d-1f680':0, '1f9d1-1f3fb-200d-1f692':0, '1f9d1-1f3fc-200d-1f692':0, '1f9d1-1f3fd-200d-1f692':0, '1f9d1-1f3fe-200d-1f692':0, '1f9d1-1f3ff-200d-1f692':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fb-200d-1f9af':0, '1f9d1-1f3fc-200d-1f9af':0, '1f9d1-1f3fd-200d-1f9af':0, '1f9d1-1f3fe-200d-1f9af':0, '1f9d1-1f3ff-200d-1f9af':0, '1f9d1-1f3fb-200d-1f9b0':0, '1f9d1-1f3fc-200d-1f9b0':0, '1f9d1-1f3fd-200d-1f9b0':0, '1f9d1-1f3fe-200d-1f9b0':0, '1f9d1-1f3ff-200d-1f9b0':0, '1f9d1-1f3fb-200d-1f9b1':0, '1f9d1-1f3fc-200d-1f9b1':0, '1f9d1-1f3fd-200d-1f9b1':0, '1f9d1-1f3fe-200d-1f9b1':0, '1f9d1-1f3ff-200d-1f9b1':0, '1f9d1-1f3fb-200d-1f9b2':0, '1f9d1-1f3fc-200d-1f9b2':0, '1f9d1-1f3fd-200d-1f9b2':0, '1f9d1-1f3fe-200d-1f9b2':0, '1f9d1-1f3ff-200d-1f9b2':0, '1f9d1-1f3fb-200d-1f9b3':0, '1f9d1-1f3fc-200d-1f9b3':0, '1f9d1-1f3fd-200d-1f9b3':0, '1f9d1-1f3fe-200d-1f9b3':0, '1f9d1-1f3ff-200d-1f9b3':0, '1f9d1-1f3fb-200d-1f9bc':0, '1f9d1-1f3fc-200d-1f9bc':0, '1f9d1-1f3fd-200d-1f9bc':0, '1f9d1-1f3fe-200d-1f9bc':0, '1f9d1-1f3ff-200d-1f9bc':0, '1f9d1-1f3fb-200d-1f9bd':0, '1f9d1-1f3fc-200d-1f9bd':0, '1f9d1-1f3fd-200d-1f9bd':0, '1f9d1-1f3fe-200d-1f9bd':0, '1f9d1-1f3ff-200d-1f9bd':0, '1f9d1-1f3fb-200d-2695':0, '1f9d1-1f3fc-200d-2695':0, '1f9d1-1f3fd-200d-2695':0, '1f9d1-1f3fe-200d-2695':0, '1f9d1-1f3ff-200d-2695':0, '1f9d1-1f3fb-200d-2696':0, '1f9d1-1f3fc-200d-2696':0, '1f9d1-1f3fd-200d-2696':0, '1f9d1-1f3fe-200d-2696':0, '1f9d1-1f3ff-200d-2696':0, '1f9d1-1f3fb-200d-2708':0, '1f9d1-1f3fc-200d-2708':0, '1f9d1-1f3fd-200d-2708':0, '1f9d1-1f3fe-200d-2708':0, '1f9d1-1f3ff-200d-2708':0, '1f9d1-1f3fb':0, '1f9d1-1f3fc':0, '1f9d1-1f3fd':0, '1f9d1-1f3fe':0, '1f9d1-1f3ff':0, '1f9d2-1f3fb':0, '1f9d2-1f3fc':0, '1f9d2-1f3fd':0, '1f9d2-1f3fe':0, '1f9d2-1f3ff':0, '1f9d3-1f3fb':0, '1f9d3-1f3fc':0, '1f9d3-1f3fd':0, '1f9d3-1f3fe':0, '1f9d3-1f3ff':0, '1f9d4-1f3fb-200d-2640':0, '1f9d4-1f3fc-200d-2640':0, '1f9d4-1f3fd-200d-2640':0, '1f9d4-1f3fe-200d-2640':0, '1f9d4-1f3ff-200d-2640':0, '1f9d4-1f3fb-200d-2642':0, '1f9d4-1f3fc-200d-2642':0, '1f9d4-1f3fd-200d-2642':0, '1f9d4-1f3fe-200d-2642':0, '1f9d4-1f3ff-200d-2642':0, '1f9d4-1f3fb':0, '1f9d4-1f3fc':0, '1f9d4-1f3fd':0, '1f9d4-1f3fe':0, '1f9d4-1f3ff':0, '1f9d5-1f3fb':0, '1f9d5-1f3fc':0, '1f9d5-1f3fd':0, '1f9d5-1f3fe':0, '1f9d5-1f3ff':0, '1f9d6-1f3fb-200d-2640':0, '1f9d6-1f3fc-200d-2640':0, '1f9d6-1f3fd-200d-2640':0, '1f9d6-1f3fe-200d-2640':0, '1f9d6-1f3ff-200d-2640':0, '1f9d6-1f3fb-200d-2642':0, '1f9d6-1f3fc-200d-2642':0, '1f9d6-1f3fd-200d-2642':0, '1f9d6-1f3fe-200d-2642':0, '1f9d6-1f3ff-200d-2642':0, '1f9d6-1f3fb':0, '1f9d6-1f3fc':0, '1f9d6-1f3fd':0, '1f9d6-1f3fe':0, '1f9d6-1f3ff':0, '1f9d7-1f3fb-200d-2640':0, '1f9d7-1f3fc-200d-2640':0, '1f9d7-1f3fd-200d-2640':0, '1f9d7-1f3fe-200d-2640':0, '1f9d7-1f3ff-200d-2640':0, '1f9d7-1f3fb-200d-2642':0, '1f9d7-1f3fc-200d-2642':0, '1f9d7-1f3fd-200d-2642':0, '1f9d7-1f3fe-200d-2642':0, '1f9d7-1f3ff-200d-2642':0, '1f9d7-1f3fb':0, '1f9d7-1f3fc':0, '1f9d7-1f3fd':0, '1f9d7-1f3fe':0, '1f9d7-1f3ff':0, '1f9d8-1f3fb-200d-2640':0, '1f9d8-1f3fc-200d-2640':0, '1f9d8-1f3fd-200d-2640':0, '1f9d8-1f3fe-200d-2640':0, '1f9d8-1f3ff-200d-2640':0, '1f9d8-1f3fb-200d-2642':0, '1f9d8-1f3fc-200d-2642':0, '1f9d8-1f3fd-200d-2642':0, '1f9d8-1f3fe-200d-2642':0, '1f9d8-1f3ff-200d-2642':0, '1f9d8-1f3fb':0, '1f9d8-1f3fc':0, '1f9d8-1f3fd':0, '1f9d8-1f3fe':0, '1f9d8-1f3ff':0, '1f9d9-1f3fb-200d-2640':0, '1f9d9-1f3fc-200d-2640':0, '1f9d9-1f3fd-200d-2640':0, '1f9d9-1f3fe-200d-2640':0, '1f9d9-1f3ff-200d-2640':0, '1f9d9-1f3fb-200d-2642':0, '1f9d9-1f3fc-200d-2642':0, '1f9d9-1f3fd-200d-2642':0, '1f9d9-1f3fe-200d-2642':0, '1f9d9-1f3ff-200d-2642':0, '1f9d9-1f3fb':0, '1f9d9-1f3fc':0, '1f9d9-1f3fd':0, '1f9d9-1f3fe':0, '1f9d9-1f3ff':0, '1f9da-1f3fb-200d-2640':0, '1f9da-1f3fc-200d-2640':0, '1f9da-1f3fd-200d-2640':0, '1f9da-1f3fe-200d-2640':0, '1f9da-1f3ff-200d-2640':0, '1f9da-1f3fb-200d-2642':0, '1f9da-1f3fc-200d-2642':0, '1f9da-1f3fd-200d-2642':0, '1f9da-1f3fe-200d-2642':0, '1f9da-1f3ff-200d-2642':0, '1f9da-1f3fb':0, '1f9da-1f3fc':0, '1f9da-1f3fd':0, '1f9da-1f3fe':0, '1f9da-1f3ff':0, '1f9db-1f3fb-200d-2640':0, '1f9db-1f3fc-200d-2640':0, '1f9db-1f3fd-200d-2640':0, '1f9db-1f3fe-200d-2640':0, '1f9db-1f3ff-200d-2640':0, '1f9db-1f3fb-200d-2642':0, '1f9db-1f3fc-200d-2642':0, '1f9db-1f3fd-200d-2642':0, '1f9db-1f3fe-200d-2642':0, '1f9db-1f3ff-200d-2642':0, '1f9db-1f3fb':0, '1f9db-1f3fc':0, '1f9db-1f3fd':0, '1f9db-1f3fe':0, '1f9db-1f3ff':0, '1f9dc-1f3fb-200d-2640':0, '1f9dc-1f3fc-200d-2640':0, '1f9dc-1f3fd-200d-2640':0, '1f9dc-1f3fe-200d-2640':0, '1f9dc-1f3ff-200d-2640':0, '1f9dc-1f3fb-200d-2642':0, '1f9dc-1f3fc-200d-2642':0, '1f9dc-1f3fd-200d-2642':0, '1f9dc-1f3fe-200d-2642':0, '1f9dc-1f3ff-200d-2642':0, '1f9dc-1f3fb':0, '1f9dc-1f3fc':0, '1f9dc-1f3fd':0, '1f9dc-1f3fe':0, '1f9dc-1f3ff':0, '1f9dd-1f3fb-200d-2640':0, '1f9dd-1f3fc-200d-2640':0, '1f9dd-1f3fd-200d-2640':0, '1f9dd-1f3fe-200d-2640':0, '1f9dd-1f3ff-200d-2640':0, '1f9dd-1f3fb-200d-2642':0, '1f9dd-1f3fc-200d-2642':0, '1f9dd-1f3fd-200d-2642':0, '1f9dd-1f3fe-200d-2642':0, '1f9dd-1f3ff-200d-2642':0, '1f9dd-1f3fb':0, '1f9dd-1f3fc':0, '1f9dd-1f3fd':0, '1f9dd-1f3fe':0, '1f9dd-1f3ff':0, '261d-1f3fb':0, '261d-1f3fc':0, '261d-1f3fd':0, '261d-1f3fe':0, '261d-1f3ff':0, '26f9-1f3fb-200d-2640':0, '26f9-1f3fc-200d-2640':0, '26f9-1f3fd-200d-2640':0, '26f9-1f3fe-200d-2640':0, '26f9-1f3ff-200d-2640':0, '26f9-1f3fb-200d-2642':0, '26f9-1f3fc-200d-2642':0, '26f9-1f3fd-200d-2642':0, '26f9-1f3fe-200d-2642':0, '26f9-1f3ff-200d-2642':0, '26f9-1f3fb':0, '26f9-1f3fc':0, '26f9-1f3fd':0, '26f9-1f3fe':0, '26f9-1f3ff':0, '270a-1f3fb':0, '270a-1f3fc':0, '270a-1f3fd':0, '270a-1f3fe':0, '270a-1f3ff':0, '270b-1f3fb':0, '270b-1f3fc':0, '270b-1f3fd':0, '270b-1f3fe':0, '270b-1f3ff':0, '270c-1f3fb':0, '270c-1f3fc':0, '270c-1f3fd':0, '270c-1f3fe':0, '270c-1f3ff':0, '270d-1f3fb':0, '270d-1f3fc':0, '270d-1f3fd':0, '270d-1f3fe':0, '270d-1f3ff':0}};\n\nconst Emoji: {[emoji: string]: number} = EmojiVersions[''];\nfor(const version in EmojiVersions) {\n  if(version) {\n    Object.assign(Emoji, EmojiVersions[version as EMOJI_VERSION]);\n  }\n}\n\nexport default Emoji;\n\n/* Emoji[\"00a9-fe0f\"] = 6362;\nEmoji[\"00ae-fe0f\"] = 6363;\nEmoji[\"2122-fe0f\"] = 6364; */\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ctx from './ctx';\r\n\r\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\r\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\r\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\r\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n// https://stackoverflow.com/a/58065241\r\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\r\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\r\n  !(ctx as any).MSStream;\r\n\r\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\r\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n\r\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\r\n\r\nexport const IS_MOBILE = /* screen.width && screen.width < 480 ||  */navigator.maxTouchPoints > 0 && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LatinizeMap from '../config/latinizeMap';\n\nexport const badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\nconst trimRe = /^\\s+|\\s$/g;\n\nconst C2L: {[k: string]: string} = {\n  'й': 'q',\n  'ц': 'w',\n  'у': 'e',\n  'к': 'r',\n  'е': 't',\n  'н': 'y',\n  'г': 'u',\n  'ш': 'i',\n  'щ': 'o',\n  'з': 'p',\n  'х': '[',\n  'ъ': ']',\n  'ф': 'a',\n  'ы': 's',\n  'в': 'd',\n  'а': 'f',\n  'п': 'g',\n  'р': 'h',\n  'о': 'j',\n  'л': 'k',\n  'д': 'l',\n  'ж': ';',\n  'э': '\\'',\n  'я': 'z',\n  'ч': 'x',\n  'с': 'c',\n  'м': 'v',\n  'и': 'b',\n  'т': 'n',\n  'ь': 'm',\n  'б': ',',\n  'ю': '.',\n  '.': '/'\n};\n\nexport function clearBadCharsAndTrim(text: string) {\n  return text.replace(badCharsRe, '').replace(trimRe, '');\n}\n\nexport function fixCyrillic(text: string) {\n  return text.toLowerCase().replace(/[\\wа-я]/g, (ch) => {\n    const latinizeCh = C2L[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport function latinizeString(text: string) {\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\n    const latinizeCh = LatinizeMap[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport default function cleanSearchText(text: string, latinize = true) {\n  return processSearchText(text, {\n    clearBadChars: true,\n    latinize,\n    ignoreCase: true\n  });\n}\n\nexport type ProcessSearchTextOptions = Partial<{\n  clearBadChars: boolean,\n  latinize: boolean,\n  ignoreCase: boolean,\n  includeTag: boolean\n}>;\n\nexport function processSearchText(text: string, options: ProcessSearchTextOptions = {}) {\n  const hasTag = options.includeTag && text.charAt(0) === '%';\n  const originalText = text;\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\n  if(options.latinize) text = latinizeString(text);\n  if(options.ignoreCase) text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n  if(options.latinize) text += '\\x01' + fixCyrillic(originalText);\n  return text;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {InputFileLocation, InputStickerSet, InputWebFileLocation} from '../layer';\r\nimport type {DownloadOptions} from '../lib/mtproto/apiFileManager';\r\n\r\nconst FILENAME_JOINER = '_';\r\n\r\nexport function getFileNameByLocation(location: InputFileLocation | InputWebFileLocation, options?: Partial<{\r\n  fileName: string,\r\n  downloadId: string\r\n}>) {\r\n  const fileName = '';// (options?.fileName || '').split('.');\r\n  const ext = fileName[fileName.length - 1] || '';\r\n\r\n  let str: string;\r\n  switch(location._) {\r\n    case 'inputPhotoFileLocation': {\r\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputDocumentFileLocation': {\r\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputPeerPhotoFileLocation':\r\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\r\n      break;\r\n\r\n    case 'inputStickerSetThumb': {\r\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id ||\r\n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name ||\r\n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon ||\r\n        location.stickerset._;\r\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputFileLocation': {\r\n      str = location.volume_id + '_' + location.local_id;\r\n      break;\r\n    }\r\n\r\n    case 'inputWebFileLocation': {\r\n      str = ['webFile', location.url].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      console.error('Unrecognized location:', location);\r\n      str = '';\r\n      break;\r\n    }\r\n  }\r\n\r\n  return str + (options?.downloadId ? '_download' : '') + (ext ? '.' + ext : ext);\r\n}\r\n\r\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download';\r\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\r\n  // console.log('getFileURL', location);\r\n  // const perf = performance.now();\r\n  const encoded = encodeURIComponent(JSON.stringify(options));\r\n  // console.log('getFileURL encode:', performance.now() - perf, encoded);\r\n\r\n  return /* '/' +  */type + '/' + encoded;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {Database} from '../../config/databases';\r\nimport Modes from '../../config/modes';\r\nimport makeError from '../../helpers/makeError';\r\nimport safeAssign from '../../helpers/object/safeAssign';\r\nimport {logger} from '../logger';\r\n\r\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/createIndex\r\n */\r\nexport type IDBIndex = {\r\n  indexName: string,\r\n  keyPath: string,\r\n  objectParameters: IDBIndexParameters\r\n};\r\n\r\nexport type IDBStore = {\r\n  name: string,\r\n  indexes?: IDBIndex[]\r\n};\r\n\r\nexport type IDBOptions = {\r\n  name?: string,\r\n  storeName: string,\r\n  stores?: IDBStore[],\r\n  version?: number\r\n};\r\n\r\nconst DEBUG = false;\r\n\r\nexport class IDB {\r\n  private static INSTANCES: IDB[] = [];\r\n  private openDbPromise: Promise<IDBDatabase>;\r\n  private db: IDBDatabase;\r\n  private storageIsAvailable: boolean;\r\n  private log: ReturnType<typeof logger>;\r\n  private name: string;\r\n  private version: number;\r\n  private stores: IDBStore[];\r\n\r\n  constructor(db: Database<any>) {\r\n    safeAssign(this, db);\r\n\r\n    if(Modes.test) {\r\n      this.name += '_test';\r\n    }\r\n\r\n    this.storageIsAvailable = true;\r\n    this.log = logger(['IDB', db.name].join('-'));\r\n    this.log('constructor');\r\n\r\n    this.openDatabase(true);\r\n\r\n    IDB.INSTANCES.push(this);\r\n  }\r\n\r\n  public isAvailable() {\r\n    return this.storageIsAvailable;\r\n  }\r\n\r\n  public openDatabase(createNew = false): Promise<IDBDatabase> {\r\n    if(this.openDbPromise && !createNew) {\r\n      return this.openDbPromise;\r\n    }\r\n\r\n    const createIndexes = (os: IDBObjectStore, store: IDBStore) => {\r\n      const indexNames = Array.from(os.indexNames);\r\n      for(const indexName of indexNames) {\r\n        os.deleteIndex(indexName);\r\n      }\r\n\r\n      if(!store.indexes?.length) {\r\n        return;\r\n      }\r\n\r\n      for(const index of store.indexes) {\r\n        if(os.indexNames.contains(index.indexName)) {\r\n          continue;\r\n        }\r\n\r\n        os.createIndex(index.indexName, index.keyPath, index.objectParameters);\r\n      }\r\n    };\r\n\r\n    const createObjectStore = (db: IDBDatabase, store: IDBStore) => {\r\n      const os = db.createObjectStore(store.name);\r\n      createIndexes(os, store);\r\n    };\r\n\r\n    try {\r\n      var request = indexedDB.open(this.name, this.version);\r\n\r\n      if(!request) {\r\n        return Promise.reject();\r\n      }\r\n    } catch(error) {\r\n      this.log.error('error opening db', (error as Error).message);\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    let finished = false;\r\n    setTimeout(() => {\r\n      if(!finished) {\r\n        request.onerror(makeError('IDB_CREATE_TIMEOUT') as Event);\r\n      }\r\n    }, 3000);\r\n\r\n    return this.openDbPromise = new Promise<IDBDatabase>((resolve, reject) => {\r\n      request.onsuccess = (event) => {\r\n        finished = true;\r\n        const db = request.result;\r\n        let calledNew = false;\r\n\r\n        this.log('Opened');\r\n\r\n        db.onerror = (error) => {\r\n          this.storageIsAvailable = false;\r\n          this.log.error('Error creating/accessing IndexedDB database', error);\r\n          reject(error);\r\n        };\r\n\r\n        db.onclose = (e) => {\r\n          this.log.error('closed:', e);\r\n          !calledNew && this.openDatabase();\r\n        };\r\n\r\n        db.onabort = (e) => {\r\n          this.log.error('abort:', e);\r\n          const transaction = e.target as IDBTransaction;\r\n\r\n          this.openDatabase(calledNew = true);\r\n\r\n          if(transaction.onerror) {\r\n            transaction.onerror(e);\r\n          }\r\n\r\n          db.close();\r\n        };\r\n\r\n        db.onversionchange = (e) => {\r\n          this.log.error('onversionchange, lol?');\r\n        };\r\n\r\n        resolve(this.db = db);\r\n      };\r\n\r\n      request.onerror = (event) => {\r\n        finished = true;\r\n        this.storageIsAvailable = false;\r\n        this.log.error('Error creating/accessing IndexedDB database', event);\r\n        reject(event);\r\n      };\r\n\r\n      request.onupgradeneeded = (event) => {\r\n        finished = true;\r\n        this.log.warn('performing idb upgrade from', event.oldVersion, 'to', event.newVersion);\r\n\r\n        const target = event.target as IDBOpenDBRequest;\r\n        const db = target.result;\r\n        this.stores.forEach((store) => {\r\n          /* if(db.objectStoreNames.contains(store.name)) {\r\n            //if(event.oldVersion === 1) {\r\n              db.deleteObjectStore(store.name);\r\n            //}\r\n          } */\r\n\r\n          if(!db.objectStoreNames.contains(store.name)) {\r\n            createObjectStore(db, store);\r\n          } else {\r\n            const txn = target.transaction;\r\n            const os = txn.objectStore(store.name);\r\n            createIndexes(os, store);\r\n          }\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  public static create<T extends Database<any>>(db: T) {\r\n    return this.INSTANCES.find((instance) => instance.name === db.name) ?? new IDB(db);\r\n  }\r\n\r\n  public static closeDatabases(preserve?: IDB) {\r\n    this.INSTANCES.forEach((storage) => {\r\n      if(preserve && preserve === storage) {\r\n        return;\r\n      }\r\n\r\n      const db = storage.db;\r\n      if(db) {\r\n        db.onclose = () => {};\r\n        db.close();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default class IDBStorage<T extends Database<any>, StoreName extends string = T['stores'][0]['name']> {\r\n  private log: ReturnType<typeof logger>;\r\n  private storeName: T['stores'][0]['name'];\r\n  private idb: IDB;\r\n\r\n  constructor(db: T, storeName: typeof db['stores'][0]['name']) {\r\n    this.storeName = storeName;\r\n    this.log = logger(['IDB', db.name, storeName].join('-'));\r\n    this.idb = IDB.create(db);\r\n  }\r\n\r\n  /**\r\n   * ! WARNING ! function requires at least one opened connection\r\n   */\r\n  /* public static clearObjectStores() {\r\n    const storage = this.STORAGES[0];\r\n    this.closeDatabases(storage);\r\n\r\n    const names = Array.from(storage.db.objectStoreNames);\r\n    const promises = names.map((name) => storage.clear(name));\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  /* public static deleteDatabase() {\r\n    this.closeDatabases();\r\n\r\n    const storages = this.STORAGES;\r\n    const dbNames = Array.from(new Set(storages.map((storage) => storage.name)));\r\n    const promises = dbNames.map((dbName) => {\r\n      return new Promise<void>((resolve, reject) => {\r\n        const deleteRequest = indexedDB.deleteDatabase(dbName);\r\n\r\n        deleteRequest.onerror = () => {\r\n          reject();\r\n        };\r\n\r\n        deleteRequest.onsuccess = () => {\r\n          resolve();\r\n        };\r\n      });\r\n    });\r\n\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  public delete(entryName: string | string[], storeName?: StoreName): Promise<void> {\r\n    // return Promise.resolve();\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n    }\r\n\r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      return (entryName as string[]).map((entryName) => objectStore.delete(entryName));\r\n    }, DEBUG ? 'delete: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  public clear(storeName?: StoreName): Promise<void> {\r\n    return this.getObjectStore('readwrite', (objectStore) => objectStore.clear(), DEBUG ? 'clear' : '', storeName);\r\n  }\r\n\r\n  public save(entryName: string | string[], value: any | any[], storeName?: StoreName) {\r\n    // const handleError = (error: Error) => {\r\n    //   this.log.error('save: transaction error:', entryName, value, db, error, error && error.name);\r\n    //   if((!error || error.name === 'InvalidStateError')/*  && false */) {\r\n    //     setTimeout(() => {\r\n    //       this.save(entryName, value);\r\n    //     }, 2e3);\r\n    //   } else {\r\n    //     //console.error('IndexedDB saveFile transaction error:', error, error && error.name);\r\n    //   }\r\n    // };\r\n\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n      value = [].concat(value);\r\n    }\r\n\r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      return (entryName as string[]).map((entryName, idx) => objectStore.put(value[idx], entryName));\r\n    }, DEBUG ? 'save: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  // public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n  //   //return Promise.resolve(blobConstruct([blob]));\r\n  //   if(!(blob instanceof Blob)) {\r\n  //     blob = blobConstruct(blob);\r\n  //   }\r\n\r\n  //   return this.save(fileName, blob);\r\n  // }\r\n\r\n  /* public saveFileBase64(db: IDBDatabase, fileName: string, blob: Blob | any): Promise<Blob> {\r\n    if(this.getBlobSize(blob) > 10 * 1024 * 1024) {\r\n      return Promise.reject();\r\n    }\r\n\r\n    if(!(blob instanceof Blob)) {\r\n      var safeMimeType = blobSafeMimeType(blob.type || 'image/jpeg');\r\n      var address = 'data:' + safeMimeType + ';base64,' + bytesToBase64(blob);\r\n      return this.storagePutB64String(db, fileName, address).then(() => {\r\n        return blob;\r\n      });\r\n    }\r\n\r\n    try {\r\n      var reader = new FileReader();\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    let promise = new Promise<Blob>((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        this.storagePutB64String(db, fileName, reader.result as string).then(() => {\r\n          resolve(blob);\r\n        }, reject);\r\n      }\r\n\r\n      reader.onerror = reject;\r\n    });\r\n\r\n\r\n    try {\r\n      reader.readAsDataURL(blob);\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public storagePutB64String(db: IDBDatabase, fileName: string, b64string: string) {\r\n    try {\r\n      var objectStore = db.transaction([this.storeName], 'readwrite')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.put(b64string, fileName);\r\n    } catch(error) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      request.onsuccess = function(event) {\r\n        resolve();\r\n      };\r\n\r\n      request.onerror = reject;\r\n    });\r\n  }\r\n\r\n  public getBlobSize(blob: any) {\r\n    return blob.size || blob.byteLength || blob.length;\r\n  } */\r\n\r\n  public get<T>(entryName: string[], storeName?: StoreName): Promise<T[]>;\r\n  public get<T>(entryName: string, storeName?: StoreName): Promise<T>;\r\n  public get<T>(entryName: string | string[], storeName?: StoreName): Promise<T> | Promise<T[]> {\r\n    // return Promise.reject();\r\n\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n    }\r\n\r\n    if(!entryName.length) {\r\n      return Promise.resolve([]) as any;\r\n    }\r\n\r\n    return this.getObjectStore<T>('readonly', (objectStore) => {\r\n      return (entryName as string[]).map((entryName) => objectStore.get(entryName));\r\n    }, DEBUG ? 'get: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  private getObjectStore<T>(\r\n    mode: IDBTransactionMode,\r\n    callback: (objectStore: IDBObjectStore) => IDBRequest | IDBRequest[],\r\n    log?: string,\r\n    storeName = this.storeName\r\n  ) {\r\n    let perf: number;\r\n\r\n    if(log) {\r\n      perf = performance.now();\r\n      this.log(log + ': start');\r\n    }\r\n\r\n    return this.idb.openDatabase().then((db) => {\r\n      return new Promise<T>((resolve, reject) => {\r\n        /* if(mode === 'readwrite') {\r\n          return;\r\n        } */\r\n\r\n        const transaction = db.transaction([storeName], mode);\r\n\r\n        const onError = () => {\r\n          clearTimeout(timeout);\r\n          reject(transaction.error);\r\n        };\r\n\r\n        // let resolved = false;\r\n        const onComplete = (/* what: string */) => {\r\n          clearTimeout(timeout);\r\n\r\n          if(log) {\r\n            this.log(log + ': end', performance.now() - perf/* , what */);\r\n          }\r\n\r\n          // if(resolved) {\r\n          //   return;\r\n          // }\r\n\r\n          // resolved = true;\r\n          const results = requests.map((r) => r.result);\r\n          resolve(isArray ? results : results[0]);\r\n        };\r\n\r\n        transaction.onerror = onError;\r\n\r\n        // * have to wait while clearing or setting something\r\n        const waitForTransactionComplete = mode === 'readwrite';\r\n        if(waitForTransactionComplete) {\r\n          transaction.oncomplete = () => onComplete(/* 'transaction' */);\r\n        }\r\n\r\n        const timeout = setTimeout(() => {\r\n          this.log.error('transaction not finished', transaction, log);\r\n        }, 10000);\r\n\r\n        /* transaction.addEventListener('abort', (e) => {\r\n          //handleError();\r\n          this.log.error('IndexedDB: transaction abort!', transaction.error);\r\n        }); */\r\n\r\n        const callbackResult = callback(transaction.objectStore(storeName));\r\n\r\n        const isArray = Array.isArray(callbackResult);\r\n        const requests: IDBRequest[] = isArray ? callbackResult : [].concat(callbackResult) as any;\r\n\r\n        if(waitForTransactionComplete) {\r\n          return;\r\n        }\r\n\r\n        const length = requests.length;\r\n        let left = length;\r\n\r\n        const onRequestFinished = () => {\r\n          if(transaction.error) {\r\n            return;\r\n          }\r\n\r\n          if(!--left) {\r\n            onComplete(/* 'requests' */);\r\n          }\r\n        };\r\n\r\n        for(let i = 0; i < length; ++i) {\r\n          const request = requests[i];\r\n          request.onerror = onError;\r\n          request.onsuccess = onRequestFinished;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public getAll<T>(storeName?: StoreName): Promise<T[]> {\r\n    return this.getObjectStore<T[]>('readonly', (objectStore) => objectStore.getAll(), DEBUG ? 'getAll' : '', storeName);\r\n  }\r\n\r\n  /* public getAllKeys(): Promise<Array<string>> {\r\n    console.time('getAllEntries');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.getAllKeys();\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var result = event.target.result;\r\n          resolve(result);\r\n          console.timeEnd('getAllEntries');\r\n        }\r\n\r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public isFileExists(fileName: string): Promise<boolean> {\r\n    console.time('isFileExists');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.openCursor(fileName);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var cursor = event.target.result;\r\n          resolve(!!cursor);\r\n          console.timeEnd('isFileExists');\r\n        }\r\n\r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public getFileWriter(fileName: string, mimeType: string) {\r\n    var fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  } */\r\n}\r\n","import type ENVIRONMENT from '.';\n\nlet environment: typeof ENVIRONMENT;\nexport function getEnvironment() {\n  return environment;\n}\n\nexport function setEnvironment(env: typeof environment) {\n  return environment = env;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, PollResults, Poll, WebPage, GroupCall, GroupCallParticipant, ReactionCount, MessagePeerReaction, PhoneCall, Config} from '../layer';\nimport type {AppMessagesManager, Dialog, MessagesStorageKey, MyMessage} from './appManagers/appMessagesManager';\nimport type {MyDialogFilter} from './storages/filters';\nimport type {Folder} from './storages/dialogs';\nimport type {UserTyping} from './appManagers/appProfileManager';\nimport type {MyDraftMessage} from './appManagers/appDraftsManager';\nimport type {ConnectionStatusChange} from './mtproto/connectionStatus';\nimport type {GroupCallId} from './appManagers/appGroupCallsManager';\nimport type {AppManagers} from './appManagers/managers';\nimport type {State} from '../config/state';\nimport type {Progress} from './appManagers/appDownloadManager';\nimport type {CallId} from './appManagers/appCallsManager';\nimport type {MyDocument} from './appManagers/appDocsManager';\nimport {NULL_PEER_ID, UserAuth} from './mtproto/mtproto_config';\nimport EventListenerBase from '../helpers/eventListenerBase';\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\nimport {IS_WORKER} from '../helpers/context';\nimport {MTAppConfig} from './mtproto/appConfig';\n\nexport type BroadcastEvents = {\n  'chat_full_update': ChatId,\n  'chat_update': ChatId,\n\n  'channel_update': ChatId,\n\n  'user_update': UserId,\n  'user_auth': UserAuth,\n  'user_full_update': UserId,\n\n  'peer_pinned_messages': {peerId: PeerId, mids?: number[], pinned?: boolean, unpinAll?: true},\n  'peer_pinned_hidden': {peerId: PeerId, maxId: number},\n  'peer_typings': {peerId: PeerId, typings: UserTyping[]},\n  'peer_block': {peerId: PeerId, blocked: boolean},\n  'peer_title_edit': PeerId,\n  'peer_bio_edit': PeerId,\n  'peer_deleted': PeerId, // left chat, deleted user dialog, left channel\n  'peer_full_update': PeerId,\n\n  'filter_delete': MyDialogFilter,\n  'filter_update': MyDialogFilter,\n  'filter_new': MyDialogFilter,\n  'filter_order': number[],\n\n  'folder_unread': Omit<Folder, 'dialogs' | 'dispatchUnreadTimeout'>,\n\n  'dialog_draft': {peerId: PeerId, dialog: Dialog, drop: boolean, draft: MyDraftMessage | undefined},\n  'dialog_unread': {peerId: PeerId, dialog: Dialog},\n  'dialog_flush': {peerId: PeerId, dialog: Dialog},\n  'dialog_drop': {peerId: PeerId, dialog?: Dialog},\n  'dialog_migrate': {migrateFrom: PeerId, migrateTo: PeerId},\n  // 'dialog_top': Dialog,\n  'dialog_notify_settings': Dialog,\n  // 'dialog_order': {dialog: Dialog, pos: number},\n  'dialogs_multiupdate': Map<PeerId, Dialog>,\n\n  'history_append': {storageKey: MessagesStorageKey, message: Message.message},\n  'history_update': {storageKey: MessagesStorageKey, message: MyMessage, sequential?: boolean},\n  'history_reply_markup': {peerId: PeerId},\n  'history_multiappend': MyMessage,\n  'history_delete': {peerId: PeerId, msgs: Set<number>},\n  'history_forbidden': PeerId,\n  'history_reload': PeerId,\n  // 'history_request': void,\n\n  'message_edit': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number, message: MyMessage},\n  'message_sent': {storageKey: MessagesStorageKey, tempId: number, tempMessage: any, mid: number, message: MyMessage},\n  'messages_views': {peerId: PeerId, mid: number, views: number}[],\n  'messages_reactions': {message: Message.message, changedResults: ReactionCount[]}[],\n  'messages_pending': void,\n  'messages_read': void,\n  'messages_downloaded': {peerId: PeerId, mids: number[]},\n  'messages_media_read': {peerId: PeerId, mids: number[]},\n\n  'replies_updated': Message.message,\n\n  'scheduled_new': Message.message,\n  'scheduled_delete': {peerId: PeerId, mids: number[]},\n\n  'album_edit': {peerId: PeerId, groupId: string, deletedMids: number[], messages: Message.message[]},\n\n  'stickers_installed': StickerSet.stickerSet,\n  'stickers_deleted': StickerSet.stickerSet,\n  'stickers_updated': {type: 'recent' | 'faved', stickers: MyDocument[]},\n  'sticker_updated': {type: 'recent' | 'faved', document: MyDocument, faved: boolean},\n\n  'state_cleared': void,\n  'state_synchronized': ChatId | void,\n  'state_synchronizing': ChatId | void,\n\n  'contacts_update': UserId,\n  'avatar_update': PeerId,\n  'poll_update': {poll: Poll, results: PollResults},\n  'invalidate_participants': ChatId,\n  // 'channel_settings': {channelId: number},\n  'webpage_updated': {id: WebPage.webPage['id'], msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[]},\n\n  'connection_status_change': ConnectionStatusChange,\n  'settings_updated': {key: string, value: any, settings: State['settings']},\n  'draft_updated': {peerId: PeerId, threadId: number, draft: MyDraftMessage | undefined, force?: boolean},\n\n  'background_change': void,\n\n  'privacy_update': Update.updatePrivacy,\n\n  'notify_settings': Update.updateNotifySettings,\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\n\n  'notification_reset': string,\n  'notification_cancel': string,\n\n  'language_change': string,\n\n  'theme_change': void,\n\n  'media_play': void,\n\n  'emoji_recent': string,\n\n  'download_progress': Progress,\n  'document_downloading': DocId,\n  'document_downloaded': DocId,\n\n  'choosing_sticker': boolean\n\n  'group_call_update': GroupCall,\n  'group_call_participant': {groupCallId: GroupCallId, participant: GroupCallParticipant},\n  // 'group_call_video_track_added': {instance: GroupCallInstance}\n\n  'call_update': PhoneCall,\n  'call_signaling': {callId: CallId, data: Uint8Array},\n\n  'quick_reaction': string,\n\n  'service_notification': Update.updateServiceNotification,\n\n  'logging_out': void,\n\n  'payment_sent': {peerId: PeerId, mid: number, receiptMessage: Message.messageService}\n\n  'premium_toggle': boolean,\n\n  'config': Config,\n  'app_config': MTAppConfig\n};\n\nexport type BroadcastEventsListeners = {\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\n};\n\nexport class RootScope extends EventListenerBase<BroadcastEventsListeners> {\n  public myId: PeerId;\n  private connectionStatus: {[name: string]: ConnectionStatusChange};\n  public settings: State['settings'];\n  public managers: AppManagers;\n  public premium: boolean;\n\n  constructor() {\n    super();\n\n    this.myId = NULL_PEER_ID;\n    this.connectionStatus = {};\n    this.premium = false;\n\n    this.addEventListener('user_auth', ({id}) => {\n      this.myId = id.toPeerId();\n    });\n\n    this.addEventListener('premium_toggle', (isPremium) => {\n      this.premium = isPremium;\n    });\n\n    this.addEventListener('connection_status_change', (status) => {\n      this.connectionStatus[status.name] = status;\n    });\n\n    this.dispatchEvent = (e, ...args) => {\n      super.dispatchEvent(e, ...args);\n      MTProtoMessagePort.getInstance().invokeVoid('event', {name: e as string, args});\n    };\n\n    if(!IS_WORKER) {\n      this.addEventListener('settings_updated', ({settings}) => {\n        this.settings = settings;\n      });\n    }\n  }\n\n  public getConnectionStatus() {\n    return this.connectionStatus;\n  }\n\n  public dispatchEventSingle(...args: any[]) {\n    // @ts-ignore\n    super.dispatchEvent(...args);\n  }\n}\n\nconst rootScope = new RootScope();\nMOUNT_CLASS_TO.rootScope = rootScope;\nexport default rootScope;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {State} from '../../config/state';\nimport rootScope from '../rootScope';\nimport stateStorage from '../stateStorage';\nimport setDeepProperty from '../../helpers/object/setDeepProperty';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\nexport class AppStateManager {\n  private state: State = {} as any;\n  private storage = stateStorage;\n\n  // ! for mtproto worker use only\n  public newVersion: string;\n  public oldVersion: string;\n  public userId: UserId;\n\n  public getState() {\n    return Promise.resolve(this.state);\n  }\n\n  public setByKey(key: string, value: any) {\n    setDeepProperty(this.state, key, value);\n\n    const first = key.split('.')[0] as keyof State;\n    if(first === 'settings') {\n      rootScope.dispatchEvent('settings_updated', {key, value, settings: this.state.settings});\n    }\n\n    this.pushToState(first, this.state[first]);\n  }\n\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true, onlyLocal?: boolean) {\n    if(direct) {\n      this.state[key] = value;\n    }\n\n    this.setKeyValueToStorage(key, value, onlyLocal);\n  }\n\n  public setKeyValueToStorage<T extends keyof State>(key: T, value: State[T] = this.state[key], onlyLocal?: boolean) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {name: 'state', key, value});\n\n    this.storage.set({\n      [key]: value\n    }, onlyLocal);\n  }\n\n  /* public resetState() {\n    for(let i in this.state) {\n      // @ts-ignore\n      this.state[i] = false;\n    }\n    sessionStorage.set(this.state).then(() => {\n      location.reload();\n    });\n  } */\n}\n\nconst appStateManager = new AppStateManager();\nexport default appStateManager;\n","import getDeepProperty from './getDeepProperty';\n\nexport default function setDeepProperty(object: any, key: string, value: any) {\n  const splitted = key.split('.');\n  getDeepProperty(object, splitted.slice(0, -1).join('.'))[splitted.pop()] = value;\n}\n","export default function getDeepProperty(object: any, key: string) {\n  const splitted = key.split('.');\n  let o: any = object;\n  splitted.forEach((key) => {\n    if(!key) {\n      return;\n    }\n\n    // @ts-ignore\n    o = o[key];\n  });\n\n  return o;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport pause from '../../../helpers/schedulers/pause';\nimport {DcId} from '../../../types';\nimport {logger, LogTypes} from '../../logger';\nimport type MTPNetworker from '../networker';\nimport MTTransport from './transport';\nimport Modes from '../../../config/modes';\n\n                   \nimport transportController from './controller';\n// import networkStats from '../networkStats';\n         \n\nexport default class HTTP implements MTTransport {\n  public networker: MTPNetworker;\n  private log: ReturnType<typeof logger>;\n\n  private pending: Array<{\n    resolve: (body: Uint8Array) => void,\n    reject: any,\n    body: Uint8Array\n  }> = [];\n  private releasing: boolean;\n\n  public connected: boolean;\n  private destroyed: boolean;\n  private debug: boolean;\n\n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\n    this.debug = Modes.debug && false;\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n\n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connected = false;\n  }\n\n  public _send(body: Uint8Array, mode?: RequestMode) {\n    const length = body.length;\n    this.debug && this.log.debug('-> body length to send:', length);\n\n    // networkStats.addSent(this.dcId, length);\n    return fetch(this.url, {method: 'POST', body, mode}).then((response) => {\n      if(response.status !== 200 && !mode) {\n        response.arrayBuffer().then((buffer) => {\n          this.log.error('not 200',\n            new TextDecoder('utf-8').decode(new Uint8Array(buffer)));\n        });\n\n        throw response;\n      }\n\n      this.setConnected(true);\n\n      // * test resending by dropping random request\n      // if(Math.random() > .5) {\n      //   throw 'asd';\n      // }\n\n      return response.arrayBuffer().then((buffer) => {\n        // networkStats.addReceived(this.dcId, buffer.byteLength);\n        return new Uint8Array(buffer);\n      });\n    }, (err) => {\n      this.setConnected(false);\n      throw err;\n    });\n  }\n\n  private setConnected(connected: boolean) {\n    if(this.connected === connected || this.destroyed) {\n      return;\n    }\n\n    this.connected = connected;\n\n                       \n    transportController.setTransportValue('https', connected);\n             \n  }\n\n  public destroy() {\n    this.setConnected(false);\n    this.destroyed = true;\n    this.pending.forEach((pending) => pending.reject());\n    this.pending.length = 0;\n  }\n\n  public send(body: Uint8Array) {\n    if(this.networker) {\n      return this._send(body);\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending() {\n    if(this.releasing) return;\n\n    this.releasing = true;\n    // this.log('-> messages to send:', this.pending.length);\n    for(let i = 0; i < this.pending.length; ++i) {\n      const pending = this.pending[i];\n      const {body, resolve} = pending;\n\n      try {\n        const result = await this._send(body);\n        resolve(result);\n        this.pending.splice(i, 1);\n      } catch(err) {\n        this.log.error('Send plain request error:', err);\n        await pause(5000);\n      }\n\n      --i;\n    }\n\n    this.releasing = false;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {logger, LogTypes} from '../../logger';\r\nimport Modes from '../../../config/modes';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport {MTConnection} from './transport';\r\n\r\n// let closeSocketBefore = Date.now() + 30e3;\r\n// let closeSocketAfter = Date.now() + 10e3;\r\n\r\nexport default class Socket extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private ws: WebSocket;\r\n  private log: ReturnType<typeof logger>;\r\n  private debug = Modes.debug && false;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n    this.connect();\r\n\r\n    return this;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.ws.removeEventListener('open', this.handleOpen);\r\n    this.ws.removeEventListener('close', this.handleClose);\r\n    this.ws.removeEventListener('error', this.handleError);\r\n    this.ws.removeEventListener('message', this.handleMessage);\r\n    this.ws = undefined;\r\n  }\r\n\r\n  private connect() {\r\n    this.ws = new WebSocket(this.url, 'binary');\r\n    this.ws.binaryType = 'arraybuffer';\r\n    this.ws.addEventListener('open', this.handleOpen);\r\n    this.ws.addEventListener('close', this.handleClose);\r\n    this.ws.addEventListener('error', this.handleError);\r\n    this.ws.addEventListener('message', this.handleMessage);\r\n\r\n    // if(Date.now() < closeSocketBefore) {\r\n    // if(Date.now() >= closeSocketAfter) {\r\n    //   this.ws.close();\r\n    // }\r\n  }\r\n\r\n  public close() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.log('close execution');\r\n\r\n    try {\r\n      this.ws.close();\r\n    } catch(err) {\r\n\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  private handleOpen = () => {\r\n    this.log('opened');\r\n\r\n    this.debug && this.log.debug('sending init packet');\r\n    this.dispatchEvent('open');\r\n  };\r\n\r\n  private handleError = (e: Event) => {\r\n    this.log.error('handleError', e);\r\n    this.close();\r\n  };\r\n\r\n  private handleClose = (e?: CloseEvent) => {\r\n    this.log('closed', e/* , this.pending, this.ws.bufferedAmount */);\r\n\r\n    this.removeListeners();\r\n    this.dispatchEvent('close');\r\n  };\r\n\r\n  private handleMessage = (event: MessageEvent) => {\r\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\r\n\r\n    this.dispatchEvent('message', event.data as ArrayBuffer);\r\n  };\r\n\r\n  public send = (body: Uint8Array) => {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    this.ws.send(body);\r\n  };\r\n}\r\n","export default function randomize<T extends ArrayBufferView>(arr: T) {\n  if(crypto && 'getRandomValues' in crypto) {\n    crypto.getRandomValues(arr);\n  } else {\n    throw new Error('NO_SECURE_RANDOM');\n  }\n\n  return arr;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import aesjs from 'aes-js';\r\nimport randomize from '../../../helpers/array/randomize';\r\nimport cryptoMessagePort from '../../crypto/cryptoMessagePort';\r\nimport {Codec} from './codec';\r\n\r\n/*\r\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\r\n*/\r\nexport default class Obfuscation {\r\n  /* private enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\r\n  private dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\r\n\r\n  private id: number;\r\n  private idPromise: Promise<Obfuscation['id']>;\r\n  private process: (data: Uint8Array, operation: 'encrypt' | 'decrypt') => ReturnType<Obfuscation['_process']>;\r\n\r\n  // private cryptoEncKey: CryptoKey;\r\n  // private cryptoDecKey: CryptoKey;\r\n  // private cryptoKey: CryptoKey;\r\n\r\n  // private encIv: Uint8Array;\r\n  // private decIv: Uint8Array;\r\n\r\n  // private decIvCounter: Counter;\r\n\r\n  public async init(codec: Codec) {\r\n    if(this.idPromise !== undefined) {\r\n      this.release();\r\n    }\r\n\r\n    const initPayload = new Uint8Array(64);\r\n    randomize(initPayload);\r\n\r\n    while(true) {\r\n      const val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | initPayload[0];\r\n      const val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | initPayload[4];\r\n      if(initPayload[0] !== 0xef &&\r\n          val !== 0x44414548 &&\r\n          val !== 0x54534f50 &&\r\n          val !== 0x20544547 &&\r\n          val !== 0x4954504f &&\r\n          val !== 0xeeeeeeee &&\r\n          val !== 0xdddddddd &&\r\n          val2 !== 0x00000000) {\r\n        // initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\r\n        break;\r\n      }\r\n      randomize(initPayload);\r\n    }\r\n\r\n    // //////////////////////initPayload.subarray(60, 62).hex = dcId;\r\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\r\n    console.log('initPayload', initPayload); */\r\n\r\n    const reversedPayload = initPayload.slice().reverse();\r\n\r\n    const encKey = initPayload.slice(8, 40);\r\n    const encIv = /* this.encIv =  */initPayload.slice(40, 56);\r\n    const decKey = reversedPayload.slice(8, 40);\r\n    const decIv = /* this.decIv =  */reversedPayload.slice(40, 56);\r\n\r\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\r\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\r\n\r\n    // console.log('encKey', encKey.hex, encIv.hex);\r\n    // console.log('decKey', decKey.hex, decIv.hex);\r\n\r\n    const idPromise = this.idPromise = cryptoMessagePort.invokeCrypto('aes-ctr-prepare', {\r\n      encKey,\r\n      encIv,\r\n      decKey,\r\n      decIv\r\n    });\r\n\r\n    this.process = async(data, operation) => {\r\n      await idPromise;\r\n      return this._process(data, operation);\r\n    };\r\n\r\n    this.id = await idPromise;\r\n\r\n    this.process = this._process;\r\n\r\n    // this.decIvCounter = new Counter(this.decIv);\r\n    /* const key = this.cryptoEncKey = await subtle.importKey(\r\n      'raw',\r\n      encKey,\r\n      {name: 'AES-CTR'},\r\n      false,\r\n      ['encrypt']\r\n    ); */\r\n\r\n    // this.cryptoDecKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   decKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt']\r\n    // );\r\n\r\n    // this.cryptoKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   encKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt', 'decrypt']\r\n    // );\r\n\r\n    initPayload.set(codec.obfuscateTag, 56);\r\n    const encrypted = await this.encode(initPayload.slice());\r\n\r\n    // console.log('encrypted', encrypted);\r\n\r\n    initPayload.set(encrypted.slice(56, 64), 56);\r\n\r\n    return initPayload;\r\n  }\r\n\r\n  /* public encode(payload: Uint8Array) {\r\n    let startTime = performance.now();\r\n    let res = this.enc.encrypt(payload);\r\n    let time = performance.now() - startTime;\r\n\r\n    try {\r\n      startTime = performance.now();\r\n      let arr = this.encNew.encrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      let time2 = performance.now() - startTime;\r\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    let res = this.dec.encrypt(payload);\r\n\r\n    try {\r\n      let arr = this.decNew.decrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n\r\n    return res;\r\n  } */\r\n\r\n  private _process = (data: Uint8Array, operation: 'encrypt' | 'decrypt') => {\r\n    return cryptoMessagePort.invokeCryptoNew({\r\n      method: 'aes-ctr-process',\r\n      args: [{id: this.id, data, operation}],\r\n      transfer: [data.buffer]\r\n    }) as Promise<Uint8Array>;\r\n  };\r\n\r\n  public encode(payload: Uint8Array) {\r\n    /* return subtle.encrypt({\r\n        name: 'AES-CTR',\r\n        counter: this.encIv,\r\n        length: 64\r\n      },\r\n      this.cryptoEncKey,\r\n      payload\r\n    ); */\r\n    return this.process(payload, 'encrypt');\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    return this.process(payload, 'decrypt');\r\n  }\r\n\r\n  public async release() {\r\n    const idPromise = this.idPromise;\r\n    if(idPromise === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.id = undefined;\r\n    this.idPromise = undefined;\r\n\r\n    const id = await idPromise;\r\n    cryptoMessagePort.invokeCrypto('aes-ctr-destroy', id);\r\n  }\r\n\r\n  public destroy() {\r\n    this.release();\r\n  }\r\n\r\n  // public encode(payload: Uint8Array) {\r\n  //   let res = this.encNew.encrypt(payload);\r\n  //   let bytes = new Uint8Array(bytesFromWordss(res));\r\n\r\n  //   return bytes;\r\n  // }\r\n\r\n  // public async decode(payload: Uint8Array) {\r\n  //   const counter = this.decIvCounter.counter.slice();\r\n  //   this.decIvCounter.increment();\r\n\r\n  //   const n: ArrayBuffer = await subtle.encrypt({\r\n  //       name: 'AES-CTR',\r\n  //       counter: counter,\r\n  //       length: 64\r\n  //     },\r\n  //     this.cryptoDecKey,\r\n  //     payload\r\n  //   );\r\n\r\n  //   const decoded = this.decNew.update(payload);\r\n\r\n  //   console.log('decode', bytesToHex(decoded), 'new', n, bytesToHex(new Uint8Array(n)));\r\n\r\n  //   return decoded;\r\n  // }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { bytesFromHex, addPadding } from \"../../bin_utils\";\r\nimport {Codec} from './codec';\r\n\r\nclass AbridgedPacketCodec implements Codec {\r\n  public tag = 0xef;\r\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\r\n\r\n  public encodePacket(data: Uint8Array) {\r\n    const len = data.byteLength >> 2;\r\n    let header: Uint8Array;\r\n    if(len < 127) {\r\n      header = new Uint8Array([len]);\r\n    } else { // Length: payload length, divided by four, and encoded as 3 length bytes (little endian)\r\n      // header = new Uint8Array([0x7f, ...addPadding(bytesFromHex(len.toString(16)).reverse(), 3, true)/* .reverse() */]);\r\n      header = new Uint8Array([0x7f, len & 0xFF, (len >> 8) & 0xFF, (len >> 16) & 0xFF]);\r\n      // console.log('got nobody cause im braindead', header, len);\r\n    }\r\n\r\n    return header.concat(data);\r\n    // return new Uint8Array([...header, ...data]);\r\n  }\r\n\r\n  public readPacket(data: Uint8Array) {\r\n    let length = data[0];\r\n    if(length >= 127) { // 0x7f\r\n      length = data[1] | (data[2] << 8) | (data[3] << 16);\r\n\r\n      return data.slice(4, length << 2 + 1); // need +1\r\n    }\r\n\r\n    return data.slice(1, length << 2 + 1); // need +1\r\n  }\r\n}\r\n\r\nexport default new AbridgedPacketCodec();\r\n","export default function bytesToHex(bytes: ArrayLike<number>) {\n  const length = bytes.length;\n  const arr: string[] = new Array(length);\n  for(let i = 0; i < length; ++i) {\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\n  }\n  return arr.join('');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from '../../../config/modes';\nimport {logger, LogTypes} from '../../logger';\nimport MTPNetworker from '../networker';\nimport Obfuscation from './obfuscation';\nimport MTTransport, {MTConnection, MTConnectionConstructable} from './transport';\n// import intermediatePacketCodec from './intermediate';\nimport abridgedPacketCodec from './abridged';\n// import paddedIntermediatePacketCodec from './padded';\nimport {ConnectionStatus} from '../connectionStatus';\n\n                   \nimport transportController from './controller';\nimport bytesToHex from '../../../helpers/bytes/bytesToHex';\n// import networkStats from '../networkStats';\nimport ctx from '../../../environment/ctx';\n         \n\nexport default class TcpObfuscated implements MTTransport {\n  private codec = abridgedPacketCodec;\n  private obfuscation = new Obfuscation();\n  public networker: MTPNetworker;\n\n  private pending: Array<Partial<{\n    resolve: any,\n    reject: any,\n    body: Uint8Array,\n    encoded?: Uint8Array,\n    bodySent: boolean\n  }>> = [];\n\n  private debug = Modes.debug && false/* true */;\n  private log: ReturnType<typeof logger>;\n  public connected = false;\n  private lastCloseTime: number;\n  public connection: MTConnection;\n\n  private autoReconnect = true;\n  private reconnectTimeout: number;\n  private releasingPending: boolean;\n\n  // private debugPayloads: MTPNetworker['debugRequests'] = [];\n\n  constructor(\n    private Connection: MTConnectionConstructable,\n    private dcId: number,\n    private url: string,\n    private logSuffix: string,\n    private retryTimeout: number\n  ) {\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connect();\n  }\n\n  private onOpen = async() => {\n    this.connected = true;\n\n                       \n    transportController.setTransportOpened('websocket');\n             \n\n    const initPayload = await this.obfuscation.init(this.codec);\n    if(!this.connected) {\n      return;\n    }\n\n    this.connection.send(initPayload);\n\n    if(this.networker) {\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\n      this.networker.setConnectionStatus(ConnectionStatus.Connected);\n      this.networker.cleanupSent();\n      this.networker.resend();\n    }/*  else {\n      for(const pending of this.pending) {\n        if(pending.encoded && pending.body) {\n          pending.encoded = this.encodeBody(pending.body);\n        }\n      }\n    } */\n\n    setTimeout(() => {\n      this.releasePending();\n    }, 0);\n  };\n\n  private onMessage = async(buffer: ArrayBuffer) => {\n    // networkStats.addReceived(this.dcId, buffer.byteLength);\n\n    let data = await this.obfuscation.decode(new Uint8Array(buffer));\n    data = this.codec.readPacket(data);\n\n    if(this.networker) { // authenticated!\n      // this.pending = this.pending.filter((p) => p.body); // clear pending\n\n      this.debug && this.log.debug('redirecting to networker', data.length);\n      this.networker.parseResponse(data).then((response) => {\n        this.debug && this.log.debug('redirecting to networker response:', response);\n\n        try {\n          this.networker.processMessage(response.response, response.messageId, response.sessionId);\n        } catch(err) {\n          this.log.error('handleMessage networker processMessage error', err);\n        }\n\n        // this.releasePending();\n      }).catch((err) => {\n        this.log.error('handleMessage networker parseResponse error', err);\n      });\n\n      // this.dd();\n      return;\n    }\n\n    // console.log('got hex:', data.hex);\n    const pending = this.pending.shift();\n    if(!pending) {\n      this.debug && this.log.debug('no pending for res:', bytesToHex(data));\n      return;\n    }\n\n    pending.resolve(data);\n  };\n\n  private onClose = () => {\n    this.clear();\n\n    let needTimeout: number, retryAt: number;\n    if(this.autoReconnect) {\n      const time = Date.now();\n      const diff = time - this.lastCloseTime;\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\n      retryAt = time + needTimeout;\n    }\n\n    if(this.networker) {\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\n      this.pending.length = 0;\n    }\n\n    if(this.autoReconnect) {\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\n      this.reconnectTimeout = ctx.setTimeout(this.reconnect, needTimeout);\n    } else {\n      this.log('reconnect isn\\'t needed');\n    }\n  };\n\n  public clear() {\n                       \n    if(this.connected) {\n      transportController.setTransportClosed('websocket');\n    }\n             \n\n    this.connected = false;\n\n    if(this.connection) {\n      this.connection.removeEventListener('open', this.onOpen);\n      this.connection.removeEventListener('close', this.onClose);\n      this.connection.removeEventListener('message', this.onMessage);\n      this.connection = undefined;\n    }\n  }\n\n  /**\n   * invoke only when closed\n   */\n  public reconnect = () => {\n    if(this.reconnectTimeout !== undefined) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = undefined;\n    }\n\n    if(this.connection) {\n      return;\n    }\n\n    this.log('trying to reconnect...');\n    this.lastCloseTime = Date.now();\n\n    if(!this.networker) {\n      for(const pending of this.pending) {\n        if(pending.bodySent) {\n          pending.bodySent = false;\n        }\n      }\n    } else {\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.connect();\n  }\n\n  public forceReconnect() {\n    this.close();\n    this.reconnect();\n  }\n\n  public destroy() {\n    this.setAutoReconnect(false);\n    this.close();\n\n    if(this.obfuscation) {\n      this.obfuscation.destroy();\n    }\n\n    this.pending.forEach((pending) => {\n      if(pending.reject) {\n        pending.reject();\n      }\n    });\n    this.pending.length = 0;\n  }\n\n  public close() {\n    const connection = this.connection;\n    if(connection) {\n      const connected = this.connected;\n      this.clear();\n      if(connected) { // wait for buffered messages if they are there\n        connection.addEventListener('message', this.onMessage);\n        connection.addEventListener('close', () => {\n          connection.removeEventListener('message', this.onMessage);\n        }, {once: true});\n        connection.close();\n      }\n    }\n  }\n\n  /**\n   * Will connect if enable and disconnected \\\n   * Will reset reconnection timeout if disable\n   */\n  public setAutoReconnect(enable: boolean) {\n    this.autoReconnect = enable;\n\n    if(!enable) {\n      if(this.reconnectTimeout !== undefined) {\n        clearTimeout(this.reconnectTimeout);\n        this.reconnectTimeout = undefined;\n      }\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\n      this.reconnect();\n    }\n  }\n\n  private connect() {\n    if(this.connection) {\n      this.close();\n    }\n\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\n    this.connection.addEventListener('open', this.onOpen);\n    this.connection.addEventListener('close', this.onClose);\n    this.connection.addEventListener('message', this.onMessage);\n  }\n\n  public changeUrl(url: string) {\n    if(this.url === url) {\n      return;\n    }\n\n    this.url = url;\n    this.forceReconnect();\n  }\n\n  private encodeBody(body: Uint8Array) {\n    const toEncode = this.codec.encodePacket(body);\n\n    // this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\n    const encoded = this.obfuscation.encode(toEncode);\n    // this.log('send after obf:', enc.hex);\n\n    return encoded;\n  }\n\n  public send(body: Uint8Array) {\n    this.debug && this.log.debug('-> body length to pending:', body.length);\n\n    const encoded: typeof body = /* this.connected ? this.encodeBody(body) :  */undefined;\n\n    // return;\n\n    if(this.networker) {\n      this.pending.push({body, encoded});\n      this.releasePending();\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body, encoded});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending(/* tt = false */) {\n    if(!this.connected || this.releasingPending) {\n      // this.connect();\n      return;\n    }\n\n    this.releasingPending = true;\n\n    /* if(!tt) {\n      this.releasePendingDebounced();\n      return;\n    } */\n\n    // this.log('-> messages to send:', this.pending.length);\n    let length = this.pending.length;\n    let sent = false;\n    // for(let i = length - 1; i >= 0; --i) {\n    for(let i = 0; i < length; ++i) {\n      const pending = this.pending[i];\n      if(!pending) {\n        break;\n      }\n\n      const {body, bodySent} = pending;\n      if(body && !bodySent) {\n        // this.debugPayloads.push({before: body.slice(), after: enc});\n\n        this.debug && this.log.debug('-> body length to send:', body.length);\n\n        // if(!encoded) {\n        //   encoded = pending.encoded = this.encodeBody(body);\n        // }\n\n        const encoded = pending.encoded ??= await this.encodeBody(body);\n        if(!this.connected) {\n          break;\n        }\n\n        // networkStats.addSent(this.dcId, encoded.byteLength);\n        this.connection.send(encoded);\n\n        if(!pending.resolve) { // remove if no response needed\n          this.pending.splice(i--, 1);\n          length--;\n        } else {\n          pending.bodySent = true;\n        }\n\n        sent = true;\n        // delete pending.body;\n      }\n    }\n\n    this.releasingPending = undefined;\n\n    if(this.pending.length && sent) {\n      this.releasePending();\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport MTTransport, {MTConnectionConstructable} from './transports/transport';\nimport Modes from '../../config/modes';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\n\n                       \nimport HTTP from './transports/http';\n         \n\n                     \nimport Socket from './transports/websocket';\nimport TcpObfuscated from './transports/tcpObfuscated';\nimport {IS_WEB_WORKER} from '../../helpers/context';\nimport {DcId} from '../../types';\nimport {getEnvironment} from '../../environment/utils';\n\n                                            \n                                                       \n         \n\n         \n\nexport type TransportType = 'websocket' | 'https' | 'http';\nexport type ConnectionType = 'client' | 'download' | 'upload';\ntype Servers = {\n  [transportType in TransportType]: {\n    [connectionType in ConnectionType]: {\n      [dcId: DcId]: MTTransport[]\n    }\n  }\n};\n\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\nconst PREMIUM_SUFFIX = '_premium';\n\nexport function getTelegramConnectionSuffix(connectionType: ConnectionType) {\n  return connectionType === 'client' ? '' : '-1';\n}\n\n                     \nexport function constructTelegramWebSocketUrl(dcId: DcId, connectionType: ConnectionType, premium?: boolean) {\n  const suffix = getTelegramConnectionSuffix(connectionType);\n  const path = connectionType !== 'client' ? 'apiws' + TEST_SUFFIX + (premium ? PREMIUM_SUFFIX : '') : ('apiws' + TEST_SUFFIX);\n  const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\n\n  return chosenServer;\n}\n         \n\nexport class DcConfigurator {\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\n\n  private dcOptions = Modes.test ?\n    [\n      {id: 1, host: '149.154.175.10',  port: 80},\n      {id: 2, host: '149.154.167.40',  port: 80},\n      {id: 3, host: '149.154.175.117', port: 80}\n    ] :\n    [\n      {id: 1, host: '149.154.175.50',  port: 80},\n      {id: 2, host: '149.154.167.50',  port: 80},\n      {id: 3, host: '149.154.175.100', port: 80},\n      {id: 4, host: '149.154.167.91',  port: 80},\n      {id: 5, host: '149.154.171.5',   port: 80}\n    ];\n\n  public chosenServers: Servers = {} as any;\n\n                       \n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\n    const chosenServer = constructTelegramWebSocketUrl(dcId, connectionType, premium);\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n\n    const retryTimeout = connectionType === 'client' ? 10000 : 10000;\n\n    let oooohLetMeLive: MTConnectionConstructable;\n                                                \n    oooohLetMeLive = Socket;\n            \n                                                                                                                                                   \n             \n\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\n  };\n           \n\n                         \n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\n    let chosenServer: string;\n    if(Modes.ssl || !Modes.http) {\n      const suffix = getTelegramConnectionSuffix(connectionType);\n      const subdomain = this.sslSubdomains[dcId - 1] + suffix;\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\n      chosenServer = 'https://' + subdomain + '.web.telegram.org/' + path;\n    } else {\n      for(const dcOption of this.dcOptions) {\n        if(dcOption.id === dcId) {\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\n          break;\n        }\n      }\n    }\n\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n    return new HTTP(dcId, chosenServer, logSuffix);\n  };\n           \n\n  public chooseServer(\n    dcId: DcId,\n    connectionType: ConnectionType = 'client',\n    transportType: TransportType = Modes.transport,\n    reuse = true,\n    premium?: boolean\n  ) {\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\n      connectionType = 'client';\n    } */\n\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\n      this.chosenServers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const servers = this.chosenServers[transportType][connectionType];\n\n    if(!(dcId in servers)) {\n      servers[dcId] = [];\n    }\n\n    const transports = servers[dcId];\n\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\n      let transport: MTTransport;\n\n                                               \n      transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, premium);\n                            \n                                                                      \n              \n                                                                    \n               \n\n      if(!transport) {\n        console.error('No chosenServer!', dcId);\n        return null;\n      }\n\n      if(reuse) {\n        transports.push(transport);\n      }\n\n      return transport;\n    }\n\n    return transports[0];\n  }\n\n  public static removeTransport<T>(obj: any, transport: T) {\n    for(const transportType in obj) {\n      // @ts-ignore\n      for(const connectionType in obj[transportType]) {\n        // @ts-ignore\n        for(const dcId in obj[transportType][connectionType]) {\n          // @ts-ignore\n          const transports: T[] = obj[transportType][connectionType][dcId];\n          indexOfAndSplice(transports, transport);\n        }\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from '../../../config/app';\nimport deferredPromise from '../../../helpers/cancellablePromise';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport pause from '../../../helpers/schedulers/pause';\nimport {TransportType, DcConfigurator} from '../dcConfigurator';\nimport type HTTP from './http';\nimport type TcpObfuscated from './tcpObfuscated';\nimport MTTransport from './transport';\n\nexport class MTTransportController extends EventListenerBase<{\n  change: (opened: MTTransportController['opened']) => void,\n  transport: (type: TransportType) => void\n}> {\n  private opened: Map<TransportType, number>;\n  private transports: {[k in TransportType]?: MTTransport};\n  private pinging: boolean;\n  private dcConfigurator: DcConfigurator;\n\n  constructor() {\n    super(true);\n\n    this.opened = new Map();\n    /* this.addEventListener('change', (opened) => {\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\n    }); */\n\n    this.addEventListener('change', (opened) => {\n      if(!opened.get('websocket')) {\n        this.waitForWebSocket();\n      }\n    });\n\n    // setTimeout(() => {\n    // this.waitForWebSocket();\n    // }, 200); // wait for first transport so won't have delay for first WS\n  }\n\n  public async pingTransports() {\n    const dcConfigurator = this.dcConfigurator ??= new DcConfigurator();\n    const timeout = 2000;\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\n    };\n\n    const httpPromise = deferredPromise<boolean>();\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\n    setTimeout(() => httpPromise.resolve(false), timeout);\n\n    const websocketPromise = deferredPromise<boolean>();\n    const socket = transports.websocket as TcpObfuscated;\n    socket.setAutoReconnect(false);\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\n    setTimeout(() => {\n      if(websocketPromise.isFulfilled || websocketPromise.isRejected) {\n        return;\n      }\n\n      if(socket.connection) {\n        socket.connection.close();\n      }\n\n      websocketPromise.resolve(false);\n    }, timeout);\n\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\n\n    for(const transportType in transports) {\n      const transport = transports[transportType as TransportType];\n      transport.destroy();\n    }\n\n    const result = {\n      https: isHttpAvailable || this.opened.get('https') > 0,\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\n    };\n\n    // result.websocket = false;\n    return result;\n  }\n\n  public async waitForWebSocket() {\n    if(this.pinging) return;\n    this.pinging = true;\n\n    while(true) {\n      const {https, websocket} = await this.pingTransports();\n      if(https || websocket) {\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\n      }\n\n      if(websocket) {\n        break;\n      }\n\n      await pause(10000);\n    }\n\n    this.pinging = false;\n  }\n\n  public setTransportValue(type: TransportType, value: boolean) {\n    let length = this.opened.get(type) || 0;\n    length += value ? 1 : -1;\n\n    this.opened.set(type, length);\n    this.dispatchEvent('change', this.opened);\n  }\n\n  public setTransportOpened(type: TransportType) {\n    return this.setTransportValue(type, true);\n  }\n\n  public setTransportClosed(type: TransportType) {\n    return this.setTransportValue(type, false);\n  }\n}\n\nconst transportController = new MTTransportController();\nexport default transportController;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport deferredPromise, {CancellablePromise} from '../../../../helpers/cancellablePromise';\r\nimport type {StoragesResults} from './loadStorages';\r\n\r\nconst RESET_STORAGES_PROMISE: CancellablePromise<Set<keyof StoragesResults>> = deferredPromise();\r\nexport default RESET_STORAGES_PROMISE;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {CryptoMessagePort} from '../crypto/cryptoMessagePort';\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\nimport type {ApiManager} from '../mtproto/apiManager';\nimport type {Authorizer} from '../mtproto/authorizer';\nimport type {DcConfigurator} from '../mtproto/dcConfigurator';\nimport type {NetworkerFactory} from '../mtproto/networkerFactory';\nimport type {PasswordManager} from '../mtproto/passwordManager';\nimport type {ReferenceDatabase} from '../mtproto/referenceDatabase';\nimport type {TimeManager} from '../mtproto/timeManager';\nimport type {RootScope} from '../rootScope';\nimport type DialogsStorage from '../storages/dialogs';\nimport type FiltersStorage from '../storages/filters';\nimport type PeersStorage from '../storages/peers';\nimport type ThumbsStorage from '../storages/thumbs';\nimport type {ApiUpdatesManager} from './apiUpdatesManager';\nimport type {AppAvatarsManager} from './appAvatarsManager';\nimport type {AppCallsManager} from './appCallsManager';\nimport type {AppChatsManager} from './appChatsManager';\nimport type {AppDocsManager} from './appDocsManager';\nimport type {AppDraftsManager} from './appDraftsManager';\nimport type {AppEmojiManager} from './appEmojiManager';\nimport type {AppGroupCallsManager} from './appGroupCallsManager';\nimport type {AppInlineBotsManager} from './appInlineBotsManager';\nimport type {AppMessagesIdsManager} from './appMessagesIdsManager';\nimport type {AppMessagesManager} from './appMessagesManager';\nimport type {AppNotificationsManager} from './appNotificationsManager';\nimport type AppPaymentsManager from './appPaymentsManager';\nimport type {AppPeersManager} from './appPeersManager';\nimport type {AppPhotosManager} from './appPhotosManager';\nimport type {AppPollsManager} from './appPollsManager';\nimport type {AppPrivacyManager} from './appPrivacyManager';\nimport type {AppProfileManager} from './appProfileManager';\nimport type {AppReactionsManager} from './appReactionsManager';\nimport type {AppStateManager} from './appStateManager';\nimport type {AppStickersManager} from './appStickersManager';\nimport type {AppStoragesManager} from './appStoragesManager';\nimport type {AppUsersManager} from './appUsersManager';\nimport type AppWebDocsManager from './appWebDocsManager';\nimport type {AppWebPagesManager} from './appWebPagesManager';\nimport type {AppManagers} from './managers';\n\nexport class AppManager {\n  protected appPeersManager: AppPeersManager;\n  protected appChatsManager: AppChatsManager;\n  protected appDocsManager: AppDocsManager;\n  protected appPhotosManager: AppPhotosManager;\n  protected appPollsManager: AppPollsManager;\n  protected appUsersManager: AppUsersManager;\n  protected appWebPagesManager: AppWebPagesManager;\n  protected appDraftsManager: AppDraftsManager;\n  protected appProfileManager: AppProfileManager;\n  protected appNotificationsManager: AppNotificationsManager;\n  protected apiUpdatesManager: ApiUpdatesManager;\n  protected appAvatarsManager: AppAvatarsManager;\n  protected appGroupCallsManager: AppGroupCallsManager;\n  protected appCallsManager: AppCallsManager;\n  protected appReactionsManager: AppReactionsManager;\n  protected appMessagesManager: AppMessagesManager;\n  protected appMessagesIdsManager: AppMessagesIdsManager;\n  protected appPrivacyManager: AppPrivacyManager;\n  protected appInlineBotsManager: AppInlineBotsManager;\n  protected appStickersManager: AppStickersManager;\n  protected referenceDatabase: ReferenceDatabase;\n  protected appEmojiManager: AppEmojiManager;\n  protected dialogsStorage: DialogsStorage;\n  protected filtersStorage: FiltersStorage;\n  protected apiManager: ApiManager;\n  // protected apiManager: ApiManagerProxy;\n  protected passwordManager: PasswordManager;\n  protected cryptoWorker: CryptoMessagePort;\n  protected apiFileManager: ApiFileManager;\n  protected peersStorage: PeersStorage;\n  protected thumbsStorage: ThumbsStorage;\n  protected networkerFactory: NetworkerFactory;\n  protected rootScope: RootScope;\n  protected authorizer: Authorizer;\n  protected dcConfigurator: DcConfigurator;\n  protected timeManager: TimeManager;\n  protected appStoragesManager: AppStoragesManager;\n  protected appStateManager: AppStateManager;\n  protected appWebDocsManager: AppWebDocsManager;\n  protected appPaymentsManager: AppPaymentsManager;\n\n  public clear: (init?: boolean) => void;\n\n  public setManagers(managers: AppManagers) {\n    Object.assign(this, managers);\n    // this.after();\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type{Chat} from '../../../../layer';\r\nimport type{Dialog} from '../../appMessagesManager';\r\nimport type{User} from '../../appUsersManager';\r\nimport type {StoragesStorages} from './createStorages';\r\nimport {recordPromiseBound} from '../../../../helpers/recordPromise';\r\nimport {Awaited} from '../../../../types';\r\nimport {logger} from '../../../logger';\r\nimport RESET_STORAGES_PROMISE from './resetStoragesPromise';\r\n\r\nexport type StoragesResults = Awaited<ReturnType<typeof loadStoragesInner>>;\r\n\r\nasync function loadStoragesInner(storages: StoragesStorages) {\r\n  const recordPromise = recordPromiseBound(logger('STORAGES-LOADER'));\r\n  const storagesKeys = Object.keys(storages) as Array<keyof StoragesStorages>;\r\n  const storagesPromises: Promise<any>[] = storagesKeys.map((key) => {\r\n    const promise = storages[key].getAll();\r\n    return recordPromise(promise, 'storage ' + (key as any as string));\r\n  });\r\n\r\n  const storagesResults: {\r\n    users: User[],\r\n    chats: Chat[],\r\n    dialogs: Dialog[]\r\n  } = {} as any;\r\n  const arr = await Promise.all(storagesPromises);\r\n  for(let i = 0, length = storagesKeys.length; i < length; ++i) {\r\n    storagesResults[storagesKeys[i]] = arr[i] as any;\r\n  }\r\n\r\n  arr.splice(0, storagesKeys.length);\r\n\r\n  const resetStorages = await RESET_STORAGES_PROMISE;\r\n  if(resetStorages.size) {\r\n    for(const key of resetStorages) {\r\n      storagesResults[key].length = 0;\r\n    }\r\n\r\n    resetStorages.clear();\r\n  }\r\n\r\n  return storagesResults;\r\n}\r\n\r\nlet promise: ReturnType<typeof loadStoragesInner>;\r\nexport default function loadStorages(storages: StoragesStorages) {\r\n  return promise ??= loadStoragesInner(storages);\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {logger} from '../logger';\nimport {AppManager} from './manager';\nimport createStorages from './utils/storages/createStorages';\nimport loadStorages from './utils/storages/loadStorages';\n\nexport class AppStoragesManager extends AppManager {\n  private storages: ReturnType<typeof createStorages>;\n\n  // private loadPromise: CancellablePromise<StoragesResults>;\n\n  private log: ReturnType<typeof logger>;\n\n  constructor() {\n    super();\n\n    this.log = logger('STORAGES');\n    this.storages = createStorages();\n    // this.loadPromise = deferredPromise();\n  }\n\n  public loadStorages() {\n    return loadStorages(this.storages);\n    // loadStorages(this.storages).then((storagesResults) => {\n    // this.loadPromise.resolve(storagesResults);\n    // });\n\n    // return this.loadPromise;\n  }\n\n  // public setStoragesResults(storagesResults: StoragesResults) {\n  //   this.loadPromise.resolve(storagesResults);\n  // }\n\n  public async loadStorage<T extends keyof AppStoragesManager['storages']>(name: T) {\n    return this.loadStorages().then((storagesResults) => {\n      return {\n        storage: this.storages[name],\n        results: storagesResults[name]\n      };\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat} from '../../../../layer';\r\nimport type {Dialog} from '../../appMessagesManager';\r\nimport type {User} from '../../appUsersManager';\r\nimport DATABASE_STATE from '../../../../config/databases/state';\r\nimport AppStorage from '../../../storage';\r\n\r\nexport type StoragesStorages = {\r\n  users: AppStorage<Record<UserId, User>, typeof DATABASE_STATE>,\r\n  chats: AppStorage<Record<ChatId, Chat>, typeof DATABASE_STATE>,\r\n  dialogs: AppStorage<Record<PeerId, Dialog>, typeof DATABASE_STATE>\r\n};\r\n\r\nexport default function createStorages() {\r\n  const names: (keyof StoragesStorages)[] = ['users', 'chats', 'dialogs'];\r\n  const storages: StoragesStorages = {} as any;\r\n  for(const name of names) {\r\n    // @ts-ignore\r\n    storages[name] = new AppStorage(DATABASE_STATE, name);\r\n  }\r\n\r\n  return storages;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo} from '../../layer';\r\nimport randomize from '../../helpers/array/randomize';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport class PasswordManager extends AppManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return this.apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    // state = Object.assign({}, state);\r\n    // state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then((state) => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n\r\n      if(settings.currentPassword) {\r\n        currentHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n\r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      randomize(salt1);\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n\r\n      if(settings.newPassword) {\r\n        newHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n\r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n\r\n        return this.apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public getInputCheckPassword(password: string, state: AccountPassword) {\r\n    return this.cryptoWorker.invokeCrypto('computeSRP', password, state, false) as Promise<InputCheckPasswordSRP.inputCheckPasswordSRP>;\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return this.getInputCheckPassword(password, state).then((inputCheckPassword) => {\r\n      // console.log('SRP', inputCheckPassword);\r\n      return this.apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then((auth) => {\r\n        if(auth._ === 'auth.authorization') {\r\n          this.apiManager.setUser(auth.user);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return this.apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Photo} from '../../layer';\nimport {logger} from '../logger';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport {AppManager} from '../appManagers/manager';\nimport makeError from '../../helpers/makeError';\n\nexport type ReferenceContext = ReferenceContext.referenceContextProfilePhoto | ReferenceContext.referenceContextMessage | ReferenceContext.referenceContextEmojiesSounds | ReferenceContext.referenceContextReactions | ReferenceContext.referenceContextUserFull;\nexport namespace ReferenceContext {\n  export type referenceContextProfilePhoto = {\n    type: 'profilePhoto',\n    peerId: PeerId\n  };\n\n  export type referenceContextMessage = {\n    type: 'message',\n    peerId: PeerId,\n    messageId: number\n  };\n\n  export type referenceContextEmojiesSounds = {\n    type: 'emojiesSounds'\n  };\n\n  export type referenceContextReactions = {\n    type: 'reactions'\n  };\n\n  export type referenceContextUserFull = {\n    type: 'userFull',\n    userId: UserId\n  };\n}\n\nexport type ReferenceBytes = Photo.photo['file_reference'];\nexport type ReferenceContexts = Set<ReferenceContext>;\n\n// type ReferenceBytes = Uint8Array;\n\nexport class ReferenceDatabase extends AppManager {\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\n  // private references: Map<ReferenceBytes, number[]> = new Map();\n  private links: {[hex: string]: ReferenceBytes} = {};\n  private log = logger('RD', undefined, true);\n  private refreshEmojiesSoundsPromise: Promise<any>;\n\n  // constructor() {\n  //   super();\n\n  // apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\n  //   const originalPayload = task.payload;\n\n  //   assumeType<RefreshReferenceTaskResponse>(task);\n  //   task.originalPayload = originalPayload;\n\n  //   this.refreshReference(originalPayload).then((bytes) => {\n  //     task.payload = bytes;\n  //   }, (err) => {\n  //     task.error = err;\n  //   }).then(() => apiManager.postMessage(task));\n  // });\n  // }\n\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(!contexts) {\n      contexts = new Set();\n      this.contexts.set(reference, contexts);\n    }\n\n    this.links[bytesToHex(reference)] = reference;\n    for(const _context of contexts) {\n      if(deepEqual(_context, context)) {\n        return;\n      }\n    }\n\n    contexts.add(context);\n  }\n\n  public getReferenceByLink(reference: ReferenceBytes) {\n    return this.links[bytesToHex(reference)];\n  }\n\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\n    return [contexts, reference];\n  }\n\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\n    const contexts = this.getContexts(reference);\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\n  }\n\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(contexts) {\n      for(const _context of contexts) {\n        if(deepEqual(_context, context)) {\n          contexts.delete(_context);\n          if(!contexts.size) {\n            this.contexts.delete(reference);\n            delete this.links[bytesToHex(reference)];\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\n    this.log('refreshReference: start', reference.slice(), context);\n    if(!context) {\n      const c = this.getContext(reference);\n      if(!c) {\n        this.log('refreshReference: got no context for reference:', reference.slice());\n        return Promise.reject('NO_CONTEXT');\n      }\n\n      [context, reference] = c;\n    }\n\n    let promise: Promise<any>;\n    switch(context?.type) {\n      case 'message': {\n        promise = this.appMessagesManager.wrapSingleMessage(context.peerId, context.messageId, true);\n        break;\n        // .then(() => {\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\n        // });\n      }\n\n      case 'emojiesSounds': {\n        promise = this.refreshEmojiesSoundsPromise || this.appStickersManager.getAnimatedEmojiSounds(true).then(() => {\n          this.refreshEmojiesSoundsPromise = undefined;\n        });\n        break;\n      }\n\n      case 'userFull': {\n        promise = Promise.resolve(this.appProfileManager.getProfile(context.userId, true));\n        break;\n      }\n\n      default: {\n        this.log.warn('refreshReference: not implemented context', context);\n        return Promise.reject();\n      }\n    }\n\n    const hex = bytesToHex(reference);\n    this.log('refreshReference: refreshing reference:', hex);\n    return promise.then(() => {\n      const newHex = bytesToHex(reference);\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\n      if(hex !== newHex) {\n        return reference;\n      }\n\n      this.deleteContext(reference, context);\n\n      const newContext = this.getContext(reference);\n      if(newContext) {\n        return this.refreshReference(reference, newContext[0]);\n      }\n\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\n\n      throw makeError('NO_NEW_CONTEXT');\n    });\n  }\n\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\n    const contexts = this.contexts.get(oldReference);\n    if(contexts) {\n      this.contexts.delete(oldReference);\n      this.contexts.set(newReference, contexts);\n    }\n  } */\n}\n","export default function safeReplaceObject(wasObject: any, newObject: any) {\n  if(!wasObject) {\n    return newObject;\n  }\n\n  for(var key in wasObject) {\n    if(!newObject.hasOwnProperty(key)) {\n      delete wasObject[key];\n    }\n  }\n\n  for(var key in newObject) {\n    // if (newObject.hasOwnProperty(key)) { // useless\n    wasObject[key] = newObject[key];\n    // }\n  }\n\n  return wasObject;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Message, MessageAction, MessageMedia} from '../../../../layer';\nimport getPeerId from '../peers/getPeerId';\n\nexport default function getPeerIdsFromMessage(message: Message.message | Message.messageService) {\n  const peerIds: number[] = [\n    message.fromId,\n    message.viaBotId,\n    (message as Message.message).fwdFromId\n  ];\n\n  const media = (message as Message.message).media;\n  if(media) {\n    const contactUserId = (media as MessageMedia.messageMediaContact).user_id;\n    if(contactUserId !== undefined) {\n      peerIds.push(contactUserId.toPeerId());\n    }\n\n    const results = (media as MessageMedia.messageMediaPoll).results;\n    const recentVoters = results?.recent_voters;\n    if(recentVoters?.length) {\n      peerIds.push(...recentVoters.map((userId) => userId.toPeerId()));\n    }\n  }\n\n  const recentReactions = ((message as Message.message).reactions)?.recent_reactions;\n  if(recentReactions?.length) {\n    peerIds.push(...recentReactions.map((reaction) => getPeerId(reaction.peer_id)));\n  }\n\n  const action = (message as Message.messageService).action;\n  if(action) {\n    const userIds: UserId[] = [\n      ...((action as MessageAction.messageActionChatAddUser).users || []),\n      (action as MessageAction.messageActionChatDeleteUser).user_id,\n      (action as MessageAction.messageActionChatJoinedByLink).inviter_id\n    ];\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\n\n    const chatIds: ChatId[] = [\n      (action as MessageAction.messageActionChatMigrateTo).channel_id,\n      (action as MessageAction.messageActionChannelMigrateFrom).chat_id\n    ];\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\n  }\n\n  const recentRepliers = ((message as Message.message).replies)?.recent_repliers;\n  if(recentRepliers?.length) {\n    peerIds.push(...recentRepliers.map((reply) => getPeerId(reply)));\n  }\n\n  return new Set(peerIds.filter(Boolean));\n}\n","export default function defineNotNumerableProperties<T extends any>(obj: T, names: (keyof T)[]) {\n  // const perf = performance.now();\n  const props = {writable: true, configurable: true};\n  const out: {[name in keyof T]?: typeof props} = {};\n  names.forEach((name) => {\n    if(!obj.hasOwnProperty(name)) {\n      out[name] = props;\n    }\n  });\n  Object.defineProperties(obj, out);\n  // console.log('defineNotNumerableProperties time:', performance.now() - perf);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Dialog} from '../../appMessagesManager';\nimport type getDialogIndexKey from './getDialogIndexKey';\n\nexport default function setDialogIndex(\n  dialog: Dialog,\n  indexKey: ReturnType<typeof getDialogIndexKey>,\n  index: number\n) {\n  return dialog[indexKey] = index;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {Chat, DialogPeer, Message, MessageAction, MessageMedia, MessagesPeerDialogs, Update} from '../../layer';\nimport type {Dialog, MyMessage} from '../appManagers/appMessagesManager';\nimport tsNow from '../../helpers/tsNow';\nimport SearchIndex from '../searchIndex';\nimport {SliceEnd} from '../../helpers/slicedArray';\nimport {MyDialogFilter} from './filters';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, NULL_PEER_ID, REAL_FOLDERS, REAL_FOLDER_ID} from '../mtproto/mtproto_config';\nimport {NoneToVoidFunction} from '../../types';\nimport ctx from '../../environment/ctx';\nimport AppStorage from '../storage';\nimport type DATABASE_STATE from '../../config/databases/state';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport getServerMessageId from '../appManagers/utils/messageId/getServerMessageId';\nimport generateMessageId from '../appManagers/utils/messageId/generateMessageId';\nimport {AppManager} from '../appManagers/manager';\nimport getDialogIndexKey from '../appManagers/utils/dialogs/getDialogIndexKey';\nimport isObject from '../../helpers/object/isObject';\nimport getDialogIndex from '../appManagers/utils/dialogs/getDialogIndex';\nimport getPeerIdsFromMessage from '../appManagers/utils/messages/getPeerIdsFromMessage';\nimport {AppStoragesManager} from '../appManagers/appStoragesManager';\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\nimport setDialogIndex from '../appManagers/utils/dialogs/setDialogIndex';\n\nexport type FolderDialog = {\n  dialog: Dialog,\n  index: number\n};\n\nexport type Folder = {\n  dialogs: Dialog[],\n  id: number,\n  unreadMessagesCount: number,\n  unreadPeerIds: Set<PeerId>,\n  unreadUnmutedPeerIds: Set<PeerId>,\n  dispatchUnreadTimeout?: number\n};\n\nexport const GLOBAL_FOLDER_ID: REAL_FOLDER_ID = undefined;\n\n// let spentTime = 0;\nexport default class DialogsStorage extends AppManager {\n  private storage: AppStoragesManager['storages']['dialogs'];\n\n  private dialogs: {[peerId: PeerId]: Dialog};\n\n  private folders: {[folderId: number]: Folder} = {};\n\n  private allDialogsLoaded: {[folder_id: number]: boolean};\n  private dialogsOffsetDate: {[folder_id: number]: number};\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\n  private dialogsNum: number;\n\n  private dialogsIndex: SearchIndex<PeerId>;\n\n  private cachedResults: {\n    query: string,\n    count: number,\n    dialogs: Dialog[],\n    folderId: number\n  };\n\n  protected after() {\n    this.clear(true);\n\n    this.rootScope.addEventListener('language_change', () => {\n      const peerId = this.appUsersManager.getSelf().id.toPeerId(false);\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        const peerText = this.appPeersManager.getPeerSearchText(peerId);\n        this.dialogsIndex.indexObject(peerId, peerText);\n      }\n    });\n\n    const onFilterUpdate = (filter: MyDialogFilter) => {\n      const dialogs = this.getCachedDialogs(false);\n      for(let i = 0; i < dialogs.length; ++i) {\n        this.processDialogForFilter(dialogs[i], filter);\n      }\n    };\n\n    this.rootScope.addEventListener('filter_order', () => {\n      const dialogs = this.getCachedDialogs(false);\n      // const indexKeys: ReturnType<DialogsStorage['getDialogIndexKey']>[] = [];\n      for(const filterId in this.folders) {\n        if(+filterId > 1) {\n          delete this.folders[filterId];\n        }\n\n        // indexKeys.push(this.getDialogIndexKey(+filterId));\n      }\n\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        // for(const indexKey of indexKeys) {\n        //   delete dialog[indexKey];\n        // }\n\n        this.processDialogForFilters(dialog);\n      }\n    });\n\n    this.rootScope.addEventListener('filter_update', onFilterUpdate);\n    this.rootScope.addEventListener('filter_new', onFilterUpdate);\n\n    this.rootScope.addEventListener('filter_delete', (filter) => {\n      const dialogs = this.getCachedDialogs(false);\n\n      const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        delete dialog[indexKey];\n      }\n\n      delete this.folders[filter.id];\n    });\n\n    this.rootScope.addEventListener('dialog_notify_settings', (dialog) => {\n      this.processDialogForFilters(dialog);\n      this.prepareDialogUnreadCountModifying(dialog)();\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const chat: Chat.chat = this.appChatsManager.getChat(chatId);\n\n      const peerId = chatId.toPeerId(true);\n      if(chat.pFlags.left && this.getDialogOnly(peerId)) {\n        this.dropDialogOnDeletion(peerId);\n      }\n    });\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateFolderPeers: this.onUpdateFolderPeers,\n\n      updateDialogPinned: this.onUpdateDialogPinned,\n\n      updatePinnedDialogs: this.onUpdatePinnedDialogs\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('dialogs')\n    ]).then(([state, {results: dialogs, storage}]) => {\n      this.storage = storage;\n      this.dialogs = this.storage.getCache();\n\n      for(const folderId of REAL_FOLDERS) {\n        const order = state.pinnedOrders[folderId];\n        if(!order) {\n          continue;\n        }\n\n        const _order = this.pinnedOrders[folderId];\n        _order.splice(0, _order.length, ...order);\n      }\n\n      if(dialogs.length) {\n        AppStorage.freezeSaving<typeof DATABASE_STATE>(this.setDialogsFromState.bind(this, dialogs), ['chats', 'dialogs', 'messages', 'users']);\n      }\n\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\n\n      if(dialogs.length) {\n        this.appDraftsManager.addMissedDialogs();\n      }\n    });\n  }\n\n  private setDialogsFromState(dialogs: Dialog[]) {\n    for(let i = 0, length = dialogs.length; i < length; ++i) {\n      const dialog = dialogs[i];\n      if(!dialog) {\n        continue;\n      }\n\n      // if(dialog.peerId !== SERVICE_PEER_ID) {\n      dialog.top_message = getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\n      // }\n\n      if(dialog.topMessage) {\n        this.appMessagesManager.saveMessages([dialog.topMessage]);\n      }\n\n      for(let i = 0; i <= 21; ++i) {\n        const indexKey: ReturnType<typeof getDialogIndexKey> = `index_${i}` as any;\n        delete dialog[indexKey];\n      }\n      // delete dialog.indexes;\n\n      this.saveDialog(dialog, undefined, true);\n\n      // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\n      const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      if(!message) {\n        this.appMessagesManager.reloadConversation(dialog.peerId);\n      }\n    }\n  }\n\n  public isDialogsLoaded(folderId: number) {\n    return !!this.allDialogsLoaded[folderId];\n  }\n\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\n      this.allDialogsLoaded[FOLDER_ID_ALL] = loaded;\n      this.allDialogsLoaded[FOLDER_ID_ARCHIVE] = loaded;\n    } else {\n      this.allDialogsLoaded[folderId] = loaded;\n    }\n\n    if(Array.from(REAL_FOLDERS).every((folderId) => this.allDialogsLoaded[folderId])) {\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\n    }\n\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      this.storage.clear();\n\n      this.setDialogsLoaded(FOLDER_ID_ALL, false);\n      this.setDialogsLoaded(FOLDER_ID_ARCHIVE, false);\n      this.setDialogsLoaded(GLOBAL_FOLDER_ID, false);\n\n      for(const folderId of REAL_FOLDERS) {\n        this.resetPinnedOrder(folderId);\n      }\n      this.savePinnedOrders();\n    } else {\n      this.allDialogsLoaded = {};\n      this.pinnedOrders = {};\n      for(const folderId of REAL_FOLDERS) {\n        this.pinnedOrders[folderId] = [];\n      }\n    }\n\n    this.folders = {};\n    this.dialogsOffsetDate = {};\n    this.dialogsNum = 0;\n    this.dialogsIndex = new SearchIndex({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n    this.cachedResults = {\n      query: '',\n      count: 0,\n      dialogs: [],\n      folderId: 0\n    };\n  };\n\n  public handleDialogUnpinning(dialog: Dialog, folderId: number) {\n    delete dialog.pFlags.pinned;\n    indexOfAndSplice(this.pinnedOrders[folderId], dialog.peerId);\n    this.savePinnedOrders();\n  }\n\n  public savePinnedOrders() {\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n  }\n\n  public resetPinnedOrder(folderId: number) {\n    this.pinnedOrders[folderId].length = 0;\n  }\n\n  public getPinnedOrders(folderId: number) {\n    return this.pinnedOrders[folderId];\n  }\n\n  public getOffsetDate(folderId: number): number {\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\n      return Math.min(...Array.from(REAL_FOLDERS).sort((a, b) => a - b));\n    }\n\n    return offsetDate;\n  }\n\n  private generateFolder(id: number) {\n    const folder: Folder = {\n      dialogs: [],\n      id,\n      unreadMessagesCount: 0,\n      unreadPeerIds: new Set(),\n      unreadUnmutedPeerIds: new Set()\n    };\n\n    defineNotNumerableProperties(folder, ['dispatchUnreadTimeout']);\n\n    return folder;\n  }\n\n  public getFolder(id: number) {\n    return this.folders[id] ??= this.generateFolder(id);\n  }\n\n  public getFolderDialogs(id: number, skipMigrated = true): Dialog[] {\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\n      return this.getCachedDialogs(skipMigrated);\n    }\n\n    const folder = this.getFolder(id);\n    return skipMigrated ? folder.dialogs.filter((dialog) => dialog.migratedTo === undefined) : folder.dialogs;\n  }\n\n  public getNextDialog(currentPeerId: PeerId, next: boolean, filterId: number) {\n    const folder = this.getFolderDialogs(filterId, true);\n    let dialog: Dialog;\n    if(!currentPeerId) {\n      if(next) {\n        dialog = folder[0];\n      }\n    } else {\n      const idx = folder.findIndex((dialog) => dialog.peerId === currentPeerId);\n      if(idx !== -1) {\n        const nextIndex = next ? idx + 1 : idx - 1;\n        dialog = folder[nextIndex];\n      }\n    }\n\n    return dialog;\n  }\n\n  public getDialogIndexKeyByFilterId(filterId: number) {\n    if(REAL_FOLDERS.has(filterId)) return getDialogIndexKey(filterId as REAL_FOLDER_ID);\n    const filter = this.filtersStorage.getFilter(filterId);\n    return getDialogIndexKey(filter.localId);\n  }\n\n  public isPeerUnmuted(peerId: PeerId) {\n    return !this.appNotificationsManager.isPeerLocalMuted(peerId, true);\n  }\n\n  public getFolderUnreadCount(filterId: number) {\n    const folder = this.getFolder(filterId);\n    return {unreadUnmutedCount: folder.unreadUnmutedPeerIds.size, unreadCount: folder.unreadPeerIds.size};\n  }\n\n  public getCachedDialogs(skipMigrated?: boolean) {\n    const arrays = Array.from(REAL_FOLDERS).map((folderId) => this.getFolderDialogs(folderId, skipMigrated));\n    return [].concat(...arrays) as typeof arrays[0];\n  }\n\n  private setDialogIndexInFilter(dialog: Dialog, indexKey: ReturnType<typeof getDialogIndexKey>, filter: MyDialogFilter) {\n    let index: number;\n\n    const isRealFolder = REAL_FOLDERS.has(filter.id);\n    /* if(isRealFolder) {\n      // index = getDialogIndex(dialog, indexKey);\n      index = this.generateIndexForDialog(dialog, true);\n    } else  */if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n      const pinnedIndex = filter.pinnedPeerIds.indexOf(dialog.peerId);\n      if(pinnedIndex !== -1) {\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(filter.pinnedPeerIds.length - 1 - pinnedIndex), true);\n      } else if(dialog.pFlags?.pinned || isRealFolder) {\n        index = this.generateIndexForDialog(dialog, true, undefined, !isRealFolder);\n      } else {\n        index = getDialogIndex(dialog) ?? this.generateIndexForDialog(dialog, true);\n      }\n    }\n\n    // if(!dialog.hasOwnProperty(indexKey)) {\n    //   defineNotNumerableProperties(dialog, [indexKey]);\n    // }\n\n    return setDialogIndex(dialog, indexKey, index);\n  }\n\n  public getDialog(peerId: PeerId, folderId?: number, skipMigrated = true): [Dialog, number] | [] {\n    const folders: Dialog[][] = [];\n\n    if(folderId === undefined) {\n      folders.push(...Array.from(REAL_FOLDERS).map((folderId) => this.getFolder(folderId).dialogs));\n    } else {\n      folders.push(this.getFolderDialogs(folderId, false));\n    }\n\n    for(const folder of folders) {\n      let i = 0, skipped = 0;\n      for(let length = folder.length; i < length; ++i) {\n        const dialog = folder[i];\n        if(dialog.peerId === peerId) {\n          return [dialog, i - skipped];\n        } else if(skipMigrated && dialog.migratedTo !== undefined) {\n          ++skipped;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogs[peerId];\n  }\n\n  public getDialogIndex(peerId: PeerId | Dialog, indexKey: ReturnType<typeof getDialogIndexKey>) {\n    const dialog = isObject(peerId) ? peerId : this.getDialogOnly(peerId);\n    return getDialogIndex(dialog, indexKey);\n  }\n\n  /*\n  var date = Date.now() / 1000 | 0;\n  var m = date * 0x10000;\n\n  var k = (date + 1) * 0x10000;\n  k - m;\n  65536\n  */\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\n    if(date === undefined) {\n      date = tsNow(true) + this.timeManager.getServerTimeOffset();\n    }\n\n    return (date * 0x10000) + (isPinned ? 0 : ((++this.dialogsNum) & 0xFFFF));\n  }\n\n  public processDialogForFilters(dialog: Dialog) {\n    // let perf = performance.now();\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      this.processDialogForFilter(dialog, filter);\n    }\n    // spentTime += (performance.now() - perf);\n    // console.log('generate index time:', spentTime);\n  }\n\n  public processDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n    const folder = this.getFolder(filter.id);\n    const dialogs = folder.dialogs;\n\n    const wasIndex = dialogs.findIndex((d) => d.peerId === dialog.peerId);\n    const wasDialog = dialogs[wasIndex];\n    const wasDialogIndex = this.getDialogIndex(wasDialog, indexKey);\n\n    const newDialogIndex = this.setDialogIndexInFilter(dialog, indexKey, filter);\n\n    if(wasDialogIndex === newDialogIndex) {\n      return false;\n    }\n\n    if((!wasDialogIndex && newDialogIndex) || (wasIndex && !newDialogIndex)) {\n      this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, !!newDialogIndex);\n    }\n\n    if(wasIndex !== -1) {\n      dialogs.splice(wasIndex, 1);\n    }\n\n    if(newDialogIndex) {\n      insertInDescendSortedArray(dialogs, dialog, (dialog) => this.getDialogIndex(dialog, indexKey), -1);\n    }\n\n    return true;\n  }\n\n  public prepareDialogUnreadCountModifying(dialog: Dialog) {\n    const callbacks: NoneToVoidFunction[] = [\n      this.prepareFolderUnreadCountModifyingByDialog(dialog.folder_id, dialog)\n    ];\n\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n        callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog));\n      }\n    }\n\n    return () => callbacks.forEach((callback) => callback());\n  }\n\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: Dialog, toggle?: boolean) {\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n    const wasUnmuted = this.isPeerUnmuted(dialog.peerId);\n\n    if(toggle !== undefined) {\n      const addMessagesCount = toggle ? wasUnreadCount : -wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!wasUnreadCount, wasUnreadCount && wasUnmuted, dialog);\n      return;\n    }\n\n    return () => {\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n      const newUnmuted = this.isPeerUnmuted(dialog.peerId);\n\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!newUnreadCount, newUnreadCount && newUnmuted, dialog);\n    };\n  }\n\n  public modifyFolderUnreadCount(\n    folderId: number,\n    addMessagesCount: number,\n    toggleDialog: boolean,\n    toggleUnmuted: boolean,\n    dialog: Dialog\n  ) {\n    const folder = this.getFolder(folderId);\n    if(addMessagesCount) {\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\n    }\n\n    const {peerId} = dialog;\n    if(toggleDialog) {\n      folder.unreadPeerIds.add(peerId);\n    } else {\n      folder.unreadPeerIds.delete(peerId);\n    }\n\n    if(toggleUnmuted) {\n      folder.unreadUnmutedPeerIds.add(peerId);\n    } else {\n      folder.unreadUnmutedPeerIds.delete(peerId);\n    }\n\n    if(folder.dispatchUnreadTimeout === undefined) {\n      folder.dispatchUnreadTimeout = ctx.setTimeout(() => {\n        folder.dispatchUnreadTimeout = undefined;\n        const _folder = {...folder};\n        delete _folder.dialogs;\n        this.rootScope.dispatchEvent('folder_unread', _folder);\n      }, 0);\n    }\n  }\n\n  public generateIndexForDialog(dialog: Dialog, justReturn?: boolean, message?: MyMessage, noPinnedOrderUpdate?: boolean) {\n    if(!justReturn) {\n      return;\n    }\n\n    let topDate = 0, isPinned: boolean;\n    if(dialog.pFlags.pinned && !noPinnedOrderUpdate) {\n      topDate = this.generateDialogPinnedDate(dialog);\n      isPinned = true;\n    } else {\n      if(!message) {\n        message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      }\n\n      topDate = (message as Message.message)?.date || topDate;\n\n      const channelId = this.appPeersManager.isChannel(dialog.peerId) && dialog.peerId.toChatId();\n      if(channelId) {\n        const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n        if(!topDate || (channel.date && channel.date > topDate)) {\n          topDate = channel.date;\n        }\n      }\n\n      if(dialog.draft?._ === 'draftMessage' && dialog.draft.date > topDate) {\n        topDate = dialog.draft.date;\n      }\n    }\n\n    if(!topDate) {\n      topDate = tsNow(true);\n    }\n\n    const index = this.generateDialogIndex(topDate, isPinned);\n    if(justReturn) {\n      return index;\n    }\n\n    const indexKey = getDialogIndexKey(dialog.folder_id);\n    setDialogIndex(dialog, indexKey, index);\n  }\n\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\n  }\n\n  public generateDialogPinnedDate(dialog: Dialog) {\n    const order = this.pinnedOrders[dialog.folder_id];\n\n    let pinnedIndex = order.indexOf(dialog.peerId);\n    if(pinnedIndex === -1) {\n      order.unshift(dialog.peerId);\n      pinnedIndex = 0;\n      this.savePinnedOrders();\n    }\n\n    return this.generateDialogPinnedDateByIndex(order.length - 1 - pinnedIndex);\n  }\n\n  /* public generateDialog(peerId: PeerId) {\n    const dialog: Dialog = {\n      _: 'dialog',\n      pFlags: {},\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      top_message: 0,\n      read_inbox_max_id: 0,\n      read_outbox_max_id: 0,\n      unread_count: 0,\n      unread_mentions_count: 0,\n      notify_settings: {\n        _: 'peerNotifySettings',\n      },\n    };\n\n    return dialog;\n  } */\n\n  public setDialogToState(dialog: Dialog) {\n    const {peerId, pts} = dialog;\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const messagesStorage = this.appMessagesManager.getHistoryMessagesStorage(peerId);\n    const history = historyStorage.history.slice;\n    let incomingMessage: MyMessage;\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const mid = history[i];\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\n      if(message && !message.pFlags.is_outgoing/*  || peerId === SERVICE_PEER_ID */) {\n        incomingMessage = message;\n\n        const peerIds = getPeerIdsFromMessage(message);\n        this.peersStorage.requestPeersForKey(peerIds, `topMessage_${peerId}`);\n\n        break;\n      }\n    }\n\n    dialog.topMessage = incomingMessage;\n\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\n      dialog.unread_count = 0;\n    }\n\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\n    // CAN TOUCH NOW\n\n    if(peerId.isAnyChat() && pts) {\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\n      dialog.pts = newPts;\n    }\n\n    this.storage.set({\n      [peerId]: dialog\n    });\n\n    this.peersStorage.requestPeer(peerId, 'dialog');\n\n    /* for(let id in this.filtersStorage.filters) {\n      const filter = this.filtersStorage.filters[id];\n\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n\n      }\n    } */\n  }\n\n  public pushDialog(dialog: Dialog, offsetDate?: number, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const {folder_id, peerId} = dialog;\n    // const dialogs = this.getFolderDialogs(folder_id, false);\n    // const pos = dialogs.findIndex((d) => d.peerId === peerId);\n    // if(pos !== -1) {\n    //   dialogs.splice(pos, 1);\n    // }\n\n    // if(!this.dialogs[peerId]) {\n    this.dialogs[peerId] = dialog;\n\n    this.setDialogToState(dialog);\n    // }\n\n    if(offsetDate === undefined) {\n      offsetDate = this.getDialogOffsetDate(dialog);\n    }\n\n    this.processDialogForFilters(dialog);\n\n    if(offsetDate && !dialog.pFlags.pinned) {\n      if(saveGlobalOffset) {\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\n          this.dialogsOffsetDate[GLOBAL_FOLDER_ID] = offsetDate;\n        }\n      }\n\n      const savedOffsetDate = this.dialogsOffsetDate[folder_id];\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\n        // if(pos !== -1) {\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folder_id)) {\n          this.clearDialogFromState(dialog, true);\n          return;\n        }\n\n        this.dialogsOffsetDate[folder_id] = offsetDate;\n      }\n    }\n\n    // if(pos === -1) {\n    // this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\n    // }\n\n    // const indexKey = getDialogIndexKey(folder_id);\n    // /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, (dialog) => getDialogIndex(dialog, indexKey), -1);\n    /* if(pos !== -1 && pos !== newPos) {\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\n    } */\n  }\n\n  public dropDialog(peerId: PeerId): ReturnType<DialogsStorage['getDialog']> {\n    const foundDialog = this.getDialog(peerId, undefined, false);\n    const [dialog, index] = foundDialog;\n    if(dialog) {\n      delete this.dialogs[peerId];\n\n      const folder = this.getFolder(dialog.folder_id);\n      folder.dialogs.splice(index, 1);\n      const wasPinned = indexOfAndSplice(this.pinnedOrders[dialog.folder_id], peerId) !== undefined;\n\n      this.processDialogForFilters(dialog);\n\n      this.dialogsIndex.indexObject(peerId, '');\n\n      if(wasPinned) {\n        this.savePinnedOrders();\n      }\n\n      this.clearDialogFromState(dialog, false);\n    }\n\n    return foundDialog;\n  }\n\n  public clearDialogFromState(dialog: Dialog, keepLocal: boolean) {\n    const peerId = dialog.peerId;\n    this.peersStorage.requestPeersForKey([], `topMessage_${peerId}`);\n    this.peersStorage.releasePeer(peerId, 'dialog');\n    this.storage.delete(peerId, keepLocal);\n  }\n\n  public dropDialogWithEvent(peerId: PeerId) {\n    const dropped = this.dropDialog(peerId);\n    if(dropped.length) {\n      this.rootScope.dispatchEvent('dialog_drop', {peerId, dialog: dropped[0]});\n    }\n\n    return dropped;\n  }\n\n  /**\n   * leaving chat, leaving channel, deleting private dialog\n   */\n  public dropDialogOnDeletion(peerId: PeerId) {\n    this.dropDialogWithEvent(peerId);\n    this.rootScope.dispatchEvent('peer_deleted', peerId);\n  }\n\n  public applyDialogs(dialogsResult: MessagesPeerDialogs.messagesPeerDialogs) {\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\n\n    // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\n    forEachReverse(dialogsResult.dialogs, (dialog, idx) => {\n      if(dialog._ === 'dialogFolder') {\n        dialogsResult.dialogs.splice(idx, 1);\n      }\n    });\n\n    this.appUsersManager.saveApiUsers(dialogsResult.users);\n    this.appChatsManager.saveApiChats(dialogsResult.chats);\n    this.appMessagesManager.saveMessages(dialogsResult.messages);\n\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\n\n    const updatedDialogs: Map<PeerId, Dialog> = new Map();\n    (dialogsResult.dialogs as Dialog[]).forEach((dialog) => {\n      const peerId = this.appPeersManager.getPeerId(dialog.peer);\n      let topMessage = dialog.top_message;\n\n      const topPendingMessage = this.appMessagesManager.pendingTopMsgs[peerId];\n      if(topPendingMessage) {\n        if(!topMessage ||\n          (this.appMessagesManager.getMessageByPeer(peerId, topPendingMessage) as MyMessage)?.date > (this.appMessagesManager.getMessageByPeer(peerId, topMessage) as MyMessage)?.date) {\n          dialog.top_message = topMessage = topPendingMessage;\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMessage;\n        }\n      }\n\n      /* const d = Object.assign({}, dialog);\n      if(peerId === 239602833) {\n        this.log.error('applyConversation lun', dialog, d);\n      } */\n\n      if(topMessage || dialog.draft?._ === 'draftMessage') {\n        this.saveDialog(dialog);\n        updatedDialogs.set(peerId, dialog);\n      } else {\n        this.dropDialogWithEvent(peerId);\n      }\n\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n      if(updates !== undefined) {\n        for(const update of updates) {\n          updates.delete(update);\n          this.apiUpdatesManager.saveUpdate(update);\n        }\n\n        if(!updates.size) {\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n        }\n      }\n    });\n\n    if(updatedDialogs.size) {\n      this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n    }\n  }\n\n  private getDialogOffsetDate(dialog: Dialog) {\n    const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n    return message?.date || 0;\n  }\n\n  /**\n   * Won't save migrated from peer, forbidden peers, left and kicked\n   */\n  public saveDialog(dialog: Dialog, folderId = dialog.folder_id ?? FOLDER_ID_ALL, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const peerId = this.appPeersManager.getPeerId(dialog.peer);\n    if(!peerId) {\n      console.error('saveConversation no peerId???', dialog, folderId);\n      return;\n    }\n\n    if(dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\n      console.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\n    }\n\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : NULL_PEER_ID;\n\n    if(peerId.isAnyChat()) {\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\n      // ! chatForbidden stays for chat where you're kicked\n      if(\n        chat._ === 'channelForbidden' ||\n        // || chat._ === 'chatForbidden'\n        (chat as Chat.chat).pFlags.left\n        // || (chat as any).pFlags.kicked\n      ) {\n        return;\n      }\n    }\n\n    const peerText = this.appPeersManager.getPeerSearchText(peerId);\n    this.dialogsIndex.indexObject(peerId, peerText);\n\n    const wasDialogBefore = this.getDialogOnly(peerId);\n\n    let mid: number, message: MyMessage;\n    if(dialog.top_message) {\n      mid = generateMessageId(dialog.top_message);// dialog.top_message;\n\n      // preserve outgoing message\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\n        mid = wasDialogBefore.top_message;\n      }\n\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\n    } else {\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\n      message = {\n        _: 'message',\n        id: mid,\n        mid,\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        deleted: true,\n        pFlags: {out: true},\n        date: 0,\n        message: ''\n      };\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\n    }\n\n    if(!message?.pFlags) {\n      this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\n    }\n\n    if(!channelId && peerId.isAnyChat()) {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n        const migratedToPeer = this.appPeersManager.getPeerId(chat.migrated_to);\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\n        dialog.migratedTo = migratedToPeer;\n        // return;\n      }\n    }\n\n    dialog.top_message = mid;\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\n    dialog.read_inbox_max_id = generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id);\n\n    if(dialog.folder_id === undefined) {\n      if(dialog._ === 'dialog') {\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\n        dialog.folder_id = wasDialogBefore ? wasDialogBefore.folder_id : folderId;\n      }/*  else if(dialog._ === 'dialogFolder') {\n        dialog.folder_id = dialog.folder.id;\n      } */\n    }\n\n    dialog.draft = this.appDraftsManager.saveDraft(peerId, 0, dialog.draft);\n    dialog.peerId = peerId;\n    // dialog.indexes ??= {} as any;\n\n    // if(dialog.peerId === -) {\n    //   debugger;\n    // }\n\n    // Because we saved message without dialog present\n    if(message && message.pFlags.is_outgoing) {\n      const isOut = message.pFlags.out;\n      if(mid > dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n\n        if(!dialog.unread_count && !isOut) {\n          ++dialog.unread_count;\n        }\n      } else {\n        delete message.pFlags.unread;\n      }\n    }\n\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const slice = historyStorage.history.slice;\n    /* if(historyStorage === undefined) { // warning\n      historyStorage.history.push(mid);\n    } else  */if(!slice.length) {\n      historyStorage.history.unshift(mid);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    } else if(!slice.isEnd(SliceEnd.Bottom)) { // * this will probably never happen, however, if it does, then it will fix slice with top_message\n      const slice = historyStorage.history.insertSlice([mid]);\n      slice.setEnd(SliceEnd.Bottom);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    historyStorage.maxId = mid;\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\n\n    this.appNotificationsManager.savePeerSettings({\n      peerId,\n      settings: dialog.notify_settings\n    });\n\n    if(channelId && dialog.pts) {\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\n    }\n\n    this.generateIndexForDialog(dialog);\n\n    if(wasDialogBefore) {\n      // fix unread count\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(wasDialogBefore);\n      safeReplaceObject(wasDialogBefore, dialog);\n      releaseUnreadCount();\n    }\n\n    this.pushDialog(dialog, message?.date, ignoreOffsetDate, saveGlobalOffset);\n  }\n\n  public getDialogs(query = '', offsetIndex?: number, limit = 20, folderId: number = 0, skipMigrated = false): {\n    dialogs: Dialog[],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  } | Promise<{\n    dialogs: Dialog[],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  }> {\n    if(!REAL_FOLDERS.has(folderId)) {\n      const promises: Promise<any>[] = [];\n\n      const fillContactsResult = this.appUsersManager.fillContacts();\n      if(!fillContactsResult.cached) {\n        promises.push(fillContactsResult.promise);\n      }\n\n      const reloadMissingDialogsPromise = this.filtersStorage.reloadMissingPeerIds(folderId);\n      if(reloadMissingDialogsPromise) {\n        promises.push(reloadMissingDialogsPromise);\n      }\n\n      if(promises.length) {\n        return Promise.all(promises).then(() => {\n          return this.getDialogs(query, offsetIndex, limit, folderId, skipMigrated);\n        });\n      }\n    }\n\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\n    const realFolderId: REAL_FOLDER_ID = !REAL_FOLDERS.has(folderId) || this.getOffsetDate(folderId) ? GLOBAL_FOLDER_ID : folderId as REAL_FOLDER_ID;\n    let curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n\n    const indexKey = this.getDialogIndexKeyByFilterId(folderId);\n\n    if(query) {\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== folderId) {\n        this.cachedResults.query = query;\n        this.cachedResults.folderId = folderId;\n\n        const results = this.dialogsIndex.search(query);\n\n        const dialogs: Dialog[] = [];\n        for(const peerId in this.dialogs) {\n          const dialog = this.dialogs[peerId];\n          if(results.has(dialog.peerId) && dialog.folder_id === folderId) {\n            dialogs.push(dialog);\n          }\n        }\n\n        dialogs.sort((d1, d2) => this.getDialogIndex(d2, indexKey) - this.getDialogIndex(d1, indexKey));\n        this.cachedResults.dialogs = dialogs;\n        this.cachedResults.count = dialogs.length;\n      }\n\n      curDialogStorage = this.cachedResults.dialogs;\n    } else {\n      this.cachedResults.query = '';\n    }\n\n    let offset = 0;\n    if(offsetIndex > 0) {\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\n        if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n          break;\n        }\n      }\n    }\n\n    const loadedAll = this.isDialogsLoaded(realFolderId);\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\n    if(query || loadedAll || isEnoughDialogs) {\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: loadedAll ? curDialogStorage.length : null,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        isEnd: (query || loadedAll) && (offset + limit) >= curDialogStorage.length\n      };\n    }\n\n    return this.appMessagesManager.getTopMessages(limit, realFolderId).then((result) => {\n      // const curDialogStorage = this[folderId];\n      if(skipMigrated) {\n        curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n      }\n\n      offset = 0;\n      if(offsetIndex > 0) {\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\n          if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n            break;\n          }\n        }\n      }\n\n      // this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\n\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: result.count === undefined ? curDialogStorage.length : result.count,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\n        isEnd: result.isEnd\n      };\n    });\n  }\n\n  // only 0 and 1 folders\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\n    // this.log('updateFolderPeers', update);\n    const peers = update.folder_peers;\n\n    peers.forEach((folderPeer) => {\n      const {folder_id, peer} = folderPeer;\n\n      const peerId = this.appPeersManager.getPeerId(peer);\n      const dialog = this.dropDialog(peerId)[0];\n      if(dialog) {\n        if(dialog.pFlags?.pinned) {\n          this.handleDialogUnpinning(dialog, folder_id);\n        }\n\n        dialog.folder_id = folder_id as REAL_FOLDER_ID;\n        this.generateIndexForDialog(dialog);\n        this.pushDialog(dialog); // need for simultaneously updatePinnedDialogs\n      }\n\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n    });\n  };\n\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\n    // this.log('updateDialogPinned', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\n    /* if(update.folder_id > 1) {\n      const filter = this.filtersStorage.filters[update.folder_id];\n      if(update.pFlags.pinned) {\n        filter.pinned_peers.unshift(peerId);\n      } else {\n        filter.pinned_peers.findAndSplice((p) => p === peerId);\n      }\n    } */\n\n    if(dialog) {\n      if(!update.pFlags.pinned) {\n        this.handleDialogUnpinning(dialog, folderId);\n      } else { // means set\n        dialog.pFlags.pinned = true;\n      }\n\n      this.generateIndexForDialog(dialog);\n    }\n\n    this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n  };\n\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\n\n    const handleOrder = (order: PeerId[]) => {\n      this.resetPinnedOrder(folderId);\n      this.pinnedOrders[folderId].push(...order);\n      this.savePinnedOrders();\n      order.reverse(); // index must be higher\n      order.forEach((peerId) => {\n        newPinned[peerId] = true;\n\n        const dialog = this.getDialogOnly(peerId);\n        this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n        if(!dialog) {\n          return;\n        }\n\n        dialog.pFlags.pinned = true;\n        this.generateIndexForDialog(dialog);\n      });\n\n      const dialogs = this.getFolderDialogs(folderId, false);\n      for(const dialog of dialogs) {\n        if(!dialog.pFlags.pinned) {\n          break;\n        }\n\n        const peerId = dialog.peerId;\n        if(!newPinned[peerId]) {\n          this.appMessagesManager.scheduleHandleNewDialogs(peerId);\n        }\n      }\n    };\n\n    // this.log('updatePinnedDialogs', update);\n    const newPinned: {[peerId: PeerId]: true} = {};\n    if(!update.order) {\n      this.apiManager.invokeApi('messages.getPinnedDialogs', {\n        folder_id: folderId\n      }).then((dialogsResult) => {\n        // * for test reordering and rendering\n        // dialogsResult.dialogs.reverse();\n\n        this.applyDialogs(dialogsResult);\n\n        handleOrder(dialogsResult.dialogs.map((d) => d.peerId));\n\n        /* dialogsResult.dialogs.forEach((dialog) => {\n          newPinned[dialog.peerId] = true;\n        });\n\n        this.dialogsStorage.getFolder(folderId).forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(dialog.pFlags.pinned && !newPinned[peerId]) {\n            this.newDialogsToHandle[peerId] = {reload: true};\n            this.scheduleHandleNewDialogs();\n          }\n        }); */\n      });\n\n      return;\n    }\n\n    // this.log('before order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    handleOrder(update.order.map((peer) => this.appPeersManager.getPeerId((peer as DialogPeer.dialogPeer).peer)));\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {DialogFilter, Update} from '../../layer';\nimport type {Dialog} from '../appManagers/appMessagesManager';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport copy from '../../helpers/object/copy';\nimport {AppManager} from '../appManagers/manager';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport assumeType from '../../helpers/assumeType';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, REAL_FOLDERS, REAL_FOLDER_ID, START_LOCAL_ID} from '../mtproto/mtproto_config';\nimport makeError from '../../helpers/makeError';\n\nexport type MyDialogFilter = DialogFilter.dialogFilter;\n\nconst convertment = [\n  ['pinned_peers', 'pinnedPeerIds'],\n  ['exclude_peers', 'excludePeerIds'],\n  ['include_peers', 'includePeerIds']\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\n\nconst PREPENDED_FILTERS = REAL_FOLDERS.size;\n\nconst LOCAL_FILTER: MyDialogFilter = {\n  _: 'dialogFilter',\n  pFlags: {},\n  flags: 0,\n  id: 0,\n  title: '',\n  exclude_peers: [],\n  include_peers: [],\n  pinned_peers: [],\n  excludePeerIds: [],\n  includePeerIds: [],\n  pinnedPeerIds: []\n};\n\nexport default class FiltersStorage extends AppManager {\n  private filters: {[filterId: string]: MyDialogFilter};\n  private filtersArr: Array<MyDialogFilter>;\n  private localFilters: {[filterId: string]: MyDialogFilter};\n  private localId: number;\n  private reloadedPeerIds: Set<PeerId>;\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateDialogFilter: this.onUpdateDialogFilter,\n\n      updateDialogFilters: this.onUpdateDialogFilters,\n\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\n    });\n\n    // delete peers when dialog is being dropped\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        let modified = false;\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach((arr) => {\n          forEachReverse(arr, (inputPeer, idx) => {\n            if(getPeerId(inputPeer) === peerId) {\n              arr.splice(idx, 1);\n              modified = true;\n            }\n          });\n        });\n\n        if(modified) {\n          this.saveDialogFilter(filter, true);\n        }\n      }\n    }); */\n\n    this.rootScope.addEventListener('premium_toggle', () => {\n      this.onUpdateDialogFilters({_: 'updateDialogFilters'});\n    });\n\n    return this.appStateManager.getState().then((state) => {\n      const filtersArr = this.prependFilters(state.filtersArr);\n      filtersArr.map((filter) => {\n        this.saveDialogFilter(filter, false, true);\n      });\n    });\n  }\n\n  /**\n   * ! use it only with saving\n   */\n  private prependFilters(filters: DialogFilter[]) {\n    filters = filters.slice();\n\n    const allChatsFilter = this.localFilters[FOLDER_ID_ALL];\n    const archiveFilter = this.localFilters[FOLDER_ID_ARCHIVE];\n\n    const allChatsFilterIndex = filters.findIndex((filter) => filter._ === 'dialogFilterDefault' || filter.id === FOLDER_ID_ALL);\n    if(allChatsFilterIndex !== -1) filters[allChatsFilterIndex] = allChatsFilter;\n    else filters.unshift(allChatsFilter);\n\n    findAndSplice(filters, (filter) => (filter as MyDialogFilter).id === FOLDER_ID_ARCHIVE);\n    filters.splice(/* 1 */filters[0] === allChatsFilter ? 1 : 0, 0, archiveFilter);\n\n    this.localId = START_LOCAL_ID;\n    filters.forEach((filter) => {\n      delete filter.localId;\n    });\n\n    return filters;\n  }\n\n  private generateLocalFilter(id: REAL_FOLDER_ID) {\n    const filter: MyDialogFilter = {...copy(LOCAL_FILTER), id};\n    if(id === FOLDER_ID_ALL) {\n      filter.pFlags.exclude_archived = true;\n    } else if(id === FOLDER_ID_ARCHIVE) {\n      filter.pFlags.exclude_unarchived = true;\n    }\n\n    if(REAL_FOLDERS.has(id)) {\n      filter.pinnedPeerIds = this.dialogsStorage.getPinnedOrders(id);\n    }\n\n    return filter;\n  }\n\n  // private getLocalFilter(id: number) {\n  //   return this.filters[id] ??= this.generateLocalFilter(id);\n  // }\n\n  public clear = (init?: boolean) => {\n    if(!init) {\n      // safeReplaceObject(this.filters, {});\n      this.reloadedPeerIds.clear();\n      this.clearFilters();\n    } else {\n      this.filters = {};\n      this.filtersArr = [];\n      this.reloadedPeerIds = new Set();\n\n      this.localFilters = {};\n      for(const filterId of REAL_FOLDERS) {\n        this.localFilters[filterId] = this.generateLocalFilter(filterId as REAL_FOLDER_ID);\n      }\n    }\n\n    this.localId = START_LOCAL_ID;\n  };\n\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\n    if(update.filter) {\n      this.saveDialogFilter(update.filter as any);\n    } else if(this.filters[update.id]) { // Папка удалена\n      // this.getDialogFilters(true);\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\n      delete this.filters[update.id];\n      findAndSplice(this.filtersArr, (filter) => (filter as DialogFilter.dialogFilter).id === update.id);\n    }\n\n    this.pushToState();\n  };\n\n  private onUpdateDialogFilters = (update: Update.updateDialogFilters) => {\n    // console.warn('updateDialogFilters', update);\n\n    const oldFilters = copy(this.filters);\n\n    this.getDialogFilters(true).then((filters) => {\n      for(const _filterId in oldFilters) {\n        const filterId = +_filterId;\n        if(!filters.find((filter) => filter.id === filterId)) { // * deleted\n          this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\n        }\n      }\n\n      this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map((filter) => filter.id)});\n    });\n  };\n\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\n    // console.log('updateDialogFilterOrder', update);\n\n    const order = update.order.slice();\n    if(!order.includes(FOLDER_ID_ARCHIVE)) {\n      order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, FOLDER_ID_ARCHIVE);\n    }\n\n    this.localId = START_LOCAL_ID;\n    order.forEach((filterId) => {\n      const filter = this.filters[filterId];\n      delete filter.localId;\n      this.setLocalId(filter);\n    });\n\n    this.rootScope.dispatchEvent('filter_order', order);\n\n    this.pushToState();\n  };\n\n  private pushToState() {\n    this.appStateManager.pushToState('filtersArr', this.filtersArr);\n  }\n\n  public testDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    if(REAL_FOLDERS.has(filter.id)) {\n      return dialog.folder_id === filter.id;\n    }\n\n    const peerId = dialog.peerId;\n\n    // * check whether dialog exists\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\n      return false;\n    }\n\n    // exclude_peers\n    if(filter.excludePeerIds.includes(peerId)) {\n      return false;\n    }\n\n    // include_peers\n    if(filter.includePeerIds.includes(peerId)) {\n      return true;\n    }\n\n    const pFlags = filter.pFlags;\n\n    // exclude_archived\n    if(pFlags.exclude_archived && dialog.folder_id === FOLDER_ID_ARCHIVE) {\n      return false;\n    }\n\n    // exclude_read\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\n      return false;\n    }\n\n    // exclude_muted\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted(peerId) && !(dialog.unread_mentions_count && dialog.unread_count)) {\n      return false;\n    }\n\n    if(this.appPeersManager.isAnyChat(peerId)) {\n      // broadcasts\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\n        return true;\n      }\n\n      // groups\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\n        return true;\n      }\n    } else {\n      const userId = peerId.toUserId();\n\n      // bots\n      if(this.appUsersManager.isBot(userId)) {\n        return !!pFlags.bots;\n      }\n\n      // non_contacts\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n\n      // contacts\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\n  }\n\n  public getFilter(filterId: number) {\n    return this.filters[filterId];\n  }\n\n  public getFilters() {\n    return this.filters;\n  }\n\n  public clearFilters() {\n    const filters = this.getFilters();\n    for(const filterId in filters) { // delete filters\n      if(REAL_FOLDERS.has(+filterId)) {\n        continue;\n      }\n\n      this.onUpdateDialogFilter({\n        _: 'updateDialogFilter',\n        id: +filterId\n      });\n    }\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId: number) {\n    const filter = this.filters[filterId];\n\n    const index = filter.pinnedPeerIds.indexOf(peerId);\n    const wasPinned = index !== -1;\n\n    if(wasPinned) {\n      filter.pinned_peers.splice(index, 1);\n      filter.pinnedPeerIds.splice(index, 1);\n    }\n\n    if(!wasPinned) {\n      if(filter.pinned_peers.length >= (await this.apiManager.getConfig()).pinned_infolder_count_max) {\n        return Promise.reject(makeError('PINNED_DIALOGS_TOO_MUCH'));\n      }\n\n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\n      filter.pinnedPeerIds.unshift(peerId);\n    }\n\n    return this.updateDialogFilter(filter);\n  }\n\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\n    const maxId = Math.max(1, ...Object.keys(this.filters).map((i) => +i));\n    filter = copy(filter);\n    filter.id = maxId + 1;\n    return this.updateDialogFilter(filter, undefined, prepend);\n  }\n\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\n    const flags = remove ? 0 : 1;\n\n    return this.apiManager.invokeApi('messages.updateDialogFilter', {\n      flags,\n      id: filter.id,\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\n    }).then((bool: boolean) => { // возможно нужна проверка и откат, если результат не ТРУ\n      // console.log('updateDialogFilter bool:', bool);\n\n      if(bool) {\n        /* if(!this.filters[filter.id]) {\n          this.saveDialogFilter(filter);\n        }\n\n        rootScope.$broadcast('filter_update', filter); */\n\n        this.onUpdateDialogFilter({\n          _: 'updateDialogFilter',\n          id: filter.id,\n          filter: remove ? undefined : filter as any\n        });\n\n        if(prepend) {\n          const f: MyDialogFilter[] = [];\n          for(const filterId in this.filters) {\n            const filter = this.filters[filterId];\n            ++filter.localId;\n            f.push(filter);\n          }\n\n          filter.localId = START_LOCAL_ID;\n\n          const order = f.sort((a, b) => a.localId - b.localId).map((filter) => filter.id);\n          this.onUpdateDialogFilterOrder({\n            _: 'updateDialogFilterOrder',\n            order\n          });\n        }\n      }\n\n      return bool;\n    });\n  }\n\n  public getOutputDialogFilter(filter: MyDialogFilter) {\n    const c = copy(filter);\n    /* convertment.forEach(([from, to]) => {\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\n    }); */\n\n    this.filterIncludedPinnedPeers(filter);\n\n    return c;\n  }\n\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\n      if(filter.pinnedPeerIds.includes(peerId)) {\n        filter.include_peers.splice(idx, 1);\n        filter.includePeerIds.splice(idx, 1);\n      }\n    });\n  }\n\n  // private spliceMissingPeerIds(filterId: number, type: ArgumentTypes<FiltersStorage['reloadMissingPeerIds']>[1], missingPeerIds: PeerId[]) {\n  //   const filter = this.getFilter(filterId);\n  //   const peers = filter && filter[type];\n  //   if(!peers?.length) {\n  //     return;\n  //   }\n\n  //   let spliced = false;\n  //   missingPeerIds.forEach((peerId) => {\n  //     const inputPeer = findAndSplice(peers, (inputPeer) => getPeerId(inputPeer) === peerId);\n  //     if(inputPeer) {\n  //       spliced = true;\n  //     }\n  //   });\n\n  //   if(spliced) {\n  //     this.onUpdateDialogFilter({\n  //       _: 'updateDialogFilter',\n  //       id: filterId,\n  //       filter\n  //     });\n  //   }\n  // }\n\n  public reloadMissingPeerIds(filterId: number, type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers') {\n    const filter = this.getFilter(filterId);\n    const peers = filter && filter[type];\n    if(!peers?.length) {\n      return;\n    }\n\n    // const missingPeerIds: PeerId[] = [];\n    const reloadDialogs = peers.filter((inputPeer) => {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      const isAlreadyReloaded = this.reloadedPeerIds.has(peerId);\n      const dialog = this.appMessagesManager.getDialogOnly(peerId);\n      // if(isAlreadyReloaded && !dialog) {\n      //   missingPeerIds.push(peerId);\n      // }\n\n      const reload = !isAlreadyReloaded && !dialog;\n      return reload;\n    });\n\n    if(!reloadDialogs.length) {\n      // if(missingPeerIds.length) {\n      //   this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n      // }\n\n      return;\n    }\n\n    const reloadPromises = reloadDialogs.map((inputPeer) => {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      const promise = this.appMessagesManager.reloadConversation(inputPeer)\n      .then((dialog) => {\n        this.reloadedPeerIds.add(peerId);\n\n        return dialog ? undefined : peerId;\n      });\n\n      return promise;\n    });\n\n    const reloadPromise = Promise.all(reloadPromises).then((missingPeerIds) => {\n      missingPeerIds = missingPeerIds.filter(Boolean);\n      if(!missingPeerIds.length) {\n        return;\n      }\n\n      // this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n    });\n\n    return reloadPromise;\n  }\n\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\n    const keys = Object.keys(this.filters);\n    if(keys.length > PREPENDED_FILTERS && !overwrite) {\n      return keys.map((filterId) => this.filters[filterId]).sort((a, b) => a.localId - b.localId);\n    }\n\n    const filters = await this.apiManager.invokeApiSingle('messages.getDialogFilters');\n    const prepended = this.prependFilters(filters);\n    return prepended.map((filter) => this.saveDialogFilter(filter, overwrite)).filter(Boolean);\n  }\n\n  public getSuggestedDialogsFilters() {\n    return this.apiManager.invokeApi('messages.getSuggestedDialogFilters');\n  }\n\n  public saveDialogFilter(filter: DialogFilter, update = true, silent?: boolean) {\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\n\n    if(filter._ === 'dialogFilterDefault') {\n      filter = this.localFilters[FOLDER_ID_ALL];\n    }\n\n    assumeType<MyDialogFilter>(filter);\n    if(!REAL_FOLDERS.has(filter.id)) {\n      convertment.forEach(([from, to]) => {\n        assumeType<MyDialogFilter>(filter);\n        filter[to] = filter[from].map((peer) => this.appPeersManager.getPeerId(peer));\n      });\n\n      this.filterIncludedPinnedPeers(filter);\n\n      filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\n      filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\n    }\n\n    const oldFilter = this.filters[filter.id];\n    if(oldFilter) {\n      Object.assign(oldFilter, filter);\n    } else {\n      this.filters[filter.id] = filter;\n    }\n\n    this.setLocalId(filter);\n\n    if(!silent) {\n      if(update) {\n        this.rootScope.dispatchEvent('filter_update', filter);\n      } else if(!oldFilter) {\n        this.rootScope.dispatchEvent('filter_new', filter);\n      }\n    }\n\n    return filter;\n  }\n\n  private setLocalId(filter: MyDialogFilter) {\n    if(filter.localId !== undefined) {\n      if(filter.localId >= this.localId) {\n        this.localId = filter.localId + 1;\n      }\n    } else {\n      filter.localId = this.localId++ as MyDialogFilter['localId'];\n      findAndSplice(this.filtersArr, (_filter) => _filter.id === filter.id);\n      this.filtersArr.push(filter);\n      this.pushToState();\n    }\n  }\n\n  public async isFilterIdAvailable(filterId: number) {\n    if(REAL_FOLDERS.has(filterId)) {\n      return true;\n    }\n\n    const isPremium = this.rootScope.premium;\n    let isFolderAvailable = isPremium;\n    if(!isPremium) {\n      const config = await this.apiManager.getAppConfig();\n      const limit = config.dialog_filters_limit_default;\n      isFolderAvailable = this.filtersArr.filter((filter) => !REAL_FOLDERS.has(filter.id)).slice(0, limit).some((filter) => filter.id === filterId);\n    }\n\n    return isFolderAvailable;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function applyMixins(derivedCtor: any, constructors: any[]) {\r\n  // const callbacks: Array<(...args: any[]) => any> = [];\r\n\r\n  constructors.forEach((baseCtor) => {\r\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n      const value: PropertyDescriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null);\r\n      /* if(name === '_constructor') {\r\n        callbacks.push(value.value);\r\n        return;\r\n      } else  */if(name === 'constructor') {\r\n        return;\r\n      }\r\n\r\n      Object.defineProperty(\r\n        derivedCtor.prototype,\r\n        name,\r\n        value\r\n      );\r\n    });\r\n  });\r\n\r\n  // if(callbacks.length) {\r\n  //   function c(...args: any[]): any {\r\n  //     callbacks.forEach((cb, idx) => {\r\n  //       // @ts-ignore\r\n  //       cb.apply(this, args[idx] || []);\r\n  //     });\r\n  //   };\r\n\r\n  //   Object.defineProperty(derivedCtor.prototype, 'superConstructor', {\r\n  //     configurable: true,\r\n  //     enumerable: true,\r\n  //     value: c,\r\n  //     writable: true\r\n  //   });\r\n  // }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport DEBUG from '../../config/debug';\nimport {ConstructorDeclMap, Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates} from '../../layer';\nimport {logger, LogTypes} from '../logger';\nimport assumeType from '../../helpers/assumeType';\nimport App from '../../config/app';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport {AppManager} from './manager';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport ctx from '../../environment/ctx';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport applyMixins from '../../helpers/applyMixins';\n\ntype UpdatesState = {\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\n  syncPending: {\n    seqAwaiting?: number,\n    ptsAwaiting?: true,\n    timeout: number\n  },\n  syncLoading: Promise<void>,\n\n  seq?: number,\n  pts?: number,\n  date?: number,\n  lastPtsUpdateTime?: number\n};\n\nconst SYNC_DELAY = 6;\n\nclass ApiUpdatesManager {\n  public updatesState: UpdatesState = {\n    pendingPtsUpdates: [],\n    pendingSeqUpdates: {},\n    syncPending: null,\n    syncLoading: null\n  };\n\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\n  private attached = false;\n\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\n  private debug = DEBUG;\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  private setProxy() {\n    const self = this;\n    this.updatesState = new Proxy(this.updatesState, {\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\n        // @ts-ignore\n        target[key] = value;\n        self.saveUpdatesState();\n        return true;\n      }\n    });\n  }\n\n  public saveUpdatesState() {\n    const us = this.updatesState;\n    this.appStateManager.pushToState('updates', {\n      seq: us.seq,\n      pts: us.pts,\n      date: us.date\n    });\n  }\n\n  private popPendingSeqUpdate() {\n    const state = this.updatesState;\n    const nextSeq = state.seq + 1;\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\n    if(!pendingUpdatesData) {\n      return false;\n    }\n\n    const updates = pendingUpdatesData.updates;\n    for(let i = 0, length = updates.length; i < length; ++i) {\n      this.saveUpdate(updates[i]);\n    }\n\n    state.seq = pendingUpdatesData.seq;\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\n      state.date = pendingUpdatesData.date;\n    }\n    delete state.pendingSeqUpdates[nextSeq];\n\n    if(!this.popPendingSeqUpdate() &&\n      state.syncPending &&\n      state.syncPending.seqAwaiting &&\n      state.seq >= state.syncPending.seqAwaiting) {\n      if(!state.syncPending.ptsAwaiting) {\n        clearTimeout(state.syncPending.timeout);\n        state.syncPending = null;\n      } else {\n        delete state.syncPending.seqAwaiting;\n      }\n    }\n\n    return true;\n  }\n\n  private popPendingPtsUpdate(channelId: ChatId) {\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\n    if(!curState.pendingPtsUpdates.length) {\n      return false;\n    }\n\n    curState.pendingPtsUpdates.sort((a, b) => {\n      return a.pts - b.pts;\n    });\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\n\n    let curPts = curState.pts;\n    let goodPts = 0;\n    let goodIndex = 0;\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n      curPts += update.pts_count;\n      if(curPts >= update.pts) {\n        goodPts = update.pts;\n        goodIndex = i;\n      }\n    }\n\n    if(!goodPts) {\n      return false;\n    }\n\n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\n\n    curState.pts = goodPts;\n    for(let i = 0; i <= goodIndex; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n\n      // @ts-ignore\n      this.saveUpdate(update);\n    }\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\n\n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\n      if(!curState.syncPending.seqAwaiting) {\n        clearTimeout(curState.syncPending.timeout);\n        curState.syncPending = null;\n      } else {\n        delete curState.syncPending.ptsAwaiting;\n      }\n    }\n\n    return true;\n  }\n\n  public forceGetDifference() {\n    if(!this.updatesState.syncLoading) {\n      this.getDifference();\n    }\n  }\n\n  public processLocalUpdate(update: Update) {\n    this.processUpdateMessage({\n      _: 'updateShort',\n      update\n    } as Updates);\n  }\n\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\n    override: boolean\n  }> = {}) => {\n    // return forceGetDifference()\n    const processOpts = {\n      date: updateMessage.date,\n      seq: updateMessage.seq,\n      seqStart: updateMessage.seq_start\n      // ignoreSyncLoading: options.ignoreSyncLoading\n    };\n\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\n\n    switch(updateMessage._) {\n      case 'updatesTooLong':\n      case 'new_session_created':\n        this.forceGetDifference();\n        break;\n\n      case 'updateShort':\n        this.processUpdate(updateMessage.update, processOpts);\n        break;\n\n      case 'updateShortMessage':\n      case 'updateShortChatMessage': {\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\n        const isOut = updateMessage.pFlags.out;\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? this.appPeersManager.peerId : (updateMessage as Updates.updateShortMessage).user_id);\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id ?\n          (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true) :\n          ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || this.appPeersManager.peerId);\n\n        this.processUpdate({\n          _: 'updateNewMessage',\n          message: {\n            _: 'message',\n            pFlags: updateMessage.pFlags,\n            id: updateMessage.id,\n            from_id: this.appPeersManager.getOutputPeer(fromId.toPeerId()),\n            peer_id: this.appPeersManager.getOutputPeer(toId),\n            date: updateMessage.date,\n            message: updateMessage.message,\n            fwd_from: updateMessage.fwd_from,\n            reply_to: updateMessage.reply_to,\n            entities: updateMessage.entities\n          },\n          pts: updateMessage.pts,\n          pts_count: updateMessage.pts_count\n        }, processOpts);\n        break;\n      }\n\n      case 'updatesCombined':\n      case 'updates':\n        this.appUsersManager.saveApiUsers(updateMessage.users, options.override);\n        this.appChatsManager.saveApiChats(updateMessage.chats, options.override);\n\n        updateMessage.updates.forEach((update: Update) => {\n          this.processUpdate(update, processOpts);\n        });\n        break;\n\n      default:\n        this.log.warn('Unknown update message', updateMessage);\n    }\n  };\n\n  private getDifference(first = false): Promise<void> {\n    // this.trace('Get full diff')\n    const updatesState = this.updatesState;\n    const wasSyncing = updatesState.syncLoading;\n    if(!wasSyncing) {\n      updatesState.pendingSeqUpdates = {};\n      updatesState.pendingPtsUpdates = [];\n    }\n\n    if(updatesState.syncPending) {\n      clearTimeout(updatesState.syncPending.timeout);\n      updatesState.syncPending = null;\n    }\n\n    const promise = this.apiManager.invokeApi('updates.getDifference', {\n      pts: updatesState.pts,\n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\n      date: updatesState.date,\n      qts: -1\n    }, {\n      timeout: 0x7fffffff\n    }).then((differenceResult) => {\n      this.debug && this.log.debug('Get diff result', differenceResult);\n\n      if(differenceResult._ === 'updates.differenceEmpty') {\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\n        updatesState.date = differenceResult.date;\n        updatesState.seq = differenceResult.seq;\n        return;\n      }\n\n      // ! SORRY I'M SORRY I'M SORRY\n      if(first) {\n        this.rootScope.dispatchEvent('state_synchronizing');\n      }\n\n      if(differenceResult._ !== 'updates.differenceTooLong') {\n        this.appUsersManager.saveApiUsers(differenceResult.users);\n        this.appChatsManager.saveApiChats(differenceResult.chats);\n\n        // Should be first because of updateMessageID\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\n\n        differenceResult.other_updates.forEach((update) => {\n          switch(update._) {\n            case 'updateChannelTooLong':\n            case 'updateNewChannelMessage':\n            case 'updateEditChannelMessage':\n              this.processUpdate(update);\n              return;\n          }\n\n          this.saveUpdate(update);\n        });\n\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\n        differenceResult.new_messages.forEach((apiMessage) => {\n          this.saveUpdate({\n            _: 'updateNewMessage',\n            message: apiMessage,\n            pts: updatesState.pts,\n            pts_count: 0\n          });\n        });\n\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\n        updatesState.seq = nextState.seq;\n        updatesState.pts = nextState.pts;\n        updatesState.date = nextState.date;\n      } else {\n        updatesState.pts = differenceResult.pts;\n        updatesState.date = (Date.now() / 1000 | 0) + this.timeManager.getServerTimeOffset();\n        delete updatesState.seq;\n\n        this.channelStates = {};\n\n        this.log.warn('getDifference:', differenceResult._);\n        this.onDifferenceTooLong();\n      }\n\n      // this.log('apply diff', updatesState.seq, updatesState.pts)\n\n      if(differenceResult._ === 'updates.differenceSlice') {\n        return this.getDifference();\n      } else {\n        this.debug && this.log.debug('finished get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(updatesState, promise);\n    }\n\n    return promise;\n  }\n\n  private getChannelDifference(channelId: ChatId): Promise<void> {\n    const channelState = this.getChannelState(channelId);\n    const wasSyncing = channelState.syncLoading;\n    if(!wasSyncing) {\n      channelState.pendingPtsUpdates = [];\n    }\n\n    if(channelState.syncPending) {\n      clearTimeout(channelState.syncPending.timeout);\n      channelState.syncPending = null;\n    }\n\n    // this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\n    const promise = this.apiManager.invokeApi('updates.getChannelDifference', {\n      channel: this.appChatsManager.getChannelInput(channelId),\n      filter: {_: 'channelMessagesFilterEmpty'},\n      pts: channelState.pts,\n      limit: 30\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\n      this.debug && this.log.debug('Get channel diff result', differenceResult)\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\n\n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\n        this.debug && this.log.debug('apply channel empty diff', differenceResult);\n        return;\n      }\n\n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\n        this.debug && this.log.debug('channel diff too long', differenceResult);\n        delete this.channelStates[channelId];\n\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\n        return;\n      }\n\n      this.appUsersManager.saveApiUsers(differenceResult.users);\n      this.appChatsManager.saveApiChats(differenceResult.chats);\n\n      // Should be first because of updateMessageID\n      this.debug && this.log.debug('applying', differenceResult.other_updates.length, 'channel other updates');\n      differenceResult.other_updates.forEach((update) => {\n        this.saveUpdate(update);\n      });\n\n      this.debug && this.log.debug('applying', differenceResult.new_messages.length, 'channel new messages');\n      differenceResult.new_messages.forEach((apiMessage) => {\n        this.saveUpdate({\n          _: 'updateNewChannelMessage',\n          message: apiMessage,\n          pts: channelState.pts,\n          pts_count: 0\n        });\n      });\n\n      this.debug && this.log.debug('apply channel diff', channelState.pts);\n\n      if(differenceResult._ === 'updates.channelDifference' &&\n        !differenceResult.pFlags['final']) {\n        return this.getChannelDifference(channelId);\n      } else {\n        this.debug && this.log.debug('finished channel get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(channelState, promise, channelId);\n    }\n\n    return promise;\n  }\n\n  private onDifferenceTooLong() {\n    this.appUsersManager.clear();\n    this.appChatsManager.clear();\n    this.appMessagesManager.clear();\n\n    this.rootScope.dispatchEvent('state_cleared');\n  }\n\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\n    state.syncLoading = promise;\n    this.rootScope.dispatchEvent('state_synchronizing', channelId);\n\n    promise.then(() => {\n      state.syncLoading = null;\n      this.rootScope.dispatchEvent('state_synchronized', channelId);\n    }, () => {\n      state.syncLoading = null;\n    });\n  }\n\n  public addChannelState(channelId: ChatId, pts: number) {\n    if(!pts) {\n      throw new Error('Add channel state without pts ' + channelId);\n    }\n\n    if(!(channelId in this.channelStates)) {\n      this.channelStates[channelId] = {\n        pts,\n        pendingPtsUpdates: [],\n        syncPending: null,\n        syncLoading: null\n      };\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public getChannelState(channelId: ChatId, pts?: number) {\n    if(this.channelStates[channelId] === undefined) {\n      this.addChannelState(channelId, pts);\n    }\n\n    return this.channelStates[channelId];\n  }\n\n  private processUpdate(update: Update, options: Partial<{\n    date: number,\n    seq: number,\n    seqStart: number/* ,\n    ignoreSyncLoading: boolean */\n  }> = {}) {\n    let channelId: ChatId;\n    switch(update._) {\n      case 'updateNewChannelMessage':\n      case 'updateEditChannelMessage':\n        channelId = this.appPeersManager.getPeerId(update.message.peer_id).toChatId();\n        break;\n      /* case 'updateDeleteChannelMessages':\n        channelId = update.channel_id;\n        break; */\n      case 'updateChannelTooLong':\n        channelId = update.channel_id;\n        if(!(channelId in this.channelStates)) {\n          return false;\n        }\n        break;\n      default:\n        if('channel_id' in update && 'pts' in update) {\n          channelId = update.channel_id;\n        }\n        break;\n    }\n\n    const {pts, pts_count} = update as Update.updateNewMessage;\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\n\n    // this.log.log('process', channelId, curState.pts, update)\n\n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\n      return false;\n    }\n\n    if(update._ === 'updateChannelTooLong') {\n      if(!curState.lastPtsUpdateTime ||\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\n        // this.log.trace('channel too long, get diff', channelId, update)\n        this.getChannelDifference(channelId);\n      }\n      return false;\n    }\n\n    if(update._ === 'updateNewMessage' ||\n        update._ === 'updateEditMessage' ||\n        update._ === 'updateNewChannelMessage' ||\n        update._ === 'updateEditChannelMessage') {\n      const message = update.message as Message.message;\n      const toPeerId = this.appPeersManager.getPeerId(message.peer_id);\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\n      let reason: string;\n      if(message.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\n          fwdHeader.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !this.appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\n          toPeerId.isUser() && !this.appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\n          toPeerId.isAnyChat() && !this.appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\n        this.log.warn('Not enough data for message update', toPeerId, reason, message);\n        if(channelId && this.appChatsManager.hasChat(channelId)) {\n          this.getChannelDifference(channelId);\n        } else {\n          this.forceGetDifference();\n        }\n        return false;\n      }\n    } else if(channelId && !this.appChatsManager.hasChat(channelId)) {\n      // this.log.log('skip update, missing channel', channelId, update)\n      return false;\n    }\n\n    let popPts: boolean;\n    let popSeq: boolean;\n\n    if(pts) {\n      const newPts = curState.pts + (pts_count || 0);\n      if(newPts < pts) {\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && this.appChatsManager.getChat(channelId));\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\n        if(!curState.syncPending && !curState.syncLoading) {\n          curState.syncPending = {\n            timeout: ctx.setTimeout(() => {\n              curState.syncPending = null;\n\n              if(curState.syncLoading) {\n                return;\n              }\n\n              if(channelId) {\n                this.getChannelDifference(channelId);\n              } else {\n                this.getDifference();\n              }\n            }, SYNC_DELAY)\n          };\n        }\n\n        curState.syncPending.ptsAwaiting = true;\n        return false;\n      }\n\n      if(pts > curState.pts) {\n        curState.pts = pts;\n        popPts = true;\n\n        curState.lastPtsUpdateTime = Date.now();\n      } else if(pts_count) {\n        // this.log.warn('Duplicate update', update)\n        return false;\n      }\n\n      if(channelId && options.date && this.updatesState.date < options.date) {\n        this.updatesState.date = options.date;\n      }\n    } else if(!channelId && options.seq > 0) {\n      const seq = options.seq;\n      const seqStart = options.seqStart || seq;\n\n      if(seqStart !== curState.seq + 1) {\n        if(seqStart > curState.seq) {\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending && curState.syncPending.seqAwaiting);\n\n          if(curState.pendingSeqUpdates[seqStart] === undefined) {\n            curState.pendingSeqUpdates[seqStart] = {seq, date: options.date, updates: []};\n          }\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\n\n          if(!curState.syncPending) {\n            curState.syncPending = {\n              timeout: ctx.setTimeout(() => {\n                curState.syncPending = null;\n\n                if(curState.syncLoading) {\n                  return;\n                }\n\n                this.getDifference();\n              }, SYNC_DELAY)\n            };\n          }\n\n          if(!curState.syncPending.seqAwaiting ||\n            curState.syncPending.seqAwaiting < seqStart) {\n            curState.syncPending.seqAwaiting = seqStart;\n          }\n          return false;\n        }\n      }\n\n      if(curState.seq !== seq) {\n        curState.seq = seq;\n        if(options.date && curState.date < options.date) {\n          curState.date = options.date;\n        }\n\n        popSeq = true;\n      }\n    }\n\n    this.saveUpdate(update);\n\n    if(popPts) {\n      this.popPendingPtsUpdate(channelId);\n    } else if(popSeq) {\n      this.popPendingSeqUpdate();\n    }\n  }\n\n  public saveUpdate(update: Update) {\n    // this.debug && this.log('saveUpdate', update);\n    this.dispatchEvent(update._, update as any);\n  }\n\n  public attach(langCode?: string) {\n    if(this.attached) return;\n\n    // return;\n\n    this.log('attach');\n\n    this.attached = true;\n\n    this.appStateManager.getState().then(({updates: state}) => {\n      const newVersion = this.appStateManager.newVersion/*  || '0.8.6' */;\n\n      // rootScope.broadcast('state_synchronizing');\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\n        this.log('will get new state');\n\n        this.updatesState.syncLoading = new Promise((resolve) => {\n          this.apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\n            this.updatesState.seq = stateResult.seq;\n            this.updatesState.pts = stateResult.pts;\n            this.updatesState.date = stateResult.date;\n            this.saveUpdatesState();\n            // setTimeout(() => {\n            this.updatesState.syncLoading = null;\n            resolve();\n            // rootScope.broadcast('state_synchronized');\n            // }, 1000);\n\n          // ! for testing\n          // updatesState.seq = 1\n          // updatesState.pts = stateResult.pts - 5000\n          // updatesState.date = 1\n          // getDifference()\n          });\n        });\n      } else {\n        // ! for testing\n        /* state.seq = 1;\n        state.pts = state.pts - 15;\n        state.date = 1; */\n        // state.pts -= 100;\n\n        /* state.date = 1628623682;\n        state.pts = 2007500;\n        state.seq = 503; */\n\n        Object.assign(this.updatesState, state);\n\n        this.log('will get difference', Object.assign({}, state));\n\n        this.getDifference(true)/* .finally(() => {\n          if(this.updatesState.syncLoading) {\n            rootScope.broadcast('state_synchronizing');\n          }\n        }) */;\n      }\n\n      this.apiManager.setUpdatesProcessor(this.processUpdateMessage);\n\n      // this.updatesState.syncLoading.then(() => {\n      this.setProxy();\n      // });\n\n      if(newVersion) {\n        this.updatesState.syncLoading.then(async() => {\n          const strs: Record<string, string> = {\n            en: 'was updated to version',\n            ru: 'обновлён до версии'\n          };\n\n          const getChangelog = (lang: string) => {\n            fetch(`changelogs/${lang}_${newVersion.split(' ')[0]}.md`)\n            .then((res) => (res.status === 200 && res.ok && res.text()) || Promise.reject())\n            .then((text) => {\n              const langStr = strs[lang] || strs.en;\n              const pre = `**Telegram Web${App.suffix} ${langStr} ${newVersion}**\\n\\n`;\n\n              text = pre + text;\n\n              const entities: MessageEntity[] = [];\n              const message = parseMarkdown(text, entities);\n\n              const update: Update.updateServiceNotification = {\n                _: 'updateServiceNotification',\n                entities,\n                message,\n                type: 'local',\n                pFlags: {},\n                inbox_date: Date.now() / 1000 | 0,\n                media: undefined\n              };\n\n              this.processLocalUpdate(update);\n            });\n          };\n\n          const languages = filterUnique([langCode, 'en']);\n          for(const language of languages) {\n            try {\n              await getChangelog(language);\n              break;\n            } catch(err) {\n\n            }\n          }\n        });\n      }\n    });\n  }\n}\n\ninterface ApiUpdatesManager extends EventListenerBase<{\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\n}>, AppManager {}\napplyMixins(ApiUpdatesManager, [EventListenerBase, AppManager]);\n\nexport {ApiUpdatesManager};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {UserProfilePhoto, ChatPhoto, InputFileLocation} from '../../layer';\nimport {DownloadOptions} from '../mtproto/apiFileManager';\nimport {AppManager} from './manager';\n\nexport type PeerPhotoSize = 'photo_small' | 'photo_big';\n\nexport class AppAvatarsManager extends AppManager {\n  private savedAvatarURLs: {\n    [peerId: PeerId]: {\n      [size in PeerPhotoSize]?: string | Promise<string>\n    }\n  } = {};\n\n  protected after() {\n    this.rootScope.addEventListener('avatar_update', (peerId) => {\n      this.removeFromAvatarsCache(peerId);\n    });\n  }\n\n  public isAvatarCached(peerId: PeerId, size?: PeerPhotoSize) {\n    const saved = this.savedAvatarURLs[peerId];\n    if(size === undefined) {\n      return !!saved;\n    }\n\n    return !!(saved && saved[size] && !(saved[size] instanceof Promise));\n  }\n\n  public removeFromAvatarsCache(peerId: PeerId) {\n    if(this.savedAvatarURLs[peerId]) {\n      delete this.savedAvatarURLs[peerId];\n    }\n  }\n\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\n    let saved = this.savedAvatarURLs[peerId];\n    if(!saved || !saved[size]) {\n      if(!saved) {\n        saved = this.savedAvatarURLs[peerId] = {};\n      }\n\n      // console.warn('will invoke downloadSmallFile:', peerId);\n      const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\n        _: 'inputPeerPhotoFileLocation',\n        pFlags: {},\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        photo_id: photo.photo_id\n      };\n\n      const downloadOptions: DownloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\n      if(size === 'photo_big') {\n        peerPhotoFileLocation.pFlags.big = true;\n        downloadOptions.limitPart = 512 * 1024;\n      }\n\n      /* let str: string;\n      const time = Date.now();\n      if(peerId === 0) {\n        str = `download avatar ${peerId}`;\n      } */\n\n      const promise = this.apiFileManager.download(downloadOptions);\n      return saved[size] = promise.then((blob) => {\n        return saved[size] = URL.createObjectURL(blob);\n\n        /* if(str) {\n          console.log(str, Date.now() / 1000, Date.now() - time);\n        } */\n      });\n    } else {\n      return saved[size];\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getEnvironment} from '../../environment/utils';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {nextRandomUint} from '../../helpers/random';\nimport {InputPhoneCall, MessagesDhConfig, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, PhonePhoneCall} from '../../layer';\nimport {AppManager} from './manager';\n\nexport type CallId = PhoneCall['id'];\n\nexport type MyPhoneCall = Exclude<PhoneCall, PhoneCall.phoneCallEmpty | PhoneCall.phoneCallDiscarded>;\n\nexport class AppCallsManager extends AppManager {\n  private calls: Map<CallId, MyPhoneCall>;\n\n  protected after() {\n    this.calls = new Map();\n\n    if(!getEnvironment().IS_CALL_SUPPORTED) {\n      return;\n    }\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePhoneCall: (update) => {\n        this.saveCall(update.phone_call);\n      },\n\n      updatePhoneCallSignalingData: (update) => {\n        this.rootScope.dispatchEvent('call_signaling', {callId: update.phone_call_id, data: update.data});\n      }\n    });\n  }\n\n  public computeKey(g_b: Uint8Array, a: Uint8Array, p: Uint8Array) {\n    return this.cryptoWorker.invokeCrypto('compute-dh-key', g_b, a, p);\n  }\n\n  public saveCall(call: PhoneCall) {\n    const isDiscarded = call._ === 'phoneCallDiscarded';\n    const oldCall = this.calls.get(call.id);\n    if(oldCall) {\n      // if(shouldUpdate) {\n      safeReplaceObject(oldCall, call);\n      // }\n\n      if(isDiscarded) {\n        this.calls.delete(call.id);\n      }\n\n      call = oldCall;\n    } else if(!isDiscarded) {\n      this.calls.set(call.id, call as any);\n    }\n\n    this.rootScope.dispatchEvent('call_update', call);\n\n    return call;\n  }\n\n  public getCall(callId: CallId) {\n    return this.calls.get(callId);\n  }\n\n  public getCallInput(id: CallId): InputPhoneCall {\n    const call = this.getCall(id);\n    return {\n      _: 'inputPhoneCall',\n      id: call.id,\n      access_hash: call.access_hash\n    };\n  }\n\n  public savePhonePhoneCall(phonePhoneCall: PhonePhoneCall) {\n    this.appUsersManager.saveApiUsers(phonePhoneCall.users);\n    return this.saveCall(phonePhoneCall.phone_call);\n  }\n\n  public generateDh() {\n    return this.apiManager.invokeApi('messages.getDhConfig', {\n      version: 0,\n      random_length: 256\n    }).then((dhConfig) => {\n      return this.cryptoWorker.invokeCrypto('generate-dh', dhConfig as MessagesDhConfig.messagesDhConfig);\n    });\n  }\n\n  // private verifyProtocolCompatibility(protocol: PhoneCallProtocol) {\n  //   const my = getCallProtocol();\n  //   const myVersion = my.library_versions[0];\n  //   return !protocol.library_versions.find((version) => {\n  //     return compareVersion(myVersion, version) > 0;\n  //   });\n  // }\n\n  public async requestCall(userId: UserId, protocol: PhoneCallProtocol, g_a_hash: Uint8Array, video?: boolean) {\n    const phonePhoneCall = await this.apiManager.invokeApi('phone.requestCall', {\n      user_id: this.appUsersManager.getUserInput(userId),\n      protocol: protocol,\n      video: video,\n      random_id: nextRandomUint(32),\n      g_a_hash: g_a_hash\n    });\n\n    return this.savePhonePhoneCall(phonePhoneCall);\n  }\n\n  public async discardCall(callId: CallId, duration: number, reason: PhoneCallDiscardReason['_'], video?: boolean) {\n    if(!this.getCall(callId)) {\n      return;\n    }\n\n    const updates = await this.apiManager.invokeApi('phone.discardCall', {\n      video,\n      peer: this.getCallInput(callId),\n      duration,\n      reason: {\n        _: reason\n      },\n      connection_id: '0'\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n  }\n}\n","import {RestrictionReason} from '../layer';\n\nconst platforms = new Set([\n  'all',\n  'web',\n  'webk'\n]);\n\nconst ignore = new Set();\n\nexport function getRestrictionReason(reasons: RestrictionReason[]) {\n  // return reasons[0];\n  return reasons.find((reason) => platforms.has(reason.platform) && !ignore.has(reason.reason));\n}\n\nexport function isRestricted(reasons: RestrictionReason[]) {\n  return !!getRestrictionReason(reasons);\n}\n\nexport function ignoreRestrictionReasons(reasons: string[]) {\n  ignore.clear();\n  reasons.forEach((reason) => {\n    ignore.add(reason);\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport deepEqual from '../../helpers/object/deepEqual';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {ChannelParticipant, ChannelsCreateChannel, Chat, ChatAdminRights, ChatBannedRights, ChatInvite, ChatPhoto, InputChannel, InputChatPhoto, InputFile, InputPeer, SponsoredMessage, Update, Updates} from '../../layer';\nimport {isRestricted} from '../../helpers/restrictions';\nimport {AppManager} from './manager';\nimport hasRights from './utils/chats/hasRights';\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\nimport {AppStoragesManager} from './appStoragesManager';\n\nexport type Channel = Chat.channel;\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] | 'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants';\n\nexport class AppChatsManager extends AppManager {\n  private storage: AppStoragesManager['storages']['chats'];\n\n  private chats: {[id: ChatId]: Chat.channel | Chat.chat | any};\n  // private usernames: any;\n  // private channelAccess: any;\n  // private megagroups: {[id: number]: true};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      /* updateChannel: (update) => {\n        const channelId = update.channel_id;\n        //console.log('updateChannel:', update);\n        rootScope.broadcast('channel_settings', {channelId});\n      }, */\n\n      updateChannelParticipant: (update) => {\n        this.apiManager.clearCache('channels.getParticipants', (params) => {\n          return (params.channel as InputChannel.inputChannel).channel_id === update.channel_id;\n        });\n      },\n\n      updateChatDefaultBannedRights: (update) => {\n        const chatId = this.appPeersManager.getPeerId(update.peer).toChatId();\n        const chat: Chat.chat = this.chats[chatId];\n        if(chat) {\n          chat.default_banned_rights = update.default_banned_rights;\n          this.rootScope.dispatchEvent('chat_update', chatId);\n        }\n      }\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('chats')\n    ]).then(([state, {results: chats, storage}]) => {\n      this.storage = storage;\n\n      if(chats.length) {\n        for(let i = 0, length = chats.length; i < length; ++i) {\n          const chat = chats[i];\n          if(chat) {\n            this.chats[chat.id] = chat;\n          }\n        }\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.set({\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\n        });\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.delete(peerId.toChatId());\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const chatId in this.chats) {\n        if(!chatId) continue;\n        if(!this.peersStorage.isPeerNeeded(chatId.toPeerId(true))) {\n          /* const chat = this.chats[chatId];\n          if(chat.username) {\n            delete this.usernames[cleanUsername(chat.username)];\n          } */\n\n          this.storage.delete(chatId);\n          delete this.chats[chatId];\n        }\n      }\n    } else {\n      this.chats = {};\n    }\n  };\n\n  public saveApiChats(apiChats: any[], override?: boolean) {\n    if((apiChats as any).saved) return;\n    (apiChats as any).saved = true;\n    apiChats.forEach((chat) => this.saveApiChat(chat, override));\n  }\n\n  public saveApiChat(chat: Chat, override?: boolean) {\n    if(chat._ === 'chatEmpty') return;\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\n      return;\n    } */\n\n    // * exclude from state\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\n\n    const oldChat: Exclude<Chat, Chat.chatEmpty> = this.chats[chat.id];\n\n    /* if(oldChat && !override) {\n      return;\n    } */\n\n    if((chat as Chat.chat).pFlags === undefined) {\n      (chat as Chat.chat).pFlags = {};\n    }\n\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\n      return;\n    }\n\n    if(chat._ === 'channel' &&\n        chat.participants_count === undefined &&\n        oldChat !== undefined &&\n        (oldChat as Chat.channel).participants_count) {\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\n    }\n\n    /* if(chat.username) {\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\n      this.usernames[searchUsername] = chat.id;\n    } */\n\n    const peerId = chat.id.toPeerId(true);\n    if(oldChat === undefined) {\n      this.chats[chat.id] = chat;\n    } else {\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const changedPhoto = oldPhotoId !== newPhotoId;\n\n      const changedTitle = oldChat.title !== chat.title;\n\n      const changedAnyBadge = (oldChat as Chat.channel).pFlags.verified !== (chat as Chat.channel).pFlags.verified ||\n        (oldChat as Chat.channel).pFlags.scam !== (chat as Chat.channel).pFlags.scam ||\n        (oldChat as Chat.channel).pFlags.fake !== (chat as Chat.channel).pFlags.fake;\n\n      safeReplaceObject(oldChat, chat);\n      this.rootScope.dispatchEvent('chat_update', chat.id);\n\n      if(changedPhoto) {\n        this.rootScope.dispatchEvent('avatar_update', peerId);\n      }\n\n      if(changedTitle || changedAnyBadge) {\n        this.rootScope.dispatchEvent('peer_title_edit', peerId);\n      }\n    }\n\n    if(this.peersStorage.isPeerNeeded(peerId)) {\n      this.storage.set({\n        [chat.id]: chat\n      });\n    }\n  }\n\n  public getChat(id: ChatId) {\n    return this.chats[id] || {_: 'chatEmpty', id, deleted: true, access_hash: '', pFlags: {}/* this.channelAccess[id] */};\n  }\n\n  public getChatTyped(id: ChatId): Chat {\n    return this.getChat(id);\n  }\n\n  /**\n   * Check the user's ability to do an action in chat\n   * @param id\n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n   * @param rights do not provide this parameter when checking rights for self\n   * @param isThread\n   * @returns\n   */\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n    return hasRights(this.getChat(id), action, rights, isThread);\n  }\n\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\n    const chat: Chat.chat = this.getChat(id);\n    if(chat.default_banned_rights) {\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\n        return Promise.resolve();\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.editChatDefaultBannedRights', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true)),\n      banned_rights\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  /* public resolveUsername(username: string) {\n    return this.usernames[username] || 0;\n  } */\n\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\n    this.channelAccess[id] = accessHash;\n  } */\n\n  /* public saveIsMegagroup(id: ChatId) {\n    this.megagroups[id] = true;\n  } */\n\n  public isChannel(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\n  }\n\n  public isMegagroup(id: ChatId) {\n    /* if(this.megagroups[id]) {\n      return true;\n    } */\n\n    const chat: Chat = this.chats[id];\n    return !!(chat as Chat.channel)?.pFlags?.megagroup;\n  }\n\n  public isBroadcast(id: ChatId) {\n    return this.isChannel(id) && !this.isMegagroup(id);\n  }\n\n  public isInChat(id: ChatId) {\n    let good = true;\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channelForbidden' ||\n      chat._ === 'chatForbidden' ||\n      chat._ === 'chatEmpty' ||\n      (chat as Chat.chat).pFlags.left ||\n      // || (chat as any).pFlags.kicked\n      (chat as Chat.chat).pFlags.deactivated) {\n      good = false;\n    }\n\n    return good;\n  }\n\n  public getChannelInput(id: ChatId): InputChannel {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'chatEmpty' || !(chat as Chat.channel).access_hash) {\n      return {\n        _: 'inputChannelEmpty'\n      };\n    } else {\n      return {\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\n      };\n    }\n  }\n\n  public getInputPeer(id: ChatId) {\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\n  }\n\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\n    return {\n      _: 'inputPeerChat',\n      chat_id: id\n    };\n  }\n\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\n    return {\n      _: 'inputPeerChannel',\n      channel_id: id,\n      access_hash: this.getChat(id).access_hash/*  || this.channelAccess[id] */ || 0\n    };\n  }\n\n  public hasChat(id: ChatId, allowMin?: true) {\n    const chat = this.chats[id];\n    return isObject(chat) && (allowMin || !chat.pFlags.min);\n  }\n\n  public getChatPhoto(id: ChatId) {\n    const chat: Chat.chat = this.getChat(id);\n\n    return chat && chat.photo || {\n      _: 'chatPhotoEmpty'\n    };\n  }\n\n  public getChatString(id: ChatId) {\n    const chat = this.getChat(id);\n    if(this.isChannel(id)) {\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + chat.access_hash;\n    }\n    return 'g' + id;\n  }\n\n  /* public wrapForFull(id: number, fullChat: any) {\n    const chatFull = copy(fullChat);\n    const chat = this.getChat(id);\n\n    if(!chatFull.participants_count) {\n      chatFull.participants_count = chat.participants_count;\n    }\n\n    if(chatFull.participants &&\n        chatFull.participants._ === 'chatParticipants') {\n      chatFull.participants.participants = this.wrapParticipants(id, chatFull.participants.participants);\n    }\n\n    if(chatFull.about) {\n      chatFull.rAbout = wrapRichText(chatFull.about, {noLinebreaks: true});\n    }\n\n    //chatFull.peerString = this.getChatString(id);\n    chatFull.chat = chat;\n\n    return chatFull;\n  }\n\n  public wrapParticipants(id: number, participants: any[]) {\n    const chat = this.getChat(id);\n    const myId = appUsersManager.getSelf().id;\n    if(this.isChannel(id)) {\n      const isAdmin = chat.pFlags.creator;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = isAdmin && participant._ === 'channelParticipant';\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    } else {\n      const isAdmin = chat.pFlags.creator || chat.pFlags.admins_enabled && chat.pFlags.admin;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = !participant.canLeave && (\n          chat.pFlags.creator ||\n          participant._ === 'chatParticipant' && (isAdmin || myId === participant.inviter_id)\n        );\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    }\n\n    return participants;\n  } */\n\n  public createChannel(options: ChannelsCreateChannel): Promise<ChatId> {\n    return this.apiManager.invokeApi('channels.createChannel', options).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const channelId = (updates as any).chats[0].id;\n      return channelId;\n    });\n  }\n\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\n    const input = this.getChannelInput(id);\n    const usersInputs = userIds.map((u) => this.appUsersManager.getUserInput(u));\n\n    return this.apiManager.invokeApi('channels.inviteToChannel', {\n      channel: input,\n      users: usersInputs\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\n    return this.apiManager.invokeApi('messages.createChat', {\n      users: userIds.map((u) => this.appUsersManager.getUserInput(u)),\n      title\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const chatId = (updates as any as Updates.updates).chats[0].id;\n      return chatId;\n    });\n  }\n\n  private onChatUpdated = (chatId: ChatId, updates?: any) => {\n    // console.log('onChatUpdated', chatId, updates);\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    if(updates?.updates?.length && this.isChannel(chatId)) {\n      this.rootScope.dispatchEvent('invalidate_participants', chatId);\n    }\n  };\n\n  public leaveChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.leaveChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public joinChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.joinChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\n    return this.apiManager.invokeApi('messages.addChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId),\n      fwd_limit: fwdLimit\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChatUser(id: ChatId, userId: UserId) {\n    return this.apiManager.invokeApi('messages.deleteChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public leaveChat(id: ChatId) {\n    return this.deleteChatUser(id, this.appUsersManager.getSelf().id);\n  }\n\n  public leave(id: ChatId) {\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\n  }\n\n  public delete(id: ChatId) {\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\n  }\n\n  public deleteChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.deleteChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChat(id: ChatId) {\n    // return this.leaveChat(id).then(() => {\n    return this.apiManager.invokeApi('messages.deleteChat', {\n      chat_id: id\n    });\n    // });\n  }\n\n  public migrateChat(id: ChatId): Promise<ChatId> {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\n    return this.apiManager.invokeApi('messages.migrateChat', {\n      chat_id: id\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find((u) => u._ === 'updateChannel') as any;\n      return update.channel_id;\n    });\n  }\n\n  public updateUsername(id: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.updateUsername', {\n      channel: this.getChannelInput(id),\n      username\n    }).then((bool) => {\n      if(bool) {\n        const chat: Chat.channel = this.getChat(id);\n        chat.username = username;\n      }\n\n      return bool;\n    });\n  }\n\n  public editPhoto(id: ChatId, inputFile: InputFile) {\n    const inputChatPhoto: InputChatPhoto = {\n      _: 'inputChatUploadedPhoto',\n      file: inputFile\n    };\n\n    let promise: any;\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editPhoto', {\n        channel: this.getChannelInput(id),\n        photo: inputChatPhoto\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatPhoto', {\n        chat_id: id,\n        photo: inputChatPhoto\n      });\n    }\n\n    return promise.then((updates: any) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editTitle(id: ChatId, title: string) {\n    let promise: any;\n\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editTitle', {\n        channel: this.getChannelInput(id),\n        title\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatTitle', {\n        chat_id: id,\n        title\n      });\n    }\n\n    return promise.then((updates: any) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editAbout(id: ChatId, about: string) {\n    const peerId = id.toPeerId(true);\n    return this.apiManager.invokeApi('messages.editChatAbout', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      about\n    }).then((bool) => {\n      if(bool) {\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return bool;\n    });\n  }\n\n  public editBanned(id: ChatId, participant: PeerId | ChannelParticipant, banned_rights: ChatBannedRights) {\n    const peerId = typeof(participant) !== 'object' ? participant : getParticipantPeerId(participant);\n    return this.apiManager.invokeApi('channels.editBanned', {\n      channel: this.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId),\n      banned_rights\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n\n      if(typeof(participant) === 'object') {\n        const timestamp = Date.now() / 1000 | 0;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateChannelParticipant',\n          channel_id: id,\n          date: timestamp,\n          actor_id: undefined,\n          qts: undefined,\n          user_id: peerId,\n          prev_participant: participant,\n          new_participant: Object.keys(banned_rights.pFlags).length ? {\n            _: 'channelParticipantBanned',\n            date: timestamp,\n            banned_rights,\n            kicked_by: this.appUsersManager.getSelf().id,\n            peer: this.appPeersManager.getOutputPeer(peerId),\n            pFlags: {}\n          } : undefined\n        });\n      }\n    });\n  }\n\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {}\n    });\n  }\n\n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {\n        view_messages: true\n      }\n    });\n  }\n\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant) {\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant);\n    else return this.deleteChatUser(id, (participant as PeerId).toUserId());\n  }\n\n  public resolveChannel(id: ChatId) {\n    return this.apiManager.invokeApiSingle('channels.getChannels', {\n      id: [{\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: '0'\n      }]\n    }).then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\n    return this.migrateChat(id).then((channelId) => {\n      return this.apiManager.invokeApi('channels.togglePreHistoryHidden', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      });\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleSignatures(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('channels.toggleSignatures', {\n      channel: this.getChannelInput(id),\n      enabled\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('messages.toggleNoForwards', {\n      peer: this.getInputPeer(id),\n      enabled\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public setChatAvailableReactions(id: ChatId, reactions: Array<string>) {\n    return this.apiManager.invokeApi('messages.setChatAvailableReactions', {\n      peer: this.getInputPeer(id),\n      available_reactions: reactions\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public isRestricted(chatId: ChatId) {\n    const chat: Chat.channel = this.getChat(chatId);\n    const restrictionReasons = chat.restriction_reason;\n\n    return !!(chat.pFlags.restricted && restrictionReasons && isRestricted(restrictionReasons));\n  }\n\n  public getSendAs(channelId: ChatId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getSendAs',\n      params: {\n        peer: this.getChannelInputPeer(channelId)\n      },\n      processResult: (sendAsPeers) => {\n        this.appUsersManager.saveApiUsers(sendAsPeers.users);\n        this.saveApiChats(sendAsPeers.chats);\n\n        return sendAsPeers.peers;\n      }\n    });\n  }\n\n  public importChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.importChatInvite', {hash})\n    .then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      const chat = (updates as Updates.updates).chats[0];\n      return chat.id;\n    });\n  }\n\n  public checkUsername(chatId: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.checkUsername', {\n      channel: this.getChannelInput(chatId),\n      username\n    });\n  }\n\n  public getSponsoredMessage(chatId: ChatId) {\n    return this.apiManager.invokeApiCacheable('channels.getSponsoredMessages', {\n      channel: this.getChannelInput(chatId)\n    }, {cacheSeconds: 300}).then((sponsoredMessages) => {\n      this.appUsersManager.saveApiUsers(sponsoredMessages.users);\n      this.appChatsManager.saveApiChats(sponsoredMessages.chats);\n\n      const sponsoredMessage = sponsoredMessages.messages.shift();\n      sponsoredMessages.messages.push(sponsoredMessage);\n\n      return sponsoredMessages;\n    });\n  }\n\n  public viewSponsoredMessage(chatId: ChatId, randomId: SponsoredMessage['random_id']) {\n    return this.apiManager.invokeApiSingle('channels.viewSponsoredMessage', {\n      channel: this.getChannelInput(chatId),\n      random_id: randomId\n    });\n  }\n\n  public checkChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.checkChatInvite', {\n      hash: hash\n    }).then((chatInvite) => {\n      if((chatInvite as ChatInvite.chatInvitePeek).chat) {\n        this.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\n      }\n\n      return chatInvite;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type lang from '../lang';\nimport type langSign from '../langSign';\nimport type {State} from '../config/state';\nimport DEBUG, {MOUNT_CLASS_TO} from '../config/debug';\nimport {HelpCountriesList, HelpCountry, LangPackDifference, LangPackString} from '../layer';\nimport stateStorage from './stateStorage';\nimport App from '../config/app';\nimport rootScope from './rootScope';\nimport {IS_MOBILE} from '../environment/userAgent';\nimport deepEqual from '../helpers/object/deepEqual';\nimport safeAssign from '../helpers/object/safeAssign';\nimport capitalizeFirstLetter from '../helpers/string/capitalizeFirstLetter';\nimport matchUrlProtocol from './richTextProcessor/matchUrlProtocol';\nimport wrapUrl from './richTextProcessor/wrapUrl';\n\nexport const langPack: {[actionType: string]: LangPackKey} = {\n  'messageActionChatCreate': 'ActionCreateGroup',\n  'messageActionChatCreateYou': 'ActionYouCreateGroup',\n  'messageActionChatEditTitle': 'ActionChangedTitle',\n  'messageActionChatEditPhoto': 'ActionChangedPhoto',\n  'messageActionChatEditVideo': 'ActionChangedVideo',\n  'messageActionChatDeletePhoto': 'ActionRemovedPhoto',\n  'messageActionChatReturn': 'ActionAddUserSelf',\n  'messageActionChatReturnYou': 'ActionAddUserSelfYou',\n  'messageActionChatJoined': 'ActionAddUserSelfMega',\n  'messageActionChatJoinedYou': 'ChannelMegaJoined',\n  'messageActionChatAddUser': 'ActionAddUser',\n  'messageActionChatAddUsers': 'ActionAddUser',\n  'messageActionChatLeave': 'ActionLeftUser',\n  'messageActionChatLeaveYou': 'YouLeft',\n  'messageActionChatDeleteUser': 'ActionKickUser',\n  'messageActionChatJoinedByLink': 'ActionInviteUser',\n  'messageActionPinMessage': 'Chat.Service.Group.UpdatedPinnedMessage',\n  'messageActionContactSignUp': 'Chat.Service.PeerJoinedTelegram',\n  'messageActionChannelCreate': 'ActionCreateChannel',\n  'messageActionChannelEditTitle': 'Chat.Service.Channel.UpdatedTitle',\n  'messageActionChannelEditPhoto': 'Chat.Service.Channel.UpdatedPhoto',\n  'messageActionChannelEditVideo': 'Chat.Service.Channel.UpdatedVideo',\n  'messageActionChannelDeletePhoto': 'Chat.Service.Channel.RemovedPhoto',\n  'messageActionHistoryClear': 'HistoryCleared',\n  'messageActionDiscussionStarted': 'DiscussionStarted',\n\n  'messageActionChannelMigrateFrom': 'ActionMigrateFromGroup',\n\n  'messageActionPhoneCall.video_in_ok': 'ChatList.Service.VideoCall.incoming',\n  'messageActionPhoneCall.video_out_ok': 'ChatList.Service.VideoCall.outgoing',\n  'messageActionPhoneCall.video_missed': 'ChatList.Service.VideoCall.Missed',\n  'messageActionPhoneCall.video_cancelled': 'ChatList.Service.VideoCall.Cancelled',\n  'messageActionPhoneCall.in_ok': 'ChatList.Service.Call.incoming',\n  'messageActionPhoneCall.out_ok': 'ChatList.Service.Call.outgoing',\n  'messageActionPhoneCall.missed': 'ChatList.Service.Call.Missed',\n  'messageActionPhoneCall.cancelled': 'ChatList.Service.Call.Cancelled',\n\n  'messageActionGroupCall.started': 'Chat.Service.VoiceChatStarted.Channel',\n  'messageActionGroupCall.started_by': 'Chat.Service.VoiceChatStarted',\n  'messageActionGroupCall.started_byYou': 'Chat.Service.VoiceChatStartedYou',\n  'messageActionGroupCall.ended': 'Chat.Service.VoiceChatFinished.Channel',\n  'messageActionGroupCall.ended_by': 'Chat.Service.VoiceChatFinished',\n  'messageActionGroupCall.ended_byYou': 'Chat.Service.VoiceChatFinishedYou',\n\n  'messageActionBotAllowed': 'Chat.Service.BotPermissionAllowed'\n};\n\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\n\nexport type FormatterArgument = string | number | Node | FormatterArgument[];\nexport type FormatterArguments = FormatterArgument[];\n\nexport const UNSUPPORTED_LANG_PACK_KEY: LangPackKey = IS_MOBILE ? 'Message.Unsupported.Mobile' : 'Message.Unsupported.Desktop';\n\nnamespace I18n {\n  export const strings: Map<LangPackKey, LangPackString> = new Map();\n  export const countriesList: HelpCountry[] = [];\n  let pluralRules: Intl.PluralRules;\n\n  let cacheLangPackPromise: Promise<LangPackDifference>;\n  export let lastRequestedLangCode: string;\n  export let lastRequestedNormalizedLangCode: string;\n  export let lastAppliedLangCode: string;\n  export let requestedServerLanguage = false;\n  export let timeFormat: State['settings']['timeFormat'];\n\n  function setLangCode(langCode: string) {\n    lastRequestedLangCode = langCode;\n    lastRequestedNormalizedLangCode = langCode.split('-')[0];\n  }\n\n  export function getCacheLangPack(): Promise<LangPackDifference> {\n    if(cacheLangPackPromise) return cacheLangPackPromise;\n    return cacheLangPackPromise = Promise.all([\n      stateStorage.get('langPack') as Promise<LangPackDifference>,\n      polyfillPromise\n    ]).then(([langPack]) => {\n      if(!langPack/*  || true */) {\n        return loadLocalLangPack();\n      } else if(DEBUG && false) {\n        return getLangPack(langPack.lang_code);\n      }/*  else if(langPack.appVersion !== App.langPackVersion) {\n        return getLangPack(langPack.lang_code);\n      } */\n\n      if(!lastRequestedLangCode) {\n        setLangCode(langPack.lang_code);\n      }\n\n      applyLangPack(langPack);\n      return langPack;\n    }).finally(() => {\n      cacheLangPackPromise = undefined;\n    });\n  }\n\n  function updateAmPm() {\n    if(timeFormat === 'h12') {\n      try {\n        const dateTimeFormat = getDateTimeFormat({hour: 'numeric', minute: 'numeric', hour12: true});\n        const date = new Date();\n        date.setHours(0);\n        const amText = dateTimeFormat.format(date);\n        amPmCache.am = amText.split(' ')[1];\n        date.setHours(12);\n        const pmText = dateTimeFormat.format(date);\n        amPmCache.pm = pmText.split(' ')[1];\n      } catch(err) {\n        console.error('cannot get am/pm', err);\n        amPmCache = {am: 'AM', pm: 'PM'};\n      }\n    }\n  }\n\n  export function setTimeFormat(\n    format: State['settings']['timeFormat'],\n    haveToUpdate = !!timeFormat && timeFormat !== format\n  ) {\n    timeFormat = format;\n\n    updateAmPm();\n\n    if(haveToUpdate) {\n      cachedDateTimeFormats.clear();\n      const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n      elements.forEach((element) => {\n        const instance = weakMap.get(element);\n\n        if(instance instanceof IntlDateElement) {\n          instance.update();\n        }\n      });\n    }\n  }\n\n  export function loadLocalLangPack() {\n    const defaultCode = App.langPackCode;\n    setLangCode(defaultCode);\n    return Promise.all([\n      import('../lang'),\n      import('../langSign'),\n      import('../countries')\n    ]).then(([lang, langSign, countries]) => {\n      const strings: LangPackString[] = [];\n      formatLocalStrings(lang.default, strings);\n      formatLocalStrings(langSign.default, strings);\n\n      const langPack: LangPackDifference = {\n        _: 'langPackDifference',\n        from_version: 0,\n        lang_code: defaultCode,\n        strings,\n        version: 0,\n        local: true,\n        countries: countries.default\n      };\n      return saveLangPack(langPack);\n    });\n  }\n\n  export function loadLangPack(langCode: string, web?: boolean) {\n    requestedServerLanguage = true;\n    const managers = rootScope.managers;\n    return Promise.all([\n      managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n        lang_code: langCode,\n        lang_pack: web ? 'web' : App.langPack\n      }),\n      !web && managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n        lang_code: langCode,\n        lang_pack: 'android'\n      }),\n      import('../lang'),\n      import('../langSign'),\n      managers.apiManager.invokeApiCacheable('help.getCountriesList', {\n        lang_code: langCode,\n        hash: 0\n      }) as Promise<HelpCountriesList.helpCountriesList>,\n      polyfillPromise\n    ]);\n  }\n\n  export function getStrings(langCode: string, strings: string[]) {\n    return rootScope.managers.apiManager.invokeApi('langpack.getStrings', {\n      lang_pack: App.langPack,\n      lang_code: langCode,\n      keys: strings\n    });\n  }\n\n  export function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\n    for(const i in strings) {\n      // @ts-ignore\n      const v = strings[i];\n      if(typeof(v) === 'string') {\n        pushTo.push({\n          _: 'langPackString',\n          key: i,\n          value: v\n        });\n      } else {\n        pushTo.push({\n          _: 'langPackStringPluralized',\n          key: i,\n          ...v\n        });\n      }\n    }\n\n    return pushTo;\n  }\n\n  export function getLangPack(langCode: string, web?: boolean) {\n    setLangCode(langCode);\n    return loadLangPack(langCode, web).then(([langPack1, langPack2, localLangPack1, localLangPack2, countries, _]) => {\n      let strings: LangPackString[] = [];\n\n      [localLangPack1, localLangPack2].forEach((l) => {\n        formatLocalStrings(l.default as any, strings);\n      });\n\n      strings = strings.concat(...[langPack1.strings, langPack2.strings].filter(Boolean));\n\n      langPack1.strings = strings;\n      langPack1.countries = countries;\n      return saveLangPack(langPack1);\n    });\n  }\n\n  export function saveLangPack(langPack: LangPackDifference) {\n    langPack.appVersion = App.langPackVersion;\n\n    return stateStorage.set({langPack}).then(() => {\n      applyLangPack(langPack);\n      return langPack;\n    });\n  }\n\n  export const polyfillPromise = (function checkIfPolyfillNeeded() {\n    if(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\n      return Promise.resolve();\n    } else {\n      return import('./pluralPolyfill').then((_Intl) => {\n        (window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\n      });\n    }\n  })();\n\n  export function applyLangPack(langPack: LangPackDifference) {\n    const currentLangCode = lastRequestedLangCode;\n    if(langPack.lang_code !== currentLangCode) {\n      return;\n    }\n\n    try {\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode);\n    } catch(err) {\n      console.error('pluralRules error', err);\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode.split('-', 1)[0]);\n    }\n\n    try {\n      pluralRules = new Intl.PluralRules(langPack.lang_code);\n    } catch(err) {\n      console.error('pluralRules error', err);\n      pluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\n    }\n\n    strings.clear();\n\n    for(const string of langPack.strings) {\n      strings.set(string.key as LangPackKey, string);\n    }\n\n    if(langPack.countries) {\n      countriesList.length = 0;\n      countriesList.push(...langPack.countries.countries);\n\n      langPack.countries.countries.forEach((country) => {\n        if(country.name) {\n          const langPackKey: any = country.default_name;\n          strings.set(langPackKey, {\n            _: 'langPackString',\n            key: langPackKey,\n            value: country.name\n          });\n        }\n      });\n    }\n\n    if(lastAppliedLangCode !== currentLangCode) {\n      rootScope.dispatchEvent('language_change', currentLangCode);\n      lastAppliedLangCode = currentLangCode;\n      cachedDateTimeFormats.clear();\n      updateAmPm();\n    }\n\n    const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n    elements.forEach((element) => {\n      const instance = weakMap.get(element);\n\n      if(instance) {\n        instance.update();\n      }\n    });\n  }\n\n  function pushNextArgument(out: ReturnType<typeof superFormatter>, args: FormatterArguments, indexHolder: {i: number}) {\n    const arg = args[indexHolder.i++];\n    if(Array.isArray(arg)) {\n      out.push(...arg as any);\n    } else {\n      out.push(arg);\n    }\n  }\n\n  export function superFormatter(input: string, args?: FormatterArguments, indexHolder = {i: 0}): Exclude<FormatterArgument, FormatterArgument[]>[] {\n    const out: ReturnType<typeof superFormatter> = [];\n    const regExp = /(\\*\\*|__)(.+?)\\1|(\\n)|(\\[.+?\\]\\(.*?\\))|un\\d|%\\d\\$.|%./g;\n\n    let lastIndex = 0;\n    input.replace(regExp, (match, p1: any, p2: any, p3: any, p4: string, offset: number, string: string) => {\n      // console.table({match, p1, p2, offset, string});\n\n      out.push(string.slice(lastIndex, offset));\n\n      if(p1) {\n        // offset += p1.length;\n        let element: HTMLElement;\n        switch(p1) {\n          case '**': {\n            element = document.createElement('b');\n            break;\n          }\n\n          case '__': {\n            element = document.createElement('i');\n            break;\n          }\n        }\n\n        element.append(...superFormatter(p2, args, indexHolder) as any);\n        out.push(element);\n      } else if(p3) {\n        out.push(document.createElement('br'));\n      } else if(p4) {\n        const idx = p4.lastIndexOf(']');\n        const text = p4.slice(1, idx);\n\n        const url = p4.slice(idx + 2, p4.length - 1);\n        let a: HTMLAnchorElement;\n        if(url && matchUrlProtocol(url)) {\n          a = document.createElement('a');\n          const wrappedUrl = wrapUrl(url);\n          a.href = wrappedUrl.url;\n          if(wrappedUrl.onclick) a.setAttribute('onclick', wrappedUrl.onclick);\n          a.target = '_blank';\n        } else {\n          a = args[indexHolder.i++] as HTMLAnchorElement;\n\n          if(a instanceof DocumentFragment) { // right after wrapRichText\n            a = a.firstChild as any;\n          }\n\n          a.textContent = ''; // reset content\n        }\n\n        a.append(...superFormatter(text, args, indexHolder) as any);\n\n        out.push(a);\n      } else if(args) {\n        pushNextArgument(out, args, indexHolder);\n      }\n\n      lastIndex = offset + match.length;\n      return '';\n    });\n\n    if(lastIndex !== input.length) {\n      out.push(input.slice(lastIndex));\n    }\n\n    return out;\n  }\n\n  export function format(key: LangPackKey, plain: true, args?: FormatterArguments): string;\n  export function format(key: LangPackKey, plain?: false, args?: FormatterArguments): ReturnType<typeof superFormatter>;\n  export function format(key: LangPackKey, plain = false, args?: FormatterArguments): ReturnType<typeof superFormatter> | string {\n    const str = strings.get(key);\n    let input: string;\n    if(str) {\n      if(str._ === 'langPackStringPluralized' && args?.length) {\n        let v = args[0] as number | string;\n        if(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\n        const s = pluralRules.select(v);\n        // @ts-ignore\n        input = str[s + '_value'] || str['other_value'];\n      } else if(str._ === 'langPackString') {\n        input = str.value;\n      } else {\n        // input = '[' + key + ']';\n        input = key;\n      }\n    } else {\n      // input = '[' + key + ']';\n      input = key;\n    }\n\n    const result = superFormatter(input, args);\n    if(plain) { // * let's try a hack now... (don't want to replace []() entity)\n      return result.map((item) => item instanceof Node ? item.textContent : item).join('');\n    } else {\n      return result;\n    }\n\n    /* if(plain) {\n      if(args?.length) {\n        const regExp = /un\\d|%\\d\\$.|%./g;\n        let i = 0;\n        input = input.replace(regExp, (match, offset, string) => {\n          return '' + args[i++];\n        });\n      }\n\n      return input;\n    } else {\n      return superFormatter(input, args);\n    } */\n  }\n\n  export const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\n\n  export type IntlElementBaseOptions = {\n    element?: HTMLElement,\n    property?: 'innerText' | 'innerHTML' | 'placeholder' | 'textContent',\n  };\n\n  abstract class IntlElementBase<Options extends IntlElementBaseOptions> {\n    public element: IntlElementBaseOptions['element'];\n    public property: IntlElementBaseOptions['property'];\n\n    constructor(options?: Options) {\n      this.element = options?.element || document.createElement('span');\n      this.element.classList.add('i18n');\n\n      this.property = options?.property;\n      if(options && ((options as any as IntlElementOptions).key || (options as any as IntlDateElementOptions).date)) {\n        this.update(options);\n      }\n\n      weakMap.set(this.element, this);\n    }\n\n    abstract update(options?: Options): void;\n  }\n\n  export type IntlElementOptions = IntlElementBaseOptions & {\n    key?: LangPackKey,\n    args?: FormatterArguments\n  };\n  export class IntlElement extends IntlElementBase<IntlElementOptions> {\n    public key: IntlElementOptions['key'];\n    public args: IntlElementOptions['args'];\n\n    constructor(options: IntlElementOptions = {}) {\n      super({...options, property: options.property ?? 'innerHTML'});\n    }\n\n    public update(options?: IntlElementOptions) {\n      safeAssign(this, options);\n\n      if(this.property === 'innerHTML') {\n        this.element.textContent = '';\n        this.element.append(...format(this.key, false, this.args) as any);\n      } else {\n        // @ts-ignore\n        const v = this.element[this.property];\n        const formatted = format(this.key, true, this.args);\n\n        // * hasOwnProperty won't work here\n        if(v === undefined) this.element.dataset[this.property] = formatted;\n        else (this.element as HTMLInputElement)[this.property] = formatted;\n      }\n    }\n\n    public compareAndUpdate(options?: IntlElementOptions) {\n      if(this.key === options.key && deepEqual(this.args, options.args)) {\n        return;\n      }\n\n      return this.update(options);\n    }\n  }\n\n  const cachedDateTimeFormats: Map<string, Intl.DateTimeFormat> = new Map();\n  function getDateTimeFormat(options: Intl.DateTimeFormatOptions = {}) {\n    const json = JSON.stringify(options);\n    let dateTimeFormat = cachedDateTimeFormats.get(json);\n    if(!dateTimeFormat) {\n      dateTimeFormat = new Intl.DateTimeFormat(lastRequestedNormalizedLangCode + '-u-hc-' + timeFormat, options);\n      cachedDateTimeFormats.set(json, dateTimeFormat);\n    }\n\n    return dateTimeFormat;\n  }\n\n  export let amPmCache = {am: 'AM', pm: 'PM'};\n  export type IntlDateElementOptions = IntlElementBaseOptions & {\n    date?: Date,\n    options: Intl.DateTimeFormatOptions\n  };\n  export class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\n    public date: IntlDateElementOptions['date'];\n    public options: IntlDateElementOptions['options'];\n\n    constructor(options: IntlDateElementOptions) {\n      super({...options, property: options.property ?? 'textContent'});\n    }\n\n    public update(options?: IntlDateElementOptions) {\n      safeAssign(this, options);\n\n      let text: string;\n      if(this.options.hour && this.options.minute && Object.keys(this.options).length === 2/*  && false */) {\n        const hours = this.date.getHours();\n        text = ('0' + (timeFormat === 'h12' ? (hours % 12) || 12 : hours)).slice(-2) + ':' + ('0' + this.date.getMinutes()).slice(-2);\n        // if(this.options.second) {\n        //   text += ':' + ('0' + this.date.getSeconds()).slice(-2);\n        // }\n\n        if(timeFormat === 'h12') {\n          text += ' ' + (hours < 12 ? amPmCache.am : amPmCache.pm);\n        }\n      } else {\n        // * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\n        const dateTimeFormat = getDateTimeFormat(this.options);\n        text = capitalizeFirstLetter(dateTimeFormat.format(this.date));\n      }\n\n      (this.element as any)[this.property] = text;\n    }\n  }\n\n  export function i18n(key: LangPackKey, args?: FormatterArguments) {\n    return new IntlElement({key, args}).element;\n  }\n\n  export function i18n_(options: IntlElementOptions) {\n    return new IntlElement(options).element;\n  }\n\n  export function _i18n(element: HTMLElement, key: LangPackKey, args?: FormatterArguments, property?: IntlElementOptions['property']) {\n    return new IntlElement({element, key, args, property}).element;\n  }\n}\n\nexport {I18n};\nexport default I18n;\n\nconst i18n = I18n.i18n;\nexport {i18n};\n\nconst i18n_ = I18n.i18n_;\nexport {i18n_};\n\nconst _i18n = I18n._i18n;\nexport {_i18n};\n\nexport function joinElementsWith(elements: (Node | string)[], joiner: typeof elements[0] | ((isLast: boolean) => typeof elements[0])) {\n  const arr = elements.slice(0, 1);\n  for(let i = 1; i < elements.length; ++i) {\n    const isLast = (elements.length - 1) === i;\n    arr.push(typeof(joiner) === 'function' ? joiner(isLast) : joiner);\n    arr.push(elements[i]);\n  }\n\n  return arr;\n}\n\n\nexport function join(elements: (Node | string)[], useLast: boolean, plain: true): string;\nexport function join(elements: (Node | string)[], useLast?: boolean, plain?: false): (string | Node)[];\nexport function join(elements: (Node | string)[], useLast: boolean, plain: boolean): string | (string | Node)[];\nexport function join(elements: (Node | string)[], useLast = true, plain?: boolean): string | (string | Node)[] {\n  const joined = joinElementsWith(elements, (isLast) => {\n    const langPackKey: LangPackKey = isLast && useLast ? 'AutoDownloadSettings.LastDelimeter' : 'AutoDownloadSettings.Delimeter';\n    return plain ? I18n.format(langPackKey, true) : i18n(langPackKey);\n  });\n\n  return plain ? joined.join('') : joined;\n}\n\nMOUNT_CLASS_TO.I18n = I18n;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport I18n, {i18n} from '../lib/langPack';\r\n\r\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nexport const ONE_DAY = 86400;\r\n\r\n// https://stackoverflow.com/a/6117889\r\nexport const getWeekNumber = (date: Date) => {\r\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n  const dayNum = d.getUTCDay() || 7;\r\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\r\n};\r\n\r\nexport function formatDateAccordingToTodayNew(time: Date) {\r\n  const today = new Date();\r\n  const now = today.getTime() / 1000 | 0;\r\n  const timestamp = time.getTime() / 1000 | 0;\r\n\r\n  const options: Intl.DateTimeFormatOptions = {};\r\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\r\n    options.hour = options.minute = '2-digit';\r\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\r\n    options.year = options.day = 'numeric';\r\n    options.month = '2-digit';\r\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\r\n    options.weekday = 'short';\r\n  } else { // same year\r\n    options.month = 'short';\r\n    options.day = 'numeric';\r\n  }\r\n\r\n  return new I18n.IntlDateElement({\r\n    date: time,\r\n    options\r\n  }).element;\r\n}\r\n\r\nexport function formatFullSentTimeRaw(timestamp: number, options: {\r\n  capitalize?: boolean\r\n} = {}) {\r\n  const date = new Date();\r\n  const time = new Date(timestamp * 1000);\r\n  const now = date.getTime() / 1000;\r\n\r\n  const timeEl = formatTime(time);\r\n\r\n  let dateEl: Node | string;\r\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\r\n    dateEl = i18n(options.capitalize ? 'Date.Today' : 'Peer.Status.Today');\r\n  } else if((now - timestamp) < (ONE_DAY * 2) && (date.getDate() - 1) === time.getDate()) { // yesterday\r\n    dateEl = i18n(options.capitalize ? 'Yesterday' : 'Peer.Status.Yesterday');\r\n\r\n    if(options.capitalize) {\r\n      (dateEl as HTMLElement).style.textTransform = 'capitalize';\r\n    }\r\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\r\n    dateEl = new I18n.IntlDateElement({\r\n      date: time,\r\n      options: {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      }\r\n    }).element;\r\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate() + ', ' + time.getFullYear();\r\n  } else {\r\n    dateEl = new I18n.IntlDateElement({\r\n      date: time,\r\n      options: {\r\n        month: 'short',\r\n        day: 'numeric'\r\n      }\r\n    }).element;\r\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate();\r\n  }\r\n\r\n  return {dateEl, timeEl};\r\n}\r\n\r\nexport function formatFullSentTime(timestamp: number) {\r\n  const {dateEl, timeEl} = formatFullSentTimeRaw(timestamp, {\r\n    capitalize: true\r\n  });\r\n\r\n  const fragment = document.createDocumentFragment();\r\n  fragment.append(dateEl, ' ', i18n('ScheduleController.at'), ' ', timeEl);\r\n  return fragment;\r\n}\r\n\r\nexport function formatTime(date: Date) {\r\n  return new I18n.IntlDateElement({\r\n    date,\r\n    options: {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }\r\n  }).element;\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\r\n\r\nexport const getFullDate = (date: Date, options: Partial<{\r\n  noTime: true,\r\n  noSeconds: true,\r\n  monthAsNumber: true,\r\n  leadingZero: true\r\n}> = {}) => {\r\n  const joiner = options.monthAsNumber ? '.' : ' ';\r\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\r\n\r\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) +\r\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) +\r\n    joiner + date.getFullYear() +\r\n    (options.noTime ? '' : ', ' + time);\r\n};\r\n\r\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\r\nconst minYear = 2013;\r\nconst yearPattern = new RegExp('20[0-9]{1,2}');\r\nconst monthYearOrDayPattern = new RegExp('(\\\\w{3,}) ([0-9]{0,4})', 'i');\r\nconst yearOrDayAndMonthPattern = new RegExp('([0-9]{0,4}) (\\\\w{2,})', 'i');\r\nconst shortDate = new RegExp('^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\r\nconst longDate = new RegExp('^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\r\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nexport type DateData = {\r\n  title: string,\r\n  minDate: number,\r\n  maxDate: number,\r\n};\r\nexport function fillTipDates(query: string, dates: DateData[]) {\r\n  const q = query.trim().toLowerCase();\r\n\r\n  if(q.length < 3) {\r\n    return;\r\n  }\r\n\r\n  if('today'.indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: 'Today',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  if('yesterday'.indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime() - 86400000;\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 86400001;\r\n    dates.push({\r\n      title: 'Yesterday',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  const dayOfWeek = getDayOfWeek(q);\r\n  if(dayOfWeek >= 0) {\r\n    const date = new Date();\r\n    const now = date.getTime();\r\n    const currentDay = date.getDay();\r\n    const distance = dayOfWeek - currentDay;\r\n    date.setDate(date.getDate() + distance);\r\n    if(date.getTime() > now) {\r\n      date.setTime(date.getTime() - 604800000);\r\n    }\r\n    const year = date.getFullYear()\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: formatWeekLong(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  let matches: any[];\r\n  if((matches = shortDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const k = parseInt(g1);\r\n    const k1 = parseInt(g2);\r\n    if(k > 0 && k <= 31) {\r\n      if(k1 >= minYear && k <= 12) {\r\n        const selectedYear = k1;\r\n        const month = k - 1;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      } else if(k1 <= 12) {\r\n        const day = k - 1;\r\n        const month = k1 - 1;\r\n        createForDayMonth(dates, day, month);\r\n      }\r\n    } else if(k >= minYear && k1 <= 12) {\r\n      const selectedYear = k;\r\n      const month = k1 - 1;\r\n      createForMonthYear(dates, month, selectedYear);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = longDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const g3 = matches[5];\r\n    if(!matches[2] === matches[4]) {\r\n      return;\r\n    }\r\n\r\n    const day = parseInt(g1);\r\n    const month = parseInt(g2) - 1;\r\n    let year = parseInt(g3);\r\n    if(year >= 10 && year <= 99) {\r\n      year += 2000;\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(year, month, day);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      date.setFullYear(year, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: formatterYearMax(minDate),\r\n        minDate,\r\n        maxDate\r\n      });\r\n      return;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = yearPattern.exec(q)) !== null) {\r\n    let selectedYear = +q;\r\n    const currentYear = new Date().getFullYear();\r\n    if(selectedYear < minYear) {\r\n      selectedYear = minYear;\r\n      for(let i = currentYear; i >= selectedYear; i--) {\r\n        const date = new Date();\r\n        date.setFullYear(i, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const minDate = date.getTime();\r\n        date.setFullYear(i + 1, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const maxDate = date.getTime() - 1;\r\n        dates.push({\r\n          title: '' + i,\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    } else if(selectedYear <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(selectedYear, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      date.setFullYear(selectedYear + 1, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: '' + selectedYear,\r\n        minDate,\r\n        maxDate\r\n      });\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g1);\r\n    if(month >= 0) {\r\n      const k = +g2;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if(k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g2);\r\n    if(month >= 0) {\r\n      const k = +g1;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if(k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\r\n  const currentYear = new Date().getFullYear();\r\n  const today = Date.now();\r\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\r\n    const date = new Date();\r\n    date.setFullYear(selectedYear, month, 1);\r\n    date.setHours(0, 0, 0);\r\n    const minDate = date.getTime();\r\n    if(minDate > today) {\r\n      return;\r\n    }\r\n    date.setMonth(date.getMonth() + 1);\r\n    const maxDate = date.getTime() - 1;\r\n\r\n    dates.push({\r\n      title: formatterMonthYear(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n  }\r\n}\r\n\r\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\r\n  if(validDateForMonth(day, month)) {\r\n    const currentYear = new Date().getFullYear();\r\n    const today = Date.now();\r\n\r\n    for(let i = currentYear; i >= minYear; i--) {\r\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\r\n        continue;\r\n      }\r\n\r\n      const date = new Date();\r\n      date.setFullYear(i, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      if(minDate > today) {\r\n        continue;\r\n      }\r\n\r\n      date.setFullYear(i, month, day + 2);\r\n      date.setHours(0, 0, 0);\r\n      const maxDate = date.getTime() - 1;\r\n      if(i === currentYear) {\r\n        dates.push({\r\n          title: formatterDayMonth(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      } else {\r\n        dates.push({\r\n          title: formatterYearMax(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatterMonthYear(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getFullYear();\r\n}\r\n\r\nfunction formatterDayMonth(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getDate();\r\n}\r\n\r\nfunction formatterYearMax(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\r\n}\r\n\r\nfunction formatWeekLong(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return days[date.getDay()];\r\n}\r\n\r\nfunction validDateForMonth(day: number, month: number) {\r\n  if(month >= 0 && month < 12) {\r\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isLeapYear(year: number) {\r\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n}\r\n\r\nfunction getMonth(q: string) {\r\n  /* String[] months = new String[]{\r\n          LocaleController.getString(\"January\", R.string.January).toLowerCase(),\r\n          LocaleController.getString(\"February\", R.string.February).toLowerCase(),\r\n          LocaleController.getString(\"March\", R.string.March).toLowerCase(),\r\n          LocaleController.getString(\"April\", R.string.April).toLowerCase(),\r\n          LocaleController.getString(\"May\", R.string.May).toLowerCase(),\r\n          LocaleController.getString(\"June\", R.string.June).toLowerCase(),\r\n          LocaleController.getString(\"July\", R.string.July).toLowerCase(),\r\n          LocaleController.getString(\"August\", R.string.August).toLowerCase(),\r\n          LocaleController.getString(\"September\", R.string.September).toLowerCase(),\r\n          LocaleController.getString(\"October\", R.string.October).toLowerCase(),\r\n          LocaleController.getString(\"November\", R.string.November).toLowerCase(),\r\n          LocaleController.getString(\"December\", R.string.December).toLowerCase()\r\n  }; */\r\n\r\n  /* String[] monthsEng = new String[12];\r\n  Calendar c = Calendar.getInstance();\r\n  for (int i = 1; i <= 12; i++) {\r\n      c.set(0, 0, 0, 0, 0, 0);\r\n      c.set(Calendar.MONTH, i);\r\n      monthsEng[i - 1] = c.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.ENGLISH).toLowerCase();\r\n  } */\r\n\r\n  q = q.toLowerCase();\r\n  for(let i = 0; i < 12; i++) {\r\n    const month = months[i].toLowerCase();\r\n    if(month.indexOf(q) === 0) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction getDayOfWeek(q: string) {\r\n  const c = new Date();\r\n  if(q.length <= 3) {\r\n    return -1;\r\n  }\r\n\r\n  for(let i = 0; i < 7; i++) {\r\n    c.setDate(c.getDate() + 1);\r\n\r\n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\r\n      return c.getDay();\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\r\n","/**\n * Will be used for FILE_REFERENCE_EXPIRED\n * @param key\n * @param wasObject\n * @param newObject\n */\nexport default function safeReplaceArrayInObject<K>(key: K, wasObject: any, newObject: any) {\n  if('byteLength' in newObject[key]) { // Uint8Array\n    newObject[key] = [...newObject[key]];\n  }\n\n  if(wasObject && wasObject[key] !== newObject[key]) {\n    wasObject[key].length = newObject[key].length;\n    (newObject[key] as any[]).forEach((v, i) => {\n      wasObject[key][i] = v;\n    });\n\n    /* wasObject[key].set(newObject[key]); */\n    newObject[key] = wasObject[key];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {AccountWallPapers, Document, DocumentAttribute, MessagesSavedGifs, PhotoSize, WallPaper} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {getFullDate} from '../../helpers/date';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport {AppManager} from './manager';\nimport wrapPlainText from '../richTextProcessor/wrapPlainText';\nimport assumeType from '../../helpers/assumeType';\nimport {getEnvironment} from '../../environment/utils';\nimport {isServiceWorkerOnline} from '../mtproto/mtproto.worker';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getDocumentInputFileLocation from './utils/docs/getDocumentInputFileLocation';\nimport getDocumentURL from './utils/docs/getDocumentURL';\nimport type {ThumbCache} from '../storages/thumbs';\nimport makeError from '../../helpers/makeError';\n\nexport type MyDocument = Document.document;\n\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\n\nconst EXTENSION_MIME_TYPE_MAP = {\n  mov: 'video/quicktime',\n  gif: 'image/gif',\n  pdf: 'application/pdf'\n};\n\ntype WallPaperId = WallPaper.wallPaper['id'];\n\nlet uploadWallPaperTempId = 0;\n\nexport class AppDocsManager extends AppManager {\n  private docs: {[docId: DocId]: MyDocument};\n\n  private stickerCachedThumbs: {[docId: DocId]: {[toneIndex: number]: {url: string, w: number, h: number}}};\n\n  private uploadingWallPapers: {[id: WallPaperId]: {cacheContext: ThumbCache, file: File}};\n\n  protected after() {\n    this.docs = {};\n    this.stickerCachedThumbs = {};\n    this.uploadingWallPapers = {};\n\n    MTProtoMessagePort.getInstance<false>().addEventListener('serviceWorkerOnline', (online) => {\n      if(!online) {\n        this.onServiceWorkerFail();\n      }\n    });\n  }\n\n  private onServiceWorkerFail = () => {\n    for(const id in this.docs) {\n      const doc = this.docs[id];\n\n      if(doc.supportsStreaming) {\n        delete doc.supportsStreaming;\n        this.thumbsStorage.deleteCacheContext(doc);\n      }\n    }\n  };\n\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\n    if(!doc || doc._ === 'documentEmpty') {\n      return;\n    }\n\n    const oldDoc = this.docs[doc.id];\n\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\n      this.referenceDatabase.saveContext(doc.file_reference, context);\n    }\n\n    // console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\n    // if(oldDoc) {\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\n    //     if(doc.thumbs) {\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\n    //         apiDoc.thumbs[0] = d.thumbs[0];\n    //       } */\n    //     }\n\n    //   //}\n\n    //   return oldDoc;\n\n    //   //return Object.assign(d, apiDoc, context);\n    //   //return context ? Object.assign(d, context) : d;\n    // }\n\n    if(!oldDoc) {\n      this.docs[doc.id] = doc;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name',\n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle',\n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw',\n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\n\n    for(let i = 0, length = doc.attributes.length; i < length; ++i) {\n      const attribute = doc.attributes[i];\n      switch(attribute._) {\n        case 'documentAttributeFilename':\n          doc.file_name = wrapPlainText(attribute.file_name);\n          break;\n\n        case 'documentAttributeAudio':\n          doc.duration = attribute.duration;\n          doc.type = attribute.pFlags.voice && doc.mime_type === 'audio/ogg' ? 'voice' : 'audio';\n          /* if(apiDoc.type === 'audio') {\n            apiDoc.supportsStreaming = true;\n          } */\n          break;\n\n        case 'documentAttributeVideo':\n          doc.duration = attribute.duration;\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          // apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\n            doc.type = 'round';\n          } else /* if(apiDoc.thumbs) */ {\n            doc.type = 'video';\n          }\n          break;\n\n        case 'documentAttributeSticker':\n          if(attribute.alt !== undefined) {\n            doc.stickerEmojiRaw = attribute.alt;\n          }\n\n          if(attribute.stickerset) {\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\n              delete attribute.stickerset;\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\n              doc.stickerSetInput = attribute.stickerset;\n            }\n          }\n\n          // * there can be no thumbs, then it is a document\n          if(/* apiDoc.thumbs &&  */doc.mime_type === 'image/webp' && (doc.thumbs || getEnvironment().IS_WEBP_SUPPORTED)) {\n            doc.type = 'sticker';\n            doc.sticker = 1;\n          } else if(doc.mime_type === 'video/webm') {\n            if(!getEnvironment().IS_WEBM_SUPPORTED) {\n              return;\n            }\n\n            doc.type = 'sticker';\n            doc.sticker = 3;\n            doc.animated = true;\n          }\n          break;\n\n        case 'documentAttributeImageSize':\n          doc.type = 'photo';\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          break;\n\n        case 'documentAttributeAnimated':\n          if((doc.mime_type === 'image/gif' || doc.mime_type === 'video/mp4')/*  && apiDoc.thumbs */) {\n            doc.type = 'gif';\n          }\n\n          doc.animated = true;\n          break;\n      }\n    }\n\n    if(!doc.mime_type) {\n      const ext = (doc.file_name || '').split('.').pop();\n      // @ts-ignore\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase()];\n      if(mappedMimeType) {\n        doc.mime_type = mappedMimeType;\n      } else {\n        switch(doc.type) {\n          case 'gif':\n          case 'video':\n          case 'round':\n            doc.mime_type = 'video/mp4';\n            break;\n          case 'sticker':\n            doc.mime_type = 'image/webp';\n            break;\n          case 'audio':\n            doc.mime_type = 'audio/mpeg';\n            break;\n          case 'voice':\n            doc.mime_type = 'audio/ogg';\n            break;\n          default:\n            doc.mime_type = 'application/octet-stream';\n            break;\n        }\n      }\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\n      doc.type = 'pdf';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\n      doc.type = 'gif';\n    }\n\n    if(doc.type === 'voice' || doc.type === 'round') {\n      // browser will identify extension\n      const attribute = doc.attributes.find((attribute) => attribute._ === 'documentAttributeFilename') as DocumentAttribute.documentAttributeFilename;\n      const ext = attribute && attribute.file_name.split('.').pop();\n      const date = getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\n      doc.file_name = `${doc.type}_${date}${ext ? '.' + ext : ''}`;\n    }\n\n    if(isServiceWorkerOnline()) {\n      if((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video'/*  || doc.mime_type.indexOf('video/') === 0 */) {\n        doc.supportsStreaming = true;\n\n        const cacheContext = this.thumbsStorage.getCacheContext(doc);\n        if(!cacheContext.url) {\n          this.thumbsStorage.setCacheContextURL(doc, undefined, getDocumentURL(doc), 0);\n        }\n      }\n    }\n\n    // for testing purposes\n    // doc.supportsStreaming = false;\n    // doc.url = ''; // * this will break upload urls\n\n    if(!doc.file_name) {\n      doc.file_name = '';\n    }\n\n    if(doc.mime_type === 'application/x-tgsticker' && doc.file_name === 'AnimatedSticker.tgs') {\n      doc.type = 'sticker';\n      doc.animated = true;\n      doc.sticker = 2;\n    }\n\n    /* if(!doc.url) {\n      doc.url = this.getFileURL(doc);\n    } */\n\n    if(oldDoc) {\n      return Object.assign(oldDoc, doc);\n    }\n\n    return doc;\n  }\n\n  public getDoc(docId: DocId | MyDocument): MyDocument {\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\n  }\n\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean) {\n    return this.apiFileManager.downloadMedia({\n      media: doc,\n      queueId,\n      onlyCache\n    });\n  }\n\n  public getLottieCachedThumb(docId: DocId, toneIndex: number) {\n    const cached = this.stickerCachedThumbs[docId];\n    return cached && cached[toneIndex];\n  }\n\n  public saveLottiePreview(docId: DocId, blob: Blob, width: number, height: number, toneIndex: number) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const cached = this.stickerCachedThumbs[doc.id] ??= {};\n\n    const thumb = cached[toneIndex];\n    if(thumb && thumb.w >= width && thumb.h >= height) {\n      return;\n    }\n\n    cached[toneIndex] = {\n      url: URL.createObjectURL(blob),\n      w: width,\n      h: height\n    };\n  }\n\n  public saveWebPConvertedStrippedThumb(docId: DocId, bytes: Uint8Array) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const thumb = doc.thumbs && doc.thumbs.find((thumb) => thumb._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n    if(!thumb) {\n      return;\n    }\n\n    doc.pFlags.stickerThumbConverted = true;\n    thumb.bytes = bytes;\n  }\n\n  public getWallPapers() {\n    return this.apiManager.invokeApiHashable({method: 'account.getWallPapers'}).then((accountWallpapers) => {\n      const wallPapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers as WallPaper.wallPaper[];\n      wallPapers.forEach((wallPaper) => {\n        wallPaper.document = this.saveDoc(wallPaper.document);\n      });\n\n      return wallPapers;\n    });\n  }\n\n  public prepareWallPaperUpload(file: File) {\n    const id = 'wallpaper-upload-' + ++uploadWallPaperTempId;\n\n    const thumb = {\n      _: 'photoSize',\n      h: 0,\n      w: 0,\n      location: {} as any,\n      size: file.size,\n      type: 'full'\n    } as PhotoSize.photoSize;\n    let document: MyDocument = {\n      _: 'document',\n      access_hash: '',\n      attributes: [],\n      dc_id: 0,\n      file_reference: [],\n      id,\n      mime_type: file.type,\n      size: file.size,\n      date: Date.now() / 1000,\n      pFlags: {},\n      thumbs: [thumb],\n      file_name: file.name\n    };\n\n    document = this.saveDoc(document);\n\n    const cacheContext = this.thumbsStorage.setCacheContextURL(document, undefined, URL.createObjectURL(file), file.size);\n\n    const wallpaper: WallPaper.wallPaper = {\n      _: 'wallPaper',\n      access_hash: '',\n      document: document,\n      id,\n      slug: id,\n      pFlags: {}\n    };\n\n    this.uploadingWallPapers[id] = {\n      cacheContext,\n      file\n    };\n\n    return wallpaper;\n  }\n\n  public uploadWallPaper(id: WallPaperId) {\n    const {cacheContext, file} = this.uploadingWallPapers[id];\n    delete this.uploadingWallPapers[id];\n\n    const upload = this.apiFileManager.upload({file, fileName: file.name});\n    return upload.then((inputFile) => {\n      return this.apiManager.invokeApi('account.uploadWallPaper', {\n        file: inputFile,\n        mime_type: file.type,\n        settings: {\n          _: 'wallPaperSettings'\n\n        }\n      }).then((wallPaper) => {\n        assumeType<WallPaper.wallPaper>(wallPaper);\n        wallPaper.document = this.saveDoc(wallPaper.document);\n        this.thumbsStorage.setCacheContextURL(wallPaper.document, undefined, cacheContext.url, cacheContext.downloaded);\n\n        return wallPaper;\n      });\n    });\n  }\n\n  public getGifs() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getSavedGifs',\n      processResult: (res) => {\n        assumeType<MessagesSavedGifs.messagesSavedGifs>(res);\n        return res.gifs.map((doc) => this.saveDoc(doc));\n      }\n    });\n  }\n\n  public requestDocPart(docId: DocId, dcId: number, offset: number, limit: number) {\n    const doc = this.getDoc(docId);\n    if(!doc) return Promise.reject(makeError('NO_DOC'));\n    return this.apiFileManager.requestFilePart(dcId, getDocumentInputFileLocation(doc), offset, limit);\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {FileURLType, getFileURL} from '../../../../helpers/fileName';\r\nimport {Document, PhotoSize} from '../../../../layer';\r\nimport getDocumentDownloadOptions from './getDocumentDownloadOptions';\r\n\r\nexport default function getDocumentURL(doc: Document.document, download = false, thumb?: PhotoSize.photoSize) {\r\n  let type: FileURLType;\r\n  if(download) {\r\n    type = 'download';\r\n  } else if(thumb) {\r\n    type = 'thumb';\r\n  } else if(doc.supportsStreaming) {\r\n    type = 'stream';\r\n  } else {\r\n    type = 'document';\r\n  }\r\n\r\n  return getFileURL(type, getDocumentDownloadOptions(doc, thumb));\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity, DraftMessage, MessagesSaveDraft} from '../../layer';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport stateStorage from '../stateStorage';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport {AppManager} from './manager';\r\nimport generateMessageId from './utils/messageId/generateMessageId';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\nexport type MyDraftMessage = DraftMessage.draftMessage;\r\n\r\nexport class AppDraftsManager extends AppManager {\r\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage} = {};\r\n  private getAllDraftPromise: Promise<void> = null;\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateDraftMessage: (update) => {\r\n        const peerId = this.appPeersManager.getPeerId(update.peer);\r\n        this.saveDraft(peerId, update.threadId, update.draft, {notify: true});\r\n      }\r\n    });\r\n\r\n    /* return  */stateStorage.get('drafts').then((drafts) => {\r\n      this.drafts = drafts || {};\r\n    });\r\n  }\r\n\r\n  private getKey(peerId: PeerId, threadId?: number) {\r\n    return '' + peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public getDraft(peerId: PeerId, threadId?: number) {\r\n    return this.drafts[this.getKey(peerId, threadId)];\r\n  }\r\n\r\n  public addMissedDialogs() {\r\n    return this.getAllDrafts().then(() => {\r\n      for(const key in this.drafts) {\r\n        if(key.indexOf('_') !== -1) { // exclude threads\r\n          continue;\r\n        }\r\n\r\n        const peerId = key.toPeerId();\r\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n        if(!dialog) {\r\n          this.appMessagesManager.reloadConversation(peerId);\r\n          /* const dialog = appMessagesManager.generateDialog(peerId);\r\n          dialog.draft = this.drafts[key];\r\n          appMessagesManager.saveConversation(dialog);\r\n          appMessagesManager.newDialogsToHandle[peerId] = dialog;\r\n          appMessagesManager.scheduleHandleNewDialogs(); */\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAllDrafts() {\r\n    return this.getAllDraftPromise || (\r\n      this.getAllDraftPromise = this.apiManager.invokeApi('messages.getAllDrafts')\r\n      .then((updates) => {\r\n        const p = this.apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\r\n        p.then(() => {\r\n          this.apiUpdatesManager.processUpdateMessage(updates);\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  public saveDraft(peerId: PeerId, threadId: number, apiDraft: DraftMessage, options: Partial<{\r\n    notify: boolean,\r\n    force: boolean\r\n  }> = {}) {\r\n    const draft = this.processApiDraft(apiDraft);\r\n\r\n    const key = this.getKey(peerId, threadId);\r\n    if(draft) {\r\n      this.drafts[key] = draft;\r\n    } else {\r\n      delete this.drafts[key];\r\n    }\r\n\r\n    stateStorage.set({\r\n      drafts: this.drafts\r\n    });\r\n\r\n    if(options.notify) {\r\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\r\n      this.rootScope.dispatchEvent('draft_updated', {\r\n        peerId,\r\n        threadId,\r\n        draft,\r\n        force: options.force\r\n      });\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  private draftsAreEqual(draft1: DraftMessage, draft2: DraftMessage) {\r\n    if(typeof(draft1) !== typeof(draft2)) {\r\n      return false;\r\n    }\r\n\r\n    if(!isObject(draft1)) {\r\n      return true;\r\n    }\r\n\r\n    if(draft1._ !== draft2._) {\r\n      return false;\r\n    }\r\n\r\n    if(draft1._ === 'draftMessage' && draft2._ === draft1._) {\r\n      if(draft1.reply_to_msg_id !== draft2.reply_to_msg_id) {\r\n        return false;\r\n      }\r\n\r\n      if(!deepEqual(draft1.entities, draft2.entities)) {\r\n        return false;\r\n      }\r\n\r\n      if(draft1.message !== draft2.message) {\r\n        return false;\r\n      }\r\n\r\n      if(draft1.pFlags.no_webpage !== draft2.pFlags.no_webpage) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private isEmptyDraft(draft: DraftMessage) {\r\n    if(!draft || draft._ === 'draftMessageEmpty') {\r\n      return true;\r\n    }\r\n\r\n    if(draft.reply_to_msg_id > 0) {\r\n      return false;\r\n    }\r\n\r\n    if(!draft.message.length) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private processApiDraft(draft: DraftMessage): MyDraftMessage {\r\n    if(!draft || draft._ !== 'draftMessage') {\r\n      return undefined;\r\n    }\r\n\r\n    if(draft.reply_to_msg_id) {\r\n      draft.reply_to_msg_id = generateMessageId(draft.reply_to_msg_id);\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  public async syncDraft(peerId: PeerId, threadId: number, localDraft?: DraftMessage, saveOnServer = true, force = false) {\r\n    // console.warn(dT(), 'sync draft', peerID)\r\n    const serverDraft = this.getDraft(peerId, threadId);\r\n    if(this.draftsAreEqual(serverDraft, localDraft)) {\r\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\r\n      return true;\r\n    }\r\n\r\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\r\n    const params: MessagesSaveDraft = {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      message: ''\r\n    };\r\n\r\n    let draftObj: DraftMessage;\r\n    if(this.isEmptyDraft(localDraft)) {\r\n      draftObj = {_: 'draftMessageEmpty'};\r\n    } else {\r\n      assumeType<DraftMessage.draftMessage>(localDraft);\r\n      const message = localDraft.message;\r\n      const entities: MessageEntity[] = localDraft.entities;\r\n\r\n      if(localDraft.reply_to_msg_id) {\r\n        params.reply_to_msg_id = getServerMessageId(localDraft.reply_to_msg_id);\r\n      }\r\n\r\n      if(entities?.length) {\r\n        params.entities = this.appMessagesManager.getInputEntities(entities);\r\n      }\r\n\r\n      if(localDraft.pFlags.no_webpage) {\r\n        params.no_webpage = localDraft.pFlags.no_webpage;\r\n      }\r\n\r\n      params.message = message;\r\n    }\r\n\r\n    const saveLocalDraft = draftObj || localDraft;\r\n    saveLocalDraft.date = tsNow(true) + this.timeManager.getServerTimeOffset();\r\n\r\n    this.saveDraft(peerId, threadId, saveLocalDraft, {notify: true, force});\r\n\r\n    if(saveOnServer && !threadId) {\r\n      return this.apiManager.invokeApi('messages.saveDraft', params);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public clearAllDrafts() {\r\n    return this.apiManager.invokeApi('messages.clearAllDrafts').then((bool) => {\r\n      if(!bool) {\r\n        return;\r\n      }\r\n\r\n      for(const combined in this.drafts) {\r\n        const [peerId, threadId] = combined.split('_');\r\n        this.rootScope.dispatchEvent('draft_updated', {\r\n          peerId: peerId.toPeerId(),\r\n          threadId: threadId ? +threadId : undefined,\r\n          draft: undefined\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearDraft(peerId: PeerId, threadId: number) {\r\n    const emptyDraft: DraftMessage.draftMessageEmpty = {\r\n      _: 'draftMessageEmpty'\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, emptyDraft as any, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, emptyDraft, {notify: true, force: true});\r\n    }\r\n  }\r\n\r\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\r\n    const draft: DraftMessage.draftMessage = {\r\n      _: 'draftMessage',\r\n      date: Date.now() / 1000 | 0,\r\n      message,\r\n      pFlags: {},\r\n      entities\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, draft, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, draft, {notify: true, force: true});\r\n    }\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport isObject from '../../helpers/object/isObject';\nimport validateInitObject from '../../helpers/object/validateInitObject';\nimport I18n from '../langPack';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport SearchIndex from '../searchIndex';\nimport stateStorage from '../stateStorage';\nimport {AppManager} from './manager';\n\ntype EmojiLangPack = {\n  keywords: {\n    [keyword: string]: string[],\n  },\n  version: number,\n  langCode: string\n};\n\nconst EMOJI_LANG_PACK: EmojiLangPack = {\n  keywords: {},\n  version: 0,\n  langCode: App.langPackCode\n};\n\nconst RECENT_MAX_LENGTH = 36;\n\nexport class AppEmojiManager extends AppManager {\n  private static POPULAR_EMOJI = ['😂', '😘', '❤️', '😍', '😊', '😁', '👍', '☺️', '😔', '😄', '😭', '💋', '😒', '😳', '😜', '🙈', '😉', '😃', '😢', '😝', '😱', '😡', '😏', '😞', '😅', '😚', '🙊', '😌', '😀', '😋', '😆', '👌', '😐', '😕'];\n  private keywordLangPacks: {\n    [langCode: string]: EmojiLangPack\n  } = {};\n\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\n\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\n\n  private recent: string[];\n  private getRecentEmojisPromise: Promise<AppEmojiManager['recent']>;\n\n  /* public getPopularEmoji() {\n    return stateStorage.get('emojis_popular').then((popEmojis) => {\n      var result = []\n      if (popEmojis && popEmojis.length) {\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\n        }\n        callback(result)\n        return\n      }\n\n      return stateStorage.get('emojis_recent').then((recentEmojis) => {\n        recentEmojis = recentEmojis || popular || []\n        var shortcut\n        var code\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\n          shortcut = recentEmojis[i]\n          if (Array.isArray(shortcut)) {\n            shortcut = shortcut[0]\n          }\n          if (shortcut && typeof shortcut === 'string') {\n            if (shortcut.charAt(0) == ':') {\n              shortcut = shortcut.substr(1, shortcut.length - 2)\n            }\n            if (code = shortcuts[shortcut]) {\n              result.push({code: code, rate: 1})\n            }\n          }\n        }\n        callback(result)\n      });\n    });\n  }\n\n  function pushPopularEmoji (code) {\n    getPopularEmoji(function (popularEmoji) {\n      var exists = false\n      var count = popularEmoji.length\n      var result = []\n      for (var i = 0; i < count; i++) {\n        if (popularEmoji[i].code == code) {\n          exists = true\n          popularEmoji[i].rate++\n        }\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\n      }\n      if (exists) {\n        result.sort(function (a, b) {\n          return b[1] - a[1]\n        })\n      } else {\n        if (result.length > 41) {\n          result = result.slice(0, 41)\n        }\n        result.push([code, 1])\n      }\n      ConfigStorage.set({emojis_popular: result})\n    })\n  } */\n\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\n    const promise = this.getKeywordsPromises[langCode];\n    if(promise) {\n      return promise;\n    }\n\n    const storageKey: any = 'emojiKeywords_' + langCode;\n    return this.getKeywordsPromises[langCode] = stateStorage.get(storageKey).then((pack: EmojiLangPack) => {\n      if(!isObject(pack)) {\n        pack = {} as any;\n      }\n\n      validateInitObject(EMOJI_LANG_PACK, pack);\n\n      // important\n      pack.langCode = langCode;\n      this.keywordLangPacks[langCode] = pack;\n\n      return this.apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\n        lang_code: pack.langCode,\n        from_version: pack.version\n      }).then((keywordsDifference) => {\n        pack.version = keywordsDifference.version;\n\n        const packKeywords = pack.keywords;\n        const keywords = keywordsDifference.keywords;\n        for(let i = 0, length = keywords.length; i < length; ++i) {\n          const {keyword, emoticons} = keywords[i];\n          packKeywords[keyword] = emoticons;\n        }\n\n        stateStorage.set({\n          [storageKey]: pack\n        });\n\n        return pack;\n      }, () => {\n        return pack;\n      });\n    });\n  }\n\n  public getBothEmojiKeywords() {\n    const promises: Promise<any>[] = [\n      this.getEmojiKeywords()\n    ];\n\n    if(I18n.lastRequestedLangCode !== App.langPackCode) {\n      promises.push(this.getEmojiKeywords(I18n.lastRequestedLangCode));\n    }\n\n    if(!this.recent) {\n      promises.push(this.getRecentEmojis());\n    }\n\n    return Promise.all(promises);\n  }\n\n  private indexEmojis() {\n    if(!this.index) {\n      this.index = new SearchIndex(undefined, 2);\n    }\n\n    for(const langCode in this.keywordLangPacks) {\n      if(this.indexedLangPacks[langCode]) {\n        continue;\n      }\n\n      const pack = this.keywordLangPacks[langCode];\n      const keywords = pack.keywords;\n\n      for(const keyword in keywords) {\n        const emoticons = keywords[keyword];\n        this.index.indexObject(emoticons, keyword);\n      }\n\n      this.indexedLangPacks[langCode] = true;\n    }\n  }\n\n  public searchEmojis(q: string) {\n    this.indexEmojis();\n\n    q = q.toLowerCase().replace(/_/g, ' ');\n\n    // const perf = performance.now();\n    let emojis: Array<string>;\n    if(q.trim()) {\n      const set = this.index.search(q);\n      emojis = Array.from(set).reduce((acc, v) => acc.concat(v), []);\n    } else {\n      emojis = this.recent.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\n    }\n\n    emojis = Array.from(new Set(emojis));\n    // console.log('searchEmojis', q, 'time', performance.now() - perf);\n\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\n        emojis[i] += '\\ufe0f';\n      }\n    } */\n\n    return emojis;\n  }\n\n  public getRecentEmojis() {\n    if(this.getRecentEmojisPromise) return this.getRecentEmojisPromise;\n    return this.getRecentEmojisPromise = this.appStateManager.getState().then((state) => {\n      return this.recent = Array.isArray(state.recentEmoji) ? state.recentEmoji : [];\n    });\n  }\n\n  public pushRecentEmoji(emoji: string) {\n    emoji = fixEmoji(emoji);\n    this.getRecentEmojis().then((recent) => {\n      indexOfAndSplice(recent, emoji);\n      recent.unshift(emoji);\n      if(recent.length > RECENT_MAX_LENGTH) {\n        recent.length = RECENT_MAX_LENGTH;\n      }\n\n      this.appStateManager.pushToState('recentEmoji', recent);\n      this.rootScope.dispatchEvent('emoji_recent', emoji);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport type GroupCallConnectionInstance from '../calls/groupCallConnectionInstance';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {nextRandomUint} from '../../helpers/random';\nimport {DataJSON, GroupCall, GroupCallParticipant, GroupCallParticipantVideoSourceGroup, InputGroupCall, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates} from '../../layer';\nimport {logger} from '../logger';\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\n\nexport type GroupCallId = GroupCall['id'];\nexport type MyGroupCall = GroupCall | InputGroupCall;\n\nexport type GroupCallConnectionType = 'main' | 'presentation';\n\nexport type JoinGroupCallJsonPayload = {\n  fingerprints: {\n    fingerprint: string;\n    setup: string;\n    hash: string;\n  }[];\n  pwd: string;\n  ssrc: number;\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\n  ufrag: string;\n};\n\nconst GET_PARTICIPANTS_LIMIT = 100;\n\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\n\nexport class AppGroupCallsManager extends AppManager {\n  private log: ReturnType<typeof logger>;\n\n  private groupCalls: Map<GroupCallId, MyGroupCall>;\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\n  private nextOffsets: Map<GroupCallId, string>;\n\n  // private doNotDispatchParticipantUpdate: PeerId;\n\n  protected after() {\n    this.log = logger('GROUP-CALLS');\n\n    this.groupCalls = new Map();\n    this.participants = new Map();\n    this.nextOffsets = new Map();\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateGroupCall: (update) => {\n        this.saveGroupCall(update.call, update.chat_id);\n      },\n\n      updateGroupCallParticipants: (update) => {\n        this.saveGroupCall(update.call);\n\n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\n\n        const groupCallId = update.call.id;\n        this.saveApiParticipants(groupCallId, update.participants);\n      }\n    });\n\n    this.rootScope.addEventListener('group_call_update', (groupCall) => {\n      if(groupCall._ === 'groupCallDiscarded') {\n        this.participants.delete(groupCall.id);\n      }\n    });\n  }\n\n  public getCachedParticipants(groupCallId: GroupCallId) {\n    let participants = this.participants.get(groupCallId);\n    if(!participants) {\n      this.participants.set(groupCallId, participants = new Map());\n    }\n\n    return participants;\n  }\n\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\n    const nextOffsetsMap = this.nextOffsets;\n\n    const setNextOffset = (newNextOffset: string) => {\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\n        nextOffsetsMap.set(groupCallId, newNextOffset);\n      }\n    };\n\n    const nextOffset = nextOffsetsMap.get(groupCallId);\n    return {\n      nextOffset,\n      setNextOffset\n    };\n  }\n\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\n    const participants = this.getCachedParticipants(groupCallId);\n\n    const peerId = getPeerId(participant.peer);\n\n    const oldParticipant = participants.get(peerId);\n    const hasLeft = participant.pFlags.left;\n    if(!oldParticipant && hasLeft) {\n      return;\n    }\n\n    // * fix missing flag\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\n      participant.pFlags.can_self_unmute = true;\n    }\n\n    if(oldParticipant) {\n      safeReplaceObject(oldParticipant, participant);\n      participant = oldParticipant;\n    } else {\n      participants.set(peerId, participant);\n    }\n\n    // if(!skipCounterUpdating) {\n    const groupCall = this.getGroupCall(groupCallId);\n    if(groupCall?._ === 'groupCall') {\n      let modified = false;\n      if(hasLeft) {\n        --groupCall.participants_count;\n        modified = true;\n      } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\n        ++groupCall.participants_count;\n        modified = true;\n      }\n\n      if(modified) {\n        this.rootScope.dispatchEvent('group_call_update', groupCall);\n      }\n    }\n    // }\n\n    if(hasLeft) {\n      participants.delete(peerId);\n    }\n\n    if(oldParticipant || true/*  && this.doNotDispatchParticipantUpdate !== peerId */) {\n      this.rootScope.dispatchEvent('group_call_participant', {\n        groupCallId,\n        participant\n      });\n    }\n  }\n\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\n    if((apiParticipants as any).saved) return;\n    (apiParticipants as any).saved = true;\n    apiParticipants.forEach((p) => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\n  }\n\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\n    muted: boolean,\n    volume: number,\n    raiseHand: boolean,\n    videoStopped: boolean,\n    videoPaused: boolean,\n    presentationPaused: boolean\n  }>) {\n    this.saveApiParticipant(groupCallId, participant);\n\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : getPeerId(participant.peer);\n    const updates = await this.apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\n      call: this.getGroupCallInput(groupCallId),\n      participant: peerId === NULL_PEER_ID ? this.appPeersManager.getInputPeerSelf() : this.appPeersManager.getInputPeerById(peerId),\n      muted: options.muted,\n      volume: options.volume,\n      raise_hand: options.raiseHand,\n      video_paused: options.videoPaused,\n      video_stopped: options.videoStopped,\n      presentation_paused: options.presentationPaused\n    });\n\n    // do not replace with peerId because it can be null\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = getPeerId(participant.peer);\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\n  }\n\n  public getGroupCall(id: GroupCallId) {\n    return this.groupCalls.get(id);\n  }\n\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\n    const call = this.getGroupCall(id);\n    if(call && call._ !== 'inputGroupCall' && !override) {\n      return call;\n    }\n\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'phone.getGroupCall',\n      params: {\n        call: this.getGroupCallInput(id),\n        limit\n      },\n      processResult: (groupCall) => {\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\n        this.appUsersManager.saveApiUsers(groupCall.users);\n        this.appChatsManager.saveApiChats(groupCall.chats);\n        this.saveApiParticipants(id, groupCall.participants, true);\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\n\n        if(limit && this.nextOffsets.get(id) === undefined) {\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\n        }\n\n        return call;\n      }\n    });\n  }\n\n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\n    const oldCall = this.groupCalls.get(call.id);\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\n    if(oldCall) {\n      if(shouldUpdate) {\n        safeReplaceObject(oldCall, call);\n      }\n\n      call = oldCall;\n    } else {\n      this.groupCalls.set(call.id, call);\n    }\n\n    if(shouldUpdate) {\n      this.rootScope.dispatchEvent('group_call_update', call as any);\n    }\n\n    return call;\n  }\n\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string) {\n    const updates = await this.apiManager.invokeApi('phone.createGroupCall', {\n      peer: this.appPeersManager.getInputPeerById(chatId.toPeerId(true)),\n      random_id: nextRandomUint(32),\n      schedule_date: scheduleDate,\n      title\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCall') as Update.updateGroupCall;\n    return update.call;\n  }\n\n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\n    const groupCall = this.getGroupCall(id);\n    return {\n      _: 'inputGroupCall',\n      id: groupCall.id,\n      access_hash: groupCall.access_hash\n    };\n  }\n\n  // public generateSelfParticipant(): GroupCallParticipant {\n  //   const mainSources = this.currentGroupCall.connections.main.sources;\n  //   const presentationSources = this.currentGroupCall.connections.presentation?.sources;\n  //   return {\n  //     _: 'groupCallParticipant',\n  //     pFlags: {\n  //       can_self_unmute: true,\n  //       self: true\n  //     },\n  //     source: mainSources.audio.source,\n  //     video: this.generateSelfVideo(mainSources.video),\n  //     presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\n  //     date: tsNow(true),\n  //     peer: this.appPeersManager.getOutputPeer(rootScope.myId)\n  //   };\n  // }\n\n  public async getGroupCallParticipants(id: GroupCallId) {\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\n\n    if(nextOffset !== '') {\n      await this.apiManager.invokeApiSingleProcess({\n        method: 'phone.getGroupParticipants',\n        params: {\n          call: this.getGroupCallInput(id),\n          ids: [],\n          sources: [],\n          offset: nextOffset || '',\n          limit: GET_PARTICIPANTS_LIMIT\n        },\n        processResult: (groupCallParticipants) => {\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\n\n          this.appChatsManager.saveApiChats(groupCallParticipants.chats);\n          this.appUsersManager.saveApiUsers(groupCallParticipants.users);\n          this.saveApiParticipants(id, groupCallParticipants.participants);\n\n          setNextOffset(newNextOffset);\n        }\n      });\n    }\n\n    return {\n      participants: this.getCachedParticipants(id),\n      isEnd: this.nextOffsets.get(id) === ''\n    };\n  }\n\n  public hangUp(id: GroupCallId, discard?: boolean | number) {\n    const groupCallInput = this.getGroupCallInput(id);\n    let promise: Promise<Updates>;\n    if(typeof(discard) === 'boolean' && discard) {\n      promise = this.apiManager.invokeApi('phone.discardGroupCall', {\n        call: groupCallInput\n      });\n    } else if(typeof(discard) === 'number') {\n      promise = this.apiManager.invokeApi('phone.leaveGroupCall', {\n        call: groupCallInput,\n        source: discard\n      });\n    } else {\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', {\n        call: groupCallInput,\n        join_as: this.appPeersManager.getInputPeerSelf(),\n        muted: true,\n        video_stopped: true,\n        params: {\n          _: 'dataJSON',\n          data: ''\n        }\n      });\n    }\n\n    return promise.then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public async joinGroupCall(groupCallId: GroupCallId, params: DataJSON, options: GroupCallConnectionInstance['options']) {\n    const groupCallInput = this.getGroupCallInput(groupCallId);\n    let promise: Promise<Updates>;\n    if(options.type === 'main') {\n      const request: PhoneJoinGroupCall = {\n        call: groupCallInput,\n        join_as: this.appPeersManager.getInputPeerSelf(),\n        params,\n        muted: options.isMuted,\n        video_stopped: !options.joinVideo\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', request);\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\n    } else {\n      const request: PhoneJoinGroupCallPresentation = {\n        call: groupCallInput,\n        params\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCallPresentation', request);\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\n    }\n\n    const updates = await promise;\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\n    return update;\n  }\n\n  public leaveGroupCallPresentation(groupCallId: GroupCallId) {\n    return this.apiManager.invokeApi('phone.leaveGroupCallPresentation', {\n      call: this.getGroupCallInput(groupCallId)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputPhoto} from '../../../../layer';\nimport {MyPhoto} from '../../appPhotosManager';\n\nexport default function getPhotoInput(photo: MyPhoto): InputPhoto.inputPhoto {\n  return {\n    _: 'inputPhoto',\n    id: photo.id,\n    access_hash: photo.access_hash,\n    file_reference: photo.file_reference\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputMedia} from '../../../../layer';\nimport {MyPhoto} from '../../appPhotosManager';\nimport getPhotoInput from './getPhotoInput';\n\nexport default function getPhotoMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\n  return {\n    _: 'inputMediaPhoto',\n    id: getPhotoInput(photo),\n    ttl_seconds: 0\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Document, InputMedia} from '../../../../layer';\r\n\r\nexport default function getMediaInput(doc: Document.document): InputMedia.inputMediaDocument {\r\n  return {\r\n    _: 'inputMediaDocument',\r\n    id: {\r\n      _: 'inputDocument',\r\n      id: doc.id,\r\n      access_hash: doc.access_hash,\r\n      file_reference: doc.file_reference\r\n    },\r\n    ttl_seconds: 0\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDocument} from './appDocsManager';\r\nimport type {MyPhoto} from './appPhotosManager';\r\nimport type {MyTopPeer} from './appUsersManager';\r\nimport {BotInlineResult, GeoPoint, InputGeoPoint, InputMedia, MessageEntity, MessageMedia, MessagesBotResults, ReplyMarkup} from '../../layer';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport {AppManager} from './manager';\r\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport generateQId from './utils/inlineBots/generateQId';\r\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\r\nimport {AppMessagesManager} from './appMessagesManager';\r\n\r\nexport class AppInlineBotsManager extends AppManager {\r\n  private inlineResults: {[queryAndResultIds: string]: BotInlineResult} = {};\r\n  private setHash: {\r\n    [botId: UserId]: {\r\n      peerId: PeerId,\r\n      time: number\r\n    }\r\n  } = {};\r\n\r\n  public getGeoInput(geo: GeoPoint): InputGeoPoint {\r\n    return geo._ === 'geoPoint' ? {\r\n      _: 'inputGeoPoint',\r\n      lat: geo.lat,\r\n      long: geo.long,\r\n      accuracy_radius: geo.accuracy_radius\r\n    } : {\r\n      _: 'inputGeoPointEmpty'\r\n    };\r\n  }\r\n\r\n  public getInlineResults(peerId: PeerId, botId: BotId, query = '', offset = '', geo?: GeoPoint) {\r\n    return this.apiManager.invokeApi('messages.getInlineBotResults', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      query,\r\n      geo_point: geo ? this.getGeoInput(geo) : undefined,\r\n      offset\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then((botResults) => {\r\n      const queryId = botResults.query_id;\r\n\r\n      /* if(botResults.switch_pm) {\r\n        botResults.switch_pm.rText = wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\r\n      } */\r\n\r\n      botResults.results.forEach((result) => {\r\n        if(result._ === 'botInlineMediaResult') {\r\n          if(result.document) {\r\n            result.document = this.appDocsManager.saveDoc(result.document);\r\n          }\r\n\r\n          if(result.photo) {\r\n            result.photo = this.appPhotosManager.savePhoto(result.photo);\r\n          }\r\n        }\r\n\r\n        this.inlineResults[generateQId(queryId, result.id)] = result;\r\n      });\r\n\r\n      return botResults;\r\n    });\r\n  }\r\n\r\n  private pushPopularBot(botId: BotId) {\r\n    this.appUsersManager.getTopPeers('bots_inline').then((topPeers) => {\r\n      const botPeerId = botId.toPeerId();\r\n      const index = topPeers.findIndex((topPeer) => topPeer.id === botPeerId);\r\n      let topPeer: MyTopPeer;\r\n      if(index !== -1) {\r\n        topPeer = topPeers[index];\r\n      } else {\r\n        topPeer = {\r\n          id: botPeerId,\r\n          rating: 0\r\n        };\r\n      }\r\n\r\n      ++topPeer.rating;\r\n      insertInDescendSortedArray(topPeers, topPeer, 'rating');\r\n\r\n      this.appStateManager.setKeyValueToStorage('topPeersCache');\r\n\r\n      // rootScope.$broadcast('inline_bots_popular')\r\n    });\r\n  }\r\n\r\n  public switchToPM(fromPeerId: PeerId, botId: BotId, startParam: string) {\r\n    this.setHash[botId] = {peerId: fromPeerId, time: Date.now()};\r\n    return this.appMessagesManager.startBot(botId, undefined, startParam);\r\n  }\r\n\r\n  /*\r\n  function resolveInlineMention (username) {\r\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\r\n      if (peerId.isUser()) {\r\n        var bot = AppUsersManager.getUser(peerId)\r\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\r\n          var resolvedBot = {\r\n            username: username,\r\n            id: peerId,\r\n            placeholder: bot.bot_inline_placeholder\r\n          }\r\n          if (bot.pFlags.bot_inline_geo &&\r\n            GeoLocationManager.isAvailable()) {\r\n              return checkGeoLocationAccess(peerId).then(function () {\r\n                return GeoLocationManager.getPosition().then(function (coords) {\r\n                  resolvedBot.geo = coords\r\n                  return qSync.when(resolvedBot)\r\n                })\r\n              })['catch'](function () {\r\n                return qSync.when(resolvedBot)\r\n              })\r\n            }\r\n            return qSync.when(resolvedBot)\r\n          }\r\n        }\r\n        return $q.reject()\r\n      }, function (error) {\r\n        error.handled = true\r\n        return $q.reject(error)\r\n      })\r\n    }\r\n\r\n    function regroupWrappedResults (results, rowW, rowH) {\r\n      if (!results ||\r\n        !results[0] ||\r\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\r\n          return\r\n        }\r\n        var ratios = []\r\n        angular.forEach(results, function (result) {\r\n          var w\r\n          var h, doc\r\n          var photo\r\n          if (result._ === 'botInlineMediaResult') {\r\n            if (doc = result.document) {\r\n              w = result.document.w\r\n              h = result.document.h\r\n            }\r\n            else if (photo = result.photo) {\r\n              var photoSize = (photo.sizes || [])[0]\r\n              w = photoSize && photoSize.w\r\n              h = photoSize && photoSize.h\r\n            }\r\n          }else {\r\n            w = result.w\r\n            h = result.h\r\n          }\r\n          if (!w || !h) {\r\n            w = h = 1\r\n          }\r\n          ratios.push(w / h)\r\n        })\r\n\r\n        var rows = []\r\n        var curCnt = 0\r\n        var curW = 0\r\n        angular.forEach(ratios, function (ratio) {\r\n          var w = ratio * rowH\r\n          curW += w\r\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\r\n            curCnt++\r\n          } else {\r\n            rows.push(curCnt)\r\n            curCnt = 1\r\n            curW = w\r\n          }\r\n        })\r\n        if (curCnt) {\r\n          rows.push(curCnt)\r\n        }\r\n\r\n        var i = 0\r\n        var thumbs = []\r\n        var lastRowI = rows.length - 1\r\n        angular.forEach(rows, function (rowCnt, rowI) {\r\n          var lastRow = rowI === lastRowI\r\n          var curRatios = ratios.slice(i, i + rowCnt)\r\n          var sumRatios = 0\r\n          angular.forEach(curRatios, function (ratio) {\r\n            sumRatios += ratio\r\n          })\r\n          angular.forEach(curRatios, function (ratio, j) {\r\n            var thumbH = rowH\r\n            var thumbW = rowW * ratio / sumRatios\r\n            var realW = thumbH * ratio\r\n            if (lastRow && thumbW > realW) {\r\n              thumbW = realW\r\n            }\r\n            var result = results[i + j]\r\n            result.thumbW = Math.floor(thumbW) - 2\r\n            result.thumbH = Math.floor(thumbH) - 2\r\n          })\r\n\r\n          i += rowCnt\r\n        })\r\n      } */\r\n\r\n  public async checkSwitchReturn(botId: BotId) {\r\n    const bot = this.appUsersManager.getUser(botId);\r\n    if(!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\r\n      return;\r\n    }\r\n\r\n    const peerData = this.setHash[botId];\r\n    if(peerData) {\r\n      delete this.setHash[botId];\r\n      if((Date.now() - peerData.time) < 3600e3) {\r\n        return peerData.peerId;\r\n      }\r\n    }\r\n  }\r\n\r\n  public switchInlineQuery(peerId: PeerId, threadId: number, botId: BotId, query: string) {\r\n    this.appDraftsManager.setDraft(peerId, threadId, '@' + this.appUsersManager.getUser(botId).username + ' ' + query);\r\n  }\r\n\r\n  public callbackButtonClick(peerId: PeerId, mid: number, button: any) {\r\n    return this.apiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid),\r\n      data: button.data\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true});\r\n  }\r\n\r\n  /* function gameButtonClick (id) {\r\n    var message = AppMessagesManager.getMessage(id)\r\n    var peerId = AppMessagesManager.getMessagePeer(message)\r\n\r\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: AppPeersManager.getInputPeerByID(peerId),\r\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\r\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\r\n      if (typeof callbackAnswer.message === 'string' &&\r\n      callbackAnswer.message.length) {\r\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\r\n      }\r\n      else if (typeof callbackAnswer.url === 'string') {\r\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\r\n      }\r\n    })\r\n  } */\r\n\r\n  public sendInlineResult(peerId: PeerId, botId: BotId, queryAndResultIds: string, options: Partial<{\r\n    viaBotId: BotId,\r\n    queryId: string,\r\n    resultId: string,\r\n    replyMarkup: ReplyMarkup,\r\n    entities: MessageEntity[],\r\n    replyToMsgId: number,\r\n    clearDraft: true,\r\n    scheduleDate: number,\r\n    silent: true,\r\n    sendAsPeerId: PeerId,\r\n    geoPoint: GeoPoint\r\n  }> = {}) {\r\n    const inlineResult = this.inlineResults[queryAndResultIds];\r\n    if(!inlineResult) {\r\n      return;\r\n    }\r\n\r\n    this.pushPopularBot(botId);\r\n    const splitted = queryAndResultIds.split('_');\r\n    const queryID = splitted.shift();\r\n    const resultID = splitted.join('_');\r\n    options.viaBotId = botId;\r\n    options.queryId = queryID;\r\n    options.resultId = resultID;\r\n    if(inlineResult.send_message.reply_markup) {\r\n      options.replyMarkup = inlineResult.send_message.reply_markup;\r\n    }\r\n\r\n    if(inlineResult.send_message._ === 'botInlineMessageText') {\r\n      options.entities = inlineResult.send_message.entities;\r\n      this.appMessagesManager.sendText(peerId, inlineResult.send_message.message, options);\r\n    } else {\r\n      let caption = '';\r\n      let inputMedia: Parameters<AppMessagesManager['sendOther']>[1], messageMedia: MessageMedia;\r\n      const sendMessage = inlineResult.send_message;\r\n      switch(sendMessage._) {\r\n        case 'botInlineMessageMediaAuto': {\r\n          caption = sendMessage.message;\r\n\r\n          if(inlineResult._ === 'botInlineMediaResult') {\r\n            const {document, photo} = inlineResult;\r\n            if(document) {\r\n              inputMedia = getDocumentMediaInput(document as MyDocument);\r\n            } else {\r\n              inputMedia = getPhotoMediaInput(photo as MyPhoto);\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaGeo': {\r\n          inputMedia = {\r\n            _: 'inputMediaGeoPoint',\r\n            geo_point: this.getGeoInput(sendMessage.geo)\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaVenue': {\r\n          inputMedia = {\r\n            _: 'inputMediaVenue',\r\n            geo_point: this.getGeoInput(sendMessage.geo),\r\n            title: sendMessage.title,\r\n            address: sendMessage.address,\r\n            provider: sendMessage.provider,\r\n            venue_id: sendMessage.venue_id,\r\n            venue_type: sendMessage.venue_type\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaContact': {\r\n          inputMedia = {\r\n            _: 'inputMediaContact',\r\n            phone_number: sendMessage.phone_number,\r\n            first_name: sendMessage.first_name,\r\n            last_name: sendMessage.last_name,\r\n            vcard: sendMessage.vcard\r\n          };\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaInvoice': {\r\n          // const photo = sendMessage.photo;\r\n          // inputMedia = {\r\n          //   _: 'inputMediaInvoice',\r\n          //   description: sendMessage.description,\r\n          //   title: sendMessage.title,\r\n          //   photo: photo && {\r\n          //     _: 'inputWebDocument',\r\n          //     attributes: photo.attributes,\r\n          //     mime_type: photo.mime_type,\r\n          //     size: photo.size,\r\n          //     url: photo.url\r\n          //   },\r\n          //   invoice: undefined,\r\n          //   payload: undefined,\r\n          //   provider: undefined,\r\n          //   provider_data: undefined,\r\n          //   start_param: undefined\r\n          // };\r\n\r\n          messageMedia = {\r\n            _: 'messageMediaInvoice',\r\n            title: sendMessage.title,\r\n            description: sendMessage.description,\r\n            photo: sendMessage.photo,\r\n            currency: sendMessage.currency,\r\n            total_amount: sendMessage.total_amount,\r\n            pFlags: {\r\n              shipping_address_requested: sendMessage.pFlags.shipping_address_requested,\r\n              test: sendMessage.pFlags.test\r\n            },\r\n            start_param: undefined\r\n          };\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      if(!inputMedia && messageMedia) {\r\n        inputMedia = {\r\n          _: 'messageMediaPending',\r\n          messageMedia\r\n        };\r\n      }\r\n\r\n      this.appMessagesManager.sendOther(peerId, inputMedia, options);\r\n    }\r\n  }\r\n\r\n  /* function checkGeoLocationAccess (botID) {\r\n    var key = 'bot_access_geo' + botID\r\n    return Storage.get(key).then(function (geoAccess) {\r\n      if (geoAccess && geoAccess.granted) {\r\n        return true\r\n      }\r\n      return ErrorService.confirm({\r\n        type: 'BOT_ACCESS_GEO_INLINE'\r\n      }).then(function () {\r\n        var setHash = {}\r\n        setHash[key] = {granted: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return true\r\n      }, function () {\r\n        var setHash = {}\r\n        setHash[key] = {denied: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return $q.reject()\r\n      })\r\n    })\r\n  } */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MESSAGE_ID_INCREMENT} from './utils/messageId';\r\nimport generateMessageId from './utils/messageId/generateMessageId';\r\n\r\nexport class AppMessagesIdsManager {\r\n  private tempNum = 0;\r\n\r\n  public generateTempMessageId(messageId: number) {\r\n    const num = ++this.tempNum;\r\n    return generateMessageId(messageId) + (num & (MESSAGE_ID_INCREMENT - 1));\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport App from '../../config/app';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport Modes from '../../config/modes';\r\nimport loadScript from '../../helpers/dom/loadScript';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport sessionStorage from '../sessionStorage';\r\n\r\nexport class TelegramMeWebManager {\r\n  private disabled = /* false &&  */(Modes.test || App.domains.indexOf(location.hostname) === -1);\r\n\r\n  public setAuthorized(canRedirect: boolean) {\r\n    if(this.disabled) {\r\n      return;\r\n    }\r\n\r\n    return sessionStorage.get('tgme_sync').then((curValue) => {\r\n      const ts = tsNow(true);\r\n      if(\r\n        canRedirect &&\r\n        curValue?.canRedirect === canRedirect &&\r\n        (curValue.ts + 86400) > ts\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      sessionStorage.set({\r\n        tgme_sync: {\r\n          canRedirect,\r\n          ts\r\n        }\r\n      });\r\n\r\n      const path = `_websync_?authed=${canRedirect ? '1' : '0'}&version=${encodeURIComponent(App.version + ' ' + App.suffix)}`;\r\n      const urls = [\r\n        '//telegram.me/' + path,\r\n        '//t.me/' + path\r\n      ];\r\n\r\n      const promises = urls.map((url) => {\r\n        return loadScript(url).then((script) => {\r\n          script.remove();\r\n        });\r\n      });\r\n\r\n      return Promise.all(promises);\r\n    });\r\n  }\r\n}\r\n\r\nconst telegramMeWebManager = new TelegramMeWebManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.telegramMeWebManager = telegramMeWebManager);\r\nexport default telegramMeWebManager;\r\n","export default function splitStringByLength(str: string, maxLength: number) {\n  if(str.length < maxLength) return [str];\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\n  const delimiter = ' ';// '\\n';\n  const out: string[] = [];\n\n  const cut = (end?: number) => {\n    let part = str.slice(lastSliceStartIndex, end);\n    const _arrayIndex = arrayIndex++;\n    if(part.length > maxLength) {\n      const overflowPart = part.slice(maxLength);\n      const splitted = splitStringByLength(overflowPart, maxLength);\n      splitted.forEach((part) => {\n        out[arrayIndex++] = part;\n      });\n\n      part = part.slice(0, maxLength);\n    }\n\n    lastSliceStartIndex = end;\n    length = 0;\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\n  };\n\n  let lastIndex = 0;\n  do {\n    let index = str.indexOf(delimiter, lastIndex);\n    if(index === -1) {\n      if(lastIndex !== (str.length - 1)) {\n        cut();\n      }\n\n      break;\n    }\n\n    index += delimiter.length;\n\n    const partLength = index - lastIndex;\n    if((length + partLength) > maxLength) {\n      cut(length);\n    }\n\n    lastIndex = index;\n    length += partLength;\n  } while(true);\n\n  return out;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {TabState} from '../mtproto/mtprotoworker';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\ntype Tab = {\n  source: MessageEventSource,\n  state: TabState\n};\n\nexport class AppTabsManager {\n  private tabs: Map<Tab['source'], Tab>;\n\n  constructor() {\n    this.tabs = new Map();\n  }\n\n  public start() {\n    const port = MTProtoMessagePort.getInstance<false>();\n\n    port.addEventListener('tabState', (state, source) => {\n      const tab = this.tabs.get(source);\n      tab.state = state;\n    });\n  }\n\n  public getTabs() {\n    return [...this.tabs.values()].filter((tab) => !!tab.state);\n  }\n\n  public addTab(source: MessageEventSource) {\n    const tab: Tab = {\n      source,\n      state: undefined\n    };\n\n    this.tabs.set(source, tab);\n  }\n\n  public deleteTab(source: MessageEventSource) {\n    this.tabs.delete(source);\n  }\n}\n\nconst appTabsManager = new AppTabsManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appTabsManager = appTabsManager);\nexport default appTabsManager;\n","import {InputDocument} from '../../../../layer';\nimport type {MyDocument} from '../../appDocsManager';\n\nexport default function getDocumentInput(doc: MyDocument): InputDocument {\n  return {\n    _: 'inputDocument',\n    id: doc.id,\n    access_hash: doc.access_hash,\n    file_reference: doc.file_reference\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LazyLoadQueueBase from '../../components/lazyLoadQueueBase';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport tsNow from '../../helpers/tsNow';\nimport {randomLong} from '../../helpers/random';\nimport {Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer, ReactionCount, MessagePeerReaction, MessagesSearchCounter, Peer, MessageReactions, Document, InputFile} from '../../layer';\nimport {ArgumentTypes, InvokeApiOptions} from '../../types';\nimport {logger, LogTypes} from '../logger';\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {GLOBAL_FOLDER_ID} from '../storages/dialogs';\nimport {ChatRights} from './appChatsManager';\nimport {MyDocument} from './appDocsManager';\nimport {MyPhoto} from './appPhotosManager';\nimport {getFileNameByLocation} from '../../helpers/fileName';\nimport DEBUG from '../../config/debug';\nimport SlicedArray, {Slice, SliceEnd} from '../../helpers/slicedArray';\nimport {FOLDER_ID_ALL, MUTE_UNTIL, NULL_PEER_ID, REAL_FOLDER_ID, REPLIES_HIDDEN_CHANNEL_ID, REPLIES_PEER_ID, SERVICE_PEER_ID} from '../mtproto/mtproto_config';\nimport telegramMeWebManager from '../mtproto/telegramMeWebManager';\nimport {getMiddleware} from '../../helpers/middleware';\nimport assumeType from '../../helpers/assumeType';\nimport copy from '../../helpers/object/copy';\nimport getObjectKeysAndSort from '../../helpers/object/getObjectKeysAndSort';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport splitStringByLength from '../../helpers/string/splitStringByLength';\nimport debounce from '../../helpers/schedulers/debounce';\nimport {AppManager} from './manager';\nimport type {MediaSize} from '../../helpers/mediaSize';\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\nimport getPhotoDownloadOptions from './utils/photos/getPhotoDownloadOptions';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport mergeEntities from '../richTextProcessor/mergeEntities';\nimport parseEntities from '../richTextProcessor/parseEntities';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport generateMessageId from './utils/messageId/generateMessageId';\nimport filterMessagesByInputFilter from './utils/messages/filterMessagesByInputFilter';\nimport ctx from '../../environment/ctx';\nimport {getEnvironment} from '../../environment/utils';\nimport getDialogIndex from './utils/dialogs/getDialogIndex';\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\nimport getDocumentInputFileName from './utils/docs/getDocumentInputFileName';\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\nimport type {Progress} from './appDownloadManager';\nimport noop from '../../helpers/noop';\nimport appTabsManager from './appTabsManager';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getAlbumText from './utils/messages/getAlbumText';\nimport pause from '../../helpers/schedulers/pause';\nimport makeError from '../../helpers/makeError';\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\nimport getDocumentInput from './utils/docs/getDocumentInput';\n\n// console.trace('include');\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\n\nconst APITIMEOUT = 0;\nconst DO_NOT_READ_HISTORY = false;\n\nexport type HistoryStorage = {\n  count: number | null,\n  history: SlicedArray<number>,\n\n  maxId?: number,\n  readPromise?: Promise<void>,\n  readMaxId?: number,\n  readOutboxMaxId?: number,\n  triedToReadMaxId?: number,\n\n  maxOutId?: number,\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>\n};\n\nexport type HistoryResult = {\n  count: number,\n  history: number[],\n  isEnd: ReturnType<Slice<number>['getEnds']>,\n  offsetIdOffset?: number,\n};\n\nexport type Dialog = MTDialog.dialog;\n\nexport type MyMessage = Message.message | Message.messageService;\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty'\n  | 'inputMessagesFilterPhotos'\n  | 'inputMessagesFilterPhotoVideo'\n  | 'inputMessagesFilterVideo'\n  | 'inputMessagesFilterDocument'\n  | 'inputMessagesFilterVoice'\n  | 'inputMessagesFilterRoundVoice'\n  | 'inputMessagesFilterRoundVideo'\n  | 'inputMessagesFilterMusic'\n  | 'inputMessagesFilterUrl'\n  | 'inputMessagesFilterMyMentions'\n  | 'inputMessagesFilterChatPhotos'\n  | 'inputMessagesFilterPinned';\n\nexport type PinnedStorage = Partial<{\n  promise: Promise<PinnedStorage>,\n  count: number,\n  maxId: number\n}>;\nexport type MessagesStorage = Map<number, Message.message | Message.messageService> & {peerId: PeerId, type: MessagesStorageType, key: MessagesStorageKey};\nexport type MessagesStorageType = 'scheduled' | 'history' | 'grouped';\nexport type MessagesStorageKey = `${PeerId}_${MessagesStorageType}`;\n\nexport type MyMessageActionType = Message.messageService['action']['_'];\n\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\n  afterMessageId: string,\n  messageId: string\n}>;\n\ntype MapValueType<A> = A extends Map<any, infer V> ? V : never;\n\nexport type BatchUpdates = {\n  'messages_reactions': AppMessagesManager['batchUpdateReactions'],\n  'messages_views': AppMessagesManager['batchUpdateViews']\n};\n\ntype PendingMessageDetails = {\n  peerId: PeerId,\n  tempId: number,\n  threadId: number,\n  storage: MessagesStorage,\n  sequential?: boolean\n};\n\nconst processAfter = (cb: () => void) => {\n  // setTimeout(cb, 0);\n  cb();\n};\n\nexport class AppMessagesManager extends AppManager {\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\n  private groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\n  private historiesStorage: {\n    [peerId: PeerId]: HistoryStorage\n  };\n  private threadsStorage: {\n    [peerId: PeerId]: {\n      [threadId: string]: HistoryStorage\n    }\n  };\n  private searchesStorage: {\n    [peerId: PeerId]: Partial<{\n      [inputFilter in MyInputMessagesFilter]: {\n        count?: number,\n        history: number[]\n      }\n    }>\n  };\n  private pinnedMessages: {[peerId: PeerId]: PinnedStorage};\n\n  private threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\n  private threadsToReplies: {\n    [peerId_threadId: string]: string;\n  };\n\n  private pendingByRandomId: {\n    [randomId: string]: PendingMessageDetails\n  } = {};\n  private pendingByMessageId: {[mid: string]: Long} = {};\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\n  public pendingTopMsgs: {[peerId: PeerId]: number} = {};\n  private tempFinalizeCallbacks: {\n    [tempId: string]: {\n      [callbackName: string]: Partial<{\n        deferred: CancellablePromise<void>,\n        callback: (message: MyMessage) => Promise<any>\n      }>\n    }\n  } = {};\n\n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\n\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message.message | Message.messageService>>> = new Map();\n  private fetchSingleMessagesPromise: Promise<void> = null;\n\n  private maxSeenId = 0;\n\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\n\n  private newDialogsHandlePromise: Promise<any>;\n  private newDialogsToHandle: Map<PeerId, Dialog> = new Map();\n  public newUpdatesAfterReloadToHandle: {[peerId: PeerId]: Set<Update>} = {};\n\n  private notificationsHandlePromise = 0;\n  private notificationsToHandle: {[peerId: PeerId]: {\n    fwdCount: number,\n    fromId: PeerId,\n    topMessage?: MyMessage\n  }} = {};\n\n  private reloadConversationsPromise: Promise<void>;\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>}> = new Map();\n\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\n\n  private groupedTempId = 0;\n\n  private typings: {[peerId: PeerId]: {action: SendMessageAction, timeout?: number}} = {};\n\n  private middleware: ReturnType<typeof getMiddleware>;\n\n  private unreadMentions: {[peerId: PeerId]: SlicedArray<number>} = {};\n  private goToNextMentionPromises: {[peerId: PeerId]: Promise<number>} = {};\n\n  private batchUpdates: {\n    [k in keyof BatchUpdates]?: {\n      callback: BatchUpdates[k],\n      batch: ArgumentTypes<BatchUpdates[k]>[0]\n    }\n  } = {};\n  private batchUpdatesDebounced: () => Promise<void>;\n\n  private uploadFilePromises: {[fileName: string]: CancellablePromise<any>};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateMessageID: this.onUpdateMessageId,\n\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\n      updateNewMessage: this.onUpdateNewMessage,\n      updateNewChannelMessage: this.onUpdateNewMessage,\n\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\n\n      updateEditMessage: this.onUpdateEditMessage,\n      updateEditChannelMessage: this.onUpdateEditMessage,\n\n      updateMessageReactions: this.onUpdateMessageReactions,\n\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\n      updateReadHistoryInbox: this.onUpdateReadHistory,\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\n      updateReadChannelInbox: this.onUpdateReadHistory,\n      updateReadChannelOutbox: this.onUpdateReadHistory,\n\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\n\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\n\n      updateDeleteMessages: this.onUpdateDeleteMessages,\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\n\n      updateChannel: this.onUpdateChannel,\n\n      updateChannelReload: this.onUpdateChannelReload,\n\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\n\n      updateServiceNotification: this.onUpdateServiceNotification,\n\n      updatePinnedMessages: this.onUpdatePinnedMessages,\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\n\n      updateNotifySettings: this.onUpdateNotifySettings,\n\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\n\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages\n    });\n\n    // ! Invalidate notify settings, can optimize though\n    this.rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1));\n      let filterFunc: (dialog: Dialog) => boolean;\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => this.appPeersManager.isBroadcast(dialog.peerId);\n      else filterFunc = (dialog) => this.appPeersManager.isAnyGroup(dialog.peerId);\n\n      dialogs\n      .filter(filterFunc)\n      .forEach((dialog) => {\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n      });\n    });\n\n    this.rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\n      msgs.forEach(({peerId, mid, isScheduled}) => {\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\n        if(!message) return;\n        message.media = {\n          _: 'messageMediaWebPage',\n          webpage: this.appWebPagesManager.getCachedWebPage(id)\n        };\n\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: storage.key,\n          peerId,\n          mid,\n          message\n        });\n      });\n    });\n\n    this.rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\n      if(threadId) return;\n\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        if(!threadId) {\n          dialog.draft = draft;\n\n          let drop = false;\n          if(!draft && !getServerMessageId(dialog.top_message)) {\n            this.dialogsStorage.dropDialog(peerId);\n            drop = true;\n          } else {\n            this.dialogsStorage.generateIndexForDialog(dialog);\n            this.dialogsStorage.pushDialog(dialog);\n          }\n\n          this.rootScope.dispatchEvent('dialog_draft', {\n            peerId,\n            dialog,\n            drop,\n            draft\n          });\n        }\n      } else {\n        this.reloadConversation(peerId);\n      }\n    });\n\n    this.rootScope.addEventListener('poll_update', ({poll}) => {\n      const set = this.appPollsManager.pollToMessages[poll.id];\n      if(set) {\n        for(const key of set) {\n          const [peerId, mid] = key.split('_');\n\n          const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\n          this.setDialogToStateIfMessageIsTop(message);\n        }\n      }\n    });\n\n    this.batchUpdatesDebounced = debounce(() => {\n      for(const event in this.batchUpdates) {\n        const details = this.batchUpdates[event as keyof BatchUpdates];\n        delete this.batchUpdates[event as keyof BatchUpdates];\n\n        // @ts-ignore\n        const result = details.callback(details.batch);\n        if(result && (!(result instanceof Array) || result.length)) {\n          // @ts-ignore\n          rootScope.dispatchEvent(event as keyof BatchUpdates, result);\n        }\n      }\n    }, 33, false, true);\n\n    return this.appStateManager.getState().then((state) => {\n      if(state.maxSeenMsgId) {\n        this.maxSeenId = state.maxSeenMsgId;\n      }\n    });\n  }\n\n  public clear = (init?: boolean) => {\n    if(this.middleware) {\n      this.middleware.clean();\n    } else {\n      this.middleware = getMiddleware();\n      this.uploadFilePromises = {};\n    }\n\n    this.messagesStorageByPeerId = {};\n    this.groupedMessagesStorage = {};\n    this.scheduledMessagesStorage = {};\n    this.historiesStorage = {};\n    this.threadsStorage = {};\n    this.searchesStorage = {};\n    this.pinnedMessages = {};\n    this.threadsServiceMessagesIdsStorage = {};\n    this.threadsToReplies = {};\n\n    this.dialogsStorage && this.dialogsStorage.clear(init);\n    this.filtersStorage && this.filtersStorage.clear(init);\n  };\n\n  public getInputEntities(entities: MessageEntity[]) {\n    const sendEntites = copy(entities);\n    sendEntites.forEach((entity) => {\n      if(entity._ === 'messageEntityMentionName') {\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = this.appUsersManager.getUserInput(entity.user_id);\n      }\n    });\n    return sendEntites;\n  }\n\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: MyMessage) => Promise<any>) {\n    const finalize = this.tempFinalizeCallbacks[tempId] ?? (this.tempFinalizeCallbacks[tempId] = {});\n    const obj = finalize[callbackName] ?? (finalize[callbackName] = {deferred: deferredPromise<void>()});\n\n    obj.callback = callback;\n\n    return obj.deferred;\n  }\n\n  public editMessage(message: any, text: string, options: Partial<{\n    noWebPage: true,\n    newMedia: any,\n    scheduleDate: number,\n    entities: MessageEntity[]\n  }> = {}): Promise<void> {\n    /* if(!this.canEditMessage(messageId)) {\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\n    } */\n\n    const {mid, peerId} = message;\n\n    if(message.pFlags.is_outgoing) {\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\n        // this.log('invoke editMessage callback', message);\n        return this.editMessage(message, text, options);\n      });\n    }\n\n    const entities = options.entities || [];\n    if(text) {\n      text = parseMarkdown(text, entities);\n    }\n\n    const schedule_date = options.scheduleDate || (message.pFlags.is_scheduled ? message.date : undefined);\n    return this.apiManager.invokeApi('messages.editMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: message.id,\n      message: text,\n      media: options.newMedia,\n      entities: entities.length ? this.getInputEntities(entities) : undefined,\n      no_webpage: options.noWebPage,\n      schedule_date\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error) => {\n      this.log.error('editMessage error:', error);\n\n      if(error && error.type === 'MESSAGE_NOT_MODIFIED') {\n        error.handled = true;\n        return;\n      }\n      if(error && error.type === 'MESSAGE_EMPTY') {\n        error.handled = true;\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  public async sendText(peerId: PeerId, text: string, options: Partial<{\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    queryId: string,\n    resultId: string,\n    noWebPage: true,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    webPage: WebPage,\n    scheduleDate: number,\n    silent: true,\n    sendAsPeerId: PeerId,\n  }> = {}): Promise<void> {\n    if(!text.trim()) {\n      return;\n    }\n\n    options.entities ??= [];\n\n    // this.checkSendOptions(options);\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    const config = await this.apiManager.getConfig();\n    const MAX_LENGTH = config.message_length_max;\n    const splitted = splitStringByLength(text, MAX_LENGTH);\n    text = splitted[0];\n    if(splitted.length > 1) {\n      if(options.webPage?._ === 'webPage' && !text.includes(options.webPage.url)) {\n        delete options.webPage;\n      }\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    const entities = options.entities;\n    if(!options.viaBotId) {\n      text = parseMarkdown(text, entities);\n      // entities = mergeEntities(entities, parseEntities(text));\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    message.entities = entities;\n    message.message = text;\n\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n    const isChannel = this.appPeersManager.isChannel(peerId);\n\n    if(options.webPage) {\n      message.media = {\n        _: 'messageMediaWebPage',\n        webpage: options.webPage\n      };\n    }\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      toggleError(false);\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n      let apiPromise: any;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMessage', {\n          no_webpage: options.noWebPage,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          message: text,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate || undefined,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      }\n\n      /* function is<T>(value: any, condition: boolean): value is T {\n        return condition;\n      } */\n\n      // this.log('sendText', message.mid);\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates: Updates) => {\n        // this.log('sendText sent', message.mid);\n        // if(is<Updates.updateShortSentMessage>(updates, updates._ === 'updateShortSentMessage')) {\n        if(updates._ === 'updateShortSentMessage') {\n          // assumeType<Updates.updateShortSentMessage>(updates);\n\n          // * fix copying object with promise\n          const promise = message.promise;\n          delete message.promise;\n          const newMessage = copy(message);\n          defineNotNumerableProperties(message, ['promise']);\n          message.promise = promise;\n\n          newMessage.date = updates.date;\n          newMessage.id = updates.id;\n          newMessage.media = updates.media;\n          newMessage.entities = updates.entities;\n          this.wrapMessageEntities(newMessage);\n          if(updates.pFlags.out) {\n            newMessage.pFlags.out = true;\n          }\n\n          // * override with new updates\n          updates = {\n            _: 'updates',\n            users: [],\n            chats: [],\n            seq: 0,\n            date: undefined,\n            updates: [{\n              _: 'updateMessageID',\n              random_id: message.random_id,\n              id: newMessage.id\n            }, {\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\n              message: newMessage,\n              pts: updates.pts,\n              pts_count: updates.pts_count\n            }]\n          };\n        } else if((updates as Updates.updates).updates) {\n          (updates as Updates.updates).updates.forEach((update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n        // Testing bad situations\n        // var upd = angular.copy(updates)\n        // updates.updates.splice(0, 1)\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // $timeout(function () {\n        // ApiUpdatesManager.processUpdateMessage(upd)\n        // }, 5000)\n        message.promise.resolve();\n      }, (error: any) => {\n        toggleError(true);\n        message.promise.reject(error);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    const promises: ReturnType<AppMessagesManager['sendText']>[] = [message.promise];\n    for(let i = 1; i < splitted.length; ++i) {\n      promises.push(this.sendText(peerId, splitted[i], options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public sendFile(peerId: PeerId, file: File | Blob | MyDocument, options: Partial<{\n    isRoundMessage: true,\n    isVoiceMessage: true,\n    isGroupedItem: true,\n    isMedia: true,\n\n    replyToMsgId: number,\n    sendAsPeerId: PeerId,\n    threadId: number,\n    groupId: string,\n    caption: string,\n    entities: MessageEntity[],\n    width: number,\n    height: number,\n    objectURL: string,\n    thumb: {\n      blob: Blob,\n      url: string,\n      size: MediaSize\n    },\n    duration: number,\n    background: boolean,\n    silent: boolean,\n    clearDraft: boolean,\n    scheduleDate: number,\n    noSound: boolean,\n\n    waveform: Uint8Array,\n\n    // ! only for internal use\n    processAfter?: typeof processAfter\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    // this.checkSendOptions(options);\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\n\n    const fileType = 'mime_type' in file ? file.mime_type : file.type;\n    const fileName = file instanceof File ? file.name : '';\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\n    let caption = options.caption || '';\n\n    this.log('sendFile', file, fileType);\n\n    const entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    const attributes: DocumentAttribute[] = [];\n\n    const isPhoto = getEnvironment().IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\n\n    let photo: MyPhoto, document: MyDocument;\n\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\n    if(isDocument) { // maybe it's a sticker or gif\n      attachType = 'document';\n      apiFileName = '';\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\n      attachType = 'audio';\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\n      actionName = 'sendMessageUploadAudioAction';\n\n      if(options.isVoiceMessage) {\n        attachType = 'voice';\n        message.pFlags.media_unread = true;\n      }\n\n      const attribute: DocumentAttribute.documentAttributeAudio = {\n        _: 'documentAttributeAudio',\n        pFlags: {\n          voice: options.isVoiceMessage\n        },\n        waveform: options.waveform,\n        duration: options.duration || 0\n      };\n\n      attributes.push(attribute);\n    } else if(!options.isMedia) {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    } else if(isPhoto) {\n      attachType = 'photo';\n      apiFileName = 'photo.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadPhotoAction';\n\n      const photoSize = {\n        _: 'photoSize',\n        w: options.width,\n        h: options.height,\n        type: 'full',\n        location: null,\n        size: file.size\n      } as PhotoSize.photoSize;\n\n      photo = {\n        _: 'photo',\n        id: '' + message.id,\n        sizes: [photoSize],\n        w: options.width,\n        h: options.height\n      } as any;\n\n      const cacheContext = this.thumbsStorage.getCacheContext(photo, photoSize.type);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n\n      photo = this.appPhotosManager.savePhoto(photo);\n    } else if(getEnvironment().VIDEO_MIME_TYPES_SUPPORTED.has(fileType)) {\n      attachType = 'video';\n      apiFileName = 'video.mp4';\n      actionName = 'sendMessageUploadVideoAction';\n\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\n        _: 'documentAttributeVideo',\n        pFlags: {\n          round_message: options.isRoundMessage,\n          supports_streaming: true\n        },\n        duration: options.duration,\n        w: options.width,\n        h: options.height\n      };\n\n      attributes.push(videoAttribute);\n\n      // * must follow after video attribute\n      if(options.noSound &&\n        file.size > (10 * 1024) &&\n        file.size < (10 * 1024 * 1024)) {\n        attributes.push({\n          _: 'documentAttributeAnimated'\n        });\n      }\n    } else {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    }\n\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\n\n    if((['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).indexOf(attachType) !== -1 && !isDocument) {\n      const thumbs: PhotoSize[] = [];\n      document = {\n        _: 'document',\n        id: '' + message.id,\n        duration: options.duration,\n        attributes,\n        w: options.width,\n        h: options.height,\n        thumbs,\n        mime_type: fileType,\n        size: file.size\n      } as any;\n\n      if(options.objectURL) {\n        const cacheContext = this.thumbsStorage.getCacheContext(document);\n        cacheContext.downloaded = file.size;\n        cacheContext.url = options.objectURL;\n      }\n\n      let thumb: PhotoSize.photoSize;\n      if(isPhoto) {\n        attributes.push({\n          _: 'documentAttributeImageSize',\n          w: options.width,\n          h: options.height\n        });\n\n        thumb = {\n          _: 'photoSize',\n          w: options.width,\n          h: options.height,\n          type: 'full',\n          size: file.size\n        };\n      } else if(attachType === 'video') {\n        if(options.thumb) {\n          thumb = {\n            _: 'photoSize',\n            w: options.thumb.size.width,\n            h: options.thumb.size.height,\n            type: 'local-thumb',\n            size: options.thumb.blob.size\n          };\n\n          const thumbCacheContext = this.thumbsStorage.getCacheContext(document, thumb.type);\n          thumbCacheContext.downloaded = thumb.size;\n          thumbCacheContext.url = options.thumb.url;\n        }\n      }\n\n      if(thumb) {\n        thumbs.push(thumb);\n      }\n\n      /* if(thumbs.length) {\n        const thumb = thumbs[0] as PhotoSize.photoSize;\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\n        docThumb.downloaded = thumb.size;\n        docThumb.url = thumb.url;\n      } */\n\n      document = this.appDocsManager.saveDoc(document);\n    }\n\n    this.log('sendFile', attachType, apiFileName, file.type, options);\n\n    const sentDeferred = deferredPromise<InputMedia>();\n    // sentDeferred.cancel = () => {\n    //   const error = new Error('Download canceled');\n    //   error.name = 'AbortError';\n    //   sentDeferred.reject(error);\n\n    //   if(uploadPromise?.cancel) {\n    //     uploadPromise.cancel();\n    //   }\n    // };\n\n    const media: MessageMedia = isDocument ? undefined : {\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\n      pFlags: {},\n      // preloader,\n      photo,\n      document\n    };\n\n    if(media) {\n      defineNotNumerableProperties(media as any, ['promise']);\n      (media as any).promise = sentDeferred;\n    }\n\n    message.entities = entities;\n    message.message = caption;\n    message.media = isDocument ? {\n      _: 'messageMediaDocument',\n      pFlags: {},\n      document: file\n    } as MessageMedia.messageMediaDocument : media;\n\n    const uploadingFileName = !isDocument ? getFileNameForUpload(file) : undefined;\n    message.uploadingFileName = uploadingFileName;\n\n    if(uploadingFileName) {\n      this.uploadFilePromises[uploadingFileName] = sentDeferred;\n    }\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    let uploaded = false,\n      uploadPromise: ReturnType<ApiFileManager['upload']> = null;\n\n    message.send = () => {\n      if(isDocument) {\n        const inputMedia: InputMedia = {\n          _: 'inputMediaDocument',\n          id: getDocumentInput(file)\n        };\n\n        sentDeferred.resolve(inputMedia);\n      } else if(file instanceof File || file instanceof Blob) {\n        const load = () => {\n          if(!uploaded || message.error) {\n            uploaded = false;\n\n            uploadPromise = this.apiFileManager.upload({file, fileName: uploadingFileName});\n            uploadPromise.catch((err) => {\n              if(!uploaded) {\n                this.log('cancelling upload', media);\n\n                this.cancelPendingMessage(message.random_id);\n                this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n                sentDeferred.reject(err);\n              }\n            });\n\n            uploadPromise.addNotifyListener((progress: Progress) => {\n              /* if(DEBUG) {\n                this.log('upload progress', progress);\n              } */\n\n              const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\n              if(actionName) {\n                this.setTyping(peerId, {_: actionName, progress: percents | 0});\n              }\n              sentDeferred.notifyAll(progress);\n            });\n\n            sentDeferred.notifyAll({done: 0, total: file.size});\n          }\n\n          let thumbUploadPromise: typeof uploadPromise;\n          if(attachType === 'video' && options.objectURL && options.thumb?.blob) {\n            thumbUploadPromise = this.apiFileManager.upload({file: options.thumb.blob});\n          }\n\n          uploadPromise && uploadPromise.then(async(inputFile) => {\n            /* if(DEBUG) {\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\n            } */\n\n            inputFile.name = apiFileName;\n            uploaded = true;\n            let inputMedia: InputMedia;\n            switch(attachType) {\n              case 'photo':\n                inputMedia = {\n                  _: 'inputMediaUploadedPhoto',\n                  file: inputFile\n                };\n                break;\n\n              default:\n                inputMedia = {\n                  _: 'inputMediaUploadedDocument',\n                  file: inputFile,\n                  mime_type: fileType,\n                  pFlags: {\n                    force_file: actionName === 'sendMessageUploadDocumentAction' ? true : undefined\n                    // nosound_video: options.noSound ? true : undefined\n                  },\n                  attributes\n                };\n            }\n\n            if(thumbUploadPromise) {\n              try {\n                const inputFile = await thumbUploadPromise;\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\n              } catch(err) {\n                this.log.error('sendFile thumb upload error:', err);\n              }\n            }\n\n            sentDeferred.resolve(inputMedia);\n          }, (/* error */) => {\n            toggleError(true);\n          });\n\n          return sentDeferred;\n        };\n\n        if(options.isGroupedItem) {\n          load();\n        } else {\n          this.sendSmthLazyLoadQueue.push({\n            load\n          });\n        }\n      }\n\n      return sentDeferred;\n    };\n\n    this.beforeMessageSending(message, {\n      isGroupedItem: options.isGroupedItem,\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      processAfter: options.processAfter\n    });\n\n    if(!options.isGroupedItem) {\n      sentDeferred.then((inputMedia) => {\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n        return this.apiManager.invokeApi('messages.sendMedia', {\n          background: options.background,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          message: caption,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          entities,\n          clear_draft: options.clearDraft,\n          send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n        }).then((updates) => {\n          this.apiUpdatesManager.processUpdateMessage(updates);\n        }, (error) => {\n          if(attachType === 'photo' &&\n            error.code === 400 &&\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\n            error.handled = true;\n            attachType = 'document';\n            message.send();\n            return;\n          }\n\n          toggleError(true);\n          throw error;\n        });\n      });\n\n      sentDeferred.then(message.promise.resolve, message.promise.reject);\n    }\n\n    const ret: {\n      message: typeof message,\n      promise: typeof sentDeferred\n    } = {\n      message\n    } as any;\n\n    defineNotNumerableProperties(ret, ['promise']);\n    ret.promise = sentDeferred;\n\n    return ret;\n  }\n\n  public async sendAlbum(peerId: PeerId, files: File[], options: Partial<{\n    isMedia: true,\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    sendAsPeerId: PeerId,\n    threadId: number,\n    caption: string,\n    sendFileDetails: Partial<{\n      duration: number,\n      width: number,\n      height: number,\n      objectURL: string,\n      thumbBlob: Blob,\n      thumbURL: string\n    }>[],\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number\n  }> = {}) {\n    // this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    if(files.length === 1) {\n      return this.sendFile(peerId, files[0], {...options, ...options.sendFileDetails[0]});\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let caption = options.caption || '';\n    let entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    this.log('sendAlbum', files, options);\n\n    const groupId = '' + ++this.groupedTempId;\n\n    const callbacks: Array<() => void> = [];\n    const processAfter = (cb: () => void) => {\n      callbacks.push(cb);\n    };\n\n    const messages = files.map((file, idx) => {\n      const details = options.sendFileDetails[idx];\n      const o: Parameters<AppMessagesManager['sendFile']>[2] = {\n        isGroupedItem: true,\n        isMedia: options.isMedia,\n        scheduleDate: options.scheduleDate,\n        silent: options.silent,\n        replyToMsgId,\n        threadId: options.threadId,\n        sendAsPeerId: options.sendAsPeerId,\n        groupId,\n        processAfter,\n        ...details\n      };\n\n      if(idx === 0) {\n        o.caption = caption;\n        o.entities = entities;\n        // o.replyToMsgId = replyToMsgId;\n      }\n\n      return this.sendFile(peerId, file, o).message;\n    });\n\n    if(options.clearDraft) {\n      callbacks.push(() => {\n        this.appDraftsManager.clearDraft(peerId, options.threadId);\n      });\n    }\n\n    callbacks.forEach((callback) => {\n      callback();\n    });\n\n    // * test pending\n    // return;\n\n    const toggleError = (message: any, on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n    const invoke = (multiMedia: InputSingleMedia[]) => {\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n      const deferred = deferredPromise<void>();\n      this.sendSmthLazyLoadQueue.push({\n        load: () => {\n          return this.apiManager.invokeApi('messages.sendMultiMedia', {\n            peer: inputPeer,\n            multi_media: multiMedia,\n            reply_to_msg_id: replyToMsgId,\n            schedule_date: options.scheduleDate,\n            silent: options.silent,\n            clear_draft: options.clearDraft,\n            send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n          }).then((updates) => {\n            this.apiUpdatesManager.processUpdateMessage(updates);\n            deferred.resolve();\n          }, (error) => {\n            messages.forEach((message) => toggleError(message, true));\n            deferred.reject(error);\n          });\n        }\n      });\n\n      return deferred;\n    };\n\n    const promises: Promise<InputSingleMedia>[] = messages.map((message) => {\n      return (message.send() as Promise<InputMedia>).then((inputMedia) => {\n        return this.apiManager.invokeApi('messages.uploadMedia', {\n          peer: inputPeer,\n          media: inputMedia\n        });\n      })\n      .then((messageMedia) => {\n        let inputMedia: InputMedia;\n        if(messageMedia._ === 'messageMediaPhoto') {\n          const photo = this.appPhotosManager.savePhoto(messageMedia.photo);\n          inputMedia = getPhotoMediaInput(photo);\n        } else if(messageMedia._ === 'messageMediaDocument') {\n          const doc = this.appDocsManager.saveDoc(messageMedia.document);\n          inputMedia = getDocumentMediaInput(doc);\n        }\n\n        const inputSingleMedia: InputSingleMedia = {\n          _: 'inputSingleMedia',\n          media: inputMedia,\n          random_id: message.random_id,\n          message: caption,\n          entities\n        };\n\n        // * only 1 caption for all inputs\n        if(caption) {\n          caption = '';\n          entities = [];\n        }\n\n        return inputSingleMedia;\n      }).catch((err: any) => {\n        if(err.name === 'AbortError') {\n          return null;\n        }\n\n        this.log.error('sendAlbum upload item error:', err, message);\n        toggleError(message, true);\n        throw err;\n      });\n    });\n\n    return Promise.all(promises).then((inputs) => {\n      return invoke(inputs.filter(Boolean));\n    });\n  }\n\n  public sendContact(peerId: PeerId, contactPeerId: PeerId) {\n    return this.sendOther(peerId, this.appUsersManager.getContactMediaInput(contactPeerId));\n  }\n\n  public sendOther(peerId: PeerId, inputMedia: InputMedia | {_: 'messageMediaPending', messageMedia: MessageMedia}, options: Partial<{\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    queryId: string\n    resultId: string,\n    scheduleDate: number,\n    silent: true,\n    geoPoint: GeoPoint,\n    sendAsPeerId: PeerId,\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    // this.checkSendOptions(options);\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let media: MessageMedia;\n    switch(inputMedia._) {\n      case 'inputMediaPoll': {\n        const pollId = '' + message.id;\n        inputMedia.poll.id = pollId;\n        this.appPollsManager.savePoll(inputMedia.poll, {\n          _: 'pollResults',\n          flags: 4,\n          total_voters: 0,\n          pFlags: {},\n          recent_voters: []\n        });\n\n        const {poll, results} = this.appPollsManager.getPoll(pollId);\n        media = {\n          _: 'messageMediaPoll',\n          poll,\n          results\n        };\n\n        break;\n      }\n\n      case 'inputMediaPhoto': {\n        media = {\n          _: 'messageMediaPhoto',\n          photo: this.appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id)\n        };\n        break;\n      }\n\n      case 'inputMediaDocument': {\n        const doc = this.appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\n        /* if(doc.sticker && doc.stickerSetInput) {\n          appStickersManager.pushPopularSticker(doc.id);\n        } */\n        media = {\n          _: 'messageMediaDocument',\n          document: doc\n        };\n        break;\n      }\n\n      case 'inputMediaContact': {\n        media = {\n          _: 'messageMediaContact',\n          phone_number: inputMedia.phone_number,\n          first_name: inputMedia.first_name,\n          last_name: inputMedia.last_name,\n          user_id: inputMedia.user_id ?? '0',\n          vcard: inputMedia.vcard\n        };\n        break;\n      }\n\n      case 'inputMediaGeoPoint': {\n        media = {\n          _: 'messageMediaGeo',\n          geo: options.geoPoint\n        };\n        break;\n      }\n\n      case 'inputMediaVenue': {\n        media = {\n          _: 'messageMediaVenue',\n          geo: options.geoPoint,\n          title: inputMedia.title,\n          address: inputMedia.address,\n          provider: inputMedia.provider,\n          venue_id: inputMedia.venue_id,\n          venue_type: inputMedia.venue_type\n        };\n        break;\n      }\n\n      case 'messageMediaPending': {\n        media = (inputMedia as any).messageMedia;\n        break;\n      }\n    }\n\n    message.media = media;\n\n    const toggleError = (on: boolean) => {\n      /* const historyMessage = this.messagesForHistory[messageId];\n      if (on) {\n        message.error = true\n        if (historyMessage) {\n          historyMessage.error = true\n        }\n      } else {\n        delete message.error\n        if (historyMessage) {\n          delete historyMessage.error\n        }\n      } */\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined;\n      let apiPromise: Promise<any>;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMedia', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia as InputMedia,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          message: '',\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      }\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates) => {\n        if(updates.updates) {\n          updates.updates.forEach((update: Update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }, (error) => {\n        toggleError(true);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    return message.promise;\n  }\n\n  /* private checkSendOptions(options: Partial<{\n    scheduleDate: number\n  }>) {\n    if(options.scheduleDate) {\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\n      if(options.scheduleDate <= minTimestamp) {\n        delete options.scheduleDate;\n      }\n    }\n  } */\n\n  private beforeMessageSending(message: Message.message, options: Partial<{\n    isGroupedItem: boolean,\n    isScheduled: boolean,\n    threadId: number,\n    clearDraft: boolean,\n    sequential: boolean,\n    processAfter?: (cb: () => void) => void\n  }> = {}) {\n    const messageId = message.id;\n    const peerId = this.getMessagePeer(message);\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n    const callbacks: Array<() => void> = [];\n    if(options.isScheduled) {\n      // if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('scheduled_new', message);\n      });\n    } else {\n      /* if(options.threadId && this.threadsStorage[peerId]) {\n        delete this.threadsStorage[peerId][options.threadId];\n      } */\n      const storages: HistoryStorage[] = [\n        this.getHistoryStorage(peerId),\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\n      ];\n\n      for(const storage of storages) {\n        if(storage) {\n          storage.history.unshift(messageId);\n        }\n      }\n\n      this.saveMessages([message], {storage, isOutgoing: true});\n      this.setDialogTopMessage(message);\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('history_append', {storageKey: storage.key, message});\n      });\n    }\n\n    const pending: PendingMessageDetails = this.pendingByRandomId[message.random_id] = {\n      peerId,\n      tempId: messageId,\n      threadId: options.threadId,\n      storage,\n      sequential: options.sequential\n    };\n\n    if(!options.isGroupedItem && message.send) {\n      callbacks.push(() => {\n        if(options.clearDraft) {\n          this.appDraftsManager.clearDraft(peerId, options.threadId);\n        }\n\n        message.send();\n      });\n    }\n\n    if(callbacks.length) {\n      (options.processAfter || processAfter)(() => {\n        for(const callback of callbacks) {\n          callback();\n        }\n      });\n    }\n\n    return pending;\n  }\n\n  private generateOutgoingMessage(peerId: PeerId, options: Partial<{\n    scheduleDate: number,\n    replyToMsgId: number,\n    sendAsPeerId: PeerId,\n    threadId: number,\n    viaBotId: BotId,\n    groupId: string,\n    replyMarkup: ReplyMarkup,\n  }>) {\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    let postAuthor: string;\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\n    if(isBroadcast) {\n      const chat = this.appPeersManager.getPeer(peerId) as Chat.channel;\n      if(chat.pFlags.signatures) {\n        const user = this.appUsersManager.getSelf();\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n        postAuthor = fullName;\n      }\n    }\n\n    const message: Message.message = {\n      _: 'message',\n      id: this.generateTempMessageId(peerId),\n      from_id: options.sendAsPeerId ? this.appPeersManager.getOutputPeer(options.sendAsPeerId) : this.generateFromId(peerId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      post_author: postAuthor,\n      pFlags: this.generateFlags(peerId),\n      date: options.scheduleDate || (tsNow(true) + this.timeManager.getServerTimeOffset()),\n      message: '',\n      grouped_id: options.groupId,\n      random_id: randomLong(),\n      reply_to: this.generateReplyHeader(options.replyToMsgId, options.threadId),\n      via_bot_id: options.viaBotId,\n      reply_markup: options.replyMarkup,\n      replies: this.generateReplies(peerId),\n      views: isBroadcast && 1,\n      pending: true\n    };\n\n    defineNotNumerableProperties(message, ['send', 'promise']);\n    if(options.groupId === undefined) {\n      message.promise = deferredPromise();\n    }\n\n    return message;\n  }\n\n  private generateReplyHeader(replyToMsgId: number, replyToTopId?: number) {\n    const header = {\n      _: 'messageReplyHeader',\n      reply_to_msg_id: replyToMsgId || replyToTopId\n    } as MessageReplyHeader;\n\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\n      header.reply_to_top_id = replyToTopId;\n    }\n\n    return header;\n  }\n\n  private generateReplies(peerId: PeerId) {\n    let replies: MessageReplies.messageReplies;\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n      if(channelFull?.linked_chat_id) {\n        replies = {\n          _: 'messageReplies',\n          flags: 1,\n          pFlags: {\n            comments: true\n          },\n          channel_id: channelFull.linked_chat_id,\n          replies: 0,\n          replies_pts: 0\n        };\n      }\n    }\n\n    return replies;\n  }\n\n  /**\n   * Generate correct from_id according to anonymous or broadcast\n   */\n  private generateFromId(peerId: PeerId) {\n    if(this.appPeersManager.isAnyChat(peerId) && (this.appPeersManager.isBroadcast(peerId) || this.isAnonymousSending(peerId))) {\n      return undefined;\n    } else {\n      return this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId());\n    }\n  }\n\n  private generateFlags(peerId: PeerId) {\n    const pFlags: Message.message['pFlags'] = {};\n    const fromId = this.appUsersManager.getSelf().id;\n    if(peerId !== fromId) {\n      pFlags.out = true;\n\n      if(!this.appPeersManager.isChannel(peerId) && !this.appUsersManager.isBot(peerId)) {\n        pFlags.unread = true;\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      pFlags.post = true;\n    }\n\n    return pFlags;\n  }\n\n  private generateForwardHeader(peerId: PeerId, originalMessage: Message.message) {\n    const myId = this.appUsersManager.getSelf().id.toPeerId();\n    const fromId = originalMessage.fromId;\n    if(fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from) {\n      return;\n    }\n\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\n      _: 'messageFwdHeader',\n      flags: 0,\n      date: originalMessage.date\n    };\n\n    let isUserHidden = false;\n    if(originalMessage.fwd_from) {\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\n    } else {\n      fwdHeader.post_author = originalMessage.post_author;\n\n      if(fromId.isUser()) {\n        const userFull = this.appProfileManager.getCachedFullUser(fromId.toUserId());\n        if(userFull?.private_forward_name) {\n          fwdHeader.from_name = userFull.private_forward_name;\n          isUserHidden = true;\n        }\n      }\n\n      if(!isUserHidden) {\n        fwdHeader.from_id = this.appPeersManager.getOutputPeer(fromId);\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(originalMessage.peerId)) {\n      if(originalMessage.post_author) {\n        fwdHeader.post_author = originalMessage.post_author;\n      }\n\n      fwdHeader.channel_post = originalMessage.id;\n    }\n\n    if(peerId === myId && !isUserHidden) {\n      fwdHeader.saved_from_msg_id = originalMessage.id;\n      fwdHeader.saved_from_peer = this.appPeersManager.getOutputPeer(originalMessage.peerId);\n    }\n\n    return fwdHeader;\n  }\n\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\n    const maxId = Number.MAX_SAFE_INTEGER;\n    const message: Message.messageService = {\n      _: 'messageService',\n      pFlags: {},\n      action: {\n        _: 'messageActionChannelEditPhoto',\n        photo\n      },\n      id: maxId,\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      mid: maxId,\n      peerId,\n      date: (photo as Photo.photo).date,\n      fromId: peerId\n    };\n\n    this.getHistoryMessagesStorage(peerId).set(maxId, message);\n    return message;\n  }\n\n  public getUploadPromise(uploadFileName: string) {\n    return this.uploadFilePromises[uploadFileName];\n  }\n\n  public isAnonymousSending(peerId: PeerId): boolean {\n    return peerId.isAnyChat() && this.appPeersManager.getPeer(peerId).admin_rights?.pFlags?.anonymous;\n  }\n\n  public setDialogTopMessage(message: MyMessage, dialog: MTDialog.dialog = this.getDialogOnly(message.peerId)) {\n    if(dialog) {\n      dialog.top_message = message.mid;\n\n      const historyStorage = this.getHistoryStorage(message.peerId);\n      historyStorage.maxId = message.mid;\n\n      this.dialogsStorage.generateIndexForDialog(dialog, false, message);\n\n      this.scheduleHandleNewDialogs(message.peerId, dialog);\n    }\n  }\n\n  public cancelPendingMessage(randomId: string) {\n    const pendingData = this.pendingByRandomId[randomId];\n\n    /* if(DEBUG) {\n      this.log('cancelPendingMessage', randomId, pendingData);\n    } */\n\n    if(pendingData) {\n      const {peerId, tempId, storage} = pendingData;\n      const historyStorage = this.getHistoryStorage(peerId);\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateDeleteMessages',\n        messages: [tempId],\n        pts: undefined,\n        pts_count: undefined\n      });\n\n      historyStorage.history.delete(tempId);\n\n      delete this.pendingByRandomId[randomId];\n      storage.delete(tempId);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /* public async refreshConversations() {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(let folderId = 0; folderId < 2; ++folderId) {\n      let offsetDate = 0;\n      for(;;) {\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\n\n        if(dialogs.length) {\n          outDialogs.push(...dialogs as Dialog[]);\n          const dialog = dialogs[dialogs.length - 1];\n\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\n          const peerId = getPeerId(dialog.peer);\n          const mid = generateMessageId(dialog.top_message);\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\n\n          if(!offsetDate) {\n            console.error('refreshConversations: got no offsetDate', dialog);\n            break;\n          }\n        }\n\n        if(isEnd) {\n          break;\n        }\n      }\n    }\n\n    let obj: {[peerId: string]: Dialog} = {};\n    outDialogs.forEach((dialog) => {\n      obj[dialog.peerId] = dialog;\n    });\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n\n    return outDialogs;\n  } */\n\n  public async fillConversations(): Promise<void> {\n    const middleware = this.middleware.get();\n    while(!this.dialogsStorage.isDialogsLoaded(GLOBAL_FOLDER_ID)) {\n      const result = await this.getTopMessages(100, GLOBAL_FOLDER_ID);\n      if(!middleware() || result.isEnd) {\n        break;\n      }\n    }\n  }\n\n  /* public async getConversationsAll(query = '', folderId = 0) {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(; folderId < 2; ++folderId) {\n      let offsetIndex = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\n\n        if(dialogs.length) {\n          outDialogs.push(...dialogs);\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return outDialogs;\n  } */\n\n  public getConversations(query = '', offsetIndex?: number, limit?: number, folderId = 0, skipMigrated?: boolean) {\n    return this.dialogsStorage.getDialogs(query, offsetIndex, limit, folderId, skipMigrated);\n  }\n\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(threadId) {\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    } else {\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\n      const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    }\n  }\n\n  // public lolSet = new Set();\n  public getTopMessages(limit: number, folderId: REAL_FOLDER_ID, offsetDate?: number) {\n    // const dialogs = this.dialogsStorage.getFolder(folderId);\n    const offsetId = 0;\n    let offsetPeerId: PeerId;\n    let offsetIndex = 0;\n\n    if(offsetDate === undefined) {\n      offsetDate = this.dialogsStorage.getOffsetDate(folderId);\n    }\n\n    if(offsetDate) {\n      offsetIndex = offsetDate * 0x10000;\n      offsetDate += this.timeManager.getServerTimeOffset();\n    }\n\n    const useLimit = 100;\n    const middleware = this.middleware.get();\n\n    // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\n    // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\n    // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\n    const params: MessagesGetDialogs = {\n      folder_id: folderId,\n      offset_date: offsetDate,\n      offset_id: offsetId,\n      offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n      limit: useLimit,\n      hash: '0'\n    };\n\n    return this.apiManager.invokeApiSingle('messages.getDialogs', params, {\n      // timeout: APITIMEOUT,\n      noErrorBox: true\n    }).then((dialogsResult) => {\n      if(!middleware() || dialogsResult._ === 'messages.dialogsNotModified') return null;\n\n      if(DEBUG) {\n        this.log('messages.getDialogs result:', dialogsResult.dialogs, {...dialogsResult.dialogs[0]});\n      }\n\n      /* if(!offsetDate) {\n        telegramMeWebService.setAuthorized(true);\n      } */\n\n      // can reset pinned order here\n      if(!offsetId && !offsetDate && !offsetPeerId && folderId !== GLOBAL_FOLDER_ID) {\n        this.dialogsStorage.resetPinnedOrder(folderId);\n      }\n\n      if(!offsetDate) {\n        telegramMeWebManager.setAuthorized(true);\n        this.appDraftsManager.addMissedDialogs();\n      }\n\n      this.appUsersManager.saveApiUsers(dialogsResult.users);\n      this.appChatsManager.saveApiChats(dialogsResult.chats);\n      this.saveMessages(dialogsResult.messages);\n\n      let maxSeenIdIncremented = offsetDate ? true : false;\n      let hasPrepend = false;\n      const noIdsDialogs: Map<PeerId, Dialog> = new Map();\n      const setFolderId: REAL_FOLDER_ID = folderId === GLOBAL_FOLDER_ID ? FOLDER_ID_ALL : folderId;\n      const saveGlobalOffset = folderId === GLOBAL_FOLDER_ID;\n      forEachReverse((dialogsResult.dialogs as Dialog[]), (dialog) => {\n        // const d = Object.assign({}, dialog);\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\n        if(dialog.folder_id === undefined) {\n          dialog.folder_id = setFolderId;\n        }\n\n        this.dialogsStorage.saveDialog(dialog, undefined, true, saveGlobalOffset);\n\n        if(!maxSeenIdIncremented &&\n          !this.appPeersManager.isChannel(dialog.peerId || this.appPeersManager.getPeerId(dialog.peer))) {\n          this.incrementMaxSeenId(dialog.top_message);\n          maxSeenIdIncremented = true;\n        }\n\n        if(dialog.peerId === undefined) {\n          return;\n        }\n\n        // if(!folderId && !dialog.folder_id) {\n        //   this.lolSet.add(dialog.peerId);\n        // }\n\n        if(offsetIndex && getDialogIndex(dialog) > offsetIndex) {\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\n          hasPrepend = true;\n        }\n\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\n        if(!getServerMessageId(dialog.read_inbox_max_id) && !getServerMessageId(dialog.read_outbox_max_id)) {\n          noIdsDialogs.set(dialog.peerId, dialog);\n\n          this.log.error('noIdsDialogs', dialog, params);\n        }\n      });\n\n      if(noIdsDialogs.size) {\n        // setTimeout(() => { // test bad situation\n        const peerIds = [...noIdsDialogs.keys()];\n        const promises = peerIds.map((peerId) => this.reloadConversation(peerId));\n        Promise.all(promises).then(() => {\n          this.rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\n\n          for(let i = 0; i < peerIds.length; ++i) {\n            const peerId = peerIds[i];\n            this.rootScope.dispatchEvent('dialog_unread', {\n              peerId,\n              dialog: this.getDialogOnly(peerId)\n            });\n          }\n        });\n        // }, 10e3);\n      }\n\n      const count = (dialogsResult as MessagesDialogs.messagesDialogsSlice).count;\n\n      // exclude empty draft dialogs\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\n      let dialogsLength = 0;\n      for(let i = 0, length = folderDialogs.length; i < length; ++i) {\n        if(getServerMessageId(folderDialogs[i].top_message)) {\n          ++dialogsLength;\n        }\n      }\n\n      const isEnd = /* limit > dialogsResult.dialogs.length || */\n        !count ||\n        dialogsLength >= count ||\n        !dialogsResult.dialogs.length;\n      if(isEnd) {\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\n      }\n\n      if(hasPrepend) {\n        this.scheduleHandleNewDialogs();\n      } else {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', new Map());\n      }\n\n      const dialogs = (dialogsResult as MessagesDialogs.messagesDialogsSlice).dialogs;\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\n      return {\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1],\n        count,\n        dialogs: slicedDialogs\n      };\n    });\n  }\n\n  public async forwardMessages(peerId: PeerId, fromPeerId: PeerId, mids: number[], options: Partial<{\n    withMyScore: true,\n    silent: true,\n    scheduleDate: number,\n    dropAuthor: boolean,\n    dropCaptions: boolean,\n    sendAsPeerId: PeerId,\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    mids = mids.slice().sort((a, b) => a - b);\n\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\n        this.sendText(peerId, originalMessage.message, {\n          entities: originalMessage.entities,\n          scheduleDate: options.scheduleDate,\n          silent: options.silent\n        });\n\n        mids.splice(i--, 1);\n        --length;\n      }\n    }\n\n    if(!mids.length) {\n      return Promise.resolve();\n    }\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    if(options.dropCaptions) {\n      options.dropAuthor = true;\n    }\n\n    const groups: {\n      [groupId: string]: {\n        tempId: string,\n        messages: Message.message[]\n      }\n    } = {};\n\n    const newMids: number[] = [];\n    const newMessages = mids.map((mid) => {\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\n      newMids.push(message.id);\n\n      const keys: Array<keyof Message.message> = [\n        'entities',\n        'media'\n        // 'reply_markup'\n      ];\n\n      if(!options.dropAuthor) {\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\n        keys.push('views', 'forwards');\n\n        if(message.fwd_from?.from_name && peerId === this.appPeersManager.peerId) {\n          delete message.from_id;\n        }\n      }\n\n      if(!options.dropCaptions || !originalMessage.media) {\n        keys.push('message');\n      }\n\n      const replyToMid = originalMessage.reply_to?.reply_to_msg_id;\n      const replyToMessageIdx = mids.indexOf(replyToMid);\n      if(replyToMid && replyToMessageIdx !== -1) {\n        const newReplyToMid = newMids[replyToMessageIdx];\n        message.reply_to = {\n          _: 'messageReplyHeader',\n          reply_to_msg_id: newReplyToMid\n        };\n\n        /* this.invokeAfterMessageIsSent(newReplyToMid, 'reply', async(originalMessage) => {\n          message.reply_to.reply_to_msg_id = originalMessage.mid;\n        }); */\n      }\n\n      keys.forEach((key) => {\n        // @ts-ignore\n        message[key] = copy(originalMessage[key]);\n      });\n\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n      if(document) {\n        const types: MyDocument['type'][] = ['round', 'voice'];\n        if(types.includes(document.type)) {\n          (message as MyMessage).pFlags.media_unread = true;\n        }\n\n        if(document.sticker && !this.rootScope.premium) {\n          const effectThumb = getStickerEffectThumb(document);\n          if(effectThumb) {\n            (message.media as MessageMedia.messageMediaDocument).pFlags.nopremium = true;\n          }\n        }\n      }\n\n      if(originalMessage.grouped_id) {\n        const group = groups[originalMessage.grouped_id] ?? (groups[originalMessage.grouped_id] = {tempId: '' + ++this.groupedTempId, messages: []});\n        group.messages.push(message);\n      }\n\n      return message;\n    });\n\n    for(const groupId in groups) {\n      const group = groups[groupId];\n      if(group.messages.length > 1) {\n        group.messages.forEach((message) => {\n          message.grouped_id = group.tempId;\n        });\n      }\n    }\n\n    newMessages.forEach((message) => {\n      this.beforeMessageSending(message, {\n        isScheduled: !!options.scheduleDate || undefined,\n        sequential: true\n      });\n    });\n\n    const sentRequestOptions: PendingAfterMsg = {};\n    if(this.pendingAfterMsgs[peerId]) {\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n    }\n\n    const promise = /* true ? Promise.resolve() :  */this.apiManager.invokeApiAfter('messages.forwardMessages', {\n      from_peer: this.appPeersManager.getInputPeerById(fromPeerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      random_id: newMessages.map((message) => message.random_id),\n      to_peer: this.appPeersManager.getInputPeerById(peerId),\n      with_my_score: options.withMyScore,\n      silent: options.silent,\n      schedule_date: options.scheduleDate,\n      drop_author: options.dropAuthor,\n      drop_media_captions: options.dropCaptions,\n      send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n    }, sentRequestOptions).then((updates) => {\n      this.log('forwardMessages updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }).finally(() => {\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n        delete this.pendingAfterMsgs[peerId];\n      }\n    });\n\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.forwardMessages(peerId, fromPeerId, overflowMids, options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public generateEmptyMessage(mid: number): Message.message | Message.messageService {\n    return undefined;\n    // return {\n    //   _: 'messageEmpty',\n    //   id: getServerMessageId(mid),\n    //   mid,\n    //   deleted: true,\n    //   pFlags: {}\n    // };\n  }\n\n  public getMessagesStorageByKey(key: MessagesStorageKey) {\n    const s = key.split('_');\n    const peerId: PeerId = +s[0];\n    const type: MessagesStorageType = s[1] as any;\n    return type === 'scheduled' ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n  }\n\n  public getMessageFromStorage(storage: MessagesStorage | MessagesStorageKey, mid: number) {\n    if(typeof(storage) === 'string') {\n      storage = this.getMessagesStorageByKey(storage);\n    }\n\n    return storage && storage.get(mid)/*  || this.generateEmptyMessage(mid) */;\n  }\n\n  private createMessageStorage(peerId: PeerId, type: MessagesStorageType) {\n    const storage: MessagesStorage = new Map() as any;\n    storage.peerId = peerId;\n    storage.type = type;\n    storage.key = `${peerId}_${type}`;\n\n    /* let num = 0;\n    Object.defineProperty(storage, 'num', {\n      get: () => ++num,\n      set: (_num: number) => num = _num,\n      enumerable: false\n    });\n\n    Object.defineProperty(storage, 'generateIndex', {\n      value: (message: any) => {\n        if(message.index === undefined) {\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\n        }\n      },\n      enumerable: false\n    }); */\n\n    return storage;\n  }\n\n  public getHistoryMessagesStorage(peerId: PeerId) {\n    return this.messagesStorageByPeerId[peerId] ?? (this.messagesStorageByPeerId[peerId] = this.createMessageStorage(peerId, 'history'));\n  }\n\n  public getMessagesStorage(key: MessagesStorageKey | MessagesStorage): MessagesStorage {\n    if(typeof(key) === 'object') {\n      return key;\n    } else {\n      return this.getMessagesStorageByKey(key);\n    }\n  }\n\n  public getMessageById(messageId: number) {\n    for(const peerId in this.messagesStorageByPeerId) {\n      if(this.appPeersManager.isChannel(peerId.toPeerId())) {\n        continue;\n      }\n\n      const message = this.messagesStorageByPeerId[peerId].get(messageId);\n      if(message) {\n        return message;\n      }\n    }\n\n    return this.getMessageFromStorage(null, messageId);\n  }\n\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\n    if(!peerId) {\n      return this.getMessageById(messageId);\n    }\n\n    return this.getMessageFromStorage(this.getHistoryMessagesStorage(peerId), messageId);\n  }\n\n  public getMessagePeer(message: any): PeerId {\n    const toId = message.peer_id && this.appPeersManager.getPeerId(message.peer_id) || NULL_PEER_ID;\n\n    return toId;\n  }\n\n  public getDialogByPeerId(peerId: PeerId): [Dialog, number] | [] {\n    return this.dialogsStorage.getDialog(peerId);\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogsStorage.getDialogOnly(peerId);\n  }\n\n  public cantForwardDeleteMids(storageKey: MessagesStorageKey, mids: number[]) {\n    const storage = this.getMessagesStorage(storageKey);\n    let cantForward = !mids.length, cantDelete = !mids.length;\n    for(const mid of mids) {\n      const message = this.getMessageFromStorage(storage, mid);\n      if(!cantForward) {\n        cantForward = !this.canForward(message);\n      }\n\n      if(!cantDelete) {\n        cantDelete = !this.canDeleteMessage(message);\n      }\n\n      if(cantForward && cantDelete) break;\n    }\n\n    return {cantForward, cantDelete};\n  }\n\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\n  public reloadConversation(inputPeer: PeerId | InputPeer) {\n    let promise: CancellablePromise<Dialog>;\n    if(inputPeer !== undefined) {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      let obj = this.reloadConversationsPeers.get(peerId);\n      if(obj) {\n        promise = obj.promise;\n      }\n\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      this.reloadConversationsPeers.set(peerId, obj = {\n        inputDialogPeer: this.appPeersManager.getInputDialogPeerById(inputPeer),\n        promise\n      });\n    }\n\n    if(this.reloadConversationsPromise) {\n      return promise || this.reloadConversationsPromise;\n    }\n\n    this.reloadConversationsPromise = pause(0).then(() => {\n      const inputDialogPeers: InputDialogPeer[] = [];\n      const promises: {[peerId: string]: typeof promise} = {};\n      for(const [peerId, {inputDialogPeer, promise}] of this.reloadConversationsPeers) {\n        inputDialogPeers.push(inputDialogPeer);\n        promises[peerId] = promise;\n      }\n\n      this.reloadConversationsPeers.clear();\n\n      const fullfillLeft = () => {\n        for(const peerId in promises) {\n          promises[peerId].resolve(undefined);\n        }\n      };\n\n      return this.apiManager.invokeApi('messages.getPeerDialogs', {peers: inputDialogPeers}).then((result) => {\n        this.dialogsStorage.applyDialogs(result);\n\n        result.dialogs.forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(peerId) {\n            promises[peerId].resolve(dialog as Dialog);\n            delete promises[peerId];\n          }\n        });\n\n        // fullfillLeft();\n        // resolve();\n      }, (err) => {\n        // fullfillLeft();\n        // resolve();\n        // reject(err);\n      }).then(() => {\n        fullfillLeft();\n\n        this.reloadConversationsPromise = null;\n        if(this.reloadConversationsPeers.size) {\n          this.reloadConversation();\n        }\n      });\n    });\n\n    return promise || this.reloadConversationsPromise;\n  }\n\n  private doFlushHistory(peer: InputPeer, just_clear?: boolean, revoke?: boolean): Promise<true> {\n    return this.apiManager.invokeApiSingle('messages.deleteHistory', {\n      just_clear,\n      revoke,\n      peer,\n      max_id: 0\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        return true;\n      }\n\n      return this.doFlushHistory(peer, just_clear, revoke);\n    });\n  }\n\n  public async flushHistory(peerId: PeerId, justClear?: boolean, revoke?: boolean) {\n    if(this.appPeersManager.isChannel(peerId)) {\n      const promise = this.getHistory(peerId, 0, 1);\n\n      const historyResult = await promise;\n\n      const channelId = peerId.toChatId();\n      const maxId = historyResult.history[0] || 0;\n      return this.apiManager.invokeApiSingle('channels.deleteHistory', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        max_id: getServerMessageId(maxId)\n      }).then((bool) => {\n        if(bool) {\n          this.apiUpdatesManager.processLocalUpdate({\n            _: 'updateChannelAvailableMessages',\n            channel_id: channelId,\n            available_min_id: maxId\n          });\n        }\n\n        return bool;\n      });\n    }\n\n    return this.doFlushHistory(this.appPeersManager.getInputPeerById(peerId), justClear, revoke).then(() => {\n      this.flushStoragesByPeerId(peerId);\n\n      if(justClear) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog: this.getDialogOnly(peerId)});\n      } else {\n        delete this.notificationsToHandle[peerId];\n        delete this.typings[peerId];\n\n        const c = this.reloadConversationsPeers.get(peerId);\n        if(c) {\n          this.reloadConversationsPeers.delete(peerId);\n          c.promise.resolve(undefined);\n        }\n\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    });\n  }\n\n  private flushStoragesByPeerId(peerId: PeerId) {\n    [\n      this.historiesStorage,\n      this.threadsStorage,\n      this.searchesStorage,\n      this.pinnedMessages,\n      this.pendingAfterMsgs,\n      this.pendingTopMsgs\n    ].forEach((s) => {\n      delete s[peerId];\n    });\n\n    const needSingleMessages = this.needSingleMessages.get(peerId);\n    if(needSingleMessages) {\n      for(const [mid, promise] of needSingleMessages) {\n        promise.resolve(this.generateEmptyMessage(mid));\n      }\n\n      needSingleMessages.clear();\n    }\n\n    [\n      this.messagesStorageByPeerId,\n      this.scheduledMessagesStorage\n    ].forEach((s) => {\n      const ss = s[peerId];\n      if(ss) {\n        ss.clear();\n      }\n    });\n  }\n\n  public hidePinnedMessages(peerId: PeerId) {\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.getPinnedMessage(peerId)\n    ])\n    .then(([state, pinned]) => {\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\n      this.rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\n    });\n  }\n\n  public getPinnedMessage(peerId: PeerId) {\n    const p = this.pinnedMessages[peerId] ?? (this.pinnedMessages[peerId] = {});\n    if(p.promise) return p.promise;\n    else if(p.maxId) return Promise.resolve(p);\n\n    return p.promise = this.getSearch({\n      peerId,\n      inputFilter: {_: 'inputMessagesFilterPinned'},\n      maxId: 0,\n      limit: 1\n    }).then((result) => {\n      p.count = result.count;\n      p.maxId = result.history[0]?.mid;\n      return p;\n    }).finally(() => {\n      delete p.promise;\n    });\n  }\n\n  public getPinnedMessagesCount(peerId: PeerId) {\n    return this.pinnedMessages[peerId]?.count;\n  }\n\n  public getPinnedMessagesMaxId(peerId: PeerId) {\n    return this.pinnedMessages[peerId]?.maxId;\n  }\n\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\n    return this.apiManager.invokeApi('messages.updatePinnedMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      unpin,\n      silent,\n      pm_oneside,\n      id: getServerMessageId(mid)\n    }).then((updates) => {\n      // this.log('pinned updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\n    return this.apiManager.invokeApiSingle('messages.unpinAllMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        const storage = this.getHistoryMessagesStorage(peerId);\n        storage.forEach((message) => {\n          if((message as Message.message).pFlags.pinned) {\n            delete (message as Message.message).pFlags.pinned;\n          }\n        });\n\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\n        delete this.pinnedMessages[peerId];\n\n        return true;\n      }\n\n      return this.unpinAllMessages(peerId);\n    });\n  }\n\n  public getAlbumText(grouped_id: string) {\n    const group = this.groupedMessagesStorage[grouped_id];\n    return getAlbumText(Array.from(group.values()) as Message.message[]);\n  }\n\n  public getGroupsFirstMessage(message: Message.message) {\n    if(!message?.grouped_id) return message;\n\n    const storage = this.groupedMessagesStorage[message.grouped_id];\n    let minMid = Number.MAX_SAFE_INTEGER;\n    for(const [mid, message] of storage) {\n      if(message.mid < minMid) {\n        minMid = message.mid;\n      }\n    }\n\n    return this.getMessageFromStorage(storage, minMid) as Message.message;\n  }\n\n  public getMidsByAlbum(groupedId: string, sort: 'asc' | 'desc' = 'asc') {\n    return getObjectKeysAndSort(this.groupedMessagesStorage[groupedId], sort);\n  }\n\n  public getMessagesByAlbum(groupedId: string) {\n    const mids = this.getMidsByAlbum(groupedId, 'asc');\n    const storage = this.groupedMessagesStorage[groupedId];\n    return mids.map((mid) => this.getMessageFromStorage(storage, mid) as Message.message);\n  }\n\n  public getMidsByMessage(message: Message) {\n    if(!message) return [];\n    else if((message as Message.message).grouped_id) return this.getMidsByAlbum((message as Message.message).grouped_id);\n    else return [message.mid];\n  }\n\n  public filterMessages(message: MyMessage, verify: (message: MyMessage) => boolean) {\n    const out: MyMessage[] = [];\n    if((message as Message.message).grouped_id) {\n      const storage = this.groupedMessagesStorage[(message as Message.message).grouped_id];\n      for(const [mid, message] of storage) {\n        if(verify(message)) {\n          out.push(message);\n        }\n      }\n    } else {\n      if(verify(message)) {\n        out.push(message);\n      }\n    }\n\n    return out;\n  }\n\n  public generateTempMessageId(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    return this.appMessagesIdsManager.generateTempMessageId(dialog?.top_message || 0);\n  }\n\n  public saveMessage(message: Message, options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    // isNew: boolean, // * new - from update\n  }> = {}) {\n    if(!message || message._ === 'messageEmpty') {\n      return;\n    }\n\n    if(message.pFlags === undefined) {\n      message.pFlags = {};\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\n\n    const peerId = this.getMessagePeer(message);\n    const storage = options.storage || this.getHistoryMessagesStorage(peerId);\n    const isChannel = message.peer_id._ === 'peerChannel';\n    const isBroadcast = isChannel && this.appChatsManager.isBroadcast(peerId.toChatId());\n    const isMessage = message._ === 'message';\n\n    if(options.isOutgoing) {\n      message.pFlags.is_outgoing = true;\n    }\n\n    const mid = generateMessageId(message.id);\n    message.mid = mid;\n\n    if(isMessage) {\n      if(options.isScheduled) {\n        message.pFlags.is_scheduled = true;\n      }\n\n      if(message.grouped_id) {\n        const storage = this.groupedMessagesStorage[message.grouped_id] ?? (this.groupedMessagesStorage[message.grouped_id] = this.createMessageStorage(peerId, 'grouped'));\n        storage.set(mid, message);\n      }\n\n      if(message.via_bot_id) {\n        // ! WARNING\n        message.viaBotId = message.via_bot_id as any;\n      }\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog && mid) {\n      if(mid > dialog[message.pFlags.out ?\n        'read_outbox_max_id' :\n        'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n      }\n    }\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n    if(message.reply_to) {\n      if(message.reply_to.reply_to_msg_id) {\n        message.reply_to.reply_to_msg_id = message.reply_to_mid = generateMessageId(message.reply_to.reply_to_msg_id);\n      }\n\n      if(message.reply_to.reply_to_top_id) {\n        message.reply_to.reply_to_top_id = generateMessageId(message.reply_to.reply_to_top_id);\n      }\n    }\n\n    const replies = isMessage && message.replies;\n    if(replies) {\n      if(replies.max_id) replies.max_id = generateMessageId(replies.max_id);\n      if(replies.read_max_id) replies.read_max_id = generateMessageId(replies.read_max_id);\n    }\n\n    const overwriting = !!peerId;\n    if(!overwriting) {\n      message.date -= this.timeManager.getServerTimeOffset();\n    }\n\n    // storage.generateIndex(message);\n    const myId = this.appPeersManager.peerId;\n\n    const fwdHeader = isMessage && (message as Message.message).fwd_from;\n\n    message.peerId = peerId;\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\n      message.fromId = fwdHeader ? (fwdHeader.from_id ? this.appPeersManager.getPeerId(fwdHeader.from_id) : NULL_PEER_ID) : myId;\n    } else {\n      // message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\n      message.fromId = message.pFlags.post || !message.from_id ? peerId : this.appPeersManager.getPeerId(message.from_id);\n    }\n\n    if(fwdHeader) {\n      // if(peerId === myID) {\n      if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = generateMessageId(fwdHeader.saved_from_msg_id);\n      if(fwdHeader.channel_post) fwdHeader.channel_post = generateMessageId(fwdHeader.channel_post);\n\n      const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\n      const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\n      if(peer && msgId) {\n        const savedFromPeerId = this.appPeersManager.getPeerId(peer);\n        const savedFromMid = generateMessageId(msgId);\n        message.savedFrom = savedFromPeerId + '_' + savedFromMid;\n      }\n\n      /* if(peerId.isAnyChat() || peerId === myID) {\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\n        } */\n      /* } else {\n        apiMessage.fwdPostID = fwdHeader.channel_post;\n      } */\n\n      message.fwdFromId = this.appPeersManager.getPeerId(fwdHeader.from_id);\n\n      if(!overwriting) {\n        fwdHeader.date -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    const mediaContext: ReferenceContext = {\n      type: 'message',\n      peerId,\n      messageId: mid\n    };\n\n    /* if(isMessage) {\n      const entities = message.entities;\n      if(entities && entities.find((entity) => entity._ === 'messageEntitySpoiler')) {\n        message.media = {_: 'messageMediaUnsupported'};\n      }\n    } */\n\n    if(isMessage && message.media) {\n      let unsupported = false;\n      switch(message.media._) {\n        case 'messageMediaEmpty': {\n          delete message.media;\n          break;\n        }\n\n        case 'messageMediaPhoto': {\n          if(message.media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            message.media.photo = this.appPhotosManager.savePhoto(message.media.photo, mediaContext);\n          }\n\n          if(!(message.media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\n            delete message.media;\n          }\n\n          break;\n        }\n\n        case 'messageMediaPoll': {\n          const result = this.appPollsManager.savePoll(message.media.poll, message.media.results, message);\n          message.media.poll = result.poll;\n          message.media.results = result.results;\n          break;\n        }\n\n        case 'messageMediaDocument': {\n          if(message.media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            const originalDoc = message.media.document;\n            message.media.document = this.appDocsManager.saveDoc(originalDoc, mediaContext); // 11.04.2020 warning\n\n            if(!message.media.document && originalDoc._ !== 'documentEmpty') {\n              unsupported = true;\n            }\n          }\n\n          break;\n        }\n\n        case 'messageMediaWebPage': {\n          const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(peerId, mid, options.isScheduled);\n          message.media.webpage = this.appWebPagesManager.saveWebPage(message.media.webpage, messageKey, mediaContext);\n          break;\n        }\n\n        /* case 'messageMediaGame':\n          AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\n          apiMessage.media.handleMessage = true;\n          break; */\n\n        case 'messageMediaInvoice': {\n          message.media.photo = this.appWebDocsManager.saveWebDocument(message.media.photo);\n          break;\n        }\n\n        case 'messageMediaUnsupported': {\n          unsupported = true;\n          break;\n        }\n      }\n\n      if(unsupported) {\n        message.media = {_: 'messageMediaUnsupported'};\n        message.message = '';\n        delete message.entities;\n        delete message.totalEntities;\n      }\n    }\n\n    if(!isMessage && message.action) {\n      const action = message.action as MessageAction;\n      let migrateFrom: PeerId;\n      let migrateTo: PeerId;\n      const suffix = message.fromId === this.appUsersManager.getSelf().id ? 'You' : '';\n\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\n        (action as MessageAction.messageActionChatEditPhoto).photo = this.appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\n      }\n\n      if((action as any).document) {\n        (action as any).document = this.appDocsManager.saveDoc((action as any).photo, mediaContext);\n      }\n\n      switch(action._) {\n        // case 'messageActionChannelEditPhoto':\n        case 'messageActionChatEditPhoto':\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\n          if((action.photo as Photo.photo)?.video_sizes) {\n            // @ts-ignore\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\n          } else {\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\n              // @ts-ignore\n              action._ = 'messageActionChannelEditPhoto';\n            }\n          }\n          break;\n\n        case 'messageActionGroupCall': {\n          // assumeType<MessageAction.messageActionGroupCall>(action);\n\n          this.appGroupCallsManager.saveGroupCall(action.call);\n\n          let type: string;\n          if(action.duration === undefined) {\n            type = 'started';\n          } else {\n            type = 'ended'\n          }\n\n          if(!isBroadcast) {\n            type += '_by' + suffix;\n          }\n\n          // @ts-ignore\n          action.type = type;\n\n          break;\n        }\n\n        case 'messageActionChatEditTitle':\n          /* if(options.isNew) {\n            const chat = appChatsManager.getChat(peerId.toChatId());\n            chat.title = action.title;\n            appChatsManager.saveApiChat(chat, true);\n          } */\n\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelEditTitle';\n          }\n          break;\n\n        case 'messageActionChatDeletePhoto':\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelDeletePhoto';\n          }\n          break;\n\n        case 'messageActionChatAddUser':\n          if(action.users.length === 1) {\n            // @ts-ignore\n            action.user_id = action.users[0];\n            // @ts-ignore\n            if(message.fromId === action.user_id) {\n              if(isChannel) {\n                // @ts-ignore\n                action._ = 'messageActionChatJoined' + suffix;\n              } else {\n                // @ts-ignore\n                action._ = 'messageActionChatReturn' + suffix;\n              }\n            }\n          } else if(action.users.length > 1) {\n            // @ts-ignore\n            action._ = 'messageActionChatAddUsers';\n          }\n          break;\n\n        case 'messageActionChatDeleteUser':\n          if(message.fromId === action.user_id) {\n            // @ts-ignore\n            action._ = 'messageActionChatLeave' + suffix;\n          }\n          break;\n\n        case 'messageActionChannelMigrateFrom':\n          migrateFrom = action.chat_id.toPeerId(true);\n          migrateTo = peerId;\n          break\n\n        case 'messageActionChatMigrateTo':\n          migrateFrom = peerId;\n          migrateTo = action.channel_id.toPeerId(true);\n          break;\n\n        case 'messageActionHistoryClear':\n          // apiMessage.deleted = true;\n          message.clear_history = true;\n          delete message.pFlags.out;\n          delete message.pFlags.unread;\n          break;\n\n        case 'messageActionPhoneCall':\n          // @ts-ignore\n          action.type =\n            (action.pFlags.video ? 'video_' : '') +\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\n            (\n              action.duration !== undefined ? 'ok' : (\n                action.reason._ === 'phoneCallDiscardReasonMissed' ?\n                  'missed' :\n                  'cancelled'\n              )\n            );\n          break;\n      }\n\n      if(migrateFrom &&\n          migrateTo &&\n          !this.migratedFromTo[migrateFrom] &&\n          !this.migratedToFrom[migrateTo]) {\n        this.migrateChecks(migrateFrom, migrateTo);\n      }\n    }\n\n    /* if(message.grouped_id) {\n      if(!groups) {\n        groups = new Set();\n      }\n\n      groups.add(message.grouped_id);\n    } else {\n      message.rReply = this.getRichReplyText(message);\n    } */\n\n    if(isMessage && message.message.length && !message.totalEntities) {\n      this.wrapMessageEntities(message);\n    }\n\n    storage.set(mid, message);\n\n    return message;\n  }\n\n  public saveMessages(messages: any[], options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    // isNew: boolean, // * new - from update\n  }> = {}): (Message.message | Message.messageService)[] {\n    if((messages as any).saved) return messages;\n    (messages as any).saved = true;\n    messages.forEach((message, idx, arr) => {\n      arr[idx] = this.saveMessage(message, options);\n    });\n\n    return messages;\n  }\n\n  public async getFirstMessageToEdit(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n      let goodMessage: Message.message | Message.messageService;\n      const myPeerId = this.appPeersManager.peerId;\n      for(const mid of slice) {\n        const message = this.getMessageByPeer(peerId, mid);\n        const good = myPeerId === peerId ? message.fromId === myPeerId : message.pFlags.out;\n\n        if(good) {\n          if(await this.canEditMessage(message, 'text')) {\n            goodMessage = message;\n            break;\n          }\n\n          // * this check will allow editing only last message\n          // break;\n        }\n      }\n\n      return goodMessage;\n    }\n  }\n\n  private wrapMessageEntities(message: Message.message) {\n    const apiEntities = message.entities ? message.entities.slice() : [];\n    message.message = fixEmoji(message.message, apiEntities);\n\n    const myEntities = parseEntities(message.message);\n    message.totalEntities = mergeEntities(apiEntities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n  }\n\n  public reportMessages(peerId: PeerId, mids: number[], reason: ReportReason['_'], message?: string) {\n    return this.apiManager.invokeApiSingle('messages.report', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      reason: {\n        _: reason\n      },\n      message\n    });\n  }\n\n  public startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\n    if(startParam) {\n      const randomId = randomLong();\n\n      return this.apiManager.invokeApi('messages.startBot', {\n        bot: this.appUsersManager.getUserInput(botId),\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        random_id: randomId,\n        start_param: startParam\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      });\n    }\n\n    const str = '/start';\n    if(chatId) {\n      let promise: Promise<void>;\n      if(this.appChatsManager.isChannel(chatId)) {\n        promise = this.appChatsManager.inviteToChannel(chatId, [botId]);\n      } else {\n        promise = this.appChatsManager.addChatUser(chatId, botId, 0);\n      }\n\n      return promise.catch((error) => {\n        if(error && error.type == 'USER_ALREADY_PARTICIPANT') {\n          error.handled = true;\n          return;\n        }\n\n        throw error;\n      }).then(() => {\n        const bot = this.appUsersManager.getUser(botId);\n        return this.sendText(peerId, str + '@' + bot.username);\n      });\n    }\n\n    return this.sendText(peerId, str);\n  }\n\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\n    this.apiManager.invokeApi('folders.editPeerFolders', {\n      folder_peers: peerIds.map((peerId) => {\n        return {\n          _: 'inputFolderPeer',\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          folder_id: folderId\n        };\n      })\n    }).then((updates) => {\n      // this.log('editPeerFolders updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\n    });\n  }\n\n  public getFilter(filterId: number) {\n    return this.filtersStorage.getFilter(filterId);\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId?: number) {\n    if(filterId > 1) {\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\n\n    if(pinned) {\n      const appConfig = await this.apiManager.getAppConfig();\n      const max = filterId === 1 ?\n        (this.rootScope.premium ? appConfig.dialogs_folder_pinned_limit_premium : appConfig.dialogs_folder_pinned_limit_default) :\n        (this.rootScope.premium ? appConfig.dialogs_pinned_limit_premium : appConfig.dialogs_pinned_limit_default);\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\n        return Promise.reject(makeError('PINNED_DIALOGS_TOO_MUCH'));\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.toggleDialogPin', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      pinned\n    }).then((bool) => {\n      if(bool) {\n        const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\n        this.apiUpdatesManager.saveUpdate({\n          _: 'updateDialogPinned',\n          peer: this.appPeersManager.getDialogPeer(peerId),\n          folder_id: filterId,\n          pFlags\n        });\n      }\n    });\n  }\n\n  public markDialogUnread(peerId: PeerId, read?: true) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\n    return this.apiManager.invokeApi('messages.markDialogUnread', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      unread\n    }).then((bool) => {\n      if(bool) {\n        const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\n        this.onUpdateDialogUnreadMark({\n          _: 'updateDialogUnreadMark',\n          peer: this.appPeersManager.getDialogPeer(peerId),\n          pFlags\n        });\n      }\n    });\n  }\n\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\n    if(!this.migratedFromTo[migrateFrom] &&\n      !this.migratedToFrom[migrateTo] &&\n      this.appChatsManager.hasChat(migrateTo.toChatId())) {\n      const fromChat: Chat.chat = this.appChatsManager.getChat(migrateFrom.toChatId());\n      if(fromChat?.migrated_to && (fromChat.migrated_to as InputChannel.inputChannel).channel_id === migrateTo.toChatId()) {\n        this.migratedFromTo[migrateFrom] = migrateTo;\n        this.migratedToFrom[migrateTo] = migrateFrom;\n\n        this.rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\n\n        this.dialogsStorage.dropDialogWithEvent(migrateFrom);\n      }\n    }\n  }\n\n  private canMessageBeEdited(message: Message, kind: 'text' | 'poll') {\n    if((message as Message.message)?.pFlags?.is_outgoing) {\n      return false;\n    }\n\n    const goodMedias = [\n      'messageMediaPhoto',\n      'messageMediaDocument',\n      'messageMediaWebPage'\n    ];\n\n    if(kind === 'poll') {\n      goodMedias.push('messageMediaPoll');\n    }\n\n    if(!message ||\n        message._ !== 'message' ||\n        message.deleted ||\n        message.fwd_from ||\n        message.via_bot_id ||\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\n        message.fromId && this.appUsersManager.isBot(message.fromId)) {\n      return false;\n    }\n\n    if(message.media?._ === 'messageMediaDocument' &&\n        ((message.media.document as Document.document).sticker || (message.media.document as Document.document).type === 'round')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async canEditMessage(message: Message.message | Message.messageService, kind: 'text' | 'poll' = 'text') {\n    if(!message || !this.canMessageBeEdited(message, kind)) {\n      return false;\n    }\n\n    // * second rule for saved messages, because there is no 'out' flag\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === this.appUsersManager.getSelf().id) {\n      return true;\n    }\n\n    if(!message.pFlags.out || (\n      message.peer_id._ !== 'peerChannel' &&\n        message.date < (tsNow(true) - (await this.apiManager.getConfig()).edit_time_limit) &&\n        (message as Message.message).media?._ !== 'messageMediaPoll'\n    )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canDeleteMessage(message: MyMessage) {\n    return message && (\n      message.peerId.isUser() ||\n      message.pFlags.out ||\n      this.appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' ||\n      this.appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\n    ) && !message.pFlags.is_outgoing;\n  }\n\n  public getReplyKeyboard(peerId: PeerId) {\n    return this.getHistoryStorage(peerId).replyMarkup;\n  }\n\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n    if(!message) {\n      return false;\n    }\n\n    const messageReplyMarkup = (message as Message.message).reply_markup;\n    if(!messageReplyMarkup &&\n      !message.pFlags?.out &&\n      !(message as Message.messageService).action) {\n      return false;\n    }\n\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\n      return false;\n    }\n\n    const lastReplyMarkup = historyStorage.replyMarkup;\n    if(messageReplyMarkup) {\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n        return false;\n      }\n\n      if(messageReplyMarkup.pFlags.selective) {\n        return false;\n      }\n\n      if(historyStorage.maxOutId &&\n        message.mid < historyStorage.maxOutId &&\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\n      }\n\n      messageReplyMarkup.mid = message.mid;\n      /* messageReplyMarkup = Object.assign({\n        mid: message.mid\n      }, messageReplyMarkup); */\n\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\n        messageReplyMarkup.fromId = this.appPeersManager.getPeerId(message.from_id);\n      }\n\n      historyStorage.replyMarkup = messageReplyMarkup;\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    if(message.pFlags.out) {\n      if(lastReplyMarkup) {\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\n        if(lastReplyMarkup.pFlags.single_use &&\n          !lastReplyMarkup.pFlags.hidden &&\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\n          (message as Message.message).message) {\n          lastReplyMarkup.pFlags.hidden = true;\n          // this.log('set', historyStorage.reply_markup)\n          return true;\n        }\n      } else if(!historyStorage.maxOutId ||\n        message.mid > historyStorage.maxOutId) {\n        historyStorage.maxOutId = message.mid;\n      }\n    }\n\n    assumeType<Message.messageService>(message);\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\n      (lastReplyMarkup ?\n        message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId :\n        this.appUsersManager.isBot(message.action.user_id)\n      )\n    ) {\n      historyStorage.replyMarkup = {\n        _: 'replyKeyboardHide',\n        mid: message.mid,\n        pFlags: {}\n      };\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    return false;\n  }\n\n  public getSearchStorage(peerId: PeerId, inputFilter: MyInputMessagesFilter) {\n    if(!this.searchesStorage[peerId]) this.searchesStorage[peerId] = {};\n    if(!this.searchesStorage[peerId][inputFilter]) this.searchesStorage[peerId][inputFilter] = {history: []};\n    return this.searchesStorage[peerId][inputFilter];\n  }\n\n  public getSearchCounters(peerId: PeerId, filters: MessagesFilter[], canCache = true): Promise<MessagesSearchCounter[]> {\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return Promise.resolve(filters.map((filter) => {\n        return {\n          _: 'messages.searchCounter',\n          pFlags: {},\n          filter: filter,\n          count: 0\n        };\n      }));\n    }\n\n    const func = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n    return func('messages.getSearchCounters', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      filters\n    });\n  }\n\n  public filterMessagesByInputFilterFromStorage(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage | MessagesStorageKey, limit: number) {\n    const _storage = this.getMessagesStorage(storage);\n    return filterMessagesByInputFilter(inputFilter, history.map((mid) => _storage.get(mid)), limit);\n  }\n\n  public getSearch({peerId, query, inputFilter, maxId, limit, nextRate, backLimit, threadId, folderId, minDate, maxDate}: {\n    peerId?: PeerId,\n    maxId?: number,\n    limit?: number,\n    nextRate?: number,\n    backLimit?: number,\n    threadId?: number,\n    folderId?: number,\n    query?: string,\n    inputFilter?: {\n      _: MyInputMessagesFilter\n    },\n    minDate?: number,\n    maxDate?: number\n  }): Promise<{\n    count: number,\n    next_rate: number,\n    offset_id_offset: number,\n    history: MyMessage[]\n  }> {\n    if(this.appPeersManager.isRestricted(peerId)/*  || true */) {\n      return Promise.resolve({\n        count: 0,\n        offset_id_offset: 0,\n        next_rate: undefined,\n        history: []\n      });\n    }\n\n    if(!query) query = '';\n    if(!inputFilter) inputFilter = {_: 'inputMessagesFilterEmpty'};\n    if(limit === undefined) limit = 20;\n    if(!nextRate) nextRate = 0;\n    if(!backLimit) backLimit = 0;\n\n    minDate = minDate ? minDate / 1000 | 0 : 0;\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\n\n    let foundMsgs: MyMessage[] = [];\n\n    // this.log('search', maxId);\n\n    if(backLimit) {\n      limit += backLimit;\n    }\n\n    // const beta = inputFilter._ === 'inputMessagesFilterPinned' && !backLimit;\n    const beta = false;\n\n    let storage: {\n      count?: number;\n      history: SlicedArray<number>;\n    };\n\n    // * костыль для limit 1, если нужно и получить сообщение, и узнать количество сообщений\n    if(peerId && !backLimit && !maxId && !query && limit !== 1 && !threadId/*  && inputFilter._ !== 'inputMessagesFilterPinned' */) {\n      storage = beta ?\n        this.getSearchStorage(peerId, inputFilter._) as any :\n        this.getHistoryStorage(peerId);\n      foundMsgs = this.filterMessagesByInputFilterFromStorage(inputFilter._, storage.history.slice, this.getHistoryMessagesStorage(peerId), limit);\n    }\n\n    if(foundMsgs.length) {\n      if(foundMsgs.length < limit && (beta ? storage.count !== storage.history.length : true)) {\n        maxId = foundMsgs[foundMsgs.length - 1].mid;\n        limit = limit - foundMsgs.length;\n      } else {\n        return Promise.resolve({\n          count: beta ? storage.count : 0,\n          next_rate: 0,\n          offset_id_offset: 0,\n          history: foundMsgs\n        });\n      }\n    } else if(beta && storage?.count) {\n      return Promise.resolve({\n        count: storage.count,\n        next_rate: 0,\n        offset_id_offset: 0,\n        history: []\n      });\n    }\n\n    const canCache = false && (['inputMessagesFilterChatPhotos', 'inputMessagesFilterPinned'] as MyInputMessagesFilter[]).includes(inputFilter._);\n    const method = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n\n    let apiPromise: Promise<any>;\n    if(peerId && !nextRate && folderId === undefined/*  || !query */) {\n      apiPromise = method('messages.search', {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        limit,\n        offset_id: getServerMessageId(maxId) || 0,\n        add_offset: backLimit ? -backLimit : 0,\n        max_id: 0,\n        min_id: 0,\n        hash: '',\n        top_msg_id: getServerMessageId(threadId) || 0\n      }, {\n        // timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    } else {\n      // var offsetDate = 0;\n      let offsetPeerId: PeerId;\n      let offsetId = 0;\n      const offsetMessage = maxId && this.getMessageByPeer(peerId, maxId);\n\n      if(offsetMessage && offsetMessage.date) {\n        // offsetDate = offsetMessage.date + timeManager.getServerTimeOffset();\n        offsetId = offsetMessage.id;\n        offsetPeerId = this.getMessagePeer(offsetMessage);\n      }\n\n      apiPromise = method('messages.searchGlobal', {\n        q: query,\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        offset_rate: nextRate,\n        offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n        offset_id: offsetId,\n        limit,\n        folder_id: folderId\n      }, {\n        // timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    }\n\n    return apiPromise.then((searchResult: any) => {\n      this.appUsersManager.saveApiUsers(searchResult.users);\n      this.appChatsManager.saveApiChats(searchResult.chats);\n      this.saveMessages(searchResult.messages);\n\n      /* if(beta && storage && (!maxId || storage.history[storage.history.length - 1] === maxId)) {\n        const storage = this.getSearchStorage(peerId, inputFilter._);\n        const add = (searchResult.messages.map((m: any) => m.mid) as number[]).filter((mid) => storage.history.indexOf(mid) === -1);\n        storage.history.push(...add);\n        storage.history.sort((a, b) => b - a);\n        storage.count = searchResult.count;\n      } */\n\n      if(DEBUG) {\n        this.log('getSearch result:', inputFilter, searchResult);\n      }\n\n      const foundCount: number = searchResult.count || (foundMsgs.length + searchResult.messages.length);\n\n      searchResult.messages.forEach((message: MyMessage) => {\n        const peerId = this.getMessagePeer(message);\n        if(peerId.isAnyChat()) {\n          const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\n          if(chat.migrated_to) {\n            this.migrateChecks(peerId, (chat.migrated_to as InputChannel.inputChannel).channel_id.toPeerId(true));\n          }\n        }\n\n        foundMsgs.push(message);\n      });\n\n      return {\n        count: foundCount,\n        offset_id_offset: searchResult.offset_id_offset || 0,\n        next_rate: searchResult.next_rate,\n        history: foundMsgs\n      };\n    });\n  }\n\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\n    const repliesKey = peerId + '_' + mid;\n    for(const threadKey in this.threadsToReplies) {\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\n    }\n\n    this.getDiscussionMessage(peerId, mid);\n  }\n\n  public generateThreadServiceStartMessage(message: Message.message | Message.messageService) {\n    const threadKey = message.peerId + '_' + message.mid;\n    if(this.threadsServiceMessagesIdsStorage[threadKey]) return;\n\n    const maxMessageId = getServerMessageId(Math.max(...this.getMidsByMessage(message)));\n    const serviceStartMessage: Message.messageService = {\n      _: 'messageService',\n      pFlags: {\n        is_single: true\n      },\n      id: this.appMessagesIdsManager.generateTempMessageId(maxMessageId),\n      date: message.date,\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\n      peer_id: message.peer_id,\n      action: {\n        _: 'messageActionDiscussionStarted'\n      },\n      reply_to: this.generateReplyHeader(message.id)\n    };\n\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\n    this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\n  }\n\n  public getThreadServiceMessageId(peerId: PeerId, threadId: number) {\n    return this.threadsServiceMessagesIdsStorage[peerId + '_' + threadId];\n  }\n\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApiSingle('messages.getDiscussionMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((result) => {\n      this.appChatsManager.saveApiChats(result.chats);\n      this.appUsersManager.saveApiUsers(result.users);\n      this.saveMessages(result.messages);\n\n      const message = this.getMessageWithReplies(result.messages[0] as Message.message);\n      const threadKey = message.peerId + '_' + message.mid;\n\n      this.generateThreadServiceStartMessage(message);\n\n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\n      result.max_id = historyStorage.maxId = generateMessageId(result.max_id) || 0;\n      result.read_inbox_max_id = historyStorage.readMaxId = generateMessageId(result.read_inbox_max_id ?? message.mid);\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = generateMessageId(result.read_outbox_max_id) || 0;\n\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\n\n      return message;\n    });\n  }\n\n  private handleNewMessage(message: MyMessage) {\n    this.rootScope.dispatchEvent('history_multiappend', message);\n  }\n\n  private handleNewDialogs = () => {\n    let newMaxSeenId = 0;\n    const map = this.newDialogsToHandle;\n    for(const [peerId, dialog] of map) {\n      if(!dialog) {\n        this.reloadConversation(peerId.toPeerId());\n        map.delete(peerId);\n      } else {\n        this.dialogsStorage.pushDialog(dialog);\n        if(!this.appPeersManager.isChannel(peerId.toPeerId())) {\n          newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\n        }\n      }\n    }\n\n    // this.log('after order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    if(newMaxSeenId !== 0) {\n      this.incrementMaxSeenId(newMaxSeenId);\n    }\n\n    this.rootScope.dispatchEvent('dialogs_multiupdate', map);\n    this.newDialogsToHandle.clear();\n  };\n\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: Dialog) {\n    if(peerId !== undefined) {\n      this.newDialogsToHandle.set(peerId, dialog);\n    }\n\n    if(this.newDialogsHandlePromise) return this.newDialogsHandlePromise;\n    return this.newDialogsHandlePromise = pause(0).then(() => {\n      this.newDialogsHandlePromise = undefined;\n      this.handleNewDialogs();\n    });\n  }\n\n  public async deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\n    let promise: Promise<any>;\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    const localMessageIds = mids.map((mid) => getServerMessageId(mid));\n\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n      const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\n        mids = mids.filter((mid) => {\n          const message = this.getMessageByPeer(peerId, mid);\n          return !!message.pFlags.out;\n        });\n\n        if(!mids.length) {\n          return;\n        }\n      }\n\n      promise = this.apiManager.invokeApi('channels.deleteMessages', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: channelId,\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.deleteMessages', {\n        revoke,\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    }\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.deleteMessages(peerId, overflowMids, revoke));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    // console.trace('start read')\n    this.log('readHistory:', peerId, maxId, threadId);\n    if(!this.getReadMaxIdIfUnread(peerId, threadId)) {\n      if(!force && !threadId) {\n        const dialog = this.getDialogOnly(peerId);\n        if(dialog && this.isDialogUnread(dialog)) {\n          force = true;\n        }\n      }\n\n      if(!force) {\n        this.log('readHistory: isn\\'t unread');\n        return Promise.resolve();\n      }\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(historyStorage.triedToReadMaxId >= maxId) {\n      return Promise.resolve();\n    }\n\n    let apiPromise: Promise<any>;\n    if(threadId) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readDiscussion', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          msg_id: getServerMessageId(threadId),\n          read_max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelDiscussionInbox',\n        channel_id: peerId.toChatId(),\n        top_msg_id: threadId,\n        read_max_id: maxId\n      });\n    } else if(this.appPeersManager.isChannel(peerId)) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('channels.readHistory', {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelInbox',\n        max_id: maxId,\n        channel_id: peerId.toChatId(),\n        still_unread_count: undefined,\n        pts: undefined\n      });\n    } else {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readHistory', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          max_id: getServerMessageId(maxId)\n        }).then((affectedMessages) => {\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          });\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadHistoryInbox',\n        max_id: maxId,\n        peer: this.appPeersManager.getOutputPeer(peerId),\n        still_unread_count: undefined,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n\n    this.rootScope.dispatchEvent('notification_reset', this.appPeersManager.getPeerString(peerId));\n\n    if(historyStorage.readPromise) {\n      return historyStorage.readPromise;\n    }\n\n    historyStorage.triedToReadMaxId = maxId;\n\n    apiPromise.finally(() => {\n      delete historyStorage.readPromise;\n\n      const {readMaxId} = historyStorage;\n      this.log('readHistory: promise finally', maxId, readMaxId);\n\n      if(readMaxId > maxId) {\n        this.readHistory(peerId, readMaxId, threadId, true);\n      }\n    });\n\n    return historyStorage.readPromise = apiPromise;\n  }\n\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(historyStorage.maxId) {\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\n    }\n  }\n\n  public fixDialogUnreadMentionsIfNoMessage(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public modifyCachedMentions(peerId: PeerId, mid: number, add: boolean) {\n    const slicedArray = this.unreadMentions[peerId];\n    if(!slicedArray) return;\n\n    if(add) {\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\n        slicedArray.insertSlice([mid]);\n      }\n    } else {\n      slicedArray.delete(mid);\n    }\n  }\n\n  private fixUnreadMentionsCountIfNeeded(peerId: PeerId, slicedArray: SlicedArray<number>) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!slicedArray.length && dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public goToNextMention(peerId: PeerId) {\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then((messages) => {\n      console.log(messages);\n    }); */\n\n    const promise = this.goToNextMentionPromises[peerId];\n    if(promise) {\n      return promise;\n    }\n\n    const slicedArray = this.unreadMentions[peerId] ?? (this.unreadMentions[peerId] = new SlicedArray());\n    const length = slicedArray.length;\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\n    if(!length && isTopEnd) {\n      this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      return Promise.resolve();\n    }\n\n    let loadNextPromise = Promise.resolve();\n    if(!isTopEnd && length < 25) {\n      loadNextPromise = this.loadNextMentions(peerId);\n    }\n\n    return this.goToNextMentionPromises[peerId] = loadNextPromise.then(() => {\n      const last = slicedArray.last;\n      const mid = last && last[last.length - 1];\n      if(mid) {\n        slicedArray.delete(mid);\n        return mid;\n      } else {\n        this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      }\n    }).finally(() => {\n      delete this.goToNextMentionPromises[peerId];\n    });\n  }\n\n  public loadNextMentions(peerId: PeerId) {\n    const slicedArray = this.unreadMentions[peerId];\n    const maxId = slicedArray.first[0] || 1;\n\n    const backLimit = 50;\n    const add_offset = -backLimit;\n    const limit = backLimit;\n    return this.getUnreadMentions(peerId, maxId, add_offset, limit).then((messages) => {\n      this.mergeHistoryResult(slicedArray, messages, maxId === 1 ? 0 : maxId, limit, add_offset);\n    });\n  }\n\n  public getUnreadMentions(peerId: PeerId, offsetId: number, add_offset: number, limit: number, maxId = 0, minId = 0) {\n    return this.apiManager.invokeApiSingle('messages.getUnreadMentions', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: getServerMessageId(offsetId),\n      add_offset,\n      limit,\n      max_id: getServerMessageId(maxId),\n      min_id: getServerMessageId(minId)\n    }).then((messagesMessages) => {\n      assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\n      this.appUsersManager.saveApiUsers(messagesMessages.users);\n      this.appChatsManager.saveApiChats(messagesMessages.chats);\n      this.saveMessages(messagesMessages.messages);\n\n      return messagesMessages;\n    });\n  }\n\n  public readMessages(peerId: PeerId, msgIds: number[]) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    if(!msgIds.length) {\n      return Promise.resolve();\n    }\n\n    msgIds = msgIds.map((mid) => getServerMessageId(mid));\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n\n      update = {\n        _: 'updateChannelReadMessagesContents',\n        channel_id: channelId,\n        messages: msgIds\n      };\n\n      promise = this.apiManager.invokeApi('channels.readMessageContents', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: msgIds\n      });\n    } else {\n      update = {\n        _: 'updateReadMessagesContents',\n        messages: msgIds,\n        pts: undefined,\n        pts_count: undefined\n      };\n\n      promise = this.apiManager.invokeApi('messages.readMessageContents', {\n        id: msgIds\n      }).then((affectedMessages) => {\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\n        this.apiUpdatesManager.processLocalUpdate(update);\n      });\n    }\n\n    this.apiUpdatesManager.processLocalUpdate(update);\n\n    return promise;\n  }\n\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      // threadId = this.getLocalMessageId(threadId);\n      if(!this.threadsStorage[peerId]) this.threadsStorage[peerId] = {};\n      return this.threadsStorage[peerId][threadId] ?? (this.threadsStorage[peerId][threadId] = {count: null, history: new SlicedArray()});\n    }\n\n    return this.historiesStorage[peerId] ?? (this.historiesStorage[peerId] = {count: null, history: new SlicedArray()});\n  }\n\n  public getHistoryStorageTransferable(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const {\n      count,\n      history,\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    } = historyStorage;\n\n    return {\n      count,\n      history: undefined as HistoryStorage,\n      historySerialized: history.toJSON(),\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    };\n  }\n\n  private getNotifyPeerSettings(peerId: PeerId) {\n    return Promise.all([\n      this.appNotificationsManager.getNotifyPeerTypeSettings(),\n      this.appNotificationsManager.getNotifySettings(this.appPeersManager.getInputNotifyPeerById(peerId, true))\n    ]).then(([_, peerTypeNotifySettings]) => {\n      return {\n        muted: this.appNotificationsManager.isPeerLocalMuted(peerId, true),\n        peerTypeNotifySettings\n      };\n    });\n  }\n\n  private handleNotifications = () => {\n    ctx.clearTimeout(this.notificationsHandlePromise);\n    this.notificationsHandlePromise = 0;\n\n    // var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\n    // const timeout = 1000;\n\n    for(const _peerId in this.notificationsToHandle) {\n      const peerId = _peerId.toPeerId();\n      // if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\n      // continue;\n      // }\n\n      const notifyPeerToHandle = this.notificationsToHandle[peerId];\n      this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n        const topMessage = notifyPeerToHandle.topMessage;\n        if((muted && !topMessage.pFlags.mentioned) || !topMessage.pFlags.unread) {\n          return;\n        }\n\n        // setTimeout(() => {\n        if(topMessage.pFlags.unread) {\n          this.notifyAboutMessage(topMessage, {\n            fwdCount: notifyPeerToHandle.fwdCount,\n            peerTypeNotifySettings\n          });\n        }\n        // }, timeout);\n      });\n    }\n\n    this.notificationsToHandle = {};\n  };\n\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\n    const randomId = update.random_id;\n    const pendingData = this.pendingByRandomId[randomId];\n    // this.log('AMM updateMessageID:', update, pendingData);\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n      const mid = generateMessageId(update.id);\n      const message = this.getMessageFromStorage(storage, mid);\n      if(message) {\n        [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n        .filter(Boolean)\n        .forEach((storage) => {\n          storage.history.delete(tempId);\n        });\n\n        this.finalizePendingMessageCallbacks(storage, tempId, message);\n      } else {\n        this.pendingByMessageId[mid] = randomId;\n      }\n    }\n  };\n\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const dialog = this.getDialogOnly(peerId);\n\n    // * local update\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\n\n    // * temporary save the message for info (peerId, reply mids...)\n    this.saveMessages([message], {storage: this.createMessageStorage(peerId, 'history')});\n\n    const threadKey = this.getThreadKey(message);\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\n    if(threadId && !isLocalThreadUpdate && this.threadsStorage[peerId] && this.threadsStorage[peerId][threadId]) {\n      const update = {\n        _: 'updateNewDiscussionMessage',\n        message\n      } as Update.updateNewDiscussionMessage;\n\n      this.onUpdateNewMessage(update);\n    }\n\n    if(message._ === 'messageService' && message.action._ === 'messageActionPaymentSent' && message.reply_to) {\n      this.rootScope.dispatchEvent('payment_sent', {\n        peerId: message.reply_to.reply_to_peer_id ? this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : message.peerId,\n        mid: message.reply_to_mid,\n        receiptMessage: message\n      });\n    }\n\n    if(!dialog && !isLocalThreadUpdate) {\n      let good = true;\n      if(peerId.isAnyChat()) {\n        good = this.appChatsManager.isInChat(peerId.toChatId());\n      }\n\n      if(good) {\n        const set = this.newUpdatesAfterReloadToHandle[peerId] ?? (this.newUpdatesAfterReloadToHandle[peerId] = new Set());\n        if(set.has(update)) {\n          this.log.error('here we go again', peerId);\n          return;\n        }\n\n        (update as any).ignoreExisting = true;\n        set.add(update);\n        this.scheduleHandleNewDialogs(peerId);\n      }\n\n      return;\n    }\n\n    /* if(update._ === 'updateNewChannelMessage') {\n      const chat = appChatsManager.getChat(peerId.toChatId());\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n        return;\n      }\n    } */\n\n    this.saveMessages([message], {storage});\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n    /* if((message as Message.message).grouped_id) {\n      this.log('updateNewMessage', message);\n    } */\n\n    const pendingMessage = this.checkPendingMessage(message);\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if(!isLocalThreadUpdate) {\n      this.updateMessageRepliesIfNeeded(message);\n    }\n\n    // * so message can exist if reloadConversation came back earlier with mid\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\n    if(isExisting) {\n      if(!ignoreExisting) {\n        return false;\n      }\n    } else {\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\n      const firstSlice = historyStorage.history.first;\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\n        let i = 0;\n        for(const length = firstSlice.length; i < length; ++i) {\n          if(message.mid > firstSlice[i]) {\n            break;\n          }\n        }\n\n        firstSlice.splice(i, 0, message.mid);\n      } else {\n        historyStorage.history.unshift(message.mid);\n      }\n\n      if(historyStorage.count !== null) {\n        historyStorage.count++;\n      }\n    }\n\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\n      this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n    }\n\n    const fromId = message.fromId;\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\n      this.appUsersManager.forceUserOnline(fromId, message.date);\n\n      const action: SendMessageAction = {\n        _: 'sendMessageCancelAction'\n      };\n\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\n      if(peerId.isUser()) {\n        update = {\n          _: 'updateUserTyping',\n          action,\n          user_id: fromId\n        };\n      } else if(this.appPeersManager.isChannel(peerId)) {\n        update = {\n          _: 'updateChannelUserTyping',\n          action,\n          channel_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId),\n          top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n        };\n      } else {\n        update = {\n          _: 'updateChatUserTyping',\n          action,\n          chat_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId)\n        };\n      }\n\n      this.apiUpdatesManager.processLocalUpdate(update);\n    }\n\n    // commented to render the message if it's been sent faster than history_append came to main thread\n    // if(!pendingMessage) {\n    this.handleNewMessage(message);\n    // }\n\n    if(isLocalThreadUpdate) {\n      return;\n    }\n\n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\n    if(dialog) {\n      if(inboxUnread && message.mid > dialog.top_message) {\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n        ++dialog.unread_count;\n        if(message.pFlags.mentioned) {\n          ++dialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, true);\n        }\n\n        releaseUnreadCount();\n      }\n\n      if(message.mid >= dialog.top_message) {\n        this.setDialogTopMessage(message, dialog);\n      }\n    }\n\n    if(inboxUnread/*  && ($rootScope.selectedPeerID != peerID || $rootScope.idle.isIDLE) */) {\n      const notifyPeer = peerId;\n      let notifyPeerToHandle = this.notificationsToHandle[notifyPeer];\n      if(notifyPeerToHandle === undefined) {\n        notifyPeerToHandle = this.notificationsToHandle[notifyPeer] = {\n          fwdCount: 0,\n          fromId: NULL_PEER_ID\n        };\n      }\n\n      if(notifyPeerToHandle.fromId !== fromId) {\n        notifyPeerToHandle.fromId = fromId;\n        notifyPeerToHandle.fwdCount = 0;\n      }\n\n      if((message as Message.message).fwd_from) {\n        ++notifyPeerToHandle.fwdCount;\n      }\n\n      notifyPeerToHandle.topMessage = message;\n\n      if(!this.notificationsHandlePromise) {\n        this.notificationsHandlePromise = ctx.setTimeout(this.handleNotifications, 0);\n      }\n    }\n  };\n\n  private onUpdateMessageReactions = (update: Update.updateMessageReactions) => {\n    const {peer, msg_id, reactions} = update;\n    const mid = generateMessageId(msg_id);\n    const peerId = this.appPeersManager.getPeerId(peer);\n    const message: MyMessage = this.getMessageByPeer(peerId, mid);\n\n    if(message?._ !== 'message') {\n      return;\n    }\n\n    const recentReactions = reactions?.recent_reactions;\n    if(recentReactions?.length && message.pFlags.out) {\n      const recentReaction = recentReactions[recentReactions.length - 1];\n      const previousReactions = message.reactions;\n      const previousRecentReactions = previousReactions?.recent_reactions;\n      if(\n        this.appPeersManager.getPeerId(recentReaction.peer_id) !== this.appPeersManager.peerId && (\n          !previousRecentReactions ||\n          previousRecentReactions.length <= recentReactions.length\n        ) && (\n          !previousRecentReactions ||\n          !deepEqual(recentReaction, previousRecentReactions[previousRecentReactions.length - 1])\n        )\n      ) {\n        this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n          if(/* muted ||  */!peerTypeNotifySettings.show_previews) return;\n          this.notifyAboutMessage(message, {\n            peerReaction: recentReaction,\n            peerTypeNotifySettings\n          });\n        });\n      }\n    }\n\n    const key = message.peerId + '_' + message.mid;\n    this.pushBatchUpdate('messages_reactions', this.batchUpdateReactions, key, () => copy(message.reactions));\n\n    message.reactions = reactions;\n\n    if(!update.local) {\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\n    // this.log('updateDialogUnreadMark', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    if(!dialog) {\n      this.scheduleHandleNewDialogs(peerId);\n    } else {\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(!update.pFlags.unread) {\n        delete dialog.pFlags.unread_mark;\n      } else {\n        dialog.pFlags.unread_mark = true;\n      }\n\n      releaseUnreadCount();\n      this.dialogsStorage.setDialogToState(dialog);\n      this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, dialog]]));\n    }\n  };\n\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const mid = generateMessageId(message.id);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    // console.trace(dT(), 'edit message', message)\n\n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage});\n    const newMessage: Message = this.getMessageFromStorage(storage, mid);\n\n    this.handleEditedMessage(oldMessage, newMessage, storage);\n\n    const dialog = this.getDialogOnly(peerId);\n\n    // if sender erased mention\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\n      --dialog.unread_mentions_count;\n      this.modifyCachedMentions(peerId, mid, false);\n    } */\n\n    const isTopMessage = dialog && dialog.top_message === mid;\n    if((message as Message.messageService).clear_history) {\n      if(isTopMessage) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog});\n      }\n    } else {\n      // no sense in dispatching message_edit since only reactions have changed\n      if(oldMessage?._ === 'message' && !deepEqual(oldMessage.reactions, (newMessage as Message.message).reactions)) {\n        const newReactions = (newMessage as Message.message).reactions;\n        (newMessage as Message.message).reactions = oldMessage.reactions;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateMessageReactions',\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          msg_id: message.id,\n          reactions: newReactions\n        });\n\n        return;\n      }\n\n      this.rootScope.dispatchEvent('message_edit', {\n        storageKey: storage.key,\n        peerId,\n        mid,\n        message\n      });\n\n      if(isTopMessage || (message as Message.message).grouped_id) {\n        this.dialogsStorage.setDialogToState(dialog);\n        this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, dialog]]));\n      }\n    }\n  };\n\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox\n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox\n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\n    const maxId = generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id);\n    const threadId = generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id);\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updateReadHistoryInbox).peer);\n\n    const isOut = update._ === 'updateReadHistoryOutbox' || update._ === 'updateReadChannelOutbox' || update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const history = getObjectKeysAndSort(storage, 'desc');\n    const foundDialog = this.getDialogOnly(peerId);\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\n    let newUnreadCount = 0;\n    let newUnreadMentionsCount = 0;\n    let foundAffected = false;\n\n    // this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(peerId.isUser() && isOut) {\n      this.appUsersManager.forceUserOnline(peerId);\n    }\n\n    if(threadId) {\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\n      if(repliesKey) {\n        const [peerId, mid] = repliesKey.split('_');\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n      }\n    }\n\n    const releaseUnreadCount = !threadId && foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n\n    for(let i = 0, length = history.length; i < length; i++) {\n      const mid = history[i];\n      if(mid > maxId) {\n        continue;\n      }\n\n      const message: MyMessage = storage.get(mid);\n\n      if(message.pFlags.out !== isOut) {\n        continue;\n      }\n\n      if(!message.pFlags.unread) {\n        break;\n      }\n\n      if(threadId) {\n        const replyTo = message.reply_to;\n        if(!replyTo || (replyTo.reply_to_top_id || replyTo.reply_to_msg_id) !== threadId) {\n          continue;\n        }\n      }\n\n      // this.log.warn('read', messageId, message.pFlags.unread, message)\n      if(message.pFlags.unread) {\n        delete message.pFlags.unread;\n        if(!foundAffected) {\n          foundAffected = true;\n        }\n\n        if(!message.pFlags.out && !threadId && foundDialog) {\n          if(stillUnreadCount === undefined) {\n            newUnreadCount = --foundDialog.unread_count;\n          }\n\n          if(message.pFlags.mentioned) {\n            newUnreadMentionsCount = --foundDialog.unread_mentions_count;\n            this.modifyCachedMentions(peerId, message.mid, false);\n          }\n        }\n\n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n      }\n    }\n\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\n    else historyStorage.readMaxId = maxId;\n\n    if(!threadId && foundDialog) {\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\n      else foundDialog.read_inbox_max_id = maxId;\n\n      if(!isOut) {\n        let setCount: number;\n        if(stillUnreadCount !== undefined) {\n          setCount = stillUnreadCount;\n        } else if(newUnreadCount < 0 || !this.getReadMaxIdIfUnread(peerId)) {\n          setCount = 0;\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\n          setCount = newUnreadCount;\n        }\n\n        if(setCount !== undefined) {\n          foundDialog.unread_count = setCount;\n        }\n\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\n          foundDialog.unread_mentions_count = 0;\n        }\n      }\n\n      if(releaseUnreadCount) {\n        releaseUnreadCount();\n      }\n\n      this.dialogsStorage.processDialogForFilters(foundDialog);\n\n      this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      this.dialogsStorage.setDialogToState(foundDialog);\n    }\n\n    if(foundAffected) {\n      this.rootScope.dispatchEvent('messages_read');\n    }\n\n    if(!threadId && channelId) {\n      const threadKeyPart = peerId + '_';\n      for(const threadKey in this.threadsToReplies) {\n        if(threadKey.indexOf(threadKeyPart) === 0) {\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\n          this.rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid) as Message.message);\n        }\n      }\n    }\n  };\n\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\n    const mids = (update as Update.updateReadMessagesContents).messages.map((id) => generateMessageId(id));\n    const peerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(mids);\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\n      if(message) {\n        if(message.pFlags.media_unread) {\n          delete message.pFlags.media_unread;\n          this.setDialogToStateIfMessageIsTop(message);\n\n          if(!message.pFlags.out && message.pFlags.mentioned) {\n            this.modifyCachedMentions(peerId, mid, false);\n          }\n        }\n      } else {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('messages_media_read', {peerId, mids});\n  };\n\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\n    const peerId = update.channel_id.toPeerId(true);\n    const history = this.getHistoryStorage(peerId).history.slice;\n    const availableMinId = generateMessageId(update.available_min_id);\n    const messages = history.filter((mid) => mid <= availableMinId);\n\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\n  };\n\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\n    // const messages = (update as any as Update.updateDeleteChannelMessages).messages;\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map((id) => generateMessageId(id));\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(messages);\n\n    if(!peerId) {\n      return;\n    }\n\n    this.apiManager.clearCache('messages.getSearchCounters', (params) => {\n      return this.appPeersManager.getPeerId(params.peer) === peerId;\n    });\n\n    const threadKeys: Set<string> = new Set();\n    for(const mid of messages) {\n      const message = this.getMessageByPeer(peerId, mid);\n      const threadKey = this.getThreadKey(message);\n      if(threadKey && this.threadsStorage[peerId] && this.threadsStorage[peerId][+threadKey.split('_')[1]]) {\n        threadKeys.add(threadKey);\n      }\n    }\n\n    const historyUpdated = this.handleDeletedMessages(peerId, this.getHistoryMessagesStorage(peerId), messages);\n\n    const threadsStorages = Array.from(threadKeys).map((threadKey) => {\n      const [peerId, mid] = threadKey.split('_');\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\n    });\n\n    const historyStorage = this.getHistoryStorage(peerId);\n    [historyStorage].concat(threadsStorages).forEach((historyStorage) => {\n      for(const mid of historyUpdated.msgs) {\n        historyStorage.history.delete(mid);\n      }\n\n      if(historyUpdated.count && historyStorage.count) {\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\n      }\n    });\n\n    this.rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\n\n    const foundDialog = this.getDialogOnly(peerId);\n    if(foundDialog) {\n      const affected = historyUpdated.unreadMentions || historyUpdated.unread;\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n\n      if(historyUpdated.unread) {\n        foundDialog.unread_count = Math.max(0, foundDialog.unread_count - historyUpdated.unread);\n      }\n\n      if(historyUpdated.unreadMentions) {\n        foundDialog.unread_mentions_count = !foundDialog.unread_count ? 0 : Math.max(0, foundDialog.unread_mentions_count - historyUpdated.unreadMentions);\n      }\n\n      if(affected) {\n        releaseUnreadCount();\n        this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      }\n\n      if(historyUpdated.msgs.has(foundDialog.top_message)) {\n        const slice = historyStorage.history.first;\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n          const mid = slice[0];\n          const message = this.getMessageByPeer(peerId, mid);\n          this.setDialogTopMessage(message, foundDialog);\n        } else {\n          this.reloadConversation(peerId);\n        }\n      }\n    }\n  };\n\n  private onUpdateChannel = (update: Update.updateChannel) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n\n    const needDialog = this.appChatsManager.isInChat(channelId);\n\n    const canViewHistory = !!channel.username || !channel.pFlags.left;\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\n\n    if(canViewHistory !== hasHistory) {\n      delete this.historiesStorage[peerId];\n      this.rootScope.dispatchEvent('history_forbidden', peerId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!!dialog !== needDialog) {\n      if(needDialog) {\n        this.reloadConversation(peerId);\n      } else {\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('channel_update', channelId);\n  };\n\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\n    const peerId = update.channel_id.toPeerId(true);\n\n    this.flushStoragesByPeerId(peerId);\n    this.reloadConversation(peerId).then(() => {\n      this.rootScope.dispatchEvent('history_reload', peerId);\n    });\n  };\n\n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\n    const views = update.views;\n    const peerId = update.channel_id.toPeerId(true);\n    const mid = generateMessageId(update.id);\n    const message = this.getMessageByPeer(peerId, mid) as Message.message;\n    if(message?.views !== undefined && message.views < views) {\n      message.views = views;\n      this.pushBatchUpdate('messages_views', this.batchUpdateViews, message.peerId + '_' + message.mid);\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\n    // this.log('updateServiceNotification', update);\n    if(update.pFlags?.popup) {\n      this.rootScope.dispatchEvent('service_notification', update);\n      return;\n    }\n\n    const fromId = SERVICE_PEER_ID;\n    const peerId = fromId;\n    const messageId = this.generateTempMessageId(peerId);\n    const message: Message.message = {\n      _: 'message',\n      id: messageId,\n      from_id: this.appPeersManager.getOutputPeer(fromId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      pFlags: {unread: true},\n      date: (update.inbox_date || tsNow(true)) + this.timeManager.getServerTimeOffset(),\n      message: update.message,\n      media: update.media,\n      entities: update.entities\n    };\n    if(!this.appUsersManager.hasUser(fromId)) {\n      this.appUsersManager.saveApiUsers([{\n        _: 'user',\n        id: fromId,\n        pFlags: {verified: true},\n        access_hash: '0',\n        first_name: 'Telegram',\n        phone: '42777'\n      }]);\n    }\n    this.saveMessages([message], {isOutgoing: true});\n\n    if(update.inbox_date) {\n      this.pendingTopMsgs[peerId] = messageId;\n      this.onUpdateNewMessage({\n        _: 'updateNewMessage',\n        message,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n  };\n\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updatePinnedMessages).peer);\n\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\n    if(storage.count !== storage.history.length) {\n      if(storage.count !== undefined) {\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];\n      }\n\n      rootScope.broadcast('peer_pinned_messages', peerId);\n      break;\n    } */\n\n    const messages = update.messages.map((id) => generateMessageId(id));\n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const missingMessages = messages.filter((mid) => !storage.has(mid));\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map((mid) => this.wrapSingleMessage(peerId, mid))) : Promise.resolve();\n    getMissingPromise.finally(() => {\n      const werePinned = update.pFlags?.pinned;\n      if(werePinned) {\n        for(const mid of messages) {\n          // storage.history.push(mid);\n          const message = storage.get(mid) as Message.message;\n          message.pFlags.pinned = true;\n        }\n\n        /* if(this.pinnedMessages[peerId]?.maxId) {\n          const maxMid = Math.max(...messages);\n          this.pinnedMessages\n        } */\n\n        // storage.history.sort((a, b) => b - a);\n      } else {\n        for(const mid of messages) {\n          // storage.history.findAndSplice((_mid) => _mid === mid);\n          const message = storage.get(mid) as Message.message;\n          delete message.pFlags.pinned;\n        }\n      }\n\n      /* const info = this.pinnedMessages[peerId];\n      if(info) {\n        info.count += messages.length * (werePinned ? 1 : -1);\n      } */\n\n      delete this.pinnedMessages[peerId];\n      this.appStateManager.getState().then((state) => {\n        delete state.hiddenPinnedMessages[peerId];\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\n      });\n    });\n  };\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer, notify_settings} = update;\n    if(peer._ === 'notifyPeer') {\n      const peerId = this.appPeersManager.getPeerId((peer as NotifyPeer.notifyPeer).peer);\n\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        dialog.notify_settings = notify_settings;\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(!storage) {\n      return;\n    }\n\n    const mid = generateMessageId(message.id);\n\n    const oldMessage = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage, isScheduled: true});\n    const newMessage = this.getMessageFromStorage(storage, mid);\n\n    if(oldMessage) {\n      this.handleEditedMessage(oldMessage, newMessage, storage);\n      this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId, mid: message.mid, message});\n    } else {\n      const pendingMessage = this.checkPendingMessage(message);\n      if(!pendingMessage) {\n        this.rootScope.dispatchEvent('scheduled_new', message as Message.message);\n      }\n    }\n  };\n\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mids = update.messages.map((id) => generateMessageId(id));\n      this.handleDeletedMessages(peerId, storage, mids);\n\n      this.rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\n    }\n  };\n\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\n    if(this.isMessageIsTopMessage(message)) {\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\n    }\n  }\n\n  public isMessageIsTopMessage(message: MyMessage) {\n    const dialog = this.getDialogOnly(message.peerId);\n    return dialog && dialog.top_message === message.mid;\n  }\n\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\n    try { // * на всякий случай, скорее всего это не понадобится\n      const threadKey = this.getThreadKey(threadMessage);\n      if(threadKey) {\n        const repliesKey = this.threadsToReplies[threadKey];\n        if(repliesKey) {\n          const [peerId, mid] = repliesKey.split('_');\n\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n        }\n      }\n    } catch(err) {\n      this.log.error('incrementMessageReplies err', err, threadMessage);\n    }\n  }\n\n  private getThreadKey(threadMessage: MyMessage) {\n    let threadKey = '';\n    if(threadMessage?.reply_to && threadMessage.peerId?.isAnyChat()) {\n      const threadId = threadMessage.reply_to.reply_to_top_id || threadMessage.reply_to.reply_to_msg_id;\n      threadKey = threadMessage.peerId + '_' + threadId;\n    }\n\n    return threadKey;\n  }\n\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\n    const promise: Promise<Message.message> = this.wrapSingleMessage(peerId, mid, true).then(() => {\n      const message = this.getMessageByPeer(peerId, mid) as Message.message;\n      if(!message) {\n        return;\n      }\n\n      if(broadcastEventName) {\n        this.rootScope.dispatchEvent(broadcastEventName, message);\n      }\n\n      return message;\n    });\n\n    return promise;\n  }\n\n  private checkPendingMessage(message: MyMessage) {\n    const randomId = this.pendingByMessageId[message.mid];\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\n    if(randomId) {\n      const pendingData = this.pendingByRandomId[randomId];\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\n        this.rootScope.dispatchEvent('history_update', {storageKey: pendingData.storage.key, message, sequential: pendingData.sequential});\n      }\n\n      delete this.pendingByMessageId[message.mid];\n    }\n\n    return pendingMessage;\n  }\n\n  public mutePeer(peerId: PeerId, muteUntil: number) {\n    const settings: InputPeerNotifySettings = {\n      _: 'inputPeerNotifySettings'\n    };\n\n    settings.mute_until = muteUntil;\n\n    return this.appNotificationsManager.updateNotifySettings({\n      _: 'inputNotifyPeer',\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }, settings);\n  }\n\n  public togglePeerMute(peerId: PeerId, mute?: boolean) {\n    if(mute === undefined) {\n      mute = !this.appNotificationsManager.isPeerLocalMuted(peerId, false);\n    }\n\n    return this.mutePeer(peerId, mute ? MUTE_UNTIL : 0);\n  }\n\n  private findPeerIdByMids(mids: number[]) {\n    for(let length = mids.length, i = length - 1; i >= 0; --i) {\n      const mid = mids[i];\n      const message = this.getMessageById(mid);\n      if(message) {\n        return message.peerId;\n      }\n    }\n  }\n\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return false;\n    }\n\n    if(peerId.isAnyChat()) {\n      // const isChannel = appPeersManager.isChannel(peerId);\n      const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\n      const hasRights = /* isChannel &&  */this.appChatsManager.hasRights(peerId.toChatId(), action, undefined, !!threadId);\n      return /* !isChannel ||  */hasRights && (!chat.pFlags.left || !!threadId);\n    } else {\n      return this.appUsersManager.canSendToUser(peerId);\n    }\n  }\n\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\n    const pendingData = this.pendingByRandomId[randomId];\n    // this.log('pdata', randomID, pendingData)\n\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n\n      [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n      .filter(Boolean)\n      .forEach((storage) => {\n        storage.history.delete(tempId);\n      });\n\n      // this.log('pending', randomID, historyStorage.pending)\n\n      const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\n      if(tempMessage) {\n        delete finalMessage.pFlags.is_outgoing;\n        delete finalMessage.pending;\n        delete finalMessage.error;\n        delete finalMessage.random_id;\n        delete finalMessage.send;\n      }\n\n      this.rootScope.dispatchEvent('messages_pending');\n\n      delete this.pendingByRandomId[randomId];\n\n      this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\n\n      return tempMessage;\n    }\n  }\n\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\n    const callbacks = this.tempFinalizeCallbacks[tempId];\n    // this.log.warn(callbacks, tempId);\n    if(callbacks !== undefined) {\n      for(const name in callbacks) {\n        const {deferred, callback} = callbacks[name];\n        // this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\n        callback(message).then(deferred.resolve, deferred.reject);\n      }\n\n      delete this.tempFinalizeCallbacks[tempId];\n    }\n\n    // set cached url to media\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      const {photo: newPhoto, document: newDoc} = message.media as any;\n      if(newPhoto) {\n        const photo = this.appPhotosManager.getPhoto('' + tempId);\n        if(/* photo._ !== 'photoEmpty' */photo) {\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\n          const cacheContext = this.thumbsStorage.getCacheContext(newPhoto, newPhotoSize.type);\n          const oldCacheContext = this.thumbsStorage.getCacheContext(photo, 'full');\n          Object.assign(cacheContext, oldCacheContext);\n\n          const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\n\n          const downloadOptions = getPhotoDownloadOptions(newPhoto, photoSize);\n          const fileName = getFileNameByLocation(downloadOptions.location);\n          // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n        }\n      } else if(newDoc) {\n        const oldDoc = this.appDocsManager.getDoc('' + tempId);\n        if(oldDoc) {\n          const oldCacheContext = this.thumbsStorage.getCacheContext(oldDoc);\n          if(\n            /* doc._ !== 'documentEmpty' &&  */\n            oldDoc.type &&\n            oldDoc.type !== 'sticker' &&\n            oldDoc.mime_type !== 'image/gif' &&\n            oldCacheContext.url\n          ) {\n            const cacheContext = this.thumbsStorage.getCacheContext(newDoc);\n            Object.assign(cacheContext, oldCacheContext);\n\n            const fileName = getDocumentInputFileName(newDoc);\n            // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n          }\n        }\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\n        delete this.appPollsManager.polls[tempId];\n        delete this.appPollsManager.results[tempId];\n      }\n    }\n\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\n    storage.delete(tempId);\n\n    if(!(tempMessage as Message.message).reply_markup && (message as Message.message).reply_markup) {\n      setTimeout(() => { // TODO: refactor it to normal buttons adding\n        if(!this.getMessageFromStorage(storage, message.mid)) {\n          return;\n        }\n\n        this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId: message.peerId, mid: message.mid, message});\n      }, 0);\n    }\n\n    this.handleReleasingMessage(tempMessage, storage);\n\n    this.rootScope.dispatchEvent('message_sent', {storageKey: storage.key, tempId, tempMessage, mid: message.mid, message});\n  }\n\n  public incrementMaxSeenId(maxId: number) {\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\n      return false;\n    }\n\n    this.maxSeenId = maxId;\n    this.appStateManager.pushToState('maxSeenMsgId', maxId);\n\n    this.apiManager.invokeApi('messages.receivedMessages', {\n      max_id: getServerMessageId(maxId)\n    });\n  }\n\n  public async getMessageReactionsListAndReadParticipants(\n    message: Message.message,\n    limit?: number,\n    reaction?: string,\n    offset?: string,\n    skipReadParticipants?: boolean,\n    skipReactionsList?: boolean\n  ) {\n    const emptyMessageReactionsList = {\n      reactions: [] as MessagePeerReaction[],\n      count: 0,\n      next_offset: undefined as string\n    };\n\n    const canViewMessageReadParticipants = await this.canViewMessageReadParticipants(message);\n    if(canViewMessageReadParticipants && limit === undefined) {\n      limit = 100;\n    } else if(limit === undefined) {\n      limit = 50;\n    }\n\n    return Promise.all([\n      canViewMessageReadParticipants && !reaction && !skipReadParticipants ? this.getMessageReadParticipants(message.peerId, message.mid).catch(() => [] as UserId[]) : [] as UserId[],\n\n      message.reactions?.recent_reactions?.length && !skipReactionsList ? this.appReactionsManager.getMessageReactionsList(message.peerId, message.mid, limit, reaction, offset).catch((err) => emptyMessageReactionsList) : emptyMessageReactionsList\n    ]).then(([userIds, messageReactionsList]) => {\n      const readParticipantsPeerIds = userIds.map((userId) => userId.toPeerId());\n\n      const filteredReadParticipants = readParticipantsPeerIds.slice();\n      forEachReverse(filteredReadParticipants, (peerId, idx, arr) => {\n        if(messageReactionsList.reactions.some((reaction) => this.appPeersManager.getPeerId(reaction.peer_id) === peerId)) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      let combined: {peerId: PeerId, reaction?: string}[] = messageReactionsList.reactions.map((reaction) => ({peerId: this.appPeersManager.getPeerId(reaction.peer_id), reaction: reaction.reaction}));\n      combined = combined.concat(filteredReadParticipants.map((readPeerId) => ({peerId: readPeerId})));\n\n      return {\n        reactions: messageReactionsList.reactions,\n        reactionsCount: messageReactionsList.count,\n        readParticipants: readParticipantsPeerIds,\n        combined: combined,\n        nextOffset: messageReactionsList.next_offset\n      };\n    });\n  }\n\n  public getMessageReadParticipants(peerId: PeerId, mid: number): Promise<UserId[]> {\n    return this.apiManager.invokeApiSingle('messages.getMessageReadParticipants', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((userIds) => { // ! convert long to number\n      return userIds.map((userId) => userId.toUserId());\n    });\n  }\n\n  public async canViewMessageReadParticipants(message: Message) {\n    if(\n      message?._ !== 'message' ||\n      message.pFlags.is_outgoing ||\n      !message.pFlags.out ||\n      !this.appPeersManager.isAnyGroup(message.peerId)\n    ) {\n      return false;\n    }\n\n    const chat: Chat.chat | Chat.channel = this.appChatsManager.getChat(message.peerId.toChatId());\n    const appConfig = await this.apiManager.getAppConfig();\n    return chat.participants_count <= appConfig.chat_read_mark_size_threshold &&\n      (tsNow(true) - message.date) < appConfig.chat_read_mark_expire_period;\n  }\n\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\n    if(!mids.length) {\n      return;\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getMessagesViews', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      increment: true\n    }).then((views) => {\n      const updates: Update[] = new Array(mids.length);\n      const channelId = peerId.toChatId();\n      for(let i = 0, length = mids.length; i < length; ++i) {\n        updates[i] = {\n          _: 'updateChannelMessageViews',\n          channel_id: channelId,\n          id: mids[i],\n          views: views.views[i].views\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updates',\n        updates,\n        chats: views.chats,\n        users: views.users\n      });\n    });\n  }\n\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\n    fwdCount: number,\n    peerReaction: MessagePeerReaction,\n    peerTypeNotifySettings: PeerNotifySettings\n  }> = {}) {\n    const peerId = this.getMessagePeer(message);\n\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return;\n    }\n\n    const tabs = appTabsManager.getTabs();\n    let tab = tabs.find((tab) => {\n      const {chatPeerIds} = tab.state;\n      return chatPeerIds[chatPeerIds.length - 1] === peerId;\n    });\n\n    if(!tab) {\n      tabs.sort((a, b) => a.state.idleStartTime - b.state.idleStartTime);\n      tab = !tabs[0].state.idleStartTime ? tabs[0] : tabs[tabs.length - 1];\n    }\n\n    const port = MTProtoMessagePort.getInstance<false>();\n    port.invokeVoid('notificationBuild', {\n      message,\n      ...options\n    }, tab.source);\n  }\n\n  public getScheduledMessagesStorage(peerId: PeerId) {\n    return this.scheduledMessagesStorage[peerId] ?? (this.scheduledMessagesStorage[peerId] = this.createMessageStorage(peerId, 'scheduled'));\n  }\n\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\n  }\n\n  public getScheduledMessages(peerId: PeerId) {\n    if(!this.canSendToPeer(peerId)) return;\n\n    const storage = this.getScheduledMessagesStorage(peerId);\n    if(storage.size) {\n      return [...storage.keys()];\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getScheduledHistory', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      hash: ''\n    }).then((historyResult) => {\n      if(historyResult._ !== 'messages.messagesNotModified') {\n        this.appUsersManager.saveApiUsers(historyResult.users);\n        this.appChatsManager.saveApiChats(historyResult.chats);\n\n        const storage = this.getScheduledMessagesStorage(peerId);\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\n        return [...storage.keys()];\n      }\n\n      return [];\n    });\n  }\n\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.sendScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.deleteScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getMessageWithReplies(message: Message.message) {\n    return this.filterMessages(message, (message) => !!(message as Message.message).replies)[0] as any;\n  }\n\n  public getMessageWithCommentReplies(message: Message.message) {\n    if(message.peerId !== REPLIES_PEER_ID) {\n      message = this.getMessageWithReplies(message);\n      const replies = message?.replies;\n      if(!(replies && replies.pFlags.comments && replies.channel_id.toChatId() !== REPLIES_HIDDEN_CHANNEL_ID)) {\n        return;\n      }\n    }\n\n    return message;\n  }\n\n  public isFetchIntervalNeeded(peerId: PeerId) {\n    return peerId.isAnyChat() && !this.appChatsManager.isInChat(peerId.toChatId());\n  }\n\n  public async getNewHistory(peerId: PeerId, threadId?: number) {\n    if(!this.isFetchIntervalNeeded(peerId)) {\n      return;\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(!slice.isEnd(SliceEnd.Bottom)) {\n      return;\n    }\n\n    delete historyStorage.maxId;\n    slice.unsetEnd(SliceEnd.Bottom);\n\n    // if there is no id - then request by first id because cannot request by id 0 with backLimit\n    const historyResult = await this.getHistory(peerId, slice[0] ?? 1, 0, 50, threadId);\n    for(let i = 0, length = historyResult.history.length; i < length; ++i) {\n      this.handleNewMessage(this.getMessageByPeer(peerId, historyResult.history[i]));\n    }\n\n    return {isBottomEnd: historyStorage.history.slice.isEnd(SliceEnd.Bottom)};\n  }\n\n  /**\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\n   */\n  // public getHistory(peerId: PeerId, maxId?: number, limit?: number, backLimit?: number, threadId?: number, onlyCache?: false): Promise<HistoryResult> | HistoryResult;\n  // public getHistory(peerId: PeerId, maxId?: number, limit?: number, backLimit?: number, threadId?: number, onlyCache?: true): HistoryResult;\n  public getHistory(peerId: PeerId, maxId: number = 0, limit?: number, backLimit?: number, threadId?: number/* , onlyCache?: boolean */): Promise<HistoryResult> | HistoryResult {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(this.appPeersManager.isRestricted(peerId)) {\n      const first = historyStorage.history.first;\n      first.setEnd(SliceEnd.Both);\n\n      const slice = first.slice(0, 0);\n      slice.setEnd(SliceEnd.Both);\n\n      return {\n        count: 0,\n        history: Array.from(slice),\n        isEnd: slice.getEnds(),\n        offsetIdOffset: 0\n      };\n    }\n\n    let offset = 0;\n    /*\n    let offsetFound = true;\n\n    if(maxId) {\n      offsetFound = false;\n      for(; offset < historyStorage.history.length; offset++) {\n        if(maxId > historyStorage.history.slice[offset]) {\n          offsetFound = true;\n          break;\n        }\n      }\n    }\n\n    if(offsetFound && (\n      historyStorage.count !== null && historyStorage.history.length === historyStorage.count ||\n      historyStorage.history.length >= offset + limit\n      )) {\n      if(backLimit) {\n        backLimit = Math.min(offset, backLimit);\n        offset = Math.max(0, offset - backLimit);\n        limit += backLimit;\n      } else {\n        limit = limit;\n      }\n\n      const history = historyStorage.history.slice.slice(offset, offset + limit);\n      return {\n        count: historyStorage.count,\n        history: history,\n        offsetIdOffset: offset\n      };\n    }\n\n    if(offsetFound) {\n      offset = 0;\n    } */\n\n    if(backLimit) {\n      offset = -backLimit;\n      limit += backLimit;\n\n      /* return this.requestHistory(reqPeerId, maxId, limit, offset, undefined, threadId).then((historyResult) => {\n        historyStorage.count = (historyResult as MessagesMessages.messagesMessagesSlice).count || historyResult.messages.length;\n\n        const history = (historyResult.messages as MyMessage[]).map((message) => message.mid);\n        return {\n          count: historyStorage.count,\n          history,\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0\n        };\n      }); */\n    }\n\n    const haveSlice = historyStorage.history.sliceMe(maxId, offset, limit);\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\n      return {\n        count: historyStorage.count,\n        history: Array.from(haveSlice.slice),\n        isEnd: haveSlice.slice.getEnds(),\n        offsetIdOffset: haveSlice.offsetIdOffset\n      };\n    }\n\n    // if(onlyCache) {\n    //   return;\n    // }\n\n    return this.fillHistoryStorage(peerId, maxId, limit, offset, historyStorage, threadId).then(() => {\n      const slice = historyStorage.history.sliceMe(maxId, offset, limit);\n      const f = slice?.slice || historyStorage.history.constructSlice();\n      return {\n        count: historyStorage.count,\n        history: Array.from(f),\n        isEnd: f.getEnds(),\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\n      };\n    });\n  }\n\n  public isHistoryResultEnd(historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>, limit: number, add_offset: number) {\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\n    const offsetIdOffset = offset_id_offset || 0;\n\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\n\n    const isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\n    const isBottomEnd = !offsetIdOffset || (add_offset < 0 && (offsetIdOffset + add_offset) <= 0);\n\n    return {count, offsetIdOffset, isTopEnd, isBottomEnd};\n  }\n\n  public mergeHistoryResult(slicedArray: SlicedArray<number>,\n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0],\n    offset_id: number,\n    limit: number,\n    add_offset: number) {\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n    const isEnd = this.isHistoryResultEnd(historyResult, limit, add_offset);\n    const {count, offsetIdOffset, isTopEnd, isBottomEnd} = isEnd;\n    const mids = messages.map((message) => {\n      return (message as MyMessage).mid;\n    });\n\n    // * add bound manually.\n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\n    // * check that offset_id is not 0\n    if(offset_id && getServerMessageId(offset_id) && !mids.includes(offset_id) && offsetIdOffset < count) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offset_id > mids[i]) {\n          break;\n        }\n      }\n\n      mids.splice(i, 0, offset_id);\n    }\n\n    const slice = slicedArray.insertSlice(mids) || slicedArray.slice;\n    if(isTopEnd) {\n      slice.setEnd(SliceEnd.Top);\n    }\n\n    if(isBottomEnd) {\n      slice.setEnd(SliceEnd.Bottom);\n    }\n\n    return {slice, mids, messages, ...isEnd};\n  }\n\n  public fillHistoryStorage(peerId: PeerId, offset_id: number, limit: number, add_offset: number, historyStorage: HistoryStorage, threadId?: number): Promise<void> {\n    const wasMaxId = historyStorage.maxId;\n    return this.requestHistory(peerId, offset_id, limit, add_offset, undefined, threadId).then((historyResult) => {\n      const {count, isBottomEnd, slice, messages} = this.mergeHistoryResult(historyStorage.history, historyResult, offset_id, limit, add_offset);\n\n      historyStorage.count = count;\n\n      /* if(!maxId && historyResult.messages.length) {\n        maxId = this.incrementMessageId((historyResult.messages[0] as MyMessage).mid, 1);\n      }\n\n      const wasTotalCount = historyStorage.history.length; */\n\n      for(let i = 0, length = messages.length; i < length; ++i) {\n        const message = messages[i] as MyMessage;\n        if(this.mergeReplyKeyboard(historyStorage, message)) {\n          this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n        }\n      }\n\n      if(isBottomEnd) {\n        const newMaxId = slice[0];\n\n        if(historyStorage.maxId === wasMaxId) {\n          const first = historyStorage.history.first;\n          if(first !== slice) {\n            historyStorage.history.deleteSlice(first);\n          }\n\n          if(historyStorage.maxId !== newMaxId) {\n            historyStorage.maxId = slice[0]; // ! WARNING\n\n            this.reloadConversation(peerId); // when top_message is deleted but cached\n          }\n        }\n      }\n\n      /* const isBackLimit = offset < 0 && -offset !== fullLimit;\n      if(isBackLimit) {\n        return;\n      }\n\n      const totalCount = historyStorage.history.length;\n      fullLimit -= (totalCount - wasTotalCount);\n\n      const migratedNextPeer = this.migratedFromTo[peerId];\n      const migratedPrevPeer = this.migratedToFrom[peerId]\n      const isMigrated = migratedNextPeer !== undefined || migratedPrevPeer !== undefined;\n\n      if(isMigrated) {\n        historyStorage.count = Math.max(historyStorage.count, totalCount) + 1;\n      }\n\n      if(fullLimit > 0) {\n        maxId = historyStorage.history.slice[totalCount - 1];\n        if(isMigrated) {\n          if(!historyResult.messages.length) {\n            if(migratedPrevPeer) {\n              maxId = 0;\n              peerId = migratedPrevPeer;\n            } else {\n              historyStorage.count = totalCount;\n              return true;\n            }\n          }\n\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, historyStorage, threadId);\n        } else if(totalCount < historyStorage.count) {\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, offset, historyStorage, threadId);\n        }\n      } */\n    });\n  }\n\n  public requestHistory(peerId: PeerId, maxId: number, limit = 0, offset = 0, offsetDate = 0, threadId = 0): Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>> {\n    // console.trace('requestHistory', peerId, maxId, limit, offset);\n\n    // rootScope.broadcast('history_request');\n\n    const options: any = {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: getServerMessageId(maxId) || 0,\n      offset_date: offsetDate,\n      add_offset: offset,\n      limit,\n      max_id: 0,\n      min_id: 0,\n      hash: 0\n    };\n\n    if(threadId) {\n      options.msg_id = getServerMessageId(threadId) || 0;\n    }\n\n    const promise: ReturnType<AppMessagesManager['requestHistory']> = this.apiManager.invokeApiSingle(threadId ? 'messages.getReplies' : 'messages.getHistory', options, {\n      // timeout: APITIMEOUT,\n      noErrorBox: true\n    }) as any;\n\n    return promise.then((historyResult) => {\n      if(DEBUG) {\n        this.log('requestHistory result:', peerId, historyResult, maxId, limit, offset);\n      }\n\n      this.appUsersManager.saveApiUsers(historyResult.users);\n      this.appChatsManager.saveApiChats(historyResult.chats);\n      this.saveMessages(historyResult.messages);\n\n      if(this.appPeersManager.isChannel(peerId)) {\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), (historyResult as MessagesMessages.messagesChannelMessages).pts);\n      }\n\n      let length = historyResult.messages.length, count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\n      if(length && !historyResult.messages[length - 1]) {\n        historyResult.messages.splice(length - 1, 1);\n        length--;\n        count--;\n      }\n\n      // will load more history if last message is album grouped (because it can be not last item)\n      // historyResult.messages: desc sorted\n      const historyStorage = this.getHistoryStorage(peerId, threadId);\n      const oldestMessage: Message.message = historyResult.messages[length - 1] as any;\n      if(length && oldestMessage.grouped_id) {\n        const foundSlice = historyStorage.history.findSlice(oldestMessage.mid);\n        if(foundSlice && (foundSlice.slice.length + historyResult.messages.length) < count) {\n          return this.requestHistory(peerId, oldestMessage.mid, 10, 0, offsetDate, threadId).then((_historyResult) => {\n            return historyResult;\n          });\n        }\n      }\n\n      return historyResult;\n    }, (error) => {\n      switch(error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = this.appChatsManager.getChat(peerId.toChatId());\n          channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title};\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: peerId.toChatId()\n            }],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      throw error;\n    });\n  }\n\n  public fetchSingleMessages() {\n    if(this.fetchSingleMessagesPromise) {\n      return this.fetchSingleMessagesPromise;\n    }\n\n    return this.fetchSingleMessagesPromise = pause(0).then(() => {\n      const requestPromises: Promise<void>[] = [];\n\n      for(const [peerId, map] of this.needSingleMessages) {\n        const mids = [...map.keys()];\n        const msgIds: InputMessage[] = mids.map((mid) => {\n          return {\n            _: 'inputMessageID',\n            id: getServerMessageId(mid)\n          };\n        });\n\n        let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\n        if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n          promise = this.apiManager.invokeApiSingle('channels.getMessages', {\n            channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n            id: msgIds\n          });\n        } else {\n          promise = this.apiManager.invokeApiSingle('messages.getMessages', {\n            id: msgIds\n          });\n        }\n\n        const after = promise.then((getMessagesResult) => {\n          assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\n\n          this.appUsersManager.saveApiUsers(getMessagesResult.users);\n          this.appChatsManager.saveApiChats(getMessagesResult.chats);\n          const messages = this.saveMessages(getMessagesResult.messages);\n\n          for(let i = 0; i < messages.length; ++i) {\n            const message = messages[i];\n            if(!message) {\n              continue;\n            }\n\n            const mid = generateMessageId(message.id);\n            const promise = map.get(mid);\n            promise.resolve(message);\n            map.delete(mid);\n          }\n\n          if(map.size) {\n            for(const [mid, promise] of map) {\n              promise.resolve(this.generateEmptyMessage(mid));\n            }\n          }\n        }).finally(() => {\n          this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\n        });\n\n        requestPromises.push(after);\n      }\n\n      this.needSingleMessages.clear();\n\n      return Promise.all(requestPromises).then(noop, noop).then(() => {\n        this.fetchSingleMessagesPromise = null;\n        if(this.needSingleMessages.size) this.fetchSingleMessages();\n      });\n    });\n  }\n\n  public wrapSingleMessage(peerId: PeerId, mid: number, overwrite = false) {\n    const message = this.getMessageByPeer(peerId, mid);\n    if(message && !overwrite) {\n      this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\n      return Promise.resolve(message);\n    } else {\n      let map = this.needSingleMessages.get(peerId);\n      if(!map) {\n        this.needSingleMessages.set(peerId, map = new Map());\n      }\n\n      let promise = map.get(mid);\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      map.set(mid, promise);\n      this.fetchSingleMessages();\n      return promise;\n    }\n  }\n\n  public fetchMessageReplyTo(message: MyMessage) {\n    if(!message.reply_to_mid) return Promise.resolve(this.generateEmptyMessage(0));\n    const replyToPeerId = message.reply_to.reply_to_peer_id ? this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : message.peerId;\n    return this.wrapSingleMessage(replyToPeerId, message.reply_to_mid).then((originalMessage) => {\n      if(!originalMessage) { // ! break the infinite loop\n        message = this.getMessageByPeer(message.peerId, message.mid); // message can come from other thread\n        delete message.reply_to_mid; // ! WARNING!\n      }\n\n      if(message._ === 'messageService') {\n        const peerId = message.peerId;\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: `${peerId}_history`,\n          peerId: peerId,\n          mid: message.mid,\n          message\n        });\n\n        if(this.isMessageIsTopMessage(message)) {\n          this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, this.getDialogOnly(peerId)]]));\n        }\n      }\n\n      return originalMessage;\n    });\n  }\n\n  public setTyping(peerId: PeerId, action: SendMessageAction, force?: boolean): Promise<boolean> {\n    let typing = this.typings[peerId];\n    if(\n      !peerId ||\n      !this.canSendToPeer(peerId) ||\n      peerId === this.appPeersManager.peerId ||\n      // (!force && deepEqual(typing?.action, action))\n      (!force && typing?.action?._ === action._)\n    ) {\n      return Promise.resolve(false);\n    }\n\n    if(typing?.timeout) {\n      clearTimeout(typing.timeout);\n    }\n\n    typing = this.typings[peerId] = {\n      action\n    };\n\n    return this.apiManager.invokeApi('messages.setTyping', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      action\n    }).finally(() => {\n      if(typing === this.typings[peerId]) {\n        typing.timeout = ctx.setTimeout(() => {\n          delete this.typings[peerId];\n        }, 6000);\n      }\n    });\n  }\n\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\n    const media = (message as Message.message).media;\n    if(media) {\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\n\n      if(smth?.file_reference) {\n        this.referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\n      }\n\n      if('webpage' in media && media.webpage) {\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\n        this.appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\n      }\n\n      if((media as MessageMedia.messageMediaPoll).poll) {\n        this.appPollsManager.updatePollToMessage(message as Message.message, false);\n      }\n    }\n  }\n\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\n    const history: {\n      count: number,\n      unread: number,\n      unreadMentions: number,\n      msgs: Set<number>,\n      albums?: {[groupId: string]: Set<number>},\n    } = {\n      count: 0,\n      unread: 0,\n      unreadMentions: 0,\n      msgs: new Set()\n    };\n\n    for(const mid of messages) {\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\n      if(!message) {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n        continue;\n      }\n\n      this.handleReleasingMessage(message, storage);\n\n      this.updateMessageRepliesIfNeeded(message);\n\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\n        ++history.unread;\n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n\n        if(message.pFlags.mentioned) {\n          ++history.unreadMentions;\n          this.modifyCachedMentions(peerId, mid, false);\n        }\n      }\n\n      ++history.count;\n      history.msgs.add(mid);\n\n      message.deleted = true;\n\n      const groupedId = (message as Message.message).grouped_id;\n      if(groupedId) {\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\n        if(groupedStorage) {\n          groupedStorage.delete(mid);\n\n          if(!history.albums) history.albums = {};\n          (history.albums[groupedId] || (history.albums[groupedId] = new Set())).add(mid);\n\n          if(!groupedStorage.size) {\n            delete history.albums;\n            delete this.groupedMessagesStorage[groupedId];\n          }\n        }\n      }\n\n      storage.delete(mid);\n    }\n\n    if(history.albums) {\n      for(const groupedId in history.albums) {\n        this.dispatchAlbumEdit(groupedId, storage, [...history.albums[groupedId]]);\n        /* const mids = this.getMidsByAlbum(groupId);\n        if(mids.length) {\n          const mid = Math.max(...mids);\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\n        } */\n      }\n    }\n\n    return history;\n  }\n\n  private handleEditedMessage(oldMessage: Message, newMessage: Message, storage: MessagesStorage) {\n    if(oldMessage._ === 'message') {\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\n        this.appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\n      }\n\n      const groupedId = oldMessage.grouped_id;\n      if(groupedId) {\n        this.dispatchAlbumEdit(groupedId, storage, []);\n      }\n    }\n  }\n\n  private dispatchAlbumEdit(groupedId: string, storage: MessagesStorage, deletedMids?: number[]) {\n    const mids = this.getMidsByAlbum(groupedId);\n    const messages = mids.map((mid) => this.getMessageFromStorage(storage, mid)) as Message.message[];\n    this.rootScope.dispatchEvent('album_edit', {peerId: messages[0].peerId, groupId: groupedId, deletedMids: deletedMids || [], messages});\n  }\n\n  public getDialogUnreadCount(dialog: Dialog) {\n    return dialog.unread_count || +!!dialog.pFlags.unread_mark;\n  }\n\n  public isDialogUnread(dialog: Dialog) {\n    return !!this.getDialogUnreadCount(dialog);\n  }\n\n  public canForward(message: Message.message | Message.messageService) {\n    return message?._ === 'message' && !(message as Message.message).pFlags.noforwards && !this.appPeersManager.noForwards(message.peerId);\n  }\n\n  private pushBatchUpdate<E extends keyof BatchUpdates, C extends BatchUpdates[E]>(\n    event: E,\n    callback: C,\n    key: string,\n    getElementCallback?: () => MapValueType<ArgumentTypes<C>[0]>\n  ) {\n    let details = this.batchUpdates[event];\n    if(!details) {\n      // @ts-ignore\n      details = this.batchUpdates[event] = {\n        callback,\n        batch: new Map()\n      };\n    }\n\n    if(!details.batch.has(key)) {\n      // @ts-ignore\n      details.batch.set(key, getElementCallback ? getElementCallback() : undefined);\n      this.batchUpdatesDebounced();\n    }\n  }\n\n  private getMessagesFromMap<T extends Map<any, any>>(map: T) {\n    const newMap: Map<Message.message, MapValueType<T>> = new Map();\n    for(const [key, value] of map) {\n      const [peerIdStr, mid] = key.split('_');\n      const message = this.getMessageByPeer(peerIdStr.toPeerId(), +mid) as Message.message;\n      if(!message) {\n        continue;\n      }\n\n      newMap.set(message, value);\n    }\n\n    return newMap;\n  }\n\n  private batchUpdateViews = (batch: Map<string, undefined>) => {\n    const toDispatch: {peerId: PeerId, mid: number, views: number}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message] of map) {\n      toDispatch.push({\n        peerId: message.peerId,\n        mid: message.mid,\n        views: message.views\n      })\n    }\n\n    return toDispatch;\n  };\n\n  private batchUpdateReactions = (batch: Map<string, MessageReactions>) => {\n    const toDispatch: {message: Message.message, changedResults: ReactionCount.reactionCount[]}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message, previousReactions] of map) {\n      const results = message.reactions?.results ?? [];\n      const previousResults = previousReactions?.results ?? [];\n      const changedResults = results.filter((reactionCount) => {\n        const previousReactionCount = previousResults.find((_reactionCount) => _reactionCount.reaction === reactionCount.reaction);\n        return (\n          message.pFlags.out && (\n            !previousReactionCount ||\n            reactionCount.count > previousReactionCount.count\n          )\n        ) || (\n          reactionCount.pFlags.chosen && (\n            !previousReactionCount ||\n            !previousReactionCount.pFlags.chosen\n          )\n        );\n      });\n\n      toDispatch.push({message, changedResults});\n    }\n\n    return toDispatch;\n  };\n\n  public saveDefaultSendAs(peerId: PeerId, sendAsPeerId: PeerId) {\n    const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n    channelFull.default_send_as = this.appPeersManager.getOutputPeer(sendAsPeerId);\n    return this.apiManager.invokeApi('messages.saveDefaultSendAs', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      send_as: this.appPeersManager.getInputPeerById(sendAsPeerId)\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {getFileNameByLocation} from '../../../../helpers/fileName';\r\nimport {Document} from '../../../../layer';\r\nimport getDocumentInputFileLocation from './getDocumentInputFileLocation';\r\n\r\nexport default function getDocumentInputFileName(doc: Document.document, thumbSize?: string) {\r\n  return getFileNameByLocation(getDocumentInputFileLocation(doc, thumbSize), {fileName: doc.file_name});\r\n}\r\n","export default function convertInputKeyToKey<T extends string>(inputKey: string) {\n  const str = inputKey.replace('input', '');\n  return (str[0].toLowerCase() + str.slice(1)) as T;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {InputNotifyPeer, InputPeerNotifySettings, NotifyPeer, PeerNotifySettings, Update} from '../../layer';\r\nimport {MUTE_UNTIL} from '../mtproto/mtproto_config';\r\nimport throttle from '../../helpers/schedulers/throttle';\r\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\r\nimport {AppManager} from './manager';\r\nimport ctx from '../../environment/ctx';\r\nimport assumeType from '../../helpers/assumeType';\r\n\r\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\r\nexport class AppNotificationsManager extends AppManager {\r\n  private peerSettings = {\r\n    notifyPeer: {} as {[peerId: PeerId]: ImSadAboutIt},\r\n    notifyUsers: null as ImSadAboutIt,\r\n    notifyChats: null as ImSadAboutIt,\r\n    notifyBroadcasts: null as ImSadAboutIt\r\n  };\r\n  // private exceptions: {[peerId: string]: PeerNotifySettings} = {};\r\n\r\n  private getNotifyPeerTypePromise: Promise<any>;\r\n\r\n  private checkMuteUntilTimeout: number;\r\n  private checkMuteUntilThrottled: () => void;\r\n\r\n  private notifyContactsSignUp: Promise<boolean>;\r\n\r\n  protected after() {\r\n    this.checkMuteUntilThrottled = throttle(this.checkMuteUntil, 1000, false);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateNotifySettings: (update) => {\r\n        const peerId = update.peer._ === 'notifyPeer' && this.appPeersManager.getPeerId(update.peer.peer);\r\n        const key = update.peer._ !== 'notifyPeer' ? update.peer._ : undefined;\r\n        this.savePeerSettings({\r\n          key,\r\n          peerId,\r\n          settings: update.notify_settings\r\n        });\r\n        this.rootScope.dispatchEvent('notify_settings', update);\r\n      }\r\n    });\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      if(state.notifySettings) {\r\n        for(const key in state.notifySettings) {\r\n          assumeType<Exclude<NotifyPeer['_'], 'notifyPeer'>>(key);\r\n          this.savePeerSettings({\r\n            key,\r\n            settings: state.notifySettings[key]\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\r\n    let key: any = convertInputKeyToKey(peer._);\r\n    let obj: any = this.peerSettings[key as NotifyPeer['_']];\r\n\r\n    let peerId: PeerId;\r\n    if(peer._ === 'inputNotifyPeer') {\r\n      peerId = key = this.appPeersManager.getPeerId(peer.peer);\r\n      obj = obj[key];\r\n    }\r\n\r\n    if(obj) {\r\n      return obj;\r\n    }\r\n\r\n    return (obj || this.peerSettings)[key] = this.apiManager.invokeApi('account.getNotifySettings', {peer})\r\n    .then((settings) => {\r\n      this.savePeerSettings({\r\n        key,\r\n        peerId,\r\n        settings\r\n      });\r\n\r\n      return settings;\r\n    });\r\n  }\r\n\r\n  public getNotifyPeerTypeSettings() {\r\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\r\n\r\n    const promises = (['inputNotifyBroadcasts', 'inputNotifyUsers', 'inputNotifyChats'] as Exclude<InputNotifyPeer['_'], 'inputNotifyPeer'>[])\r\n    .map((inputKey) => {\r\n      return this.getNotifySettings({_: inputKey});\r\n    });\r\n\r\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\r\n  }\r\n\r\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\r\n    // this.savePeerSettings(peerId, settings);\r\n\r\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\r\n    inputSettings._ = 'inputPeerNotifySettings'; */\r\n\r\n    return this.apiManager.invokeApi('account.updateNotifySettings', {\r\n      peer,\r\n      settings\r\n    }).then((value) => {\r\n      if(value) {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateNotifySettings',\r\n          peer: {\r\n            ...peer as any,\r\n            _: convertInputKeyToKey(peer._)\r\n          },\r\n          notify_settings: { // ! WOW, IT WORKS !\r\n            ...settings,\r\n            _: 'peerNotifySettings'\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // public getNotifyExceptions() {\r\n  //   apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\r\n  //   .then((updates) => {\r\n  //     apiUpdatesManager.processUpdateMessage(updates);\r\n  //   });\r\n  // }\r\n\r\n  public getContactSignUpNotification() {\r\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\r\n    return this.notifyContactsSignUp = this.apiManager.invokeApi('account.getContactSignUpNotification');\r\n  }\r\n\r\n  public setContactSignUpNotification(silent: boolean) {\r\n    this.apiManager.invokeApi('account.setContactSignUpNotification', {silent})\r\n    .then((value) => {\r\n      this.notifyContactsSignUp = Promise.resolve(!silent);\r\n    });\r\n  }\r\n\r\n  private checkMuteUntil = () => {\r\n    if(this.checkMuteUntilTimeout !== undefined) {\r\n      clearTimeout(this.checkMuteUntilTimeout);\r\n      this.checkMuteUntilTimeout = undefined;\r\n    }\r\n\r\n    const timestamp = tsNow(true);\r\n    let closestMuteUntil = MUTE_UNTIL;\r\n    for(const peerId in this.peerSettings.notifyPeer) {\r\n      const peerNotifySettings = this.peerSettings.notifyPeer[peerId];\r\n      if(peerNotifySettings instanceof Promise) {\r\n        continue;\r\n      }\r\n\r\n      const muteUntil = peerNotifySettings.mute_until;\r\n      if(!muteUntil) {\r\n        continue;\r\n      }\r\n\r\n      if(muteUntil <= timestamp) {\r\n        // ! do not delete it because peer's unique settings will be overwritten in getPeerLocalSettings with type's settings\r\n        peerNotifySettings.mute_until = 0;\r\n\r\n        this.apiUpdatesManager.saveUpdate({\r\n          _: 'updateNotifySettings',\r\n          peer: {\r\n            _: 'notifyPeer',\r\n            peer: this.appPeersManager.getOutputPeer(peerId.toPeerId())\r\n          },\r\n          notify_settings: peerNotifySettings\r\n        });\r\n      } else if(muteUntil < closestMuteUntil) {\r\n        closestMuteUntil = muteUntil;\r\n      }\r\n    }\r\n\r\n    const timeout = Math.min(1800e3, (closestMuteUntil - timestamp) * 1000);\r\n    this.checkMuteUntilTimeout = ctx.setTimeout(this.checkMuteUntil, timeout);\r\n  };\r\n\r\n  public savePeerSettings({key, peerId, settings}: {\r\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\r\n    peerId?: PeerId,\r\n    settings: PeerNotifySettings\r\n  }) {\r\n    let obj: any;\r\n    if(peerId) {\r\n      key = peerId as any;\r\n      obj = this.peerSettings['notifyPeer'];\r\n    }\r\n\r\n    (obj || this.peerSettings)[key] = settings;\r\n\r\n    if(!peerId) {\r\n      this.rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\r\n      this.appStateManager.getState().then((state) => {\r\n        const notifySettings = state.notifySettings;\r\n        notifySettings[key] = settings;\r\n        this.appStateManager.pushToState('notifySettings', notifySettings);\r\n      });\r\n    } else {\r\n      this.checkMuteUntilThrottled();\r\n    }\r\n\r\n    // rootScope.broadcast('notify_settings', {peerId: peerId});\r\n  }\r\n\r\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\r\n    return peerNotifySettings._ === 'peerNotifySettings' &&\r\n      (peerNotifySettings.silent || (peerNotifySettings.mute_until !== undefined && (peerNotifySettings.mute_until * 1000) > tsNow()));\r\n  }\r\n\r\n  private getPeerMuted(peerId: PeerId) {\r\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: this.appPeersManager.getInputPeerById(peerId)});\r\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\r\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\r\n  }\r\n\r\n  private getPeerLocalSettings(peerId: PeerId, respectType = true): PeerNotifySettings {\r\n    const n: PeerNotifySettings = {\r\n      _: 'peerNotifySettings'\r\n    };\r\n\r\n    const notifySettings = this.peerSettings['notifyPeer'][peerId];\r\n    // if(!notifySettings || (notifySettings instanceof Promise)) return false;\r\n    if(notifySettings && !(notifySettings instanceof Promise)) {\r\n      Object.assign(n, notifySettings);\r\n    }\r\n\r\n    if(respectType) {\r\n      const inputNotify = this.appPeersManager.getInputNotifyPeerById(peerId, true);\r\n      const key = convertInputKeyToKey(inputNotify._);\r\n      const typeNotifySettings = this.peerSettings[key as NotifyPeer['_']];\r\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\r\n        for(const i in typeNotifySettings) {\r\n          // @ts-ignore\r\n          if(n[i] === undefined) {\r\n            // @ts-ignore\r\n            n[i] = typeNotifySettings[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  public isPeerLocalMuted(peerId: PeerId, respectType = true) {\r\n    if(peerId === this.appPeersManager.peerId) return false;\r\n\r\n    const notifySettings = this.getPeerLocalSettings(peerId, respectType);\r\n    return this.isMuted(notifySettings);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto} from '../../layer';\r\nimport type {LangPackKey} from '../langPack';\r\nimport {getRestrictionReason} from '../../helpers/restrictions';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\nimport isUser from './utils/peers/isUser';\r\nimport isAnyChat from './utils/peers/isAnyChat';\r\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\r\n\r\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\r\nexport class AppPeersManager extends AppManager {\r\n  public get peerId() {\r\n    return this.appUsersManager.userId.toPeerId();\r\n  }\r\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\r\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\r\n    else appUsersManager.saveApiUser(instance);\r\n  } */\r\n\r\n  public canPinMessage(peerId: PeerId) {\r\n    return peerId.isUser() || this.appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\r\n  }\r\n\r\n  public getPeerPhoto(peerId: PeerId): UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto {\r\n    if(this.isRestricted(peerId)) {\r\n      return;\r\n    }\r\n\r\n    const photo = peerId.isUser() ?\r\n      this.appUsersManager.getUserPhoto(peerId.toUserId()) :\r\n      this.appChatsManager.getChatPhoto(peerId.toChatId());\r\n\r\n    return photo._ !== 'chatPhotoEmpty' && photo._ !== 'userProfilePhotoEmpty' ? photo : undefined;\r\n  }\r\n\r\n  public getPeerMigratedTo(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return false;\r\n    }\r\n\r\n    const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\r\n    if(chat && chat.migrated_to && chat.pFlags.deactivated) {\r\n      return getPeerId(chat.migrated_to as InputChannel.inputChannel);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public getOutputPeer(peerId: PeerId): Peer {\r\n    if(peerId.isUser()) {\r\n      return {_: 'peerUser', user_id: peerId.toUserId()};\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    if(this.appChatsManager.isChannel(chatId)) {\r\n      return {_: 'peerChannel', channel_id: chatId};\r\n    }\r\n\r\n    return {_: 'peerChat', chat_id: chatId};\r\n  }\r\n\r\n  public getPeerString(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return this.appUsersManager.getUserString(peerId.toUserId());\r\n    }\r\n    return this.appChatsManager.getChatString(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerUsername(peerId: PeerId): string {\r\n    return this.getPeer(peerId).username || '';\r\n  }\r\n\r\n  public getPeer(peerId: PeerId) {\r\n    return peerId.isUser() ?\r\n      this.appUsersManager.getUser(peerId.toUserId()) :\r\n      this.appChatsManager.getChat(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerId(peerId: Parameters<typeof getPeerId>[0]) {\r\n    return getPeerId(peerId) || (isObject<InputPeer>(peerId) && peerId._ === 'inputPeerSelf' && this.peerId) || NULL_PEER_ID;\r\n  }\r\n\r\n  public getDialogPeer(peerId: PeerId): DialogPeer {\r\n    return {\r\n      _: 'dialogPeer',\r\n      peer: this.getOutputPeer(peerId)\r\n    };\r\n  }\r\n\r\n  public isChannel(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && this.appChatsManager.isChannel(peerId.toChatId());\r\n  }\r\n\r\n  public isMegagroup(peerId: PeerId) {\r\n    return !peerId.isUser() && this.appChatsManager.isMegagroup(peerId.toChatId());\r\n  }\r\n\r\n  public isAnyGroup(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && !this.appChatsManager.isBroadcast(peerId.toChatId());\r\n  }\r\n\r\n  public isBroadcast(peerId: PeerId): boolean {\r\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\r\n  }\r\n\r\n  public isBot(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isBot(peerId.toUserId());\r\n  }\r\n\r\n  public isContact(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isContact(peerId.toUserId());\r\n  }\r\n\r\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\r\n    return isUser(peerId);\r\n  }\r\n\r\n  public isAnyChat(peerId: PeerId) {\r\n    return isAnyChat(peerId);\r\n  }\r\n\r\n  public isRestricted(peerId: PeerId) {\r\n    return peerId.isUser() ? this.appUsersManager.isRestricted(peerId.toUserId()) : this.appChatsManager.isRestricted(peerId.toChatId());\r\n  }\r\n\r\n  public getRestrictionReasonText(peerId: PeerId) {\r\n    const peer: Chat.channel | User.user = this.getPeer(peerId);\r\n    const reason = peer.restriction_reason ? getRestrictionReason(peer.restriction_reason) : undefined;\r\n    if(reason) {\r\n      return reason.text;\r\n    } else {\r\n      return peerId.isUser() ? 'This user is restricted' : 'This chat is restricted';\r\n    }\r\n  }\r\n\r\n  /* public getInputPeer(peerString: string): InputPeer {\r\n    var firstChar = peerString.charAt(0);\r\n    var peerParams = peerString.substr(1).split('_');\r\n    let id = +peerParams[0];\r\n\r\n    if(firstChar === 'u') {\r\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\r\n\r\n      return {\r\n        _: 'inputPeerUser',\r\n        user_id: id,\r\n        access_hash: peerParams[1]\r\n      };\r\n    } else if(firstChar === 'c' || firstChar === 's') {\r\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\r\n      if(firstChar === 's') {\r\n        appChatsManager.saveIsMegagroup(id);\r\n      }\r\n\r\n      return {\r\n        _: 'inputPeerChannel',\r\n        channel_id: id,\r\n        access_hash: peerParams[1] || '0'\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputPeerChat',\r\n        chat_id: id\r\n      };\r\n    }\r\n  } */\r\n\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\r\n    if(ignorePeerId) {\r\n      if(peerId.isUser()) {\r\n        return {_: 'inputNotifyUsers'};\r\n      } else {\r\n        if(this.isBroadcast(peerId)) {\r\n          return {_: 'inputNotifyBroadcasts'};\r\n        } else {\r\n          return {_: 'inputNotifyChats'};\r\n        }\r\n      }\r\n    } else {\r\n      return {\r\n        _: 'inputNotifyPeer',\r\n        peer: this.getInputPeerById(peerId)\r\n      };\r\n    }\r\n  }\r\n\r\n  public getInputPeerById(peerId: PeerId): InputPeer {\r\n    if(!peerId) {\r\n      return {_: 'inputPeerEmpty'};\r\n    }\r\n\r\n    if(!peerId.isUser()) {\r\n      const chatId = peerId.toChatId();\r\n      return this.appChatsManager.getInputPeer(chatId);\r\n    }\r\n\r\n    const userId = peerId.toUserId();\r\n    return this.appUsersManager.getUserInputPeer(userId);\r\n  }\r\n\r\n  /**\r\n   * ! use it only in safe places like requests\r\n   */\r\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\r\n    return {_: 'inputPeerSelf'};\r\n  }\r\n\r\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\r\n    return {\r\n      _: 'inputDialogPeer',\r\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\r\n    };\r\n  }\r\n\r\n  public getPeerSearchText(peerId: PeerId) {\r\n    let text: string;\r\n    if(this.isUser(peerId)) {\r\n      text = '%pu ' + this.appUsersManager.getUserSearchText(peerId.toUserId());\r\n    } else {\r\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\r\n      text = '%pg ' + (chat.title || '');\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  public getDialogType(peerId: PeerId): PeerType {\r\n    if(this.isMegagroup(peerId)) {\r\n      return 'megagroup';\r\n    } else if(this.isChannel(peerId)) {\r\n      return 'channel';\r\n    } else if(!this.isUser(peerId)) {\r\n      return 'group';\r\n    } else {\r\n      return peerId === this.peerId ? 'saved' : 'chat';\r\n    }\r\n  }\r\n\r\n  public getDeleteButtonText(peerId: PeerId): Extract<LangPackKey, 'ChannelDelete' | 'ChatList.Context.LeaveChannel' | 'DeleteMega' | 'ChatList.Context.LeaveGroup' | 'ChatList.Context.DeleteChat'> {\r\n    switch(this.getDialogType(peerId)) {\r\n      case 'channel':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\r\n\r\n      case 'megagroup':\r\n      case 'group':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\r\n\r\n      default:\r\n        return 'ChatList.Context.DeleteChat';\r\n    }\r\n  }\r\n\r\n  public noForwards(peerId: PeerId) {\r\n    if(peerId.isUser()) return false;\r\n    else {\r\n      const chat = this.appChatsManager.getChatTyped(peerId.toChatId());\r\n      return !!(chat as Chat.chat).pFlags?.noforwards;\r\n    }\r\n  }\r\n}\r\n\r\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat';\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {Photo, PhotoSize, PhotosPhotos} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport {AppManager} from './manager';\n\nexport type MyPhoto = Photo.photo;\n\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\n// let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\n\nexport class AppPhotosManager extends AppManager {\n  private photos: {\n    [id: string]: MyPhoto\n  } = {};\n\n  public savePhoto(photo: Photo, context?: ReferenceContext) {\n    if(!photo || photo._ === 'photoEmpty') return;\n\n    /* if(photo.id === TEST_FILE_REFERENCE) {\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\n      //photo.file_reference = new Uint8Array(bytes);\n      photo.file_reference = bytes;\n      if(!--TEST_FILE_REFERENCE_TIMES) {\n        TEST_FILE_REFERENCE = '';\n      }\n    } */\n\n    const oldPhoto = this.photos[photo.id];\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\n      this.referenceDatabase.saveContext(photo.file_reference, context);\n    }\n\n    if(photo.sizes?.length) {\n      const size = photo.sizes[photo.sizes.length - 1];\n      if(size._ === 'photoSizeProgressive') {\n        size.size = size.sizes[size.sizes.length - 1];\n      }\n    }\n\n    if(oldPhoto) {\n      return Object.assign(oldPhoto, photo);\n    }\n\n    return this.photos[photo.id] = photo;\n  }\n\n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\n    const inputUser = this.appUsersManager.getUserInput(userId);\n    return this.apiManager.invokeApiCacheable('photos.getUserPhotos', {\n      user_id: inputUser,\n      offset: 0,\n      limit,\n      max_id: maxId\n    }, {cacheSeconds: 60}).then((photosResult) => {\n      this.appUsersManager.saveApiUsers(photosResult.users);\n      const photoIds = photosResult.photos.map((photo, idx) => {\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\n        return photo.id;\n      });\n\n      // ! WARNING !\n      if(maxId !== '0' && maxId) {\n        const idx = photoIds.indexOf(maxId);\n        if(idx !== -1) {\n          photoIds.splice(idx, 1);\n        }\n      }\n\n      return {\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\n        photos: photoIds\n      };\n    });\n  }\n\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\n\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\n  } */\n\n  /* public isDownloaded(media: any) {\n    const isPhoto = media._ === 'photo';\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\n    let isDownloaded: boolean;\n    if(photo) {\n      isDownloaded = photo.downloaded > 0;\n    } else {\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\n      isDownloaded = cachedThumb?.downloaded > 0;\n    }\n\n    return isDownloaded;\n  } */\n\n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport copy from '../../helpers/object/copy';\r\nimport {InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults} from '../../layer';\r\nimport {logger, LogTypes} from '../logger';\r\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\nexport class AppPollsManager extends AppManager {\r\n  public polls: {[id: string]: Poll} = {};\r\n  public results: {[id: string]: PollResults} = {};\r\n  public pollToMessages: {[id: string]: Set<string>} = {};\r\n\r\n  private log = logger('POLLS', LogTypes.Error);\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateMessagePoll: (update) => {\r\n        this.log('updateMessagePoll:', update);\r\n\r\n        let poll: Poll = update.poll || this.polls[update.poll_id];\r\n        if(!poll) {\r\n          return;\r\n        }\r\n\r\n        let results = update.results;\r\n        const ret = this.savePoll(poll, results as any);\r\n        poll = ret.poll;\r\n        results = ret.results;\r\n\r\n        this.rootScope.dispatchEvent('poll_update', {poll, results: results as any});\r\n      }\r\n    });\r\n  }\r\n\r\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\r\n    if(message) {\r\n      this.updatePollToMessage(message, true);\r\n    }\r\n\r\n    const id = poll.id;\r\n    if(this.polls[id]) {\r\n      poll = Object.assign(this.polls[id], poll);\r\n      results = this.saveResults(poll, results);\r\n    } else {\r\n      this.polls[id] = poll;\r\n\r\n      poll.chosenIndexes = [];\r\n      results = this.saveResults(poll, results);\r\n    }\r\n\r\n    return {poll, results};\r\n  }\r\n\r\n  public saveResults(poll: Poll, results: PollResults) {\r\n    if(this.results[poll.id]) {\r\n      results = Object.assign(this.results[poll.id], results);\r\n    } else {\r\n      this.results[poll.id] = results;\r\n    }\r\n\r\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\r\n      poll.chosenIndexes.length = 0;\r\n      if(results?.results?.length) {\r\n        results.results.forEach((answer, idx) => {\r\n          if(answer.pFlags?.chosen) {\r\n            poll.chosenIndexes.push(idx);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public getPoll(pollId: string): {poll: Poll, results: PollResults} {\r\n    return {\r\n      poll: this.polls[pollId],\r\n      results: this.results[pollId]\r\n    };\r\n  }\r\n\r\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\r\n    if(solution) {\r\n      if(!solutionEntities) {\r\n        solutionEntities = [];\r\n      }\r\n\r\n      solution = parseMarkdown(solution, solutionEntities);\r\n    } else {\r\n      solution = undefined; // can be string here\r\n    }\r\n\r\n    return {\r\n      _: 'inputMediaPoll',\r\n      poll,\r\n      correct_answers: correctAnswers,\r\n      solution,\r\n      solution_entities: solution ? solutionEntities : undefined\r\n    };\r\n  }\r\n\r\n  public updatePollToMessage(message: Message.message, add: boolean) {\r\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\r\n    let set = this.pollToMessages[id];\r\n\r\n    if(!add && !set) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = this.pollToMessages[id] = new Set();\r\n    }\r\n\r\n    const key = message.peerId + '_' + message.mid;\r\n    if(add) set.add(key);\r\n    else set.delete(key);\r\n\r\n    if(!add && !set.size) {\r\n      delete this.polls[id];\r\n      delete this.results[id];\r\n      delete this.pollToMessages[id];\r\n    }\r\n  }\r\n\r\n  public sendVote(message: any, optionIds: number[]): Promise<void> {\r\n    const poll: Poll = message.media.poll;\r\n\r\n    const options: Uint8Array[] = optionIds.map((index) => {\r\n      return poll.answers[index].option;\r\n    });\r\n\r\n    const messageId = message.mid;\r\n    const peerId = message.peerId;\r\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      return this.appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\r\n        this.log('invoke sendVote callback');\r\n        return this.sendVote(message, optionIds);\r\n      });\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.sendVote', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid),\r\n      options\r\n    }).then((updates) => {\r\n      this.log('sendVote updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getResults(message: any) {\r\n    const inputPeer = this.appPeersManager.getInputPeerById(message.peerId);\r\n\r\n    return this.apiManager.invokeApi('messages.getPollResults', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid)\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n      this.log('getResults updates:', updates);\r\n    });\r\n  }\r\n\r\n  public getVotes(message: any, option?: Uint8Array, offset?: string, limit = 20) {\r\n    return this.apiManager.invokeApi('messages.getPollVotes', {\r\n      peer: this.appPeersManager.getInputPeerById(message.peerId),\r\n      id: getServerMessageId(message.mid),\r\n      option,\r\n      offset,\r\n      limit\r\n    }).then((votesList) => {\r\n      this.log('getPollVotes messages:', votesList);\r\n\r\n      this.appUsersManager.saveApiUsers(votesList.users);\r\n\r\n      return votesList;\r\n    });\r\n  }\r\n\r\n  public stopPoll(message: any) {\r\n    const poll: Poll = message.media.poll;\r\n\r\n    if(poll.pFlags.closed) return Promise.resolve();\r\n\r\n    const newPoll = copy(poll);\r\n    newPoll.pFlags.closed = true;\r\n    return this.appMessagesManager.editMessage(message, undefined, {\r\n      newMedia: this.getInputMediaPoll(newPoll)\r\n    }).then(() => {\r\n      // console.log('stopped poll');\r\n    }, err => {\r\n      this.log.error('stopPoll error:', err);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {InputPrivacyKey, InputPrivacyRule, PrivacyRule, PrivacyKey, GlobalPrivacySettings} from '../../layer';\r\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\r\nimport {AppManager} from './manager';\r\n\r\nexport class AppPrivacyManager extends AppManager {\r\n  private privacy: Partial<{\r\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\r\n  }> = {};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updatePrivacy: (update) => {\r\n        const key = update.key._;\r\n        this.privacy[key] = update.rules;\r\n        this.rootScope.dispatchEvent('privacy_update', update);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\r\n    return this.apiManager.invokeApi('account.setPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      },\r\n      rules\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePrivacy',\r\n        key: {\r\n          _: convertInputKeyToKey(inputKey)\r\n        },\r\n        rules: rules.map((inputRule) => {\r\n          const rule: PrivacyRule = {} as any;\r\n          Object.assign(rule, inputRule);\r\n          rule._ = convertInputKeyToKey(rule._) as any;\r\n          return rule;\r\n        })\r\n      });\r\n\r\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\r\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\r\n    const rules = this.privacy[privacyKey];\r\n    if(rules) {\r\n      return Promise.resolve(rules);\r\n    }\r\n\r\n    return this.privacy[privacyKey] = this.apiManager.invokeApi('account.getPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      }\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return this.privacy[privacyKey] = privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getGlobalPrivacySettings() {\r\n    return this.apiManager.invokeApi('account.getGlobalPrivacySettings')\r\n  }\r\n\r\n  public setGlobalPrivacySettings(settings: GlobalPrivacySettings) {\r\n    return this.apiManager.invokeApi('account.setGlobalPrivacySettings', {settings});\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {MyTopPeer} from './appUsersManager';\nimport tsNow from '../../helpers/tsNow';\nimport {ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull, Photo, PhotoSize, Updates} from '../../layer';\nimport SearchIndex from '../searchIndex';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport getPhotoInput from './utils/photos/getPhotoInput';\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\nimport ctx from '../../environment/ctx';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\n\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\n\nexport class AppProfileManager extends AppManager {\n  // private botInfos: any = {};\n  private usersFull: {[id: UserId]: UserFull.userFull} = {};\n  private chatsFull: {[id: ChatId]: ChatFull} = {};\n  private typingsInPeer: {[peerId: PeerId]: UserTyping[]};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateChatParticipants: (update) => {\n        const participants = update.participants;\n        if(participants._ === 'chatParticipants') {\n          const chatId = participants.chat_id;\n          const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\n          if(chatFull !== undefined) {\n            chatFull.participants = participants;\n            this.rootScope.dispatchEvent('chat_full_update', chatId);\n          }\n        }\n      },\n\n      updateChatParticipantAdd: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              return;\n            }\n          }\n\n          participants.push({\n            _: 'chatParticipant',\n            user_id: update.user_id,\n            inviter_id: update.inviter_id,\n            date: tsNow(true)\n          });\n\n          _participants.version = update.version;\n          this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n        }\n      },\n\n      updateChatParticipantDelete: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              participants.splice(i, 1);\n              _participants.version = update.version;\n              this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n              return;\n            }\n          }\n        }\n      },\n\n      updateUserTyping: this.onUpdateUserTyping,\n      updateChatUserTyping: this.onUpdateUserTyping,\n      updateChannelUserTyping: this.onUpdateUserTyping,\n\n      updatePeerBlocked: this.onUpdatePeerBlocked\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const fullChat = this.chatsFull[chatId];\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = this.appChatsManager.getChat(chatId);\n      if(!fullChat || !chat) {\n        return;\n      }\n\n      let updated = false;\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\n        updated = true;\n      }\n\n      const {photo} = chat as Chat.chat;\n      if(photo) {\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\n        const hasFullChatPhoto = !!(fullChat.chat_photo && fullChat.chat_photo._ !== 'photoEmpty'); // chat_photo can be missing\n        if(\n          hasChatPhoto !== hasFullChatPhoto || (\n            hasChatPhoto &&\n            photo.photo_id !== fullChat.chat_photo?.id\n          )\n        ) {\n          updated = true;\n        }\n      }\n\n      if(updated) {\n        this.refreshFullPeer(chatId.toPeerId(true));\n      }\n    });\n\n    this.rootScope.addEventListener('channel_update', (chatId) => {\n      this.refreshFullPeer(chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('chat_full_update', (chatId) => {\n      this.rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('user_full_update', (userId) => {\n      this.rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\n    });\n\n    this.rootScope.addEventListener('invalidate_participants', (chatId) => {\n      this.invalidateChannelParticipants(chatId);\n    });\n\n    this.typingsInPeer = {};\n  }\n\n  /* public saveBotInfo(botInfo: any) {\n    const botId = botInfo && botInfo.user_id;\n    if(!botId) {\n      return null;\n    }\n\n    const commands: any = {};\n    botInfo.commands.forEach((botCommand: any) => {\n      commands[botCommand.command] = botCommand.description;\n    });\n\n    return this.botInfos[botId] = {\n      id: botId,\n      version: botInfo.version,\n      shareText: botInfo.share_text,\n      description: botInfo.description,\n      commands: commands\n    };\n  } */\n\n  public getProfile(id: UserId, override?: true) {\n    if(this.usersFull[id] && !override) {\n      return this.usersFull[id];\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'users.getFullUser',\n      params: {\n        id: this.appUsersManager.getUserInput(id)\n      },\n      processResult: (usersUserFull) => {\n        this.appChatsManager.saveApiChats(usersUserFull.chats, true);\n        this.appUsersManager.saveApiUsers(usersUserFull.users);\n\n        const userFull = usersUserFull.full_user;\n        const peerId = id.toPeerId(false);\n        if(userFull.profile_photo) {\n          userFull.profile_photo = this.appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\n        }\n\n        const botInfo = userFull.bot_info;\n        if(botInfo) {\n          const referenceContext: ReferenceContext = {type: 'userFull', userId: id};\n          botInfo.description_document = this.appDocsManager.saveDoc(botInfo.description_document, referenceContext);\n          botInfo.description_photo = this.appPhotosManager.savePhoto(botInfo.description_photo, referenceContext);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: userFull.notify_settings\n        });\n\n        this.usersFull[id] = userFull;\n\n        /* if(userFull.bot_info) {\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\n        } */\n\n        // appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\n\n        this.rootScope.dispatchEvent('user_full_update', id);\n        return userFull;\n      }\n    });\n  }\n\n  public getProfileByPeerId(peerId: PeerId, override?: true) {\n    if(this.appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\n    else return this.getProfile(peerId.toUserId(), override);\n  }\n\n  public getCachedFullChat(chatId: ChatId) {\n    return this.chatsFull[chatId];\n  }\n\n  public getCachedFullUser(userId: UserId) {\n    return this.usersFull[userId];\n  }\n\n  public getCachedProfileByPeerId(peerId: PeerId) {\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\n  }\n\n  public async getFullPhoto(peerId: PeerId) {\n    const profile = await this.getProfileByPeerId(peerId);\n    switch(profile._) {\n      case 'userFull':\n        return profile.profile_photo;\n      case 'channelFull':\n      case 'chatFull':\n        return profile.chat_photo;\n    }\n  }\n\n  /* public getPeerBots(peerId: PeerId) {\n    var peerBots: any[] = [];\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\n      return Promise.resolve(peerBots);\n    }\n    if(peerId >= 0) {\n      return this.getProfile(peerId).then((userFull: any) => {\n        var botInfo = userFull.bot_info;\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\n          peerBots.push(botInfo);\n        }\n        return peerBots;\n      });\n    }\n\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\n      chatFull.bot_info.forEach((botInfo: any) => {\n        peerBots.push(this.saveBotInfo(botInfo))\n      });\n      return peerBots;\n    });\n  } */\n\n  public getChatFull(id: ChatId, override?: true) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelFull(id, override);\n    }\n\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\n    if(fullChat && !override) {\n      const chat = this.appChatsManager.getChat(id);\n      if(chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version ||\n        chat.pFlags.left) {\n        return fullChat as ChatFull;\n      }\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getFullChat',\n      params: {\n        chat_id: id\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const chatFull = result.full_chat as ChatFull.chatFull;\n        const peerId = id.toPeerId(true);\n        if(chatFull && chatFull.chat_photo && chatFull.chat_photo.id) {\n          chatFull.chat_photo = this.appPhotosManager.savePhoto(chatFull.chat_photo, {type: 'profilePhoto', peerId});\n        }\n\n        if(chatFull.call) {\n          this.appGroupCallsManager.saveGroupCall(chatFull.call, id);\n        }\n\n        // appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: chatFull.notify_settings\n        });\n\n        this.chatsFull[id] = chatFull;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return chatFull;\n      }\n    });\n  }\n\n  public async getChatInviteLink(id: ChatId, force?: boolean) {\n    const chatFull = await this.getChatFull(id);\n    if(!force &&\n      chatFull.exported_invite &&\n      chatFull.exported_invite._ == 'chatInviteExported') {\n      return chatFull.exported_invite.link;\n    }\n\n    return this.apiManager.invokeApi('messages.exportChatInvite', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true))\n    }).then((exportedInvite) => {\n      if(this.chatsFull[id] !== undefined) {\n        this.chatsFull[id].exported_invite = exportedInvite;\n      }\n\n      return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\n    });\n  }\n\n  public getChannelParticipants(id: ChatId, filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'}, limit = 200, offset = 0) {\n    if(filter._ === 'channelParticipantsRecent') {\n      const chat = this.appChatsManager.getChat(id);\n      if(chat &&\n          chat.pFlags && (\n      // chat.pFlags.kicked ||\n        chat.pFlags.broadcast && !chat.pFlags.creator && !chat.admin_rights\n      )) {\n        return Promise.reject();\n      }\n    }\n\n    return this.apiManager.invokeApiCacheable('channels.getParticipants', {\n      channel: this.appChatsManager.getChannelInput(id),\n      filter,\n      offset,\n      limit,\n      hash: '0'\n    }, {cacheSeconds: 60}).then((result) => {\n      this.appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\n    });\n    /* let maybeAddSelf = (participants: any[]) => {\n      let chat = appChatsManager.getChat(id);\n      let selfMustBeFirst = filter._ === 'channelParticipantsRecent' &&\n                            !offset &&\n                            !chat.pFlags.kicked &&\n                            !chat.pFlags.left;\n\n      if(selfMustBeFirst) {\n        participants = copy(participants);\n        let myID = appUsersManager.getSelf().id;\n        let myIndex = participants.findIndex((p) => p.user_id === myID);\n        let myParticipant;\n\n        if(myIndex !== -1) {\n          myParticipant = participants[myIndex];\n          participants.splice(myIndex, 1);\n        } else {\n          myParticipant = {_: 'channelParticipantSelf', user_id: myID};\n        }\n\n        participants.unshift(myParticipant);\n      }\n\n      return participants;\n    } */\n  }\n\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\n    return this.apiManager.invokeApiSingle('channels.getParticipant', {\n      channel: this.appChatsManager.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId)\n    }).then((channelParticipant) => {\n      this.appUsersManager.saveApiUsers(channelParticipant.users);\n      return channelParticipant.participant;\n    });\n  }\n\n  public getChannelFull(id: ChatId, override?: true) {\n    if(this.chatsFull[id] !== undefined && !override) {\n      return this.chatsFull[id] as ChatFull.channelFull;\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getFullChannel',\n      params: {\n        channel: this.appChatsManager.getChannelInput(id)\n      },\n      processResult: (result) => {\n        const peerId = id.toPeerId(true);\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const fullChannel = result.full_chat as ChatFull.channelFull;\n        if(fullChannel && fullChannel.chat_photo.id) {\n          fullChannel.chat_photo = this.appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\n          // appPhotosManager.savePhoto(fullChannel.chat_photo);\n        }\n\n        if(fullChannel.call) {\n          this.appGroupCallsManager.saveGroupCall(fullChannel.call, id);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: fullChannel.notify_settings\n        });\n\n        this.chatsFull[id] = fullChannel;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChannel;\n      },\n      processError: (error) => {\n        switch(error.type) {\n          case 'CHANNEL_PRIVATE':\n            const channel: Chat.channel | Chat.channelForbidden = this.appChatsManager.getChat(id);\n            this.apiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: [{\n                _: 'updateChannel',\n                channel_id: id\n              }],\n              chats: [{\n                _: 'channelForbidden',\n                id,\n                access_hash: channel.access_hash,\n                title: channel.title,\n                pFlags: channel.pFlags\n              }],\n              users: []\n            } as Updates.updates);\n            break;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public getMentions(chatId: ChatId, query: string, threadId?: number): Promise<PeerId[]> {\n    const processUserIds = (topPeers: MyTopPeer[]) => {\n      const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      /* const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n\n      const index = new SearchIndex<number>(!startsWithAt, !startsWithAt); */\n      const index = new SearchIndex<PeerId>({\n        ignoreCase: true\n      });\n\n      const ratingMap: Map<PeerId, number> = new Map();\n      topPeers.forEach((peer) => {\n        index.indexObject(peer.id, this.appUsersManager.getUserSearchText(peer.id));\n        ratingMap.set(peer.id, peer.rating);\n      });\n\n      const peerIds = Array.from(index.search(query));\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\n      return peerIds;\n    };\n\n    let promise: Promise<PeerId[]>;\n    if(this.appChatsManager.isChannel(chatId)) {\n      promise = this.getChannelParticipants(chatId, {\n        _: 'channelParticipantsMentions',\n        q: query,\n        top_msg_id: getServerMessageId(threadId)\n      }, 50, 0).then((cP) => {\n        return cP.participants.map((p) => getParticipantPeerId(p));\n      });\n    } else if(chatId) {\n      promise = Promise.resolve(this.getChatFull(chatId)).then((chatFull) => {\n        return ((chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants).participants.map((p) => p.user_id.toPeerId());\n      });\n    } else {\n      promise = Promise.resolve([]);\n    }\n\n    return Promise.all([\n      // [],\n      this.appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]),\n      promise\n    ]).then((results) => {\n      const peers = results[0].concat(results[1].map((peerId) => ({id: peerId, rating: 0})));\n\n      return processUserIds(peers);\n    });\n  }\n\n  private invalidateChannelParticipants(id: ChatId) {\n    this.apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\n    this.refreshFullPeer(id.toPeerId(true));\n  }\n\n  private refreshFullPeer(peerId: PeerId) {\n    if(peerId.isUser()) {\n      const userId = peerId.toUserId();\n      delete this.usersFull[userId];\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    } else {\n      const chatId = peerId.toChatId();\n      delete this.chatsFull[chatId];\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\n    }\n\n    // ! эта строчка будет создавать race condition:\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\n    // this.getProfileByPeerId(peerId, true);\n  }\n\n  public updateProfile(first_name?: string, last_name?: string, about?: string) {\n    return this.apiManager.invokeApi('account.updateProfile', {\n      first_name,\n      last_name,\n      about\n    }).then((user) => {\n      this.appUsersManager.saveApiUser(user);\n\n      if(about !== undefined) {\n        const peerId = user.id.toPeerId();\n        const userFull = this.usersFull[user.id];\n        if(userFull) {\n          userFull.about = about;\n        }\n\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return this.getProfile(this.appPeersManager.peerId, true);\n    });\n  }\n\n  public uploadProfilePhoto(inputFile: InputFile) {\n    return this.apiManager.invokeApi('photos.uploadProfilePhoto', {\n      file: inputFile\n    }).then((updateResult) => {\n      // ! sometimes can have no user in users\n      const photo = updateResult.photo as Photo.photo;\n      if(!updateResult.users.length) {\n        const strippedThumb = photo.sizes.find((size) => size._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n        updateResult.users.push({\n          ...this.appUsersManager.getSelf(),\n          photo: {\n            _: 'userProfilePhoto',\n            dc_id: photo.dc_id,\n            photo_id: photo.id,\n            stripped_thumb: strippedThumb?.bytes,\n            pFlags: {\n\n            }\n          }\n        });\n      }\n      this.appUsersManager.saveApiUsers(updateResult.users);\n\n      const myId = this.appPeersManager.peerId;\n      this.appPhotosManager.savePhoto(updateResult.photo, {\n        type: 'profilePhoto',\n        peerId: myId\n      });\n\n      const userId = myId.toUserId();\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateUserPhoto',\n        user_id: userId,\n        date: tsNow(true),\n        photo: this.appUsersManager.getUser(userId).photo,\n        previous: true\n      });\n    });\n  }\n\n  public deletePhotos(photoIds: string[]) {\n    return this.apiManager.invokeApiSingle('photos.deletePhotos', {\n      id: photoIds.map((photoId) => {\n        const photo = this.appPhotosManager.getPhoto(photoId);\n        return getPhotoInput(photo);\n      })\n    }).then((deletedList) => {\n\n    });\n  }\n\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\n    const user = this.appUsersManager.getUser(participant.user_id);\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\n  }\n\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\n    return participants.reduce((acc, participant) => {\n      return acc + +this.verifyParticipantForOnlineCount(participant);\n    }, 0);\n  }\n\n  public async getOnlines(id: ChatId): Promise<number> {\n    const minOnline = 1;\n    if(this.appChatsManager.isBroadcast(id)) {\n      return minOnline;\n    }\n\n    const chatInfo = await this.getChatFull(id);\n    if(this.appChatsManager.isMegagroup(id)) {\n      if((chatInfo as ChatFull.channelFull).participants_count <= 100) {\n        const channelParticipants = await this.getChannelParticipants(id, {_: 'channelParticipantsRecent'}, 100);\n        return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\n      }\n\n      const res = await this.apiManager.invokeApiCacheable('messages.getOnlines', {\n        peer: this.appChatsManager.getChannelInputPeer(id)\n      }, {cacheSeconds: 60});\n\n      const onlines = res.onlines ?? minOnline;\n      return onlines;\n    }\n\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\n    if(_participants?.participants) {\n      return this.reduceParticipantsForOnlineCount(_participants.participants);\n    } else {\n      return minOnline;\n    }\n  }\n\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\n    const fromId = (update as Update.updateUserTyping).user_id ?\n      (update as Update.updateUserTyping).user_id.toPeerId() :\n      this.appPeersManager.getPeerId((update as Update.updateChatUserTyping).from_id);\n    if(this.appPeersManager.peerId === fromId || update.action._ === 'speakingInGroupCallAction') {\n      return;\n    }\n\n    const peerId = this.appPeersManager.getPeerId(update);\n    const typings = this.typingsInPeer[peerId] ?? (this.typingsInPeer[peerId] = []);\n    let typing = typings.find((t) => t.userId === fromId);\n\n    const cancelAction = () => {\n      delete typing.timeout;\n      // typings.findAndSplice((t) => t === typing);\n      const idx = typings.indexOf(typing);\n      if(idx !== -1) {\n        typings.splice(idx, 1);\n      }\n\n      this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n\n      if(!typings.length) {\n        delete this.typingsInPeer[peerId];\n      }\n    };\n\n    if(typing && typing.timeout !== undefined) {\n      clearTimeout(typing.timeout);\n    }\n\n    if(update.action._ === 'sendMessageCancelAction') {\n      if(!typing) {\n        return;\n      }\n\n      cancelAction();\n      return;\n    }\n\n    if(!typing) {\n      typing = {\n        userId: fromId\n      };\n\n      typings.push(typing);\n    }\n\n    // console.log('updateChatUserTyping', update, typings);\n\n    typing.action = update.action;\n\n    const hasUser = this.appUsersManager.hasUser(fromId);\n    if(!hasUser) {\n      // let's load user here\n      if(update._ === 'updateChatUserTyping') {\n        if(update.chat_id && this.appChatsManager.hasChat(update.chat_id) && !this.appChatsManager.isChannel(update.chat_id)) {\n          Promise.resolve(this.getChatFull(update.chat_id)).then(() => {\n            if(typing.timeout !== undefined && this.appUsersManager.hasUser(fromId)) {\n              this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n            }\n          });\n        }\n      }\n\n      // return;\n    } else {\n      this.appUsersManager.forceUserOnline(fromId);\n    }\n\n    typing.timeout = ctx.setTimeout(cancelAction, 6000);\n    if(hasUser) {\n      this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n    }\n  };\n\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer_id);\n    if(this.appPeersManager.isUser(peerId)) {\n      const userId = peerId.toUserId();\n      const userFull = this.usersFull[userId];\n      if(userFull) {\n        if(update.blocked) userFull.pFlags.blocked = true;\n        else delete userFull.pFlags.blocked;\n      }\n\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    }\n\n    this.rootScope.dispatchEvent('peer_block', {peerId, blocked: update.blocked});\n  };\n\n  public getPeerTypings(peerId: PeerId) {\n    return this.typingsInPeer[peerId];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Awaited} from '../types';\n\nexport default function callbackifyAll<T extends readonly unknown[] | [], R extends any>(\n  values: T,\n  callback: (result: { -readonly [P in keyof T]: Awaited<T[P]> }) => R\n): PromiseLike<R> | R {\n  if(values.some((value) => value instanceof Promise)) {\n    return Promise.all(values).then(callback as any);\n  } else {\n    return callback(values as any);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport assumeType from '../../helpers/assumeType';\nimport callbackify from '../../helpers/callbackify';\nimport callbackifyAll from '../../helpers/callbackifyAll';\nimport copy from '../../helpers/object/copy';\nimport {AvailableReaction, Message, MessagePeerReaction, MessagesAvailableReactions, Update, Updates} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nconst SAVE_DOC_KEYS = [\n  'static_icon' as const,\n  'appear_animation' as const,\n  'select_animation' as const,\n  'activate_animation' as const,\n  'effect_animation' as const,\n  'around_animation' as const,\n  'center_icon' as const\n];\n\nconst REFERENCE_CONTEXT: ReferenceContext = {\n  type: 'reactions'\n};\n\nexport class AppReactionsManager extends AppManager {\n  private availableReactions: AvailableReaction[];\n  private sendReactionPromises: Map<string, Promise<any>>;\n  private lastSendingTimes: Map<string, number>;\n\n  protected after() {\n    this.rootScope.addEventListener('language_change', () => {\n      this.availableReactions = undefined;\n      this.getAvailableReactions();\n    });\n\n    this.sendReactionPromises = new Map();\n    this.lastSendingTimes = new Map();\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        Promise.resolve(this.getAvailableReactions()).then(async(availableReactions) => {\n          for(const availableReaction of availableReactions) {\n            await Promise.all([\n              availableReaction.around_animation && this.apiFileManager.downloadMedia({media: availableReaction.around_animation}),\n              availableReaction.static_icon && this.apiFileManager.downloadMedia({media: availableReaction.static_icon}),\n              availableReaction.appear_animation && this.apiFileManager.downloadMedia({media: availableReaction.appear_animation}),\n              availableReaction.center_icon && this.apiFileManager.downloadMedia({media: availableReaction.center_icon})\n            ]);\n          }\n        });\n      }, 7.5e3);\n    });\n  }\n\n  public getAvailableReactions() {\n    if(this.availableReactions) return this.availableReactions;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAvailableReactions',\n      processResult: (messagesAvailableReactions) => {\n        assumeType<MessagesAvailableReactions.messagesAvailableReactions>(messagesAvailableReactions);\n\n        const availableReactions = this.availableReactions = messagesAvailableReactions.reactions;\n        for(const reaction of availableReactions) {\n          for(const key of SAVE_DOC_KEYS) {\n            if(!reaction[key]) {\n              continue;\n            }\n\n            reaction[key] = this.appDocsManager.saveDoc(reaction[key], REFERENCE_CONTEXT);\n          }\n        }\n\n        return availableReactions;\n      },\n      params: {\n        hash: 0\n      }\n    });\n  }\n\n  public getActiveAvailableReactions() {\n    return callbackify(this.getAvailableReactions(), (availableReactions) => {\n      return availableReactions.filter((availableReaction) => !availableReaction.pFlags.inactive);\n    });\n  }\n\n  public getAvailableReactionsForPeer(peerId: PeerId) {\n    const activeAvailableReactions = this.getActiveAvailableReactions();\n    if(peerId.isUser()) {\n      return this.unshiftQuickReaction(activeAvailableReactions);\n    }\n\n    const chatFull = this.appProfileManager.getChatFull(peerId.toChatId());\n    return callbackifyAll([activeAvailableReactions, chatFull, this.getQuickReaction()], ([activeAvailableReactions, chatFull, quickReaction]) => {\n      const chatAvailableReactions = chatFull.available_reactions ?? [];\n\n      const filteredChatAvailableReactions = chatAvailableReactions.map((reaction) => {\n        return activeAvailableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n      }).filter(Boolean);\n\n      return this.unshiftQuickReactionInner(filteredChatAvailableReactions, quickReaction);\n    });\n  }\n\n  private unshiftQuickReactionInner(availableReactions: AvailableReaction.availableReaction[], quickReaction: AvailableReaction.availableReaction) {\n    const availableReaction = findAndSplice(availableReactions, availableReaction => availableReaction.reaction === quickReaction.reaction);\n    if(availableReaction) {\n      availableReactions.unshift(availableReaction);\n    }\n\n    return availableReactions;\n  }\n\n  private unshiftQuickReaction(\n    availableReactions: AvailableReaction.availableReaction[] | PromiseLike<AvailableReaction.availableReaction[]>,\n    quickReaction: ReturnType<AppReactionsManager['getQuickReaction']> = this.getQuickReaction()\n  ) {\n    return callbackifyAll([\n      availableReactions,\n      quickReaction\n    ], ([availableReactions, quickReaction]) => {\n      return this.unshiftQuickReactionInner(availableReactions, quickReaction);\n    });\n  }\n\n  public getAvailableReactionsByMessage(message: Message.message) {\n    if(!message) return [];\n    const peerId = (message.fwd_from?.channel_post && this.appPeersManager.isMegagroup(message.peerId) && message.fwdFromId) || message.peerId;\n    return this.getAvailableReactionsForPeer(peerId);\n  }\n\n  public isReactionActive(reaction: string) {\n    if(!this.availableReactions) return false;\n    return !!this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getQuickReaction() {\n    return callbackifyAll([\n      this.apiManager.getAppConfig(),\n      this.getAvailableReactions()\n    ], ([appConfig, availableReactions]) => {\n      return availableReactions.find((reaction) => reaction.reaction === appConfig.reactions_default);\n    });\n  }\n\n  public getReactionCached(reaction: string) {\n    return this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getReaction(reaction: string) {\n    return callbackify(this.getAvailableReactions(), () => {\n      return this.getReactionCached(reaction);\n    });\n  }\n\n  public getMessagesReactions(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessagesReactions',\n      params: {\n        id: mids.map((mid) => getServerMessageId(mid)),\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateMessageReactions') as Update.updateMessageReactions;\n        // return update.reactions;\n      }\n    });\n  }\n\n  public getMessageReactionsList(peerId: PeerId, mid: number, limit: number, reaction?: string, offset?: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessageReactionsList',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: getServerMessageId(mid),\n        limit,\n        reaction,\n        offset\n      },\n      processResult: (messageReactionsList) => {\n        this.appUsersManager.saveApiUsers(messageReactionsList.users);\n        return messageReactionsList;\n      }\n    });\n  }\n\n  public setDefaultReaction(reaction: string) {\n    return this.apiManager.invokeApi('messages.setDefaultReaction', {reaction}).then(async(value) => {\n      if(value) {\n        const appConfig = await this.apiManager.getAppConfig();\n        if(appConfig) {\n          appConfig.reactions_default = reaction;\n        }/*  else { // if no config or loading it - overwrite\n          this.apiManager.getAppConfig(true);\n        } */\n\n        this.rootScope.dispatchEvent('quick_reaction', reaction);\n      }\n\n      return value;\n    });\n  }\n\n  public sendReaction(message: Message.message, reaction?: string, onlyLocal?: boolean) {\n    const lastSendingTimeKey = message.peerId + '_' + message.mid;\n    const lastSendingTime = this.lastSendingTimes.get(lastSendingTimeKey);\n    if(lastSendingTime) {\n      return;\n    } else {\n      this.lastSendingTimes.set(lastSendingTimeKey, Date.now());\n      setTimeout(() => {\n        this.lastSendingTimes.delete(lastSendingTimeKey);\n      }, 333);\n    }\n\n    const {peerId, mid} = message;\n    const myPeerId = this.appPeersManager.peerId;\n\n    let reactions = onlyLocal ? message.reactions : copy(message.reactions);\n    const chosenReactionIdx = reactions ? reactions.results.findIndex((reactionCount) => reactionCount.pFlags.chosen) : -1;\n    const chosenReaction = chosenReactionIdx !== -1 && reactions.results[chosenReactionIdx];\n    if(chosenReaction) { // clear current reaction\n      --chosenReaction.count;\n      delete chosenReaction.pFlags.chosen;\n\n      if(reaction === chosenReaction.reaction) {\n        reaction = undefined;\n      }\n\n      if(!chosenReaction.count) {\n        reactions.results.splice(chosenReactionIdx, 1);\n      }/*  else {\n        insertInDescendSortedArray(reactions.results, chosenReaction, 'count', chosenReactionIdx);\n      } */\n\n      if(reactions.recent_reactions) {\n        findAndSplice(reactions.recent_reactions, (recentReaction) => this.appPeersManager.getPeerId(recentReaction.peer_id) === myPeerId);\n      }\n\n      if(!reactions.results.length) {\n        reactions = undefined;\n      }\n    }\n\n    if(reaction) {\n      if(!reactions) {\n        reactions/*  = message.reactions */ = {\n          _: 'messageReactions',\n          results: [],\n          pFlags: {}\n        };\n\n        if(!this.appPeersManager.isBroadcast(message.peerId)) {\n          reactions.pFlags.can_see_list = true;\n        }\n      }\n\n      let reactionCountIdx = reactions.results.findIndex((reactionCount) => reactionCount.reaction === reaction);\n      let reactionCount = reactionCountIdx !== -1 && reactions.results[reactionCountIdx];\n      if(!reactionCount) {\n        reactionCount = {\n          _: 'reactionCount',\n          count: 0,\n          reaction,\n          pFlags: {}\n        };\n\n        reactionCountIdx = reactions.results.push(reactionCount) - 1;\n      }\n\n      ++reactionCount.count;\n      reactionCount.pFlags.chosen = true;\n\n      if(!reactions.recent_reactions && reactions.pFlags.can_see_list) {\n        reactions.recent_reactions = [];\n      }\n\n      if(reactions.recent_reactions) {\n        const userReaction: MessagePeerReaction = {\n          _: 'messagePeerReaction',\n          reaction,\n          peer_id: this.appPeersManager.getOutputPeer(myPeerId)\n        };\n\n        if(!this.appPeersManager.isMegagroup(peerId)) {\n          reactions.recent_reactions.push(userReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(-3);\n        } else {\n          reactions.recent_reactions.unshift(userReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(0, 3);\n        }\n      }\n\n      // insertInDescendSortedArray(reactions.results, reactionCount, 'count', reactionCountIdx);\n    }\n\n    const availableReactions = this.availableReactions;\n    if(reactions && availableReactions?.length) {\n      const indexes: Map<string, number> = new Map();\n      availableReactions.forEach((availableReaction, idx) => {\n        indexes.set(availableReaction.reaction, idx);\n      });\n\n      reactions.results.sort((a, b) => {\n        return (b.count - a.count) || (indexes.get(a.reaction) - indexes.get(b.reaction));\n      });\n    }\n\n    if(onlyLocal) {\n      message.reactions = reactions;\n      this.rootScope.dispatchEvent('messages_reactions', [{message, changedResults: []}]);\n      return Promise.resolve();\n    }\n\n    this.apiUpdatesManager.processLocalUpdate({\n      _: 'updateMessageReactions',\n      peer: message.peer_id,\n      msg_id: message.id,\n      reactions: reactions,\n      local: true\n    });\n\n    const promiseKey = [peerId, mid].join('-');\n    const msgId = getServerMessageId(mid);\n    const promise = this.apiManager.invokeApi('messages.sendReaction', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: msgId,\n      reaction\n    }).then((updates) => {\n      assumeType<Updates.updates>(updates);\n\n      const editMessageUpdateIdx = updates.updates.findIndex((update) => update._ === 'updateEditMessage' || update._ === 'updateEditChannelMessage');\n      if(editMessageUpdateIdx !== -1) {\n        const editMessageUpdate = updates.updates[editMessageUpdateIdx] as Update.updateEditMessage | Update.updateEditChannelMessage;\n        updates.updates[editMessageUpdateIdx] = {\n          _: 'updateMessageReactions',\n          msg_id: msgId,\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          reactions: (editMessageUpdate.message as Message.message).reactions,\n          pts: editMessageUpdate.pts,\n          pts_count: editMessageUpdate.pts_count\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }).catch((err) => {\n      if(err.type === 'REACTION_INVALID' && this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReaction(message, chosenReaction?.reaction, true);\n      }\n    }).finally(() => {\n      if(this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReactionPromises.delete(promiseKey);\n      }\n    });\n\n    this.sendReactionPromises.set(promiseKey, promise);\n    return promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport {Document, InputFileLocation, InputStickerSet, MessagesAllStickers, MessagesFavedStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered, Update} from '../../layer';\nimport {Modify} from '../../types';\nimport AppStorage from '../storage';\nimport DATABASE_STATE from '../../config/databases/state';\nimport assumeType from '../../helpers/assumeType';\nimport fixBase64String from '../../helpers/fixBase64String';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport {AppManager} from './manager';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport ctx from '../../environment/ctx';\nimport {getEnvironment} from '../../environment/utils';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\n\nconst CACHE_TIME = 3600e3;\n\nconst EMOJI_SET_LOCAL_ID = 'emoji';\nconst EMOJI_ANIMATIONS_SET_LOCAL_ID = 'emojiAnimations';\nconst LOCAL_IDS_SET = new Set([\n  EMOJI_SET_LOCAL_ID,\n  EMOJI_ANIMATIONS_SET_LOCAL_ID\n]);\n\n// let TEST_FILE_REFERENCE_REFRESH = true;\n\nexport type MyStickerSetInput = {\n  id: StickerSet.stickerSet['id'],\n  access_hash?: StickerSet.stickerSet['access_hash']\n};\n\nexport type MyMessagesStickerSet = MessagesStickerSet.messagesStickerSet;\n\nexport class AppStickersManager extends AppManager {\n  private storage = new AppStorage<Record<Long, MyMessagesStickerSet>, typeof DATABASE_STATE>(DATABASE_STATE, 'stickerSets');\n\n  private getStickerSetPromises: {[setId: Long]: Promise<MyMessagesStickerSet>};\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<MyDocument[]>};\n\n  private greetingStickers: MyDocument[];\n  private getGreetingStickersTimeout: number;\n  private getGreetingStickersPromise: Promise<void>;\n\n  private sounds: Record<string, MyDocument>;\n  private getAnimatedEmojiSoundsPromise: Promise<void>;\n\n  private favedStickers: MyDocument[];\n  private recentStickers: MyDocument[];\n\n  protected after() {\n    this.getStickerSetPromises = {};\n    this.getStickersByEmoticonsPromises = {};\n    this.sounds = {};\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        this.getAnimatedEmojiStickerSet();\n        this.getFavedStickersStickers();\n      }, 1000);\n\n      if(!this.getGreetingStickersPromise && this.getGreetingStickersTimeout === undefined) {\n        this.getGreetingStickersTimeout = ctx.setTimeout(() => {\n          this.getGreetingStickersTimeout = undefined;\n          this.getGreetingSticker(true);\n        }, 5000);\n      }\n    });\n\n    this.rootScope.addEventListener('app_config', () => this.onStickersUpdated('faved', true));\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateNewStickerSet: (update) => {\n        const stickerSet = update.stickerset as MyMessagesStickerSet;\n        this.saveStickerSet(stickerSet, stickerSet.set.id);\n        this.rootScope.dispatchEvent('stickers_installed', stickerSet.set);\n      },\n\n      updateRecentStickers: () => this.onStickersUpdated('recent', true),\n\n      updateFavedStickers: () => this.onStickersUpdated('faved', true)\n    });\n  }\n\n  private async onStickersUpdated(type: 'faved' | 'recent', overwrite: boolean) {\n    const stickers = await (type === 'faved' ? this.getFavedStickersStickers(overwrite) : this.getRecentStickersStickers(overwrite));\n    this.rootScope.dispatchEvent('stickers_updated', {\n      type,\n      stickers\n    });\n  }\n\n  public getGreetingSticker(justPreload = false) {\n    if(this.getGreetingStickersTimeout) {\n      clearTimeout(this.getGreetingStickersTimeout);\n      this.getGreetingStickersTimeout = undefined;\n    }\n\n    if(!this.getGreetingStickersPromise) {\n      this.getGreetingStickersPromise = this.getStickersByEmoticon('👋⭐️', false).then((docs) => {\n        if(!docs.length) throw 'NO_STICKERS';\n        this.greetingStickers = docs.slice() as Document.document[];\n        this.greetingStickers.sort((a, b) => Math.random() - Math.random());\n      });\n    }\n\n    return this.getGreetingStickersPromise.then(() => {\n      let doc: Document.document;\n      if(!justPreload) {\n        doc = this.greetingStickers.shift();\n        this.greetingStickers.push(doc);\n      }\n\n      this.apiFileManager.downloadMedia({media: this.greetingStickers[0]}); // preload next sticker\n\n      return doc;\n    });\n  }\n\n  private saveStickers(docs: Document[]) {\n    forEachReverse(docs, (doc, idx) => {\n      doc = this.appDocsManager.saveDoc(doc);\n\n      if(!doc) docs.splice(idx, 1);\n      else docs[idx] = doc;\n    });\n  }\n\n  public async getStickerSet(set: MyStickerSetInput, params: Partial<{\n    overwrite: boolean,\n    useCache: boolean,\n    saveById: boolean\n  }> = {}): Promise<MyMessagesStickerSet> {\n    const id = set.id;\n    if(this.getStickerSetPromises[id]) {\n      return this.getStickerSetPromises[id];\n    }\n\n    return this.getStickerSetPromises[id] = new Promise(async(resolve) => {\n      if(!params.overwrite) {\n        // const perf = performance.now();\n        const cachedSet = await this.storage.get(id);\n        if(cachedSet && cachedSet.documents?.length && ((Date.now() - cachedSet.refreshTime) < CACHE_TIME || params.useCache)) {\n          this.saveStickers(cachedSet.documents);\n          resolve(cachedSet);\n          delete this.getStickerSetPromises[id];\n          // console.log('get sticker set from cache time', id, performance.now() - perf);\n          return;\n        }\n      }\n\n      try {\n        const stickerSet = await this.apiManager.invokeApi('messages.getStickerSet', {\n          stickerset: this.getStickerSetInput(set),\n          hash: 0\n        }) as MyMessagesStickerSet;\n\n        const saveById = params.saveById ? id : stickerSet.set.id;\n        this.saveStickerSet(stickerSet, saveById);\n\n        resolve(stickerSet);\n      } catch(err) {\n        resolve(null);\n      }\n\n      delete this.getStickerSetPromises[id];\n    });\n  }\n\n  public getAnimatedEmojiStickerSet() {\n    return Promise.all([\n      this.getStickerSet({id: EMOJI_SET_LOCAL_ID}, {saveById: true}),\n      this.getStickerSet({id: EMOJI_ANIMATIONS_SET_LOCAL_ID}, {saveById: true}),\n      this.getAnimatedEmojiSounds()\n    ]).then(([emoji, animations]) => {\n      return {emoji, animations};\n    });\n  }\n\n  public getAnimatedEmojiSounds(overwrite?: boolean) {\n    if(this.getAnimatedEmojiSoundsPromise && !overwrite) return this.getAnimatedEmojiSoundsPromise;\n    const promise = this.getAnimatedEmojiSoundsPromise = Promise.all([\n      this.apiManager.getAppConfig(overwrite),\n      this.apiManager.getConfig()\n    ]).then(([appConfig, config]) => {\n      if(this.getAnimatedEmojiSoundsPromise !== promise) {\n        return;\n      }\n\n      for(const emoji in appConfig.emojies_sounds) {\n        const sound = appConfig.emojies_sounds[emoji];\n        const bytesStr = atob(fixBase64String(sound.file_reference_base64, false));\n        const bytes = new Uint8Array(bytesStr.length);\n        for(let i = 0, length = bytes.length; i < length; ++i) {\n          bytes[i] = bytesStr[i].charCodeAt(0);\n        }\n\n        // if(TEST_FILE_REFERENCE_REFRESH) {\n        //   bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4] = 0;\n        //   sound.access_hash += '999';\n        // }\n\n        const doc = this.appDocsManager.saveDoc({\n          _: 'document',\n          pFlags: {},\n          flags: 0,\n          id: sound.id,\n          access_hash: sound.access_hash,\n          attributes: [{\n            _: 'documentAttributeAudio',\n            duration: 1,\n            pFlags: {\n              voice: true\n            }\n          }],\n          date: 0,\n          dc_id: config.this_dc,\n          file_reference: bytes,\n          mime_type: 'audio/ogg'\n          // size: 101010 // test loading everytime\n        }, {\n          type: 'emojiesSounds'\n        });\n\n        this.sounds[emoji] = doc;\n      }\n\n      // if(TEST_FILE_REFERENCE_REFRESH) {\n      //   TEST_FILE_REFERENCE_REFRESH = false;\n      // }\n    });\n\n    return promise;\n  }\n\n  public async getRecentStickers(): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\n    stickers: Document[]\n  }>> {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getRecentStickers',\n      processResult: (res) => {\n        assumeType<MessagesRecentStickers.messagesRecentStickers>(res);\n\n        this.recentStickers = res.stickers as MyDocument[];\n        this.saveStickers(res.stickers);\n        return res;\n      }\n    });\n\n    return res;\n  }\n\n  public getRecentStickersStickers(overwrite?: boolean) {\n    if(overwrite) this.recentStickers = undefined;\n    else if(this.recentStickers) return this.recentStickers;\n    return this.getRecentStickers().then(() => this.recentStickers);\n  }\n\n  public saveRecentSticker(docId: DocId, unsave?: boolean, attached?: boolean) {\n    const doc = this.appDocsManager.getDoc(docId);\n\n    findAndSplice(this.recentStickers, (_doc) => _doc.id === docId);\n    if(!unsave) {\n      this.recentStickers.unshift(doc);\n\n      const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n      for(const emoticon in this.getStickersByEmoticonsPromises) {\n        const promise = this.getStickersByEmoticonsPromises[emoticon];\n        promise.then((stickers) => {\n          const _doc = findAndSplice(stickers, (_doc) => _doc.id === doc.id);\n          if(_doc) {\n            stickers.unshift(_doc);\n          } else if(emoticon.includes(docEmoticon)) {\n            stickers.unshift(doc);\n          }\n        });\n      }\n    }\n\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'recent', faved: !unsave, document: doc});\n\n    if(unsave) {\n      this.onStickersUpdated('recent', false);\n    }\n\n    return this.apiManager.invokeApi('messages.saveRecentSticker', {\n      id: getDocumentInput(doc),\n      unsave,\n      attached\n    });\n  }\n\n  private cleanEmoji(emoji: string) {\n    return emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\n  }\n\n  public getAnimatedEmojiSticker(emoji: string, isAnimation?: boolean) {\n    const id = isAnimation ? EMOJI_ANIMATIONS_SET_LOCAL_ID : EMOJI_SET_LOCAL_ID;\n    const stickerSet = this.storage.getFromCache(id);\n    // const stickerSet = await this.getStickerSet({id});\n    if(!stickerSet?.documents) return;\n\n    if(isAnimation) {\n      if(['🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎'].includes(emoji)) {\n        emoji = '❤️';\n      }\n    }\n\n    emoji = this.cleanEmoji(emoji);\n    const pack = stickerSet.packs.find((p) => p.emoticon === emoji);\n    return pack ? this.appDocsManager.getDoc(pack.documents[0]) : undefined;\n  }\n\n  public getAnimatedEmojiSoundDocument(emoji: string) {\n    return this.sounds[this.cleanEmoji(emoji)];\n  }\n\n  public preloadAnimatedEmojiSticker(emoji: string) {\n    const preloadEmojiPromise = this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji);\n    });\n\n    return Promise.all([\n      preloadEmojiPromise,\n      this.preloadAnimatedEmojiStickerAnimation(emoji)\n    ]).then(([doc, a]) => {\n      return {\n        doc: doc,\n        animation: a?.doc,\n        sound: a?.sound\n      };\n    });\n  }\n\n  public preloadAnimatedEmojiStickerAnimation(emoji: string) {\n    return this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji, true);\n    }).then((doc) => {\n      if(!doc) {\n        return;\n      }\n\n      const sound = this.getAnimatedEmojiSoundDocument(emoji);\n      return Promise.all([\n        this.preloadSticker(doc.id),\n        sound ? this.preloadSticker(sound.id) : undefined\n      ]).then(() => {\n        return {doc, sound};\n      });\n    });\n  }\n\n  public preloadSticker(docId: DocId, isPremiumEffect?: boolean) {\n    const doc = this.appDocsManager.getDoc(docId);\n    return this.apiFileManager.downloadMedia({media: doc, thumb: isPremiumEffect ? doc.video_thumbs?.[0] : undefined});\n  }\n\n  private saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: DocId) {\n    const newSet: MessagesStickerSet = {\n      _: 'messages.stickerSet',\n      set: res.set,\n      packs: res.packs,\n      documents: res.documents as Document[]\n    };\n\n    let stickerSet = this.storage.getFromCache(id);\n    if(stickerSet) {\n      Object.assign(stickerSet, newSet);\n    } else {\n      stickerSet = this.storage.setToCache(id, newSet);\n    }\n\n    this.saveStickers(res.documents);\n\n    // console.log('stickers wrote', this.stickerSets);\n    const needSave = stickerSet.set.installed_date || LOCAL_IDS_SET.has(id as any);\n    stickerSet.refreshTime = Date.now();\n    this.storage.set({[id]: stickerSet}, !needSave);\n  }\n\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet) {\n    const thumb = stickerSet.thumbs.find((thumb) => thumb._ === 'photoSize') as PhotoSize.photoSize;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: InputFileLocation.inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      thumb_version: stickerSet.thumb_version\n    };\n\n    return {dcId, location: input, size: thumb.size, mimeType: isAnimated ? 'application/x-tgsticker' : 'image/webp'};\n  }\n\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\n    const thumb = stickerSet.thumb;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      volume_id: thumb.location.volume_id,\n      local_id: thumb.location.local_id\n    };\n\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\n    return url;\n\n    //return promise;\n  } */\n\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\n    if(set.id === EMOJI_SET_LOCAL_ID) {\n      return {\n        _: 'inputStickerSetAnimatedEmoji'\n      };\n    } else if(set.id === EMOJI_ANIMATIONS_SET_LOCAL_ID) {\n      return {\n        _: 'inputStickerSetAnimatedEmojiAnimations'\n      };\n    } else if(!set.access_hash) {\n      return {\n        _: 'inputStickerSetShortName',\n        short_name: '' + set.id\n      };\n    } else {\n      return {\n        _: 'inputStickerSetID',\n        id: set.id,\n        access_hash: set.access_hash\n      };\n    }\n  }\n\n  public async getFeaturedStickers() {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getFeaturedStickers',\n      processResult: (res) => {\n        assumeType<MessagesFeaturedStickers.messagesFeaturedStickers>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    return res.sets;\n  }\n\n  public getPromoPremiumStickers() {\n    return this.getStickersByEmoticon('⭐️⭐️', false);\n  }\n\n  public getPremiumStickers() {\n    return this.getStickersByEmoticon('📂⭐️', false);\n  }\n\n  public getFavedStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getFavedStickers',\n      processResult: (favedStickers) => {\n        assumeType<MessagesFavedStickers.messagesFavedStickers>(favedStickers);\n        this.saveStickers(favedStickers.stickers);\n        this.favedStickers = favedStickers.stickers as MyDocument[];\n        return favedStickers;\n      }\n    });\n  }\n\n  public getFavedStickersStickers(overwrite?: boolean) {\n    if(overwrite) this.favedStickers = undefined;\n    else if(this.favedStickers) return this.favedStickers;\n    return this.getFavedStickers().then(() => this.favedStickers);\n  }\n\n  public async getFavedStickersLimit() {\n    const appConfig = await this.apiManager.getAppConfig();\n    return this.rootScope.premium ? appConfig.stickers_faved_limit_premium : appConfig.stickers_faved_limit_default;\n  }\n\n  public async faveSticker(docId: DocId, unfave?: boolean) {\n    if(!this.favedStickers) {\n      await this.getFavedStickersStickers();\n    }\n\n    const limit = await this.getFavedStickersLimit();\n\n    const doc = this.appDocsManager.getDoc(docId);\n    findAndSplice(this.favedStickers, (_doc) => _doc.id === doc.id);\n\n    if(!unfave) {\n      this.favedStickers.unshift(doc);\n      const spliced = this.favedStickers.splice(limit, this.favedStickers.length - limit);\n    }\n\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'faved', faved: !unfave, document: doc});\n\n    return this.apiManager.invokeApi('messages.faveSticker', {\n      id: getDocumentInput(doc),\n      unfave\n    }).then(() => {\n      if(unfave) {\n        this.onStickersUpdated('faved', true);\n      }\n    });\n  }\n\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\n    set = this.storage.getFromCache(set.id).set;\n\n    if(set.installed_date) {\n      const res = await this.apiManager.invokeApi('messages.uninstallStickerSet', {\n        stickerset: this.getStickerSetInput(set)\n      });\n\n      if(res) {\n        delete set.installed_date;\n        this.rootScope.dispatchEvent('stickers_deleted', set);\n        this.storage.delete(set.id, true);\n        return true;\n      }\n    } else {\n      const res = await this.apiManager.invokeApi('messages.installStickerSet', {\n        stickerset: this.getStickerSetInput(set),\n        archived: false\n      });\n\n      if(res) {\n        set.installed_date = Date.now() / 1000 | 0;\n        this.rootScope.dispatchEvent('stickers_installed', set);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public async searchStickerSets(query: string, excludeFeatured = true) {\n    const flags = excludeFeatured ? 1 : 0;\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.searchStickerSets',\n      params: {\n        flags,\n        exclude_featured: excludeFeatured || undefined,\n        q: query\n      },\n      processResult: (res) => {\n        assumeType<MessagesFoundStickerSets.messagesFoundStickerSets>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    const foundSaved: StickerSetCovered[] = [];\n    const cache = this.storage.getCache();\n    for(const id in cache) {\n      const {set} = cache[id];\n\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find((c) => c.set.id === set.id)) {\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\n      }\n    }\n\n    return res.sets.concat(foundSaved);\n  }\n\n  public getAllStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getAllStickers',\n      processResult: (allStickers) => {\n        assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\n\n        forEachReverse(allStickers.sets, (stickerSet, idx, arr) => {\n          if(stickerSet.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        return allStickers;\n      }\n    });\n  }\n\n  public preloadStickerSets() {\n    return this.getAllStickers().then((allStickers) => {\n      return Promise.all((allStickers as MessagesAllStickers.messagesAllStickers).sets.map((set) => this.getStickerSet(set, {useCache: true})));\n    });\n  }\n\n  // TODO: detect \"🤷\" by \"🤷‍♂️\"\n  public getStickersByEmoticon(emoticon: string, includeOurStickers = true) {\n    emoticon = fixEmoji(emoticon);\n    if(this.getStickersByEmoticonsPromises[emoticon]) return this.getStickersByEmoticonsPromises[emoticon];\n\n    return this.getStickersByEmoticonsPromises[emoticon] = Promise.all([\n      this.apiManager.invokeApiHashable({\n        method: 'messages.getStickers',\n        params: {\n          emoticon\n        },\n        processResult: (stickers) => stickers\n      }),\n      includeOurStickers ? this.preloadStickerSets() : [],\n      includeOurStickers ? this.getRecentStickers() : undefined\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\n      const foundStickers = (messagesStickers as MessagesStickers.messagesStickers).stickers.map((sticker) => this.appDocsManager.saveDoc(sticker));\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\n\n      // console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\n\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\n        for(const pack of packs) {\n          const packEmoticon = fixEmoji(pack.emoticon);\n          if(packEmoticon.includes(emoticon)) {\n            for(const docId of pack.documents) {\n              const doc = this.appDocsManager.getDoc(docId);\n              (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\n            }\n          }\n        }\n      };\n\n      if(recentStickers) {\n        iteratePacks(recentStickers.packs);\n        const stickers = recentStickers.stickers;\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          s.sort((a, b) => stickers.indexOf(a) - stickers.indexOf(b));\n        });\n      }\n\n      for(const set of installedSets) {\n        iteratePacks(set.packs);\n      }\n\n      /* const entities = parseEntities(emoticon);\n      if(entities.length === 1) {\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          forEachReverse(s, (doc, idx) => {\n            const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n            if(docEmoticon !== emoticon) {\n              s.splice(idx, 1);\n            }\n          });\n        });\n      } */\n\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter((doc) => !doc.animated) */;\n\n      forEachReverse(stickers, (sticker, idx, arr) => {\n        if((sticker.sticker === 3 && !getEnvironment().IS_WEBM_SUPPORTED) ||\n          (!this.rootScope.premium && getStickerEffectThumb(sticker))) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      return stickers;\n    });\n  }\n\n  public clearRecentStickers() {\n    if(this.recentStickers) {\n      this.recentStickers.length = 0;\n      this.onStickersUpdated('recent', false);\n    }\n\n    return this.apiManager.invokeApi('messages.clearRecentStickers');\n  }\n}\n","export default function fixBase64String(str: string, toUrl: boolean) {\n  if(toUrl) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n  } else {\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function cleanUsername(username: string) {\r\n  return username && username.toLowerCase() || '';\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport filterUnique from '../../helpers/array/filterUnique';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport cleanSearchText from '../../helpers/cleanSearchText';\nimport cleanUsername from '../../helpers/cleanUsername';\nimport tsNow from '../../helpers/tsNow';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {isRestricted} from '../../helpers/restrictions';\nimport {Chat, ContactsResolvedPeer, InputContact, InputGeoPoint, InputMedia, InputPeer, InputUser, User as MTUser, UserProfilePhoto, UserStatus} from '../../layer';\nimport parseEntities from '../richTextProcessor/parseEntities';\nimport wrapUrl from '../richTextProcessor/wrapUrl';\nimport SearchIndex from '../searchIndex';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\nimport canSendToUser from './utils/users/canSendToUser';\nimport {AppStoragesManager} from './appStoragesManager';\n\nexport type User = MTUser.user;\nexport type TopPeerType = 'correspondents' | 'bots_inline';\nexport type MyTopPeer = {id: PeerId, rating: number};\n\nexport class AppUsersManager extends AppManager {\n  private storage: AppStoragesManager['storages']['users'];\n\n  private users: {[userId: UserId]: User};\n  private usernames: {[username: string]: UserId};\n  private contactsIndex: SearchIndex<UserId>;\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\n  private contactsList: Set<UserId>;\n  private updatedContactsList: boolean;\n\n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\n\n  protected after() {\n    this.clear(true);\n\n    setInterval(this.updateUsersStatuses, 60000);\n\n    this.rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateUserStatus: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          user.status = update.status;\n          if(user.status) {\n            if('expires' in user.status) {\n              user.status.expires -= this.timeManager.getServerTimeOffset();\n            }\n\n            if('was_online' in user.status) {\n              user.status.was_online -= this.timeManager.getServerTimeOffset();\n            }\n          }\n\n          // user.sortStatus = this.getUserStatusForSort(user.status);\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.setUserToStateIfNeeded(user);\n        } // ////else console.warn('No user by id:', userId);\n      },\n\n      updateUserPhoto: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto)?.photo_id) {\n            return;\n          }\n\n          this.forceUserOnline(userId, update.date);\n\n          if(update.photo._ === 'userProfilePhotoEmpty') {\n            delete user.photo;\n          } else {\n            user.photo = safeReplaceObject(user.photo, update.photo);\n          }\n\n          this.setUserToStateIfNeeded(user);\n\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.rootScope.dispatchEvent('avatar_update', userId.toPeerId());\n        } else console.warn('No user by id:', userId);\n      },\n\n      updateUserName: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n\n          this.saveApiUser({\n            ...user,\n            first_name: update.first_name,\n            last_name: update.last_name,\n            username: update.username\n          }, true);\n        }\n      }\n    });\n\n    /* case 'updateContactLink':\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\n    break; */\n\n    this.rootScope.addEventListener('language_change', (e) => {\n      const userId = this.getSelf().id;\n      this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('users')\n    ]).then(([state, {results: users, storage}]) => {\n      this.storage = storage;\n\n      if(users.length) {\n        for(let i = 0, length = users.length; i < length; ++i) {\n          const user = users[i];\n          if(user) {\n            this.users[user.id] = user;\n            this.setUserNameToCache(user);\n\n            this.checkPremium(user);\n\n            if(state.contactsListCachedTime && (user.pFlags.contact || user.pFlags.mutual_contact)) {\n              this.pushContact(user.id);\n\n              if(!this.contactsFillPromise) {\n                this.contactsFillPromise = deferredPromise();\n                this.contactsFillPromise.resolve(this.contactsList);\n              }\n            }\n          }\n        }\n      }\n\n      // const contactsList = state.contactsList;\n      // if(Array.isArray(contactsList)) {\n      //   contactsList.forEach((userId) => {\n      //     this.pushContact(userId);\n      //   });\n\n      //   if(contactsList.length) {\n      //     this.contactsFillPromise = deferredPromise();\n      //     this.contactsFillPromise.resolve(this.contactsList);\n      //   }\n      // }\n\n      const recentSearch = state.recentSearch || [];\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\n        this.peersStorage.requestPeer(recentSearch[i], 'recentSearch');\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(!this.storage.getFromCache(userId)) {\n          this.storage.set({\n            [userId]: this.getUser(userId)\n          });\n        }\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(this.storage.getFromCache(userId)) {\n          this.storage.delete(userId);\n        }\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const userId in this.users) {\n        // const userId = +userId;\n        if(!userId) continue;\n        const peerId = userId.toPeerId();\n        if(!this.peersStorage.isPeerNeeded(peerId)) {\n          const user = this.users[userId];\n          if(user.username) {\n            delete this.usernames[cleanUsername(user.username)];\n          }\n\n          this.storage.delete(userId);\n          delete this.users[userId];\n        }\n      }\n    } else {\n      this.users = {};\n      this.usernames = {};\n    }\n\n    this.getTopPeersPromises = {};\n    this.contactsIndex = this.createSearchIndex();\n    this.contactsFillPromise = undefined;\n    this.contactsList = new Set();\n    this.updatedContactsList = false;\n  };\n\n  public get userId() {\n    return this.rootScope.myId.toUserId();\n  }\n\n  private onContactsModified(fromServer?: boolean) {\n    // const contactsList = [...this.contactsList];\n    // this.appStateManager.pushToState('contactsList', contactsList);\n\n    if(fromServer) {\n      this.appStateManager.pushToState('contactsListCachedTime', tsNow(true));\n    }\n  }\n\n  public pushRecentSearch(peerId: PeerId) {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      if(recentSearch[0] !== peerId) {\n        indexOfAndSplice(recentSearch, peerId);\n        recentSearch.unshift(peerId);\n        if(recentSearch.length > 20) {\n          recentSearch.length = 20;\n        }\n\n        this.appStateManager.pushToState('recentSearch', recentSearch);\n        for(const peerId of recentSearch) {\n          this.peersStorage.requestPeer(peerId, 'recentSearch');\n        }\n      }\n    });\n  }\n\n  public clearRecentSearch() {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      for(const peerId of recentSearch) {\n        this.peersStorage.releasePeer(peerId, 'recentSearch');\n      }\n\n      recentSearch.length = 0;\n      this.appStateManager.pushToState('recentSearch', recentSearch);\n    });\n  }\n\n  public fillContacts() {\n    if(this.contactsFillPromise && this.updatedContactsList) {\n      return {\n        cached: this.contactsFillPromise.isFulfilled,\n        promise: this.contactsFillPromise\n      };\n    }\n\n    this.updatedContactsList = true;\n\n    const promise = deferredPromise<Set<UserId>>();\n    this.apiManager.invokeApi('contacts.getContacts').then((result) => {\n      if(result._ === 'contacts.contacts') {\n        this.contactsList.clear();\n\n        this.saveApiUsers(result.users);\n\n        result.contacts.forEach((contact) => {\n          this.pushContact(contact.user_id);\n        });\n\n        this.onContactsModified(true);\n\n        this.contactsFillPromise = promise;\n      }\n\n      promise.resolve(this.contactsList);\n    }, () => {\n      this.updatedContactsList = false;\n    });\n\n    return {\n      cached: this.contactsFillPromise?.isFulfilled,\n      promise: this.contactsFillPromise || (this.contactsFillPromise = promise)\n    };\n  }\n\n  public resolveUsername(username: string): Promise<Chat | User> | Chat | User {\n    if(username[0] === '@') {\n      username = username.slice(1);\n    }\n\n    username = username.toLowerCase();\n    const userId = this.usernames[username];\n    if(userId) {\n      return this.users[userId];\n    }\n\n    return this.apiManager.invokeApi('contacts.resolveUsername', {username}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer);\n    });\n  }\n\n  private processResolvedPeer(resolvedPeer: ContactsResolvedPeer.contactsResolvedPeer) {\n    this.saveApiUsers(resolvedPeer.users);\n    this.appChatsManager.saveApiChats(resolvedPeer.chats);\n\n    return this.appPeersManager.getPeer(getPeerId(resolvedPeer.peer)) as Chat | User;\n  }\n\n  public resolvePhone(phone: string) {\n    return this.apiManager.invokeApi('contacts.resolvePhone', {phone}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer) as User;\n    });\n  }\n\n  private pushContact(id: UserId) {\n    this.contactsList.add(id);\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\n    this.peersStorage.requestPeer(id.toPeerId(), 'contact');\n  }\n\n  private popContact(id: UserId) {\n    this.contactsList.delete(id);\n    this.contactsIndex.indexObject(id, ''); // delete search index\n    this.peersStorage.releasePeer(id.toPeerId(), 'contact');\n  }\n\n  public getUserSearchText(id: UserId) {\n    const user = this.users[id];\n    if(!user) {\n      return '';\n    }\n\n    const arr: string[] = [\n      user.first_name,\n      user.last_name,\n      user.phone,\n      user.username,\n      // user.pFlags.self ? I18n.format('SavedMessages', true) : '',\n      user.pFlags.self ? 'Saved Messages' : ''\n    ];\n\n    return arr.filter(Boolean).join(' ');\n  }\n\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' = 'name') {\n    return this.fillContacts().promise.then((_contactsList) => {\n      let contactsList = [..._contactsList];\n      if(query) {\n        const results = this.contactsIndex.search(query);\n        const filteredContactsList = [...contactsList].filter((id) => results.has(id));\n\n        contactsList = filteredContactsList;\n      }\n\n      if(sortBy === 'name') {\n        contactsList.sort((userId1, userId2) => {\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\n          return sortName1.localeCompare(sortName2);\n        });\n      } else if(sortBy === 'online') {\n        contactsList.sort((userId1, userId2) => {\n          const status1 = this.getUserStatusForSort(this.getUser(userId1).status);\n          const status2 = this.getUserStatusForSort(this.getUser(userId2).status);\n          return status2 - status1;\n        });\n      }\n\n      const myUserId = this.userId;\n      indexOfAndSplice(contactsList, myUserId);\n      if(includeSaved) {\n        if(this.testSelfSearch(query)) {\n          contactsList.unshift(myUserId);\n        }\n      }\n\n      return contactsList;\n    });\n  }\n\n  public getContactsPeerIds(\n    query?: Parameters<AppUsersManager['getContacts']>[0],\n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1],\n    sortBy?: Parameters<AppUsersManager['getContacts']>[2]\n  ) {\n    return this.getContacts(query, includeSaved, sortBy).then((userIds) => {\n      return userIds.map((userId) => userId.toPeerId(false));\n    });\n  }\n\n  public toggleBlock(peerId: PeerId, block: boolean) {\n    return this.apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\n      id: this.appPeersManager.getInputPeerById(peerId)\n    }).then((value) => {\n      if(value) {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updatePeerBlocked',\n          peer_id: this.appPeersManager.getOutputPeer(peerId),\n          blocked: block\n        });\n      }\n\n      return value;\n    });\n  }\n\n  public testSelfSearch(query: string) {\n    const user = this.getSelf();\n    const index = this.createSearchIndex();\n    index.indexObject(user.id, this.getUserSearchText(user.id));\n    return index.search(query).has(user.id);\n  }\n\n  private createSearchIndex() {\n    return new SearchIndex<UserId>({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n  }\n\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\n    if((apiUsers as any).saved) return;\n    (apiUsers as any).saved = true;\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\n  }\n\n  private setUserNameToCache(user: MTUser.user, oldUser?: MTUser.user) {\n    if(!oldUser || oldUser.username !== user.username) {\n      if(oldUser?.username) {\n        const oldSearchUsername = cleanUsername(oldUser.username);\n        delete this.usernames[oldSearchUsername];\n      }\n\n      if(user.username) {\n        const searchUsername = cleanUsername(user.username);\n        this.usernames[searchUsername] = user.id;\n      }\n    }\n  }\n\n  public saveApiUser(user: MTUser, override?: boolean) {\n    if(user._ === 'userEmpty') return;\n\n    const userId = user.id;\n    const oldUser = this.users[userId];\n\n    // ! commented block can affect performance !\n    // if(oldUser && !override) {\n    //   console.log('saveApiUser same');\n    //   return;\n    // }\n\n    if(user.pFlags === undefined) {\n      user.pFlags = {};\n    }\n\n    if(user.pFlags.min && oldUser !== undefined) {\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\n\n    this.setUserNameToCache(user, oldUser);\n\n    if(!oldUser ||\n      oldUser.sortName === undefined ||\n      oldUser.first_name !== user.first_name ||\n      oldUser.last_name !== user.last_name) {\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);\n    } else {\n      user.sortName = oldUser.sortName;\n    }\n\n    if(user.status) {\n      if((user.status as UserStatus.userStatusOnline).expires) {\n        (user.status as UserStatus.userStatusOnline).expires -= this.timeManager.getServerTimeOffset();\n      }\n\n      if((user.status as UserStatus.userStatusOffline).was_online) {\n        (user.status as UserStatus.userStatusOffline).was_online -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    // user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\n\n    if(oldUser === undefined) {\n      this.users[userId] = user;\n    } else {\n      const changedTitle = user.first_name !== oldUser.first_name ||\n        user.last_name !== oldUser.last_name ||\n        user.username !== oldUser.username;\n\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const changedPhoto = oldPhotoId !== newPhotoId;\n\n      const changedAnyBadge = oldUser.pFlags.premium !== user.pFlags.premium ||\n        oldUser.pFlags.verified !== user.pFlags.verified ||\n        oldUser.pFlags.scam !== user.pFlags.scam ||\n        oldUser.pFlags.fake !== user.pFlags.fake;\n\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\n\n      } */\n\n      const wasContact = !!oldUser.pFlags.contact;\n      const newContact = !!user.pFlags.contact;\n\n      safeReplaceObject(oldUser, user);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      if(wasContact !== newContact) {\n        this.onContactUpdated(userId, newContact, wasContact);\n      }\n\n      if(changedPhoto) {\n        this.rootScope.dispatchEvent('avatar_update', user.id.toPeerId());\n      }\n\n      if(changedTitle || changedAnyBadge) {\n        this.rootScope.dispatchEvent('peer_title_edit', user.id.toPeerId());\n      }\n    }\n\n    this.checkPremium(user);\n    this.setUserToStateIfNeeded(user);\n  }\n\n  private checkPremium(user: User) {\n    if(user.pFlags.self) {\n      const isPremium = !!user.pFlags.premium;\n      if(this.rootScope.premium !== isPremium) {\n        this.rootScope.dispatchEvent('premium_toggle', isPremium);\n      }\n    }\n  }\n\n  private setUserToStateIfNeeded(user: User) {\n    if(this.peersStorage.isPeerNeeded(user.id.toPeerId())) {\n      this.storage.set({\n        [user.id]: user\n      });\n    }\n  }\n\n  public isUserOnlineVisible(id: UserId) {\n    return this.getUserStatusForSort(id) > 3;\n  }\n\n  public getUserStatusForSort(status: User['status'] | UserId) {\n    if(typeof(status) !== 'object') {\n      status = this.getUser(status).status;\n    }\n\n    if(status) {\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\n      if(expires) {\n        return expires;\n      }\n\n      /* const timeNow = tsNow(true);\n      switch(status._) {\n        case 'userStatusRecently':\n          return timeNow - 86400 * 3;\n        case 'userStatusLastWeek':\n          return timeNow - 86400 * 7;\n        case 'userStatusLastMonth':\n          return timeNow - 86400 * 30;\n      } */\n      switch(status._) {\n        case 'userStatusRecently':\n          return 3;\n        case 'userStatusLastWeek':\n          return 2;\n        case 'userStatusLastMonth':\n          return 1;\n      }\n    }\n\n    return 0;\n  }\n\n  public getUser(id: User | UserId) {\n    if(isObject<User>(id)) {\n      return id;\n    }\n\n    return this.users[id] || {_: 'userEmpty', id, pFlags: {deleted: true}, access_hash: ''} as any as User;\n  }\n\n  public getSelf() {\n    return this.getUser(this.userId);\n  }\n\n  public isBot(id: UserId) {\n    return this.users[id] && !!this.users[id].pFlags.bot;\n  }\n\n  public isContact(id: UserId) {\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\n  }\n\n  public isRegularUser(id: UserId) {\n    const user = this.users[id];\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\n  }\n\n  public isNonContactUser(id: UserId) {\n    return this.isRegularUser(id) && !this.isContact(id) && id !== this.userId;\n  }\n\n  public hasUser(id: UserId, allowMin?: boolean) {\n    const user = this.users[id];\n    return isObject(user) && (allowMin || !user.pFlags.min);\n  }\n\n  public getUserPhoto(id: UserId) {\n    const user = this.getUser(id);\n\n    return user && user.photo || {\n      _: 'userProfilePhotoEmpty'\n    };\n  }\n\n  public getUserString(id: UserId) {\n    const user = this.getUser(id);\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\n  }\n\n  public getUserInput(id: UserId): InputUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputUserSelf'};\n    }\n\n    return {\n      _: 'inputUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\n    const user = this.getUser(id);\n    // ! do not use it, there are places that don't support it. need explicit peer id\n    // if(user.pFlags?.self) {\n    //   return {_: 'inputPeerSelf'};\n    // }\n\n    return {\n      _: 'inputPeerUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\n    const user = this.getUser(id);\n\n    return {\n      _: 'inputMediaContact',\n      first_name: user.first_name,\n      last_name: user.last_name,\n      phone_number: user.phone,\n      vcard: '',\n      user_id: id\n    };\n  }\n\n  private updateUsersStatuses = () => {\n    const timestampNow = tsNow(true);\n    for(const i in this.users) {\n      const user = this.users[i];\n      this.updateUserStatus(user, timestampNow);\n    }\n  };\n\n  private updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\n    if(user.status &&\n      user.status._ === 'userStatusOnline' &&\n      user.status.expires < timestampNow) {\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\n      this.rootScope.dispatchEvent('user_update', user.id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\n    if(this.isBot(id)) {\n      return;\n    }\n\n    const timestamp = tsNow(true);\n    const onlineTimeFor = 60;\n    if(eventTimestamp) {\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\n        return;\n      }\n    } else if(this.apiUpdatesManager.updatesState.syncLoading) {\n      return;\n    }\n\n    const user = this.getUser(id);\n    if(user?.status &&\n      user.status._ !== 'userStatusOnline' &&\n      user.status._ !== 'userStatusEmpty' &&\n      !user.pFlags.support &&\n      !user.pFlags.deleted) {\n      user.status = {\n        _: 'userStatusOnline',\n        expires: timestamp + onlineTimeFor\n      };\n\n      // user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public importContact(first_name: string, last_name: string, phone: string) {\n    return this.importContacts([{\n      first_name,\n      last_name,\n      phones: [phone]\n    }]).then((userIds) => {\n      if(!userIds.length) {\n        const error = new Error();\n        (error as any).type = 'NO_USER';\n        throw error;\n      }\n\n      return userIds[0];\n    });\n  }\n\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\n    const inputContacts: InputContact[] = [];\n\n    for(let i = 0; i < contacts.length; ++i) {\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\n        inputContacts.push({\n          _: 'inputPhoneContact',\n          client_id: (i << 16 | j).toString(10),\n          phone: contacts[i].phones[j],\n          first_name: contacts[i].first_name,\n          last_name: contacts[i].last_name\n        });\n      }\n    }\n\n    return this.apiManager.invokeApi('contacts.importContacts', {\n      contacts: inputContacts\n    }).then((importedContactsResult) => {\n      this.saveApiUsers(importedContactsResult.users);\n\n      const userIds = importedContactsResult.imported.map((importedContact) => {\n        this.onContactUpdated(importedContact.user_id, true);\n        return importedContact.user_id;\n      });\n\n      return userIds;\n    });\n  }\n\n  public getTopPeers(type: TopPeerType) {\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\n\n    return this.getTopPeersPromises[type] = this.appStateManager.getState().then((state) => {\n      const cached = state.topPeersCache[type];\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) {\n        return cached.peers;\n      }\n\n      return this.apiManager.invokeApi('contacts.getTopPeers', {\n        [type]: true,\n        offset: 0,\n        limit: 15,\n        hash: '0'\n      }).then((result) => {\n        let topPeers: MyTopPeer[] = [];\n        if(result._ === 'contacts.topPeers') {\n          // console.log(result);\n          this.saveApiUsers(result.users);\n          this.appChatsManager.saveApiChats(result.chats);\n\n          if(result.categories.length) {\n            topPeers = result.categories[0].peers.map((topPeer) => {\n              const peerId = getPeerId(topPeer.peer);\n              this.peersStorage.requestPeer(peerId, 'topPeer');\n              return {id: peerId, rating: topPeer.rating};\n            });\n          }\n        }\n\n        state.topPeersCache[type] = {\n          peers: topPeers,\n          cachedTime: Date.now()\n        };\n        this.appStateManager.pushToState('topPeersCache', state.topPeersCache);\n\n        return topPeers;\n      });\n    });\n  }\n\n  public getBlocked(offset = 0, limit = 0) {\n    return this.apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then((contactsBlocked) => {\n      this.saveApiUsers(contactsBlocked.users);\n      this.appChatsManager.saveApiChats(contactsBlocked.chats);\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\n\n      const peerIds: PeerId[] = contactsBlocked.users.map((u) => u.id.toPeerId()).concat(contactsBlocked.chats.map((c) => c.id.toPeerId(true)));\n\n      return {count, peerIds};\n    });\n  }\n\n  public getLocated(\n    lat: number,\n    long: number,\n    accuracy_radius: number,\n    background: boolean = false,\n    self_expires: number = 0\n  ) {\n    const geo_point: InputGeoPoint = {\n      _: 'inputGeoPoint',\n      lat,\n      long,\n      accuracy_radius\n    };\n\n    return this.apiManager.invokeApi('contacts.getLocated', {\n      geo_point,\n      background\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      return updates;\n    });\n  }\n\n  /* public searchContacts(query: string, limit = 20) {\n    return Promise.all([\n      this.getContacts(query),\n      apiManager.invokeApi('contacts.search', {\n        q: query,\n        limit\n      })\n    ]).then((results) => {\n      const [myContacts, peers] = results;\n\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      // * contacts.search returns duplicates in my_results\n      const myResults = new Set(myContacts.concat(peers.my_results.map((p) => appPeersManager.getPeerID(p))));\n\n      const out = {\n        my_results: [...myResults].slice(0, limit),\n        results: peers.results.map((p) => appPeersManager.getPeerID(p))\n      };\n\n      return out;\n    });\n  } */\n  public searchContacts(query: string, limit = 20) {\n    // handle 't.me/username' as 'username'\n    const entities = parseEntities(query);\n    if(entities.length && entities[0].length === query.trim().length && entities[0]._ === 'messageEntityUrl') {\n      try {\n        const url = new URL(wrapUrl(query).url);\n        const path = url.pathname.slice(1);\n        if(path) {\n          query = path;\n        }\n      } catch(err) {}\n    }\n\n    return this.apiManager.invokeApiCacheable('contacts.search', {\n      q: query,\n      limit\n    }, {cacheSeconds: 60}).then((peers) => {\n      this.saveApiUsers(peers.users);\n      this.appChatsManager.saveApiChats(peers.chats);\n\n      const out = {\n        my_results: filterUnique(peers.my_results.map((p) => getPeerId(p))), // ! contacts.search returns duplicates in my_results\n        results: peers.results.map((p) => getPeerId(p))\n      };\n\n      return out;\n    });\n  }\n\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\n    if(isContact !== curIsContact) {\n      if(isContact) {\n        this.pushContact(userId);\n      } else {\n        this.popContact(userId);\n      }\n\n      this.onContactsModified();\n\n      this.rootScope.dispatchEvent('contacts_update', userId);\n    }\n  }\n\n  public updateUsername(username: string) {\n    return this.apiManager.invokeApi('account.updateUsername', {\n      username\n    }).then((user) => {\n      this.saveApiUser(user);\n    });\n  }\n\n  public setUserStatus(userId: UserId, offline: boolean) {\n    if(this.isBot(userId)) {\n      return;\n    }\n\n    const user = this.users[userId];\n    if(user) {\n      const status: UserStatus = offline ? {\n        _: 'userStatusOffline',\n        was_online: tsNow(true)\n      } : {\n        _: 'userStatusOnline',\n        expires: tsNow(true) + 50\n      };\n\n      user.status = status;\n      // user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public updateMyOnlineStatus(offline: boolean) {\n    this.setUserStatus(this.getSelf().id, offline);\n    return this.apiManager.invokeApiSingle('account.updateStatus', {offline});\n  }\n\n  public addContact(userId: UserId, first_name: string, last_name: string, phone: string, showPhone?: true) {\n    /* if(!userId) {\n      return this.importContacts([{\n        first_name,\n        last_name,\n        phones: [phone]\n      }]);\n    } */\n\n    return this.apiManager.invokeApi('contacts.addContact', {\n      id: this.getUserInput(userId),\n      first_name,\n      last_name,\n      phone,\n      add_phone_privacy_exception: showPhone\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      this.onContactUpdated(userId, true);\n    });\n  }\n\n  public deleteContacts(userIds: UserId[]) {\n    return this.apiManager.invokeApi('contacts.deleteContacts', {\n      id: userIds.map((userId) => this.getUserInput(userId))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      userIds.forEach((userId) => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  }\n\n  public isRestricted(userId: UserId) {\n    const user: MTUser.user = this.getUser(userId);\n    const restrictionReasons = user.restriction_reason;\n\n    return !!(user.pFlags.restricted && restrictionReasons && isRestricted(restrictionReasons));\n  }\n\n  public checkUsername(username: string) {\n    return this.apiManager.invokeApi('account.checkUsername', {username});\n  }\n\n  public canSendToUser(userId: UserId) {\n    return canSendToUser(this.getUser(userId));\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {WebPage} from '../../layer';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {AppManager} from './manager';\r\n\r\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\r\n\r\ntype WebPageMessageKey = `${PeerId}_${number}`;\r\n\r\nexport class AppWebPagesManager extends AppManager {\r\n  private webpages: {\r\n    [webPageId: string]: WebPage\r\n  } = {};\r\n  private pendingWebPages: {\r\n    [webPageId: string]: Set<WebPageMessageKey>\r\n  } = {};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateWebPage: (update) => {\r\n        this.saveWebPage(update.webpage);\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\r\n    if(apiWebPage._ === 'webPageNotModified') return;\r\n    const {id} = apiWebPage;\r\n\r\n    const oldWebPage = this.webpages[id];\r\n    const isUpdated = oldWebPage &&\r\n      oldWebPage._ === apiWebPage._ &&\r\n      (oldWebPage as WebPage.webPage).hash === (oldWebPage as WebPage.webPage).hash;\r\n\r\n    if(apiWebPage._ === 'webPage') {\r\n      if(apiWebPage.photo?._ === 'photo') {\r\n        apiWebPage.photo = this.appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\r\n      } else {\r\n        delete apiWebPage.photo;\r\n      }\r\n\r\n      if(apiWebPage.document?._ === 'document') {\r\n        apiWebPage.document = this.appDocsManager.saveDoc(apiWebPage.document, mediaContext);\r\n      } else {\r\n        if(apiWebPage.type === 'document') {\r\n          delete apiWebPage.type;\r\n        }\r\n\r\n        delete apiWebPage.document;\r\n      }\r\n\r\n      const siteName = apiWebPage.site_name;\r\n      const shortTitle = apiWebPage.title || apiWebPage.author || siteName || '';\r\n      if(siteName && shortTitle === siteName) {\r\n        delete apiWebPage.site_name;\r\n      }\r\n\r\n      // delete apiWebPage.description\r\n\r\n      if(!photoTypeSet.has(apiWebPage.type) &&\r\n        !apiWebPage.description &&\r\n        apiWebPage.photo) {\r\n        apiWebPage.type = 'photo';\r\n      }\r\n    }\r\n\r\n    let pendingSet = this.pendingWebPages[id];\r\n    if(messageKey) {\r\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\r\n      pendingSet.add(messageKey);\r\n    }\r\n\r\n    if(oldWebPage === undefined) {\r\n      this.webpages[id] = apiWebPage;\r\n    } else {\r\n      safeReplaceObject(oldWebPage, apiWebPage);\r\n    }\r\n\r\n    if(!messageKey && pendingSet !== undefined && isUpdated) {\r\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\r\n      pendingSet.forEach((value) => {\r\n        const [peerId, mid, isScheduled] = value.split('_');\r\n        msgs.push({\r\n          peerId: peerId.toPeerId(),\r\n          mid: +mid,\r\n          isScheduled: !!isScheduled\r\n        });\r\n      });\r\n\r\n      this.rootScope.dispatchEvent('webpage_updated', {\r\n        id,\r\n        msgs\r\n      });\r\n    }\r\n\r\n    return apiWebPage;\r\n  }\r\n\r\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\r\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\r\n  }\r\n\r\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\r\n    const id = (webPage as WebPage.webPage).id;\r\n    if(!id) return;\r\n\r\n    const set = this.pendingWebPages[id];\r\n    if(set && set.has(messageKey)) {\r\n      set.delete(messageKey);\r\n\r\n      if(!set.size) {\r\n        delete this.pendingWebPages[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  public getCachedWebPage(id: WebPage.webPage['id']) {\r\n    return this.webpages[id];\r\n  }\r\n\r\n  public getWebPage(url: string) {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getWebPage',\r\n      processResult: (webPage) => {\r\n        return this.saveWebPage(webPage);\r\n      },\r\n      params: {\r\n        url\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAs from './readBlobAs';\n\nexport default function readBlobAsArrayBuffer(blob: Blob) {\n  return readBlobAs(blob, 'readAsArrayBuffer');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { IS_WEB_WORKER } from \"../context\";\n\n// const id = IS_WEB_WORKER ? Math.random() * 0x1000 | 0 : 0;\nexport default function readBlobAs(blob: Blob, method: 'readAsText'): Promise<string>;\nexport default function readBlobAs(blob: Blob, method: 'readAsDataURL'): Promise<string>;\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer'): Promise<ArrayBuffer>;\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer' | 'readAsText' | 'readAsDataURL'): Promise<any> {\n  // const perf = performance.now();\n  return new Promise<any>((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (e) => {\n      // console.log(`readBlobAs [${id}] ${method} time ${performance.now() - perf}`);\n      resolve(e.target.result);\n    });\n    reader[method](blob);\n  });\n}\n","export default function fileNameRFC(fileName: string) {\n  // Make filename RFC5987 compatible\n  return encodeURIComponent(fileName).replace(/['()]/g, escape).replace(/\\*/g, '%2A');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getServiceMessagePort} from '../mtproto/mtproto.worker';\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\nimport StreamWriter from './streamWriter';\n\nexport default class DownloadWriter implements StreamWriter {\n  constructor(\n    private serviceMessagePort: ServiceMessagePort<true>,\n    private downloadId: string\n  ) {\n    this.serviceMessagePort = getServiceMessagePort();\n  }\n\n  public async write(part: Uint8Array, offset?: number) {\n    return this.serviceMessagePort.invoke('downloadChunk', {\n      id: this.downloadId,\n      chunk: part\n    });\n  }\n\n  public finalize(saveToStorage?: boolean): Promise<Blob> {\n    return this.serviceMessagePort.invoke('downloadFinalize', this.downloadId).then(() => undefined);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport deferredPromise from '../../helpers/cancellablePromise';\nimport makeError from '../../helpers/makeError';\nimport fileNameRFC from '../../helpers/string/fileNameRFC';\nimport {getServiceMessagePort} from '../mtproto/mtproto.worker';\nimport DownloadWriter from './downloadWriter';\nimport FileStorage from './fileStorage';\nimport StreamWriter from './streamWriter';\n\nexport default class DownloadStorage implements FileStorage {\n  public getFile(fileName: string): Promise<any> {\n    return Promise.reject(makeError('NO_ENTRY_FOUND'));\n  }\n\n  public prepareWriting({fileName, downloadId, size}: {\n    fileName: string,\n    downloadId: string,\n    size: number\n  }) {\n    const headers = {\n      'Content-Type': 'application/octet-stream; charset=utf-8',\n      'Content-Disposition': 'attachment; filename*=UTF-8\\'\\'' + fileNameRFC(fileName),\n      ...(size ? {'Content-Length': size} : {})\n    };\n\n    const serviceMessagePort = getServiceMessagePort();\n    const promise = serviceMessagePort.invoke('download', {\n      headers,\n      id: downloadId\n    });\n\n    const deferred = deferredPromise<void>();\n    deferred.cancel = () => {\n      deferred.reject(makeError('DOWNLOAD_CANCELED'));\n    };\n\n    deferred.catch(() => {\n      getServiceMessagePort().invoke('downloadCancel', downloadId);\n    });\n\n    promise.then(deferred.resolve, deferred.reject);\n\n    return {\n      deferred,\n      getWriter: () => {\n        return new DownloadWriter(serviceMessagePort, downloadId);\n      }\n    };\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ReferenceBytes} from './referenceDatabase';\r\nimport Modes from '../../config/modes';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport {randomLong} from '../../helpers/random';\r\nimport {Document, InputFile, InputFileLocation, InputWebFileLocation, Photo, PhotoSize, UploadFile, UploadWebFile, VideoSize, WebDocument} from '../../layer';\r\nimport {DcId} from '../../types';\r\nimport CacheStorageController from '../files/cacheStorage';\r\nimport {logger, LogTypes} from '../logger';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport noop from '../../helpers/noop';\r\nimport readBlobAsArrayBuffer from '../../helpers/blob/readBlobAsArrayBuffer';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport fixFirefoxSvg from '../../helpers/fixFirefoxSvg';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport MTProtoMessagePort from './mtprotoMessagePort';\r\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\r\nimport type {Progress} from '../appManagers/appDownloadManager';\r\nimport getDownloadMediaDetails from '../appManagers/utils/download/getDownloadMediaDetails';\r\n// import networkStats from './networkStats';\r\nimport getDownloadFileNameFromOptions from '../appManagers/utils/download/getDownloadFileNameFromOptions';\r\nimport StreamWriter from '../files/streamWriter';\r\nimport FileStorage from '../files/fileStorage';\r\nimport {MAX_FILE_SAVE_SIZE} from './mtproto_config';\r\nimport throttle from '../../helpers/schedulers/throttle';\r\nimport makeError from '../../helpers/makeError';\r\nimport readBlobAsUint8Array from '../../helpers/blob/readBlobAsUint8Array';\r\nimport DownloadStorage from '../files/downloadStorage';\r\nimport copy from '../../helpers/object/copy';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\n\r\ntype Delayed = {\r\n  offset: number,\r\n  writePromise: CancellablePromise<void>,\r\n  writeDeferred: CancellablePromise<void>\r\n};\r\n\r\nexport type DownloadOptions = {\r\n  dcId: DcId,\r\n  location: InputFileLocation | InputWebFileLocation,\r\n  size?: number,\r\n  fileName?: string,\r\n  mimeType?: string,\r\n  limitPart?: number,\r\n  queueId?: number,\r\n  onlyCache?: boolean,\r\n  downloadId?: string\r\n  // getFileMethod: Parameters<CacheStorageController['getFile']>[1]\r\n};\r\n\r\nexport type DownloadMediaOptions = {\r\n  media: Photo.photo | Document.document | WebDocument,\r\n  thumb?: PhotoSize | VideoSize,\r\n  queueId?: number,\r\n  onlyCache?: boolean,\r\n  downloadId?: string\r\n};\r\n\r\ntype DownloadPromise = CancellablePromise<Blob>;\r\n\r\nexport type MyUploadFile = UploadFile.uploadFile | UploadWebFile.uploadWebFile;\r\n\r\n// export interface RefreshReferenceTask extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n// };\r\n\r\n// export interface RefreshReferenceTaskResponse extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n//   originalPayload: ReferenceBytes\r\n// };\r\n\r\nconst MAX_DOWNLOAD_FILE_PART_SIZE = 1 * 1024 * 1024;\r\nconst MAX_UPLOAD_FILE_PART_SIZE = 512 * 1024;\r\nconst MIN_PART_SIZE = 128 * 1024;\r\nconst AVG_PART_SIZE = 512 * 1024;\r\n\r\nconst REGULAR_DOWNLOAD_DELTA = (9 * 512 * 1024) / MIN_PART_SIZE;\r\n// const PREMIUM_DOWNLOAD_DELTA = REGULAR_DOWNLOAD_DELTA * 2;\r\nconst PREMIUM_DOWNLOAD_DELTA = (56 * 512 * 1024) / MIN_PART_SIZE;\r\n\r\nconst IGNORE_ERRORS: Set<ErrorType> = new Set([\r\n  'DOWNLOAD_CANCELED',\r\n  'UPLOAD_CANCELED',\r\n  'UNKNOWN',\r\n  'NO_NEW_CONTEXT'\r\n]);\r\n\r\nexport class ApiFileManager extends AppManager {\r\n  private cacheStorage = new CacheStorageController('cachedFiles');\r\n  private downloadStorage = new DownloadStorage();\r\n\r\n  private downloadPromises: {\r\n    [fileName: string]: DownloadPromise\r\n  } = {};\r\n\r\n  // private downloadToDiscPromises: {\r\n  //   [fileName: string]: DownloadPromise\r\n  // } = {};\r\n\r\n  private uploadPromises: {\r\n    [fileName: string]: CancellablePromise<InputFile>\r\n  } = {};\r\n\r\n  private downloadPulls: {\r\n    [dcId: string]: Array<{\r\n      id: number,\r\n      queueId: number,\r\n      cb: () => Promise<MyUploadFile | void>,\r\n      deferred: {\r\n        resolve: (...args: any[]) => void,\r\n        reject: (...args: any[]) => void\r\n      },\r\n      activeDelta: number\r\n    }>\r\n  } = {};\r\n  private downloadActives: {[dcId: string]: number} = {};\r\n\r\n  public refreshReferencePromises: {\r\n    [referenceHex: string]: {\r\n      deferred: CancellablePromise<ReferenceBytes>,\r\n      timeout?: number\r\n    }\r\n  } = {};\r\n\r\n  private log: ReturnType<typeof logger> = logger('AFM', LogTypes.Error | LogTypes.Log);\r\n  private tempId = 0;\r\n  private queueId = 0;\r\n  private debug = Modes.debug;\r\n\r\n  private maxUploadParts = 4000;\r\n  private maxDownloadParts = 8000;\r\n  private webFileDcId: DcId;\r\n\r\n  protected after() {\r\n    setInterval(() => { // clear old promises\r\n      for(const hex in this.refreshReferencePromises) {\r\n        const {deferred} = this.refreshReferencePromises[hex];\r\n        if(deferred.isFulfilled || deferred.isRejected) {\r\n          delete this.refreshReferencePromises[hex];\r\n        }\r\n      }\r\n    }, 1800e3);\r\n\r\n    this.rootScope.addEventListener('config', (config) => {\r\n      this.webFileDcId = config.webfile_dc_id;\r\n    });\r\n\r\n    this.rootScope.addEventListener('app_config', (appConfig) => {\r\n      this.maxUploadParts = this.rootScope.premium ? appConfig.upload_max_fileparts_premium : appConfig.upload_max_fileparts_default;\r\n      this.maxDownloadParts = appConfig.upload_max_fileparts_premium;\r\n    });\r\n  }\r\n\r\n  private downloadRequest(dcId: 'upload', id: number, cb: () => Promise<void>, activeDelta: number, queueId?: number): Promise<void>;\r\n  private downloadRequest(dcId: number, id: number, cb: () => Promise<MyUploadFile>, activeDelta: number, queueId?: number): Promise<MyUploadFile>;\r\n  private downloadRequest(dcId: number | string, id: number, cb: () => Promise<MyUploadFile | void>, activeDelta: number, queueId: number = 0) {\r\n    if(this.downloadPulls[dcId] === undefined) {\r\n      this.downloadPulls[dcId] = [];\r\n      this.downloadActives[dcId] = 0;\r\n    }\r\n\r\n    const downloadPull = this.downloadPulls[dcId];\r\n\r\n    const promise = new Promise<MyUploadFile | void>((resolve, reject) => {\r\n      downloadPull.push({id, queueId, cb, deferred: {resolve, reject}, activeDelta});\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.downloadCheck(dcId);\r\n    }, 0);\r\n\r\n    return promise;\r\n  }\r\n\r\n  private downloadCheck(dcId: string | number) {\r\n    const downloadPull = this.downloadPulls[dcId];\r\n    const downloadLimit = /* dcId === 'upload' ? 24 :  */(this.rootScope.premium ? PREMIUM_DOWNLOAD_DELTA : REGULAR_DOWNLOAD_DELTA);\r\n    // const downloadLimit = Infinity;\r\n\r\n    if(this.downloadActives[dcId] >= downloadLimit || !downloadPull?.length) {\r\n      return false;\r\n    }\r\n\r\n    // const data = downloadPull.shift();\r\n    const data = findAndSplice(downloadPull, (d) => d.queueId === 0) || findAndSplice(downloadPull, (d) => d.queueId === this.queueId) || downloadPull.shift();\r\n    const activeDelta = data.activeDelta || 1;\r\n\r\n    this.downloadActives[dcId] += activeDelta;\r\n\r\n    const promise = data.cb();\r\n    // const networkPromise = networkStats.waitForChunk(dcId as DcId, activeDelta * MIN_PART_SIZE);\r\n    /* Promise.race([\r\n      promise\r\n      // networkPromise\r\n    ]) */promise.then(() => {\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n\r\n      // networkPromise.resolve();\r\n    }, (error: ApiError) => {\r\n      if(!error?.type || !IGNORE_ERRORS.has(error.type)) {\r\n        this.log.error('downloadCheck error:', error);\r\n      }\r\n\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n\r\n      // networkPromise.reject(error);\r\n    }).finally(() => {\r\n      promise.then(data.deferred.resolve, data.deferred.reject);\r\n    });\r\n  }\r\n\r\n  public setQueueId(queueId: number) {\r\n    // this.log.error('setQueueId', queueId);\r\n    this.queueId = queueId;\r\n  }\r\n\r\n  private getFileStorage() {\r\n    return this.cacheStorage;\r\n  }\r\n\r\n  public cancelDownload(fileName: string) {\r\n    const promises = [this.downloadPromises[fileName], this.uploadPromises[fileName]].filter(Boolean);\r\n    let canceled = false;\r\n    for(let i = 0, length = promises.length; i < length; ++i) {\r\n      const promise = promises[i];\r\n      if(promise && !promise.isRejected && !promise.isFulfilled) {\r\n        promise.cancel();\r\n        canceled = true;\r\n      }\r\n    }\r\n\r\n    return canceled;\r\n  }\r\n\r\n  public requestWebFilePart(dcId: DcId, location: InputWebFileLocation, offset: number, limit: number, id = 0, queueId = 0, checkCancel?: () => void) {\r\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\r\n      checkCancel?.();\r\n\r\n      return this.apiManager.invokeApi('upload.getWebFile', {\r\n        location,\r\n        offset,\r\n        limit\r\n      }, {\r\n        dcId,\r\n        fileDownload: true\r\n      });\r\n    }, this.getDelta(limit), queueId);\r\n  }\r\n\r\n  public requestFilePart(\r\n    dcId: DcId,\r\n    location: InputFileLocation,\r\n    offset: number,\r\n    limit: number,\r\n    id = 0,\r\n    queueId = 0,\r\n    checkCancel?: () => void\r\n  ) {\r\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\r\n      checkCancel?.();\r\n\r\n      const invoke = async(): Promise<MyUploadFile> => {\r\n        checkCancel?.(); // do not remove async, because checkCancel will throw an error\r\n\r\n        // * IMPORTANT: reference can be changed in previous request\r\n        const reference = (location as InputFileLocation.inputDocumentFileLocation).file_reference?.slice();\r\n\r\n        const promise = // pause(offset > (100 * 1024 * 1024) ? 10000000 : 0).then(() =>\r\n        this.apiManager.invokeApi('upload.getFile', {\r\n          location,\r\n          offset,\r\n          limit\r\n        }, {\r\n          dcId,\r\n          fileDownload: true\r\n        }) as Promise<MyUploadFile>/* ) */;\r\n\r\n        return promise.catch((err: ApiError) => {\r\n          checkCancel?.();\r\n\r\n          if(err.type === 'FILE_REFERENCE_EXPIRED') {\r\n            return this.refreshReference(location as InputFileLocation.inputDocumentFileLocation, reference).then(invoke);\r\n          }\r\n\r\n          throw err;\r\n        });\r\n      };\r\n\r\n      assumeType<InputFileLocation.inputDocumentFileLocation>(location);\r\n      const reference = location.file_reference;\r\n      if(reference && !location.checkedReference) { // check stream's location because it's new every call\r\n        location.checkedReference = true;\r\n        const hex = bytesToHex(reference);\r\n        if(this.refreshReferencePromises[hex]) {\r\n          return this.refreshReference(location, reference).then(invoke);\r\n        }\r\n      }\r\n\r\n      return invoke();\r\n    }, this.getDelta(limit), queueId);\r\n  }\r\n\r\n  /* private convertBlobToBytes(blob: Blob) {\r\n    return blob.arrayBuffer().then((buffer) => new Uint8Array(buffer));\r\n  } */\r\n\r\n  private getDelta(bytes: number) {\r\n    return bytes / MIN_PART_SIZE;\r\n  }\r\n\r\n  private getLimitPart(size: number, isUpload: boolean): number {\r\n    if(!size) { // * sometimes size can be 0 (e.g. avatars, webDocuments)\r\n      return AVG_PART_SIZE;\r\n    }\r\n\r\n    // return 1 * 1024 * 1024;\r\n\r\n    let bytes = MIN_PART_SIZE;\r\n\r\n    const maxParts = isUpload ? this.maxUploadParts : this.maxDownloadParts;\r\n    const maxPartSize = isUpload ? MAX_UPLOAD_FILE_PART_SIZE : MAX_DOWNLOAD_FILE_PART_SIZE;\r\n    // usually it will stick to 512Kb size if the file is too big\r\n    while((size / bytes) > maxParts && bytes < maxPartSize) {\r\n      bytes *= 2;\r\n    }\r\n    /* if(size < 1e6 || !size) bytes = 512;\r\n    else if(size < 3e6) bytes = 256;\r\n    else bytes = 128; */\r\n\r\n    return bytes;\r\n  }\r\n\r\n  private uncompressTGS = (bytes: Uint8Array, fileName: string) => {\r\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', bytes.slice().buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private uncompressTGV = (bytes: Uint8Array, fileName: string) => {\r\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    const buffer = bytes.slice().buffer;\r\n    if(getEnvironment().IS_FIREFOX) {\r\n      return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, true).then((text) => {\r\n        return fixFirefoxSvg(text as string);\r\n      }).then((text) => {\r\n        const textEncoder = new TextEncoder();\r\n        return textEncoder.encode(text);\r\n      });\r\n    }\r\n\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private convertWebp = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertWebp', {fileName, bytes});\r\n  };\r\n\r\n  private convertOpus = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertOpus', {fileName, bytes});\r\n  };\r\n\r\n  private refreshReference(\r\n    inputFileLocation: InputFileLocation.inputDocumentFileLocation,\r\n    reference: typeof inputFileLocation['file_reference'],\r\n    hex = bytesToHex(reference)\r\n  ) {\r\n    let r = this.refreshReferencePromises[hex];\r\n    if(!r) {\r\n      const deferred = deferredPromise<ReferenceBytes>();\r\n\r\n      r = this.refreshReferencePromises[hex] = {\r\n        deferred\r\n\r\n        // ! I don't remember what it was for...\r\n        // timeout: ctx.setTimeout(() => {\r\n        //   this.log.error('Didn\\'t refresh the reference:', inputFileLocation);\r\n        //   deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\r\n        // }, 60000)\r\n      };\r\n\r\n      // deferred.catch(noop).finally(() => {\r\n      //   clearTimeout(r.timeout);\r\n      // });\r\n\r\n      this.referenceDatabase.refreshReference(reference).then((reference) => {\r\n        if(hex === bytesToHex(reference)) {\r\n          deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\r\n        }\r\n\r\n        deferred.resolve(reference);\r\n      }, deferred.reject);\r\n    }\r\n\r\n    // have to replace file_reference in any way, because location can be different everytime if it's stream\r\n    return r.deferred.then((reference) => {\r\n      inputFileLocation.file_reference = reference;\r\n    });\r\n  }\r\n\r\n  public isDownloading(fileName: string) {\r\n    return !!this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getDownload(fileName: string) {\r\n    return this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getUpload(fileName: string) {\r\n    return this.uploadPromises[fileName];\r\n  }\r\n\r\n  private getConvertMethod(mimeType: string) {\r\n    let process: ApiFileManager['uncompressTGS'] | ApiFileManager['convertWebp'];\r\n    if(mimeType === 'application/x-tgwallpattern') {\r\n      process = this.uncompressTGV;\r\n      mimeType = 'image/svg+xml';\r\n    } else if(mimeType === 'image/webp' && !getEnvironment().IS_WEBP_SUPPORTED) {\r\n      process = this.convertWebp;\r\n      mimeType = 'image/png';\r\n    } else if(mimeType === 'application/x-tgsticker') {\r\n      process = this.uncompressTGS;\r\n      mimeType = 'application/json';\r\n    } else if(mimeType === 'audio/ogg' && !getEnvironment().IS_OPUS_SUPPORTED) {\r\n      process = this.convertOpus;\r\n      mimeType = 'audio/wav';\r\n    }\r\n\r\n    return {mimeType, process};\r\n  }\r\n\r\n  private allocateDeferredPromises(startOffset: number, size: number, limitPart: number) {\r\n    const delayed: Delayed[] = [];\r\n    let offset = startOffset;\r\n    let writePromise: CancellablePromise<void> = Promise.resolve(),\r\n      writeDeferred: CancellablePromise<void>;\r\n    do {\r\n      writeDeferred = deferredPromise<void>();\r\n      delayed.push({offset, writePromise, writeDeferred});\r\n      writePromise = writeDeferred;\r\n      offset += limitPart;\r\n    } while(offset < size);\r\n\r\n    return delayed;\r\n  }\r\n\r\n  public download(options: DownloadOptions): DownloadPromise {\r\n    const size = options.size ?? 0;\r\n    const {dcId, location, downloadId} = options;\r\n\r\n    const originalMimeType = options.mimeType;\r\n    const convertMethod = this.getConvertMethod(originalMimeType);\r\n    const {process} = convertMethod;\r\n    options.mimeType = convertMethod.mimeType || 'image/jpeg';\r\n\r\n    const fileName = getDownloadFileNameFromOptions(options);\r\n    const cacheFileName = downloadId ? getDownloadFileNameFromOptions({...copy(options), downloadId: undefined}) : fileName;\r\n    const cacheStorage: FileStorage = this.getFileStorage();\r\n    const downloadStorage: FileStorage = downloadId ? this.downloadStorage : undefined;\r\n    let deferred: DownloadPromise = downloadId ? undefined : this.downloadPromises[fileName];\r\n\r\n    this.debug && this.log('downloadFile', fileName, options);\r\n\r\n    if(deferred) {\r\n      return deferred;\r\n    }\r\n\r\n    // if(deferred) {\r\n    //   if(size) {\r\n    //     return deferred.then(async(blob) => {\r\n    //       if(blob instanceof Blob && blob.size < size) {\r\n    //         this.debug && this.log('downloadFile need to deleteFile, wrong size:', blob.size, size);\r\n\r\n    //         try {\r\n    //           await this.delete(fileName);\r\n    //         } finally {\r\n    //           return this.download(options);\r\n    //         }\r\n    //       } else {\r\n    //         return blob;\r\n    //       }\r\n    //     });\r\n    //   } else {\r\n    //     return deferred;\r\n    //   }\r\n    // }\r\n\r\n    const errorHandler = (item: typeof cachePrepared, error: ApiError) => {\r\n      if(item?.error) {\r\n        return;\r\n      }\r\n\r\n      for(const p of prepared) {\r\n        if(item && item !== p) {\r\n          continue;\r\n        }\r\n\r\n        p.error = error;\r\n        p.deferred.reject(error);\r\n      }\r\n    };\r\n\r\n    const id = this.tempId++;\r\n    const limitPart = options.limitPart || this.getLimitPart(size, false);\r\n\r\n    let getFile: FileStorage['getFile'] = cacheStorage.getFile.bind(cacheStorage);\r\n\r\n    let cachePrepared: ReturnType<FileStorage['prepareWriting']> & {writer?: StreamWriter, error?: ApiError},\r\n      downloadPrepared: typeof cachePrepared;\r\n    const prepared: (typeof cachePrepared)[] = [];\r\n    const possibleSize = size || limitPart;\r\n\r\n    const getErrorsCount = () => prepared.reduce((acc, item) => acc + +!!item.error, 0);\r\n\r\n    const attach = (item: typeof cachePrepared, fileName: string) => {\r\n      const {deferred} = item;\r\n      const _errorHandler = errorHandler.bind(null, item);\r\n\r\n      deferred.cancel = () => deferred.reject(makeError('DOWNLOAD_CANCELED'));\r\n      deferred.catch((error) => {\r\n        _errorHandler(error);\r\n        item.writer?.truncate?.();\r\n      }).finally(() => {\r\n        if(this.downloadPromises[fileName] === deferred) {\r\n          delete this.downloadPromises[fileName];\r\n        }\r\n\r\n        delete item.writer;\r\n        // indexOfAndSplice(prepared, item);\r\n      });\r\n\r\n      this.downloadPromises[fileName] = deferred;\r\n\r\n      prepared.push(item);\r\n    };\r\n\r\n    if(cacheStorage && (!downloadStorage || possibleSize <= MAX_FILE_SAVE_SIZE)) {\r\n      cachePrepared = cacheStorage.prepareWriting(cacheFileName, possibleSize, options.mimeType)\r\n      attach(cachePrepared, cacheFileName);\r\n    }\r\n\r\n    if(downloadStorage) {\r\n      downloadPrepared = downloadStorage.prepareWriting({\r\n        fileName: options.fileName, // it's doc file_name\r\n        downloadId,\r\n        size: possibleSize\r\n      });\r\n      attach(downloadPrepared, fileName);\r\n\r\n      if(cachePrepared) { // cancel cache too\r\n        downloadPrepared.deferred.catch((err) => cachePrepared.deferred.reject(err));\r\n      }\r\n\r\n      // this.downloadToDiscPromises[cacheFileName] = deferred;\r\n      // deferred.catch(noop).finally(() => {\r\n      //   if(this.downloadToDiscPromises[cacheFileName] === deferred) {\r\n      //     delete this.downloadToDiscPromises[cacheFileName];\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    deferred = downloadPrepared?.deferred ?? cachePrepared.deferred;\r\n\r\n    if(downloadStorage && process) { // then have to load file again\r\n      getFile = downloadStorage.getFile.bind(downloadStorage);\r\n    }\r\n\r\n    getFile(cacheFileName).then(async(blob: Blob) => {\r\n      checkCancel();\r\n\r\n      // if(blob.size < size) {\r\n      //   if(!options.onlyCache) {\r\n      //     await this.delete(cacheFileName);\r\n      //     checkCancel();\r\n      //   }\r\n\r\n      //   throw makeError('NO_ENTRY_FOUND');\r\n      // }\r\n\r\n      if(downloadPrepared) {\r\n        const writer = downloadPrepared.writer = downloadPrepared.getWriter();\r\n        checkCancel();\r\n\r\n        const arr = await readBlobAsUint8Array(blob);\r\n        checkCancel();\r\n        await writer.write(arr);\r\n        checkCancel();\r\n\r\n        downloadPrepared.deferred.resolve(await writer.finalize());\r\n      }\r\n\r\n      if(cachePrepared) {\r\n        cachePrepared.deferred.resolve(blob);\r\n      }\r\n    }).catch(async(err: ApiError) => {\r\n      if(options.onlyCache) {\r\n        errorHandler(null, err);\r\n        return;\r\n      }\r\n\r\n      prepared.forEach((p) => {\r\n        p.writer = p.getWriter();\r\n      });\r\n\r\n      const maxRequests = Infinity;\r\n\r\n      const isWebFile = location._ === 'inputWebFileLocation';\r\n      const requestPart = (isWebFile ? this.requestWebFilePart : this.requestFilePart).bind(this);\r\n\r\n      if(isWebFile && this.webFileDcId === undefined) {\r\n        await this.apiManager.getConfig();\r\n        checkCancel();\r\n      }\r\n\r\n      const delayed = this.allocateDeferredPromises(0, size, limitPart);\r\n\r\n      const progress: Progress = {done: 0, offset: 0, total: size, fileName};\r\n      const dispatchProgress = () => {\r\n        try {\r\n          checkCancel();\r\n          progress.done = done;\r\n          this.rootScope.dispatchEvent('download_progress', progress);\r\n        } catch(err) {}\r\n      };\r\n\r\n      const throttledDispatchProgress = throttle(dispatchProgress, 50, true);\r\n\r\n      let done = 0;\r\n      const superpuper = async() => {\r\n        const {offset, writePromise, writeDeferred} = delayed.shift();\r\n        try {\r\n          checkCancel();\r\n\r\n          const requestPerf = performance.now();\r\n          const result = await requestPart(dcId, location as any, offset, limitPart, id, options.queueId, checkCancel);\r\n          const requestTime = performance.now() - requestPerf;\r\n\r\n          const bytes = result.bytes;\r\n\r\n          if(delayed.length) {\r\n            superpuper();\r\n          }\r\n\r\n          const byteLength = bytes.byteLength;\r\n          this.debug && this.log('downloadFile requestFilePart result:', fileName, result);\r\n          const isFinal = (offset + limitPart) >= size || !byteLength;\r\n          if(byteLength) {\r\n            done += byteLength;\r\n\r\n            if(isFinal) {\r\n              dispatchProgress();\r\n            } else {\r\n              throttledDispatchProgress();\r\n            }\r\n\r\n            const writeQueuePerf = performance.now();\r\n            await writePromise;\r\n            checkCancel();\r\n            const writeQueueTime = performance.now() - writeQueuePerf;\r\n\r\n            const perf = performance.now();\r\n            await Promise.all(prepared.map(({writer}) => writer?.write(bytes, offset)));\r\n            checkCancel();\r\n            // downloadId && this.log('write time', performance.now() - perf, 'request time', requestTime, 'queue time', writeQueueTime);\r\n          }\r\n\r\n          if(isFinal && process) {\r\n            const promises = prepared\r\n            .filter(({writer}) => writer?.getParts && writer.replaceParts)\r\n            .map(async({writer}) => {\r\n              const bytes = writer.getParts();\r\n              const processedResult = await process(bytes, cacheFileName);\r\n              writer.replaceParts(processedResult);\r\n            });\r\n\r\n            await Promise.all(promises);\r\n            checkCancel();\r\n          }\r\n\r\n          writeDeferred.resolve();\r\n\r\n          if(isFinal) {\r\n            const realSize = size || byteLength;\r\n            if(!size || byteLength < size) {\r\n              prepared.forEach(({writer}) => writer?.trim?.(realSize));\r\n            }\r\n\r\n            const saveToStorage = realSize <= MAX_FILE_SAVE_SIZE;\r\n            prepared.forEach((item) => {\r\n              const {deferred, writer} = item;\r\n              if(deferred.isFulfilled || deferred.isRejected || !writer) {\r\n                return;\r\n              }\r\n\r\n              const result = writer.finalize(saveToStorage);\r\n              deferred.resolve(result);\r\n            });\r\n          }\r\n        } catch(err) {\r\n          errorHandler(null, err as ApiError);\r\n        }\r\n      };\r\n\r\n      for(let i = 0, length = Math.min(maxRequests, delayed.length); i < length; ++i) {\r\n        superpuper();\r\n      }\r\n    }).catch(noop);\r\n\r\n    const checkCancel = () => {\r\n      if(getErrorsCount() === prepared.length) {\r\n        throw prepared[0].error;\r\n      }\r\n    };\r\n\r\n    return deferred;\r\n  }\r\n\r\n  public downloadMedia(options: DownloadMediaOptions): DownloadPromise {\r\n    let {media, thumb} = options;\r\n    const isPhoto = media._ === 'photo';\r\n    if(isPhoto && !thumb) {\r\n      return Promise.reject('preloadPhoto photoEmpty!');\r\n    }\r\n\r\n    // get original instance with correct file_reference instead of using copies\r\n    const isDocument = media._ === 'document';\r\n    // const isWebDocument = media._ === 'webDocument';\r\n    if(isDocument) media = this.appDocsManager.getDoc((media as Document.document).id);\r\n    else if(isPhoto) media = this.appPhotosManager.getPhoto((media as Photo.photo).id);\r\n\r\n    const {fileName, downloadOptions} = getDownloadMediaDetails(options);\r\n\r\n    let promise = this.getDownload(fileName);\r\n    if(!promise) {\r\n      promise = this.download(downloadOptions);\r\n\r\n      if(isDocument && !thumb) {\r\n        this.rootScope.dispatchEvent('document_downloading', (media as Document.document).id);\r\n        promise.catch(noop).finally(() => {\r\n          this.rootScope.dispatchEvent('document_downloaded', (media as Document.document).id);\r\n        });\r\n      }\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public downloadMediaURL(options: DownloadMediaOptions): Promise<string> {\r\n    const {media, thumb} = options;\r\n\r\n    let cacheContext = this.thumbsStorage.getCacheContext(media as any, thumb?.type);\r\n    if((thumb ? (cacheContext.downloaded >= ('size' in thumb ? thumb.size : 0)) : true) && cacheContext.url) {\r\n      return Promise.resolve(cacheContext.url);\r\n    }\r\n\r\n    return this.downloadMedia(options).then((blob) => {\r\n      if(!cacheContext.downloaded || cacheContext.downloaded < blob.size) {\r\n        const url = URL.createObjectURL(blob);\r\n        cacheContext = this.thumbsStorage.setCacheContextURL(media as any, cacheContext.type, url, blob.size);\r\n      }\r\n\r\n      return cacheContext.url;\r\n    });\r\n  }\r\n\r\n  public downloadMediaVoid(options: DownloadMediaOptions) {\r\n    return this.downloadMedia(options).then(noop);\r\n  }\r\n\r\n  private delete(fileName: string) {\r\n    delete this.downloadPromises[fileName];\r\n    return this.getFileStorage().delete(fileName);\r\n  }\r\n\r\n  public upload({file, fileName}: {file: Blob | File, fileName?: string}) {\r\n    fileName ||= getFileNameForUpload(file);\r\n\r\n    const fileSize = file.size;\r\n    const isBigFile = fileSize >= 10485760;\r\n    const partSize = this.getLimitPart(fileSize, true);\r\n    const activeDelta = this.getDelta(partSize);\r\n    const totalParts = Math.ceil(fileSize / partSize);\r\n    const fileId = randomLong();\r\n    const resultInputFile: InputFile = {\r\n      _: isBigFile ? 'inputFileBig' : 'inputFile',\r\n      id: fileId as any,\r\n      parts: totalParts,\r\n      name: fileName,\r\n      md5_checksum: ''\r\n    };\r\n\r\n    const deferred = deferredPromise<typeof resultInputFile>();\r\n    if(totalParts > this.maxUploadParts) {\r\n      deferred.reject(makeError('FILE_TOO_BIG'));\r\n      return deferred;\r\n    }\r\n\r\n    let canceled = false, resolved = false;\r\n    let errorHandler = (error: ApiError) => {\r\n      if(error?.type !== 'UPLOAD_CANCELED') {\r\n        this.log.error('Up Error', error);\r\n      }\r\n\r\n      deferred.reject(error);\r\n      canceled = true;\r\n      errorHandler = noop;\r\n    };\r\n\r\n    const method = isBigFile ? 'upload.saveBigFilePart' : 'upload.saveFilePart';\r\n    const id = this.tempId++;\r\n\r\n    const self = this;\r\n    function* generator() {\r\n      let _part = 0, doneParts = 0;\r\n      for(let offset = 0; offset < fileSize; offset += partSize) {\r\n        const part = _part++; // 0, 1\r\n        yield self.downloadRequest('upload', id, async() => {\r\n          checkCancel();\r\n\r\n          const blob = file.slice(offset, offset + partSize);\r\n          const buffer = await readBlobAsArrayBuffer(blob);\r\n          checkCancel();\r\n\r\n          self.debug && self.log('Upload file part, isBig:', isBigFile, part, buffer.byteLength, new Uint8Array(buffer).length, new Uint8Array(buffer).slice().length);\r\n\r\n          return self.apiManager.invokeApi(method, {\r\n            file_id: fileId,\r\n            file_part: part,\r\n            file_total_parts: totalParts,\r\n            bytes: buffer\r\n          } as any, {\r\n            fileUpload: true\r\n          }).then(() => {\r\n            if(canceled) {\r\n              return;\r\n            }\r\n\r\n            ++doneParts;\r\n            const progress: Progress = {done: doneParts * partSize, offset, total: fileSize, fileName};\r\n            deferred.notify(progress);\r\n\r\n            if(doneParts >= totalParts) {\r\n              deferred.resolve(resultInputFile);\r\n              resolved = true;\r\n            }\r\n          }, errorHandler);\r\n        }, activeDelta).catch(errorHandler);\r\n      }\r\n    }\r\n\r\n    const it = generator();\r\n    const process = () => {\r\n      if(canceled) return;\r\n      const r = it.next();\r\n      if(r.done || canceled) return;\r\n      (r.value as Promise<void>).then(process);\r\n    };\r\n\r\n    const maxRequests = Infinity;\r\n    for(let i = 0, length = Math.min(maxRequests, totalParts); i < length; ++i) {\r\n      process();\r\n    }\r\n\r\n    const checkCancel = () => {\r\n      if(canceled) {\r\n        throw makeError('UPLOAD_CANCELED');\r\n      }\r\n    };\r\n\r\n    deferred.cancel = () => {\r\n      if(!canceled && !resolved) {\r\n        canceled = true;\r\n        errorHandler(makeError('UPLOAD_CANCELED'));\r\n      }\r\n    };\r\n\r\n    deferred.notify = (progress: Progress) => {\r\n      this.rootScope.dispatchEvent('download_progress', progress);\r\n    };\r\n\r\n    deferred.finally(() => {\r\n      if(this.uploadPromises[fileName] === deferred) {\r\n        delete this.uploadPromises[fileName];\r\n      }\r\n    });\r\n\r\n    return this.uploadPromises[fileName] = deferred;\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function fixFirefoxSvg(text: string) {\n  const svgIndex = text.indexOf('<svg');\n  if(svgIndex !== 0) {\n    text = text.slice(svgIndex);\n  }\n\n  const [_, __, width, height] = text.match(/viewBox=\"(.+?)\"/)[1].split(' ');\n  text = text.replace(/>/, ` width=\"${width}\" height=\"${height}\">`).replace(/[^\\x00-\\x7F]/g, '');\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAsArrayBuffer from './readBlobAsArrayBuffer';\n\nexport default function readBlobAsUint8Array(blob: Blob) {\n  return readBlobAsArrayBuffer(blob).then((buffer) => new Uint8Array(buffer));\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from '../../environment/ctx';\nimport {ignoreRestrictionReasons} from '../../helpers/restrictions';\nimport {Config, MethodDeclMap, User} from '../../layer';\nimport {InvokeApiOptions} from '../../types';\nimport {AppManager} from '../appManagers/manager';\nimport {MTAppConfig} from './appConfig';\nimport {UserAuth} from './mtproto_config';\nimport {MTMessage} from './networker';\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport default abstract class ApiManagerMethods extends AppManager {\n  private afterMessageIdTemp: number;\n  private hashes: {[method: string]: HashOptions} = {};\n  private apiPromisesSingleProcess: {\n    [q: string]: Map<any, Promise<any>>\n  } = {};\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  private config: Config;\n  private appConfig: MTAppConfig;\n\n  constructor() {\n    super();\n    this.afterMessageIdTemp = 0;\n  }\n\n  abstract setUserAuth(userAuth: UserAuth | UserId): Promise<void>;\n\n  public setUser(user: User) {\n    // appUsersManager.saveApiUser(user);\n    return this.setUserAuth(user.id);\n  }\n\n  abstract invokeApi<T extends keyof MethodDeclMap>(method: T, params?: MethodDeclMap[T]['req'], options?: InvokeApiOptions): Promise<MethodDeclMap[T]['res']>;\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n\n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    // console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap, R>(o: {\n    method: T,\n    processResult?: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: Omit<MethodDeclMap[T]['req'], 'hash'>,\n    options?: InvokeApiOptions & {cacheKey?: string}\n  }) {\n    // @ts-ignore\n    o.params ??= {};\n    o.options ??= {};\n    // console.log('will invokeApi:', method, params, options);\n\n    const {params, options, method} = o;\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        (params as any).hash = cached.hash;\n      }\n    }\n\n    return this.invokeApiSingleProcess<T, R>({\n      method,\n      processResult: (result) => {\n        if(result._.includes('NotModified')) {\n          // this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n          return cached.result;\n        }\n\n        if(result.hash/*  || result.messages */) {\n          const hash = result.hash/*  || this.computeHash(result.messages) */;\n\n          if(!this.hashes[method]) this.hashes[method] = {};\n          this.hashes[method][queryJSON] = {\n            hash,\n            result\n          };\n        }\n\n        if(o.processResult) {\n          return o.processResult(result);\n        }\n\n        return result;\n      },\n      params,\n      options\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    const cache = this.apiPromisesSingle;\n    if(cache[q]) {\n      return cache[q];\n    }\n\n    return cache[q] = this.invokeApi(method, params, options).finally(() => {\n      delete cache[q];\n    });\n  }\n\n  public invokeApiSingleProcess<T extends keyof MethodDeclMap, R>(o: {\n    method: T,\n    processResult: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: MethodDeclMap[T]['req'],\n    options?: InvokeApiOptions & {cacheKey?: string, overwrite?: boolean}\n  }): Promise<Awaited<R>> {\n    o.params ??= {};\n    o.options ??= {};\n\n    const {method, processResult, processError, params, options} = o;\n    const cache = this.apiPromisesSingleProcess;\n    const cacheKey = options.cacheKey || JSON.stringify(params);\n    const map = cache[method] ?? (cache[method] = new Map());\n    const oldPromise = map.get(cacheKey);\n    if(oldPromise) {\n      return oldPromise;\n    }\n\n    const getNewPromise = () => {\n      const promise = map.get(cacheKey);\n      return promise === p ? undefined : promise;\n    }\n\n    const originalPromise = this.invokeApi(method, params, options);\n    const newPromise: Promise<Awaited<R>> = originalPromise.then((result) => {\n      return getNewPromise() || processResult(result);\n    }, (error) => {\n      const promise = getNewPromise();\n      if(promise) {\n        return promise;\n      }\n\n      if(!processError) {\n        throw error;\n      }\n\n      return processError(error);\n    });\n\n    const p = newPromise.finally(() => {\n      if(map.get(cacheKey) !== p) {\n        return;\n      }\n\n      map.delete(cacheKey);\n      if(!map.size) {\n        delete cache[method];\n      }\n    });\n\n    map.set(cacheKey, p);\n    return p;\n  }\n\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\n    const queryJSON = JSON.stringify(params);\n    const item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item && item.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = ctx.setTimeout(() => {\n        delete cache[queryJSON];\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        try {\n          if(verify(item.params)) {\n            if(item.timeout) {\n              clearTimeout(item.timeout);\n            }\n\n            delete cache[queryJSON];\n          }\n        } catch(err) {\n          // this.log.error('clearCache error:', err, queryJSON, item);\n        }\n      }\n    }\n  }\n\n  public getConfig(overwrite?: boolean) {\n    if(this.config && !overwrite) {\n      return this.config;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getConfig',\n      params: {},\n      processResult: (config) => {\n        this.config = config;\n        this.rootScope.dispatchEvent('config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n\n  public getAppConfig(overwrite?: boolean) {\n    if(this.appConfig && !overwrite) {\n      return this.appConfig;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getAppConfig',\n      params: {},\n      processResult: (config: MTAppConfig) => {\n        this.appConfig = config;\n        ignoreRestrictionReasons(config.ignore_restriction_reasons ?? []);\n        this.rootScope.dispatchEvent('app_config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                   \nimport transportController from './transports/controller';\nimport MTTransport from './transports/transport';\n         \n\nimport type {UserAuth} from './mtproto_config';\nimport sessionStorage from '../sessionStorage';\nimport MTPNetworker, {MTMessage} from './networker';\nimport {ConnectionType, constructTelegramWebSocketUrl, DcConfigurator, TransportType} from './dcConfigurator';\nimport {logger} from '../logger';\nimport type {DcAuthKey, DcId, DcServerSalt, InvokeApiOptions} from '../../types';\nimport type {MethodDeclMap} from '../../layer';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport App from '../../config/app';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport {IDB} from '../files/idb';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport ctx from '../../environment/ctx';\nimport noop from '../../helpers/noop';\nimport Modes from '../../config/modes';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport pause from '../../helpers/schedulers/pause';\nimport ApiManagerMethods from './api_methods';\nimport {getEnvironment} from '../../environment/utils';\nimport toggleStorages from '../../helpers/toggleStorages';\nimport type TcpObfuscated from './transports/tcpObfuscated';\n\n/* class RotatableArray<T> {\n  public array: Array<T> = [];\n  private lastIndex = -1;\n\n  public get() {\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\n    return this.array[this.lastIndex];\n  }\n} */\n\nconst PREMIUM_FILE_NETWORKERS_COUNT = 6;\nconst REGULAR_FILE_NETWORKERS_COUNT = 3;\n\nexport class ApiManager extends ApiManagerMethods {\n  private cachedNetworkers: {\n    [transportType in TransportType]: {\n      [connectionType in ConnectionType]: {\n        [dcId: DcId]: MTPNetworker[]\n      }\n    }\n  };\n\n  private cachedExportPromise: {[x: number]: Promise<unknown>};\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\n  private baseDcId: DcId;\n\n  // public telegramMeNotified = false;\n\n  private log: ReturnType<typeof logger>;\n\n  private afterMessageTempIds: {\n    [tempId: string]: {\n      messageId: string,\n      promise: Promise<any>\n    }\n  };\n\n  private transportType: TransportType;\n\n  private updatesProcessor: (obj: any) => void;\n\n  private loggingOut: boolean;\n\n  constructor() {\n    super();\n    this.log = logger('API');\n\n    this.cachedNetworkers = {} as any;\n    this.cachedExportPromise = {};\n    this.gettingNetworkers = {};\n    this.baseDcId = 0;\n    this.afterMessageTempIds = {};\n\n    this.transportType = Modes.transport;\n\n                       \n    transportController.addEventListener('transport', (transportType) => {\n      this.changeTransportType(transportType);\n    });\n             \n  }\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateConfig: () => {\n        this.getConfig(true);\n        this.getAppConfig(true);\n      }\n    });\n\n    this.rootScope.addEventListener('premium_toggle', (isPremium) => {\n      this.iterateNetworkers(({networker, connectionType, dcId, transportType}) => {\n        if(connectionType === 'client' || transportType !== 'websocket') {\n          return;\n        }\n\n        const transport = networker.transport;\n        if(!transport) {\n          this.log.error('wow what, no transport?', networker);\n          return;\n        }\n\n        if((transport as TcpObfuscated).connection) {\n          const url = constructTelegramWebSocketUrl(dcId, connectionType, isPremium);\n          (transport as TcpObfuscated).changeUrl(url);\n        }\n      });\n    });\n  }\n\n  // private lol = false;\n\n  // constructor() {\n  // MtpSingleInstanceService.start();\n\n  /* AppStorage.get<number>('dc').then((dcId) => {\n      if(dcId) {\n        this.baseDcId = dcId;\n      }\n    }); */\n  // }\n\n  /* public telegramMeNotify(newValue: boolean) {\n    if(this.telegramMeNotified !== newValue) {\n      this.telegramMeNotified = newValue;\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\n    }\n  } */\n\n  private getTransportType(connectionType: ConnectionType) {\n                              \n                 \n                                                                                                                           \n                                                                                                \n            \n    // @ts-ignore\n    const transportType: TransportType = this.transportType;\n             \n\n    return transportType;\n  }\n\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\n    for(const transportType in this.cachedNetworkers) {\n      const connections = this.cachedNetworkers[transportType as TransportType];\n      for(const connectionType in connections) {\n        const dcs = connections[connectionType as ConnectionType];\n        for(const dcId in dcs) {\n          const networkers = dcs[dcId as any as DcId];\n          networkers.forEach((networker, idx, arr) => {\n            callback({\n              networker,\n              dcId: +dcId as DcId,\n              connectionType: connectionType as ConnectionType,\n              transportType: transportType as TransportType,\n              index: idx,\n              array: arr\n            });\n          });\n        }\n      }\n    }\n  }\n\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\n    return this.dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client', this.rootScope.premium);\n  }\n\n  public changeTransportType(transportType: TransportType) {\n    const oldTransportType = this.transportType;\n    if(oldTransportType === transportType) {\n      return;\n    }\n\n    this.log('changing transport from', oldTransportType, 'to', transportType);\n\n    const oldObject = this.cachedNetworkers[oldTransportType];\n    const newObject = this.cachedNetworkers[transportType];\n    this.cachedNetworkers[transportType] = oldObject;\n    this.cachedNetworkers[oldTransportType] = newObject;\n\n    this.transportType = transportType;\n\n    for(const oldGetKey in this.gettingNetworkers) {\n      const promise = this.gettingNetworkers[oldGetKey];\n      delete this.gettingNetworkers[oldGetKey];\n\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\n      this.gettingNetworkers[newGetKey] = promise;\n\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\n    }\n\n    this.iterateNetworkers((info) => {\n      const transportType = this.getTransportType(info.connectionType);\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\n      this.changeNetworkerTransport(info.networker, transport);\n    });\n  }\n\n  public async getBaseDcId() {\n    if(this.baseDcId) {\n      return this.baseDcId;\n    }\n\n    const baseDcId = await sessionStorage.get('dc');\n    if(!this.baseDcId) {\n      if(!baseDcId) {\n        this.setBaseDcId(App.baseDcId);\n      } else {\n        this.baseDcId = baseDcId;\n      }\n    }\n\n    return this.baseDcId;\n  }\n\n  public async setUserAuth(userAuth: UserAuth | UserId) {\n    if(typeof(userAuth) === 'string' || typeof(userAuth) === 'number') {\n      userAuth = {dcID: 0, date: Date.now() / 1000 | 0, id: userAuth.toPeerId(false)};\n    }\n\n    this.rootScope.dispatchEvent('user_auth', userAuth);\n\n    if(!userAuth.dcID) {\n      const baseDcId = await this.getBaseDcId();\n      userAuth.dcID = baseDcId;\n    }\n\n    sessionStorage.set({\n      user_auth: userAuth\n    });\n\n    // this.telegramMeNotify(true);\n  }\n\n  public setBaseDcId(dcId: DcId) {\n    const wasDcId = this.baseDcId;\n    if(wasDcId) { // if migrated set ondrain\n      this.getNetworker(wasDcId).then((networker) => {\n        this.setOnDrainIfNeeded(networker);\n      });\n    }\n\n    this.baseDcId = dcId;\n\n    sessionStorage.set({\n      dc: this.baseDcId\n    });\n  }\n\n  public async logOut() {\n    if(this.loggingOut) {\n      return;\n    }\n\n    this.loggingOut = true;\n    const storageKeys: Array<DcAuthKey> = [];\n\n    const prefix = 'dc';\n    for(let dcId = 1; dcId <= 5; dcId++) {\n      storageKeys.push(prefix + dcId + '_auth_key' as any);\n    }\n\n    // WebPushApiManager.forceUnsubscribe(); // WARNING // moved to worker's master\n    const storageResult = await Promise.all(storageKeys.map((key) => sessionStorage.get(key)));\n\n    const logoutPromises: Promise<any>[] = [];\n    for(let i = 0; i < storageResult.length; i++) {\n      if(storageResult[i]) {\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId: (i + 1) as DcId, ignoreErrors: true}));\n      }\n    }\n\n    const clear = async() => {\n      this.baseDcId = undefined;\n      // this.telegramMeNotify(false);\n      await toggleStorages(false, true);\n      IDB.closeDatabases();\n      this.rootScope.dispatchEvent('logging_out');\n    };\n\n    setTimeout(clear, 1e3);\n\n    // return;\n\n    return Promise.all(logoutPromises).catch((error) => {\n      error.handled = true;\n    }).finally(clear)/* .then(() => {\n      location.pathname = '/';\n    }) */;\n  }\n\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\n    return [dcId, transportType, connectionType].join('-');\n  }\n\n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\n    // const connectionType: ConnectionType = 'client';\n\n    const transportType = this.getTransportType(connectionType);\n    if(!this.cachedNetworkers[transportType]) {\n      this.cachedNetworkers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const cache = this.cachedNetworkers[transportType][connectionType];\n    if(!(dcId in cache)) {\n      cache[dcId] = [];\n    }\n\n    const networkers = cache[dcId];\n    // @ts-ignore\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (this.rootScope.premium ? PREMIUM_FILE_NETWORKERS_COUNT : REGULAR_FILE_NETWORKERS_COUNT);\n    if(networkers.length >= maxNetworkers) {\n      let i = maxNetworkers - 1, found = false;\n      for(; i >= 0; --i) {\n        if(networkers[i].isOnline) {\n          found = true;\n          break;\n        }\n      }\n\n      const networker = networkers.splice(found ? i : maxNetworkers - 1, 1)[0];\n      networkers.unshift(networker);\n      return Promise.resolve(networker);\n    }\n\n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\n    if(this.gettingNetworkers[getKey]) {\n      return this.gettingNetworkers[getKey];\n    }\n\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\n\n    let transport = this.chooseServer(dcId, connectionType, transportType);\n    return this.gettingNetworkers[getKey] = Promise.all([ak, ss].map((key) => sessionStorage.get(key)))\n    .then(async([authKeyHex, serverSaltHex]) => {\n      let networker: MTPNetworker, error: any;\n      if(authKeyHex && authKeyHex.length === 512) {\n        if(!serverSaltHex || serverSaltHex.length !== 16) {\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\n        }\n\n        const authKey = bytesFromHex(authKeyHex);\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1', authKey)).slice(-8);\n        const serverSalt = bytesFromHex(serverSaltHex);\n\n        networker = this.networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\n      } else {\n        try { // if no saved state\n          const auth = await this.authorizer.auth(dcId);\n\n          sessionStorage.set({\n            [ak]: bytesToHex(auth.authKey),\n            [ss]: bytesToHex(auth.serverSalt)\n          });\n\n          networker = this.networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\n        } catch(_error) {\n          error = _error;\n        }\n      }\n\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\n      const newTransportType = this.getTransportType(connectionType);\n      if(newTransportType !== transportType) {\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\n        transport.destroy();\n        DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, transport);\n\n        if(networker) {\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\n        }\n\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\n      }\n\n      /* networker.onConnectionStatusChange = (online) => {\n        console.log('status:', online);\n      }; */\n\n      delete this.gettingNetworkers[getKey];\n\n      if(error) {\n        this.log('get networker error', error, (error as Error).stack);\n        throw error;\n      }\n\n      this.changeNetworkerTransport(networker, transport);\n      networkers.unshift(networker);\n      this.setOnDrainIfNeeded(networker);\n      return networker;\n    });\n  }\n\n  public getNetworkerVoid(dcId: DcId) {\n    return this.getNetworker(dcId).then(noop, noop);\n  }\n\n  private changeNetworkerTransport(networker: MTPNetworker, transport?: MTTransport) {\n    const oldTransport = networker.transport;\n    if(oldTransport) {\n      DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, oldTransport);\n    }\n\n    networker.changeTransport(transport);\n  }\n\n  private onNetworkerDrain(networker: MTPNetworker) {\n    this.log('networker drain', networker.dcId);\n    networker.onDrain = undefined;\n    this.changeNetworkerTransport(networker);\n    networker.destroy();\n    this.networkerFactory.removeNetworker(networker);\n    DcConfigurator.removeTransport(this.cachedNetworkers, networker);\n  }\n\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\n    if(networker.onDrain) {\n      return;\n    }\n\n    const checkPromise: Promise<boolean> = networker.isFileNetworker ?\n      Promise.resolve(true) :\n      this.getBaseDcId().then((baseDcId) => networker.dcId !== baseDcId);\n    checkPromise.then((canRelease) => {\n      if(networker.onDrain) {\n        return;\n      }\n\n      if(canRelease) {\n        networker.onDrain = () => this.onNetworkerDrain(networker);\n        networker.setDrainTimeout();\n      }\n    });\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n    this.networkerFactory.setUpdatesProcessor(callback);\n  }\n\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T]['res']> {\n    // /////this.log('Invoke api', method, params, options);\n\n    /* if(!this.lol) {\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\n      this.lol = true;\n    } */\n\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\n\n    let {afterMessageId, prepareTempMessageId} = options;\n    if(prepareTempMessageId) {\n      deferred.then(() => {\n        delete this.afterMessageTempIds[prepareTempMessageId];\n      });\n    }\n\n    if(MOUNT_CLASS_TO) {\n      const startTime = Date.now();\n      const interval = ctx.setInterval(() => {\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\n        }\n        // this.cachedUploadNetworkers[2].requestMessageStatus();\n      }, 5e3);\n\n      deferred.catch(noop).finally(() => {\n        clearInterval(interval);\n      });\n    }\n\n    const rejectPromise = async(error: ApiError) => {\n      if(!error) {\n        error = {type: 'ERROR_EMPTY'};\n      } else if(!isObject(error)) {\n        error = {message: error};\n      }\n\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') ||\n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\n        this.logOut();\n      }\n\n      if(options.ignoreErrors) {\n        throw error;\n      }\n\n      if(error.code === 406) {\n        error.handled = true;\n      }\n\n      if(!options.noErrorBox) {\n        error.input = method;\n        error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\n        setTimeout(() => {\n          if(!error.handled) {\n            if(error.code === 401) {\n              this.logOut();\n            } else {\n              // ErrorService.show({error: error}); // WARNING\n            }\n\n            error.handled = true;\n          }\n        }, 100);\n      }\n\n      throw error;\n    };\n\n    let dcId: DcId;\n\n    let cachedNetworker: MTPNetworker;\n    const stack = (new Error()).stack || 'empty stack';\n    const performRequest = (): Promise<any> => {\n      if(afterMessageId) {\n        const after = this.afterMessageTempIds[afterMessageId];\n        if(after) {\n          options.afterMessageId = after.messageId;\n        }\n      }\n\n      const promise = cachedNetworker.wrapApiCall(method, params, options);\n\n      if(prepareTempMessageId) {\n        this.afterMessageTempIds[prepareTempMessageId] = {\n          messageId: (options as MTMessage).messageId,\n          promise: deferred\n        };\n      }\n\n      return promise.catch((error: ApiError) => {\n        // if(!options.ignoreErrors) {\n        if(error.type !== 'FILE_REFERENCE_EXPIRED'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\n        }\n\n        if(error.code === 401 && this.baseDcId === dcId) {\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\n            sessionStorage.delete('dc')\n            sessionStorage.delete('user_auth'); // ! возможно тут вообще не нужно это делать, но нужно проверить случай с USER_DEACTIVATED (https://core.telegram.org/api/errors)\n            // this.telegramMeNotify(false);\n          }\n\n          throw error;\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\n          if(this.cachedExportPromise[dcId] === undefined) {\n            const promise = new Promise((exportResolve, exportReject) => {\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\n                this.invokeApi('auth.importAuthorization', {\n                  id: exportedAuth.id,\n                  bytes: exportedAuth.bytes\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\n              }, exportReject);\n            });\n\n            this.cachedExportPromise[dcId] = promise;\n          }\n\n          return this.cachedExportPromise[dcId].then(() => performRequest());\n        } else if(error.code === 303) {\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            if(options.dcId) {\n              options.dcId = newDcId;\n            } else {\n              this.setBaseDcId(newDcId);\n            }\n\n            return this.invokeApi(method, params, options);\n          }\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            options.dcId = newDcId;\n            return this.invokeApi(method, params, options);\n          } else {\n            throw error;\n          }\n        } else if(error.code === 400 && error.type === 'CONNECTION_NOT_INITED') {\n          this.networkerFactory.unsetConnectionInited();\n          return performRequest();\n        } else if(!options.rawError && error.code === 420) {\n          const waitTime = +error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 1;\n\n          if(waitTime > (options.floodMaxTimeout !== undefined ? options.floodMaxTimeout : 60) && !options.prepareTempMessageId) {\n            throw error;\n          }\n\n          return pause(waitTime/* (waitTime + 5) */ * 1000).then(() => performRequest());\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\n          const after = this.afterMessageTempIds[afterMessageId];\n\n          afterMessageId = undefined;\n          delete options.afterMessageId;\n\n          if(after) return after.promise.then(() => performRequest());\n          else return performRequest();\n        } else if(!options.rawError && error.code === 500) {\n          const now = Date.now();\n          if(options.stopTime) {\n            if(now >= options.stopTime) {\n              throw error;\n            }\n          }\n\n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\n          return pause(options.waitTime * 1000).then(() => performRequest());\n        } else if(error.type === 'UNKNOWN' || error.type === 'MTPROTO_CLUSTER_INVALID') { // cluster invalid - request from regular user to premium endpoint\n          return pause(1000).then(() => performRequest());\n        } else {\n          throw error;\n        }\n      });\n    }\n\n    let p: Promise<MTPNetworker>;\n    if(dcId = (options.dcId || this.baseDcId)) {\n      p = this.getNetworker(dcId, options);\n    } else {\n      p = this.getBaseDcId().then((baseDcId) => this.getNetworker(dcId = baseDcId, options));\n    }\n\n    p.then((networker) => {\n      cachedNetworker = networker;\n      const promise = performRequest();\n      cachedNetworker.attachPromise(deferred, options as MTMessage);\n      return promise;\n    })\n    .then(deferred.resolve)\n    .catch(rejectPromise)\n    .catch(deferred.reject);\n\n    return deferred;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport applyMixins from '../../helpers/applyMixins';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport {AppManager} from '../appManagers/manager';\n\nexport type StatePeerType = 'recentSearch' | 'topPeer' | 'dialog' | 'contact' | 'topMessage' | 'self';\n\ntype PeersStorageKey = `${StatePeerType}_${string | PeerId}` | StatePeerType;\n\nclass PeersStorage {\n  private neededPeers: Map<PeerId, Set<PeersStorageKey>> = new Map();\n  private singlePeerMap: Map<PeersStorageKey, Set<PeerId>> = new Map();\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  protected after() {\n    this.rootScope.addEventListener('user_auth', () => {\n      this.requestPeer(this.appPeersManager.peerId, 'self');\n    });\n  }\n\n  public requestPeer(peerId: PeerId, key: PeersStorageKey) {\n    let set = this.neededPeers.get(peerId);\n    if(set && set.has(key)) {\n      return;\n    }\n\n    if(!set) {\n      set = new Set();\n      this.neededPeers.set(peerId, set);\n    }\n\n    set.add(key);\n\n    this.dispatchEvent('peerNeeded', peerId);\n  }\n\n  public releasePeer(peerId: PeerId, key: PeersStorageKey) {\n    const set = this.neededPeers.get(peerId);\n    if(!set) {\n      return;\n    }\n\n    set.delete(key);\n\n    if(!set.size) {\n      this.neededPeers.delete(peerId);\n      this.dispatchEvent('peerUnneeded', peerId);\n    }\n  }\n\n  public requestPeersForKey(peerIds: Set<PeerId> | number[], key: PeersStorageKey) {\n    if(Array.isArray(peerIds)) {\n      peerIds = new Set(peerIds);\n    }\n\n    let set = this.singlePeerMap.get(key);\n    if(set) {\n      for(const peerId of set) {\n        if(peerIds.has(peerId)) {\n          continue;\n        }\n\n        this.releasePeer(peerId, key);\n        set.delete(peerId);\n      }\n\n      if(!set.size && !peerIds.size) {\n        this.singlePeerMap.delete(key);\n        return;\n      }\n    }\n\n    if(peerIds.size) {\n      if(!set) {\n        set = new Set();\n        this.singlePeerMap.set(key, set);\n      }\n\n      for(const peerId of peerIds) {\n        if(set.has(peerId)) {\n          continue;\n        }\n\n        this.requestPeer(peerId, key);\n        set.add(peerId);\n      }\n    }\n  }\n\n  public isPeerNeeded(peerId: PeerId) {\n    return this.neededPeers.has(peerId);\n  }\n}\n\ninterface PeersStorage extends EventListenerBase<{\n  peerNeeded: (peerId: PeerId) => void,\n  peerUnneeded: (peerId: PeerId) => void,\n}>, AppManager {}\napplyMixins(PeersStorage, [EventListenerBase, AppManager]);\n\nexport default PeersStorage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {WebDocument} from '../../layer';\nimport type {MyDocument} from '../appManagers/appDocsManager';\nimport type {MyPhoto} from '../appManagers/appPhotosManager';\n\nexport type ThumbCache = {\n  downloaded: number,\n  url: string,\n  type: string\n};\n\nexport type ThumbsCache = {\n  [key: string]: {\n    [size: string]: ThumbCache\n  }\n};\n\nconst thumbFullSize = 'full';\n\nexport type ThumbStorageMedia = MyPhoto | MyDocument | WebDocument;\n\nexport default class ThumbsStorage {\n  private thumbsCache: ThumbsCache = {};\n\n  private getKey(media: ThumbStorageMedia) {\n    return media._ + ((media as MyPhoto).id ?? (media as WebDocument).url);\n  }\n\n  public getCacheContext(media: ThumbStorageMedia, thumbSize: string = thumbFullSize): ThumbCache {\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\n      thumbSize = thumbFullSize;\n    } */\n\n    const cache = this.thumbsCache[this.getKey(media)] ??= {};\n    return cache[thumbSize] ??= {downloaded: 0, url: '', type: thumbSize};\n  }\n\n  public setCacheContextURL(media: ThumbStorageMedia, thumbSize: string = thumbFullSize, url: string, downloaded: number = 0) {\n    const cacheContext = this.getCacheContext(media, thumbSize);\n    cacheContext.url = url;\n    cacheContext.downloaded = downloaded;\n    return cacheContext;\n  }\n\n  public deleteCacheContext(media: ThumbStorageMedia, thumbSize: string = thumbFullSize) {\n    const cache = this.thumbsCache[this.getKey(media)];\n    if(cache) {\n      delete cache[thumbSize];\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type MTProtoConstructor = {\r\n  id: number,\r\n  predicate: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport type MTProtoMethod = {\r\n  id: number,\r\n  method: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport default {'MTProto':{'constructors':[{'id':481674261, 'predicate':'vector', 'params':[], 'type':'Vector t'}, {'id':85337187, 'predicate':'resPQ', 'params':[{'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'pq', 'type':'bytes'}, {'name':'server_public_key_fingerprints', 'type':'Vector<long>'}], 'type':'ResPQ'}, {'id':-1443537003, 'predicate':'p_q_inner_data_dc', 'params':[{'name':'pq', 'type':'bytes'}, {'name':'p', 'type':'bytes'}, {'name':'q', 'type':'bytes'}, {'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'new_nonce', 'type':'int256'}, {'name':'dc', 'type':'int'}], 'type':'P_Q_inner_data'}, {'id':1459478408, 'predicate':'p_q_inner_data_temp_dc', 'params':[{'name':'pq', 'type':'bytes'}, {'name':'p', 'type':'bytes'}, {'name':'q', 'type':'bytes'}, {'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'new_nonce', 'type':'int256'}, {'name':'dc', 'type':'int'}, {'name':'expires_in', 'type':'int'}], 'type':'P_Q_inner_data'}, {'id':-790100132, 'predicate':'server_DH_params_ok', 'params':[{'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'encrypted_answer', 'type':'bytes'}], 'type':'Server_DH_Params'}, {'id':-1249309254, 'predicate':'server_DH_inner_data', 'params':[{'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'g', 'type':'int'}, {'name':'dh_prime', 'type':'bytes'}, {'name':'g_a', 'type':'bytes'}, {'name':'server_time', 'type':'int'}], 'type':'Server_DH_inner_data'}, {'id':1715713620, 'predicate':'client_DH_inner_data', 'params':[{'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'retry_id', 'type':'long'}, {'name':'g_b', 'type':'bytes'}], 'type':'Client_DH_Inner_Data'}, {'id':1003222836, 'predicate':'dh_gen_ok', 'params':[{'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'new_nonce_hash1', 'type':'int128'}], 'type':'Set_client_DH_params_answer'}, {'id':1188831161, 'predicate':'dh_gen_retry', 'params':[{'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'new_nonce_hash2', 'type':'int128'}], 'type':'Set_client_DH_params_answer'}, {'id':-1499615742, 'predicate':'dh_gen_fail', 'params':[{'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'new_nonce_hash3', 'type':'int128'}], 'type':'Set_client_DH_params_answer'}, {'id':1973679973, 'predicate':'bind_auth_key_inner', 'params':[{'name':'nonce', 'type':'long'}, {'name':'temp_auth_key_id', 'type':'long'}, {'name':'perm_auth_key_id', 'type':'long'}, {'name':'temp_session_id', 'type':'long'}, {'name':'expires_at', 'type':'int'}], 'type':'BindAuthKeyInner'}, {'id':-212046591, 'predicate':'rpc_result', 'params':[{'name':'req_msg_id', 'type':'long'}, {'name':'result', 'type':'Object'}], 'type':'RpcResult'}, {'id':558156313, 'predicate':'rpc_error', 'params':[{'name':'error_code', 'type':'int'}, {'name':'error_message', 'type':'string'}], 'type':'RpcError'}, {'id':1579864942, 'predicate':'rpc_answer_unknown', 'params':[], 'type':'RpcDropAnswer'}, {'id':-847714938, 'predicate':'rpc_answer_dropped_running', 'params':[], 'type':'RpcDropAnswer'}, {'id':-1539647305, 'predicate':'rpc_answer_dropped', 'params':[{'name':'msg_id', 'type':'long'}, {'name':'seq_no', 'type':'int'}, {'name':'bytes', 'type':'int'}], 'type':'RpcDropAnswer'}, {'id':155834844, 'predicate':'future_salt', 'params':[{'name':'valid_since', 'type':'int'}, {'name':'valid_until', 'type':'int'}, {'name':'salt', 'type':'long'}], 'type':'FutureSalt'}, {'id':-1370486635, 'predicate':'future_salts', 'params':[{'name':'req_msg_id', 'type':'long'}, {'name':'now', 'type':'int'}, {'name':'salts', 'type':'vector<future_salt>'}], 'type':'FutureSalts'}, {'id':880243653, 'predicate':'pong', 'params':[{'name':'msg_id', 'type':'long'}, {'name':'ping_id', 'type':'long'}], 'type':'Pong'}, {'id':-501201412, 'predicate':'destroy_session_ok', 'params':[{'name':'session_id', 'type':'long'}], 'type':'DestroySessionRes'}, {'id':1658015945, 'predicate':'destroy_session_none', 'params':[{'name':'session_id', 'type':'long'}], 'type':'DestroySessionRes'}, {'id':-1631450872, 'predicate':'new_session_created', 'params':[{'name':'first_msg_id', 'type':'long'}, {'name':'unique_id', 'type':'long'}, {'name':'server_salt', 'type':'long'}], 'type':'NewSession'}, {'id':1945237724, 'predicate':'msg_container', 'params':[{'name':'messages', 'type':'vector<%Message>'}], 'type':'MessageContainer'}, {'id':1538843921, 'predicate':'message', 'params':[{'name':'msg_id', 'type':'long'}, {'name':'seqno', 'type':'int'}, {'name':'bytes', 'type':'int'}, {'name':'body', 'type':'Object'}], 'type':'Message'}, {'id':-530561358, 'predicate':'msg_copy', 'params':[{'name':'orig_message', 'type':'Message'}], 'type':'MessageCopy'}, {'id':812830625, 'predicate':'gzip_packed', 'params':[{'name':'packed_data', 'type':'bytes'}], 'type':'Object'}, {'id':1658238041, 'predicate':'msgs_ack', 'params':[{'name':'msg_ids', 'type':'Vector<long>'}], 'type':'MsgsAck'}, {'id':-1477445615, 'predicate':'bad_msg_notification', 'params':[{'name':'bad_msg_id', 'type':'long'}, {'name':'bad_msg_seqno', 'type':'int'}, {'name':'error_code', 'type':'int'}], 'type':'BadMsgNotification'}, {'id':-307542917, 'predicate':'bad_server_salt', 'params':[{'name':'bad_msg_id', 'type':'long'}, {'name':'bad_msg_seqno', 'type':'int'}, {'name':'error_code', 'type':'int'}, {'name':'new_server_salt', 'type':'long'}], 'type':'BadMsgNotification'}, {'id':2105940488, 'predicate':'msg_resend_req', 'params':[{'name':'msg_ids', 'type':'Vector<long>'}], 'type':'MsgResendReq'}, {'id':-630588590, 'predicate':'msgs_state_req', 'params':[{'name':'msg_ids', 'type':'Vector<long>'}], 'type':'MsgsStateReq'}, {'id':81704317, 'predicate':'msgs_state_info', 'params':[{'name':'req_msg_id', 'type':'long'}, {'name':'info', 'type':'bytes'}], 'type':'MsgsStateInfo'}, {'id':-1933520591, 'predicate':'msgs_all_info', 'params':[{'name':'msg_ids', 'type':'Vector<long>'}, {'name':'info', 'type':'bytes'}], 'type':'MsgsAllInfo'}, {'id':661470918, 'predicate':'msg_detailed_info', 'params':[{'name':'msg_id', 'type':'long'}, {'name':'answer_msg_id', 'type':'long'}, {'name':'bytes', 'type':'int'}, {'name':'status', 'type':'int'}], 'type':'MsgDetailedInfo'}, {'id':-2137147681, 'predicate':'msg_new_detailed_info', 'params':[{'name':'answer_msg_id', 'type':'long'}, {'name':'bytes', 'type':'int'}, {'name':'status', 'type':'int'}], 'type':'MsgDetailedInfo'}, {'id':-161422892, 'predicate':'destroy_auth_key_ok', 'params':[], 'type':'DestroyAuthKeyRes'}, {'id':178201177, 'predicate':'destroy_auth_key_none', 'params':[], 'type':'DestroyAuthKeyRes'}, {'id':-368010477, 'predicate':'destroy_auth_key_fail', 'params':[], 'type':'DestroyAuthKeyRes'}], 'methods':[{'id':-1099002127, 'method':'req_pq_multi', 'params':[{'name':'nonce', 'type':'int128'}], 'type':'ResPQ'}, {'id':-686627650, 'method':'req_DH_params', 'params':[{'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'p', 'type':'bytes'}, {'name':'q', 'type':'bytes'}, {'name':'public_key_fingerprint', 'type':'long'}, {'name':'encrypted_data', 'type':'bytes'}], 'type':'Server_DH_Params'}, {'id':-184262881, 'method':'set_client_DH_params', 'params':[{'name':'nonce', 'type':'int128'}, {'name':'server_nonce', 'type':'int128'}, {'name':'encrypted_data', 'type':'bytes'}], 'type':'Set_client_DH_params_answer'}, {'id':1491380032, 'method':'rpc_drop_answer', 'params':[{'name':'req_msg_id', 'type':'long'}], 'type':'RpcDropAnswer'}, {'id':-1188971260, 'method':'get_future_salts', 'params':[{'name':'num', 'type':'int'}], 'type':'FutureSalts'}, {'id':2059302892, 'method':'ping', 'params':[{'name':'ping_id', 'type':'long'}], 'type':'Pong'}, {'id':-213746804, 'method':'ping_delay_disconnect', 'params':[{'name':'ping_id', 'type':'long'}, {'name':'disconnect_delay', 'type':'int'}], 'type':'Pong'}, {'id':-414113498, 'method':'destroy_session', 'params':[{'name':'session_id', 'type':'long'}], 'type':'DestroySessionRes'}, {'id':-1835453025, 'method':'http_wait', 'params':[{'name':'max_delay', 'type':'int'}, {'name':'wait_after', 'type':'int'}, {'name':'max_wait', 'type':'int'}], 'type':'HttpWait'}, {'id':-784117408, 'method':'destroy_auth_key', 'params':[], 'type':'DestroyAuthKeyRes'}]}, 'API':{'constructors':[{'id':-1132882121, 'predicate':'boolFalse', 'params':[], 'type':'Bool'}, {'id':-1720552011, 'predicate':'boolTrue', 'params':[], 'type':'Bool'}, {'id':1072550713, 'predicate':'true', 'params':[], 'type':'True'}, {'id':481674261, 'predicate':'vector', 'params':[], 'type':'Vector t'}, {'id':-994444869, 'predicate':'error', 'params':[{'name':'code', 'type':'int'}, {'name':'text', 'type':'string'}], 'type':'Error'}, {'id':1450380236, 'predicate':'null', 'params':[], 'type':'Null'}, {'id':2134579434, 'predicate':'inputPeerEmpty', 'params':[], 'type':'InputPeer'}, {'id':2107670217, 'predicate':'inputPeerSelf', 'params':[], 'type':'InputPeer'}, {'id':900291769, 'predicate':'inputPeerChat', 'params':[{'name':'chat_id', 'type':'long'}], 'type':'InputPeer'}, {'id':-1182234929, 'predicate':'inputUserEmpty', 'params':[], 'type':'InputUser'}, {'id':-138301121, 'predicate':'inputUserSelf', 'params':[], 'type':'InputUser'}, {'id':-208488460, 'predicate':'inputPhoneContact', 'params':[{'name':'client_id', 'type':'long'}, {'name':'phone', 'type':'string'}, {'name':'first_name', 'type':'string'}, {'name':'last_name', 'type':'string'}], 'type':'InputContact'}, {'id':-181407105, 'predicate':'inputFile', 'params':[{'name':'id', 'type':'long'}, {'name':'parts', 'type':'int'}, {'name':'name', 'type':'string'}, {'name':'md5_checksum', 'type':'string'}], 'type':'InputFile'}, {'id':-1771768449, 'predicate':'inputMediaEmpty', 'params':[], 'type':'InputMedia'}, {'id':505969924, 'predicate':'inputMediaUploadedPhoto', 'params':[{'name':'flags', 'type':'#'}, {'name':'file', 'type':'InputFile'}, {'name':'stickers', 'type':'flags.0?Vector<InputDocument>'}, {'name':'ttl_seconds', 'type':'flags.1?int'}], 'type':'InputMedia'}, {'id':-1279654347, 'predicate':'inputMediaPhoto', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'InputPhoto'}, {'name':'ttl_seconds', 'type':'flags.0?int'}], 'type':'InputMedia'}, {'id':-104578748, 'predicate':'inputMediaGeoPoint', 'params':[{'name':'geo_point', 'type':'InputGeoPoint'}], 'type':'InputMedia'}, {'id':-122978821, 'predicate':'inputMediaContact', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'first_name', 'type':'string'}, {'name':'last_name', 'type':'string'}, {'name':'vcard', 'type':'string'}], 'type':'InputMedia'}, {'id':480546647, 'predicate':'inputChatPhotoEmpty', 'params':[], 'type':'InputChatPhoto'}, {'id':-968723890, 'predicate':'inputChatUploadedPhoto', 'params':[{'name':'flags', 'type':'#'}, {'name':'file', 'type':'flags.0?InputFile'}, {'name':'video', 'type':'flags.1?InputFile'}, {'name':'video_start_ts', 'type':'flags.2?double'}], 'type':'InputChatPhoto'}, {'id':-1991004873, 'predicate':'inputChatPhoto', 'params':[{'name':'id', 'type':'InputPhoto'}], 'type':'InputChatPhoto'}, {'id':-457104426, 'predicate':'inputGeoPointEmpty', 'params':[], 'type':'InputGeoPoint'}, {'id':1210199983, 'predicate':'inputGeoPoint', 'params':[{'name':'flags', 'type':'#'}, {'name':'lat', 'type':'double'}, {'name':'long', 'type':'double'}, {'name':'accuracy_radius', 'type':'flags.0?int'}], 'type':'InputGeoPoint'}, {'id':483901197, 'predicate':'inputPhotoEmpty', 'params':[], 'type':'InputPhoto'}, {'id':1001634122, 'predicate':'inputPhoto', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'file_reference', 'type':'bytes'}], 'type':'InputPhoto'}, {'id':-539317279, 'predicate':'inputFileLocation', 'params':[{'name':'volume_id', 'type':'long'}, {'name':'local_id', 'type':'int'}, {'name':'secret', 'type':'long'}, {'name':'file_reference', 'type':'bytes'}], 'type':'InputFileLocation'}, {'id':1498486562, 'predicate':'peerUser', 'params':[{'name':'user_id', 'type':'long'}], 'type':'Peer'}, {'id':918946202, 'predicate':'peerChat', 'params':[{'name':'chat_id', 'type':'long'}], 'type':'Peer'}, {'id':-1432995067, 'predicate':'storage.fileUnknown', 'params':[], 'type':'storage.FileType'}, {'id':1086091090, 'predicate':'storage.filePartial', 'params':[], 'type':'storage.FileType'}, {'id':8322574, 'predicate':'storage.fileJpeg', 'params':[], 'type':'storage.FileType'}, {'id':-891180321, 'predicate':'storage.fileGif', 'params':[], 'type':'storage.FileType'}, {'id':172975040, 'predicate':'storage.filePng', 'params':[], 'type':'storage.FileType'}, {'id':-1373745011, 'predicate':'storage.filePdf', 'params':[], 'type':'storage.FileType'}, {'id':1384777335, 'predicate':'storage.fileMp3', 'params':[], 'type':'storage.FileType'}, {'id':1258941372, 'predicate':'storage.fileMov', 'params':[], 'type':'storage.FileType'}, {'id':-1278304028, 'predicate':'storage.fileMp4', 'params':[], 'type':'storage.FileType'}, {'id':276907596, 'predicate':'storage.fileWebp', 'params':[], 'type':'storage.FileType'}, {'id':-742634630, 'predicate':'userEmpty', 'params':[{'name':'id', 'type':'long'}], 'type':'User'}, {'id':1326562017, 'predicate':'userProfilePhotoEmpty', 'params':[], 'type':'UserProfilePhoto'}, {'id':-2100168954, 'predicate':'userProfilePhoto', 'params':[{'name':'flags', 'type':'#'}, {'name':'has_video', 'type':'flags.0?true'}, {'name':'photo_id', 'type':'long'}, {'name':'stripped_thumb', 'type':'flags.1?bytes'}, {'name':'dc_id', 'type':'int'}], 'type':'UserProfilePhoto'}, {'id':164646985, 'predicate':'userStatusEmpty', 'params':[], 'type':'UserStatus'}, {'id':-306628279, 'predicate':'userStatusOnline', 'params':[{'name':'expires', 'type':'int'}], 'type':'UserStatus'}, {'id':9203775, 'predicate':'userStatusOffline', 'params':[{'name':'was_online', 'type':'int'}], 'type':'UserStatus'}, {'id':693512293, 'predicate':'chatEmpty', 'params':[{'name':'id', 'type':'long'}], 'type':'Chat'}, {'id':1103884886, 'predicate':'chat', 'params':[{'name':'flags', 'type':'#'}, {'name':'creator', 'type':'flags.0?true'}, {'name':'left', 'type':'flags.2?true'}, {'name':'deactivated', 'type':'flags.5?true'}, {'name':'call_active', 'type':'flags.23?true'}, {'name':'call_not_empty', 'type':'flags.24?true'}, {'name':'noforwards', 'type':'flags.25?true'}, {'name':'id', 'type':'long'}, {'name':'title', 'type':'string'}, {'name':'photo', 'type':'ChatPhoto'}, {'name':'participants_count', 'type':'int'}, {'name':'date', 'type':'int'}, {'name':'version', 'type':'int'}, {'name':'migrated_to', 'type':'flags.6?InputChannel'}, {'name':'admin_rights', 'type':'flags.14?ChatAdminRights'}, {'name':'default_banned_rights', 'type':'flags.18?ChatBannedRights'}], 'type':'Chat'}, {'id':1704108455, 'predicate':'chatForbidden', 'params':[{'name':'id', 'type':'long'}, {'name':'title', 'type':'string'}], 'type':'Chat'}, {'id':-779165146, 'predicate':'chatFull', 'params':[{'name':'flags', 'type':'#'}, {'name':'can_set_username', 'type':'flags.7?true'}, {'name':'has_scheduled', 'type':'flags.8?true'}, {'name':'id', 'type':'long'}, {'name':'about', 'type':'string'}, {'name':'participants', 'type':'ChatParticipants'}, {'name':'chat_photo', 'type':'flags.2?Photo'}, {'name':'notify_settings', 'type':'PeerNotifySettings'}, {'name':'exported_invite', 'type':'flags.13?ExportedChatInvite'}, {'name':'bot_info', 'type':'flags.3?Vector<BotInfo>'}, {'name':'pinned_msg_id', 'type':'flags.6?int'}, {'name':'folder_id', 'type':'flags.11?int'}, {'name':'call', 'type':'flags.12?InputGroupCall'}, {'name':'ttl_period', 'type':'flags.14?int'}, {'name':'groupcall_default_join_as', 'type':'flags.15?Peer'}, {'name':'theme_emoticon', 'type':'flags.16?string'}, {'name':'requests_pending', 'type':'flags.17?int'}, {'name':'recent_requesters', 'type':'flags.17?Vector<long>'}, {'name':'available_reactions', 'type':'flags.18?Vector<string>'}], 'type':'ChatFull'}, {'id':-1070776313, 'predicate':'chatParticipant', 'params':[{'name':'user_id', 'type':'long'}, {'name':'inviter_id', 'type':'long'}, {'name':'date', 'type':'int'}], 'type':'ChatParticipant'}, {'id':-2023500831, 'predicate':'chatParticipantsForbidden', 'params':[{'name':'flags', 'type':'#'}, {'name':'chat_id', 'type':'long'}, {'name':'self_participant', 'type':'flags.0?ChatParticipant'}], 'type':'ChatParticipants'}, {'id':1018991608, 'predicate':'chatParticipants', 'params':[{'name':'chat_id', 'type':'long'}, {'name':'participants', 'type':'Vector<ChatParticipant>'}, {'name':'version', 'type':'int'}], 'type':'ChatParticipants'}, {'id':935395612, 'predicate':'chatPhotoEmpty', 'params':[], 'type':'ChatPhoto'}, {'id':476978193, 'predicate':'chatPhoto', 'params':[{'name':'flags', 'type':'#'}, {'name':'has_video', 'type':'flags.0?true'}, {'name':'photo_id', 'type':'long'}, {'name':'stripped_thumb', 'type':'flags.1?bytes'}, {'name':'dc_id', 'type':'int'}], 'type':'ChatPhoto'}, {'id':-1868117372, 'predicate':'messageEmpty', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'int'}, {'name':'peer_id', 'type':'flags.0?Peer'}], 'type':'Message'}, {'id':940666592, 'predicate':'message', 'params':[{'name':'flags', 'type':'#'}, {'name':'out', 'type':'flags.1?true'}, {'name':'mentioned', 'type':'flags.4?true'}, {'name':'media_unread', 'type':'flags.5?true'}, {'name':'silent', 'type':'flags.13?true'}, {'name':'post', 'type':'flags.14?true'}, {'name':'from_scheduled', 'type':'flags.18?true'}, {'name':'legacy', 'type':'flags.19?true'}, {'name':'edit_hide', 'type':'flags.21?true'}, {'name':'pinned', 'type':'flags.24?true'}, {'name':'noforwards', 'type':'flags.26?true'}, {'name':'id', 'type':'int'}, {'name':'from_id', 'type':'flags.8?Peer'}, {'name':'peer_id', 'type':'Peer'}, {'name':'fwd_from', 'type':'flags.2?MessageFwdHeader'}, {'name':'via_bot_id', 'type':'flags.11?long'}, {'name':'reply_to', 'type':'flags.3?MessageReplyHeader'}, {'name':'date', 'type':'int'}, {'name':'message', 'type':'string'}, {'name':'media', 'type':'flags.9?MessageMedia'}, {'name':'reply_markup', 'type':'flags.6?ReplyMarkup'}, {'name':'entities', 'type':'flags.7?Vector<MessageEntity>'}, {'name':'views', 'type':'flags.10?int'}, {'name':'forwards', 'type':'flags.10?int'}, {'name':'replies', 'type':'flags.23?MessageReplies'}, {'name':'edit_date', 'type':'flags.15?int'}, {'name':'post_author', 'type':'flags.16?string'}, {'name':'grouped_id', 'type':'flags.17?long'}, {'name':'reactions', 'type':'flags.20?MessageReactions'}, {'name':'restriction_reason', 'type':'flags.22?Vector<RestrictionReason>'}, {'name':'ttl_period', 'type':'flags.25?int'}], 'type':'Message'}, {'id':721967202, 'predicate':'messageService', 'params':[{'name':'flags', 'type':'#'}, {'name':'out', 'type':'flags.1?true'}, {'name':'mentioned', 'type':'flags.4?true'}, {'name':'media_unread', 'type':'flags.5?true'}, {'name':'silent', 'type':'flags.13?true'}, {'name':'post', 'type':'flags.14?true'}, {'name':'legacy', 'type':'flags.19?true'}, {'name':'id', 'type':'int'}, {'name':'from_id', 'type':'flags.8?Peer'}, {'name':'peer_id', 'type':'Peer'}, {'name':'reply_to', 'type':'flags.3?MessageReplyHeader'}, {'name':'date', 'type':'int'}, {'name':'action', 'type':'MessageAction'}, {'name':'ttl_period', 'type':'flags.25?int'}], 'type':'Message'}, {'id':1038967584, 'predicate':'messageMediaEmpty', 'params':[], 'type':'MessageMedia'}, {'id':1766936791, 'predicate':'messageMediaPhoto', 'params':[{'name':'flags', 'type':'#'}, {'name':'photo', 'type':'flags.0?Photo'}, {'name':'ttl_seconds', 'type':'flags.2?int'}], 'type':'MessageMedia'}, {'id':1457575028, 'predicate':'messageMediaGeo', 'params':[{'name':'geo', 'type':'GeoPoint'}], 'type':'MessageMedia'}, {'id':1882335561, 'predicate':'messageMediaContact', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'first_name', 'type':'string'}, {'name':'last_name', 'type':'string'}, {'name':'vcard', 'type':'string'}, {'name':'user_id', 'type':'long'}], 'type':'MessageMedia'}, {'id':-1618676578, 'predicate':'messageMediaUnsupported', 'params':[], 'type':'MessageMedia'}, {'id':-1230047312, 'predicate':'messageActionEmpty', 'params':[], 'type':'MessageAction'}, {'id':-1119368275, 'predicate':'messageActionChatCreate', 'params':[{'name':'title', 'type':'string'}, {'name':'users', 'type':'Vector<long>'}], 'type':'MessageAction'}, {'id':-1247687078, 'predicate':'messageActionChatEditTitle', 'params':[{'name':'title', 'type':'string'}], 'type':'MessageAction'}, {'id':2144015272, 'predicate':'messageActionChatEditPhoto', 'params':[{'name':'photo', 'type':'Photo'}], 'type':'MessageAction'}, {'id':-1780220945, 'predicate':'messageActionChatDeletePhoto', 'params':[], 'type':'MessageAction'}, {'id':365886720, 'predicate':'messageActionChatAddUser', 'params':[{'name':'users', 'type':'Vector<long>'}], 'type':'MessageAction'}, {'id':-1539362612, 'predicate':'messageActionChatDeleteUser', 'params':[{'name':'user_id', 'type':'long'}], 'type':'MessageAction'}, {'id':-1460809483, 'predicate':'dialog', 'params':[{'name':'flags', 'type':'#'}, {'name':'pinned', 'type':'flags.2?true'}, {'name':'unread_mark', 'type':'flags.3?true'}, {'name':'peer', 'type':'Peer'}, {'name':'top_message', 'type':'int'}, {'name':'read_inbox_max_id', 'type':'int'}, {'name':'read_outbox_max_id', 'type':'int'}, {'name':'unread_count', 'type':'int'}, {'name':'unread_mentions_count', 'type':'int'}, {'name':'unread_reactions_count', 'type':'int'}, {'name':'notify_settings', 'type':'PeerNotifySettings'}, {'name':'pts', 'type':'flags.0?int'}, {'name':'draft', 'type':'flags.1?DraftMessage'}, {'name':'folder_id', 'type':'flags.4?int'}], 'type':'Dialog'}, {'id':590459437, 'predicate':'photoEmpty', 'params':[{'name':'id', 'type':'long'}], 'type':'Photo'}, {'id':-82216347, 'predicate':'photo', 'params':[{'name':'flags', 'type':'#'}, {'name':'has_stickers', 'type':'flags.0?true'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'file_reference', 'type':'bytes'}, {'name':'date', 'type':'int'}, {'name':'sizes', 'type':'Vector<PhotoSize>'}, {'name':'video_sizes', 'type':'flags.1?Vector<VideoSize>'}, {'name':'dc_id', 'type':'int'}], 'type':'Photo'}, {'id':236446268, 'predicate':'photoSizeEmpty', 'params':[{'name':'type', 'type':'string'}], 'type':'PhotoSize'}, {'id':1976012384, 'predicate':'photoSize', 'params':[{'name':'type', 'type':'string'}, {'name':'w', 'type':'int'}, {'name':'h', 'type':'int'}, {'name':'size', 'type':'int'}], 'type':'PhotoSize'}, {'id':35527382, 'predicate':'photoCachedSize', 'params':[{'name':'type', 'type':'string'}, {'name':'w', 'type':'int'}, {'name':'h', 'type':'int'}, {'name':'bytes', 'type':'bytes'}], 'type':'PhotoSize'}, {'id':286776671, 'predicate':'geoPointEmpty', 'params':[], 'type':'GeoPoint'}, {'id':-1297942941, 'predicate':'geoPoint', 'params':[{'name':'flags', 'type':'#'}, {'name':'long', 'type':'double'}, {'name':'lat', 'type':'double'}, {'name':'access_hash', 'type':'long'}, {'name':'accuracy_radius', 'type':'flags.0?int'}], 'type':'GeoPoint'}, {'id':1577067778, 'predicate':'auth.sentCode', 'params':[{'name':'flags', 'type':'#'}, {'name':'type', 'type':'auth.SentCodeType'}, {'name':'phone_code_hash', 'type':'string'}, {'name':'next_type', 'type':'flags.1?auth.CodeType'}, {'name':'timeout', 'type':'flags.2?int'}], 'type':'auth.SentCode'}, {'id':872119224, 'predicate':'auth.authorization', 'params':[{'name':'flags', 'type':'#'}, {'name':'setup_password_required', 'type':'flags.1?true'}, {'name':'otherwise_relogin_days', 'type':'flags.1?int'}, {'name':'tmp_sessions', 'type':'flags.0?int'}, {'name':'user', 'type':'User'}], 'type':'auth.Authorization'}, {'id':-1271602504, 'predicate':'auth.exportedAuthorization', 'params':[{'name':'id', 'type':'long'}, {'name':'bytes', 'type':'bytes'}], 'type':'auth.ExportedAuthorization'}, {'id':-1195615476, 'predicate':'inputNotifyPeer', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'InputNotifyPeer'}, {'id':423314455, 'predicate':'inputNotifyUsers', 'params':[], 'type':'InputNotifyPeer'}, {'id':1251338318, 'predicate':'inputNotifyChats', 'params':[], 'type':'InputNotifyPeer'}, {'id':-551616469, 'predicate':'inputPeerNotifySettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'show_previews', 'type':'flags.0?Bool'}, {'name':'silent', 'type':'flags.1?Bool'}, {'name':'mute_until', 'type':'flags.2?int'}, {'name':'sound', 'type':'flags.3?NotificationSound'}], 'type':'InputPeerNotifySettings'}, {'id':-1472527322, 'predicate':'peerNotifySettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'show_previews', 'type':'flags.0?Bool'}, {'name':'silent', 'type':'flags.1?Bool'}, {'name':'mute_until', 'type':'flags.2?int'}, {'name':'ios_sound', 'type':'flags.3?NotificationSound'}, {'name':'android_sound', 'type':'flags.4?NotificationSound'}, {'name':'other_sound', 'type':'flags.5?NotificationSound'}], 'type':'PeerNotifySettings'}, {'id':-1525149427, 'predicate':'peerSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'report_spam', 'type':'flags.0?true'}, {'name':'add_contact', 'type':'flags.1?true'}, {'name':'block_contact', 'type':'flags.2?true'}, {'name':'share_contact', 'type':'flags.3?true'}, {'name':'need_contacts_exception', 'type':'flags.4?true'}, {'name':'report_geo', 'type':'flags.5?true'}, {'name':'autoarchived', 'type':'flags.7?true'}, {'name':'invite_members', 'type':'flags.8?true'}, {'name':'request_chat_broadcast', 'type':'flags.10?true'}, {'name':'geo_distance', 'type':'flags.6?int'}, {'name':'request_chat_title', 'type':'flags.9?string'}, {'name':'request_chat_date', 'type':'flags.9?int'}], 'type':'PeerSettings'}, {'id':-1539849235, 'predicate':'wallPaper', 'params':[{'name':'id', 'type':'long'}, {'name':'flags', 'type':'#'}, {'name':'creator', 'type':'flags.0?true'}, {'name':'default', 'type':'flags.1?true'}, {'name':'pattern', 'type':'flags.3?true'}, {'name':'dark', 'type':'flags.4?true'}, {'name':'access_hash', 'type':'long'}, {'name':'slug', 'type':'string'}, {'name':'document', 'type':'Document'}, {'name':'settings', 'type':'flags.2?WallPaperSettings'}], 'type':'WallPaper'}, {'id':1490799288, 'predicate':'inputReportReasonSpam', 'params':[], 'type':'ReportReason'}, {'id':505595789, 'predicate':'inputReportReasonViolence', 'params':[], 'type':'ReportReason'}, {'id':777640226, 'predicate':'inputReportReasonPornography', 'params':[], 'type':'ReportReason'}, {'id':-1376497949, 'predicate':'inputReportReasonChildAbuse', 'params':[], 'type':'ReportReason'}, {'id':-1041980751, 'predicate':'inputReportReasonOther', 'params':[], 'type':'ReportReason'}, {'id':-1938625919, 'predicate':'userFull', 'params':[{'name':'flags', 'type':'#'}, {'name':'blocked', 'type':'flags.0?true'}, {'name':'phone_calls_available', 'type':'flags.4?true'}, {'name':'phone_calls_private', 'type':'flags.5?true'}, {'name':'can_pin_message', 'type':'flags.7?true'}, {'name':'has_scheduled', 'type':'flags.12?true'}, {'name':'video_calls_available', 'type':'flags.13?true'}, {'name':'id', 'type':'long'}, {'name':'about', 'type':'flags.1?string'}, {'name':'settings', 'type':'PeerSettings'}, {'name':'profile_photo', 'type':'flags.2?Photo'}, {'name':'notify_settings', 'type':'PeerNotifySettings'}, {'name':'bot_info', 'type':'flags.3?BotInfo'}, {'name':'pinned_msg_id', 'type':'flags.6?int'}, {'name':'common_chats_count', 'type':'int'}, {'name':'folder_id', 'type':'flags.11?int'}, {'name':'ttl_period', 'type':'flags.14?int'}, {'name':'theme_emoticon', 'type':'flags.15?string'}, {'name':'private_forward_name', 'type':'flags.16?string'}, {'name':'bot_group_admin_rights', 'type':'flags.17?ChatAdminRights'}, {'name':'bot_broadcast_admin_rights', 'type':'flags.18?ChatAdminRights'}], 'type':'UserFull'}, {'id':341499403, 'predicate':'contact', 'params':[{'name':'user_id', 'type':'long'}, {'name':'mutual', 'type':'Bool'}], 'type':'Contact'}, {'id':-1052885936, 'predicate':'importedContact', 'params':[{'name':'user_id', 'type':'long'}, {'name':'client_id', 'type':'long'}], 'type':'ImportedContact'}, {'id':383348795, 'predicate':'contactStatus', 'params':[{'name':'user_id', 'type':'long'}, {'name':'status', 'type':'UserStatus'}], 'type':'ContactStatus'}, {'id':-1219778094, 'predicate':'contacts.contactsNotModified', 'params':[], 'type':'contacts.Contacts'}, {'id':-353862078, 'predicate':'contacts.contacts', 'params':[{'name':'contacts', 'type':'Vector<Contact>'}, {'name':'saved_count', 'type':'int'}, {'name':'users', 'type':'Vector<User>'}], 'type':'contacts.Contacts'}, {'id':2010127419, 'predicate':'contacts.importedContacts', 'params':[{'name':'imported', 'type':'Vector<ImportedContact>'}, {'name':'popular_invites', 'type':'Vector<PopularContact>'}, {'name':'retry_contacts', 'type':'Vector<long>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'contacts.ImportedContacts'}, {'id':182326673, 'predicate':'contacts.blocked', 'params':[{'name':'blocked', 'type':'Vector<PeerBlocked>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'contacts.Blocked'}, {'id':-513392236, 'predicate':'contacts.blockedSlice', 'params':[{'name':'count', 'type':'int'}, {'name':'blocked', 'type':'Vector<PeerBlocked>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'contacts.Blocked'}, {'id':364538944, 'predicate':'messages.dialogs', 'params':[{'name':'dialogs', 'type':'Vector<Dialog>'}, {'name':'messages', 'type':'Vector<Message>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.Dialogs'}, {'id':1910543603, 'predicate':'messages.dialogsSlice', 'params':[{'name':'count', 'type':'int'}, {'name':'dialogs', 'type':'Vector<Dialog>'}, {'name':'messages', 'type':'Vector<Message>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.Dialogs'}, {'id':-1938715001, 'predicate':'messages.messages', 'params':[{'name':'messages', 'type':'Vector<Message>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.Messages'}, {'id':978610270, 'predicate':'messages.messagesSlice', 'params':[{'name':'flags', 'type':'#'}, {'name':'inexact', 'type':'flags.1?true'}, {'name':'count', 'type':'int'}, {'name':'next_rate', 'type':'flags.0?int'}, {'name':'offset_id_offset', 'type':'flags.2?int'}, {'name':'messages', 'type':'Vector<Message>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.Messages'}, {'id':1694474197, 'predicate':'messages.chats', 'params':[{'name':'chats', 'type':'Vector<Chat>'}], 'type':'messages.Chats'}, {'id':-438840932, 'predicate':'messages.chatFull', 'params':[{'name':'full_chat', 'type':'ChatFull'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.ChatFull'}, {'id':-1269012015, 'predicate':'messages.affectedHistory', 'params':[{'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}, {'name':'offset', 'type':'int'}], 'type':'messages.AffectedHistory'}, {'id':1474492012, 'predicate':'inputMessagesFilterEmpty', 'params':[], 'type':'MessagesFilter'}, {'id':-1777752804, 'predicate':'inputMessagesFilterPhotos', 'params':[], 'type':'MessagesFilter'}, {'id':-1614803355, 'predicate':'inputMessagesFilterVideo', 'params':[], 'type':'MessagesFilter'}, {'id':1458172132, 'predicate':'inputMessagesFilterPhotoVideo', 'params':[], 'type':'MessagesFilter'}, {'id':-1629621880, 'predicate':'inputMessagesFilterDocument', 'params':[], 'type':'MessagesFilter'}, {'id':2129714567, 'predicate':'inputMessagesFilterUrl', 'params':[], 'type':'MessagesFilter'}, {'id':-3644025, 'predicate':'inputMessagesFilterGif', 'params':[], 'type':'MessagesFilter'}, {'id':522914557, 'predicate':'updateNewMessage', 'params':[{'name':'message', 'type':'Message'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':1318109142, 'predicate':'updateMessageID', 'params':[{'name':'id', 'type':'int'}, {'name':'random_id', 'type':'long'}], 'type':'Update'}, {'id':-1576161051, 'predicate':'updateDeleteMessages', 'params':[{'name':'messages', 'type':'Vector<int>'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':-1071741569, 'predicate':'updateUserTyping', 'params':[{'name':'user_id', 'type':'long'}, {'name':'action', 'type':'SendMessageAction'}], 'type':'Update'}, {'id':-2092401936, 'predicate':'updateChatUserTyping', 'params':[{'name':'chat_id', 'type':'long'}, {'name':'from_id', 'type':'Peer'}, {'name':'action', 'type':'SendMessageAction'}], 'type':'Update'}, {'id':125178264, 'predicate':'updateChatParticipants', 'params':[{'name':'participants', 'type':'ChatParticipants'}], 'type':'Update'}, {'id':-440534818, 'predicate':'updateUserStatus', 'params':[{'name':'user_id', 'type':'long'}, {'name':'status', 'type':'UserStatus'}], 'type':'Update'}, {'id':-1007549728, 'predicate':'updateUserName', 'params':[{'name':'user_id', 'type':'long'}, {'name':'first_name', 'type':'string'}, {'name':'last_name', 'type':'string'}, {'name':'username', 'type':'string'}], 'type':'Update'}, {'id':-232290676, 'predicate':'updateUserPhoto', 'params':[{'name':'user_id', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'photo', 'type':'UserProfilePhoto'}, {'name':'previous', 'type':'Bool'}], 'type':'Update'}, {'id':-1519637954, 'predicate':'updates.state', 'params':[{'name':'pts', 'type':'int'}, {'name':'qts', 'type':'int'}, {'name':'date', 'type':'int'}, {'name':'seq', 'type':'int'}, {'name':'unread_count', 'type':'int'}], 'type':'updates.State'}, {'id':1567990072, 'predicate':'updates.differenceEmpty', 'params':[{'name':'date', 'type':'int'}, {'name':'seq', 'type':'int'}], 'type':'updates.Difference'}, {'id':16030880, 'predicate':'updates.difference', 'params':[{'name':'new_messages', 'type':'Vector<Message>'}, {'name':'new_encrypted_messages', 'type':'Vector<EncryptedMessage>'}, {'name':'other_updates', 'type':'Vector<Update>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}, {'name':'state', 'type':'updates.State'}], 'type':'updates.Difference'}, {'id':-1459938943, 'predicate':'updates.differenceSlice', 'params':[{'name':'new_messages', 'type':'Vector<Message>'}, {'name':'new_encrypted_messages', 'type':'Vector<EncryptedMessage>'}, {'name':'other_updates', 'type':'Vector<Update>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}, {'name':'intermediate_state', 'type':'updates.State'}], 'type':'updates.Difference'}, {'id':-484987010, 'predicate':'updatesTooLong', 'params':[], 'type':'Updates'}, {'id':826001400, 'predicate':'updateShortMessage', 'params':[{'name':'flags', 'type':'#'}, {'name':'out', 'type':'flags.1?true'}, {'name':'mentioned', 'type':'flags.4?true'}, {'name':'media_unread', 'type':'flags.5?true'}, {'name':'silent', 'type':'flags.13?true'}, {'name':'id', 'type':'int'}, {'name':'user_id', 'type':'long'}, {'name':'message', 'type':'string'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}, {'name':'date', 'type':'int'}, {'name':'fwd_from', 'type':'flags.2?MessageFwdHeader'}, {'name':'via_bot_id', 'type':'flags.11?long'}, {'name':'reply_to', 'type':'flags.3?MessageReplyHeader'}, {'name':'entities', 'type':'flags.7?Vector<MessageEntity>'}, {'name':'ttl_period', 'type':'flags.25?int'}], 'type':'Updates'}, {'id':1299050149, 'predicate':'updateShortChatMessage', 'params':[{'name':'flags', 'type':'#'}, {'name':'out', 'type':'flags.1?true'}, {'name':'mentioned', 'type':'flags.4?true'}, {'name':'media_unread', 'type':'flags.5?true'}, {'name':'silent', 'type':'flags.13?true'}, {'name':'id', 'type':'int'}, {'name':'from_id', 'type':'long'}, {'name':'chat_id', 'type':'long'}, {'name':'message', 'type':'string'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}, {'name':'date', 'type':'int'}, {'name':'fwd_from', 'type':'flags.2?MessageFwdHeader'}, {'name':'via_bot_id', 'type':'flags.11?long'}, {'name':'reply_to', 'type':'flags.3?MessageReplyHeader'}, {'name':'entities', 'type':'flags.7?Vector<MessageEntity>'}, {'name':'ttl_period', 'type':'flags.25?int'}], 'type':'Updates'}, {'id':2027216577, 'predicate':'updateShort', 'params':[{'name':'update', 'type':'Update'}, {'name':'date', 'type':'int'}], 'type':'Updates'}, {'id':1918567619, 'predicate':'updatesCombined', 'params':[{'name':'updates', 'type':'Vector<Update>'}, {'name':'users', 'type':'Vector<User>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'date', 'type':'int'}, {'name':'seq_start', 'type':'int'}, {'name':'seq', 'type':'int'}], 'type':'Updates'}, {'id':1957577280, 'predicate':'updates', 'params':[{'name':'updates', 'type':'Vector<Update>'}, {'name':'users', 'type':'Vector<User>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'date', 'type':'int'}, {'name':'seq', 'type':'int'}], 'type':'Updates'}, {'id':-1916114267, 'predicate':'photos.photos', 'params':[{'name':'photos', 'type':'Vector<Photo>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'photos.Photos'}, {'id':352657236, 'predicate':'photos.photosSlice', 'params':[{'name':'count', 'type':'int'}, {'name':'photos', 'type':'Vector<Photo>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'photos.Photos'}, {'id':539045032, 'predicate':'photos.photo', 'params':[{'name':'photo', 'type':'Photo'}, {'name':'users', 'type':'Vector<User>'}], 'type':'photos.Photo'}, {'id':157948117, 'predicate':'upload.file', 'params':[{'name':'type', 'type':'storage.FileType'}, {'name':'mtime', 'type':'int'}, {'name':'bytes', 'type':'bytes'}], 'type':'upload.File'}, {'id':414687501, 'predicate':'dcOption', 'params':[{'name':'flags', 'type':'#'}, {'name':'ipv6', 'type':'flags.0?true'}, {'name':'media_only', 'type':'flags.1?true'}, {'name':'tcpo_only', 'type':'flags.2?true'}, {'name':'cdn', 'type':'flags.3?true'}, {'name':'static', 'type':'flags.4?true'}, {'name':'this_port_only', 'type':'flags.5?true'}, {'name':'id', 'type':'int'}, {'name':'ip_address', 'type':'string'}, {'name':'port', 'type':'int'}, {'name':'secret', 'type':'flags.10?bytes'}], 'type':'DcOption'}, {'id':856375399, 'predicate':'config', 'params':[{'name':'flags', 'type':'#'}, {'name':'phonecalls_enabled', 'type':'flags.1?true'}, {'name':'default_p2p_contacts', 'type':'flags.3?true'}, {'name':'preload_featured_stickers', 'type':'flags.4?true'}, {'name':'ignore_phone_entities', 'type':'flags.5?true'}, {'name':'revoke_pm_inbox', 'type':'flags.6?true'}, {'name':'blocked_mode', 'type':'flags.8?true'}, {'name':'pfs_enabled', 'type':'flags.13?true'}, {'name':'force_try_ipv6', 'type':'flags.14?true'}, {'name':'date', 'type':'int'}, {'name':'expires', 'type':'int'}, {'name':'test_mode', 'type':'Bool'}, {'name':'this_dc', 'type':'int'}, {'name':'dc_options', 'type':'Vector<DcOption>'}, {'name':'dc_txt_domain_name', 'type':'string'}, {'name':'chat_size_max', 'type':'int'}, {'name':'megagroup_size_max', 'type':'int'}, {'name':'forwarded_count_max', 'type':'int'}, {'name':'online_update_period_ms', 'type':'int'}, {'name':'offline_blur_timeout_ms', 'type':'int'}, {'name':'offline_idle_timeout_ms', 'type':'int'}, {'name':'online_cloud_timeout_ms', 'type':'int'}, {'name':'notify_cloud_delay_ms', 'type':'int'}, {'name':'notify_default_delay_ms', 'type':'int'}, {'name':'push_chat_period_ms', 'type':'int'}, {'name':'push_chat_limit', 'type':'int'}, {'name':'saved_gifs_limit', 'type':'int'}, {'name':'edit_time_limit', 'type':'int'}, {'name':'revoke_time_limit', 'type':'int'}, {'name':'revoke_pm_time_limit', 'type':'int'}, {'name':'rating_e_decay', 'type':'int'}, {'name':'stickers_recent_limit', 'type':'int'}, {'name':'stickers_faved_limit', 'type':'int'}, {'name':'channels_read_media_period', 'type':'int'}, {'name':'tmp_sessions', 'type':'flags.0?int'}, {'name':'pinned_dialogs_count_max', 'type':'int'}, {'name':'pinned_infolder_count_max', 'type':'int'}, {'name':'call_receive_timeout_ms', 'type':'int'}, {'name':'call_ring_timeout_ms', 'type':'int'}, {'name':'call_connect_timeout_ms', 'type':'int'}, {'name':'call_packet_timeout_ms', 'type':'int'}, {'name':'me_url_prefix', 'type':'string'}, {'name':'autoupdate_url_prefix', 'type':'flags.7?string'}, {'name':'gif_search_username', 'type':'flags.9?string'}, {'name':'venue_search_username', 'type':'flags.10?string'}, {'name':'img_search_username', 'type':'flags.11?string'}, {'name':'static_maps_provider', 'type':'flags.12?string'}, {'name':'caption_length_max', 'type':'int'}, {'name':'message_length_max', 'type':'int'}, {'name':'webfile_dc_id', 'type':'int'}, {'name':'suggested_lang_code', 'type':'flags.2?string'}, {'name':'lang_pack_version', 'type':'flags.2?int'}, {'name':'base_lang_pack_version', 'type':'flags.2?int'}], 'type':'Config'}, {'id':-1910892683, 'predicate':'nearestDc', 'params':[{'name':'country', 'type':'string'}, {'name':'this_dc', 'type':'int'}, {'name':'nearest_dc', 'type':'int'}], 'type':'NearestDc'}, {'id':-860107216, 'predicate':'help.appUpdate', 'params':[{'name':'flags', 'type':'#'}, {'name':'can_not_skip', 'type':'flags.0?true'}, {'name':'id', 'type':'int'}, {'name':'version', 'type':'string'}, {'name':'text', 'type':'string'}, {'name':'entities', 'type':'Vector<MessageEntity>'}, {'name':'document', 'type':'flags.1?Document'}, {'name':'url', 'type':'flags.2?string'}, {'name':'sticker', 'type':'flags.3?Document'}], 'type':'help.AppUpdate'}, {'id':-1000708810, 'predicate':'help.noAppUpdate', 'params':[], 'type':'help.AppUpdate'}, {'id':415997816, 'predicate':'help.inviteText', 'params':[{'name':'message', 'type':'string'}], 'type':'help.InviteText'}, {'id':314359194, 'predicate':'updateNewEncryptedMessage', 'params':[{'name':'message', 'type':'EncryptedMessage'}, {'name':'qts', 'type':'int'}], 'type':'Update'}, {'id':386986326, 'predicate':'updateEncryptedChatTyping', 'params':[{'name':'chat_id', 'type':'int'}], 'type':'Update'}, {'id':-1264392051, 'predicate':'updateEncryption', 'params':[{'name':'chat', 'type':'EncryptedChat'}, {'name':'date', 'type':'int'}], 'type':'Update'}, {'id':956179895, 'predicate':'updateEncryptedMessagesRead', 'params':[{'name':'chat_id', 'type':'int'}, {'name':'max_date', 'type':'int'}, {'name':'date', 'type':'int'}], 'type':'Update'}, {'id':-1417756512, 'predicate':'encryptedChatEmpty', 'params':[{'name':'id', 'type':'int'}], 'type':'EncryptedChat'}, {'id':1722964307, 'predicate':'encryptedChatWaiting', 'params':[{'name':'id', 'type':'int'}, {'name':'access_hash', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'admin_id', 'type':'long'}, {'name':'participant_id', 'type':'long'}], 'type':'EncryptedChat'}, {'id':1223809356, 'predicate':'encryptedChatRequested', 'params':[{'name':'flags', 'type':'#'}, {'name':'folder_id', 'type':'flags.0?int'}, {'name':'id', 'type':'int'}, {'name':'access_hash', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'admin_id', 'type':'long'}, {'name':'participant_id', 'type':'long'}, {'name':'g_a', 'type':'bytes'}], 'type':'EncryptedChat'}, {'id':1643173063, 'predicate':'encryptedChat', 'params':[{'name':'id', 'type':'int'}, {'name':'access_hash', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'admin_id', 'type':'long'}, {'name':'participant_id', 'type':'long'}, {'name':'g_a_or_b', 'type':'bytes'}, {'name':'key_fingerprint', 'type':'long'}], 'type':'EncryptedChat'}, {'id':505183301, 'predicate':'encryptedChatDiscarded', 'params':[{'name':'flags', 'type':'#'}, {'name':'history_deleted', 'type':'flags.0?true'}, {'name':'id', 'type':'int'}], 'type':'EncryptedChat'}, {'id':-247351839, 'predicate':'inputEncryptedChat', 'params':[{'name':'chat_id', 'type':'int'}, {'name':'access_hash', 'type':'long'}], 'type':'InputEncryptedChat'}, {'id':-1038136962, 'predicate':'encryptedFileEmpty', 'params':[], 'type':'EncryptedFile'}, {'id':-1476358952, 'predicate':'encryptedFile', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'size', 'type':'long'}, {'name':'dc_id', 'type':'int'}, {'name':'key_fingerprint', 'type':'int'}], 'type':'EncryptedFile'}, {'id':406307684, 'predicate':'inputEncryptedFileEmpty', 'params':[], 'type':'InputEncryptedFile'}, {'id':1690108678, 'predicate':'inputEncryptedFileUploaded', 'params':[{'name':'id', 'type':'long'}, {'name':'parts', 'type':'int'}, {'name':'md5_checksum', 'type':'string'}, {'name':'key_fingerprint', 'type':'int'}], 'type':'InputEncryptedFile'}, {'id':1511503333, 'predicate':'inputEncryptedFile', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputEncryptedFile'}, {'id':-182231723, 'predicate':'inputEncryptedFileLocation', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputFileLocation'}, {'id':-317144808, 'predicate':'encryptedMessage', 'params':[{'name':'random_id', 'type':'long'}, {'name':'chat_id', 'type':'int'}, {'name':'date', 'type':'int'}, {'name':'bytes', 'type':'bytes'}, {'name':'file', 'type':'EncryptedFile'}], 'type':'EncryptedMessage'}, {'id':594758406, 'predicate':'encryptedMessageService', 'params':[{'name':'random_id', 'type':'long'}, {'name':'chat_id', 'type':'int'}, {'name':'date', 'type':'int'}, {'name':'bytes', 'type':'bytes'}], 'type':'EncryptedMessage'}, {'id':-1058912715, 'predicate':'messages.dhConfigNotModified', 'params':[{'name':'random', 'type':'bytes'}], 'type':'messages.DhConfig'}, {'id':740433629, 'predicate':'messages.dhConfig', 'params':[{'name':'g', 'type':'int'}, {'name':'p', 'type':'bytes'}, {'name':'version', 'type':'int'}, {'name':'random', 'type':'bytes'}], 'type':'messages.DhConfig'}, {'id':1443858741, 'predicate':'messages.sentEncryptedMessage', 'params':[{'name':'date', 'type':'int'}], 'type':'messages.SentEncryptedMessage'}, {'id':-1802240206, 'predicate':'messages.sentEncryptedFile', 'params':[{'name':'date', 'type':'int'}, {'name':'file', 'type':'EncryptedFile'}], 'type':'messages.SentEncryptedMessage'}, {'id':-95482955, 'predicate':'inputFileBig', 'params':[{'name':'id', 'type':'long'}, {'name':'parts', 'type':'int'}, {'name':'name', 'type':'string'}], 'type':'InputFile'}, {'id':767652808, 'predicate':'inputEncryptedFileBigUploaded', 'params':[{'name':'id', 'type':'long'}, {'name':'parts', 'type':'int'}, {'name':'key_fingerprint', 'type':'int'}], 'type':'InputEncryptedFile'}, {'id':1037718609, 'predicate':'updateChatParticipantAdd', 'params':[{'name':'chat_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'inviter_id', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'version', 'type':'int'}], 'type':'Update'}, {'id':-483443337, 'predicate':'updateChatParticipantDelete', 'params':[{'name':'chat_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'version', 'type':'int'}], 'type':'Update'}, {'id':-1906403213, 'predicate':'updateDcOptions', 'params':[{'name':'dc_options', 'type':'Vector<DcOption>'}], 'type':'Update'}, {'id':1530447553, 'predicate':'inputMediaUploadedDocument', 'params':[{'name':'flags', 'type':'#'}, {'name':'nosound_video', 'type':'flags.3?true'}, {'name':'force_file', 'type':'flags.4?true'}, {'name':'file', 'type':'InputFile'}, {'name':'thumb', 'type':'flags.2?InputFile'}, {'name':'mime_type', 'type':'string'}, {'name':'attributes', 'type':'Vector<DocumentAttribute>'}, {'name':'stickers', 'type':'flags.0?Vector<InputDocument>'}, {'name':'ttl_seconds', 'type':'flags.1?int'}], 'type':'InputMedia'}, {'id':860303448, 'predicate':'inputMediaDocument', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'InputDocument'}, {'name':'ttl_seconds', 'type':'flags.0?int'}, {'name':'query', 'type':'flags.1?string'}], 'type':'InputMedia'}, {'id':-1666158377, 'predicate':'messageMediaDocument', 'params':[{'name':'flags', 'type':'#'}, {'name':'nopremium', 'type':'flags.3?true'}, {'name':'document', 'type':'flags.0?Document'}, {'name':'ttl_seconds', 'type':'flags.2?int'}], 'type':'MessageMedia'}, {'id':1928391342, 'predicate':'inputDocumentEmpty', 'params':[], 'type':'InputDocument'}, {'id':448771445, 'predicate':'inputDocument', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'file_reference', 'type':'bytes'}], 'type':'InputDocument'}, {'id':-1160743548, 'predicate':'inputDocumentFileLocation', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'file_reference', 'type':'bytes'}, {'name':'thumb_size', 'type':'string'}], 'type':'InputFileLocation'}, {'id':922273905, 'predicate':'documentEmpty', 'params':[{'name':'id', 'type':'long'}], 'type':'Document'}, {'id':-1881881384, 'predicate':'document', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'file_reference', 'type':'bytes'}, {'name':'date', 'type':'int'}, {'name':'mime_type', 'type':'string'}, {'name':'size', 'type':'long'}, {'name':'thumbs', 'type':'flags.0?Vector<PhotoSize>'}, {'name':'video_thumbs', 'type':'flags.1?Vector<VideoSize>'}, {'name':'dc_id', 'type':'int'}, {'name':'attributes', 'type':'Vector<DocumentAttribute>'}], 'type':'Document'}, {'id':398898678, 'predicate':'help.support', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'user', 'type':'User'}], 'type':'help.Support'}, {'id':-1613493288, 'predicate':'notifyPeer', 'params':[{'name':'peer', 'type':'Peer'}], 'type':'NotifyPeer'}, {'id':-1261946036, 'predicate':'notifyUsers', 'params':[], 'type':'NotifyPeer'}, {'id':-1073230141, 'predicate':'notifyChats', 'params':[], 'type':'NotifyPeer'}, {'id':-1094555409, 'predicate':'updateNotifySettings', 'params':[{'name':'peer', 'type':'NotifyPeer'}, {'name':'notify_settings', 'type':'PeerNotifySettings'}], 'type':'Update'}, {'id':381645902, 'predicate':'sendMessageTypingAction', 'params':[], 'type':'SendMessageAction'}, {'id':-44119819, 'predicate':'sendMessageCancelAction', 'params':[], 'type':'SendMessageAction'}, {'id':-1584933265, 'predicate':'sendMessageRecordVideoAction', 'params':[], 'type':'SendMessageAction'}, {'id':-378127636, 'predicate':'sendMessageUploadVideoAction', 'params':[{'name':'progress', 'type':'int'}], 'type':'SendMessageAction'}, {'id':-718310409, 'predicate':'sendMessageRecordAudioAction', 'params':[], 'type':'SendMessageAction'}, {'id':-212740181, 'predicate':'sendMessageUploadAudioAction', 'params':[{'name':'progress', 'type':'int'}], 'type':'SendMessageAction'}, {'id':-774682074, 'predicate':'sendMessageUploadPhotoAction', 'params':[{'name':'progress', 'type':'int'}], 'type':'SendMessageAction'}, {'id':-1441998364, 'predicate':'sendMessageUploadDocumentAction', 'params':[{'name':'progress', 'type':'int'}], 'type':'SendMessageAction'}, {'id':393186209, 'predicate':'sendMessageGeoLocationAction', 'params':[], 'type':'SendMessageAction'}, {'id':1653390447, 'predicate':'sendMessageChooseContactAction', 'params':[], 'type':'SendMessageAction'}, {'id':-1290580579, 'predicate':'contacts.found', 'params':[{'name':'my_results', 'type':'Vector<Peer>'}, {'name':'results', 'type':'Vector<Peer>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'contacts.Found'}, {'id':-337352679, 'predicate':'updateServiceNotification', 'params':[{'name':'flags', 'type':'#'}, {'name':'popup', 'type':'flags.0?true'}, {'name':'inbox_date', 'type':'flags.1?int'}, {'name':'type', 'type':'string'}, {'name':'message', 'type':'string'}, {'name':'media', 'type':'MessageMedia'}, {'name':'entities', 'type':'Vector<MessageEntity>'}], 'type':'Update'}, {'id':-496024847, 'predicate':'userStatusRecently', 'params':[], 'type':'UserStatus'}, {'id':129960444, 'predicate':'userStatusLastWeek', 'params':[], 'type':'UserStatus'}, {'id':2011940674, 'predicate':'userStatusLastMonth', 'params':[], 'type':'UserStatus'}, {'id':-298113238, 'predicate':'updatePrivacy', 'params':[{'name':'key', 'type':'PrivacyKey'}, {'name':'rules', 'type':'Vector<PrivacyRule>'}], 'type':'Update'}, {'id':1335282456, 'predicate':'inputPrivacyKeyStatusTimestamp', 'params':[], 'type':'InputPrivacyKey'}, {'id':-1137792208, 'predicate':'privacyKeyStatusTimestamp', 'params':[], 'type':'PrivacyKey'}, {'id':218751099, 'predicate':'inputPrivacyValueAllowContacts', 'params':[], 'type':'InputPrivacyRule'}, {'id':407582158, 'predicate':'inputPrivacyValueAllowAll', 'params':[], 'type':'InputPrivacyRule'}, {'id':320652927, 'predicate':'inputPrivacyValueAllowUsers', 'params':[{'name':'users', 'type':'Vector<InputUser>'}], 'type':'InputPrivacyRule'}, {'id':195371015, 'predicate':'inputPrivacyValueDisallowContacts', 'params':[], 'type':'InputPrivacyRule'}, {'id':-697604407, 'predicate':'inputPrivacyValueDisallowAll', 'params':[], 'type':'InputPrivacyRule'}, {'id':-1877932953, 'predicate':'inputPrivacyValueDisallowUsers', 'params':[{'name':'users', 'type':'Vector<InputUser>'}], 'type':'InputPrivacyRule'}, {'id':-123988, 'predicate':'privacyValueAllowContacts', 'params':[], 'type':'PrivacyRule'}, {'id':1698855810, 'predicate':'privacyValueAllowAll', 'params':[], 'type':'PrivacyRule'}, {'id':-1198497870, 'predicate':'privacyValueAllowUsers', 'params':[{'name':'users', 'type':'Vector<long>'}], 'type':'PrivacyRule'}, {'id':-125240806, 'predicate':'privacyValueDisallowContacts', 'params':[], 'type':'PrivacyRule'}, {'id':-1955338397, 'predicate':'privacyValueDisallowAll', 'params':[], 'type':'PrivacyRule'}, {'id':-463335103, 'predicate':'privacyValueDisallowUsers', 'params':[{'name':'users', 'type':'Vector<long>'}], 'type':'PrivacyRule'}, {'id':1352683077, 'predicate':'account.privacyRules', 'params':[{'name':'rules', 'type':'Vector<PrivacyRule>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'account.PrivacyRules'}, {'id':-1194283041, 'predicate':'accountDaysTTL', 'params':[{'name':'days', 'type':'int'}], 'type':'AccountDaysTTL'}, {'id':88680979, 'predicate':'updateUserPhone', 'params':[{'name':'user_id', 'type':'long'}, {'name':'phone', 'type':'string'}], 'type':'Update'}, {'id':1815593308, 'predicate':'documentAttributeImageSize', 'params':[{'name':'w', 'type':'int'}, {'name':'h', 'type':'int'}], 'type':'DocumentAttribute'}, {'id':297109817, 'predicate':'documentAttributeAnimated', 'params':[], 'type':'DocumentAttribute'}, {'id':1662637586, 'predicate':'documentAttributeSticker', 'params':[{'name':'flags', 'type':'#'}, {'name':'mask', 'type':'flags.1?true'}, {'name':'alt', 'type':'string'}, {'name':'stickerset', 'type':'InputStickerSet'}, {'name':'mask_coords', 'type':'flags.0?MaskCoords'}], 'type':'DocumentAttribute'}, {'id':250621158, 'predicate':'documentAttributeVideo', 'params':[{'name':'flags', 'type':'#'}, {'name':'round_message', 'type':'flags.0?true'}, {'name':'supports_streaming', 'type':'flags.1?true'}, {'name':'duration', 'type':'int'}, {'name':'w', 'type':'int'}, {'name':'h', 'type':'int'}], 'type':'DocumentAttribute'}, {'id':-1739392570, 'predicate':'documentAttributeAudio', 'params':[{'name':'flags', 'type':'#'}, {'name':'voice', 'type':'flags.10?true'}, {'name':'duration', 'type':'int'}, {'name':'title', 'type':'flags.0?string'}, {'name':'performer', 'type':'flags.1?string'}, {'name':'waveform', 'type':'flags.2?bytes'}], 'type':'DocumentAttribute'}, {'id':358154344, 'predicate':'documentAttributeFilename', 'params':[{'name':'file_name', 'type':'string'}], 'type':'DocumentAttribute'}, {'id':-244016606, 'predicate':'messages.stickersNotModified', 'params':[], 'type':'messages.Stickers'}, {'id':816245886, 'predicate':'messages.stickers', 'params':[{'name':'hash', 'type':'long'}, {'name':'stickers', 'type':'Vector<Document>'}], 'type':'messages.Stickers'}, {'id':313694676, 'predicate':'stickerPack', 'params':[{'name':'emoticon', 'type':'string'}, {'name':'documents', 'type':'Vector<long>'}], 'type':'StickerPack'}, {'id':-395967805, 'predicate':'messages.allStickersNotModified', 'params':[], 'type':'messages.AllStickers'}, {'id':-843329861, 'predicate':'messages.allStickers', 'params':[{'name':'hash', 'type':'long'}, {'name':'sets', 'type':'Vector<StickerSet>'}], 'type':'messages.AllStickers'}, {'id':-1667805217, 'predicate':'updateReadHistoryInbox', 'params':[{'name':'flags', 'type':'#'}, {'name':'folder_id', 'type':'flags.0?int'}, {'name':'peer', 'type':'Peer'}, {'name':'max_id', 'type':'int'}, {'name':'still_unread_count', 'type':'int'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':791617983, 'predicate':'updateReadHistoryOutbox', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'max_id', 'type':'int'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':-2066640507, 'predicate':'messages.affectedMessages', 'params':[{'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'messages.AffectedMessages'}, {'id':2139689491, 'predicate':'updateWebPage', 'params':[{'name':'webpage', 'type':'WebPage'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':-350980120, 'predicate':'webPageEmpty', 'params':[{'name':'id', 'type':'long'}], 'type':'WebPage'}, {'id':-981018084, 'predicate':'webPagePending', 'params':[{'name':'id', 'type':'long'}, {'name':'date', 'type':'int'}], 'type':'WebPage'}, {'id':-392411726, 'predicate':'webPage', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'long'}, {'name':'url', 'type':'string'}, {'name':'display_url', 'type':'string'}, {'name':'hash', 'type':'int'}, {'name':'type', 'type':'flags.0?string'}, {'name':'site_name', 'type':'flags.1?string'}, {'name':'title', 'type':'flags.2?string'}, {'name':'description', 'type':'flags.3?string'}, {'name':'photo', 'type':'flags.4?Photo'}, {'name':'embed_url', 'type':'flags.5?string'}, {'name':'embed_type', 'type':'flags.5?string'}, {'name':'embed_width', 'type':'flags.6?int'}, {'name':'embed_height', 'type':'flags.6?int'}, {'name':'duration', 'type':'flags.7?int'}, {'name':'author', 'type':'flags.8?string'}, {'name':'document', 'type':'flags.9?Document'}, {'name':'cached_page', 'type':'flags.10?Page'}, {'name':'attributes', 'type':'flags.12?Vector<WebPageAttribute>'}], 'type':'WebPage'}, {'id':-1557277184, 'predicate':'messageMediaWebPage', 'params':[{'name':'webpage', 'type':'WebPage'}], 'type':'MessageMedia'}, {'id':-1392388579, 'predicate':'authorization', 'params':[{'name':'flags', 'type':'#'}, {'name':'current', 'type':'flags.0?true'}, {'name':'official_app', 'type':'flags.1?true'}, {'name':'password_pending', 'type':'flags.2?true'}, {'name':'encrypted_requests_disabled', 'type':'flags.3?true'}, {'name':'call_requests_disabled', 'type':'flags.4?true'}, {'name':'hash', 'type':'long'}, {'name':'device_model', 'type':'string'}, {'name':'platform', 'type':'string'}, {'name':'system_version', 'type':'string'}, {'name':'api_id', 'type':'int'}, {'name':'app_name', 'type':'string'}, {'name':'app_version', 'type':'string'}, {'name':'date_created', 'type':'int'}, {'name':'date_active', 'type':'int'}, {'name':'ip', 'type':'string'}, {'name':'country', 'type':'string'}, {'name':'region', 'type':'string'}], 'type':'Authorization'}, {'id':1275039392, 'predicate':'account.authorizations', 'params':[{'name':'authorization_ttl_days', 'type':'int'}, {'name':'authorizations', 'type':'Vector<Authorization>'}], 'type':'account.Authorizations'}, {'id':408623183, 'predicate':'account.password', 'params':[{'name':'flags', 'type':'#'}, {'name':'has_recovery', 'type':'flags.0?true'}, {'name':'has_secure_values', 'type':'flags.1?true'}, {'name':'has_password', 'type':'flags.2?true'}, {'name':'current_algo', 'type':'flags.2?PasswordKdfAlgo'}, {'name':'srp_B', 'type':'flags.2?bytes'}, {'name':'srp_id', 'type':'flags.2?long'}, {'name':'hint', 'type':'flags.3?string'}, {'name':'email_unconfirmed_pattern', 'type':'flags.4?string'}, {'name':'new_algo', 'type':'PasswordKdfAlgo'}, {'name':'new_secure_algo', 'type':'SecurePasswordKdfAlgo'}, {'name':'secure_random', 'type':'bytes'}, {'name':'pending_reset_date', 'type':'flags.5?int'}], 'type':'account.Password'}, {'id':-1705233435, 'predicate':'account.passwordSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'email', 'type':'flags.0?string'}, {'name':'secure_settings', 'type':'flags.1?SecureSecretSettings'}], 'type':'account.PasswordSettings'}, {'id':-1036572727, 'predicate':'account.passwordInputSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'new_algo', 'type':'flags.0?PasswordKdfAlgo'}, {'name':'new_password_hash', 'type':'flags.0?bytes'}, {'name':'hint', 'type':'flags.0?string'}, {'name':'email', 'type':'flags.1?string'}, {'name':'new_secure_settings', 'type':'flags.2?SecureSecretSettings'}], 'type':'account.PasswordInputSettings'}, {'id':326715557, 'predicate':'auth.passwordRecovery', 'params':[{'name':'email_pattern', 'type':'string'}], 'type':'auth.PasswordRecovery'}, {'id':-1052959727, 'predicate':'inputMediaVenue', 'params':[{'name':'geo_point', 'type':'InputGeoPoint'}, {'name':'title', 'type':'string'}, {'name':'address', 'type':'string'}, {'name':'provider', 'type':'string'}, {'name':'venue_id', 'type':'string'}, {'name':'venue_type', 'type':'string'}], 'type':'InputMedia'}, {'id':784356159, 'predicate':'messageMediaVenue', 'params':[{'name':'geo', 'type':'GeoPoint'}, {'name':'title', 'type':'string'}, {'name':'address', 'type':'string'}, {'name':'provider', 'type':'string'}, {'name':'venue_id', 'type':'string'}, {'name':'venue_type', 'type':'string'}], 'type':'MessageMedia'}, {'id':-1551583367, 'predicate':'receivedNotifyMessage', 'params':[{'name':'id', 'type':'int'}, {'name':'flags', 'type':'int'}], 'type':'ReceivedNotifyMessage'}, {'id':179611673, 'predicate':'chatInviteExported', 'params':[{'name':'flags', 'type':'#'}, {'name':'revoked', 'type':'flags.0?true'}, {'name':'permanent', 'type':'flags.5?true'}, {'name':'request_needed', 'type':'flags.6?true'}, {'name':'link', 'type':'string'}, {'name':'admin_id', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'start_date', 'type':'flags.4?int'}, {'name':'expire_date', 'type':'flags.1?int'}, {'name':'usage_limit', 'type':'flags.2?int'}, {'name':'usage', 'type':'flags.3?int'}, {'name':'requested', 'type':'flags.7?int'}, {'name':'title', 'type':'flags.8?string'}], 'type':'ExportedChatInvite'}, {'id':1516793212, 'predicate':'chatInviteAlready', 'params':[{'name':'chat', 'type':'Chat'}], 'type':'ChatInvite'}, {'id':806110401, 'predicate':'chatInvite', 'params':[{'name':'flags', 'type':'#'}, {'name':'channel', 'type':'flags.0?true'}, {'name':'broadcast', 'type':'flags.1?true'}, {'name':'public', 'type':'flags.2?true'}, {'name':'megagroup', 'type':'flags.3?true'}, {'name':'request_needed', 'type':'flags.6?true'}, {'name':'title', 'type':'string'}, {'name':'about', 'type':'flags.5?string'}, {'name':'photo', 'type':'Photo'}, {'name':'participants_count', 'type':'int'}, {'name':'participants', 'type':'flags.4?Vector<User>'}], 'type':'ChatInvite'}, {'id':51520707, 'predicate':'messageActionChatJoinedByLink', 'params':[{'name':'inviter_id', 'type':'long'}], 'type':'MessageAction'}, {'id':1757493555, 'predicate':'updateReadMessagesContents', 'params':[{'name':'messages', 'type':'Vector<int>'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':-4838507, 'predicate':'inputStickerSetEmpty', 'params':[], 'type':'InputStickerSet'}, {'id':-1645763991, 'predicate':'inputStickerSetID', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputStickerSet'}, {'id':-2044933984, 'predicate':'inputStickerSetShortName', 'params':[{'name':'short_name', 'type':'string'}], 'type':'InputStickerSet'}, {'id':-673242758, 'predicate':'stickerSet', 'params':[{'name':'flags', 'type':'#'}, {'name':'archived', 'type':'flags.1?true'}, {'name':'official', 'type':'flags.2?true'}, {'name':'masks', 'type':'flags.3?true'}, {'name':'animated', 'type':'flags.5?true'}, {'name':'videos', 'type':'flags.6?true'}, {'name':'emojis', 'type':'flags.7?true'}, {'name':'installed_date', 'type':'flags.0?int'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'title', 'type':'string'}, {'name':'short_name', 'type':'string'}, {'name':'thumbs', 'type':'flags.4?Vector<PhotoSize>'}, {'name':'thumb_dc_id', 'type':'flags.4?int'}, {'name':'thumb_version', 'type':'flags.4?int'}, {'name':'count', 'type':'int'}, {'name':'hash', 'type':'int'}], 'type':'StickerSet'}, {'id':-1240849242, 'predicate':'messages.stickerSet', 'params':[{'name':'set', 'type':'StickerSet'}, {'name':'packs', 'type':'Vector<StickerPack>'}, {'name':'documents', 'type':'Vector<Document>'}], 'type':'messages.StickerSet'}, {'id':1073147056, 'predicate':'user', 'params':[{'name':'flags', 'type':'#'}, {'name':'self', 'type':'flags.10?true'}, {'name':'contact', 'type':'flags.11?true'}, {'name':'mutual_contact', 'type':'flags.12?true'}, {'name':'deleted', 'type':'flags.13?true'}, {'name':'bot', 'type':'flags.14?true'}, {'name':'bot_chat_history', 'type':'flags.15?true'}, {'name':'bot_nochats', 'type':'flags.16?true'}, {'name':'verified', 'type':'flags.17?true'}, {'name':'restricted', 'type':'flags.18?true'}, {'name':'min', 'type':'flags.20?true'}, {'name':'bot_inline_geo', 'type':'flags.21?true'}, {'name':'support', 'type':'flags.23?true'}, {'name':'scam', 'type':'flags.24?true'}, {'name':'apply_min_photo', 'type':'flags.25?true'}, {'name':'fake', 'type':'flags.26?true'}, {'name':'bot_attach_menu', 'type':'flags.27?true'}, {'name':'premium', 'type':'flags.28?true'}, {'name':'attach_menu_enabled', 'type':'flags.29?true'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'flags.0?long'}, {'name':'first_name', 'type':'flags.1?string'}, {'name':'last_name', 'type':'flags.2?string'}, {'name':'username', 'type':'flags.3?string'}, {'name':'phone', 'type':'flags.4?string'}, {'name':'photo', 'type':'flags.5?UserProfilePhoto'}, {'name':'status', 'type':'flags.6?UserStatus'}, {'name':'bot_info_version', 'type':'flags.14?int'}, {'name':'restriction_reason', 'type':'flags.18?Vector<RestrictionReason>'}, {'name':'bot_inline_placeholder', 'type':'flags.19?string'}, {'name':'lang_code', 'type':'flags.22?string'}], 'type':'User'}, {'id':-1032140601, 'predicate':'botCommand', 'params':[{'name':'command', 'type':'string'}, {'name':'description', 'type':'string'}], 'type':'BotCommand'}, {'id':-1892676777, 'predicate':'botInfo', 'params':[{'name':'flags', 'type':'#'}, {'name':'user_id', 'type':'flags.0?long'}, {'name':'description', 'type':'flags.1?string'}, {'name':'description_photo', 'type':'flags.4?Photo'}, {'name':'description_document', 'type':'flags.5?Document'}, {'name':'commands', 'type':'flags.2?Vector<BotCommand>'}, {'name':'menu_button', 'type':'flags.3?BotMenuButton'}], 'type':'BotInfo'}, {'id':-1560655744, 'predicate':'keyboardButton', 'params':[{'name':'text', 'type':'string'}], 'type':'KeyboardButton'}, {'id':2002815875, 'predicate':'keyboardButtonRow', 'params':[{'name':'buttons', 'type':'Vector<KeyboardButton>'}], 'type':'KeyboardButtonRow'}, {'id':-1606526075, 'predicate':'replyKeyboardHide', 'params':[{'name':'flags', 'type':'#'}, {'name':'selective', 'type':'flags.2?true'}], 'type':'ReplyMarkup'}, {'id':-2035021048, 'predicate':'replyKeyboardForceReply', 'params':[{'name':'flags', 'type':'#'}, {'name':'single_use', 'type':'flags.1?true'}, {'name':'selective', 'type':'flags.2?true'}, {'name':'placeholder', 'type':'flags.3?string'}], 'type':'ReplyMarkup'}, {'id':-2049074735, 'predicate':'replyKeyboardMarkup', 'params':[{'name':'flags', 'type':'#'}, {'name':'resize', 'type':'flags.0?true'}, {'name':'single_use', 'type':'flags.1?true'}, {'name':'selective', 'type':'flags.2?true'}, {'name':'rows', 'type':'Vector<KeyboardButtonRow>'}, {'name':'placeholder', 'type':'flags.3?string'}], 'type':'ReplyMarkup'}, {'id':-571955892, 'predicate':'inputPeerUser', 'params':[{'name':'user_id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputPeer'}, {'id':-233744186, 'predicate':'inputUser', 'params':[{'name':'user_id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputUser'}, {'id':-1148011883, 'predicate':'messageEntityUnknown', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':-100378723, 'predicate':'messageEntityMention', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':1868782349, 'predicate':'messageEntityHashtag', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':1827637959, 'predicate':'messageEntityBotCommand', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':1859134776, 'predicate':'messageEntityUrl', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':1692693954, 'predicate':'messageEntityEmail', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':-1117713463, 'predicate':'messageEntityBold', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':-2106619040, 'predicate':'messageEntityItalic', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':681706865, 'predicate':'messageEntityCode', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':1938967520, 'predicate':'messageEntityPre', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}, {'name':'language', 'type':'string'}], 'type':'MessageEntity'}, {'id':1990644519, 'predicate':'messageEntityTextUrl', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}, {'name':'url', 'type':'string'}], 'type':'MessageEntity'}, {'id':-1877614335, 'predicate':'updateShortSentMessage', 'params':[{'name':'flags', 'type':'#'}, {'name':'out', 'type':'flags.1?true'}, {'name':'id', 'type':'int'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}, {'name':'date', 'type':'int'}, {'name':'media', 'type':'flags.9?MessageMedia'}, {'name':'entities', 'type':'flags.7?Vector<MessageEntity>'}, {'name':'ttl_period', 'type':'flags.25?int'}], 'type':'Updates'}, {'id':-292807034, 'predicate':'inputChannelEmpty', 'params':[], 'type':'InputChannel'}, {'id':-212145112, 'predicate':'inputChannel', 'params':[{'name':'channel_id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputChannel'}, {'id':-1566230754, 'predicate':'peerChannel', 'params':[{'name':'channel_id', 'type':'long'}], 'type':'Peer'}, {'id':666680316, 'predicate':'inputPeerChannel', 'params':[{'name':'channel_id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputPeer'}, {'id':-2107528095, 'predicate':'channel', 'params':[{'name':'flags', 'type':'#'}, {'name':'creator', 'type':'flags.0?true'}, {'name':'left', 'type':'flags.2?true'}, {'name':'broadcast', 'type':'flags.5?true'}, {'name':'verified', 'type':'flags.7?true'}, {'name':'megagroup', 'type':'flags.8?true'}, {'name':'restricted', 'type':'flags.9?true'}, {'name':'signatures', 'type':'flags.11?true'}, {'name':'min', 'type':'flags.12?true'}, {'name':'scam', 'type':'flags.19?true'}, {'name':'has_link', 'type':'flags.20?true'}, {'name':'has_geo', 'type':'flags.21?true'}, {'name':'slowmode_enabled', 'type':'flags.22?true'}, {'name':'call_active', 'type':'flags.23?true'}, {'name':'call_not_empty', 'type':'flags.24?true'}, {'name':'fake', 'type':'flags.25?true'}, {'name':'gigagroup', 'type':'flags.26?true'}, {'name':'noforwards', 'type':'flags.27?true'}, {'name':'join_to_send', 'type':'flags.28?true'}, {'name':'join_request', 'type':'flags.29?true'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'flags.13?long'}, {'name':'title', 'type':'string'}, {'name':'username', 'type':'flags.6?string'}, {'name':'photo', 'type':'ChatPhoto'}, {'name':'date', 'type':'int'}, {'name':'restriction_reason', 'type':'flags.9?Vector<RestrictionReason>'}, {'name':'admin_rights', 'type':'flags.14?ChatAdminRights'}, {'name':'banned_rights', 'type':'flags.15?ChatBannedRights'}, {'name':'default_banned_rights', 'type':'flags.18?ChatBannedRights'}, {'name':'participants_count', 'type':'flags.17?int'}], 'type':'Chat'}, {'id':399807445, 'predicate':'channelForbidden', 'params':[{'name':'flags', 'type':'#'}, {'name':'broadcast', 'type':'flags.5?true'}, {'name':'megagroup', 'type':'flags.8?true'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'title', 'type':'string'}, {'name':'until_date', 'type':'flags.16?int'}], 'type':'Chat'}, {'id':2131196633, 'predicate':'contacts.resolvedPeer', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'contacts.ResolvedPeer'}, {'id':-362240487, 'predicate':'channelFull', 'params':[{'name':'flags', 'type':'#'}, {'name':'can_view_participants', 'type':'flags.3?true'}, {'name':'can_set_username', 'type':'flags.6?true'}, {'name':'can_set_stickers', 'type':'flags.7?true'}, {'name':'hidden_prehistory', 'type':'flags.10?true'}, {'name':'can_set_location', 'type':'flags.16?true'}, {'name':'has_scheduled', 'type':'flags.19?true'}, {'name':'can_view_stats', 'type':'flags.20?true'}, {'name':'blocked', 'type':'flags.22?true'}, {'name':'flags2', 'type':'#'}, {'name':'can_delete_channel', 'type':'flags2.0?true'}, {'name':'id', 'type':'long'}, {'name':'about', 'type':'string'}, {'name':'participants_count', 'type':'flags.0?int'}, {'name':'admins_count', 'type':'flags.1?int'}, {'name':'kicked_count', 'type':'flags.2?int'}, {'name':'banned_count', 'type':'flags.2?int'}, {'name':'online_count', 'type':'flags.13?int'}, {'name':'read_inbox_max_id', 'type':'int'}, {'name':'read_outbox_max_id', 'type':'int'}, {'name':'unread_count', 'type':'int'}, {'name':'chat_photo', 'type':'Photo'}, {'name':'notify_settings', 'type':'PeerNotifySettings'}, {'name':'exported_invite', 'type':'flags.23?ExportedChatInvite'}, {'name':'bot_info', 'type':'Vector<BotInfo>'}, {'name':'migrated_from_chat_id', 'type':'flags.4?long'}, {'name':'migrated_from_max_id', 'type':'flags.4?int'}, {'name':'pinned_msg_id', 'type':'flags.5?int'}, {'name':'stickerset', 'type':'flags.8?StickerSet'}, {'name':'available_min_id', 'type':'flags.9?int'}, {'name':'folder_id', 'type':'flags.11?int'}, {'name':'linked_chat_id', 'type':'flags.14?long'}, {'name':'location', 'type':'flags.15?ChannelLocation'}, {'name':'slowmode_seconds', 'type':'flags.17?int'}, {'name':'slowmode_next_send_date', 'type':'flags.18?int'}, {'name':'stats_dc', 'type':'flags.12?int'}, {'name':'pts', 'type':'int'}, {'name':'call', 'type':'flags.21?InputGroupCall'}, {'name':'ttl_period', 'type':'flags.24?int'}, {'name':'pending_suggestions', 'type':'flags.25?Vector<string>'}, {'name':'groupcall_default_join_as', 'type':'flags.26?Peer'}, {'name':'theme_emoticon', 'type':'flags.27?string'}, {'name':'requests_pending', 'type':'flags.28?int'}, {'name':'recent_requesters', 'type':'flags.28?Vector<long>'}, {'name':'default_send_as', 'type':'flags.29?Peer'}, {'name':'available_reactions', 'type':'flags.30?Vector<string>'}], 'type':'ChatFull'}, {'id':182649427, 'predicate':'messageRange', 'params':[{'name':'min_id', 'type':'int'}, {'name':'max_id', 'type':'int'}], 'type':'MessageRange'}, {'id':1682413576, 'predicate':'messages.channelMessages', 'params':[{'name':'flags', 'type':'#'}, {'name':'inexact', 'type':'flags.1?true'}, {'name':'pts', 'type':'int'}, {'name':'count', 'type':'int'}, {'name':'offset_id_offset', 'type':'flags.2?int'}, {'name':'messages', 'type':'Vector<Message>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.Messages'}, {'id':-1781355374, 'predicate':'messageActionChannelCreate', 'params':[{'name':'title', 'type':'string'}], 'type':'MessageAction'}, {'id':277713951, 'predicate':'updateChannelTooLong', 'params':[{'name':'flags', 'type':'#'}, {'name':'channel_id', 'type':'long'}, {'name':'pts', 'type':'flags.0?int'}], 'type':'Update'}, {'id':1666927625, 'predicate':'updateChannel', 'params':[{'name':'channel_id', 'type':'long'}], 'type':'Update'}, {'id':1656358105, 'predicate':'updateNewChannelMessage', 'params':[{'name':'message', 'type':'Message'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':-1842450928, 'predicate':'updateReadChannelInbox', 'params':[{'name':'flags', 'type':'#'}, {'name':'folder_id', 'type':'flags.0?int'}, {'name':'channel_id', 'type':'long'}, {'name':'max_id', 'type':'int'}, {'name':'still_unread_count', 'type':'int'}, {'name':'pts', 'type':'int'}], 'type':'Update'}, {'id':-1020437742, 'predicate':'updateDeleteChannelMessages', 'params':[{'name':'channel_id', 'type':'long'}, {'name':'messages', 'type':'Vector<int>'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':-232346616, 'predicate':'updateChannelMessageViews', 'params':[{'name':'channel_id', 'type':'long'}, {'name':'id', 'type':'int'}, {'name':'views', 'type':'int'}], 'type':'Update'}, {'id':1041346555, 'predicate':'updates.channelDifferenceEmpty', 'params':[{'name':'flags', 'type':'#'}, {'name':'final', 'type':'flags.0?true'}, {'name':'pts', 'type':'int'}, {'name':'timeout', 'type':'flags.1?int'}], 'type':'updates.ChannelDifference'}, {'id':-1531132162, 'predicate':'updates.channelDifferenceTooLong', 'params':[{'name':'flags', 'type':'#'}, {'name':'final', 'type':'flags.0?true'}, {'name':'timeout', 'type':'flags.1?int'}, {'name':'dialog', 'type':'Dialog'}, {'name':'messages', 'type':'Vector<Message>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'updates.ChannelDifference'}, {'id':543450958, 'predicate':'updates.channelDifference', 'params':[{'name':'flags', 'type':'#'}, {'name':'final', 'type':'flags.0?true'}, {'name':'pts', 'type':'int'}, {'name':'timeout', 'type':'flags.1?int'}, {'name':'new_messages', 'type':'Vector<Message>'}, {'name':'other_updates', 'type':'Vector<Update>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'updates.ChannelDifference'}, {'id':-1798033689, 'predicate':'channelMessagesFilterEmpty', 'params':[], 'type':'ChannelMessagesFilter'}, {'id':-847783593, 'predicate':'channelMessagesFilter', 'params':[{'name':'flags', 'type':'#'}, {'name':'exclude_new_messages', 'type':'flags.1?true'}, {'name':'ranges', 'type':'Vector<MessageRange>'}], 'type':'ChannelMessagesFilter'}, {'id':-1072953408, 'predicate':'channelParticipant', 'params':[{'name':'user_id', 'type':'long'}, {'name':'date', 'type':'int'}], 'type':'ChannelParticipant'}, {'id':900251559, 'predicate':'channelParticipantSelf', 'params':[{'name':'flags', 'type':'#'}, {'name':'via_request', 'type':'flags.0?true'}, {'name':'user_id', 'type':'long'}, {'name':'inviter_id', 'type':'long'}, {'name':'date', 'type':'int'}], 'type':'ChannelParticipant'}, {'id':803602899, 'predicate':'channelParticipantCreator', 'params':[{'name':'flags', 'type':'#'}, {'name':'user_id', 'type':'long'}, {'name':'admin_rights', 'type':'ChatAdminRights'}, {'name':'rank', 'type':'flags.0?string'}], 'type':'ChannelParticipant'}, {'id':-566281095, 'predicate':'channelParticipantsRecent', 'params':[], 'type':'ChannelParticipantsFilter'}, {'id':-1268741783, 'predicate':'channelParticipantsAdmins', 'params':[], 'type':'ChannelParticipantsFilter'}, {'id':-1548400251, 'predicate':'channelParticipantsKicked', 'params':[{'name':'q', 'type':'string'}], 'type':'ChannelParticipantsFilter'}, {'id':-1699676497, 'predicate':'channels.channelParticipants', 'params':[{'name':'count', 'type':'int'}, {'name':'participants', 'type':'Vector<ChannelParticipant>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'channels.ChannelParticipants'}, {'id':-541588713, 'predicate':'channels.channelParticipant', 'params':[{'name':'participant', 'type':'ChannelParticipant'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'channels.ChannelParticipant'}, {'id':-462696732, 'predicate':'chatParticipantCreator', 'params':[{'name':'user_id', 'type':'long'}], 'type':'ChatParticipant'}, {'id':-1600962725, 'predicate':'chatParticipantAdmin', 'params':[{'name':'user_id', 'type':'long'}, {'name':'inviter_id', 'type':'long'}, {'name':'date', 'type':'int'}], 'type':'ChatParticipant'}, {'id':-674602590, 'predicate':'updateChatParticipantAdmin', 'params':[{'name':'chat_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'is_admin', 'type':'Bool'}, {'name':'version', 'type':'int'}], 'type':'Update'}, {'id':-519864430, 'predicate':'messageActionChatMigrateTo', 'params':[{'name':'channel_id', 'type':'long'}], 'type':'MessageAction'}, {'id':-365344535, 'predicate':'messageActionChannelMigrateFrom', 'params':[{'name':'title', 'type':'string'}, {'name':'chat_id', 'type':'long'}], 'type':'MessageAction'}, {'id':-1328445861, 'predicate':'channelParticipantsBots', 'params':[], 'type':'ChannelParticipantsFilter'}, {'id':2013922064, 'predicate':'help.termsOfService', 'params':[{'name':'flags', 'type':'#'}, {'name':'popup', 'type':'flags.0?true'}, {'name':'id', 'type':'DataJSON'}, {'name':'text', 'type':'string'}, {'name':'entities', 'type':'Vector<MessageEntity>'}, {'name':'min_age_confirm', 'type':'flags.1?int'}], 'type':'help.TermsOfService'}, {'id':1753886890, 'predicate':'updateNewStickerSet', 'params':[{'name':'stickerset', 'type':'messages.StickerSet'}], 'type':'Update'}, {'id':196268545, 'predicate':'updateStickerSetsOrder', 'params':[{'name':'flags', 'type':'#'}, {'name':'masks', 'type':'flags.0?true'}, {'name':'emojis', 'type':'flags.1?true'}, {'name':'order', 'type':'Vector<long>'}], 'type':'Update'}, {'id':1135492588, 'predicate':'updateStickerSets', 'params':[], 'type':'Update'}, {'id':-402498398, 'predicate':'messages.savedGifsNotModified', 'params':[], 'type':'messages.SavedGifs'}, {'id':-2069878259, 'predicate':'messages.savedGifs', 'params':[{'name':'hash', 'type':'long'}, {'name':'gifs', 'type':'Vector<Document>'}], 'type':'messages.SavedGifs'}, {'id':-1821035490, 'predicate':'updateSavedGifs', 'params':[], 'type':'Update'}, {'id':864077702, 'predicate':'inputBotInlineMessageMediaAuto', 'params':[{'name':'flags', 'type':'#'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'flags.1?Vector<MessageEntity>'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'InputBotInlineMessage'}, {'id':1036876423, 'predicate':'inputBotInlineMessageText', 'params':[{'name':'flags', 'type':'#'}, {'name':'no_webpage', 'type':'flags.0?true'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'flags.1?Vector<MessageEntity>'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'InputBotInlineMessage'}, {'id':-2000710887, 'predicate':'inputBotInlineResult', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'string'}, {'name':'type', 'type':'string'}, {'name':'title', 'type':'flags.1?string'}, {'name':'description', 'type':'flags.2?string'}, {'name':'url', 'type':'flags.3?string'}, {'name':'thumb', 'type':'flags.4?InputWebDocument'}, {'name':'content', 'type':'flags.5?InputWebDocument'}, {'name':'send_message', 'type':'InputBotInlineMessage'}], 'type':'InputBotInlineResult'}, {'id':1984755728, 'predicate':'botInlineMessageMediaAuto', 'params':[{'name':'flags', 'type':'#'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'flags.1?Vector<MessageEntity>'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'BotInlineMessage'}, {'id':-1937807902, 'predicate':'botInlineMessageText', 'params':[{'name':'flags', 'type':'#'}, {'name':'no_webpage', 'type':'flags.0?true'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'flags.1?Vector<MessageEntity>'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'BotInlineMessage'}, {'id':295067450, 'predicate':'botInlineResult', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'string'}, {'name':'type', 'type':'string'}, {'name':'title', 'type':'flags.1?string'}, {'name':'description', 'type':'flags.2?string'}, {'name':'url', 'type':'flags.3?string'}, {'name':'thumb', 'type':'flags.4?WebDocument'}, {'name':'content', 'type':'flags.5?WebDocument'}, {'name':'send_message', 'type':'BotInlineMessage'}], 'type':'BotInlineResult'}, {'id':-1803769784, 'predicate':'messages.botResults', 'params':[{'name':'flags', 'type':'#'}, {'name':'gallery', 'type':'flags.0?true'}, {'name':'query_id', 'type':'long'}, {'name':'next_offset', 'type':'flags.1?string'}, {'name':'switch_pm', 'type':'flags.2?InlineBotSwitchPM'}, {'name':'results', 'type':'Vector<BotInlineResult>'}, {'name':'cache_time', 'type':'int'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.BotResults'}, {'id':1232025500, 'predicate':'updateBotInlineQuery', 'params':[{'name':'flags', 'type':'#'}, {'name':'query_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'query', 'type':'string'}, {'name':'geo', 'type':'flags.0?GeoPoint'}, {'name':'peer_type', 'type':'flags.1?InlineQueryPeerType'}, {'name':'offset', 'type':'string'}], 'type':'Update'}, {'id':317794823, 'predicate':'updateBotInlineSend', 'params':[{'name':'flags', 'type':'#'}, {'name':'user_id', 'type':'long'}, {'name':'query', 'type':'string'}, {'name':'geo', 'type':'flags.0?GeoPoint'}, {'name':'id', 'type':'string'}, {'name':'msg_id', 'type':'flags.1?InputBotInlineMessageID'}], 'type':'Update'}, {'id':1358283666, 'predicate':'inputMessagesFilterVoice', 'params':[], 'type':'MessagesFilter'}, {'id':928101534, 'predicate':'inputMessagesFilterMusic', 'params':[], 'type':'MessagesFilter'}, {'id':-1107622874, 'predicate':'inputPrivacyKeyChatInvite', 'params':[], 'type':'InputPrivacyKey'}, {'id':1343122938, 'predicate':'privacyKeyChatInvite', 'params':[], 'type':'PrivacyKey'}, {'id':1571494644, 'predicate':'exportedMessageLink', 'params':[{'name':'link', 'type':'string'}, {'name':'html', 'type':'string'}], 'type':'ExportedMessageLink'}, {'id':1601666510, 'predicate':'messageFwdHeader', 'params':[{'name':'flags', 'type':'#'}, {'name':'imported', 'type':'flags.7?true'}, {'name':'from_id', 'type':'flags.0?Peer'}, {'name':'from_name', 'type':'flags.5?string'}, {'name':'date', 'type':'int'}, {'name':'channel_post', 'type':'flags.2?int'}, {'name':'post_author', 'type':'flags.3?string'}, {'name':'saved_from_peer', 'type':'flags.4?Peer'}, {'name':'saved_from_msg_id', 'type':'flags.4?int'}, {'name':'psa_type', 'type':'flags.6?string'}], 'type':'MessageFwdHeader'}, {'id':457133559, 'predicate':'updateEditChannelMessage', 'params':[{'name':'message', 'type':'Message'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':-1799538451, 'predicate':'messageActionPinMessage', 'params':[], 'type':'MessageAction'}, {'id':1923290508, 'predicate':'auth.codeTypeSms', 'params':[], 'type':'auth.CodeType'}, {'id':1948046307, 'predicate':'auth.codeTypeCall', 'params':[], 'type':'auth.CodeType'}, {'id':577556219, 'predicate':'auth.codeTypeFlashCall', 'params':[], 'type':'auth.CodeType'}, {'id':1035688326, 'predicate':'auth.sentCodeTypeApp', 'params':[{'name':'length', 'type':'int'}], 'type':'auth.SentCodeType'}, {'id':-1073693790, 'predicate':'auth.sentCodeTypeSms', 'params':[{'name':'length', 'type':'int'}], 'type':'auth.SentCodeType'}, {'id':1398007207, 'predicate':'auth.sentCodeTypeCall', 'params':[{'name':'length', 'type':'int'}], 'type':'auth.SentCodeType'}, {'id':-1425815847, 'predicate':'auth.sentCodeTypeFlashCall', 'params':[{'name':'pattern', 'type':'string'}], 'type':'auth.SentCodeType'}, {'id':629866245, 'predicate':'keyboardButtonUrl', 'params':[{'name':'text', 'type':'string'}, {'name':'url', 'type':'string'}], 'type':'KeyboardButton'}, {'id':901503851, 'predicate':'keyboardButtonCallback', 'params':[{'name':'flags', 'type':'#'}, {'name':'requires_password', 'type':'flags.0?true'}, {'name':'text', 'type':'string'}, {'name':'data', 'type':'bytes'}], 'type':'KeyboardButton'}, {'id':-1318425559, 'predicate':'keyboardButtonRequestPhone', 'params':[{'name':'text', 'type':'string'}], 'type':'KeyboardButton'}, {'id':-59151553, 'predicate':'keyboardButtonRequestGeoLocation', 'params':[{'name':'text', 'type':'string'}], 'type':'KeyboardButton'}, {'id':90744648, 'predicate':'keyboardButtonSwitchInline', 'params':[{'name':'flags', 'type':'#'}, {'name':'same_peer', 'type':'flags.0?true'}, {'name':'text', 'type':'string'}, {'name':'query', 'type':'string'}], 'type':'KeyboardButton'}, {'id':1218642516, 'predicate':'replyInlineMarkup', 'params':[{'name':'rows', 'type':'Vector<KeyboardButtonRow>'}], 'type':'ReplyMarkup'}, {'id':911761060, 'predicate':'messages.botCallbackAnswer', 'params':[{'name':'flags', 'type':'#'}, {'name':'alert', 'type':'flags.1?true'}, {'name':'has_url', 'type':'flags.3?true'}, {'name':'native_ui', 'type':'flags.4?true'}, {'name':'message', 'type':'flags.0?string'}, {'name':'url', 'type':'flags.2?string'}, {'name':'cache_time', 'type':'int'}], 'type':'messages.BotCallbackAnswer'}, {'id':-1177566067, 'predicate':'updateBotCallbackQuery', 'params':[{'name':'flags', 'type':'#'}, {'name':'query_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'peer', 'type':'Peer'}, {'name':'msg_id', 'type':'int'}, {'name':'chat_instance', 'type':'long'}, {'name':'data', 'type':'flags.0?bytes'}, {'name':'game_short_name', 'type':'flags.1?string'}], 'type':'Update'}, {'id':649453030, 'predicate':'messages.messageEditData', 'params':[{'name':'flags', 'type':'#'}, {'name':'caption', 'type':'flags.0?true'}], 'type':'messages.MessageEditData'}, {'id':-469536605, 'predicate':'updateEditMessage', 'params':[{'name':'message', 'type':'Message'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':-1768777083, 'predicate':'inputBotInlineMessageMediaGeo', 'params':[{'name':'flags', 'type':'#'}, {'name':'geo_point', 'type':'InputGeoPoint'}, {'name':'heading', 'type':'flags.0?int'}, {'name':'period', 'type':'flags.1?int'}, {'name':'proximity_notification_radius', 'type':'flags.3?int'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'InputBotInlineMessage'}, {'id':1098628881, 'predicate':'inputBotInlineMessageMediaVenue', 'params':[{'name':'flags', 'type':'#'}, {'name':'geo_point', 'type':'InputGeoPoint'}, {'name':'title', 'type':'string'}, {'name':'address', 'type':'string'}, {'name':'provider', 'type':'string'}, {'name':'venue_id', 'type':'string'}, {'name':'venue_type', 'type':'string'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'InputBotInlineMessage'}, {'id':-1494368259, 'predicate':'inputBotInlineMessageMediaContact', 'params':[{'name':'flags', 'type':'#'}, {'name':'phone_number', 'type':'string'}, {'name':'first_name', 'type':'string'}, {'name':'last_name', 'type':'string'}, {'name':'vcard', 'type':'string'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'InputBotInlineMessage'}, {'id':85477117, 'predicate':'botInlineMessageMediaGeo', 'params':[{'name':'flags', 'type':'#'}, {'name':'geo', 'type':'GeoPoint'}, {'name':'heading', 'type':'flags.0?int'}, {'name':'period', 'type':'flags.1?int'}, {'name':'proximity_notification_radius', 'type':'flags.3?int'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'BotInlineMessage'}, {'id':-1970903652, 'predicate':'botInlineMessageMediaVenue', 'params':[{'name':'flags', 'type':'#'}, {'name':'geo', 'type':'GeoPoint'}, {'name':'title', 'type':'string'}, {'name':'address', 'type':'string'}, {'name':'provider', 'type':'string'}, {'name':'venue_id', 'type':'string'}, {'name':'venue_type', 'type':'string'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'BotInlineMessage'}, {'id':416402882, 'predicate':'botInlineMessageMediaContact', 'params':[{'name':'flags', 'type':'#'}, {'name':'phone_number', 'type':'string'}, {'name':'first_name', 'type':'string'}, {'name':'last_name', 'type':'string'}, {'name':'vcard', 'type':'string'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'BotInlineMessage'}, {'id':-1462213465, 'predicate':'inputBotInlineResultPhoto', 'params':[{'name':'id', 'type':'string'}, {'name':'type', 'type':'string'}, {'name':'photo', 'type':'InputPhoto'}, {'name':'send_message', 'type':'InputBotInlineMessage'}], 'type':'InputBotInlineResult'}, {'id':-459324, 'predicate':'inputBotInlineResultDocument', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'string'}, {'name':'type', 'type':'string'}, {'name':'title', 'type':'flags.1?string'}, {'name':'description', 'type':'flags.2?string'}, {'name':'document', 'type':'InputDocument'}, {'name':'send_message', 'type':'InputBotInlineMessage'}], 'type':'InputBotInlineResult'}, {'id':400266251, 'predicate':'botInlineMediaResult', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'string'}, {'name':'type', 'type':'string'}, {'name':'photo', 'type':'flags.0?Photo'}, {'name':'document', 'type':'flags.1?Document'}, {'name':'title', 'type':'flags.2?string'}, {'name':'description', 'type':'flags.3?string'}, {'name':'send_message', 'type':'BotInlineMessage'}], 'type':'BotInlineResult'}, {'id':-1995686519, 'predicate':'inputBotInlineMessageID', 'params':[{'name':'dc_id', 'type':'int'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputBotInlineMessageID'}, {'id':1763610706, 'predicate':'updateInlineBotCallbackQuery', 'params':[{'name':'flags', 'type':'#'}, {'name':'query_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'msg_id', 'type':'InputBotInlineMessageID'}, {'name':'chat_instance', 'type':'long'}, {'name':'data', 'type':'flags.0?bytes'}, {'name':'game_short_name', 'type':'flags.1?string'}], 'type':'Update'}, {'id':1008755359, 'predicate':'inlineBotSwitchPM', 'params':[{'name':'text', 'type':'string'}, {'name':'start_param', 'type':'string'}], 'type':'InlineBotSwitchPM'}, {'id':863093588, 'predicate':'messages.peerDialogs', 'params':[{'name':'dialogs', 'type':'Vector<Dialog>'}, {'name':'messages', 'type':'Vector<Message>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}, {'name':'state', 'type':'updates.State'}], 'type':'messages.PeerDialogs'}, {'id':-305282981, 'predicate':'topPeer', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'rating', 'type':'double'}], 'type':'TopPeer'}, {'id':-1419371685, 'predicate':'topPeerCategoryBotsPM', 'params':[], 'type':'TopPeerCategory'}, {'id':344356834, 'predicate':'topPeerCategoryBotsInline', 'params':[], 'type':'TopPeerCategory'}, {'id':104314861, 'predicate':'topPeerCategoryCorrespondents', 'params':[], 'type':'TopPeerCategory'}, {'id':-1122524854, 'predicate':'topPeerCategoryGroups', 'params':[], 'type':'TopPeerCategory'}, {'id':371037736, 'predicate':'topPeerCategoryChannels', 'params':[], 'type':'TopPeerCategory'}, {'id':-75283823, 'predicate':'topPeerCategoryPeers', 'params':[{'name':'category', 'type':'TopPeerCategory'}, {'name':'count', 'type':'int'}, {'name':'peers', 'type':'Vector<TopPeer>'}], 'type':'TopPeerCategoryPeers'}, {'id':-567906571, 'predicate':'contacts.topPeersNotModified', 'params':[], 'type':'contacts.TopPeers'}, {'id':1891070632, 'predicate':'contacts.topPeers', 'params':[{'name':'categories', 'type':'Vector<TopPeerCategoryPeers>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'contacts.TopPeers'}, {'id':-595914432, 'predicate':'messageEntityMentionName', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}, {'name':'user_id', 'type':'long'}], 'type':'MessageEntity'}, {'id':546203849, 'predicate':'inputMessageEntityMentionName', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}, {'name':'user_id', 'type':'InputUser'}], 'type':'MessageEntity'}, {'id':975236280, 'predicate':'inputMessagesFilterChatPhotos', 'params':[], 'type':'MessagesFilter'}, {'id':-1218471511, 'predicate':'updateReadChannelOutbox', 'params':[{'name':'channel_id', 'type':'long'}, {'name':'max_id', 'type':'int'}], 'type':'Update'}, {'id':-299124375, 'predicate':'updateDraftMessage', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'draft', 'type':'DraftMessage'}], 'type':'Update'}, {'id':453805082, 'predicate':'draftMessageEmpty', 'params':[{'name':'flags', 'type':'#'}, {'name':'date', 'type':'flags.0?int'}], 'type':'DraftMessage'}, {'id':-40996577, 'predicate':'draftMessage', 'params':[{'name':'flags', 'type':'#'}, {'name':'no_webpage', 'type':'flags.1?true'}, {'name':'reply_to_msg_id', 'type':'flags.0?int'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'flags.3?Vector<MessageEntity>'}, {'name':'date', 'type':'int'}], 'type':'DraftMessage'}, {'id':-1615153660, 'predicate':'messageActionHistoryClear', 'params':[], 'type':'MessageAction'}, {'id':-958657434, 'predicate':'messages.featuredStickersNotModified', 'params':[{'name':'count', 'type':'int'}], 'type':'messages.FeaturedStickers'}, {'id':-1103615738, 'predicate':'messages.featuredStickers', 'params':[{'name':'flags', 'type':'#'}, {'name':'premium', 'type':'flags.0?true'}, {'name':'hash', 'type':'long'}, {'name':'count', 'type':'int'}, {'name':'sets', 'type':'Vector<StickerSetCovered>'}, {'name':'unread', 'type':'Vector<long>'}], 'type':'messages.FeaturedStickers'}, {'id':1461528386, 'predicate':'updateReadFeaturedStickers', 'params':[], 'type':'Update'}, {'id':186120336, 'predicate':'messages.recentStickersNotModified', 'params':[], 'type':'messages.RecentStickers'}, {'id':-1999405994, 'predicate':'messages.recentStickers', 'params':[{'name':'hash', 'type':'long'}, {'name':'packs', 'type':'Vector<StickerPack>'}, {'name':'stickers', 'type':'Vector<Document>'}, {'name':'dates', 'type':'Vector<int>'}], 'type':'messages.RecentStickers'}, {'id':-1706939360, 'predicate':'updateRecentStickers', 'params':[], 'type':'Update'}, {'id':1338747336, 'predicate':'messages.archivedStickers', 'params':[{'name':'count', 'type':'int'}, {'name':'sets', 'type':'Vector<StickerSetCovered>'}], 'type':'messages.ArchivedStickers'}, {'id':946083368, 'predicate':'messages.stickerSetInstallResultSuccess', 'params':[], 'type':'messages.StickerSetInstallResult'}, {'id':904138920, 'predicate':'messages.stickerSetInstallResultArchive', 'params':[{'name':'sets', 'type':'Vector<StickerSetCovered>'}], 'type':'messages.StickerSetInstallResult'}, {'id':1678812626, 'predicate':'stickerSetCovered', 'params':[{'name':'set', 'type':'StickerSet'}, {'name':'cover', 'type':'Document'}], 'type':'StickerSetCovered'}, {'id':-1574314746, 'predicate':'updateConfig', 'params':[], 'type':'Update'}, {'id':861169551, 'predicate':'updatePtsChanged', 'params':[], 'type':'Update'}, {'id':-440664550, 'predicate':'inputMediaPhotoExternal', 'params':[{'name':'flags', 'type':'#'}, {'name':'url', 'type':'string'}, {'name':'ttl_seconds', 'type':'flags.0?int'}], 'type':'InputMedia'}, {'id':-78455655, 'predicate':'inputMediaDocumentExternal', 'params':[{'name':'flags', 'type':'#'}, {'name':'url', 'type':'string'}, {'name':'ttl_seconds', 'type':'flags.0?int'}], 'type':'InputMedia'}, {'id':872932635, 'predicate':'stickerSetMultiCovered', 'params':[{'name':'set', 'type':'StickerSet'}, {'name':'covers', 'type':'Vector<Document>'}], 'type':'StickerSetCovered'}, {'id':-1361650766, 'predicate':'maskCoords', 'params':[{'name':'n', 'type':'int'}, {'name':'x', 'type':'double'}, {'name':'y', 'type':'double'}, {'name':'zoom', 'type':'double'}], 'type':'MaskCoords'}, {'id':-1744710921, 'predicate':'documentAttributeHasStickers', 'params':[], 'type':'DocumentAttribute'}, {'id':1251549527, 'predicate':'inputStickeredMediaPhoto', 'params':[{'name':'id', 'type':'InputPhoto'}], 'type':'InputStickeredMedia'}, {'id':70813275, 'predicate':'inputStickeredMediaDocument', 'params':[{'name':'id', 'type':'InputDocument'}], 'type':'InputStickeredMedia'}, {'id':-1107729093, 'predicate':'game', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'short_name', 'type':'string'}, {'name':'title', 'type':'string'}, {'name':'description', 'type':'string'}, {'name':'photo', 'type':'Photo'}, {'name':'document', 'type':'flags.0?Document'}], 'type':'Game'}, {'id':1336154098, 'predicate':'inputBotInlineResultGame', 'params':[{'name':'id', 'type':'string'}, {'name':'short_name', 'type':'string'}, {'name':'send_message', 'type':'InputBotInlineMessage'}], 'type':'InputBotInlineResult'}, {'id':1262639204, 'predicate':'inputBotInlineMessageGame', 'params':[{'name':'flags', 'type':'#'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'InputBotInlineMessage'}, {'id':-38694904, 'predicate':'messageMediaGame', 'params':[{'name':'game', 'type':'Game'}], 'type':'MessageMedia'}, {'id':-750828557, 'predicate':'inputMediaGame', 'params':[{'name':'id', 'type':'InputGame'}], 'type':'InputMedia'}, {'id':53231223, 'predicate':'inputGameID', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputGame'}, {'id':-1020139510, 'predicate':'inputGameShortName', 'params':[{'name':'bot_id', 'type':'InputUser'}, {'name':'short_name', 'type':'string'}], 'type':'InputGame'}, {'id':1358175439, 'predicate':'keyboardButtonGame', 'params':[{'name':'text', 'type':'string'}], 'type':'KeyboardButton'}, {'id':-1834538890, 'predicate':'messageActionGameScore', 'params':[{'name':'game_id', 'type':'long'}, {'name':'score', 'type':'int'}], 'type':'MessageAction'}, {'id':1940093419, 'predicate':'highScore', 'params':[{'name':'pos', 'type':'int'}, {'name':'user_id', 'type':'long'}, {'name':'score', 'type':'int'}], 'type':'HighScore'}, {'id':-1707344487, 'predicate':'messages.highScores', 'params':[{'name':'scores', 'type':'Vector<HighScore>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.HighScores'}, {'id':1258196845, 'predicate':'updates.differenceTooLong', 'params':[{'name':'pts', 'type':'int'}], 'type':'updates.Difference'}, {'id':791390623, 'predicate':'updateChannelWebPage', 'params':[{'name':'channel_id', 'type':'long'}, {'name':'webpage', 'type':'WebPage'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':-1663561404, 'predicate':'messages.chatsSlice', 'params':[{'name':'count', 'type':'int'}, {'name':'chats', 'type':'Vector<Chat>'}], 'type':'messages.Chats'}, {'id':-599948721, 'predicate':'textEmpty', 'params':[], 'type':'RichText'}, {'id':1950782688, 'predicate':'textPlain', 'params':[{'name':'text', 'type':'string'}], 'type':'RichText'}, {'id':1730456516, 'predicate':'textBold', 'params':[{'name':'text', 'type':'RichText'}], 'type':'RichText'}, {'id':-653089380, 'predicate':'textItalic', 'params':[{'name':'text', 'type':'RichText'}], 'type':'RichText'}, {'id':-1054465340, 'predicate':'textUnderline', 'params':[{'name':'text', 'type':'RichText'}], 'type':'RichText'}, {'id':-1678197867, 'predicate':'textStrike', 'params':[{'name':'text', 'type':'RichText'}], 'type':'RichText'}, {'id':1816074681, 'predicate':'textFixed', 'params':[{'name':'text', 'type':'RichText'}], 'type':'RichText'}, {'id':1009288385, 'predicate':'textUrl', 'params':[{'name':'text', 'type':'RichText'}, {'name':'url', 'type':'string'}, {'name':'webpage_id', 'type':'long'}], 'type':'RichText'}, {'id':-564523562, 'predicate':'textEmail', 'params':[{'name':'text', 'type':'RichText'}, {'name':'email', 'type':'string'}], 'type':'RichText'}, {'id':2120376535, 'predicate':'textConcat', 'params':[{'name':'texts', 'type':'Vector<RichText>'}], 'type':'RichText'}, {'id':324435594, 'predicate':'pageBlockUnsupported', 'params':[], 'type':'PageBlock'}, {'id':1890305021, 'predicate':'pageBlockTitle', 'params':[{'name':'text', 'type':'RichText'}], 'type':'PageBlock'}, {'id':-1879401953, 'predicate':'pageBlockSubtitle', 'params':[{'name':'text', 'type':'RichText'}], 'type':'PageBlock'}, {'id':-1162877472, 'predicate':'pageBlockAuthorDate', 'params':[{'name':'author', 'type':'RichText'}, {'name':'published_date', 'type':'int'}], 'type':'PageBlock'}, {'id':-1076861716, 'predicate':'pageBlockHeader', 'params':[{'name':'text', 'type':'RichText'}], 'type':'PageBlock'}, {'id':-248793375, 'predicate':'pageBlockSubheader', 'params':[{'name':'text', 'type':'RichText'}], 'type':'PageBlock'}, {'id':1182402406, 'predicate':'pageBlockParagraph', 'params':[{'name':'text', 'type':'RichText'}], 'type':'PageBlock'}, {'id':-1066346178, 'predicate':'pageBlockPreformatted', 'params':[{'name':'text', 'type':'RichText'}, {'name':'language', 'type':'string'}], 'type':'PageBlock'}, {'id':1216809369, 'predicate':'pageBlockFooter', 'params':[{'name':'text', 'type':'RichText'}], 'type':'PageBlock'}, {'id':-618614392, 'predicate':'pageBlockDivider', 'params':[], 'type':'PageBlock'}, {'id':-837994576, 'predicate':'pageBlockAnchor', 'params':[{'name':'name', 'type':'string'}], 'type':'PageBlock'}, {'id':-454524911, 'predicate':'pageBlockList', 'params':[{'name':'items', 'type':'Vector<PageListItem>'}], 'type':'PageBlock'}, {'id':641563686, 'predicate':'pageBlockBlockquote', 'params':[{'name':'text', 'type':'RichText'}, {'name':'caption', 'type':'RichText'}], 'type':'PageBlock'}, {'id':1329878739, 'predicate':'pageBlockPullquote', 'params':[{'name':'text', 'type':'RichText'}, {'name':'caption', 'type':'RichText'}], 'type':'PageBlock'}, {'id':391759200, 'predicate':'pageBlockPhoto', 'params':[{'name':'flags', 'type':'#'}, {'name':'photo_id', 'type':'long'}, {'name':'caption', 'type':'PageCaption'}, {'name':'url', 'type':'flags.0?string'}, {'name':'webpage_id', 'type':'flags.0?long'}], 'type':'PageBlock'}, {'id':2089805750, 'predicate':'pageBlockVideo', 'params':[{'name':'flags', 'type':'#'}, {'name':'autoplay', 'type':'flags.0?true'}, {'name':'loop', 'type':'flags.1?true'}, {'name':'video_id', 'type':'long'}, {'name':'caption', 'type':'PageCaption'}], 'type':'PageBlock'}, {'id':972174080, 'predicate':'pageBlockCover', 'params':[{'name':'cover', 'type':'PageBlock'}], 'type':'PageBlock'}, {'id':-1468953147, 'predicate':'pageBlockEmbed', 'params':[{'name':'flags', 'type':'#'}, {'name':'full_width', 'type':'flags.0?true'}, {'name':'allow_scrolling', 'type':'flags.3?true'}, {'name':'url', 'type':'flags.1?string'}, {'name':'html', 'type':'flags.2?string'}, {'name':'poster_photo_id', 'type':'flags.4?long'}, {'name':'w', 'type':'flags.5?int'}, {'name':'h', 'type':'flags.5?int'}, {'name':'caption', 'type':'PageCaption'}], 'type':'PageBlock'}, {'id':-229005301, 'predicate':'pageBlockEmbedPost', 'params':[{'name':'url', 'type':'string'}, {'name':'webpage_id', 'type':'long'}, {'name':'author_photo_id', 'type':'long'}, {'name':'author', 'type':'string'}, {'name':'date', 'type':'int'}, {'name':'blocks', 'type':'Vector<PageBlock>'}, {'name':'caption', 'type':'PageCaption'}], 'type':'PageBlock'}, {'id':1705048653, 'predicate':'pageBlockCollage', 'params':[{'name':'items', 'type':'Vector<PageBlock>'}, {'name':'caption', 'type':'PageCaption'}], 'type':'PageBlock'}, {'id':52401552, 'predicate':'pageBlockSlideshow', 'params':[{'name':'items', 'type':'Vector<PageBlock>'}, {'name':'caption', 'type':'PageCaption'}], 'type':'PageBlock'}, {'id':1930545681, 'predicate':'webPageNotModified', 'params':[{'name':'flags', 'type':'#'}, {'name':'cached_page_views', 'type':'flags.0?int'}], 'type':'WebPage'}, {'id':-88417185, 'predicate':'inputPrivacyKeyPhoneCall', 'params':[], 'type':'InputPrivacyKey'}, {'id':1030105979, 'predicate':'privacyKeyPhoneCall', 'params':[], 'type':'PrivacyKey'}, {'id':-580219064, 'predicate':'sendMessageGamePlayAction', 'params':[], 'type':'SendMessageAction'}, {'id':-2048646399, 'predicate':'phoneCallDiscardReasonMissed', 'params':[], 'type':'PhoneCallDiscardReason'}, {'id':-527056480, 'predicate':'phoneCallDiscardReasonDisconnect', 'params':[], 'type':'PhoneCallDiscardReason'}, {'id':1471006352, 'predicate':'phoneCallDiscardReasonHangup', 'params':[], 'type':'PhoneCallDiscardReason'}, {'id':-84416311, 'predicate':'phoneCallDiscardReasonBusy', 'params':[], 'type':'PhoneCallDiscardReason'}, {'id':1852826908, 'predicate':'updateDialogPinned', 'params':[{'name':'flags', 'type':'#'}, {'name':'pinned', 'type':'flags.0?true'}, {'name':'folder_id', 'type':'flags.1?int'}, {'name':'peer', 'type':'DialogPeer'}], 'type':'Update'}, {'id':-99664734, 'predicate':'updatePinnedDialogs', 'params':[{'name':'flags', 'type':'#'}, {'name':'folder_id', 'type':'flags.1?int'}, {'name':'order', 'type':'flags.0?Vector<DialogPeer>'}], 'type':'Update'}, {'id':2104790276, 'predicate':'dataJSON', 'params':[{'name':'data', 'type':'string'}], 'type':'DataJSON'}, {'id':-2095595325, 'predicate':'updateBotWebhookJSON', 'params':[{'name':'data', 'type':'DataJSON'}], 'type':'Update'}, {'id':-1684914010, 'predicate':'updateBotWebhookJSONQuery', 'params':[{'name':'query_id', 'type':'long'}, {'name':'data', 'type':'DataJSON'}, {'name':'timeout', 'type':'int'}], 'type':'Update'}, {'id':-886477832, 'predicate':'labeledPrice', 'params':[{'name':'label', 'type':'string'}, {'name':'amount', 'type':'long'}], 'type':'LabeledPrice'}, {'id':1048946971, 'predicate':'invoice', 'params':[{'name':'flags', 'type':'#'}, {'name':'test', 'type':'flags.0?true'}, {'name':'name_requested', 'type':'flags.1?true'}, {'name':'phone_requested', 'type':'flags.2?true'}, {'name':'email_requested', 'type':'flags.3?true'}, {'name':'shipping_address_requested', 'type':'flags.4?true'}, {'name':'flexible', 'type':'flags.5?true'}, {'name':'phone_to_provider', 'type':'flags.6?true'}, {'name':'email_to_provider', 'type':'flags.7?true'}, {'name':'recurring', 'type':'flags.9?true'}, {'name':'currency', 'type':'string'}, {'name':'prices', 'type':'Vector<LabeledPrice>'}, {'name':'max_tip_amount', 'type':'flags.8?long'}, {'name':'suggested_tip_amounts', 'type':'flags.8?Vector<long>'}, {'name':'recurring_terms_url', 'type':'flags.9?string'}], 'type':'Invoice'}, {'id':-646342540, 'predicate':'inputMediaInvoice', 'params':[{'name':'flags', 'type':'#'}, {'name':'title', 'type':'string'}, {'name':'description', 'type':'string'}, {'name':'photo', 'type':'flags.0?InputWebDocument'}, {'name':'invoice', 'type':'Invoice'}, {'name':'payload', 'type':'bytes'}, {'name':'provider', 'type':'string'}, {'name':'provider_data', 'type':'DataJSON'}, {'name':'start_param', 'type':'flags.1?string'}], 'type':'InputMedia'}, {'id':-368917890, 'predicate':'paymentCharge', 'params':[{'name':'id', 'type':'string'}, {'name':'provider_charge_id', 'type':'string'}], 'type':'PaymentCharge'}, {'id':-1892568281, 'predicate':'messageActionPaymentSentMe', 'params':[{'name':'flags', 'type':'#'}, {'name':'recurring_init', 'type':'flags.2?true'}, {'name':'recurring_used', 'type':'flags.3?true'}, {'name':'currency', 'type':'string'}, {'name':'total_amount', 'type':'long'}, {'name':'payload', 'type':'bytes'}, {'name':'info', 'type':'flags.0?PaymentRequestedInfo'}, {'name':'shipping_option_id', 'type':'flags.1?string'}, {'name':'charge', 'type':'PaymentCharge'}], 'type':'MessageAction'}, {'id':-2074799289, 'predicate':'messageMediaInvoice', 'params':[{'name':'flags', 'type':'#'}, {'name':'shipping_address_requested', 'type':'flags.1?true'}, {'name':'test', 'type':'flags.3?true'}, {'name':'title', 'type':'string'}, {'name':'description', 'type':'string'}, {'name':'photo', 'type':'flags.0?WebDocument'}, {'name':'receipt_msg_id', 'type':'flags.2?int'}, {'name':'currency', 'type':'string'}, {'name':'total_amount', 'type':'long'}, {'name':'start_param', 'type':'string'}], 'type':'MessageMedia'}, {'id':512535275, 'predicate':'postAddress', 'params':[{'name':'street_line1', 'type':'string'}, {'name':'street_line2', 'type':'string'}, {'name':'city', 'type':'string'}, {'name':'state', 'type':'string'}, {'name':'country_iso2', 'type':'string'}, {'name':'post_code', 'type':'string'}], 'type':'PostAddress'}, {'id':-1868808300, 'predicate':'paymentRequestedInfo', 'params':[{'name':'flags', 'type':'#'}, {'name':'name', 'type':'flags.0?string'}, {'name':'phone', 'type':'flags.1?string'}, {'name':'email', 'type':'flags.2?string'}, {'name':'shipping_address', 'type':'flags.3?PostAddress'}], 'type':'PaymentRequestedInfo'}, {'id':-1344716869, 'predicate':'keyboardButtonBuy', 'params':[{'name':'text', 'type':'string'}], 'type':'KeyboardButton'}, {'id':-1776926890, 'predicate':'messageActionPaymentSent', 'params':[{'name':'flags', 'type':'#'}, {'name':'recurring_init', 'type':'flags.2?true'}, {'name':'recurring_used', 'type':'flags.3?true'}, {'name':'currency', 'type':'string'}, {'name':'total_amount', 'type':'long'}, {'name':'invoice_slug', 'type':'flags.0?string'}], 'type':'MessageAction'}, {'id':-842892769, 'predicate':'paymentSavedCredentialsCard', 'params':[{'name':'id', 'type':'string'}, {'name':'title', 'type':'string'}], 'type':'PaymentSavedCredentials'}, {'id':475467473, 'predicate':'webDocument', 'params':[{'name':'url', 'type':'string'}, {'name':'access_hash', 'type':'long'}, {'name':'size', 'type':'int'}, {'name':'mime_type', 'type':'string'}, {'name':'attributes', 'type':'Vector<DocumentAttribute>'}], 'type':'WebDocument'}, {'id':-1678949555, 'predicate':'inputWebDocument', 'params':[{'name':'url', 'type':'string'}, {'name':'size', 'type':'int'}, {'name':'mime_type', 'type':'string'}, {'name':'attributes', 'type':'Vector<DocumentAttribute>'}], 'type':'InputWebDocument'}, {'id':-1036396922, 'predicate':'inputWebFileLocation', 'params':[{'name':'url', 'type':'string'}, {'name':'access_hash', 'type':'long'}], 'type':'InputWebFileLocation'}, {'id':568808380, 'predicate':'upload.webFile', 'params':[{'name':'size', 'type':'int'}, {'name':'mime_type', 'type':'string'}, {'name':'file_type', 'type':'storage.FileType'}, {'name':'mtime', 'type':'int'}, {'name':'bytes', 'type':'bytes'}], 'type':'upload.WebFile'}, {'id':-1340916937, 'predicate':'payments.paymentForm', 'params':[{'name':'flags', 'type':'#'}, {'name':'can_save_credentials', 'type':'flags.2?true'}, {'name':'password_missing', 'type':'flags.3?true'}, {'name':'form_id', 'type':'long'}, {'name':'bot_id', 'type':'long'}, {'name':'title', 'type':'string'}, {'name':'description', 'type':'string'}, {'name':'photo', 'type':'flags.5?WebDocument'}, {'name':'invoice', 'type':'Invoice'}, {'name':'provider_id', 'type':'long'}, {'name':'url', 'type':'string'}, {'name':'native_provider', 'type':'flags.4?string'}, {'name':'native_params', 'type':'flags.4?DataJSON'}, {'name':'saved_info', 'type':'flags.0?PaymentRequestedInfo'}, {'name':'saved_credentials', 'type':'flags.1?PaymentSavedCredentials'}, {'name':'users', 'type':'Vector<User>'}], 'type':'payments.PaymentForm'}, {'id':-784000893, 'predicate':'payments.validatedRequestedInfo', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'flags.0?string'}, {'name':'shipping_options', 'type':'flags.1?Vector<ShippingOption>'}], 'type':'payments.ValidatedRequestedInfo'}, {'id':1314881805, 'predicate':'payments.paymentResult', 'params':[{'name':'updates', 'type':'Updates'}], 'type':'payments.PaymentResult'}, {'id':1891958275, 'predicate':'payments.paymentReceipt', 'params':[{'name':'flags', 'type':'#'}, {'name':'date', 'type':'int'}, {'name':'bot_id', 'type':'long'}, {'name':'provider_id', 'type':'long'}, {'name':'title', 'type':'string'}, {'name':'description', 'type':'string'}, {'name':'photo', 'type':'flags.2?WebDocument'}, {'name':'invoice', 'type':'Invoice'}, {'name':'info', 'type':'flags.0?PaymentRequestedInfo'}, {'name':'shipping', 'type':'flags.1?ShippingOption'}, {'name':'tip_amount', 'type':'flags.3?long'}, {'name':'currency', 'type':'string'}, {'name':'total_amount', 'type':'long'}, {'name':'credentials_title', 'type':'string'}, {'name':'users', 'type':'Vector<User>'}], 'type':'payments.PaymentReceipt'}, {'id':-74456004, 'predicate':'payments.savedInfo', 'params':[{'name':'flags', 'type':'#'}, {'name':'has_saved_credentials', 'type':'flags.1?true'}, {'name':'saved_info', 'type':'flags.0?PaymentRequestedInfo'}], 'type':'payments.SavedInfo'}, {'id':-1056001329, 'predicate':'inputPaymentCredentialsSaved', 'params':[{'name':'id', 'type':'string'}, {'name':'tmp_password', 'type':'bytes'}], 'type':'InputPaymentCredentials'}, {'id':873977640, 'predicate':'inputPaymentCredentials', 'params':[{'name':'flags', 'type':'#'}, {'name':'save', 'type':'flags.0?true'}, {'name':'data', 'type':'DataJSON'}], 'type':'InputPaymentCredentials'}, {'id':-614138572, 'predicate':'account.tmpPassword', 'params':[{'name':'tmp_password', 'type':'bytes'}, {'name':'valid_until', 'type':'int'}], 'type':'account.TmpPassword'}, {'id':-1239335713, 'predicate':'shippingOption', 'params':[{'name':'id', 'type':'string'}, {'name':'title', 'type':'string'}, {'name':'prices', 'type':'Vector<LabeledPrice>'}], 'type':'ShippingOption'}, {'id':-1246823043, 'predicate':'updateBotShippingQuery', 'params':[{'name':'query_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'payload', 'type':'bytes'}, {'name':'shipping_address', 'type':'PostAddress'}], 'type':'Update'}, {'id':-1934976362, 'predicate':'updateBotPrecheckoutQuery', 'params':[{'name':'flags', 'type':'#'}, {'name':'query_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'payload', 'type':'bytes'}, {'name':'info', 'type':'flags.0?PaymentRequestedInfo'}, {'name':'shipping_option_id', 'type':'flags.1?string'}, {'name':'currency', 'type':'string'}, {'name':'total_amount', 'type':'long'}], 'type':'Update'}, {'id':-6249322, 'predicate':'inputStickerSetItem', 'params':[{'name':'flags', 'type':'#'}, {'name':'document', 'type':'InputDocument'}, {'name':'emoji', 'type':'string'}, {'name':'mask_coords', 'type':'flags.0?MaskCoords'}], 'type':'InputStickerSetItem'}, {'id':-1425052898, 'predicate':'updatePhoneCall', 'params':[{'name':'phone_call', 'type':'PhoneCall'}], 'type':'Update'}, {'id':506920429, 'predicate':'inputPhoneCall', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputPhoneCall'}, {'id':1399245077, 'predicate':'phoneCallEmpty', 'params':[{'name':'id', 'type':'long'}], 'type':'PhoneCall'}, {'id':-987599081, 'predicate':'phoneCallWaiting', 'params':[{'name':'flags', 'type':'#'}, {'name':'video', 'type':'flags.6?true'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'admin_id', 'type':'long'}, {'name':'participant_id', 'type':'long'}, {'name':'protocol', 'type':'PhoneCallProtocol'}, {'name':'receive_date', 'type':'flags.0?int'}], 'type':'PhoneCall'}, {'id':347139340, 'predicate':'phoneCallRequested', 'params':[{'name':'flags', 'type':'#'}, {'name':'video', 'type':'flags.6?true'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'admin_id', 'type':'long'}, {'name':'participant_id', 'type':'long'}, {'name':'g_a_hash', 'type':'bytes'}, {'name':'protocol', 'type':'PhoneCallProtocol'}], 'type':'PhoneCall'}, {'id':912311057, 'predicate':'phoneCallAccepted', 'params':[{'name':'flags', 'type':'#'}, {'name':'video', 'type':'flags.6?true'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'admin_id', 'type':'long'}, {'name':'participant_id', 'type':'long'}, {'name':'g_b', 'type':'bytes'}, {'name':'protocol', 'type':'PhoneCallProtocol'}], 'type':'PhoneCall'}, {'id':-1770029977, 'predicate':'phoneCall', 'params':[{'name':'flags', 'type':'#'}, {'name':'p2p_allowed', 'type':'flags.5?true'}, {'name':'video', 'type':'flags.6?true'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'admin_id', 'type':'long'}, {'name':'participant_id', 'type':'long'}, {'name':'g_a_or_b', 'type':'bytes'}, {'name':'key_fingerprint', 'type':'long'}, {'name':'protocol', 'type':'PhoneCallProtocol'}, {'name':'connections', 'type':'Vector<PhoneConnection>'}, {'name':'start_date', 'type':'int'}], 'type':'PhoneCall'}, {'id':1355435489, 'predicate':'phoneCallDiscarded', 'params':[{'name':'flags', 'type':'#'}, {'name':'need_rating', 'type':'flags.2?true'}, {'name':'need_debug', 'type':'flags.3?true'}, {'name':'video', 'type':'flags.6?true'}, {'name':'id', 'type':'long'}, {'name':'reason', 'type':'flags.0?PhoneCallDiscardReason'}, {'name':'duration', 'type':'flags.1?int'}], 'type':'PhoneCall'}, {'id':-1665063993, 'predicate':'phoneConnection', 'params':[{'name':'flags', 'type':'#'}, {'name':'tcp', 'type':'flags.0?true'}, {'name':'id', 'type':'long'}, {'name':'ip', 'type':'string'}, {'name':'ipv6', 'type':'string'}, {'name':'port', 'type':'int'}, {'name':'peer_tag', 'type':'bytes'}], 'type':'PhoneConnection'}, {'id':-58224696, 'predicate':'phoneCallProtocol', 'params':[{'name':'flags', 'type':'#'}, {'name':'udp_p2p', 'type':'flags.0?true'}, {'name':'udp_reflector', 'type':'flags.1?true'}, {'name':'min_layer', 'type':'int'}, {'name':'max_layer', 'type':'int'}, {'name':'library_versions', 'type':'Vector<string>'}], 'type':'PhoneCallProtocol'}, {'id':-326966976, 'predicate':'phone.phoneCall', 'params':[{'name':'phone_call', 'type':'PhoneCall'}, {'name':'users', 'type':'Vector<User>'}], 'type':'phone.PhoneCall'}, {'id':-2134272152, 'predicate':'inputMessagesFilterPhoneCalls', 'params':[{'name':'flags', 'type':'#'}, {'name':'missed', 'type':'flags.0?true'}], 'type':'MessagesFilter'}, {'id':-2132731265, 'predicate':'messageActionPhoneCall', 'params':[{'name':'flags', 'type':'#'}, {'name':'video', 'type':'flags.2?true'}, {'name':'call_id', 'type':'long'}, {'name':'reason', 'type':'flags.0?PhoneCallDiscardReason'}, {'name':'duration', 'type':'flags.1?int'}], 'type':'MessageAction'}, {'id':2054952868, 'predicate':'inputMessagesFilterRoundVoice', 'params':[], 'type':'MessagesFilter'}, {'id':-1253451181, 'predicate':'inputMessagesFilterRoundVideo', 'params':[], 'type':'MessagesFilter'}, {'id':-1997373508, 'predicate':'sendMessageRecordRoundAction', 'params':[], 'type':'SendMessageAction'}, {'id':608050278, 'predicate':'sendMessageUploadRoundAction', 'params':[{'name':'progress', 'type':'int'}], 'type':'SendMessageAction'}, {'id':-242427324, 'predicate':'upload.fileCdnRedirect', 'params':[{'name':'dc_id', 'type':'int'}, {'name':'file_token', 'type':'bytes'}, {'name':'encryption_key', 'type':'bytes'}, {'name':'encryption_iv', 'type':'bytes'}, {'name':'file_hashes', 'type':'Vector<FileHash>'}], 'type':'upload.File'}, {'id':-290921362, 'predicate':'upload.cdnFileReuploadNeeded', 'params':[{'name':'request_token', 'type':'bytes'}], 'type':'upload.CdnFile'}, {'id':-1449145777, 'predicate':'upload.cdnFile', 'params':[{'name':'bytes', 'type':'bytes'}], 'type':'upload.CdnFile'}, {'id':-914167110, 'predicate':'cdnPublicKey', 'params':[{'name':'dc_id', 'type':'int'}, {'name':'public_key', 'type':'string'}], 'type':'CdnPublicKey'}, {'id':1462101002, 'predicate':'cdnConfig', 'params':[{'name':'public_keys', 'type':'Vector<CdnPublicKey>'}], 'type':'CdnConfig'}, {'id':-283684427, 'predicate':'pageBlockChannel', 'params':[{'name':'channel', 'type':'Chat'}], 'type':'PageBlock'}, {'id':-892239370, 'predicate':'langPackString', 'params':[{'name':'key', 'type':'string'}, {'name':'value', 'type':'string'}], 'type':'LangPackString'}, {'id':1816636575, 'predicate':'langPackStringPluralized', 'params':[{'name':'flags', 'type':'#'}, {'name':'key', 'type':'string'}, {'name':'zero_value', 'type':'flags.0?string'}, {'name':'one_value', 'type':'flags.1?string'}, {'name':'two_value', 'type':'flags.2?string'}, {'name':'few_value', 'type':'flags.3?string'}, {'name':'many_value', 'type':'flags.4?string'}, {'name':'other_value', 'type':'string'}], 'type':'LangPackString'}, {'id':695856818, 'predicate':'langPackStringDeleted', 'params':[{'name':'key', 'type':'string'}], 'type':'LangPackString'}, {'id':-209337866, 'predicate':'langPackDifference', 'params':[{'name':'lang_code', 'type':'string'}, {'name':'from_version', 'type':'int'}, {'name':'version', 'type':'int'}, {'name':'strings', 'type':'Vector<LangPackString>'}], 'type':'LangPackDifference'}, {'id':-288727837, 'predicate':'langPackLanguage', 'params':[{'name':'flags', 'type':'#'}, {'name':'official', 'type':'flags.0?true'}, {'name':'rtl', 'type':'flags.2?true'}, {'name':'beta', 'type':'flags.3?true'}, {'name':'name', 'type':'string'}, {'name':'native_name', 'type':'string'}, {'name':'lang_code', 'type':'string'}, {'name':'base_lang_code', 'type':'flags.1?string'}, {'name':'plural_code', 'type':'string'}, {'name':'strings_count', 'type':'int'}, {'name':'translated_count', 'type':'int'}, {'name':'translations_url', 'type':'string'}], 'type':'LangPackLanguage'}, {'id':1180041828, 'predicate':'updateLangPackTooLong', 'params':[{'name':'lang_code', 'type':'string'}], 'type':'Update'}, {'id':1442983757, 'predicate':'updateLangPack', 'params':[{'name':'difference', 'type':'LangPackDifference'}], 'type':'Update'}, {'id':885242707, 'predicate':'channelParticipantAdmin', 'params':[{'name':'flags', 'type':'#'}, {'name':'can_edit', 'type':'flags.0?true'}, {'name':'self', 'type':'flags.1?true'}, {'name':'user_id', 'type':'long'}, {'name':'inviter_id', 'type':'flags.1?long'}, {'name':'promoted_by', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'admin_rights', 'type':'ChatAdminRights'}, {'name':'rank', 'type':'flags.2?string'}], 'type':'ChannelParticipant'}, {'id':1844969806, 'predicate':'channelParticipantBanned', 'params':[{'name':'flags', 'type':'#'}, {'name':'left', 'type':'flags.0?true'}, {'name':'peer', 'type':'Peer'}, {'name':'kicked_by', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'banned_rights', 'type':'ChatBannedRights'}], 'type':'ChannelParticipant'}, {'id':338142689, 'predicate':'channelParticipantsBanned', 'params':[{'name':'q', 'type':'string'}], 'type':'ChannelParticipantsFilter'}, {'id':106343499, 'predicate':'channelParticipantsSearch', 'params':[{'name':'q', 'type':'string'}], 'type':'ChannelParticipantsFilter'}, {'id':-421545947, 'predicate':'channelAdminLogEventActionChangeTitle', 'params':[{'name':'prev_value', 'type':'string'}, {'name':'new_value', 'type':'string'}], 'type':'ChannelAdminLogEventAction'}, {'id':1427671598, 'predicate':'channelAdminLogEventActionChangeAbout', 'params':[{'name':'prev_value', 'type':'string'}, {'name':'new_value', 'type':'string'}], 'type':'ChannelAdminLogEventAction'}, {'id':1783299128, 'predicate':'channelAdminLogEventActionChangeUsername', 'params':[{'name':'prev_value', 'type':'string'}, {'name':'new_value', 'type':'string'}], 'type':'ChannelAdminLogEventAction'}, {'id':1129042607, 'predicate':'channelAdminLogEventActionChangePhoto', 'params':[{'name':'prev_photo', 'type':'Photo'}, {'name':'new_photo', 'type':'Photo'}], 'type':'ChannelAdminLogEventAction'}, {'id':460916654, 'predicate':'channelAdminLogEventActionToggleInvites', 'params':[{'name':'new_value', 'type':'Bool'}], 'type':'ChannelAdminLogEventAction'}, {'id':648939889, 'predicate':'channelAdminLogEventActionToggleSignatures', 'params':[{'name':'new_value', 'type':'Bool'}], 'type':'ChannelAdminLogEventAction'}, {'id':-370660328, 'predicate':'channelAdminLogEventActionUpdatePinned', 'params':[{'name':'message', 'type':'Message'}], 'type':'ChannelAdminLogEventAction'}, {'id':1889215493, 'predicate':'channelAdminLogEventActionEditMessage', 'params':[{'name':'prev_message', 'type':'Message'}, {'name':'new_message', 'type':'Message'}], 'type':'ChannelAdminLogEventAction'}, {'id':1121994683, 'predicate':'channelAdminLogEventActionDeleteMessage', 'params':[{'name':'message', 'type':'Message'}], 'type':'ChannelAdminLogEventAction'}, {'id':405815507, 'predicate':'channelAdminLogEventActionParticipantJoin', 'params':[], 'type':'ChannelAdminLogEventAction'}, {'id':-124291086, 'predicate':'channelAdminLogEventActionParticipantLeave', 'params':[], 'type':'ChannelAdminLogEventAction'}, {'id':-484690728, 'predicate':'channelAdminLogEventActionParticipantInvite', 'params':[{'name':'participant', 'type':'ChannelParticipant'}], 'type':'ChannelAdminLogEventAction'}, {'id':-422036098, 'predicate':'channelAdminLogEventActionParticipantToggleBan', 'params':[{'name':'prev_participant', 'type':'ChannelParticipant'}, {'name':'new_participant', 'type':'ChannelParticipant'}], 'type':'ChannelAdminLogEventAction'}, {'id':-714643696, 'predicate':'channelAdminLogEventActionParticipantToggleAdmin', 'params':[{'name':'prev_participant', 'type':'ChannelParticipant'}, {'name':'new_participant', 'type':'ChannelParticipant'}], 'type':'ChannelAdminLogEventAction'}, {'id':531458253, 'predicate':'channelAdminLogEvent', 'params':[{'name':'id', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'user_id', 'type':'long'}, {'name':'action', 'type':'ChannelAdminLogEventAction'}], 'type':'ChannelAdminLogEvent'}, {'id':-309659827, 'predicate':'channels.adminLogResults', 'params':[{'name':'events', 'type':'Vector<ChannelAdminLogEvent>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'channels.AdminLogResults'}, {'id':-368018716, 'predicate':'channelAdminLogEventsFilter', 'params':[{'name':'flags', 'type':'#'}, {'name':'join', 'type':'flags.0?true'}, {'name':'leave', 'type':'flags.1?true'}, {'name':'invite', 'type':'flags.2?true'}, {'name':'ban', 'type':'flags.3?true'}, {'name':'unban', 'type':'flags.4?true'}, {'name':'kick', 'type':'flags.5?true'}, {'name':'unkick', 'type':'flags.6?true'}, {'name':'promote', 'type':'flags.7?true'}, {'name':'demote', 'type':'flags.8?true'}, {'name':'info', 'type':'flags.9?true'}, {'name':'settings', 'type':'flags.10?true'}, {'name':'pinned', 'type':'flags.11?true'}, {'name':'edit', 'type':'flags.12?true'}, {'name':'delete', 'type':'flags.13?true'}, {'name':'group_call', 'type':'flags.14?true'}, {'name':'invites', 'type':'flags.15?true'}, {'name':'send', 'type':'flags.16?true'}], 'type':'ChannelAdminLogEventsFilter'}, {'id':511092620, 'predicate':'topPeerCategoryPhoneCalls', 'params':[], 'type':'TopPeerCategory'}, {'id':-2143067670, 'predicate':'pageBlockAudio', 'params':[{'name':'audio_id', 'type':'long'}, {'name':'caption', 'type':'PageCaption'}], 'type':'PageBlock'}, {'id':1558266229, 'predicate':'popularContact', 'params':[{'name':'client_id', 'type':'long'}, {'name':'importers', 'type':'int'}], 'type':'PopularContact'}, {'id':1200788123, 'predicate':'messageActionScreenshotTaken', 'params':[], 'type':'MessageAction'}, {'id':-1634752813, 'predicate':'messages.favedStickersNotModified', 'params':[], 'type':'messages.FavedStickers'}, {'id':750063767, 'predicate':'messages.favedStickers', 'params':[{'name':'hash', 'type':'long'}, {'name':'packs', 'type':'Vector<StickerPack>'}, {'name':'stickers', 'type':'Vector<Document>'}], 'type':'messages.FavedStickers'}, {'id':-451831443, 'predicate':'updateFavedStickers', 'params':[], 'type':'Update'}, {'id':1153291573, 'predicate':'updateChannelReadMessagesContents', 'params':[{'name':'channel_id', 'type':'long'}, {'name':'messages', 'type':'Vector<int>'}], 'type':'Update'}, {'id':-1040652646, 'predicate':'inputMessagesFilterMyMentions', 'params':[], 'type':'MessagesFilter'}, {'id':1887741886, 'predicate':'updateContactsReset', 'params':[], 'type':'Update'}, {'id':-1312568665, 'predicate':'channelAdminLogEventActionChangeStickerSet', 'params':[{'name':'prev_stickerset', 'type':'InputStickerSet'}, {'name':'new_stickerset', 'type':'InputStickerSet'}], 'type':'ChannelAdminLogEventAction'}, {'id':-85549226, 'predicate':'messageActionCustomAction', 'params':[{'name':'message', 'type':'string'}], 'type':'MessageAction'}, {'id':178373535, 'predicate':'inputPaymentCredentialsApplePay', 'params':[{'name':'payment_data', 'type':'DataJSON'}], 'type':'InputPaymentCredentials'}, {'id':-419271411, 'predicate':'inputMessagesFilterGeo', 'params':[], 'type':'MessagesFilter'}, {'id':-530392189, 'predicate':'inputMessagesFilterContacts', 'params':[], 'type':'MessagesFilter'}, {'id':-1304443240, 'predicate':'updateChannelAvailableMessages', 'params':[{'name':'channel_id', 'type':'long'}, {'name':'available_min_id', 'type':'int'}], 'type':'Update'}, {'id':1599903217, 'predicate':'channelAdminLogEventActionTogglePreHistoryHidden', 'params':[{'name':'new_value', 'type':'Bool'}], 'type':'ChannelAdminLogEventAction'}, {'id':-1759532989, 'predicate':'inputMediaGeoLive', 'params':[{'name':'flags', 'type':'#'}, {'name':'stopped', 'type':'flags.0?true'}, {'name':'geo_point', 'type':'InputGeoPoint'}, {'name':'heading', 'type':'flags.2?int'}, {'name':'period', 'type':'flags.1?int'}, {'name':'proximity_notification_radius', 'type':'flags.3?int'}], 'type':'InputMedia'}, {'id':-1186937242, 'predicate':'messageMediaGeoLive', 'params':[{'name':'flags', 'type':'#'}, {'name':'geo', 'type':'GeoPoint'}, {'name':'heading', 'type':'flags.0?int'}, {'name':'period', 'type':'int'}, {'name':'proximity_notification_radius', 'type':'flags.1?int'}], 'type':'MessageMedia'}, {'id':1189204285, 'predicate':'recentMeUrlUnknown', 'params':[{'name':'url', 'type':'string'}], 'type':'RecentMeUrl'}, {'id':-1188296222, 'predicate':'recentMeUrlUser', 'params':[{'name':'url', 'type':'string'}, {'name':'user_id', 'type':'long'}], 'type':'RecentMeUrl'}, {'id':-1294306862, 'predicate':'recentMeUrlChat', 'params':[{'name':'url', 'type':'string'}, {'name':'chat_id', 'type':'long'}], 'type':'RecentMeUrl'}, {'id':-347535331, 'predicate':'recentMeUrlChatInvite', 'params':[{'name':'url', 'type':'string'}, {'name':'chat_invite', 'type':'ChatInvite'}], 'type':'RecentMeUrl'}, {'id':-1140172836, 'predicate':'recentMeUrlStickerSet', 'params':[{'name':'url', 'type':'string'}, {'name':'set', 'type':'StickerSetCovered'}], 'type':'RecentMeUrl'}, {'id':235081943, 'predicate':'help.recentMeUrls', 'params':[{'name':'urls', 'type':'Vector<RecentMeUrl>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'help.RecentMeUrls'}, {'id':-266911767, 'predicate':'channels.channelParticipantsNotModified', 'params':[], 'type':'channels.ChannelParticipants'}, {'id':1951620897, 'predicate':'messages.messagesNotModified', 'params':[{'name':'count', 'type':'int'}], 'type':'messages.Messages'}, {'id':482797855, 'predicate':'inputSingleMedia', 'params':[{'name':'flags', 'type':'#'}, {'name':'media', 'type':'InputMedia'}, {'name':'random_id', 'type':'long'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'flags.0?Vector<MessageEntity>'}], 'type':'InputSingleMedia'}, {'id':-1493633966, 'predicate':'webAuthorization', 'params':[{'name':'hash', 'type':'long'}, {'name':'bot_id', 'type':'long'}, {'name':'domain', 'type':'string'}, {'name':'browser', 'type':'string'}, {'name':'platform', 'type':'string'}, {'name':'date_created', 'type':'int'}, {'name':'date_active', 'type':'int'}, {'name':'ip', 'type':'string'}, {'name':'region', 'type':'string'}], 'type':'WebAuthorization'}, {'id':-313079300, 'predicate':'account.webAuthorizations', 'params':[{'name':'authorizations', 'type':'Vector<WebAuthorization>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'account.WebAuthorizations'}, {'id':-1502174430, 'predicate':'inputMessageID', 'params':[{'name':'id', 'type':'int'}], 'type':'InputMessage'}, {'id':-1160215659, 'predicate':'inputMessageReplyTo', 'params':[{'name':'id', 'type':'int'}], 'type':'InputMessage'}, {'id':-2037963464, 'predicate':'inputMessagePinned', 'params':[], 'type':'InputMessage'}, {'id':-1687559349, 'predicate':'messageEntityPhone', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':1280209983, 'predicate':'messageEntityCashtag', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':-1410748418, 'predicate':'messageActionBotAllowed', 'params':[{'name':'domain', 'type':'string'}], 'type':'MessageAction'}, {'id':-55902537, 'predicate':'inputDialogPeer', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'InputDialogPeer'}, {'id':-445792507, 'predicate':'dialogPeer', 'params':[{'name':'peer', 'type':'Peer'}], 'type':'DialogPeer'}, {'id':223655517, 'predicate':'messages.foundStickerSetsNotModified', 'params':[], 'type':'messages.FoundStickerSets'}, {'id':-1963942446, 'predicate':'messages.foundStickerSets', 'params':[{'name':'hash', 'type':'long'}, {'name':'sets', 'type':'Vector<StickerSetCovered>'}], 'type':'messages.FoundStickerSets'}, {'id':-207944868, 'predicate':'fileHash', 'params':[{'name':'offset', 'type':'long'}, {'name':'limit', 'type':'int'}, {'name':'hash', 'type':'bytes'}], 'type':'FileHash'}, {'id':-104284986, 'predicate':'webDocumentNoProxy', 'params':[{'name':'url', 'type':'string'}, {'name':'size', 'type':'int'}, {'name':'mime_type', 'type':'string'}, {'name':'attributes', 'type':'Vector<DocumentAttribute>'}], 'type':'WebDocument'}, {'id':1968737087, 'predicate':'inputClientProxy', 'params':[{'name':'address', 'type':'string'}, {'name':'port', 'type':'int'}], 'type':'InputClientProxy'}, {'id':-483352705, 'predicate':'help.termsOfServiceUpdateEmpty', 'params':[{'name':'expires', 'type':'int'}], 'type':'help.TermsOfServiceUpdate'}, {'id':686618977, 'predicate':'help.termsOfServiceUpdate', 'params':[{'name':'expires', 'type':'int'}, {'name':'terms_of_service', 'type':'help.TermsOfService'}], 'type':'help.TermsOfServiceUpdate'}, {'id':859091184, 'predicate':'inputSecureFileUploaded', 'params':[{'name':'id', 'type':'long'}, {'name':'parts', 'type':'int'}, {'name':'md5_checksum', 'type':'string'}, {'name':'file_hash', 'type':'bytes'}, {'name':'secret', 'type':'bytes'}], 'type':'InputSecureFile'}, {'id':1399317950, 'predicate':'inputSecureFile', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputSecureFile'}, {'id':-876089816, 'predicate':'inputSecureFileLocation', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputFileLocation'}, {'id':1679398724, 'predicate':'secureFileEmpty', 'params':[], 'type':'SecureFile'}, {'id':2097791614, 'predicate':'secureFile', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'size', 'type':'long'}, {'name':'dc_id', 'type':'int'}, {'name':'date', 'type':'int'}, {'name':'file_hash', 'type':'bytes'}, {'name':'secret', 'type':'bytes'}], 'type':'SecureFile'}, {'id':-1964327229, 'predicate':'secureData', 'params':[{'name':'data', 'type':'bytes'}, {'name':'data_hash', 'type':'bytes'}, {'name':'secret', 'type':'bytes'}], 'type':'SecureData'}, {'id':2103482845, 'predicate':'securePlainPhone', 'params':[{'name':'phone', 'type':'string'}], 'type':'SecurePlainData'}, {'id':569137759, 'predicate':'securePlainEmail', 'params':[{'name':'email', 'type':'string'}], 'type':'SecurePlainData'}, {'id':-1658158621, 'predicate':'secureValueTypePersonalDetails', 'params':[], 'type':'SecureValueType'}, {'id':1034709504, 'predicate':'secureValueTypePassport', 'params':[], 'type':'SecureValueType'}, {'id':115615172, 'predicate':'secureValueTypeDriverLicense', 'params':[], 'type':'SecureValueType'}, {'id':-1596951477, 'predicate':'secureValueTypeIdentityCard', 'params':[], 'type':'SecureValueType'}, {'id':-1717268701, 'predicate':'secureValueTypeInternalPassport', 'params':[], 'type':'SecureValueType'}, {'id':-874308058, 'predicate':'secureValueTypeAddress', 'params':[], 'type':'SecureValueType'}, {'id':-63531698, 'predicate':'secureValueTypeUtilityBill', 'params':[], 'type':'SecureValueType'}, {'id':-1995211763, 'predicate':'secureValueTypeBankStatement', 'params':[], 'type':'SecureValueType'}, {'id':-1954007928, 'predicate':'secureValueTypeRentalAgreement', 'params':[], 'type':'SecureValueType'}, {'id':-1713143702, 'predicate':'secureValueTypePassportRegistration', 'params':[], 'type':'SecureValueType'}, {'id':-368907213, 'predicate':'secureValueTypeTemporaryRegistration', 'params':[], 'type':'SecureValueType'}, {'id':-1289704741, 'predicate':'secureValueTypePhone', 'params':[], 'type':'SecureValueType'}, {'id':-1908627474, 'predicate':'secureValueTypeEmail', 'params':[], 'type':'SecureValueType'}, {'id':411017418, 'predicate':'secureValue', 'params':[{'name':'flags', 'type':'#'}, {'name':'type', 'type':'SecureValueType'}, {'name':'data', 'type':'flags.0?SecureData'}, {'name':'front_side', 'type':'flags.1?SecureFile'}, {'name':'reverse_side', 'type':'flags.2?SecureFile'}, {'name':'selfie', 'type':'flags.3?SecureFile'}, {'name':'translation', 'type':'flags.6?Vector<SecureFile>'}, {'name':'files', 'type':'flags.4?Vector<SecureFile>'}, {'name':'plain_data', 'type':'flags.5?SecurePlainData'}, {'name':'hash', 'type':'bytes'}], 'type':'SecureValue'}, {'id':-618540889, 'predicate':'inputSecureValue', 'params':[{'name':'flags', 'type':'#'}, {'name':'type', 'type':'SecureValueType'}, {'name':'data', 'type':'flags.0?SecureData'}, {'name':'front_side', 'type':'flags.1?InputSecureFile'}, {'name':'reverse_side', 'type':'flags.2?InputSecureFile'}, {'name':'selfie', 'type':'flags.3?InputSecureFile'}, {'name':'translation', 'type':'flags.6?Vector<InputSecureFile>'}, {'name':'files', 'type':'flags.4?Vector<InputSecureFile>'}, {'name':'plain_data', 'type':'flags.5?SecurePlainData'}], 'type':'InputSecureValue'}, {'id':-316748368, 'predicate':'secureValueHash', 'params':[{'name':'type', 'type':'SecureValueType'}, {'name':'hash', 'type':'bytes'}], 'type':'SecureValueHash'}, {'id':-391902247, 'predicate':'secureValueErrorData', 'params':[{'name':'type', 'type':'SecureValueType'}, {'name':'data_hash', 'type':'bytes'}, {'name':'field', 'type':'string'}, {'name':'text', 'type':'string'}], 'type':'SecureValueError'}, {'id':12467706, 'predicate':'secureValueErrorFrontSide', 'params':[{'name':'type', 'type':'SecureValueType'}, {'name':'file_hash', 'type':'bytes'}, {'name':'text', 'type':'string'}], 'type':'SecureValueError'}, {'id':-2037765467, 'predicate':'secureValueErrorReverseSide', 'params':[{'name':'type', 'type':'SecureValueType'}, {'name':'file_hash', 'type':'bytes'}, {'name':'text', 'type':'string'}], 'type':'SecureValueError'}, {'id':-449327402, 'predicate':'secureValueErrorSelfie', 'params':[{'name':'type', 'type':'SecureValueType'}, {'name':'file_hash', 'type':'bytes'}, {'name':'text', 'type':'string'}], 'type':'SecureValueError'}, {'id':2054162547, 'predicate':'secureValueErrorFile', 'params':[{'name':'type', 'type':'SecureValueType'}, {'name':'file_hash', 'type':'bytes'}, {'name':'text', 'type':'string'}], 'type':'SecureValueError'}, {'id':1717706985, 'predicate':'secureValueErrorFiles', 'params':[{'name':'type', 'type':'SecureValueType'}, {'name':'file_hash', 'type':'Vector<bytes>'}, {'name':'text', 'type':'string'}], 'type':'SecureValueError'}, {'id':871426631, 'predicate':'secureCredentialsEncrypted', 'params':[{'name':'data', 'type':'bytes'}, {'name':'hash', 'type':'bytes'}, {'name':'secret', 'type':'bytes'}], 'type':'SecureCredentialsEncrypted'}, {'id':-1389486888, 'predicate':'account.authorizationForm', 'params':[{'name':'flags', 'type':'#'}, {'name':'required_types', 'type':'Vector<SecureRequiredType>'}, {'name':'values', 'type':'Vector<SecureValue>'}, {'name':'errors', 'type':'Vector<SecureValueError>'}, {'name':'users', 'type':'Vector<User>'}, {'name':'privacy_policy_url', 'type':'flags.0?string'}], 'type':'account.AuthorizationForm'}, {'id':-2128640689, 'predicate':'account.sentEmailCode', 'params':[{'name':'email_pattern', 'type':'string'}, {'name':'length', 'type':'int'}], 'type':'account.SentEmailCode'}, {'id':455635795, 'predicate':'messageActionSecureValuesSentMe', 'params':[{'name':'values', 'type':'Vector<SecureValue>'}, {'name':'credentials', 'type':'SecureCredentialsEncrypted'}], 'type':'MessageAction'}, {'id':-648257196, 'predicate':'messageActionSecureValuesSent', 'params':[{'name':'types', 'type':'Vector<SecureValueType>'}], 'type':'MessageAction'}, {'id':1722786150, 'predicate':'help.deepLinkInfoEmpty', 'params':[], 'type':'help.DeepLinkInfo'}, {'id':1783556146, 'predicate':'help.deepLinkInfo', 'params':[{'name':'flags', 'type':'#'}, {'name':'update_app', 'type':'flags.0?true'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'flags.1?Vector<MessageEntity>'}], 'type':'help.DeepLinkInfo'}, {'id':289586518, 'predicate':'savedPhoneContact', 'params':[{'name':'phone', 'type':'string'}, {'name':'first_name', 'type':'string'}, {'name':'last_name', 'type':'string'}, {'name':'date', 'type':'int'}], 'type':'SavedContact'}, {'id':1304052993, 'predicate':'account.takeout', 'params':[{'name':'id', 'type':'long'}], 'type':'account.Takeout'}, {'id':700340377, 'predicate':'inputTakeoutFileLocation', 'params':[], 'type':'InputFileLocation'}, {'id':-513517117, 'predicate':'updateDialogUnreadMark', 'params':[{'name':'flags', 'type':'#'}, {'name':'unread', 'type':'flags.0?true'}, {'name':'peer', 'type':'DialogPeer'}], 'type':'Update'}, {'id':-253500010, 'predicate':'messages.dialogsNotModified', 'params':[{'name':'count', 'type':'int'}], 'type':'messages.Dialogs'}, {'id':-1625153079, 'predicate':'inputWebFileGeoPointLocation', 'params':[{'name':'geo_point', 'type':'InputGeoPoint'}, {'name':'access_hash', 'type':'long'}, {'name':'w', 'type':'int'}, {'name':'h', 'type':'int'}, {'name':'zoom', 'type':'int'}, {'name':'scale', 'type':'int'}], 'type':'InputWebFileLocation'}, {'id':-1255369827, 'predicate':'contacts.topPeersDisabled', 'params':[], 'type':'contacts.TopPeers'}, {'id':-1685456582, 'predicate':'inputReportReasonCopyright', 'params':[], 'type':'ReportReason'}, {'id':-732254058, 'predicate':'passwordKdfAlgoUnknown', 'params':[], 'type':'PasswordKdfAlgo'}, {'id':4883767, 'predicate':'securePasswordKdfAlgoUnknown', 'params':[], 'type':'SecurePasswordKdfAlgo'}, {'id':-1141711456, 'predicate':'securePasswordKdfAlgoPBKDF2HMACSHA512iter100000', 'params':[{'name':'salt', 'type':'bytes'}], 'type':'SecurePasswordKdfAlgo'}, {'id':-2042159726, 'predicate':'securePasswordKdfAlgoSHA512', 'params':[{'name':'salt', 'type':'bytes'}], 'type':'SecurePasswordKdfAlgo'}, {'id':354925740, 'predicate':'secureSecretSettings', 'params':[{'name':'secure_algo', 'type':'SecurePasswordKdfAlgo'}, {'name':'secure_secret', 'type':'bytes'}, {'name':'secure_secret_id', 'type':'long'}], 'type':'SecureSecretSettings'}, {'id':982592842, 'predicate':'passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow', 'params':[{'name':'salt1', 'type':'bytes'}, {'name':'salt2', 'type':'bytes'}, {'name':'g', 'type':'int'}, {'name':'p', 'type':'bytes'}], 'type':'PasswordKdfAlgo'}, {'id':-1736378792, 'predicate':'inputCheckPasswordEmpty', 'params':[], 'type':'InputCheckPasswordSRP'}, {'id':-763367294, 'predicate':'inputCheckPasswordSRP', 'params':[{'name':'srp_id', 'type':'long'}, {'name':'A', 'type':'bytes'}, {'name':'M1', 'type':'bytes'}], 'type':'InputCheckPasswordSRP'}, {'id':-2036501105, 'predicate':'secureValueError', 'params':[{'name':'type', 'type':'SecureValueType'}, {'name':'hash', 'type':'bytes'}, {'name':'text', 'type':'string'}], 'type':'SecureValueError'}, {'id':-1592506512, 'predicate':'secureValueErrorTranslationFile', 'params':[{'name':'type', 'type':'SecureValueType'}, {'name':'file_hash', 'type':'bytes'}, {'name':'text', 'type':'string'}], 'type':'SecureValueError'}, {'id':878931416, 'predicate':'secureValueErrorTranslationFiles', 'params':[{'name':'type', 'type':'SecureValueType'}, {'name':'file_hash', 'type':'Vector<bytes>'}, {'name':'text', 'type':'string'}], 'type':'SecureValueError'}, {'id':-2103600678, 'predicate':'secureRequiredType', 'params':[{'name':'flags', 'type':'#'}, {'name':'native_names', 'type':'flags.0?true'}, {'name':'selfie_required', 'type':'flags.1?true'}, {'name':'translation_required', 'type':'flags.2?true'}, {'name':'type', 'type':'SecureValueType'}], 'type':'SecureRequiredType'}, {'id':41187252, 'predicate':'secureRequiredTypeOneOf', 'params':[{'name':'types', 'type':'Vector<SecureRequiredType>'}], 'type':'SecureRequiredType'}, {'id':-1078332329, 'predicate':'help.passportConfigNotModified', 'params':[], 'type':'help.PassportConfig'}, {'id':-1600596305, 'predicate':'help.passportConfig', 'params':[{'name':'hash', 'type':'int'}, {'name':'countries_langs', 'type':'DataJSON'}], 'type':'help.PassportConfig'}, {'id':488313413, 'predicate':'inputAppEvent', 'params':[{'name':'time', 'type':'double'}, {'name':'type', 'type':'string'}, {'name':'peer', 'type':'long'}, {'name':'data', 'type':'JSONValue'}], 'type':'InputAppEvent'}, {'id':-1059185703, 'predicate':'jsonObjectValue', 'params':[{'name':'key', 'type':'string'}, {'name':'value', 'type':'JSONValue'}], 'type':'JSONObjectValue'}, {'id':1064139624, 'predicate':'jsonNull', 'params':[], 'type':'JSONValue'}, {'id':-952869270, 'predicate':'jsonBool', 'params':[{'name':'value', 'type':'Bool'}], 'type':'JSONValue'}, {'id':736157604, 'predicate':'jsonNumber', 'params':[{'name':'value', 'type':'double'}], 'type':'JSONValue'}, {'id':-1222740358, 'predicate':'jsonString', 'params':[{'name':'value', 'type':'string'}], 'type':'JSONValue'}, {'id':-146520221, 'predicate':'jsonArray', 'params':[{'name':'value', 'type':'Vector<JSONValue>'}], 'type':'JSONValue'}, {'id':-1715350371, 'predicate':'jsonObject', 'params':[{'name':'value', 'type':'Vector<JSONObjectValue>'}], 'type':'JSONValue'}, {'id':-1311015810, 'predicate':'inputNotifyBroadcasts', 'params':[], 'type':'InputNotifyPeer'}, {'id':-703403793, 'predicate':'notifyBroadcasts', 'params':[], 'type':'NotifyPeer'}, {'id':-311786236, 'predicate':'textSubscript', 'params':[{'name':'text', 'type':'RichText'}], 'type':'RichText'}, {'id':-939827711, 'predicate':'textSuperscript', 'params':[{'name':'text', 'type':'RichText'}], 'type':'RichText'}, {'id':55281185, 'predicate':'textMarked', 'params':[{'name':'text', 'type':'RichText'}], 'type':'RichText'}, {'id':483104362, 'predicate':'textPhone', 'params':[{'name':'text', 'type':'RichText'}, {'name':'phone', 'type':'string'}], 'type':'RichText'}, {'id':136105807, 'predicate':'textImage', 'params':[{'name':'document_id', 'type':'long'}, {'name':'w', 'type':'int'}, {'name':'h', 'type':'int'}], 'type':'RichText'}, {'id':504660880, 'predicate':'pageBlockKicker', 'params':[{'name':'text', 'type':'RichText'}], 'type':'PageBlock'}, {'id':878078826, 'predicate':'pageTableCell', 'params':[{'name':'flags', 'type':'#'}, {'name':'header', 'type':'flags.0?true'}, {'name':'align_center', 'type':'flags.3?true'}, {'name':'align_right', 'type':'flags.4?true'}, {'name':'valign_middle', 'type':'flags.5?true'}, {'name':'valign_bottom', 'type':'flags.6?true'}, {'name':'text', 'type':'flags.7?RichText'}, {'name':'colspan', 'type':'flags.1?int'}, {'name':'rowspan', 'type':'flags.2?int'}], 'type':'PageTableCell'}, {'id':-524237339, 'predicate':'pageTableRow', 'params':[{'name':'cells', 'type':'Vector<PageTableCell>'}], 'type':'PageTableRow'}, {'id':-1085412734, 'predicate':'pageBlockTable', 'params':[{'name':'flags', 'type':'#'}, {'name':'bordered', 'type':'flags.0?true'}, {'name':'striped', 'type':'flags.1?true'}, {'name':'title', 'type':'RichText'}, {'name':'rows', 'type':'Vector<PageTableRow>'}], 'type':'PageBlock'}, {'id':1869903447, 'predicate':'pageCaption', 'params':[{'name':'text', 'type':'RichText'}, {'name':'credit', 'type':'RichText'}], 'type':'PageCaption'}, {'id':-1188055347, 'predicate':'pageListItemText', 'params':[{'name':'text', 'type':'RichText'}], 'type':'PageListItem'}, {'id':635466748, 'predicate':'pageListItemBlocks', 'params':[{'name':'blocks', 'type':'Vector<PageBlock>'}], 'type':'PageListItem'}, {'id':1577484359, 'predicate':'pageListOrderedItemText', 'params':[{'name':'num', 'type':'string'}, {'name':'text', 'type':'RichText'}], 'type':'PageListOrderedItem'}, {'id':-1730311882, 'predicate':'pageListOrderedItemBlocks', 'params':[{'name':'num', 'type':'string'}, {'name':'blocks', 'type':'Vector<PageBlock>'}], 'type':'PageListOrderedItem'}, {'id':-1702174239, 'predicate':'pageBlockOrderedList', 'params':[{'name':'items', 'type':'Vector<PageListOrderedItem>'}], 'type':'PageBlock'}, {'id':1987480557, 'predicate':'pageBlockDetails', 'params':[{'name':'flags', 'type':'#'}, {'name':'open', 'type':'flags.0?true'}, {'name':'blocks', 'type':'Vector<PageBlock>'}, {'name':'title', 'type':'RichText'}], 'type':'PageBlock'}, {'id':-1282352120, 'predicate':'pageRelatedArticle', 'params':[{'name':'flags', 'type':'#'}, {'name':'url', 'type':'string'}, {'name':'webpage_id', 'type':'long'}, {'name':'title', 'type':'flags.0?string'}, {'name':'description', 'type':'flags.1?string'}, {'name':'photo_id', 'type':'flags.2?long'}, {'name':'author', 'type':'flags.3?string'}, {'name':'published_date', 'type':'flags.4?int'}], 'type':'PageRelatedArticle'}, {'id':370236054, 'predicate':'pageBlockRelatedArticles', 'params':[{'name':'title', 'type':'RichText'}, {'name':'articles', 'type':'Vector<PageRelatedArticle>'}], 'type':'PageBlock'}, {'id':-1538310410, 'predicate':'pageBlockMap', 'params':[{'name':'geo', 'type':'GeoPoint'}, {'name':'zoom', 'type':'int'}, {'name':'w', 'type':'int'}, {'name':'h', 'type':'int'}, {'name':'caption', 'type':'PageCaption'}], 'type':'PageBlock'}, {'id':-1738178803, 'predicate':'page', 'params':[{'name':'flags', 'type':'#'}, {'name':'part', 'type':'flags.0?true'}, {'name':'rtl', 'type':'flags.1?true'}, {'name':'v2', 'type':'flags.2?true'}, {'name':'url', 'type':'string'}, {'name':'blocks', 'type':'Vector<PageBlock>'}, {'name':'photos', 'type':'Vector<Photo>'}, {'name':'documents', 'type':'Vector<Document>'}, {'name':'views', 'type':'flags.3?int'}], 'type':'Page'}, {'id':-610373422, 'predicate':'inputPrivacyKeyPhoneP2P', 'params':[], 'type':'InputPrivacyKey'}, {'id':961092808, 'predicate':'privacyKeyPhoneP2P', 'params':[], 'type':'PrivacyKey'}, {'id':894777186, 'predicate':'textAnchor', 'params':[{'name':'text', 'type':'RichText'}, {'name':'name', 'type':'string'}], 'type':'RichText'}, {'id':-1945767479, 'predicate':'help.supportName', 'params':[{'name':'name', 'type':'string'}], 'type':'help.SupportName'}, {'id':-206688531, 'predicate':'help.userInfoEmpty', 'params':[], 'type':'help.UserInfo'}, {'id':32192344, 'predicate':'help.userInfo', 'params':[{'name':'message', 'type':'string'}, {'name':'entities', 'type':'Vector<MessageEntity>'}, {'name':'author', 'type':'string'}, {'name':'date', 'type':'int'}], 'type':'help.UserInfo'}, {'id':-202219658, 'predicate':'messageActionContactSignUp', 'params':[], 'type':'MessageAction'}, {'id':-1398708869, 'predicate':'updateMessagePoll', 'params':[{'name':'flags', 'type':'#'}, {'name':'poll_id', 'type':'long'}, {'name':'poll', 'type':'flags.0?Poll'}, {'name':'results', 'type':'PollResults'}], 'type':'Update'}, {'id':1823064809, 'predicate':'pollAnswer', 'params':[{'name':'text', 'type':'string'}, {'name':'option', 'type':'bytes'}], 'type':'PollAnswer'}, {'id':-2032041631, 'predicate':'poll', 'params':[{'name':'id', 'type':'long'}, {'name':'flags', 'type':'#'}, {'name':'closed', 'type':'flags.0?true'}, {'name':'public_voters', 'type':'flags.1?true'}, {'name':'multiple_choice', 'type':'flags.2?true'}, {'name':'quiz', 'type':'flags.3?true'}, {'name':'question', 'type':'string'}, {'name':'answers', 'type':'Vector<PollAnswer>'}, {'name':'close_period', 'type':'flags.4?int'}, {'name':'close_date', 'type':'flags.5?int'}], 'type':'Poll'}, {'id':997055186, 'predicate':'pollAnswerVoters', 'params':[{'name':'flags', 'type':'#'}, {'name':'chosen', 'type':'flags.0?true'}, {'name':'correct', 'type':'flags.1?true'}, {'name':'option', 'type':'bytes'}, {'name':'voters', 'type':'int'}], 'type':'PollAnswerVoters'}, {'id':-591909213, 'predicate':'pollResults', 'params':[{'name':'flags', 'type':'#'}, {'name':'min', 'type':'flags.0?true'}, {'name':'results', 'type':'flags.1?Vector<PollAnswerVoters>'}, {'name':'total_voters', 'type':'flags.2?int'}, {'name':'recent_voters', 'type':'flags.3?Vector<long>'}, {'name':'solution', 'type':'flags.4?string'}, {'name':'solution_entities', 'type':'flags.4?Vector<MessageEntity>'}], 'type':'PollResults'}, {'id':261416433, 'predicate':'inputMediaPoll', 'params':[{'name':'flags', 'type':'#'}, {'name':'poll', 'type':'Poll'}, {'name':'correct_answers', 'type':'flags.0?Vector<bytes>'}, {'name':'solution', 'type':'flags.1?string'}, {'name':'solution_entities', 'type':'flags.1?Vector<MessageEntity>'}], 'type':'InputMedia'}, {'id':1272375192, 'predicate':'messageMediaPoll', 'params':[{'name':'poll', 'type':'Poll'}, {'name':'results', 'type':'PollResults'}], 'type':'MessageMedia'}, {'id':-264117680, 'predicate':'chatOnlines', 'params':[{'name':'onlines', 'type':'int'}], 'type':'ChatOnlines'}, {'id':1202287072, 'predicate':'statsURL', 'params':[{'name':'url', 'type':'string'}], 'type':'StatsURL'}, {'id':-525288402, 'predicate':'photoStrippedSize', 'params':[{'name':'type', 'type':'string'}, {'name':'bytes', 'type':'bytes'}], 'type':'PhotoSize'}, {'id':1605510357, 'predicate':'chatAdminRights', 'params':[{'name':'flags', 'type':'#'}, {'name':'change_info', 'type':'flags.0?true'}, {'name':'post_messages', 'type':'flags.1?true'}, {'name':'edit_messages', 'type':'flags.2?true'}, {'name':'delete_messages', 'type':'flags.3?true'}, {'name':'ban_users', 'type':'flags.4?true'}, {'name':'invite_users', 'type':'flags.5?true'}, {'name':'pin_messages', 'type':'flags.7?true'}, {'name':'add_admins', 'type':'flags.9?true'}, {'name':'anonymous', 'type':'flags.10?true'}, {'name':'manage_call', 'type':'flags.11?true'}, {'name':'other', 'type':'flags.12?true'}], 'type':'ChatAdminRights'}, {'id':-1626209256, 'predicate':'chatBannedRights', 'params':[{'name':'flags', 'type':'#'}, {'name':'view_messages', 'type':'flags.0?true'}, {'name':'send_messages', 'type':'flags.1?true'}, {'name':'send_media', 'type':'flags.2?true'}, {'name':'send_stickers', 'type':'flags.3?true'}, {'name':'send_gifs', 'type':'flags.4?true'}, {'name':'send_games', 'type':'flags.5?true'}, {'name':'send_inline', 'type':'flags.6?true'}, {'name':'embed_links', 'type':'flags.7?true'}, {'name':'send_polls', 'type':'flags.8?true'}, {'name':'change_info', 'type':'flags.10?true'}, {'name':'invite_users', 'type':'flags.15?true'}, {'name':'pin_messages', 'type':'flags.17?true'}, {'name':'until_date', 'type':'int'}], 'type':'ChatBannedRights'}, {'id':1421875280, 'predicate':'updateChatDefaultBannedRights', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'default_banned_rights', 'type':'ChatBannedRights'}, {'name':'version', 'type':'int'}], 'type':'Update'}, {'id':-433014407, 'predicate':'inputWallPaper', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputWallPaper'}, {'id':1913199744, 'predicate':'inputWallPaperSlug', 'params':[{'name':'slug', 'type':'string'}], 'type':'InputWallPaper'}, {'id':-1150621555, 'predicate':'channelParticipantsContacts', 'params':[{'name':'q', 'type':'string'}], 'type':'ChannelParticipantsFilter'}, {'id':771095562, 'predicate':'channelAdminLogEventActionDefaultBannedRights', 'params':[{'name':'prev_banned_rights', 'type':'ChatBannedRights'}, {'name':'new_banned_rights', 'type':'ChatBannedRights'}], 'type':'ChannelAdminLogEventAction'}, {'id':-1895328189, 'predicate':'channelAdminLogEventActionStopPoll', 'params':[{'name':'message', 'type':'Message'}], 'type':'ChannelAdminLogEventAction'}, {'id':471437699, 'predicate':'account.wallPapersNotModified', 'params':[], 'type':'account.WallPapers'}, {'id':-842824308, 'predicate':'account.wallPapers', 'params':[{'name':'hash', 'type':'long'}, {'name':'wallpapers', 'type':'Vector<WallPaper>'}], 'type':'account.WallPapers'}, {'id':-1973130814, 'predicate':'codeSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'allow_flashcall', 'type':'flags.0?true'}, {'name':'current_number', 'type':'flags.1?true'}, {'name':'allow_app_hash', 'type':'flags.4?true'}, {'name':'allow_missed_call', 'type':'flags.5?true'}, {'name':'logout_tokens', 'type':'flags.6?Vector<bytes>'}], 'type':'CodeSettings'}, {'id':499236004, 'predicate':'wallPaperSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'blur', 'type':'flags.1?true'}, {'name':'motion', 'type':'flags.2?true'}, {'name':'background_color', 'type':'flags.0?int'}, {'name':'second_background_color', 'type':'flags.4?int'}, {'name':'third_background_color', 'type':'flags.5?int'}, {'name':'fourth_background_color', 'type':'flags.6?int'}, {'name':'intensity', 'type':'flags.3?int'}, {'name':'rotation', 'type':'flags.4?int'}], 'type':'WallPaperSettings'}, {'id':-1896171181, 'predicate':'autoDownloadSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'disabled', 'type':'flags.0?true'}, {'name':'video_preload_large', 'type':'flags.1?true'}, {'name':'audio_preload_next', 'type':'flags.2?true'}, {'name':'phonecalls_less_data', 'type':'flags.3?true'}, {'name':'photo_size_max', 'type':'int'}, {'name':'video_size_max', 'type':'long'}, {'name':'file_size_max', 'type':'long'}, {'name':'video_upload_maxbitrate', 'type':'int'}], 'type':'AutoDownloadSettings'}, {'id':1674235686, 'predicate':'account.autoDownloadSettings', 'params':[{'name':'low', 'type':'AutoDownloadSettings'}, {'name':'medium', 'type':'AutoDownloadSettings'}, {'name':'high', 'type':'AutoDownloadSettings'}], 'type':'account.AutoDownloadSettings'}, {'id':-709641735, 'predicate':'emojiKeyword', 'params':[{'name':'keyword', 'type':'string'}, {'name':'emoticons', 'type':'Vector<string>'}], 'type':'EmojiKeyword'}, {'id':594408994, 'predicate':'emojiKeywordDeleted', 'params':[{'name':'keyword', 'type':'string'}, {'name':'emoticons', 'type':'Vector<string>'}], 'type':'EmojiKeyword'}, {'id':1556570557, 'predicate':'emojiKeywordsDifference', 'params':[{'name':'lang_code', 'type':'string'}, {'name':'from_version', 'type':'int'}, {'name':'version', 'type':'int'}, {'name':'keywords', 'type':'Vector<EmojiKeyword>'}], 'type':'EmojiKeywordsDifference'}, {'id':-1519029347, 'predicate':'emojiURL', 'params':[{'name':'url', 'type':'string'}], 'type':'EmojiURL'}, {'id':-1275374751, 'predicate':'emojiLanguage', 'params':[{'name':'lang_code', 'type':'string'}], 'type':'EmojiLanguage'}, {'id':-1529000952, 'predicate':'inputPrivacyKeyForwards', 'params':[], 'type':'InputPrivacyKey'}, {'id':1777096355, 'predicate':'privacyKeyForwards', 'params':[], 'type':'PrivacyKey'}, {'id':1461304012, 'predicate':'inputPrivacyKeyProfilePhoto', 'params':[], 'type':'InputPrivacyKey'}, {'id':-1777000467, 'predicate':'privacyKeyProfilePhoto', 'params':[], 'type':'PrivacyKey'}, {'id':1075322878, 'predicate':'inputPhotoFileLocation', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'file_reference', 'type':'bytes'}, {'name':'thumb_size', 'type':'string'}], 'type':'InputFileLocation'}, {'id':-667654413, 'predicate':'inputPhotoLegacyFileLocation', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'file_reference', 'type':'bytes'}, {'name':'volume_id', 'type':'long'}, {'name':'local_id', 'type':'int'}, {'name':'secret', 'type':'long'}], 'type':'InputFileLocation'}, {'id':925204121, 'predicate':'inputPeerPhotoFileLocation', 'params':[{'name':'flags', 'type':'#'}, {'name':'big', 'type':'flags.0?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'photo_id', 'type':'long'}], 'type':'InputFileLocation'}, {'id':-1652231205, 'predicate':'inputStickerSetThumb', 'params':[{'name':'stickerset', 'type':'InputStickerSet'}, {'name':'thumb_version', 'type':'int'}], 'type':'InputFileLocation'}, {'id':-11252123, 'predicate':'folder', 'params':[{'name':'flags', 'type':'#'}, {'name':'autofill_new_broadcasts', 'type':'flags.0?true'}, {'name':'autofill_public_groups', 'type':'flags.1?true'}, {'name':'autofill_new_correspondents', 'type':'flags.2?true'}, {'name':'id', 'type':'int'}, {'name':'title', 'type':'string'}, {'name':'photo', 'type':'flags.3?ChatPhoto'}], 'type':'Folder'}, {'id':1908216652, 'predicate':'dialogFolder', 'params':[{'name':'flags', 'type':'#'}, {'name':'pinned', 'type':'flags.2?true'}, {'name':'folder', 'type':'Folder'}, {'name':'peer', 'type':'Peer'}, {'name':'top_message', 'type':'int'}, {'name':'unread_muted_peers_count', 'type':'int'}, {'name':'unread_unmuted_peers_count', 'type':'int'}, {'name':'unread_muted_messages_count', 'type':'int'}, {'name':'unread_unmuted_messages_count', 'type':'int'}], 'type':'Dialog'}, {'id':1684014375, 'predicate':'inputDialogPeerFolder', 'params':[{'name':'folder_id', 'type':'int'}], 'type':'InputDialogPeer'}, {'id':1363483106, 'predicate':'dialogPeerFolder', 'params':[{'name':'folder_id', 'type':'int'}], 'type':'DialogPeer'}, {'id':-70073706, 'predicate':'inputFolderPeer', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'folder_id', 'type':'int'}], 'type':'InputFolderPeer'}, {'id':-373643672, 'predicate':'folderPeer', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'folder_id', 'type':'int'}], 'type':'FolderPeer'}, {'id':422972864, 'predicate':'updateFolderPeers', 'params':[{'name':'folder_peers', 'type':'Vector<FolderPeer>'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':497305826, 'predicate':'inputUserFromMessage', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}, {'name':'user_id', 'type':'long'}], 'type':'InputUser'}, {'id':1536380829, 'predicate':'inputChannelFromMessage', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}, {'name':'channel_id', 'type':'long'}], 'type':'InputChannel'}, {'id':-1468331492, 'predicate':'inputPeerUserFromMessage', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}, {'name':'user_id', 'type':'long'}], 'type':'InputPeer'}, {'id':-1121318848, 'predicate':'inputPeerChannelFromMessage', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}, {'name':'channel_id', 'type':'long'}], 'type':'InputPeer'}, {'id':55761658, 'predicate':'inputPrivacyKeyPhoneNumber', 'params':[], 'type':'InputPrivacyKey'}, {'id':-778378131, 'predicate':'privacyKeyPhoneNumber', 'params':[], 'type':'PrivacyKey'}, {'id':-1472172887, 'predicate':'topPeerCategoryForwardUsers', 'params':[], 'type':'TopPeerCategory'}, {'id':-68239120, 'predicate':'topPeerCategoryForwardChats', 'params':[], 'type':'TopPeerCategory'}, {'id':84703944, 'predicate':'channelAdminLogEventActionChangeLinkedChat', 'params':[{'name':'prev_value', 'type':'long'}, {'name':'new_value', 'type':'long'}], 'type':'ChannelAdminLogEventAction'}, {'id':-398136321, 'predicate':'messages.searchCounter', 'params':[{'name':'flags', 'type':'#'}, {'name':'inexact', 'type':'flags.1?true'}, {'name':'filter', 'type':'MessagesFilter'}, {'name':'count', 'type':'int'}], 'type':'messages.SearchCounter'}, {'id':280464681, 'predicate':'keyboardButtonUrlAuth', 'params':[{'name':'flags', 'type':'#'}, {'name':'text', 'type':'string'}, {'name':'fwd_text', 'type':'flags.0?string'}, {'name':'url', 'type':'string'}, {'name':'button_id', 'type':'int'}], 'type':'KeyboardButton'}, {'id':-802258988, 'predicate':'inputKeyboardButtonUrlAuth', 'params':[{'name':'flags', 'type':'#'}, {'name':'request_write_access', 'type':'flags.0?true'}, {'name':'text', 'type':'string'}, {'name':'fwd_text', 'type':'flags.1?string'}, {'name':'url', 'type':'string'}, {'name':'bot', 'type':'InputUser'}], 'type':'KeyboardButton'}, {'id':-1831650802, 'predicate':'urlAuthResultRequest', 'params':[{'name':'flags', 'type':'#'}, {'name':'request_write_access', 'type':'flags.0?true'}, {'name':'bot', 'type':'User'}, {'name':'domain', 'type':'string'}], 'type':'UrlAuthResult'}, {'id':-1886646706, 'predicate':'urlAuthResultAccepted', 'params':[{'name':'url', 'type':'string'}], 'type':'UrlAuthResult'}, {'id':-1445536993, 'predicate':'urlAuthResultDefault', 'params':[], 'type':'UrlAuthResult'}, {'id':-2079962673, 'predicate':'inputPrivacyValueAllowChatParticipants', 'params':[{'name':'chats', 'type':'Vector<long>'}], 'type':'InputPrivacyRule'}, {'id':-380694650, 'predicate':'inputPrivacyValueDisallowChatParticipants', 'params':[{'name':'chats', 'type':'Vector<long>'}], 'type':'InputPrivacyRule'}, {'id':1796427406, 'predicate':'privacyValueAllowChatParticipants', 'params':[{'name':'chats', 'type':'Vector<long>'}], 'type':'PrivacyRule'}, {'id':1103656293, 'predicate':'privacyValueDisallowChatParticipants', 'params':[{'name':'chats', 'type':'Vector<long>'}], 'type':'PrivacyRule'}, {'id':-1672577397, 'predicate':'messageEntityUnderline', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':-1090087980, 'predicate':'messageEntityStrike', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':34469328, 'predicate':'messageEntityBlockquote', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':1786671974, 'predicate':'updatePeerSettings', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'settings', 'type':'PeerSettings'}], 'type':'Update'}, {'id':-1078612597, 'predicate':'channelLocationEmpty', 'params':[], 'type':'ChannelLocation'}, {'id':547062491, 'predicate':'channelLocation', 'params':[{'name':'geo_point', 'type':'GeoPoint'}, {'name':'address', 'type':'string'}], 'type':'ChannelLocation'}, {'id':-901375139, 'predicate':'peerLocated', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'expires', 'type':'int'}, {'name':'distance', 'type':'int'}], 'type':'PeerLocated'}, {'id':-1263546448, 'predicate':'updatePeerLocated', 'params':[{'name':'peers', 'type':'Vector<PeerLocated>'}], 'type':'Update'}, {'id':241923758, 'predicate':'channelAdminLogEventActionChangeLocation', 'params':[{'name':'prev_value', 'type':'ChannelLocation'}, {'name':'new_value', 'type':'ChannelLocation'}], 'type':'ChannelAdminLogEventAction'}, {'id':-606798099, 'predicate':'inputReportReasonGeoIrrelevant', 'params':[], 'type':'ReportReason'}, {'id':1401984889, 'predicate':'channelAdminLogEventActionToggleSlowMode', 'params':[{'name':'prev_value', 'type':'int'}, {'name':'new_value', 'type':'int'}], 'type':'ChannelAdminLogEventAction'}, {'id':1148485274, 'predicate':'auth.authorizationSignUpRequired', 'params':[{'name':'flags', 'type':'#'}, {'name':'terms_of_service', 'type':'flags.0?help.TermsOfService'}], 'type':'auth.Authorization'}, {'id':-666824391, 'predicate':'payments.paymentVerificationNeeded', 'params':[{'name':'url', 'type':'string'}], 'type':'payments.PaymentResult'}, {'id':42402760, 'predicate':'inputStickerSetAnimatedEmoji', 'params':[], 'type':'InputStickerSet'}, {'id':967122427, 'predicate':'updateNewScheduledMessage', 'params':[{'name':'message', 'type':'Message'}], 'type':'Update'}, {'id':-1870238482, 'predicate':'updateDeleteScheduledMessages', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'messages', 'type':'Vector<int>'}], 'type':'Update'}, {'id':-797791052, 'predicate':'restrictionReason', 'params':[{'name':'platform', 'type':'string'}, {'name':'reason', 'type':'string'}, {'name':'text', 'type':'string'}], 'type':'RestrictionReason'}, {'id':1012306921, 'predicate':'inputTheme', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputTheme'}, {'id':-175567375, 'predicate':'inputThemeSlug', 'params':[{'name':'slug', 'type':'string'}], 'type':'InputTheme'}, {'id':-1609668650, 'predicate':'theme', 'params':[{'name':'flags', 'type':'#'}, {'name':'creator', 'type':'flags.0?true'}, {'name':'default', 'type':'flags.1?true'}, {'name':'for_chat', 'type':'flags.5?true'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'slug', 'type':'string'}, {'name':'title', 'type':'string'}, {'name':'document', 'type':'flags.2?Document'}, {'name':'settings', 'type':'flags.3?Vector<ThemeSettings>'}, {'name':'emoticon', 'type':'flags.6?string'}, {'name':'installs_count', 'type':'flags.4?int'}], 'type':'Theme'}, {'id':-199313886, 'predicate':'account.themesNotModified', 'params':[], 'type':'account.Themes'}, {'id':-1707242387, 'predicate':'account.themes', 'params':[{'name':'hash', 'type':'long'}, {'name':'themes', 'type':'Vector<Theme>'}], 'type':'account.Themes'}, {'id':-2112423005, 'predicate':'updateTheme', 'params':[{'name':'theme', 'type':'Theme'}], 'type':'Update'}, {'id':-786326563, 'predicate':'inputPrivacyKeyAddedByPhone', 'params':[], 'type':'InputPrivacyKey'}, {'id':1124062251, 'predicate':'privacyKeyAddedByPhone', 'params':[], 'type':'PrivacyKey'}, {'id':-2027964103, 'predicate':'updateGeoLiveViewed', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'msg_id', 'type':'int'}], 'type':'Update'}, {'id':1448076945, 'predicate':'updateLoginToken', 'params':[], 'type':'Update'}, {'id':1654593920, 'predicate':'auth.loginToken', 'params':[{'name':'expires', 'type':'int'}, {'name':'token', 'type':'bytes'}], 'type':'auth.LoginToken'}, {'id':110008598, 'predicate':'auth.loginTokenMigrateTo', 'params':[{'name':'dc_id', 'type':'int'}, {'name':'token', 'type':'bytes'}], 'type':'auth.LoginToken'}, {'id':957176926, 'predicate':'auth.loginTokenSuccess', 'params':[{'name':'authorization', 'type':'auth.Authorization'}], 'type':'auth.LoginToken'}, {'id':1474462241, 'predicate':'account.contentSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'sensitive_enabled', 'type':'flags.0?true'}, {'name':'sensitive_can_change', 'type':'flags.1?true'}], 'type':'account.ContentSettings'}, {'id':-1456996667, 'predicate':'messages.inactiveChats', 'params':[{'name':'dates', 'type':'Vector<int>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.InactiveChats'}, {'id':-1012849566, 'predicate':'baseThemeClassic', 'params':[], 'type':'BaseTheme'}, {'id':-69724536, 'predicate':'baseThemeDay', 'params':[], 'type':'BaseTheme'}, {'id':-1212997976, 'predicate':'baseThemeNight', 'params':[], 'type':'BaseTheme'}, {'id':1834973166, 'predicate':'baseThemeTinted', 'params':[], 'type':'BaseTheme'}, {'id':1527845466, 'predicate':'baseThemeArctic', 'params':[], 'type':'BaseTheme'}, {'id':-1770371538, 'predicate':'inputWallPaperNoFile', 'params':[{'name':'id', 'type':'long'}], 'type':'InputWallPaper'}, {'id':-528465642, 'predicate':'wallPaperNoFile', 'params':[{'name':'id', 'type':'long'}, {'name':'flags', 'type':'#'}, {'name':'default', 'type':'flags.1?true'}, {'name':'dark', 'type':'flags.4?true'}, {'name':'settings', 'type':'flags.2?WallPaperSettings'}], 'type':'WallPaper'}, {'id':-1881255857, 'predicate':'inputThemeSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'message_colors_animated', 'type':'flags.2?true'}, {'name':'base_theme', 'type':'BaseTheme'}, {'name':'accent_color', 'type':'int'}, {'name':'outbox_accent_color', 'type':'flags.3?int'}, {'name':'message_colors', 'type':'flags.0?Vector<int>'}, {'name':'wallpaper', 'type':'flags.1?InputWallPaper'}, {'name':'wallpaper_settings', 'type':'flags.1?WallPaperSettings'}], 'type':'InputThemeSettings'}, {'id':-94849324, 'predicate':'themeSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'message_colors_animated', 'type':'flags.2?true'}, {'name':'base_theme', 'type':'BaseTheme'}, {'name':'accent_color', 'type':'int'}, {'name':'outbox_accent_color', 'type':'flags.3?int'}, {'name':'message_colors', 'type':'flags.0?Vector<int>'}, {'name':'wallpaper', 'type':'flags.1?WallPaper'}], 'type':'ThemeSettings'}, {'id':1421174295, 'predicate':'webPageAttributeTheme', 'params':[{'name':'flags', 'type':'#'}, {'name':'documents', 'type':'flags.0?Vector<Document>'}, {'name':'settings', 'type':'flags.1?ThemeSettings'}], 'type':'WebPageAttribute'}, {'id':274961865, 'predicate':'updateMessagePollVote', 'params':[{'name':'poll_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'options', 'type':'Vector<bytes>'}, {'name':'qts', 'type':'int'}], 'type':'Update'}, {'id':886196148, 'predicate':'messageUserVote', 'params':[{'name':'user_id', 'type':'long'}, {'name':'option', 'type':'bytes'}, {'name':'date', 'type':'int'}], 'type':'MessageUserVote'}, {'id':1017491692, 'predicate':'messageUserVoteInputOption', 'params':[{'name':'user_id', 'type':'long'}, {'name':'date', 'type':'int'}], 'type':'MessageUserVote'}, {'id':-1973033641, 'predicate':'messageUserVoteMultiple', 'params':[{'name':'user_id', 'type':'long'}, {'name':'options', 'type':'Vector<bytes>'}, {'name':'date', 'type':'int'}], 'type':'MessageUserVote'}, {'id':136574537, 'predicate':'messages.votesList', 'params':[{'name':'flags', 'type':'#'}, {'name':'count', 'type':'int'}, {'name':'votes', 'type':'Vector<MessageUserVote>'}, {'name':'users', 'type':'Vector<User>'}, {'name':'next_offset', 'type':'flags.0?string'}], 'type':'messages.VotesList'}, {'id':-1144565411, 'predicate':'keyboardButtonRequestPoll', 'params':[{'name':'flags', 'type':'#'}, {'name':'quiz', 'type':'flags.0?Bool'}, {'name':'text', 'type':'string'}], 'type':'KeyboardButton'}, {'id':1981704948, 'predicate':'messageEntityBankCard', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':-177732982, 'predicate':'bankCardOpenUrl', 'params':[{'name':'url', 'type':'string'}, {'name':'name', 'type':'string'}], 'type':'BankCardOpenUrl'}, {'id':1042605427, 'predicate':'payments.bankCardData', 'params':[{'name':'title', 'type':'string'}, {'name':'open_urls', 'type':'Vector<BankCardOpenUrl>'}], 'type':'payments.BankCardData'}, {'id':-118740917, 'predicate':'peerSelfLocated', 'params':[{'name':'expires', 'type':'int'}], 'type':'PeerLocated'}, {'id':1949890536, 'predicate':'dialogFilter', 'params':[{'name':'flags', 'type':'#'}, {'name':'contacts', 'type':'flags.0?true'}, {'name':'non_contacts', 'type':'flags.1?true'}, {'name':'groups', 'type':'flags.2?true'}, {'name':'broadcasts', 'type':'flags.3?true'}, {'name':'bots', 'type':'flags.4?true'}, {'name':'exclude_muted', 'type':'flags.11?true'}, {'name':'exclude_read', 'type':'flags.12?true'}, {'name':'exclude_archived', 'type':'flags.13?true'}, {'name':'id', 'type':'int'}, {'name':'title', 'type':'string'}, {'name':'emoticon', 'type':'flags.25?string'}, {'name':'pinned_peers', 'type':'Vector<InputPeer>'}, {'name':'include_peers', 'type':'Vector<InputPeer>'}, {'name':'exclude_peers', 'type':'Vector<InputPeer>'}], 'type':'DialogFilter'}, {'id':2004110666, 'predicate':'dialogFilterSuggested', 'params':[{'name':'filter', 'type':'DialogFilter'}, {'name':'description', 'type':'string'}], 'type':'DialogFilterSuggested'}, {'id':654302845, 'predicate':'updateDialogFilter', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'int'}, {'name':'filter', 'type':'flags.0?DialogFilter'}], 'type':'Update'}, {'id':-1512627963, 'predicate':'updateDialogFilterOrder', 'params':[{'name':'order', 'type':'Vector<int>'}], 'type':'Update'}, {'id':889491791, 'predicate':'updateDialogFilters', 'params':[], 'type':'Update'}, {'id':-1237848657, 'predicate':'statsDateRangeDays', 'params':[{'name':'min_date', 'type':'int'}, {'name':'max_date', 'type':'int'}], 'type':'StatsDateRangeDays'}, {'id':-884757282, 'predicate':'statsAbsValueAndPrev', 'params':[{'name':'current', 'type':'double'}, {'name':'previous', 'type':'double'}], 'type':'StatsAbsValueAndPrev'}, {'id':-875679776, 'predicate':'statsPercentValue', 'params':[{'name':'part', 'type':'double'}, {'name':'total', 'type':'double'}], 'type':'StatsPercentValue'}, {'id':1244130093, 'predicate':'statsGraphAsync', 'params':[{'name':'token', 'type':'string'}], 'type':'StatsGraph'}, {'id':-1092839390, 'predicate':'statsGraphError', 'params':[{'name':'error', 'type':'string'}], 'type':'StatsGraph'}, {'id':-1901828938, 'predicate':'statsGraph', 'params':[{'name':'flags', 'type':'#'}, {'name':'json', 'type':'DataJSON'}, {'name':'zoom_token', 'type':'flags.0?string'}], 'type':'StatsGraph'}, {'id':-1387279939, 'predicate':'messageInteractionCounters', 'params':[{'name':'msg_id', 'type':'int'}, {'name':'views', 'type':'int'}, {'name':'forwards', 'type':'int'}], 'type':'MessageInteractionCounters'}, {'id':-1107852396, 'predicate':'stats.broadcastStats', 'params':[{'name':'period', 'type':'StatsDateRangeDays'}, {'name':'followers', 'type':'StatsAbsValueAndPrev'}, {'name':'views_per_post', 'type':'StatsAbsValueAndPrev'}, {'name':'shares_per_post', 'type':'StatsAbsValueAndPrev'}, {'name':'enabled_notifications', 'type':'StatsPercentValue'}, {'name':'growth_graph', 'type':'StatsGraph'}, {'name':'followers_graph', 'type':'StatsGraph'}, {'name':'mute_graph', 'type':'StatsGraph'}, {'name':'top_hours_graph', 'type':'StatsGraph'}, {'name':'interactions_graph', 'type':'StatsGraph'}, {'name':'iv_interactions_graph', 'type':'StatsGraph'}, {'name':'views_by_source_graph', 'type':'StatsGraph'}, {'name':'new_followers_by_source_graph', 'type':'StatsGraph'}, {'name':'languages_graph', 'type':'StatsGraph'}, {'name':'recent_message_interactions', 'type':'Vector<MessageInteractionCounters>'}], 'type':'stats.BroadcastStats'}, {'id':-428884101, 'predicate':'inputMediaDice', 'params':[{'name':'emoticon', 'type':'string'}], 'type':'InputMedia'}, {'id':1065280907, 'predicate':'messageMediaDice', 'params':[{'name':'value', 'type':'int'}, {'name':'emoticon', 'type':'string'}], 'type':'MessageMedia'}, {'id':-427863538, 'predicate':'inputStickerSetDice', 'params':[{'name':'emoticon', 'type':'string'}], 'type':'InputStickerSet'}, {'id':-1728664459, 'predicate':'help.promoDataEmpty', 'params':[{'name':'expires', 'type':'int'}], 'type':'help.PromoData'}, {'id':-1942390465, 'predicate':'help.promoData', 'params':[{'name':'flags', 'type':'#'}, {'name':'proxy', 'type':'flags.0?true'}, {'name':'expires', 'type':'int'}, {'name':'peer', 'type':'Peer'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}, {'name':'psa_type', 'type':'flags.1?string'}, {'name':'psa_message', 'type':'flags.2?string'}], 'type':'help.PromoData'}, {'id':-567037804, 'predicate':'videoSize', 'params':[{'name':'flags', 'type':'#'}, {'name':'type', 'type':'string'}, {'name':'w', 'type':'int'}, {'name':'h', 'type':'int'}, {'name':'size', 'type':'int'}, {'name':'video_start_ts', 'type':'flags.0?double'}], 'type':'VideoSize'}, {'id':643940105, 'predicate':'updatePhoneCallSignalingData', 'params':[{'name':'phone_call_id', 'type':'long'}, {'name':'data', 'type':'bytes'}], 'type':'Update'}, {'id':1634294960, 'predicate':'chatInvitePeek', 'params':[{'name':'chat', 'type':'Chat'}, {'name':'expires', 'type':'int'}], 'type':'ChatInvite'}, {'id':-1660637285, 'predicate':'statsGroupTopPoster', 'params':[{'name':'user_id', 'type':'long'}, {'name':'messages', 'type':'int'}, {'name':'avg_chars', 'type':'int'}], 'type':'StatsGroupTopPoster'}, {'id':-682079097, 'predicate':'statsGroupTopAdmin', 'params':[{'name':'user_id', 'type':'long'}, {'name':'deleted', 'type':'int'}, {'name':'kicked', 'type':'int'}, {'name':'banned', 'type':'int'}], 'type':'StatsGroupTopAdmin'}, {'id':1398765469, 'predicate':'statsGroupTopInviter', 'params':[{'name':'user_id', 'type':'long'}, {'name':'invitations', 'type':'int'}], 'type':'StatsGroupTopInviter'}, {'id':-276825834, 'predicate':'stats.megagroupStats', 'params':[{'name':'period', 'type':'StatsDateRangeDays'}, {'name':'members', 'type':'StatsAbsValueAndPrev'}, {'name':'messages', 'type':'StatsAbsValueAndPrev'}, {'name':'viewers', 'type':'StatsAbsValueAndPrev'}, {'name':'posters', 'type':'StatsAbsValueAndPrev'}, {'name':'growth_graph', 'type':'StatsGraph'}, {'name':'members_graph', 'type':'StatsGraph'}, {'name':'new_members_by_source_graph', 'type':'StatsGraph'}, {'name':'languages_graph', 'type':'StatsGraph'}, {'name':'messages_graph', 'type':'StatsGraph'}, {'name':'actions_graph', 'type':'StatsGraph'}, {'name':'top_hours_graph', 'type':'StatsGraph'}, {'name':'weekdays_graph', 'type':'StatsGraph'}, {'name':'top_posters', 'type':'Vector<StatsGroupTopPoster>'}, {'name':'top_admins', 'type':'Vector<StatsGroupTopAdmin>'}, {'name':'top_inviters', 'type':'Vector<StatsGroupTopInviter>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'stats.MegagroupStats'}, {'id':-1096616924, 'predicate':'globalPrivacySettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'archive_and_mute_new_noncontact_peers', 'type':'flags.0?Bool'}], 'type':'GlobalPrivacySettings'}, {'id':1667228533, 'predicate':'phoneConnectionWebrtc', 'params':[{'name':'flags', 'type':'#'}, {'name':'turn', 'type':'flags.0?true'}, {'name':'stun', 'type':'flags.1?true'}, {'name':'id', 'type':'long'}, {'name':'ip', 'type':'string'}, {'name':'ipv6', 'type':'string'}, {'name':'port', 'type':'int'}, {'name':'username', 'type':'string'}, {'name':'password', 'type':'string'}], 'type':'PhoneConnection'}, {'id':1107543535, 'predicate':'help.countryCode', 'params':[{'name':'flags', 'type':'#'}, {'name':'country_code', 'type':'string'}, {'name':'prefixes', 'type':'flags.0?Vector<string>'}, {'name':'patterns', 'type':'flags.1?Vector<string>'}], 'type':'help.CountryCode'}, {'id':-1014526429, 'predicate':'help.country', 'params':[{'name':'flags', 'type':'#'}, {'name':'hidden', 'type':'flags.0?true'}, {'name':'iso2', 'type':'string'}, {'name':'default_name', 'type':'string'}, {'name':'name', 'type':'flags.1?string'}, {'name':'country_codes', 'type':'Vector<help.CountryCode>'}], 'type':'help.Country'}, {'id':-1815339214, 'predicate':'help.countriesListNotModified', 'params':[], 'type':'help.CountriesList'}, {'id':-2016381538, 'predicate':'help.countriesList', 'params':[{'name':'countries', 'type':'Vector<help.Country>'}, {'name':'hash', 'type':'int'}], 'type':'help.CountriesList'}, {'id':1163625789, 'predicate':'messageViews', 'params':[{'name':'flags', 'type':'#'}, {'name':'views', 'type':'flags.0?int'}, {'name':'forwards', 'type':'flags.1?int'}, {'name':'replies', 'type':'flags.2?MessageReplies'}], 'type':'MessageViews'}, {'id':-761649164, 'predicate':'updateChannelMessageForwards', 'params':[{'name':'channel_id', 'type':'long'}, {'name':'id', 'type':'int'}, {'name':'forwards', 'type':'int'}], 'type':'Update'}, {'id':-96535659, 'predicate':'photoSizeProgressive', 'params':[{'name':'type', 'type':'string'}, {'name':'w', 'type':'int'}, {'name':'h', 'type':'int'}, {'name':'sizes', 'type':'Vector<int>'}], 'type':'PhotoSize'}, {'id':-1228606141, 'predicate':'messages.messageViews', 'params':[{'name':'views', 'type':'Vector<MessageViews>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.MessageViews'}, {'id':-693004986, 'predicate':'updateReadChannelDiscussionInbox', 'params':[{'name':'flags', 'type':'#'}, {'name':'channel_id', 'type':'long'}, {'name':'top_msg_id', 'type':'int'}, {'name':'read_max_id', 'type':'int'}, {'name':'broadcast_id', 'type':'flags.0?long'}, {'name':'broadcast_post', 'type':'flags.0?int'}], 'type':'Update'}, {'id':1767677564, 'predicate':'updateReadChannelDiscussionOutbox', 'params':[{'name':'channel_id', 'type':'long'}, {'name':'top_msg_id', 'type':'int'}, {'name':'read_max_id', 'type':'int'}], 'type':'Update'}, {'id':-1506535550, 'predicate':'messages.discussionMessage', 'params':[{'name':'flags', 'type':'#'}, {'name':'messages', 'type':'Vector<Message>'}, {'name':'max_id', 'type':'flags.0?int'}, {'name':'read_inbox_max_id', 'type':'flags.1?int'}, {'name':'read_outbox_max_id', 'type':'flags.2?int'}, {'name':'unread_count', 'type':'int'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.DiscussionMessage'}, {'id':-1495959709, 'predicate':'messageReplyHeader', 'params':[{'name':'flags', 'type':'#'}, {'name':'reply_to_scheduled', 'type':'flags.2?true'}, {'name':'reply_to_msg_id', 'type':'int'}, {'name':'reply_to_peer_id', 'type':'flags.0?Peer'}, {'name':'reply_to_top_id', 'type':'flags.1?int'}], 'type':'MessageReplyHeader'}, {'id':-2083123262, 'predicate':'messageReplies', 'params':[{'name':'flags', 'type':'#'}, {'name':'comments', 'type':'flags.0?true'}, {'name':'replies', 'type':'int'}, {'name':'replies_pts', 'type':'int'}, {'name':'recent_repliers', 'type':'flags.1?Vector<Peer>'}, {'name':'channel_id', 'type':'flags.0?long'}, {'name':'max_id', 'type':'flags.2?int'}, {'name':'read_max_id', 'type':'flags.3?int'}], 'type':'MessageReplies'}, {'id':610945826, 'predicate':'updatePeerBlocked', 'params':[{'name':'peer_id', 'type':'Peer'}, {'name':'blocked', 'type':'Bool'}], 'type':'Update'}, {'id':-386039788, 'predicate':'peerBlocked', 'params':[{'name':'peer_id', 'type':'Peer'}, {'name':'date', 'type':'int'}], 'type':'PeerBlocked'}, {'id':-1937192669, 'predicate':'updateChannelUserTyping', 'params':[{'name':'flags', 'type':'#'}, {'name':'channel_id', 'type':'long'}, {'name':'top_msg_id', 'type':'flags.0?int'}, {'name':'from_id', 'type':'Peer'}, {'name':'action', 'type':'SendMessageAction'}], 'type':'Update'}, {'id':-1392895362, 'predicate':'inputMessageCallbackQuery', 'params':[{'name':'id', 'type':'int'}, {'name':'query_id', 'type':'long'}], 'type':'InputMessage'}, {'id':453242886, 'predicate':'channelParticipantLeft', 'params':[{'name':'peer', 'type':'Peer'}], 'type':'ChannelParticipant'}, {'id':-531931925, 'predicate':'channelParticipantsMentions', 'params':[{'name':'flags', 'type':'#'}, {'name':'q', 'type':'flags.0?string'}, {'name':'top_msg_id', 'type':'flags.1?int'}], 'type':'ChannelParticipantsFilter'}, {'id':-309990731, 'predicate':'updatePinnedMessages', 'params':[{'name':'flags', 'type':'#'}, {'name':'pinned', 'type':'flags.0?true'}, {'name':'peer', 'type':'Peer'}, {'name':'messages', 'type':'Vector<int>'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':1538885128, 'predicate':'updatePinnedChannelMessages', 'params':[{'name':'flags', 'type':'#'}, {'name':'pinned', 'type':'flags.0?true'}, {'name':'channel_id', 'type':'long'}, {'name':'messages', 'type':'Vector<int>'}, {'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}], 'type':'Update'}, {'id':464520273, 'predicate':'inputMessagesFilterPinned', 'params':[], 'type':'MessagesFilter'}, {'id':-1986399595, 'predicate':'stats.messageStats', 'params':[{'name':'views_graph', 'type':'StatsGraph'}], 'type':'stats.MessageStats'}, {'id':-1730095465, 'predicate':'messageActionGeoProximityReached', 'params':[{'name':'from_id', 'type':'Peer'}, {'name':'to_id', 'type':'Peer'}, {'name':'distance', 'type':'int'}], 'type':'MessageAction'}, {'id':-668906175, 'predicate':'photoPathSize', 'params':[{'name':'type', 'type':'string'}, {'name':'bytes', 'type':'bytes'}], 'type':'PhotoSize'}, {'id':-651419003, 'predicate':'speakingInGroupCallAction', 'params':[], 'type':'SendMessageAction'}, {'id':2004925620, 'predicate':'groupCallDiscarded', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'duration', 'type':'int'}], 'type':'GroupCall'}, {'id':-711498484, 'predicate':'groupCall', 'params':[{'name':'flags', 'type':'#'}, {'name':'join_muted', 'type':'flags.1?true'}, {'name':'can_change_join_muted', 'type':'flags.2?true'}, {'name':'join_date_asc', 'type':'flags.6?true'}, {'name':'schedule_start_subscribed', 'type':'flags.8?true'}, {'name':'can_start_video', 'type':'flags.9?true'}, {'name':'record_video_active', 'type':'flags.11?true'}, {'name':'rtmp_stream', 'type':'flags.12?true'}, {'name':'listeners_hidden', 'type':'flags.13?true'}, {'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}, {'name':'participants_count', 'type':'int'}, {'name':'title', 'type':'flags.3?string'}, {'name':'stream_dc_id', 'type':'flags.4?int'}, {'name':'record_start_date', 'type':'flags.5?int'}, {'name':'schedule_date', 'type':'flags.7?int'}, {'name':'unmuted_video_count', 'type':'flags.10?int'}, {'name':'unmuted_video_limit', 'type':'int'}, {'name':'version', 'type':'int'}], 'type':'GroupCall'}, {'id':-659913713, 'predicate':'inputGroupCall', 'params':[{'name':'id', 'type':'long'}, {'name':'access_hash', 'type':'long'}], 'type':'InputGroupCall'}, {'id':2047704898, 'predicate':'messageActionGroupCall', 'params':[{'name':'flags', 'type':'#'}, {'name':'call', 'type':'InputGroupCall'}, {'name':'duration', 'type':'flags.0?int'}], 'type':'MessageAction'}, {'id':1345295095, 'predicate':'messageActionInviteToGroupCall', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'users', 'type':'Vector<long>'}], 'type':'MessageAction'}, {'id':-341428482, 'predicate':'groupCallParticipant', 'params':[{'name':'flags', 'type':'#'}, {'name':'muted', 'type':'flags.0?true'}, {'name':'left', 'type':'flags.1?true'}, {'name':'can_self_unmute', 'type':'flags.2?true'}, {'name':'just_joined', 'type':'flags.4?true'}, {'name':'versioned', 'type':'flags.5?true'}, {'name':'min', 'type':'flags.8?true'}, {'name':'muted_by_you', 'type':'flags.9?true'}, {'name':'volume_by_admin', 'type':'flags.10?true'}, {'name':'self', 'type':'flags.12?true'}, {'name':'video_joined', 'type':'flags.15?true'}, {'name':'peer', 'type':'Peer'}, {'name':'date', 'type':'int'}, {'name':'active_date', 'type':'flags.3?int'}, {'name':'source', 'type':'int'}, {'name':'volume', 'type':'flags.7?int'}, {'name':'about', 'type':'flags.11?string'}, {'name':'raise_hand_rating', 'type':'flags.13?long'}, {'name':'video', 'type':'flags.6?GroupCallParticipantVideo'}, {'name':'presentation', 'type':'flags.14?GroupCallParticipantVideo'}], 'type':'GroupCallParticipant'}, {'id':-124097970, 'predicate':'updateChat', 'params':[{'name':'chat_id', 'type':'long'}], 'type':'Update'}, {'id':-219423922, 'predicate':'updateGroupCallParticipants', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'participants', 'type':'Vector<GroupCallParticipant>'}, {'name':'version', 'type':'int'}], 'type':'Update'}, {'id':347227392, 'predicate':'updateGroupCall', 'params':[{'name':'chat_id', 'type':'long'}, {'name':'call', 'type':'GroupCall'}], 'type':'Update'}, {'id':-1636664659, 'predicate':'phone.groupCall', 'params':[{'name':'call', 'type':'GroupCall'}, {'name':'participants', 'type':'Vector<GroupCallParticipant>'}, {'name':'participants_next_offset', 'type':'string'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'phone.GroupCall'}, {'id':-193506890, 'predicate':'phone.groupParticipants', 'params':[{'name':'count', 'type':'int'}, {'name':'participants', 'type':'Vector<GroupCallParticipant>'}, {'name':'next_offset', 'type':'string'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}, {'name':'version', 'type':'int'}], 'type':'phone.GroupParticipants'}, {'id':813821341, 'predicate':'inlineQueryPeerTypeSameBotPM', 'params':[], 'type':'InlineQueryPeerType'}, {'id':-2093215828, 'predicate':'inlineQueryPeerTypePM', 'params':[], 'type':'InlineQueryPeerType'}, {'id':-681130742, 'predicate':'inlineQueryPeerTypeChat', 'params':[], 'type':'InlineQueryPeerType'}, {'id':1589952067, 'predicate':'inlineQueryPeerTypeMegagroup', 'params':[], 'type':'InlineQueryPeerType'}, {'id':1664413338, 'predicate':'inlineQueryPeerTypeBroadcast', 'params':[], 'type':'InlineQueryPeerType'}, {'id':589338437, 'predicate':'channelAdminLogEventActionStartGroupCall', 'params':[{'name':'call', 'type':'InputGroupCall'}], 'type':'ChannelAdminLogEventAction'}, {'id':-610299584, 'predicate':'channelAdminLogEventActionDiscardGroupCall', 'params':[{'name':'call', 'type':'InputGroupCall'}], 'type':'ChannelAdminLogEventAction'}, {'id':-115071790, 'predicate':'channelAdminLogEventActionParticipantMute', 'params':[{'name':'participant', 'type':'GroupCallParticipant'}], 'type':'ChannelAdminLogEventAction'}, {'id':-431740480, 'predicate':'channelAdminLogEventActionParticipantUnmute', 'params':[{'name':'participant', 'type':'GroupCallParticipant'}], 'type':'ChannelAdminLogEventAction'}, {'id':1456906823, 'predicate':'channelAdminLogEventActionToggleGroupCallSetting', 'params':[{'name':'join_muted', 'type':'Bool'}], 'type':'ChannelAdminLogEventAction'}, {'id':-1966921727, 'predicate':'inputPaymentCredentialsGooglePay', 'params':[{'name':'payment_token', 'type':'DataJSON'}], 'type':'InputPaymentCredentials'}, {'id':375566091, 'predicate':'messages.historyImport', 'params':[{'name':'id', 'type':'long'}], 'type':'messages.HistoryImport'}, {'id':-606432698, 'predicate':'sendMessageHistoryImportAction', 'params':[{'name':'progress', 'type':'int'}], 'type':'SendMessageAction'}, {'id':1578088377, 'predicate':'messages.historyImportParsed', 'params':[{'name':'flags', 'type':'#'}, {'name':'pm', 'type':'flags.0?true'}, {'name':'group', 'type':'flags.1?true'}, {'name':'title', 'type':'flags.2?string'}], 'type':'messages.HistoryImportParsed'}, {'id':-170010905, 'predicate':'inputReportReasonFake', 'params':[], 'type':'ReportReason'}, {'id':-275956116, 'predicate':'messages.affectedFoundMessages', 'params':[{'name':'pts', 'type':'int'}, {'name':'pts_count', 'type':'int'}, {'name':'offset', 'type':'int'}, {'name':'messages', 'type':'Vector<int>'}], 'type':'messages.AffectedFoundMessages'}, {'id':-1441072131, 'predicate':'messageActionSetMessagesTTL', 'params':[{'name':'period', 'type':'int'}], 'type':'MessageAction'}, {'id':-1147422299, 'predicate':'updatePeerHistoryTTL', 'params':[{'name':'flags', 'type':'#'}, {'name':'peer', 'type':'Peer'}, {'name':'ttl_period', 'type':'flags.0?int'}], 'type':'Update'}, {'id':-796432838, 'predicate':'updateChatParticipant', 'params':[{'name':'flags', 'type':'#'}, {'name':'chat_id', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'actor_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'prev_participant', 'type':'flags.0?ChatParticipant'}, {'name':'new_participant', 'type':'flags.1?ChatParticipant'}, {'name':'invite', 'type':'flags.2?ExportedChatInvite'}, {'name':'qts', 'type':'int'}], 'type':'Update'}, {'id':-1738720581, 'predicate':'updateChannelParticipant', 'params':[{'name':'flags', 'type':'#'}, {'name':'channel_id', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'actor_id', 'type':'long'}, {'name':'user_id', 'type':'long'}, {'name':'prev_participant', 'type':'flags.0?ChannelParticipant'}, {'name':'new_participant', 'type':'flags.1?ChannelParticipant'}, {'name':'invite', 'type':'flags.2?ExportedChatInvite'}, {'name':'qts', 'type':'int'}], 'type':'Update'}, {'id':-997782967, 'predicate':'updateBotStopped', 'params':[{'name':'user_id', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'stopped', 'type':'Bool'}, {'name':'qts', 'type':'int'}], 'type':'Update'}, {'id':-1940201511, 'predicate':'chatInviteImporter', 'params':[{'name':'flags', 'type':'#'}, {'name':'requested', 'type':'flags.0?true'}, {'name':'user_id', 'type':'long'}, {'name':'date', 'type':'int'}, {'name':'about', 'type':'flags.2?string'}, {'name':'approved_by', 'type':'flags.1?long'}], 'type':'ChatInviteImporter'}, {'id':-1111085620, 'predicate':'messages.exportedChatInvites', 'params':[{'name':'count', 'type':'int'}, {'name':'invites', 'type':'Vector<ExportedChatInvite>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.ExportedChatInvites'}, {'id':410107472, 'predicate':'messages.exportedChatInvite', 'params':[{'name':'invite', 'type':'ExportedChatInvite'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.ExportedChatInvite'}, {'id':572915951, 'predicate':'messages.exportedChatInviteReplaced', 'params':[{'name':'invite', 'type':'ExportedChatInvite'}, {'name':'new_invite', 'type':'ExportedChatInvite'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.ExportedChatInvite'}, {'id':-2118733814, 'predicate':'messages.chatInviteImporters', 'params':[{'name':'count', 'type':'int'}, {'name':'importers', 'type':'Vector<ChatInviteImporter>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.ChatInviteImporters'}, {'id':-219353309, 'predicate':'chatAdminWithInvites', 'params':[{'name':'admin_id', 'type':'long'}, {'name':'invites_count', 'type':'int'}, {'name':'revoked_invites_count', 'type':'int'}], 'type':'ChatAdminWithInvites'}, {'id':-1231326505, 'predicate':'messages.chatAdminsWithInvites', 'params':[{'name':'admins', 'type':'Vector<ChatAdminWithInvites>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.ChatAdminsWithInvites'}, {'id':1557846647, 'predicate':'channelAdminLogEventActionParticipantJoinByInvite', 'params':[{'name':'invite', 'type':'ExportedChatInvite'}], 'type':'ChannelAdminLogEventAction'}, {'id':1515256996, 'predicate':'channelAdminLogEventActionExportedInviteDelete', 'params':[{'name':'invite', 'type':'ExportedChatInvite'}], 'type':'ChannelAdminLogEventAction'}, {'id':1091179342, 'predicate':'channelAdminLogEventActionExportedInviteRevoke', 'params':[{'name':'invite', 'type':'ExportedChatInvite'}], 'type':'ChannelAdminLogEventAction'}, {'id':-384910503, 'predicate':'channelAdminLogEventActionExportedInviteEdit', 'params':[{'name':'prev_invite', 'type':'ExportedChatInvite'}, {'name':'new_invite', 'type':'ExportedChatInvite'}], 'type':'ChannelAdminLogEventAction'}, {'id':1048537159, 'predicate':'channelAdminLogEventActionParticipantVolume', 'params':[{'name':'participant', 'type':'GroupCallParticipant'}], 'type':'ChannelAdminLogEventAction'}, {'id':1855199800, 'predicate':'channelAdminLogEventActionChangeHistoryTTL', 'params':[{'name':'prev_value', 'type':'int'}, {'name':'new_value', 'type':'int'}], 'type':'ChannelAdminLogEventAction'}, {'id':-1571952873, 'predicate':'messages.checkedHistoryImportPeer', 'params':[{'name':'confirm_text', 'type':'string'}], 'type':'messages.CheckedHistoryImportPeer'}, {'id':93890858, 'predicate':'inputGroupCallStream', 'params':[{'name':'flags', 'type':'#'}, {'name':'call', 'type':'InputGroupCall'}, {'name':'time_ms', 'type':'long'}, {'name':'scale', 'type':'int'}, {'name':'video_channel', 'type':'flags.0?int'}, {'name':'video_quality', 'type':'flags.0?int'}], 'type':'InputFileLocation'}, {'id':-1343921601, 'predicate':'phone.joinAsPeers', 'params':[{'name':'peers', 'type':'Vector<Peer>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'phone.JoinAsPeers'}, {'id':541839704, 'predicate':'phone.exportedGroupCallInvite', 'params':[{'name':'link', 'type':'string'}], 'type':'phone.ExportedGroupCallInvite'}, {'id':-672693723, 'predicate':'inputBotInlineMessageMediaInvoice', 'params':[{'name':'flags', 'type':'#'}, {'name':'title', 'type':'string'}, {'name':'description', 'type':'string'}, {'name':'photo', 'type':'flags.0?InputWebDocument'}, {'name':'invoice', 'type':'Invoice'}, {'name':'payload', 'type':'bytes'}, {'name':'provider', 'type':'string'}, {'name':'provider_data', 'type':'DataJSON'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'InputBotInlineMessage'}, {'id':894081801, 'predicate':'botInlineMessageMediaInvoice', 'params':[{'name':'flags', 'type':'#'}, {'name':'shipping_address_requested', 'type':'flags.1?true'}, {'name':'test', 'type':'flags.3?true'}, {'name':'title', 'type':'string'}, {'name':'description', 'type':'string'}, {'name':'photo', 'type':'flags.0?WebDocument'}, {'name':'currency', 'type':'string'}, {'name':'total_amount', 'type':'long'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}], 'type':'BotInlineMessage'}, {'id':-1281329567, 'predicate':'messageActionGroupCallScheduled', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'schedule_date', 'type':'int'}], 'type':'MessageAction'}, {'id':-592373577, 'predicate':'groupCallParticipantVideoSourceGroup', 'params':[{'name':'semantics', 'type':'string'}, {'name':'sources', 'type':'Vector<int>'}], 'type':'GroupCallParticipantVideoSourceGroup'}, {'id':1735736008, 'predicate':'groupCallParticipantVideo', 'params':[{'name':'flags', 'type':'#'}, {'name':'paused', 'type':'flags.0?true'}, {'name':'endpoint', 'type':'string'}, {'name':'source_groups', 'type':'Vector<GroupCallParticipantVideoSourceGroup>'}, {'name':'audio_source', 'type':'flags.1?int'}], 'type':'GroupCallParticipantVideo'}, {'id':192428418, 'predicate':'updateGroupCallConnection', 'params':[{'name':'flags', 'type':'#'}, {'name':'presentation', 'type':'flags.0?true'}, {'name':'params', 'type':'DataJSON'}], 'type':'Update'}, {'id':-2046910401, 'predicate':'stickers.suggestedShortName', 'params':[{'name':'short_name', 'type':'string'}], 'type':'stickers.SuggestedShortName'}, {'id':795652779, 'predicate':'botCommandScopeDefault', 'params':[], 'type':'BotCommandScope'}, {'id':1011811544, 'predicate':'botCommandScopeUsers', 'params':[], 'type':'BotCommandScope'}, {'id':1877059713, 'predicate':'botCommandScopeChats', 'params':[], 'type':'BotCommandScope'}, {'id':-1180016534, 'predicate':'botCommandScopeChatAdmins', 'params':[], 'type':'BotCommandScope'}, {'id':-610432643, 'predicate':'botCommandScopePeer', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'BotCommandScope'}, {'id':1071145937, 'predicate':'botCommandScopePeerAdmins', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'BotCommandScope'}, {'id':169026035, 'predicate':'botCommandScopePeerUser', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'user_id', 'type':'InputUser'}], 'type':'BotCommandScope'}, {'id':-478701471, 'predicate':'account.resetPasswordFailedWait', 'params':[{'name':'retry_date', 'type':'int'}], 'type':'account.ResetPasswordResult'}, {'id':-370148227, 'predicate':'account.resetPasswordRequestedWait', 'params':[{'name':'until_date', 'type':'int'}], 'type':'account.ResetPasswordResult'}, {'id':-383330754, 'predicate':'account.resetPasswordOk', 'params':[], 'type':'account.ResetPasswordResult'}, {'id':1299263278, 'predicate':'updateBotCommands', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'bot_id', 'type':'long'}, {'name':'commands', 'type':'Vector<BotCommand>'}], 'type':'Update'}, {'id':-1434950843, 'predicate':'messageActionSetChatTheme', 'params':[{'name':'emoticon', 'type':'string'}], 'type':'MessageAction'}, {'id':-1336228175, 'predicate':'sendMessageChooseStickerAction', 'params':[], 'type':'SendMessageAction'}, {'id':981691896, 'predicate':'sponsoredMessage', 'params':[{'name':'flags', 'type':'#'}, {'name':'recommended', 'type':'flags.5?true'}, {'name':'random_id', 'type':'bytes'}, {'name':'from_id', 'type':'flags.3?Peer'}, {'name':'chat_invite', 'type':'flags.4?ChatInvite'}, {'name':'chat_invite_hash', 'type':'flags.4?string'}, {'name':'channel_post', 'type':'flags.2?int'}, {'name':'start_param', 'type':'flags.0?string'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'flags.1?Vector<MessageEntity>'}], 'type':'SponsoredMessage'}, {'id':1705297877, 'predicate':'messages.sponsoredMessages', 'params':[{'name':'messages', 'type':'Vector<SponsoredMessage>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.SponsoredMessages'}, {'id':215889721, 'predicate':'inputStickerSetAnimatedEmojiAnimations', 'params':[], 'type':'InputStickerSet'}, {'id':630664139, 'predicate':'sendMessageEmojiInteraction', 'params':[{'name':'emoticon', 'type':'string'}, {'name':'msg_id', 'type':'int'}, {'name':'interaction', 'type':'DataJSON'}], 'type':'SendMessageAction'}, {'id':-1234857938, 'predicate':'sendMessageEmojiInteractionSeen', 'params':[{'name':'emoticon', 'type':'string'}], 'type':'SendMessageAction'}, {'id':-1227287081, 'predicate':'inputBotInlineMessageID64', 'params':[{'name':'dc_id', 'type':'int'}, {'name':'owner_id', 'type':'long'}, {'name':'id', 'type':'int'}, {'name':'access_hash', 'type':'long'}], 'type':'InputBotInlineMessageID'}, {'id':-911191137, 'predicate':'searchResultsCalendarPeriod', 'params':[{'name':'date', 'type':'int'}, {'name':'min_msg_id', 'type':'int'}, {'name':'max_msg_id', 'type':'int'}, {'name':'count', 'type':'int'}], 'type':'SearchResultsCalendarPeriod'}, {'id':343859772, 'predicate':'messages.searchResultsCalendar', 'params':[{'name':'flags', 'type':'#'}, {'name':'inexact', 'type':'flags.0?true'}, {'name':'count', 'type':'int'}, {'name':'min_date', 'type':'int'}, {'name':'min_msg_id', 'type':'int'}, {'name':'offset_id_offset', 'type':'flags.1?int'}, {'name':'periods', 'type':'Vector<SearchResultsCalendarPeriod>'}, {'name':'messages', 'type':'Vector<Message>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.SearchResultsCalendar'}, {'id':2137295719, 'predicate':'searchResultPosition', 'params':[{'name':'msg_id', 'type':'int'}, {'name':'date', 'type':'int'}, {'name':'offset', 'type':'int'}], 'type':'SearchResultsPosition'}, {'id':1404185519, 'predicate':'messages.searchResultsPositions', 'params':[{'name':'count', 'type':'int'}, {'name':'positions', 'type':'Vector<SearchResultsPosition>'}], 'type':'messages.SearchResultsPositions'}, {'id':-339958837, 'predicate':'messageActionChatJoinedByRequest', 'params':[], 'type':'MessageAction'}, {'id':1885586395, 'predicate':'updatePendingJoinRequests', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'requests_pending', 'type':'int'}, {'name':'recent_requesters', 'type':'Vector<long>'}], 'type':'Update'}, {'id':299870598, 'predicate':'updateBotChatInviteRequester', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'date', 'type':'int'}, {'name':'user_id', 'type':'long'}, {'name':'about', 'type':'string'}, {'name':'invite', 'type':'ExportedChatInvite'}, {'name':'qts', 'type':'int'}], 'type':'Update'}, {'id':-1347021750, 'predicate':'channelAdminLogEventActionParticipantJoinByRequest', 'params':[{'name':'invite', 'type':'ExportedChatInvite'}, {'name':'approved_by', 'type':'long'}], 'type':'ChannelAdminLogEventAction'}, {'id':-376962181, 'predicate':'inputKeyboardButtonUserProfile', 'params':[{'name':'text', 'type':'string'}, {'name':'user_id', 'type':'InputUser'}], 'type':'KeyboardButton'}, {'id':814112961, 'predicate':'keyboardButtonUserProfile', 'params':[{'name':'text', 'type':'string'}, {'name':'user_id', 'type':'long'}], 'type':'KeyboardButton'}, {'id':-2091463255, 'predicate':'channels.sendAsPeers', 'params':[{'name':'peers', 'type':'Vector<Peer>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'channels.SendAsPeers'}, {'id':-886388890, 'predicate':'channelAdminLogEventActionToggleNoForwards', 'params':[{'name':'new_value', 'type':'Bool'}], 'type':'ChannelAdminLogEventAction'}, {'id':-738646805, 'predicate':'messages.stickerSetNotModified', 'params':[], 'type':'messages.StickerSet'}, {'id':997004590, 'predicate':'users.userFull', 'params':[{'name':'full_user', 'type':'UserFull'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'users.UserFull'}, {'id':1753266509, 'predicate':'messages.peerSettings', 'params':[{'name':'settings', 'type':'PeerSettings'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'messages.PeerSettings'}, {'id':663693416, 'predicate':'channelAdminLogEventActionSendMessage', 'params':[{'name':'message', 'type':'Message'}], 'type':'ChannelAdminLogEventAction'}, {'id':-702884114, 'predicate':'auth.codeTypeMissedCall', 'params':[], 'type':'auth.CodeType'}, {'id':-2113903484, 'predicate':'auth.sentCodeTypeMissedCall', 'params':[{'name':'prefix', 'type':'string'}, {'name':'length', 'type':'int'}], 'type':'auth.SentCodeType'}, {'id':-1012759713, 'predicate':'auth.loggedOut', 'params':[{'name':'flags', 'type':'#'}, {'name':'future_auth_token', 'type':'flags.0?bytes'}], 'type':'auth.LoggedOut'}, {'id':357013699, 'predicate':'updateMessageReactions', 'params':[{'name':'peer', 'type':'Peer'}, {'name':'msg_id', 'type':'int'}, {'name':'reactions', 'type':'MessageReactions'}], 'type':'Update'}, {'id':1873957073, 'predicate':'reactionCount', 'params':[{'name':'flags', 'type':'#'}, {'name':'chosen', 'type':'flags.0?true'}, {'name':'reaction', 'type':'string'}, {'name':'count', 'type':'int'}], 'type':'ReactionCount'}, {'id':1328256121, 'predicate':'messageReactions', 'params':[{'name':'flags', 'type':'#'}, {'name':'min', 'type':'flags.0?true'}, {'name':'can_see_list', 'type':'flags.2?true'}, {'name':'results', 'type':'Vector<ReactionCount>'}, {'name':'recent_reactions', 'type':'flags.1?Vector<MessagePeerReaction>'}], 'type':'MessageReactions'}, {'id':834488621, 'predicate':'messages.messageReactionsList', 'params':[{'name':'flags', 'type':'#'}, {'name':'count', 'type':'int'}, {'name':'reactions', 'type':'Vector<MessagePeerReaction>'}, {'name':'chats', 'type':'Vector<Chat>'}, {'name':'users', 'type':'Vector<User>'}, {'name':'next_offset', 'type':'flags.0?string'}], 'type':'messages.MessageReactionsList'}, {'id':-1065882623, 'predicate':'availableReaction', 'params':[{'name':'flags', 'type':'#'}, {'name':'inactive', 'type':'flags.0?true'}, {'name':'premium', 'type':'flags.2?true'}, {'name':'reaction', 'type':'string'}, {'name':'title', 'type':'string'}, {'name':'static_icon', 'type':'Document'}, {'name':'appear_animation', 'type':'Document'}, {'name':'select_animation', 'type':'Document'}, {'name':'activate_animation', 'type':'Document'}, {'name':'effect_animation', 'type':'Document'}, {'name':'around_animation', 'type':'flags.1?Document'}, {'name':'center_icon', 'type':'flags.1?Document'}], 'type':'AvailableReaction'}, {'id':-1626924713, 'predicate':'messages.availableReactionsNotModified', 'params':[], 'type':'messages.AvailableReactions'}, {'id':1989032621, 'predicate':'messages.availableReactions', 'params':[{'name':'hash', 'type':'int'}, {'name':'reactions', 'type':'Vector<AvailableReaction>'}], 'type':'messages.AvailableReactions'}, {'id':852137487, 'predicate':'messageEntitySpoiler', 'params':[{'name':'offset', 'type':'int'}, {'name':'length', 'type':'int'}], 'type':'MessageEntity'}, {'id':-1661470870, 'predicate':'channelAdminLogEventActionChangeAvailableReactions', 'params':[{'name':'prev_value', 'type':'Vector<string>'}, {'name':'new_value', 'type':'Vector<string>'}], 'type':'ChannelAdminLogEventAction'}, {'id':1741309751, 'predicate':'messages.translateNoResult', 'params':[], 'type':'messages.TranslatedText'}, {'id':-1575684144, 'predicate':'messages.translateResultText', 'params':[{'name':'text', 'type':'string'}], 'type':'messages.TranslatedText'}, {'id':1370914559, 'predicate':'messagePeerReaction', 'params':[{'name':'flags', 'type':'#'}, {'name':'big', 'type':'flags.0?true'}, {'name':'unread', 'type':'flags.1?true'}, {'name':'peer_id', 'type':'Peer'}, {'name':'reaction', 'type':'string'}], 'type':'MessagePeerReaction'}, {'id':-2132064081, 'predicate':'groupCallStreamChannel', 'params':[{'name':'channel', 'type':'int'}, {'name':'scale', 'type':'int'}, {'name':'last_timestamp_ms', 'type':'long'}], 'type':'GroupCallStreamChannel'}, {'id':-790330702, 'predicate':'phone.groupCallStreamChannels', 'params':[{'name':'channels', 'type':'Vector<GroupCallStreamChannel>'}], 'type':'phone.GroupCallStreamChannels'}, {'id':177124030, 'predicate':'inputReportReasonIllegalDrugs', 'params':[], 'type':'ReportReason'}, {'id':-1631091139, 'predicate':'inputReportReasonPersonalDetails', 'params':[], 'type':'ReportReason'}, {'id':767505458, 'predicate':'phone.groupCallStreamRtmpUrl', 'params':[{'name':'url', 'type':'string'}, {'name':'key', 'type':'string'}], 'type':'phone.GroupCallStreamRtmpUrl'}, {'id':1165423600, 'predicate':'attachMenuBotIconColor', 'params':[{'name':'name', 'type':'string'}, {'name':'color', 'type':'int'}], 'type':'AttachMenuBotIconColor'}, {'id':-1297663893, 'predicate':'attachMenuBotIcon', 'params':[{'name':'flags', 'type':'#'}, {'name':'name', 'type':'string'}, {'name':'icon', 'type':'Document'}, {'name':'colors', 'type':'flags.0?Vector<AttachMenuBotIconColor>'}], 'type':'AttachMenuBotIcon'}, {'id':-928371502, 'predicate':'attachMenuBot', 'params':[{'name':'flags', 'type':'#'}, {'name':'inactive', 'type':'flags.0?true'}, {'name':'has_settings', 'type':'flags.1?true'}, {'name':'bot_id', 'type':'long'}, {'name':'short_name', 'type':'string'}, {'name':'peer_types', 'type':'Vector<AttachMenuPeerType>'}, {'name':'icons', 'type':'Vector<AttachMenuBotIcon>'}], 'type':'AttachMenuBot'}, {'id':-237467044, 'predicate':'attachMenuBotsNotModified', 'params':[], 'type':'AttachMenuBots'}, {'id':1011024320, 'predicate':'attachMenuBots', 'params':[{'name':'hash', 'type':'long'}, {'name':'bots', 'type':'Vector<AttachMenuBot>'}, {'name':'users', 'type':'Vector<User>'}], 'type':'AttachMenuBots'}, {'id':-1816172929, 'predicate':'attachMenuBotsBot', 'params':[{'name':'bot', 'type':'AttachMenuBot'}, {'name':'users', 'type':'Vector<User>'}], 'type':'AttachMenuBotsBot'}, {'id':397910539, 'predicate':'updateAttachMenuBots', 'params':[], 'type':'Update'}, {'id':202659196, 'predicate':'webViewResultUrl', 'params':[{'name':'query_id', 'type':'long'}, {'name':'url', 'type':'string'}], 'type':'WebViewResult'}, {'id':-2010155333, 'predicate':'simpleWebViewResultUrl', 'params':[{'name':'url', 'type':'string'}], 'type':'SimpleWebViewResult'}, {'id':211046684, 'predicate':'webViewMessageSent', 'params':[{'name':'flags', 'type':'#'}, {'name':'msg_id', 'type':'flags.0?InputBotInlineMessageID'}], 'type':'WebViewMessageSent'}, {'id':361936797, 'predicate':'updateWebViewResultSent', 'params':[{'name':'query_id', 'type':'long'}], 'type':'Update'}, {'id':326529584, 'predicate':'keyboardButtonWebView', 'params':[{'name':'text', 'type':'string'}, {'name':'url', 'type':'string'}], 'type':'KeyboardButton'}, {'id':-1598009252, 'predicate':'keyboardButtonSimpleWebView', 'params':[{'name':'text', 'type':'string'}, {'name':'url', 'type':'string'}], 'type':'KeyboardButton'}, {'id':1205698681, 'predicate':'messageActionWebViewDataSentMe', 'params':[{'name':'text', 'type':'string'}, {'name':'data', 'type':'string'}], 'type':'MessageAction'}, {'id':-1262252875, 'predicate':'messageActionWebViewDataSent', 'params':[{'name':'text', 'type':'string'}], 'type':'MessageAction'}, {'id':347625491, 'predicate':'updateBotMenuButton', 'params':[{'name':'bot_id', 'type':'long'}, {'name':'button', 'type':'BotMenuButton'}], 'type':'Update'}, {'id':1966318984, 'predicate':'botMenuButtonDefault', 'params':[], 'type':'BotMenuButton'}, {'id':1113113093, 'predicate':'botMenuButtonCommands', 'params':[], 'type':'BotMenuButton'}, {'id':-944407322, 'predicate':'botMenuButton', 'params':[{'name':'text', 'type':'string'}, {'name':'url', 'type':'string'}], 'type':'BotMenuButton'}, {'id':-67704655, 'predicate':'account.savedRingtonesNotModified', 'params':[], 'type':'account.SavedRingtones'}, {'id':-1041683259, 'predicate':'account.savedRingtones', 'params':[{'name':'hash', 'type':'long'}, {'name':'ringtones', 'type':'Vector<Document>'}], 'type':'account.SavedRingtones'}, {'id':1960361625, 'predicate':'updateSavedRingtones', 'params':[], 'type':'Update'}, {'id':-1746354498, 'predicate':'notificationSoundDefault', 'params':[], 'type':'NotificationSound'}, {'id':1863070943, 'predicate':'notificationSoundNone', 'params':[], 'type':'NotificationSound'}, {'id':-2096391452, 'predicate':'notificationSoundLocal', 'params':[{'name':'title', 'type':'string'}, {'name':'data', 'type':'string'}], 'type':'NotificationSound'}, {'id':-9666487, 'predicate':'notificationSoundRingtone', 'params':[{'name':'id', 'type':'long'}], 'type':'NotificationSound'}, {'id':-1222230163, 'predicate':'account.savedRingtone', 'params':[], 'type':'account.SavedRingtone'}, {'id':523271863, 'predicate':'account.savedRingtoneConverted', 'params':[{'name':'document', 'type':'Document'}], 'type':'account.SavedRingtone'}, {'id':2104224014, 'predicate':'attachMenuPeerTypeSameBotPM', 'params':[], 'type':'AttachMenuPeerType'}, {'id':-1020528102, 'predicate':'attachMenuPeerTypeBotPM', 'params':[], 'type':'AttachMenuPeerType'}, {'id':-247016673, 'predicate':'attachMenuPeerTypePM', 'params':[], 'type':'AttachMenuPeerType'}, {'id':84480319, 'predicate':'attachMenuPeerTypeChat', 'params':[], 'type':'AttachMenuPeerType'}, {'id':2080104188, 'predicate':'attachMenuPeerTypeBroadcast', 'params':[], 'type':'AttachMenuPeerType'}, {'id':-317687113, 'predicate':'chatInvitePublicJoinRequests', 'params':[], 'type':'ExportedChatInvite'}, {'id':-977967015, 'predicate':'inputInvoiceMessage', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}], 'type':'InputInvoice'}, {'id':-1020867857, 'predicate':'inputInvoiceSlug', 'params':[{'name':'slug', 'type':'string'}], 'type':'InputInvoice'}, {'id':-1362048039, 'predicate':'payments.exportedInvoice', 'params':[{'name':'url', 'type':'string'}], 'type':'payments.ExportedInvoice'}, {'id':8703322, 'predicate':'updateTranscribedAudio', 'params':[{'name':'flags', 'type':'#'}, {'name':'pending', 'type':'flags.0?true'}, {'name':'peer', 'type':'Peer'}, {'name':'msg_id', 'type':'int'}, {'name':'transcription_id', 'type':'long'}, {'name':'text', 'type':'string'}], 'type':'Update'}, {'id':-1821037486, 'predicate':'messages.transcribedAudio', 'params':[{'name':'flags', 'type':'#'}, {'name':'pending', 'type':'flags.0?true'}, {'name':'transcription_id', 'type':'long'}, {'name':'text', 'type':'string'}], 'type':'messages.TranscribedAudio'}, {'id':909284270, 'predicate':'dialogFilterDefault', 'params':[], 'type':'DialogFilter'}, {'id':-1974518743, 'predicate':'help.premiumPromo', 'params':[{'name':'status_text', 'type':'string'}, {'name':'status_entities', 'type':'Vector<MessageEntity>'}, {'name':'video_sections', 'type':'Vector<string>'}, {'name':'videos', 'type':'Vector<Document>'}, {'name':'currency', 'type':'string'}, {'name':'monthly_amount', 'type':'long'}, {'name':'users', 'type':'Vector<User>'}], 'type':'help.PremiumPromo'}], 'methods':[{'id':-878758099, 'method':'invokeAfterMsg', 'params':[{'name':'msg_id', 'type':'long'}, {'name':'query', 'type':'!X'}], 'type':'X'}, {'id':1036301552, 'method':'invokeAfterMsgs', 'params':[{'name':'msg_ids', 'type':'Vector<long>'}, {'name':'query', 'type':'!X'}], 'type':'X'}, {'id':-1502141361, 'method':'auth.sendCode', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'api_id', 'type':'int'}, {'name':'api_hash', 'type':'string'}, {'name':'settings', 'type':'CodeSettings'}], 'type':'auth.SentCode'}, {'id':-2131827673, 'method':'auth.signUp', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'phone_code_hash', 'type':'string'}, {'name':'first_name', 'type':'string'}, {'name':'last_name', 'type':'string'}], 'type':'auth.Authorization'}, {'id':-1126886015, 'method':'auth.signIn', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'phone_code_hash', 'type':'string'}, {'name':'phone_code', 'type':'string'}], 'type':'auth.Authorization'}, {'id':1047706137, 'method':'auth.logOut', 'params':[], 'type':'auth.LoggedOut'}, {'id':-1616179942, 'method':'auth.resetAuthorizations', 'params':[], 'type':'Bool'}, {'id':-440401971, 'method':'auth.exportAuthorization', 'params':[{'name':'dc_id', 'type':'int'}], 'type':'auth.ExportedAuthorization'}, {'id':-1518699091, 'method':'auth.importAuthorization', 'params':[{'name':'id', 'type':'long'}, {'name':'bytes', 'type':'bytes'}], 'type':'auth.Authorization'}, {'id':-841733627, 'method':'auth.bindTempAuthKey', 'params':[{'name':'perm_auth_key_id', 'type':'long'}, {'name':'nonce', 'type':'long'}, {'name':'expires_at', 'type':'int'}, {'name':'encrypted_message', 'type':'bytes'}], 'type':'Bool'}, {'id':-326762118, 'method':'account.registerDevice', 'params':[{'name':'flags', 'type':'#'}, {'name':'no_muted', 'type':'flags.0?true'}, {'name':'token_type', 'type':'int'}, {'name':'token', 'type':'string'}, {'name':'app_sandbox', 'type':'Bool'}, {'name':'secret', 'type':'bytes'}, {'name':'other_uids', 'type':'Vector<long>'}], 'type':'Bool'}, {'id':1779249670, 'method':'account.unregisterDevice', 'params':[{'name':'token_type', 'type':'int'}, {'name':'token', 'type':'string'}, {'name':'other_uids', 'type':'Vector<long>'}], 'type':'Bool'}, {'id':-2067899501, 'method':'account.updateNotifySettings', 'params':[{'name':'peer', 'type':'InputNotifyPeer'}, {'name':'settings', 'type':'InputPeerNotifySettings'}], 'type':'Bool'}, {'id':313765169, 'method':'account.getNotifySettings', 'params':[{'name':'peer', 'type':'InputNotifyPeer'}], 'type':'PeerNotifySettings'}, {'id':-612493497, 'method':'account.resetNotifySettings', 'params':[], 'type':'Bool'}, {'id':2018596725, 'method':'account.updateProfile', 'params':[{'name':'flags', 'type':'#'}, {'name':'first_name', 'type':'flags.0?string'}, {'name':'last_name', 'type':'flags.1?string'}, {'name':'about', 'type':'flags.2?string'}], 'type':'User'}, {'id':1713919532, 'method':'account.updateStatus', 'params':[{'name':'offline', 'type':'Bool'}], 'type':'Bool'}, {'id':127302966, 'method':'account.getWallPapers', 'params':[{'name':'hash', 'type':'long'}], 'type':'account.WallPapers'}, {'id':-977650298, 'method':'account.reportPeer', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'reason', 'type':'ReportReason'}, {'name':'message', 'type':'string'}], 'type':'Bool'}, {'id':227648840, 'method':'users.getUsers', 'params':[{'name':'id', 'type':'Vector<InputUser>'}], 'type':'Vector<User>'}, {'id':-1240508136, 'method':'users.getFullUser', 'params':[{'name':'id', 'type':'InputUser'}], 'type':'users.UserFull'}, {'id':2061264541, 'method':'contacts.getContactIDs', 'params':[{'name':'hash', 'type':'long'}], 'type':'Vector<int>'}, {'id':-995929106, 'method':'contacts.getStatuses', 'params':[], 'type':'Vector<ContactStatus>'}, {'id':1574346258, 'method':'contacts.getContacts', 'params':[{'name':'hash', 'type':'long'}], 'type':'contacts.Contacts'}, {'id':746589157, 'method':'contacts.importContacts', 'params':[{'name':'contacts', 'type':'Vector<InputContact>'}], 'type':'contacts.ImportedContacts'}, {'id':157945344, 'method':'contacts.deleteContacts', 'params':[{'name':'id', 'type':'Vector<InputUser>'}], 'type':'Updates'}, {'id':269745566, 'method':'contacts.deleteByPhones', 'params':[{'name':'phones', 'type':'Vector<string>'}], 'type':'Bool'}, {'id':1758204945, 'method':'contacts.block', 'params':[{'name':'id', 'type':'InputPeer'}], 'type':'Bool'}, {'id':-1096393392, 'method':'contacts.unblock', 'params':[{'name':'id', 'type':'InputPeer'}], 'type':'Bool'}, {'id':-176409329, 'method':'contacts.getBlocked', 'params':[{'name':'offset', 'type':'int'}, {'name':'limit', 'type':'int'}], 'type':'contacts.Blocked'}, {'id':1673946374, 'method':'messages.getMessages', 'params':[{'name':'id', 'type':'Vector<InputMessage>'}], 'type':'messages.Messages'}, {'id':-1594569905, 'method':'messages.getDialogs', 'params':[{'name':'flags', 'type':'#'}, {'name':'exclude_pinned', 'type':'flags.0?true'}, {'name':'folder_id', 'type':'flags.1?int'}, {'name':'offset_date', 'type':'int'}, {'name':'offset_id', 'type':'int'}, {'name':'offset_peer', 'type':'InputPeer'}, {'name':'limit', 'type':'int'}, {'name':'hash', 'type':'long'}], 'type':'messages.Dialogs'}, {'id':1143203525, 'method':'messages.getHistory', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'offset_id', 'type':'int'}, {'name':'offset_date', 'type':'int'}, {'name':'add_offset', 'type':'int'}, {'name':'limit', 'type':'int'}, {'name':'max_id', 'type':'int'}, {'name':'min_id', 'type':'int'}, {'name':'hash', 'type':'long'}], 'type':'messages.Messages'}, {'id':-1593989278, 'method':'messages.search', 'params':[{'name':'flags', 'type':'#'}, {'name':'peer', 'type':'InputPeer'}, {'name':'q', 'type':'string'}, {'name':'from_id', 'type':'flags.0?InputPeer'}, {'name':'top_msg_id', 'type':'flags.1?int'}, {'name':'filter', 'type':'MessagesFilter'}, {'name':'min_date', 'type':'int'}, {'name':'max_date', 'type':'int'}, {'name':'offset_id', 'type':'int'}, {'name':'add_offset', 'type':'int'}, {'name':'limit', 'type':'int'}, {'name':'max_id', 'type':'int'}, {'name':'min_id', 'type':'int'}, {'name':'hash', 'type':'long'}], 'type':'messages.Messages'}, {'id':238054714, 'method':'messages.readHistory', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'max_id', 'type':'int'}], 'type':'messages.AffectedMessages'}, {'id':-1332768214, 'method':'messages.deleteHistory', 'params':[{'name':'flags', 'type':'#'}, {'name':'just_clear', 'type':'flags.0?true'}, {'name':'revoke', 'type':'flags.1?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'max_id', 'type':'int'}, {'name':'min_date', 'type':'flags.2?int'}, {'name':'max_date', 'type':'flags.3?int'}], 'type':'messages.AffectedHistory'}, {'id':-443640366, 'method':'messages.deleteMessages', 'params':[{'name':'flags', 'type':'#'}, {'name':'revoke', 'type':'flags.0?true'}, {'name':'id', 'type':'Vector<int>'}], 'type':'messages.AffectedMessages'}, {'id':94983360, 'method':'messages.receivedMessages', 'params':[{'name':'max_id', 'type':'int'}], 'type':'Vector<ReceivedNotifyMessage>'}, {'id':1486110434, 'method':'messages.setTyping', 'params':[{'name':'flags', 'type':'#'}, {'name':'peer', 'type':'InputPeer'}, {'name':'top_msg_id', 'type':'flags.0?int'}, {'name':'action', 'type':'SendMessageAction'}], 'type':'Bool'}, {'id':228423076, 'method':'messages.sendMessage', 'params':[{'name':'flags', 'type':'#'}, {'name':'no_webpage', 'type':'flags.1?true'}, {'name':'silent', 'type':'flags.5?true'}, {'name':'background', 'type':'flags.6?true'}, {'name':'clear_draft', 'type':'flags.7?true'}, {'name':'noforwards', 'type':'flags.14?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'reply_to_msg_id', 'type':'flags.0?int'}, {'name':'message', 'type':'string'}, {'name':'random_id', 'type':'long'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}, {'name':'entities', 'type':'flags.3?Vector<MessageEntity>'}, {'name':'schedule_date', 'type':'flags.10?int'}, {'name':'send_as', 'type':'flags.13?InputPeer'}], 'type':'Updates'}, {'id':-497026848, 'method':'messages.sendMedia', 'params':[{'name':'flags', 'type':'#'}, {'name':'silent', 'type':'flags.5?true'}, {'name':'background', 'type':'flags.6?true'}, {'name':'clear_draft', 'type':'flags.7?true'}, {'name':'noforwards', 'type':'flags.14?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'reply_to_msg_id', 'type':'flags.0?int'}, {'name':'media', 'type':'InputMedia'}, {'name':'message', 'type':'string'}, {'name':'random_id', 'type':'long'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}, {'name':'entities', 'type':'flags.3?Vector<MessageEntity>'}, {'name':'schedule_date', 'type':'flags.10?int'}, {'name':'send_as', 'type':'flags.13?InputPeer'}], 'type':'Updates'}, {'id':-869258997, 'method':'messages.forwardMessages', 'params':[{'name':'flags', 'type':'#'}, {'name':'silent', 'type':'flags.5?true'}, {'name':'background', 'type':'flags.6?true'}, {'name':'with_my_score', 'type':'flags.8?true'}, {'name':'drop_author', 'type':'flags.11?true'}, {'name':'drop_media_captions', 'type':'flags.12?true'}, {'name':'noforwards', 'type':'flags.14?true'}, {'name':'from_peer', 'type':'InputPeer'}, {'name':'id', 'type':'Vector<int>'}, {'name':'random_id', 'type':'Vector<long>'}, {'name':'to_peer', 'type':'InputPeer'}, {'name':'schedule_date', 'type':'flags.10?int'}, {'name':'send_as', 'type':'flags.13?InputPeer'}], 'type':'Updates'}, {'id':-820669733, 'method':'messages.reportSpam', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'Bool'}, {'id':-270948702, 'method':'messages.getPeerSettings', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'messages.PeerSettings'}, {'id':-1991005362, 'method':'messages.report', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'Vector<int>'}, {'name':'reason', 'type':'ReportReason'}, {'name':'message', 'type':'string'}], 'type':'Bool'}, {'id':1240027791, 'method':'messages.getChats', 'params':[{'name':'id', 'type':'Vector<long>'}], 'type':'messages.Chats'}, {'id':-1364194508, 'method':'messages.getFullChat', 'params':[{'name':'chat_id', 'type':'long'}], 'type':'messages.ChatFull'}, {'id':1937260541, 'method':'messages.editChatTitle', 'params':[{'name':'chat_id', 'type':'long'}, {'name':'title', 'type':'string'}], 'type':'Updates'}, {'id':903730804, 'method':'messages.editChatPhoto', 'params':[{'name':'chat_id', 'type':'long'}, {'name':'photo', 'type':'InputChatPhoto'}], 'type':'Updates'}, {'id':-230206493, 'method':'messages.addChatUser', 'params':[{'name':'chat_id', 'type':'long'}, {'name':'user_id', 'type':'InputUser'}, {'name':'fwd_limit', 'type':'int'}], 'type':'Updates'}, {'id':-1575461717, 'method':'messages.deleteChatUser', 'params':[{'name':'flags', 'type':'#'}, {'name':'revoke_history', 'type':'flags.0?true'}, {'name':'chat_id', 'type':'long'}, {'name':'user_id', 'type':'InputUser'}], 'type':'Updates'}, {'id':164303470, 'method':'messages.createChat', 'params':[{'name':'users', 'type':'Vector<InputUser>'}, {'name':'title', 'type':'string'}], 'type':'Updates'}, {'id':-304838614, 'method':'updates.getState', 'params':[], 'type':'updates.State'}, {'id':630429265, 'method':'updates.getDifference', 'params':[{'name':'flags', 'type':'#'}, {'name':'pts', 'type':'int'}, {'name':'pts_total_limit', 'type':'flags.0?int'}, {'name':'date', 'type':'int'}, {'name':'qts', 'type':'int'}], 'type':'updates.Difference'}, {'id':1926525996, 'method':'photos.updateProfilePhoto', 'params':[{'name':'id', 'type':'InputPhoto'}], 'type':'photos.Photo'}, {'id':-1980559511, 'method':'photos.uploadProfilePhoto', 'params':[{'name':'flags', 'type':'#'}, {'name':'file', 'type':'flags.0?InputFile'}, {'name':'video', 'type':'flags.1?InputFile'}, {'name':'video_start_ts', 'type':'flags.2?double'}], 'type':'photos.Photo'}, {'id':-2016444625, 'method':'photos.deletePhotos', 'params':[{'name':'id', 'type':'Vector<InputPhoto>'}], 'type':'Vector<long>'}, {'id':-1291540959, 'method':'upload.saveFilePart', 'params':[{'name':'file_id', 'type':'long'}, {'name':'file_part', 'type':'int'}, {'name':'bytes', 'type':'bytes'}], 'type':'Bool'}, {'id':-1101843010, 'method':'upload.getFile', 'params':[{'name':'flags', 'type':'#'}, {'name':'precise', 'type':'flags.0?true'}, {'name':'cdn_supported', 'type':'flags.1?true'}, {'name':'location', 'type':'InputFileLocation'}, {'name':'offset', 'type':'long'}, {'name':'limit', 'type':'int'}], 'type':'upload.File'}, {'id':-990308245, 'method':'help.getConfig', 'params':[], 'type':'Config'}, {'id':531836966, 'method':'help.getNearestDc', 'params':[], 'type':'NearestDc'}, {'id':1378703997, 'method':'help.getAppUpdate', 'params':[{'name':'source', 'type':'string'}], 'type':'help.AppUpdate'}, {'id':1295590211, 'method':'help.getInviteText', 'params':[], 'type':'help.InviteText'}, {'id':-1848823128, 'method':'photos.getUserPhotos', 'params':[{'name':'user_id', 'type':'InputUser'}, {'name':'offset', 'type':'int'}, {'name':'max_id', 'type':'long'}, {'name':'limit', 'type':'int'}], 'type':'photos.Photos'}, {'id':651135312, 'method':'messages.getDhConfig', 'params':[{'name':'version', 'type':'int'}, {'name':'random_length', 'type':'int'}], 'type':'messages.DhConfig'}, {'id':-162681021, 'method':'messages.requestEncryption', 'params':[{'name':'user_id', 'type':'InputUser'}, {'name':'random_id', 'type':'int'}, {'name':'g_a', 'type':'bytes'}], 'type':'EncryptedChat'}, {'id':1035731989, 'method':'messages.acceptEncryption', 'params':[{'name':'peer', 'type':'InputEncryptedChat'}, {'name':'g_b', 'type':'bytes'}, {'name':'key_fingerprint', 'type':'long'}], 'type':'EncryptedChat'}, {'id':-208425312, 'method':'messages.discardEncryption', 'params':[{'name':'flags', 'type':'#'}, {'name':'delete_history', 'type':'flags.0?true'}, {'name':'chat_id', 'type':'int'}], 'type':'Bool'}, {'id':2031374829, 'method':'messages.setEncryptedTyping', 'params':[{'name':'peer', 'type':'InputEncryptedChat'}, {'name':'typing', 'type':'Bool'}], 'type':'Bool'}, {'id':2135648522, 'method':'messages.readEncryptedHistory', 'params':[{'name':'peer', 'type':'InputEncryptedChat'}, {'name':'max_date', 'type':'int'}], 'type':'Bool'}, {'id':1157265941, 'method':'messages.sendEncrypted', 'params':[{'name':'flags', 'type':'#'}, {'name':'silent', 'type':'flags.0?true'}, {'name':'peer', 'type':'InputEncryptedChat'}, {'name':'random_id', 'type':'long'}, {'name':'data', 'type':'bytes'}], 'type':'messages.SentEncryptedMessage'}, {'id':1431914525, 'method':'messages.sendEncryptedFile', 'params':[{'name':'flags', 'type':'#'}, {'name':'silent', 'type':'flags.0?true'}, {'name':'peer', 'type':'InputEncryptedChat'}, {'name':'random_id', 'type':'long'}, {'name':'data', 'type':'bytes'}, {'name':'file', 'type':'InputEncryptedFile'}], 'type':'messages.SentEncryptedMessage'}, {'id':852769188, 'method':'messages.sendEncryptedService', 'params':[{'name':'peer', 'type':'InputEncryptedChat'}, {'name':'random_id', 'type':'long'}, {'name':'data', 'type':'bytes'}], 'type':'messages.SentEncryptedMessage'}, {'id':1436924774, 'method':'messages.receivedQueue', 'params':[{'name':'max_qts', 'type':'int'}], 'type':'Vector<long>'}, {'id':1259113487, 'method':'messages.reportEncryptedSpam', 'params':[{'name':'peer', 'type':'InputEncryptedChat'}], 'type':'Bool'}, {'id':-562337987, 'method':'upload.saveBigFilePart', 'params':[{'name':'file_id', 'type':'long'}, {'name':'file_part', 'type':'int'}, {'name':'file_total_parts', 'type':'int'}, {'name':'bytes', 'type':'bytes'}], 'type':'Bool'}, {'id':-1043505495, 'method':'initConnection', 'params':[{'name':'flags', 'type':'#'}, {'name':'api_id', 'type':'int'}, {'name':'device_model', 'type':'string'}, {'name':'system_version', 'type':'string'}, {'name':'app_version', 'type':'string'}, {'name':'system_lang_code', 'type':'string'}, {'name':'lang_pack', 'type':'string'}, {'name':'lang_code', 'type':'string'}, {'name':'proxy', 'type':'flags.0?InputClientProxy'}, {'name':'params', 'type':'flags.1?JSONValue'}, {'name':'query', 'type':'!X'}], 'type':'X'}, {'id':-1663104819, 'method':'help.getSupport', 'params':[], 'type':'help.Support'}, {'id':916930423, 'method':'messages.readMessageContents', 'params':[{'name':'id', 'type':'Vector<int>'}], 'type':'messages.AffectedMessages'}, {'id':655677548, 'method':'account.checkUsername', 'params':[{'name':'username', 'type':'string'}], 'type':'Bool'}, {'id':1040964988, 'method':'account.updateUsername', 'params':[{'name':'username', 'type':'string'}], 'type':'User'}, {'id':301470424, 'method':'contacts.search', 'params':[{'name':'q', 'type':'string'}, {'name':'limit', 'type':'int'}], 'type':'contacts.Found'}, {'id':-623130288, 'method':'account.getPrivacy', 'params':[{'name':'key', 'type':'InputPrivacyKey'}], 'type':'account.PrivacyRules'}, {'id':-906486552, 'method':'account.setPrivacy', 'params':[{'name':'key', 'type':'InputPrivacyKey'}, {'name':'rules', 'type':'Vector<InputPrivacyRule>'}], 'type':'account.PrivacyRules'}, {'id':-1564422284, 'method':'account.deleteAccount', 'params':[{'name':'flags', 'type':'#'}, {'name':'reason', 'type':'string'}, {'name':'password', 'type':'flags.0?InputCheckPasswordSRP'}], 'type':'Bool'}, {'id':150761757, 'method':'account.getAccountTTL', 'params':[], 'type':'AccountDaysTTL'}, {'id':608323678, 'method':'account.setAccountTTL', 'params':[{'name':'ttl', 'type':'AccountDaysTTL'}], 'type':'Bool'}, {'id':-627372787, 'method':'invokeWithLayer', 'params':[{'name':'layer', 'type':'int'}, {'name':'query', 'type':'!X'}], 'type':'X'}, {'id':-113456221, 'method':'contacts.resolveUsername', 'params':[{'name':'username', 'type':'string'}], 'type':'contacts.ResolvedPeer'}, {'id':-2108208411, 'method':'account.sendChangePhoneCode', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'settings', 'type':'CodeSettings'}], 'type':'auth.SentCode'}, {'id':1891839707, 'method':'account.changePhone', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'phone_code_hash', 'type':'string'}, {'name':'phone_code', 'type':'string'}], 'type':'User'}, {'id':-710552671, 'method':'messages.getStickers', 'params':[{'name':'emoticon', 'type':'string'}, {'name':'hash', 'type':'long'}], 'type':'messages.Stickers'}, {'id':-1197432408, 'method':'messages.getAllStickers', 'params':[{'name':'hash', 'type':'long'}], 'type':'messages.AllStickers'}, {'id':954152242, 'method':'account.updateDeviceLocked', 'params':[{'name':'period', 'type':'int'}], 'type':'Bool'}, {'id':1738800940, 'method':'auth.importBotAuthorization', 'params':[{'name':'flags', 'type':'int'}, {'name':'api_id', 'type':'int'}, {'name':'api_hash', 'type':'string'}, {'name':'bot_auth_token', 'type':'string'}], 'type':'auth.Authorization'}, {'id':-1956073268, 'method':'messages.getWebPagePreview', 'params':[{'name':'flags', 'type':'#'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'flags.3?Vector<MessageEntity>'}], 'type':'MessageMedia'}, {'id':-484392616, 'method':'account.getAuthorizations', 'params':[], 'type':'account.Authorizations'}, {'id':-545786948, 'method':'account.resetAuthorization', 'params':[{'name':'hash', 'type':'long'}], 'type':'Bool'}, {'id':1418342645, 'method':'account.getPassword', 'params':[], 'type':'account.Password'}, {'id':-1663767815, 'method':'account.getPasswordSettings', 'params':[{'name':'password', 'type':'InputCheckPasswordSRP'}], 'type':'account.PasswordSettings'}, {'id':-1516564433, 'method':'account.updatePasswordSettings', 'params':[{'name':'password', 'type':'InputCheckPasswordSRP'}, {'name':'new_settings', 'type':'account.PasswordInputSettings'}], 'type':'Bool'}, {'id':-779399914, 'method':'auth.checkPassword', 'params':[{'name':'password', 'type':'InputCheckPasswordSRP'}], 'type':'auth.Authorization'}, {'id':-661144474, 'method':'auth.requestPasswordRecovery', 'params':[], 'type':'auth.PasswordRecovery'}, {'id':923364464, 'method':'auth.recoverPassword', 'params':[{'name':'flags', 'type':'#'}, {'name':'code', 'type':'string'}, {'name':'new_settings', 'type':'flags.0?account.PasswordInputSettings'}], 'type':'auth.Authorization'}, {'id':-1080796745, 'method':'invokeWithoutUpdates', 'params':[{'name':'query', 'type':'!X'}], 'type':'X'}, {'id':-1607670315, 'method':'messages.exportChatInvite', 'params':[{'name':'flags', 'type':'#'}, {'name':'legacy_revoke_permanent', 'type':'flags.2?true'}, {'name':'request_needed', 'type':'flags.3?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'expire_date', 'type':'flags.0?int'}, {'name':'usage_limit', 'type':'flags.1?int'}, {'name':'title', 'type':'flags.4?string'}], 'type':'ExportedChatInvite'}, {'id':1051570619, 'method':'messages.checkChatInvite', 'params':[{'name':'hash', 'type':'string'}], 'type':'ChatInvite'}, {'id':1817183516, 'method':'messages.importChatInvite', 'params':[{'name':'hash', 'type':'string'}], 'type':'Updates'}, {'id':-928977804, 'method':'messages.getStickerSet', 'params':[{'name':'stickerset', 'type':'InputStickerSet'}, {'name':'hash', 'type':'int'}], 'type':'messages.StickerSet'}, {'id':-946871200, 'method':'messages.installStickerSet', 'params':[{'name':'stickerset', 'type':'InputStickerSet'}, {'name':'archived', 'type':'Bool'}], 'type':'messages.StickerSetInstallResult'}, {'id':-110209570, 'method':'messages.uninstallStickerSet', 'params':[{'name':'stickerset', 'type':'InputStickerSet'}], 'type':'Bool'}, {'id':-421563528, 'method':'messages.startBot', 'params':[{'name':'bot', 'type':'InputUser'}, {'name':'peer', 'type':'InputPeer'}, {'name':'random_id', 'type':'long'}, {'name':'start_param', 'type':'string'}], 'type':'Updates'}, {'id':-1877938321, 'method':'help.getAppChangelog', 'params':[{'name':'prev_app_version', 'type':'string'}], 'type':'Updates'}, {'id':1468322785, 'method':'messages.getMessagesViews', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'Vector<int>'}, {'name':'increment', 'type':'Bool'}], 'type':'messages.MessageViews'}, {'id':-871347913, 'method':'channels.readHistory', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'max_id', 'type':'int'}], 'type':'Bool'}, {'id':-2067661490, 'method':'channels.deleteMessages', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'id', 'type':'Vector<int>'}], 'type':'messages.AffectedMessages'}, {'id':-196443371, 'method':'channels.reportSpam', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'participant', 'type':'InputPeer'}, {'name':'id', 'type':'Vector<int>'}], 'type':'Bool'}, {'id':-1383294429, 'method':'channels.getMessages', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'id', 'type':'Vector<InputMessage>'}], 'type':'messages.Messages'}, {'id':2010044880, 'method':'channels.getParticipants', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'filter', 'type':'ChannelParticipantsFilter'}, {'name':'offset', 'type':'int'}, {'name':'limit', 'type':'int'}, {'name':'hash', 'type':'long'}], 'type':'channels.ChannelParticipants'}, {'id':-1599378234, 'method':'channels.getParticipant', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'participant', 'type':'InputPeer'}], 'type':'channels.ChannelParticipant'}, {'id':176122811, 'method':'channels.getChannels', 'params':[{'name':'id', 'type':'Vector<InputChannel>'}], 'type':'messages.Chats'}, {'id':141781513, 'method':'channels.getFullChannel', 'params':[{'name':'channel', 'type':'InputChannel'}], 'type':'messages.ChatFull'}, {'id':1029681423, 'method':'channels.createChannel', 'params':[{'name':'flags', 'type':'#'}, {'name':'broadcast', 'type':'flags.0?true'}, {'name':'megagroup', 'type':'flags.1?true'}, {'name':'for_import', 'type':'flags.3?true'}, {'name':'title', 'type':'string'}, {'name':'about', 'type':'string'}, {'name':'geo_point', 'type':'flags.2?InputGeoPoint'}, {'name':'address', 'type':'flags.2?string'}], 'type':'Updates'}, {'id':-751007486, 'method':'channels.editAdmin', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'user_id', 'type':'InputUser'}, {'name':'admin_rights', 'type':'ChatAdminRights'}, {'name':'rank', 'type':'string'}], 'type':'Updates'}, {'id':1450044624, 'method':'channels.editTitle', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'title', 'type':'string'}], 'type':'Updates'}, {'id':-248621111, 'method':'channels.editPhoto', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'photo', 'type':'InputChatPhoto'}], 'type':'Updates'}, {'id':283557164, 'method':'channels.checkUsername', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'username', 'type':'string'}], 'type':'Bool'}, {'id':890549214, 'method':'channels.updateUsername', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'username', 'type':'string'}], 'type':'Bool'}, {'id':615851205, 'method':'channels.joinChannel', 'params':[{'name':'channel', 'type':'InputChannel'}], 'type':'Updates'}, {'id':-130635115, 'method':'channels.leaveChannel', 'params':[{'name':'channel', 'type':'InputChannel'}], 'type':'Updates'}, {'id':429865580, 'method':'channels.inviteToChannel', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'users', 'type':'Vector<InputUser>'}], 'type':'Updates'}, {'id':-1072619549, 'method':'channels.deleteChannel', 'params':[{'name':'channel', 'type':'InputChannel'}], 'type':'Updates'}, {'id':51854712, 'method':'updates.getChannelDifference', 'params':[{'name':'flags', 'type':'#'}, {'name':'force', 'type':'flags.0?true'}, {'name':'channel', 'type':'InputChannel'}, {'name':'filter', 'type':'ChannelMessagesFilter'}, {'name':'pts', 'type':'int'}, {'name':'limit', 'type':'int'}], 'type':'updates.ChannelDifference'}, {'id':-1470377534, 'method':'messages.editChatAdmin', 'params':[{'name':'chat_id', 'type':'long'}, {'name':'user_id', 'type':'InputUser'}, {'name':'is_admin', 'type':'Bool'}], 'type':'Bool'}, {'id':-1568189671, 'method':'messages.migrateChat', 'params':[{'name':'chat_id', 'type':'long'}], 'type':'Updates'}, {'id':1271290010, 'method':'messages.searchGlobal', 'params':[{'name':'flags', 'type':'#'}, {'name':'folder_id', 'type':'flags.0?int'}, {'name':'q', 'type':'string'}, {'name':'filter', 'type':'MessagesFilter'}, {'name':'min_date', 'type':'int'}, {'name':'max_date', 'type':'int'}, {'name':'offset_rate', 'type':'int'}, {'name':'offset_peer', 'type':'InputPeer'}, {'name':'offset_id', 'type':'int'}, {'name':'limit', 'type':'int'}], 'type':'messages.Messages'}, {'id':2016638777, 'method':'messages.reorderStickerSets', 'params':[{'name':'flags', 'type':'#'}, {'name':'masks', 'type':'flags.0?true'}, {'name':'emojis', 'type':'flags.1?true'}, {'name':'order', 'type':'Vector<long>'}], 'type':'Bool'}, {'id':-1309538785, 'method':'messages.getDocumentByHash', 'params':[{'name':'sha256', 'type':'bytes'}, {'name':'size', 'type':'long'}, {'name':'mime_type', 'type':'string'}], 'type':'Document'}, {'id':1559270965, 'method':'messages.getSavedGifs', 'params':[{'name':'hash', 'type':'long'}], 'type':'messages.SavedGifs'}, {'id':846868683, 'method':'messages.saveGif', 'params':[{'name':'id', 'type':'InputDocument'}, {'name':'unsave', 'type':'Bool'}], 'type':'Bool'}, {'id':1364105629, 'method':'messages.getInlineBotResults', 'params':[{'name':'flags', 'type':'#'}, {'name':'bot', 'type':'InputUser'}, {'name':'peer', 'type':'InputPeer'}, {'name':'geo_point', 'type':'flags.0?InputGeoPoint'}, {'name':'query', 'type':'string'}, {'name':'offset', 'type':'string'}], 'type':'messages.BotResults'}, {'id':-346119674, 'method':'messages.setInlineBotResults', 'params':[{'name':'flags', 'type':'#'}, {'name':'gallery', 'type':'flags.0?true'}, {'name':'private', 'type':'flags.1?true'}, {'name':'query_id', 'type':'long'}, {'name':'results', 'type':'Vector<InputBotInlineResult>'}, {'name':'cache_time', 'type':'int'}, {'name':'next_offset', 'type':'flags.2?string'}, {'name':'switch_pm', 'type':'flags.3?InlineBotSwitchPM'}], 'type':'Bool'}, {'id':2057376407, 'method':'messages.sendInlineBotResult', 'params':[{'name':'flags', 'type':'#'}, {'name':'silent', 'type':'flags.5?true'}, {'name':'background', 'type':'flags.6?true'}, {'name':'clear_draft', 'type':'flags.7?true'}, {'name':'hide_via', 'type':'flags.11?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'reply_to_msg_id', 'type':'flags.0?int'}, {'name':'random_id', 'type':'long'}, {'name':'query_id', 'type':'long'}, {'name':'id', 'type':'string'}, {'name':'schedule_date', 'type':'flags.10?int'}, {'name':'send_as', 'type':'flags.13?InputPeer'}], 'type':'Updates'}, {'id':-432034325, 'method':'channels.exportMessageLink', 'params':[{'name':'flags', 'type':'#'}, {'name':'grouped', 'type':'flags.0?true'}, {'name':'thread', 'type':'flags.1?true'}, {'name':'channel', 'type':'InputChannel'}, {'name':'id', 'type':'int'}], 'type':'ExportedMessageLink'}, {'id':527021574, 'method':'channels.toggleSignatures', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'enabled', 'type':'Bool'}], 'type':'Updates'}, {'id':1056025023, 'method':'auth.resendCode', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'phone_code_hash', 'type':'string'}], 'type':'auth.SentCode'}, {'id':520357240, 'method':'auth.cancelCode', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'phone_code_hash', 'type':'string'}], 'type':'Bool'}, {'id':-39416522, 'method':'messages.getMessageEditData', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'int'}], 'type':'messages.MessageEditData'}, {'id':1224152952, 'method':'messages.editMessage', 'params':[{'name':'flags', 'type':'#'}, {'name':'no_webpage', 'type':'flags.1?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'int'}, {'name':'message', 'type':'flags.11?string'}, {'name':'media', 'type':'flags.14?InputMedia'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}, {'name':'entities', 'type':'flags.3?Vector<MessageEntity>'}, {'name':'schedule_date', 'type':'flags.15?int'}], 'type':'Updates'}, {'id':-2091549254, 'method':'messages.editInlineBotMessage', 'params':[{'name':'flags', 'type':'#'}, {'name':'no_webpage', 'type':'flags.1?true'}, {'name':'id', 'type':'InputBotInlineMessageID'}, {'name':'message', 'type':'flags.11?string'}, {'name':'media', 'type':'flags.14?InputMedia'}, {'name':'reply_markup', 'type':'flags.2?ReplyMarkup'}, {'name':'entities', 'type':'flags.3?Vector<MessageEntity>'}], 'type':'Bool'}, {'id':-1824339449, 'method':'messages.getBotCallbackAnswer', 'params':[{'name':'flags', 'type':'#'}, {'name':'game', 'type':'flags.1?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}, {'name':'data', 'type':'flags.0?bytes'}, {'name':'password', 'type':'flags.2?InputCheckPasswordSRP'}], 'type':'messages.BotCallbackAnswer'}, {'id':-712043766, 'method':'messages.setBotCallbackAnswer', 'params':[{'name':'flags', 'type':'#'}, {'name':'alert', 'type':'flags.1?true'}, {'name':'query_id', 'type':'long'}, {'name':'message', 'type':'flags.0?string'}, {'name':'url', 'type':'flags.2?string'}, {'name':'cache_time', 'type':'int'}], 'type':'Bool'}, {'id':-1758168906, 'method':'contacts.getTopPeers', 'params':[{'name':'flags', 'type':'#'}, {'name':'correspondents', 'type':'flags.0?true'}, {'name':'bots_pm', 'type':'flags.1?true'}, {'name':'bots_inline', 'type':'flags.2?true'}, {'name':'phone_calls', 'type':'flags.3?true'}, {'name':'forward_users', 'type':'flags.4?true'}, {'name':'forward_chats', 'type':'flags.5?true'}, {'name':'groups', 'type':'flags.10?true'}, {'name':'channels', 'type':'flags.15?true'}, {'name':'offset', 'type':'int'}, {'name':'limit', 'type':'int'}, {'name':'hash', 'type':'long'}], 'type':'contacts.TopPeers'}, {'id':451113900, 'method':'contacts.resetTopPeerRating', 'params':[{'name':'category', 'type':'TopPeerCategory'}, {'name':'peer', 'type':'InputPeer'}], 'type':'Bool'}, {'id':-462373635, 'method':'messages.getPeerDialogs', 'params':[{'name':'peers', 'type':'Vector<InputDialogPeer>'}], 'type':'messages.PeerDialogs'}, {'id':-1137057461, 'method':'messages.saveDraft', 'params':[{'name':'flags', 'type':'#'}, {'name':'no_webpage', 'type':'flags.1?true'}, {'name':'reply_to_msg_id', 'type':'flags.0?int'}, {'name':'peer', 'type':'InputPeer'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'flags.3?Vector<MessageEntity>'}], 'type':'Bool'}, {'id':1782549861, 'method':'messages.getAllDrafts', 'params':[], 'type':'Updates'}, {'id':1685588756, 'method':'messages.getFeaturedStickers', 'params':[{'name':'hash', 'type':'long'}], 'type':'messages.FeaturedStickers'}, {'id':1527873830, 'method':'messages.readFeaturedStickers', 'params':[{'name':'id', 'type':'Vector<long>'}], 'type':'Bool'}, {'id':-1649852357, 'method':'messages.getRecentStickers', 'params':[{'name':'flags', 'type':'#'}, {'name':'attached', 'type':'flags.0?true'}, {'name':'hash', 'type':'long'}], 'type':'messages.RecentStickers'}, {'id':958863608, 'method':'messages.saveRecentSticker', 'params':[{'name':'flags', 'type':'#'}, {'name':'attached', 'type':'flags.0?true'}, {'name':'id', 'type':'InputDocument'}, {'name':'unsave', 'type':'Bool'}], 'type':'Bool'}, {'id':-1986437075, 'method':'messages.clearRecentStickers', 'params':[{'name':'flags', 'type':'#'}, {'name':'attached', 'type':'flags.0?true'}], 'type':'Bool'}, {'id':1475442322, 'method':'messages.getArchivedStickers', 'params':[{'name':'flags', 'type':'#'}, {'name':'masks', 'type':'flags.0?true'}, {'name':'emojis', 'type':'flags.1?true'}, {'name':'offset_id', 'type':'long'}, {'name':'limit', 'type':'int'}], 'type':'messages.ArchivedStickers'}, {'id':457157256, 'method':'account.sendConfirmPhoneCode', 'params':[{'name':'hash', 'type':'string'}, {'name':'settings', 'type':'CodeSettings'}], 'type':'auth.SentCode'}, {'id':1596029123, 'method':'account.confirmPhone', 'params':[{'name':'phone_code_hash', 'type':'string'}, {'name':'phone_code', 'type':'string'}], 'type':'Bool'}, {'id':-122669393, 'method':'channels.getAdminedPublicChannels', 'params':[{'name':'flags', 'type':'#'}, {'name':'by_location', 'type':'flags.0?true'}, {'name':'check_limit', 'type':'flags.1?true'}], 'type':'messages.Chats'}, {'id':1678738104, 'method':'messages.getMaskStickers', 'params':[{'name':'hash', 'type':'long'}], 'type':'messages.AllStickers'}, {'id':-866424884, 'method':'messages.getAttachedStickers', 'params':[{'name':'media', 'type':'InputStickeredMedia'}], 'type':'Vector<StickerSetCovered>'}, {'id':-1907842680, 'method':'auth.dropTempAuthKeys', 'params':[{'name':'except_auth_keys', 'type':'Vector<long>'}], 'type':'Bool'}, {'id':-1896289088, 'method':'messages.setGameScore', 'params':[{'name':'flags', 'type':'#'}, {'name':'edit_message', 'type':'flags.0?true'}, {'name':'force', 'type':'flags.1?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'int'}, {'name':'user_id', 'type':'InputUser'}, {'name':'score', 'type':'int'}], 'type':'Updates'}, {'id':363700068, 'method':'messages.setInlineGameScore', 'params':[{'name':'flags', 'type':'#'}, {'name':'edit_message', 'type':'flags.0?true'}, {'name':'force', 'type':'flags.1?true'}, {'name':'id', 'type':'InputBotInlineMessageID'}, {'name':'user_id', 'type':'InputUser'}, {'name':'score', 'type':'int'}], 'type':'Bool'}, {'id':-400399203, 'method':'messages.getGameHighScores', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'int'}, {'name':'user_id', 'type':'InputUser'}], 'type':'messages.HighScores'}, {'id':258170395, 'method':'messages.getInlineGameHighScores', 'params':[{'name':'id', 'type':'InputBotInlineMessageID'}, {'name':'user_id', 'type':'InputUser'}], 'type':'messages.HighScores'}, {'id':-468934396, 'method':'messages.getCommonChats', 'params':[{'name':'user_id', 'type':'InputUser'}, {'name':'max_id', 'type':'long'}, {'name':'limit', 'type':'int'}], 'type':'messages.Chats'}, {'id':-2023787330, 'method':'messages.getAllChats', 'params':[{'name':'except_ids', 'type':'Vector<long>'}], 'type':'messages.Chats'}, {'id':-333262899, 'method':'help.setBotUpdatesStatus', 'params':[{'name':'pending_updates_count', 'type':'int'}, {'name':'message', 'type':'string'}], 'type':'Bool'}, {'id':852135825, 'method':'messages.getWebPage', 'params':[{'name':'url', 'type':'string'}, {'name':'hash', 'type':'int'}], 'type':'WebPage'}, {'id':-1489903017, 'method':'messages.toggleDialogPin', 'params':[{'name':'flags', 'type':'#'}, {'name':'pinned', 'type':'flags.0?true'}, {'name':'peer', 'type':'InputDialogPeer'}], 'type':'Bool'}, {'id':991616823, 'method':'messages.reorderPinnedDialogs', 'params':[{'name':'flags', 'type':'#'}, {'name':'force', 'type':'flags.0?true'}, {'name':'folder_id', 'type':'int'}, {'name':'order', 'type':'Vector<InputDialogPeer>'}], 'type':'Bool'}, {'id':-692498958, 'method':'messages.getPinnedDialogs', 'params':[{'name':'folder_id', 'type':'int'}], 'type':'messages.PeerDialogs'}, {'id':-1440257555, 'method':'bots.sendCustomRequest', 'params':[{'name':'custom_method', 'type':'string'}, {'name':'params', 'type':'DataJSON'}], 'type':'DataJSON'}, {'id':-434028723, 'method':'bots.answerWebhookJSONQuery', 'params':[{'name':'query_id', 'type':'long'}, {'name':'data', 'type':'DataJSON'}], 'type':'Bool'}, {'id':619086221, 'method':'upload.getWebFile', 'params':[{'name':'location', 'type':'InputWebFileLocation'}, {'name':'offset', 'type':'int'}, {'name':'limit', 'type':'int'}], 'type':'upload.WebFile'}, {'id':924093883, 'method':'payments.getPaymentForm', 'params':[{'name':'flags', 'type':'#'}, {'name':'invoice', 'type':'InputInvoice'}, {'name':'theme_params', 'type':'flags.0?DataJSON'}], 'type':'payments.PaymentForm'}, {'id':611897804, 'method':'payments.getPaymentReceipt', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}], 'type':'payments.PaymentReceipt'}, {'id':-1228345045, 'method':'payments.validateRequestedInfo', 'params':[{'name':'flags', 'type':'#'}, {'name':'save', 'type':'flags.0?true'}, {'name':'invoice', 'type':'InputInvoice'}, {'name':'info', 'type':'PaymentRequestedInfo'}], 'type':'payments.ValidatedRequestedInfo'}, {'id':755192367, 'method':'payments.sendPaymentForm', 'params':[{'name':'flags', 'type':'#'}, {'name':'form_id', 'type':'long'}, {'name':'invoice', 'type':'InputInvoice'}, {'name':'requested_info_id', 'type':'flags.0?string'}, {'name':'shipping_option_id', 'type':'flags.1?string'}, {'name':'credentials', 'type':'InputPaymentCredentials'}, {'name':'tip_amount', 'type':'flags.2?long'}], 'type':'payments.PaymentResult'}, {'id':1151208273, 'method':'account.getTmpPassword', 'params':[{'name':'password', 'type':'InputCheckPasswordSRP'}, {'name':'period', 'type':'int'}], 'type':'account.TmpPassword'}, {'id':578650699, 'method':'payments.getSavedInfo', 'params':[], 'type':'payments.SavedInfo'}, {'id':-667062079, 'method':'payments.clearSavedInfo', 'params':[{'name':'flags', 'type':'#'}, {'name':'credentials', 'type':'flags.0?true'}, {'name':'info', 'type':'flags.1?true'}], 'type':'Bool'}, {'id':-436833542, 'method':'messages.setBotShippingResults', 'params':[{'name':'flags', 'type':'#'}, {'name':'query_id', 'type':'long'}, {'name':'error', 'type':'flags.0?string'}, {'name':'shipping_options', 'type':'flags.1?Vector<ShippingOption>'}], 'type':'Bool'}, {'id':163765653, 'method':'messages.setBotPrecheckoutResults', 'params':[{'name':'flags', 'type':'#'}, {'name':'success', 'type':'flags.1?true'}, {'name':'query_id', 'type':'long'}, {'name':'error', 'type':'flags.0?string'}], 'type':'Bool'}, {'id':-1876841625, 'method':'stickers.createStickerSet', 'params':[{'name':'flags', 'type':'#'}, {'name':'masks', 'type':'flags.0?true'}, {'name':'animated', 'type':'flags.1?true'}, {'name':'videos', 'type':'flags.4?true'}, {'name':'user_id', 'type':'InputUser'}, {'name':'title', 'type':'string'}, {'name':'short_name', 'type':'string'}, {'name':'thumb', 'type':'flags.2?InputDocument'}, {'name':'stickers', 'type':'Vector<InputStickerSetItem>'}, {'name':'software', 'type':'flags.3?string'}], 'type':'messages.StickerSet'}, {'id':-143257775, 'method':'stickers.removeStickerFromSet', 'params':[{'name':'sticker', 'type':'InputDocument'}], 'type':'messages.StickerSet'}, {'id':-4795190, 'method':'stickers.changeStickerPosition', 'params':[{'name':'sticker', 'type':'InputDocument'}, {'name':'position', 'type':'int'}], 'type':'messages.StickerSet'}, {'id':-2041315650, 'method':'stickers.addStickerToSet', 'params':[{'name':'stickerset', 'type':'InputStickerSet'}, {'name':'sticker', 'type':'InputStickerSetItem'}], 'type':'messages.StickerSet'}, {'id':1369162417, 'method':'messages.uploadMedia', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'media', 'type':'InputMedia'}], 'type':'MessageMedia'}, {'id':1430593449, 'method':'phone.getCallConfig', 'params':[], 'type':'DataJSON'}, {'id':1124046573, 'method':'phone.requestCall', 'params':[{'name':'flags', 'type':'#'}, {'name':'video', 'type':'flags.0?true'}, {'name':'user_id', 'type':'InputUser'}, {'name':'random_id', 'type':'int'}, {'name':'g_a_hash', 'type':'bytes'}, {'name':'protocol', 'type':'PhoneCallProtocol'}], 'type':'phone.PhoneCall'}, {'id':1003664544, 'method':'phone.acceptCall', 'params':[{'name':'peer', 'type':'InputPhoneCall'}, {'name':'g_b', 'type':'bytes'}, {'name':'protocol', 'type':'PhoneCallProtocol'}], 'type':'phone.PhoneCall'}, {'id':788404002, 'method':'phone.confirmCall', 'params':[{'name':'peer', 'type':'InputPhoneCall'}, {'name':'g_a', 'type':'bytes'}, {'name':'key_fingerprint', 'type':'long'}, {'name':'protocol', 'type':'PhoneCallProtocol'}], 'type':'phone.PhoneCall'}, {'id':399855457, 'method':'phone.receivedCall', 'params':[{'name':'peer', 'type':'InputPhoneCall'}], 'type':'Bool'}, {'id':-1295269440, 'method':'phone.discardCall', 'params':[{'name':'flags', 'type':'#'}, {'name':'video', 'type':'flags.0?true'}, {'name':'peer', 'type':'InputPhoneCall'}, {'name':'duration', 'type':'int'}, {'name':'reason', 'type':'PhoneCallDiscardReason'}, {'name':'connection_id', 'type':'long'}], 'type':'Updates'}, {'id':1508562471, 'method':'phone.setCallRating', 'params':[{'name':'flags', 'type':'#'}, {'name':'user_initiative', 'type':'flags.0?true'}, {'name':'peer', 'type':'InputPhoneCall'}, {'name':'rating', 'type':'int'}, {'name':'comment', 'type':'string'}], 'type':'Updates'}, {'id':662363518, 'method':'phone.saveCallDebug', 'params':[{'name':'peer', 'type':'InputPhoneCall'}, {'name':'debug', 'type':'DataJSON'}], 'type':'Bool'}, {'id':962554330, 'method':'upload.getCdnFile', 'params':[{'name':'file_token', 'type':'bytes'}, {'name':'offset', 'type':'long'}, {'name':'limit', 'type':'int'}], 'type':'upload.CdnFile'}, {'id':-1691921240, 'method':'upload.reuploadCdnFile', 'params':[{'name':'file_token', 'type':'bytes'}, {'name':'request_token', 'type':'bytes'}], 'type':'Vector<FileHash>'}, {'id':1375900482, 'method':'help.getCdnConfig', 'params':[], 'type':'CdnConfig'}, {'id':-219008246, 'method':'langpack.getLangPack', 'params':[{'name':'lang_pack', 'type':'string'}, {'name':'lang_code', 'type':'string'}], 'type':'LangPackDifference'}, {'id':-269862909, 'method':'langpack.getStrings', 'params':[{'name':'lang_pack', 'type':'string'}, {'name':'lang_code', 'type':'string'}, {'name':'keys', 'type':'Vector<string>'}], 'type':'Vector<LangPackString>'}, {'id':-845657435, 'method':'langpack.getDifference', 'params':[{'name':'lang_pack', 'type':'string'}, {'name':'lang_code', 'type':'string'}, {'name':'from_version', 'type':'int'}], 'type':'LangPackDifference'}, {'id':1120311183, 'method':'langpack.getLanguages', 'params':[{'name':'lang_pack', 'type':'string'}], 'type':'Vector<LangPackLanguage>'}, {'id':-1763259007, 'method':'channels.editBanned', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'participant', 'type':'InputPeer'}, {'name':'banned_rights', 'type':'ChatBannedRights'}], 'type':'Updates'}, {'id':870184064, 'method':'channels.getAdminLog', 'params':[{'name':'flags', 'type':'#'}, {'name':'channel', 'type':'InputChannel'}, {'name':'q', 'type':'string'}, {'name':'events_filter', 'type':'flags.0?ChannelAdminLogEventsFilter'}, {'name':'admins', 'type':'flags.1?Vector<InputUser>'}, {'name':'max_id', 'type':'long'}, {'name':'min_id', 'type':'long'}, {'name':'limit', 'type':'int'}], 'type':'channels.AdminLogResults'}, {'id':-1847836879, 'method':'upload.getCdnFileHashes', 'params':[{'name':'file_token', 'type':'bytes'}, {'name':'offset', 'type':'long'}], 'type':'Vector<FileHash>'}, {'id':-914493408, 'method':'messages.sendScreenshotNotification', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'reply_to_msg_id', 'type':'int'}, {'name':'random_id', 'type':'long'}], 'type':'Updates'}, {'id':-359881479, 'method':'channels.setStickers', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'stickerset', 'type':'InputStickerSet'}], 'type':'Bool'}, {'id':82946729, 'method':'messages.getFavedStickers', 'params':[{'name':'hash', 'type':'long'}], 'type':'messages.FavedStickers'}, {'id':-1174420133, 'method':'messages.faveSticker', 'params':[{'name':'id', 'type':'InputDocument'}, {'name':'unfave', 'type':'Bool'}], 'type':'Bool'}, {'id':-357180360, 'method':'channels.readMessageContents', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'id', 'type':'Vector<int>'}], 'type':'Bool'}, {'id':-2020263951, 'method':'contacts.resetSaved', 'params':[], 'type':'Bool'}, {'id':1180140658, 'method':'messages.getUnreadMentions', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'offset_id', 'type':'int'}, {'name':'add_offset', 'type':'int'}, {'name':'limit', 'type':'int'}, {'name':'max_id', 'type':'int'}, {'name':'min_id', 'type':'int'}], 'type':'messages.Messages'}, {'id':-1683319225, 'method':'channels.deleteHistory', 'params':[{'name':'flags', 'type':'#'}, {'name':'for_everyone', 'type':'flags.0?true'}, {'name':'channel', 'type':'InputChannel'}, {'name':'max_id', 'type':'int'}], 'type':'Updates'}, {'id':1036054804, 'method':'help.getRecentMeUrls', 'params':[{'name':'referer', 'type':'string'}], 'type':'help.RecentMeUrls'}, {'id':-356796084, 'method':'channels.togglePreHistoryHidden', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'enabled', 'type':'Bool'}], 'type':'Updates'}, {'id':251759059, 'method':'messages.readMentions', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'messages.AffectedHistory'}, {'id':1881817312, 'method':'messages.getRecentLocations', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'limit', 'type':'int'}, {'name':'hash', 'type':'long'}], 'type':'messages.Messages'}, {'id':-134016113, 'method':'messages.sendMultiMedia', 'params':[{'name':'flags', 'type':'#'}, {'name':'silent', 'type':'flags.5?true'}, {'name':'background', 'type':'flags.6?true'}, {'name':'clear_draft', 'type':'flags.7?true'}, {'name':'noforwards', 'type':'flags.14?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'reply_to_msg_id', 'type':'flags.0?int'}, {'name':'multi_media', 'type':'Vector<InputSingleMedia>'}, {'name':'schedule_date', 'type':'flags.10?int'}, {'name':'send_as', 'type':'flags.13?InputPeer'}], 'type':'Updates'}, {'id':1347929239, 'method':'messages.uploadEncryptedFile', 'params':[{'name':'peer', 'type':'InputEncryptedChat'}, {'name':'file', 'type':'InputEncryptedFile'}], 'type':'EncryptedFile'}, {'id':405695855, 'method':'account.getWebAuthorizations', 'params':[], 'type':'account.WebAuthorizations'}, {'id':755087855, 'method':'account.resetWebAuthorization', 'params':[{'name':'hash', 'type':'long'}], 'type':'Bool'}, {'id':1747789204, 'method':'account.resetWebAuthorizations', 'params':[], 'type':'Bool'}, {'id':896555914, 'method':'messages.searchStickerSets', 'params':[{'name':'flags', 'type':'#'}, {'name':'exclude_featured', 'type':'flags.0?true'}, {'name':'q', 'type':'string'}, {'name':'hash', 'type':'long'}], 'type':'messages.FoundStickerSets'}, {'id':-1856595926, 'method':'upload.getFileHashes', 'params':[{'name':'location', 'type':'InputFileLocation'}, {'name':'offset', 'type':'long'}], 'type':'Vector<FileHash>'}, {'id':749019089, 'method':'help.getTermsOfServiceUpdate', 'params':[], 'type':'help.TermsOfServiceUpdate'}, {'id':-294455398, 'method':'help.acceptTermsOfService', 'params':[{'name':'id', 'type':'DataJSON'}], 'type':'Bool'}, {'id':-1299661699, 'method':'account.getAllSecureValues', 'params':[], 'type':'Vector<SecureValue>'}, {'id':1936088002, 'method':'account.getSecureValue', 'params':[{'name':'types', 'type':'Vector<SecureValueType>'}], 'type':'Vector<SecureValue>'}, {'id':-1986010339, 'method':'account.saveSecureValue', 'params':[{'name':'value', 'type':'InputSecureValue'}, {'name':'secure_secret_id', 'type':'long'}], 'type':'SecureValue'}, {'id':-1199522741, 'method':'account.deleteSecureValue', 'params':[{'name':'types', 'type':'Vector<SecureValueType>'}], 'type':'Bool'}, {'id':-1865902923, 'method':'users.setSecureValueErrors', 'params':[{'name':'id', 'type':'InputUser'}, {'name':'errors', 'type':'Vector<SecureValueError>'}], 'type':'Bool'}, {'id':-1456907910, 'method':'account.getAuthorizationForm', 'params':[{'name':'bot_id', 'type':'long'}, {'name':'scope', 'type':'string'}, {'name':'public_key', 'type':'string'}], 'type':'account.AuthorizationForm'}, {'id':-202552205, 'method':'account.acceptAuthorization', 'params':[{'name':'bot_id', 'type':'long'}, {'name':'scope', 'type':'string'}, {'name':'public_key', 'type':'string'}, {'name':'value_hashes', 'type':'Vector<SecureValueHash>'}, {'name':'credentials', 'type':'SecureCredentialsEncrypted'}], 'type':'Bool'}, {'id':-1516022023, 'method':'account.sendVerifyPhoneCode', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'settings', 'type':'CodeSettings'}], 'type':'auth.SentCode'}, {'id':1305716726, 'method':'account.verifyPhone', 'params':[{'name':'phone_number', 'type':'string'}, {'name':'phone_code_hash', 'type':'string'}, {'name':'phone_code', 'type':'string'}], 'type':'Bool'}, {'id':1880182943, 'method':'account.sendVerifyEmailCode', 'params':[{'name':'email', 'type':'string'}], 'type':'account.SentEmailCode'}, {'id':-323339813, 'method':'account.verifyEmail', 'params':[{'name':'email', 'type':'string'}, {'name':'code', 'type':'string'}], 'type':'Bool'}, {'id':1072547679, 'method':'help.getDeepLinkInfo', 'params':[{'name':'path', 'type':'string'}], 'type':'help.DeepLinkInfo'}, {'id':-2098076769, 'method':'contacts.getSaved', 'params':[], 'type':'Vector<SavedContact>'}, {'id':-2092831552, 'method':'channels.getLeftChannels', 'params':[{'name':'offset', 'type':'int'}], 'type':'messages.Chats'}, {'id':-1896617296, 'method':'account.initTakeoutSession', 'params':[{'name':'flags', 'type':'#'}, {'name':'contacts', 'type':'flags.0?true'}, {'name':'message_users', 'type':'flags.1?true'}, {'name':'message_chats', 'type':'flags.2?true'}, {'name':'message_megagroups', 'type':'flags.3?true'}, {'name':'message_channels', 'type':'flags.4?true'}, {'name':'files', 'type':'flags.5?true'}, {'name':'file_max_size', 'type':'flags.5?long'}], 'type':'account.Takeout'}, {'id':489050862, 'method':'account.finishTakeoutSession', 'params':[{'name':'flags', 'type':'#'}, {'name':'success', 'type':'flags.0?true'}], 'type':'Bool'}, {'id':486505992, 'method':'messages.getSplitRanges', 'params':[], 'type':'Vector<MessageRange>'}, {'id':911373810, 'method':'invokeWithMessagesRange', 'params':[{'name':'range', 'type':'MessageRange'}, {'name':'query', 'type':'!X'}], 'type':'X'}, {'id':-1398145746, 'method':'invokeWithTakeout', 'params':[{'name':'takeout_id', 'type':'long'}, {'name':'query', 'type':'!X'}], 'type':'X'}, {'id':-1031349873, 'method':'messages.markDialogUnread', 'params':[{'name':'flags', 'type':'#'}, {'name':'unread', 'type':'flags.0?true'}, {'name':'peer', 'type':'InputDialogPeer'}], 'type':'Bool'}, {'id':585256482, 'method':'messages.getDialogUnreadMarks', 'params':[], 'type':'Vector<DialogPeer>'}, {'id':-2062238246, 'method':'contacts.toggleTopPeers', 'params':[{'name':'enabled', 'type':'Bool'}], 'type':'Bool'}, {'id':2119757468, 'method':'messages.clearAllDrafts', 'params':[], 'type':'Bool'}, {'id':-1735311088, 'method':'help.getAppConfig', 'params':[], 'type':'JSONValue'}, {'id':1862465352, 'method':'help.saveAppLog', 'params':[{'name':'events', 'type':'Vector<InputAppEvent>'}], 'type':'Bool'}, {'id':-966677240, 'method':'help.getPassportConfig', 'params':[{'name':'hash', 'type':'int'}], 'type':'help.PassportConfig'}, {'id':1784243458, 'method':'langpack.getLanguage', 'params':[{'name':'lang_pack', 'type':'string'}, {'name':'lang_code', 'type':'string'}], 'type':'LangPackLanguage'}, {'id':-760547348, 'method':'messages.updatePinnedMessage', 'params':[{'name':'flags', 'type':'#'}, {'name':'silent', 'type':'flags.0?true'}, {'name':'unpin', 'type':'flags.1?true'}, {'name':'pm_oneside', 'type':'flags.2?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'int'}], 'type':'Updates'}, {'id':-1881204448, 'method':'account.confirmPasswordEmail', 'params':[{'name':'code', 'type':'string'}], 'type':'Bool'}, {'id':2055154197, 'method':'account.resendPasswordEmail', 'params':[], 'type':'Bool'}, {'id':-1043606090, 'method':'account.cancelPasswordEmail', 'params':[], 'type':'Bool'}, {'id':-748624084, 'method':'help.getSupportName', 'params':[], 'type':'help.SupportName'}, {'id':59377875, 'method':'help.getUserInfo', 'params':[{'name':'user_id', 'type':'InputUser'}], 'type':'help.UserInfo'}, {'id':1723407216, 'method':'help.editUserInfo', 'params':[{'name':'user_id', 'type':'InputUser'}, {'name':'message', 'type':'string'}, {'name':'entities', 'type':'Vector<MessageEntity>'}], 'type':'help.UserInfo'}, {'id':-1626880216, 'method':'account.getContactSignUpNotification', 'params':[], 'type':'Bool'}, {'id':-806076575, 'method':'account.setContactSignUpNotification', 'params':[{'name':'silent', 'type':'Bool'}], 'type':'Bool'}, {'id':1398240377, 'method':'account.getNotifyExceptions', 'params':[{'name':'flags', 'type':'#'}, {'name':'compare_sound', 'type':'flags.1?true'}, {'name':'peer', 'type':'flags.0?InputNotifyPeer'}], 'type':'Updates'}, {'id':283795844, 'method':'messages.sendVote', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}, {'name':'options', 'type':'Vector<bytes>'}], 'type':'Updates'}, {'id':1941660731, 'method':'messages.getPollResults', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}], 'type':'Updates'}, {'id':1848369232, 'method':'messages.getOnlines', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'ChatOnlines'}, {'id':-554301545, 'method':'messages.editChatAbout', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'about', 'type':'string'}], 'type':'Bool'}, {'id':-1517917375, 'method':'messages.editChatDefaultBannedRights', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'banned_rights', 'type':'ChatBannedRights'}], 'type':'Updates'}, {'id':-57811990, 'method':'account.getWallPaper', 'params':[{'name':'wallpaper', 'type':'InputWallPaper'}], 'type':'WallPaper'}, {'id':-578472351, 'method':'account.uploadWallPaper', 'params':[{'name':'file', 'type':'InputFile'}, {'name':'mime_type', 'type':'string'}, {'name':'settings', 'type':'WallPaperSettings'}], 'type':'WallPaper'}, {'id':1817860919, 'method':'account.saveWallPaper', 'params':[{'name':'wallpaper', 'type':'InputWallPaper'}, {'name':'unsave', 'type':'Bool'}, {'name':'settings', 'type':'WallPaperSettings'}], 'type':'Bool'}, {'id':-18000023, 'method':'account.installWallPaper', 'params':[{'name':'wallpaper', 'type':'InputWallPaper'}, {'name':'settings', 'type':'WallPaperSettings'}], 'type':'Bool'}, {'id':-1153722364, 'method':'account.resetWallPapers', 'params':[], 'type':'Bool'}, {'id':1457130303, 'method':'account.getAutoDownloadSettings', 'params':[], 'type':'account.AutoDownloadSettings'}, {'id':1995661875, 'method':'account.saveAutoDownloadSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'low', 'type':'flags.0?true'}, {'name':'high', 'type':'flags.1?true'}, {'name':'settings', 'type':'AutoDownloadSettings'}], 'type':'Bool'}, {'id':899735650, 'method':'messages.getEmojiKeywords', 'params':[{'name':'lang_code', 'type':'string'}], 'type':'EmojiKeywordsDifference'}, {'id':352892591, 'method':'messages.getEmojiKeywordsDifference', 'params':[{'name':'lang_code', 'type':'string'}, {'name':'from_version', 'type':'int'}], 'type':'EmojiKeywordsDifference'}, {'id':1318675378, 'method':'messages.getEmojiKeywordsLanguages', 'params':[{'name':'lang_codes', 'type':'Vector<string>'}], 'type':'Vector<EmojiLanguage>'}, {'id':-709817306, 'method':'messages.getEmojiURL', 'params':[{'name':'lang_code', 'type':'string'}], 'type':'EmojiURL'}, {'id':1749536939, 'method':'folders.editPeerFolders', 'params':[{'name':'folder_peers', 'type':'Vector<InputFolderPeer>'}], 'type':'Updates'}, {'id':472471681, 'method':'folders.deleteFolder', 'params':[{'name':'folder_id', 'type':'int'}], 'type':'Updates'}, {'id':1932455680, 'method':'messages.getSearchCounters', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'filters', 'type':'Vector<MessagesFilter>'}], 'type':'Vector<messages.SearchCounter>'}, {'id':-170208392, 'method':'channels.getGroupsForDiscussion', 'params':[], 'type':'messages.Chats'}, {'id':1079520178, 'method':'channels.setDiscussionGroup', 'params':[{'name':'broadcast', 'type':'InputChannel'}, {'name':'group', 'type':'InputChannel'}], 'type':'Bool'}, {'id':428848198, 'method':'messages.requestUrlAuth', 'params':[{'name':'flags', 'type':'#'}, {'name':'peer', 'type':'flags.1?InputPeer'}, {'name':'msg_id', 'type':'flags.1?int'}, {'name':'button_id', 'type':'flags.1?int'}, {'name':'url', 'type':'flags.2?string'}], 'type':'UrlAuthResult'}, {'id':-1322487515, 'method':'messages.acceptUrlAuth', 'params':[{'name':'flags', 'type':'#'}, {'name':'write_allowed', 'type':'flags.0?true'}, {'name':'peer', 'type':'flags.1?InputPeer'}, {'name':'msg_id', 'type':'flags.1?int'}, {'name':'button_id', 'type':'flags.1?int'}, {'name':'url', 'type':'flags.2?string'}], 'type':'UrlAuthResult'}, {'id':1336717624, 'method':'messages.hidePeerSettingsBar', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'Bool'}, {'id':-386636848, 'method':'contacts.addContact', 'params':[{'name':'flags', 'type':'#'}, {'name':'add_phone_privacy_exception', 'type':'flags.0?true'}, {'name':'id', 'type':'InputUser'}, {'name':'first_name', 'type':'string'}, {'name':'last_name', 'type':'string'}, {'name':'phone', 'type':'string'}], 'type':'Updates'}, {'id':-130964977, 'method':'contacts.acceptContact', 'params':[{'name':'id', 'type':'InputUser'}], 'type':'Updates'}, {'id':-1892102881, 'method':'channels.editCreator', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'user_id', 'type':'InputUser'}, {'name':'password', 'type':'InputCheckPasswordSRP'}], 'type':'Updates'}, {'id':-750207932, 'method':'contacts.getLocated', 'params':[{'name':'flags', 'type':'#'}, {'name':'background', 'type':'flags.1?true'}, {'name':'geo_point', 'type':'InputGeoPoint'}, {'name':'self_expires', 'type':'flags.0?int'}], 'type':'Updates'}, {'id':1491484525, 'method':'channels.editLocation', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'geo_point', 'type':'InputGeoPoint'}, {'name':'address', 'type':'string'}], 'type':'Bool'}, {'id':-304832784, 'method':'channels.toggleSlowMode', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'seconds', 'type':'int'}], 'type':'Updates'}, {'id':-183077365, 'method':'messages.getScheduledHistory', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'hash', 'type':'long'}], 'type':'messages.Messages'}, {'id':-1111817116, 'method':'messages.getScheduledMessages', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'Vector<int>'}], 'type':'messages.Messages'}, {'id':-1120369398, 'method':'messages.sendScheduledMessages', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'Vector<int>'}], 'type':'Updates'}, {'id':1504586518, 'method':'messages.deleteScheduledMessages', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'Vector<int>'}], 'type':'Updates'}, {'id':473805619, 'method':'account.uploadTheme', 'params':[{'name':'flags', 'type':'#'}, {'name':'file', 'type':'InputFile'}, {'name':'thumb', 'type':'flags.0?InputFile'}, {'name':'file_name', 'type':'string'}, {'name':'mime_type', 'type':'string'}], 'type':'Document'}, {'id':1697530880, 'method':'account.createTheme', 'params':[{'name':'flags', 'type':'#'}, {'name':'slug', 'type':'string'}, {'name':'title', 'type':'string'}, {'name':'document', 'type':'flags.2?InputDocument'}, {'name':'settings', 'type':'flags.3?Vector<InputThemeSettings>'}], 'type':'Theme'}, {'id':737414348, 'method':'account.updateTheme', 'params':[{'name':'flags', 'type':'#'}, {'name':'format', 'type':'string'}, {'name':'theme', 'type':'InputTheme'}, {'name':'slug', 'type':'flags.0?string'}, {'name':'title', 'type':'flags.1?string'}, {'name':'document', 'type':'flags.2?InputDocument'}, {'name':'settings', 'type':'flags.3?Vector<InputThemeSettings>'}], 'type':'Theme'}, {'id':-229175188, 'method':'account.saveTheme', 'params':[{'name':'theme', 'type':'InputTheme'}, {'name':'unsave', 'type':'Bool'}], 'type':'Bool'}, {'id':-953697477, 'method':'account.installTheme', 'params':[{'name':'flags', 'type':'#'}, {'name':'dark', 'type':'flags.0?true'}, {'name':'theme', 'type':'flags.1?InputTheme'}, {'name':'format', 'type':'flags.2?string'}, {'name':'base_theme', 'type':'flags.3?BaseTheme'}], 'type':'Bool'}, {'id':-1919060949, 'method':'account.getTheme', 'params':[{'name':'format', 'type':'string'}, {'name':'theme', 'type':'InputTheme'}, {'name':'document_id', 'type':'long'}], 'type':'Theme'}, {'id':1913054296, 'method':'account.getThemes', 'params':[{'name':'format', 'type':'string'}, {'name':'hash', 'type':'long'}], 'type':'account.Themes'}, {'id':-1210022402, 'method':'auth.exportLoginToken', 'params':[{'name':'api_id', 'type':'int'}, {'name':'api_hash', 'type':'string'}, {'name':'except_ids', 'type':'Vector<long>'}], 'type':'auth.LoginToken'}, {'id':-1783866140, 'method':'auth.importLoginToken', 'params':[{'name':'token', 'type':'bytes'}], 'type':'auth.LoginToken'}, {'id':-392909491, 'method':'auth.acceptLoginToken', 'params':[{'name':'token', 'type':'bytes'}], 'type':'Authorization'}, {'id':-1250643605, 'method':'account.setContentSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'sensitive_enabled', 'type':'flags.0?true'}], 'type':'Bool'}, {'id':-1952756306, 'method':'account.getContentSettings', 'params':[], 'type':'account.ContentSettings'}, {'id':300429806, 'method':'channels.getInactiveChannels', 'params':[], 'type':'messages.InactiveChats'}, {'id':1705865692, 'method':'account.getMultiWallPapers', 'params':[{'name':'wallpapers', 'type':'Vector<InputWallPaper>'}], 'type':'Vector<WallPaper>'}, {'id':-1200736242, 'method':'messages.getPollVotes', 'params':[{'name':'flags', 'type':'#'}, {'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'int'}, {'name':'option', 'type':'flags.0?bytes'}, {'name':'offset', 'type':'flags.1?string'}, {'name':'limit', 'type':'int'}], 'type':'messages.VotesList'}, {'id':-1257951254, 'method':'messages.toggleStickerSets', 'params':[{'name':'flags', 'type':'#'}, {'name':'uninstall', 'type':'flags.0?true'}, {'name':'archive', 'type':'flags.1?true'}, {'name':'unarchive', 'type':'flags.2?true'}, {'name':'stickersets', 'type':'Vector<InputStickerSet>'}], 'type':'Bool'}, {'id':779736953, 'method':'payments.getBankCardData', 'params':[{'name':'number', 'type':'string'}], 'type':'payments.BankCardData'}, {'id':-241247891, 'method':'messages.getDialogFilters', 'params':[], 'type':'Vector<DialogFilter>'}, {'id':-1566780372, 'method':'messages.getSuggestedDialogFilters', 'params':[], 'type':'Vector<DialogFilterSuggested>'}, {'id':450142282, 'method':'messages.updateDialogFilter', 'params':[{'name':'flags', 'type':'#'}, {'name':'id', 'type':'int'}, {'name':'filter', 'type':'flags.0?DialogFilter'}], 'type':'Bool'}, {'id':-983318044, 'method':'messages.updateDialogFiltersOrder', 'params':[{'name':'order', 'type':'Vector<int>'}], 'type':'Bool'}, {'id':-1421720550, 'method':'stats.getBroadcastStats', 'params':[{'name':'flags', 'type':'#'}, {'name':'dark', 'type':'flags.0?true'}, {'name':'channel', 'type':'InputChannel'}], 'type':'stats.BroadcastStats'}, {'id':1646092192, 'method':'stats.loadAsyncGraph', 'params':[{'name':'flags', 'type':'#'}, {'name':'token', 'type':'string'}, {'name':'x', 'type':'flags.0?long'}], 'type':'StatsGraph'}, {'id':-1707717072, 'method':'stickers.setStickerSetThumb', 'params':[{'name':'stickerset', 'type':'InputStickerSet'}, {'name':'thumb', 'type':'InputDocument'}], 'type':'messages.StickerSet'}, {'id':85399130, 'method':'bots.setBotCommands', 'params':[{'name':'scope', 'type':'BotCommandScope'}, {'name':'lang_code', 'type':'string'}, {'name':'commands', 'type':'Vector<BotCommand>'}], 'type':'Bool'}, {'id':2127598753, 'method':'messages.getOldFeaturedStickers', 'params':[{'name':'offset', 'type':'int'}, {'name':'limit', 'type':'int'}, {'name':'hash', 'type':'long'}], 'type':'messages.FeaturedStickers'}, {'id':-1063816159, 'method':'help.getPromoData', 'params':[], 'type':'help.PromoData'}, {'id':505748629, 'method':'help.hidePromoData', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'Bool'}, {'id':-8744061, 'method':'phone.sendSignalingData', 'params':[{'name':'peer', 'type':'InputPhoneCall'}, {'name':'data', 'type':'bytes'}], 'type':'Bool'}, {'id':-589330937, 'method':'stats.getMegagroupStats', 'params':[{'name':'flags', 'type':'#'}, {'name':'dark', 'type':'flags.0?true'}, {'name':'channel', 'type':'InputChannel'}], 'type':'stats.MegagroupStats'}, {'id':-349483786, 'method':'account.getGlobalPrivacySettings', 'params':[], 'type':'GlobalPrivacySettings'}, {'id':517647042, 'method':'account.setGlobalPrivacySettings', 'params':[{'name':'settings', 'type':'GlobalPrivacySettings'}], 'type':'GlobalPrivacySettings'}, {'id':-183649631, 'method':'help.dismissSuggestion', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'suggestion', 'type':'string'}], 'type':'Bool'}, {'id':1935116200, 'method':'help.getCountriesList', 'params':[{'name':'lang_code', 'type':'string'}, {'name':'hash', 'type':'int'}], 'type':'help.CountriesList'}, {'id':584962828, 'method':'messages.getReplies', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}, {'name':'offset_id', 'type':'int'}, {'name':'offset_date', 'type':'int'}, {'name':'add_offset', 'type':'int'}, {'name':'limit', 'type':'int'}, {'name':'max_id', 'type':'int'}, {'name':'min_id', 'type':'int'}, {'name':'hash', 'type':'long'}], 'type':'messages.Messages'}, {'id':1147761405, 'method':'messages.getDiscussionMessage', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}], 'type':'messages.DiscussionMessage'}, {'id':-147740172, 'method':'messages.readDiscussion', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}, {'name':'read_max_id', 'type':'int'}], 'type':'Bool'}, {'id':698914348, 'method':'contacts.blockFromReplies', 'params':[{'name':'flags', 'type':'#'}, {'name':'delete_message', 'type':'flags.0?true'}, {'name':'delete_history', 'type':'flags.1?true'}, {'name':'report_spam', 'type':'flags.2?true'}, {'name':'msg_id', 'type':'int'}], 'type':'Updates'}, {'id':1445996571, 'method':'stats.getMessagePublicForwards', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'msg_id', 'type':'int'}, {'name':'offset_rate', 'type':'int'}, {'name':'offset_peer', 'type':'InputPeer'}, {'name':'offset_id', 'type':'int'}, {'name':'limit', 'type':'int'}], 'type':'messages.Messages'}, {'id':-1226791947, 'method':'stats.getMessageStats', 'params':[{'name':'flags', 'type':'#'}, {'name':'dark', 'type':'flags.0?true'}, {'name':'channel', 'type':'InputChannel'}, {'name':'msg_id', 'type':'int'}], 'type':'stats.MessageStats'}, {'id':-265962357, 'method':'messages.unpinAllMessages', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'messages.AffectedHistory'}, {'id':1221445336, 'method':'phone.createGroupCall', 'params':[{'name':'flags', 'type':'#'}, {'name':'rtmp_stream', 'type':'flags.2?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'random_id', 'type':'int'}, {'name':'title', 'type':'flags.0?string'}, {'name':'schedule_date', 'type':'flags.1?int'}], 'type':'Updates'}, {'id':-1322057861, 'method':'phone.joinGroupCall', 'params':[{'name':'flags', 'type':'#'}, {'name':'muted', 'type':'flags.0?true'}, {'name':'video_stopped', 'type':'flags.2?true'}, {'name':'call', 'type':'InputGroupCall'}, {'name':'join_as', 'type':'InputPeer'}, {'name':'invite_hash', 'type':'flags.1?string'}, {'name':'params', 'type':'DataJSON'}], 'type':'Updates'}, {'id':1342404601, 'method':'phone.leaveGroupCall', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'source', 'type':'int'}], 'type':'Updates'}, {'id':2067345760, 'method':'phone.inviteToGroupCall', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'users', 'type':'Vector<InputUser>'}], 'type':'Updates'}, {'id':2054648117, 'method':'phone.discardGroupCall', 'params':[{'name':'call', 'type':'InputGroupCall'}], 'type':'Updates'}, {'id':1958458429, 'method':'phone.toggleGroupCallSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'reset_invite_hash', 'type':'flags.1?true'}, {'name':'call', 'type':'InputGroupCall'}, {'name':'join_muted', 'type':'flags.0?Bool'}], 'type':'Updates'}, {'id':68699611, 'method':'phone.getGroupCall', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'limit', 'type':'int'}], 'type':'phone.GroupCall'}, {'id':-984033109, 'method':'phone.getGroupParticipants', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'ids', 'type':'Vector<InputPeer>'}, {'name':'sources', 'type':'Vector<int>'}, {'name':'offset', 'type':'string'}, {'name':'limit', 'type':'int'}], 'type':'phone.GroupParticipants'}, {'id':-1248003721, 'method':'phone.checkGroupCall', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'sources', 'type':'Vector<int>'}], 'type':'Vector<int>'}, {'id':1540419152, 'method':'messages.deleteChat', 'params':[{'name':'chat_id', 'type':'long'}], 'type':'Bool'}, {'id':-104078327, 'method':'messages.deletePhoneCallHistory', 'params':[{'name':'flags', 'type':'#'}, {'name':'revoke', 'type':'flags.0?true'}], 'type':'messages.AffectedFoundMessages'}, {'id':1140726259, 'method':'messages.checkHistoryImport', 'params':[{'name':'import_head', 'type':'string'}], 'type':'messages.HistoryImportParsed'}, {'id':873008187, 'method':'messages.initHistoryImport', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'file', 'type':'InputFile'}, {'name':'media_count', 'type':'int'}], 'type':'messages.HistoryImport'}, {'id':713433234, 'method':'messages.uploadImportedMedia', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'import_id', 'type':'long'}, {'name':'file_name', 'type':'string'}, {'name':'media', 'type':'InputMedia'}], 'type':'MessageMedia'}, {'id':-1271008444, 'method':'messages.startHistoryImport', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'import_id', 'type':'long'}], 'type':'Bool'}, {'id':-1565154314, 'method':'messages.getExportedChatInvites', 'params':[{'name':'flags', 'type':'#'}, {'name':'revoked', 'type':'flags.3?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'admin_id', 'type':'InputUser'}, {'name':'offset_date', 'type':'flags.2?int'}, {'name':'offset_link', 'type':'flags.2?string'}, {'name':'limit', 'type':'int'}], 'type':'messages.ExportedChatInvites'}, {'id':1937010524, 'method':'messages.getExportedChatInvite', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'link', 'type':'string'}], 'type':'messages.ExportedChatInvite'}, {'id':-1110823051, 'method':'messages.editExportedChatInvite', 'params':[{'name':'flags', 'type':'#'}, {'name':'revoked', 'type':'flags.2?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'link', 'type':'string'}, {'name':'expire_date', 'type':'flags.0?int'}, {'name':'usage_limit', 'type':'flags.1?int'}, {'name':'request_needed', 'type':'flags.3?Bool'}, {'name':'title', 'type':'flags.4?string'}], 'type':'messages.ExportedChatInvite'}, {'id':1452833749, 'method':'messages.deleteRevokedExportedChatInvites', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'admin_id', 'type':'InputUser'}], 'type':'Bool'}, {'id':-731601877, 'method':'messages.deleteExportedChatInvite', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'link', 'type':'string'}], 'type':'Bool'}, {'id':958457583, 'method':'messages.getAdminsWithInvites', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'messages.ChatAdminsWithInvites'}, {'id':-553329330, 'method':'messages.getChatInviteImporters', 'params':[{'name':'flags', 'type':'#'}, {'name':'requested', 'type':'flags.0?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'link', 'type':'flags.1?string'}, {'name':'q', 'type':'flags.2?string'}, {'name':'offset_date', 'type':'int'}, {'name':'offset_user', 'type':'InputUser'}, {'name':'limit', 'type':'int'}], 'type':'messages.ChatInviteImporters'}, {'id':-1207017500, 'method':'messages.setHistoryTTL', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'period', 'type':'int'}], 'type':'Updates'}, {'id':-91437323, 'method':'account.reportProfilePhoto', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'photo_id', 'type':'InputPhoto'}, {'name':'reason', 'type':'ReportReason'}, {'name':'message', 'type':'string'}], 'type':'Bool'}, {'id':187239529, 'method':'channels.convertToGigagroup', 'params':[{'name':'channel', 'type':'InputChannel'}], 'type':'Updates'}, {'id':1573261059, 'method':'messages.checkHistoryImportPeer', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'messages.CheckedHistoryImportPeer'}, {'id':-248985848, 'method':'phone.toggleGroupCallRecord', 'params':[{'name':'flags', 'type':'#'}, {'name':'start', 'type':'flags.0?true'}, {'name':'video', 'type':'flags.2?true'}, {'name':'call', 'type':'InputGroupCall'}, {'name':'title', 'type':'flags.1?string'}, {'name':'video_portrait', 'type':'flags.2?Bool'}], 'type':'Updates'}, {'id':-1524155713, 'method':'phone.editGroupCallParticipant', 'params':[{'name':'flags', 'type':'#'}, {'name':'call', 'type':'InputGroupCall'}, {'name':'participant', 'type':'InputPeer'}, {'name':'muted', 'type':'flags.0?Bool'}, {'name':'volume', 'type':'flags.1?int'}, {'name':'raise_hand', 'type':'flags.2?Bool'}, {'name':'video_stopped', 'type':'flags.3?Bool'}, {'name':'video_paused', 'type':'flags.4?Bool'}, {'name':'presentation_paused', 'type':'flags.5?Bool'}], 'type':'Updates'}, {'id':480685066, 'method':'phone.editGroupCallTitle', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'title', 'type':'string'}], 'type':'Updates'}, {'id':-277077702, 'method':'phone.getGroupCallJoinAs', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'phone.JoinAsPeers'}, {'id':-425040769, 'method':'phone.exportGroupCallInvite', 'params':[{'name':'flags', 'type':'#'}, {'name':'can_self_unmute', 'type':'flags.0?true'}, {'name':'call', 'type':'InputGroupCall'}], 'type':'phone.ExportedGroupCallInvite'}, {'id':563885286, 'method':'phone.toggleGroupCallStartSubscription', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'subscribed', 'type':'Bool'}], 'type':'Updates'}, {'id':1451287362, 'method':'phone.startScheduledGroupCall', 'params':[{'name':'call', 'type':'InputGroupCall'}], 'type':'Updates'}, {'id':1465786252, 'method':'phone.saveDefaultGroupCallJoinAs', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'join_as', 'type':'InputPeer'}], 'type':'Bool'}, {'id':-873829436, 'method':'phone.joinGroupCallPresentation', 'params':[{'name':'call', 'type':'InputGroupCall'}, {'name':'params', 'type':'DataJSON'}], 'type':'Updates'}, {'id':475058500, 'method':'phone.leaveGroupCallPresentation', 'params':[{'name':'call', 'type':'InputGroupCall'}], 'type':'Updates'}, {'id':676017721, 'method':'stickers.checkShortName', 'params':[{'name':'short_name', 'type':'string'}], 'type':'Bool'}, {'id':1303364867, 'method':'stickers.suggestShortName', 'params':[{'name':'title', 'type':'string'}], 'type':'stickers.SuggestedShortName'}, {'id':1032708345, 'method':'bots.resetBotCommands', 'params':[{'name':'scope', 'type':'BotCommandScope'}, {'name':'lang_code', 'type':'string'}], 'type':'Bool'}, {'id':-481554986, 'method':'bots.getBotCommands', 'params':[{'name':'scope', 'type':'BotCommandScope'}, {'name':'lang_code', 'type':'string'}], 'type':'Vector<BotCommand>'}, {'id':-1828139493, 'method':'account.resetPassword', 'params':[], 'type':'account.ResetPasswordResult'}, {'id':1284770294, 'method':'account.declinePasswordReset', 'params':[], 'type':'Bool'}, {'id':221691769, 'method':'auth.checkRecoveryPassword', 'params':[{'name':'code', 'type':'string'}], 'type':'Bool'}, {'id':-700916087, 'method':'account.getChatThemes', 'params':[{'name':'hash', 'type':'long'}], 'type':'account.Themes'}, {'id':-432283329, 'method':'messages.setChatTheme', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'emoticon', 'type':'string'}], 'type':'Updates'}, {'id':-1095836780, 'method':'channels.viewSponsoredMessage', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'random_id', 'type':'bytes'}], 'type':'Bool'}, {'id':-333377601, 'method':'channels.getSponsoredMessages', 'params':[{'name':'channel', 'type':'InputChannel'}], 'type':'messages.SponsoredMessages'}, {'id':745510839, 'method':'messages.getMessageReadParticipants', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}], 'type':'Vector<long>'}, {'id':1240514025, 'method':'messages.getSearchResultsCalendar', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'filter', 'type':'MessagesFilter'}, {'name':'offset_id', 'type':'int'}, {'name':'offset_date', 'type':'int'}], 'type':'messages.SearchResultsCalendar'}, {'id':1855292323, 'method':'messages.getSearchResultsPositions', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'filter', 'type':'MessagesFilter'}, {'name':'offset_id', 'type':'int'}, {'name':'limit', 'type':'int'}], 'type':'messages.SearchResultsPositions'}, {'id':2145904661, 'method':'messages.hideChatJoinRequest', 'params':[{'name':'flags', 'type':'#'}, {'name':'approved', 'type':'flags.0?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'user_id', 'type':'InputUser'}], 'type':'Updates'}, {'id':-528091926, 'method':'messages.hideAllChatJoinRequests', 'params':[{'name':'flags', 'type':'#'}, {'name':'approved', 'type':'flags.0?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'link', 'type':'flags.1?string'}], 'type':'Updates'}, {'id':-1323389022, 'method':'messages.toggleNoForwards', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'enabled', 'type':'Bool'}], 'type':'Updates'}, {'id':-855777386, 'method':'messages.saveDefaultSendAs', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'send_as', 'type':'InputPeer'}], 'type':'Bool'}, {'id':231174382, 'method':'channels.getSendAs', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'channels.SendAsPeers'}, {'id':-1081501024, 'method':'account.setAuthorizationTTL', 'params':[{'name':'authorization_ttl_days', 'type':'int'}], 'type':'Bool'}, {'id':1089766498, 'method':'account.changeAuthorizationSettings', 'params':[{'name':'flags', 'type':'#'}, {'name':'hash', 'type':'long'}, {'name':'encrypted_requests_disabled', 'type':'flags.0?Bool'}, {'name':'call_requests_disabled', 'type':'flags.1?Bool'}], 'type':'Bool'}, {'id':913655003, 'method':'channels.deleteParticipantHistory', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'participant', 'type':'InputPeer'}], 'type':'messages.AffectedHistory'}, {'id':627641572, 'method':'messages.sendReaction', 'params':[{'name':'flags', 'type':'#'}, {'name':'big', 'type':'flags.1?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}, {'name':'reaction', 'type':'flags.0?string'}], 'type':'Updates'}, {'id':-1950707482, 'method':'messages.getMessagesReactions', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'Vector<int>'}], 'type':'Updates'}, {'id':-521245833, 'method':'messages.getMessageReactionsList', 'params':[{'name':'flags', 'type':'#'}, {'name':'peer', 'type':'InputPeer'}, {'name':'id', 'type':'int'}, {'name':'reaction', 'type':'flags.0?string'}, {'name':'offset', 'type':'flags.1?string'}, {'name':'limit', 'type':'int'}], 'type':'messages.MessageReactionsList'}, {'id':335875750, 'method':'messages.setChatAvailableReactions', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'available_reactions', 'type':'Vector<string>'}], 'type':'Updates'}, {'id':417243308, 'method':'messages.getAvailableReactions', 'params':[{'name':'hash', 'type':'int'}], 'type':'messages.AvailableReactions'}, {'id':-647969580, 'method':'messages.setDefaultReaction', 'params':[{'name':'reaction', 'type':'string'}], 'type':'Bool'}, {'id':617508334, 'method':'messages.translateText', 'params':[{'name':'flags', 'type':'#'}, {'name':'peer', 'type':'flags.0?InputPeer'}, {'name':'msg_id', 'type':'flags.0?int'}, {'name':'text', 'type':'flags.1?string'}, {'name':'from_lang', 'type':'flags.2?string'}, {'name':'to_lang', 'type':'string'}], 'type':'messages.TranslatedText'}, {'id':-396644838, 'method':'messages.getUnreadReactions', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'offset_id', 'type':'int'}, {'name':'add_offset', 'type':'int'}, {'name':'limit', 'type':'int'}, {'name':'max_id', 'type':'int'}, {'name':'min_id', 'type':'int'}], 'type':'messages.Messages'}, {'id':-2099097129, 'method':'messages.readReactions', 'params':[{'name':'peer', 'type':'InputPeer'}], 'type':'messages.AffectedHistory'}, {'id':-1963375804, 'method':'contacts.resolvePhone', 'params':[{'name':'phone', 'type':'string'}], 'type':'contacts.ResolvedPeer'}, {'id':447879488, 'method':'phone.getGroupCallStreamChannels', 'params':[{'name':'call', 'type':'InputGroupCall'}], 'type':'phone.GroupCallStreamChannels'}, {'id':-558650433, 'method':'phone.getGroupCallStreamRtmpUrl', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'revoke', 'type':'Bool'}], 'type':'phone.GroupCallStreamRtmpUrl'}, {'id':276705696, 'method':'messages.searchSentMedia', 'params':[{'name':'q', 'type':'string'}, {'name':'filter', 'type':'MessagesFilter'}, {'name':'limit', 'type':'int'}], 'type':'messages.Messages'}, {'id':385663691, 'method':'messages.getAttachMenuBots', 'params':[{'name':'hash', 'type':'long'}], 'type':'AttachMenuBots'}, {'id':1998676370, 'method':'messages.getAttachMenuBot', 'params':[{'name':'bot', 'type':'InputUser'}], 'type':'AttachMenuBotsBot'}, {'id':451818415, 'method':'messages.toggleBotInAttachMenu', 'params':[{'name':'bot', 'type':'InputUser'}, {'name':'enabled', 'type':'Bool'}], 'type':'Bool'}, {'id':-1850648527, 'method':'messages.requestWebView', 'params':[{'name':'flags', 'type':'#'}, {'name':'from_bot_menu', 'type':'flags.4?true'}, {'name':'silent', 'type':'flags.5?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'bot', 'type':'InputUser'}, {'name':'url', 'type':'flags.1?string'}, {'name':'start_param', 'type':'flags.3?string'}, {'name':'theme_params', 'type':'flags.2?DataJSON'}, {'name':'reply_to_msg_id', 'type':'flags.0?int'}, {'name':'send_as', 'type':'flags.13?InputPeer'}], 'type':'WebViewResult'}, {'id':-362824498, 'method':'messages.prolongWebView', 'params':[{'name':'flags', 'type':'#'}, {'name':'silent', 'type':'flags.5?true'}, {'name':'peer', 'type':'InputPeer'}, {'name':'bot', 'type':'InputUser'}, {'name':'query_id', 'type':'long'}, {'name':'reply_to_msg_id', 'type':'flags.0?int'}, {'name':'send_as', 'type':'flags.13?InputPeer'}], 'type':'Bool'}, {'id':1790652275, 'method':'messages.requestSimpleWebView', 'params':[{'name':'flags', 'type':'#'}, {'name':'bot', 'type':'InputUser'}, {'name':'url', 'type':'string'}, {'name':'theme_params', 'type':'flags.0?DataJSON'}], 'type':'SimpleWebViewResult'}, {'id':172168437, 'method':'messages.sendWebViewResultMessage', 'params':[{'name':'bot_query_id', 'type':'string'}, {'name':'result', 'type':'InputBotInlineResult'}], 'type':'WebViewMessageSent'}, {'id':-603831608, 'method':'messages.sendWebViewData', 'params':[{'name':'bot', 'type':'InputUser'}, {'name':'random_id', 'type':'long'}, {'name':'button_text', 'type':'string'}, {'name':'data', 'type':'string'}], 'type':'Updates'}, {'id':1157944655, 'method':'bots.setBotMenuButton', 'params':[{'name':'user_id', 'type':'InputUser'}, {'name':'button', 'type':'BotMenuButton'}], 'type':'Bool'}, {'id':-1671369944, 'method':'bots.getBotMenuButton', 'params':[{'name':'user_id', 'type':'InputUser'}], 'type':'BotMenuButton'}, {'id':-510647672, 'method':'account.getSavedRingtones', 'params':[{'name':'hash', 'type':'long'}], 'type':'account.SavedRingtones'}, {'id':1038768899, 'method':'account.saveRingtone', 'params':[{'name':'id', 'type':'InputDocument'}, {'name':'unsave', 'type':'Bool'}], 'type':'account.SavedRingtone'}, {'id':-2095414366, 'method':'account.uploadRingtone', 'params':[{'name':'file', 'type':'InputFile'}, {'name':'file_name', 'type':'string'}, {'name':'mime_type', 'type':'string'}], 'type':'Document'}, {'id':2021942497, 'method':'bots.setBotBroadcastDefaultAdminRights', 'params':[{'name':'admin_rights', 'type':'ChatAdminRights'}], 'type':'Bool'}, {'id':-1839281686, 'method':'bots.setBotGroupDefaultAdminRights', 'params':[{'name':'admin_rights', 'type':'ChatAdminRights'}], 'type':'Bool'}, {'id':1092913030, 'method':'phone.saveCallLog', 'params':[{'name':'peer', 'type':'InputPhoneCall'}, {'name':'file', 'type':'InputFile'}], 'type':'Bool'}, {'id':-456419968, 'method':'channels.toggleJoinToSend', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'enabled', 'type':'Bool'}], 'type':'Updates'}, {'id':1277789622, 'method':'channels.toggleJoinRequest', 'params':[{'name':'channel', 'type':'InputChannel'}, {'name':'enabled', 'type':'Bool'}], 'type':'Updates'}, {'id':261206117, 'method':'payments.exportInvoice', 'params':[{'name':'invoice_media', 'type':'InputMedia'}], 'type':'payments.ExportedInvoice'}, {'id':647928393, 'method':'messages.transcribeAudio', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}], 'type':'messages.TranscribedAudio'}, {'id':2132608815, 'method':'messages.rateTranscribedAudio', 'params':[{'name':'peer', 'type':'InputPeer'}, {'name':'msg_id', 'type':'int'}, {'name':'transcription_id', 'type':'long'}, {'name':'good', 'type':'Bool'}], 'type':'Bool'}, {'id':224186320, 'method':'payments.assignAppStoreTransaction', 'params':[{'name':'flags', 'type':'#'}, {'name':'restore', 'type':'flags.0?true'}, {'name':'receipt', 'type':'bytes'}], 'type':'Updates'}, {'id':1336560365, 'method':'payments.assignPlayMarketTransaction', 'params':[{'name':'purchase_token', 'type':'string'}], 'type':'Updates'}, {'id':-1435856696, 'method':'payments.canPurchasePremium', 'params':[], 'type':'Bool'}, {'id':-1206152236, 'method':'help.getPremiumPromo', 'params':[], 'type':'help.PremiumPromo'}, {'id':342791565, 'method':'payments.requestRecurringPayment', 'params':[{'name':'user_id', 'type':'InputUser'}, {'name':'recurring_init_charge', 'type':'string'}, {'name':'invoice_media', 'type':'InputMedia'}], 'type':'Updates'}]}, 'layer':143} as {\r\n  MTProto: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  API: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  layer: number,\r\n};\n","export default function intToUint(val: number) {\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\n}\n","import bigInt from 'big-integer';\nimport intToUint from '../number/intToUint';\n\nexport default function ulongFromInts(high: number, low: number) {\n  high = intToUint(high), low = intToUint(low);\n  return bigInt(high).shiftLeft(32).add(bigInt(low));\n}\n","import bigInt from 'big-integer';\n\nexport const safeBigInt = bigInt(Number.MAX_SAFE_INTEGER);\nexport const ulongBigInt = bigInt(bigInt[2]).pow(64);\nexport const longBigInt = ulongBigInt.divide(bigInt[2]);\n","import bigInt from 'big-integer';\nimport { longBigInt, ulongBigInt } from './bigIntConstants';\n\nexport function bigIntFromBytes(bytes: Uint8Array | number[], base = 256) {\n  return bigInt.fromArray(bytes instanceof Uint8Array ? [...bytes] : bytes, base);\n}\n\nexport function bigIntToBytes(bigInt: bigInt.BigInteger) {\n  return new Uint8Array(bigInt.toArray(256).value);\n}\n\nexport function bigIntToSigned(bigInt: bigInt.BigInteger) {\n  return bigInt.greater(longBigInt) ? bigInt.minus(ulongBigInt) : bigInt;\n}\n\nexport function bigIntToUnsigned(bigInt: bigInt.BigInteger) {\n  return bigInt.isNegative() ? ulongBigInt.add(bigInt) : bigInt;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Schema, {MTProtoConstructor} from './schema';\nimport {JSONValue} from '../../layer';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport gzipUncompress from '../../helpers/gzipUncompress';\nimport bigInt from 'big-integer';\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\nimport {safeBigInt} from '../../helpers/bigInt/bigIntConstants';\nimport {bigIntToSigned, bigIntToUnsigned} from '../../helpers/bigInt/bigIntConversion';\n\nconst boolFalse = +Schema.API.constructors.find((c) => c.predicate === 'boolFalse').id;\nconst boolTrue = +Schema.API.constructors.find((c) => c.predicate === 'boolTrue').id;\nconst vector = +Schema.API.constructors.find((c) => c.predicate === 'vector').id;\nconst gzipPacked = +Schema.MTProto.constructors.find((c) => c.predicate === 'gzip_packed').id;\n\n// * using slice to have a new buffer, otherwise the buffer will be copied to main thread\nconst sliceMethod: 'slice' | 'subarray' = 'slice'; // subarray\n\nclass TLSerialization {\n  private maxLength = 2048; // 2Kb\n  private offset = 0; // in bytes\n  private mtproto = false;\n  private debug = false;// Modes.debug;\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\n    this.mtproto = options.mtproto || false;\n    this.createBuffer();\n  }\n\n  public createBuffer() {\n    this.buffer = new ArrayBuffer(this.maxLength);\n    this.intView = new Int32Array(this.buffer);\n    this.byteView = new Uint8Array(this.buffer);\n  }\n\n  public getArray() {\n    const resultBuffer = new ArrayBuffer(this.offset);\n\n    // let perf = performance.now();\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\n    // console.log('perf uint8', performance.now() - perf);\n\n    // perf = performance.now();\n    const resultInt32 = new Int32Array(resultBuffer);\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\n    // console.log('perf int32', performance.now() - perf);\n\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\n      console.error(resultUint8, resultInt32);\n    } */\n\n    return resultInt32;\n  }\n\n  public getBuffer() {\n    return this.getArray().buffer;\n  }\n\n  public getBytes(typed: true): Uint8Array;\n  public getBytes(typed?: false): number[];\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\n    if(typed) {\n      const resultBuffer = new ArrayBuffer(this.offset);\n      const resultArray = new Uint8Array(resultBuffer);\n\n      resultArray.set(this.byteView.subarray(0, this.offset));\n\n      return resultArray;\n    }\n\n    const bytes: number[] = new Array(this.offset);\n    for(let i = 0; i < this.offset; i++) {\n      bytes[i] = this.byteView[i];\n    }\n    return bytes;\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public checkLength(needBytes: number) {\n    if(this.offset + needBytes < this.maxLength) {\n      return;\n    }\n\n    // console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\n    const previousBuffer = this.buffer;\n    // const previousByteView = this.byteView;\n    const previousArray = new Int32Array(previousBuffer);\n\n    this.createBuffer();\n\n    new Int32Array(this.buffer).set(previousArray);\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32),\n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\n  }\n\n  public writeInt(i: number, field: string) {\n    this.debug && console.log('>>>', i.toString(16), i, field);\n\n    const offset = this.offset / 4;\n    this.checkLength(4);\n    this.intView[offset] = i;\n    this.offset += 4;\n\n    return offset;\n  }\n\n  public storeInt(i: number, field?: string) {\n    return this.writeInt(i, (field || '') + ':int');\n  }\n\n  public storeBool(i: boolean, field?: string) {\n    if(i) {\n      this.writeInt(boolTrue, (field || '') + ':bool');\n    } else {\n      this.writeInt(boolFalse, (field || '') + ':bool');\n    }\n  }\n\n  public storeLongP(iHigh: number, iLow: number, field?: string) {\n    this.writeInt(iLow, (field || '') + ':long[low]');\n    this.writeInt(iHigh, (field || '') + ':long[high]');\n  }\n\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\n    if(Array.isArray(sLong)) {\n      if(sLong.length === 2) {\n        return this.storeLongP(sLong[0], sLong[1], field);\n      } else {\n        return this.storeIntBytes(sLong, 64, field);\n      }\n    }\n\n    const _bigInt = bigIntToUnsigned(bigInt(sLong as string));\n    const {quotient, remainder} = _bigInt.divmod(0x100000000);\n    const high = quotient.toJSNumber();\n    const low = remainder.toJSNumber();\n\n    this.writeInt(low, (field || '') + ':long[low]');\n    this.writeInt(high, (field || '') + ':long[high]');\n  }\n\n  public storeDouble(f: any, field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n\n    doubleView[0] = f;\n\n    this.writeInt(intView[0], (field || '') + ':double[low]');\n    this.writeInt(intView[1], (field || '') + ':double[high]');\n  }\n\n  public storeString(s: string, field?: string) {\n    this.debug && console.log('>>>', s, (field || '') + ':string');\n\n    if(s === undefined) {\n      s = '';\n    }\n    const sUTF8 = unescape(encodeURIComponent(s));\n\n    this.checkLength(sUTF8.length + 8);\n\n    const len = sUTF8.length;\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n    for(let i = 0; i < len; i++) {\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\n    }\n\n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n\n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    } else if(bytes === undefined) {\n      bytes = [];\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\n\n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\n    const len = (bytes as Uint8Array).length;\n    this.checkLength(len + 8);\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n\n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n\n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n\n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = (bytes as Uint8Array).length;\n    if((bits % 32) || (len * 8) !== bits) {\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\n      console.error(error, bytes, field);\n      throw error;\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\n    this.checkLength(len);\n\n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  }\n\n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = bytes.length;\n\n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\n    this.checkLength(len);\n\n    this.byteView.set(bytes, this.offset);\n    this.offset += len;\n  }\n\n  public storeMethod(methodName: string, params: any) {\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const methodData = schema.methods.find((m) => m.method === methodName);\n\n    if(!methodData) {\n      throw new Error('No method ' + methodName + ' found');\n    }\n\n    this.storeInt(methodData.id, methodName + '[id]');\n\n    const pFlags = params.pFlags || params; // * support pFlags, though am not expecting it to be there\n    const flagsOffsets: {[paramName: string]: number} = {};\n    // console.log('storeMethod', len, methodData);\n    for(const param of methodData.params) {\n      let type = param.type;\n\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        if(!(params[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags[param.name] : params[param.name] !== undefined) {\n            // console.log('storeMethod autocompleting', methodName, param.name, params[param.name], type);\n            params[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n\n        // console.log('storeMethod', methodName, fieldBit, params[fieldBit[0]], params, param, condType, !!(params[fieldBit[0]] & (1 << +fieldBit[1])));\n        type = condType[1];\n      }\n\n      // console.log('storeMethod', methodName, param.name, params[param.name], type);\n      const result = this.storeObject(params[param.name], type, methodName + '[' + param.name + ']');\n\n      if(type === '#') {\n        params[param.name] = params[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(const paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = params[paramName];\n    }\n\n    return methodData.type;\n  }\n\n  public storeObject(obj: any, type: string, field?: string) {\n    // console.log('storeObject', obj, type, field, this.offset, this.getBytes(true).hex);\n    switch(type) {\n      case '#':\n        obj = obj || 0;\n      case 'int':\n        return this.storeInt(obj, field);\n      case 'long':\n        return this.storeLong(obj, field);\n      case 'int128':\n        return this.storeIntBytes(obj, 128, field);\n      case 'int256':\n        return this.storeIntBytes(obj, 256, field);\n      case 'int512':\n        return this.storeIntBytes(obj, 512, field);\n      case 'string':\n        return this.storeString(obj, field);\n      case 'bytes':\n        return this.storeBytes(obj, field);\n      case 'double':\n        return this.storeDouble(obj, field);\n      case 'Bool':\n        return this.storeBool(obj, field);\n      case 'true':\n        return\n    }\n\n    if(Array.isArray(obj)) {\n      if(type.substr(0, 6) === 'Vector') {\n        this.writeInt(vector, field + '[id]');\n      } else if(type.substr(0, 6) !== 'vector') {\n        throw new Error('Invalid vector type ' + type);\n      }\n\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      this.writeInt(obj.length, field + '[count]');\n      for(let i = 0; i < obj.length; i++) {\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\n      }\n\n      return true;\n    } else if(type.substr(0, 6).toLowerCase() === 'vector') {\n      throw new Error('Invalid vector object');\n    }\n\n    if(!isObject(obj)) {\n      throw new Error('Invalid object for type ' + type);\n    }\n\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const predicate = obj['_'];\n    let isBare = false;\n    const constructorData: MTProtoConstructor = schema.constructors.find((c) => c.predicate === predicate);\n\n    if(isBare = (type.charAt(0) === '%')) {\n      type = type.substr(1);\n    }\n\n    if(!constructorData) {\n      throw new Error('No predicate ' + predicate + ' found');\n    }\n\n    if(predicate === type) {\n      isBare = true;\n    }\n\n    if(!isBare) {\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\n    }\n\n    const pFlags = obj.pFlags;\n    const flagsOffsets: {[paramName: string]: number} = {};\n    // console.log('storeObject', len, constructorData);\n    for(const param of constructorData.params) {\n      let type = param.type;\n\n      // console.log('storeObject', param, type);\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        // console.log('storeObject fieldBit', fieldBit, obj[fieldBit[0]]);\n\n        if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags && pFlags[param.name] : obj[param.name] !== undefined) {\n            // console.log('storeObject autocompleting', param.name, obj[param.name], type);\n            obj[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n\n        type = condType[1];\n      }\n      // console.log('storeObject', param, type);\n\n      const result = this.storeObject(obj[param.name], type, field + '[' + predicate + '][' + param.name + ']');\n\n      if(type === '#') {\n        obj[param.name] = obj[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(const paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = obj[paramName];\n    }\n\n    return constructorData.type;\n  }\n}\n\nclass TLDeserialization<FetchLongAs extends Long> {\n  private offset = 0; // in bytes\n  private override: {[key: string]: (result: any, field: string) => void};\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  // this.debug =\n  private mtproto: boolean = false;\n  private debug: boolean;\n\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\n    // buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\n    if(buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.intView = new Int32Array(buffer);\n      this.byteView = new Uint8Array(this.buffer);\n    } else {\n      this.buffer = buffer.buffer;\n      this.intView = new Int32Array(buffer.buffer);\n      this.byteView = buffer;\n    }\n\n    // console.log(this.intView);\n\n    this.override = options.override || {};\n    this.mtproto = !!options.mtproto;\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\n  }\n\n  /* public setMtproto(mtproto: boolean) {\n    this.mtproto = mtproto;\n  } */\n\n  private readInt(field: string) {\n    // if(this.offset >= this.intView.length * 4) {\n    if((this.byteView.length - this.offset) < 4) {\n      console.error(this.byteView, this.offset);\n      throw new Error('Nothing to fetch: ' + field);\n    }\n\n    const i = this.intView[this.offset / 4];\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\n\n    this.debug &&/*  || field.includes('[dialog][read_outbox_max_id]') */\n      console.log('<<<', i.toString(16), i, field,\n        this.byteView.slice(this.offset - 16, this.offset + 16),\n        bytesToHex(this.byteView.slice(this.offset - 16, this.offset + 16)));\n\n    this.offset += 4;\n\n    return i;\n  }\n\n  public fetchInt(field?: string) {\n    return this.readInt((field || '') + ':int');\n  }\n\n  public fetchDouble(field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n\n    intView[0] = this.readInt((field || '') + ':double[low]'),\n    intView[1] = this.readInt((field || '') + ':double[high]');\n\n    return doubleView[0];\n  }\n\n  // ! it should've been signed\n  public fetchLong(field?: string): FetchLongAs {\n    const iLow = this.readInt((field || '') + ':long[low]');\n    const iHigh = this.readInt((field || '') + ':long[high]');\n\n    let ulong = ulongFromInts(iHigh, iLow);\n    if(/* !unsigned &&  */!this.mtproto) { // make it signed\n      ulong = bigIntToSigned(ulong);\n    }\n\n    if(!this.mtproto) {\n      if(safeBigInt.greaterOrEquals(ulong.abs())) {\n        // @ts-ignore\n        return ulong.toJSNumber();\n      }\n    }\n\n    // @ts-ignore\n    return ulong.toString(10);\n  }\n\n  public fetchBool(field?: string): boolean {\n    const i = this.readInt((field || '') + ':bool');\n    if(i === boolTrue) {\n      return true;\n    } else if(i === boolFalse) {\n      return false;\n    }\n\n    this.offset -= 4;\n    return this.fetchObject('Object', field);\n  }\n\n  public fetchString(field?: string): string {\n    let len = this.byteView[this.offset++];\n\n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n\n    let sUTF8 = '';\n    for(let i = 0; i < len; i++) {\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\n    }\n\n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n\n    let s: string;\n    try {\n      s = decodeURIComponent(escape(sUTF8));\n    } catch(e) {\n      s = sUTF8;\n    }\n\n    this.debug && console.log('<<<', s, (field || '') + ':string');\n\n    return s;\n  }\n\n  public fetchBytes(field?: string) {\n    let len = this.byteView[this.offset++];\n\n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n\n    const bytes = this.byteView[sliceMethod](this.offset, this.offset + len);\n    this.offset += len;\n\n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\n\n    return bytes;\n  }\n\n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\n    if(bits % 32) {\n      throw new Error('Invalid bits: ' + bits);\n    }\n\n    const len = bits / 8;\n    if(typed) {\n      const result = this.byteView[sliceMethod](this.offset, this.offset + len);\n      this.offset += len;\n      return result;\n    }\n\n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\n\n    return bytes;\n  }\n\n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\n    if(len === false) {\n      len = this.readInt((field || '') + '_length');\n      if(len > this.byteView.byteLength) {\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\n      }\n    }\n\n    if(typed) {\n      const bytes = new Uint8Array(len);\n      bytes.set(this.byteView[sliceMethod](this.offset, this.offset + len));\n      this.offset += len;\n      return bytes;\n    }\n\n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\n\n    return bytes;\n  }\n\n  private fetchVector(type: string, field?: string) {\n    const len = this.readInt(field + '[count]');\n    const result: any[] = new Array(len);\n    if(len > 0) {\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      for(let i = 0; i < len; ++i) {\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\n      }\n    }\n\n    return result;\n  }\n\n  public fetchObject(type: string, field?: string): any {\n    switch(type) {\n      case '#':\n      case 'int':\n        return this.fetchInt(field);\n      case 'long':\n        return this.fetchLong(field);\n      case 'int128':\n        return this.fetchIntBytes(128, true, field);\n      case 'int256':\n        return this.fetchIntBytes(256, true, field);\n      case 'int512':\n        return this.fetchIntBytes(512, true, field);\n      case 'string':\n        return this.fetchString(field);\n      case 'bytes':\n        return this.fetchBytes(field);\n      case 'double':\n        return this.fetchDouble(field);\n      case 'Bool':\n        return this.fetchBool(field);\n      case 'true':\n        return true;\n    }\n\n    field = field || type || 'Object';\n\n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\n      return this.fetchVector(type, field);\n    }\n\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    let constructorData: MTProtoConstructor = null;\n    let fallback = false;\n\n    if(type.charAt(0) === '%') {\n      const checkType = type.substr(1);\n      constructorData = schema.constructors.find((c) => c.type === checkType);\n      if(!constructorData) {\n        throw new Error('Constructor not found for type: ' + type);\n      }\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\n      constructorData = schema.constructors.find((c) => c.predicate === type);\n      if(!constructorData) {\n        throw new Error('Constructor not found for predicate: ' + type);\n      }\n    } */ else {\n      const constructorCmp = this.readInt(field + '[id]');\n\n      if(constructorCmp === gzipPacked) { // Gzip packed\n        const compressed = this.fetchBytes(field + '[packed_string]');\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\n\n        return newDeserializer.fetchObject(type, field);\n      }\n\n      if(constructorCmp === vector) {\n        return this.fetchVector(type, field);\n      }\n\n      let index = schema.constructorsIndex;\n      if(!index) {\n        schema.constructorsIndex = index = {};\n        for(let i = 0, len = schema.constructors.length; i < len; i++) {\n          index[schema.constructors[i].id] = i;\n        }\n      }\n\n      const i = index[constructorCmp];\n      if(i !== undefined) {\n        constructorData = schema.constructors[i];\n      }\n\n      if(!constructorData && this.mtproto) {\n        const schemaFallback = Schema.API;\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; i++) {\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\n            constructorData = schemaFallback.constructors[i];\n\n            delete this.mtproto;\n            fallback = true;\n            break;\n          }\n        }\n      }\n\n      if(!constructorData) {\n        console.error('Constructor not found:', constructorCmp);\n\n        let int1: number, int2: number;\n        try {\n          int1 = this.fetchInt(field);\n          int2 = this.fetchInt(field);\n        } catch(err) {\n\n        }\n\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\n      }\n    }\n\n    const predicate = constructorData.predicate;\n\n    const result: any = {'_': predicate};\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\n    if(this.override[overrideKey]) {\n      this.override[overrideKey](result, field + '[' + predicate + ']');\n    } else {\n      for(let i = 0, len = constructorData.params.length; i < len; i++) {\n        const param = constructorData.params[i];\n        let type = param.type;\n\n        if(type === '#' && result.pFlags === undefined) {\n          result.pFlags = {};\n        }\n\n        const isCond = (type.indexOf('?') !== -1);\n        if(isCond) {\n          const condType = type.split('?');\n          const fieldBit = condType[0].split('.');\n\n          if(!(result[fieldBit[0]] & (1 << +fieldBit[1]))) {\n            // console.log('fetchObject bad', constructorData, result[fieldBit[0]], fieldBit);\n            continue;\n          }\n\n          // console.log('fetchObject good', constructorData, result[fieldBit[0]], fieldBit);\n\n          type = condType[1];\n        }\n\n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\n\n        if(isCond && type === 'true') {\n          result.pFlags[param.name] = value;\n        } else {\n          /* if(param.name === 'read_outbox_max_id') {\n            console.log(result, param.name, value, field + '[' + predicate + '][' + param.name + ']');\n          } */\n\n          result[param.name] = value;\n        }\n      }\n    }\n\n    if(fallback) {\n      this.mtproto = true;\n    }\n\n    if(type === 'JSONValue') {\n      return this.formatJSONValue(result);\n    }\n\n    return result;\n  }\n\n  private formatJSONValue(jsonValue: JSONValue): any {\n    if(!jsonValue._) return jsonValue;\n    switch(jsonValue._) {\n      case 'jsonNull':\n        return null;\n      case 'jsonObject': {\n        const out: any = {};\n        const objectValues = jsonValue.value;\n        for(let i = 0, length = objectValues.length; i < length; ++i) {\n          const objectValue = objectValues[i];\n          out[objectValue.key] = this.formatJSONValue(objectValue.value);\n        }\n        return out;\n      }\n      default:\n        return jsonValue.value;\n    }\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public setOffset(offset: number) {\n    this.offset = offset;\n  }\n\n  /* public fetchEnd() {\n    if(this.offset !== this.byteView.length) {\n      throw new Error('Fetch end with non-empty buffer');\n    }\n\n    return true;\n  } */\n}\n\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\nexport {TLDeserialization, TLSerialization};\n","// export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\n\n// @ts-ignore\nimport pako from 'pako/dist/pako_inflate.min.js';\n// import dT from './dT';\n\n// export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\nexport default function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\n  // console.log(dT(), 'Gzip uncompress start');\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\n  // console.log(dT(), 'Gzip uncompress finish'/* , result */);\n  return result;\n}\n","import randomize from '../array/randomize';\nimport bufferConcats from './bufferConcats';\n\nexport default function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\n  bytes: T,\n  blockSize: number = 16,\n  zeroes?: boolean,\n  blockSizeAsTotalLength = false,\n  prepend = false\n): T {\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\n  if(needPadding > 0 && needPadding < blockSize) {\n    // //console.log('addPadding()', len, blockSize, needPadding);\n    const padding = new Uint8Array(needPadding);\n    if(zeroes) {\n      for(let i = 0; i < needPadding; ++i) {\n        padding[i] = 0;\n      }\n    } else {\n      randomize(padding);\n    }\n\n    if(bytes instanceof ArrayBuffer) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\n    } else if(bytes instanceof Uint8Array) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\n    } else {\n      // @ts-ignore\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\n    }\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {TLDeserialization, TLSerialization} from './tl_utils';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport sessionStorage from '../sessionStorage';\nimport Schema from './schema';\nimport {NetworkerFactory} from './networkerFactory';\nimport {logger, LogTypes} from '../logger';\nimport {InvokeApiOptions} from '../../types';\nimport longToBytes from '../../helpers/long/longToBytes';\nimport MTTransport from './transports/transport';\nimport {nextRandomUint, randomLong} from '../../helpers/random';\nimport App from '../../config/app';\nimport DEBUG from '../../config/debug';\nimport Modes from '../../config/modes';\nimport noop from '../../helpers/noop';\n\n                       \nimport HTTP from './transports/http';\n         \n\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport bigInt from 'big-integer';\nimport {ConnectionStatus} from './connectionStatus';\nimport ctx from '../../environment/ctx';\nimport bufferConcats from '../../helpers/bytes/bufferConcats';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport convertToUint8Array from '../../helpers/bytes/convertToUint8Array';\nimport isObject from '../../helpers/object/isObject';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport sortLongsArray from '../../helpers/long/sortLongsArray';\nimport randomize from '../../helpers/array/randomize';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\nimport {getEnvironment} from '../../environment/utils';\nimport {TimeManager} from './timeManager';\n\n// console.error('networker included!', new Error().stack);\n\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\n  noResponse: true, // http_wait\n  longPoll: true,\n\n  notContentRelated: true, // ACK\n  noSchedule: true,\n  // withResult: true,\n  messageId: MTLong,\n}>;\n\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\n  msg_id: MTLong,\n  seq_no: number,\n  body?: Uint8Array | number[],\n  isAPI?: boolean,\n  // only these four are important\n\n  acked?: boolean,\n\n  deferred?: CancellablePromise<void>,\n\n  container?: boolean,\n  inner?: MTLong[],\n\n  // below - options\n\n  notContentRelated?: true,\n  noSchedule?: true,\n\n  resultType?: string,\n\n  longPoll?: true,\n  noResponse?: true, // only with http (http_wait for longPoll)\n};\n\nconst DRAIN_TIMEOUT = 10000;\nconst delays: {\n  [k in 'client' | 'file']: {\n    disconnectDelayMin: number,\n    disconnectDelayMax: number,\n    pingInterval: number,\n    pingMaxTime: number,\n    connectionTimeout: number\n  }\n} = {\n  client: {\n    disconnectDelayMin: 7,\n    disconnectDelayMax: 20,\n    pingInterval: 2000,\n    pingMaxTime: 5,\n    connectionTimeout: 5000\n  },\n  file: {\n    disconnectDelayMin: 10,\n    disconnectDelayMax: 24,\n    pingInterval: 3000,\n    pingMaxTime: 7,\n    connectionTimeout: 7500\n  }\n};\nconst RESEND_OPTIONS: MTMessageOptions = {\n  noSchedule: true,\n  notContentRelated: true\n};\nlet invokeAfterMsgConstructor: number;\nlet networkerTempId = 0;\n\nexport default class MTPNetworker {\n  private authKeyUint8: Uint8Array;\n\n  public isFileNetworker: boolean;\n  private isFileUpload: boolean;\n  private isFileDownload: boolean;\n\n  private lastServerMessages: Array<MTLong> = [];\n\n  private sentMessages: {\n    [msgId: MTLong]: MTMessage\n  } = {};\n\n  private pendingMessages: {[msgId: MTLong]: number} = {};\n  private pendingAcks: Array<MTLong> = [];\n  private pendingResendReq: MTLong[] = [];\n  // private pendingResendAnsReq: MTLong[] = [];\n  public connectionInited: boolean;\n\n  private nextReqTimeout: number;\n  private nextReq: number = 0;\n\n                         \n  private longPollInterval: number;\n  private longPollPending: number;\n  private checkConnectionRetryAt: number;\n  private checkConnectionTimeout: number;\n  private checkConnectionPeriod = 0;\n  private sleepAfter: number;\n  private offline = false;\n  private sendingLongPoll: boolean;\n           \n\n  private seqNo: number;\n  private prevSessionId: Uint8Array;\n  private sessionId: Uint8Array;\n  private serverSalt: Uint8Array;\n\n  private lastResendReq: {\n    reqMsgId: MTLong,\n    msgIds: MTPNetworker['pendingResendReq']\n  };\n  // private lastResendAnsReq: MTPNetworker['lastResendReq'];\n\n  private name: string;\n  private log: ReturnType<typeof logger>;\n\n  public isOnline = false;\n  private status: ConnectionStatus = ConnectionStatus.Closed;\n  private lastResponseTime = 0;\n\n  private debug = DEBUG /* && false */ || Modes.debug;\n\n  public activeRequests = 0;\n\n  public onDrain: () => void;\n  private onDrainTimeout: number;\n\n  public transport: MTTransport;\n\n                       \n  private pingDelayDisconnectDeferred: CancellablePromise<string>;\n  private pingPromise: Promise<void>;\n  // private pingInterval: number;\n  private lastPingTime: number;\n  private lastPingStartTime: number;\n  private lastPingDelayDisconnectId: string;\n           \n  // public onConnectionStatusChange: (online: boolean) => void;\n\n  // private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\n\n  private delays: typeof delays[keyof typeof delays];\n  // private getNewTimeOffset: boolean;\n\n  constructor(\n    private networkerFactory: NetworkerFactory,\n    private timeManager: TimeManager,\n    public dcId: number,\n    private authKey: Uint8Array,\n    private authKeyId: Uint8Array,\n    serverSalt: Uint8Array,\n    options: InvokeApiOptions = {}\n  ) {\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\n    this.serverSalt = convertToUint8Array(serverSalt);\n\n    this.isFileUpload = !!options.fileUpload;\n    this.isFileDownload = !!options.fileDownload;\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\n    this.delays = this.isFileNetworker ? delays.file : delays.client;\n\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\n    this.name = 'NET-' + dcId + suffix;\n    // this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\n    this.log = logger(this.name + (suffix ? '' : '-C') + '-' + networkerTempId++, LogTypes.Log/*  | LogTypes.Debug */ | LogTypes.Error | LogTypes.Warn);\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\n\n    // Test resend after bad_server_salt\n    /* if(this.dcId === 2 && this.upload) {\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\n      this.serverSalt[0] = 0;\n    } */\n\n    this.updateSession();\n\n    // if(!NetworkerFactory.offlineInited) {\n    //   NetworkerFactory.offlineInited = true;\n    //   /* rootScope.offline = true\n    //   rootScope.offlineConnecting = true */\n    // }\n  }\n\n  private updateSession() {\n    this.seqNo = 0;\n    this.prevSessionId = this.sessionId;\n    this.sessionId = randomize(new Uint8Array(8));\n  }\n\n  /* private clearContainers() {\n    for(const messageId in this.sentMessages) {\n      const message = this.sentMessages[messageId];\n      if(message.container) {\n        delete this.sentMessages[messageId];\n      }\n    }\n  } */\n\n  private updateSentMessage(sentMessageId: string) {\n    const sentMessage = this.sentMessages[sentMessageId];\n    if(!sentMessage) {\n      return false;\n    }\n\n    if(sentMessage.container) {\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\n        if(!innerSentMessage) {\n          sentMessage.inner.splice(idx, 1);\n        } else {\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\n        }\n      });\n    }\n\n    sentMessage.msg_id = this.timeManager.generateId();\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated || sentMessage.container);\n\n    if(this.debug) {\n      this.log(`updateSentMessage, old=${sentMessageId}, new=${sentMessage.msg_id}`);\n    }\n\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\n    delete this.sentMessages[sentMessageId];\n\n    return sentMessage;\n  }\n\n  private generateSeqNo(notContentRelated?: boolean) {\n    let seqNo = this.seqNo * 2;\n\n    if(!notContentRelated) {\n      seqNo++;\n      this.seqNo++;\n    }\n\n    return seqNo;\n  }\n\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n\n    serializer.storeMethod(method, params);\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n\n    if(Modes.debug) {\n      this.log('MT call', method, params, messageId, seqNo);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n    serializer.storeObject(object, 'Object');\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo(options.notContentRelated);\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n\n    if(Modes.debug) {\n      this.log('MT message', object, messageId, seqNo);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\n    const serializer = new TLSerialization(options);\n\n    if(!this.connectionInited) { // this will call once for each new session\n      // /////this.log('Wrap api call !this.connectionInited');\n\n      const invokeWithLayer = Schema.API.methods.find((m) => m.method === 'invokeWithLayer');\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\n\n      // @ts-ignore\n      serializer.storeInt(Schema.layer, 'layer');\n\n      const initConnection = Schema.API.methods.find((m) => m.method === 'initConnection');\n      if(!initConnection) throw new Error('no initConnection!');\n\n      serializer.storeInt(+initConnection.id, 'initConnection');\n      serializer.storeInt(0x0, 'flags');\n      serializer.storeInt(App.id, 'api_id');\n      serializer.storeString(getEnvironment().USER_AGENT || 'Unknown UserAgent', 'device_model');\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\n      serializer.storeString(App.langPack, 'lang_pack');\n      serializer.storeString(this.networkerFactory.language, 'lang_code');\n      // serializer.storeInt(0x0, 'proxy');\n      /* serializer.storeMethod('initConnection', {\n        'flags': 0,\n        'api_id': App.id,\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\n        'system_version': navigator.platform || 'Unknown Platform',\n        'app_version': App.version,\n        'system_lang_code': navigator.language || 'en',\n        'lang_pack': '',\n        'lang_code': navigator.language || 'en'\n      }); */\n    }\n\n    if(options.afterMessageId) {\n      if(invokeAfterMsgConstructor === undefined) {\n        const m = Schema.API.methods.find((m) => m.method === 'invokeAfterMsg');\n        invokeAfterMsgConstructor = m ? +m.id : 0;\n      }\n\n      if(invokeAfterMsgConstructor) {\n        // if(this.debug) {\n        //   this.log('invokeApi: store invokeAfterMsg');\n        // }\n\n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\n        serializer.storeLong(options.afterMessageId, 'msg_id');\n      } else {\n        this.log.error('no invokeAfterMsg!');\n      }\n    }\n\n    options.resultType = serializer.storeMethod(method, params);\n\n    /* if(method === 'account.updateNotifySettings') {\n      this.log('api call body:', serializer.getBytes(true));\n    } */\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true),\n      isAPI: true\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log('Api call', method, message, params, options);\n    } else if(this.debug) {\n      this.log('Api call', method, params, options);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public changeTransport(transport?: MTTransport) {\n    const oldTransport = this.transport;\n    if(oldTransport) {\n      oldTransport.destroy();\n\n      if(this.nextReqTimeout) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n      }\n\n      this.connectionInited = false;\n\n                             \n      if(this.longPollInterval !== undefined) {\n        clearInterval(this.longPollInterval);\n        this.longPollInterval = undefined;\n      }\n\n      this.clearCheckConnectionTimeout();\n               \n    }\n\n    this.log('change transport', transport, oldTransport);\n\n                         \n    this.clearPingDelayDisconnect();\n\n    // if(this.pingInterval !== undefined) {\n    //   clearInterval(this.pingInterval);\n    //   this.pingInterval = undefined;\n    // }\n\n    // this.clearPing();\n             \n\n    this.transport = transport;\n    if(!transport) {\n      return;\n    }\n\n    transport.networker = this;\n\n                           \n                         \n    if(transport instanceof HTTP) {\n             \n      this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\n      this.checkLongPoll();\n      this.checkConnection('changed transport');\n                         \n    }\n             \n             \n\n                         \n    // * handle outcoming dead socket, server will close the connection\n    if((transport as TcpObfuscated).connection) {\n      // this.sendPingDelayDisconnect();\n\n      if(transport.connected) {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n      }\n\n      // this.pingInterval = ctx.setInterval(this.sendPing, PING_INTERVAL);\n      // this.sendPing();\n    }\n             \n\n    this.resend();\n  }\n\n  public destroy() {\n    this.log('destroy');\n  }\n\n  public forceReconnectTimeout() {\n    if((this.transport as TcpObfuscated).reconnect) {\n      (this.transport as TcpObfuscated).reconnect();\n    } else {\n      this.resend();\n    }\n  }\n\n  public forceReconnect() {\n    if((this.transport as TcpObfuscated).forceReconnect) {\n      (this.transport as TcpObfuscated).forceReconnect();\n    } else {\n      this.checkConnection('force reconnect');\n    }\n  }\n\n  /* private clearPing() {\n    if(this.pingPromise) {\n      this.pingPromise = undefined;\n    }\n\n    this.lastPingTime = undefined;\n  }\n\n  private sendPing = () => {\n    // return;\n\n    // if(!(this.transport as TcpObfuscated).connected) {\n    //   this.clearPing();\n    //   return;\n    // }\n\n    if(this.pingPromise) {\n      return;\n    }\n\n    const startTime = Date.now();\n    this.log('sendPing: ping', startTime);\n    const promise = this.pingPromise = this.wrapMtpCall('ping', {\n      ping_id: randomLong()\n    }, {\n      notContentRelated: true\n    }).then(() => {\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.log('sendPing: pong', elapsedTime);\n\n      setTimeout(() => {\n        if(this.pingPromise !== promise) {\n          return;\n        }\n\n        this.pingPromise = undefined;\n        this.sendPing();\n      }, Math.max(0, PING_INTERVAL - elapsedTime));\n    });\n  }; */\n\n  private clearPingDelayDisconnect() {\n    const deferred = this.pingDelayDisconnectDeferred;\n    this.pingDelayDisconnectDeferred = undefined;\n    this.lastPingDelayDisconnectId = undefined;\n\n    if(deferred) {\n      deferred.reject();\n    }\n  }\n\n  private sendPingDelayDisconnect = () => {\n    // return;\n\n    if(this.pingDelayDisconnectDeferred || !this.transport || !this.transport.connected) return;\n\n    /* if(!this.isOnline) {\n      if((this.transport as TcpObfuscated).connected) {\n        (this.transport as TcpObfuscated).connection.close();\n      }\n\n      return;\n    } */\n\n    const deferred = this.pingDelayDisconnectDeferred = deferredPromise();\n    const delays = this.delays;\n    const pingMaxTime = this.delays.pingMaxTime;\n    const lastPingTime = Math.min(this.lastPingTime ?? 0, pingMaxTime);\n    const disconnectDelay = Math.round(delays.disconnectDelayMin + lastPingTime / pingMaxTime * (delays.disconnectDelayMax - delays.disconnectDelayMin));\n    const timeoutTime = disconnectDelay * 1000;\n    const startTime = this.lastPingStartTime = Date.now();\n    const pingId = this.lastPingDelayDisconnectId = randomLong();\n    const options: MTMessageOptions = {notContentRelated: true};\n    this.wrapMtpCall('ping_delay_disconnect', {\n      ping_id: pingId,\n      disconnect_delay: disconnectDelay\n    }, options);\n\n    const log = this.log.bindPrefix('sendPingDelayDisconnect');\n    this.debug && log.debug(`ping, timeout=${timeoutTime}, lastPingTime=${this.lastPingTime}, msgId=${options.messageId}, pingId=${pingId}`);\n    const rejectTimeout = ctx.setTimeout(deferred.reject, timeoutTime);\n\n    const onResolved = (reason: string) => {\n      clearTimeout(rejectTimeout);\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.debug && log.debug(`pong, reason='${reason}', time=${lastPingTime}, msgId=${options.messageId}`);\n      if(elapsedTime > timeoutTime) {\n        throw undefined;\n      } else {\n        return pause(Math.max(0, this.delays.pingInterval - elapsedTime/* timeoutTime - elapsedTime - PING_INTERVAL */));\n      }\n    };\n\n    const onTimeout = () => {\n      clearTimeout(rejectTimeout);\n      const transport = this.transport as TcpObfuscated;\n      if(this.pingDelayDisconnectDeferred !== deferred || !transport?.connection) {\n        return;\n      }\n\n      log.error('catch, closing connection', this.lastPingTime, options.messageId);\n      transport.connection.close();\n    };\n\n    const onFinally = () => {\n      if(this.pingDelayDisconnectDeferred !== deferred) {\n        return;\n      }\n\n      this.pingDelayDisconnectDeferred = undefined;\n      this.sendPingDelayDisconnect();\n    };\n\n    deferred\n    .then(onResolved)\n    .catch(onTimeout)\n    .finally(onFinally);\n  };\n\n                         \n  private checkLongPoll = () => {\n    const isClean = this.cleanupSent();\n    // this.log.error('Check lp', this.longPollPending, this.dcId, isClean, this);\n    if((this.longPollPending && Date.now() < this.longPollPending) ||\n      this.offline ||\n      this.isStopped() ||\n      this.isFileNetworker) {\n      // this.log('No lp this time');\n      return false;\n    }\n\n    sessionStorage.get('dc').then((baseDcId) => {\n      if(isClean && (\n        baseDcId !== this.dcId ||\n          (this.sleepAfter && Date.now() > this.sleepAfter)\n      )) {\n        // console.warn(dT(), 'Send long-poll for DC is delayed', this.dcId, this.sleepAfter);\n        return;\n      }\n\n      this.sendLongPoll();\n    });\n  };\n\n  private sendLongPoll() {\n    if(this.sendingLongPoll) return;\n    this.sendingLongPoll = true;\n    const maxWait = 25000;\n\n    this.longPollPending = Date.now() + maxWait;\n    this.debug && this.log.debug('sendLongPoll', this.longPollPending);\n\n    this.wrapMtpCall('http_wait', {\n      max_delay: 500,\n      wait_after: 150,\n      max_wait: maxWait\n    }, {\n      noResponse: true,\n      // notContentRelated: true,\n      longPoll: true\n    }).then(() => {\n      this.longPollPending = undefined;\n      setTimeout(this.checkLongPoll, 0);\n    }, (error: ErrorEvent) => {\n      this.log('Long-poll failed', error);\n    }).finally(() => {\n      this.sendingLongPoll = undefined;\n    });\n  }\n\n  private checkConnection = (event: Event | string) => {\n    this.debug && this.log('Check connection', event);\n    this.clearCheckConnectionTimeout();\n\n    if(!this.transport) {\n      this.log.warn('No transport for checkConnection');\n      return;\n    }\n\n    const serializer = new TLSerialization({mtproto: true});\n    const pingId = randomLong();\n\n    serializer.storeMethod('ping', {\n      ping_id: pingId\n    });\n\n    const pingMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      body: serializer.getBytes(true)\n    };\n\n    if(this.offline) {\n      this.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.sendEncryptedRequest(pingMessage).then(() => {\n      this.toggleOffline(false);\n    }, () => {\n      this.debug && this.log('Delay', this.checkConnectionPeriod * 1000);\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\n      this.checkConnectionPeriod = Math.min(60, this.checkConnectionPeriod * 1.5);\n    });\n  };\n\n  private clearCheckConnectionTimeout() {\n    if(this.checkConnectionTimeout !== undefined) {\n      clearTimeout(this.checkConnectionTimeout);\n      this.checkConnectionTimeout = undefined;\n    }\n  }\n\n  private toggleOffline(offline: boolean) {\n    if(this.offline !== offline) {\n      this.offline = offline;\n\n      this.clearCheckConnectionTimeout();\n      if(offline) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n\n        if(this.checkConnectionPeriod < 1.5) {\n          this.checkConnectionPeriod = 0;\n        }\n\n        const delay = this.checkConnectionPeriod * 1000 | 0;\n        this.checkConnectionRetryAt = Date.now() + delay;\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOfline'), delay);\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5);\n\n                              \n                                                                              \n                                                                             \n                 \n      } else {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n        this.checkLongPoll();\n\n        this.scheduleRequest();\n\n                              \n                                                                          \n                                                                         \n                 \n      }\n    }\n\n    this.setConnectionStatus(offline ? ConnectionStatus.Closed : ConnectionStatus.Connected, offline ? this.checkConnectionRetryAt : undefined);\n  }\n\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\n    // let timeout = setTimeout(() => {\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\n    // }, 5e3);\n\n    promise.then((result) => {\n      this.toggleOffline(false);\n      // this.log('parse for', message);\n      return this.parseResponse(result).then((response) => {\n        this.debug && this.log.debug('Server response', response);\n\n        this.processMessage(response.response, response.messageId, response.sessionId);\n\n        this.checkLongPoll();\n        this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\n\n        return true;\n      });\n    }, (error) => {\n      this.log.error('Encrypted request failed', error, message);\n\n      this.pushResend(message.msg_id);\n      this.toggleOffline(true);\n\n      return false;\n    }).then((shouldResolve) => {\n      // clearTimeout(timeout);\n      const sentMessages = this.sentMessages;\n      noResponseMsgs.forEach((msgId) => {\n        const sentMessage = sentMessages[msgId];\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          delete sentMessages[msgId];\n          delete this.pendingMessages[msgId];\n          shouldResolve ? deferred.resolve() : deferred.reject();\n        }\n      });\n    });\n  }\n           \n\n  // тут можно сделать таймаут и выводить дисконнект\n  private pushMessage(message: {\n    msg_id: string,\n    seq_no: number,\n    body: Uint8Array | number[],\n    isAPI?: boolean\n  }, options: MTMessageOptions) {\n    let promise: CancellablePromise<void>;\n    if(!options.notContentRelated || options.noResponse) {\n      promise = deferredPromise();\n    }\n\n    this.sentMessages[message.msg_id] = Object.assign(\n      message,\n      options,\n      promise ? {deferred: promise} : undefined\n    );\n\n    // this.log.error('Networker pushMessage:', this.sentMessages[message.msg_id]);\n\n    this.pendingMessages[message.msg_id] = 0;\n\n    if(!options.noSchedule) {\n      this.scheduleRequest();\n    }\n\n    if(isObject(options)) {\n      options.messageId = message.msg_id;\n    }\n\n    return promise;\n  }\n\n  public attachPromise(promise: Promise<any>, message: MTMessage) {\n    const canIncrement = true;\n    const timeout = setTimeout(() => {\n      if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < this.delays.connectionTimeout) {\n        return;\n      }\n\n      this.log.error('timeout', message);\n      if(this.isOnline) {\n        this.setConnectionStatus(ConnectionStatus.TimedOut);\n      }\n\n      /* this.getEncryptedOutput(message).then((bytes) => {\n        this.log.error('timeout encrypted', bytes);\n      }); */\n    }, this.delays.connectionTimeout);\n\n    promise.catch(noop).finally(() => {\n      clearTimeout(timeout);\n      this.setConnectionStatus(ConnectionStatus.Connected);\n\n      if(canIncrement) {\n        --this.activeRequests;\n        this.setDrainTimeout();\n      }\n    });\n\n    if(canIncrement) {\n      ++this.activeRequests;\n      if(this.onDrainTimeout !== undefined) {\n        clearTimeout(this.onDrainTimeout);\n        this.onDrainTimeout = undefined;\n      }\n    }\n  }\n\n  public setDrainTimeout() {\n    if(!this.activeRequests && this.onDrain && this.onDrainTimeout === undefined) {\n      this.onDrainTimeout = ctx.setTimeout(() => {\n        this.onDrainTimeout = undefined;\n        this.log('drain');\n        this.onDrain();\n      }, DRAIN_TIMEOUT);\n    }\n  }\n\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number) {\n    const isOnline = status === ConnectionStatus.Connected;\n    const willChange = this.status !== status;\n    this.isOnline = isOnline;\n    this.status = status;\n\n    if(willChange) {\n      if(this.networkerFactory.onConnectionStatusChange) {\n        this.networkerFactory.onConnectionStatusChange({\n          _: 'networkerStatus',\n          status,\n          dcId: this.dcId,\n          name: this.name,\n          isFileNetworker: this.isFileNetworker,\n          isFileDownload: this.isFileDownload,\n          isFileUpload: this.isFileUpload,\n          retryAt\n        });\n      }\n\n      if(this.isOnline) {\n        this.scheduleRequest();\n      }\n\n      if((this.transport as TcpObfuscated)?.connection) {\n        this.clearPingDelayDisconnect();\n        this.sendPingDelayDisconnect();\n      }\n\n      // this.getNewTimeOffset = true;\n    }\n    /* if(this.onConnectionStatusChange) {\n      this.onConnectionStatusChange(this.isOnline);\n    } */\n  }\n\n  private pushResend(messageId: string, delay = 100) {\n    const value = delay ? Date.now() + delay : 0;\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage.container) {\n      for(const innerMsgId of sentMessage.inner) {\n        this.pendingMessages[innerMsgId] = value;\n      }\n    } else {\n      this.pendingMessages[messageId] = value;\n    }\n\n    if(sentMessage.acked) {\n      this.log.error('pushResend: acked message?', sentMessage);\n    }\n\n    if(this.debug) {\n      this.log.debug('pushResend:', messageId, sentMessage, this.pendingMessages, delay);\n    }\n\n    this.scheduleRequest(delay);\n  }\n\n  // * correct, fully checked\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\n    const x = isOut ? 0 : 8;\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\n\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256', msgKeyLargePlain);\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\n    return msgKey;\n  };\n\n  // * correct, fully checked\n  private getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\n    const x = isOut ? 0 : 8;\n    const sha2aText = new Uint8Array(52);\n    const sha2bText = new Uint8Array(52);\n    const promises: Array<Promise<Uint8Array>> = [];\n\n    sha2aText.set(msgKey, 0);\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2aText));\n\n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\n    sha2bText.set(msgKey, 36);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2bText));\n\n    return Promise.all(promises).then((results) => {\n      const aesKey = new Uint8Array(32);\n      const aesIv = new Uint8Array(32);\n      const sha2a = new Uint8Array(results[0]);\n      const sha2b = new Uint8Array(results[1]);\n\n      aesKey.set(sha2a.subarray(0, 8));\n      aesKey.set(sha2b.subarray(8, 24), 8);\n      aesKey.set(sha2a.subarray(24, 32), 24);\n\n      aesIv.set(sha2b.subarray(0, 8));\n      aesIv.set(sha2a.subarray(8, 24), 8);\n      aesIv.set(sha2b.subarray(24, 32), 24);\n\n      return [aesKey, aesIv];\n    });\n  }\n\n  public isStopped() {\n    return this.networkerFactory.akStopped && !this.isFileNetworker;\n  }\n\n  private performScheduledRequest() {\n    if(this.isStopped()) {\n      return false;\n    }\n\n    if(this.pendingAcks.length) {\n      const ackMsgIds = this.pendingAcks.slice();\n\n      // this.log('acking messages', ackMsgIDs)\n      this.wrapMtpMessage({\n        _: 'msgs_ack',\n        msg_ids: ackMsgIds\n      }, {\n        notContentRelated: true,\n        noSchedule: true\n      });\n    }\n\n    const pendingResendReqLength = this.pendingResendReq.length;\n    if(pendingResendReqLength) {\n      const options: MTMessageOptions = {...RESEND_OPTIONS};\n      const msgIds = this.pendingResendReq.splice(0, pendingResendReqLength);\n      this.wrapMtpMessage({\n        _: 'msg_resend_req',\n        msg_ids: msgIds\n      }, options);\n\n      this.log('resend: resending requests', options.messageId, msgIds);\n      /* this.lastResendReq = {\n        reqMsgId: options.messageId,\n        msgIds: msgIds\n      }; */\n\n      // this.pendingResendReq.length = 0;\n    }\n\n    // if(this.pendingResendAnsReq.length) {\n    //   const options: MTMessageOptions = {...RESEND_OPTIONS};\n    //   const msgIds = this.pendingResendAnsReq.slice();\n    //   this.wrapMtpMessage({\n    //     _: 'msg_resend_ans_req',\n    //     msg_ids: msgIds\n    //   }, options);\n\n    //   this.log('resend: requesting answers', options.messageId, msgIds);\n    //   this.lastResendAnsReq = {\n    //     reqMsgId: options.messageId,\n    //     msgIds: msgIds\n    //   };\n\n    //   // this.pendingResendAnsReq.length = 0;\n    // }\n\n    let outMessage: MTMessage;\n    const messages: typeof outMessage[] = [];\n\n    // const currentTime = Date.now();\n    let messagesByteLen = 0;\n\n                           \n    let hasApiCall = false;\n    let hasHttpWait = false;\n             \n\n    let lengthOverflow = false;\n\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\n    for(const messageId of keys) {\n      // const value = this.pendingMessages[messageId];\n\n      // if(!value || value <= currentTime) {\n      const message = this.sentMessages[messageId];\n      if(message && message.body) {\n        /* if(message.fileUpload) {\n            this.log('performScheduledRequest message:', message, message.body.length, (message.body as Uint8Array).byteLength, (message.body as Uint8Array).buffer.byteLength);\n          } */\n\n        const messageByteLength = message.body.length + 32;\n\n        if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\n          this.log.warn('lengthOverflow', message, messages);\n          lengthOverflow = true;\n\n          if(outMessage) { // if it's not a first message\n            break;\n          }\n        }\n\n        messages.push(message);\n        messagesByteLen += messageByteLength;\n\n                               \n        if(message.isAPI) {\n          hasApiCall = true;\n        } else if(message.longPoll) {\n          hasHttpWait = true;\n        }\n                 \n\n        outMessage = message;\n      } else {\n        // this.log(message, messageId)\n      }\n\n      delete this.pendingMessages[messageId];\n      // }\n    }\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      if(hasApiCall && !hasHttpWait) {\n        const serializer = new TLSerialization({mtproto: true});\n        serializer.storeMethod('http_wait', {\n          max_delay: 500,\n          wait_after: 150,\n          max_wait: 3000\n        });\n\n        messages.push({\n          msg_id: this.timeManager.generateId(),\n          seq_no: this.generateSeqNo(),\n          body: serializer.getBytes(true)\n        });\n      }\n             \n\n    if(!messages.length) {\n      // this.log('no scheduled messages')\n      return;\n    }\n\n                           \n    const noResponseMsgs: Array<string> = messages.filter((message) => message.noResponse).map((message) => message.msg_id);\n             \n\n    if(messages.length > 1) {\n      const container = this.generateContainerMessage(messagesByteLen, messages);\n      outMessage = container.messageWithBody;\n\n      this.sentMessages[outMessage.msg_id] = container.message;\n    } else {\n      this.sentMessages[outMessage.msg_id] = outMessage;\n    }\n\n    this.pendingAcks = [];\n\n    const promise = this.sendEncryptedRequest(outMessage);\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\n             \n\n                         \n                           \n    if(!(this.transport instanceof HTTP))\n             \n      this.cleanupSent(); // ! WARNING\n             \n\n    if(lengthOverflow) {\n      this.scheduleRequest();\n    }\n  }\n\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\n    const container = new TLSerialization({\n      mtproto: true,\n      startMaxLength: messagesByteLen + 64\n    });\n\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\n    container.storeInt(messages.length, 'CONTAINER[count]');\n\n    const innerMessages: string[] = [];\n    messages.forEach((message, i) => {\n      innerMessages.push(message.msg_id);\n      // this.log('Pushing to container:', message.msg_id);\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\n    });\n\n    const message: MTMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      container: true,\n      inner: innerMessages\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log.warn('Container', innerMessages, message.msg_id, message.seq_no);\n    }\n\n    return {\n      message,\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message)\n    };\n  }\n\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\n    const keyIv = await this.getAesKeyIv(msgKey, true);\n    // this.log('after msg key iv')\n\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\n    // this.log('Finish encrypt')\n\n    return {\n      bytes: encryptedBytes,\n      msgKey\n    };\n  }\n\n  private getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\n    // this.log('get decrypted start')\n    return this.getAesKeyIv(msgKey, false).then((keyIv) => {\n      // this.log('after msg key iv')\n      return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\n    });\n  }\n\n  private getEncryptedOutput(message: MTMessage) {\n    /* if(DEBUG) {\n      this.log.debug('Send encrypted', message, this.authKeyId);\n    } */\n    /* if(!this.isOnline) {\n      this.log('trying to send message when offline:', Object.assign({}, message));\n      //debugger;\n    } */\n\n    const data = new TLSerialization({\n      startMaxLength: message.body.length + 2048\n    });\n\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\n\n    data.storeLong(message.msg_id, 'message_id');\n    data.storeInt(message.seq_no, 'seq_no');\n\n    data.storeInt(message.body.length, 'message_data_length');\n    data.storeRawBytes(message.body, 'message_data');\n\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\n    const desSalt = des.fetchLong();\n    const desSessionId = des.fetchLong();\n\n    if(!this.isOnline) {\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\n    } */\n\n    /* const messageDataLength = message.body.length;\n    let canBeLength = 0; // bytes\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 4;\n    canBeLength += 4;\n    canBeLength += message.body.length; */\n\n    const dataBuffer = data.getBuffer();\n\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\n    } */\n\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\n    const padding = /* (message as any).padding ||  */randomize(new Uint8Array(paddingLength))/* .fill(0) */;\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\n\n    // (message as any).padding = padding;\n\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\n\n    /* if(dataWithPadding.byteLength % 16) {\n      this.log.error('aaa', dataWithPadding, paddingLength);\n    }\n\n    if(message.fileUpload) {\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\n    } */\n\n    // * full next block is correct\n    return this.getEncryptedMessage(dataWithPadding).then((encryptedResult) => {\n      /* if(DEBUG) {\n        this.log('Got encrypted out message', encryptedResult);\n      } */\n\n      const request = new TLSerialization({\n        startMaxLength: encryptedResult.bytes.length + 256\n      });\n      request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\n\n      const requestData = request.getBytes(true);\n\n      // if(this.isFileNetworker) {\n      //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\n      //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\n      //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\n      //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\n      // }\n\n      return requestData;\n    });\n  }\n\n  private async sendEncryptedRequest(message: MTMessage) {\n    const requestData = await this.getEncryptedOutput(message);\n\n    if(!this.transport) {\n      this.log.error('trying to send something when offline', this.transport, this);\n    }\n\n    this.debug && this.log.debug('sending:', message, [message.msg_id].concat(message.inner || []), requestData.length);\n    const promise: Promise<Uint8Array> = this.transport ? this.transport.send(requestData) as any : Promise.reject({});\n    // this.debug && this.log.debug('sendEncryptedRequest: launched message into space:', message, promise);\n\n                            \n                   \n            \n\n                         \n    if(!(this.transport instanceof HTTP)) return promise;\n             \n\n    const baseError: ApiError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE',\n      // @ts-ignore\n      transport: this.transport\n    };\n\n    return promise.then((result) => {\n      if(!result?.byteLength) {\n        throw baseError;\n      }\n\n      // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\n      return result;\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          type: 'NETWORK_BAD_REQUEST',\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n             \n  }\n\n  public parseResponse(responseBuffer: Uint8Array) {\n    // const perf = performance.now();\n    /* if(this.debug) {\n      this.log.debug('Start parsing response', responseBuffer);\n    } */\n\n    this.lastResponseTime = Date.now();\n\n    const deserializer = new TLDeserialization(responseBuffer);\n\n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\n      throw new Error('[MT] Invalid server auth_key_id: ' + bytesToHex(authKeyId));\n    }\n\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\n\n    return this.getDecryptedMessage(msgKey, encryptedData).then((dataWithPadding) => {\n      // this.log('after decrypt')\n      return this.getMsgKey(dataWithPadding, false).then((calcMsgKey) => {\n        if(!bytesCmp(msgKey, calcMsgKey)) {\n          this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\n          this.updateSession(); // fix 28.01.2020\n          throw new Error('[MT] server msgKey mismatch, updating session');\n        }\n        // this.log('after msgKey check')\n\n        let deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\n\n        /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\n        const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\n        const messageId = deserializer.fetchLong('message_id');\n\n        if(!bytesCmp(sessionId, this.sessionId) &&\n          (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\n          this.log.warn('Sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\n          // this.updateSession();\n          // this.sessionID = sessionID;\n          throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\n        }\n\n        const seqNo = deserializer.fetchInt('seq_no');\n\n        const totalLength = dataWithPadding.byteLength;\n\n        const messageBodyLength = deserializer.fetchInt('message_data[length]');\n        let offset = deserializer.getOffset();\n\n        if((messageBodyLength % 4) ||\n          messageBodyLength > totalLength - offset) {\n          throw new Error('[MT] Invalid body length: ' + messageBodyLength);\n        }\n        const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\n\n        offset = deserializer.getOffset();\n        const paddingLength = totalLength - offset;\n        if(paddingLength < 12 || paddingLength > 1024) {\n          throw new Error('[MT] Invalid padding length: ' + paddingLength);\n        }\n\n        // let buffer = bytesToArrayBuffer(messageBody);\n        deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\n          mtproto: true,\n          override: {\n            mt_message: (result: any, field: string) => {\n              result.msg_id = deserializer.fetchLong(field + '[msg_id]');\n              result.seqno = deserializer.fetchInt(field + '[seqno]');\n              result.bytes = deserializer.fetchInt(field + '[bytes]');\n\n              const offset = deserializer.getOffset();\n\n              // self.log('mt_message!!!!!', result, field);\n\n              try {\n                result.body = deserializer.fetchObject('Object', field + '[body]');\n              } catch(e) {\n                this.log.error('parse error', (e as Error).message, (e as Error).stack);\n                result.body = {\n                  _: 'parse_error',\n                  error: e\n                };\n              }\n\n              if(deserializer.getOffset() !== offset + result.bytes) {\n                // console.warn(dT(), 'set offset', this.offset, offset, result.bytes)\n                // this.log(result)\n                deserializer.setOffset(offset + result.bytes);\n              }\n              // this.log('override message', result)\n            },\n            mt_rpc_result: (result: any, field: any) => {\n              result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\n\n              const sentMessage = this.sentMessages[result.req_msg_id];\n              const type = sentMessage && sentMessage.resultType || 'Object';\n\n              if(result.req_msg_id && !sentMessage) {\n                // console.warn(dT(), 'Result for unknown message', result);\n                return;\n              }\n\n              // deserializer.setMtproto(false);\n              result.result = deserializer.fetchObject(type, field + '[result]');\n              // deserializer.setMtproto(true);\n              // self.log(dT(), 'override rpc_result', sentMessage, type, result);\n            }\n          }\n        });\n\n        const response = deserializer.fetchObject('', 'INPUT');\n        // this.log.error('Parse response time:', performance.now() - perf);\n        return {\n          response,\n          messageId,\n          sessionId,\n          seqNo\n        };\n      });\n    });\n  }\n\n  private applyServerSalt(newServerSalt: string) {\n    const serverSalt = longToBytes(newServerSalt);\n\n    sessionStorage.set({\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\n    });\n\n    this.serverSalt = new Uint8Array(serverSalt);\n  }\n\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой)\n  public scheduleRequest(delay?: number) {\n    /* if(!this.isOnline) {\n      return;\n    } */\n\n                           \n                         \n    if(this.transport instanceof HTTP) {\n             \n      if(this.offline) {\n        this.checkConnection('forced schedule');\n      }\n\n      delay ||= 0; // set zero timeout to pack other messages too\n                         \n    }\n             \n             \n\n    const nextReq = Date.now() + (delay || 0);\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\n      // this.debug && this.log('scheduleRequest: nextReq', this.nextReq, nextReq);\n      return;\n    }\n\n    // this.debug && this.log('scheduleRequest: delay', delay);\n\n    /* if(this.nextReqTimeout) {\n      return;\n    } */\n\n    // const perf = performance.now();\n    if(this.nextReqTimeout) {\n      clearTimeout(this.nextReqTimeout);\n    }\n\n    const cb = () => {\n      // this.debug && this.log('scheduleRequest: timeout delay was:', performance.now() - perf);\n\n      this.nextReqTimeout = 0;\n      this.nextReq = 0;\n\n                             \n                           \n      if(this.transport instanceof HTTP)\n               \n        if(this.offline) {\n        // this.log('Cancel scheduled');\n          return;\n        }\n               \n\n      this.performScheduledRequest();\n    };\n\n    this.nextReq = nextReq;\n\n    if(delay !== undefined) {\n      this.nextReqTimeout = ctx.setTimeout(cb, delay);\n    } else {\n      cb();\n    }\n  }\n\n  private ackMessage(msgId: MTLong) {\n    // this.log('ack message', msgID)\n    this.pendingAcks.push(msgId);\n\n    let delay: number;\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      delay = 30000;\n             \n\n    this.scheduleRequest(delay);\n  }\n\n  private reqResend(msgId: MTLong/* , isAnswer?: boolean */) {\n    if(this.debug) {\n      this.log.debug('Req resend', msgId/* , isAnswer */);\n    }\n\n    // (isAnswer ? this.pendingResendAnsReq : this.pendingResendReq).push(msgId);\n    this.pendingResendReq.push(msgId);\n    this.scheduleRequest(100);\n  }\n\n  public cleanupSent() {\n    let notEmpty = false;\n    const sentMessages = this.sentMessages;\n    // this.log('clean start', this.dcId/*, sentMessages*/)\n    Object.keys(sentMessages).forEach((msgId) => {\n      const message = sentMessages[msgId];\n\n      // this.log('clean iter', msgID, message)\n      if(message.notContentRelated && this.pendingMessages[msgId] === undefined) {\n        // this.log('clean notContentRelated', msgID)\n        delete sentMessages[msgId];\n      } else if(message.container) {\n        for(const innerMsgId of message.inner) {\n          if(sentMessages[innerMsgId] !== undefined) {\n            // this.log('clean failed, found', msgID, message.inner[i], sentMessages[message.inner[i]].seq_no)\n            notEmpty = true;\n            return;\n          }\n        }\n        // this.log('clean container', msgID)\n        delete sentMessages[msgId];\n      } else {\n        notEmpty = true;\n      }\n    });\n\n    return !notEmpty;\n  }\n\n  private processMessageAck(messageId: Long) {\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage && !sentMessage.acked) {\n      // delete sentMessage.body;\n      sentMessage.acked = true;\n    }\n  }\n\n  private processError(rawError: {error_message: string, error_code: number}): ApiError {\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\n    rawError.error_code = rawError.error_code;\n\n    return {\n      code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\n      type: matches[1] as any || 'UNKNOWN',\n      description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\n      originalError: rawError\n    };\n  }\n\n  /**\n   * * только для сокета\n   * TODO: consider about containers resend\n   */\n  public resend() {\n    const sentMessages = this.sentMessages;\n    for(const id in sentMessages) {\n      const msg = sentMessages[id];\n      if(msg.body || msg.container) {\n        this.pushResend(id);\n      }\n    }\n\n    if((this.transport as TcpObfuscated).connection) {\n      this.clearPingDelayDisconnect();\n      this.sendPingDelayDisconnect();\n    }\n  }\n\n  /* public requestMessageStatus() {\n    const ids: string[] = [];\n    for(const id in this.sentMessages) {\n      const message = this.sentMessages[id];\n      if(message.isAPI && message.fileUpload) {\n        ids.push(message.msg_id);\n      }\n    }\n\n    this.wrapMtpMessage({\n      _: 'msgs_state_req',\n      msg_ids: ids\n    }, {\n      notContentRelated: true\n    }).then((res) => {\n      this.log('status', res);\n    });\n  } */\n\n  private applyServerTime(messageId: string) {\n    const serverTime = bigInt(messageId).shiftRight(32).toJSNumber();\n    this.log('applying server time', serverTime);\n    return this.timeManager.applyServerTime(serverTime);\n  }\n\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[]) {\n    if(message._ === 'messageEmpty') {\n      this.log.warn('processMessage: messageEmpty', message, messageId);\n      return;\n    }\n\n    // messageId = messageId.toString();\n\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\n    if(msgidInt % 2) {\n      this.log.warn('Server even message id: ', messageId, message);\n      return;\n    }\n\n    if(this.debug) {\n      this.log.debug('process message', message, messageId);\n    }\n\n    if(this.pingDelayDisconnectDeferred) {\n      this.pingDelayDisconnectDeferred.resolve('any message');\n    }\n\n    // let changedTimeOffset: boolean;\n    // if(this.getNewTimeOffset) {\n    //   changedTimeOffset = this.applyServerTime(messageId);\n    //   this.getNewTimeOffset = undefined;\n    // }\n\n    switch(message._) {\n      case 'msg_container': {\n        for(const innerMessage of message.messages) {\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\n        }\n\n        break;\n      }\n\n      case 'bad_server_salt': {\n        this.log('Bad server salt', message);\n\n        this.applyServerSalt(message.new_server_salt);\n\n        if(this.sentMessages[message.bad_msg_id]) {\n          this.pushResend(message.bad_msg_id);\n        }\n\n        this.ackMessage(messageId);\n\n        // simulate disconnect\n        /* try {\n          this.log('networker state:', this);\n          // @ts-ignore\n          this.transport.ws.close(1000);\n        } catch(err) {\n          this.log.error('transport', this.transport, err);\n        } */\n\n        break;\n      }\n\n      case 'bad_msg_notification': {\n        this.log.error('Bad msg notification', message);\n\n        switch(message.error_code) {\n          case 16:    // * msg_id too low\n          case 17:    // * msg_id too high\n          case 32:    // * msg_seqno too low\n          case 33:    // * msg_seqno too high\n          case 64: {  // * invalid container\n            // if(changedTimeOffset === undefined) {\n            //   changedTimeOffset = this.applyServerTime(messageId);\n            // }\n\n            const changedTimeOffset = this.applyServerTime(messageId);\n            if(message.error_code === 17 || changedTimeOffset) {\n              this.log('Update session');\n              this.updateSession();\n            }\n\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\n            if(badMessage) this.pushResend(badMessage.msg_id); // fix 23.01.2020\n            // this.ackMessage(messageId);\n          }\n\n          // * invalid container\n          /* case 64: {\n            const badMessage = this.sentMessages[message.bad_msg_id];\n            if(badMessage) {\n              for(const msgId of badMessage.inner) {\n                if(this.sentMessages[msgId] !== undefined) {\n                  this.updateSentMessage\n                }\n              }\n              const inner = badMessage.inner;\n            }\n          } */\n        }\n\n        break;\n      }\n\n      case 'message': {\n        if(this.lastServerMessages.indexOf(messageId) !== -1) {\n          // console.warn('[MT] Server same messageId: ', messageId)\n          this.ackMessage(messageId);\n          return;\n        }\n\n        this.lastServerMessages.push(messageId);\n        if(this.lastServerMessages.length > 100) {\n          this.lastServerMessages.shift();\n        }\n\n        this.processMessage(message.body, message.msg_id, sessionId);\n        break;\n      }\n\n      case 'new_session_created': {\n        this.ackMessage(messageId);\n\n        if(this.debug) {\n          this.log.debug('new_session_created', message);\n        }\n        // this.updateSession();\n\n        this.processMessageAck(message.first_msg_id);\n        this.applyServerSalt(message.server_salt);\n\n        sessionStorage.get('dc').then((baseDcId) => {\n          if(baseDcId === this.dcId && !this.isFileNetworker && this.networkerFactory.updatesProcessor) {\n            this.networkerFactory.updatesProcessor(message);\n          }\n        });\n        break;\n      }\n\n      case 'msgs_ack': {\n        for(const msgId of message.msg_ids) {\n          this.processMessageAck(msgId);\n        }\n\n        break;\n      }\n\n      case 'msg_detailed_info': {\n        const sentMessage = this.sentMessages[message.msg_id];\n        if(!sentMessage) {\n          this.ackMessage(message.answer_msg_id);\n          break;\n        }/*  else if(sentMessage.acked) {\n          this.reqResend(message.answer_msg_id, true);\n        }\n\n        break; */\n      }\n\n      case 'msg_new_detailed_info': {\n        if(this.pendingAcks.indexOf(message.answer_msg_id) !== -1) {\n          break;\n        }\n\n        this.reqResend(message.answer_msg_id);\n        break;\n      }\n\n      case 'msgs_state_info': {\n        this.ackMessage(message.answer_msg_id);\n        const arr = [\n          [this.lastResendReq, this.pendingResendReq] as const\n          // [this.lastResendAnsReq, this.pendingResendAnsReq] as const\n        ];\n\n        for(const [lastResend, pendingResend] of arr) {\n          if(lastResend?.reqMsgId === message.req_msg_id && pendingResend.length) {\n            for(const badMsgId of lastResend.msgIds) {\n              const pos = pendingResend.indexOf(badMsgId);\n              if(pos !== -1) {\n                pendingResend.splice(pos, 1);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 'rpc_result': {\n        this.ackMessage(messageId);\n\n        const sentMessageId = message.req_msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        // if(this.debug) {\n        //   this.log.debug('Rpc response', message.result, sentMessage);\n        // }\n\n        this.processMessageAck(sentMessageId);\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          if(message.result._ === 'rpc_error') {\n            const error = this.processError(message.result);\n            this.log('Rpc error', error);\n            if(deferred) {\n              deferred.reject(error);\n            }\n          } else {\n            if(deferred) {\n              deferred.resolve(message.result);\n            }\n\n            if(sentMessage.isAPI && !this.connectionInited) {\n              this.connectionInited = true;\n            }\n          }\n\n          delete this.sentMessages[sentMessageId];\n        } else {\n          if(this.debug) {\n            this.log('Rpc result for unknown message:', sentMessageId, message);\n          }\n        }\n\n        break;\n      }\n\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\n        /* const sentMessageId = message.msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        if(sentMessage) {\n          sentMessage.deferred.resolve(message);\n          delete this.sentMessages[sentMessageId];\n        } */\n        const pingId = message.ping_id;\n        if(this.lastPingDelayDisconnectId === pingId) {\n          this.pingDelayDisconnectDeferred.resolve('pong');\n        }\n\n        break;\n      }\n\n      default:\n        this.ackMessage(messageId);\n\n        /* if(this.debug) {\n          this.log.debug('Update', message);\n        } */\n\n        if(this.networkerFactory.updatesProcessor !== null) {\n          this.networkerFactory.updatesProcessor(message);\n        }\n        break;\n    }\n  }\n}\n","import bigInt from 'big-integer';\n\nexport default function sortLongsArray(arr: string[]) {\n  return arr.map((long) => {\n    return bigInt(long);\n  }).sort((a, b) => {\n    return a.compare(b);\n  }).map((bigInt) => {\n    return bigInt.toString(10);\n  });\n}\n","import addPadding from '../bytes/addPadding';\nimport bigInt from 'big-integer';\nimport {bigIntToBytes} from '../bigInt/bigIntConversion';\n\nexport default function longToBytes(sLong: string) {\n  const bigIntBytes = bigIntToBytes(bigInt(sLong)).reverse();\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\n  // console.log('longToBytes', bytes, bigIntBytes);\n\n  return bytes;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ConnectionStatusChange} from './connectionStatus';\r\nimport MTPNetworker from './networker';\r\nimport {InvokeApiOptions} from '../../types';\r\nimport App from '../../config/app';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport class NetworkerFactory extends AppManager {\r\n  private networkers: MTPNetworker[] = [];\r\n  public language = navigator.language || App.langPackCode;\r\n  public updatesProcessor: (obj: any) => void = null;\r\n  // public onConnectionStatusChange: (status: ConnectionStatusChange) => void = null;\r\n  public akStopped = false;\r\n\r\n  public onConnectionStatusChange(status: ConnectionStatusChange) {\r\n    this.rootScope.dispatchEvent('connection_status_change', status);\r\n    //  ({type: 'connectionStatusChange', payload: status});\r\n  }\r\n\r\n  public removeNetworker(networker: MTPNetworker) {\r\n    indexOfAndSplice(this.networkers, networker);\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\r\n    // console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\r\n    const networker = new MTPNetworker(this, this.timeManager, dcId, authKey, authKeyId, serverSalt, options);\r\n    this.networkers.push(networker);\r\n    return networker;\r\n  }\r\n\r\n  public startAll() {\r\n    if(this.akStopped) {\r\n      const stoppedNetworkers = this.networkers.filter((networker) => networker.isStopped());\r\n\r\n      this.akStopped = false;\r\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\r\n\r\n      for(const networker of stoppedNetworkers) {\r\n        networker.scheduleRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  public stopAll() {\r\n    this.akStopped = true;\r\n  }\r\n\r\n  public setLanguage(langCode: string) {\r\n    this.language = langCode;\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.connectionInited = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public unsetConnectionInited() {\r\n    for(const networker of this.networkers) {\r\n      networker.connectionInited = false;\r\n    }\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    for(const networker of this.networkers) {\r\n      networker.forceReconnectTimeout();\r\n    }\r\n  }\r\n\r\n  public forceReconnect() {\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.forceReconnect();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {TLSerialization} from './tl_utils';\r\nimport cryptoWorker from '../crypto/cryptoMessagePort';\r\nimport Modes from '../../config/modes';\r\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport bigInt from 'big-integer';\r\n\r\nexport type RSAPublicKeyHex = {\r\n  modulus: string,\r\n  exponent: string\r\n};\r\n\r\nexport class RSAKeysManager {\n  /**\r\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\r\n   *\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\r\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\r\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\r\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\r\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\r\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\r\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\r\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\r\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\r\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\r\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   * Bytes can be got via\r\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\r\n   * $ openssl rsa -pubin -in pub.pem -text -noout\r\n   */\r\n\r\n  /* private publisKeysHex = [{\r\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\r\n    exponent: '010001'\r\n  }]; */\r\n\r\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\r\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publisKeysHex: RSAPublicKeyHex[] = [{\r\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publicKeysParsed: {\r\n    [hex: string]: RSAPublicKeyHex\r\n  } = {};\r\n  private prepared = false;\r\n  private preparePromise: Promise<void> = null;\r\n\r\n  constructor() {\r\n    if(Modes.test) {\r\n      this.publisKeysHex = this.testPublicKeysHex;\r\n    }\r\n  }\r\n\r\n  public prepare(): Promise<void> {\r\n    if(this.preparePromise) return this.preparePromise;\r\n    else if(this.prepared) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this.preparePromise = Promise.all(this.publisKeysHex.map((keyParsed) => {\r\n      const RSAPublicKey = new TLSerialization();\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\r\n\r\n      const buffer = RSAPublicKey.getBuffer();\r\n\r\n      return cryptoWorker.invokeCrypto('sha1', buffer).then((bytes) => {\r\n        const fingerprintBytes = bytes.slice(-8);\r\n        fingerprintBytes.reverse();\r\n\r\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\r\n          modulus: keyParsed.modulus,\r\n          exponent: keyParsed.exponent\r\n        };\r\n      });\r\n    })).then(() => {\r\n      this.prepared = true;\r\n\r\n      // console.log('[MT] Prepared keys');\r\n      this.preparePromise = null;\r\n    });\r\n  }\r\n\r\n  public async select(fingerprints: Array<string>) {\r\n    await this.prepare();\r\n\r\n    for(let i = 0; i < fingerprints.length; ++i) {\r\n      let fingerprintHex = bigInt(fingerprints[i]).toString(16).toLowerCase();\r\n\r\n      if(fingerprintHex.length < 16) {\r\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\r\n      }\r\n\r\n      // console.log(fingerprintHex, this.publicKeysParsed);\r\n      const foundKey = this.publicKeysParsed[fingerprintHex];\r\n      if(foundKey) {\r\n        return Object.assign({\r\n          fingerprint: fingerprints[i]\r\n        }, foundKey);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RSAKeysManager();\r\n","export default function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\n  const len = bytes1.length;\n  const bytes = new Uint8Array(len);\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = bytes1[i] ^ bytes2[i];\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                   \nimport transportController from './transports/controller';\n         \n\nimport {TLSerialization, TLDeserialization} from './tl_utils';\nimport {TransportType} from './dcConfigurator';\nimport rsaKeysManager from './rsaKeysManager';\n\nimport CryptoWorker from '../crypto/cryptoMessagePort';\n\nimport {logger, LogTypes} from '../logger';\nimport DEBUG from '../../config/debug';\nimport {Awaited, DcId} from '../../types';\nimport addPadding from '../../helpers/bytes/addPadding';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport bytesXor from '../../helpers/bytes/bytesXor';\nimport {bigIntFromBytes} from '../../helpers/bigInt/bigIntConversion';\nimport bigInt from 'big-integer';\nimport randomize from '../../helpers/array/randomize';\nimport {AppManager} from '../appManagers/manager';\n\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\n\nfNewNonce = false;\nfNonce = false;\nfResult = false; */\n\ntype AuthOptions = {\n  dcId: number,\n  nonce: Uint8Array,\n\n  serverNonce?: Uint8Array,\n  pq?: Uint8Array,\n  fingerprints?: string[],\n  publicKey?: {\n    modulus: string,\n    exponent: string,\n    fingerprint: string\n  },\n\n  // good\n  p?: Uint8Array,\n  q?: Uint8Array,\n\n  newNonce?: Uint8Array,\n\n  retry?: number,\n\n  b?: Uint8Array,\n  g?: number,\n  gA?: Uint8Array,\n  dhPrime?: Uint8Array,\n\n  tmpAesKey?: Uint8Array,\n  tmpAesIv?: Uint8Array,\n\n  authKeyId?: Uint8Array,\n  authKey?: Uint8Array,\n  serverSalt?: Uint8Array,\n\n  localTime?: number,\n  serverTime?: any,\n};\n\ntype ResPQ = {\n  _: 'resPQ';\n  nonce: Uint8Array;\n  pq: Uint8Array;\n  server_nonce: Uint8Array;\n  server_public_key_fingerprints: string[];\n};\n\ntype P_Q_inner_data = {\n  _: 'p_q_inner_data_dc';\n  pq: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  new_nonce: Uint8Array;\n  dc: number;\n};\n\ntype req_DH_params = {\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  public_key_fingerprint: string;\n  encrypted_data: Uint8Array;\n};\n\nexport class Authorizer extends AppManager {\n  private cached: {\n    [dcId: DcId]: Promise<AuthOptions>\n  };\n\n  private log: ReturnType<typeof logger>;\n\n  private transportType: TransportType;\n\n                     \n  private getTransportTypePromise: Promise<void>;\n           \n\n  protected after() {\n    this.cached = {};\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\n  }\n\n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\n    const requestLength = requestArray.byteLength;\n\n    const header = new TLSerialization();\n    header.storeLongP(0, 0, 'auth_key_id');\n    header.storeLong(this.timeManager.generateId(), 'msg_id');\n    header.storeInt(requestLength, 'request_length');\n\n    const headerArray = header.getBytes(true) as Uint8Array;\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\n    resultArray.set(headerArray);\n    resultArray.set(requestArray, headerArray.length);\n\n    const transport = this.dcConfigurator.chooseServer(dcId, 'client', this.transportType);\n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE'\n    };\n\n    if(DEBUG) {\n      this.log('mtpSendPlainRequest: creating requestPromise');\n    }\n\n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\n    return promise.then((result) => {\n      if(DEBUG) {\n        this.log('mtpSendPlainRequest: in good sector', result);\n      }\n\n      if(!result || !result.byteLength) {\n        throw baseError;\n      }\n\n      try {\n        /* result = fResult ? fResult : result;\n        fResult = new Uint8Array(0); */\n\n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\n\n        if(result.length === 4) {\n          const errorCode = deserializer.fetchInt();\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\n          throw errorCode;\n        }\n\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\n\n        const msg_id = deserializer.fetchLong('msg_id');\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\n\n        const msg_len = deserializer.fetchInt('msg_len');\n        if(!msg_len) this.log.error('no msg_len', msg_len);\n\n        return deserializer;\n      } catch(e) {\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\n        const error = Object.assign(baseError, {originalError: e});\n        throw error;\n      }\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n  }\n\n  private async sendReqPQ(auth: AuthOptions) {\n    const request = new TLSerialization({mtproto: true});\n\n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\n\n    if(DEBUG) {\n      this.log('Send req_pq', bytesToHex(auth.nonce));\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\n      rsaKeysManager.prepare();\n      deserializer = await promise;\n    } catch(error) {\n      this.log.error('req_pq error', (error as Error).message);\n      throw error;\n    }\n\n    const response: ResPQ = deserializer.fetchObject('ResPQ');\n\n    if(response._ !== 'resPQ') {\n      throw new Error('[MT] resPQ response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      this.log.error(auth.nonce, response.nonce);\n      throw new Error('[MT] resPQ nonce mismatch');\n    }\n\n    auth.serverNonce = response.server_nonce; // need\n    auth.pq = response.pq;\n    auth.fingerprints = response.server_public_key_fingerprints;\n\n    if(DEBUG) {\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\n    }\n\n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\n    if(!publicKey) {\n      throw new Error('[MT] No public key found');\n    }\n\n    auth.publicKey = publicKey;\n\n    if(DEBUG) {\n      this.log('PQ factorization start', auth.pq);\n    }\n\n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\n    try {\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\n    } catch(error) {\n      this.log.error('worker error factorize', error);\n      throw error;\n    }\n\n    auth.p = pAndQ[0];\n    auth.q = pAndQ[1];\n\n    if(DEBUG) {\n      this.log('PQ factorization done', pAndQ);\n    }\n\n    return this.sendReqDhParams(auth);\n  }\n\n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    auth.newNonce = randomize(new Uint8Array(32));\n\n    const p_q_inner_data_dc: P_Q_inner_data = {\n      _: 'p_q_inner_data_dc',\n      pq: auth.pq,\n      p: auth.p,\n      q: auth.q,\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      new_nonce: auth.newNonce,\n      dc: 0\n    };\n\n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\n\n    const data = pQInnerDataSerialization.getBytes(true);\n    if(data.length > 144) {\n      throw 'DH_params: data is more than 144 bytes!';\n    }\n\n    const dataWithPadding = addPadding(data, 192, false, true, false);\n    const dataPadReversed = dataWithPadding.slice().reverse();\n\n    const getKeyAesEncrypted = async() => {\n      for(;;) {\n        const tempKey = randomize(new Uint8Array(32));\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256', tempKey.concat(dataWithPadding)));\n        if(dataWithHash.length !== 224) {\n          throw 'DH_params: dataWithHash !== 224 bytes!';\n        }\n\n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256', aesEncrypted));\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\n\n        const keyAesEncryptedBigInt = bigIntFromBytes(keyAesEncrypted);\n        const publicKeyModulusBigInt = bigInt(auth.publicKey.modulus, 16);\n\n        if(keyAesEncryptedBigInt.compare(publicKeyModulusBigInt) === -1) {\n          return keyAesEncrypted;\n        }\n      }\n    };\n\n    const keyAesEncrypted = await getKeyAesEncrypted();\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\n\n    const req_DH_params: req_DH_params = {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      p: auth.p,\n      q: auth.q,\n      public_key_fingerprint: auth.publicKey.fingerprint,\n      encrypted_data: encryptedData\n    };\n\n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('req_DH_params', req_DH_params);\n\n    const requestBytes = request.getBytes(true);\n\n    if(DEBUG) {\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\n    } catch(error) {\n      this.log.error('Send req_DH_params FAIL!', error);\n      throw error;\n    }\n\n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\n\n    if(DEBUG) {\n      this.log('Sent req_DH_params, response:', response);\n    }\n\n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\n    }\n\n    if(response._ === 'server_DH_params_fail') {\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce)).slice(-16);\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\n      }\n\n      throw new Error('[MT] server_DH_params_fail');\n    }\n\n    // fill auth object\n    try {\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\n    } catch(e) {\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\n      throw e;\n    }\n\n    // console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\n\n    return this.sendSetClientDhParams(auth);\n  }\n\n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\n    auth.localTime = Date.now();\n\n    // ! can't concat Array with Uint8Array!\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.serverNonce)))\n    .concat((await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\n\n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(12)\n    .concat(await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\n\n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\n\n    const hash = answerWithHash.slice(0, 20);\n    const answerWithPadding = answerWithHash.slice(20);\n\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\n    const response = deserializer.fetchObject('Server_DH_inner_data');\n\n    if(response._ !== 'server_DH_inner_data') {\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\n    }\n\n    if(DEBUG) {\n      this.log('Done decrypting answer');\n    }\n    auth.g = response.g;\n    auth.dhPrime = response.dh_prime;\n    auth.gA = response.g_a;\n    auth.serverTime = response.server_time;\n    auth.retry = 0;\n\n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\n\n    const offset = deserializer.getOffset();\n\n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1', answerWithPadding.slice(0, offset)))) {\n      throw new Error('[MT] server_DH_inner_data SHA1 mismatch');\n    }\n\n    this.timeManager.applyServerTime(auth.serverTime, auth.localTime);\n  }\n\n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\n    if(DEBUG) {\n      this.log('Verifying DH params', g, dhPrime, gA);\n    }\n\n    const dhPrimeHex = bytesToHex(dhPrime);\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\n    }\n\n    if(DEBUG) {\n      this.log('dhPrime cmp OK');\n    }\n\n    const gABigInt = bigIntFromBytes(gA);\n    const dhPrimeBigInt = bigInt(dhPrimeHex, 16);\n\n    if(gABigInt.compare(bigInt.one) <= 0) {\n      throw new Error('[MT] DH params are not verified: gA <= 1');\n    }\n\n    if(gABigInt.compare(dhPrimeBigInt.subtract(bigInt.one)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\n    }\n\n    if(DEBUG) {\n      this.log('1 < gA < dhPrime-1 OK');\n    }\n\n    const twoPow = bigInt(2).pow(2048 - 64);\n\n    if(gABigInt.compare(twoPow) < 0) {\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\n    }\n    if(gABigInt.compare(dhPrimeBigInt.subtract(twoPow)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\n    }\n\n    if(DEBUG) {\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\n    }\n\n    return true;\n  }\n\n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    const gBytes = bytesFromHex(auth.g.toString(16));\n\n    auth.b = randomize(new Uint8Array(256));\n    // MTProto.secureRandom.nextBytes(auth.b);\n\n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\n    try {\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\n    } catch(error) {\n      throw error;\n    }\n\n    const data = new TLSerialization({mtproto: true});\n    data.storeObject({\n      _: 'client_DH_inner_data',\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      retry_id: [0, auth.retry++],\n      g_b: gB\n    }, 'Client_DH_Inner_Data');\n\n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1', data.getBuffer())).concat(data.getBytes(true));\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\n\n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('set_client_DH_params', {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      encrypted_data: encryptedData\n    });\n\n    if(DEBUG) {\n      this.log('Send set_client_DH_params');\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\n    } catch(err) {\n      throw err;\n    }\n\n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\n\n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\n    }\n\n    // let authKey: Uint8Array;\n    try {\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\n    } catch(err) {\n      throw authKey;\n    }\n\n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1', authKey),\n      authKeyAux = authKeyHash.slice(0, 8),\n      authKeyId = authKeyHash.slice(-8);\n\n    if(DEBUG) {\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\n    }\n    switch(response._) {\n      case 'dh_gen_ok': {\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([1], authKeyAux))).slice(-16);\n\n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\n          throw new Error('new_nonce_hash1 mismatch');\n        }\n\n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\n        if(DEBUG) {\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\n        }\n\n        auth.authKeyId = authKeyId;\n        auth.authKey = authKey;\n        auth.serverSalt = serverSalt;\n\n        return auth;\n      }\n\n      case 'dh_gen_retry': {\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([2], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\n        }\n\n        return this.sendSetClientDhParams(auth);\n      }\n\n      case 'dh_gen_fail': {\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([3], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\n        }\n\n        throw new Error('[MT] Set_client_DH_params_answer fail');\n      }\n    }\n  }\n\n                     \n  private getTransportType() {\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\n      this.transportType = websocket ? 'websocket' : 'https';\n      this.log('will use transport:', this.transportType);\n    });\n  }\n           \n\n  public auth(dcId: DcId) {\n    let promise = this.cached[dcId];\n    if(promise) {\n      return promise;\n    }\n\n    promise = new Promise(async(resolve, reject) => {\n                         \n      await this.getTransportType();\n               \n\n      let error: ApiError;\n      let _try = 1;\n      while(_try++ <= 3) {\n        try {\n          const auth: AuthOptions = {\n            dcId,\n            nonce: randomize(new Uint8Array(16))\n          };\n\n          const promise = this.sendReqPQ(auth);\n          resolve(await promise);\n          return;\n        } catch(err) {\n          error = err;\n        }\n      }\n\n      reject(error);\n    });\n\n    return this.cached[dcId] = promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport sessionStorage from '../sessionStorage';\nimport {nextRandomUint} from '../../helpers/random';\nimport {WorkerTaskVoidTemplate} from '../../types';\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\nimport {AppManager} from '../appManagers/manager';\n\n/*\nlet lol: any = {};\nfor(var i = 0; i < 100; i++) {\n    timeManager.generateId();\n}\n*/\n\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\n  type: 'applyServerTimeOffset',\n  payload: TimeManager['timeOffset']\n};\n\nexport class TimeManager extends AppManager {\n  private lastMessageId: [number, number];\n  private timeOffset: number;\n\n  /* private midnightNoOffset: number;\n  private midnightOffseted: Date;\n\n  private midnightOffset: number; */\n\n  /* private timeParams: {\n    midnightOffset: number,\n    serverTimeOffset: number\n  }; */\n\n  protected after() {\n    this.lastMessageId = [0, 0];\n    this.timeOffset = 0;\n\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.timeOffset = to;\n      }\n    });\n\n\n    // * migrated from ServerTimeManager\n    /* const timestampNow = tsNow(true);\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\n    this.midnightOffseted = new Date();\n    this.midnightOffseted.setHours(0, 0, 0, 0);\n\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\n\n    /* this.timeParams = {\n      midnightOffset: this.midnightOffset,\n      serverTimeOffset: this.serverTimeOffset\n    }; */\n  }\n\n  public getServerTimeOffset() {\n    return this.timeOffset;\n  }\n\n  public generateId(): string {\n    const timeTicks = Date.now(),\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\n      timeMSec = timeTicks % 1000,\n      random = nextRandomUint(16);\n\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\n    if(this.lastMessageId[0] > messageId[0] ||\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\n    }\n\n    this.lastMessageId = messageId;\n\n    const ret = ulongFromInts(messageId[0], messageId[1]).toString(10);\n\n    // if(lol[ret]) {\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\n    // }\n    // lol[ret] = true;\n\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\n\n    return ret\n  }\n\n  public applyServerTime(serverTime: number, localTime?: number) {\n    localTime = (localTime || Date.now()) / 1000 | 0;\n    const newTimeOffset = serverTime - localTime;\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\n    this.lastMessageId = [0, 0];\n\n    if(this.timeOffset !== newTimeOffset) {\n      sessionStorage.set({\n        server_time_offset: newTimeOffset\n      });\n\n      this.timeOffset = newTimeOffset;\n    }\n\n    // console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\n\n    return changed;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {DocumentAttribute, WebDocument} from '../../layer';\n\nexport default class AppWebDocsManager {\n  public saveWebDocument(webDocument: WebDocument) {\n    if(!webDocument) {\n      return;\n    }\n\n    const attribute: DocumentAttribute.documentAttributeImageSize = webDocument.attributes.find((attribute) => attribute._ === 'documentAttributeImageSize') as any;\n    if(attribute) {\n      webDocument.w = attribute.w;\n      webDocument.h = attribute.h;\n    }\n\n    return webDocument;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputInvoice, InputPaymentCredentials, PaymentRequestedInfo, PaymentsPaymentForm} from '../../layer';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport default class AppPaymentsManager extends AppManager {\n  public getInputInvoiceBySlug(slug: string): InputInvoice.inputInvoiceSlug {\n    return {\n      _: 'inputInvoiceSlug',\n      slug\n    };\n  }\n\n  public getInputInvoiceByPeerId(peerId: PeerId, mid: number): InputInvoice.inputInvoiceMessage {\n    return {\n      _: 'inputInvoiceMessage',\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    };\n  }\n\n  public getPaymentForm(invoice: InputInvoice) {\n    return this.apiManager.invokeApi('payments.getPaymentForm', {\n      invoice\n    }).then((paymentForm) => {\n      this.appUsersManager.saveApiUsers(paymentForm.users);\n\n      return paymentForm;\n    });\n  }\n\n  public getPaymentReceipt(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApi('payments.getPaymentReceipt', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((paymentForm) => {\n      this.appUsersManager.saveApiUsers(paymentForm.users);\n\n      return paymentForm;\n    });\n  }\n\n  public validateRequestedInfo(invoice: InputInvoice, info: PaymentRequestedInfo, save?: boolean) {\n    return this.apiManager.invokeApi('payments.validateRequestedInfo', {\n      save,\n      invoice,\n      info\n    });\n  }\n\n  public sendPaymentForm(\n    invoice: InputInvoice,\n    formId: PaymentsPaymentForm['form_id'],\n    requestedInfoId: string,\n    shippingOptionId: string,\n    credentials: InputPaymentCredentials,\n    tipAmount?: number\n  ) {\n    return this.apiManager.invokeApi('payments.sendPaymentForm', {\n      form_id: formId,\n      invoice,\n      requested_info_id: requestedInfoId,\n      shipping_option_id: shippingOptionId,\n      credentials,\n      tip_amount: tipAmount || undefined\n    }).then((result) => {\n      if(result._ === 'payments.paymentResult') {\n        this.apiUpdatesManager.processUpdateMessage(result.updates);\n      }\n\n      return result;\n    });\n  }\n\n  public clearSavedInfo(info?: boolean, credentials?: boolean) {\n    return this.apiManager.invokeApi('payments.clearSavedInfo', {\n      info,\n      credentials\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport App from '../../config/app';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport appStateManager from './appStateManager';\r\nimport {AppStoragesManager} from './appStoragesManager';\r\nimport createManagers from './createManagers';\r\n\r\ntype Managers = Awaited<ReturnType<typeof createManagers>>;\r\n\r\nexport class AppManagersManager {\r\n  private managers: Managers | Promise<Managers>;\r\n  private cryptoWorkersURLs: string[];\r\n  private cryptoPortsAttached: number;\r\n  private cryptoPortPromise: CancellablePromise<void>;\r\n\r\n  constructor() {\r\n    this.cryptoWorkersURLs = [];\r\n    this.cryptoPortsAttached = 0;\r\n    this.cryptoPortPromise = deferredPromise();\r\n    this.cryptoPortPromise.then(() => {\r\n      this.cryptoPortPromise = undefined;\r\n    });\r\n  }\r\n\r\n  public start() {\r\n    const port = MTProtoMessagePort.getInstance<false>();\r\n\r\n    port.addEventListener('manager', ({name, method, args}) => {\r\n      return callbackify(this.getManagers(), (managers) => {\r\n        // @ts-ignore\r\n        const manager = managers[name];\r\n        return manager[method].apply(manager, args);\r\n      });\r\n    });\r\n\r\n    port.addEventListener('cryptoPort', (payload, source, event) => {\r\n      const port = event.ports[0];\r\n      if(this.cryptoPortsAttached >= this.cryptoWorkersURLs.length) {\r\n        port.close();\r\n        return;\r\n      }\r\n\r\n      ++this.cryptoPortsAttached;\r\n      cryptoMessagePort.attachPort(port);\r\n      this.cryptoPortPromise?.resolve();\r\n      return;\r\n    });\r\n\r\n    port.addEventListener('createProxyWorkerURLs', (blob) => {\r\n      const length = this.cryptoWorkersURLs.length;\r\n      const maxLength = App.cryptoWorkers;\r\n      if(length) {\r\n        return this.cryptoWorkersURLs;\r\n      }\r\n\r\n      const newURLs = new Array(maxLength - length).fill(undefined).map(() => URL.createObjectURL(blob));\r\n      this.cryptoWorkersURLs.push(...newURLs);\r\n      return newURLs;\r\n    });\r\n  }\r\n\r\n  public async createManagers() {\r\n    const appStoragesManager = new AppStoragesManager();\r\n\r\n    await Promise.all([\r\n      // new Promise(() => {}),\r\n      appStoragesManager.loadStorages(),\r\n      this.cryptoPortPromise\r\n    ]);\r\n\r\n    const managers = await createManagers(appStoragesManager, appStateManager.userId);\r\n    return this.managers = managers;\r\n  }\r\n\r\n  public getManagers() {\r\n    return this.managers ??= this.createManagers();\r\n  }\r\n}\r\n\r\nconst appManagersManager = new AppManagersManager();\r\nexport default appManagersManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {PasswordManager} from '../mtproto/passwordManager';\nimport {ReferenceDatabase} from '../mtproto/referenceDatabase';\nimport DialogsStorage from '../storages/dialogs';\nimport FiltersStorage from '../storages/filters';\nimport {ApiUpdatesManager} from './apiUpdatesManager';\nimport {AppAvatarsManager} from './appAvatarsManager';\nimport {AppCallsManager} from './appCallsManager';\nimport {AppChatsManager} from './appChatsManager';\nimport {AppDocsManager} from './appDocsManager';\nimport {AppDraftsManager} from './appDraftsManager';\nimport {AppEmojiManager} from './appEmojiManager';\nimport {AppGroupCallsManager} from './appGroupCallsManager';\nimport {AppInlineBotsManager} from './appInlineBotsManager';\nimport {AppMessagesIdsManager} from './appMessagesIdsManager';\nimport {AppMessagesManager} from './appMessagesManager';\nimport {AppNotificationsManager} from './appNotificationsManager';\nimport {AppPeersManager} from './appPeersManager';\nimport {AppPhotosManager} from './appPhotosManager';\nimport {AppPollsManager} from './appPollsManager';\nimport {AppPrivacyManager} from './appPrivacyManager';\nimport {AppProfileManager} from './appProfileManager';\nimport {AppReactionsManager} from './appReactionsManager';\nimport {AppStickersManager} from './appStickersManager';\nimport {AppUsersManager} from './appUsersManager';\nimport {AppWebPagesManager} from './appWebPagesManager';\nimport {ApiFileManager} from '../mtproto/apiFileManager';\nimport {ApiManager} from '../mtproto/apiManager';\nimport ctx from '../../environment/ctx';\nimport PeersStorage from '../storages/peers';\nimport ThumbsStorage from '../storages/thumbs';\nimport {NetworkerFactory} from '../mtproto/networkerFactory';\nimport {RootScope} from '../rootScope';\nimport {Authorizer} from '../mtproto/authorizer';\nimport {DcConfigurator} from '../mtproto/dcConfigurator';\nimport {TimeManager} from '../mtproto/timeManager';\nimport {AppStoragesManager} from './appStoragesManager';\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\nimport appStateManager from './appStateManager';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport AppWebDocsManager from './appWebDocsManager';\nimport AppPaymentsManager from './appPaymentsManager';\n\nexport default function createManagers(appStoragesManager: AppStoragesManager, userId: UserId) {\n  const managers = {\n    appPeersManager: new AppPeersManager,\n    appChatsManager: new AppChatsManager,\n    appDocsManager: new AppDocsManager,\n    appPhotosManager: new AppPhotosManager,\n    appPollsManager: new AppPollsManager,\n    appUsersManager: new AppUsersManager,\n    appWebPagesManager: new AppWebPagesManager,\n    appDraftsManager: new AppDraftsManager,\n    appProfileManager: new AppProfileManager,\n    appNotificationsManager: new AppNotificationsManager,\n    apiUpdatesManager: new ApiUpdatesManager,\n    appAvatarsManager: new AppAvatarsManager,\n    appGroupCallsManager: new AppGroupCallsManager,\n    appCallsManager: new AppCallsManager,\n    appReactionsManager: new AppReactionsManager,\n    appMessagesManager: new AppMessagesManager,\n    appMessagesIdsManager: new AppMessagesIdsManager,\n    appPrivacyManager: new AppPrivacyManager,\n    appInlineBotsManager: new AppInlineBotsManager,\n    appStickersManager: new AppStickersManager,\n    referenceDatabase: new ReferenceDatabase,\n    appEmojiManager: new AppEmojiManager,\n    filtersStorage: new FiltersStorage,\n    dialogsStorage: new DialogsStorage,\n    apiManager: new ApiManager,\n    cryptoWorker: cryptoMessagePort,\n    passwordManager: new PasswordManager,\n    apiFileManager: new ApiFileManager,\n    peersStorage: new PeersStorage,\n    thumbsStorage: new ThumbsStorage,\n    networkerFactory: new NetworkerFactory,\n    rootScope: new RootScope,\n    authorizer: new Authorizer,\n    dcConfigurator: new DcConfigurator,\n    timeManager: new TimeManager,\n    appStoragesManager: appStoragesManager,\n    appStateManager: appStateManager,\n    appWebDocsManager: new AppWebDocsManager,\n    appPaymentsManager: new AppPaymentsManager\n  };\n\n  type T = typeof managers;\n\n  for(const name in managers) {\n    const manager = managers[name as keyof T];\n    if(!manager) {\n      continue;\n    }\n\n    if((manager as AppMessagesManager).setManagers) {\n      (manager as AppMessagesManager).setManagers(managers as any);\n      delete (manager as AppMessagesManager).setManagers;\n    }\n\n    // @ts-ignore\n    ctx[name] = manager;\n  }\n\n  const promises: Array<Promise<(() => void) | void> | void>[] = [];\n  let names = Object.keys(managers) as (keyof T)[];\n  names.unshift('appUsersManager', 'appChatsManager', 'appNotificationsManager', 'appMessagesManager', 'dialogsStorage');\n  names = filterUnique(names);\n  for(const name of names) {\n    const manager = managers[name];\n    if((manager as any)?.after) {\n      // console.log('injecting after', name);\n      const result = (manager as any).after();\n      promises.push(result);\n\n      // if(result instanceof Promise) {\n      //   result.then(() => {\n      //     console.log('injected after', name);\n      //   });\n      // }\n    }\n  }\n\n  if(userId) {\n    managers.apiManager.setUserAuth(userId);\n  }\n\n  return Promise.all(promises).then(() => managers);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// just to include\nimport '../polyfill';\nimport '../../helpers/peerIdPolyfill';\n\nimport cryptoWorker from '../crypto/cryptoMessagePort';\nimport {setEnvironment} from '../../environment/utils';\nimport appStateManager from '../appManagers/appStateManager';\nimport transportController from './transports/controller';\nimport MTProtoMessagePort from './mtprotoMessagePort';\nimport RESET_STORAGES_PROMISE from '../appManagers/utils/storages/resetStoragesPromise';\nimport appManagersManager from '../appManagers/appManagersManager';\nimport listenMessagePort from '../../helpers/listenMessagePort';\nimport {logger} from '../logger';\nimport {State} from '../../config/state';\nimport toggleStorages from '../../helpers/toggleStorages';\nimport appTabsManager from '../appManagers/appTabsManager';\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\nimport callbackify from '../../helpers/callbackify';\n\nlet _isServiceWorkerOnline = true;\nexport function isServiceWorkerOnline() {\n  return _isServiceWorkerOnline;\n}\n\nlet serviceMessagePort: ServiceMessagePort<true>, _serviceMessagePort: MessagePort;\nexport function getServiceMessagePort() {\n  return _isServiceWorkerOnline ? serviceMessagePort : undefined;\n}\n\nconst log = logger('MTPROTO');\n// let haveState = false;\n\nconst port = new MTProtoMessagePort<false>();\nport.addMultipleEventsListeners({\n  environment: (environment) => {\n    setEnvironment(environment);\n\n    transportController.waitForWebSocket();\n  },\n\n  crypto: ({method, args}) => {\n    return cryptoWorker.invokeCrypto(method as any, ...args as any);\n  },\n\n  state: ({state, resetStorages, pushedKeys, newVersion, oldVersion, userId}) => {\n    // if(haveState) {\n    //   return;\n    // }\n\n    log('got state', state, pushedKeys);\n\n    appStateManager.userId = userId;\n    appStateManager.newVersion = newVersion;\n    appStateManager.oldVersion = oldVersion;\n\n    (Object.keys(state) as any as (keyof State)[]).forEach((key) => {\n      appStateManager.pushToState(key, state[key], true, !pushedKeys.includes(key));\n    });\n\n    RESET_STORAGES_PROMISE.resolve(resetStorages);\n    // haveState = true;\n  },\n\n  toggleStorages: ({enabled, clearWrite}) => {\n    return toggleStorages(enabled, clearWrite);\n  },\n\n  event: (payload, source) => {\n    log('will redirect event', payload, source);\n    port.invokeExceptSource('event', payload, source);\n  },\n\n  serviceWorkerOnline: (online) => {\n    _isServiceWorkerOnline = online;\n  },\n\n  serviceWorkerPort: (payload, source, event) => {\n    if(serviceMessagePort) {\n      serviceMessagePort.detachPort(_serviceMessagePort);\n      _serviceMessagePort = undefined;\n    } else {\n      serviceMessagePort = new ServiceMessagePort();\n      serviceMessagePort.addMultipleEventsListeners({\n        requestFilePart: (payload) => {\n          return callbackify(appManagersManager.getManagers(), (managers) => {\n            const {docId, dcId, offset, limit} = payload;\n            return managers.appDocsManager.requestDocPart(docId, dcId, offset, limit);\n          });\n        }\n      });\n    }\n\n    // * port can be undefined in the future\n    if(_serviceMessagePort = event.ports[0]) {\n      serviceMessagePort.attachPort(_serviceMessagePort);\n    }\n  },\n\n  createObjectURL: (blob) => {\n    return URL.createObjectURL(blob);\n  }\n\n  // socketProxy: (task) => {\n  //   const socketTask = task.payload;\n  //   const id = socketTask.id;\n\n  //   const socketProxied = socketsProxied.get(id);\n  //   if(socketTask.type === 'message') {\n  //     socketProxied.dispatchEvent('message', socketTask.payload);\n  //   } else if(socketTask.type === 'open') {\n  //     socketProxied.dispatchEvent('open');\n  //   } else if(socketTask.type === 'close') {\n  //     socketProxied.dispatchEvent('close');\n  //     socketsProxied.delete(id);\n  //   }\n  // },\n});\n\nlog('MTProto start');\n\nappManagersManager.start();\nappManagersManager.getManagers();\nappTabsManager.start();\n\n// let sentHello = false;\nlistenMessagePort(port, (source) => {\n  appTabsManager.addTab(source);\n\n  // port.invokeVoid('hello', undefined, source);\n  // if(!sentHello) {\n  //   port.invokeVoid('hello', undefined, source);\n  //   sentHello = true;\n  // }\n}, (source) => {\n  appTabsManager.deleteTab(source);\n});\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type SuperMessagePort from '../lib/mtproto/superMessagePort';\r\nimport ctx from '../environment/ctx';\r\n\r\nexport default function listenMessagePort(\r\n  messagePort: SuperMessagePort<any, any, any>,\r\n  onConnect?: (source: MessageEventSource) => void,\r\n  onDisconnect?: (source: MessageEventSource) => void\r\n) {\r\n  const attachPort = (listenPort: any, sendPort: any) => {\r\n    messagePort.attachListenPort(listenPort);\r\n    sendPort && messagePort.attachSendPort(sendPort);\r\n    onConnect?.(listenPort);\r\n  };\r\n\r\n  messagePort.setOnPortDisconnect(onDisconnect);\r\n\r\n  if(typeof(SharedWorkerGlobalScope) !== 'undefined') {\r\n    (ctx as any as SharedWorkerGlobalScope).addEventListener('connect', (e) => attachPort(e.source, e.source));\r\n  } else if(typeof(ServiceWorkerGlobalScope) !== 'undefined') {\r\n    attachPort(ctx, null);\r\n  } else {\r\n    attachPort(ctx, ctx);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDialogFilter} from '../storages/filters';\r\n\r\n/**\r\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\r\n */\r\nexport type UserAuth = {dcID: number | string, date: number, id: PeerId};\r\nexport type REAL_FOLDER_ID = 0 | 1;\r\n\r\nexport const NULL_PEER_ID: PeerId = 0;\r\nexport const REPLIES_PEER_ID: PeerId = 1271266957;\r\nexport const REPLIES_HIDDEN_CHANNEL_ID: ChatId = 777;\r\nexport const SERVICE_PEER_ID: PeerId = 777000;\r\nexport const MUTE_UNTIL = 0x7FFFFFFF;\r\nexport const BOT_START_PARAM = '';\r\nexport const MAX_FILE_SAVE_SIZE = 20 * 1024 * 1024;\r\n\r\nexport const FOLDER_ID_ALL: REAL_FOLDER_ID = 0;\r\nexport const FOLDER_ID_ARCHIVE: REAL_FOLDER_ID = 1;\r\nexport const REAL_FOLDERS: Set<number> = new Set([FOLDER_ID_ALL, FOLDER_ID_ARCHIVE]);\r\nexport const START_LOCAL_ID = Math.max(...Array.from(REAL_FOLDERS)) + 1 as MyDialogFilter['localId'];\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MessageEntity} from '../../layer';\n\nconst CAN_COMBINE_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityBold',\n  'messageEntityItalic',\n  'messageEntityCode',\n  'messageEntityPre',\n  'messageEntityUnderline',\n  'messageEntityStrike',\n  'messageEntityBlockquote',\n  'messageEntitySpoiler'\n]);\nexport default function combineSameEntities(entities: MessageEntity[]) {\n  // entities = entities.slice();\n  for(let i = 0; i < entities.length; ++i) {\n    const entity = entities[i];\n\n    let nextEntityIdx = -1;\n    do {\n      nextEntityIdx = entities.findIndex((e, _i) => {\n        return CAN_COMBINE_ENTITIES.has(e._) && _i !== i && e._ === entity._ && (e.offset - entity.length) === entity.offset;\n      });\n\n      if(nextEntityIdx !== -1) {\n        const nextEntity = entities[nextEntityIdx];\n        entity.length += nextEntity.length;\n        entities.splice(nextEntityIdx, 1);\n      }\n    } while(nextEntityIdx !== -1);\n  }\n  // return entities;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {PASS_CONFLICTING_ENTITIES} from '.';\nimport {MessageEntity} from '../../layer';\n\nconst SINGLE_ENTITIES: Set<MessageEntity['_']> = new Set(['messageEntityPre', 'messageEntityCode']);\n\nexport default function findConflictingEntity(currentEntities: MessageEntity[], newEntity: MessageEntity) {\n  let singleEnd = -1;\n  return currentEntities.find((currentEntity) => {\n    if(SINGLE_ENTITIES.has(currentEntity._)) {\n      singleEnd = currentEntity.offset + currentEntity.length;\n    }\n\n    if(newEntity.offset < singleEnd && !PASS_CONFLICTING_ENTITIES.has(newEntity._)) {\n      return true;\n    }\n\n    const isConflictingTypes = newEntity._ === currentEntity._ ||\n    (!PASS_CONFLICTING_ENTITIES.has(newEntity._) && !PASS_CONFLICTING_ENTITIES.has(currentEntity._));\n\n    if(!isConflictingTypes) {\n      return false;\n    }\n\n    const isConflictingOffset = newEntity.offset >= currentEntity.offset &&\n      (newEntity.length + newEntity.offset) <= (currentEntity.length + currentEntity.offset);\n\n    return isConflictingOffset;\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport emojiRegExp from '../../vendor/emoji/regex';\nimport {MessageEntity} from '../../layer';\n\nconst EmojiHelper = {\n  emojiMap: (code: string) => { return code; },\n  shortcuts: [] as any,\n  emojis: [] as any\n};\n\nexport const ALPHA_CHARS_REG_EXP = 'a-z' +\n  '\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u00ff' + // Latin-1\n  '\\\\u0100-\\\\u024f' + // Latin Extended A and B\n  '\\\\u0253\\\\u0254\\\\u0256\\\\u0257\\\\u0259\\\\u025b\\\\u0263\\\\u0268\\\\u026f\\\\u0272\\\\u0289\\\\u028b' + // IPA Extensions\n  '\\\\u02bb' + // Hawaiian\n  '\\\\u0300-\\\\u036f' + // Combining diacritics\n  '\\\\u1e00-\\\\u1eff' + // Latin Extended Additional (mostly for Vietnamese)\n  '\\\\u0400-\\\\u04ff\\\\u0500-\\\\u0527' + // Cyrillic\n  '\\\\u2de0-\\\\u2dff\\\\ua640-\\\\ua69f' + // Cyrillic Extended A/B\n  '\\\\u0591-\\\\u05bf\\\\u05c1-\\\\u05c2\\\\u05c4-\\\\u05c5\\\\u05c7' +\n  '\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f4' + // Hebrew\n  '\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41' +\n  '\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4f' + // Hebrew Pres. Forms\n  '\\\\u0610-\\\\u061a\\\\u0620-\\\\u065f\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc' +\n  '\\\\u06de-\\\\u06e8\\\\u06ea-\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff' + // Arabic\n  '\\\\u0750-\\\\u077f\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u08e4-\\\\u08fe' + // Arabic Supplement and Extended A\n  '\\\\ufb50-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb' + // Pres. Forms A\n  '\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc' + // Pres. Forms B\n  '\\\\u200c' + // Zero-Width Non-Joiner\n  '\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e' + // Thai\n  '\\\\u1100-\\\\u11ff\\\\u3130-\\\\u3185\\\\uA960-\\\\uA97F\\\\uAC00-\\\\uD7AF\\\\uD7B0-\\\\uD7FF' + // Hangul (Korean)\n  '\\\\u3003\\\\u3005\\\\u303b' + // Kanji/Han iteration marks\n  '\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a' + // full width Alphabet\n  '\\\\uff66-\\\\uff9f' + // half width Katakana\n  '\\\\uffa1-\\\\uffdc'; // half width Hangul (Korean)\nexport const ALPHA_NUMERIC_REG_EXP = '0-9\\_' + ALPHA_CHARS_REG_EXP;\nexport const DOMAIN_ADD_CHARS = '\\u00b7';\n// Based on Regular Expression for URL validation by Diego Perini\nexport const URL_ALPHANUMERIC_REG_EXP_PART = '[' + ALPHA_CHARS_REG_EXP + '0-9]';\nexport const URL_PROTOCOL_REG_EXP_PART = '((?:https?|ftp)://|mailto:)?';\nexport const URL_REG_EXP = URL_PROTOCOL_REG_EXP_PART +\n  // user:pass authentication\n  '(?:' + URL_ALPHANUMERIC_REG_EXP_PART + '{1,64}(?::' + URL_ALPHANUMERIC_REG_EXP_PART + '{0,64})?@)?' +\n  '(?:' +\n  // sindresorhus/ip-regexp\n  '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}' +\n  '|' +\n  // host name\n  URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}' +\n  // domain name\n  '(?:\\\\.' + URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}){0,10}' +\n  // TLD identifier\n  '(?:\\\\.(xn--[0-9a-z]{2,16}|[' + ALPHA_CHARS_REG_EXP + ']{2,24}))' +\n  ')' +\n  // port number\n  '(?::\\\\d{2,5})?' +\n  // resource path\n  '(?:/(?:\\\\S{0,255}[^\\\\s.;,(\\\\[\\\\]{}<>\"\\'])?)?';\nexport const URL_PROTOCOL_REG_EXP = new RegExp('^' + URL_PROTOCOL_REG_EXP_PART.slice(0, -1), 'i');\nexport const URL_ANY_PROTOCOL_REG_EXP = /^((?:[^\\/]+?):\\/\\/|mailto:)/;\nexport const USERNAME_REG_EXP = '[a-zA-Z\\\\d_]{5,32}';\nexport const BOT_COMMAND_REG_EXP = '\\\\/([a-zA-Z\\\\d_]{1,32})(?:@(' + USERNAME_REG_EXP + '))?(\\\\b|$)';\nexport const FULL_REG_EXP = new RegExp('(^| )(@)(' + USERNAME_REG_EXP + ')|(' + URL_REG_EXP + ')|(\\\\n)|(' + emojiRegExp + ')|(^|[\\\\s\\\\(\\\\]])(#[' + ALPHA_NUMERIC_REG_EXP + ']{2,64})|(^|\\\\s)' + BOT_COMMAND_REG_EXP, 'i');\nexport const EMAIL_REG_EXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// const markdownTestRegExp = /[`_*@~]/;\nexport const MARKDOWN_REG_EXP = /(^|\\s|\\n)(````?)([\\s\\S]+?)(````?)([\\s\\n\\.,:?!;]|$)|(^|\\s|\\x01)(`|~~|\\*\\*|__|_-_|\\|\\|)([^\\n]+?)\\7([\\x01\\s\\.,:?!;]|$)|@(\\d+)\\s*\\((.+?)\\)|(\\[(.+?)\\]\\((.+?)\\))/m;\nexport const SITE_HASHTAGS: {[siteName: string]: string} = {\n  'Telegram': 'tg://search_hashtag?hashtag={1}',\n  'Twitter': 'https://twitter.com/hashtag/{1}',\n  'Instagram': 'https://instagram.com/explore/tags/{1}/',\n  'Google Plus': 'https://plus.google.com/explore/{1}'\n};\n\n// export const SITE_MENTIONS: {[siteName in 'Telegram' | 'Twitter' | 'Instagram' | 'GitHub']: string} = {\n//   Telegram: '#{1}',\n//   Twitter: 'https://twitter.com/{1}',\n//   Instagram: 'https://instagram.com/{1}/',\n//   GitHub: 'https://github.com/{1}'\n// };\n\nexport const MARKDOWN_ENTITIES: {[markdown: string]: MessageEntity['_']} = {\n  '`': 'messageEntityCode',\n  '``': 'messageEntityPre',\n  '**': 'messageEntityBold',\n  '__': 'messageEntityItalic',\n  '~~': 'messageEntityStrike',\n  '_-_': 'messageEntityUnderline',\n  '||': 'messageEntitySpoiler'\n};\n\nexport const PASS_CONFLICTING_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityEmoji',\n  'messageEntityLinebreak',\n  'messageEntityCaret'\n]);\nfor(const i in MARKDOWN_ENTITIES) {\n  PASS_CONFLICTING_ENTITIES.add(MARKDOWN_ENTITIES[i]);\n}\n\nexport const PHONE_NUMBER_REG_EXP = /^\\+\\d+$/;\n\n/* export function parseEmojis(text: string) {\n  return text.replace(/:([a-z0-9\\-\\+\\*_]+?):/gi, function (all, shortcut) {\n    var emojiCode = EmojiHelper.shortcuts[shortcut]\n    if (emojiCode !== undefined) {\n      return EmojiHelper.emojis[emojiCode][0]\n    }\n    return all\n  })\n} */\n\n\n/* export function replaceUrlEncodings(urlWithEncoded: string) {\n  return urlWithEncoded.replace(/(%[A-Z\\d]{2})+/g, (str) => {\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  });\n} */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MessageEntity} from '../../layer';\nimport findConflictingEntity from './findConflictingEntity';\nimport sortEntities from './sortEntities';\n\nexport default function mergeEntities(currentEntities: MessageEntity[], newEntities: MessageEntity[]) {\n  const filtered = newEntities.filter((e) => {\n    return !findConflictingEntity(currentEntities, e);\n  });\n\n  currentEntities.push(...filtered);\n  sortEntities(currentEntities);\n  // currentEntities.sort((a, b) => a.offset - b.offset);\n  // currentEntities.sort((a, b) => (a.offset - b.offset) || (a._ === 'messageEntityCaret' && -1));\n\n  // * fix splitted emoji. messageEntityTextUrl can split the emoji if starts before its end (e.g. on fe0f)\n  // * have to fix even if emoji supported since it's being wrapped in span\n  // if(!IS_EMOJI_SUPPORTED) {\n  for(let i = 0; i < currentEntities.length; ++i) {\n    const entity = currentEntities[i];\n    if(entity._ === 'messageEntityEmoji') {\n      const nextEntity = currentEntities[i + 1];\n      if(nextEntity /* && nextEntity._ !== 'messageEntityCaret' */ && nextEntity.offset < (entity.offset + entity.length)) {\n        entity.length = nextEntity.offset - entity.offset;\n      }\n    }\n  }\n  // }\n\n  return currentEntities;\n}\n","import {MessageEntity} from '../../layer';\n\nexport default function sortEntities(entities: MessageEntity[]) {\n  entities.sort((a, b) => {\n    return (a.offset - b.offset) || (b.length - a.length);\n  });\n}\n","// https://github.com/twitter/twemoji-parser/blob/master/src/lib/regex.js\r\n\r\nexport function encodeEmoji(emojiText: string) {\r\n  const codepoints = toCodePoints(removeVS16s(emojiText)).join('-');\r\n  return codepoints;\r\n}\r\n\r\nconst vs16RegExp = /\\uFE0F/g;\r\n// avoid using a string literal like '\\u200D' here because minifiers expand it inline\r\nconst zeroWidthJoiner = String.fromCharCode(0x200d);\r\n\r\nconst removeVS16s = (rawEmoji: string) => (rawEmoji.indexOf(zeroWidthJoiner) < 0 ? rawEmoji.replace(vs16RegExp, '') : rawEmoji);\r\n\r\nexport function toCodePoints(unicodeSurrogates: string): Array<string> {\r\n  const points = [];\r\n  let char = 0;\r\n  let previous = 0;\r\n  let i = 0;\r\n  while(i < unicodeSurrogates.length) {\r\n    char = unicodeSurrogates.charCodeAt(i++);\r\n    if(previous) {\r\n      points.push((0x10000 + ((previous - 0xd800) << 10) + (char - 0xdc00)).toString(16));\r\n      previous = 0;\r\n    } else if(char > 0xd800 && char <= 0xdbff) {\r\n      previous = char;\r\n    } else {\r\n      points.push(char.toString(16));\r\n    }\r\n  }\r\n\r\n  if(points.length && points[0].length === 2) {\r\n    points[0] = '00' + points[0];\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nexport function getEmojiToneIndex(input: string) {\r\n  const match = input.match(/[\\uDFFB-\\uDFFF]/);\r\n  return match ? 5 - (57343 - match[0].charCodeAt(0)) : 0;\r\n}\r\n\r\nexport function getCountryEmoji(iso2: string) {\r\n  return String.fromCharCode(55356, 56741 + iso2.charCodeAt(0), 55356, 56741 + iso2.charCodeAt(1));\r\n}\r\n\r\nexport function emojiFromCodePoints(codePoints: string) {\r\n  return codePoints.split('-').reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\r\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [699,211,725,437,21,292], () => (__webpack_require__(4898)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 437) return \"437.8cd31f38250954e80fcd.bundle.js\";\n\tif (chunkId === 21) return \"21.e5190f39ffbeef03cef5.bundle.js\";\n\t// return url for filenames based on template\n\treturn \"\" + ({\"211\":\"npm.big-integer\",\"699\":\"npm.pako\"}[chunkId] || chunkId) + \".\" + {\"8\":\"2f5d5f4973ca9d0d4616\",\"104\":\"6cbeda302cb4e61b3268\",\"211\":\"a7ea0f3283af2967a6ae\",\"292\":\"fd1c65cea6105dcd77a3\",\"301\":\"ffb4a949577b521c6089\",\"642\":\"97f14a340993585fd1ff\",\"699\":\"f16d6f756c34f3914132\",\"725\":\"3353d4069deb997f1a89\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t678: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = this[\"webpackChunktweb\"] = this[\"webpackChunktweb\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","oldGetScript","oldLoadScript","queryMap","countMap","next","EmojiVersions","Emoji","version","Object","assign","USER_AGENT","navigator","userAgent","IS_SAFARI","search","toLowerCase","indexOf","test","vendor","platform","maxTouchPoints","match","IS_FIREFOX","badCharsRe","trimRe","C2L","cleanSearchText","text","latinize","processSearchText","clearBadChars","ignoreCase","options","hasTag","includeTag","charAt","originalText","replace","clearBadCharsAndTrim","ch","latinizeCh","latinizeString","fixCyrillic","FILENAME_JOINER","getFileNameByLocation","location","ext","length","str","_","id","thumb_size","filter","Boolean","join","photo_id","pFlags","big","stickerset","short_name","emoticon","thumb_version","volume_id","local_id","url","console","error","downloadId","getFileURL","type","encodeURIComponent","JSON","stringify","IDB","constructor","db","this","name","storageIsAvailable","log","openDatabase","INSTANCES","push","isAvailable","createNew","openDbPromise","createIndexes","os","store","indexNames","Array","from","indexName","deleteIndex","indexes","index","contains","createIndex","keyPath","objectParameters","request","indexedDB","open","Promise","reject","message","finished","setTimeout","onerror","resolve","onsuccess","event","result","calledNew","onclose","e","onabort","transaction","target","close","onversionchange","onupgradeneeded","warn","oldVersion","newVersion","stores","forEach","objectStoreNames","objectStore","createObjectStore","static","find","instance","preserve","storage","IDBStorage","storeName","idb","create","delete","entryName","isArray","concat","getObjectStore","map","clear","save","value","idx","put","get","mode","callback","perf","performance","now","then","onError","clearTimeout","timeout","onComplete","results","requests","r","waitForTransactionComplete","oncomplete","callbackResult","left","onRequestFinished","i","getAll","environment","getEnvironment","setEnvironment","env","RootScope","super","myId","connectionStatus","premium","addEventListener","toPeerId","isPremium","status","dispatchEvent","args","invokeVoid","settings","getConnectionStatus","dispatchEventSingle","state","stateStorage","getState","setByKey","key","object","splitted","split","o","getDeepProperty","slice","pop","setDeepProperty","first","pushToState","direct","onlyLocal","setKeyValueToStorage","set","HTTP","dcId","logSuffix","pending","debug","logTypes","Log","logger","connected","_send","body","fetch","method","response","arrayBuffer","buffer","TextDecoder","decode","Uint8Array","setConnected","err","destroyed","destroy","send","networker","promise","releasePending","releasing","splice","pause","Socket","handleOpen","handleError","handleClose","removeListeners","handleMessage","data","byteLength","ws","connect","removeEventListener","undefined","WebSocket","binaryType","randomize","arr","crypto","Error","getRandomValues","Obfuscation","_process","operation","cryptoMessagePort","transfer","init","codec","idPromise","release","initPayload","val","val2","reversedPayload","reverse","encKey","encIv","decKey","decIv","process","obfuscateTag","encrypted","encode","payload","tag","encodePacket","len","header","readPacket","bytesToHex","bytes","toString","TcpObfuscated","Connection","retryTimeout","abridged","obfuscation","autoReconnect","onOpen","connection","setConnectionStatus","cleanupSent","resend","onMessage","parseResponse","processMessage","messageId","sessionId","catch","shift","onClose","needTimeout","retryAt","time","Date","diff","lastCloseTime","isNaN","reconnectTimeout","ctx","reconnect","bodySent","forceReconnect","setAutoReconnect","once","enable","changeUrl","encodeBody","toEncode","encoded","releasingPending","sent","TEST_SUFFIX","getTelegramConnectionSuffix","connectionType","constructTelegramWebSocketUrl","suffix","path","DcConfigurator","sslSubdomains","dcOptions","host","port","chosenServers","transportSocket","chosenServer","oooohLetMeLive","transportHTTP","dcOption","chooseServer","transportType","reuse","hasOwnProperty","client","download","upload","servers","transports","transport","obj","indexOfAndSplice","MTTransportController","opened","Map","waitForWebSocket","pingTransports","dcConfigurator","https","websocket","httpPromise","websocketPromise","socket","isFulfilled","isRejected","isHttpAvailable","isWebSocketAvailable","all","pinging","setTransportValue","setTransportOpened","setTransportClosed","AppManager","setManagers","managers","loadStorages","storages","recordPromise","storagesKeys","keys","storagesPromises","storagesResults","resetStorages","size","loadStoragesInner","AppStoragesManager","names","createStorages","loadStorage","PasswordManager","apiManager","invokeApi","updateSettings","currentHashPromise","newHashPromise","params","password","new_settings","hint","email","currentPassword","cryptoWorker","invokeCrypto","newAlgo","new_algo","salt1","newPassword","hashes","new_password_hash","getInputCheckPassword","check","inputCheckPassword","auth","setUser","user","confirmPasswordEmail","code","resendPasswordEmail","cancelPasswordEmail","ReferenceDatabase","contexts","links","saveContext","reference","context","getContexts","Set","_context","deepEqual","add","getReferenceByLink","getContext","values","deleteContext","refreshReference","c","appMessagesManager","wrapSingleMessage","peerId","refreshEmojiesSoundsPromise","appStickersManager","getAnimatedEmojiSounds","appProfileManager","getProfile","userId","hex","newHex","newContext","makeError","safeReplaceObject","wasObject","newObject","getPeerIdsFromMessage","peerIds","fromId","viaBotId","fwdFromId","media","contactUserId","user_id","recentVoters","recent_voters","recentReactions","recent_reactions","reaction","getPeerId","peer_id","action","userIds","users","inviter_id","chatIds","channel_id","chat_id","chatId","recentRepliers","recent_repliers","reply","defineNotNumerableProperties","props","writable","configurable","out","defineProperties","setDialogIndex","dialog","indexKey","GLOBAL_FOLDER_ID","DialogsStorage","folders","allDialogsLoaded","pinnedOrders","folderId","setDialogsLoaded","resetPinnedOrder","savePinnedOrders","dialogsOffsetDate","dialogsNum","dialogsIndex","cachedResults","query","count","dialogs","onUpdateFolderPeers","update","folder_peers","folderPeer","folder_id","peer","appPeersManager","dropDialog","pinned","handleDialogUnpinning","generateIndexForDialog","pushDialog","scheduleHandleNewDialogs","onUpdateDialogPinned","getDialogOnly","onUpdatePinnedDialogs","handleOrder","order","newPinned","getFolderDialogs","dialogsResult","applyDialogs","d","after","rootScope","appUsersManager","getSelf","peerText","getPeerSearchText","indexObject","onFilterUpdate","getCachedDialogs","processDialogForFilter","filterId","processDialogForFilters","getDialogIndexKeyByFilterId","prepareDialogUnreadCountModifying","chat","appChatsManager","getChat","dropDialogOnDeletion","apiUpdatesManager","addMultipleEventsListeners","updateFolderPeers","updateDialogPinned","updatePinnedDialogs","appStateManager","appStoragesManager","getCache","_order","setDialogsFromState","bind","appDraftsManager","addMissedDialogs","top_message","getServerMessageId","topMessage","saveMessages","saveDialog","getMessageByPeer","reloadConversation","isDialogsLoaded","loaded","every","getPinnedOrders","getOffsetDate","offsetDate","Math","min","sort","a","b","generateFolder","folder","unreadMessagesCount","unreadPeerIds","unreadUnmutedPeerIds","getFolder","skipMigrated","migratedTo","getNextDialog","currentPeerId","findIndex","getDialogIndexKey","filtersStorage","getFilter","localId","isPeerUnmuted","appNotificationsManager","isPeerLocalMuted","getFolderUnreadCount","unreadUnmutedCount","unreadCount","arrays","setDialogIndexInFilter","isRealFolder","testDialogForFilter","pinnedIndex","pinnedPeerIds","generateDialogIndex","generateDialogPinnedDateByIndex","getDialogIndex","getDialog","skipped","isObject","date","isPinned","tsNow","timeManager","getServerTimeOffset","filters","getFilters","wasIndex","wasDialog","wasDialogIndex","newDialogIndex","prepareFolderUnreadCountModifyingByDialog","insertInDescendSortedArray","callbacks","toggle","wasUnreadCount","getDialogUnreadCount","wasUnmuted","newUnreadCount","newUnmuted","addMessagesCount","modifyFolderUnreadCount","toggleDialog","toggleUnmuted","max","dispatchUnreadTimeout","_folder","justReturn","noPinnedOrderUpdate","topDate","generateDialogPinnedDate","channelId","isChannel","toChatId","channel","draft","unshift","setDialogToState","pts","historyStorage","getHistoryStorage","messagesStorage","getHistoryMessagesStorage","history","incomingMessage","mid","getMessageFromStorage","is_outgoing","peersStorage","requestPeersForKey","isAnyChat","newPts","getChannelState","requestPeer","ignoreOffsetDate","saveGlobalOffset","getDialogOffsetDate","savedGlobalOffsetDate","savedOffsetDate","clearDialogFromState","foundDialog","wasPinned","keepLocal","releasePeer","dropDialogWithEvent","dropped","forEachReverse","saveApiUsers","saveApiChats","chats","messages","updatedDialogs","topPendingMessage","pendingTopMsgs","maxId","updates","newUpdatesAfterReloadToHandle","saveUpdate","wasDialogBefore","generateMessageId","wasTopMessage","generateTempMessageId","from_id","getOutputPeer","deleted","isOutgoing","migrated_to","deactivated","migratedToPeer","migratedFromTo","migratedToFrom","read_inbox_max_id","read_outbox_max_id","saveDraft","isOut","unread","unread_count","isEnd","insertSlice","setEnd","mergeReplyKeyboard","readMaxId","readOutboxMaxId","savePeerSettings","notify_settings","addChannelState","releaseUnreadCount","dialogsStorage","getDialogs","offsetIndex","limit","promises","fillContactsResult","fillContacts","cached","reloadMissingDialogsPromise","reloadMissingPeerIds","realFolderId","curDialogStorage","has","d1","d2","offset","loadedAll","isEnoughDialogs","isTopEnd","getTopMessages","convertment","PREPENDED_FILTERS","LOCAL_FILTER","flags","title","exclude_peers","include_peers","pinned_peers","excludePeerIds","includePeerIds","FiltersStorage","filtersArr","reloadedPeerIds","localFilters","generateLocalFilter","clearFilters","onUpdateDialogFilter","saveDialogFilter","findAndSplice","onUpdateDialogFilters","oldFilters","copy","getDialogFilters","_filterId","onUpdateDialogFilterOrder","includes","setLocalId","updateDialogFilter","updateDialogFilters","updateDialogFilterOrder","prependFilters","allChatsFilter","archiveFilter","allChatsFilterIndex","exclude_archived","exclude_unarchived","exclude_read","isDialogUnread","exclude_muted","unread_mentions_count","broadcasts","isBroadcast","groups","isAnyGroup","toUserId","isBot","bots","non_contacts","isContact","contacts","testDialogForFilterId","toggleDialogPin","getConfig","pinned_infolder_count_max","getInputPeerById","createDialogFilter","prepend","remove","getOutputDialogFilter","bool","f","filterIncludedPinnedPeers","peers","reloadDialogs","inputPeer","isAlreadyReloaded","reloadPromises","missingPeerIds","overwrite","invokeApiSingle","getSuggestedDialogsFilters","silent","assumeType","to","oldFilter","_filter","isFilterIdAvailable","isFolderAvailable","getAppConfig","dialog_filters_limit_default","some","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","getOwnPropertyDescriptor","defineProperty","ApiUpdatesManager","updatesState","pendingPtsUpdates","pendingSeqUpdates","syncPending","syncLoading","channelStates","attached","processUpdateMessage","updateMessage","processOpts","seq","seqStart","seq_start","forceGetDifference","processUpdate","toId","fwd_from","reply_to","entities","pts_count","override","_constructor","setProxy","self","Proxy","saveUpdatesState","us","popPendingSeqUpdate","nextSeq","pendingUpdatesData","seqAwaiting","ptsAwaiting","popPendingPtsUpdate","curState","curPts","goodPts","goodIndex","getDifference","processLocalUpdate","wasSyncing","pts_total_limit","qts","differenceResult","other_updates","new_messages","apiMessage","nextState","intermediate_state","onDifferenceTooLong","justAName","getChannelDifference","channelState","getChannelInput","lastPtsUpdateTime","fwdHeader","reason","hasUser","post","hasChat","isUser","popPts","popSeq","attach","langCode","noErrorBox","stateResult","setUpdatesProcessor","strs","en","ru","getChangelog","lang","res","ok","langStr","parseMarkdown","inbox_date","languages","filterUnique","language","AppAvatarsManager","savedAvatarURLs","removeFromAvatarsCache","isAvatarCached","saved","loadAvatar","photo","peerPhotoFileLocation","downloadOptions","dc_id","limitPart","apiFileManager","blob","URL","createObjectURL","AppCallsManager","calls","IS_CALL_SUPPORTED","updatePhoneCall","saveCall","phone_call","updatePhoneCallSignalingData","callId","phone_call_id","computeKey","g_b","p","call","isDiscarded","oldCall","getCall","getCallInput","access_hash","savePhonePhoneCall","phonePhoneCall","generateDh","random_length","dhConfig","requestCall","protocol","g_a_hash","video","getUserInput","random_id","discardCall","duration","connection_id","platforms","ignore","getRestrictionReason","reasons","isRestricted","AppChatsManager","isPeerNeeded","onChatUpdated","updateChannelParticipant","clearCache","updateChatDefaultBannedRights","default_banned_rights","getFromCache","apiChats","saveApiChat","oldChat","participants_count","changedPhoto","changedTitle","changedAnyBadge","verified","scam","fake","getChatTyped","hasRights","rights","isThread","editChatDefaultBannedRights","banned_rights","until_date","isMegagroup","megagroup","isInChat","good","getInputPeer","getChannelInputPeer","getChatInputPeer","allowMin","getChatPhoto","getChatString","createChannel","inviteToChannel","input","usersInputs","u","createChat","leaveChannel","joinChannel","addChatUser","fwdLimit","fwd_limit","deleteChatUser","leaveChat","leave","deleteChannel","deleteChat","migrateChat","updateUsername","username","editPhoto","inputFile","inputChatPhoto","file","editTitle","editAbout","about","editBanned","participant","getParticipantPeerId","timestamp","actor_id","prev_participant","new_participant","kicked_by","clearChannelParticipantBannedRights","kickFromChannel","view_messages","kickFromChat","resolveChannel","messagesChats","togglePreHistoryHidden","enabled","toggleSignatures","toggleNoForwards","setChatAvailableReactions","reactions","available_reactions","restrictionReasons","restriction_reason","restricted","getSendAs","invokeApiSingleProcess","processResult","sendAsPeers","importChatInvite","hash","checkUsername","getSponsoredMessage","invokeApiCacheable","cacheSeconds","sponsoredMessages","sponsoredMessage","viewSponsoredMessage","randomId","checkChatInvite","chatInvite","I18n","pluralRules","cacheLangPackPromise","setLangCode","lastRequestedLangCode","lastRequestedNormalizedLangCode","updateAmPm","timeFormat","dateTimeFormat","getDateTimeFormat","hour","minute","hour12","setHours","amText","format","amPmCache","am","pmText","pm","loadLocalLangPack","defaultCode","langSign","countries","strings","formatLocalStrings","default","saveLangPack","from_version","lang_code","local","loadLangPack","web","requestedServerLanguage","lang_pack","polyfillPromise","pushTo","v","langPack","appVersion","applyLangPack","currentLangCode","Intl","PluralRules","string","countriesList","country","langPackKey","default_name","lastAppliedLangCode","cachedDateTimeFormats","document","querySelectorAll","element","weakMap","superFormatter","indexHolder","lastIndex","p1","p2","p3","p4","createElement","append","lastIndexOf","matchUrlProtocol","wrappedUrl","wrapUrl","href","onclick","setAttribute","DocumentFragment","firstChild","textContent","arg","pushNextArgument","plain","select","item","Node","getCacheLangPack","finally","setTimeFormat","haveToUpdate","IntlDateElement","getStrings","getLangPack","langPack1","langPack2","localLangPack1","localLangPack2","l","_Intl","window","WeakMap","IntlElementBase","classList","property","IntlElement","safeAssign","formatted","dataset","compareAndUpdate","json","DateTimeFormat","hours","getHours","getMinutes","capitalizeFirstLetter","i18n","i18n_","_i18n","months","days","getWeekNumber","UTC","getFullYear","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","getTime","today","year","day","month","weekday","minYear","yearPattern","RegExp","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","createForMonthYear","dates","selectedYear","currentYear","setFullYear","minDate","setMonth","maxDate","formatterMonthYear","createForDayMonth","validDateForMonth","formatterDayMonth","formatterYearMax","formatWeekLong","getDay","q","safeReplaceArrayInObject","trim","dayOfWeek","setDate","getDayOfWeek","distance","setTime","matches","exec","g1","g2","k","g3","parseInt","k1","EXTENSION_MIME_TYPE_MAP","mov","gif","pdf","uploadWallPaperTempId","AppDocsManager","onServiceWorkerFail","docs","doc","supportsStreaming","thumbsStorage","deleteCacheContext","stickerCachedThumbs","uploadingWallPapers","online","saveDoc","oldDoc","file_reference","referenceDatabase","attributes","attribute","file_name","wrapPlainText","voice","mime_type","w","h","round_message","alt","stickerEmojiRaw","stickerSetInput","thumbs","IS_WEBP_SUPPORTED","sticker","IS_WEBM_SUPPORTED","animated","mappedMimeType","joiner","monthAsNumber","noSeconds","getSeconds","leadingZero","noTime","getFullDate","isServiceWorkerOnline","getCacheContext","setCacheContextURL","thumb","getDocumentDownloadOptions","getDocumentURL","getDoc","docId","downloadDoc","queueId","onlyCache","downloadMedia","getLottieCachedThumb","toneIndex","saveLottiePreview","width","height","saveWebPConvertedStrippedThumb","stickerThumbConverted","getWallPapers","invokeApiHashable","accountWallpapers","wallPapers","wallpapers","wallPaper","prepareWallPaperUpload","cacheContext","wallpaper","slug","uploadWallPaper","fileName","downloaded","getGifs","gifs","requestDocPart","requestFilePart","getDocumentInputFileLocation","AppDraftsManager","drafts","getAllDraftPromise","updateDraftMessage","threadId","notify","getKey","getDraft","getAllDrafts","apiDraft","processApiDraft","force","draftsAreEqual","draft1","draft2","reply_to_msg_id","no_webpage","isEmptyDraft","syncDraft","localDraft","saveOnServer","serverDraft","draftObj","getInputEntities","saveLocalDraft","clearAllDrafts","combined","clearDraft","emptyDraft","setDraft","EMOJI_LANG_PACK","keywords","AppEmojiManager","keywordLangPacks","indexedLangPacks","getKeywordsPromises","getEmojiKeywords","storageKey","pack","validateInitObject","keywordsDifference","packKeywords","keyword","emoticons","getBothEmojiKeywords","recent","getRecentEmojis","indexEmojis","searchEmojis","emojis","reduce","acc","POPULAR_EMOJI","getRecentEmojisPromise","recentEmoji","pushRecentEmoji","emoji","fixEmoji","AppGroupCallsManager","groupCalls","participants","nextOffsets","updateGroupCall","saveGroupCall","updateGroupCallParticipants","groupCallId","saveApiParticipants","groupCall","getCachedParticipants","prepareToSavingNextOffset","nextOffsetsMap","nextOffset","setNextOffset","newNextOffset","saveApiParticipant","skipCounterUpdating","oldParticipant","hasLeft","muted","can_self_unmute","getGroupCall","modified","just_joined","apiParticipants","editParticipant","getGroupCallInput","getInputPeerSelf","volume","raise_hand","raiseHand","video_paused","videoPaused","video_stopped","videoStopped","presentation_paused","presentationPaused","getGroupCallFull","participants_next_offset","shouldUpdate","createGroupCall","scheduleDate","schedule_date","getGroupCallParticipants","ids","sources","groupCallParticipants","next_offset","hangUp","discard","groupCallInput","source","join_as","joinGroupCall","isMuted","joinVideo","leaveGroupCallPresentation","getPhotoInput","getPhotoMediaInput","ttl_seconds","getMediaInput","AppInlineBotsManager","inlineResults","setHash","getGeoInput","geo","lat","long","accuracy_radius","getInlineResults","botId","bot","geo_point","stopTime","botResults","queryId","query_id","appDocsManager","appPhotosManager","savePhoto","generateQId","pushPopularBot","getTopPeers","topPeers","botPeerId","topPeer","rating","switchToPM","fromPeerId","startParam","startBot","checkSwitchReturn","getUser","bot_inline_placeholder","peerData","switchInlineQuery","callbackButtonClick","button","msg_id","sendInlineResult","queryAndResultIds","inlineResult","queryID","resultID","resultId","send_message","reply_markup","replyMarkup","sendText","inputMedia","messageMedia","caption","sendMessage","geoPoint","address","provider","venue_id","venue_type","phone_number","first_name","last_name","vcard","description","currency","total_amount","shipping_address_requested","start_param","sendOther","AppMessagesIdsManager","tempNum","num","telegramMeWebManager","disabled","hostname","setAuthorized","canRedirect","sessionStorage","curValue","ts","tgme_sync","loadScript","script","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","partLength","appTabsManager","tabs","start","getTabs","tab","addTab","deleteTab","getDocumentInput","processAfter","cb","AppMessagesManager","pendingByRandomId","pendingByMessageId","pendingAfterMsgs","tempFinalizeCallbacks","sendSmthLazyLoadQueue","needSingleMessages","fetchSingleMessagesPromise","maxSeenId","newDialogsToHandle","notificationsHandlePromise","notificationsToHandle","reloadConversationsPeers","groupedTempId","typings","unreadMentions","goToNextMentionPromises","batchUpdates","middleware","clean","uploadFilePromises","messagesStorageByPeerId","groupedMessagesStorage","scheduledMessagesStorage","historiesStorage","threadsStorage","searchesStorage","pinnedMessages","threadsServiceMessagesIdsStorage","threadsToReplies","handleNewDialogs","newMaxSeenId","incrementMaxSeenId","handleNotifications","_peerId","notifyPeerToHandle","getNotifyPeerSettings","peerTypeNotifySettings","mentioned","notifyAboutMessage","fwdCount","onUpdateMessageId","pendingData","tempId","finalizePendingMessageCallbacks","onUpdateNewMessage","getMessagePeer","isLocalThreadUpdate","createMessageStorage","threadKey","getThreadKey","reply_to_peer_id","reply_to_mid","receiptMessage","ignoreExisting","checkPendingMessage","updateMessageRepliesIfNeeded","findSlice","firstSlice","forceUserOnline","top_msg_id","handleNewMessage","inboxUnread","modifyCachedMentions","setDialogTopMessage","notifyPeer","onUpdateMessageReactions","recentReaction","previousReactions","previousRecentReactions","show_previews","peerReaction","pushBatchUpdate","batchUpdateReactions","setDialogToStateIfMessageIsTop","onUpdateDialogUnreadMark","unread_mark","onUpdateEditMessage","oldMessage","newMessage","handleEditedMessage","isTopMessage","clear_history","newReactions","grouped_id","onUpdateReadHistory","max_id","read_max_id","getObjectKeysAndSort","stillUnreadCount","still_unread_count","newUnreadMentionsCount","foundAffected","repliesKey","replyTo","reply_to_top_id","setCount","getReadMaxIdIfUnread","threadKeyPart","onUpdateReadMessagesContents","mids","findPeerIdByMids","media_unread","fixDialogUnreadMentionsIfNoMessage","onUpdateChannelAvailableMessages","availableMinId","available_min_id","onUpdateDeleteMessages","threadKeys","historyUpdated","handleDeletedMessages","threadsStorages","msgs","affected","onUpdateChannel","needDialog","onUpdateChannelReload","flushStoragesByPeerId","onUpdateChannelMessageViews","views","batchUpdateViews","onUpdateServiceNotification","popup","phone","onUpdatePinnedMessages","missingMessages","werePinned","hiddenPinnedMessages","onUpdateNotifySettings","onUpdateNewScheduledMessage","isScheduled","onUpdateDeleteScheduledMessages","batch","toDispatch","getMessagesFromMap","previousResults","changedResults","reactionCount","previousReactionCount","_reactionCount","chosen","updateMessageID","updateNewDiscussionMessage","updateNewMessage","updateNewChannelMessage","updateDialogUnreadMark","updateEditMessage","updateEditChannelMessage","updateMessageReactions","updateReadChannelDiscussionInbox","updateReadChannelDiscussionOutbox","updateReadHistoryInbox","updateReadHistoryOutbox","updateReadChannelInbox","updateReadChannelOutbox","updateChannelReadMessagesContents","updateReadMessagesContents","updateChannelAvailableMessages","updateDeleteMessages","updateDeleteChannelMessages","updateChannel","updateChannelReload","updateChannelMessageViews","updateServiceNotification","updatePinnedMessages","updatePinnedChannelMessages","updateNotifySettings","updateNewScheduledMessage","updateDeleteScheduledMessages","filterFunc","getScheduledMessagesStorage","webpage","appWebPagesManager","getCachedWebPage","drop","poll","appPollsManager","pollToMessages","batchUpdatesDebounced","debounce","details","maxSeenMsgId","sendEntites","entity","invokeAfterMessageIsSent","callbackName","finalize","editMessage","is_scheduled","newMedia","noWebPage","handled","replyToMsgId","MAX_LENGTH","message_length_max","webPage","getPeerMigratedTo","generateOutgoingMessage","toggleError","on","sentRequestOptions","afterMessageId","sendAs","sendAsPeerId","apiPromise","invokeApiAfter","clear_draft","send_as","wrapMessageEntities","beforeMessageSending","sequential","noop","sendFile","attachType","apiFileName","fileType","File","isDocument","Blob","isPhoto","IMAGE_MIME_TYPES_SUPPORTED","actionName","isVoiceMessage","waveform","isMedia","photoSize","sizes","objectURL","VIDEO_MIME_TYPES_SUPPORTED","videoAttribute","isRoundMessage","supports_streaming","noSound","thumbCacheContext","sentDeferred","uploadingFileName","getFileNameForUpload","uploaded","uploadPromise","load","thumbUploadPromise","cancelPendingMessage","setTyping","addNotifyListener","progress","percents","floor","done","total","notifyAll","force_file","isGroupedItem","background","ret","sendAlbum","files","sendFileDetails","groupId","invoke","multiMedia","multi_media","inputSingleMedia","inputs","sendContact","contactPeerId","getContactMediaInput","pollId","savePoll","total_voters","getPoll","getPhoto","postAuthor","getPeer","signatures","generateFromId","post_author","generateFlags","generateReplyHeader","via_bot_id","replies","generateReplies","replyToTopId","channelFull","getCachedFullChat","linked_chat_id","comments","replies_pts","isAnonymousSending","generateForwardHeader","originalMessage","isUserHidden","from_name","userFull","getCachedFullUser","private_forward_name","channel_post","saved_from_msg_id","saved_from_peer","generateFakeAvatarMessage","Number","MAX_SAFE_INTEGER","getUploadPromise","uploadFileName","admin_rights","anonymous","fillConversations","getConversations","chatHistoryStorage","offset_date","offset_id","offset_peer","offsetPeerId","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","folderDialogs","dialogsLength","slicedDialogs","forwardMessages","config","overflowMids","forwarded_count_max","dropCaptions","dropAuthor","newMids","newMessages","replyToMid","replyToMessageIdx","newReplyToMid","getStickerEffectThumb","nopremium","group","from_peer","to_peer","with_my_score","withMyScore","drop_author","drop_media_captions","generateEmptyMessage","getMessagesStorageByKey","s","getMessagesStorage","getMessageById","getDialogByPeerId","cantForwardDeleteMids","cantForward","cantDelete","canForward","canDeleteMessage","inputDialogPeer","getInputDialogPeerById","reloadConversationsPromise","inputDialogPeers","fullfillLeft","doFlushHistory","just_clear","revoke","affectedHistory","flushHistory","justClear","getHistory","historyResult","ss","hidePinnedMessages","getPinnedMessage","getSearch","inputFilter","getPinnedMessagesCount","getPinnedMessagesMaxId","updatePinnedMessage","unpin","pm_oneside","unpinAllMessages","unpinAll","getAlbumText","getGroupsFirstMessage","minMid","getMidsByAlbum","groupedId","getMessagesByAlbum","getMidsByMessage","filterMessages","verify","appMessagesIdsManager","saveMessage","isMessage","overwriting","msgId","savedFromPeerId","savedFromMid","savedFrom","mediaContext","unsupported","originalDoc","messageKey","getMessageKeyForPendingWebPage","saveWebPage","appWebDocsManager","saveWebDocument","totalEntities","migrateFrom","migrateTo","video_sizes","appGroupCallsManager","migrateChecks","getFirstMessageToEdit","goodMessage","myPeerId","canEditMessage","apiEntities","myEntities","parseEntities","mergeEntities","reportMessages","editPeerFolders","appConfig","dialogs_folder_pinned_limit_premium","dialogs_folder_pinned_limit_default","dialogs_pinned_limit_premium","dialogs_pinned_limit_default","getDialogPeer","markDialogUnread","read","fromChat","canMessageBeEdited","kind","goodMedias","edit_time_limit","getReplyKeyboard","messageReplyMarkup","lastReplyMarkup","selective","maxOutId","single_use","hidden","getSearchStorage","getSearchCounters","canCache","func","filterMessagesByInputFilterFromStorage","_storage","filterMessagesByInputFilter","nextRate","backLimit","offset_id_offset","next_rate","foundMsgs","min_date","max_date","add_offset","min_id","offsetId","offsetMessage","offset_rate","searchResult","foundCount","subscribeRepliesThread","getDiscussionMessage","generateThreadServiceStartMessage","maxMessageId","serviceStartMessage","is_single","getThreadServiceMessageId","getMessageWithReplies","newDialogsHandlePromise","deleteMessages","localMessageIds","creator","delete_messages","affectedMessages","readHistory","triedToReadMaxId","readPromise","getPeerString","readAllHistory","slicedArray","fixUnreadMentionsCountIfNeeded","goToNextMention","loadNextPromise","loadNextMentions","last","getUnreadMentions","mergeHistoryResult","minId","messagesMessages","readMessages","msgIds","getHistoryStorageTransferable","historySerialized","toJSON","getNotifyPeerTypeSettings","getNotifySettings","getInputNotifyPeerById","isMessageIsTopMessage","threadMessage","broadcastEventName","pendingMessage","finalizePendingMessage","mutePeer","muteUntil","mute_until","togglePeerMute","mute","canSendToPeer","canSendToUser","finalMessage","tempMessage","newPhoto","newDoc","newPhotoSize","oldCacheContext","getPhotoDownloadOptions","thumbSize","polls","handleReleasingMessage","getMessageReactionsListAndReadParticipants","skipReadParticipants","skipReactionsList","emptyMessageReactionsList","canViewMessageReadParticipants","getMessageReadParticipants","appReactionsManager","getMessageReactionsList","messageReactionsList","readParticipantsPeerIds","filteredReadParticipants","readPeerId","reactionsCount","readParticipants","chat_read_mark_size_threshold","chat_read_mark_expire_period","incrementMessageViews","increment","chatPeerIds","idleStartTime","getScheduledMessageByPeer","getScheduledMessages","sendScheduledMessages","deleteScheduledMessages","getMessageWithCommentReplies","isFetchIntervalNeeded","getNewHistory","unsetEnd","isBottomEnd","getEnds","offsetIdOffset","haveSlice","sliceMe","fulfilled","fillHistoryStorage","constructSlice","isHistoryResultEnd","topWasMeantToLoad","wasMaxId","requestHistory","newMaxId","deleteSlice","oldestMessage","foundSlice","_historyResult","fetchSingleMessages","requestPromises","getMessagesResult","fetchMessageReplyTo","replyToPeerId","typing","smth","deleteWebPageFromPending","updatePollToMessage","groupedStorage","albums","dispatchAlbumEdit","deletedMids","noforwards","noForwards","getElementCallback","newMap","peerIdStr","saveDefaultSendAs","default_send_as","convertInputKeyToKey","inputKey","AppNotificationsManager","peerSettings","notifyUsers","notifyChats","notifyBroadcasts","checkMuteUntil","checkMuteUntilTimeout","closestMuteUntil","peerNotifySettings","checkMuteUntilThrottled","throttle","notifySettings","getNotifyPeerTypePromise","getContactSignUpNotification","notifyContactsSignUp","setContactSignUpNotification","getPeerMuted","getPeerLocalSettings","respectType","n","typeNotifySettings","AppPeersManager","canPinMessage","getPeerPhoto","getUserPhoto","getUserString","getPeerUsername","getRestrictionReasonText","ignorePeerId","getUserInputPeer","getUserSearchText","getDialogType","getDeleteButtonText","AppPhotosManager","photos","oldPhoto","getUserPhotos","inputUser","photosResult","photoIds","photoId","AppPollsManager","updateMessagePoll","poll_id","saveResults","chosenIndexes","answer","getInputMediaPoll","correctAnswers","solution","solutionEntities","correct_answers","solution_entities","sendVote","optionIds","answers","option","getResults","getVotes","votesList","stopPoll","closed","newPoll","AppPrivacyManager","privacy","updatePrivacy","rules","setPrivacy","privacyRules","inputRule","rule","getPrivacy","privacyKey","getGlobalPrivacySettings","setGlobalPrivacySettings","AppProfileManager","usersFull","chatsFull","onUpdateUserTyping","typingsInPeer","t","cancelAction","getChatFull","onUpdatePeerBlocked","blocked","updateChatParticipants","chatFull","updateChatParticipantAdd","_participants","updateChatParticipantDelete","updateUserTyping","updateChatUserTyping","updateChannelUserTyping","updatePeerBlocked","fullChat","updated","call_active","hasChatPhoto","chat_photo","refreshFullPeer","invalidateChannelParticipants","usersUserFull","full_user","profile_photo","botInfo","bot_info","referenceContext","description_document","description_photo","getProfileByPeerId","getCachedProfileByPeerId","getFullPhoto","profile","getChannelFull","full_chat","getChatInviteLink","exported_invite","link","exportedInvite","getChannelParticipants","broadcast","getChannelParticipant","channelParticipant","fullChannel","processError","getMentions","processUserIds","ratingMap","cP","updateProfile","saveApiUser","uploadProfilePhoto","updateResult","strippedThumb","stripped_thumb","previous","deletePhotos","deletedList","verifyParticipantForOnlineCount","reduceParticipantsForOnlineCount","getOnlines","chatInfo","channelParticipants","onlines","getPeerTypings","callbackifyAll","SAVE_DOC_KEYS","REFERENCE_CONTEXT","AppReactionsManager","availableReactions","getAvailableReactions","sendReactionPromises","lastSendingTimes","availableReaction","around_animation","static_icon","appear_animation","center_icon","messagesAvailableReactions","getActiveAvailableReactions","callbackify","inactive","getAvailableReactionsForPeer","activeAvailableReactions","unshiftQuickReaction","getQuickReaction","quickReaction","filteredChatAvailableReactions","unshiftQuickReactionInner","getAvailableReactionsByMessage","isReactionActive","reactions_default","getReactionCached","getReaction","getMessagesReactions","setDefaultReaction","sendReaction","lastSendingTimeKey","chosenReactionIdx","chosenReaction","can_see_list","reactionCountIdx","userReaction","promiseKey","editMessageUpdateIdx","editMessageUpdate","EMOJI_SET_LOCAL_ID","EMOJI_ANIMATIONS_SET_LOCAL_ID","LOCAL_IDS_SET","AppStickersManager","getStickerSetPromises","getStickersByEmoticonsPromises","sounds","getAnimatedEmojiStickerSet","getFavedStickersStickers","getGreetingStickersPromise","getGreetingStickersTimeout","getGreetingSticker","onStickersUpdated","updateNewStickerSet","stickerSet","saveStickerSet","updateRecentStickers","updateFavedStickers","stickers","getRecentStickersStickers","justPreload","getStickersByEmoticon","greetingStickers","random","saveStickers","getStickerSet","cachedSet","documents","refreshTime","useCache","getStickerSetInput","saveById","animations","getAnimatedEmojiSoundsPromise","emojies_sounds","sound","bytesStr","atob","file_reference_base64","charCodeAt","this_dc","getRecentStickers","recentStickers","saveRecentSticker","unsave","_doc","docEmoticon","faved","cleanEmoji","getAnimatedEmojiSticker","isAnimation","packs","getAnimatedEmojiSoundDocument","preloadAnimatedEmojiSticker","preloadEmojiPromise","preloadAnimatedEmojiStickerAnimation","animation","preloadSticker","isPremiumEffect","video_thumbs","newSet","setToCache","needSave","installed_date","getStickerSetThumbDownloadOptions","thumb_dc_id","isAnimated","mimeType","getFeaturedStickers","sets","covered","videos","getPromoPremiumStickers","getPremiumStickers","getFavedStickers","favedStickers","getFavedStickersLimit","stickers_faved_limit_premium","stickers_faved_limit_default","faveSticker","unfave","toggleStickerSet","archived","searchStickerSets","excludeFeatured","exclude_featured","foundSaved","cache","cover","getAllStickers","allStickers","preloadStickerSets","includeOurStickers","messagesStickers","installedSets","foundStickers","cachedStickersAnimated","cachedStickersStatic","iteratePacks","clearRecentStickers","cleanUsername","AppUsersManager","usernames","getTopPeersPromises","contactsIndex","createSearchIndex","contactsFillPromise","contactsList","updatedContactsList","updateUsersStatuses","timestampNow","updateUserStatus","setInterval","expires","was_online","setUserToStateIfNeeded","updateUserPhoto","updateUserName","setUserNameToCache","checkPremium","contactsListCachedTime","contact","mutual_contact","pushContact","recentSearch","onContactsModified","fromServer","pushRecentSearch","clearRecentSearch","resolveUsername","resolvedPeer","processResolvedPeer","resolvePhone","popContact","getContacts","includeSaved","sortBy","_contactsList","userId1","userId2","sortName1","sortName","sortName2","localeCompare","status1","getUserStatusForSort","myUserId","testSelfSearch","getContactsPeerIds","toggleBlock","block","apiUsers","oldUser","oldSearchUsername","searchUsername","fullName","wasContact","newContact","onContactUpdated","isUserOnlineVisible","isRegularUser","support","isNonContactUser","eventTimestamp","importContact","importContacts","phones","inputContacts","j","client_id","importedContactsResult","imported","importedContact","topPeersCache","cachedTime","categories","getBlocked","contactsBlocked","getLocated","self_expires","searchContacts","pathname","my_results","curIsContact","setUserStatus","offline","updateMyOnlineStatus","addContact","showPhone","add_phone_privacy_exception","deleteContacts","photoTypeSet","AppWebPagesManager","webpages","pendingWebPages","updateWebPage","apiWebPage","oldWebPage","isUpdated","siteName","site_name","shortTitle","author","pendingSet","getWebPage","readBlobAsArrayBuffer","reader","FileReader","readBlobAs","fileNameRFC","escape","DownloadWriter","serviceMessagePort","getServiceMessagePort","write","chunk","saveToStorage","DownloadStorage","getFile","prepareWriting","headers","cancel","getWriter","MIN_PART_SIZE","IGNORE_ERRORS","ApiFileManager","cacheStorage","downloadStorage","downloadPromises","uploadPromises","downloadPulls","downloadActives","refreshReferencePromises","maxUploadParts","maxDownloadParts","uncompressTGS","uncompressTGV","svgIndex","__","fixFirefoxSvg","TextEncoder","convertWebp","convertOpus","webFileDcId","webfile_dc_id","upload_max_fileparts_premium","upload_max_fileparts_default","downloadRequest","activeDelta","downloadPull","downloadCheck","downloadLimit","setQueueId","getFileStorage","cancelDownload","canceled","requestWebFilePart","checkCancel","fileDownload","getDelta","checkedReference","getLimitPart","isUpload","maxParts","maxPartSize","inputFileLocation","isDownloading","getDownload","getUpload","getConvertMethod","IS_OPUS_SUPPORTED","allocateDeferredPromises","startOffset","delayed","writeDeferred","writePromise","originalMimeType","convertMethod","getDownloadFileNameFromOptions","cacheFileName","errorHandler","prepared","cachePrepared","downloadPrepared","possibleSize","_errorHandler","writer","truncate","readBlobAsUint8Array","isWebFile","requestPart","dispatchProgress","throttledDispatchProgress","superpuper","isFinal","getParts","replaceParts","processedResult","realSize","Infinity","getDownloadMediaDetails","downloadMediaURL","downloadMediaVoid","fileSize","isBigFile","partSize","totalParts","fileId","resultInputFile","parts","md5_checksum","resolved","it","_part","doneParts","file_id","file_part","file_total_parts","fileUpload","generator","ApiManagerMethods","apiPromisesSingleProcess","apiPromisesSingle","apiPromisesCacheable","afterMessageIdTemp","setUserAuth","prepareTempMessageId","queryJSON","cacheKey","oldPromise","getNewPromise","newPromise","ignore_restriction_reasons","ApiManager","cachedNetworkers","cachedExportPromise","gettingNetworkers","baseDcId","afterMessageTempIds","changeTransportType","updateConfig","iterateNetworkers","getTransportType","connections","dcs","array","oldTransportType","oldObject","oldGetKey","newGetKey","info","changeNetworkerTransport","getBaseDcId","setBaseDcId","userAuth","dcID","user_auth","wasDcId","getNetworker","setOnDrainIfNeeded","dc","logOut","loggingOut","storageKeys","storageResult","logoutPromises","ignoreErrors","toggleStorages","generateNetworkerGetKey","networkers","maxNetworkers","found","isOnline","ak","authKeyHex","serverSaltHex","authKey","bytesFromHex","authKeyId","serverSalt","networkerFactory","authorizer","_error","newTransportType","removeTransport","stack","getNetworkerVoid","oldTransport","changeTransport","onNetworkerDrain","onDrain","removeNetworker","isFileNetworker","canRelease","setDrainTimeout","updatesProcessor","cachedNetworker","startTime","interval","isStopped","clearInterval","performRequest","wrapApiCall","exportResolve","exportReject","exportedAuth","newDcId","unsetConnectionInited","rawError","waitTime","floodMaxTimeout","attachPromise","originalError","PeersStorage","neededPeers","singlePeerMap","ThumbsStorage","thumbsCache","thumbFullSize","intToUint","ulongFromInts","high","low","shiftLeft","safeBigInt","ulongBigInt","pow","longBigInt","divide","bigIntFromBytes","base","boolFalse","predicate","boolTrue","vector","gzipPacked","TLSerialization","mtproto","startMaxLength","createBuffer","ArrayBuffer","intView","Int32Array","byteView","getArray","resultBuffer","resultInt32","subarray","getBuffer","getBytes","typed","resultArray","getOffset","checkLength","needBytes","previousBuffer","previousArray","writeInt","field","storeInt","storeBool","storeLongP","iHigh","iLow","storeLong","sLong","storeIntBytes","_bigInt","bigInt","isNegative","quotient","remainder","divmod","toJSNumber","storeDouble","Float64Array","storeString","sUTF8","unescape","storeBytes","bits","storeRawBytes","storeMethod","methodName","methodData","methods","m","flagsOffsets","param","condType","fieldBit","storeObject","paramName","substr","itemType","schema","isBare","constructorData","TLDeserialization","readInt","fetchInt","fetchDouble","doubleView","fetchLong","ulong","greater","minus","greaterOrEquals","abs","fetchBool","fetchObject","fetchString","String","fromCharCode","decodeURIComponent","fetchBytes","fetchIntBytes","fetchRawBytes","fetchVector","fallback","checkType","constructorCmp","uncompressed","constructorsIndex","schemaFallback","int1","int2","overrideKey","isCond","formatJSONValue","jsonValue","objectValues","objectValue","setOffset","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","bufferConcats","delays","disconnectDelayMin","disconnectDelayMax","pingInterval","pingMaxTime","connectionTimeout","RESEND_OPTIONS","noSchedule","notContentRelated","invokeAfterMsgConstructor","networkerTempId","MTPNetworker","lastServerMessages","sentMessages","pendingMessages","pendingAcks","pendingResendReq","nextReq","checkConnectionPeriod","lastResponseTime","activeRequests","sendPingDelayDisconnect","pingDelayDisconnectDeferred","lastPingTime","disconnectDelay","round","timeoutTime","lastPingStartTime","pingId","lastPingDelayDisconnectId","wrapMtpCall","ping_id","disconnect_delay","bindPrefix","rejectTimeout","elapsedTime","checkLongPoll","isClean","longPollPending","sleepAfter","sendLongPoll","checkConnection","clearCheckConnectionTimeout","serializer","pingMessage","generateId","seq_no","generateSeqNo","sendEncryptedRequest","toggleOffline","checkConnectionTimeout","authKeyUint8","convertToUint8Array","isFileUpload","isFileDownload","updateSession","seqNo","prevSessionId","updateSentMessage","sentMessageId","sentMessage","container","inner","innerSentMessageId","innerSentMessage","pushMessage","wrapMtpMessage","connectionInited","invokeWithLayer","initConnection","resultType","isAPI","nextReqTimeout","longPollInterval","clearPingDelayDisconnect","forceReconnectTimeout","sendingLongPoll","max_delay","wait_after","max_wait","noResponse","longPoll","delay","checkConnectionRetryAt","scheduleRequest","handleSentEncryptedRequestHTTP","noResponseMsgs","sqrt","pushResend","shouldResolve","onDrainTimeout","willChange","onConnectionStatusChange","innerMsgId","acked","getMsgKey","dataWithPadding","x","msgKeyLargePlain","msgKeyLarge","getAesKeyIv","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","akStopped","performScheduledRequest","ackMsgIds","msg_ids","pendingResendReqLength","outMessage","messagesByteLen","hasApiCall","hasHttpWait","lengthOverflow","compare","messageByteLength","generateContainerMessage","messageWithBody","innerMessages","getEncryptedMessage","keyIv","getDecryptedMessage","encryptedData","getEncryptedOutput","dataBuffer","paddingLength","encryptedResult","requestData","baseError","responseBuffer","deserializer","bytesCmp","calcMsgKey","totalLength","messageBodyLength","messageBody","mt_message","seqno","mt_rpc_result","req_msg_id","applyServerSalt","newServerSalt","toArray","ackMessage","reqResend","notEmpty","processMessageAck","error_message","error_code","msg","applyServerTime","serverTime","shiftRight","innerMessage","new_server_salt","bad_msg_id","changedTimeOffset","badMessage","first_msg_id","server_salt","answer_msg_id","lastResendReq","lastResend","pendingResend","reqMsgId","badMsgId","pos","NetworkerFactory","startAll","stoppedNetworkers","stopAll","setLanguage","testPublicKeysHex","modulus","exponent","publisKeysHex","publicKeysParsed","preparePromise","prepare","keyParsed","RSAPublicKey","fingerprintBytes","fingerprints","fingerprintHex","fill","foundKey","fingerprint","bytesXor","bytes1","bytes2","Authorizer","sendPlainRequest","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","sendReqPQ","nonce","rsaKeysManager","serverNonce","server_nonce","pq","server_public_key_fingerprints","publicKey","pAndQ","sendReqDhParams","newNonce","p_q_inner_data_dc","new_nonce","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","getKeyAesEncrypted","req_DH_params","public_key_fingerprint","encrypted_data","requestBytes","newNonceHash","new_nonce_hash","decryptServerDhDataAnswer","encrypted_answer","sendSetClientDhParams","encryptedAnswer","localTime","tmpAesKey","tmpAesIv","answerWithHash","answerWithPadding","g","dhPrime","dh_prime","gA","g_a","server_time","retry","verifyDhParams","dhPrimeHex","gABigInt","dhPrimeBigInt","subtract","twoPow","gBytes","gB","retry_id","authKeyHash","authKeyAux","newNonceHash1","new_nonce_hash1","newNonceHash2","new_nonce_hash2","newNonceHash3","new_nonce_hash3","getTransportTypePromise","_try","TimeManager","lastMessageId","timeOffset","timeTicks","newTimeOffset","changed","server_time_offset","AppWebDocsManager","webDocument","AppPaymentsManager","getInputInvoiceBySlug","getInputInvoiceByPeerId","getPaymentForm","invoice","paymentForm","getPaymentReceipt","validateRequestedInfo","sendPaymentForm","formId","requestedInfoId","shippingOptionId","credentials","tipAmount","form_id","requested_info_id","shipping_option_id","tip_amount","clearSavedInfo","appManagersManager","cryptoWorkersURLs","cryptoPortsAttached","cryptoPortPromise","getManagers","manager","apply","ports","newURLs","createManagers","appAvatarsManager","appCallsManager","appPrivacyManager","appInlineBotsManager","appEmojiManager","passwordManager","appPaymentsManager","_serviceMessagePort","_isServiceWorkerOnline","pushedKeys","clearWrite","invokeExceptSource","serviceWorkerOnline","serviceWorkerPort","detachPort","attachPort","messagePort","onConnect","onDisconnect","listenPort","sendPort","attachListenPort","attachSendPort","setOnPortDisconnect","listenMessagePort","NULL_PEER_ID","REPLIES_PEER_ID","REPLIES_HIDDEN_CHANNEL_ID","SERVICE_PEER_ID","MUTE_UNTIL","MAX_FILE_SAVE_SIZE","FOLDER_ID_ALL","FOLDER_ID_ARCHIVE","REAL_FOLDERS","START_LOCAL_ID","CAN_COMBINE_ENTITIES","combineSameEntities","nextEntityIdx","_i","nextEntity","SINGLE_ENTITIES","findConflictingEntity","currentEntities","newEntity","singleEnd","currentEntity","ALPHA_CHARS_REG_EXP","URL_ALPHANUMERIC_REG_EXP_PART","URL_PROTOCOL_REG_EXP_PART","URL_REG_EXP","URL_ANY_PROTOCOL_REG_EXP","FULL_REG_EXP","EMAIL_REG_EXP","MARKDOWN_REG_EXP","MARKDOWN_ENTITIES","PASS_CONFLICTING_ENTITIES","PHONE_NUMBER_REG_EXP","newEntities","filtered","sortEntities","encodeEmoji","emojiText","unicodeSurrogates","points","char","toCodePoints","removeVS16s","vs16RegExp","zeroWidthJoiner","rawEmoji","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","getter","__esModule","definition","enumerable","chunkId","miniCssF","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","scriptUrl","importScripts","currentScript","src","scripts","getElementsByTagName","retries","realSrc","cacheBust","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","runtime"],"sourceRoot":""}
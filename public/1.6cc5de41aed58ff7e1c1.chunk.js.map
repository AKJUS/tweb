{"version":3,"sources":["webpack:///./src/lib/webp/webp.worker.ts","webpack:///./src/lib/webp/webpWorkerController.ts","webpack:///./src/lib/mtproto/singleInstance.ts","webpack:///./src/lib/mtproto/webPushApiManager.ts","webpack:///./src/lib/mtproto/mtproto.worker.ts","webpack:///./src/lib/mtproto/transports/websocket.ts","webpack:///./src/lib/mtproto/mtprotoworker.ts","webpack:///./src/lib/crypto/crypto_methods.ts","webpack:///./src/helpers/random.ts","webpack:///./src/helpers/string.ts","webpack:///./src/helpers/bytes.ts","webpack:///./src/lib/langPack.ts"],"names":["Worker_fn","Worker","webpWorkerController","convertPromises","this","worker","addEventListener","e","payload","data","fileName","indexOf","promise","bytes","resolve","reject","postMessage","init","undefined","isWebpSupportedCache","document","createElement","toDataURL","startsWith","hasOwnProperty","convertPromise","type","singleInstance","log","clearInstance","masterInstance","deactivated","warn","delete","deactivateInstance","deactivateTimeout","idle","dispatchEvent","checkInstance","isIDLE","time","Date","now","newInstance","id","instanceID","get","then","curInstance","set","xt_instance","startAll","initial","clearTimeout","stopAll","window","setTimeout","started","reset","setInterval","documentElement","WebPushApiManager","isAvailable","isPushEnabled","localNotificationsAvailable","settings","isFirefox","navigator","userAgent","toLowerCase","userVisibleOnly","subscribe","serviceWorker","ready","reg","pushManager","subscription","pushSubscriptionNotify","catch","Notification","permission","isAliveNotify","baseUrl","location","href","replace","lang","ACTIONS_LANG_MAP","push_action_mute1d","push_action_settings","push_message_nopreview","action","format","task","localNotifications","controller","isAliveTO","getSubscription","setUpServiceWorkerChannel","err","error","unsubscribe","successful","newSettings","addServiceWorkerTaskListener","reload","event","subscriptionObj","toJSON","endpoint","keys","p256dh","auth","tokenType","tokenValue","JSON","stringify","webPushApiManager","dcId","url","logSuffix","super","debug","handleOpen","handleError","close","handleClose","removeListeners","handleMessage","byteLength","send","body","length","ws","logTypes","Error","Log","Debug","logger","connect","removeEventListener","WebSocket","binaryType","apiManagerProxy","performTaskWorker","buffer","salt","iterations","keyBytes","ivBytes","encryptedBytes","publicKey","x","y","m","toString","password","state","isNew","afterMessageIdTemp","taskId","awaiting","pending","updatesProcessor","hashes","apiPromisesSingle","apiPromisesCacheable","isSWRegistered","sockets","Map","taskListeners","taskListenersSW","onWorkerMessage","callback","update","progress","rootScope","finalizeTask","result","start","registerServiceWorker","addTaskListener","Promise","all","deleteDatabase","sessionStorage","clear","forceUnsubscribe","finally","socketTask","socket","onOpen","onClose","onMessage","storageTask","args","res","language","performTaskWorkerVoid","registerWorker","register","scope","registration","installing","waiting","active","onServiceWorkerFail","releasePending","bind","isWebpSupported","name","onWorkerFirstMessage","once","deferred","taskName","params","push","forEach","method","options","o","prepareTempMessageId","messageId","invokeApi","queryJSON","cached","hash","_","includes","q","cache","item","override","fulfilled","timeout","cacheSeconds","timestamp","verify","queueId","userAuth","dcID","date","dc_id","enabled","nextRandomInt","maxValue","Math","floor","random","randomLong","limitSymbols","str","limitFrom","trim","slice","escapeRegExp","encodeEntities","value","charCodeAt","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","out","cut","end","part","_arrayIndex","lastIndex","index","partLength","convertInputKeyToKey","inputKey","convertKeyToInputKey","key","toUpperCase","capitalizeFirstLetter","string","charAt","bytesToHex","arr","i","join","bytesFromHex","hexString","len","parseInt","substr","bytesToBase64","mod3","nLen","nUint24","nIdx","String","fromCharCode","uint6ToBase64","nUint6","bytesCmp","bytes1","bytes2","convertToArrayBuffer","ArrayBuffer","BYTES_PER_ELEMENT","Uint8Array","bufferConcats","b","tmp","lastLength","langPack","I18n","pluralRules","cacheLangPackPromise","loadLocalLangPack","defaultCode","langPackCode","lastRequestedLangCode","langSign","strings","formatLocalStrings","default","saveLangPack","from_version","lang_code","version","local","loadLangPack","langCode","requestedServerLanguage","invokeApiCacheable","lang_pack","polyfillPromise","pushTo","v","getLangPack","_langPack","__langPack","___langPack","l","concat","appVersion","langPackVersion","applyLangPack","Intl","PluralRules","console","split","Array","from","querySelectorAll","element","instance","weakMap","superFormatter","input","indexHolder","match","p1","p2","p3","offset","append","plain","select","regExp","getCacheLangPack","getStrings","_Intl","Object","assign","WeakMap","IntlElementBase","property","classList","add","IntlElement","textContent","formatted","dataset","IntlDateElement","dateTimeFormat","DateTimeFormat","i18n","i18n_","_i18n","elements","useLast","delimiterKey"],"mappings":"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","file":"1.6cc5de41aed58ff7e1c1.chunk.js","sourcesContent":["export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"webp.worker.bd598dc02a03fd59d71a.bundle.worker.js\");\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport WebpWorker from 'worker-loader!./webp.worker';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { CancellablePromise, deferredPromise } from '../../helpers/cancellablePromise';\nimport apiManagerProxy from '../mtproto/mtprotoworker';\n\nexport type WebpConvertTask = {\n  type: 'convertWebp', \n  payload: {\n    fileName: string, \n    bytes: Uint8Array\n  }\n};\n\nexport class WebpWorkerController {\n  private worker: Worker;\n  private convertPromises: {[fileName: string]: CancellablePromise<Uint8Array>} = {};\n  private isWebpSupportedCache: boolean;\n  \n  init() {\n    this.worker = new WebpWorker();\n    this.worker.addEventListener('message', (e) => {\n      const payload = (e.data as WebpConvertTask).payload;\n\n      if(payload.fileName.indexOf('main-') === 0) {\n        const promise = this.convertPromises[payload.fileName];\n        if(promise) {\n          payload.bytes ? promise.resolve(payload.bytes) : promise.reject();\n          delete this.convertPromises[payload.fileName];\n        }\n      } else {\n        apiManagerProxy.postMessage(e.data);\n      }\n    });\n  }\n\n  postMessage(data: WebpConvertTask) {\n    if(this.init) {\n      this.init();\n      this.init = null;\n    }\n\n    this.worker.postMessage(data);\n  }\n\n  isWebpSupported() {\n    if(this.isWebpSupportedCache === undefined) {\n      this.isWebpSupportedCache = document.createElement('canvas').toDataURL('image/webp').startsWith('data:image/webp');\n    }\n\n    return this.isWebpSupportedCache;\n  }\n\n  convert(fileName: string, bytes: Uint8Array) {\n    fileName = 'main-' + fileName;\n\n    if(this.convertPromises.hasOwnProperty(fileName)) {\n      return this.convertPromises[fileName];\n    }\n    \n    const convertPromise = deferredPromise<Uint8Array>();\n\n    this.postMessage({type: 'convertWebp', payload: {fileName, bytes}});\n\n    return this.convertPromises[fileName] = convertPromise;\n  }\n}\n\nconst webpWorkerController = new WebpWorkerController();\nMOUNT_CLASS_TO.webpWorkerController = webpWorkerController;\nexport default webpWorkerController;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { nextRandomInt } from \"../../helpers/random\";\nimport { logger } from \"../logger\";\nimport rootScope from \"../rootScope\";\nimport sessionStorage from \"../sessionStorage\";\nimport apiManager from \"./mtprotoworker\";\n\nexport type AppInstance = {\n  id: number,\n  idle: boolean,\n  time: number\n};\n\nconst CHECK_INSTANCE_INTERVAL = 5000; \nconst DEACTIVATE_TIMEOUT = 30000;\nconst MULTIPLE_TABS_THRESHOLD = 20000;\n\nexport class SingleInstance {\n  private instanceID: number;\n  private started: boolean;\n  private masterInstance: boolean;\n  private deactivateTimeout: number;\n  private deactivated: boolean;\n  private initial: boolean;\n  private log = logger('INSTANCE');\n\n  public start() {\n    if(!this.started/*  && !Config.Navigator.mobile && !Config.Modes.packed */) {\n      this.started = true;\n\n      this.reset();\n      //IdleManager.start();\n\n      rootScope.addEventListener('idle', this.checkInstance);\n      setInterval(this.checkInstance, CHECK_INSTANCE_INTERVAL);\n      this.checkInstance();\n\n      try {\n        document.documentElement.addEventListener('beforeunload', this.clearInstance);\n      } catch(e) {}\n    }\n  }\n\n  public reset() {\n    this.instanceID = nextRandomInt(0xFFFFFFFF);\n    this.masterInstance = false;\n    if(this.deactivateTimeout) clearTimeout(this.deactivateTimeout);\n    this.deactivateTimeout = 0;\n    this.deactivated = false;\n    this.initial = false;\n  }\n\n  public clearInstance = () => {\n    if(this.masterInstance && !this.deactivated) {\n      this.log.warn('clear master instance');\n      sessionStorage.delete('xt_instance');\n    }\n  };\n\n  public activateInstance() {\n    if(this.deactivated) {\n      this.reset();\n      this.checkInstance(false);\n      rootScope.dispatchEvent('instance_activated');\n    }\n  }\n\n  public deactivateInstance = () => {\n    if(this.masterInstance || this.deactivated) {\n      return false;\n    }\n\n    this.log('deactivate');\n    this.deactivateTimeout = 0;\n    this.deactivated = true;\n    this.clearInstance();\n    //$modalStack.dismissAll();\n\n    //document.title = _('inactive_tab_title_raw')\n\n    rootScope.idle.deactivated = true;\n    rootScope.dispatchEvent('instance_deactivated');\n  };\n\n  public checkInstance = (idle = rootScope.idle && rootScope.idle.isIDLE) => {\n    if(this.deactivated) {\n      return false;\n    }\n    \n    const time = Date.now();\n    const newInstance: AppInstance = {\n      id: this.instanceID, \n      idle, \n      time\n    };\n\n    sessionStorage.get('xt_instance', false).then((curInstance: AppInstance) => {\n      // this.log('check instance', newInstance, curInstance)\n      if(!idle ||\n          !curInstance ||\n          curInstance.id === this.instanceID ||\n          curInstance.time < (time - MULTIPLE_TABS_THRESHOLD)) {\n        sessionStorage.set({xt_instance: newInstance});\n\n        if(!this.masterInstance) {\n          apiManager.startAll();\n          if(!this.initial) {\n            this.initial = true;\n          } else {\n            this.log.warn('now master instance', newInstance);\n          }\n\n          this.masterInstance = true;\n        }\n\n        if(this.deactivateTimeout) {\n          clearTimeout(this.deactivateTimeout);\n          this.deactivateTimeout = 0;\n        }\n      } else {\n        if(this.masterInstance) {\n          apiManager.stopAll();\n          this.log.warn('now idle instance', newInstance);\n          if(!this.deactivateTimeout) {\n            this.deactivateTimeout = window.setTimeout(this.deactivateInstance, DEACTIVATE_TIMEOUT);\n          }\n\n          this.masterInstance = false;\n        }\n      }\n    });\n  };\n}\n\nconst singleInstance = new SingleInstance();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.singleInstance = singleInstance);\nexport default singleInstance;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { NotificationSettings } from \"../appManagers/appNotificationsManager\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { copy } from \"../../helpers/object\";\nimport { logger } from \"../logger\";\nimport rootScope from \"../rootScope\";\nimport { ServiceWorkerNotificationsClearTask, ServiceWorkerPingTask, ServiceWorkerPushClickTask } from \"../serviceWorker/index.service\";\nimport apiManager from \"./mtprotoworker\";\nimport I18n, { LangPackKey } from \"../langPack\";\nimport { isMobile } from \"../../helpers/userAgent\";\n\nexport type PushSubscriptionNotifyType = 'init' | 'subscribe' | 'unsubscribe';\nexport type PushSubscriptionNotifyEvent = `push_${PushSubscriptionNotifyType}`;\n\nexport type PushSubscriptionNotify = {\n  tokenType: number,\n  tokenValue: string\n};\n\nexport class WebPushApiManager {\n  public isAvailable = true;\n  private isPushEnabled = false;\n  private localNotificationsAvailable = true;\n  private started = false;\n  private settings: NotificationSettings & {baseUrl?: string} = {} as any;\n  private isAliveTO: any;\n  private isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  private userVisibleOnly = this.isFirefox ? false : true;\n  private log = logger('PM');\n\n  constructor() {\n    if(!('PushManager' in window) ||\n      !('Notification' in window) ||\n      !('serviceWorker' in navigator)) {\n      this.log.warn('Push messaging is not supported.');\n      this.isAvailable = false;\n      this.localNotificationsAvailable = false;\n    }\n\n    if(this.isAvailable && Notification.permission === 'denied') {\n      this.log.warn('The user has blocked notifications.');\n    }\n  }\n\n  public start() {\n    if(!this.started) {\n      this.started = true;\n      this.getSubscription();\n      this.setUpServiceWorkerChannel();\n    }\n  }\n\n  public setLocalNotificationsDisabled() {\n    this.localNotificationsAvailable = false;\n  }\n\n  public getSubscription() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.isPushEnabled = !!subscription;\n        this.pushSubscriptionNotify('init', subscription);\n      }).catch((err) => {\n        this.log.error('Error during getSubscription()', err);\n      });\n    });\n  }\n\n  public subscribe = () => {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.subscribe({userVisibleOnly: this.userVisibleOnly}).then((subscription) => {\n        // The subscription was successful\n        this.isPushEnabled = true;\n        this.pushSubscriptionNotify('subscribe', subscription);\n      }).catch((e) => {\n        if(Notification.permission === 'denied') {\n          this.log('Permission for Notifications was denied');\n        } else {\n          this.log('Unable to subscribe to push.', e);\n          if(!this.userVisibleOnly) {\n            this.userVisibleOnly = true;\n            setTimeout(this.subscribe, 0);\n          }\n        }\n      });\n    });\n  }\n\n  public unsubscribe() {\n    if(!this.isAvailable) {\n      return;\n    }\n    \n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.isPushEnabled = false;\n\n        if(subscription) {\n          this.pushSubscriptionNotify('unsubscribe', subscription);\n\n          setTimeout(() => {\n            subscription.unsubscribe().then((successful) => {\n              this.isPushEnabled = false;\n            }).catch((e) => {\n              this.log.error('Unsubscription error: ', e);\n            });\n          }, 3000);\n        }\n      }).catch((e) => {\n        this.log.error('Error thrown while unsubscribing from ' +\n          'push messaging.', e);\n      });\n    });\n  }\n\n  public forceUnsubscribe() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.log.warn('force unsubscribe', subscription);\n        if(subscription) {\n          subscription.unsubscribe().then((successful) => {\n            this.log.warn('force unsubscribe successful', successful);\n            this.isPushEnabled = false;\n          }).catch((e) => {\n            this.log.error('Unsubscription error: ', e);\n          });\n        }\n      }).catch((e) => {\n        this.log.error('Error thrown while unsubscribing from ' +\n          'push messaging.', e);\n      });\n    });\n  }\n\n  public isAliveNotify = () => {\n    if(!this.isAvailable || rootScope.idle && rootScope.idle.deactivated) {\n      return;\n    }\n\n    this.settings.baseUrl = (location.href || '').replace(/#.*$/, '') + '#/im';\n\n    const lang: ServiceWorkerPingTask['payload']['lang'] = {} as any;\n    const ACTIONS_LANG_MAP: Record<keyof ServiceWorkerPingTask['payload']['lang'], LangPackKey> = {\n      push_action_mute1d: isMobile ? 'PushNotification.Action.Mute1d.Mobile' : 'PushNotification.Action.Mute1d',\n      push_action_settings: isMobile ? 'PushNotification.Action.Settings.Mobile' : 'PushNotification.Action.Settings',\n      push_message_nopreview: 'PushNotification.Message.NoPreview'\n    };\n\n    for(const action in ACTIONS_LANG_MAP) {\n      lang[action as keyof typeof ACTIONS_LANG_MAP] = I18n.format(ACTIONS_LANG_MAP[action as keyof typeof ACTIONS_LANG_MAP], true);\n    }\n\n    const task: ServiceWorkerPingTask = {\n      type: 'ping',\n      payload: {\n        localNotifications: this.localNotificationsAvailable,\n        lang: lang,\n        settings: this.settings\n      }\n    };\n\n    if(navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage(task);\n    }\n\n    this.isAliveTO = setTimeout(this.isAliveNotify, 10000);\n  }\n\n  public setSettings(newSettings: WebPushApiManager['settings']) {\n    this.settings = copy(newSettings);\n    clearTimeout(this.isAliveTO);\n    this.isAliveNotify();\n  }\n\n  public hidePushNotifications() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    if(navigator.serviceWorker.controller) {\n      const task: ServiceWorkerNotificationsClearTask = {type: 'notifications_clear'};\n      navigator.serviceWorker.controller.postMessage(task);\n    }\n  }\n\n  public setUpServiceWorkerChannel() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    apiManager.addServiceWorkerTaskListener('push_click', (task: ServiceWorkerPushClickTask) => {\n      if(rootScope.idle && rootScope.idle.deactivated) {\n        // AppRuntimeManager.reload(); // WARNING\n        location.reload();\n        return;\n      }\n\n      rootScope.dispatchEvent('push_notification_click', task.payload);\n    });\n\n    navigator.serviceWorker.ready.then(this.isAliveNotify);\n  }\n\n  public pushSubscriptionNotify(event: PushSubscriptionNotifyType, subscription?: PushSubscription) {\n    if(subscription) {\n      const subscriptionObj: PushSubscriptionJSON = subscription.toJSON();\n      if(!subscriptionObj ||\n        !subscriptionObj.endpoint ||\n        !subscriptionObj.keys ||\n        !subscriptionObj.keys.p256dh ||\n        !subscriptionObj.keys.auth) {\n        this.log.warn('Invalid push subscription', subscriptionObj);\n        this.unsubscribe();\n        this.isAvailable = false;\n        this.pushSubscriptionNotify(event);\n        return;\n      }\n      \n      this.log.warn('Push', event, subscriptionObj);\n      rootScope.dispatchEvent(('push_' + event) as PushSubscriptionNotifyEvent, {\n        tokenType: 10,\n        tokenValue: JSON.stringify(subscriptionObj)\n      });\n    } else {\n      this.log.warn('Push', event, false);\n      rootScope.dispatchEvent(('push_' + event) as PushSubscriptionNotifyEvent, false as any);\n    }\n  }\n}\n\nconst webPushApiManager = new WebPushApiManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.webPushApiManager = webPushApiManager);\nexport default webPushApiManager;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"mtproto.worker.2e9f58aa4eb052662517.bundle.worker.js\");\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { logger, LogTypes } from '../../logger';\nimport Modes from '../../../config/modes';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport { MTConnection } from './transport';\n\nexport default class Socket extends EventListenerBase<{\n  open: () => void,\n  message: (buffer: ArrayBuffer) => any,\n  close: () => void,\n}> implements MTConnection {\n  private ws: WebSocket;\n  private log: ReturnType<typeof logger>;\n  private debug = Modes.debug && false;\n\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\n    super();\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n    this.connect();\n\n    return this;\n  }\n\n  private removeListeners() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.ws.removeEventListener('open', this.handleOpen);\n    this.ws.removeEventListener('close', this.handleClose);\n    this.ws.removeEventListener('error', this.handleError);\n    this.ws.removeEventListener('message', this.handleMessage);\n    this.ws = undefined;\n  }\n  \n  private connect() {\n    this.ws = new WebSocket(this.url, 'binary');\n    this.ws.binaryType = 'arraybuffer';\n    this.ws.addEventListener('open', this.handleOpen);\n    this.ws.addEventListener('close', this.handleClose);\n    this.ws.addEventListener('error', this.handleError);\n    this.ws.addEventListener('message', this.handleMessage);\n  }\n\n  public close() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.log.error('close execution');\n\n    try {\n      this.ws.close();\n    } catch(err) {\n\n    }\n    this.handleClose();\n  }\n  \n  private handleOpen = () => {\n    this.log('opened');\n\n    this.debug && this.log.debug('sending init packet');\n    this.dispatchEvent('open');\n  };\n\n  private handleError = (e: Event) => {\n    this.log.error('handleError', e);\n    this.close();\n  };\n\n  private handleClose = () => {\n    this.log('closed'/* , event, this.pending, this.ws.bufferedAmount */);\n\n    this.removeListeners();\n    this.dispatchEvent('close');\n  };\n\n  private handleMessage = (event: MessageEvent) => {\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\n\n    this.dispatchEvent('message', event.data as ArrayBuffer);\n  };\n\n  public send = (body: Uint8Array) => {\n    this.debug && this.log.debug('-> body length to send:', body.length);\n\n    this.ws.send(body);\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { LocalStorageProxyTask, LocalStorageProxyTaskResponse } from '../localStorage';\n//import type { LocalStorageProxyDeleteTask, LocalStorageProxySetTask } from '../storage';\nimport type { InvokeApiOptions } from '../../types';\nimport type { MethodDeclMap } from '../../layer';\nimport MTProtoWorker from 'worker-loader!./mtproto.worker';\n//import './mtproto.worker';\nimport { isObject } from '../../helpers/object';\nimport CryptoWorkerMethods from '../crypto/crypto_methods';\nimport { logger } from '../logger';\nimport rootScope from '../rootScope';\nimport webpWorkerController from '../webp/webpWorkerController';\nimport type { DownloadOptions } from './apiFileManager';\nimport type { ServiceWorkerTask } from '../serviceWorker/index.service';\nimport { UserAuth } from './mtproto_config';\nimport type { MTMessage } from './networker';\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\nimport Socket from './transports/websocket';\nimport IDBStorage from '../idb';\nimport singleInstance from './singleInstance';\nimport sessionStorage from '../sessionStorage';\nimport webPushApiManager from './webPushApiManager';\n\ntype Task = {\n  taskId: number,\n  task: string,\n  args: any[]\n};\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport class ApiManagerProxy extends CryptoWorkerMethods {\n  public worker: /* Window */Worker;\n  public postMessage: (...args: any[]) => void;\n  private afterMessageIdTemp = 0;\n\n  private taskId = 0;\n  private awaiting: {\n    [id: number]: {\n      resolve: any,\n      reject: any,\n      taskName: string\n    }\n  } = {} as any;\n  private pending: Array<Task> = [];\n\n  public updatesProcessor: (obj: any) => void = null;\n\n  private log = logger('API-PROXY');\n\n  private hashes: {[method: string]: HashOptions} = {};\n\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  private isSWRegistered = true;\n\n  private debug = DEBUG /* && false */;\n\n  private sockets: Map<number, Socket> = new Map();\n\n  private taskListeners: {[taskType: string]: (task: any) => void} = {};\n  private taskListenersSW: {[taskType: string]: (task: any) => void} = {};\n\n  public onServiceWorkerFail: () => void;\n\n  constructor() {\n    super();\n    this.log('constructor');\n\n    singleInstance.start();\n\n    this.registerServiceWorker();\n\n    this.addTaskListener('clear', () => {\n      Promise.all([\n        IDBStorage.deleteDatabase(), \n        sessionStorage.clear(),\n        webPushApiManager.forceUnsubscribe()\n      ]).finally(() => {\n        location.reload();\n      });\n    });\n\n    this.addTaskListener('connectionStatusChange', (task: any) => {\n      rootScope.dispatchEvent('connection_status_change', task.payload);\n    });\n\n    this.addTaskListener('convertWebp', (task) => {\n      webpWorkerController.postMessage(task);\n    });\n\n    this.addTaskListener('socketProxy', (task) => {\n      const socketTask = task.payload;\n      const id = socketTask.id;\n      //console.log('socketProxy', socketTask, id);\n\n      if(socketTask.type === 'send') {\n        const socket = this.sockets.get(id);\n        socket.send(socketTask.payload);\n      } else if(socketTask.type === 'close') {\n        const socket = this.sockets.get(id);\n        socket.close();\n      } else if(socketTask.type === 'setup') {\n        const socket = new Socket(socketTask.payload.dcId, socketTask.payload.url, socketTask.payload.logSuffix);\n        \n        const onOpen = () => {\n          //console.log('socketProxy onOpen');\n          this.postMessage({\n            type: 'socketProxy', \n            payload: {\n              type: 'open',\n              id\n            }\n          });\n        };\n        const onClose = () => {\n          this.postMessage({\n            type: 'socketProxy', \n            payload: {\n              type: 'close',\n              id\n            }\n          });\n\n          socket.removeEventListener('open', onOpen);\n          socket.removeEventListener('close', onClose);\n          socket.removeEventListener('message', onMessage);\n          this.sockets.delete(id);\n        };\n        const onMessage = (buffer: ArrayBuffer) => {\n          this.postMessage({\n            type: 'socketProxy', \n            payload: {\n              type: 'message',\n              id,\n              payload: buffer\n            }\n          });\n        };\n\n        socket.addEventListener('open', onOpen);\n        socket.addEventListener('close', onClose);\n        socket.addEventListener('message', onMessage);\n        this.sockets.set(id, socket);\n      }\n    });\n\n    this.addTaskListener('localStorageProxy', (task: LocalStorageProxyTask) => {\n      const storageTask = task.payload;\n      // @ts-ignore\n      sessionStorage[storageTask.type](...storageTask.args).then(res => {\n        this.postMessage({\n          type: 'localStorageProxy',\n          id: task.id,\n          payload: res\n        } as LocalStorageProxyTaskResponse);\n      });\n    });\n\n    rootScope.addEventListener('language_change', (language) => {\n      this.performTaskWorkerVoid('setLanguage', language);\n    });\n\n                       \n    this.registerWorker();\n              \n  }\n\n  public isServiceWorkerOnline() {\n    return this.isSWRegistered;\n  }\n\n  private registerServiceWorker() {\n    if(!('serviceWorker' in navigator)) return;\n    \n    const worker = navigator.serviceWorker;\n    worker.register('./sw.js', {scope: './'}).then(registration => {\n      this.log('SW registered', registration);\n      this.isSWRegistered = true;\n\n      const sw = registration.installing || registration.waiting || registration.active;\n      sw.addEventListener('statechange', (e) => {\n        this.log('SW statechange', e);\n      });\n\n                        \n                                                                                                                     \n                                            \n                \n    }, (err) => {\n      this.isSWRegistered = false;\n      this.log.error('SW registration failed!', err);\n\n      if(this.onServiceWorkerFail) {\n        this.onServiceWorkerFail();\n      }\n    });\n\n    worker.addEventListener('controllerchange', () => {\n      this.log.warn('controllerchange');\n      this.releasePending();\n\n      worker.controller.addEventListener('error', (e) => {\n        this.log.error('controller error:', e);\n      });\n    });\n\n                      \n                                                             \n             \n    worker.addEventListener('message', (e) => {\n      const task: ServiceWorkerTask = e.data;\n      if(!isObject(task)) {\n        return;\n      }\n\n      const callback = this.taskListenersSW[task.type];\n      if(callback) {\n        callback(task);\n      }\n    });\n\n    this.addServiceWorkerTaskListener('requestFilePart', (task) => {\n      this.postMessage(task);\n    });\n              \n\n    worker.addEventListener('messageerror', (e) => {\n      this.log.error('SW messageerror:', e);\n    });\n  }\n\n  private onWorkerFirstMessage(worker: any) {\n    if(!this.worker) {\n      this.worker = worker;\n      this.log('set webWorker');\n\n      this.postMessage = this.worker.postMessage.bind(this.worker);\n\n      const isWebpSupported = webpWorkerController.isWebpSupported();\n      this.log('WebP supported:', isWebpSupported);\n      this.postMessage({type: 'webpSupport', payload: isWebpSupported});\n\n      this.releasePending();\n    }\n  }\n\n  public addTaskListener(name: keyof ApiManagerProxy['taskListeners'], callback: ApiManagerProxy['taskListeners'][typeof name]) {\n    this.taskListeners[name] = callback;\n  }\n\n  public addServiceWorkerTaskListener(name: keyof ApiManagerProxy['taskListenersSW'], callback: ApiManagerProxy['taskListenersSW'][typeof name]) {\n    this.taskListenersSW[name] = callback;\n  }\n\n  private onWorkerMessage = (e: MessageEvent) => {\n    //this.log('got message from worker:', e.data);\n\n    const task = e.data;\n\n    if(!isObject(task)) {\n      return;\n    }\n\n    const callback = this.taskListeners[task.type];\n    if(callback) {\n      callback(task);\n      return;\n    }\n\n    if(task.update) {\n      if(this.updatesProcessor) {\n        this.updatesProcessor(task.update);\n      }\n    } else if(task.progress) {\n      rootScope.dispatchEvent('download_progress', task.progress);\n    } else if(task.hasOwnProperty('result') || task.hasOwnProperty('error')) {\n      this.finalizeTask(task.taskId, task.result, task.error);\n    }\n  };\n\n                     \n  private registerWorker() {\n    //return;\n\n    const worker = new MTProtoWorker();\n    //const worker = window;\n    worker.addEventListener('message', this.onWorkerFirstMessage.bind(this, worker), {once: true});\n    worker.addEventListener('message', this.onWorkerMessage);\n\n    worker.addEventListener('error', (err) => {\n      this.log.error('WORKER ERROR', err);\n    });\n  }\n            \n\n  private finalizeTask(taskId: number, result: any, error: any) {\n    const deferred = this.awaiting[taskId];\n    if(deferred !== undefined) {\n      this.debug && this.log.debug('done', deferred.taskName, result, error);\n      error ? deferred.reject(error) : deferred.resolve(result);\n      delete this.awaiting[taskId];\n    }\n  }\n\n  public performTaskWorkerVoid(task: string, ...args: any[]) {\n    const params = {\n      task,\n      taskId: this.taskId,\n      args\n    };\n\n    this.pending.push(params);\n    this.releasePending();\n\n    this.taskId++;\n  }\n\n  public performTaskWorker<T>(task: string, ...args: any[]) {\n    this.debug && this.log.debug('start', task, args);\n\n    return new Promise<T>((resolve, reject) => {\n      this.awaiting[this.taskId] = {resolve, reject, taskName: task};\n      this.performTaskWorkerVoid(task, ...args);\n    });\n  }\n\n  private releasePending() {\n    //return;\n\n    if(this.postMessage) {\n      this.debug && this.log.debug('releasing tasks, length:', this.pending.length);\n      this.pending.forEach(pending => {\n        this.postMessage(pending);\n      });\n      \n      this.debug && this.log.debug('released tasks');\n      this.pending.length = 0;\n    }\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n  }\n\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    //console.log('will invokeApi:', method, params, options);\n    return this.performTaskWorker('invokeApi', method, params, options);\n  }\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n    \n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    //console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap>(method: T, params: Omit<MethodDeclMap[T]['req'], 'hash'> = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    //console.log('will invokeApi:', method, params, options);\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        (params as any).hash = cached.hash;\n      }\n    }\n\n    return this.invokeApi(method, params, options).then((result: any) => {\n      if(result._.includes('NotModified')) {\n        this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n        return cached.result;\n      }\n      \n      if(result.hash/*  || result.messages */) {\n        const hash = result.hash/*  || this.computeHash(result.messages) */;\n        \n        if(!this.hashes[method]) this.hashes[method] = {};\n        this.hashes[method][queryJSON] = {\n          hash,\n          result\n        };\n      }\n\n      return result;\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    if(this.apiPromisesSingle[q]) {\n      return this.apiPromisesSingle[q];\n    }\n\n    return this.apiPromisesSingle[q] = this.invokeApi(method, params, options).finally(() => {\n      delete this.apiPromisesSingle[q];\n    });\n  }\n\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\n    const queryJSON = JSON.stringify(params);\n    const item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item && item.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = window.setTimeout(() => {\n        delete cache[queryJSON];\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        if(verify(item.params)) {\n          if(item.timeout) {\n            clearTimeout(item.timeout);\n          }\n\n          delete cache[queryJSON];\n        }\n      }\n    }\n  }\n\n  /* private computeHash(smth: any[]) {\n    smth = smth.slice().sort((a, b) => a.id - b.id);\n    //return smth.reduce((hash, v) => (((hash * 0x4F25) & 0x7FFFFFFF) + v.id) & 0x7FFFFFFF, 0);\n    return smth.reduce((hash, v) => ((hash * 20261) + 0x80000000 + v.id) % 0x80000000, 0);\n  } */\n\n  public setBaseDcId(dcId: number) {\n    return this.performTaskWorker('setBaseDcId', dcId);\n  }\n\n  public setQueueId(queueId: number) {\n    return this.performTaskWorker('setQueueId', queueId);\n  }\n\n  public setUserAuth(userAuth: UserAuth | number) {\n    if(typeof(userAuth) === 'number') {\n      userAuth = {dcID: 0, date: Date.now() / 1000 | 0, id: userAuth};\n    }\n    \n    rootScope.dispatchEvent('user_auth', userAuth);\n    return this.performTaskWorker('setUserAuth', userAuth);\n  }\n\n  public getNetworker(dc_id: number, options?: InvokeApiOptions) {\n    return this.performTaskWorker('getNetworker', dc_id, options);\n  }\n\n  public logOut(): Promise<void> {\n    return this.performTaskWorker('logOut');\n  }\n\n  public cancelDownload(fileName: string) {\n    return this.performTaskWorker('cancelDownload', fileName);\n  }\n\n  public downloadFile(options: DownloadOptions) {\n    return this.performTaskWorker('downloadFile', options);\n  }\n\n  public uploadFile(options: {file: Blob | File, fileName: string}) {\n    return this.performTaskWorker('uploadFile', options);\n  }\n\n  public toggleStorage(enabled: boolean) {\n    return this.performTaskWorkerVoid('toggleStorage', enabled);\n  }\n\n  public stopAll() {\n    return this.performTaskWorkerVoid('stopAll');\n  }\n\n  public startAll() {\n    return this.performTaskWorkerVoid('startAll');\n  }\n}\n\nconst apiManagerProxy = new ApiManagerProxy();\nMOUNT_CLASS_TO.apiManagerProxy = apiManagerProxy;\nexport default apiManagerProxy;\n","import { convertToArrayBuffer } from \"../../helpers/bytes\";\nimport type { InputCheckPasswordSRP } from \"../../layer\";\nimport { aesEncryptSync, aesDecryptSync, sha256HashSync, sha1HashSync, bytesModPow } from \"./crypto_utils\";\n\nexport default abstract class CryptoWorkerMethods {\n  abstract performTaskWorker<T>(task: string, ...args: any[]): Promise<T>;\n\n  public sha1Hash(bytes: Parameters<typeof sha1HashSync>[0]): Promise<Uint8Array> {\n    return this.performTaskWorker<Uint8Array>('sha1-hash', bytes);\n  }\n\n  public sha256Hash(bytes: Parameters<typeof sha256HashSync>[0]) {\n    return this.performTaskWorker<number[]>('sha256-hash', bytes);\n  }\n\n  public pbkdf2(buffer: Uint8Array, salt: Uint8Array, iterations: number) {\n    return this.performTaskWorker<ArrayBuffer>('pbkdf2', buffer, salt, iterations);\n  }\n\n  public aesEncrypt(bytes: Parameters<typeof aesEncryptSync>[0], \n    keyBytes: Parameters<typeof aesEncryptSync>[1], \n    ivBytes: Parameters<typeof aesEncryptSync>[2]) {\n    return this.performTaskWorker<ReturnType<typeof aesEncryptSync>>('aes-encrypt', convertToArrayBuffer(bytes), \n      convertToArrayBuffer(keyBytes), convertToArrayBuffer(ivBytes));\n  }\n\n  public aesDecrypt(encryptedBytes: Parameters<typeof aesDecryptSync>[0], \n    keyBytes: Parameters<typeof aesDecryptSync>[1], \n    ivBytes: Parameters<typeof aesDecryptSync>[2]): Promise<ArrayBuffer> {\n    return this.performTaskWorker<ArrayBuffer>('aes-decrypt', \n      encryptedBytes, keyBytes, ivBytes)\n      .then(bytes => convertToArrayBuffer(bytes));\n  }\n\n  public rsaEncrypt(publicKey: {modulus: string, exponent: string}, bytes: any): Promise<number[]> {\n    return this.performTaskWorker<number[]>('rsa-encrypt', publicKey, bytes);\n  }\n\n  public factorize(bytes: Uint8Array) {\n    return this.performTaskWorker<[number[], number[], number]>('factorize', [...bytes]);\n  }\n\n  public modPow(x: Parameters<typeof bytesModPow>[0], y: Parameters<typeof bytesModPow>[1], m: Parameters<typeof bytesModPow>[2]) {\n    return this.performTaskWorker<ReturnType<typeof bytesModPow>>('mod-pow', x, y, m);\n  }\n\n  public gzipUncompress<T>(bytes: ArrayBuffer, toString?: boolean) {\n    return this.performTaskWorker<T>('gzipUncompress', bytes, toString);\n  }\n\n  public computeSRP(password: string, state: any, isNew = false): Promise<InputCheckPasswordSRP> {\n    return this.performTaskWorker('computeSRP', password, state, isNew);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport function nextRandomInt(maxValue: number) {\n  return Math.floor(Math.random() * maxValue);\n}\n\nexport function randomLong() {\n  return '' + nextRandomInt(0xFFFFFFFF) + nextRandomInt(0xFFFFFF);\n  //return '' + parseInt(nextRandomInt(0xFFFFFFFF).toString(16) + nextRandomInt(0xFFFFFFFF).toString(16), 16);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n/* export function stringMiddleOverflow(str: string, maxLength: number) {\n  return str.length > maxLength ? str.slice(0, maxLength / 2 | 0) + '...' + str.slice(-Math.round(maxLength / 2)) : str; \n} */\n\nexport function limitSymbols(str: string, length: number, limitFrom = length + 10) {\n  str = str.trim();\n  if(str.length > limitFrom) {\n    str = str.slice(0, length)/* .replace(/\\s*$/, '') */ + '...';\n  }\n\n  return str;\n}\n\n// credits to https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\nexport function escapeRegExp(str: string) {\n  return str\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n    .replace(/-/g, '\\\\x2d');\n}\n\nexport function encodeEntities(value: string) {\n  return value.replace(/&/g, '&amp;').replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, (value) => {\n    var hi = value.charCodeAt(0);\n    var low = value.charCodeAt(1);\n    return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n  }).replace(/([^\\#-~| |!])/g, (value) => { // non-alphanumeric\n    return '&#' + value.charCodeAt(0) + ';';\n  }).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nexport function splitStringByLength(str: string, maxLength: number) {\n  if(str.length < maxLength) return [str];\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\n  const delimiter = ' ';//'\\n';\n  const out: string[] = [];\n\n  const cut = (end?: number) => {\n    let part = str.slice(lastSliceStartIndex, end);\n    const _arrayIndex = arrayIndex++;\n    if(part.length > maxLength) {\n      let overflowPart = part.slice(maxLength);\n      const splitted = splitStringByLength(overflowPart, maxLength);\n      splitted.forEach(part => {\n        out[arrayIndex++] = part;\n      });\n\n      part = part.slice(0, maxLength);\n    }\n\n    lastSliceStartIndex = end;\n    length = 0;\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\n  };\n\n  let lastIndex = 0;\n  do {\n    let index = str.indexOf(delimiter, lastIndex);\n    if(index === -1) {\n      if(lastIndex !== (str.length - 1)) {\n        cut();\n      }\n\n      break;\n    }\n\n    index += delimiter.length;\n\n    const partLength = index - lastIndex;\n    if((length + partLength) > maxLength) {\n      cut(length);\n    }\n    \n    lastIndex = index;\n    length += partLength;\n  } while(true);\n\n  return out;\n}\n\n// https://stackoverflow.com/a/14824756\n/* export const checkRTL = (s: string) => {           \n  const ltrChars  = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF'+'\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF',\n    rtlChars      = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC',\n    rtlDirCheck   = new RegExp('^[^'+ltrChars+']*['+rtlChars+']');\n\n  return rtlDirCheck.test(s);\n}; */\n\n//(window as any).checkRTL = checkRTL;\n\nexport function convertInputKeyToKey(inputKey: string) {\n  const str = inputKey.replace('input', '');\n  return (str[0].toLowerCase() + str.slice(1)) as string;\n}\n\nexport function convertKeyToInputKey(key: string) {\n  key = key[0].toUpperCase() + key.slice(1);\n  key = 'input' + key;\n  return key;\n}\n\nexport function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nexport function bytesToHex(bytes: ArrayLike<number>) {\n  bytes = bytes || [];\n  let arr: string[] = [];\n  for(let i = 0; i < bytes.length; ++i) {\n    arr.push((bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16));\n  }\n  return arr.join('');\n}\n\nexport function bytesFromHex(hexString: string) {\n  const len = hexString.length;\n  let start = 0;\n  let bytes: number[] = [];\n\n  if(len % 2) { // read 0x581 as 0x0581\n    bytes.push(parseInt(hexString.charAt(0), 16));\n    ++start;\n  }\n\n  for(let i = start; i < len; i += 2) {\n    bytes.push(parseInt(hexString.substr(i, 2), 16));\n  }\n\n  return bytes;\n}\n\nexport function bytesToBase64(bytes: number[] | Uint8Array) {\n  let mod3: number;\n  let result = '';\n\n  for(let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; ++nIdx) {\n    mod3 = nIdx % 3;\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24);\n    if(mod3 === 2 || nLen - nIdx === 1) {\n      result += String.fromCharCode(\n        uint6ToBase64(nUint24 >>> 18 & 63),\n        uint6ToBase64(nUint24 >>> 12 & 63),\n        uint6ToBase64(nUint24 >>> 6 & 63),\n        uint6ToBase64(nUint24 & 63)\n      );\n      nUint24 = 0;\n    }\n  }\n\n  return result.replace(/A(?=A$|$)/g, '=');\n}\n\nexport function uint6ToBase64(nUint6: number) {\n  return nUint6 < 26\n    ? nUint6 + 65\n    : nUint6 < 52\n      ? nUint6 + 71\n      : nUint6 < 62\n        ? nUint6 - 4\n        : nUint6 === 62\n          ? 43\n          : nUint6 === 63\n            ? 47\n            : 65\n}\n\nexport function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\n  const len = bytes1.length;\n  if(len !== bytes2.length) {\n    return false;\n  }\n\n  for(let i = 0; i < len; ++i) {\n    if(bytes1[i] !== bytes2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function bytesXor(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\n  const len = bytes1.length;\n  const bytes: number[] = [];\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = bytes1[i] ^ bytes2[i];\n  }\n\n  return bytes;\n}\n\nexport function bytesToArrayBuffer(b: number[]) {\n  return (new Uint8Array(b)).buffer;\n}\n\nexport function convertToArrayBuffer(bytes: any | ArrayBuffer | Uint8Array) {\n  // Be careful with converting subarrays!!\n  if(bytes instanceof ArrayBuffer) {\n    return bytes;\n  }\n  if(bytes.buffer !== undefined &&\n    bytes.buffer.byteLength === bytes.length * bytes.BYTES_PER_ELEMENT) {\n    return bytes.buffer;\n  }\n  return bytesToArrayBuffer(bytes);\n}\n\nexport function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\n  if((bytes as Uint8Array).buffer !== undefined) {\n    return bytes as Uint8Array;\n  } else if(typeof(bytes) === 'string') {\n    return new TextEncoder().encode(bytes);\n  }\n\n  return new Uint8Array(bytes);\n}\n\nexport function bytesFromArrayBuffer(buffer: ArrayBuffer) {\n  const len = buffer.byteLength;\n  const byteView = new Uint8Array(buffer);\n  const bytes: number[] = [];\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = byteView[i];\n  }\n\n  return bytes;\n}\n\nexport function bufferConcat(buffer1: any, buffer2: any) {\n  const l1 = buffer1.byteLength || buffer1.length;\n  const l2 = buffer2.byteLength || buffer2.length;\n  const tmp = new Uint8Array(l1 + l2);\n  tmp.set(buffer1 instanceof ArrayBuffer ? new Uint8Array(buffer1) : buffer1, 0);\n  tmp.set(buffer2 instanceof ArrayBuffer ? new Uint8Array(buffer2) : buffer2, l1);\n\n  return tmp.buffer;\n}\n\nexport function bufferConcats(...args: any[]) {\n  let length = 0;\n  args.forEach(b => length += b.byteLength || b.length);\n\n  const tmp = new Uint8Array(length);\n  \n  let lastLength = 0;\n  args.forEach(b => {\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\n    lastLength += b.byteLength || b.length;\n  });\n\n  return tmp/* .buffer */;\n}\n\nexport function bytesFromWordss(input: Uint32Array) {\n  const o: number[] = [];\n  for(let i = 0, length = input.length * 4; i < length; ++i) {\n    o.push((input[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff);\n  }\n\n  return o;\n}\n\nexport function bytesToWordss(input: ArrayBuffer | Uint8Array) {\n  let bytes: Uint8Array;\n  if(input instanceof ArrayBuffer) bytes = new Uint8Array(input);\n  else bytes = input;\n\n  const words: number[] = [];\n  for(let i = 0, len = bytes.length; i < len; ++i) {\n    words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8);\n  }\n\n  return new Uint32Array(words);\n}\n\n// * https://stackoverflow.com/a/52827031\n/* export const isBigEndian = (() => {\n  const array = new Uint8Array(4);\n  const view = new Uint32Array(array.buffer);\n  return !((view[0] = 1) & array[0]);\n})(); */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport DEBUG, { MOUNT_CLASS_TO } from \"../config/debug\";\nimport { safeAssign } from \"../helpers/object\";\nimport { capitalizeFirstLetter } from \"../helpers/string\";\nimport type lang from \"../lang\";\nimport type langSign from \"../langSign\";\nimport { LangPackDifference, LangPackString } from \"../layer\";\nimport apiManager from \"./mtproto/mtprotoworker\";\nimport stateStorage from \"./stateStorage\";\nimport App from \"../config/app\";\nimport rootScope from \"./rootScope\";\n\nexport const langPack: {[actionType: string]: LangPackKey} = {\n  \"messageActionChatCreate\": \"ActionCreateGroup\",\n\t\"messageActionChatEditTitle\": \"ActionChangedTitle\",\n\t\"messageActionChatEditPhoto\": \"ActionChangedPhoto\",\n\t\"messageActionChatEditVideo\": \"ActionChangedVideo\",\n\t\"messageActionChatDeletePhoto\": \"ActionRemovedPhoto\",\n\t\"messageActionChatReturn\": \"ActionAddUserSelf\",\n\t\"messageActionChatReturnYou\": \"ActionAddUserSelfYou\",\n\t\"messageActionChatJoined\": \"ActionAddUserSelfMega\",\n\t\"messageActionChatJoinedYou\": \"ChannelMegaJoined\",\n  \"messageActionChatAddUser\": \"ActionAddUser\",\n  \"messageActionChatAddUsers\": \"ActionAddUser\",\n\t\"messageActionChatLeave\": \"ActionLeftUser\",\n\t\"messageActionChatLeaveYou\": \"YouLeft\",\n\t\"messageActionChatDeleteUser\": \"ActionKickUser\",\n\t\"messageActionChatJoinedByLink\": \"ActionInviteUser\",\n  \"messageActionPinMessage\": \"ActionPinnedNoText\",\n  \"messageActionContactSignUp\": \"Chat.Service.PeerJoinedTelegram\",\n\t\"messageActionChannelCreate\": \"ActionCreateChannel\",\n\t\"messageActionChannelEditTitle\": \"Chat.Service.Channel.UpdatedTitle\",\n\t\"messageActionChannelEditPhoto\": \"Chat.Service.Channel.UpdatedPhoto\",\n\t\"messageActionChannelEditVideo\": \"Chat.Service.Channel.UpdatedVideo\",\n  \"messageActionChannelDeletePhoto\": \"Chat.Service.Channel.RemovedPhoto\",\n  \"messageActionHistoryClear\": \"HistoryCleared\",\n\n  \"messageActionChannelMigrateFrom\": \"ActionMigrateFromGroup\",\n\n  \"messageActionPhoneCall.in_ok\": \"ChatList.Service.Call.incoming\",\n\t\"messageActionPhoneCall.out_ok\": \"ChatList.Service.Call.outgoing\",\n\t\"messageActionPhoneCall.in_missed\": \"ChatList.Service.Call.Missed\",\n\t\"messageActionPhoneCall.out_missed\": \"ChatList.Service.Call.Cancelled\",\n\n\t\"messageActionGroupCall.started\": \"ActionGroupCallJustStarted\",\n\t\"messageActionGroupCall.started_by\": \"ActionGroupCallStarted\",\n\t\"messageActionGroupCall.started_byYou\": \"ActionGroupCallStartedByYou\",\n\t\"messageActionGroupCall.ended_by\": \"Chat.Service.VoiceChatFinished\",\n\t\"messageActionGroupCall.ended_byYou\": \"Chat.Service.VoiceChatFinishedYou\",\n\n\t\"messageActionBotAllowed\": \"Chat.Service.BotPermissionAllowed\"\n};\n\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\n\nnamespace I18n {\n\texport const strings: Map<LangPackKey, LangPackString> = new Map();\n\tlet pluralRules: Intl.PluralRules;\n\n\tlet cacheLangPackPromise: Promise<LangPackDifference>;\n\texport let lastRequestedLangCode: string;\n\texport let requestedServerLanguage = false;\n\texport function getCacheLangPack(): Promise<LangPackDifference> {\n\t\tif(cacheLangPackPromise) return cacheLangPackPromise;\n\t\treturn cacheLangPackPromise = Promise.all([\n\t\t\tstateStorage.get('langPack') as Promise<LangPackDifference>,\n\t\t\tpolyfillPromise\n\t\t]).then(([langPack]) => {\n\t\t\tif(!langPack/*  || true */) {\n\t\t\t\treturn loadLocalLangPack();\n\t\t\t} else if(DEBUG && false) {\n\t\t\t\treturn getLangPack(langPack.lang_code);\n\t\t\t}/*  else if(langPack.appVersion !== App.langPackVersion) {\n\t\t\t\treturn getLangPack(langPack.lang_code);\n\t\t\t} */\n\t\t\t\n\t\t\tif(!lastRequestedLangCode) {\n\t\t\t\tlastRequestedLangCode = langPack.lang_code;\n\t\t\t}\n\t\t\t\n\t\t\tapplyLangPack(langPack);\n\t\t\treturn langPack;\n\t\t}).finally(() => {\n\t\t\tcacheLangPackPromise = undefined;\n\t\t});\n\t}\n\n\texport function loadLocalLangPack() {\n\t\tconst defaultCode = App.langPackCode;\n\t\tlastRequestedLangCode = defaultCode;\n\t\treturn Promise.all([\n\t\t\timport('../lang'),\n\t\t\timport('../langSign')\n\t\t]).then(([lang, langSign]) => {\n\t\t\tconst strings: LangPackString[] = [];\n\t\t\tformatLocalStrings(lang.default, strings);\n\t\t\tformatLocalStrings(langSign.default, strings);\n\n\t\t\tconst langPack: LangPackDifference = {\n\t\t\t\t_: 'langPackDifference',\n\t\t\t\tfrom_version: 0,\n\t\t\t\tlang_code: defaultCode,\n\t\t\t\tstrings,\n\t\t\t\tversion: 0,\n\t\t\t\tlocal: true\n\t\t\t};\n\t\t\treturn saveLangPack(langPack);\n\t\t});\n\t}\n\n\texport function loadLangPack(langCode: string) {\n\t\trequestedServerLanguage = true;\n\t\treturn Promise.all([\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\tlang_pack: App.langPack\n\t\t\t}),\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\tlang_pack: 'android'\n\t\t\t}),\n\t\t\timport('../lang'),\n\t\t\timport('../langSign'),\n\t\t\tpolyfillPromise\n\t\t]);\n\t}\n\n\texport function getStrings(langCode: string, strings: string[]) {\n\t\treturn apiManager.invokeApi('langpack.getStrings', {\n\t\t\tlang_pack: App.langPack,\n\t\t\tlang_code: langCode,\n\t\t\tkeys: strings\n\t\t});\n\t}\n\n\texport function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\n\t\tfor(const i in strings) {\n\t\t\t// @ts-ignore\n\t\t\tconst v = strings[i];\n\t\t\tif(typeof(v) === 'string') {\n\t\t\t\tpushTo.push({\n\t\t\t\t\t_: 'langPackString',\n\t\t\t\t\tkey: i,\n\t\t\t\t\tvalue: v\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpushTo.push({\n\t\t\t\t\t_: 'langPackStringPluralized',\n\t\t\t\t\tkey: i,\n\t\t\t\t\t...v\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn pushTo;\n\t}\n\n\texport function getLangPack(langCode: string) {\n\t\tlastRequestedLangCode = langCode;\n\t\treturn loadLangPack(langCode).then(([langPack, _langPack, __langPack, ___langPack, _]) => {\n\t\t\tlet strings: LangPackString[] = [];\n\n\t\t\t[__langPack, ___langPack].forEach(l => {\n\t\t\t\tformatLocalStrings(l.default as any, strings);\n\t\t\t});\n\n\t\t\tstrings = strings.concat(langPack.strings);\n\n\t\t\tfor(const string of _langPack.strings) {\n\t\t\t\tstrings.push(string);\n\t\t\t}\n\n\t\t\tlangPack.strings = strings;\n\t\t\treturn saveLangPack(langPack);\n\t\t});\n\t}\n\n\texport function saveLangPack(langPack: LangPackDifference) {\n\t\tlangPack.appVersion = App.langPackVersion;\n\n\t\treturn stateStorage.set({langPack}).then(() => {\n\t\t\tapplyLangPack(langPack);\n\t\t\treturn langPack;\n\t\t});\n\t}\n\n\texport const polyfillPromise = (function checkIfPolyfillNeeded() {\n\t\tif(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn import('./pluralPolyfill').then((_Intl) => {\n\t\t\t\t(window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\n\t\t\t});\n\t\t}\n\t})();\n\t\n\texport function applyLangPack(langPack: LangPackDifference) {\n\t\tif(langPack.lang_code !== lastRequestedLangCode) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code);\n\t\t} catch(err) {\n\t\t\tconsole.error('pluralRules error', err);\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\n\t\t}\n\n\t\tstrings.clear();\n\n\t\tfor(const string of langPack.strings) {\n\t\t\tstrings.set(string.key as LangPackKey, string);\n\t\t}\n\n\t\trootScope.dispatchEvent('language_change', langPack.lang_code);\n\n\t\tconst elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n\t\telements.forEach(element => {\n\t\t\tconst instance = weakMap.get(element);\n\n\t\t\tif(instance) {\n\t\t\t\tinstance.update();\n\t\t\t}\n\t\t});\n\t}\n\n\texport function superFormatter(input: string, args?: any[], indexHolder = {i: 0}) {\n\t\tlet out: (string | HTMLElement)[] = [];\n\t\tconst regExp = /(\\*\\*)(.+?)\\1|(\\n)|un\\d|%\\d\\$.|%./g;\n\n\t\tlet lastIndex = 0;\n\t\tinput.replace(regExp, (match, p1: any, p2: any, p3: any, offset: number, string: string) => {\n\t\t\t//console.table({match, p1, p2, offset, string});\n\n\t\t\tout.push(string.slice(lastIndex, offset));\n\n\t\t\tif(p1) {\n\t\t\t\t//offset += p1.length;\n\t\t\t\tswitch(p1) {\n\t\t\t\t\tcase '**': {\n\t\t\t\t\t\tconst b = document.createElement('b');\n\t\t\t\t\t\tb.append(...superFormatter(p2, args, indexHolder));\n\t\t\t\t\t\tout.push(b);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if(p3) {\n\t\t\t\tout.push(document.createElement('br'));\n\t\t\t} else if(args) {\n\t\t\t\tout.push(args[indexHolder.i++]);\n\t\t\t}\n\n\t\t\tlastIndex = offset + match.length;\n\t\t\treturn '';\n\t\t});\n\t\n\t\tif(lastIndex !== input.length) {\n\t\t\tout.push(input.slice(lastIndex));\n\t\t}\n\n\t\treturn out;\n\t}\n\t\n\texport function format(key: LangPackKey, plain: true, args?: any[]): string;\n\texport function format(key: LangPackKey, plain?: false, args?: any[]): (string | HTMLElement)[];\n\texport function format(key: LangPackKey, plain = false, args?: any[]): (string | HTMLElement)[] | string {\n\t\tconst str = strings.get(key);\n\t\tlet input: string;\n\t\tif(str) {\n\t\t\tif(str._ === 'langPackStringPluralized' && args?.length) {\n\t\t\t\tlet v = args[0] as number | string;\n\t\t\t\tif(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\n\t\t\t\tconst s = pluralRules.select(v);\n\t\t\t\t// @ts-ignore\n\t\t\t\tinput = str[s + '_value'] || str['other_value'];\n\t\t\t} else if(str._ === 'langPackString') {\n\t\t\t\tinput = str.value;\n\t\t\t} else {\n\t\t\t\t//input = '[' + key + ']';\n\t\t\t\tinput = key;\n\t\t\t}\n\t\t} else {\n\t\t\t//input = '[' + key + ']';\n\t\t\tinput = key;\n\t\t}\n\t\t\n\t\tif(plain) {\n\t\t\tif(args?.length) {\n\t\t\t\tconst regExp = /un\\d|%\\d\\$.|%./g;\n\t\t\t\tlet i = 0;\n\t\t\t\tinput = input.replace(regExp, (match, offset, string) => {\n\t\t\t\t\treturn '' + args[i++];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn input;\n\t\t} else {\n\t\t\treturn superFormatter(input, args);\n\t\t}\n\t}\n\n\texport const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\n\n\texport type IntlElementBaseOptions = {\n\t\telement?: HTMLElement,\n\t\tproperty?: /* 'innerText' |  */'innerHTML' | 'placeholder',\n\t};\n\n\tabstract class IntlElementBase<Options extends IntlElementBaseOptions> {\n\t\tpublic element: IntlElementBaseOptions['element'];\n\t\tpublic property: IntlElementBaseOptions['property'] = 'innerHTML';\n\t\n\t\tconstructor(options: Options) {\n\t\t\tthis.element = options.element || document.createElement('span');\n\t\t\tthis.element.classList.add('i18n');\n\t\t\t\n\t\t\tthis.update(options);\n\t\t\tweakMap.set(this.element, this);\n\t\t}\n\n\t\tabstract update(options?: Options): void;\n\t}\n\n\texport type IntlElementOptions = IntlElementBaseOptions & {\n\t\tkey: LangPackKey,\n\t\targs?: any[]\n\t};\n\texport class IntlElement extends IntlElementBase<IntlElementOptions> {\n\t\tpublic key: IntlElementOptions['key'];\n\t\tpublic args: IntlElementOptions['args'];\n\n\t\tpublic update(options?: IntlElementOptions) {\n\t\t\tsafeAssign(this, options);\n\t\n\t\t\tif(this.property === 'innerHTML') {\n\t\t\t\tthis.element.textContent = '';\n\t\t\t\tthis.element.append(...format(this.key, false, this.args));\n\t\t\t} else {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst v = this.element[this.property];\n\t\t\t\tconst formatted = format(this.key, true, this.args);\n\n\t\t\t\t// * hasOwnProperty won't work here\n\t\t\t\tif(v === undefined) this.element.dataset[this.property] = formatted;\n\t\t\t\telse (this.element as HTMLInputElement)[this.property] = formatted;\n\t\t\t}\n\t\t}\n\t}\n\n\texport type IntlDateElementOptions = IntlElementBaseOptions & {\n\t\tdate: Date,\n\t\toptions: Intl.DateTimeFormatOptions\n\t};\n\texport class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\n\t\tpublic date: IntlDateElementOptions['date'];\n\t\tpublic options: IntlDateElementOptions['options'];\n\n\t\tpublic update(options?: IntlDateElementOptions) {\n\t\t\tsafeAssign(this, options);\n\t\n\t\t\t//var options = { month: 'long', day: 'numeric' };\n\t\t\t\n\t\t\t// * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\n\t\t\tconst dateTimeFormat = new Intl.DateTimeFormat(lastRequestedLangCode + '-u-hc-h23', this.options);\n\t\t\t\n\t\t\t(this.element as any)[this.property] = capitalizeFirstLetter(dateTimeFormat.format(this.date));\n\t\t}\n\t}\n\n\texport function i18n(key: LangPackKey, args?: any[]) {\n\t\treturn new IntlElement({key, args}).element;\n\t}\n\t\n\texport function i18n_(options: IntlElementOptions) {\n\t\treturn new IntlElement(options).element;\n\t}\n\n\texport function _i18n(element: HTMLElement, key: LangPackKey, args?: any[], property?: IntlElementOptions['property']) {\n\t\treturn new IntlElement({element, key, args, property}).element;\n\t}\n}\n\nexport {I18n};\nexport default I18n;\n\nconst i18n = I18n.i18n;\nexport {i18n};\n\nconst i18n_ = I18n.i18n_;\nexport {i18n_};\n\nconst _i18n = I18n._i18n;\nexport {_i18n};\n\nexport function join(elements: HTMLElement[], useLast = true) {\n\tconst arr: HTMLElement[] = elements.slice(0, 1);\n  for(let i = 1; i < elements.length; ++i) {\n    const isLast = (elements.length - 1) === i;\n    const delimiterKey: LangPackKey = isLast && useLast ? 'WordDelimiterLast' : 'WordDelimiter';\n    arr.push(i18n(delimiterKey));\n    arr.push(elements[i]);\n  }\n\n\treturn arr;\n}\n\nMOUNT_CLASS_TO.I18n = I18n;\n"],"sourceRoot":""}
{"version":3,"file":"292.fd1c65cea6105dcd77a3.chunk.js","mappings":"8IAgBe,MAAMA,EAWnBC,YAAsBC,EAjBD,GAiBC,KAAAA,cAAAA,EAVf,KAAAC,QAAU,EACP,KAAAC,MAAoC,GACpC,KAAAC,UAAsC,IAAIC,IAE1C,KAAAC,YAA6B,KAC7B,KAAAC,cAA4B,KAE5B,KAAAC,KAAM,QAAO,KAAM,YAI3BC,KAAKC,cAAe,QAAS,IAAMD,KAAKE,iBAAiB,IAAI,GAGxDC,QACLH,KAAKL,UAAUQ,QAEfH,KAAKN,MAAMU,OAAS,EAOfC,OACFL,KAAKH,cAGRG,KAAKH,YAAc,IAAIS,SAAQ,CAACC,EAASC,KACvCR,KAAKF,cAAgBS,MAUlBE,SACDT,KAAKF,gBAETE,KAAKF,gBACLE,KAAKF,cAAgBE,KAAKH,YAAc,KAExCG,KAAKC,gBAGSS,YAAYC,G,qCAC1B,IAAGX,KAAKH,YAAR,CAIAG,KAAKL,UAAUiB,IAAID,GAMnB,UAIQX,KAAKa,SAASF,GACpB,MAAMG,GAC+B,IAAIlB,IAAI,CAAC,iBAAkB,oBAC/CmB,IAAKD,MAAAA,OAAG,EAAHA,EAAkBE,OACtChB,KAAKD,IAAIkB,MAAM,wBAAyBH,GAI5Cd,KAAKL,UAAUuB,OAAOP,GAMtBX,KAAKC,iB,+RAGGY,SAASF,GACjB,OAAOA,EAAKQ,OAGJC,UACR,OAAOpB,KAAKN,MAAM2B,QAGVC,WAAWC,EAA4BC,GAC/CxB,KAAKN,MAAM6B,GAAQC,GACnBxB,KAAKC,eAGGC,cAAcS,GACtB,MAAIX,KAAKN,MAAMU,QAAUJ,KAAKH,aAAgBG,KAAKR,cAAgB,GAAKQ,KAAKL,UAAU8B,MAAQzB,KAAKR,eAIpG,EAAG,CAOD,GANGmB,GACD,OAAiBX,KAAKN,MAAOiB,GAE7BA,EAAOX,KAAKoB,WAGXT,EAGD,MAFAX,KAAKU,YAAYC,GAKnBA,EAAO,WAEDX,KAAKL,UAAU8B,KAAOzB,KAAKR,eAAiBQ,KAAKN,MAAMU,QAI1DsB,KAAKF,GACVxB,KAAKsB,WAAW,OAAQE,GAGnBG,QAAQH,GACbxB,KAAKsB,WAAW,UAAWE,M,gCC/H/B,MAEA,EAF2C,CAAC,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,MAAO,EAAK,MAAO,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,MAAO,EAAK,IAAK,EAAK,IAAK,EAAK,GAAI,EAAK,KAAM,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,MAAO,EAAK,IAAK,EAAK,IAAK,EAAK,GAAI,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,KAAM,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,GAAI,EAAK,IAAK,EAAK,KAAM,EAAK,KAAM,EAAK,KAAM,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,GAAI,EAAK,IAAK,EAAK,O,eCZ5zR,SAASI,EAAmCC,GACzD,MAAO,IAAI,IAAIjC,IAAIiC,I,iCCCN,SAASC,EAAgFC,EAAiBC,EAAYC,EAAyCC,GAC5K,GAA2B,mBAAlB,EAA8B,CACrC,MAAMC,EAAWF,EACjBA,EAAeD,GAAYA,EAAQG,GAGrC,MAAMC,EAAuBH,EAAYD,GAEzC,QAAWK,IAARH,IAEW,KADZA,EAAMH,EAAMO,QAAQN,IACL,CACb,MAAMO,EAAOR,EAAMG,EAAM,GACnBM,EAAOT,EAAMG,EAAM,GACzB,KAAKK,GAAQN,EAAYM,IAASH,MAAmBI,GAAQP,EAAYO,IAASJ,GAEhF,OAAOF,EAGTH,EAAMU,OAAOP,EAAK,GAItB,MAAMQ,EAAMX,EAAM3B,OAClB,IAAIsC,GAAON,GAAgBH,EAAYF,EAAMW,EAAM,IACjD,OAAOX,EAAML,KAAKM,GAAW,EACxB,GAAGI,GAAgBH,EAAYF,EAAM,IAE1C,OADAA,EAAMJ,QAAQK,GACP,EAEP,IAAI,IAAIW,EAAI,EAAGA,EAAID,EAAKC,IACtB,GAAGP,EAAeH,EAAYF,EAAMY,IAElC,OADAZ,EAAMU,OAAOE,EAAG,EAAGX,GACZW,EAMb,OADAC,QAAQ3B,MAAM,MAAOc,EAAOC,GACrBD,EAAMO,QAAQN,G,iCCxCR,SAASa,EAAcC,I,iCCAvB,SAASC,EAASC,EAA+BC,GAC9D,MAAMP,EAAMM,EAAO5C,OACnB,GAAGsC,IAAQO,EAAO7C,OAChB,OAAO,EAGT,IAAI,IAAIuC,EAAI,EAAGA,EAAID,IAAOC,EACxB,GAAGK,EAAOL,KAAOM,EAAON,GACtB,OAAO,EAIX,OAAO,E,iCCZM,SAASO,EAAaC,GACnC,MAAMT,EAAMS,EAAU/C,OAChBgD,EAAQ,IAAIC,WAAWC,KAAKC,KAAKb,EAAM,IAC7C,IAAIc,EAAQ,EAETd,EAAM,IACPU,EAAMI,KAAWC,SAASN,EAAUO,OAAO,GAAI,KAGjD,IAAI,IAAIf,EAAIa,EAAOb,EAAID,EAAKC,GAAK,EAC/BS,EAAMI,KAAWC,SAASN,EAAUQ,OAAOhB,EAAG,GAAI,IAGpD,OAAOS,E,iCCbM,SAASQ,EAAoBR,GAC1C,OAAGA,aAAiBC,WACXD,EACmB,iBAAZ,GACP,IAAIS,aAAcC,OAAOV,GAG3B,IAAIC,WAAWD,G,iCCCT,SAASW,EACtBC,EACAC,GAEA,OAAGD,aAAgB1D,QAEV0D,EAAKE,KAAKD,GAEVA,EAASD,G,kDCTb,MAAMG,EAAgB,KAC3B,IAAIC,EAAa,CAACC,SAAS,GAC3B,MAAO,CACLC,MAAO,KACLF,EAAWC,SAAU,EACrBD,EAAa,CAACC,SAAS,IAEzBE,IAAMC,IACJ,MAAMC,EAAcL,EACpB,MAAO,KACGK,EAAYJ,WAAaG,GAAsBA,S,eCjBhD,SAASE,EAAqBC,EAAiDC,EAAuB,OACnH,IAAID,EAAQ,MAAO,GACnB,MAAME,EAAMF,aAAkBG,IAAM,IAAIH,EAAOI,QAAUC,OAAOD,KAAKJ,GAAQM,KAAKtC,IAAOA,IACzF,MAAY,QAATiC,EAAuBC,EAAID,MAAK,CAACM,EAAGC,IAAMD,EAAIC,IACrCN,EAAID,MAAK,CAACM,EAAGC,IAAMA,EAAID,I,yECOtB,SAASE,EACtBC,EACAC,EACAC,GAAiB,EACjBC,GAAgB,GAEhB,IAAIC,EACAC,EAAiDnF,EAAgCC,EACjFmF,GAAa,EAEjB,MAAMC,EAAUC,IACd,MAAMC,EAAWvF,EAASwF,EAAUvF,EACpC,IAEEsF,EADeT,EAAGW,MAAM,KAAMH,IAE9B,MAAM/E,GACN8B,QAAQ3B,MAAM,iBAAkBH,GAEhCiF,EAAQjF,KAINsE,EAAW,IAAIS,KACfH,IAAgBA,EAAiB,IAAIpF,SAAQ,CAACwF,EAAUC,KAAaxF,EAAUuF,EAAUtF,EAASuF,MAEnGN,GACDQ,aAAaR,GACbE,GAAa,EACbnF,IACAkF,EAAiB,IAAIpF,SAAQ,CAACwF,EAAUC,KAAaxF,EAAUuF,EAAUtF,EAASuF,MAC1ER,IACRK,EAAOC,GACPF,GAAa,GAGf,MAAMO,EAAkB,gBAAe,MAElCV,GAAmBD,IAAkBI,GACtCC,EAAOC,GAINJ,IAAmBS,IACpBT,EAAiBC,EAAiBnF,EAAUC,OAAS6B,EACrDsD,GAAa,KAEdL,GAIH,OAFAG,EAAiBS,EACjBR,EAAeS,MAAM,KACdT,GAYT,OATAN,EAASa,aAAe,KACnBR,IACD,iBAAiBA,GACjBjF,IACAiF,EAAiBC,EAAiBnF,EAAUC,OAAS6B,EACrDsD,GAAa,IAIVP,I,2CCzDGgB,E,mBCdG,SAASC,EAAaC,EAAuBC,GAC1D,GAAID,EAAgBE,cAAe,CACjC,MAAMC,EAAQH,EAAmBC,EACjC,OAAOE,EAAO,GAAK,EAAKA,EAAO,EAAI,EAAI,EAGzC,OCFa,SAAqBC,EAAcC,GAChD,MAAMC,EAAaF,EAAKtG,OACxB,GAAGwG,IAAeD,EAAKvG,OAAQ,CAC7B,MAAMqG,EAAOG,EAAaD,EAAKvG,OAC/B,OAAOqG,EAAO,GAAK,EAAKA,EAAO,EAAI,EAAI,EAIzC,IAAI,IAAI9D,EAAI,EAAGA,EAAIiE,EAAYjE,GADT,GAC6B,CACjD,MAEM8D,GAFMC,EAAKG,MAAMlE,EAAGA,EAFN,KAGRgE,EAAKE,MAAMlE,EAAGA,EAHN,IAKpB,GAAG8D,EACD,OAAOA,EAIX,OAAO,EDfAK,CAAYR,EAAgBC,IDQrC,SAAYH,GACV,mBACA,iBACA,uBACA,mBAJF,CAAYA,IAAAA,EAAQ,KAsCL,MAAMW,EAInBxH,cAEES,KAAKgH,iBAAmBD,EAAYE,oBAAoBjH,MAExD,MAAMkH,EAAQlH,KAAKmH,iBAEnBnH,KAAKoH,OAAS,CAACF,GAGTG,2BAA2BC,GACjC,OAAO,cAAuBC,MAAvB,c,oBAEL,KAAAC,IAAgBpB,EAASqB,KAOzBC,MAAMC,GACJ,IAAI3H,KAAKwH,IAAMG,KAAUA,EACvB,OAAO,EAKT,IAAID,GAAQ,EACZ,GAAGC,IAASvB,EAASwB,IAAK,CACxB,MAAMf,EAAQS,EAAYO,KAC1BH,KAAQb,EAAMW,IAAMG,IAAO3H,KAAK8H,SAASjB,EAAMA,EAAMzG,OAAS,SACzD,GAAGuH,IAASvB,EAAS2B,OAAQ,CAClC,MAAMlB,EAAQS,EAAYJ,MAC1BQ,KAAQb,EAAMW,IAAMG,IAAO3H,KAAK8H,SAASjB,EAAM,SAC1C,GAAGc,IAASvB,EAAS4B,KAC1B,OAAOhI,KAAK0H,MAAMtB,EAASwB,MAAQ5H,KAAK0H,MAAMtB,EAAS2B,QAOzD,OAJGL,GACD1H,KAAKiI,OAAON,GAGPD,EAGTQ,UACE,MAAO,CACLC,IAAKnI,KAAK0H,MAAMtB,EAASwB,KACzBQ,OAAQpI,KAAK0H,MAAMtB,EAAS2B,QAC5BM,KAAMrI,KAAK0H,MAAMtB,EAAS4B,OAI9BC,OAAON,GACL3H,KAAKwH,KAAOG,EAGdW,SAASX,GACP3H,KAAKwH,MAAQG,EAGflF,OAAOe,EAAe+E,KAAwBC,GAC5C,MAAMC,EAAMC,MAAMjG,OAAOe,EAAO+E,KAAgBC,GAEhD,IAAIxI,KAAKI,OAAQ,CACf,MAAMgH,EAASE,EAAYF,OACrBuB,EAAMvB,EAAO9E,QAAQtC,OACf,IAAT2I,IACoB,IAAlBvB,EAAOhH,OACRJ,KAAKsI,SAASlC,EAAS4B,MAEvBZ,EAAO3E,OAAOkG,EAAK,IAKzB,OAAOF,IAKNtB,kBAAkBqB,GAGvB,MAAM3B,EAAQ,IAAI7G,KAAKgH,iBAAiBwB,EAAMpI,QAC9C,IAAI,IAAIuC,EAAI,EAAGvC,EAASoI,EAAMpI,OAAQuC,EAAIvC,IAAUuC,EAClDkE,EAAMlE,GAAK6F,EAAM7F,GAEnB,OAAOkE,EAgDF+B,YAAY/B,EAAYgC,GAAU,GACvC,IAAIhC,EAAMzG,OACR,OAGF,MAAM8G,EAAQlH,KAAKoH,OAAO,GAC1B,IAAIF,EAAM9G,OAER,OADA8G,EAAMxF,QAAQmF,GACPK,EAGT,MAAM4B,EAAajC,EAAMA,EAAMzG,OAAS,GAClC2I,EAAalC,EAAM,GAEzB,IAAImC,EAAsBC,GAAc,EAAGC,GAAc,EAAGC,EAAkB,EAC9E,KAAMA,EAAkBnJ,KAAKoH,OAAOhH,SAClC4I,EAAahJ,KAAKoH,OAAO+B,GACzBF,EAAaD,EAAW1G,QAAQwG,GAChCI,EAAaF,EAAW1G,QAAQyG,IAEb,IAAhBG,IAAsB,IAAMD,KAEL,IAAhBC,IAAsB,IAAMD,IAPME,GAY9C,IAAmB,IAAhBD,IAAsB,IAAMD,QAExB,IAAmB,IAAhBC,EAAmB,CAC3B,MAAME,EAASvC,EAAMA,MAAMmC,EAAW5I,OAAS8I,GAC/CF,EAAWtH,QAAQ0H,QACd,IAAmB,IAAhBH,EAAmB,CAC3B,MAAMG,EAASvC,EAAMA,MAAM,EAAGA,EAAMzG,OAAS6I,EAAa,GAC1DD,EAAWrH,WAAWyH,OACjB,CACL,IAAIC,EAAc,EAClB,IAAI,MAAMjJ,EAASJ,KAAKoH,OAAOhH,OAAQiJ,EAAcjJ,IAAUiJ,EAAa,CAC1E,MAAMC,EAAItJ,KAAKoH,OAAOiC,GACtB,GAAoC,IAAjChD,EAAaQ,EAAM,GAAIyC,EAAE,IAC1B,MAIJtJ,KAAKoH,OAAO3E,OAAO4G,EAAa,EAAGrJ,KAAKmH,kBAAkBN,IAC1DsC,EAAkBE,EAGpB,OAAGR,EACM7I,KAAK6I,QAAQM,QADtB,EAKMN,QAAQM,GACd,GAAGnJ,KAAKoH,OAAOhH,QAAU,EACvB,IAAI,IAAIuC,EAAI,EAAGvC,EAASJ,KAAKoH,OAAOhH,OAAQuC,EAAKvC,EAAS,IAAMuC,EAAG,CACjE,MAAM4G,EAAYvJ,KAAKoH,OAAOzE,GACxB6G,EAAYxJ,KAAKoH,OAAOzE,EAAI,IAGf,IADA4G,EAAUjH,QAAQkH,EAAU,MAE7CD,EAAUtB,OAAOuB,EAAUhC,KAC3BxH,KAAKoH,OAAO3E,OAAOE,EAAI,EAAG,GAEvBA,EAAIwG,KACHA,IAGF/I,IACAuC,EAEF3C,KAAK4I,YAAYY,GAAW,IAKlC,OAAOxJ,KAAKoH,OAAO+B,GAKjBjC,YACF,OAAOlH,KAAKoH,OAAO,GAGjBS,WACF,OAAO7H,KAAKoH,OAAOpH,KAAKoH,OAAOhH,OAAS,GAGtCyG,YACF,OAAO7G,KAAKkH,MAGV9G,aACF,OAAOJ,KAAK6G,MAAMzG,OAGbqJ,UAAU9I,GACf,IAAI,IAAIgC,EAAI,EAAGvC,EAASJ,KAAKoH,OAAOhH,OAAQuC,EAAIvC,IAAUuC,EAAG,CAC3D,MAAMkE,EAAQ7G,KAAKoH,OAAOzE,GACpB+G,EAAQ7C,EAAMvE,QAAQ3B,GAC5B,IAAc,IAAX+I,EACD,MAAO,CAAC7C,MAAAA,EAAO6C,MAAAA,IAOdC,gBAAgBC,GACrB,IAAI/C,EACJ,IAAI,IAAIlE,EAAI,EAAGA,EAAI3C,KAAKoH,OAAOhH,SAAUuC,EAAG,CAC1C,IAAIkH,EAAS,EAEb,GADAhD,EAAQ7G,KAAKoH,OAAOzE,KACjBkE,EAAMzG,OAAS,GAIlB,KAAMyJ,EAAShD,EAAMzG,SAAUyJ,EAC7B,GAAGxD,EAAauD,EAAO/C,EAAMgD,KAAY,EAKvC,MAAO,CACLhD,MAAAA,EACAgD,OAAQD,IAAU/C,EAAMgD,GAAUA,EAASA,EAAS,GAM5D,GAAGhD,GAASA,EAAMa,MAAMtB,EAASwB,KAC/B,MAAO,CACLf,MAAAA,EACAgD,OAAQhD,EAAMzG,QAQb0J,QAAQC,EAAaC,EAAoBC,GAC9C,IAAIpD,EAAQ7G,KAAK6G,MACbgD,EAAS,EACTK,EAAc,EAElB,GAAGH,EAAU,CACX,MAAM7H,EAAMlC,KAAK2J,gBAAgBI,GACjC,IAAI7H,EACF,OAGF2E,EAAQ3E,EAAI2E,MACZgD,EAASK,EAAchI,EAAI2H,OAExBhD,EAAMiB,SAASiC,KAChBG,GAAe,GAQnB,MAAMC,EAAa7G,KAAK8G,IAAIF,EAAcF,EAAY,GAChDK,EAAWH,EAAcF,EAAaC,EAItCb,EAASvC,EAAMA,MAAMsD,EAAYE,GAEjCC,EAAoBN,EAAa,EAAIC,EAAQD,EAAaC,EAC1DM,EAAuBjH,KAAKkH,IAAIR,GAIhCS,EAAgB5D,EAAMzG,OAAS8J,GAAgBI,KAAsBzD,EAAMa,MAAMtB,EAASwB,OAAQwB,EAAOnB,OAAO7B,EAASwB,MAAM,GAC/H8C,EAAmBR,EAAcK,GAAyB,KAAM1D,EAAMa,MAAMtB,EAAS2B,UAAWqB,EAAOnB,OAAO7B,EAAS2B,SAAS,GAKtI,MAAO,CACLlB,MAAOuC,EACPuB,eAAgBd,EAChBe,UAAWxE,EAASqB,MAAQgD,GAAgBC,EAAkBtE,EAAS4B,MAASyC,EAAerE,EAASwB,IAAMxB,EAASqB,OAASiD,EAAkBtE,EAAS2B,OAAS3B,EAASqB,QAI1K9F,WAAW6G,GAChB,IAAI3B,EAAQ7G,KAAKkH,MACbL,EAAMzG,OAECyG,EAAMa,MAAMtB,EAAS2B,UAC9BlB,EAAQ7G,KAAKmH,iBACbN,EAAMoB,OAAO7B,EAAS2B,QACtB/H,KAAKoH,OAAOzF,QAAQkF,IAJpBA,EAAMoB,OAAO7B,EAAS2B,QAOxBlB,EAAMlF,WAAW6G,GAGZ9G,QAAQ8G,GACb,IAAI3B,EAAQ7G,KAAK6H,KACbhB,EAAMzG,OAECyG,EAAMa,MAAMtB,EAASwB,OAC9Bf,EAAQ7G,KAAKmH,iBACbN,EAAMoB,OAAO7B,EAASwB,KACtB5H,KAAKoH,OAAO1F,KAAKmF,IAJjBA,EAAMoB,OAAO7B,EAASwB,KAOxBf,EAAMnF,QAAQ8G,GAGTtH,OAAOP,GACZ,MAAMkK,EAAQ7K,KAAKyJ,UAAU9I,GAC7B,QAAGkK,IACDA,EAAMhE,MAAMpE,OAAOoI,EAAMnB,MAAO,IACzB,GAMJoB,YAAYjE,IACjB,EAAAkE,EAAA,GAAiB/K,KAAKoH,OAAQP,GAGzBmE,SACL,MAOMC,EAAuC,CAC3C7D,OARiDpH,KAAKoH,OAAOnC,KAAK4B,IAC3D,CACLqE,OAAQrE,EAAMA,QACda,MAAOb,EAAMqB,eAQjB,OAAOiD,KAAKC,UAAUH,GAGjB5D,gBAAoCgE,GACzC,MAAMC,EAAmCH,KAAKI,MAAMF,GAC9CjC,EAAS,IAAIrC,EAOnB,OANAuE,EAAOlE,OAAOoE,SAAS3E,IACrB,MAAM4E,EAAWrC,EAAOR,YAAY/B,EAAMqE,SAAW9B,EAAOlC,MACzDL,EAAMa,MAAMS,KAAKsD,EAASxD,OAAO7B,EAASwB,KAC1Cf,EAAMa,MAAMU,QAAQqD,EAASxD,OAAO7B,EAAS2B,WAG3CqB,GAIX,OAAmB,iBAA6BrC,I,8CG3bjC,SAAS2E,EAAqBC,GAI3C,OAHgBA,EAA4DC,MAC1E,OAAWD,EAA4DC,MACtED,EAAgDE,QAAQC,a,eCK9C,SAASC,EAAUC,EAAYC,EAAoBC,EAA6CC,GAC7G,GAAc,cAAXH,EAAKI,EAAmB,OAAO,EAElC,GAAIJ,EAAmBK,OAAOC,aAA0B,kBAAXL,EAC3C,OAAO,EAGT,MAAMM,OAAqClK,IAAX6J,EAChC,GAAIF,EAAmBK,OAAOG,SAAWD,EACvC,OAAO,EAGT,GAAc,kBAAXP,EAAKI,GACO,qBAAXJ,EAAKI,GAEJJ,EAAKK,OAAOI,OAAUT,EAAsBK,OAAOK,UACtD,OAAO,EAMT,IAAIR,KACFA,EAASF,EAAKW,cAAiBX,EAAsBY,eAAiBZ,EAAKa,uBAGzE,OAAO,EAIX,IAAIC,EAAyG,GAQ7G,OAPGZ,IACDY,EAAUZ,EAAOG,QAMZJ,GACL,IAAK,cACL,IAAK,aACL,IAAK,YACL,IAAK,cACL,IAAK,aACL,IAAK,gBACL,IAAK,aACL,IAAK,gBACH,IAAIE,GAAYH,EAAKK,OAAOI,KAC1B,OAAO,EAGT,GAAgB,qBAAbP,EAAOE,GAA4BU,EAAQb,GAC5C,OAAO,EAGT,GAAc,YAAXD,EAAKI,IACFJ,EAAKK,OAAOK,YAAcI,EAAQC,cACpC,OAAO,EAIX,MAIF,IAAK,kBACL,IAAK,cACH,QAASD,EAAQb,GAGnB,IAAK,eACH,MAAoB,oBAAbC,EAAOE,EAA0BU,EAAQb,MAAaa,EAAQC,eAAiBD,EAAQb,GAOhG,IAAK,cACL,IAAK,eACH,MAAoB,oBAAbC,EAAOE,EAA0BU,EAAQb,IAAWa,EAAQb,GAIrE,IAAK,cACL,IAAK,cACH,OAAO,EAGT,IAAK,YACL,IAAK,qBACH,MAAoB,oBAAbC,EAAOE,KAA6BU,EAAmB,UAGhE,IAAK,oBACH,QAAqB,SAAXd,EAAKI,GAAiBJ,EAAKK,OAAOW,YAAahB,EAAKK,OAAOG,UAAWR,EAAKW,cAIzF,OAAO,E,gEC3GM,SAASM,EACtBC,EACAC,GAAiD,OAAkBD,EAAOE,YAE1E,OAAOF,MAAAA,OAAM,EAANA,EAASC,K,eCLH,SAASE,EAAkBC,GACxC,MAAO,SAASA,I,gCCPH,SAASC,EAAYC,EAA4DC,GAC9F,OAAOD,EAAU,IAAMC,E,gECQV,SAASC,EAA4BC,EAAoCC,EAA0D3D,GAChJ,GAAmB,6BAAhB0D,EACD,OAAOC,EAGT,MAAMC,EAAyB,GAC/B,IAAID,EAAQxN,OACV,OAAOyN,EAGT,IAAIC,GAAY,EAChB,MAAMC,EAKD,GACHC,EAAuC,GACvCC,EAAwC,GAG1C,OAAON,GACL,IAAK,4BACHI,EAAkC,mBAAI,EACtC,MAEF,IAAK,gCACHA,EAAkC,mBAAI,EACtCA,EAAqC,sBAAI,EACzCC,EAAetM,KAAK,SACpB,MAEF,IAAK,2BACHqM,EAAqC,sBAAI,EACzCC,EAAetM,KAAK,SACpB,MAEF,IAAK,8BACHqM,EAAqC,sBAAI,EAEzCC,EAAetM,UAAKW,EAAW,QAAS,OACxC,MAEF,IAAK,2BACH0L,EAAqC,sBAAI,EACzCC,EAAetM,KAAK,SACpB,MAEF,IAAK,gCACHqM,EAAqC,sBAAI,EACzCC,EAAetM,KAAK,QAAS,SAC7B,MAEF,IAAK,gCACHqM,EAAqC,sBAAI,EACzCC,EAAetM,KAAK,SACpB,MAEF,IAAK,2BACHqM,EAAqC,sBAAI,EACzCC,EAAetM,KAAK,SACpB,MAEF,IAAK,yBACHqM,EAAoB,KAAI,EACxB,MAEF,IAAK,gCACHA,EAAuB,QAAI,EAC3B,MAUF,QACED,GAAY,EAShB,IAAIA,EACF,OAAOD,EAGT,IAAI,IAAIlL,EAAI,EAAGvC,EAASwN,EAAQxN,OAAQuC,EAAIvC,IAAUuC,EAAG,CACvD,MAAMuL,EAAoDN,EAAQjL,GAClE,IAAIuL,EAAS,SAIb,IAAIrD,GAAQ,EACZ,GAAiB,YAAdqD,EAAQ9B,GACT,GAAG8B,EAAQC,OAASJ,EAAeG,EAAQC,MAAM/B,GAA+B,CAC9E,MAAMgC,EAAOF,EAAQC,MAA4CE,SACjE,GAAGD,IAEEJ,EAAe5N,SAAW4N,EAAelG,SAASsG,EAAIpN,OACvDiN,EAAgBnG,SAASsG,EAAIpN,OAG/B,SAGF6J,GAAQ,OACH,GAAGkD,EAAoB,KAAKG,EAAQA,QAAS,CAClD,MAAMI,EAAe,CAAC,uBAAwB,qBAC1CJ,EAAQK,cAAkCC,MAAMC,GAAMH,EAAaxG,SAAS2G,EAAErC,OAAO,OAAS8B,EAAQA,YACxGrD,GAAQ,SAGJkD,EAAuB,QAC/BG,EAAQjC,QACP,CACC,gCACA,6BACA,gCACA,8BACyBnE,SAASoG,EAAQjC,OAAOG,KACnDvB,GAAQ,GAKV,GAAGA,IACDgD,EAAUnM,KAAKwM,GACZL,EAAUzN,QAAU6J,GACrB,MAKN,OAAO4D,I,8CCpJM,SAASa,EAAaC,GACnC,IAAuBT,EAAiBK,EAAgCK,EAApEC,EAAgB,EACpB,IAAI,MAAMC,KAAKH,EAEb,IADA,OAA4BG,GACzBA,EAAEZ,QAAS,CACZ,KAAKW,EAAgB,EAAG,MACxBX,EAAUY,EAAEZ,QACZK,EAAgBO,EAAEP,cAClBK,EAAWE,EAAEF,SAUjB,OANGC,EAAgB,IACjBX,OAAU7L,EACVkM,OAAgBlM,EAChBuM,OAAWvM,GAGN,CAAC6L,QAAAA,EAASU,SAAAA,EAAUL,cAAAA,K,wDCjBd,SAASQ,EAAUC,GAChC,QAAc3M,IAAX2M,GAA0BA,EAAkBC,UAAYD,EAAkBC,WAAqB,OAAOD,EAGpG,IAAG,OAASA,GAAS,CACxB,MAAME,EAAUF,EAAyBnD,QACzC,QAAcxJ,IAAX6M,EACD,OAAOA,EAAOpD,UAAS,GAGzB,MAAMqD,EAAUH,EAA4BI,YAAeJ,EAAyBK,QACpF,YAAchN,IAAX8M,EACMA,EAAOrD,UAAS,GAGlB,KAEF,IAAIkD,EAAQ,OAAO,KAE1B,MAAMM,EAA0C,MAAhCN,EAAkBtL,OAAO,GACnC6L,EAAcP,EAAkBrL,OAAO,GAAG6L,MAAM,KAEtD,OAAOF,EAASC,EAAW,GAAGzD,YAAcyD,EAAW,IAAM,IAAIzD,UAAS,K,aCxB7D,SAAS2D,EAAsBrB,G,MAC5C,OAAuB,QAAhB,EAAAA,EAAIsB,oBAAY,eAAG,G,gECMb,SAASC,EAAcC,GACpC,OAAQA,EAAKvD,OAAOwD,SAAWD,EAAKE,GAAGhE,aAAe,O,eCJxD,IAAYiE,E,iBAAZ,SAAYA,GACV,6BACA,+BACA,uBACA,2BAJF,CAAYA,IAAAA,EAAgB,M,eCEb,SAASC,EAASC,EAAcrB,GAyB7C,OAnBOqB,EAAKC,QAAQ,mCAAmC,CAACC,EAAOtG,EAAQuG,KACrE,GAAGxB,EAAU,CACX,MAAMxO,EAAS+P,EAAM/P,OAErByJ,GAAUzJ,EACVwO,EAASpD,SAAS6E,IAChB,MAAM7I,EAAM6I,EAAOxG,OAASwG,EAAOjQ,OAChCoH,IAAQqC,EACTwG,EAAOjQ,QAAUA,EACToH,EAAMqC,IACdwG,EAAOxG,QAAUzJ,MAMvB,OAAO+P,EAAQ,O,gEC5BJ,SAASG,EAASL,GAC/B,OAAQA,EAAcA,EAAKE,MAAM,MAAlB,O,4ECcF,SAASI,EAAcC,EAAaC,EAAkCC,GAKnF,MAAM9B,EAA4B,GAClC,IAAI+B,GAAe,EACnB,MAAMC,EAAcP,IAA2B,OAAsBI,EAAiBJ,GAAyDM,GAAe,GAA7D/B,EAASlN,KAAK2O,GAASM,GAAe,GAEjIE,EAAyB,GAC/B,IAAmBV,EAAfW,EAAY,EAChB,KAAMX,EAAQK,EAAIL,MAAM,OAAmB,CACzC,MAAMY,EAAaD,EAAYX,EAAMzG,MACrCmH,EAAanP,KAAK8O,EAAI7M,OAAO,EAAGwM,EAAMzG,QACtC,MAAMuG,EAAQE,EAAM,IAAMA,EAAM,IAAMA,EAAM,KAAOA,EAAM,IAKzD,IAAIE,EAEJ,GANAS,GAAab,EAAK7P,OAElB0Q,GAAab,EAAK7P,OAGlBuQ,GAAe,EACZV,EAAKE,MAAM,QACZU,EAAanP,KAAKyO,EAAM,SACnB,GAAGA,EAAM,GACdE,EAAS,CACPjE,EAAG,mBACH4E,SAAU,GACVnH,OAAQkH,EAAaZ,EAAM,GAAG/P,OAC9BA,OAAQ6P,EAAK7P,QAGZwQ,EAAWP,KACI,OAAbF,EAAM,KACPA,EAAM,GAAK,GACXW,GAAa,GAGfD,EAAanP,KAAKyO,EAAM,GAAKF,EAAOE,EAAM,IAE1CW,GAAaX,EAAM,GAAG/P,OAAS+P,EAAM,GAAG/P,aAErC,GAAG+P,EAAM,GAAI,CAClB,MAAMc,EAAqB,MAAbd,EAAM,GAEpBE,EAAS,CACPjE,EAAG,KAAkB+D,EAAM,IAE3BtG,OAAQkH,GAAcE,EAAQ,EAAId,EAAM,GAAG/P,QAC3CA,OAAQ6P,EAAK7P,QAGZwQ,EAAWP,KACRY,EAGFJ,EAAanP,KAAKuO,GAFlBY,EAAanP,KAAKyO,EAAM,GAAKF,EAAOE,EAAM,IAK5CW,GAA+B,EAAlBX,EAAM,GAAG/P,QAAc6Q,EAAQ,EAAI,SAE1Cd,EAAM,KACdE,EAAS,CACPjE,EAAG,2BACHP,QAASsE,EAAM,IAAIe,WACnBrH,OAAQkH,EACR3Q,OAAQ6P,EAAK7P,QAGZwQ,EAAWP,KACZQ,EAAanP,KAAKuO,GAElBa,GAAaX,EAAM,GAAG/P,OAAS6P,EAAK7P,SAE9B+P,EAAM,MACdE,EAAS,CACPjE,EAAG,uBACH+E,IAAKhB,EAAM,IACXtG,OAAQkH,EACR3Q,OAAQ6P,EAAK7P,QAGZwQ,EAAWP,KACZQ,EAAanP,KAAKuO,GAElBa,GAAaX,EAAM,IAAI/P,OAAS6P,EAAK7P,SAIrCuQ,GACFE,EAAanP,KAAKyO,EAAM,IAG1BK,EAAMA,EAAI7M,OAAOwM,EAAMzG,MAAQyG,EAAM,GAAG/P,QACxC0Q,GAAaX,EAAMzG,MAAQyG,EAAM,GAAG/P,OAGtCyQ,EAAanP,KAAK8O,GAClB,IAAIY,EAAUP,EAAaQ,KAAK,IAC5BD,EAAQlB,QAAQ,OAAQ,IAAI9P,SAC9BgR,EAAUZ,EACV5B,EAASnM,OAAO,EAAGmM,EAASxO,UAQ9B,OAAcqQ,EAAiB7B,IAC/B,OAAoB6B,GAEpB,IAAIrQ,EAASgR,EAAQhR,OACrB,IAAIsQ,EAAQ,CAEVU,EAAUA,EAAQlB,QAAQ,OAAQ,IAElC,IAAIzJ,EAAOrG,EAASgR,EAAQhR,OACzBqG,GACDgK,EAAgBjF,SAAS6E,IACvBA,EAAOxG,OAASvG,KAAK8G,IAAI,EAAGiG,EAAOxG,OAASpD,MAKhD2K,EAAUA,EAAQlB,QAAQ,OAAQ,IAClCzJ,EAAOrG,EAASgR,EAAQhR,OACxBA,EAASgR,EAAQhR,OACdqG,GACDgK,EAAgBjF,SAAS6E,IACnBA,EAAOxG,OAASwG,EAAOjQ,OAAUA,IACnCiQ,EAAOjQ,OAASA,EAASiQ,EAAOxG,WAMxC,OAAOuH,I,8CC7IM,SAASE,EAAcrB,EAAcrB,EAA4B,IAO9E,OANAA,EAASpD,SAAS6E,IACA,yBAAbA,EAAOjE,IACR6D,GAAO,OAAcA,EAAMI,GAAQJ,SAIhCA,I,6CCLM,MAAMsB,EAInBhS,YAAoBiS,EAA4CC,EAAW,GAAvD,KAAAD,QAAAA,EAA4C,KAAAC,SAAAA,EAHxD,KAAAC,UAAqC,IAAI5M,IAM1C6M,YAAY7B,EAAgB8B,GASjC,GAJG5R,KAAKwR,SAAWI,EAAWC,SAC5BD,GAAa,QAAkBA,EAAY5R,KAAKwR,WAG9CI,EAEF,OADA5R,KAAK0R,UAAUxQ,OAAO4O,IACf,EAGT9P,KAAK0R,UAAUI,IAAIhC,EAAI8B,GAiBjBG,QAAQC,GACd,MAAMC,EAAwG,GACxGP,EAAY1R,KAAK0R,UACjBQ,EAAaF,EAAMxC,MAAM,KACzB2C,EAAmBD,EAAW9R,OAwBpC,OAvBAsR,EAAUlG,SAAQ,CAAC4G,EAAUC,KAC3B,IAAIxH,GAAQ,EACRyH,EAAa,EACjB,IAAI,IAAI3P,EAAI,EAAGA,EAAIwP,IAAoBxP,EAAG,CACxC,MAAM4P,EAAOL,EAAWvP,GAClBgG,EAAMyJ,EAAS9P,QAAQiQ,GAC7B,IAAY,IAAT5J,GAAuB,IAARA,GAAmC,MAAtByJ,EAASzJ,EAAM,GAA0D,CACtGkC,GAAQ,EACR,MAGFyH,GAAcC,EAAKnS,OAGrB,GAAGyK,EAAO,CACRyH,GAAcH,EAAmB,EACjC,MAAMK,EAAiBJ,EAAShS,QAC7BJ,KAAKyR,UAAYa,GAAcE,GAAkBF,IAClDL,EAAavQ,KAAK,CAAC0Q,SAAAA,EAAUI,eAAAA,EAAgBH,KAAAA,EAAMC,WAAAA,QAKlDL,EAGFQ,OAAOT,GACThS,KAAKwR,UACNQ,GAAQ,QAAkBA,EAAOhS,KAAKwR,UAGxC,MACMS,EADUD,EAAMxC,MAAM,KACSvK,KAAK+M,GAAUhS,KAAK+R,QAAQC,KCxFxDU,QAAO,CAACC,EAAKC,KAASD,EAAIjR,QAAQkR,GAAMD,IAAM,ID+FvD,OALAV,EAAarN,MAAK,CAACM,EAAGC,IAAMD,EAAEsN,eAAiBrN,EAAEqN,gBAAkBrN,EAAEmN,WAAapN,EAAEoN,aAG7C,IAAI1S,IAAIqS,EAAahN,KAAK4N,GAAMA,EAAER","sources":["webpack://tweb/./src/components/lazyLoadQueueBase.ts","webpack://tweb/./src/config/latinizeMap.ts","webpack://tweb/./src/helpers/array/filterUnique.ts","webpack://tweb/./src/helpers/array/insertInDescendSortedArray.ts","webpack://tweb/./src/helpers/assumeType.ts","webpack://tweb/./src/helpers/bytes/bytesCmp.ts","webpack://tweb/./src/helpers/bytes/bytesFromHex.ts","webpack://tweb/./src/helpers/bytes/convertToUint8Array.ts","webpack://tweb/./src/helpers/callbackify.ts","webpack://tweb/./src/helpers/middleware.ts","webpack://tweb/./src/helpers/object/getObjectKeysAndSort.ts","webpack://tweb/./src/helpers/schedulers/debounce.ts","webpack://tweb/./src/helpers/slicedArray.ts","webpack://tweb/./src/helpers/compareValue.ts","webpack://tweb/./src/helpers/long/compareLong.ts","webpack://tweb/./src/lib/appManagers/utils/chats/getParticipantPeerId.ts","webpack://tweb/./src/lib/appManagers/utils/chats/hasRights.ts","webpack://tweb/./src/lib/appManagers/utils/dialogs/getDialogIndex.ts","webpack://tweb/./src/lib/appManagers/utils/dialogs/getDialogIndexKey.ts","webpack://tweb/./src/lib/appManagers/utils/inlineBots/generateQId.ts","webpack://tweb/./src/lib/appManagers/utils/messages/filterMessagesByInputFilter.ts","webpack://tweb/./src/lib/appManagers/utils/messages/getAlbumText.ts","webpack://tweb/./src/lib/appManagers/utils/peers/getPeerId.ts","webpack://tweb/./src/lib/appManagers/utils/stickers/getStickerEffectThumb.ts","webpack://tweb/./src/lib/appManagers/utils/users/canSendToUser.ts","webpack://tweb/./src/lib/mtproto/connectionStatus.ts","webpack://tweb/./src/lib/richTextProcessor/fixEmoji.ts","webpack://tweb/./src/lib/richTextProcessor/matchUrl.ts","webpack://tweb/./src/lib/richTextProcessor/parseMarkdown.ts","webpack://tweb/./src/lib/richTextProcessor/wrapPlainText.ts","webpack://tweb/./src/lib/searchIndex.ts","webpack://tweb/./src/helpers/array/flatten.ts"],"sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport indexOfAndSplice from '../helpers/array/indexOfAndSplice';\nimport throttle from '../helpers/schedulers/throttle';\nimport {logger, LogTypes} from '../lib/logger';\n\nconst PARALLEL_LIMIT = 8;\n\nexport type LazyLoadElementBase = {\n  load: () => Promise<any>\n};\n\nexport default class LazyLoadQueueBase {\n  public queueId = 0;\n  protected queue: Array<LazyLoadElementBase> = [];\n  protected inProcess: Set<LazyLoadElementBase> = new Set();\n\n  protected lockPromise: Promise<void> = null;\n  protected unlockResolve: () => void = null;\n\n  protected log = logger('LL', LogTypes.Error);\n  protected processQueue: () => void;\n\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\n    this.processQueue = throttle(() => this._processQueue(), 20, false);\n  }\n\n  public clear() {\n    this.inProcess.clear(); // ацтеки забьются, будет плохо\n\n    this.queue.length = 0;\n    // unreachable code\n    /* for(let item of this.inProcess) {\n      this.lazyLoadMedia.push(item);\n    } */\n  }\n\n  public lock() {\n    if(this.lockPromise) return;\n\n    // const perf = performance.now();\n    this.lockPromise = new Promise((resolve, reject) => {\n      this.unlockResolve = resolve;\n    });\n\n    /* if(DEBUG) {\n      this.lockPromise.then(() => {\n        this.log('was locked for:', performance.now() - perf);\n      });\n    } */\n  }\n\n  public unlock() {\n    if(!this.unlockResolve) return;\n\n    this.unlockResolve();\n    this.unlockResolve = this.lockPromise = null;\n\n    this.processQueue();\n  }\n\n  protected async processItem(item: LazyLoadElementBase) {\n    if(this.lockPromise) {\n      return;\n    }\n\n    this.inProcess.add(item);\n\n    /* if(DEBUG) {\n      this.log('will load media', this.lockPromise, item);\n    } */\n\n    try {\n      // await new Promise((resolve) => setTimeout(resolve, 2e3));\n      // await new Promise((resolve, reject) => window.requestAnimationFrame(() => window.requestAnimationFrame(resolve)));\n      // await item.load(item.div);\n      await this.loadItem(item);\n    } catch(err) {\n      const ignoreErrors: Set<ErrorType> = new Set(['NO_ENTRY_FOUND', 'STORAGE_OFFLINE']);\n      if(!ignoreErrors.has((err as ApiError)?.type)) {\n        this.log.error('loadMediaQueue error:', err/* , item */);\n      }\n    }\n\n    this.inProcess.delete(item);\n\n    /* if(DEBUG) {\n      this.log('loaded media', item);\n    } */\n\n    this.processQueue();\n  }\n\n  protected loadItem(item: LazyLoadElementBase) {\n    return item.load();\n  }\n\n  protected getItem() {\n    return this.queue.shift();\n  }\n\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElementBase) {\n    this.queue[method](el);\n    this.processQueue();\n  }\n\n  protected _processQueue(item?: LazyLoadElementBase) {\n    if(!this.queue.length || this.lockPromise || (this.parallelLimit > 0 && this.inProcess.size >= this.parallelLimit)) return;\n\n    // console.log('_processQueue start');\n    let added = 0;\n    do {\n      if(item) {\n        indexOfAndSplice(this.queue, item);\n      } else {\n        item = this.getItem();\n      }\n\n      if(item) {\n        this.processItem(item);\n      } else {\n        break;\n      }\n\n      item = null;\n      ++added;\n    } while(this.inProcess.size < this.parallelLimit && this.queue.length);\n    // console.log('_processQueue end, added', added, this.queue.length);\n  }\n\n  public push(el: LazyLoadElementBase) {\n    this.addElement('push', el);\n  }\n\n  public unshift(el: LazyLoadElementBase) {\n    this.addElement('unshift', el);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n// From https://raw.githubusercontent.com/FGRibreau/latenize/master/latinize_map.js\nconst LatinizeMap: {[k: string]: string} = {'Á': 'A', 'Ă': 'A', 'Ắ': 'A', 'Ặ': 'A', 'Ằ': 'A', 'Ẳ': 'A', 'Ẵ': 'A', 'Ǎ': 'A', 'Â': 'A', 'Ấ': 'A', 'Ậ': 'A', 'Ầ': 'A', 'Ẩ': 'A', 'Ẫ': 'A', 'Ä': 'A', 'Ǟ': 'A', 'Ȧ': 'A', 'Ǡ': 'A', 'Ạ': 'A', 'Ȁ': 'A', 'À': 'A', 'Ả': 'A', 'Ȃ': 'A', 'Ā': 'A', 'Ą': 'A', 'Å': 'A', 'Ǻ': 'A', 'Ḁ': 'A', 'Ⱥ': 'A', 'Ã': 'A', 'Ꜳ': 'AA', 'Æ': 'AE', 'Ǽ': 'AE', 'Ǣ': 'AE', 'Ꜵ': 'AO', 'Ꜷ': 'AU', 'Ꜹ': 'AV', 'Ꜻ': 'AV', 'Ꜽ': 'AY', 'Ḃ': 'B', 'Ḅ': 'B', 'Ɓ': 'B', 'Ḇ': 'B', 'Ƀ': 'B', 'Ƃ': 'B', 'Ć': 'C', 'Č': 'C', 'Ç': 'C', 'Ḉ': 'C', 'Ĉ': 'C', 'Ċ': 'C', 'Ƈ': 'C', 'Ȼ': 'C', 'Ď': 'D', 'Ḑ': 'D', 'Ḓ': 'D', 'Ḋ': 'D', 'Ḍ': 'D', 'Ɗ': 'D', 'Ḏ': 'D', 'ǲ': 'D', 'ǅ': 'D', 'Đ': 'D', 'Ƌ': 'D', 'Ǳ': 'DZ', 'Ǆ': 'DZ', 'É': 'E', 'Ĕ': 'E', 'Ě': 'E', 'Ȩ': 'E', 'Ḝ': 'E', 'Ê': 'E', 'Ế': 'E', 'Ệ': 'E', 'Ề': 'E', 'Ể': 'E', 'Ễ': 'E', 'Ḙ': 'E', 'Ë': 'E', 'Ė': 'E', 'Ẹ': 'E', 'Ȅ': 'E', 'È': 'E', 'Ẻ': 'E', 'Ȇ': 'E', 'Ē': 'E', 'Ḗ': 'E', 'Ḕ': 'E', 'Ę': 'E', 'Ɇ': 'E', 'Ẽ': 'E', 'Ḛ': 'E', 'Ꝫ': 'ET', 'Ḟ': 'F', 'Ƒ': 'F', 'Ǵ': 'G', 'Ğ': 'G', 'Ǧ': 'G', 'Ģ': 'G', 'Ĝ': 'G', 'Ġ': 'G', 'Ɠ': 'G', 'Ḡ': 'G', 'Ǥ': 'G', 'Ḫ': 'H', 'Ȟ': 'H', 'Ḩ': 'H', 'Ĥ': 'H', 'Ⱨ': 'H', 'Ḧ': 'H', 'Ḣ': 'H', 'Ḥ': 'H', 'Ħ': 'H', 'Í': 'I', 'Ĭ': 'I', 'Ǐ': 'I', 'Î': 'I', 'Ï': 'I', 'Ḯ': 'I', 'İ': 'I', 'Ị': 'I', 'Ȉ': 'I', 'Ì': 'I', 'Ỉ': 'I', 'Ȋ': 'I', 'Ī': 'I', 'Į': 'I', 'Ɨ': 'I', 'Ĩ': 'I', 'Ḭ': 'I', 'Ꝺ': 'D', 'Ꝼ': 'F', 'Ᵹ': 'G', 'Ꞃ': 'R', 'Ꞅ': 'S', 'Ꞇ': 'T', 'Ꝭ': 'IS', 'Ĵ': 'J', 'Ɉ': 'J', 'Ḱ': 'K', 'Ǩ': 'K', 'Ķ': 'K', 'Ⱪ': 'K', 'Ꝃ': 'K', 'Ḳ': 'K', 'Ƙ': 'K', 'Ḵ': 'K', 'Ꝁ': 'K', 'Ꝅ': 'K', 'Ĺ': 'L', 'Ƚ': 'L', 'Ľ': 'L', 'Ļ': 'L', 'Ḽ': 'L', 'Ḷ': 'L', 'Ḹ': 'L', 'Ⱡ': 'L', 'Ꝉ': 'L', 'Ḻ': 'L', 'Ŀ': 'L', 'Ɫ': 'L', 'ǈ': 'L', 'Ł': 'L', 'Ǉ': 'LJ', 'Ḿ': 'M', 'Ṁ': 'M', 'Ṃ': 'M', 'Ɱ': 'M', 'Ń': 'N', 'Ň': 'N', 'Ņ': 'N', 'Ṋ': 'N', 'Ṅ': 'N', 'Ṇ': 'N', 'Ǹ': 'N', 'Ɲ': 'N', 'Ṉ': 'N', 'Ƞ': 'N', 'ǋ': 'N', 'Ñ': 'N', 'Ǌ': 'NJ', 'Ó': 'O', 'Ŏ': 'O', 'Ǒ': 'O', 'Ô': 'O', 'Ố': 'O', 'Ộ': 'O', 'Ồ': 'O', 'Ổ': 'O', 'Ỗ': 'O', 'Ö': 'O', 'Ȫ': 'O', 'Ȯ': 'O', 'Ȱ': 'O', 'Ọ': 'O', 'Ő': 'O', 'Ȍ': 'O', 'Ò': 'O', 'Ỏ': 'O', 'Ơ': 'O', 'Ớ': 'O', 'Ợ': 'O', 'Ờ': 'O', 'Ở': 'O', 'Ỡ': 'O', 'Ȏ': 'O', 'Ꝋ': 'O', 'Ꝍ': 'O', 'Ō': 'O', 'Ṓ': 'O', 'Ṑ': 'O', 'Ɵ': 'O', 'Ǫ': 'O', 'Ǭ': 'O', 'Ø': 'O', 'Ǿ': 'O', 'Õ': 'O', 'Ṍ': 'O', 'Ṏ': 'O', 'Ȭ': 'O', 'Ƣ': 'OI', 'Ꝏ': 'OO', 'Ɛ': 'E', 'Ɔ': 'O', 'Ȣ': 'OU', 'Ṕ': 'P', 'Ṗ': 'P', 'Ꝓ': 'P', 'Ƥ': 'P', 'Ꝕ': 'P', 'Ᵽ': 'P', 'Ꝑ': 'P', 'Ꝙ': 'Q', 'Ꝗ': 'Q', 'Ŕ': 'R', 'Ř': 'R', 'Ŗ': 'R', 'Ṙ': 'R', 'Ṛ': 'R', 'Ṝ': 'R', 'Ȑ': 'R', 'Ȓ': 'R', 'Ṟ': 'R', 'Ɍ': 'R', 'Ɽ': 'R', 'Ꜿ': 'C', 'Ǝ': 'E', 'Ś': 'S', 'Ṥ': 'S', 'Š': 'S', 'Ṧ': 'S', 'Ş': 'S', 'Ŝ': 'S', 'Ș': 'S', 'Ṡ': 'S', 'Ṣ': 'S', 'Ṩ': 'S', 'ẞ': 'SS', 'Ť': 'T', 'Ţ': 'T', 'Ṱ': 'T', 'Ț': 'T', 'Ⱦ': 'T', 'Ṫ': 'T', 'Ṭ': 'T', 'Ƭ': 'T', 'Ṯ': 'T', 'Ʈ': 'T', 'Ŧ': 'T', 'Ɐ': 'A', 'Ꞁ': 'L', 'Ɯ': 'M', 'Ʌ': 'V', 'Ꜩ': 'TZ', 'Ú': 'U', 'Ŭ': 'U', 'Ǔ': 'U', 'Û': 'U', 'Ṷ': 'U', 'Ü': 'U', 'Ǘ': 'U', 'Ǚ': 'U', 'Ǜ': 'U', 'Ǖ': 'U', 'Ṳ': 'U', 'Ụ': 'U', 'Ű': 'U', 'Ȕ': 'U', 'Ù': 'U', 'Ủ': 'U', 'Ư': 'U', 'Ứ': 'U', 'Ự': 'U', 'Ừ': 'U', 'Ử': 'U', 'Ữ': 'U', 'Ȗ': 'U', 'Ū': 'U', 'Ṻ': 'U', 'Ų': 'U', 'Ů': 'U', 'Ũ': 'U', 'Ṹ': 'U', 'Ṵ': 'U', 'Ꝟ': 'V', 'Ṿ': 'V', 'Ʋ': 'V', 'Ṽ': 'V', 'Ꝡ': 'VY', 'Ẃ': 'W', 'Ŵ': 'W', 'Ẅ': 'W', 'Ẇ': 'W', 'Ẉ': 'W', 'Ẁ': 'W', 'Ⱳ': 'W', 'Ẍ': 'X', 'Ẋ': 'X', 'Ý': 'Y', 'Ŷ': 'Y', 'Ÿ': 'Y', 'Ẏ': 'Y', 'Ỵ': 'Y', 'Ỳ': 'Y', 'Ƴ': 'Y', 'Ỷ': 'Y', 'Ỿ': 'Y', 'Ȳ': 'Y', 'Ɏ': 'Y', 'Ỹ': 'Y', 'Ź': 'Z', 'Ž': 'Z', 'Ẑ': 'Z', 'Ⱬ': 'Z', 'Ż': 'Z', 'Ẓ': 'Z', 'Ȥ': 'Z', 'Ẕ': 'Z', 'Ƶ': 'Z', 'Ĳ': 'IJ', 'Œ': 'OE', 'ᴀ': 'A', 'ᴁ': 'AE', 'ʙ': 'B', 'ᴃ': 'B', 'ᴄ': 'C', 'ᴅ': 'D', 'ᴇ': 'E', 'ꜰ': 'F', 'ɢ': 'G', 'ʛ': 'G', 'ʜ': 'H', 'ɪ': 'I', 'ʁ': 'R', 'ᴊ': 'J', 'ᴋ': 'K', 'ʟ': 'L', 'ᴌ': 'L', 'ᴍ': 'M', 'ɴ': 'N', 'ᴏ': 'O', 'ɶ': 'OE', 'ᴐ': 'O', 'ᴕ': 'OU', 'ᴘ': 'P', 'ʀ': 'R', 'ᴎ': 'N', 'ᴙ': 'R', 'ꜱ': 'S', 'ᴛ': 'T', 'ⱻ': 'E', 'ᴚ': 'R', 'ᴜ': 'U', 'ᴠ': 'V', 'ᴡ': 'W', 'ʏ': 'Y', 'ᴢ': 'Z', 'á': 'a', 'ă': 'a', 'ắ': 'a', 'ặ': 'a', 'ằ': 'a', 'ẳ': 'a', 'ẵ': 'a', 'ǎ': 'a', 'â': 'a', 'ấ': 'a', 'ậ': 'a', 'ầ': 'a', 'ẩ': 'a', 'ẫ': 'a', 'ä': 'a', 'ǟ': 'a', 'ȧ': 'a', 'ǡ': 'a', 'ạ': 'a', 'ȁ': 'a', 'à': 'a', 'ả': 'a', 'ȃ': 'a', 'ā': 'a', 'ą': 'a', 'ᶏ': 'a', 'ẚ': 'a', 'å': 'a', 'ǻ': 'a', 'ḁ': 'a', 'ⱥ': 'a', 'ã': 'a', 'ꜳ': 'aa', 'æ': 'ae', 'ǽ': 'ae', 'ǣ': 'ae', 'ꜵ': 'ao', 'ꜷ': 'au', 'ꜹ': 'av', 'ꜻ': 'av', 'ꜽ': 'ay', 'ḃ': 'b', 'ḅ': 'b', 'ɓ': 'b', 'ḇ': 'b', 'ᵬ': 'b', 'ᶀ': 'b', 'ƀ': 'b', 'ƃ': 'b', 'ɵ': 'o', 'ć': 'c', 'č': 'c', 'ç': 'c', 'ḉ': 'c', 'ĉ': 'c', 'ɕ': 'c', 'ċ': 'c', 'ƈ': 'c', 'ȼ': 'c', 'ď': 'd', 'ḑ': 'd', 'ḓ': 'd', 'ȡ': 'd', 'ḋ': 'd', 'ḍ': 'd', 'ɗ': 'd', 'ᶑ': 'd', 'ḏ': 'd', 'ᵭ': 'd', 'ᶁ': 'd', 'đ': 'd', 'ɖ': 'd', 'ƌ': 'd', 'ı': 'i', 'ȷ': 'j', 'ɟ': 'j', 'ʄ': 'j', 'ǳ': 'dz', 'ǆ': 'dz', 'é': 'e', 'ĕ': 'e', 'ě': 'e', 'ȩ': 'e', 'ḝ': 'e', 'ê': 'e', 'ế': 'e', 'ệ': 'e', 'ề': 'e', 'ể': 'e', 'ễ': 'e', 'ḙ': 'e', 'ë': 'e', 'ė': 'e', 'ẹ': 'e', 'ȅ': 'e', 'è': 'e', 'ẻ': 'e', 'ȇ': 'e', 'ē': 'e', 'ḗ': 'e', 'ḕ': 'e', 'ⱸ': 'e', 'ę': 'e', 'ᶒ': 'e', 'ɇ': 'e', 'ẽ': 'e', 'ḛ': 'e', 'ꝫ': 'et', 'ḟ': 'f', 'ƒ': 'f', 'ᵮ': 'f', 'ᶂ': 'f', 'ǵ': 'g', 'ğ': 'g', 'ǧ': 'g', 'ģ': 'g', 'ĝ': 'g', 'ġ': 'g', 'ɠ': 'g', 'ḡ': 'g', 'ᶃ': 'g', 'ǥ': 'g', 'ḫ': 'h', 'ȟ': 'h', 'ḩ': 'h', 'ĥ': 'h', 'ⱨ': 'h', 'ḧ': 'h', 'ḣ': 'h', 'ḥ': 'h', 'ɦ': 'h', 'ẖ': 'h', 'ħ': 'h', 'ƕ': 'hv', 'í': 'i', 'ĭ': 'i', 'ǐ': 'i', 'î': 'i', 'ï': 'i', 'ḯ': 'i', 'ị': 'i', 'ȉ': 'i', 'ì': 'i', 'ỉ': 'i', 'ȋ': 'i', 'ī': 'i', 'į': 'i', 'ᶖ': 'i', 'ɨ': 'i', 'ĩ': 'i', 'ḭ': 'i', 'ꝺ': 'd', 'ꝼ': 'f', 'ᵹ': 'g', 'ꞃ': 'r', 'ꞅ': 's', 'ꞇ': 't', 'ꝭ': 'is', 'ǰ': 'j', 'ĵ': 'j', 'ʝ': 'j', 'ɉ': 'j', 'ḱ': 'k', 'ǩ': 'k', 'ķ': 'k', 'ⱪ': 'k', 'ꝃ': 'k', 'ḳ': 'k', 'ƙ': 'k', 'ḵ': 'k', 'ᶄ': 'k', 'ꝁ': 'k', 'ꝅ': 'k', 'ĺ': 'l', 'ƚ': 'l', 'ɬ': 'l', 'ľ': 'l', 'ļ': 'l', 'ḽ': 'l', 'ȴ': 'l', 'ḷ': 'l', 'ḹ': 'l', 'ⱡ': 'l', 'ꝉ': 'l', 'ḻ': 'l', 'ŀ': 'l', 'ɫ': 'l', 'ᶅ': 'l', 'ɭ': 'l', 'ł': 'l', 'ǉ': 'lj', 'ſ': 's', 'ẜ': 's', 'ẛ': 's', 'ẝ': 's', 'ḿ': 'm', 'ṁ': 'm', 'ṃ': 'm', 'ɱ': 'm', 'ᵯ': 'm', 'ᶆ': 'm', 'ń': 'n', 'ň': 'n', 'ņ': 'n', 'ṋ': 'n', 'ȵ': 'n', 'ṅ': 'n', 'ṇ': 'n', 'ǹ': 'n', 'ɲ': 'n', 'ṉ': 'n', 'ƞ': 'n', 'ᵰ': 'n', 'ᶇ': 'n', 'ɳ': 'n', 'ñ': 'n', 'ǌ': 'nj', 'ó': 'o', 'ŏ': 'o', 'ǒ': 'o', 'ô': 'o', 'ố': 'o', 'ộ': 'o', 'ồ': 'o', 'ổ': 'o', 'ỗ': 'o', 'ö': 'o', 'ȫ': 'o', 'ȯ': 'o', 'ȱ': 'o', 'ọ': 'o', 'ő': 'o', 'ȍ': 'o', 'ò': 'o', 'ỏ': 'o', 'ơ': 'o', 'ớ': 'o', 'ợ': 'o', 'ờ': 'o', 'ở': 'o', 'ỡ': 'o', 'ȏ': 'o', 'ꝋ': 'o', 'ꝍ': 'o', 'ⱺ': 'o', 'ō': 'o', 'ṓ': 'o', 'ṑ': 'o', 'ǫ': 'o', 'ǭ': 'o', 'ø': 'o', 'ǿ': 'o', 'õ': 'o', 'ṍ': 'o', 'ṏ': 'o', 'ȭ': 'o', 'ƣ': 'oi', 'ꝏ': 'oo', 'ɛ': 'e', 'ᶓ': 'e', 'ɔ': 'o', 'ᶗ': 'o', 'ȣ': 'ou', 'ṕ': 'p', 'ṗ': 'p', 'ꝓ': 'p', 'ƥ': 'p', 'ᵱ': 'p', 'ᶈ': 'p', 'ꝕ': 'p', 'ᵽ': 'p', 'ꝑ': 'p', 'ꝙ': 'q', 'ʠ': 'q', 'ɋ': 'q', 'ꝗ': 'q', 'ŕ': 'r', 'ř': 'r', 'ŗ': 'r', 'ṙ': 'r', 'ṛ': 'r', 'ṝ': 'r', 'ȑ': 'r', 'ɾ': 'r', 'ᵳ': 'r', 'ȓ': 'r', 'ṟ': 'r', 'ɼ': 'r', 'ᵲ': 'r', 'ᶉ': 'r', 'ɍ': 'r', 'ɽ': 'r', 'ↄ': 'c', 'ꜿ': 'c', 'ɘ': 'e', 'ɿ': 'r', 'ś': 's', 'ṥ': 's', 'š': 's', 'ṧ': 's', 'ş': 's', 'ŝ': 's', 'ș': 's', 'ṡ': 's', 'ṣ': 's', 'ṩ': 's', 'ʂ': 's', 'ᵴ': 's', 'ᶊ': 's', 'ȿ': 's', 'ɡ': 'g', 'ß': 'ss', 'ᴑ': 'o', 'ᴓ': 'o', 'ᴝ': 'u', 'ť': 't', 'ţ': 't', 'ṱ': 't', 'ț': 't', 'ȶ': 't', 'ẗ': 't', 'ⱦ': 't', 'ṫ': 't', 'ṭ': 't', 'ƭ': 't', 'ṯ': 't', 'ᵵ': 't', 'ƫ': 't', 'ʈ': 't', 'ŧ': 't', 'ᵺ': 'th', 'ɐ': 'a', 'ᴂ': 'ae', 'ǝ': 'e', 'ᵷ': 'g', 'ɥ': 'h', 'ʮ': 'h', 'ʯ': 'h', 'ᴉ': 'i', 'ʞ': 'k', 'ꞁ': 'l', 'ɯ': 'm', 'ɰ': 'm', 'ᴔ': 'oe', 'ɹ': 'r', 'ɻ': 'r', 'ɺ': 'r', 'ⱹ': 'r', 'ʇ': 't', 'ʌ': 'v', 'ʍ': 'w', 'ʎ': 'y', 'ꜩ': 'tz', 'ú': 'u', 'ŭ': 'u', 'ǔ': 'u', 'û': 'u', 'ṷ': 'u', 'ü': 'u', 'ǘ': 'u', 'ǚ': 'u', 'ǜ': 'u', 'ǖ': 'u', 'ṳ': 'u', 'ụ': 'u', 'ű': 'u', 'ȕ': 'u', 'ù': 'u', 'ủ': 'u', 'ư': 'u', 'ứ': 'u', 'ự': 'u', 'ừ': 'u', 'ử': 'u', 'ữ': 'u', 'ȗ': 'u', 'ū': 'u', 'ṻ': 'u', 'ų': 'u', 'ᶙ': 'u', 'ů': 'u', 'ũ': 'u', 'ṹ': 'u', 'ṵ': 'u', 'ᵫ': 'ue', 'ꝸ': 'um', 'ⱴ': 'v', 'ꝟ': 'v', 'ṿ': 'v', 'ʋ': 'v', 'ᶌ': 'v', 'ⱱ': 'v', 'ṽ': 'v', 'ꝡ': 'vy', 'ẃ': 'w', 'ŵ': 'w', 'ẅ': 'w', 'ẇ': 'w', 'ẉ': 'w', 'ẁ': 'w', 'ⱳ': 'w', 'ẘ': 'w', 'ẍ': 'x', 'ẋ': 'x', 'ᶍ': 'x', 'ý': 'y', 'ŷ': 'y', 'ÿ': 'y', 'ẏ': 'y', 'ỵ': 'y', 'ỳ': 'y', 'ƴ': 'y', 'ỷ': 'y', 'ỿ': 'y', 'ȳ': 'y', 'ẙ': 'y', 'ɏ': 'y', 'ỹ': 'y', 'ź': 'z', 'ž': 'z', 'ẑ': 'z', 'ʑ': 'z', 'ⱬ': 'z', 'ż': 'z', 'ẓ': 'z', 'ȥ': 'z', 'ẕ': 'z', 'ᵶ': 'z', 'ᶎ': 'z', 'ʐ': 'z', 'ƶ': 'z', 'ɀ': 'z', 'ﬀ': 'ff', 'ﬃ': 'ffi', 'ﬄ': 'ffl', 'ﬁ': 'fi', 'ﬂ': 'fl', 'ĳ': 'ij', 'œ': 'oe', 'ﬆ': 'st', 'ₐ': 'a', 'ₑ': 'e', 'ᵢ': 'i', 'ⱼ': 'j', 'ₒ': 'o', 'ᵣ': 'r', 'ᵤ': 'u', 'ᵥ': 'v', 'ₓ': 'x', 'Ё': 'YO', 'Й': 'I', 'Ц': 'TS', 'У': 'U', 'К': 'K', 'Е': 'E', 'Н': 'N', 'Г': 'G', 'Ш': 'SH', 'Щ': 'SCH', 'З': 'Z', 'Х': 'H', 'Ъ': '', 'ё': 'yo', 'й': 'i', 'ц': 'ts', 'у': 'u', 'к': 'k', 'е': 'e', 'н': 'n', 'г': 'g', 'ш': 'sh', 'щ': 'sch', 'з': 'z', 'х': 'h', 'ъ': '', 'Ф': 'F', 'Ы': 'I', 'В': 'V', 'А': 'A', 'П': 'P', 'Р': 'R', 'О': 'O', 'Л': 'L', 'Д': 'D', 'Ж': 'ZH', 'Э': 'E', 'ф': 'f', 'ы': 'i', 'в': 'v', 'а': 'a', 'п': 'p', 'р': 'r', 'о': 'o', 'л': 'l', 'д': 'd', 'ж': 'zh', 'э': 'e', 'Я': 'Ya', 'Ч': 'CH', 'С': 'S', 'М': 'M', 'И': 'I', 'Т': 'T', 'Ь': '', 'Б': 'B', 'Ю': 'YU', 'я': 'ya', 'ч': 'ch', 'с': 's', 'м': 'm', 'и': 'i', 'т': 't', 'ь': '', 'б': 'b', 'ю': 'yu'};\n\nexport default LatinizeMap;\n","export default function filterUnique<T extends Array<any>>(arr: T): T {\n  return [...new Set(arr)] as T;\n}\n","export default function insertInDescendSortedArray<T extends {[smth in K]?: number}, K extends keyof T>(array: Array<T>, element: T, getProperty: K, pos?: number): number;\nexport default function insertInDescendSortedArray<T>(array: Array<T>, element: T, getProperty: (element: T) => number, pos?: number): number;\nexport default function insertInDescendSortedArray<T extends {[smth in K]?: number}, K extends keyof T>(array: Array<T>, element: T, getProperty: K | ((element: T) => T[K]), pos?: number): number {\n  if(typeof(getProperty) !== 'function') {\n    const property = getProperty;\n    getProperty = (element) => element[property];\n  }\n\n  const sortProperty: number = getProperty(element);\n\n  if(pos === undefined) {\n    pos = array.indexOf(element);\n    if(pos !== -1) {\n      const prev = array[pos - 1];\n      const next = array[pos + 1];\n      if((!prev || getProperty(prev) >= sortProperty) && (!next || getProperty(next) <= sortProperty)) {\n        // console.warn('same pos', pos, sortProperty, prev, next);\n        return pos;\n      }\n\n      array.splice(pos, 1);\n    }\n  }\n\n  const len = array.length;\n  if(!len || sortProperty <= getProperty(array[len - 1])) {\n    return array.push(element) - 1;\n  } else if(sortProperty >= getProperty(array[0])) {\n    array.unshift(element);\n    return 0;\n  } else {\n    for(let i = 0; i < len; i++) {\n      if(sortProperty > getProperty(array[i])) {\n        array.splice(i, 0, element);\n        return i;\n      }\n    }\n  }\n\n  console.error('wtf', array, element);\n  return array.indexOf(element);\n}\n","export default function assumeType<T>(x: unknown): asserts x is T {\r\n  return; // ¯\\_(ツ)_/¯\r\n}\r\n","export default function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\n  const len = bytes1.length;\n  if(len !== bytes2.length) {\n    return false;\n  }\n\n  for(let i = 0; i < len; ++i) {\n    if(bytes1[i] !== bytes2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export default function bytesFromHex(hexString: string) {\n  const len = hexString.length;\n  const bytes = new Uint8Array(Math.ceil(len / 2));\n  let start = 0;\n\n  if(len % 2) { // read 0x581 as 0x0581\n    bytes[start++] = parseInt(hexString.charAt(0), 16);\n  }\n\n  for(let i = start; i < len; i += 2) {\n    bytes[start++] = parseInt(hexString.substr(i, 2), 16);\n  }\n\n  return bytes;\n}\n","export default function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\n  if(bytes instanceof Uint8Array) {\n    return bytes;\n  } else if(typeof(bytes) === 'string') {\n    return new TextEncoder().encode(bytes);\n  }\n\n  return new Uint8Array(bytes);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Awaited} from '../types';\n\nexport default function callbackify<T extends Awaited<any>, R>(\n  smth: T,\n  callback: (result: Awaited<T>) => R\n): R {\n  if(smth instanceof Promise) {\n    // @ts-ignore\n    return smth.then(callback);\n  } else {\n    return callback(smth as any);\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * will change .cleaned and new instance will be created\r\nexport const getMiddleware = () => {\r\n  let cleanupObj = {cleaned: false};\r\n  return {\r\n    clean: () => {\r\n      cleanupObj.cleaned = true;\r\n      cleanupObj = {cleaned: false};\r\n    },\r\n    get: (additionalCallback?: () => boolean) => {\r\n      const _cleanupObj = cleanupObj;\r\n      return () => {\r\n        return !_cleanupObj.cleaned && (!additionalCallback || additionalCallback());\r\n      };\r\n    }\r\n  };\r\n};\r\n","export default function getObjectKeysAndSort(object: {[key: string]: any} | Map<number, any>, sort: 'asc' | 'desc' = 'asc') {\n  if(!object) return [];\n  const ids = object instanceof Map ? [...object.keys()] : Object.keys(object).map((i) => +i);\n  if(sort === 'asc') return ids.sort((a, b) => a - b);\n  else return ids.sort((a, b) => b - a);\n}\n","// * Jolly Cobra's schedulers\r\n\r\nimport ctx from '../../environment/ctx';\r\nimport {AnyFunction, Awaited} from '../../types';\r\nimport noop from '../noop';\r\n\r\nexport type DebounceReturnType<F extends AnyFunction> = {\r\n  (...args: Parameters<F>): Promise<Awaited<ReturnType<F>>>;\r\n  clearTimeout(): void;\r\n};\r\n\r\nexport default function debounce<F extends AnyFunction>(\r\n  fn: F,\r\n  ms: number,\r\n  shouldRunFirst = true,\r\n  shouldRunLast = true\r\n): DebounceReturnType<F> {\r\n  let waitingTimeout: number;\r\n  let waitingPromise: Promise<Awaited<ReturnType<F>>>, resolve: (result: any) => void, reject: () => void;\r\n  let hadNewCall = false;\r\n\r\n  const invoke = (args: Parameters<F>) => {\r\n    const _resolve = resolve, _reject = reject;\r\n    try {\r\n      const result = fn.apply(null, args);\r\n      _resolve(result);\r\n    } catch(err) {\r\n      console.error('debounce error', err);\r\n      // @ts-ignore\r\n      _reject(err);\r\n    }\r\n  };\r\n\r\n  const debounce = (...args: Parameters<F>) => {\r\n    if(!waitingPromise) waitingPromise = new Promise((_resolve, _reject) => (resolve = _resolve, reject = _reject));\r\n\r\n    if(waitingTimeout) {\r\n      clearTimeout(waitingTimeout);\r\n      hadNewCall = true;\r\n      reject();\r\n      waitingPromise = new Promise((_resolve, _reject) => (resolve = _resolve, reject = _reject));\r\n    } else if(shouldRunFirst) {\r\n      invoke(args);\r\n      hadNewCall = false;\r\n    }\r\n\r\n    const _waitingTimeout = ctx.setTimeout(() => {\r\n      // will run if should run last or first but with new call\r\n      if(shouldRunLast && (!shouldRunFirst || hadNewCall)) {\r\n        invoke(args);\r\n      }\r\n\r\n      // if debounce was called during invoking\r\n      if(waitingTimeout === _waitingTimeout) {\r\n        waitingTimeout = waitingPromise = resolve = reject = undefined;\r\n        hadNewCall = false;\r\n      }\r\n    }, ms);\r\n\r\n    waitingTimeout = _waitingTimeout;\r\n    waitingPromise.catch(noop);\r\n    return waitingPromise;\r\n  };\r\n\r\n  debounce.clearTimeout = () => {\r\n    if(waitingTimeout) {\r\n      ctx.clearTimeout(waitingTimeout);\r\n      reject();\r\n      waitingTimeout = waitingPromise = resolve = reject = undefined;\r\n      hadNewCall = false;\r\n    }\r\n  };\r\n\r\n  return debounce;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport indexOfAndSplice from './array/indexOfAndSplice';\r\nimport compareValue from './compareValue';\r\n\r\n/**\r\n * Descend sorted storage\r\n */\r\n\r\ntype ItemType = number | string;\r\n\r\nexport enum SliceEnd {\r\n  None = 0,\r\n  Top = 1,\r\n  Bottom = 2,\r\n  Both = SliceEnd.Top | SliceEnd.Bottom\r\n};\r\n\r\nexport interface Slice<T extends ItemType> extends Array<T> {\r\n  // slicedArray: SlicedArray;\r\n  end: SliceEnd;\r\n\r\n  isEnd: (side: SliceEnd) => boolean;\r\n  setEnd: (side: SliceEnd) => void;\r\n  unsetEnd: (side: SliceEnd) => void;\r\n  getEnds: () => {top: boolean, bottom: boolean, both: boolean};\r\n\r\n  slice: (from?: number, to?: number) => Slice<T>;\r\n  splice: (start: number, deleteCount: number, ...items: ItemType[]) => Slice<T>;\r\n}\r\n\r\nexport interface SliceConstructor<T extends ItemType> {\r\n  // new(...items: T[]): Slice<T>;\r\n  new(length: number): Slice<T>;\r\n}\r\n\r\nexport type SliceSerialized<T extends ItemType> = {\r\n  values: Slice<T>,\r\n  isEnd: {\r\n    top: boolean,\r\n    bottom: boolean,\r\n    both: boolean\r\n  }\r\n};\r\n\r\nexport type SlicedArraySerialized<T extends ItemType> = {\r\n  slices: SliceSerialized<T>[]\r\n};\r\n\r\nexport default class SlicedArray<T extends ItemType> {\r\n  private slices: Slice<T>[]/*  = [[7,6,5],[4,3,2],[1,0,-1]] */;\r\n  private sliceConstructor: SliceConstructor<T>;\r\n\r\n  constructor() {\r\n    // @ts-ignore\r\n    this.sliceConstructor = SlicedArray.getSliceConstructor(this);\r\n\r\n    const first = this.constructSlice();\r\n    // first.setEnd(SliceEnd.Bottom);\r\n    this.slices = [first];\r\n  }\r\n\r\n  private static getSliceConstructor(slicedArray: SlicedArray<ItemType>) {\r\n    return class Slice<T> extends Array<ItemType> implements Slice<T> {\r\n      // slicedArray: SlicedArray;\r\n      end: SliceEnd = SliceEnd.None;\r\n\r\n      /* constructor(...items: ItemType[]) {\r\n        super(...items);\r\n        //this.slicedArray = slicedArray;\r\n      } */\r\n\r\n      isEnd(side: SliceEnd): boolean {\r\n        if((this.end & side) === side) {\r\n          return true;\r\n        }/*  else if(!this.slicedArray) {\r\n          return false;\r\n        } */\r\n\r\n        let isEnd = false;\r\n        if(side === SliceEnd.Top) {\r\n          const slice = slicedArray.last;\r\n          isEnd = slice.end & side ? this.includes(slice[slice.length - 1])/*  || !slice.length */ : false;\r\n        } else if(side === SliceEnd.Bottom) {\r\n          const slice = slicedArray.first;\r\n          isEnd = slice.end & side ? this.includes(slice[0])/*  || !slice.length */ : false;\r\n        } else if(side === SliceEnd.Both) {\r\n          return this.isEnd(SliceEnd.Top) && this.isEnd(SliceEnd.Bottom);\r\n        }\r\n\r\n        if(isEnd) {\r\n          this.setEnd(side);\r\n        }\r\n\r\n        return isEnd;\r\n      }\r\n\r\n      getEnds() {\r\n        return {\r\n          top: this.isEnd(SliceEnd.Top),\r\n          bottom: this.isEnd(SliceEnd.Bottom),\r\n          both: this.isEnd(SliceEnd.Both)\r\n        };\r\n      }\r\n\r\n      setEnd(side: SliceEnd) {\r\n        this.end |= side;\r\n      }\r\n\r\n      unsetEnd(side: SliceEnd) {\r\n        this.end &= ~side;\r\n      }\r\n\r\n      splice(start: number, deleteCount: number, ...items: ItemType[]) {\r\n        const ret = super.splice(start, deleteCount, ...items);\r\n\r\n        if(!this.length) {\r\n          const slices = slicedArray.slices as ItemType[][];\r\n          const idx = slices.indexOf(this);\r\n          if(idx !== -1) {\r\n            if(slices.length === 1) { // left empty slice without ends\r\n              this.unsetEnd(SliceEnd.Both);\r\n            } else { // delete this slice\r\n              slices.splice(idx, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        return ret;\r\n      }\r\n    }\r\n  }\r\n\r\n  public constructSlice(...items: T[]) {\r\n    // const slice = new Slice(this, ...items);\r\n    // can't pass items directly to constructor because first argument is length\r\n    const slice = new this.sliceConstructor(items.length);\r\n    for(let i = 0, length = items.length; i < length; ++i) {\r\n      slice[i] = items[i];\r\n    }\r\n    return slice;\r\n\r\n    // ! code below will slow execution in 15 times\r\n    /* const self = this;\r\n    const p: Slice = new Proxy(slice, {\r\n      get: function(target, name: any) {\r\n        if(name === 'constructor') {\r\n          const p = new Proxy(Slice, {\r\n            construct: (target, args) => {\r\n              return self.constructSlice(...args);\r\n            }\r\n          });\r\n\r\n          return p;\r\n        }\r\n\r\n        return target[name];\r\n      }\r\n    });\r\n\r\n    return p; */\r\n\r\n    /*\r\n    var p = slicedArray.constructSlice();\r\n    p.length = 100000;\r\n    p.fill(255);\r\n\r\n    var a = new Array(100000);\r\n    a.fill(255);\r\n\r\n    var b = 0;\r\n    var perf = performance.now();\r\n    for(var i = 0; i < p.length; ++i) {\r\n        b += p[i];\r\n    }\r\n\r\n    console.log('perf 1', performance.now() - perf);\r\n\r\n    b = 0;\r\n    perf = performance.now();\r\n    for(var i = 0; i < a.length; ++i) {\r\n        b += a[i];\r\n    }\r\n\r\n    console.log('perf 2', performance.now() - perf);\r\n    */\r\n  }\r\n\r\n  public insertSlice(slice: T[], flatten = true) {\r\n    if(!slice.length) {\r\n      return;\r\n    }\r\n\r\n    const first = this.slices[0];\r\n    if(!first.length) {\r\n      first.push(...slice);\r\n      return first;\r\n    }\r\n\r\n    const lowerBound = slice[slice.length - 1];\r\n    const upperBound = slice[0];\r\n\r\n    let foundSlice: Slice<T>, lowerIndex = -1, upperIndex = -1, foundSliceIndex = 0;\r\n    for(; foundSliceIndex < this.slices.length; ++foundSliceIndex) {\r\n      foundSlice = this.slices[foundSliceIndex];\r\n      lowerIndex = foundSlice.indexOf(lowerBound);\r\n      upperIndex = foundSlice.indexOf(upperBound);\r\n\r\n      if(upperIndex !== -1 && -1 !== lowerIndex) {\r\n        break;\r\n      } else if(upperIndex !== -1 || -1 !== lowerIndex) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(upperIndex !== -1 && -1 !== lowerIndex) {\r\n\r\n    } else if(upperIndex !== -1) {  // ([1, 2, 3] | [1, 2, 3, 4, 5]) -> [1, 2, 3, 4, 5]\r\n      const sliced = slice.slice(foundSlice.length - upperIndex);\r\n      foundSlice.push(...sliced);\r\n    } else if(lowerIndex !== -1) {  // ([1, 2, 3] | [-1, 0, 1]) -> [-1, 0, 1, 2, 3]\r\n      const sliced = slice.slice(0, slice.length - lowerIndex - 1);\r\n      foundSlice.unshift(...sliced);\r\n    } else {\r\n      let insertIndex = 0;\r\n      for(const length = this.slices.length; insertIndex < length; ++insertIndex) { // * maybe should iterate from the end, could be faster ?\r\n        const s = this.slices[insertIndex];\r\n        if(compareValue(slice[0], s[0]) === 1) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.slices.splice(insertIndex, 0, this.constructSlice(...slice));\r\n      foundSliceIndex = insertIndex;\r\n    }\r\n\r\n    if(flatten) {\r\n      return this.flatten(foundSliceIndex);\r\n    }\r\n  }\r\n\r\n  private flatten(foundSliceIndex: number) {\r\n    if(this.slices.length >= 2) {\r\n      for(let i = 0, length = this.slices.length; i < (length - 1); ++i) {\r\n        const prevSlice = this.slices[i];\r\n        const nextSlice = this.slices[i + 1];\r\n\r\n        const upperIndex = prevSlice.indexOf(nextSlice[0]);\r\n        if(upperIndex !== -1) {\r\n          prevSlice.setEnd(nextSlice.end);\r\n          this.slices.splice(i + 1, 1);\r\n\r\n          if(i < foundSliceIndex) {\r\n            --foundSliceIndex;\r\n          }\r\n\r\n          --length; // respect array bounds\r\n          --i;      // repeat from the same place\r\n\r\n          this.insertSlice(nextSlice, false);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.slices[foundSliceIndex];\r\n  }\r\n\r\n  // *\r\n\r\n  get first() {\r\n    return this.slices[0];\r\n  }\r\n\r\n  get last() {\r\n    return this.slices[this.slices.length - 1];\r\n  }\r\n\r\n  get slice() {\r\n    return this.first;\r\n  }\r\n\r\n  get length() {\r\n    return this.slice.length;\r\n  }\r\n\r\n  public findSlice(item: T) {\r\n    for(let i = 0, length = this.slices.length; i < length; ++i) {\r\n      const slice = this.slices[i];\r\n      const index = slice.indexOf(item);\r\n      if(index !== -1) {\r\n        return {slice, index};\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  public findSliceOffset(maxId: T) {\r\n    let slice: Slice<T>;\r\n    for(let i = 0; i < this.slices.length; ++i) {\r\n      let offset = 0;\r\n      slice = this.slices[i];\r\n      if(slice.length < 2) {\r\n        continue;\r\n      }\r\n\r\n      for(; offset < slice.length; ++offset) {\r\n        if(compareValue(maxId, slice[offset]) >= 0) {\r\n          /* if(!offset) { // because can't find 3 in [[5,4], [2,1]]\r\n            return undefined;\r\n          } */\r\n\r\n          return {\r\n            slice,\r\n            offset: maxId === slice[offset] ? offset : offset - 1\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if(slice && slice.isEnd(SliceEnd.Top)) {\r\n      return {\r\n        slice,\r\n        offset: slice.length\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  // * https://core.telegram.org/api/offsets\r\n  public sliceMe(offsetId: T, add_offset: number, limit: number) {\r\n    let slice = this.slice;\r\n    let offset = 0;\r\n    let sliceOffset = 0;\r\n\r\n    if(offsetId) {\r\n      const pos = this.findSliceOffset(offsetId);\r\n      if(!pos) {\r\n        return undefined;\r\n      }\r\n\r\n      slice = pos.slice;\r\n      offset = sliceOffset = pos.offset;\r\n\r\n      if(slice.includes(offsetId)) {\r\n        sliceOffset += 1;\r\n      }\r\n\r\n      /* if(slice.includes(offsetId) && add_offset < 0) {\r\n        add_offset += 1;\r\n      } */\r\n    }\r\n\r\n    const sliceStart = Math.max(sliceOffset + add_offset, 0);\r\n    const sliceEnd = sliceOffset + add_offset + limit;\r\n    // const fixHalfBackLimit = add_offset && !(limit / add_offset % 2) && (sliceEnd % 2) ? 1 : 0;\r\n    // sliceEnd += fixHalfBackLimit;\r\n\r\n    const sliced = slice.slice(sliceStart, sliceEnd) as Slice<T>;\r\n\r\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\r\n    const bottomWasMeantToLoad = Math.abs(add_offset);\r\n\r\n    // can use 'slice' here to check because if it's end, then 'sliced' is out of 'slice'\r\n    // useful when there is only 1 message in chat on its reopening\r\n    const topFulfilled = (slice.length - sliceOffset) >= topWasMeantToLoad || (slice.isEnd(SliceEnd.Top) ? (sliced.setEnd(SliceEnd.Top), true) : false);\r\n    const bottomFulfilled = (sliceOffset - bottomWasMeantToLoad) >= 0 || (slice.isEnd(SliceEnd.Bottom) ? (sliced.setEnd(SliceEnd.Bottom), true) : false);\r\n\r\n    // if(topFulfilled) sliced.isEnd(SliceEnd.Top);\r\n    // if(bottomFulfilled) sliced.isEnd(SliceEnd.Bottom);\r\n\r\n    return {\r\n      slice: sliced,\r\n      offsetIdOffset: offset,\r\n      fulfilled: SliceEnd.None | (topFulfilled && bottomFulfilled ? SliceEnd.Both : ((topFulfilled ? SliceEnd.Top : SliceEnd.None) | (bottomFulfilled ? SliceEnd.Bottom : SliceEnd.None)))\r\n    };\r\n  }\r\n\r\n  public unshift(...items: T[]) {\r\n    let slice = this.first;\r\n    if(!slice.length) {\r\n      slice.setEnd(SliceEnd.Bottom);\r\n    } else if(!slice.isEnd(SliceEnd.Bottom)) {\r\n      slice = this.constructSlice();\r\n      slice.setEnd(SliceEnd.Bottom);\r\n      this.slices.unshift(slice);\r\n    }\r\n\r\n    slice.unshift(...items);\r\n  }\r\n\r\n  public push(...items: T[]) {\r\n    let slice = this.last;\r\n    if(!slice.length) {\r\n      slice.setEnd(SliceEnd.Top);\r\n    } else if(!slice.isEnd(SliceEnd.Top)) {\r\n      slice = this.constructSlice();\r\n      slice.setEnd(SliceEnd.Top);\r\n      this.slices.push(slice);\r\n    }\r\n\r\n    slice.push(...items);\r\n  }\r\n\r\n  public delete(item: T) {\r\n    const found = this.findSlice(item);\r\n    if(found) {\r\n      found.slice.splice(found.index, 1);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public deleteSlice(slice: Slice<T>) {\r\n    indexOfAndSplice(this.slices, slice);\r\n  }\r\n\r\n  public toJSON() {\r\n    const slices: SlicedArraySerialized<T>['slices'] = this.slices.map((slice) => {\r\n      return {\r\n        values: slice.slice(),\r\n        isEnd: slice.getEnds()\r\n      };\r\n    });\r\n\r\n    const serialized: SlicedArraySerialized<T> = {\r\n      slices\r\n    };\r\n\r\n    return JSON.stringify(serialized);\r\n  }\r\n\r\n  public static fromJSON<T extends ItemType>(json: string) {\r\n    const parsed: SlicedArraySerialized<T> = JSON.parse(json);\r\n    const sliced = new SlicedArray<T>();\r\n    parsed.slices.forEach((slice) => {\r\n      const inserted = sliced.insertSlice(slice.values) || sliced.first;\r\n      if(slice.isEnd.top) inserted.setEnd(SliceEnd.Top);\r\n      if(slice.isEnd.bottom) inserted.setEnd(SliceEnd.Bottom);\r\n    });\r\n\r\n    return sliced;\r\n  }\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.SlicedArray = SlicedArray);\r\n","import compareLong from './long/compareLong';\n\nexport default function compareValue(val1: string | number, val2: typeof val1) {\n  if((val1 as number).toExponential) {\n    const diff = (val1 as number) - (val2 as number);\n    return diff < 0 ? -1 : (diff > 0 ? 1 : 0);\n  }\n\n  return compareLong(val1 as string, val2 as string);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function compareLong(str1: string, str2: string) {\n  const str1Length = str1.length;\n  if(str1Length !== str2.length) {\n    const diff = str1Length - str2.length;\n    return diff < 0 ? -1 : (diff > 0 ? 1 : 0);\n  }\n\n  const maxPartLength = 15;\n  for(let i = 0; i < str1Length; i += maxPartLength) {\n    const v1 = +str1.slice(i, i + maxPartLength);\n    const v2 = +str2.slice(i, i + maxPartLength);\n    const diff = v1 - v2;\n    if(diff) {\n      return diff;\n    }\n  }\n\n  return 0;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {ChannelParticipant, ChatParticipant} from '../../../../layer';\nimport getPeerId from '../peers/getPeerId';\n\nexport default function getParticipantPeerId(participant: ChannelParticipant | ChatParticipant): PeerId {\n  const peerId = (participant as ChannelParticipant.channelParticipantBanned).peer ?\n    getPeerId((participant as ChannelParticipant.channelParticipantBanned).peer) :\n    (participant as ChatParticipant.chatParticipant).user_id.toPeerId();\n  return peerId;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Chat, ChatAdminRights, ChatBannedRights} from '../../../../layer';\nimport {ChatRights} from '../../appChatsManager';\n\n/**\n * Check the user's ability to do an action in chat\n * @param id\n * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n * @param rights do not provide this parameter when checking rights for self\n * @param isThread\n * @returns\n */\nexport default function hasRights(chat: Chat, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n  if(chat._ === 'chatEmpty') return false;\n\n  if((chat as Chat.chat).pFlags.deactivated && action !== 'view_messages') {\n    return false;\n  }\n\n  const isCheckingRightsForSelf = rights === undefined;\n  if((chat as Chat.chat).pFlags.creator && isCheckingRightsForSelf) {\n    return true;\n  }\n\n  if(chat._ === 'chatForbidden' ||\n      chat._ === 'channelForbidden' ||\n      // (chat as any).pFlags.kicked ||\n      (chat.pFlags.left && !(chat as Chat.channel).pFlags.megagroup)) {\n    return false;\n  }\n\n  // const adminRights = chat.admin_rights;\n  // const bannedRights = (chat as Chat.channel).banned_rights || chat.default_banned_rights;\n\n  if(!rights) {\n    rights = chat.admin_rights || (chat as Chat.channel).banned_rights || chat.default_banned_rights;\n\n    if(!rights) {\n      return false;\n    }\n  }\n\n  let myFlags: Partial<{[flag in keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags']]: true}> = {};\n  if(rights) {\n    myFlags = rights.pFlags as any;\n  }\n\n  // const adminFlags = adminRights?.pFlags || {};\n  // const bannedFlags = bannedRights?.pFlags || {};\n\n  switch(action) {\n    case 'embed_links':\n    case 'send_games':\n    case 'send_gifs':\n    case 'send_inline':\n    case 'send_media':\n    case 'send_messages':\n    case 'send_polls':\n    case 'send_stickers': {\n      if(!isThread && chat.pFlags.left) {\n        return false;\n      }\n\n      if(rights._ === 'chatBannedRights' && myFlags[action]) {\n        return false;\n      }\n\n      if(chat._ === 'channel') {\n        if(!chat.pFlags.megagroup && !myFlags.post_messages) {\n          return false;\n        }\n      }\n\n      break;\n    }\n\n    // * revoke foreign messages\n    case 'delete_messages':\n    case 'manage_call': {\n      return !!myFlags[action];\n    }\n\n    case 'pin_messages': {\n      return rights._ === 'chatAdminRights' ? myFlags[action] || !!myFlags.post_messages : !myFlags[action];\n    }\n\n    // case 'change_info': {\n    // return adminRights || isCheckingRightsForSelf ? adminFlags[action] : !myFlags[action];\n    // }\n\n    case 'change_info':\n    case 'invite_users': {\n      return rights._ === 'chatAdminRights' ? myFlags[action] : !myFlags[action];\n    }\n\n    // * only creator can do that\n    case 'change_type':\n    case 'delete_chat': {\n      return false;\n    }\n\n    case 'ban_users':\n    case 'change_permissions': {\n      return rights._ === 'chatAdminRights' && !!myFlags['ban_users'];\n    }\n\n    case 'view_participants': {\n      return !!(chat._ === 'chat' || !chat.pFlags.broadcast || chat.pFlags.creator || chat.admin_rights);\n    }\n  }\n\n  return true;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Dialog} from '../../../../layer';\nimport getDialogIndexKey from './getDialogIndexKey';\n\nexport default function getDialogIndex(\n  dialog: Dialog.dialog,\n  indexKey: ReturnType<typeof getDialogIndexKey> = getDialogIndexKey(dialog.folder_id)\n) {\n  return dialog?.[indexKey];\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {DialogFilter} from '../../../../layer';\n\nexport default function getDialogIndexKey(localId?: DialogFilter.dialogFilter['localId']) {\n  return `index_${localId}` as const;\n  // return filterId !== undefined && filterId > 1 ? `filter_${filterId}` as const : 'main' as const;\n  // const indexStr = filterId > 1 ?\n  //   `index_${filterId}` as const :\n  //   'index' as const;\n\n  // return indexStr;\n}\n","import {MessagesBotResults} from '../../../../layer';\n\nexport default function generateQId(queryId: MessagesBotResults.messagesBotResults['query_id'], resultId: string) {\n  return queryId + '_' + resultId;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Message, MessageMedia, MessageEntity, MessageAction} from '../../../../layer';\nimport matchUrl from '../../../richTextProcessor/matchUrl';\nimport type {MyDocument} from '../../appDocsManager';\nimport type {MyInputMessagesFilter, MyMessage} from '../../appMessagesManager';\n\nexport default function filterMessagesByInputFilter(inputFilter: MyInputMessagesFilter, history: Array<Message.message | Message.messageService>, limit: number) {\n  if(inputFilter === 'inputMessagesFilterEmpty') {\n    return history;\n  }\n\n  const foundMsgs: MyMessage[] = [];\n  if(!history.length) {\n    return foundMsgs;\n  }\n\n  let filtering = true;\n  const neededContents: Partial<{\n    [messageMediaType in MessageMedia['_']]: boolean\n  }> & Partial<{\n    avatar: boolean,\n    url: boolean\n  }> = {},\n    neededDocTypes: MyDocument['type'][] = [],\n    excludeDocTypes: MyDocument['type'][] = []/* ,\n    neededFlags: string[] = [] */;\n\n  switch(inputFilter) {\n    case 'inputMessagesFilterPhotos':\n      neededContents['messageMediaPhoto'] = true;\n      break;\n\n    case 'inputMessagesFilterPhotoVideo':\n      neededContents['messageMediaPhoto'] = true;\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('video');\n      break;\n\n    case 'inputMessagesFilterVideo':\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('video');\n      break;\n\n    case 'inputMessagesFilterDocument':\n      neededContents['messageMediaDocument'] = true;\n      // excludeDocTypes.push('video');\n      neededDocTypes.push(undefined, 'photo', 'pdf');\n      break;\n\n    case 'inputMessagesFilterVoice':\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('voice');\n      break;\n\n    case 'inputMessagesFilterRoundVoice':\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('round', 'voice');\n      break;\n\n    case 'inputMessagesFilterRoundVideo':\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('round');\n      break;\n\n    case 'inputMessagesFilterMusic':\n      neededContents['messageMediaDocument'] = true;\n      neededDocTypes.push('audio');\n      break;\n\n    case 'inputMessagesFilterUrl':\n      neededContents['url'] = true;\n      break;\n\n    case 'inputMessagesFilterChatPhotos':\n      neededContents['avatar'] = true;\n      break;\n\n      /* case 'inputMessagesFilterPinned':\n      neededFlags.push('pinned');\n      break; */\n\n      /* case 'inputMessagesFilterMyMentions':\n      neededContents['mentioned'] = true;\n      break; */\n\n    default:\n      filtering = false;\n      break;\n      /* return Promise.resolve({\n        count: 0,\n        next_rate: 0,\n        history: [] as number[]\n      }); */\n  }\n\n  if(!filtering) {\n    return foundMsgs;\n  }\n\n  for(let i = 0, length = history.length; i < length; ++i) {\n    const message: Message.message | Message.messageService = history[i];\n    if(!message) continue;\n\n    // || (neededContents['mentioned'] && message.totalEntities.find((e: any) => e._ === 'messageEntityMention'));\n\n    let found = false;\n    if(message._ === 'message') {\n      if(message.media && neededContents[message.media._]/*  && !message.fwd_from */) {\n        const doc = (message.media as MessageMedia.messageMediaDocument).document as MyDocument;\n        if(doc &&\n          (\n            (neededDocTypes.length && !neededDocTypes.includes(doc.type)) ||\n            excludeDocTypes.includes(doc.type)\n          )\n        ) {\n          continue;\n        }\n\n        found = true;\n      } else if(neededContents['url'] && message.message) {\n        const goodEntities = ['messageEntityTextUrl', 'messageEntityUrl'];\n        if((message.totalEntities as MessageEntity[]).find((e) => goodEntities.includes(e._)) || matchUrl(message.message)) {\n          found = true;\n        }\n      }\n    } else if(neededContents['avatar'] &&\n      message.action &&\n      ([\n        'messageActionChannelEditPhoto' as const,\n        'messageActionChatEditPhoto' as const,\n        'messageActionChannelEditVideo' as const,\n        'messageActionChatEditVideo' as const\n      ] as MessageAction['_'][]).includes(message.action._)) {\n      found = true;\n    }/*  else if(neededFlags.find((flag) => message.pFlags[flag])) {\n      found = true;\n    } */\n\n    if(found) {\n      foundMsgs.push(message);\n      if(foundMsgs.length >= limit) {\n        break;\n      }\n    }\n  }\n\n  return foundMsgs;\n}\n","import assumeType from '../../../../helpers/assumeType';\nimport {Message, MessageEntity} from '../../../../layer';\n\nexport default function getAlbumText(messages: Message.message[]) {\n  let foundMessages = 0, message: string, totalEntities: MessageEntity[], entities: MessageEntity[];\n  for(const m of messages) {\n    assumeType<Message.message>(m);\n    if(m.message) {\n      if(++foundMessages > 1) break;\n      message = m.message;\n      totalEntities = m.totalEntities;\n      entities = m.entities;\n    }\n  }\n\n  if(foundMessages > 1) {\n    message = undefined;\n    totalEntities = undefined;\n    entities = undefined;\n  }\n\n  return {message, entities, totalEntities};\n}\n","import isObject from '../../../../helpers/object/isObject';\nimport {InputPeer, Peer} from '../../../../layer';\nimport {NULL_PEER_ID} from '../../../mtproto/mtproto_config';\n\nexport default function getPeerId(peerId: {user_id: UserId} | {channel_id: ChatId} | {chat_id: ChatId} | InputPeer | PeerId | string): PeerId {\n  if(peerId !== undefined && ((peerId as string).isPeerId ? (peerId as string).isPeerId() : false)) return peerId as PeerId;\n  // if(typeof(peerId) === 'string' && /^[uc]/.test(peerId)) return peerId as PeerId;\n  // if(typeof(peerId) === 'number') return peerId;\n  else if(isObject(peerId)) {\n    const userId = (peerId as Peer.peerUser).user_id;\n    if(userId !== undefined) {\n      return userId.toPeerId(false);\n    }\n\n    const chatId = (peerId as Peer.peerChannel).channel_id || (peerId as Peer.peerChat).chat_id;\n    if(chatId !== undefined) {\n      return chatId.toPeerId(true);\n    }\n\n    return NULL_PEER_ID; // maybe it is an inputPeerSelf\n  // } else if(!peerId) return 'u0';\n  } else if(!peerId) return NULL_PEER_ID;\n\n  const isUser = (peerId as string).charAt(0) === 'u';\n  const peerParams = (peerId as string).substr(1).split('_');\n\n  return isUser ? peerParams[0].toPeerId() : (peerParams[0] || '').toPeerId(true);\n}\n","import {MyDocument} from '../../appDocsManager';\n\nexport default function getStickerEffectThumb(doc: MyDocument) {\n  return doc.video_thumbs?.[0];\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {User} from '../../../../layer';\nimport {REPLIES_PEER_ID} from '../../../mtproto/mtproto_config';\n\nexport default function canSendToUser(user: User.user) {\n  return !user.pFlags.deleted && user.id.toPeerId() !== REPLIES_PEER_ID;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport enum ConnectionStatus {\r\n  Connected,\r\n  Connecting,\r\n  Closed,\r\n  TimedOut\r\n};\r\n\r\nexport type ConnectionStatusChange = {\r\n  _: 'networkerStatus',\r\n  status: ConnectionStatus,\r\n  dcId: number,\r\n  name: string,\r\n  isFileNetworker: boolean,\r\n  isFileDownload: boolean,\r\n  isFileUpload: boolean,\r\n  retryAt?: number\r\n};\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MessageEntity} from '../../layer';\n\nexport default function fixEmoji(text: string, entities?: MessageEntity[]) {\n  /* if(!IS_EMOJI_SUPPORTED) {\n    return text;\n  } */\n  // '$`\\ufe0f'\n\n  text = text.replace(/[\\u2640\\u2642\\u2764](?!\\ufe0f)/g, (match, offset, string) => {\n    if(entities) {\n      const length = match.length;\n\n      offset += length;\n      entities.forEach((entity) => {\n        const end = entity.offset + entity.length;\n        if(end === offset) { // current entity\n          entity.length += length;\n        } else if(end > offset) {\n          entity.offset += length;\n        }\n      });\n    }\n\n    // console.log([match, offset, string]);\n    return match + '\\ufe0f';\n  });\n\n  return text;\n}\n","import {URL_REG_EXP} from '.';\n\nexport default function matchUrl(text: string) {\n  return !text ? null : text.match(URL_REG_EXP);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {MARKDOWN_ENTITIES, MARKDOWN_REG_EXP} from '.';\nimport {MessageEntity} from '../../layer';\nimport combineSameEntities from './combineSameEntities';\nimport findConflictingEntity from './findConflictingEntity';\nimport mergeEntities from './mergeEntities';\n\nexport default function parseMarkdown(raw: string, currentEntities: MessageEntity[], noTrim?: boolean): string {\n  /* if(!markdownTestRegExp.test(text)) {\n    return noTrim ? text : text.trim();\n  } */\n\n  const entities: MessageEntity[] = [];\n  let pushedEntity = false;\n  const pushEntity = (entity: MessageEntity) => !findConflictingEntity(currentEntities, entity) ? (entities.push(entity), pushedEntity = true) : pushedEntity = false;\n\n  const newTextParts: string[] = [];\n  let rawOffset = 0, match;\n  while(match = raw.match(MARKDOWN_REG_EXP)) {\n    const matchIndex = rawOffset + match.index;\n    newTextParts.push(raw.substr(0, match.index));\n    const text = (match[3] || match[8] || match[11] || match[13]);\n    rawOffset -= text.length;\n    // text = text.replace(/^\\s+|\\s+$/g, '');\n    rawOffset += text.length;\n\n    let entity: MessageEntity;\n    pushedEntity = false;\n    if(text.match(/^`*$/)) {\n      newTextParts.push(match[0]);\n    } else if(match[3]) { // pre\n      entity = {\n        _: 'messageEntityPre',\n        language: '',\n        offset: matchIndex + match[1].length,\n        length: text.length\n      };\n\n      if(pushEntity(entity)) {\n        if(match[5] === '\\n') {\n          match[5] = '';\n          rawOffset -= 1;\n        }\n\n        newTextParts.push(match[1] + text + match[5]);\n\n        rawOffset -= match[2].length + match[4].length;\n      }\n    } else if(match[7]) { // code|italic|bold\n      const isSOH = match[6] === '\\x01';\n\n      entity = {\n        _: MARKDOWN_ENTITIES[match[7]] as (MessageEntity.messageEntityBold | MessageEntity.messageEntityCode | MessageEntity.messageEntityItalic | MessageEntity.messageEntitySpoiler)['_'],\n        // offset: matchIndex + match[6].length,\n        offset: matchIndex + (isSOH ? 0 : match[6].length),\n        length: text.length\n      };\n\n      if(pushEntity(entity)) {\n        if(!isSOH) {\n          newTextParts.push(match[6] + text + match[9]);\n        } else {\n          newTextParts.push(text);\n        }\n\n        rawOffset -= match[7].length * 2 + (isSOH ? 2 : 0);\n      }\n    } else if(match[11]) { // custom mention\n      entity = {\n        _: 'messageEntityMentionName',\n        user_id: match[10].toUserId(),\n        offset: matchIndex,\n        length: text.length\n      };\n\n      if(pushEntity(entity)) {\n        newTextParts.push(text);\n\n        rawOffset -= match[0].length - text.length;\n      }\n    } else if(match[12]) { // text url\n      entity = {\n        _: 'messageEntityTextUrl',\n        url: match[14],\n        offset: matchIndex,\n        length: text.length\n      };\n\n      if(pushEntity(entity)) {\n        newTextParts.push(text);\n\n        rawOffset -= match[12].length - text.length;\n      }\n    }\n\n    if(!pushedEntity) {\n      newTextParts.push(match[0]);\n    }\n\n    raw = raw.substr(match.index + match[0].length);\n    rawOffset += match.index + match[0].length;\n  }\n\n  newTextParts.push(raw);\n  let newText = newTextParts.join('');\n  if(!newText.replace(/\\s+/g, '').length) {\n    newText = raw;\n    entities.splice(0, entities.length);\n  }\n\n  // ! idk what it was here for\n  // if(!entities.length && !noTrim) {\n  //   newText = newText.trim();\n  // }\n\n  mergeEntities(currentEntities, entities);\n  combineSameEntities(currentEntities);\n\n  let length = newText.length;\n  if(!noTrim) {\n    // trim left\n    newText = newText.replace(/^\\s*/, '');\n\n    let diff = length - newText.length;\n    if(diff) {\n      currentEntities.forEach((entity) => {\n        entity.offset = Math.max(0, entity.offset - diff);\n      });\n    }\n\n    // trim right\n    newText = newText.replace(/\\s*$/, '');\n    diff = length - newText.length;\n    length = newText.length;\n    if(diff) {\n      currentEntities.forEach((entity) => {\n        if((entity.offset + entity.length) > length) {\n          entity.length = length - entity.offset;\n        }\n      });\n    }\n  }\n\n  return newText;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MessageEntity} from '../../layer';\nimport encodeSpoiler from './encodeSpoiler';\n\n/**\n * ! This function is still unsafe to use with .innerHTML\n */\nexport default function wrapPlainText(text: string, entities: MessageEntity[] = []) {\n  entities.forEach((entity) => {\n    if(entity._ === 'messageEntitySpoiler') {\n      text = encodeSpoiler(text, entity).text;\n    }\n  });\n\n  return text;\n  // if(entities?.length) {\n  //   entities = entities.filter((entity) => entity._ === 'messageEntitySpoiler');\n  // }\n\n  // return wrapRichText(text, {\n  //   entities,\n  //   noEncoding: true,\n  //   noTextFormat: true,\n  //   noLinebreaks: true,\n  //   noLinks: true\n  // }).textContent;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {processSearchText, ProcessSearchTextOptions} from '../helpers/cleanSearchText';\nimport flatten from '../helpers/array/flatten';\n\nexport default class SearchIndex<SearchWhat> {\n  private fullTexts: Map<SearchWhat, string> = new Map();\n\n  // minChars can be 0 because it requires at least one word (one symbol) to be found\n  constructor(private options?: ProcessSearchTextOptions, private minChars = 0) {\n  }\n\n  public indexObject(id: SearchWhat, searchText: string) {\n    /* if(searchIndex.fullTexts.hasOwnProperty(id)) {\n      return false;\n    } */\n\n    if(this.options && searchText.trim()) {\n      searchText = processSearchText(searchText, this.options);\n    }\n\n    if(!searchText) {\n      this.fullTexts.delete(id);\n      return false;\n    }\n\n    this.fullTexts.set(id, searchText);\n\n    /* const shortIndexes = searchIndex.shortIndexes;\n    searchText.split(' ').forEach((searchWord) => {\n      let len = Math.min(searchWord.length, 3),\n        wordPart, i;\n      for(i = 1; i <= len; i++) {\n        wordPart = searchWord.substr(0, i);\n        if(shortIndexes[wordPart] === undefined) {\n          shortIndexes[wordPart] = [id];\n        } else {\n          shortIndexes[wordPart].push(id);\n        }\n      }\n    }); */\n  }\n\n  private _search(query: string) {\n    const newFoundObjs: Array<{fullText: string, fullTextLength: number, what: SearchWhat, foundChars: number}> = [];\n    const fullTexts = this.fullTexts;\n    const queryWords = query.split(' ');\n    const queryWordsLength = queryWords.length;\n    fullTexts.forEach((fullText, what) => {\n      let found = true;\n      let foundChars = 0;\n      for(let i = 0; i < queryWordsLength; ++i) { // * verify that all words are found\n        const word = queryWords[i];\n        const idx = fullText.indexOf(word);\n        if(idx === -1 || (idx !== 0 && fullText[idx - 1] !== ' '/*  && !badCharsRe.test(fullText[idx - 1]) */)) { // * search only from word beginning\n          found = false;\n          break;\n        }\n\n        foundChars += word.length;\n      }\n\n      if(found) {\n        foundChars += queryWordsLength - 1;\n        const fullTextLength = fullText.length;\n        if(this.minChars <= foundChars || fullTextLength <= foundChars) {\n          newFoundObjs.push({fullText, fullTextLength, what, foundChars});\n        }\n      }\n    });\n\n    return newFoundObjs;\n  }\n\n  public search(query: string) {\n    if(this.options) {\n      query = processSearchText(query, this.options);\n    }\n\n    const queries = query.split('\\x01');\n    const newFoundObjs = flatten(queries.map((query) => this._search(query)));\n\n    newFoundObjs.sort((a, b) => a.fullTextLength - b.fullTextLength || b.foundChars - a.foundChars);\n\n    // newFoundObjs.sort((a, b) => a.fullText.localeCompare(b.fullText));\n    const newFoundObjs2: Set<SearchWhat> = new Set(newFoundObjs.map((o) => o.what));\n\n    return newFoundObjs2;\n  }\n}\n","export default function flatten<T>(arr: T[][]): T[] {\n  return arr.reduce((acc, val) => (acc.push(...val), acc), []);\n}\n"],"names":["LazyLoadQueueBase","constructor","parallelLimit","queueId","queue","inProcess","Set","lockPromise","unlockResolve","log","this","processQueue","_processQueue","clear","length","lock","Promise","resolve","reject","unlock","processItem","item","add","loadItem","err","has","type","error","delete","load","getItem","shift","addElement","method","el","size","push","unshift","filterUnique","arr","insertInDescendSortedArray","array","element","getProperty","pos","property","sortProperty","undefined","indexOf","prev","next","splice","len","i","console","assumeType","x","bytesCmp","bytes1","bytes2","bytesFromHex","hexString","bytes","Uint8Array","Math","ceil","start","parseInt","charAt","substr","convertToUint8Array","TextEncoder","encode","callbackify","smth","callback","then","getMiddleware","cleanupObj","cleaned","clean","get","additionalCallback","_cleanupObj","getObjectKeysAndSort","object","sort","ids","Map","keys","Object","map","a","b","debounce","fn","ms","shouldRunFirst","shouldRunLast","waitingTimeout","waitingPromise","hadNewCall","invoke","args","_resolve","_reject","apply","clearTimeout","_waitingTimeout","catch","SliceEnd","compareValue","val1","val2","toExponential","diff","str1","str2","str1Length","slice","compareLong","SlicedArray","sliceConstructor","getSliceConstructor","first","constructSlice","slices","static","slicedArray","Array","end","None","isEnd","side","Top","last","includes","Bottom","Both","setEnd","getEnds","top","bottom","both","unsetEnd","deleteCount","items","ret","super","idx","insertSlice","flatten","lowerBound","upperBound","foundSlice","lowerIndex","upperIndex","foundSliceIndex","sliced","insertIndex","s","prevSlice","nextSlice","findSlice","index","findSliceOffset","maxId","offset","sliceMe","offsetId","add_offset","limit","sliceOffset","sliceStart","max","sliceEnd","topWasMeantToLoad","bottomWasMeantToLoad","abs","topFulfilled","bottomFulfilled","offsetIdOffset","fulfilled","found","deleteSlice","indexOfAndSplice","toJSON","serialized","values","JSON","stringify","json","parsed","parse","forEach","inserted","getParticipantPeerId","participant","peer","user_id","toPeerId","hasRights","chat","action","rights","isThread","_","pFlags","deactivated","isCheckingRightsForSelf","creator","left","megagroup","admin_rights","banned_rights","default_banned_rights","myFlags","post_messages","broadcast","getDialogIndex","dialog","indexKey","folder_id","getDialogIndexKey","localId","generateQId","queryId","resultId","filterMessagesByInputFilter","inputFilter","history","foundMsgs","filtering","neededContents","neededDocTypes","excludeDocTypes","message","media","doc","document","goodEntities","totalEntities","find","e","getAlbumText","messages","entities","foundMessages","m","getPeerId","peerId","isPeerId","userId","chatId","channel_id","chat_id","isUser","peerParams","split","getStickerEffectThumb","video_thumbs","canSendToUser","user","deleted","id","ConnectionStatus","fixEmoji","text","replace","match","string","entity","matchUrl","parseMarkdown","raw","currentEntities","noTrim","pushedEntity","pushEntity","newTextParts","rawOffset","matchIndex","language","isSOH","toUserId","url","newText","join","wrapPlainText","SearchIndex","options","minChars","fullTexts","indexObject","searchText","trim","set","_search","query","newFoundObjs","queryWords","queryWordsLength","fullText","what","foundChars","word","fullTextLength","search","reduce","acc","val","o"],"sourceRoot":""}
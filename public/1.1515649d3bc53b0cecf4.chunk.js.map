{"version":3,"sources":["webpack:///./src/lib/appManagers/appRuntimeManager.ts","webpack:///./src/lib/webp/webp.worker.ts","webpack:///./src/lib/webp/webpWorkerController.ts","webpack:///./src/lib/langPack.ts","webpack:///./src/lib/mtproto/singleInstance.ts","webpack:///./src/lib/mtproto/webPushApiManager.ts","webpack:///./src/lib/mtproto/telegramMeWebManager.ts","webpack:///./src/lib/mtproto/mtproto.worker.ts","webpack:///./src/lib/mtproto/transports/websocket.ts","webpack:///./src/lib/mtproto/mtprotoworker.ts","webpack:///./src/lib/crypto/crypto_methods.ts","webpack:///./src/helpers/date.ts","webpack:///./src/helpers/string.ts"],"names":["appRuntimeManager","location","reload","e","window","close","focus","Worker_fn","Worker","webpWorkerController","convertPromises","this","worker","addEventListener","payload","data","fileName","indexOf","promise","bytes","resolve","reject","postMessage","init","undefined","isWebpSupportedCache","document","createElement","toDataURL","startsWith","hasOwnProperty","convertPromise","type","langPack","I18n","pluralRules","cacheLangPackPromise","loadLocalLangPack","defaultCode","langPackCode","lastRequestedLangCode","Promise","all","then","lang","langSign","strings","formatLocalStrings","default","saveLangPack","_","from_version","lang_code","version","local","loadLangPack","langCode","requestedServerLanguage","invokeApiCacheable","lang_pack","polyfillPromise","pushTo","i","v","push","key","value","getLangPack","_langPack","__langPack","___langPack","forEach","l","concat","string","appVersion","langPackVersion","set","applyLangPack","Intl","PluralRules","err","console","error","split","clear","dispatchEvent","Array","from","querySelectorAll","element","instance","weakMap","get","update","superFormatter","input","args","indexHolder","out","lastIndex","replace","match","p1","p2","p3","offset","slice","b","append","length","format","plain","str","select","regExp","Map","getCacheLangPack","finally","getStrings","invokeApi","keys","_Intl","Object","assign","WeakMap","IntlElementBase","options","property","classList","add","IntlElement","textContent","formatted","dataset","IntlDateElement","dateTimeFormat","DateTimeFormat","date","i18n","i18n_","_i18n","join","elements","useLast","arr","delimiterKey","singleInstance","log","clearInstance","masterInstance","deactivated","warn","delete","deactivateInstance","deactivateTimeout","idle","checkInstance","isIDLE","time","Date","now","newInstance","id","instanceID","curInstance","xt_instance","startAll","initial","clearTimeout","stopAll","setTimeout","started","reset","setInterval","documentElement","WebPushApiManager","isAvailable","isPushEnabled","localNotificationsAvailable","settings","isFirefox","navigator","userAgent","toLowerCase","userVisibleOnly","subscribe","serviceWorker","ready","reg","pushManager","subscription","pushSubscriptionNotify","catch","Notification","permission","isAliveNotify","baseUrl","href","ACTIONS_LANG_MAP","push_action_mute1d","push_action_settings","push_message_nopreview","action","task","localNotifications","postSWMessage","isAliveTO","getSubscription","setUpServiceWorkerChannel","unsubscribe","successful","newSettings","addServiceWorkerTaskListener","event","subscriptionObj","toJSON","endpoint","p256dh","auth","tokenType","tokenValue","JSON","stringify","webPushApiManager","TelegramMeWebManager","disabled","test","domains","hostname","canRedirect","curValue","ts","tgme_sync","promises","map","url","script","onload","onerror","remove","src","body","appendChild","telegramMeWebManager","dcId","logSuffix","super","debug","handleOpen","handleError","handleClose","removeListeners","handleMessage","byteLength","send","ws","logTypes","Error","Log","Debug","logger","connect","removeEventListener","WebSocket","binaryType","apiManagerProxy","method","performTaskWorker","afterMessageIdTemp","taskId","awaiting","pending","updatesProcessor","hashes","apiPromisesSingle","apiPromisesCacheable","isSWRegistered","sockets","taskListeners","taskListenersSW","postMessagesWaiting","onWorkerMessage","callback","progress","rootScope","finalizeTask","result","start","registerServiceWorker","addTaskListener","toggleStorage","sessionStorage","race","setAuthorized","forceUnsubscribe","cacheName","caches","socketTask","socket","onOpen","onClose","onMessage","buffer","storageTask","res","language","performTaskWorkerVoid","forceReconnectTimeout","registerWorker","register","scope","registration","installing","waiting","active","onServiceWorkerFail","releasePending","controller","responseTask","uploadFile","originalPayload","message","bind","isWebpSupported","name","onWorkerFirstMessage","once","deferred","taskName","params","o","prepareTempMessageId","messageId","queryJSON","cached","hash","includes","q","cache","item","override","fulfilled","timeout","cacheSeconds","timestamp","verify","queueId","userAuth","dcID","dc_id","enabled","months","days","ONE_DAY","getWeekNumber","d","UTC","getFullYear","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","Math","ceil","getTime","formatDateAccordingToToday","timeStr","getHours","getMinutes","getDay","formatDateAccordingToTodayNew","today","hour","minute","year","day","month","weekday","formatTime","getFullDate","joiner","monthAsNumber","noSeconds","getSeconds","leadingZero","noTime","tsNow","seconds","t","yearPattern","RegExp","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","fillTipDates","query","dates","trim","setFullYear","setHours","minDate","maxDate","title","dayOfWeek","c","setDate","formatWeekLong","getDayOfWeek","distance","setTime","matches","exec","g1","g2","k","createForDayMonth","createForMonthYear","selectedYear","currentYear","g3","parseInt","validDateForMonth","formatterYearMax","k1","setMonth","formatterMonthYear","formatterDayMonth","limitSymbols","limitFrom","escapeRegExp","encodeEntities","charCodeAt","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","index","partLength","convertInputKeyToKey","inputKey","convertKeyToInputKey","toUpperCase","capitalizeFirstLetter","charAt"],"mappings":"sFAmDA,MAAMA,EAAoB,IAxCnB,MACE,SACL,IACEC,SAASC,SACT,MAAMC,KAOH,QACL,IACEC,OAAOC,QACP,MAAMF,KAMH,QAeHC,OAAOE,UAME,O,iCCpDA,SAASC,IACtB,OAAO,IAAIC,OAAO,IAA0B,qD,4BCwE9C,MAAMC,EAAuB,IAtDtB,MAAP,cAEU,KAAAC,gBAAwE,GAGhF,OACEC,KAAKC,OAAS,IAAI,EAClBD,KAAKC,OAAOC,iBAAiB,UAAYV,IACvC,MAAMW,EAAWX,EAAEY,KAAyBD,QAE5C,GAAyC,IAAtCA,EAAQE,SAASC,QAAQ,SAAgB,CAC1C,MAAMC,EAAUP,KAAKD,gBAAgBI,EAAQE,UAC1CE,IACDJ,EAAQK,MAAQD,EAAQE,QAAQN,EAAQK,OAASD,EAAQG,gBAClDV,KAAKD,gBAAgBI,EAAQE,gBAGtC,IAAgBM,YAAYnB,EAAEY,QAKpC,YAAYA,GACPJ,KAAKY,OACNZ,KAAKY,OACLZ,KAAKY,KAAO,MAGdZ,KAAKC,OAAOU,YAAYP,GAG1B,kBAKE,YAJiCS,IAA9Bb,KAAKc,uBACNd,KAAKc,qBAAuBC,SAASC,cAAc,UAAUC,UAAU,cAAcC,WAAW,oBAG3FlB,KAAKc,qBAGd,QAAQT,EAAkBG,GAGxB,GAFAH,EAAW,QAAUA,EAElBL,KAAKD,gBAAgBoB,eAAed,GACrC,OAAOL,KAAKD,gBAAgBM,GAG9B,MAAMe,EAAiB,cAIvB,OAFApB,KAAKW,YAAY,CAACU,KAAM,cAAelB,QAAS,CAACE,WAAUG,WAEpDR,KAAKD,gBAAgBM,GAAYe,IAK5C,IAAetB,qBAAuBA,EACvB,O,gCC3Ef,sSAiBO,MAAMwB,EAAgD,CAC3D,wBAA2B,oBAC3B,2BAA8B,uBAC/B,2BAA8B,qBAC9B,2BAA8B,qBAC9B,2BAA8B,qBAC9B,6BAAgC,qBAChC,wBAA2B,oBAC3B,2BAA8B,uBAC9B,wBAA2B,wBAC3B,2BAA8B,oBAC7B,yBAA4B,gBAC5B,0BAA6B,gBAC9B,uBAA0B,iBAC1B,0BAA6B,UAC7B,4BAA+B,iBAC/B,8BAAiC,mBAChC,wBAA2B,qBAC3B,2BAA8B,kCAC/B,2BAA8B,sBAC9B,8BAAiC,oCACjC,8BAAiC,oCACjC,8BAAiC,oCAChC,gCAAmC,oCACnC,0BAA6B,iBAE7B,gCAAmC,yBAEnC,+BAAgC,iCACjC,gCAAiC,iCACjC,mCAAoC,+BACpC,oCAAqC,kCAErC,iCAAkC,6BAClC,oCAAqC,yBACrC,uCAAwC,8BACxC,kCAAmC,iCACnC,qCAAsC,oCAEtC,wBAA2B,qCAK5B,IAAUC,GAAV,SAAUA,GAET,IAAIC,EAEAC,EA4BJ,SAAgBC,IACf,MAAMC,EAAc,IAAIC,aAExB,OADA,EAAAC,sBAAwBF,EACjBG,QAAQC,IAAI,CAClB,8BACA,gCACEC,KAAK,EAAEC,EAAMC,MACf,MAAMC,EAA4B,GAClCC,EAAmBH,EAAKI,QAASF,GACjCC,EAAmBF,EAASG,QAASF,GAUrC,OAAOG,EAR8B,CACpCC,EAAG,qBACHC,aAAc,EACdC,UAAWd,EACXQ,UACAO,QAAS,EACTC,OAAO,MAMV,SAAgBC,EAAaC,GAE5B,OADA,EAAAC,yBAA0B,EACnBhB,QAAQC,IAAI,CAClB,IAAWgB,mBAAmB,uBAAwB,CACrDN,UAAWI,EACXG,UAAW,IAAI1B,WAEhB,IAAWyB,mBAAmB,uBAAwB,CACrDN,UAAWI,EACXG,UAAW,YAEZ,8BACA,8BACA,EAAAC,kBAYF,SAAgBb,EAAmBD,EAAce,EAA2B,IAC3E,IAAI,MAAMC,KAAKhB,EAAS,CAEvB,MAAMiB,EAAIjB,EAAQgB,GACD,iBAAR,EACRD,EAAOG,KAAK,CACXd,EAAG,iBACHe,IAAKH,EACLI,MAAOH,IAGRF,EAAOG,KAAK,OAAD,QACVd,EAAG,2BACHe,IAAKH,GACFC,IAKN,OAAOF,EAGR,SAAgBM,EAAYX,GAE3B,OADA,EAAAhB,sBAAwBgB,EACjBD,EAAaC,GAAUb,KAAK,EAAEV,EAAUmC,EAAWC,EAAYC,EAAapB,MAClF,IAAIJ,EAA4B,GAEhC,CAACuB,EAAYC,GAAaC,QAAQC,IACjCzB,EAAmByB,EAAExB,QAAgBF,KAGtCA,EAAUA,EAAQ2B,OAAOxC,EAASa,SAElC,IAAI,MAAM4B,KAAUN,EAAUtB,QAC7BA,EAAQkB,KAAKU,GAId,OADAzC,EAASa,QAAUA,EACZG,EAAahB,KAItB,SAAgBgB,EAAahB,GAG5B,OAFAA,EAAS0C,WAAa,IAAIC,gBAEnB,IAAaC,IAAI,CAAC5C,aAAWU,KAAK,KACxCmC,EAAc7C,GACPA,IAcT,SAAgB6C,EAAc7C,GAC7B,GAAGA,EAASmB,YAAc,EAAAZ,sBACzB,OAGD,IACCL,EAAc,IAAI4C,KAAKC,YAAY/C,EAASmB,WAC3C,MAAM6B,GACPC,QAAQC,MAAM,oBAAqBF,GACnC9C,EAAc,IAAI4C,KAAKC,YAAY/C,EAASmB,UAAUgC,MAAM,IAAK,GAAG,IAGrE,EAAAtC,QAAQuC,QAER,IAAI,MAAMX,KAAUzC,EAASa,QAC5B,EAAAA,QAAQ+B,IAAIH,EAAOT,IAAoBS,GAGxC,UAAUY,cAAc,kBAAmBrD,EAASmB,WAEnCmC,MAAMC,KAAK9D,SAAS+D,iBAAiB,UAC7ClB,QAAQmB,IAChB,MAAMC,EAAW,EAAAC,QAAQC,IAAIH,GAE1BC,GACFA,EAASG,WAKZ,SAAgBC,EAAeC,EAAeC,EAAcC,EAAc,CAACpC,EAAG,IAC7E,IAAIqC,EAAgC,GAGpC,IAAIC,EAAY,EA8BhB,OA7BAJ,EAAMK,QAHS,qCAGO,CAACC,EAAOC,EAASC,EAASC,EAASC,EAAgBhC,KAKxE,GAFAyB,EAAInC,KAAKU,EAAOiC,MAAMP,EAAWM,IAE9BH,EAEF,OAAOA,GACN,IAAK,KAAM,CACV,MAAMK,EAAIlF,SAASC,cAAc,KACjCiF,EAAEC,UAAUd,EAAeS,EAAIP,EAAMC,IACrCC,EAAInC,KAAK4C,GACT,YAGOH,EACTN,EAAInC,KAAKtC,SAASC,cAAc,OACvBsE,GACTE,EAAInC,KAAKiC,EAAKC,EAAYpC,MAI3B,OADAsC,EAAYM,EAASJ,EAAMQ,OACpB,KAGLV,IAAcJ,EAAMc,QACtBX,EAAInC,KAAKgC,EAAMW,MAAMP,IAGfD,EAKR,SAAgBY,EAAO9C,EAAkB+C,GAAQ,EAAOf,GACvD,MAAMgB,EAAM,EAAAnE,QAAQ+C,IAAI5B,GACxB,IAAI+B,EACJ,GAAGiB,EACF,GAAa,6BAAVA,EAAI/D,IAAoC+C,aAAI,EAAJA,EAAMa,QAAQ,CACxD,IAAI/C,EAAIkC,EAAK,GACI,iBAAR,IAAkBlC,GAAKA,EAAEsC,QAAQ,MAAO,KAGjDL,EAAQiB,EAFE9E,EAAY+E,OAAOnD,GAEb,WAAakD,EAAiB,iBAE9CjB,EADmB,mBAAViB,EAAI/D,EACL+D,EAAI/C,MAGJD,OAIT+B,EAAQ/B,EAGT,GAAG+C,EAAO,CACT,GAAGf,aAAI,EAAJA,EAAMa,OAAQ,CAChB,MAAMK,EAAS,kBACf,IAAIrD,EAAI,EACRkC,EAAQA,EAAMK,QAAQc,EAAQ,CAACb,EAAOI,EAAQhC,IACtC,GAAKuB,EAAKnC,MAInB,OAAOkC,EAEP,OAAOD,EAAeC,EAAOC,GAjPlB,EAAAnD,QAA4C,IAAIsE,IAKlD,EAAA3D,yBAA0B,EACrB,EAAA4D,iBAAhB,WACC,OAAGjF,IACIA,EAAuBK,QAAQC,IAAI,CACzC,IAAamD,IAAI,YACjB,EAAAjC,kBACEjB,KAAK,EAAEV,KACLA,GAEM,IAMN,EAAAO,wBACH,EAAAA,sBAAwBP,EAASmB,WAGlC0B,EAAc7C,GACPA,GAZCI,KAaNiF,QAAQ,KACVlF,OAAuBZ,MAIT,EAAAa,kBAAiB,EAuBjB,EAAAkB,aAAY,EAiBZ,EAAAgE,WAAhB,SAA2B/D,EAAkBV,GAC5C,OAAO,IAAW0E,UAAU,sBAAuB,CAClD7D,UAAW,IAAI1B,SACfmB,UAAWI,EACXiE,KAAM3E,KAIQ,EAAAC,mBAAkB,EAsBlB,EAAAoB,YAAW,EAoBX,EAAAlB,aAAY,EASf,EAAAW,gBACQ,oBAAX,WAAuD,IAAtBmB,KAAgB,YAClDtC,QAAQrB,UAER,+BAA2BuB,KAAM+E,IACtCtH,OAAe2E,KAAO4C,OAAOC,OAAwB,oBAAX,KAAyB7C,KAAO,GAAI2C,EAAM1E,WAKxE,EAAA8B,cAAa,EA8Bb,EAAAiB,eAAc,EAuCd,EAAAgB,OAAM,EAoCT,EAAAnB,QAAyE,IAAIiC,QAO1F,MAAeC,EAId,YAAYC,GAFL,KAAAC,SAA+C,YAGrDrH,KAAK+E,QAAUqC,EAAQrC,SAAWhE,SAASC,cAAc,QACzDhB,KAAK+E,QAAQuC,UAAUC,IAAI,QAE3BvH,KAAKmF,OAAOiC,GACZ,EAAAnC,QAAQf,IAAIlE,KAAK+E,QAAS/E,OAU5B,MAAawH,UAAoBL,EAIzB,OAAOC,GAGb,GAFA,YAAWpH,KAAMoH,GAEI,cAAlBpH,KAAKqH,SACPrH,KAAK+E,QAAQ0C,YAAc,GAC3BzH,KAAK+E,QAAQmB,UAAUE,EAAOpG,KAAKsD,KAAK,EAAOtD,KAAKsF,WAC9C,CAEN,MAAMlC,EAAIpD,KAAK+E,QAAQ/E,KAAKqH,UACtBK,EAAYtB,EAAOpG,KAAKsD,KAAK,EAAMtD,KAAKsF,WAGrCzE,IAANuC,EAAiBpD,KAAK+E,QAAQ4C,QAAQ3H,KAAKqH,UAAYK,EACpD1H,KAAK+E,QAA6B/E,KAAKqH,UAAYK,IAjB/C,EAAAF,YAAW,EA0BX,EAAAI,gBAAb,cAAqCT,EAI7B,OAAOC,GACb,YAAWpH,KAAMoH,GAKjB,MAAMS,EAAiB,IAAIzD,KAAK0D,eAAe,EAAAjG,sBAAwB,YAAa7B,KAAKoH,SAExFpH,KAAK+E,QAAgB/E,KAAKqH,UAAY,YAAsBQ,EAAezB,OAAOpG,KAAK+H,SAI1E,EAAAC,KAAhB,SAAqB1E,EAAkBgC,GACtC,OAAO,IAAIkC,EAAY,CAAClE,MAAKgC,SAAOP,SAGrB,EAAAkD,MAAhB,SAAsBb,GACrB,OAAO,IAAII,EAAYJ,GAASrC,SAGjB,EAAAmD,MAAhB,SAAsBnD,EAAsBzB,EAAkBgC,EAAc+B,GAC3E,OAAO,IAAIG,EAAY,CAACzC,UAASzB,MAAKgC,OAAM+B,aAAWtC,SAnUzD,CAAUxD,MAAI,KAwUC,YAEf,MAAMyG,EAAOzG,EAAKyG,KAGZC,EAAQ1G,EAAK0G,MAGbC,EAAQ3G,EAAK2G,MAGZ,SAASC,EAAKC,EAAyBC,GAAU,GACvD,MAAMC,EAAqBF,EAASpC,MAAM,EAAG,GAC5C,IAAI,IAAI7C,EAAI,EAAGA,EAAIiF,EAASjC,SAAUhD,EAAG,CACvC,MACMoF,EADUH,EAASjC,OAAS,IAAOhD,GACGkF,EAAU,oBAAsB,gBAC5EC,EAAIjF,KAAK2E,EAAKO,IACdD,EAAIjF,KAAK+E,EAASjF,IAGrB,OAAOmF,EAGR,IAAe/G,KAAOA,G,iCC5ZtB,oDAiJA,MAAMiH,EAAiB,IArHhB,MAAP,cAOU,KAAAC,IAAM,YAAO,YA4Bd,KAAAC,cAAgB,KAClB1I,KAAK2I,iBAAmB3I,KAAK4I,cAC9B5I,KAAKyI,IAAII,KAAK,yBACd,IAAeC,OAAO,iBAYnB,KAAAC,mBAAqB,KAC1B,GAAG/I,KAAK2I,gBAAkB3I,KAAK4I,YAC7B,OAAO,EAGT5I,KAAKyI,IAAI,cACTzI,KAAKgJ,kBAAoB,EACzBhJ,KAAK4I,aAAc,EACnB5I,KAAK0I,gBAKL,UAAUO,KAAKL,aAAc,EAC7B,UAAUjE,cAAc,yBAGnB,KAAAuE,cAAgB,CAACD,EAAO,UAAUA,MAAQ,UAAUA,KAAKE,UAC9D,GAAGnJ,KAAK4I,YACN,OAAO,EAGT,MAAMQ,EAAOC,KAAKC,MACZC,EAA2B,CAC/BC,GAAIxJ,KAAKyJ,WACTR,OACAG,QAGF,IAAelE,IAAI,eAAe,GAAOlD,KAAM0H,KAEzCT,IACCS,GACDA,EAAYF,KAAOxJ,KAAKyJ,YACxBC,EAAYN,KAAQA,EAtFE,KAuFxB,IAAelF,IAAI,CAACyF,YAAaJ,IAE7BvJ,KAAK2I,iBACP,IAAWiB,WACP5J,KAAK6J,QAGP7J,KAAKyI,IAAII,KAAK,sBAAuBU,GAFrCvJ,KAAK6J,SAAU,EAKjB7J,KAAK2I,gBAAiB,GAGrB3I,KAAKgJ,oBACNc,aAAa9J,KAAKgJ,mBAClBhJ,KAAKgJ,kBAAoB,IAGxBhJ,KAAK2I,iBACN,IAAWoB,UACX/J,KAAKyI,IAAII,KAAK,oBAAqBU,GAC/BvJ,KAAKgJ,oBACPhJ,KAAKgJ,kBAAoBvJ,OAAOuK,WAAWhK,KAAK+I,mBA9GjC,MAiHjB/I,KAAK2I,gBAAiB,MArGvB,QACL,IAAI3I,KAAKiK,QAAmE,CAC1EjK,KAAKiK,SAAU,EAEfjK,KAAKkK,QAGL,UAAUhK,iBAAiB,OAAQF,KAAKkJ,eACxCiB,YAAYnK,KAAKkJ,cArBS,KAsB1BlJ,KAAKkJ,gBAEL,IACEnI,SAASqJ,gBAAgBlK,iBAAiB,eAAgBF,KAAK0I,eAC/D,MAAMlJ,MAIL,QACLQ,KAAKyJ,WAAa,YAAc,YAChCzJ,KAAK2I,gBAAiB,EACnB3I,KAAKgJ,mBAAmBc,aAAa9J,KAAKgJ,mBAC7ChJ,KAAKgJ,kBAAoB,EACzBhJ,KAAK4I,aAAc,EACnB5I,KAAK6J,SAAU,EAUV,mBACF7J,KAAK4I,cACN5I,KAAKkK,QACLlK,KAAKkJ,eAAc,GACnB,UAAUvE,cAAc,yBAwE9B,MAAmB,IAAe6D,eAAiBA,GACpC,O,gCCnJf,6HA8BO,MAAM6B,EAWX,cAVO,KAAAC,aAAc,EACb,KAAAC,eAAgB,EAChB,KAAAC,6BAA8B,EAC9B,KAAAP,SAAU,EACV,KAAAQ,SAAsD,GAEtD,KAAAC,UAAYC,UAAUC,UAAUC,cAAcvK,QAAQ,YAAc,EACpE,KAAAwK,iBAAkB9K,KAAK0K,UACvB,KAAAjC,IAAM,YAAO,MA2Cd,KAAAsC,UAAY,KACb/K,KAAKsK,aAITK,UAAUK,cAAcC,MAAMjJ,KAAMkJ,IAClCA,EAAIC,YAAYJ,UAAU,CAACD,gBAAiB9K,KAAK8K,kBAAkB9I,KAAMoJ,IAEvEpL,KAAKuK,eAAgB,EACrBvK,KAAKqL,uBAAuB,YAAaD,KACxCE,MAAO9L,IACuB,WAA5B+L,aAAaC,WACdxL,KAAKyI,IAAI,4CAETzI,KAAKyI,IAAI,+BAAgCjJ,GACrCQ,KAAK8K,kBACP9K,KAAK8K,iBAAkB,EACvBd,WAAWhK,KAAK+K,UAAW,UAyD9B,KAAAU,cAAgB,KACrB,IAAIzL,KAAKsK,aAAe,UAAUrB,MAAQ,UAAUA,KAAKL,YACvD,OAGF5I,KAAKyK,SAASiB,SAAWpM,SAASqM,MAAQ,IAAIjG,QAAQ,OAAQ,IAAM,OAEpE,MAAMzD,EAAiD,GACjD2J,EAAwF,CAC5FC,mBAAoB,WAAW,wCAA0C,iCACzEC,qBAAsB,WAAW,0CAA4C,mCAC7EC,uBAAwB,sCAG1B,IAAI,MAAMC,KAAUJ,EAClB3J,EAAK+J,GAA2C,UAAK5F,OAAOwF,EAAiBI,IAA0C,GAGzH,MAAMC,EAA8B,CAClC5K,KAAM,OACNlB,QAAS,CACP+L,mBAAoBlM,KAAKwK,4BACzBvI,KAAMA,EACNwI,SAAUzK,KAAKyK,WAInB,IAAW0B,cAAcF,GAEzBjM,KAAKoM,UAAYpC,WAAWhK,KAAKyL,cAAe,MA/I3C,gBAAiBhM,QAClB,iBAAkBA,QAClB,kBAAmBkL,YACrB3K,KAAKyI,IAAII,KAAK,oCACd7I,KAAKsK,aAAc,EACnBtK,KAAKwK,6BAA8B,GAGlCxK,KAAKsK,aAA2C,WAA5BiB,aAAaC,YAClCxL,KAAKyI,IAAII,KAAK,uCAIX,QACD7I,KAAKiK,UACPjK,KAAKiK,SAAU,EACfjK,KAAKqM,kBACLrM,KAAKsM,6BAIF,gCACLtM,KAAKwK,6BAA8B,EAG9B,kBACDxK,KAAKsK,aAITK,UAAUK,cAAcC,MAAMjJ,KAAMkJ,IAClCA,EAAIC,YAAYkB,kBAAkBrK,KAAMoJ,IACtCpL,KAAKuK,gBAAkBa,EACvBpL,KAAKqL,uBAAuB,OAAQD,KACnCE,MAAOhH,IACRtE,KAAKyI,IAAIjE,MAAM,iCAAkCF,OA6BhD,cACDtE,KAAKsK,aAITK,UAAUK,cAAcC,MAAMjJ,KAAMkJ,IAClCA,EAAIC,YAAYkB,kBAAkBrK,KAAMoJ,IACtCpL,KAAKuK,eAAgB,EAElBa,IACDpL,KAAKqL,uBAAuB,cAAeD,GAE3CpB,WAAW,KACToB,EAAamB,cAAcvK,KAAMwK,IAC/BxM,KAAKuK,eAAgB,IACpBe,MAAO9L,IACRQ,KAAKyI,IAAIjE,MAAM,yBAA0BhF,MAE1C,QAEJ8L,MAAO9L,IACRQ,KAAKyI,IAAIjE,MAAM,wDACMhF,OAKpB,mBACDQ,KAAKsK,aAITK,UAAUK,cAAcC,MAAMjJ,KAAMkJ,IAClCA,EAAIC,YAAYkB,kBAAkBrK,KAAMoJ,IACtCpL,KAAKyI,IAAII,KAAK,oBAAqBuC,GAChCA,GACDA,EAAamB,cAAcvK,KAAMwK,IAC/BxM,KAAKyI,IAAII,KAAK,+BAAgC2D,GAC9CxM,KAAKuK,eAAgB,IACpBe,MAAO9L,IACRQ,KAAKyI,IAAIjE,MAAM,yBAA0BhF,OAG5C8L,MAAO9L,IACRQ,KAAKyI,IAAIjE,MAAM,wDACMhF,OAqCpB,YAAYiN,GACjBzM,KAAKyK,SAAW,YAAKgC,GACrB3C,aAAa9J,KAAKoM,WAClBpM,KAAKyL,gBAGA,wBACL,IAAIzL,KAAKsK,YACP,OAIF,IAAW6B,cADuC,CAAC9K,KAAM,wBAIpD,4BACDrB,KAAKsK,cAIT,IAAWoC,6BAA6B,aAAeT,IAClD,UAAUhD,MAAQ,UAAUA,KAAKL,YAClC,IAAkBrJ,SAIpB,UAAUoF,cAAc,0BAA2BsH,EAAK9L,WAG1DwK,UAAUK,cAAcC,MAAMjJ,KAAKhC,KAAKyL,gBAGnC,uBAAuBkB,EAAmCvB,GAC/D,GAAGA,EAAc,CACf,MAAMwB,EAAwCxB,EAAayB,SAC3D,KAAID,GACDA,EAAgBE,UAChBF,EAAgB9F,MAChB8F,EAAgB9F,KAAKiG,QACrBH,EAAgB9F,KAAKkG,MAKtB,OAJAhN,KAAKyI,IAAII,KAAK,4BAA6B+D,GAC3C5M,KAAKuM,cACLvM,KAAKsK,aAAc,OACnBtK,KAAKqL,uBAAuBsB,GAI9B3M,KAAKyI,IAAII,KAAK,OAAQ8D,EAAOC,GAC7B,UAAUjI,cAAe,QAAUgI,EAAuC,CACxEM,UAAW,GACXC,WAAYC,KAAKC,UAAUR,UAG7B5M,KAAKyI,IAAII,KAAK,OAAQ8D,GAAO,GAC7B,UAAUhI,cAAe,QAAUgI,GAAuC,IAKhF,MAAMU,EAAoB,IAAIhD,EAC9B,MAAmB,IAAegD,kBAAoBA,GACvC,a,gCCzPf,uGAiBO,MAAMC,EAAb,cACU,KAAAC,SAA2B,IAAMC,OAAoD,IAA5C,IAAIC,QAAQnN,QAAQhB,SAASoO,UAEvE,cAAcC,GACnB,IAAG3N,KAAKuN,SAIR,OAAO,IAAerI,IAAI,aAAalD,KAAM4L,IAC3C,MAAMC,EAAK,aAAM,GACjB,GAAGF,GACDC,GACAA,EAASD,cAAgBA,GACxBC,EAASC,GAAK,MAASA,EACxB,OAGF,IAAe3J,IAAI,CACjB4J,UAAW,CACTH,cACAE,QAIJ,MAKME,EALO,CACX,mCAAqCJ,EAAc,IAAM,KACzD,4BAA8BA,EAAc,IAAM,MAG9BK,IAAIC,IACxB,MAAMC,EAASnN,SAASC,cAAc,UAChCT,EAAU,IAAIuB,QAAerB,IACjCyN,EAAOC,OAASD,EAAOE,QAAU,KAC/BF,EAAOG,SACP5N,OAKJ,OAFAyN,EAAOI,IAAML,EACblN,SAASwN,KAAKC,YAAYN,GACnB3N,IAGT,OAAOuB,QAAQC,IAAIgM,MAKzB,MAAMU,EAAuB,IAAInB,EACjC,MAAmB,IAAemB,qBAAuBA,GAC1C,a,gCClEA,SAAS7O,IACtB,OAAO,IAAIC,OAAO,IAA0B,wD,iECU/B,MAAM,UAAe,IASlC,YAAsB6O,EAAwBT,EAAaU,GACzDC,QADoB,KAAAF,OAAwB,KAAAT,MAFtC,KAAAY,MAAQ,IAAMA,QAAS,EAkDvB,KAAAC,WAAa,KACnB9O,KAAKyI,IAAI,UAETzI,KAAK6O,OAAS7O,KAAKyI,IAAIoG,MAAM,uBAC7B7O,KAAK2E,cAAc,SAGb,KAAAoK,YAAevP,IACrBQ,KAAKyI,IAAIjE,MAAM,cAAehF,GAC9BQ,KAAKN,SAGC,KAAAsP,YAAc,KACpBhP,KAAKyI,IAAI,UAETzI,KAAKiP,kBACLjP,KAAK2E,cAAc,UAGb,KAAAuK,cAAiBvC,IACvB3M,KAAK6O,OAAS7O,KAAKyI,IAAIoG,MAAM,KAAM,gBAA8BlC,EAAMvM,KAAK+O,YAE5EnP,KAAK2E,cAAc,UAAWgI,EAAMvM,OAG/B,KAAAgP,KAAQb,IACbvO,KAAK6O,OAAS7O,KAAKyI,IAAIoG,MAAM,0BAA2BN,EAAKpI,QAE7DnG,KAAKqP,GAAGD,KAAKb,IAzEb,IAAIe,EAAW,IAASC,MAAQ,IAASC,IAMzC,OALGxP,KAAK6O,QAAOS,GAAY,IAASG,OACpCzP,KAAKyI,IAAM,OAAAiH,EAAA,GAAO,MAAMhB,EAASC,EAAWW,GAC5CtP,KAAKyI,IAAI,eACTzI,KAAK2P,UAEE3P,KAGD,kBACFA,KAAKqP,KAITrP,KAAKqP,GAAGO,oBAAoB,OAAQ5P,KAAK8O,YACzC9O,KAAKqP,GAAGO,oBAAoB,QAAS5P,KAAKgP,aAC1ChP,KAAKqP,GAAGO,oBAAoB,QAAS5P,KAAK+O,aAC1C/O,KAAKqP,GAAGO,oBAAoB,UAAW5P,KAAKkP,eAC5ClP,KAAKqP,QAAKxO,GAGJ,UACNb,KAAKqP,GAAK,IAAIQ,UAAU7P,KAAKiO,IAAK,UAClCjO,KAAKqP,GAAGS,WAAa,cACrB9P,KAAKqP,GAAGnP,iBAAiB,OAAQF,KAAK8O,YACtC9O,KAAKqP,GAAGnP,iBAAiB,QAASF,KAAKgP,aACvChP,KAAKqP,GAAGnP,iBAAiB,QAASF,KAAK+O,aACvC/O,KAAKqP,GAAGnP,iBAAiB,UAAWF,KAAKkP,eAGpC,QACL,GAAIlP,KAAKqP,GAAT,CAIArP,KAAKyI,IAAI,mBAET,IACEzI,KAAKqP,GAAG3P,QACR,MAAM4E,IAGRtE,KAAKgP,gB,8DCwhBT,MAAMe,EAAkB,IApiBjB,cC9BQ,MAGN,aAAiDC,KAAmB1K,GACzE,OAAOtF,KAAKiQ,kBAAqED,KAAW1K,KD0E9F,cACEsJ,QA/CM,KAAAsB,mBAAqB,EAErB,KAAAC,OAAS,EACT,KAAAC,SAMJ,GACI,KAAAC,QAAuB,GAExB,KAAAC,iBAAuC,KAEtC,KAAA7H,IAAM,OAAAiH,EAAA,GAAO,aAEb,KAAAa,OAA0C,GAE1C,KAAAC,kBAEJ,GACI,KAAAC,qBAUJ,GAEI,KAAAC,gBAAiB,EAEjB,KAAA7B,MAAQ,IAER,KAAA8B,QAA+B,IAAIlK,IAEnC,KAAAmK,cAA2D,GAC3D,KAAAC,gBAA6D,GAI7D,KAAAC,oBAA+B,GAwO/B,KAAAC,gBAAmBvR,IAGzB,MAAMyM,EAAOzM,EAAEY,KAEf,IAAI,YAAS6L,GACX,OAGF,MAAM+E,EAAWhR,KAAK4Q,cAAc3E,EAAK5K,MACtC2P,EACDA,EAAS/E,GAIRA,EAAK9G,OACHnF,KAAKsQ,kBACNtQ,KAAKsQ,iBAAiBrE,EAAK9G,QAErB8G,EAAKgF,SACbC,EAAA,QAAUvM,cAAc,oBAAqBsH,EAAKgF,WAC1ChF,EAAK9K,eAAe,WAAa8K,EAAK9K,eAAe,WAC7DnB,KAAKmR,aAAalF,EAAKkE,OAAQlE,EAAKmF,OAAQnF,EAAKzH,QA1PnDxE,KAAKyI,IAAI,eAETD,EAAA,EAAe6I,QAEfrR,KAAKsR,wBAELtR,KAAKuR,gBAAgB,QAAS,KAE5BzP,QAAQC,IAAI,CACV,IAAWyP,eAAc,GACzBC,EAAA,EAAe/M,QACf5C,QAAQ4P,KAAK,CACXjD,EAAA,QAAqBkD,eAAc,GACnC,YAAM,OAERtE,EAAA,QAAkBuE,mBAClB9P,QAAQC,IAT4B,CAAC,cAAe,sBAShCiM,IAAI6D,GAAaC,OAAOhJ,OAAO+I,OAClDlL,QAAQ,KACTtH,EAAA,EAAkBE,aAItBS,KAAKuR,gBAAgB,yBAA2BtF,IAC9CiF,EAAA,QAAUvM,cAAc,2BAA4BsH,EAAK9L,WAG3DH,KAAKuR,gBAAgB,cAAgBtF,IACnCnM,EAAA,EAAqBa,YAAYsL,KAGnCjM,KAAKuR,gBAAgB,cAAgBtF,IACnC,MAAM8F,EAAa9F,EAAK9L,QAClBqJ,EAAKuI,EAAWvI,GAGtB,GAAuB,SAApBuI,EAAW1Q,KAAiB,CACdrB,KAAK2Q,QAAQzL,IAAIsE,GACzB4F,KAAK2C,EAAW5R,cAClB,GAAuB,UAApB4R,EAAW1Q,KAAkB,CACtBrB,KAAK2Q,QAAQzL,IAAIsE,GACzB9J,aACF,GAAuB,UAApBqS,EAAW1Q,KAAkB,CACrC,MAAM2Q,EAAS,IAAI,EAAOD,EAAW5R,QAAQuO,KAAMqD,EAAW5R,QAAQ8N,IAAK8D,EAAW5R,QAAQwO,WAExFsD,EAAS,KAEbjS,KAAKW,YAAY,CACfU,KAAM,cACNlB,QAAS,CACPkB,KAAM,OACNmI,SAIA0I,EAAU,KACdlS,KAAKW,YAAY,CACfU,KAAM,cACNlB,QAAS,CACPkB,KAAM,QACNmI,QAIJwI,EAAOpC,oBAAoB,OAAQqC,GACnCD,EAAOpC,oBAAoB,QAASsC,GACpCF,EAAOpC,oBAAoB,UAAWuC,GACtCnS,KAAK2Q,QAAQ7H,OAAOU,IAEhB2I,EAAaC,IACjBpS,KAAKW,YAAY,CACfU,KAAM,cACNlB,QAAS,CACPkB,KAAM,UACNmI,KACArJ,QAASiS,MAKfJ,EAAO9R,iBAAiB,OAAQ+R,GAChCD,EAAO9R,iBAAiB,QAASgS,GACjCF,EAAO9R,iBAAiB,UAAWiS,GACnCnS,KAAK2Q,QAAQzM,IAAIsF,EAAIwI,MAIzBhS,KAAKuR,gBAAgB,oBAAsBtF,IACzC,MAAMoG,EAAcpG,EAAK9L,QAEzBsR,EAAA,EAAeY,EAAYhR,SAASgR,EAAY/M,MAAMtD,KAAKsQ,IACzDtS,KAAKW,YAAY,CACfU,KAAM,oBACNmI,GAAIyC,EAAKzC,GACTrJ,QAASmS,QAKfpB,EAAA,QAAUhR,iBAAiB,kBAAoBqS,IAC7CvS,KAAKwS,sBAAsB,cAAeD,KAG5C9S,OAAOS,iBAAiB,SAAWyM,IACjC3M,KAAKyS,0BAIPzS,KAAK0S,iBAIA,wBACL,OAAO1S,KAAK0Q,eAGN,wBACN,KAAK,kBAAmB/F,WAAY,OAEpC,MAAM1K,EAAS0K,UAAUK,cACzB/K,EAAO0S,SAAS,UAAW,CAACC,MAAO,OAAO5Q,KAAK6Q,IAC7C7S,KAAKyI,IAAI,gBAAiBoK,GAC1B7S,KAAK0Q,gBAAiB,GAEXmC,EAAaC,YAAcD,EAAaE,SAAWF,EAAaG,QACxE9S,iBAAiB,cAAgBV,IAClCQ,KAAKyI,IAAI,iBAAkBjJ,MAS3B8E,IACFtE,KAAK0Q,gBAAiB,EACtB1Q,KAAKyI,IAAIjE,MAAM,0BAA2BF,GAEvCtE,KAAKiT,qBACNjT,KAAKiT,wBAIThT,EAAOC,iBAAiB,mBAAoB,KAC1CF,KAAKyI,IAAII,KAAK,oBACd7I,KAAKkT,iBAELjT,EAAOkT,WAAWjT,iBAAiB,QAAUV,IAC3CQ,KAAKyI,IAAIjE,MAAM,oBAAqBhF,OAOxCS,EAAOC,iBAAiB,UAAYV,IAClC,MAAMyM,EAA0BzM,EAAEY,KAClC,IAAI,YAAS6L,GACX,OAGF,MAAM+E,EAAWhR,KAAK6Q,gBAAgB5E,EAAK5K,MACxC2P,GACDA,EAAS/E,KAIbjM,KAAK0M,6BAA6B,kBAAoBT,IACpD,MAAMmH,EAA4C,CAChD/R,KAAM4K,EAAK5K,KACXmI,GAAIyC,EAAKzC,IAGXxJ,KAAKiQ,kBAA0E,qBAAsBhE,EAAK9L,SACzG6B,KAAMqR,IACLD,EAAajT,QAAUkT,EACvBrT,KAAKmM,cAAciH,IACjB9O,IACF8O,EAAaE,gBAAkBrH,EAAK9L,QACpCiT,EAAa5O,MAAQF,EACrBtE,KAAKmM,cAAciH,OAMvBnT,EAAOC,iBAAiB,eAAiBV,IACvCQ,KAAKyI,IAAIjE,MAAM,mBAAoBhF,KAIhC,eAAe8F,GACpBtF,KAAK8Q,oBAAoBzN,KAAKiC,GAGzB,cAAciO,GAChB5I,UAAUK,cAAcmI,YACzBxI,UAAUK,cAAcmI,WAAWxS,YAAY4S,GAI3C,qBAAqBtT,GAC3B,IAAID,KAAKC,OAAQ,CACfD,KAAKC,OAASA,EACdD,KAAKyI,IAAI,iBAETzI,KAAKW,YAAcX,KAAKC,OAAOU,YAAY6S,KAAKxT,KAAKC,QAErDD,KAAK8Q,oBAAoBlN,QAAQ0B,GAAQtF,KAAKW,eAAe2E,IAC7DtF,KAAK8Q,oBAAoB3K,OAAS,EAElC,MAAMsN,EAAkB3T,EAAA,EAAqB2T,kBAC7CzT,KAAKyI,IAAI,kBAAmBgL,GAC5BzT,KAAKW,YAAY,CAACU,KAAM,cAAelB,QAASsT,IAChDzT,KAAKW,YAAY,CAACU,KAAM,YAAalB,QAASwK,UAAUC,YAExD5K,KAAKkT,kBAIF,gBAAgBQ,EAA8C1C,GACnEhR,KAAK4Q,cAAc8C,GAAQ1C,EAGtB,6BAA6B0C,EAAgD1C,GAClFhR,KAAK6Q,gBAAgB6C,GAAQ1C,EA8BvB,iBAGN,MAAM/Q,EAAS,IAAI,EAEnBA,EAAOC,iBAAiB,UAAWF,KAAK2T,qBAAqBH,KAAKxT,KAAMC,GAAS,CAAC2T,MAAM,IACxF3T,EAAOC,iBAAiB,UAAWF,KAAK+Q,iBAExC9Q,EAAOC,iBAAiB,QAAUoE,IAChCtE,KAAKyI,IAAIjE,MAAM,eAAgBF,KAK3B,aAAa6L,EAAgBiB,EAAa5M,GAChD,MAAMqP,EAAW7T,KAAKoQ,SAASD,QACftP,IAAbgT,IACD7T,KAAK6O,OAAS7O,KAAKyI,IAAIoG,MAAM,OAAQgF,EAASC,SAAU1C,EAAQ5M,GAChEA,EAAQqP,EAASnT,OAAO8D,GAASqP,EAASpT,QAAQ2Q,UAC3CpR,KAAKoQ,SAASD,IAIlB,sBAAsBlE,KAAiB3G,GAC5C,MAAMyO,EAAS,CACb9H,OACAkE,OAAQnQ,KAAKmQ,OACb7K,QAGFtF,KAAKqQ,QAAQhN,KAAK0Q,GAClB/T,KAAKkT,iBAELlT,KAAKmQ,SAGA,kBAAqBlE,KAAiB3G,GAG3C,OAFAtF,KAAK6O,OAAS7O,KAAKyI,IAAIoG,MAAM,QAAS5C,EAAM3G,GAErC,IAAIxD,QAAW,CAACrB,EAASC,KAC9BV,KAAKoQ,SAASpQ,KAAKmQ,QAAU,CAAC1P,UAASC,SAAQoT,SAAU7H,GACzDjM,KAAKwS,sBAAsBvG,KAAS3G,KAIhC,iBAGHtF,KAAKW,cACNX,KAAK6O,OAAS7O,KAAKyI,IAAIoG,MAAM,2BAA4B7O,KAAKqQ,QAAQlK,QACtEnG,KAAKqQ,QAAQzM,QAAQyM,IACnBrQ,KAAKW,YAAY0P,KAGnBrQ,KAAK6O,OAAS7O,KAAKyI,IAAIoG,MAAM,kBAC7B7O,KAAKqQ,QAAQlK,OAAS,GAInB,oBAAoB6K,GACzBhR,KAAKsQ,iBAAmBU,EAGnB,UAAyChB,EAAW+D,EAAkC,GAAI3M,EAA4B,IAE3H,OAAOpH,KAAKiQ,kBAAkB,YAAaD,EAAQ+D,EAAQ3M,GAGtD,eAA8C4I,EAAW+D,EAAkC,GAAI3M,EAA4B,IAChI,IAAI4M,EAAI5M,EAOR,OANA4M,EAAEC,qBAAuB,MAAOjU,KAAKkQ,mBAErC8D,EAAI,OAAH,UAAO5M,GACPA,EAAsB8M,UAAYF,EAAEC,qBAG9BjU,KAAK6G,UAAUmJ,EAAQ+D,EAAQC,GAGjC,kBAAiDhE,EAAW+D,EAAgD,GAAW3M,EAA4B,IAGxJ,MAAM+M,EAAYhH,KAAKC,UAAU2G,GACjC,IAAIK,EAQJ,OAPGpU,KAAKuQ,OAAOP,KACboE,EAASpU,KAAKuQ,OAAOP,GAAQmE,GAC1BC,IACAL,EAAeM,KAAOD,EAAOC,OAI3BrU,KAAK6G,UAAUmJ,EAAQ+D,EAAQ3M,GAASpF,KAAMoP,IACnD,GAAGA,EAAO7O,EAAE+R,SAAS,eAEnB,OADAtU,KAAK6O,OAAS7O,KAAKyI,IAAII,KAAK,qBAAsBmH,EAAQmE,GACnDC,EAAOhD,OAGhB,GAAGA,EAAOiD,KAA+B,CACvC,MAAMA,EAAOjD,EAAOiD,KAEhBrU,KAAKuQ,OAAOP,KAAShQ,KAAKuQ,OAAOP,GAAU,IAC/ChQ,KAAKuQ,OAAOP,GAAQmE,GAAa,CAC/BE,OACAjD,UAIJ,OAAOA,IAIJ,gBAA+CpB,EAAW+D,EAAkC,GAAW3M,EAA4B,IACxI,MAAMmN,EAAIvE,EAAS,IAAM7C,KAAKC,UAAU2G,GACxC,OAAG/T,KAAKwQ,kBAAkB+D,GACjBvU,KAAKwQ,kBAAkB+D,GAGzBvU,KAAKwQ,kBAAkB+D,GAAKvU,KAAK6G,UAAUmJ,EAAQ+D,EAAQ3M,GAAST,QAAQ,YAC1E3G,KAAKwQ,kBAAkB+D,KAI3B,mBAAkDvE,EAAW+D,EAAkC,GAAW3M,EAAiF,I,MAChM,MAAMoN,EAAyC,QAAjC,EAAAxU,KAAKyQ,qBAAqBT,UAAO,QAAKhQ,KAAKyQ,qBAAqBT,GAAU,GAClFmE,EAAYhH,KAAKC,UAAU2G,GAC3BU,EAAOD,EAAML,GACnB,GAAGM,KAAUrN,EAAQsN,WAAaD,EAAKE,WACrC,OAAOF,EAAKlU,QAYd,IAAIqU,EATDxN,EAAQsN,WACND,GAAQA,EAAKG,UACd9K,aAAa2K,EAAKG,gBACXH,EAAKG,gBAGPxN,EAAQsN,UAIdtN,EAAQyN,eACTD,EAAUnV,OAAOuK,WAAW,YACnBwK,EAAML,IACW,IAAvB/M,EAAQyN,qBACJzN,EAAQyN,cAGjB,MAAMtU,EAAUP,KAAK6G,UAAUmJ,EAAQ+D,EAAQ3M,GAU/C,OARAoN,EAAML,GAAa,CACjBW,UAAWzL,KAAKC,MAChBqL,WAAW,EACXC,UACArU,UACAwT,UAGKxT,EAGF,WAA0CyP,EAAW+E,GAC1D,MAAMP,EAAQxU,KAAKyQ,qBAAqBT,GACxC,GAAGwE,EACD,IAAI,MAAML,KAAaK,EAAO,CAC5B,MAAMC,EAAOD,EAAML,GAChBY,EAAON,EAAKV,UACVU,EAAKG,SACN9K,aAAa2K,EAAKG,gBAGbJ,EAAML,KAYd,YAAYzF,GACjB,OAAO1O,KAAKiQ,kBAAkB,cAAevB,GAGxC,WAAWsG,GAChB,OAAOhV,KAAKiQ,kBAAkB,aAAc+E,GAGvC,YAAYC,GAMjB,MALwB,iBAAf,IACPA,EAAW,CAACC,KAAM,EAAGnN,KAAMsB,KAAKC,MAAQ,IAAO,EAAGE,GAAIyL,IAGxD/D,EAAA,QAAUvM,cAAc,YAAasQ,GAC9BjV,KAAKiQ,kBAAkB,cAAegF,GAGxC,aAAaE,EAAe/N,GACjC,OAAOpH,KAAKiQ,kBAAkB,eAAgBkF,EAAO/N,GAGhD,SAEL,OAAOpH,KAAKiQ,kBAAkB,UAGzB,eAAe5P,GACpB,OAAOL,KAAKiQ,kBAAkB,iBAAkB5P,GAG3C,aAAa+G,GAClB,OAAOpH,KAAKiQ,kBAAwB,eAAgB7I,GAG/C,WAAWA,GAChB,OAAOpH,KAAKiQ,kBAA6B,aAAc7I,GAGlD,cAAcgO,GACnB,MAAMnJ,EAA0B,CAAC5K,KAAM,gBAAiBlB,QAASiV,GACjEpV,KAAKW,YAAYsL,GACjBjM,KAAKmM,cAAcF,GAGd,UACL,OAAOjM,KAAKwS,sBAAsB,WAG7B,WACL,OAAOxS,KAAKwS,sBAAsB,YAG7B,wBACLxS,KAAKW,YAAY,CAACU,KAAM,WAGnB,iBACLrB,KAAKW,YAAY,CAACU,KAAM,qBAK5B,IAAe0O,gBAAkBA,EAClB,O,gCE3lBf,oSASO,MAAMsF,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACxHC,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE1EC,EAAU,MAGVC,EAAiBzN,IAC5B,MAAM0N,EAAI,IAAIpM,KAAKA,KAAKqM,IAAI3N,EAAK4N,cAAe5N,EAAK6N,WAAY7N,EAAK8N,YAChEC,EAASL,EAAEM,aAAe,EAChCN,EAAEO,WAAWP,EAAEQ,aAAe,EAAIH,GAClC,MAAMI,EAAY,IAAI7M,KAAKA,KAAKqM,IAAID,EAAEU,iBAAkB,EAAG,IAC3D,OAAOC,KAAKC,OAAQZ,EAAEa,UAAYJ,EAAUI,WAAaf,EAAW,GAAK,IAG9DgB,EAA8BnN,IACzC,MAAMrB,EAAO,IAAIsB,KACXC,EAAMvB,EAAKuO,UAAY,IAAO,EAC9BxB,EAAY1L,EAAKkN,UAAY,IAAO,EAE1C,IAAIE,EAWJ,OATEA,EADElN,EAAMwL,EAAaS,GAAWxN,EAAK8N,YAAczM,EAAKyM,WAC7C,IAAMzM,EAAKqN,YAAYzQ,OAAO,GAAK,KAAO,IAAMoD,EAAKsN,cAAc1Q,OAAO,GAC7E+B,EAAK4N,gBAAkBvM,EAAKuM,cAC1BvM,EAAKyM,UAAY,KAAO,KAAOzM,EAAKwM,WAAa,IAAI5P,OAAO,GAAK,KAAO,GAAKoD,EAAKuM,eAAe3P,OAAO,GACzGsD,EAAMwL,EAAwB,EAAVS,GAAgBC,EAAczN,KAAUyN,EAAcpM,GACzEkM,EAAKlM,EAAKuN,UAAU3Q,MAAM,EAAG,GAE7BqP,EAAOjM,EAAKwM,YAAY5P,MAAM,EAAG,GAAK,KAAO,IAAMoD,EAAKyM,WAAW7P,OAAO,GAG/EwQ,GAGF,SAASI,EAA8BxN,GAC5C,MAAMyN,EAAQ,IAAIxN,KACZC,EAAMuN,EAAMP,UAAY,IAAO,EAC/BxB,EAAY1L,EAAKkN,UAAY,IAAO,EAEpClP,EAAsC,GAa5C,OAZIkC,EAAMwL,EAAaS,GAAWsB,EAAMhB,YAAczM,EAAKyM,UACzDzO,EAAQ0P,KAAO1P,EAAQ2P,OAAS,UACxBF,EAAMlB,gBAAkBvM,EAAKuM,eACrCvO,EAAQ4P,KAAO5P,EAAQ6P,IAAM,UAC7B7P,EAAQ8P,MAAQ,WACP5N,EAAMwL,EAAwB,EAAVS,GAAgBC,EAAcqB,KAAWrB,EAAcpM,GACpFhC,EAAQ+P,QAAU,SAElB/P,EAAQ8P,MAAQ,QAChB9P,EAAQ6P,IAAM,WAGT,IAAI,UAAKrP,gBAAgB,CAC9BG,KAAMqB,EACNhC,YACCrC,QAGE,SAASqS,EAAWrP,GACzB,OAAO,IAAI,UAAKH,gBAAgB,CAC9BG,OACAX,QAAS,CACP0P,KAAM,UACNC,OAAQ,aAEThS,QAGL,MAAmB,IAAe6R,8BAAgCA,GAE3D,MAAMS,EAAc,CAACtP,EAAYX,EAKnC,MACH,MAAMkQ,EAASlQ,EAAQmQ,cAAgB,IAAM,IACvCnO,GAAQ,IAAMrB,EAAK0O,YAAYzQ,OAAO,GAAK,KAAO,IAAM+B,EAAK2O,cAAc1Q,OAAO,IAAMoB,EAAQoQ,UAAY,GAAK,KAAO,IAAMzP,EAAK0P,cAAczR,OAAO,IAE9J,OAAQoB,EAAQsQ,aAAe,IAAM3P,EAAK8N,WAAW7P,OAAO,GAAK+B,EAAK8N,WACpEyB,GAAUlQ,EAAQmQ,eAAiB,KAAOxP,EAAK6N,WAAa,IAAI5P,OAAO,GAAKqP,EAAOtN,EAAK6N,aACxF0B,EAASvP,EAAK4N,eACbvO,EAAQuQ,OAAS,GAAK,KAAOvO,IAG3B,SAASwO,EAAMC,GACpB,MAAMC,EAAIzO,KAAKC,MACf,OAAOuO,EAAUC,EAAI,IAAO,EAAIA,EAIlC,MACMC,EAAc,IAAIC,OAAO,gBACzBC,EAAwB,IAAID,OAAO,yBAA0B,KAC7DE,EAA2B,IAAIF,OAAO,yBAA0B,KAChEG,EAAY,IAAIH,OAAO,0CAA2C,KAClEI,EAAW,IAAIJ,OAAO,mEAAoE,KAC1FK,EAAwB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAMpE,SAASC,EAAaC,EAAeC,GAC1C,MAAMjE,EAAIgE,EAAME,OAAO5N,cAEvB,GAAG0J,EAAEpO,OAAS,EACZ,OAGF,GAA0B,IAAvB,QAAQ7F,QAAQiU,GAAU,CAC3B,MAAMxM,EAAO,IAAIsB,KACX2N,EAAOjP,EAAK4N,cACZuB,EAAQnP,EAAK6N,WACbqB,EAAMlP,EAAK8N,UACjB9N,EAAK2Q,YAAY1B,EAAME,EAAOD,GAC9BlP,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAU7Q,EAAKuO,UACrBvO,EAAK2Q,YAAY1B,EAAME,EAAOD,EAAM,GACpClP,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAU9Q,EAAKuO,UAAY,EAMjC,YALAkC,EAAMnV,KAAK,CACTyV,MAAO,QACPF,UACAC,YAKJ,GAA8B,IAA3B,YAAYvY,QAAQiU,GAAU,CAC/B,MAAMxM,EAAO,IAAIsB,KACX2N,EAAOjP,EAAK4N,cACZuB,EAAQnP,EAAK6N,WACbqB,EAAMlP,EAAK8N,UACjB9N,EAAK2Q,YAAY1B,EAAME,EAAOD,GAC9BlP,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAU7Q,EAAKuO,UAAY,MACjCvO,EAAK2Q,YAAY1B,EAAME,EAAOD,EAAM,GACpClP,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAU9Q,EAAKuO,UAAY,SAMjC,YALAkC,EAAMnV,KAAK,CACTyV,MAAO,YACPF,UACAC,YAKJ,MAAME,EAySR,SAAsBxE,GACpB,MAAMyE,EAAI,IAAI3P,KACd,GAAGkL,EAAEpO,QAAU,EACb,OAAQ,EAGV,IAAI,IAAIhD,EAAI,EAAGA,EAAI,EAAGA,IAGpB,GAFA6V,EAAEC,QAAQD,EAAEnD,UAAY,GAEoC,IAAzDqD,EAAeF,EAAE1C,WAAWzL,cAAcvK,QAAQiU,GACnD,OAAOyE,EAAErC,SAGb,OAAQ,EAtTUwC,CAAa5E,GAC/B,GAAGwE,GAAa,EAAG,CACjB,MAAMhR,EAAO,IAAIsB,KACXC,EAAMvB,EAAKuO,UAEX8C,EAAWL,EADEhR,EAAK4O,SAExB5O,EAAKkR,QAAQlR,EAAK8N,UAAYuD,GAC3BrR,EAAKuO,UAAYhN,GAClBvB,EAAKsR,QAAQtR,EAAKuO,UAAY,QAEhC,MAAMU,EAAOjP,EAAK4N,cACZuB,EAAQnP,EAAK6N,WACbqB,EAAMlP,EAAK8N,UACjB9N,EAAK2Q,YAAY1B,EAAME,EAAOD,GAC9BlP,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAU7Q,EAAKuO,UACrBvO,EAAK2Q,YAAY1B,EAAME,EAAOD,EAAM,GACpClP,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAU9Q,EAAKuO,UAAY,EAMjC,YALAkC,EAAMnV,KAAK,CACTyV,MAAOI,EAAeN,GACtBA,UACAC,YAKJ,IAAIS,EACJ,GAAqC,QAAjCA,EAAUnB,EAAUoB,KAAKhF,IAyB7B,GAAoC,QAAhC+E,EAAUlB,EAASmB,KAAKhF,IAqC5B,GAAuC,QAAnC+E,EAAUvB,EAAYwB,KAAKhF,IAA/B,CAyCA,GAAiD,QAA7C+E,EAAUrB,EAAsBsB,KAAKhF,IAAc,CACrD,MAAMiF,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbpC,EAAQtB,EAAS4D,GACvB,GAAGtC,GAAS,EAAG,CACb,MAAMwC,GAAKD,EACX,GAAGC,EAAI,GAAKA,GAAK,GAAI,CAGnB,YADAC,EAAkBnB,EADNkB,EAAI,EACcxC,GAEzB,GAAGwC,GA5MA,KA4Mc,CAGtB,YADAE,EAAmBpB,EAAOtB,EADLwC,KAO3B,GAAoD,QAAhDJ,EAAUpB,EAAyBqB,KAAKhF,IAAc,CACxD,MAAMiF,EAAKF,EAAQ,GAEbpC,EAAQtB,EADH0D,EAAQ,IAEnB,GAAGpC,GAAS,EAAG,CACb,MAAMwC,GAAKF,EACX,GAAGE,EAAI,GAAKA,GAAK,GAAI,CAGnB,YADAC,EAAkBnB,EADNkB,EAAI,EACcxC,GAEzB,GAAIwC,GA9ND,KA8Ne,CAEvBE,EAAmBpB,EAAOtB,EADLwC,UAtE3B,CACE,IAAIG,GAAgBtF,EACpB,MAAMuF,GAAc,IAAIzQ,MAAOsM,cAC/B,GAAGkE,EA5JS,KA4Je,CACzBA,EA7JU,KA8JV,IAAI,IAAI1W,EAAI2W,EAAa3W,GAAK0W,EAAc1W,IAAK,CAC/C,MAAM4E,EAAO,IAAIsB,KACjBtB,EAAK2Q,YAAYvV,EAAG,EAAG,GACvB4E,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAU7Q,EAAKuO,UACrBvO,EAAK2Q,YAAYvV,EAAI,EAAG,EAAG,GAC3B4E,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAU9Q,EAAKuO,UAAY,EACjCkC,EAAMnV,KAAK,CACTyV,MAAO,GAAK3V,EACZyV,UACAC,kBAGC,GAAGgB,GAAgBC,EAAa,CACrC,MAAM/R,EAAO,IAAIsB,KACjBtB,EAAK2Q,YAAYmB,EAAc,EAAG,GAClC9R,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAU7Q,EAAKuO,UACrBvO,EAAK2Q,YAAYmB,EAAe,EAAG,EAAG,GACtC9R,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAU9Q,EAAKuO,UAAY,EACjCkC,EAAMnV,KAAK,CACTyV,MAAO,GAAKe,EACZjB,UACAC,iBAvEN,CACE,MAAMW,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbS,EAAKT,EAAQ,GACnB,IAAIA,EAAQ,KAAOA,EAAQ,GACzB,OAGF,MAAMrC,EAAM+C,SAASR,GACftC,EAAQ8C,SAASP,GAAM,EAC7B,IAAIzC,EAAOgD,SAASD,GACjB/C,GAAQ,IAAMA,GAAQ,KACvBA,GAAQ,KAGV,MAAM8C,GAAc,IAAIzQ,MAAOsM,cAC/B,GAAGsE,EAAkBhD,EAAM,EAAGC,IAAUF,GApI5B,MAoI+CA,GAAQ8C,EAAa,CAC9E,MAAM/R,EAAO,IAAIsB,KACjBtB,EAAK2Q,YAAY1B,EAAME,EAAOD,GAC9BlP,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAU7Q,EAAKuO,UACrBvO,EAAK2Q,YAAY1B,EAAME,EAAOD,EAAM,GACpClP,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAU9Q,EAAKuO,UAAY,EAMjC,YALAkC,EAAMnV,KAAK,CACTyV,MAAOoB,EAAiBtB,GACxBA,UACAC,iBAtDN,CACE,MAAMW,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbI,EAAIM,SAASR,GACbW,EAAKH,SAASP,GACpB,GAAGC,EAAI,GAAKA,GAAK,GAAI,CACnB,GAAGS,GAjGO,MAiGUT,GAAK,GAAI,CAI3B,YADAE,EAAmBpB,EADLkB,EAAI,EADGS,GAIhB,GAAIA,GAAM,GAAI,CAGnBR,EAAkBnB,EAFNkB,EAAI,EACFS,EAAK,SAGhB,GAAIT,GA3GC,MA2GeS,GAAM,GAAI,CAGnCP,EAAmBpB,EADL2B,EAAK,EADET,KA0H3B,SAASE,EAAmBpB,EAAmBtB,EAAe2C,GAC5D,MAAMC,GAAc,IAAIzQ,MAAOsM,cACzBkB,EAAQxN,KAAKC,MACnB,GAAGuQ,GAzOW,MAyOgBA,GAAgBC,EAAa,CACzD,MAAM/R,EAAO,IAAIsB,KACjBtB,EAAK2Q,YAAYmB,EAAc3C,EAAO,GACtCnP,EAAK4Q,SAAS,EAAG,EAAG,GACpB,MAAMC,EAAU7Q,EAAKuO,UACrB,GAAGsC,EAAU/B,EACX,OAEF9O,EAAKqS,SAASrS,EAAK6N,WAAa,GAChC,MAAMiD,EAAU9Q,EAAKuO,UAAY,EAEjCkC,EAAMnV,KAAK,CACTyV,MAAOuB,EAAmBzB,GAC1BA,UACAC,aAKN,SAASc,EAAkBnB,EAAmBvB,EAAaC,GACzD,GAAG+C,EAAkBhD,EAAKC,GAAQ,CAChC,MAAM4C,GAAc,IAAIzQ,MAAOsM,cACzBkB,EAAQxN,KAAKC,MAEnB,IAAI,IAAInG,EAAI2W,EAAa3W,GAjQb,KAiQ2BA,IAAK,CAC1C,GAAa,IAAV+T,GAAuB,KAARD,MA8DJD,EA9D8B7T,GA+DhC,GAAM,GAAO6T,EAAO,KAAQ,IAAQA,EAAO,KAAQ,GA9D7D,SAGF,MAAMjP,EAAO,IAAIsB,KACjBtB,EAAK2Q,YAAYvV,EAAG+T,EAAOD,EAAM,GACjClP,EAAK4Q,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAU7Q,EAAKuO,UACrB,GAAGsC,EAAU/B,EACX,SAGF9O,EAAK2Q,YAAYvV,EAAG+T,EAAOD,EAAM,GACjClP,EAAK4Q,SAAS,EAAG,EAAG,GACpB,MAAME,EAAU9Q,EAAKuO,UAAY,EAC9BnT,IAAM2W,EACPtB,EAAMnV,KAAK,CACTyV,MAAOwB,EAAkB1B,GACzBA,UACAC,YAGFL,EAAMnV,KAAK,CACTyV,MAAOoB,EAAiBtB,GACxBA,UACAC,aAoCV,IAAoB7B,EA7BpB,SAASqD,EAAmBvF,GAC1B,MAAM/M,EAAO,IAAIsB,KAAKyL,GACtB,OAAOO,EAAOtN,EAAK6N,YAAY5P,MAAM,EAAG,GAAK,IAAM+B,EAAK4N,cAG1D,SAAS2E,EAAkBxF,GACzB,MAAM/M,EAAO,IAAIsB,KAAKyL,GACtB,OAAOO,EAAOtN,EAAK6N,YAAY5P,MAAM,EAAG,GAAK,IAAM+B,EAAK8N,UAG1D,SAASqE,EAAiBpF,GACxB,MAAM/M,EAAO,IAAIsB,KAAKyL,GACtB,OAAQ,IAAM/M,EAAK8N,WAAW7P,OAAO,GAAK,KAAO,KAAO+B,EAAK6N,WAAa,IAAI5P,OAAO,GAAK,IAAM+B,EAAK4N,cAGvG,SAASuD,EAAepE,GACtB,MAAM/M,EAAO,IAAIsB,KAAKyL,GACtB,OAAOQ,EAAKvN,EAAK4O,UAGnB,SAASsD,EAAkBhD,EAAaC,GACtC,OAAGA,GAAS,GAAKA,EAAQ,IACpBD,GAAO,GAAKA,EAAMoB,EAAsBnB,GAW/C,SAAStB,EAASrB,GAwBhBA,EAAIA,EAAE1J,cACN,IAAI,IAAI1H,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE1B,GAAwB,IADVkS,EAAOlS,GAAG0H,cACfvK,QAAQiU,GACf,OAAOpR,EAGX,OAAQ,EAmBV,IAAemV,aAAeA,G,gCC/cvB,SAASiC,EAAajU,EAAaH,EAAgBqU,EAAYrU,EAAS,IAM7E,OALAG,EAAMA,EAAImS,QACHtS,OAASqU,IACdlU,EAAMA,EAAIN,MAAM,EAAGG,GAAoC,OAGlDG,EAIF,SAASmU,EAAanU,GAC3B,OAAOA,EACJZ,QAAQ,sBAAuB,QAC/BA,QAAQ,KAAM,SAGZ,SAASgV,EAAenX,GAC7B,OAAOA,EAAMmC,QAAQ,KAAM,SAASA,QAAQ,kCAAoCnC,GAGvE,MAAyB,MAFvBA,EAAMoX,WAAW,GAEJ,QADZpX,EAAMoX,WAAW,GACqB,OAAU,OAAW,KACpEjV,QAAQ,iBAAmBnC,GACrB,KAAOA,EAAMoX,WAAW,GAAK,KACnCjV,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAGlC,SAASkV,EAAoBtU,EAAauU,GAC/C,GAAGvU,EAAIH,OAAS0U,EAAW,MAAO,CAACvU,GACnC,IAAIH,EAAS,EAAG2U,EAAsB,EAAGC,EAAa,EACtD,MACMvV,EAAgB,GAEhBwV,EAAOC,IACX,IAAIC,EAAO5U,EAAIN,MAAM8U,EAAqBG,GAC1C,MAAME,EAAcJ,IACpB,GAAGG,EAAK/U,OAAS0U,EAAW,CAETD,EADEM,EAAKlV,MAAM6U,GACqBA,GAC1CjX,QAAQsX,IACf1V,EAAIuV,KAAgBG,IAGtBA,EAAOA,EAAKlV,MAAM,EAAG6U,GAGvBC,EAAsBG,EACtB9U,EAAS,EACTX,EAAI2V,IAAgB3V,EAAI2V,IAAgB,IAAMD,GAGhD,IAAIzV,EAAY,EAChB,OAAG,CACD,IAAI2V,EAAQ9U,EAAIhG,QAvBA,IAuBmBmF,GACnC,IAAc,IAAX2V,EAAc,CACZ3V,IAAea,EAAIH,OAAS,GAC7B6U,IAGF,MAGFI,GAhCgB,IAgCGjV,OAEnB,MAAMkV,EAAaD,EAAQ3V,EACvBU,EAASkV,EAAcR,GACzBG,EAAI7U,GAGNV,EAAY2V,EACZjV,GAAUkV,EAGZ,OAAO7V,EAcF,SAAS8V,EAAuCC,GACrD,MAAMjV,EAAMiV,EAAS7V,QAAQ,QAAS,IACtC,OAAQY,EAAI,GAAGuE,cAAgBvE,EAAIN,MAAM,GAGpC,SAASwV,EAAqBlY,GAGnC,OADAA,EAAM,SADNA,EAAMA,EAAI,GAAGmY,cAAgBnY,EAAI0C,MAAM,IAKlC,SAAS0V,EAAsB3X,GACpC,OAAOA,EAAO4X,OAAO,GAAGF,cAAgB1X,EAAOiC,MAAM,GA5GvD","file":"1.1515649d3bc53b0cecf4.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nexport class AppRuntimeManager {\n  public reload() {\n    try {\n      location.reload();\n    } catch(e) {};\n\n    // if(window.chrome && chrome.runtime && chrome.runtime.reload) {\n    //   chrome.runtime.reload();\n    // }\n  }\n\n  public close() {\n    try {\n      window.close();\n    } catch(e) {}\n  }\n\n  /**\n   * Better to call from event\n   */\n  public focus() {\n    // // @ts-ignore\n    // if(window.navigator.mozApps && document.hidden) {\n    //   // Get app instance and launch it to bring app to foreground\n    //   // @ts-ignore\n    //   window.navigator.mozApps.getSelf().onsuccess = function() {\n    //     this.result.launch();\n    //   };\n    // } else {\n    //   // @ts-ignore\n    //   if(window.chrome && chrome.app && chrome.app.window) {\n    //     // @ts-ignore\n    //     chrome.app.window.current().focus();\n    //   }\n\n      window.focus();\n    // }\n  }\n}\n\nconst appRuntimeManager = new AppRuntimeManager();\nexport default appRuntimeManager;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"webp.worker.bd598dc02a03fd59d71a.bundle.worker.js\");\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport WebpWorker from 'worker-loader!./webp.worker';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { CancellablePromise, deferredPromise } from '../../helpers/cancellablePromise';\nimport apiManagerProxy from '../mtproto/mtprotoworker';\n\nexport type WebpConvertTask = {\n  type: 'convertWebp', \n  payload: {\n    fileName: string, \n    bytes: Uint8Array\n  }\n};\n\nexport class WebpWorkerController {\n  private worker: Worker;\n  private convertPromises: {[fileName: string]: CancellablePromise<Uint8Array>} = {};\n  private isWebpSupportedCache: boolean;\n  \n  init() {\n    this.worker = new WebpWorker();\n    this.worker.addEventListener('message', (e) => {\n      const payload = (e.data as WebpConvertTask).payload;\n\n      if(payload.fileName.indexOf('main-') === 0) {\n        const promise = this.convertPromises[payload.fileName];\n        if(promise) {\n          payload.bytes ? promise.resolve(payload.bytes) : promise.reject();\n          delete this.convertPromises[payload.fileName];\n        }\n      } else {\n        apiManagerProxy.postMessage(e.data);\n      }\n    });\n  }\n\n  postMessage(data: WebpConvertTask) {\n    if(this.init) {\n      this.init();\n      this.init = null;\n    }\n\n    this.worker.postMessage(data);\n  }\n\n  isWebpSupported() {\n    if(this.isWebpSupportedCache === undefined) {\n      this.isWebpSupportedCache = document.createElement('canvas').toDataURL('image/webp').startsWith('data:image/webp');\n    }\n\n    return this.isWebpSupportedCache;\n  }\n\n  convert(fileName: string, bytes: Uint8Array) {\n    fileName = 'main-' + fileName;\n\n    if(this.convertPromises.hasOwnProperty(fileName)) {\n      return this.convertPromises[fileName];\n    }\n    \n    const convertPromise = deferredPromise<Uint8Array>();\n\n    this.postMessage({type: 'convertWebp', payload: {fileName, bytes}});\n\n    return this.convertPromises[fileName] = convertPromise;\n  }\n}\n\nconst webpWorkerController = new WebpWorkerController();\nMOUNT_CLASS_TO.webpWorkerController = webpWorkerController;\nexport default webpWorkerController;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport DEBUG, { MOUNT_CLASS_TO } from \"../config/debug\";\nimport { safeAssign } from \"../helpers/object\";\nimport { capitalizeFirstLetter } from \"../helpers/string\";\nimport type lang from \"../lang\";\nimport type langSign from \"../langSign\";\nimport { LangPackDifference, LangPackString } from \"../layer\";\nimport apiManager from \"./mtproto/mtprotoworker\";\nimport stateStorage from \"./stateStorage\";\nimport App from \"../config/app\";\nimport rootScope from \"./rootScope\";\n\nexport const langPack: {[actionType: string]: LangPackKey} = {\n  \"messageActionChatCreate\": \"ActionCreateGroup\",\n  \"messageActionChatCreateYou\": \"ActionYouCreateGroup\",\n\t\"messageActionChatEditTitle\": \"ActionChangedTitle\",\n\t\"messageActionChatEditPhoto\": \"ActionChangedPhoto\",\n\t\"messageActionChatEditVideo\": \"ActionChangedVideo\",\n\t\"messageActionChatDeletePhoto\": \"ActionRemovedPhoto\",\n\t\"messageActionChatReturn\": \"ActionAddUserSelf\",\n\t\"messageActionChatReturnYou\": \"ActionAddUserSelfYou\",\n\t\"messageActionChatJoined\": \"ActionAddUserSelfMega\",\n\t\"messageActionChatJoinedYou\": \"ChannelMegaJoined\",\n  \"messageActionChatAddUser\": \"ActionAddUser\",\n  \"messageActionChatAddUsers\": \"ActionAddUser\",\n\t\"messageActionChatLeave\": \"ActionLeftUser\",\n\t\"messageActionChatLeaveYou\": \"YouLeft\",\n\t\"messageActionChatDeleteUser\": \"ActionKickUser\",\n\t\"messageActionChatJoinedByLink\": \"ActionInviteUser\",\n  \"messageActionPinMessage\": \"ActionPinnedNoText\",\n  \"messageActionContactSignUp\": \"Chat.Service.PeerJoinedTelegram\",\n\t\"messageActionChannelCreate\": \"ActionCreateChannel\",\n\t\"messageActionChannelEditTitle\": \"Chat.Service.Channel.UpdatedTitle\",\n\t\"messageActionChannelEditPhoto\": \"Chat.Service.Channel.UpdatedPhoto\",\n\t\"messageActionChannelEditVideo\": \"Chat.Service.Channel.UpdatedVideo\",\n  \"messageActionChannelDeletePhoto\": \"Chat.Service.Channel.RemovedPhoto\",\n  \"messageActionHistoryClear\": \"HistoryCleared\",\n\n  \"messageActionChannelMigrateFrom\": \"ActionMigrateFromGroup\",\n\n  \"messageActionPhoneCall.in_ok\": \"ChatList.Service.Call.incoming\",\n\t\"messageActionPhoneCall.out_ok\": \"ChatList.Service.Call.outgoing\",\n\t\"messageActionPhoneCall.in_missed\": \"ChatList.Service.Call.Missed\",\n\t\"messageActionPhoneCall.out_missed\": \"ChatList.Service.Call.Cancelled\",\n\n\t\"messageActionGroupCall.started\": \"ActionGroupCallJustStarted\",\n\t\"messageActionGroupCall.started_by\": \"ActionGroupCallStarted\",\n\t\"messageActionGroupCall.started_byYou\": \"ActionGroupCallStartedByYou\",\n\t\"messageActionGroupCall.ended_by\": \"Chat.Service.VoiceChatFinished\",\n\t\"messageActionGroupCall.ended_byYou\": \"Chat.Service.VoiceChatFinishedYou\",\n\n\t\"messageActionBotAllowed\": \"Chat.Service.BotPermissionAllowed\"\n};\n\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\n\nnamespace I18n {\n\texport const strings: Map<LangPackKey, LangPackString> = new Map();\n\tlet pluralRules: Intl.PluralRules;\n\n\tlet cacheLangPackPromise: Promise<LangPackDifference>;\n\texport let lastRequestedLangCode: string;\n\texport let requestedServerLanguage = false;\n\texport function getCacheLangPack(): Promise<LangPackDifference> {\n\t\tif(cacheLangPackPromise) return cacheLangPackPromise;\n\t\treturn cacheLangPackPromise = Promise.all([\n\t\t\tstateStorage.get('langPack') as Promise<LangPackDifference>,\n\t\t\tpolyfillPromise\n\t\t]).then(([langPack]) => {\n\t\t\tif(!langPack/*  || true */) {\n\t\t\t\treturn loadLocalLangPack();\n\t\t\t} else if(DEBUG && false) {\n\t\t\t\treturn getLangPack(langPack.lang_code);\n\t\t\t}/*  else if(langPack.appVersion !== App.langPackVersion) {\n\t\t\t\treturn getLangPack(langPack.lang_code);\n\t\t\t} */\n\t\t\t\n\t\t\tif(!lastRequestedLangCode) {\n\t\t\t\tlastRequestedLangCode = langPack.lang_code;\n\t\t\t}\n\t\t\t\n\t\t\tapplyLangPack(langPack);\n\t\t\treturn langPack;\n\t\t}).finally(() => {\n\t\t\tcacheLangPackPromise = undefined;\n\t\t});\n\t}\n\n\texport function loadLocalLangPack() {\n\t\tconst defaultCode = App.langPackCode;\n\t\tlastRequestedLangCode = defaultCode;\n\t\treturn Promise.all([\n\t\t\timport('../lang'),\n\t\t\timport('../langSign')\n\t\t]).then(([lang, langSign]) => {\n\t\t\tconst strings: LangPackString[] = [];\n\t\t\tformatLocalStrings(lang.default, strings);\n\t\t\tformatLocalStrings(langSign.default, strings);\n\n\t\t\tconst langPack: LangPackDifference = {\n\t\t\t\t_: 'langPackDifference',\n\t\t\t\tfrom_version: 0,\n\t\t\t\tlang_code: defaultCode,\n\t\t\t\tstrings,\n\t\t\t\tversion: 0,\n\t\t\t\tlocal: true\n\t\t\t};\n\t\t\treturn saveLangPack(langPack);\n\t\t});\n\t}\n\n\texport function loadLangPack(langCode: string) {\n\t\trequestedServerLanguage = true;\n\t\treturn Promise.all([\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\tlang_pack: App.langPack\n\t\t\t}),\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\tlang_pack: 'android'\n\t\t\t}),\n\t\t\timport('../lang'),\n\t\t\timport('../langSign'),\n\t\t\tpolyfillPromise\n\t\t]);\n\t}\n\n\texport function getStrings(langCode: string, strings: string[]) {\n\t\treturn apiManager.invokeApi('langpack.getStrings', {\n\t\t\tlang_pack: App.langPack,\n\t\t\tlang_code: langCode,\n\t\t\tkeys: strings\n\t\t});\n\t}\n\n\texport function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\n\t\tfor(const i in strings) {\n\t\t\t// @ts-ignore\n\t\t\tconst v = strings[i];\n\t\t\tif(typeof(v) === 'string') {\n\t\t\t\tpushTo.push({\n\t\t\t\t\t_: 'langPackString',\n\t\t\t\t\tkey: i,\n\t\t\t\t\tvalue: v\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpushTo.push({\n\t\t\t\t\t_: 'langPackStringPluralized',\n\t\t\t\t\tkey: i,\n\t\t\t\t\t...v\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn pushTo;\n\t}\n\n\texport function getLangPack(langCode: string) {\n\t\tlastRequestedLangCode = langCode;\n\t\treturn loadLangPack(langCode).then(([langPack, _langPack, __langPack, ___langPack, _]) => {\n\t\t\tlet strings: LangPackString[] = [];\n\n\t\t\t[__langPack, ___langPack].forEach(l => {\n\t\t\t\tformatLocalStrings(l.default as any, strings);\n\t\t\t});\n\n\t\t\tstrings = strings.concat(langPack.strings);\n\n\t\t\tfor(const string of _langPack.strings) {\n\t\t\t\tstrings.push(string);\n\t\t\t}\n\n\t\t\tlangPack.strings = strings;\n\t\t\treturn saveLangPack(langPack);\n\t\t});\n\t}\n\n\texport function saveLangPack(langPack: LangPackDifference) {\n\t\tlangPack.appVersion = App.langPackVersion;\n\n\t\treturn stateStorage.set({langPack}).then(() => {\n\t\t\tapplyLangPack(langPack);\n\t\t\treturn langPack;\n\t\t});\n\t}\n\n\texport const polyfillPromise = (function checkIfPolyfillNeeded() {\n\t\tif(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn import('./pluralPolyfill').then((_Intl) => {\n\t\t\t\t(window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\n\t\t\t});\n\t\t}\n\t})();\n\t\n\texport function applyLangPack(langPack: LangPackDifference) {\n\t\tif(langPack.lang_code !== lastRequestedLangCode) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code);\n\t\t} catch(err) {\n\t\t\tconsole.error('pluralRules error', err);\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\n\t\t}\n\n\t\tstrings.clear();\n\n\t\tfor(const string of langPack.strings) {\n\t\t\tstrings.set(string.key as LangPackKey, string);\n\t\t}\n\n\t\trootScope.dispatchEvent('language_change', langPack.lang_code);\n\n\t\tconst elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n\t\telements.forEach(element => {\n\t\t\tconst instance = weakMap.get(element);\n\n\t\t\tif(instance) {\n\t\t\t\tinstance.update();\n\t\t\t}\n\t\t});\n\t}\n\n\texport function superFormatter(input: string, args?: any[], indexHolder = {i: 0}) {\n\t\tlet out: (string | HTMLElement)[] = [];\n\t\tconst regExp = /(\\*\\*)(.+?)\\1|(\\n)|un\\d|%\\d\\$.|%./g;\n\n\t\tlet lastIndex = 0;\n\t\tinput.replace(regExp, (match, p1: any, p2: any, p3: any, offset: number, string: string) => {\n\t\t\t//console.table({match, p1, p2, offset, string});\n\n\t\t\tout.push(string.slice(lastIndex, offset));\n\n\t\t\tif(p1) {\n\t\t\t\t//offset += p1.length;\n\t\t\t\tswitch(p1) {\n\t\t\t\t\tcase '**': {\n\t\t\t\t\t\tconst b = document.createElement('b');\n\t\t\t\t\t\tb.append(...superFormatter(p2, args, indexHolder));\n\t\t\t\t\t\tout.push(b);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if(p3) {\n\t\t\t\tout.push(document.createElement('br'));\n\t\t\t} else if(args) {\n\t\t\t\tout.push(args[indexHolder.i++]);\n\t\t\t}\n\n\t\t\tlastIndex = offset + match.length;\n\t\t\treturn '';\n\t\t});\n\t\n\t\tif(lastIndex !== input.length) {\n\t\t\tout.push(input.slice(lastIndex));\n\t\t}\n\n\t\treturn out;\n\t}\n\t\n\texport function format(key: LangPackKey, plain: true, args?: any[]): string;\n\texport function format(key: LangPackKey, plain?: false, args?: any[]): (string | HTMLElement)[];\n\texport function format(key: LangPackKey, plain = false, args?: any[]): (string | HTMLElement)[] | string {\n\t\tconst str = strings.get(key);\n\t\tlet input: string;\n\t\tif(str) {\n\t\t\tif(str._ === 'langPackStringPluralized' && args?.length) {\n\t\t\t\tlet v = args[0] as number | string;\n\t\t\t\tif(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\n\t\t\t\tconst s = pluralRules.select(v);\n\t\t\t\t// @ts-ignore\n\t\t\t\tinput = str[s + '_value'] || str['other_value'];\n\t\t\t} else if(str._ === 'langPackString') {\n\t\t\t\tinput = str.value;\n\t\t\t} else {\n\t\t\t\t//input = '[' + key + ']';\n\t\t\t\tinput = key;\n\t\t\t}\n\t\t} else {\n\t\t\t//input = '[' + key + ']';\n\t\t\tinput = key;\n\t\t}\n\t\t\n\t\tif(plain) {\n\t\t\tif(args?.length) {\n\t\t\t\tconst regExp = /un\\d|%\\d\\$.|%./g;\n\t\t\t\tlet i = 0;\n\t\t\t\tinput = input.replace(regExp, (match, offset, string) => {\n\t\t\t\t\treturn '' + args[i++];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn input;\n\t\t} else {\n\t\t\treturn superFormatter(input, args);\n\t\t}\n\t}\n\n\texport const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\n\n\texport type IntlElementBaseOptions = {\n\t\telement?: HTMLElement,\n\t\tproperty?: /* 'innerText' |  */'innerHTML' | 'placeholder',\n\t};\n\n\tabstract class IntlElementBase<Options extends IntlElementBaseOptions> {\n\t\tpublic element: IntlElementBaseOptions['element'];\n\t\tpublic property: IntlElementBaseOptions['property'] = 'innerHTML';\n\t\n\t\tconstructor(options: Options) {\n\t\t\tthis.element = options.element || document.createElement('span');\n\t\t\tthis.element.classList.add('i18n');\n\t\t\t\n\t\t\tthis.update(options);\n\t\t\tweakMap.set(this.element, this);\n\t\t}\n\n\t\tabstract update(options?: Options): void;\n\t}\n\n\texport type IntlElementOptions = IntlElementBaseOptions & {\n\t\tkey: LangPackKey,\n\t\targs?: any[]\n\t};\n\texport class IntlElement extends IntlElementBase<IntlElementOptions> {\n\t\tpublic key: IntlElementOptions['key'];\n\t\tpublic args: IntlElementOptions['args'];\n\n\t\tpublic update(options?: IntlElementOptions) {\n\t\t\tsafeAssign(this, options);\n\t\n\t\t\tif(this.property === 'innerHTML') {\n\t\t\t\tthis.element.textContent = '';\n\t\t\t\tthis.element.append(...format(this.key, false, this.args));\n\t\t\t} else {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst v = this.element[this.property];\n\t\t\t\tconst formatted = format(this.key, true, this.args);\n\n\t\t\t\t// * hasOwnProperty won't work here\n\t\t\t\tif(v === undefined) this.element.dataset[this.property] = formatted;\n\t\t\t\telse (this.element as HTMLInputElement)[this.property] = formatted;\n\t\t\t}\n\t\t}\n\t}\n\n\texport type IntlDateElementOptions = IntlElementBaseOptions & {\n\t\tdate: Date,\n\t\toptions: Intl.DateTimeFormatOptions\n\t};\n\texport class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\n\t\tpublic date: IntlDateElementOptions['date'];\n\t\tpublic options: IntlDateElementOptions['options'];\n\n\t\tpublic update(options?: IntlDateElementOptions) {\n\t\t\tsafeAssign(this, options);\n\t\n\t\t\t//var options = { month: 'long', day: 'numeric' };\n\t\t\t\n\t\t\t// * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\n\t\t\tconst dateTimeFormat = new Intl.DateTimeFormat(lastRequestedLangCode + '-u-hc-h23', this.options);\n\t\t\t\n\t\t\t(this.element as any)[this.property] = capitalizeFirstLetter(dateTimeFormat.format(this.date));\n\t\t}\n\t}\n\n\texport function i18n(key: LangPackKey, args?: any[]) {\n\t\treturn new IntlElement({key, args}).element;\n\t}\n\t\n\texport function i18n_(options: IntlElementOptions) {\n\t\treturn new IntlElement(options).element;\n\t}\n\n\texport function _i18n(element: HTMLElement, key: LangPackKey, args?: any[], property?: IntlElementOptions['property']) {\n\t\treturn new IntlElement({element, key, args, property}).element;\n\t}\n}\n\nexport {I18n};\nexport default I18n;\n\nconst i18n = I18n.i18n;\nexport {i18n};\n\nconst i18n_ = I18n.i18n_;\nexport {i18n_};\n\nconst _i18n = I18n._i18n;\nexport {_i18n};\n\nexport function join(elements: HTMLElement[], useLast = true) {\n\tconst arr: HTMLElement[] = elements.slice(0, 1);\n  for(let i = 1; i < elements.length; ++i) {\n    const isLast = (elements.length - 1) === i;\n    const delimiterKey: LangPackKey = isLast && useLast ? 'WordDelimiterLast' : 'WordDelimiter';\n    arr.push(i18n(delimiterKey));\n    arr.push(elements[i]);\n  }\n\n\treturn arr;\n}\n\nMOUNT_CLASS_TO.I18n = I18n;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { nextRandomInt } from \"../../helpers/random\";\nimport { logger } from \"../logger\";\nimport rootScope from \"../rootScope\";\nimport sessionStorage from \"../sessionStorage\";\nimport apiManager from \"./mtprotoworker\";\n\nexport type AppInstance = {\n  id: number,\n  idle: boolean,\n  time: number\n};\n\nconst CHECK_INSTANCE_INTERVAL = 5000; \nconst DEACTIVATE_TIMEOUT = 30000;\nconst MULTIPLE_TABS_THRESHOLD = 20000;\n\nexport class SingleInstance {\n  private instanceID: number;\n  private started: boolean;\n  private masterInstance: boolean;\n  private deactivateTimeout: number;\n  private deactivated: boolean;\n  private initial: boolean;\n  private log = logger('INSTANCE');\n\n  public start() {\n    if(!this.started/*  && !Config.Navigator.mobile && !Config.Modes.packed */) {\n      this.started = true;\n\n      this.reset();\n      //IdleManager.start();\n\n      rootScope.addEventListener('idle', this.checkInstance);\n      setInterval(this.checkInstance, CHECK_INSTANCE_INTERVAL);\n      this.checkInstance();\n\n      try {\n        document.documentElement.addEventListener('beforeunload', this.clearInstance);\n      } catch(e) {}\n    }\n  }\n\n  public reset() {\n    this.instanceID = nextRandomInt(0xFFFFFFFF);\n    this.masterInstance = false;\n    if(this.deactivateTimeout) clearTimeout(this.deactivateTimeout);\n    this.deactivateTimeout = 0;\n    this.deactivated = false;\n    this.initial = false;\n  }\n\n  public clearInstance = () => {\n    if(this.masterInstance && !this.deactivated) {\n      this.log.warn('clear master instance');\n      sessionStorage.delete('xt_instance');\n    }\n  };\n\n  public activateInstance() {\n    if(this.deactivated) {\n      this.reset();\n      this.checkInstance(false);\n      rootScope.dispatchEvent('instance_activated');\n    }\n  }\n\n  public deactivateInstance = () => {\n    if(this.masterInstance || this.deactivated) {\n      return false;\n    }\n\n    this.log('deactivate');\n    this.deactivateTimeout = 0;\n    this.deactivated = true;\n    this.clearInstance();\n    //$modalStack.dismissAll();\n\n    //document.title = _('inactive_tab_title_raw')\n\n    rootScope.idle.deactivated = true;\n    rootScope.dispatchEvent('instance_deactivated');\n  };\n\n  public checkInstance = (idle = rootScope.idle && rootScope.idle.isIDLE) => {\n    if(this.deactivated) {\n      return false;\n    }\n    \n    const time = Date.now();\n    const newInstance: AppInstance = {\n      id: this.instanceID, \n      idle, \n      time\n    };\n\n    sessionStorage.get('xt_instance', false).then((curInstance: AppInstance) => {\n      // this.log('check instance', newInstance, curInstance)\n      if(!idle ||\n          !curInstance ||\n          curInstance.id === this.instanceID ||\n          curInstance.time < (time - MULTIPLE_TABS_THRESHOLD)) {\n        sessionStorage.set({xt_instance: newInstance});\n\n        if(!this.masterInstance) {\n          apiManager.startAll();\n          if(!this.initial) {\n            this.initial = true;\n          } else {\n            this.log.warn('now master instance', newInstance);\n          }\n\n          this.masterInstance = true;\n        }\n\n        if(this.deactivateTimeout) {\n          clearTimeout(this.deactivateTimeout);\n          this.deactivateTimeout = 0;\n        }\n      } else {\n        if(this.masterInstance) {\n          apiManager.stopAll();\n          this.log.warn('now idle instance', newInstance);\n          if(!this.deactivateTimeout) {\n            this.deactivateTimeout = window.setTimeout(this.deactivateInstance, DEACTIVATE_TIMEOUT);\n          }\n\n          this.masterInstance = false;\n        }\n      }\n    });\n  };\n}\n\nconst singleInstance = new SingleInstance();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.singleInstance = singleInstance);\nexport default singleInstance;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { NotificationSettings } from \"../appManagers/appNotificationsManager\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { copy } from \"../../helpers/object\";\nimport { logger } from \"../logger\";\nimport rootScope from \"../rootScope\";\nimport { ServiceWorkerNotificationsClearTask, ServiceWorkerPingTask, ServiceWorkerPushClickTask } from \"../serviceWorker/index.service\";\nimport apiManager from \"./mtprotoworker\";\nimport I18n, { LangPackKey } from \"../langPack\";\nimport { isMobile } from \"../../helpers/userAgent\";\nimport appRuntimeManager from \"../appManagers/appRuntimeManager\";\n\nexport type PushSubscriptionNotifyType = 'init' | 'subscribe' | 'unsubscribe';\nexport type PushSubscriptionNotifyEvent = `push_${PushSubscriptionNotifyType}`;\n\nexport type PushSubscriptionNotify = {\n  tokenType: number,\n  tokenValue: string\n};\n\nexport class WebPushApiManager {\n  public isAvailable = true;\n  private isPushEnabled = false;\n  private localNotificationsAvailable = true;\n  private started = false;\n  private settings: NotificationSettings & {baseUrl?: string} = {} as any;\n  private isAliveTO: any;\n  private isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  private userVisibleOnly = this.isFirefox ? false : true;\n  private log = logger('PM');\n\n  constructor() {\n    if(!('PushManager' in window) ||\n      !('Notification' in window) ||\n      !('serviceWorker' in navigator)) {\n      this.log.warn('Push messaging is not supported.');\n      this.isAvailable = false;\n      this.localNotificationsAvailable = false;\n    }\n\n    if(this.isAvailable && Notification.permission === 'denied') {\n      this.log.warn('The user has blocked notifications.');\n    }\n  }\n\n  public start() {\n    if(!this.started) {\n      this.started = true;\n      this.getSubscription();\n      this.setUpServiceWorkerChannel();\n    }\n  }\n\n  public setLocalNotificationsDisabled() {\n    this.localNotificationsAvailable = false;\n  }\n\n  public getSubscription() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.isPushEnabled = !!subscription;\n        this.pushSubscriptionNotify('init', subscription);\n      }).catch((err) => {\n        this.log.error('Error during getSubscription()', err);\n      });\n    });\n  }\n\n  public subscribe = () => {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.subscribe({userVisibleOnly: this.userVisibleOnly}).then((subscription) => {\n        // The subscription was successful\n        this.isPushEnabled = true;\n        this.pushSubscriptionNotify('subscribe', subscription);\n      }).catch((e) => {\n        if(Notification.permission === 'denied') {\n          this.log('Permission for Notifications was denied');\n        } else {\n          this.log('Unable to subscribe to push.', e);\n          if(!this.userVisibleOnly) {\n            this.userVisibleOnly = true;\n            setTimeout(this.subscribe, 0);\n          }\n        }\n      });\n    });\n  }\n\n  public unsubscribe() {\n    if(!this.isAvailable) {\n      return;\n    }\n    \n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.isPushEnabled = false;\n\n        if(subscription) {\n          this.pushSubscriptionNotify('unsubscribe', subscription);\n\n          setTimeout(() => {\n            subscription.unsubscribe().then((successful) => {\n              this.isPushEnabled = false;\n            }).catch((e) => {\n              this.log.error('Unsubscription error: ', e);\n            });\n          }, 3000);\n        }\n      }).catch((e) => {\n        this.log.error('Error thrown while unsubscribing from ' +\n          'push messaging.', e);\n      });\n    });\n  }\n\n  public forceUnsubscribe() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.log.warn('force unsubscribe', subscription);\n        if(subscription) {\n          subscription.unsubscribe().then((successful) => {\n            this.log.warn('force unsubscribe successful', successful);\n            this.isPushEnabled = false;\n          }).catch((e) => {\n            this.log.error('Unsubscription error: ', e);\n          });\n        }\n      }).catch((e) => {\n        this.log.error('Error thrown while unsubscribing from ' +\n          'push messaging.', e);\n      });\n    });\n  }\n\n  public isAliveNotify = () => {\n    if(!this.isAvailable || rootScope.idle && rootScope.idle.deactivated) {\n      return;\n    }\n\n    this.settings.baseUrl = (location.href || '').replace(/#.*$/, '') + '#/im';\n\n    const lang: ServiceWorkerPingTask['payload']['lang'] = {} as any;\n    const ACTIONS_LANG_MAP: Record<keyof ServiceWorkerPingTask['payload']['lang'], LangPackKey> = {\n      push_action_mute1d: isMobile ? 'PushNotification.Action.Mute1d.Mobile' : 'PushNotification.Action.Mute1d',\n      push_action_settings: isMobile ? 'PushNotification.Action.Settings.Mobile' : 'PushNotification.Action.Settings',\n      push_message_nopreview: 'PushNotification.Message.NoPreview'\n    };\n\n    for(const action in ACTIONS_LANG_MAP) {\n      lang[action as keyof typeof ACTIONS_LANG_MAP] = I18n.format(ACTIONS_LANG_MAP[action as keyof typeof ACTIONS_LANG_MAP], true);\n    }\n\n    const task: ServiceWorkerPingTask = {\n      type: 'ping',\n      payload: {\n        localNotifications: this.localNotificationsAvailable,\n        lang: lang,\n        settings: this.settings\n      }\n    };\n\n    apiManager.postSWMessage(task);\n\n    this.isAliveTO = setTimeout(this.isAliveNotify, 10000);\n  }\n\n  public setSettings(newSettings: WebPushApiManager['settings']) {\n    this.settings = copy(newSettings);\n    clearTimeout(this.isAliveTO);\n    this.isAliveNotify();\n  }\n\n  public hidePushNotifications() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    const task: ServiceWorkerNotificationsClearTask = {type: 'notifications_clear'};\n    apiManager.postSWMessage(task);\n  }\n\n  public setUpServiceWorkerChannel() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    apiManager.addServiceWorkerTaskListener('push_click', (task: ServiceWorkerPushClickTask) => {\n      if(rootScope.idle && rootScope.idle.deactivated) {\n        appRuntimeManager.reload();\n        return;\n      }\n\n      rootScope.dispatchEvent('push_notification_click', task.payload);\n    });\n\n    navigator.serviceWorker.ready.then(this.isAliveNotify);\n  }\n\n  public pushSubscriptionNotify(event: PushSubscriptionNotifyType, subscription?: PushSubscription) {\n    if(subscription) {\n      const subscriptionObj: PushSubscriptionJSON = subscription.toJSON();\n      if(!subscriptionObj ||\n        !subscriptionObj.endpoint ||\n        !subscriptionObj.keys ||\n        !subscriptionObj.keys.p256dh ||\n        !subscriptionObj.keys.auth) {\n        this.log.warn('Invalid push subscription', subscriptionObj);\n        this.unsubscribe();\n        this.isAvailable = false;\n        this.pushSubscriptionNotify(event);\n        return;\n      }\n      \n      this.log.warn('Push', event, subscriptionObj);\n      rootScope.dispatchEvent(('push_' + event) as PushSubscriptionNotifyEvent, {\n        tokenType: 10,\n        tokenValue: JSON.stringify(subscriptionObj)\n      });\n    } else {\n      this.log.warn('Push', event, false);\n      rootScope.dispatchEvent(('push_' + event) as PushSubscriptionNotifyEvent, false as any);\n    }\n  }\n}\n\nconst webPushApiManager = new WebPushApiManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.webPushApiManager = webPushApiManager);\nexport default webPushApiManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport App from \"../../config/app\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport Modes from \"../../config/modes\";\nimport { tsNow } from \"../../helpers/date\";\nimport sessionStorage from '../sessionStorage';\n\nexport class TelegramMeWebManager {\n  private disabled = /* false &&  */(Modes.test || App.domains.indexOf(location.hostname) === -1);\n\n  public setAuthorized(canRedirect: boolean) {\n    if(this.disabled) {\n      return;\n    }\n\n    return sessionStorage.get('tgme_sync').then((curValue) => {\n      const ts = tsNow(true);\n      if(canRedirect &&\n        curValue &&\n        curValue.canRedirect === canRedirect &&\n        (curValue.ts + 86400) > ts) {\n        return;\n      }\n\n      sessionStorage.set({\n        tgme_sync: {\n          canRedirect, \n          ts\n        }\n      });\n\n      const urls = [\n        '//telegram.me/_websync_?authed=' + (canRedirect ? '1' : '0'),\n        '//t.me/_websync_?authed=' + (canRedirect ? '1' : '0')\n      ];\n\n      const promises = urls.map(url => {\n        const script = document.createElement('script');\n        const promise = new Promise<void>((resolve) => {\n          script.onload = script.onerror = () => {\n            script.remove();\n            resolve();\n          };\n        });\n        script.src = url;\n        document.body.appendChild(script);\n        return promise;\n      });\n\n      return Promise.all(promises);\n    });\n  }\n}\n\nconst telegramMeWebManager = new TelegramMeWebManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.telegramMeWebManager = telegramMeWebManager);\nexport default telegramMeWebManager;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"mtproto.worker.57edafb90f9c287cbaec.bundle.worker.js\");\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { logger, LogTypes } from '../../logger';\nimport Modes from '../../../config/modes';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport { MTConnection } from './transport';\n\nexport default class Socket extends EventListenerBase<{\n  open: () => void,\n  message: (buffer: ArrayBuffer) => any,\n  close: () => void,\n}> implements MTConnection {\n  private ws: WebSocket;\n  private log: ReturnType<typeof logger>;\n  private debug = Modes.debug && false;\n\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\n    super();\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n    this.connect();\n\n    return this;\n  }\n\n  private removeListeners() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.ws.removeEventListener('open', this.handleOpen);\n    this.ws.removeEventListener('close', this.handleClose);\n    this.ws.removeEventListener('error', this.handleError);\n    this.ws.removeEventListener('message', this.handleMessage);\n    this.ws = undefined;\n  }\n  \n  private connect() {\n    this.ws = new WebSocket(this.url, 'binary');\n    this.ws.binaryType = 'arraybuffer';\n    this.ws.addEventListener('open', this.handleOpen);\n    this.ws.addEventListener('close', this.handleClose);\n    this.ws.addEventListener('error', this.handleError);\n    this.ws.addEventListener('message', this.handleMessage);\n  }\n\n  public close() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.log('close execution');\n\n    try {\n      this.ws.close();\n    } catch(err) {\n\n    }\n    this.handleClose();\n  }\n  \n  private handleOpen = () => {\n    this.log('opened');\n\n    this.debug && this.log.debug('sending init packet');\n    this.dispatchEvent('open');\n  };\n\n  private handleError = (e: Event) => {\n    this.log.error('handleError', e);\n    this.close();\n  };\n\n  private handleClose = () => {\n    this.log('closed'/* , event, this.pending, this.ws.bufferedAmount */);\n\n    this.removeListeners();\n    this.dispatchEvent('close');\n  };\n\n  private handleMessage = (event: MessageEvent) => {\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\n\n    this.dispatchEvent('message', event.data as ArrayBuffer);\n  };\n\n  public send = (body: Uint8Array) => {\n    this.debug && this.log.debug('-> body length to send:', body.length);\n\n    this.ws.send(body);\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { LocalStorageProxyTask, LocalStorageProxyTaskResponse } from '../localStorage';\n//import type { LocalStorageProxyDeleteTask, LocalStorageProxySetTask } from '../storage';\nimport type { Awaited, InvokeApiOptions, WorkerTaskVoidTemplate } from '../../types';\nimport type { InputFile, MethodDeclMap } from '../../layer';\nimport MTProtoWorker from 'worker-loader!./mtproto.worker';\n//import './mtproto.worker';\nimport { isObject } from '../../helpers/object';\nimport CryptoWorkerMethods from '../crypto/crypto_methods';\nimport { logger } from '../logger';\nimport rootScope from '../rootScope';\nimport webpWorkerController from '../webp/webpWorkerController';\nimport { ApiFileManager, DownloadOptions } from './apiFileManager';\nimport type { RequestFilePartTask, RequestFilePartTaskResponse, ServiceWorkerTask } from '../serviceWorker/index.service';\nimport { UserAuth } from './mtproto_config';\nimport type { MTMessage } from './networker';\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\nimport Socket from './transports/websocket';\nimport singleInstance from './singleInstance';\nimport sessionStorage from '../sessionStorage';\nimport webPushApiManager from './webPushApiManager';\nimport AppStorage from '../storage';\nimport appRuntimeManager from '../appManagers/appRuntimeManager';\nimport { SocketProxyTask } from './transports/socketProxied';\nimport telegramMeWebManager from './telegramMeWebManager';\nimport { pause } from '../../helpers/schedulers';\nimport { CacheStorageDbName } from '../cacheStorage';\n\ntype Task = {\n  taskId: number,\n  task: string,\n  args: any[]\n};\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport interface ToggleStorageTask extends WorkerTaskVoidTemplate {\n  type: 'toggleStorage',\n  payload: boolean\n};\n\nexport class ApiManagerProxy extends CryptoWorkerMethods {\n  public worker: /* Window */Worker;\n  private afterMessageIdTemp = 0;\n\n  private taskId = 0;\n  private awaiting: {\n    [id: number]: {\n      resolve: any,\n      reject: any,\n      taskName: string\n    }\n  } = {} as any;\n  private pending: Array<Task> = [];\n\n  public updatesProcessor: (obj: any) => void = null;\n\n  private log = logger('API-PROXY');\n\n  private hashes: {[method: string]: HashOptions} = {};\n\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  private isSWRegistered = true;\n\n  private debug = DEBUG /* && false */;\n\n  private sockets: Map<number, Socket> = new Map();\n\n  private taskListeners: {[taskType: string]: (task: any) => void} = {};\n  private taskListenersSW: {[taskType: string]: (task: any) => void} = {};\n\n  public onServiceWorkerFail: () => void;\n\n  private postMessagesWaiting: any[][] = [];\n\n  constructor() {\n    super();\n    this.log('constructor');\n\n    singleInstance.start();\n\n    this.registerServiceWorker();\n\n    this.addTaskListener('clear', () => {\n      const toClear: CacheStorageDbName[] = ['cachedFiles', 'cachedStreamChunks'];\n      Promise.all([\n        AppStorage.toggleStorage(false), \n        sessionStorage.clear(),\n        Promise.race([\n          telegramMeWebManager.setAuthorized(false),\n          pause(3000)\n        ]),\n        webPushApiManager.forceUnsubscribe(),\n        Promise.all(toClear.map(cacheName => caches.delete(cacheName)))\n      ]).finally(() => {\n        appRuntimeManager.reload();\n      });\n    });\n\n    this.addTaskListener('connectionStatusChange', (task: any) => {\n      rootScope.dispatchEvent('connection_status_change', task.payload);\n    });\n\n    this.addTaskListener('convertWebp', (task) => {\n      webpWorkerController.postMessage(task);\n    });\n\n    this.addTaskListener('socketProxy', (task: SocketProxyTask) => {\n      const socketTask = task.payload;\n      const id = socketTask.id;\n      //console.log('socketProxy', socketTask, id);\n\n      if(socketTask.type === 'send') {\n        const socket = this.sockets.get(id);\n        socket.send(socketTask.payload);\n      } else if(socketTask.type === 'close') { // will remove from map in onClose\n        const socket = this.sockets.get(id);\n        socket.close();\n      } else if(socketTask.type === 'setup') {\n        const socket = new Socket(socketTask.payload.dcId, socketTask.payload.url, socketTask.payload.logSuffix);\n        \n        const onOpen = () => {\n          //console.log('socketProxy onOpen');\n          this.postMessage({\n            type: 'socketProxy', \n            payload: {\n              type: 'open',\n              id\n            }\n          });\n        };\n        const onClose = () => {\n          this.postMessage({\n            type: 'socketProxy', \n            payload: {\n              type: 'close',\n              id\n            }\n          });\n\n          socket.removeEventListener('open', onOpen);\n          socket.removeEventListener('close', onClose);\n          socket.removeEventListener('message', onMessage);\n          this.sockets.delete(id);\n        };\n        const onMessage = (buffer: ArrayBuffer) => {\n          this.postMessage({\n            type: 'socketProxy', \n            payload: {\n              type: 'message',\n              id,\n              payload: buffer\n            }\n          });\n        };\n\n        socket.addEventListener('open', onOpen);\n        socket.addEventListener('close', onClose);\n        socket.addEventListener('message', onMessage);\n        this.sockets.set(id, socket);\n      }\n    });\n\n    this.addTaskListener('localStorageProxy', (task: LocalStorageProxyTask) => {\n      const storageTask = task.payload;\n      // @ts-ignore\n      sessionStorage[storageTask.type](...storageTask.args).then(res => {\n        this.postMessage({\n          type: 'localStorageProxy',\n          id: task.id,\n          payload: res\n        } as LocalStorageProxyTaskResponse);\n      });\n    });\n\n    rootScope.addEventListener('language_change', (language) => {\n      this.performTaskWorkerVoid('setLanguage', language);\n    });\n\n    window.addEventListener('online', (event) => {\n      this.forceReconnectTimeout();\n    });\n\n                       \n    this.registerWorker();\n              \n  }\n\n  public isServiceWorkerOnline() {\n    return this.isSWRegistered;\n  }\n\n  private registerServiceWorker() {\n    if(!('serviceWorker' in navigator)) return;\n    \n    const worker = navigator.serviceWorker;\n    worker.register('./sw.js', {scope: './'}).then(registration => {\n      this.log('SW registered', registration);\n      this.isSWRegistered = true;\n\n      const sw = registration.installing || registration.waiting || registration.active;\n      sw.addEventListener('statechange', (e) => {\n        this.log('SW statechange', e);\n      });\n\n      //this.postSWMessage = worker.controller.postMessage.bind(worker.controller);\n\n                        \n                                                                                                                     \n                                            \n                \n    }, (err) => {\n      this.isSWRegistered = false;\n      this.log.error('SW registration failed!', err);\n\n      if(this.onServiceWorkerFail) {\n        this.onServiceWorkerFail();\n      }\n    });\n\n    worker.addEventListener('controllerchange', () => {\n      this.log.warn('controllerchange');\n      this.releasePending();\n\n      worker.controller.addEventListener('error', (e) => {\n        this.log.error('controller error:', e);\n      });\n    });\n\n                      \n                                                             \n             \n    worker.addEventListener('message', (e) => {\n      const task: ServiceWorkerTask = e.data;\n      if(!isObject(task)) {\n        return;\n      }\n\n      const callback = this.taskListenersSW[task.type];\n      if(callback) {\n        callback(task);\n      }\n    });\n\n    this.addServiceWorkerTaskListener('requestFilePart', (task: RequestFilePartTask) => {\n      const responseTask: RequestFilePartTaskResponse = {\n        type: task.type,\n        id: task.id\n      };\n      \n      this.performTaskWorker<Awaited<ReturnType<ApiFileManager['requestFilePart']>>>('requestFilePart', ...task.payload)\n      .then((uploadFile) => {\n        responseTask.payload = uploadFile;\n        this.postSWMessage(responseTask);\n      }, (err) => {\n        responseTask.originalPayload = task.payload;\n        responseTask.error = err;\n        this.postSWMessage(responseTask);\n      });\n    });\n\n              \n\n    worker.addEventListener('messageerror', (e) => {\n      this.log.error('SW messageerror:', e);\n    });\n  }\n\n  public postMessage(...args: any[]) {\n    this.postMessagesWaiting.push(args);\n  }\n\n  public postSWMessage(message: any) {\n    if(navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage(message);\n    }\n  }\n\n  private onWorkerFirstMessage(worker: any) {\n    if(!this.worker) {\n      this.worker = worker;\n      this.log('set webWorker');\n\n      this.postMessage = this.worker.postMessage.bind(this.worker);\n\n      this.postMessagesWaiting.forEach(args => this.postMessage(...args));\n      this.postMessagesWaiting.length = 0;\n\n      const isWebpSupported = webpWorkerController.isWebpSupported();\n      this.log('WebP supported:', isWebpSupported);\n      this.postMessage({type: 'webpSupport', payload: isWebpSupported});\n      this.postMessage({type: 'userAgent', payload: navigator.userAgent});\n\n      this.releasePending();\n    }\n  }\n\n  public addTaskListener(name: keyof ApiManagerProxy['taskListeners'], callback: ApiManagerProxy['taskListeners'][typeof name]) {\n    this.taskListeners[name] = callback;\n  }\n\n  public addServiceWorkerTaskListener(name: keyof ApiManagerProxy['taskListenersSW'], callback: ApiManagerProxy['taskListenersSW'][typeof name]) {\n    this.taskListenersSW[name] = callback;\n  }\n\n  private onWorkerMessage = (e: MessageEvent) => {\n    //this.log('got message from worker:', e.data);\n\n    const task = e.data;\n\n    if(!isObject(task)) {\n      return;\n    }\n\n    const callback = this.taskListeners[task.type];\n    if(callback) {\n      callback(task);\n      return;\n    }\n\n    if(task.update) {\n      if(this.updatesProcessor) {\n        this.updatesProcessor(task.update);\n      }\n    } else if(task.progress) {\n      rootScope.dispatchEvent('download_progress', task.progress);\n    } else if(task.hasOwnProperty('result') || task.hasOwnProperty('error')) {\n      this.finalizeTask(task.taskId, task.result, task.error);\n    }\n  };\n\n                     \n  private registerWorker() {\n    //return;\n\n    const worker = new MTProtoWorker();\n    //const worker = window;\n    worker.addEventListener('message', this.onWorkerFirstMessage.bind(this, worker), {once: true});\n    worker.addEventListener('message', this.onWorkerMessage);\n\n    worker.addEventListener('error', (err) => {\n      this.log.error('WORKER ERROR', err);\n    });\n  }\n            \n\n  private finalizeTask(taskId: number, result: any, error: any) {\n    const deferred = this.awaiting[taskId];\n    if(deferred !== undefined) {\n      this.debug && this.log.debug('done', deferred.taskName, result, error);\n      error ? deferred.reject(error) : deferred.resolve(result);\n      delete this.awaiting[taskId];\n    }\n  }\n\n  public performTaskWorkerVoid(task: string, ...args: any[]) {\n    const params = {\n      task,\n      taskId: this.taskId,\n      args\n    };\n\n    this.pending.push(params);\n    this.releasePending();\n\n    this.taskId++;\n  }\n\n  public performTaskWorker<T>(task: string, ...args: any[]) {\n    this.debug && this.log.debug('start', task, args);\n\n    return new Promise<T>((resolve, reject) => {\n      this.awaiting[this.taskId] = {resolve, reject, taskName: task};\n      this.performTaskWorkerVoid(task, ...args);\n    });\n  }\n\n  private releasePending() {\n    //return;\n\n    if(this.postMessage) {\n      this.debug && this.log.debug('releasing tasks, length:', this.pending.length);\n      this.pending.forEach(pending => {\n        this.postMessage(pending);\n      });\n      \n      this.debug && this.log.debug('released tasks');\n      this.pending.length = 0;\n    }\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n  }\n\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    //console.log('will invokeApi:', method, params, options);\n    return this.performTaskWorker('invokeApi', method, params, options);\n  }\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n    \n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    //console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap>(method: T, params: Omit<MethodDeclMap[T]['req'], 'hash'> = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    //console.log('will invokeApi:', method, params, options);\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        (params as any).hash = cached.hash;\n      }\n    }\n\n    return this.invokeApi(method, params, options).then((result: any) => {\n      if(result._.includes('NotModified')) {\n        this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n        return cached.result;\n      }\n      \n      if(result.hash/*  || result.messages */) {\n        const hash = result.hash/*  || this.computeHash(result.messages) */;\n        \n        if(!this.hashes[method]) this.hashes[method] = {};\n        this.hashes[method][queryJSON] = {\n          hash,\n          result\n        };\n      }\n\n      return result;\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    if(this.apiPromisesSingle[q]) {\n      return this.apiPromisesSingle[q];\n    }\n\n    return this.apiPromisesSingle[q] = this.invokeApi(method, params, options).finally(() => {\n      delete this.apiPromisesSingle[q];\n    });\n  }\n\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\n    const queryJSON = JSON.stringify(params);\n    const item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item && item.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = window.setTimeout(() => {\n        delete cache[queryJSON];\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        if(verify(item.params)) {\n          if(item.timeout) {\n            clearTimeout(item.timeout);\n          }\n\n          delete cache[queryJSON];\n        }\n      }\n    }\n  }\n\n  /* private computeHash(smth: any[]) {\n    smth = smth.slice().sort((a, b) => a.id - b.id);\n    //return smth.reduce((hash, v) => (((hash * 0x4F25) & 0x7FFFFFFF) + v.id) & 0x7FFFFFFF, 0);\n    return smth.reduce((hash, v) => ((hash * 20261) + 0x80000000 + v.id) % 0x80000000, 0);\n  } */\n\n  public setBaseDcId(dcId: number) {\n    return this.performTaskWorker('setBaseDcId', dcId);\n  }\n\n  public setQueueId(queueId: number) {\n    return this.performTaskWorker('setQueueId', queueId);\n  }\n\n  public setUserAuth(userAuth: UserAuth | number) {\n    if(typeof(userAuth) === 'number') {\n      userAuth = {dcID: 0, date: Date.now() / 1000 | 0, id: userAuth};\n    }\n    \n    rootScope.dispatchEvent('user_auth', userAuth);\n    return this.performTaskWorker('setUserAuth', userAuth);\n  }\n\n  public getNetworker(dc_id: number, options?: InvokeApiOptions) {\n    return this.performTaskWorker('getNetworker', dc_id, options);\n  }\n\n  public logOut(): Promise<void> {\n    // AppStorage.toggleStorage(false);\n    return this.performTaskWorker('logOut');\n  }\n\n  public cancelDownload(fileName: string) {\n    return this.performTaskWorker('cancelDownload', fileName);\n  }\n\n  public downloadFile(options: DownloadOptions) {\n    return this.performTaskWorker<Blob>('downloadFile', options);\n  }\n\n  public uploadFile(options: {file: Blob | File, fileName: string}) {\n    return this.performTaskWorker<InputFile>('uploadFile', options);\n  }\n\n  public toggleStorage(enabled: boolean) {\n    const task: ToggleStorageTask = {type: 'toggleStorage', payload: enabled};\n    this.postMessage(task);\n    this.postSWMessage(task);\n  }\n\n  public stopAll() {\n    return this.performTaskWorkerVoid('stopAll');\n  }\n\n  public startAll() {\n    return this.performTaskWorkerVoid('startAll');\n  }\n\n  public forceReconnectTimeout() {\n    this.postMessage({type: 'online'});\n  }\n\n  public forceReconnect() {\n    this.postMessage({type: 'forceReconnect'});\n  }\n}\n\nconst apiManagerProxy = new ApiManagerProxy();\nMOUNT_CLASS_TO.apiManagerProxy = apiManagerProxy;\nexport default apiManagerProxy;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Awaited } from \"../../types\";\nimport type { aesEncryptSync, aesDecryptSync, sha256HashSync, sha1HashSync, bytesModPow, hash_pbkdf2, rsaEncrypt, pqPrimeFactorization, gzipUncompress } from \"./crypto_utils\";\nimport type { computeSRP } from \"./srp\";\n\nexport type CryptoMethods = {\n  'sha1-hash': typeof sha1HashSync,\n  'sha256-hash': typeof sha256HashSync,\n  'pbkdf2': typeof hash_pbkdf2,\n  'aes-encrypt': typeof aesEncryptSync,\n  'aes-decrypt': typeof aesDecryptSync,\n  'rsa-encrypt': typeof rsaEncrypt,\n  'factorize': typeof pqPrimeFactorization,\n  'mod-pow': typeof bytesModPow,\n  'gzipUncompress': typeof gzipUncompress,\n  'computeSRP': typeof computeSRP\n};\n\nexport default abstract class CryptoWorkerMethods {\n  abstract performTaskWorker<T>(task: string, ...args: any[]): Promise<T>;\n\n  public invokeCrypto<Method extends keyof CryptoMethods>(method: Method, ...args: Parameters<CryptoMethods[typeof method]>): Promise<Awaited<ReturnType<CryptoMethods[typeof method]>>> {\n    return this.performTaskWorker<Awaited<ReturnType<CryptoMethods[typeof method]>>>(method, ...args as any[]);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport I18n from \"../lib/langPack\";\n\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nexport const ONE_DAY = 86400;\n\n// https://stackoverflow.com/a/6117889\nexport const getWeekNumber = (date: Date) => {\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  const dayNum = d.getUTCDay() || 7;\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\n};\n\nexport const formatDateAccordingToToday = (time: Date) => {\n  const date = new Date();\n  const now = date.getTime() / 1000 | 0;\n  const timestamp = time.getTime() / 1000 | 0;\n\n  let timeStr: string;\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\n    timeStr = ('0' + time.getHours()).slice(-2) + ':' + ('0' + time.getMinutes()).slice(-2);\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\n    timeStr = time.getDate() + '.' + ('0' + (time.getMonth() + 1)).slice(-2) + '.' + ('' + time.getFullYear()).slice(-2);\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(date) === getWeekNumber(time)) { // current week\n    timeStr = days[time.getDay()].slice(0, 3);\n  } else { // same year\n    timeStr = months[time.getMonth()].slice(0, 3) + ' ' + ('0' + time.getDate()).slice(-2);\n  }\n\n  return timeStr;\n};\n\nexport function formatDateAccordingToTodayNew(time: Date) {\n  const today = new Date();\n  const now = today.getTime() / 1000 | 0;\n  const timestamp = time.getTime() / 1000 | 0;\n\n  const options: Intl.DateTimeFormatOptions = {};\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\n    options.hour = options.minute = '2-digit';\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\n    options.year = options.day = 'numeric';\n    options.month = '2-digit';\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\n    options.weekday = 'short';\n  } else { // same year\n    options.month = 'short';\n    options.day = 'numeric';\n  }\n\n  return new I18n.IntlDateElement({\n    date: time,\n    options\n  }).element;\n}\n\nexport function formatTime(date: Date) {\n  return new I18n.IntlDateElement({\n    date,\n    options: {\n      hour: '2-digit',\n      minute: '2-digit'\n    }\n  }).element;\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\n\nexport const getFullDate = (date: Date, options: Partial<{\n  noTime: true, \n  noSeconds: true,\n  monthAsNumber: true,\n  leadingZero: true\n}> = {}) => {\n  const joiner = options.monthAsNumber ? '.' : ' ';\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\n\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) + \n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) + \n    joiner + date.getFullYear() + \n    (options.noTime ? '' : ', ' + time);\n};\n\nexport function tsNow(seconds?: true) {\n  const t = Date.now();\n  return seconds ? t / 1000 | 0 : t;\n}\n\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\nconst minYear = 2013;\nconst yearPattern = new RegExp(\"20[0-9]{1,2}\");\nconst monthYearOrDayPattern = new RegExp(\"(\\\\w{3,}) ([0-9]{0,4})\", 'i');\nconst yearOrDayAndMonthPattern = new RegExp(\"([0-9]{0,4}) (\\\\w{2,})\", 'i');\nconst shortDate = new RegExp(\"^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\nconst longDate = new RegExp(\"^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexport type DateData = {\n  title: string,\n  minDate: number,\n  maxDate: number,\n};\nexport function fillTipDates(query: string, dates: DateData[]) {\n  const q = query.trim().toLowerCase();\n\n  if(q.length < 3) {\n    return;\n  }\n\n  if(\"today\".indexOf(q) === 0) {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime();\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 1;\n    dates.push({\n      title: 'Today',\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  if(\"yesterday\".indexOf(q) === 0) {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime() - 86400000;\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 86400001;\n    dates.push({\n      title: 'Yesterday',\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  const dayOfWeek = getDayOfWeek(q);\n  if(dayOfWeek >= 0) {\n    const date = new Date();\n    const now = date.getTime();\n    const currentDay = date.getDay();\n    const distance = dayOfWeek - currentDay;\n    date.setDate(date.getDate() + distance);\n    if(date.getTime() > now) {\n      date.setTime(date.getTime() - 604800000);\n    }\n    const year = date.getFullYear()\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime();\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 1;\n    dates.push({\n      title: formatWeekLong(minDate),\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  let matches: any[];\n  if((matches = shortDate.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[3];\n    const k = parseInt(g1);\n    const k1 = parseInt(g2);\n    if(k > 0 && k <= 31) {\n      if(k1 >= minYear && k <= 12) {\n        const selectedYear = k1;\n        const month = k - 1;\n        createForMonthYear(dates, month, selectedYear);\n        return;\n      } else if (k1 <= 12) {\n        const day = k - 1;\n        const month = k1 - 1;\n        createForDayMonth(dates, day, month);\n      }\n    } else if (k >= minYear && k1 <= 12) {\n      const selectedYear = k;\n      const month = k1 - 1;\n      createForMonthYear(dates, month, selectedYear);\n    }\n\n    return;\n  }\n\n  if((matches = longDate.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[3];\n    const g3 = matches[5];\n    if(!matches[2] === matches[4]) {\n      return;\n    }\n\n    const day = parseInt(g1);\n    const month = parseInt(g2) - 1;\n    let year = parseInt(g3);\n    if(year >= 10 && year <= 99) {\n      year += 2000;\n    }\n\n    const currentYear = new Date().getFullYear();\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\n      const date = new Date();\n      date.setFullYear(year, month, day);\n      date.setHours(0, 0, 0);\n      \n      const minDate = date.getTime();\n      date.setFullYear(year, month, day + 1);\n      date.setHours(0, 0, 0);\n\n      const maxDate = date.getTime() - 1;\n      dates.push({\n        title: formatterYearMax(minDate),\n        minDate,\n        maxDate\n      });\n      return;\n    }\n\n    return;\n  }\n\n  if((matches = yearPattern.exec(q)) !== null) {\n    let selectedYear = +q;\n    const currentYear = new Date().getFullYear();\n    if(selectedYear < minYear) {\n      selectedYear = minYear;\n      for(let i = currentYear; i >= selectedYear; i--) {\n        const date = new Date();\n        date.setFullYear(i, 0, 1);\n        date.setHours(0, 0, 0);\n\n        const minDate = date.getTime();\n        date.setFullYear(i + 1, 0, 1);\n        date.setHours(0, 0, 0);\n\n        const maxDate = date.getTime() - 1;\n        dates.push({\n          title: '' + i,\n          minDate,\n          maxDate\n        });\n      }\n    } else if(selectedYear <= currentYear) {\n      const date = new Date();\n      date.setFullYear(selectedYear, 0, 1);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      date.setFullYear(selectedYear + 1, 0, 1);\n      date.setHours(0, 0, 0);\n\n      const maxDate = date.getTime() - 1;\n      dates.push({\n        title: '' + selectedYear,\n        minDate,\n        maxDate\n      });\n    }\n\n    return;\n  }\n\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[2];\n    const month = getMonth(g1);\n    if(month >= 0) {\n      const k = +g2;\n      if(k > 0 && k <= 31) {\n        const day = k - 1;\n        createForDayMonth(dates, day, month);\n        return;\n      } else if(k >= minYear) {\n        const selectedYear = k;\n        createForMonthYear(dates, month, selectedYear);\n        return;\n      }\n    }\n  }\n\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[2];\n    const month = getMonth(g2);\n    if(month >= 0) {\n      const k = +g1;\n      if(k > 0 && k <= 31) {\n        const day = k - 1;\n        createForDayMonth(dates, day, month);\n        return;\n      } else if (k >= minYear) {\n        const selectedYear = k;\n        createForMonthYear(dates, month, selectedYear);\n      }\n    }\n  }\n}\n\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\n  const currentYear = new Date().getFullYear();\n  const today = Date.now();\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\n    const date = new Date();\n    date.setFullYear(selectedYear, month, 1);\n    date.setHours(0, 0, 0);\n    const minDate = date.getTime();\n    if(minDate > today) {\n      return;\n    }\n    date.setMonth(date.getMonth() + 1);\n    const maxDate = date.getTime() - 1;\n\n    dates.push({\n      title: formatterMonthYear(minDate),\n      minDate,\n      maxDate\n    });\n  }\n}\n\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\n  if(validDateForMonth(day, month)) {\n    const currentYear = new Date().getFullYear();\n    const today = Date.now();\n    \n    for(let i = currentYear; i >= minYear; i--) {\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\n        continue;\n      }\n\n      const date = new Date();\n      date.setFullYear(i, month, day + 1);\n      date.setHours(0, 0, 0);\n      \n      const minDate = date.getTime();\n      if(minDate > today) {\n        continue;\n      }\n\n      date.setFullYear(i, month, day + 2);\n      date.setHours(0, 0, 0);\n      const maxDate = date.getTime() - 1;\n      if(i === currentYear) {\n        dates.push({\n          title: formatterDayMonth(minDate),\n          minDate,\n          maxDate\n        });\n      } else {\n        dates.push({\n          title: formatterYearMax(minDate),\n          minDate,\n          maxDate\n        });\n      }\n    }\n  }\n}\n\nfunction formatterMonthYear(timestamp: number) {\n  const date = new Date(timestamp);\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getFullYear();\n}\n\nfunction formatterDayMonth(timestamp: number) {\n  const date = new Date(timestamp);\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getDate();\n}\n\nfunction formatterYearMax(timestamp: number) {\n  const date = new Date(timestamp);\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\n}\n\nfunction formatWeekLong(timestamp: number) {\n  const date = new Date(timestamp);\n  return days[date.getDay()];\n}\n\nfunction validDateForMonth(day: number, month: number) {\n  if(month >= 0 && month < 12) {\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isLeapYear(year: number) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nfunction getMonth(q: string) {\n  /* String[] months = new String[]{\n          LocaleController.getString(\"January\", R.string.January).toLowerCase(),\n          LocaleController.getString(\"February\", R.string.February).toLowerCase(),\n          LocaleController.getString(\"March\", R.string.March).toLowerCase(),\n          LocaleController.getString(\"April\", R.string.April).toLowerCase(),\n          LocaleController.getString(\"May\", R.string.May).toLowerCase(),\n          LocaleController.getString(\"June\", R.string.June).toLowerCase(),\n          LocaleController.getString(\"July\", R.string.July).toLowerCase(),\n          LocaleController.getString(\"August\", R.string.August).toLowerCase(),\n          LocaleController.getString(\"September\", R.string.September).toLowerCase(),\n          LocaleController.getString(\"October\", R.string.October).toLowerCase(),\n          LocaleController.getString(\"November\", R.string.November).toLowerCase(),\n          LocaleController.getString(\"December\", R.string.December).toLowerCase()\n  }; */\n\n  /* String[] monthsEng = new String[12];\n  Calendar c = Calendar.getInstance();\n  for (int i = 1; i <= 12; i++) {\n      c.set(0, 0, 0, 0, 0, 0);\n      c.set(Calendar.MONTH, i);\n      monthsEng[i - 1] = c.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.ENGLISH).toLowerCase();\n  } */\n\n  q = q.toLowerCase();\n  for(let i = 0; i < 12; i++) {\n    const month = months[i].toLowerCase();\n    if(month.indexOf(q) === 0) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getDayOfWeek(q: string) {\n  const c = new Date();\n  if(q.length <= 3) {\n    return -1;\n  }\n  \n  for(let i = 0; i < 7; i++) {\n    c.setDate(c.getDate() + 1);\n    \n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\n      return c.getDay();\n    }\n  }\n  return -1;\n}\n\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n/* export function stringMiddleOverflow(str: string, maxLength: number) {\n  return str.length > maxLength ? str.slice(0, maxLength / 2 | 0) + '...' + str.slice(-Math.round(maxLength / 2)) : str; \n} */\n\nexport function limitSymbols(str: string, length: number, limitFrom = length + 10) {\n  str = str.trim();\n  if(str.length > limitFrom) {\n    str = str.slice(0, length)/* .replace(/\\s*$/, '') */ + '...';\n  }\n\n  return str;\n}\n\n// credits to https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\nexport function escapeRegExp(str: string) {\n  return str\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n    .replace(/-/g, '\\\\x2d');\n}\n\nexport function encodeEntities(value: string) {\n  return value.replace(/&/g, '&amp;').replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, (value) => {\n    var hi = value.charCodeAt(0);\n    var low = value.charCodeAt(1);\n    return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n  }).replace(/([^\\#-~| |!])/g, (value) => { // non-alphanumeric\n    return '&#' + value.charCodeAt(0) + ';';\n  }).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nexport function splitStringByLength(str: string, maxLength: number) {\n  if(str.length < maxLength) return [str];\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\n  const delimiter = ' ';//'\\n';\n  const out: string[] = [];\n\n  const cut = (end?: number) => {\n    let part = str.slice(lastSliceStartIndex, end);\n    const _arrayIndex = arrayIndex++;\n    if(part.length > maxLength) {\n      let overflowPart = part.slice(maxLength);\n      const splitted = splitStringByLength(overflowPart, maxLength);\n      splitted.forEach(part => {\n        out[arrayIndex++] = part;\n      });\n\n      part = part.slice(0, maxLength);\n    }\n\n    lastSliceStartIndex = end;\n    length = 0;\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\n  };\n\n  let lastIndex = 0;\n  do {\n    let index = str.indexOf(delimiter, lastIndex);\n    if(index === -1) {\n      if(lastIndex !== (str.length - 1)) {\n        cut();\n      }\n\n      break;\n    }\n\n    index += delimiter.length;\n\n    const partLength = index - lastIndex;\n    if((length + partLength) > maxLength) {\n      cut(length);\n    }\n    \n    lastIndex = index;\n    length += partLength;\n  } while(true);\n\n  return out;\n}\n\n// https://stackoverflow.com/a/14824756\n/* export const checkRTL = (s: string) => {           \n  const ltrChars  = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF'+'\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF',\n    rtlChars      = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC',\n    rtlDirCheck   = new RegExp('^[^'+ltrChars+']*['+rtlChars+']');\n\n  return rtlDirCheck.test(s);\n}; */\n\n//(window as any).checkRTL = checkRTL;\n\nexport function convertInputKeyToKey<T extends string>(inputKey: string) {\n  const str = inputKey.replace('input', '');\n  return (str[0].toLowerCase() + str.slice(1)) as T;\n}\n\nexport function convertKeyToInputKey(key: string) {\n  key = key[0].toUpperCase() + key.slice(1);\n  key = 'input' + key;\n  return key;\n}\n\nexport function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n"],"sourceRoot":""}
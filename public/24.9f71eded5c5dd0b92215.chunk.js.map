{"version":3,"sources":["webpack:///./src/pages/pageSignQR.ts","webpack:///./src/components/languageChangeButton.ts"],"names":["cachedPromise","page","imageDiv","pageEl","querySelector","preloader","inputWrapper","document","createElement","classList","add","btnBack","text","append","container","parentElement","h4","helpList","forEach","key","li","addEventListener","then","m","default","mount","stop","QRCodeStyling","Promise","all","prevToken","options","ignoreErrors","iterate","isLoop","loginToken","invokeApi","api_id","id","api_hash","hash","except_ids","_","dcId","dc_id","setBaseDcId","token","authorization","setUserAuth","user","url","replace","style","window","getComputedStyle","documentElement","surfaceColor","getPropertyValue","trim","textColor","primaryColor","logoUrl","fetch","res","blob","Blob","type","resolve","reader","FileReader","onload","e","target","result","readAsDataURL","qrCode","width","devicePixelRatio","height","data","image","dotsOptions","color","cornersSquareOptions","imageOptions","imageSize","margin","backgroundOptions","qrOptions","errorCorrectionLevel","promise","lastChild","_drawingPromise","race","_canvas","_image","requestAnimationFrame","once","animation","c","children","display","setTimeout","undefined","Array","from","slice","el","remove","timestamp","Date","now","diff","expires","serverTimeOffset","err","console","warn","handled","error","func","pushToState","set","times","getLanguageChangeButton","appendTo","invokeApiCacheable","config","suggested_lang_code","lastRequestedLangCode","getStrings","getCacheLangPack","strings","backup","string","backupString","get","push","btnChangeLanguage","disabled","getLangPack","log"],"mappings":"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","file":"24.9f71eded5c5dd0b92215.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { DcId } from '../types';\r\nimport apiManager from '../lib/mtproto/mtprotoworker';\r\nimport Page from './page';\r\nimport serverTimeManager from '../lib/mtproto/serverTimeManager';\r\nimport { AuthAuthorization, AuthLoginToken } from '../layer';\r\nimport { bytesCmp, bytesToBase64 } from '../helpers/bytes';\r\nimport { pause } from '../helpers/schedulers';\r\nimport App from '../config/app';\r\nimport Button from '../components/button';\r\nimport { _i18n, i18n, LangPackKey } from '../lib/langPack';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport rootScope from '../lib/rootScope';\r\nimport { putPreloader } from '../components/misc';\r\nimport getLanguageChangeButton from '../components/languageChangeButton';\r\n\r\nconst FETCH_INTERVAL = 3;\r\n\r\nlet onFirstMount = async() => {\r\n  const pageElement = page.pageEl;\r\n  const imageDiv = pageElement.querySelector('.auth-image') as HTMLDivElement;\r\n\r\n  let preloader = putPreloader(imageDiv, true);\r\n\r\n  const inputWrapper = document.createElement('div');\r\n  inputWrapper.classList.add('input-wrapper');\r\n\r\n  const btnBack = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Cancel'});\r\n  inputWrapper.append(btnBack);\r\n\r\n  getLanguageChangeButton(inputWrapper);\r\n\r\n  const container = imageDiv.parentElement;\r\n\r\n  const h4 = document.createElement('h4');\r\n  _i18n(h4, 'Login.QR.Title');\r\n\r\n  const helpList = document.createElement('ol');\r\n  helpList.classList.add('qr-description');\r\n  (['Login.QR.Help1', 'Login.QR.Help2', 'Login.QR.Help3'] as LangPackKey[]).forEach((key) => {\r\n    const li = document.createElement('li');\r\n    li.append(i18n(key));\r\n    helpList.append(li);\r\n  });\r\n\r\n  container.append(h4, helpList, inputWrapper);\r\n\r\n  btnBack.addEventListener('click', () => {\r\n    import('./pageSignIn').then(m => m.default.mount());\r\n    stop = true;\r\n  });\r\n  \r\n  const results = await Promise.all([\r\n    import('qr-code-styling' as any)\r\n  ]);\r\n  const QRCodeStyling = results[0].default;\r\n\r\n  let stop = false;\r\n  rootScope.addEventListener('user_auth', () => {\r\n    stop = true;\r\n    cachedPromise = null;\r\n  }, true);\r\n  \r\n  let options: {dcId?: DcId, ignoreErrors: true} = {ignoreErrors: true};\r\n  let prevToken: Uint8Array | number[];\r\n\r\n  const iterate = async(isLoop: boolean) => {\r\n    try {\r\n      let loginToken = await apiManager.invokeApi('auth.exportLoginToken', {\r\n        api_id: App.id,\r\n        api_hash: App.hash,\r\n        except_ids: []\r\n      }, {ignoreErrors: true});\r\n  \r\n      if(loginToken._ === 'auth.loginTokenMigrateTo') {\r\n        if(!options.dcId) {\r\n          options.dcId = loginToken.dc_id as DcId;\r\n          apiManager.setBaseDcId(loginToken.dc_id);\r\n          //continue;\r\n        }\r\n        \r\n        loginToken = await apiManager.invokeApi('auth.importLoginToken', {\r\n          token: loginToken.token\r\n        }, options) as AuthLoginToken.authLoginToken;\r\n      }\r\n\r\n      if(loginToken._ === 'auth.loginTokenSuccess') {\r\n        const authorization = loginToken.authorization as any as AuthAuthorization.authAuthorization;\r\n        apiManager.setUserAuth(authorization.user.id);\r\n        import('./pageIm').then(m => m.default.mount());\r\n        return true;\r\n      }\r\n\r\n      /* // to base64\r\n      var decoder = new TextDecoder('utf8');\r\n      var b64encoded = btoa(String.fromCharCode.apply(null, [...loginToken.token])); */\r\n\r\n      if(!prevToken || !bytesCmp(prevToken, loginToken.token)) {\r\n        prevToken = loginToken.token;\r\n\r\n        let encoded = bytesToBase64(loginToken.token);\r\n        let url = \"tg://login?token=\" + encoded.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=+$/, \"\");\r\n\r\n        const style = window.getComputedStyle(document.documentElement);\r\n        const surfaceColor = style.getPropertyValue('--surface-color').trim();\r\n        const textColor = style.getPropertyValue('--primary-text-color').trim();\r\n        const primaryColor = style.getPropertyValue('--primary-color').trim();\r\n\r\n        const logoUrl = await fetch('assets/img/logo_padded.svg')\r\n        .then(res => res.text())\r\n        .then(text => {\r\n          text = text.replace(/(fill:).+?(;)/, `$1${primaryColor}$2`);\r\n          const blob = new Blob([text], {type: 'image/svg+xml;charset=utf-8'});\r\n\r\n          // * because iOS Safari doesn't want to eat objectURL\r\n          return new Promise<string>((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n              resolve(e.target.result as string);\r\n            };\r\n            reader.readAsDataURL(blob);\r\n          });\r\n          //return URL.createObjectURL(blob);\r\n        });\r\n\r\n        const qrCode = new QRCodeStyling({\r\n          width: 240 * window.devicePixelRatio,\r\n          height: 240 * window.devicePixelRatio,\r\n          data: url,\r\n          image: logoUrl,\r\n          dotsOptions: {\r\n            color: textColor,\r\n            type: 'rounded'\r\n          },\r\n          cornersSquareOptions: {\r\n            type: 'extra-rounded'\r\n          },\r\n          imageOptions: {\r\n            imageSize: 1,\r\n            margin: 0\r\n          },\r\n          backgroundOptions: {\r\n            color: surfaceColor\r\n          },\r\n          qrOptions: {\r\n            errorCorrectionLevel: \"L\"\r\n          }\r\n        });\r\n\r\n        qrCode.append(imageDiv);\r\n        (imageDiv.lastChild as HTMLCanvasElement).classList.add('qr-canvas');\r\n\r\n        let promise: Promise<void>;\r\n        if(qrCode._drawingPromise) {\r\n          promise = qrCode._drawingPromise;\r\n        } else {\r\n          promise = Promise.race([\r\n            pause(1000),\r\n            new Promise<void>((resolve) => {\r\n              qrCode._canvas._image.addEventListener('load', () => {\r\n                window.requestAnimationFrame(() => resolve());\r\n              }, {once: true});\r\n            })\r\n          ]);\r\n        }\r\n\r\n        // * это костыль, но библиотека не предоставляет никаких событий\r\n        await promise.then(() => {\r\n          if(preloader) {\r\n            preloader.style.animation = 'hide-icon .4s forwards';\r\n\r\n            const c = imageDiv.children[1] as HTMLElement;\r\n            c.style.display = 'none';\r\n            c.style.animation = 'grow-icon .4s forwards';\r\n            setTimeout(() => {\r\n              c.style.display = '';\r\n            }, 150);\r\n\r\n            setTimeout(() => {\r\n              c.style.animation = '';\r\n            }, 500);\r\n            preloader = undefined;\r\n          } else {\r\n            Array.from(imageDiv.children).slice(0, -1).forEach(el => {\r\n              el.remove();\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      if(isLoop) {\r\n        let timestamp = Date.now() / 1000;\r\n        let diff = loginToken.expires - timestamp - serverTimeManager.serverTimeOffset;\r\n  \r\n        await pause(diff > FETCH_INTERVAL ? 1e3 * FETCH_INTERVAL : 1e3 * diff | 0);\r\n      }\r\n    } catch(err) {\r\n      switch(err.type) {\r\n        case 'SESSION_PASSWORD_NEEDED':\r\n          console.warn('pageSignQR: SESSION_PASSWORD_NEEDED');\r\n          err.handled = true;\r\n          import('./pagePassword').then(m => m.default.mount());\r\n          stop = true;\r\n          cachedPromise = null;\r\n          break;\r\n        default:\r\n          console.error('pageSignQR: default error:', err);\r\n          stop = true;\r\n          break;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //await iterate(false);\r\n\r\n  return async() => {\r\n    stop = false;\r\n\r\n    do {\r\n      if(stop) {\r\n        break;\r\n      }\r\n  \r\n      const needBreak = await iterate(true);\r\n      if(needBreak) {\r\n        break;\r\n      }\r\n    } while(true);\r\n  };\r\n};\r\n\r\nlet cachedPromise: Promise<() => Promise<void>>;\r\nconst page = new Page('page-signQR', true, () => {\r\n  return cachedPromise;\r\n}, () => {\r\n  //console.log('onMount');\r\n  if(!cachedPromise) cachedPromise = onFirstMount();\r\n  cachedPromise.then(func => {\r\n    func();\r\n  });\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateSignQr'});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\r\nimport loadFonts from \"../helpers/dom/loadFonts\";\r\nimport { Config, LangPackDifference, LangPackString } from \"../layer\";\r\nimport I18n, { LangPackKey } from \"../lib/langPack\";\r\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport Button from \"./button\";\r\nimport { putPreloader } from \"./misc\";\r\n\r\nlet set = false, times = 0;\r\nrootScope.addEventListener('language_change', () => {\r\n  if(++times < 2) {\r\n    return;\r\n  }\r\n\r\n  console.log('language_change');\r\n  set = true;\r\n});\r\n\r\nfunction getLang(): Promise<[Config.config, LangPackString[], LangPackDifference.langPackDifference]> {\r\n  if(cachedPromise) return cachedPromise;\r\n  return cachedPromise = apiManager.invokeApiCacheable('help.getConfig').then(config => {\r\n    if(config.suggested_lang_code !== I18n.lastRequestedLangCode) {\r\n      //I18n.loadLangPack(config.suggested_lang_code);\r\n\r\n      return Promise.all([\r\n        config,\r\n        I18n.getStrings(config.suggested_lang_code, ['Login.ContinueOnLanguage']),\r\n        I18n.getCacheLangPack()\r\n      ]);\r\n    } else {\r\n      return [] as any;\r\n    }\r\n  });\r\n}\r\n\r\nlet cachedPromise: ReturnType<typeof getLang>;\r\n\r\nexport default function getLanguageChangeButton(appendTo: HTMLElement) {\r\n  if(set) return;\r\n  getLang().then(([config, strings]) => {\r\n    if(!config) {\r\n      return;\r\n    }\r\n\r\n    const backup: LangPackString[] = [];\r\n    strings.forEach(string => {\r\n      const backupString = I18n.strings.get(string.key as LangPackKey);\r\n      if(!backupString) {\r\n        return;\r\n      }\r\n      \r\n      backup.push(backupString);\r\n      I18n.strings.set(string.key as LangPackKey, string);\r\n    });\r\n\r\n    const btnChangeLanguage = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.ContinueOnLanguage'});\r\n    loadFonts().then(() => {\r\n      window.requestAnimationFrame(() => {\r\n        appendTo.append(btnChangeLanguage);\r\n      });\r\n    });\r\n\r\n    rootScope.addEventListener('language_change', () => {\r\n      btnChangeLanguage.remove();\r\n    }, true);\r\n\r\n    backup.forEach(string => {\r\n      I18n.strings.set(string.key as LangPackKey, string);\r\n    });\r\n    \r\n    attachClickEvent(btnChangeLanguage, (e) => {\r\n      cancelEvent(e);\r\n\r\n      btnChangeLanguage.disabled = true;\r\n      putPreloader(btnChangeLanguage);\r\n\r\n      I18n.getLangPack(config.suggested_lang_code);\r\n    });\r\n  });\r\n}\r\n"],"sourceRoot":""}
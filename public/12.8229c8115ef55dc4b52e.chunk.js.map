{"version":3,"sources":["webpack:///./src/helpers/touchSupport.ts","webpack:///./src/components/ripple.ts","webpack:///./src/pages/pagePassword.ts","webpack:///./src/helpers/dom/clickEvent.ts","webpack:///./src/components/button.ts","webpack:///./src/components/misc.ts","webpack:///./src/helpers/cleanUsername.ts","webpack:///./src/lib/appManagers/appUsersManager.ts","webpack:///./src/lib/appManagers/appChatsManager.ts","webpack:///./src/lib/appManagers/appPeersManager.ts","webpack:///./src/components/appNavigationController.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/lib/mtproto/serverTimeManager.ts","webpack:///./src/lib/appManagers/apiUpdatesManager.ts","webpack:///./src/helpers/sequentialDom.ts","webpack:///./src/helpers/array.ts","webpack:///./src/countries.ts","webpack:///./src/lib/mtproto/passwordManager.ts","webpack:///./src/pages/loginPage.ts","webpack:///./src/components/passwordInputField.ts","webpack:///./src/lib/searchIndex.ts","webpack:///./src/components/monkeys/password.ts","webpack:///./src/helpers/cleanSearchText.ts","webpack:///./src/lib/mtproto/mtproto_config.ts","webpack:///./src/helpers/dom/htmlToSpan.ts"],"names":["isTouchSupported","window","DocumentTouch","document","rippleClickId","ripple","elem","callback","Promise","resolve","onEnd","prepend","querySelector","classList","add","r","createElement","handler","contains","drawRipple","clientX","clientY","startTime","Date","now","clickId","duration","getComputedStyle","getPropertyValue","replace","elapsedTime","cb","mutate","remove","delay","Math","max","setTimeout","removeEventListener","touchStartFired","requestAnimationFrame","rect","getBoundingClientRect","clickX","left","clickY","top","size","sqrt","abs","height","width","x","y","style","append","isRippleUnneeded","e","target","includes","tagName","touchEnd","addEventListener","settings","animationsEnabled","touches","length","once","cancelBubble","stopPropagation","passive","button","dataset","passwordInput","page","className","withInputWrapper","titleLangKey","subtitleLangKey","btnNext","btnNextI18n","IntlElement","key","element","passwordInputField","label","name","getStateInterval","input","inputWrapper","container","state","getState","setInterval","then","_state","hint","wrapEmojiText","setLabel","onSubmit","value","toggle","update","preloader","check","response","_","clearInterval","m","default","mount","monkey","removeAttribute","catch","err","type","select","this","isMobile","imageDiv","all","load","focus","pushToState","CLICK_EVENT_NAME","attachClickEvent","options","listenerSetter","bind","touchMouseDown","detachClickEvent","asDiv","icon","noRipple","rippleSquare","onlyMobile","disabled","setAttribute","text","putPreloader","returnDiv","html","div","innerHTML","appendChild","insertAdjacentHTML","lastElementChild","setButtonLoader","sortedCountries","formatPhoneNumber","str","phoneCode","slice","sort","a","b","country","find","c","split","indexOf","pattern","forEach","symbol","idx","formatted","onMouseMove","openedMenu","diffX","right","diffY","bottom","closeBtnMenu","onClick","parentElement","menuOverlay","openedMenuOnClose","removeByType","openBtnMenu","menuElement","onClose","pushItem","onPop","canAnimate","insertBefore","positionMenu","pageX","pageY","side","scrollWidth","menuWidth","scrollHeight","menuHeight","body","windowWidth","windowHeight","verticalSide","sides","intermediateX","intermediateY","possibleSides","attachContextMenuListener","removeManual","timeout","capture","onCancel","clearTimeout","cleanUsername","username","toLowerCase","appUsersManager","storage","appStateManager","storages","users","updateUsersStatuses","timestampNow","i","user","status","expires","was_online","rootScope","dispatchEvent","id","setUserToStateIfNeeded","clear","addMultipleEventsListeners","updateUserStatus","userId","user_id","serverTimeManager","serverTimeOffset","updateUserPhoto","forceUserOnline","photo","console","warn","updateUserName","saveApiUser","Object","assign","first_name","last_name","getSelf","contactsIndex","indexObject","getUserSearchText","storagesResults","contactsList","Array","isArray","pushContact","contactsFillPromise","peerId","getFromCache","set","getUser","delete","init","usernames","_userId","isPeerNeeded","findAndSplice","undefined","Set","updatedContactsList","promise","invokeApi","result","saveApiUsers","contacts","contact","onContactsModified","resolvedPeer","appChatsManager","saveApiChats","chats","appPeersManager","getPeer","getPeerId","peer","requestPeer","phone","pFlags","self","format","filter","Boolean","join","query","includeSaved","fillContacts","_contactsList","results","search","has","userId1","userId2","sortName1","sortName","sortName2","localeCompare","testSelfSearch","p","myId","unshift","block","invokeApiSingle","getInputPeerById","apiUpdatesManager","processLocalUpdate","peer_id","getOutputPeer","blocked","index","apiUsers","override","oldUser","min","fullName","searchUsername","deleted","cleanSearchText","initials","getAbbreviation","changedPhoto","changedTitle","photo_id","access_hash","args","isBot","support","date","d","getDate","getMonth","getHours","getMinutes","bot","isRegularUser","isContact","allowMin","eventTimestamp","timestamp","updatesState","syncLoading","getTopPeersPromise","topPeers","correspondents","offset","limit","hash","peerIds","categories","peers","map","topPeer","contactsBlocked","count","u","concat","q","my_results","offline","showPhone","getUserInput","add_phone_privacy_exception","updates","processUpdateMessage","onContactUpdated","userIds","onChatUpdated","chatId","isChannel","updateChannelParticipant","clearCache","params","channel","channel_id","updateChatDefaultBannedRights","chat","default_banned_rights","getChat","_chatId","apiChats","saveApiChat","oldChat","title","participants_count","rights","defaultRights","action","isThread","kicked","megagroup","creator","admin_rights","banned_rights","myFlags","post_messages","delete_messages","broadcast","until_date","isMegagroup","good","deactivated","chat_id","about","channelId","getChannelInput","usersInputs","fwdLimit","fwd_limit","deleteChatUser","leaveChannel","leaveChat","deleteChannel","deleteChat","bool","inputFile","inputChatPhoto","file","participant","getParticipantPeerId","actor_id","qts","prev_participant","new_participant","keys","kicked_by","editBanned","view_messages","DialogColorsFg","DialogColors","DialogColorsMap","updatePeerBlocked","hasRights","getUserPhoto","getChatPhoto","migrated_to","plainText","onlyFirstName","trim","getUserString","getChatString","isUser","charAt","peerParams","substr","isBroadcast","ignorePeerId","getChannelInputPeer","getChatInputPeer","pic","getDialogType","appNavigationController","navigations","manual","log","debug","currentHash","location","isPossibleSwipe","onHashChange","replaceState","pushState","item","pop","handleItem","onEscape","back","detach","onTouchEnd","onTouchMove","moved","history","scrollRestoration","noBlurOnPop","ret","findItemByType","splice","push","noHistory","origin","pathname","single","toggleDisability","elements","disable","el","get","to","addTaskListener","task","payload","pendingPtsUpdates","pendingSeqUpdates","syncPending","channelStates","attached","Error","Warn","Log","updateMessage","processOpts","seq","seqStart","seq_start","forceGetDifference","processUpdate","isOut","out","fromId","from_id","toId","message","fwd_from","reply_to","entities","pts","pts_count","Proxy","saveUpdatesState","us","nextSeq","pendingUpdatesData","saveUpdate","popPendingSeqUpdate","seqAwaiting","ptsAwaiting","curState","getChannelState","curPts","goodPts","goodIndex","getDifference","first","wasSyncing","pts_total_limit","differenceResult","other_updates","new_messages","apiMessage","nextState","intermediate_state","justAName","channelState","getChannelDifference","addChannelState","lastPtsUpdateTime","toPeerId","fwdHeader","reason","hasUser","post","hasChat","popPts","popSeq","popPendingPtsUpdate","noErrorBox","stateResult","setUpdatesProcessor","setProxy","sequentialDom","promises","raf","scheduled","kind","scheduleFlush","do","read","write","accumulate","arr","initialValue","reduce","acc","findAndSpliceAll","array","verify","findIndex","forEachReverse","insertInDescendSortedArray","property","pos","sortProperty","len","error","filterUnique","Countries","PhoneCodesMain","passwordManager","currentHashPromise","newHashPromise","password","new_settings","email","currentPassword","invokeCrypto","newAlgo","new_algo","salt1","Uint8Array","randomize","newPassword","hashes","new_password_hash","inputCheckPassword","auth","setUserAuth","code","LoginPage","subtitle","PasswordInputField","super","passwordVisible","onVisibilityClick","toggleVisible","onVisibilityClickAdditional","autocomplete","stealthy","tabIndex","cloneNode","nextSibling","SearchIndex","cleanText","latinize","minChars","fullTexts","Map","searchText","newFoundObjs","queryWords","queryWordsLength","fullText","what","found","foundChars","word","fullTextLength","o","PasswordMonkey","needFrame","loadPromise","loadAnimationFromURL","loop","autoplay","noCache","_animation","animation","currentFrame","direction","setSpeed","pause","setDirection","curFrame","play","waitForFirstFrame","badCharsRe","trimRe","hasTag","ch","latinizeCh","LatinizeMap","REPLIES_PEER_ID","htmlToSpan","span"],"mappings":"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","file":"12.8229c8115ef55dc4b52e.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// @ts-ignore\nexport const isTouchSupported = ('ontouchstart' in window) || (window.DocumentTouch && document instanceof DocumentTouch)/*  || true */;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport sequentialDom from \"../helpers/sequentialDom\";\nimport {isTouchSupported} from \"../helpers/touchSupport\";\nimport rootScope from \"../lib/rootScope\";\n\nlet rippleClickId = 0;\nexport function ripple(elem: HTMLElement, callback: (id: number) => Promise<boolean | void> = () => Promise.resolve(), onEnd: (id: number) => void = null, prepend = false) {\n  //return;\n  if(elem.querySelector('.c-ripple')) return;\n  elem.classList.add('rp');\n  \n  let r = document.createElement('div');\n  r.classList.add('c-ripple');\n\n  const isSquare = elem.classList.contains('rp-square');\n  if(isSquare) {\n    r.classList.add('is-square');\n  }\n\n  elem[prepend ? 'prepend' : 'append'](r);\n\n  let handler: () => void;\n  //let animationEndPromise: Promise<number>;\n  const drawRipple = (clientX: number, clientY: number) => {\n    const startTime = Date.now();\n    const elem = document.createElement('div');\n\n    const clickId = rippleClickId++;\n    \n    //console.log('ripple drawRipple');\n    \n    const duration = +window.getComputedStyle(r).getPropertyValue('--ripple-duration').replace('s', '') * 1000;\n    //console.log('ripple duration', duration);\n\n    handler = () => {\n    //handler = () => animationEndPromise.then((duration) => {\n      //console.log('ripple animation was:', duration);\n\n      //const duration = isSquare || mediaSizes.isMobile ? 200 : 700;\n      //return;\n      let elapsedTime = Date.now() - startTime;\n      const cb = () => {\n        //console.log('ripple elapsedTime total pre-remove:', Date.now() - startTime);\n        sequentialDom.mutate(() => {\n          elem.remove();\n        });\n        \n        if(onEnd) onEnd(clickId);\n      };\n      if(elapsedTime < duration) {\n        let delay = Math.max(duration - elapsedTime, duration / 2);\n        setTimeout(() => elem.classList.add('hiding'), Math.max(delay - duration / 2, 0));\n\n        setTimeout(cb, delay);\n      } else {\n        elem.classList.add('hiding');\n        setTimeout(cb, duration / 2);\n      }\n\n      if(!isTouchSupported) {\n        window.removeEventListener('contextmenu', handler);\n      }\n\n      handler = null;\n      touchStartFired = false;\n    };\n    //});\n\n    callback && callback(clickId);\n\n    /* callback().then((bad) => {\n      if(bad) {\n        span.remove();\n        return;\n      } */\n      \n      //console.log('ripple after promise', Date.now() - startTime);\n      //console.log('ripple tooSlow:', tooSlow);\n      /* if(tooSlow) {\n        span.remove();\n        return;\n      } */\n\n      window.requestAnimationFrame(() => {\n        const rect = r.getBoundingClientRect();\n        elem.classList.add('c-ripple__circle');\n\n        const clickX = clientX - rect.left;\n        const clickY = clientY - rect.top;\n\n        const radius = Math.sqrt((Math.abs(clickY - rect.height / 2) + rect.height / 2) ** 2 + (Math.abs(clickX - rect.width / 2) + rect.width / 2) ** 2);\n        const size = radius;\n\n        // center of circle\n        const x = clickX - size / 2;\n        const y = clickY - size / 2;\n\n        //console.log('ripple click', offsetFromCenter, size, clickX, clickY);\n\n        elem.style.width = elem.style.height = size + 'px';\n        elem.style.left = x + 'px';\n        elem.style.top = y + 'px';\n\n        // нижний код выполняется с задержкой\n        /* animationEndPromise = new Promise((resolve) => {\n          span.addEventListener('animationend', () => {\n            // 713 -> 700\n            resolve(((Date.now() - startTime) / 100 | 0) * 100);\n          }, {once: true});\n        }); */\n        \n        // нижний код не всегда включает анимацию ПРИ КЛИКЕ НА ТАЧПАД БЕЗ ТАПТИК ЭНЖИНА\n        /* span.style.display = 'none';\n        r.append(span);\n        duration = +window.getComputedStyle(span).getPropertyValue('animation-duration').replace('s', '') * 1000;\n        span.style.display = ''; */\n\n        r.append(elem);\n\n        //r.classList.add('active');\n        //handler();\n      });\n    //});\n  };\n\n  const isRippleUnneeded = (e: Event) => e.target !== elem && (\n      ['BUTTON', 'A'].includes((e.target as HTMLElement).tagName) \n      || findUpClassName(e.target as HTMLElement, 'c-ripple') !== r\n    );\n\n  // TODO: rename this variable\n  let touchStartFired = false;\n  if(isTouchSupported) {\n    let touchEnd = () => {\n      handler && handler();\n    };\n  \n    elem.addEventListener('touchstart', (e) => {\n      if(!rootScope.settings.animationsEnabled) {\n        return;\n      }\n\n      //console.log('ripple touchstart', e);\n      if(e.touches.length > 1 || touchStartFired || isRippleUnneeded(e)) {\n        return;\n      }\n      \n      //console.log('touchstart', e);\n      touchStartFired = true;\n  \n      let {clientX, clientY} = e.touches[0];\n      drawRipple(clientX, clientY);\n      elem.addEventListener('touchend', touchEnd, {once: true});\n  \n      window.addEventListener('touchmove', (e) => {\n        e.cancelBubble = true;\n        e.stopPropagation();\n        touchEnd();\n        elem.removeEventListener('touchend', touchEnd);\n      }, {once: true});\n    }, {passive: true});\n  } else {\n    elem.addEventListener('mousedown', (e) => {\n      if(![0, 2].includes(e.button)) { // only left and right buttons\n        return;\n      }\n\n      if(!rootScope.settings.animationsEnabled) {\n        return;\n      }\n      //console.log('ripple mousedown', e, e.target, findUpClassName(e.target as HTMLElement, 'c-ripple') === r);\n\n      if(elem.dataset.ripple === '0' || isRippleUnneeded(e)) {\n        return;\n      } else if(touchStartFired) {\n        touchStartFired = false;\n        return;\n      }\n  \n      let {clientX, clientY} = e;\n      drawRipple(clientX, clientY);\n      window.addEventListener('mouseup', handler, {once: true, passive: true});\n      window.addEventListener('contextmenu', handler, {once: true, passive: true});\n    }, {passive: true});\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { putPreloader } from '../components/misc';\nimport mediaSizes from '../helpers/mediaSizes';\nimport { AccountPassword } from '../layer';\nimport appStateManager from '../lib/appManagers/appStateManager';\nimport passwordManager from '../lib/mtproto/passwordManager';\nimport Page from './page';\nimport Button from '../components/button';\nimport PasswordInputField from '../components/passwordInputField';\nimport PasswordMonkey from '../components/monkeys/password';\nimport RichTextProcessor from '../lib/richtextprocessor';\nimport I18n from '../lib/langPack';\nimport LoginPage from './loginPage';\nimport { cancelEvent } from '../helpers/dom/cancelEvent';\nimport { attachClickEvent } from '../helpers/dom/clickEvent';\nimport htmlToSpan from '../helpers/dom/htmlToSpan';\nimport replaceContent from '../helpers/dom/replaceContent';\nimport toggleDisability from '../helpers/dom/toggleDisability';\n\nconst TEST = false;\nlet passwordInput: HTMLInputElement;\n\nlet onFirstMount = (): Promise<any> => {\n  const page = new LoginPage({\n    className: 'page-password',\n    withInputWrapper: true,\n    titleLangKey: 'Login.Password.Title',\n    subtitleLangKey: 'Login.Password.Subtitle'\n  });\n\n  const btnNext = Button('btn-primary btn-color-primary');\n  const btnNextI18n = new I18n.IntlElement({key: 'Login.Next'});\n\n  btnNext.append(btnNextI18n.element);\n\n  const passwordInputField = new PasswordInputField({\n    label: 'LoginPassword',\n    name: 'password'\n  });\n\n  passwordInput = passwordInputField.input as HTMLInputElement;\n\n  page.inputWrapper.append(passwordInputField.container, btnNext);\n\n  let getStateInterval: number;\n\n  let getState = () => {\n    // * just to check session relevance\n    if(!getStateInterval) {\n      getStateInterval = window.setInterval(getState, 10e3);\n    }\n\n    return !TEST && passwordManager.getState().then(_state => {\n      state = _state;\n\n      if(state.hint) {\n        replaceContent(passwordInputField.label, htmlToSpan(RichTextProcessor.wrapEmojiText(state.hint)));\n      } else {\n        passwordInputField.setLabel();\n      }\n    });\n  };\n\n  let state: AccountPassword;\n  \n  const onSubmit = (e?: Event) => {\n    if(e) {\n      cancelEvent(e);\n    }\n\n    if(!passwordInput.value.length) {\n      passwordInput.classList.add('error');\n      return;\n    }\n\n    const toggle = toggleDisability([passwordInput, btnNext], true);\n    let value = passwordInput.value;\n\n    btnNextI18n.update({key: 'PleaseWait'});\n    const preloader = putPreloader(btnNext);\n\n    passwordManager.check(value, state).then((response) => {\n      //console.log('passwordManager response:', response);\n        \n      switch(response._) {\n        case 'auth.authorization':\n          clearInterval(getStateInterval);\n          import('./pageIm').then(m => {\n            m.default.mount();\n          });\n          if(monkey) monkey.remove();\n          break;\n        default:\n          btnNext.removeAttribute('disabled');\n          btnNextI18n.update({key: response._ as any});\n          preloader.remove();\n          break;\n      }\n    }).catch((err: any) => {\n      toggle();\n      passwordInputField.input.classList.add('error');\n      \n      switch(err.type) {\n        default:\n          //btnNext.innerText = err.type;\n          btnNextI18n.update({key: 'PASSWORD_HASH_INVALID'});\n          passwordInput.select();\n          break;\n      }\n\n      preloader.remove();\n  \n      getState();\n    });\n  };\n  \n  attachClickEvent(btnNext, onSubmit);\n\n  passwordInput.addEventListener('keypress', function(this, e) {\n    this.classList.remove('error');\n    btnNextI18n.update({key: 'Login.Next'});\n\n    if(e.key === 'Enter') {\n      return onSubmit();\n    }\n  });\n\n  const size = mediaSizes.isMobile ? 100 : 166;\n  const monkey = new PasswordMonkey(passwordInputField, size);\n  page.imageDiv.append(monkey.container);\n  return Promise.all([\n    monkey.load(),\n    getState()\n  ]);\n};\n\nconst page = new Page('page-password', true, onFirstMount, null, () => {\n  //if(!isAppleMobile) {\n    passwordInput.focus();\n  //}\n\n  appStateManager.pushToState('authState', {_: 'authStatePassword'});\n});\n\nexport default page;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type ListenerSetter from \"../listenerSetter\";\nimport { isTouchSupported } from \"../touchSupport\";\n\nexport const CLICK_EVENT_NAME: 'mousedown' | 'touchend' | 'click' = (isTouchSupported ? 'mousedown' : 'click') as any;\nexport type AttachClickOptions = AddEventListenerOptions & Partial<{listenerSetter: ListenerSetter, touchMouseDown: true}>;\nexport function attachClickEvent(elem: HTMLElement, callback: (e: TouchEvent | MouseEvent) => void, options: AttachClickOptions = {}) {\n  const add = options.listenerSetter ? options.listenerSetter.add(elem) : elem.addEventListener.bind(elem);\n  // const remove = options.listenerSetter ? options.listenerSetter.removeManual.bind(options.listenerSetter, elem) : elem.removeEventListener.bind(elem);\n\n  options.touchMouseDown = true;\n  /* if(options.touchMouseDown && CLICK_EVENT_NAME === 'touchend') {\n    add('mousedown', callback, options);\n  } else if(CLICK_EVENT_NAME === 'touchend') {\n    const o = {...options, once: true};\n\n    const onTouchStart = (e: TouchEvent) => {\n      const onTouchMove = (e: TouchEvent) => {\n        remove('touchmove', onTouchMove, o);\n        remove('touchend', onTouchEnd, o);\n      };\n  \n      const onTouchEnd = (e: TouchEvent) => {\n        remove('touchmove', onTouchMove, o);\n        callback(e);\n        if(options.once) {\n          remove('touchstart', onTouchStart);\n        }\n      };\n  \n      add('touchend', onTouchEnd, o);\n      add('touchmove', onTouchMove, o);\n    };\n\n    add('touchstart', onTouchStart);\n  } else {\n    add(CLICK_EVENT_NAME, callback, options);\n  } */\n  add(CLICK_EVENT_NAME, callback, options);\n}\n\nexport function detachClickEvent(elem: HTMLElement, callback: (e: TouchEvent | MouseEvent) => void, options?: AddEventListenerOptions) {\n  if(CLICK_EVENT_NAME === 'touchend') {\n    elem.removeEventListener('touchstart', callback, options);\n  } else {\n    elem.removeEventListener(CLICK_EVENT_NAME, callback, options);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { i18n, LangPackKey } from \"../lib/langPack\";\nimport { ripple } from \"./ripple\";\n\nconst Button = (className: string, options: Partial<{\n  noRipple: true, \n  onlyMobile: true, \n  icon: string, \n  rippleSquare: true, \n  text: LangPackKey, \n  disabled: boolean,\n  asDiv: boolean\n}> = {}) => {\n  const button: HTMLButtonElement = document.createElement(options.asDiv ? 'div' : 'button') as any;\n  button.className = className + (options.icon ? ' tgico-' + options.icon : '');\n\n  if(!options.noRipple) {\n    if(options.rippleSquare) {\n      button.classList.add('rp-square');\n    }\n\n    ripple(button);\n  }\n\n  if(options.onlyMobile) {\n    button.classList.add('only-handhelds');\n  }\n\n  if(options.disabled) {\n    button.setAttribute('disabled', 'true');\n  }\n\n  if(options.text) {\n    button.append(i18n(options.text));\n  }\n\n  return button;\n};\n\nexport default Button;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport Countries, { Country, PhoneCodesMain } from \"../countries\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { CLICK_EVENT_NAME } from \"../helpers/dom/clickEvent\";\nimport ListenerSetter from \"../helpers/listenerSetter\";\nimport mediaSizes from \"../helpers/mediaSizes\";\nimport { isTouchSupported } from \"../helpers/touchSupport\";\nimport { isApple, isMobileSafari } from \"../helpers/userAgent\";\nimport appNavigationController from \"./appNavigationController\";\n\nexport function putPreloader(elem: Element, returnDiv = false): HTMLElement {\n  const html = `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-circular\" viewBox=\"25 25 50 50\">\n  <circle class=\"preloader-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-miterlimit=\"10\"/>\n  </svg>`;\n\n  if(returnDiv) {\n    const div = document.createElement('div');\n    div.classList.add('preloader');\n    div.innerHTML = html;\n\n    if(elem) {\n      elem.appendChild(div);\n    }\n\n    return div;\n  }\n  \n  elem.insertAdjacentHTML('beforeend', html);\n  return elem.lastElementChild as HTMLElement;\n}\n\nMOUNT_CLASS_TO.putPreloader = putPreloader;\n\nexport function setButtonLoader(elem: HTMLButtonElement, icon = 'check') {\n  elem.classList.remove('tgico-' + icon);\n  elem.disabled = true;\n  putPreloader(elem);\n\n  return () => {\n    elem.innerHTML = '';\n    elem.classList.add('tgico-' + icon);\n    elem.removeAttribute('disabled');\n  };\n}\n\nlet sortedCountries: Country[];\nexport function formatPhoneNumber(str: string) {\n  str = str.replace(/\\D/g, '');\n  let phoneCode = str.slice(0, 6);\n  \n  ////console.log('str', str, phoneCode);\n  if(!sortedCountries) {\n    sortedCountries = Countries.slice().sort((a, b) => b.phoneCode.length - a.phoneCode.length);\n  }\n  \n  let country = sortedCountries.find((c) => {\n    return c.phoneCode.split(' and ').find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\n  });\n\n  if(!country) return {formatted: str, country};\n\n  country = PhoneCodesMain[country.phoneCode] || country;\n  \n  let pattern = country.pattern || country.phoneCode;\n  pattern.split('').forEach((symbol, idx) => {\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\n    }\n  });\n  \n  /* if(country.pattern) {\n    str = str.slice(0, country.pattern.length);\n  } */\n  \n  return {formatted: str, country};\n}\n\n/* export function parseMenuButtonsTo(to: {[name: string]: HTMLElement}, elements: HTMLCollection | NodeListOf<HTMLElement>) {\n  Array.from(elements).forEach(el => {\n    const match = el.className.match(/(?:^|\\s)menu-(.+?)(?:$|\\s)/);\n    if(!match) return;\n    to[match[1]] = el as HTMLElement;\n  });\n} */\n\nlet onMouseMove = (e: MouseEvent) => {\n  let rect = openedMenu.getBoundingClientRect();\n  let {clientX, clientY} = e;\n  \n  let diffX = clientX >= rect.right ? clientX - rect.right : rect.left - clientX;\n  let diffY = clientY >= rect.bottom ? clientY - rect.bottom : rect.top - clientY;\n  \n  if(diffX >= 100 || diffY >= 100) {\n    closeBtnMenu();\n    //openedMenu.parentElement.click();\n  }\n  //console.log('mousemove', diffX, diffY);\n};\n\nconst onClick = (e: MouseEvent | TouchEvent) => {\n  //cancelEvent(e);\n  closeBtnMenu();\n};\n\n// ! no need in this due to the same handler in appNavigationController\n/* const onKeyDown = (e: KeyboardEvent) => {\n  if(e.key === 'Escape') {\n    closeBtnMenu();\n    cancelEvent(e);\n  }\n}; */\n\nexport const closeBtnMenu = () => {\n  if(openedMenu) {\n    openedMenu.classList.remove('active');\n    openedMenu.parentElement.classList.remove('menu-open');\n    //openedMenu.previousElementSibling.remove(); // remove overlay\n    if(menuOverlay) menuOverlay.remove();\n    openedMenu = null;\n  }\n  \n  if(openedMenuOnClose) {\n    openedMenuOnClose();\n    openedMenuOnClose = null;\n  }\n\n  if(!isTouchSupported) {\n    window.removeEventListener('mousemove', onMouseMove);\n    //window.removeEventListener('keydown', onKeyDown, {capture: true});\n    window.removeEventListener('contextmenu', onClick);\n  }\n\n  document.removeEventListener(CLICK_EVENT_NAME, onClick);\n\n  if(!isMobileSafari) {\n    appNavigationController.removeByType('menu');\n  }\n};\n\nwindow.addEventListener('resize', () => {\n  if(openedMenu) {\n    closeBtnMenu();\n  }\n  \n  /* if(openedMenu && (openedMenu.style.top || openedMenu.style.left)) {\n    const rect = openedMenu.getBoundingClientRect();\n    const {innerWidth, innerHeight} = window;\n\n    console.log(innerWidth, innerHeight, rect);\n  } */\n});\n\nlet openedMenu: HTMLElement = null, openedMenuOnClose: () => void = null, menuOverlay: HTMLElement = null;\nexport function openBtnMenu(menuElement: HTMLElement, onClose?: () => void) {\n  closeBtnMenu();\n\n  if(!isMobileSafari) {\n    appNavigationController.pushItem({\n      type: 'menu',\n      onPop: (canAnimate) => {\n        closeBtnMenu();\n      }\n    });\n  }\n  \n  openedMenu = menuElement;\n  openedMenu.classList.add('active');\n  openedMenu.parentElement.classList.add('menu-open');\n\n  if(!menuOverlay) {\n    menuOverlay = document.createElement('div');\n    menuOverlay.classList.add('btn-menu-overlay');\n\n    // ! because this event must be canceled, and can't cancel on menu click (below)\n    menuOverlay.addEventListener(CLICK_EVENT_NAME, (e) => {\n      cancelEvent(e);\n      onClick(e);\n    });\n  }\n\n  openedMenu.parentElement.insertBefore(menuOverlay, openedMenu);\n\n  //document.body.classList.add('disable-hover');\n  \n  openedMenuOnClose = onClose;\n\n  if(!isTouchSupported) {\n    window.addEventListener('mousemove', onMouseMove);\n    //window.addEventListener('keydown', onKeyDown, {capture: true});\n    window.addEventListener('contextmenu', onClick, {once: true});\n  }\n\n  /* // ! because this event must be canceled, and can't cancel on menu click (below)\n  overlay.addEventListener(CLICK_EVENT_NAME, (e) => {\n    cancelEvent(e);\n    onClick(e);\n  }); */\n  \n  // ! safari iOS doesn't handle window click event on overlay, idk why\n  document.addEventListener(CLICK_EVENT_NAME, onClick);\n}\n\nconst PADDING_TOP = 8;\nconst PADDING_LEFT = 8;\nexport function positionMenu({pageX, pageY}: MouseEvent | Touch, elem: HTMLElement, side?: 'left' | 'right' | 'center') {\n  //let {clientX, clientY} = e;\n\n  // * side mean the OPEN side\n\n  let {scrollWidth: menuWidth, scrollHeight: menuHeight} = elem;\n  //let {innerWidth: windowWidth, innerHeight: windowHeight} = window;\n  const rect = document.body.getBoundingClientRect();\n  const windowWidth = rect.width;\n  const windowHeight = rect.height;\n\n  side = mediaSizes.isMobile ? 'right' : 'left';\n  let verticalSide: 'top' /* | 'bottom' */ | 'center' = 'top';\n\n  const getSides = () => {\n    return {\n      x: {\n        left: pageX,\n        right: pageX - menuWidth\n      },\n      intermediateX: side === 'right' ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\n      //intermediateX: clientX < windowWidth / 2 ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\n      y: {\n        top: pageY,\n        bottom: pageY - menuHeight\n      },\n      //intermediateY: verticalSide === 'top' ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\n      intermediateY: pageY < windowHeight / 2 ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\n    };\n  };\n\n  const sides = getSides();\n\n  const possibleSides = {\n    x: {\n      left: sides.x.left + menuWidth + PADDING_LEFT <= windowWidth,\n      right: sides.x.right >= PADDING_LEFT\n    },\n    y: {\n      top: sides.y.top + menuHeight + PADDING_TOP <= windowHeight,\n      bottom: sides.y.bottom - PADDING_TOP >= PADDING_TOP\n    }\n  };\n\n  /* if(side === undefined) {\n    if((clientX + menuWidth + PADDING_LEFT) > windowWidth) {\n      side = 'right';\n    }\n  } */\n\n  {\n    /* const x = sides.x;\n\n    const s = Object.keys(x) as (keyof typeof possibleSides.x)[];\n    if(side) {\n      s.findAndSplice(s => s === side);\n      s.unshift(side);\n    }\n\n    const possibleSide = s.find(s => possibleSides.x[s]); */\n    let left: number;\n    /* if(possibleSide) {\n      left = x[possibleSide];\n      side = possibleSide;\n    } else {\n      left = sides.intermediateX;\n      side = undefined;\n    } */\n    left = possibleSides.x[side] ? sides.x[side] : (side = 'center', sides.intermediateX);\n  \n    elem.style.left = left + 'px';\n  }\n\n  /* if((clientY + menuHeight + PADDING_TOP) > windowHeight) {\n    elem.style.top = clamp(clientY - menuHeight, PADDING_TOP, windowHeight - menuHeight - PADDING_TOP) + 'px';\n    // elem.style.top = (innerHeight - scrollHeight - PADDING_TOP) + 'px';\n    verticalSide = 'bottom';\n  } else {\n    elem.style.top = Math.max(PADDING_TOP, clientY) + 'px';\n    verticalSide = 'top';\n  } */\n\n  {\n    let top: number;\n\n    top = possibleSides.y[verticalSide] ? sides.y[verticalSide] : (verticalSide = 'center', sides.intermediateY);\n  \n    elem.style.top = top + 'px';\n  }\n  \n  elem.className = elem.className.replace(/(top|center|bottom)-(left|center|right)/g, '');\n  elem.classList.add(\n    //(verticalSide === 'center' ? verticalSide : (verticalSide === 'bottom' ? 'top' : 'bottom')) +\n    (verticalSide === 'center' ? verticalSide : 'bottom') +\n    '-' +\n    (side === 'center' ? side : (side === 'left' ? 'right' : 'left')));\n}\n\nexport function attachContextMenuListener(element: HTMLElement, callback: (e: Touch | MouseEvent) => void, listenerSetter?: ListenerSetter) {\n  const add = listenerSetter ? listenerSetter.add(element) : element.addEventListener.bind(element);\n  const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, element) : element.removeEventListener.bind(element);\n\n  if(isApple && isTouchSupported) {\n    let timeout: number;\n\n    const options: EventListenerOptions = {capture: true};\n\n    const onCancel = () => {\n      clearTimeout(timeout);\n      // @ts-ignore\n      remove('touchmove', onCancel, options);\n      // @ts-ignore\n      remove('touchend', onCancel, options);\n      // @ts-ignore\n      remove('touchcancel', onCancel, options);\n    };\n\n    add('touchstart', (e: TouchEvent) => {\n      if(e.touches.length > 1) {\n        onCancel();\n        return;\n      }\n  \n      add('touchmove', onCancel, options);\n      add('touchend', onCancel, options);\n      add('touchcancel', onCancel, options);\n\n      timeout = window.setTimeout(() => {\n        callback(e.touches[0]);\n        onCancel();\n\n        if(openedMenu) {\n          element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\n        }\n      }, .4e3);\n    });\n\n    /* if(!isSafari) {\n      add('contextmenu', (e: any) => {\n        cancelEvent(e);\n      }, {passive: false, capture: true});\n    } */\n  } else {\n    add('contextmenu', isTouchSupported ? (e: any) => {\n      callback(e);\n\n      if(openedMenu) {\n        element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\n      }\n    } : callback);\n  }\n};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nexport default function cleanUsername(username: string) {\n  return username && username.toLowerCase() || '';\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { formatPhoneNumber } from \"../../components/misc\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { filterUnique } from \"../../helpers/array\";\nimport cleanSearchText from \"../../helpers/cleanSearchText\";\nimport cleanUsername from \"../../helpers/cleanUsername\";\nimport { tsNow } from \"../../helpers/date\";\nimport { safeReplaceObject, isObject } from \"../../helpers/object\";\nimport { InputUser, User as MTUser, UserProfilePhoto, UserStatus } from \"../../layer\";\nimport I18n, { i18n, LangPackKey } from \"../langPack\";\n//import apiManager from '../mtproto/apiManager';\nimport apiManager from '../mtproto/mtprotoworker';\nimport { REPLIES_PEER_ID } from \"../mtproto/mtproto_config\";\nimport serverTimeManager from \"../mtproto/serverTimeManager\";\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport SearchIndex from \"../searchIndex\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appStateManager from \"./appStateManager\";\n\n// TODO: updateUserBlocked\n\nexport type User = MTUser.user;\n\nexport class AppUsersManager {\n  private storage = appStateManager.storages.users;\n  \n  private users: {[userId: number]: User};\n  private usernames: {[username: string]: number};\n  private contactsIndex: SearchIndex<number>;\n  private contactsFillPromise: Promise<Set<number>>;\n  private contactsList: Set<number>;\n  private updatedContactsList: boolean;\n  \n  private getTopPeersPromise: Promise<number[]>;\n\n  constructor() {\n    this.clear(true);\n\n    setInterval(this.updateUsersStatuses, 60000);\n\n    rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\n\n    rootScope.addMultipleEventsListeners({\n      updateUserStatus: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          user.status = update.status;\n          if(user.status) {\n            if('expires' in user.status) {\n              user.status.expires -= serverTimeManager.serverTimeOffset;\n            }\n\n            if('was_online' in user.status) {\n              user.status.was_online -= serverTimeManager.serverTimeOffset;\n            }\n          }\n\n          //user.sortStatus = this.getUserStatusForSort(user.status);\n          rootScope.dispatchEvent('user_update', userId);\n          this.setUserToStateIfNeeded(user);\n        } //////else console.warn('No user by id:', userId);\n      },\n\n      updateUserPhoto: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n\n          if(update.photo._ === 'userProfilePhotoEmpty') {\n            delete user.photo;\n          } else {\n            user.photo = safeReplaceObject(user.photo, update.photo);\n          }\n\n          this.setUserToStateIfNeeded(user);\n\n          rootScope.dispatchEvent('user_update', userId);\n          rootScope.dispatchEvent('avatar_update', userId);\n        } else console.warn('No user by id:', userId);\n      },\n\n      updateUserName: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n          \n          this.saveApiUser(Object.assign({}, user, {\n            first_name: update.first_name,\n            last_name: update.last_name,\n            username: update.username\n          }), true);\n        }\n      }\n    });\n\n    /* case 'updateContactLink':\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\n    break; */\n\n    rootScope.addEventListener('language_change', (e) => {\n      const userId = this.getSelf().id;\n      this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n    });\n\n    appStateManager.getState().then((state) => {\n      const users = appStateManager.storagesResults.users;\n      if(users.length) {\n        for(let i = 0, length = users.length; i < length; ++i) {\n          const user = users[i];\n          if(user) {\n            this.users[user.id] = user;\n          }\n        }\n      }\n\n      const contactsList = state.contactsList;\n      if(contactsList && Array.isArray(contactsList)) {\n        contactsList.forEach(userId => {\n          this.pushContact(userId);\n        });\n\n        if(contactsList.length) {\n          this.contactsFillPromise = Promise.resolve(this.contactsList);\n        }\n      }\n\n      appStateManager.addEventListener('peerNeeded', (peerId: number) => {\n        if(peerId < 0 || this.storage.getFromCache(peerId)) {\n          return;\n        }\n\n        this.storage.set({\n          [peerId]: this.getUser(peerId)\n        });\n      });\n\n      appStateManager.addEventListener('peerUnneeded', (peerId: number) => {\n        if(peerId < 0 || !this.storage.getFromCache(peerId)) {\n          return;\n        }\n\n        this.storage.delete(peerId);\n      });\n    });\n  }\n\n  public clear(init = false) {\n    if(!init) {\n      const users = appStateManager.storagesResults.users;\n      for(const _userId in this.users) {\n        const userId = +_userId;\n        if(!userId) continue;\n        if(!appStateManager.isPeerNeeded(userId)) {\n          const user = this.users[userId];\n          if(user.username) {\n            delete this.usernames[cleanUsername(user.username)];\n          }\n\n          users.findAndSplice((user) => user.id === userId);\n          this.storage.delete(userId);\n          delete this.users[userId];\n        }\n      }\n    } else {\n      this.users = {};\n      this.usernames = {};\n    }\n    \n    this.contactsIndex = new SearchIndex();\n    this.contactsFillPromise = undefined;\n    this.contactsList = new Set();\n    this.updatedContactsList = false;\n  }\n\n  private onContactsModified() {\n    const contactsList = [...this.contactsList];\n    appStateManager.pushToState('contactsList', contactsList);\n  }\n\n  public fillContacts() {\n    if(this.contactsFillPromise && this.updatedContactsList) {\n      return this.contactsFillPromise;\n    }\n\n    this.updatedContactsList = true;\n\n    const promise = apiManager.invokeApi('contacts.getContacts').then((result) => {\n      if(result._ === 'contacts.contacts') {\n        this.saveApiUsers(result.users);\n\n        result.contacts.forEach((contact) => {\n          this.pushContact(contact.user_id);\n        });\n\n        this.onContactsModified();\n      }\n\n      this.contactsFillPromise = promise;\n\n      return this.contactsList;\n    });\n\n    return this.contactsFillPromise || (this.contactsFillPromise = promise);\n  }\n\n  public resolveUsername(username: string) {\n    if(username[0] === '@') {\n      username = username.slice(1);\n    }\n\n    username = username.toLowerCase();\n    if(this.usernames[username]) {\n      return Promise.resolve(this.users[this.usernames[username]]);\n    }\n\n    return apiManager.invokeApi('contacts.resolveUsername', {username}).then(resolvedPeer => {\n      this.saveApiUsers(resolvedPeer.users);\n      appChatsManager.saveApiChats(resolvedPeer.chats);\n\n      return appPeersManager.getPeer(appPeersManager.getPeerId(resolvedPeer.peer));\n    });\n  }\n\n  public pushContact(userId: number) {\n    this.contactsList.add(userId);\n    this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n    appStateManager.requestPeer(userId, 'contacts');\n  }\n\n  public getUserSearchText(id: number) {\n    const user = this.users[id];\n    if(!user) {\n      return '';\n    }\n\n    const arr: string[] = [\n      user.first_name,\n      user.last_name,\n      user.phone,\n      user.username,\n      user.pFlags.self ? I18n.format('SavedMessages', true) : '',\n      user.pFlags.self ? 'Saved Messages' : ''\n    ];\n\n    return arr.filter(Boolean).join(' ');\n  }\n\n  public getContacts(query?: string, includeSaved = false) {\n    return this.fillContacts().then(_contactsList => {\n      let contactsList = [..._contactsList];\n      if(query) {\n        const results = this.contactsIndex.search(query);\n        const filteredContactsList = [...contactsList].filter(id => results.has(id));\n\n        contactsList = filteredContactsList;\n      }\n\n      contactsList.sort((userId1: number, userId2: number) => {\n        const sortName1 = (this.users[userId1] || {}).sortName || '';\n        const sortName2 = (this.users[userId2] || {}).sortName || '';\n\n        return sortName1.localeCompare(sortName2);\n      });\n\n      if(includeSaved) {\n        if(this.testSelfSearch(query)) {\n          contactsList.findAndSplice(p => p === rootScope.myId);\n          contactsList.unshift(rootScope.myId);\n        }\n      }\n\n      /* contactsList.sort((userId1: number, userId2: number) => {\n        const sortName1 = (this.users[userId1] || {}).sortName || '';\n        const sortName2 = (this.users[userId2] || {}).sortName || '';\n        if(sortName1 === sortName2) {\n          return 0;\n        } \n        \n        return sortName1 > sortName2 ? 1 : -1;\n      }); */\n\n      return contactsList;\n    });\n  }\n\n  public toggleBlock(peerId: number, block: boolean) {\n    return apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\n      id: appPeersManager.getInputPeerById(peerId)\n    }).then(value => {\n      if(value) {\n        apiUpdatesManager.processLocalUpdate({\n          _: 'updatePeerBlocked',\n          peer_id: appPeersManager.getOutputPeer(peerId),\n          blocked: block\n        });\n      }\n\n      return value;\n    });\n  }\n\n  public testSelfSearch(query: string) {\n    const user = this.getSelf();\n    const index = new SearchIndex();\n    index.indexObject(user.id, this.getUserSearchText(user.id));\n    return index.search(query).has(user.id);\n  }\n\n  public saveApiUsers(apiUsers: any[], override?: boolean) {\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\n  }\n\n  public saveApiUser(user: MTUser, override?: boolean) {\n    if(user._ === 'userEmpty') return;\n\n    const userId = user.id;\n    const oldUser = this.users[userId];\n\n    // ! commented block can affect performance !\n    // if(oldUser && !override) {\n    //   console.log('saveApiUser same');\n    //   return;\n    // }\n\n    if(user.pFlags === undefined) {\n      user.pFlags = {};\n    }\n\n    if(user.pFlags.min && oldUser !== undefined) {\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\n\n    const fullName = user.first_name + ' ' + (user.last_name || '');\n    if(user.username) {\n      const searchUsername = cleanUsername(user.username);\n      this.usernames[searchUsername] = userId;\n    }\n\n    user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);\n\n    user.initials = RichTextProcessor.getAbbreviation(fullName);\n\n    if(user.status) {\n      if((user.status as UserStatus.userStatusOnline).expires) {\n        (user.status as UserStatus.userStatusOnline).expires -= serverTimeManager.serverTimeOffset;\n      }\n\n      if((user.status as UserStatus.userStatusOffline).was_online) {\n        (user.status as UserStatus.userStatusOffline).was_online -= serverTimeManager.serverTimeOffset;\n      }\n    }\n\n    //user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\n\n    let changedPhoto = false, changedTitle = false;\n    if(oldUser === undefined) {\n      this.users[userId] = user;\n    } else {\n      if(user.first_name !== oldUser.first_name \n        || user.last_name !== oldUser.last_name \n        || user.username !== oldUser.username) {\n        changedTitle = true;\n      }\n\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      if(oldPhotoId !== newPhotoId) {\n        changedPhoto = true;\n      }\n\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\n        \n      } */\n\n      safeReplaceObject(oldUser, user);\n      rootScope.dispatchEvent('user_update', userId);\n    }\n\n    if(changedPhoto) {\n      rootScope.dispatchEvent('avatar_update', user.id);\n    }\n\n    if(changedTitle) {\n      rootScope.dispatchEvent('peer_title_edit', user.id);\n    }\n\n    this.setUserToStateIfNeeded(user);\n  }\n\n  public setUserToStateIfNeeded(user: User) {\n    if(appStateManager.isPeerNeeded(user.id)) {\n      this.storage.set({\n        [user.id]: user\n      });\n    }\n  }\n\n  public formatUserPhone(phone: string) {\n    return '+' + formatPhoneNumber(phone).formatted;\n  }\n\n  public getUserStatusForSort(status: User['status'] | number) {\n    if(typeof(status) === 'number') {\n      status = this.getUser(status).status;\n    }\n\n    if(status) {\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\n      if(expires) {\n        return expires;\n      }\n\n      /* const timeNow = tsNow(true);\n      switch(status._) {\n        case 'userStatusRecently':\n          return timeNow - 86400 * 3;\n        case 'userStatusLastWeek':\n          return timeNow - 86400 * 7;\n        case 'userStatusLastMonth':\n          return timeNow - 86400 * 30;\n      } */\n      switch(status._) {\n        case 'userStatusRecently':\n          return 3;\n        case 'userStatusLastWeek':\n          return 2;\n        case 'userStatusLastMonth':\n          return 1;\n      }\n    }\n\n    return 0;\n  }\n\n  public getUser(id: any): User {\n    if(isObject(id)) {\n      return id;\n    }\n\n    return this.users[id] || {id: id, pFlags: {deleted: true}, access_hash: ''} as User;\n  }\n\n  public getSelf() {\n    return this.getUser(rootScope.myId);\n  }\n\n  public getUserStatusString(userId: number): HTMLElement {\n    let key: LangPackKey;\n    let args: any[];\n\n    switch(userId) {\n      case REPLIES_PEER_ID:\n        key = 'Peer.RepliesNotifications';\n        break;\n      case 777000:\n        key = 'Peer.ServiceNotifications';\n        break;\n      default: {\n        if(this.isBot(userId)) {\n          key = 'Bot';\n          break;\n        }\n\n        const user = this.getUser(userId);\n        if(!user) {\n          key = '' as any;\n          break;\n        }\n\n        if(user.pFlags.support) {\n          key = 'SupportStatus';\n          break;\n        }\n\n        switch(user.status?._) {\n          case 'userStatusRecently': {\n            key = 'Lately';\n            break;\n          }\n    \n          case 'userStatusLastWeek': {\n            key = 'WithinAWeek';\n            break;\n          }\n    \n          case 'userStatusLastMonth': {\n            key = 'WithinAMonth';\n            break;\n          }\n          \n          case 'userStatusOffline': {\n            const date = user.status.was_online;\n            const now = Date.now() / 1000;\n            \n            if((now - date) < 60) {\n              key = 'Peer.Status.justNow';\n            } else if((now - date) < 3600) {\n              key = 'Peer.Status.minAgo';\n              const c = (now - date) / 60 | 0;\n              args = [c];\n            } else if(now - date < 86400) {\n              key = 'LastSeen.HoursAgo';\n              const c = (now - date) / 3600 | 0;\n              args = [c];\n            } else {\n              key = 'Peer.Status.LastSeenAt';\n              const d = new Date(date * 1000);\n              args = [('0' + d.getDate()).slice(-2) + '.' + ('0' + (d.getMonth() + 1)).slice(-2), \n                ('0' + d.getHours()).slice(-2) + ':' + ('0' + d.getMinutes()).slice(-2)];\n            }\n            \n            break;\n          }\n    \n          case 'userStatusOnline': {\n            key = 'Online';\n            break;\n          }\n    \n          default: {\n            key = 'ALongTimeAgo';\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n    \n    return i18n(key, args);\n  }\n\n  public isBot(id: number) {\n    return this.users[id] && this.users[id].pFlags.bot;\n  }\n\n  public isContact(id: number) {\n    return this.contactsList.has(id) || (this.users[id] && this.users[id].pFlags.contact);\n  }\n  \n  public isRegularUser(id: number) {\n    const user = this.users[id];\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\n  }\n\n  public isNonContactUser(id: number) {\n    return this.isRegularUser(id) && !this.isContact(id) && id !== rootScope.myId;\n  }\n\n  public hasUser(id: number, allowMin?: boolean) {\n    const user = this.users[id];\n    return isObject(user) && (allowMin || !user.pFlags.min);\n  }\n\n  public canSendToUser(id: number) {\n    const user = this.getUser(id);\n    return !user.pFlags.deleted && user.username !== 'replies';\n  }\n\n  public getUserPhoto(id: number) {\n    const user = this.getUser(id);\n\n    return user && user.photo || {\n      _: 'userProfilePhotoEmpty'\n    };\n  }\n\n  public getUserString(id: number) {\n    const user = this.getUser(id);\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\n  }\n\n  public getUserInput(id: number): InputUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputUserSelf'};\n    }\n\n    return {\n      _: 'inputUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public updateUsersStatuses = () => {\n    const timestampNow = tsNow(true);\n    for(const i in this.users) {\n      const user = this.users[i];\n\n      if(user.status &&\n        user.status._ === 'userStatusOnline' &&\n        user.status.expires < timestampNow) {\n\n        user.status = {_: 'userStatusOffline', was_online: user.status.expires};\n        rootScope.dispatchEvent('user_update', user.id);\n\n        this.setUserToStateIfNeeded(user);\n      }\n    }\n  };\n\n  public forceUserOnline(id: number, eventTimestamp?: number) {\n    if(this.isBot(id)) {\n      return;\n    }\n\n    const timestamp = tsNow(true);\n    const onlineTimeFor = 60;\n    if(eventTimestamp) {\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\n        return;\n      }\n    } else if(apiUpdatesManager.updatesState.syncLoading) {\n      return;\n    }\n\n    const user = this.getUser(id);\n    if(user &&\n      user.status &&\n      user.status._ !== 'userStatusOnline' &&\n      user.status._ !== 'userStatusEmpty' &&\n      !user.pFlags.support &&\n      !user.pFlags.deleted) {\n\n      user.status = {\n        _: 'userStatusOnline',\n        expires: timestamp + onlineTimeFor\n      };\n      \n      //user.sortStatus = this.getUserStatusForSort(user.status);\n      rootScope.dispatchEvent('user_update', id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  /* function importContact (phone, firstName, lastName) {\n      return MtpApiManager.invokeApi('contacts.importContacts', {\n        contacts: [{\n          _: 'inputPhoneContact',\n          client_id: '1',\n          phone: phone,\n          first_name: firstName,\n          last_name: lastName\n        }],\n        replace: false\n      }).then(function (importedContactsResult) {\n        saveApiUsers(importedContactsResult.users)\n\n        var foundUserID = false\n        angular.forEach(importedContactsResult.imported, function (importedContact) {\n          onContactUpdated(foundUserID = importedContact.user_id, true)\n        })\n\n        return foundUserID || false\n      })\n  }\n\n  function importContacts (contacts) {\n    var inputContacts = [],\n      i\n    var j\n\n    for (i = 0; i < contacts.length; i++) {\n      for (j = 0; j < contacts[i].phones.length; j++) {\n        inputContacts.push({\n          _: 'inputPhoneContact',\n          client_id: (i << 16 | j).toString(10),\n          phone: contacts[i].phones[j],\n          first_name: contacts[i].first_name,\n          last_name: contacts[i].last_name\n        })\n      }\n    }\n\n    return MtpApiManager.invokeApi('contacts.importContacts', {\n      contacts: inputContacts,\n      replace: false\n    }).then(function (importedContactsResult) {\n      saveApiUsers(importedContactsResult.users)\n\n      var result = []\n      angular.forEach(importedContactsResult.imported, function (importedContact) {\n        onContactUpdated(importedContact.user_id, true)\n        result.push(importedContact.user_id)\n      })\n\n      return result\n    })\n  } */\n\n  /* public deleteContacts(userIds: number[]) {\n    var ids: any[] = [];\n    userIds.forEach((userId) => {\n      ids.push(this.getUserInput(userId));\n    })\n\n    return apiManager.invokeApi('contacts.deleteContacts', {\n      id: ids\n    }).then(() => {\n      userIds.forEach((userId) => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  } */\n\n  public getTopPeers(): Promise<number[]> {\n    if(this.getTopPeersPromise) return this.getTopPeersPromise;\n\n    return this.getTopPeersPromise = appStateManager.getState().then((state) => {\n      if(state?.topPeers?.length) {\n        return state.topPeers;\n      }\n\n      return apiManager.invokeApi('contacts.getTopPeers', {\n        correspondents: true,\n        offset: 0,\n        limit: 15,\n        hash: 0,\n      }).then((result) => {\n        let peerIds: number[] = [];\n        if(result._ === 'contacts.topPeers') {\n          //console.log(result);\n          this.saveApiUsers(result.users);\n          appChatsManager.saveApiChats(result.chats);\n\n          if(result.categories.length) {\n            peerIds = result.categories[0].peers.map((topPeer) => {\n              const peerId = appPeersManager.getPeerId(topPeer.peer);\n              appStateManager.requestPeer(peerId, 'topPeer');\n              return peerId;\n            });\n          }\n        }\n  \n        appStateManager.pushToState('topPeers', peerIds);\n  \n        return peerIds;\n      });\n    });\n  }\n\n  public getBlocked(offset = 0, limit = 0) {\n    return apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then(contactsBlocked => {\n      this.saveApiUsers(contactsBlocked.users);\n      appChatsManager.saveApiChats(contactsBlocked.chats);\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\n\n      const peerIds = contactsBlocked.users.map(u => u.id).concat(contactsBlocked.chats.map(c => -c.id));\n\n      return {count, peerIds};\n    });\n  }\n\n  /* public searchContacts(query: string, limit = 20) {\n    return Promise.all([\n      this.getContacts(query),\n      apiManager.invokeApi('contacts.search', {\n        q: query,\n        limit\n      })\n    ]).then(results => {\n      const [myContacts, peers] = results;\n\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      // * contacts.search returns duplicates in my_results\n      const myResults = new Set(myContacts.concat(peers.my_results.map(p => appPeersManager.getPeerID(p))));\n\n      const out = {\n        my_results: [...myResults].slice(0, limit),\n        results: peers.results.map(p => appPeersManager.getPeerID(p))\n      };\n\n      return out;\n    });\n  } */\n  public searchContacts(query: string, limit = 20) {\n    return apiManager.invokeApiSingle('contacts.search', {\n      q: query,\n      limit\n    }).then(peers => {\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      const out = {\n        my_results: filterUnique(peers.my_results.map(p => appPeersManager.getPeerId(p))), // ! contacts.search returns duplicates in my_results\n        results: peers.results.map(p => appPeersManager.getPeerId(p))\n      };\n\n      return out;\n    });\n  }\n\n  private onContactUpdated(userId: number, isContact: boolean) {\n    const curIsContact = this.isContact(userId);\n    if(isContact !== curIsContact) {\n      if(isContact) {\n        this.pushContact(userId);\n      } else {\n        this.contactsList.delete(userId);\n      }\n\n      this.onContactsModified();\n\n      rootScope.dispatchEvent('contacts_update', userId);\n    }\n  }\n\n  public updateUsername(username: string) {\n    return apiManager.invokeApi('account.updateUsername', {\n      username\n    }).then((user) => {\n      this.saveApiUser(user);\n    });\n  }\n\n  public setUserStatus(userId: number, offline: boolean) {\n    if(this.isBot(userId)) {\n      return;\n    }\n\n    const user = this.users[userId];\n    if(user) {\n      const status: any = offline ? {\n        _: 'userStatusOffline',\n        was_online: tsNow(true)\n      } : {\n        _: 'userStatusOnline',\n        expires: tsNow(true) + 500\n      };\n\n      user.status = status;\n      //user.sortStatus = this.getUserStatusForSort(user.status);\n      rootScope.dispatchEvent('user_update', userId);\n    }\n  }\n\n  public addContact(userId: number, first_name: string, last_name: string, phone: string, showPhone?: true) {\n    return apiManager.invokeApi('contacts.addContact', {\n      id: this.getUserInput(userId),\n      first_name,\n      last_name,\n      phone,\n      add_phone_privacy_exception: showPhone\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      this.onContactUpdated(userId, true);\n    });\n  }\n\n  public deleteContacts(userIds: number[]) {\n    return apiManager.invokeApi('contacts.deleteContacts', {\n      id: userIds.map(userId => this.getUserInput(userId))\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      userIds.forEach(userId => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  }\n}\n\nconst appUsersManager = new AppUsersManager();\nMOUNT_CLASS_TO.appUsersManager = appUsersManager;\nexport default appUsersManager\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { isObject, safeReplaceObject, copy, deepEqual } from \"../../helpers/object\";\nimport { ChannelParticipant, Chat, ChatAdminRights, ChatBannedRights, ChatParticipant, ChatPhoto, InputChannel, InputChatPhoto, InputFile, InputPeer, Update, Updates } from \"../../layer\";\nimport apiManagerProxy from \"../mtproto/mtprotoworker\";\nimport apiManager from '../mtproto/mtprotoworker';\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appStateManager from \"./appStateManager\";\nimport appUsersManager from \"./appUsersManager\";\n\nexport type Channel = Chat.channel;\n\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] | 'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants';\n\nexport class AppChatsManager {\n  private storage = appStateManager.storages.chats;\n  \n  private chats: {[id: number]: Chat.channel | Chat.chat | any};\n  //private usernames: any;\n  //private channelAccess: any;\n  //private megagroups: {[id: number]: true};\n\n  constructor() {\n    this.clear(true);\n\n    rootScope.addMultipleEventsListeners({\n      /* updateChannel: (update) => {\n        const channelId = update.channel_id;\n        //console.log('updateChannel:', update);\n        rootScope.broadcast('channel_settings', {channelId});\n      }, */\n\n      updateChannelParticipant: (update) => {\n        apiManagerProxy.clearCache('channels.getParticipants', (params) => {\n          return (params.channel as InputChannel.inputChannel).channel_id === update.channel_id;\n        });\n      },\n\n      updateChatDefaultBannedRights: (update) => {\n        const chatId = -appPeersManager.getPeerId(update.peer);\n        const chat: Chat.chat = this.chats[chatId];\n        if(chat) {\n          chat.default_banned_rights = update.default_banned_rights;\n          rootScope.dispatchEvent('chat_update', chatId);\n        }\n      }\n    });\n\n    appStateManager.getState().then((state) => {\n      const chats = appStateManager.storagesResults.chats;\n      if(chats.length) {\n        for(let i = 0, length = chats.length; i < length; ++i) {\n          const chat = chats[i];\n          if(chat) {\n            this.chats[chat.id] = chat;\n          }\n        }\n      }\n\n      appStateManager.addEventListener('peerNeeded', (peerId: number) => {\n        if(peerId > 0 || this.storage.getFromCache(-peerId)) {\n          return;\n        }\n\n        this.storage.set({\n          [-peerId]: this.getChat(-peerId)\n        });\n      });\n\n      appStateManager.addEventListener('peerUnneeded', (peerId: number) => {\n        if(peerId > 0 || !this.storage.getFromCache(-peerId)) {\n          return;\n        }\n\n        this.storage.delete(-peerId);\n      });\n    });\n  }\n\n  public clear(init = false) {\n    if(!init) {\n      const chats = appStateManager.storagesResults.chats;\n      for(const _chatId in this.chats) {\n        const chatId = +_chatId;\n        if(!chatId) continue;\n        if(!appStateManager.isPeerNeeded(-chatId)) {\n          /* const chat = this.chats[chatId];\n          if(chat.username) {\n            delete this.usernames[cleanUsername(chat.username)];\n          } */\n          \n          chats.findAndSplice((chat) => chat.id === chatId);\n          this.storage.delete(chatId);\n          delete this.chats[chatId];\n        }\n      }\n    } else {\n      this.chats = {};\n    }\n  }\n\n  public saveApiChats(apiChats: any[], override?: boolean) {\n    apiChats.forEach(chat => this.saveApiChat(chat, override));\n  }\n\n  public saveApiChat(chat: Chat, override?: boolean) {\n    if(chat._ === 'chatEmpty') return;\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\n      return;\n    } */\n    \n    // * exclude from state\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\n\n    const oldChat: Exclude<Chat, Chat.chatEmpty> = this.chats[chat.id];\n\n    /* if(oldChat && !override) {\n      return;\n    } */\n\n    if((chat as Chat.chat).pFlags === undefined) {\n      (chat as Chat.chat).pFlags = {};\n    }\n\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\n      return;\n    }\n\n    chat.initials = RichTextProcessor.getAbbreviation(chat.title);\n\n    if(chat._ === 'channel' &&\n        chat.participants_count === undefined &&\n        oldChat !== undefined &&\n        (oldChat as Chat.channel).participants_count) {\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\n    }\n\n    /* if(chat.username) {\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\n      this.usernames[searchUsername] = chat.id;\n    } */\n\n    let changedPhoto = false, changedTitle = false;\n    if(oldChat === undefined) {\n      this.chats[chat.id] = chat;\n    } else {\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      if(oldPhotoId !== newPhotoId) {\n        changedPhoto = true;\n      }\n\n      if(oldChat.title !== chat.title) {\n        changedTitle = true;\n      }\n\n      safeReplaceObject(oldChat, chat);\n      rootScope.dispatchEvent('chat_update', chat.id);\n    }\n\n    if(changedPhoto) {\n      rootScope.dispatchEvent('avatar_update', -chat.id);\n    }\n\n    if(changedTitle) {\n      rootScope.dispatchEvent('peer_title_edit', -chat.id);\n    }\n\n    if(appStateManager.isPeerNeeded(-chat.id)) {\n      this.storage.set({\n        [chat.id]: chat\n      });\n    }\n  }\n\n  public getChat(id: number) {\n    if(id < 0) id = -id;\n    return this.chats[id] || {_: 'chatEmpty', id, deleted: true, access_hash: '', pFlags: {}/* this.channelAccess[id] */};\n  }\n\n  public combineParticipantBannedRights(id: number, rights: ChatBannedRights) {\n    const chat: Chat.channel = this.getChat(id);\n\n    if(chat.default_banned_rights) {\n      rights = copy(rights);\n      const defaultRights = chat.default_banned_rights.pFlags;\n      for(let i in defaultRights) {\n        // @ts-ignore\n        rights.pFlags[i] = defaultRights[i];\n      }\n    }\n\n    return rights;\n  }\n\n  public hasRights(id: number, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'chatEmpty') return false;\n\n    if(chat._ === 'chatForbidden' ||\n        chat._ === 'channelForbidden' ||\n        (chat as Chat.chat).pFlags.kicked ||\n        (chat.pFlags.left && !(chat as Chat.channel).pFlags.megagroup)) {\n      return false;\n    }\n\n    if(chat.pFlags.creator && rights === undefined) {\n      return true;\n    }\n\n    if(!rights) {\n      rights = chat.admin_rights || (chat as Chat.channel).banned_rights || chat.default_banned_rights;\n\n      if(!rights) {\n        return false;\n      }\n    }\n\n    let myFlags: Partial<{[flag in keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags']]: true}> = {};\n    if(rights) {\n      myFlags = rights.pFlags as any;\n    }\n\n    switch(action) {\n      case 'embed_links':\n      case 'send_games':\n      case 'send_gifs':\n      case 'send_inline':\n      case 'send_media':\n      case 'send_messages':\n      case 'send_polls':\n      case 'send_stickers': {\n        if(!isThread && chat.pFlags.left) {\n          return false;\n        }\n\n        if(rights._ === 'chatBannedRights' && myFlags[action]) {\n          return false;\n        }\n\n        if(chat._ === 'channel') {\n          if(!chat.pFlags.megagroup && !myFlags.post_messages) {\n            return false;\n          }\n        }\n\n        break;\n      }\n\n      // * revoke foreign messages\n      case 'delete_messages': {\n        return !!myFlags.delete_messages;\n      }\n\n      case 'pin_messages': {\n        return rights._ === 'chatAdminRights' ? myFlags[action] || !!myFlags.post_messages : !myFlags[action];\n      }\n\n      case 'invite_users':\n      case 'change_info': {\n        return rights._ === 'chatAdminRights' ? myFlags[action] : !myFlags[action];\n      }\n\n      // * only creator can do that\n      case 'change_type':\n      case 'delete_chat': {\n        return false;\n      }\n\n      case 'change_permissions': {\n        return rights._ === 'chatAdminRights' && myFlags['ban_users'];\n      }\n\n      case 'view_participants': {\n        return !!(chat._ === 'chat' || !chat.pFlags.broadcast || chat.pFlags.creator || chat.admin_rights);\n      }\n    }\n\n    return true;\n  }\n\n  public editChatDefaultBannedRights(id: number, banned_rights: ChatBannedRights) {\n    const chat: Chat.chat = this.getChat(id);\n    if(chat.default_banned_rights) {\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\n        return Promise.resolve();\n      }\n    }\n    \n    return apiManager.invokeApi('messages.editChatDefaultBannedRights', {\n      peer: appPeersManager.getInputPeerById(-id),\n      banned_rights\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  /* public resolveUsername(username: string) {\n    return this.usernames[username] || 0;\n  } */\n\n  /* public saveChannelAccess(id: number, accessHash: string) {\n    this.channelAccess[id] = accessHash;\n  } */\n\n  /* public saveIsMegagroup(id: number) {\n    this.megagroups[id] = true;\n  } */\n\n  public isChannel(id: number) {\n    const chat = this.chats[id];\n    return chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */;\n  }\n\n  public isMegagroup(id: number) {\n    /* if(this.megagroups[id]) {\n      return true;\n    } */\n\n    const chat = this.chats[id];\n    return chat && chat._ === 'channel' && chat.pFlags.megagroup;\n  }\n\n  public isBroadcast(id: number) {\n    return this.isChannel(id) && !this.isMegagroup(id);\n  }\n\n  public isInChat(id: number) {\n    let good = true;\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channelForbidden' \n      || chat._ === 'chatForbidden' \n      || chat._ === 'chatEmpty' \n      || (chat as Chat.chat).pFlags.left \n      || (chat as Chat.chat).pFlags.kicked \n      || (chat as Chat.chat).pFlags.deactivated) {\n      good = false;\n    }\n\n    return good;\n  }\n\n  public getChannelInput(id: number): InputChannel {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'chatEmpty' || !(chat as Chat.channel).access_hash) {\n      return {\n        _: 'inputChannelEmpty'\n      };\n    } else {\n      return {\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\n      };\n    }\n  }\n\n  public getChatInputPeer(id: number): InputPeer.inputPeerChat {\n    return {\n      _: 'inputPeerChat',\n      chat_id: id\n    };\n  }\n\n  public getChannelInputPeer(id: number): InputPeer.inputPeerChannel {\n    return {\n      _: 'inputPeerChannel',\n      channel_id: id,\n      access_hash: this.getChat(id).access_hash/*  || this.channelAccess[id] */ || 0\n    };\n  }\n\n  public hasChat(id: number, allowMin?: true) {\n    const chat = this.chats[id]\n    return isObject(chat) && (allowMin || !chat.pFlags.min);\n  }\n\n  public getChatPhoto(id: number) {\n    const chat: Chat.chat = this.getChat(id);\n\n    return chat && chat.photo || {\n      _: 'chatPhotoEmpty'\n    };\n  }\n\n  public getChatString(id: number) {\n    const chat = this.getChat(id);\n    if(this.isChannel(id)) {\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + chat.access_hash;\n    }\n    return 'g' + id;\n  }\n\n  /* public wrapForFull(id: number, fullChat: any) {\n    const chatFull = copy(fullChat);\n    const chat = this.getChat(id);\n\n    if(!chatFull.participants_count) {\n      chatFull.participants_count = chat.participants_count;\n    }\n\n    if(chatFull.participants &&\n        chatFull.participants._ === 'chatParticipants') {\n      chatFull.participants.participants = this.wrapParticipants(id, chatFull.participants.participants);\n    }\n\n    if(chatFull.about) {\n      chatFull.rAbout = RichTextProcessor.wrapRichText(chatFull.about, {noLinebreaks: true});\n    }\n\n    //chatFull.peerString = this.getChatString(id);\n    chatFull.chat = chat;\n\n    return chatFull;\n  }\n\n  public wrapParticipants(id: number, participants: any[]) {\n    const chat = this.getChat(id);\n    const myId = appUsersManager.getSelf().id;\n    if(this.isChannel(id)) {\n      const isAdmin = chat.pFlags.creator;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = isAdmin && participant._ === 'channelParticipant';\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    } else {\n      const isAdmin = chat.pFlags.creator || chat.pFlags.admins_enabled && chat.pFlags.admin;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = !participant.canLeave && (\n          chat.pFlags.creator ||\n          participant._ === 'chatParticipant' && (isAdmin || myId === participant.inviter_id)\n        );\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    }\n\n    return participants;\n  } */\n\n  public createChannel(title: string, about: string): Promise<number> {\n    return apiManager.invokeApi('channels.createChannel', {\n      broadcast: true,\n      title,\n      about\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n\n      const channelId = (updates as any).chats[0].id;\n      rootScope.dispatchEvent('history_focus', {peerId: -channelId});\n\n      return channelId;\n    });\n  }\n\n  public inviteToChannel(id: number, userIds: number[]) {\n    const input = this.getChannelInput(id);\n    const usersInputs = userIds.map(u => appUsersManager.getUserInput(u));\n\n    return apiManager.invokeApi('channels.inviteToChannel', {\n      channel: input,\n      users: usersInputs\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public createChat(title: string, userIds: number[]): Promise<number> {\n    return apiManager.invokeApi('messages.createChat', {\n      users: userIds.map(u => appUsersManager.getUserInput(u)),\n      title\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n\n      const chatId = (updates as any as Updates.updates).chats[0].id;\n      rootScope.dispatchEvent('history_focus', {peerId: -chatId});\n\n      return chatId;\n    });\n  }\n\n  private onChatUpdated = (chatId: number, updates: any) => {\n    //console.log('onChatUpdated', chatId, updates);\n\n    apiUpdatesManager.processUpdateMessage(updates);\n    if(updates &&\n        /* updates.updates &&\n        updates.updates.length && */\n        this.isChannel(chatId)) {\n      rootScope.dispatchEvent('invalidate_participants', chatId);\n    }\n  };\n\n  public leaveChannel(id: number) {\n    return apiManager.invokeApi('channels.leaveChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public joinChannel(id: number) {\n    return apiManager.invokeApi('channels.joinChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public addChatUser(id: number, userId: number, fwdLimit = 100) {\n    return apiManager.invokeApi('messages.addChatUser', {\n      chat_id: id,\n      user_id: appUsersManager.getUserInput(userId),\n      fwd_limit: fwdLimit\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChatUser(id: number, userId: number) {\n    return apiManager.invokeApi('messages.deleteChatUser', {\n      chat_id: id,\n      user_id: appUsersManager.getUserInput(userId)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public leaveChat(id: number) {\n    return this.deleteChatUser(id, appUsersManager.getSelf().id);\n  }\n\n  public leave(id: number) {\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\n  }\n\n  public delete(id: number) {\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\n  }\n\n  public deleteChannel(id: number) {\n    return apiManager.invokeApi('channels.deleteChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChat(id: number) {\n    //return this.leaveChat(id).then(() => {\n      return apiManager.invokeApi('messages.deleteChat', {\n        chat_id: id\n      });\n    //});\n  }\n\n  public migrateChat(id: number): Promise<number> {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\n    return apiManager.invokeApi('messages.migrateChat', {\n      chat_id: id\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find(u => u._ === 'updateChannel') as any;\n      return update.channel_id;\n    });\n  }\n\n  public updateUsername(id: number, username: string) {\n    return apiManager.invokeApi('channels.updateUsername', {\n      channel: this.getChannelInput(id),\n      username\n    }).then((bool) => {\n      if(bool) {\n        const chat: Chat.channel = this.getChat(id);\n        chat.username = username;\n      }\n\n      return bool;\n    });\n  }\n\n  public editPhoto(id: number, inputFile: InputFile) {\n    const inputChatPhoto: InputChatPhoto = {\n      _: 'inputChatUploadedPhoto',\n      file: inputFile\n    };\n\n    let promise: any;\n    if(this.isChannel(id)) {\n      promise = apiManager.invokeApi('channels.editPhoto', {\n        channel: this.getChannelInput(id),\n        photo: inputChatPhoto\n      });\n    } else {\n      promise = apiManager.invokeApi('messages.editChatPhoto', {\n        chat_id: id,\n        photo: inputChatPhoto\n      });\n    }\n\n    return promise.then((updates: any) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editTitle(id: number, title: string) {\n    let promise: any;\n\n    if(this.isChannel(id)) {\n      promise = apiManager.invokeApi('channels.editTitle', {\n        channel: this.getChannelInput(id),\n        title\n      });\n    } else {\n      promise = apiManager.invokeApi('messages.editChatTitle', {\n        chat_id: id,\n        title\n      });\n    }\n\n    return promise.then((updates: any) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editAbout(id: number, about: string) {\n    return apiManager.invokeApi('messages.editChatAbout', {\n      peer: appPeersManager.getInputPeerById(-id),\n      about\n    }).then(bool => {\n      //apiUpdatesManager.processUpdateMessage(updates);\n      rootScope.dispatchEvent('peer_bio_edit', -id);\n    });\n  }\n\n  public getParticipantPeerId(participant: ChannelParticipant | ChatParticipant) {\n    const peerId = (participant as ChannelParticipant.channelParticipantBanned).peer ? \n      appPeersManager.getPeerId((participant as ChannelParticipant.channelParticipantBanned).peer) : \n      (participant as ChatParticipant.chatParticipant).user_id;\n    return peerId;\n  }\n\n  public editBanned(id: number, participant: number | ChannelParticipant, banned_rights: ChatBannedRights) {\n    const peerId = typeof(participant) === 'number' ? participant : this.getParticipantPeerId(participant);\n    return apiManager.invokeApi('channels.editBanned', {\n      channel: this.getChannelInput(id),\n      participant: appPeersManager.getInputPeerById(peerId),\n      banned_rights\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n\n      if(typeof(participant) !== 'number') {\n        const timestamp = Date.now() / 1000 | 0;\n        apiUpdatesManager.processLocalUpdate({\n          _: 'updateChannelParticipant',\n          channel_id: id,\n          date: timestamp,\n          actor_id: undefined,\n          qts: undefined,\n          user_id: peerId,\n          prev_participant: participant,\n          new_participant: Object.keys(banned_rights.pFlags).length ? {\n            _: 'channelParticipantBanned',\n            date: timestamp,\n            banned_rights,\n            kicked_by: appUsersManager.getSelf().id,\n            peer: appPeersManager.getOutputPeer(peerId),\n            pFlags: {}\n          } : undefined\n        });\n      }\n    });\n  }\n\n  public clearChannelParticipantBannedRights(id: number, participant: number | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {}\n    });\n  }\n  \n  public kickFromChannel(id: number, participant: number | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {\n        view_messages: true\n      }\n    });\n  }\n}\n\nconst appChatsManager = new AppChatsManager();\nMOUNT_CLASS_TO.appChatsManager = appChatsManager;\nexport default appChatsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { ChatPhoto, DialogPeer, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, UserProfilePhoto } from \"../../layer\";\nimport type { LangPackKey } from \"../langPack\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { isObject } from \"../../helpers/object\";\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport appChatsManager from \"./appChatsManager\";\nimport appUsersManager from \"./appUsersManager\";\nimport I18n from '../langPack';\n\n// https://github.com/eelcohn/Telegram-API/wiki/Calculating-color-for-a-Telegram-user-on-IRC\n/*\n  HTML-color  IRC-color  Description\n  #c03d33     4          red\n  #4fad2d     3          green\n  #d09306     7          yellow\n  #168acd     10         blue\n  #8544d6     6          purple\n  #cd4073     13         pink\n  #2996ad     11         sea\n  #ce671b     5          orange\n  */\nconst DialogColorsFg = ['#fc5c51', '#0fb297', '#d09306', '#3d72ed', '#895dd5', '#cd4073', '#00c1a6', '#fa790f'];\nconst DialogColors = ['red', 'green', 'yellow', 'blue', 'violet', 'pink', 'cyan', 'orange'];\nconst DialogColorsMap = [0, 7, 4, 1, 6, 3, 5];\n\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\nexport class AppPeersManager {\n  constructor() {\n    rootScope.addMultipleEventsListeners({\n      updatePeerBlocked: (update) => {\n        rootScope.dispatchEvent('peer_block', {peerId: this.getPeerId(update.peer_id), blocked: update.blocked});\n      }\n    });\n  }\n  /* public savePeerInstance(peerId: number, instance: any) {\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\n    else appUsersManager.saveApiUser(instance);\n  } */\n\n  public canPinMessage(peerId: number) {\n    return peerId > 0 || appChatsManager.hasRights(-peerId, 'pin_messages');\n  }\n\n  public getPeerPhoto(peerId: number): UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto {\n    const photo = peerId > 0\n      ? appUsersManager.getUserPhoto(peerId)\n      : appChatsManager.getChatPhoto(-peerId);\n\n    return photo._ !== 'chatPhotoEmpty' && photo._ !== 'userProfilePhotoEmpty' ? photo : null;\n  }\n\n  public getPeerMigratedTo(peerId: number) {\n    if(peerId >= 0) {\n      return false;\n    }\n\n    let chat = appChatsManager.getChat(-peerId);\n    if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n      return this.getPeerId(chat.migrated_to);\n    }\n    \n    return false;\n  }\n\n  public getPeerTitle(peerId: number | any, plainText = false, onlyFirstName = false) {\n    if(!peerId) {\n      peerId = rootScope.myId;\n    }\n    \n    let peer: any = {}; \n    if(!isObject(peerId)) {\n      peer = this.getPeer(peerId);\n    } else peer = peerId;\n\n    let title = '';\n    if(peerId > 0) {\n      if(peer.first_name) title += peer.first_name;\n      if(peer.last_name) title += ' ' + peer.last_name;\n  \n      if(!title) title = peer.pFlags.deleted ? I18n.format('HiddenName', true) : peer.username;\n      else title = title.trim();\n    } else {\n      title = peer.title;\n    }\n\n    if(onlyFirstName) {\n      title = title.split(' ')[0];\n    }\n    \n    return plainText ? title : RichTextProcessor.wrapEmojiText(title);\n  }\n  \n  public getOutputPeer(peerId: number): Peer {\n    if(peerId > 0) {\n      return {_: 'peerUser', user_id: peerId};\n    }\n\n    let chatId = -peerId;\n    if(appChatsManager.isChannel(chatId)) {\n      return {_: 'peerChannel', channel_id: chatId};\n    }\n\n    return {_: 'peerChat', chat_id: chatId};\n  }\n\n  public getPeerString(peerId: number) {\n    if(peerId > 0) {\n      return appUsersManager.getUserString(peerId);\n    }\n    return appChatsManager.getChatString(-peerId);\n  }\n\n  public getPeerUsername(peerId: number): string {\n    if(peerId > 0) {\n      return appUsersManager.getUser(peerId).username || '';\n    }\n    return appChatsManager.getChat(-peerId).username || '';\n  }\n\n  public getPeer(peerId: number) {\n    return peerId > 0\n      ? appUsersManager.getUser(peerId)\n      : appChatsManager.getChat(-peerId)\n  }\n\n  public getPeerId(peerId: Peer | InputPeer | number | string): number {\n    if(typeof(peerId) === 'number') return peerId;\n    else if(isObject(peerId)) return (peerId as Peer.peerUser).user_id || -((peerId as Peer.peerChannel).channel_id || (peerId as Peer.peerChat).chat_id);\n    else if(!peerId) return 0;\n    \n    const isUser = (peerId as string).charAt(0) === 'u';\n    const peerParams = (peerId as string).substr(1).split('_');\n\n    return isUser ? +peerParams[0] : -peerParams[0] || 0;\n  }\n\n  public getDialogPeer(peerId: number): DialogPeer {\n    return {\n      _: 'dialogPeer',\n      peer: this.getOutputPeer(peerId)\n    };\n  }\n\n  public isChannel(peerId: number): boolean {\n    return (peerId < 0) && appChatsManager.isChannel(-peerId);\n  }\n\n  public isMegagroup(peerId: number) {\n    return (peerId < 0) && appChatsManager.isMegagroup(-peerId);\n  }\n\n  public isAnyGroup(peerId: number): boolean {\n    return (peerId < 0) && !appChatsManager.isBroadcast(-peerId);\n  }\n\n  public isBroadcast(peerId: number): boolean {\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\n  }\n\n  public isBot(peerId: number): boolean {\n    return (peerId > 0) && appUsersManager.isBot(peerId);\n  }\n\n  /* public getInputPeer(peerString: string): InputPeer {\n    var firstChar = peerString.charAt(0);\n    var peerParams = peerString.substr(1).split('_');\n    let id = +peerParams[0];\n\n    if(firstChar === 'u') {\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\n\n      return {\n        _: 'inputPeerUser',\n        user_id: id,\n        access_hash: peerParams[1]\n      };\n    } else if(firstChar === 'c' || firstChar === 's') {\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\n      if(firstChar === 's') {\n        appChatsManager.saveIsMegagroup(id);\n      }\n\n      return {\n        _: 'inputPeerChannel',\n        channel_id: id,\n        access_hash: peerParams[1] || '0'\n      };\n    } else {\n      return {\n        _: 'inputPeerChat',\n        chat_id: id\n      };\n    }\n  } */\n\n  public getInputNotifyPeerById(peerId: number, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\n  public getInputNotifyPeerById(peerId: number, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\n  public getInputNotifyPeerById(peerId: number, ignorePeerId?: boolean): InputNotifyPeer {\n    if(ignorePeerId) {\n      if(peerId > 0) {\n        return {_: 'inputNotifyUsers'};\n      } else {\n        if(appPeersManager.isBroadcast(peerId)) {\n          return {_: 'inputNotifyBroadcasts'};\n        } else {\n          return {_: 'inputNotifyChats'};\n        }\n      }\n    } else {\n      return {\n        _: 'inputNotifyPeer', \n        peer: this.getInputPeerById(peerId)\n      };\n    }\n  }\n\n  public getInputPeerById(peerId: number): InputPeer {\n    if(!peerId) {\n      return {_: 'inputPeerEmpty'};\n    }\n\n    if(peerId < 0) {\n      const chatId = -peerId;\n      if(!appChatsManager.isChannel(chatId)) {\n        return appChatsManager.getChatInputPeer(chatId);\n      } else {\n        return appChatsManager.getChannelInputPeer(chatId);\n      }\n    }\n\n    return {\n      _: 'inputPeerUser',\n      user_id: peerId,\n      access_hash: appUsersManager.getUser(peerId).access_hash\n    };\n  }\n\n  public getInputDialogPeerById(peerId: number): InputDialogPeer {\n    return {\n      _: 'inputDialogPeer',\n      peer: this.getInputPeerById(peerId)\n    }\n  }\n\n  public getPeerColorById(peerId: number, pic = true) {\n    if(!peerId) return '';\n\n    const idx = DialogColorsMap[(peerId < 0 ? -peerId : peerId) % 7];\n    const color = (pic ? DialogColors : DialogColorsFg)[idx];\n    return color;\n  }\n\n  public getPeerSearchText(peerId: number) {\n    let text;\n    if(peerId > 0) {\n      text = '%pu ' + appUsersManager.getUserSearchText(peerId);\n    } else if(peerId < 0) {\n      const chat = appChatsManager.getChat(-peerId);\n      text = '%pg ' + (chat.title || '');\n    }\n    return text;\n  }\n\n  public getDialogType(peerId: number): PeerType {\n    if(appPeersManager.isMegagroup(peerId)) {\n      return 'megagroup';\n    } else if(appPeersManager.isChannel(peerId)) {\n      return 'channel';\n    } else if(peerId < 0) {\n      return 'group';\n    } else {\n      return peerId === rootScope.myId ? 'saved' : 'chat';\n    }\n  }\n\n  public getDeleteButtonText(peerId: number): LangPackKey {\n    switch(this.getDialogType(peerId)) {\n      case 'channel':\n        return 'ChatList.Context.LeaveChannel';\n\n      case 'megagroup':\n        return 'ChatList.Context.LeaveGroup';\n\n      case 'group':\n        return 'ChatList.Context.DeleteAndExit';\n      \n      default:\n        return 'ChatList.Context.DeleteChat';\n    }\n  }\n}\n\nconst appPeersManager = new AppPeersManager();\nMOUNT_CLASS_TO.appPeersManager = appPeersManager;\nexport default appPeersManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport { isMobileSafari } from \"../helpers/userAgent\";\nimport { logger } from \"../lib/logger\";\nimport { doubleRaf } from \"../helpers/schedulers\";\nimport blurActiveElement from \"../helpers/dom/blurActiveElement\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\n\nexport type NavigationItem = {\n  type: 'left' | 'right' | 'im' | 'chat' | 'popup' | 'media' | 'menu' | \n    'esg' | 'multiselect' | 'input-helper' | 'autocomplete-helper' | 'markup' | 'global-search',\n  onPop: (canAnimate: boolean) => boolean | void,\n  onEscape?: () => boolean,\n  noHistory?: boolean,\n  noBlurOnPop?: boolean,\n};\n\nexport class AppNavigationController {\n  private navigations: Array<NavigationItem> = [];\n  private id = Date.now();\n  private manual = false;\n  private log = logger('NC');\n  private debug = true;\n  private currentHash = window.location.hash;\n  public onHashChange: () => void;\n\n  constructor() {\n    let isPossibleSwipe = false;\n    window.addEventListener('popstate', (e) => {\n      this.debug && this.log('popstate', e, isPossibleSwipe);\n\n      if(window.location.hash !== this.currentHash) {\n        this.onHashChange && this.onHashChange();\n        this.replaceState();\n        return;\n      }\n      this.currentHash = window.location.hash;\n\n      const id: number = e.state;\n      if(id !== this.id/*  && !this.navigations.length */) {\n        this.pushState();\n        return;\n      }\n\n      const item = this.navigations.pop();\n      if(!item) {\n        this.pushState();\n        return;\n      }\n\n      this.manual = !isPossibleSwipe;\n      this.handleItem(item);\n      //this.pushState(); // * prevent adding forward arrow\n    });\n\n    window.addEventListener('keydown', (e) => {\n      const item = this.navigations[this.navigations.length - 1];\n      if(!item) return;\n      if(e.key === 'Escape' && (item.onEscape ? item.onEscape() : true)) {\n        cancelEvent(e);\n        this.back(item.type);\n      }\n    }, {capture: true, passive: false});\n\n    if(isMobileSafari) {\n      const options = {passive: true};\n      window.addEventListener('touchstart', (e) => {\n        if(e.touches.length > 1) return;\n        this.debug && this.log('touchstart');\n\n        const detach = () => {\n          window.removeEventListener('touchend', onTouchEnd);\n          window.removeEventListener('touchmove', onTouchMove);\n        };\n\n        let moved = false;\n        const onTouchMove = (e: TouchEvent) => {\n          this.debug && this.log('touchmove');\n          if(e.touches.length > 1) {\n            detach();\n            return;\n          }\n\n          moved = true;\n        };\n\n        const onTouchEnd = (e: TouchEvent) => {\n          this.debug && this.log('touchend');\n          if(e.touches.length > 1 || !moved) {\n            detach();\n            return;\n          }\n\n          isPossibleSwipe = true;\n          doubleRaf().then(() => {\n            isPossibleSwipe = false;\n          });\n\n          detach();\n        };\n\n        window.addEventListener('touchend', onTouchEnd, options);\n        window.addEventListener('touchmove', onTouchMove, options);\n      }, options);\n    }\n\n    history.scrollRestoration = 'manual';\n\n    this.pushState(); // * push init state\n  }\n\n  private handleItem(item: NavigationItem) {\n    const good = item.onPop(!this.manual ? false : undefined);\n    this.debug && this.log('popstate, navigation:', item, this.navigations);\n    if(good === false) {\n      this.pushItem(item);\n    } else if(!item.noBlurOnPop) {\n      blurActiveElement(); // no better place for it\n    }\n\n    this.manual = false;\n  }\n\n  public findItemByType(type: NavigationItem['type']) {\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\n      const item = this.navigations[i];\n      if(item.type === type) {\n        return {item, index: i};\n      }\n    }\n  }\n\n  public back(type?: NavigationItem['type']) {\n    if(type) {\n      const ret = this.findItemByType(type);\n      if(ret) {\n        this.manual = true;\n        // ! commented because 'popstate' event will be fired with delay\n        //if(ret.index !== (this.navigations.length - 1)) {\n          this.navigations.splice(ret.index, 1);\n          this.handleItem(ret.item);\n          return;\n        //}\n      }\n    }\n\n    history.back();\n  }\n\n  public pushItem(item: NavigationItem) {\n    this.navigations.push(item);\n    this.debug && this.log('pushstate', item, this.navigations);\n\n    if(!item.noHistory) {\n      this.pushState();\n    }\n  }\n\n  private pushState() {\n    this.manual = false;\n    history.pushState(this.id, '');\n  }\n\n  public replaceState() {\n    history.replaceState(this.id, '', location.origin + location.pathname);\n  }\n\n  public removeItem(item: NavigationItem) {\n    this.navigations.findAndSplice(i => i === item);\n  }\n\n  public removeByType(type: NavigationItem['type'], single = false) {\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\n      const item = this.navigations[i];\n      if(item.type === type) {\n        this.navigations.splice(i, 1);\n\n        if(single) {\n          break;\n        }\n      }\n    }\n  }\n}\n\nconst appNavigationController = new AppNavigationController();\nMOUNT_CLASS_TO.appNavigationController = appNavigationController;\nexport default appNavigationController;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean) {\n  if(disable) {\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\n  } else {\n    elements.forEach(el => el.removeAttribute('disabled'));\n  }\n\n  return () => toggleDisability(elements, !disable);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { ApplyServerTimeOffsetTask } from './timeManager';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\n// import { tsNow } from '../../helpers/date';\nimport sessionStorage from '../sessionStorage';\nimport apiManager from './mtprotoworker';\n\nexport class ServerTimeManager {\n  /* private midnightNoOffset: number;\n  private midnightOffseted: Date;\n\n  private midnightOffset: number; */\n\n  public serverTimeOffset: number; // in seconds\n  /* private timeParams: {\n    midnightOffset: number,\n    serverTimeOffset: number\n  }; */\n\n  constructor() {\n    /* const timestampNow = tsNow(true);\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\n    this.midnightOffseted = new Date();\n    this.midnightOffseted.setHours(0, 0, 0, 0);\n    \n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\n\n    this.serverTimeOffset = 0;\n    /* this.timeParams = {\n      midnightOffset: this.midnightOffset,\n      serverTimeOffset: this.serverTimeOffset\n    }; */\n\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.serverTimeOffset = to;\n        // this.timeParams.serverTimeOffset = to;\n      }\n    });\n\n    apiManager.addTaskListener('applyServerTimeOffset', (task: ApplyServerTimeOffsetTask) => {\n      this.serverTimeOffset = task.payload;\n    });\n  }\n}\n\nconst serverTimeManager = new ServerTimeManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.serverTimeManager = serverTimeManager);\nexport default serverTimeManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n//import apiManager from '../mtproto/apiManager';\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\nimport { Update, Updates } from '../../layer';\nimport { logger, LogTypes } from '../logger';\nimport apiManager from '../mtproto/mtprotoworker';\nimport rootScope from '../rootScope';\n//import networkerFactory from '../mtproto/networkerFactory';\nimport appUsersManager from \"./appUsersManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appStateManager from './appStateManager';\nimport serverTimeManager from '../mtproto/serverTimeManager';\n\ntype UpdatesState = {\n  pendingPtsUpdates: {pts: number, pts_count: number}[],\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\n  syncPending: {\n    seqAwaiting?: number,\n    ptsAwaiting?: true,\n    timeout: number\n  },\n  syncLoading: Promise<void>,\n\n  seq?: number,\n  pts?: number,\n  date?: number,\n  lastPtsUpdateTime?: number\n};\n\nconst SYNC_DELAY = 6;\n\nexport class ApiUpdatesManager {\n  public updatesState: UpdatesState = {\n    pendingPtsUpdates: [],\n    pendingSeqUpdates: {},\n    syncPending: null,\n    syncLoading: null\n  };\n\n  private channelStates: {[channelId: number]: UpdatesState} = {};\n  private attached = false;\n\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\n  private debug = DEBUG;\n\n  private setProxy() {\n    const self = this;\n    this.updatesState = new Proxy(this.updatesState, {\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\n        // @ts-ignore\n        target[key] = value;\n        self.saveUpdatesState();\n        return true;\n      }\n    });\n  }\n\n  public saveUpdatesState() {\n    const us = this.updatesState;\n    appStateManager.pushToState('updates', {\n      seq: us.seq,\n      pts: us.pts,\n      date: us.date\n    });\n  }\n\n  private popPendingSeqUpdate() {\n    const state = this.updatesState;\n    const nextSeq = state.seq + 1;\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\n    if(!pendingUpdatesData) {\n      return false;\n    }\n\n    const updates = pendingUpdatesData.updates;\n    for(let i = 0, length = updates.length; i < length; ++i) {\n      this.saveUpdate(updates[i]);\n    }\n\n    state.seq = pendingUpdatesData.seq;\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\n      state.date = pendingUpdatesData.date;\n    }\n    delete state.pendingSeqUpdates[nextSeq];\n  \n    if(!this.popPendingSeqUpdate() &&\n      state.syncPending &&\n      state.syncPending.seqAwaiting &&\n      state.seq >= state.syncPending.seqAwaiting) {\n      if(!state.syncPending.ptsAwaiting) {\n        clearTimeout(state.syncPending.timeout);\n        state.syncPending = null;\n      } else {\n        delete state.syncPending.seqAwaiting;\n      }\n    }\n  \n    return true;\n  }\n\n  private popPendingPtsUpdate(channelId: number) {\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\n    if(!curState.pendingPtsUpdates.length) {\n      return false;\n    }\n\n    curState.pendingPtsUpdates.sort((a, b) => {\n      return a.pts - b.pts;\n    });\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\n  \n    let curPts = curState.pts;\n    let goodPts = 0;\n    let goodIndex = 0;\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n      curPts += update.pts_count;\n      if(curPts >= update.pts) {\n        goodPts = update.pts;\n        goodIndex = i;\n      }\n    }\n  \n    if(!goodPts) {\n      return false;\n    }\n  \n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\n  \n    curState.pts = goodPts;\n    for(let i = 0; i <= goodIndex; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n\n      // @ts-ignore\n      this.saveUpdate(update);\n    }\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\n  \n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\n      if(!curState.syncPending.seqAwaiting) {\n        clearTimeout(curState.syncPending.timeout);\n        curState.syncPending = null;\n      } else {\n        delete curState.syncPending.ptsAwaiting;\n      }\n    }\n  \n    return true;\n  }\n\n  public forceGetDifference() {\n    if(!this.updatesState.syncLoading) {\n      this.getDifference();\n    }\n  }\n\n  public processLocalUpdate(update: Update) {\n    this.processUpdateMessage({\n      _: 'updateShort',\n      update\n    } as Updates);\n  }\n\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\n    override: boolean\n  }> = {}) => {\n    // return forceGetDifference()\n    const processOpts = {\n      date: updateMessage.date,\n      seq: updateMessage.seq,\n      seqStart: updateMessage.seq_start,\n      //ignoreSyncLoading: options.ignoreSyncLoading\n    };\n\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\n  \n    switch(updateMessage._) {\n      case 'updatesTooLong':\n      case 'new_session_created':\n        this.forceGetDifference();\n        break;\n  \n      case 'updateShort':\n        this.processUpdate(updateMessage.update, processOpts);\n        break;\n  \n      case 'updateShortMessage':\n      case 'updateShortChatMessage': {\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\n        const isOut = updateMessage.pFlags.out;\n        const fromId = updateMessage.from_id || (isOut ? rootScope.myId : updateMessage.user_id);\n        const toId = updateMessage.chat_id\n          ? -updateMessage.chat_id\n          : (updateMessage.user_id || rootScope.myId);\n  \n        this.processUpdate({\n          _: 'updateNewMessage',\n          message: {\n            _: 'message',\n            pFlags: updateMessage.pFlags,\n            id: updateMessage.id,\n            from_id: appPeersManager.getOutputPeer(fromId),\n            peer_id: appPeersManager.getOutputPeer(toId),\n            date: updateMessage.date,\n            message: updateMessage.message,\n            fwd_from: updateMessage.fwd_from,\n            reply_to: updateMessage.reply_to,\n            entities: updateMessage.entities\n          },\n          pts: updateMessage.pts,\n          pts_count: updateMessage.pts_count\n        }, processOpts);\n        break;\n      }\n  \n      case 'updatesCombined':\n      case 'updates':\n        appUsersManager.saveApiUsers(updateMessage.users, options.override);\n        appChatsManager.saveApiChats(updateMessage.chats, options.override);\n  \n        updateMessage.updates.forEach((update: any) => {\n          this.processUpdate(update, processOpts);\n        });\n        break;\n  \n      default:\n        this.log.warn('Unknown update message', updateMessage);\n    }\n  };\n  \n  private getDifference(first = false): Promise<void> {\n    // this.trace('Get full diff')\n    const updatesState = this.updatesState;\n    let wasSyncing = updatesState.syncLoading;\n    if(!wasSyncing) {\n      updatesState.pendingSeqUpdates = {};\n      updatesState.pendingPtsUpdates = [];\n    }\n  \n    if(updatesState.syncPending) {\n      clearTimeout(updatesState.syncPending.timeout);\n      updatesState.syncPending = null;\n    }\n\n    const promise = apiManager.invokeApi('updates.getDifference', {\n      pts: updatesState.pts, \n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\n      date: updatesState.date, \n      qts: -1\n    }, {\n      timeout: 0x7fffffff\n    }).then((differenceResult) => {\n      this.debug && this.log.debug('Get diff result', differenceResult);\n\n      if(differenceResult._ === 'updates.differenceEmpty') {\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\n        updatesState.date = differenceResult.date;\n        updatesState.seq = differenceResult.seq;\n        return;\n      }\n\n      // ! SORRY I'M SORRY I'M SORRY\n      if(first) {\n        rootScope.dispatchEvent('state_synchronizing');\n      }\n\n      if(differenceResult._ !== 'updates.differenceTooLong') {\n        appUsersManager.saveApiUsers(differenceResult.users);\n        appChatsManager.saveApiChats(differenceResult.chats);\n\n        // Should be first because of updateMessageID\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\n    \n        differenceResult.other_updates.forEach((update) => {\n          switch(update._) {\n            case 'updateChannelTooLong':\n            case 'updateNewChannelMessage':\n            case 'updateEditChannelMessage':\n              this.processUpdate(update);\n              return;\n          }\n          \n          this.saveUpdate(update);\n        });\n\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\n        differenceResult.new_messages.forEach((apiMessage) => {\n          this.saveUpdate({\n            _: 'updateNewMessage',\n            message: apiMessage,\n            pts: updatesState.pts,\n            pts_count: 0\n          });\n        });\n\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\n        updatesState.seq = nextState.seq;\n        updatesState.pts = nextState.pts;\n        updatesState.date = nextState.date;\n      } else {\n        updatesState.pts = differenceResult.pts;\n        updatesState.date = (Date.now() / 1000 | 0) + serverTimeManager.serverTimeOffset;\n        delete updatesState.seq;\n        \n        this.channelStates = {};\n        \n        this.log.warn('getDifference:', differenceResult._);\n        rootScope.dispatchEvent('state_cleared');\n      }\n  \n      // this.log('apply diff', updatesState.seq, updatesState.pts)\n  \n      if(differenceResult._ === 'updates.differenceSlice') {\n        return this.getDifference();\n      } else {\n        this.debug && this.log.debug('finished get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(updatesState, promise);\n    }\n  \n    return promise;\n  }\n\n  private getChannelDifference(channelId: number): Promise<void> {\n    const channelState = this.getChannelState(channelId);\n    const wasSyncing = channelState.syncLoading;\n    if(!wasSyncing) {\n      channelState.pendingPtsUpdates = [];\n    }\n\n    if(channelState.syncPending) {\n      clearTimeout(channelState.syncPending.timeout);\n      channelState.syncPending = null;\n    }\n\n    //this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\n    const promise = apiManager.invokeApi('updates.getChannelDifference', {\n      channel: appChatsManager.getChannelInput(channelId),\n      filter: {_: 'channelMessagesFilterEmpty'},\n      pts: channelState.pts,\n      limit: 30\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\n      this.debug && this.log.debug('Get channel diff result', differenceResult)\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\n  \n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\n        this.debug && this.log.debug('apply channel empty diff', differenceResult);\n        return;\n      }\n  \n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\n        this.debug && this.log.debug('channel diff too long', differenceResult);\n        delete this.channelStates[channelId];\n\n        // @ts-ignore\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\n        return;\n      }\n  \n      appUsersManager.saveApiUsers(differenceResult.users);\n      appChatsManager.saveApiChats(differenceResult.chats);\n  \n      // Should be first because of updateMessageID\n      this.debug && this.log.debug('applying', differenceResult.other_updates.length, 'channel other updates');\n      differenceResult.other_updates.forEach((update) => {\n        this.saveUpdate(update);\n      });\n  \n      this.debug && this.log.debug('applying', differenceResult.new_messages.length, 'channel new messages');\n      differenceResult.new_messages.forEach((apiMessage) => {\n        this.saveUpdate({\n          _: 'updateNewChannelMessage',\n          message: apiMessage,\n          pts: channelState.pts,\n          pts_count: 0\n        });\n      });\n  \n      this.debug && this.log.debug('apply channel diff', channelState.pts);\n  \n      if(differenceResult._ === 'updates.channelDifference' &&\n        !differenceResult.pFlags['final']) {\n        return this.getChannelDifference(channelId);\n      } else {\n        this.debug && this.log.debug('finished channel get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(channelState, promise, channelId);\n    }\n\n    return promise;\n  }\n\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: number) {\n    state.syncLoading = promise;\n    rootScope.dispatchEvent('state_synchronizing', channelId);\n\n    promise.then(() => {\n      state.syncLoading = null;\n      rootScope.dispatchEvent('state_synchronized', channelId);\n    }, () => {\n      state.syncLoading = null;\n    });\n  }\n  \n  public addChannelState(channelId: number, pts: number) {\n    if(!pts) {\n      throw new Error('Add channel state without pts ' + channelId);\n    }\n\n    if(!(channelId in this.channelStates)) {\n      this.channelStates[channelId] = {\n        pts,\n        pendingPtsUpdates: [],\n        syncPending: null,\n        syncLoading: null\n      };\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public getChannelState(channelId: number, pts?: number) {\n    if(this.channelStates[channelId] === undefined) {\n      this.addChannelState(channelId, pts);\n    }\n\n    return this.channelStates[channelId];\n  }\n\n  private processUpdate(update: any, options: Partial<{\n    date: number,\n    seq: number,\n    seqStart: number/* ,\n    ignoreSyncLoading: boolean */\n  }> = {}) {\n    let channelId = 0;\n    switch(update._) {\n      case 'updateNewChannelMessage':\n      case 'updateEditChannelMessage':\n        channelId = -appPeersManager.getPeerId(update.message.peer_id);\n        break;\n      case 'updateDeleteChannelMessages':\n        channelId = update.channel_id;\n        break;\n      case 'updateChannelTooLong':\n        channelId = update.channel_id;\n        if(!(channelId in this.channelStates)) {\n          return false;\n        }\n        break;\n    }\n  \n    const curState = channelId ? this.getChannelState(channelId, update.pts) : this.updatesState;\n  \n    // this.log.log('process', channelId, curState.pts, update)\n  \n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\n      return false;\n    }\n  \n    if(update._ === 'updateChannelTooLong') {\n      if(!curState.lastPtsUpdateTime ||\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\n        // this.log.trace('channel too long, get diff', channelId, update)\n        this.getChannelDifference(channelId);\n      }\n      return false;\n    }\n  \n    if(update._ === 'updateNewMessage' ||\n        update._ === 'updateEditMessage' ||\n        update._ === 'updateNewChannelMessage' ||\n        update._ === 'updateEditChannelMessage') {\n      const message = update.message;\n      const toPeerId = appPeersManager.getPeerId(message.peer_id);\n      const fwdHeader = message.fwd_from || {};\n      let reason: any = false;\n      if(message.from_id && !appUsersManager.hasUser(appPeersManager.getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\n          fwdHeader.from_id && !appUsersManager.hasUser(appPeersManager.getPeerId(fwdHeader.from_id), !!fwdHeader.channel_id) && (reason = 'fwdAuthor') ||\n          fwdHeader.channel_id && !appChatsManager.hasChat(fwdHeader.channel_id, true) && (reason = 'fwdChannel') ||\n          toPeerId > 0 && !appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\n          toPeerId < 0 && !appChatsManager.hasChat(-toPeerId) && (reason = 'toPeer Chat')) {\n        this.log.warn('Not enough data for message update', toPeerId, reason, message)\n        if(channelId && appChatsManager.hasChat(channelId)) {\n          this.getChannelDifference(channelId);\n        } else {\n          this.forceGetDifference();\n        }\n        return false;\n      }\n    } else if(channelId && !appChatsManager.hasChat(channelId)) {\n      // this.log.log('skip update, missing channel', channelId, update)\n      return false;\n    }\n  \n    let popPts: boolean;\n    let popSeq: boolean;\n  \n    if(update.pts) {\n      const newPts = curState.pts + (update.pts_count || 0);\n      if(newPts < update.pts) {\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && appChatsManager.getChat(channelId));\n        curState.pendingPtsUpdates.push(update);\n        if(!curState.syncPending && !curState.syncLoading) {\n          curState.syncPending = {\n            timeout: window.setTimeout(() => {\n              curState.syncPending = null;\n\n              if(curState.syncLoading) {\n                return;\n              }\n\n              if(channelId) {\n                this.getChannelDifference(channelId);\n              } else {\n                this.getDifference();\n              }\n            }, SYNC_DELAY)\n          };\n        }\n\n        curState.syncPending.ptsAwaiting = true;\n        return false;\n      }\n\n      if(update.pts > curState.pts) {\n        curState.pts = update.pts;\n        popPts = true;\n  \n        curState.lastPtsUpdateTime = Date.now();\n      } else if(update.pts_count) {\n        // this.log.warn('Duplicate update', update)\n        return false;\n      }\n\n      if(channelId && options.date && this.updatesState.date < options.date) {\n        this.updatesState.date = options.date;\n      }\n    } else if(!channelId && options.seq > 0) {\n      const seq = options.seq;\n      const seqStart = options.seqStart || seq;\n  \n      if(seqStart !== curState.seq + 1) {\n        if(seqStart > curState.seq) {\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending && curState.syncPending.seqAwaiting);\n  \n          if(curState.pendingSeqUpdates[seqStart] === undefined) {\n            curState.pendingSeqUpdates[seqStart] = {seq, date: options.date, updates: []};\n          }\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\n  \n          if(!curState.syncPending) {\n            curState.syncPending = {\n              timeout: window.setTimeout(() => {\n                curState.syncPending = null;\n\n                if(curState.syncLoading) {\n                  return;\n                }\n\n                this.getDifference();\n              }, SYNC_DELAY)\n            };\n          }\n\n          if(!curState.syncPending.seqAwaiting ||\n            curState.syncPending.seqAwaiting < seqStart) {\n            curState.syncPending.seqAwaiting = seqStart;\n          }\n          return false;\n        }\n      }\n  \n      if(curState.seq !== seq) {\n        curState.seq = seq;\n        if(options.date && curState.date < options.date) {\n          curState.date = options.date;\n        }\n\n        popSeq = true;\n      }\n    }\n  \n    this.saveUpdate(update);\n  \n    if(popPts) {\n      this.popPendingPtsUpdate(channelId);\n    } else if(popSeq) {\n      this.popPendingSeqUpdate();\n    }\n  }\n\n  public saveUpdate(update: Update) {\n    //this.debug && this.log('saveUpdate', update);\n    rootScope.dispatchEvent(update._, update as any);\n  }\n  \n  public attach() {\n    if(this.attached) return;\n\n    //return;\n\n    this.log('attach');\n    \n    this.attached = true;\n\n    appStateManager.getState().then(_state => {\n      const state = _state.updates;\n\n      //rootScope.broadcast('state_synchronizing');\n      if(!state || !state.pts || !state.date || !state.seq) {\n        this.log('will get new state');\n\n        this.updatesState.syncLoading = new Promise((resolve) => {\n          apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\n            this.updatesState.seq = stateResult.seq;\n            this.updatesState.pts = stateResult.pts;\n            this.updatesState.date = stateResult.date;\n            this.saveUpdatesState();\n            //setTimeout(() => {\n              this.updatesState.syncLoading = null;\n              resolve();\n              //rootScope.broadcast('state_synchronized');\n            //}, 1000);\n        \n          // ! for testing\n          // updatesState.seq = 1\n          // updatesState.pts = stateResult.pts - 5000\n          // updatesState.date = 1\n          // getDifference()\n          });\n        });\n      } else {\n        // ! for testing\n        /* state.seq = 1;\n        state.pts = state.pts - 15;\n        state.date = 1; */\n        // state.pts -= 100;\n\n        Object.assign(this.updatesState, state);\n        \n        this.log('will get difference', Object.assign({}, state));\n        \n        this.getDifference(true)/* .finally(() => {\n          if(this.updatesState.syncLoading) {\n            rootScope.broadcast('state_synchronizing');\n          }\n        }) */;\n      }\n\n      apiManager.setUpdatesProcessor(this.processUpdateMessage);\n\n      // this.updatesState.syncLoading.then(() => {\n        this.setProxy();\n      // });\n    });\n  }\n}\n\nconst apiUpdatesManager = new ApiUpdatesManager();\nMOUNT_CLASS_TO.apiUpdatesManager = apiUpdatesManager;\nexport default apiUpdatesManager\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { fastRaf } from \"./schedulers\";\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport isInDOM from \"./dom/isInDOM\";\n\nclass SequentialDom {\n  private promises: Partial<{\n    read: CancellablePromise<void>,\n    write: CancellablePromise<void>\n  }> = {};\n  private raf = fastRaf.bind(null);\n  private scheduled = false;\n\n  private do(kind: keyof SequentialDom['promises'], callback?: VoidFunction) {\n    let promise = this.promises[kind];\n    if(!promise) {\n      this.scheduleFlush();\n      promise = this.promises[kind] = deferredPromise<void>();\n    }\n\n    if(callback !== undefined) {\n      promise.then(() => callback());\n    }\n    \n    return promise;\n  }\n\n  public measure(callback?: VoidFunction) {\n    return this.do('read', callback);\n  }\n\n  public mutate(callback?: VoidFunction) {\n    return this.do('write', callback);\n  }\n\n  /**\n   * Will fire instantly if element is not connected\n   * @param element \n   * @param callback \n   */\n  public mutateElement(element: HTMLElement, callback?: VoidFunction) {\n    const promise = isInDOM(element) ? this.mutate() : Promise.resolve();\n\n    if(callback !== undefined) {\n      promise.then(() => callback());\n    }\n\n    return promise;\n  }\n\n  private scheduleFlush() {\n    if(!this.scheduled) {\n      this.scheduled = true;\n\n      this.raf(() => {\n        this.promises.read && this.promises.read.resolve();\n        this.promises.write && this.promises.write.resolve();\n\n        this.scheduled = false;\n        this.promises = {};\n      });\n    }\n  }\n}\n\nconst sequentialDom = new SequentialDom();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.sequentialDom = sequentialDom);\nexport default sequentialDom;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n/* import { copy } from \"./object\";\n\nexport function listMergeSorted(list1: any[] = [], list2: any[] = []) {\n  const result = copy(list1);\n\n  const minId = list1.length ? list1[list1.length - 1] : 0xFFFFFFFF;\n  for(let i = 0; i < list2.length; i++) {\n    if(list2[i] < minId) {\n      result.push(list2[i]);\n    }\n  }\n\n  return result;\n} */\n\nexport const accumulate = (arr: number[], initialValue: number) => arr.reduce((acc, value) => acc + value, initialValue);\n\nexport function findAndSpliceAll<T>(array: Array<T>, verify: (value: T, index: number, arr: typeof array) => boolean) {\n  const out: typeof array = [];\n  let idx = -1;\n  while((idx = array.findIndex(verify)) !== -1) {\n    out.push(array.splice(idx, 1)[0]);\n  }\n\n  return out;\n}\n\nexport function forEachReverse<T>(array: Array<T>, callback: (value: T, index?: number, array?: Array<T>) => void) {\n  for(let length = array.length, i = length - 1; i >= 0; --i) {\n    callback(array[i], i, array);\n  }\n};\n\nexport function insertInDescendSortedArray<T extends {[smth in K]?: number}, K extends keyof T>(array: Array<T>, element: T, property: K, pos?: number) {\n  if(pos === undefined) {\n    pos = array.indexOf(element);\n    if(pos !== -1) {\n      array.splice(pos, 1);\n    }\n  }\n\n  const sortProperty: number = element[property];\n  const len = array.length;\n  if(!len || sortProperty <= array[len - 1][property]) {\n    return array.push(element) - 1;\n  } else if(sortProperty >= array[0][property]) {\n    array.unshift(element);\n    return 0;\n  } else {\n    for(let i = 0; i < len; i++) {\n      if(sortProperty > array[i][property]) {\n        array.splice(i, 0, element);\n        return i;\n      }\n    }\n  }\n\n  console.error('wtf', array, element);\n  return array.indexOf(element);\n}\n\nexport function filterUnique<T extends Array<any>>(arr: T): T {\n  return [...new Set(arr)] as T;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"./config/debug\";\n\nexport type Country = {\n  phoneCode: string,\n  code: string,\n  name: string,\n  pattern: string,\n  emoji: string\n};\n\nconst Countries: Country[] = [{\"phoneCode\":\"7 840\",\"code\":\"AB\",\"name\":\"Abkhazia\",\"pattern\":\"\",\"emoji\":\"\"},{\"phoneCode\":\"93\",\"code\":\"AF\",\"name\":\"Afghanistan\",\"pattern\":\"93 XXX XXX XXX\",\"emoji\":\"🇦🇫\"},{\"phoneCode\":\"358 18\",\"code\":\"AX\",\"name\":\"Aland Islands\",\"pattern\":\"\",\"emoji\":\"🇦🇽\"},{\"phoneCode\":\"355\",\"code\":\"AL\",\"name\":\"Albania\",\"pattern\":\"355 XX XXX XXXX\",\"emoji\":\"🇦🇱\"},{\"phoneCode\":\"213\",\"code\":\"DZ\",\"name\":\"Algeria\",\"pattern\":\"213 XXX XX XX XX\",\"emoji\":\"🇩🇿\"},{\"phoneCode\":\"1 684\",\"code\":\"AS\",\"name\":\"American Samoa\",\"pattern\":\"1684 XXX XXXX\",\"emoji\":\"🇦🇸\"},{\"phoneCode\":\"376\",\"code\":\"AD\",\"name\":\"Andorra\",\"pattern\":\"376 XX XX XX\",\"emoji\":\"🇦🇩\"},{\"phoneCode\":\"244\",\"code\":\"AO\",\"name\":\"Angola\",\"pattern\":\"244 XXX XXX XXX\",\"emoji\":\"🇦🇴\"},{\"phoneCode\":\"1 264\",\"code\":\"AI\",\"name\":\"Anguilla\",\"pattern\":\"1264 XXX XXXX\",\"emoji\":\"🇦🇮\"},{\"phoneCode\":\"1 268\",\"code\":\"AG\",\"name\":\"Antigua & Barbuda\",\"pattern\":\"1268 XXX XXXX\",\"emoji\":\"🇦🇬\"},{\"phoneCode\":\"54\",\"code\":\"AR\",\"name\":\"Argentina\",\"pattern\":\"\",\"emoji\":\"🇦🇷\"},{\"phoneCode\":\"374\",\"code\":\"AM\",\"name\":\"Armenia\",\"pattern\":\"374 XX XXX XXX\",\"emoji\":\"🇦🇲\"},{\"phoneCode\":\"297\",\"code\":\"AW\",\"name\":\"Aruba\",\"pattern\":\"297 XXX XXXX\",\"emoji\":\"🇦🇼\"},{\"phoneCode\":\"247\",\"code\":\"SH\",\"name\":\"Ascension\",\"pattern\":\"290 XX XXX\",\"emoji\":\"🇸🇭\"},{\"phoneCode\":\"61\",\"code\":\"AU\",\"name\":\"Australia\",\"pattern\":\"61 XXX XXX XXX\",\"emoji\":\"🇦🇺\"},{\"phoneCode\":\"672\",\"code\":\"AU\",\"name\":\"Australian External Territories\",\"pattern\":\"61 XXX XXX XXX\",\"emoji\":\"🇦🇺\"},{\"phoneCode\":\"43\",\"code\":\"AT\",\"name\":\"Austria\",\"pattern\":\"\",\"emoji\":\"🇦🇹\"},{\"phoneCode\":\"994\",\"code\":\"AZ\",\"name\":\"Azerbaijan\",\"pattern\":\"994 XX XXX XX XX\",\"emoji\":\"🇦🇿\"},{\"phoneCode\":\"1 242\",\"code\":\"BS\",\"name\":\"Bahamas\",\"pattern\":\"1242 XXX XXXX\",\"emoji\":\"🇧🇸\"},{\"phoneCode\":\"973\",\"code\":\"BH\",\"name\":\"Bahrain\",\"pattern\":\"973 XXXX XXXX\",\"emoji\":\"🇧🇭\"},{\"phoneCode\":\"880\",\"code\":\"BD\",\"name\":\"Bangladesh\",\"pattern\":\"\",\"emoji\":\"🇧🇩\"},{\"phoneCode\":\"1 246\",\"code\":\"BB\",\"name\":\"Barbados\",\"pattern\":\"1246 XXX XXXX\",\"emoji\":\"🇧🇧\"},{\"phoneCode\":\"1 268\",\"code\":\"AG\",\"name\":\"Barbuda\",\"pattern\":\"1268 XXX XXXX\",\"emoji\":\"🇦🇬\"},{\"phoneCode\":\"375\",\"code\":\"BY\",\"name\":\"Belarus\",\"pattern\":\"375 XX XXX XXXX\",\"emoji\":\"🇧🇾\"},{\"phoneCode\":\"32\",\"code\":\"BE\",\"name\":\"Belgium\",\"pattern\":\"32 XXX XX XX XX\",\"emoji\":\"🇧🇪\"},{\"phoneCode\":\"501\",\"code\":\"BZ\",\"name\":\"Belize\",\"pattern\":\"\",\"emoji\":\"🇧🇿\"},{\"phoneCode\":\"229\",\"code\":\"BJ\",\"name\":\"Benin\",\"pattern\":\"229 XX XXX XXX\",\"emoji\":\"🇧🇯\"},{\"phoneCode\":\"1 441\",\"code\":\"BM\",\"name\":\"Bermuda\",\"pattern\":\"1441 XXX XXXX\",\"emoji\":\"🇧🇲\"},{\"phoneCode\":\"975\",\"code\":\"BT\",\"name\":\"Bhutan\",\"pattern\":\"\",\"emoji\":\"🇧🇹\"},{\"phoneCode\":\"591\",\"code\":\"BO\",\"name\":\"Bolivia\",\"pattern\":\"591 X XXX XXXX\",\"emoji\":\"🇧🇴\"},{\"phoneCode\":\"599 7\",\"code\":\"BQ\",\"name\":\"Caribbean Netherlands\",\"pattern\":\"\",\"emoji\":\"🇧🇶\"},{\"phoneCode\":\"387\",\"code\":\"BA\",\"name\":\"Bosnia & Herzegovina\",\"pattern\":\"\",\"emoji\":\"🇧🇦\"},{\"phoneCode\":\"267\",\"code\":\"BW\",\"name\":\"Botswana\",\"pattern\":\"267 XX XXX XXX\",\"emoji\":\"🇧🇼\"},{\"phoneCode\":\"55\",\"code\":\"BR\",\"name\":\"Brazil\",\"pattern\":\"55 XX XXXXX XXXX\",\"emoji\":\"🇧🇷\"},{\"phoneCode\":\"246\",\"code\":\"IO\",\"name\":\"British Indian Ocean Territory\",\"pattern\":\"246 XXX XXXX\",\"emoji\":\"🇮🇴\"},{\"phoneCode\":\"1 284\",\"code\":\"VG\",\"name\":\"British Virgin Islands\",\"pattern\":\"1284 XXX XXXX\",\"emoji\":\"🇻🇬\"},{\"phoneCode\":\"673\",\"code\":\"BN\",\"name\":\"Brunei\",\"pattern\":\"673 XXX XXXX\",\"emoji\":\"🇧🇳\"},{\"phoneCode\":\"359\",\"code\":\"BG\",\"name\":\"Bulgaria\",\"pattern\":\"\",\"emoji\":\"🇧🇬\"},{\"phoneCode\":\"226\",\"code\":\"BF\",\"name\":\"Burkina Faso\",\"pattern\":\"226 XX XX XX XX\",\"emoji\":\"🇧🇫\"},{\"phoneCode\":\"95\",\"code\":\"MM\",\"name\":\"Myanmar (Burma)\",\"pattern\":\"\",\"emoji\":\"🇲🇲\"},{\"phoneCode\":\"257\",\"code\":\"BI\",\"name\":\"Burundi\",\"pattern\":\"257 XX XX XXXX\",\"emoji\":\"🇧🇮\"},{\"phoneCode\":\"855\",\"code\":\"KH\",\"name\":\"Cambodia\",\"pattern\":\"\",\"emoji\":\"🇰🇭\"},{\"phoneCode\":\"237\",\"code\":\"CM\",\"name\":\"Cameroon\",\"pattern\":\"237 XXXX XXXX\",\"emoji\":\"🇨🇲\"},{\"phoneCode\":\"1\",\"code\":\"CA\",\"name\":\"Canada\",\"pattern\":\"1 XXX XXX XXXX\",\"emoji\":\"🇨🇦\"},{\"phoneCode\":\"238\",\"code\":\"CV\",\"name\":\"Cape Verde\",\"pattern\":\"238 XXX XXXX\",\"emoji\":\"🇨🇻\"},{\"phoneCode\":\"1 345\",\"code\":\"KY\",\"name\":\"Cayman Islands\",\"pattern\":\"1345 XXX XXXX\",\"emoji\":\"🇰🇾\"},{\"phoneCode\":\"236\",\"code\":\"CF\",\"name\":\"Central African Republic\",\"pattern\":\"236 XX XX XX XX\",\"emoji\":\"🇨🇫\"},{\"phoneCode\":\"235\",\"code\":\"TD\",\"name\":\"Chad\",\"pattern\":\"235 XX XX XX XX\",\"emoji\":\"🇹🇩\"},{\"phoneCode\":\"56\",\"code\":\"CL\",\"name\":\"Chile\",\"pattern\":\"56 X XXXX XXXX\",\"emoji\":\"🇨🇱\"},{\"phoneCode\":\"86\",\"code\":\"CN\",\"name\":\"China\",\"pattern\":\"86 XXX XXXX XXXX\",\"emoji\":\"🇨🇳\"},{\"phoneCode\":\"61\",\"code\":\"CX\",\"name\":\"Christmas Island\",\"pattern\":\"\",\"emoji\":\"🇨🇽\"},{\"phoneCode\":\"61\",\"code\":\"CC\",\"name\":\"Cocos (Keeling) Islands\",\"pattern\":\"\",\"emoji\":\"🇨🇨\"},{\"phoneCode\":\"57\",\"code\":\"CO\",\"name\":\"Colombia\",\"pattern\":\"57 XXX XXX XXXX\",\"emoji\":\"🇨🇴\"},{\"phoneCode\":\"269\",\"code\":\"KM\",\"name\":\"Comoros\",\"pattern\":\"269 XXX XXXX\",\"emoji\":\"🇰🇲\"},{\"phoneCode\":\"242\",\"code\":\"CG\",\"name\":\"Congo - Brazzaville\",\"pattern\":\"242 XX XXX XXXX\",\"emoji\":\"🇨🇬\"},{\"phoneCode\":\"243\",\"code\":\"CD\",\"name\":\"Congo - Kinshasa\",\"pattern\":\"243 XX XXX XXXX\",\"emoji\":\"🇨🇩\"},{\"phoneCode\":\"682\",\"code\":\"CK\",\"name\":\"Cook Islands\",\"pattern\":\"\",\"emoji\":\"🇨🇰\"},{\"phoneCode\":\"506\",\"code\":\"CR\",\"name\":\"Costa Rica\",\"pattern\":\"\",\"emoji\":\"🇨🇷\"},{\"phoneCode\":\"225\",\"code\":\"CI\",\"name\":\"Cote d’Ivoire\",\"pattern\":\"225 XX XXX XXX\",\"emoji\":\"🇨🇮\"},{\"phoneCode\":\"385\",\"code\":\"HR\",\"name\":\"Croatia\",\"pattern\":\"\",\"emoji\":\"🇭🇷\"},{\"phoneCode\":\"53\",\"code\":\"CU\",\"name\":\"Cuba\",\"pattern\":\"53 XXXX XXXX\",\"emoji\":\"🇨🇺\"},{\"phoneCode\":\"599 9\",\"code\":\"CW\",\"name\":\"Curacao\",\"pattern\":\"\",\"emoji\":\"🇨🇼\"},{\"phoneCode\":\"357\",\"code\":\"CY\",\"name\":\"Cyprus\",\"pattern\":\"357 XXXX XXXX\",\"emoji\":\"🇨🇾\"},{\"phoneCode\":\"420\",\"code\":\"CZ\",\"name\":\"Czech Republic\",\"pattern\":\"\",\"emoji\":\"🇨🇿\"},{\"phoneCode\":\"45\",\"code\":\"DK\",\"name\":\"Denmark\",\"pattern\":\"45 XXXX XXXX\",\"emoji\":\"🇩🇰\"},{\"phoneCode\":\"246\",\"code\":\"DG\",\"name\":\"Diego Garcia\",\"pattern\":\"\",\"emoji\":\"🇩🇬\"},{\"phoneCode\":\"253\",\"code\":\"DJ\",\"name\":\"Djibouti\",\"pattern\":\"253 XX XX XX XX\",\"emoji\":\"🇩🇯\"},{\"phoneCode\":\"1 767\",\"code\":\"DM\",\"name\":\"Dominica\",\"pattern\":\"1767 XXX XXXX\",\"emoji\":\"🇩🇲\"},{\"phoneCode\":\"1 809 and 1 829\",\"code\":\"DO\",\"name\":\"Dominican Republic\",\"pattern\":\"1 XXX XXX XXXX\",\"emoji\":\"🇩🇴\"},{\"phoneCode\":\"670\",\"code\":\"TL\",\"name\":\"Timor-Leste\",\"pattern\":\"\",\"emoji\":\"🇹🇱\"},{\"phoneCode\":\"593\",\"code\":\"EC\",\"name\":\"Ecuador\",\"pattern\":\"\",\"emoji\":\"🇪🇨\"},{\"phoneCode\":\"20\",\"code\":\"EG\",\"name\":\"Egypt\",\"pattern\":\"20 XX XXX XXXX\",\"emoji\":\"🇪🇬\"},{\"phoneCode\":\"503\",\"code\":\"SV\",\"name\":\"El Salvador\",\"pattern\":\"503 XXXX XXXX\",\"emoji\":\"🇸🇻\"},{\"phoneCode\":\"240\",\"code\":\"GQ\",\"name\":\"Equatorial Guinea\",\"pattern\":\"240 XXX XXX XXX\",\"emoji\":\"🇬🇶\"},{\"phoneCode\":\"291\",\"code\":\"ER\",\"name\":\"Eritrea\",\"pattern\":\"291 X XXX XXX\",\"emoji\":\"🇪🇷\"},{\"phoneCode\":\"372\",\"code\":\"EE\",\"name\":\"Estonia\",\"pattern\":\"\",\"emoji\":\"🇪🇪\"},{\"phoneCode\":\"251\",\"code\":\"ET\",\"name\":\"Ethiopia\",\"pattern\":\"251 XX XXX XXXX\",\"emoji\":\"🇪🇹\"},{\"phoneCode\":\"500\",\"code\":\"FK\",\"name\":\"Falkland Islands\",\"pattern\":\"\",\"emoji\":\"🇫🇰\"},{\"phoneCode\":\"298\",\"code\":\"FO\",\"name\":\"Faroe Islands\",\"pattern\":\"298 XXX XXX\",\"emoji\":\"🇫🇴\"},{\"phoneCode\":\"679\",\"code\":\"FJ\",\"name\":\"Fiji\",\"pattern\":\"\",\"emoji\":\"🇫🇯\"},{\"phoneCode\":\"358\",\"code\":\"FI\",\"name\":\"Finland\",\"pattern\":\"\",\"emoji\":\"🇫🇮\"},{\"phoneCode\":\"33\",\"code\":\"FR\",\"name\":\"France\",\"pattern\":\"33 X XX XX XX XX\",\"emoji\":\"🇫🇷\"},{\"phoneCode\":\"594\",\"code\":\"GF\",\"name\":\"French Guiana\",\"pattern\":\"\",\"emoji\":\"🇬🇫\"},{\"phoneCode\":\"689\",\"code\":\"PF\",\"name\":\"French Polynesia\",\"pattern\":\"\",\"emoji\":\"🇵🇫\"},{\"phoneCode\":\"241\",\"code\":\"GA\",\"name\":\"Gabon\",\"pattern\":\"241 X XX XX XX\",\"emoji\":\"🇬🇦\"},{\"phoneCode\":\"220\",\"code\":\"GM\",\"name\":\"Gambia\",\"pattern\":\"220 XXX XXXX\",\"emoji\":\"🇬🇲\"},{\"phoneCode\":\"995\",\"code\":\"GE\",\"name\":\"Georgia\",\"pattern\":\"\",\"emoji\":\"🇬🇪\"},{\"phoneCode\":\"49\",\"code\":\"DE\",\"name\":\"Germany\",\"pattern\":\"49 XXX XXXXXXXX\",\"emoji\":\"🇩🇪\"},{\"phoneCode\":\"233\",\"code\":\"GH\",\"name\":\"Ghana\",\"pattern\":\"\",\"emoji\":\"🇬🇭\"},{\"phoneCode\":\"350\",\"code\":\"GI\",\"name\":\"Gibraltar\",\"pattern\":\"350 XXXX XXXX\",\"emoji\":\"🇬🇮\"},{\"phoneCode\":\"30\",\"code\":\"GR\",\"name\":\"Greece\",\"pattern\":\"30 XX XXXX XXXX\",\"emoji\":\"🇬🇷\"},{\"phoneCode\":\"299\",\"code\":\"GL\",\"name\":\"Greenland\",\"pattern\":\"299 XXX XXX\",\"emoji\":\"🇬🇱\"},{\"phoneCode\":\"1 473\",\"code\":\"GD\",\"name\":\"Grenada\",\"pattern\":\"1473 XXX XXXX\",\"emoji\":\"🇬🇩\"},{\"phoneCode\":\"590\",\"code\":\"GP\",\"name\":\"Guadeloupe\",\"pattern\":\"\",\"emoji\":\"🇬🇵\"},{\"phoneCode\":\"1 671\",\"code\":\"GU\",\"name\":\"Guam\",\"pattern\":\"1671 XXX XXXX\",\"emoji\":\"🇬🇺\"},{\"phoneCode\":\"502\",\"code\":\"GT\",\"name\":\"Guatemala\",\"pattern\":\"502 X XXX XXXX\",\"emoji\":\"🇬🇹\"},{\"phoneCode\":\"44\",\"code\":\"GG\",\"name\":\"Guernsey\",\"pattern\":\"\",\"emoji\":\"🇬🇬\"},{\"phoneCode\":\"224\",\"code\":\"GN\",\"name\":\"Guinea\",\"pattern\":\"224 XXX XXX XXX\",\"emoji\":\"🇬🇳\"},{\"phoneCode\":\"245\",\"code\":\"GW\",\"name\":\"Guinea-Bissau\",\"pattern\":\"245 XXX XXXX\",\"emoji\":\"🇬🇼\"},{\"phoneCode\":\"592\",\"code\":\"GY\",\"name\":\"Guyana\",\"pattern\":\"\",\"emoji\":\"🇬🇾\"},{\"phoneCode\":\"509\",\"code\":\"HT\",\"name\":\"Haiti\",\"pattern\":\"\",\"emoji\":\"🇭🇹\"},{\"phoneCode\":\"504\",\"code\":\"HN\",\"name\":\"Honduras\",\"pattern\":\"504 XXXX XXXX\",\"emoji\":\"🇭🇳\"},{\"phoneCode\":\"852\",\"code\":\"HK\",\"name\":\"Hong Kong SAR China\",\"pattern\":\"\",\"emoji\":\"🇭🇰\"},{\"phoneCode\":\"36\",\"code\":\"HU\",\"name\":\"Hungary\",\"pattern\":\"36 XX XXX XXXX\",\"emoji\":\"🇭🇺\"},{\"phoneCode\":\"354\",\"code\":\"IS\",\"name\":\"Iceland\",\"pattern\":\"354 XXX XXXX\",\"emoji\":\"🇮🇸\"},{\"phoneCode\":\"91\",\"code\":\"IN\",\"name\":\"India\",\"pattern\":\"91 XXXXX XXXXX\",\"emoji\":\"🇮🇳\"},{\"phoneCode\":\"62\",\"code\":\"ID\",\"name\":\"Indonesia\",\"pattern\":\"\",\"emoji\":\"🇮🇩\"},{\"phoneCode\":\"98\",\"code\":\"IR\",\"name\":\"Iran\",\"pattern\":\"98 XXX XXX XXXX\",\"emoji\":\"🇮🇷\"},{\"phoneCode\":\"964\",\"code\":\"IQ\",\"name\":\"Iraq\",\"pattern\":\"964 XXX XXX XXXX\",\"emoji\":\"🇮🇶\"},{\"phoneCode\":\"353\",\"code\":\"IE\",\"name\":\"Ireland\",\"pattern\":\"353 XX XXX XXXX\",\"emoji\":\"🇮🇪\"},{\"phoneCode\":\"972\",\"code\":\"IL\",\"name\":\"Israel\",\"pattern\":\"972 XX XXX XXXX\",\"emoji\":\"🇮🇱\"},{\"phoneCode\":\"39\",\"code\":\"IT\",\"name\":\"Italy\",\"pattern\":\"39 XXX XXX XXXX\",\"emoji\":\"🇮🇹\"},{\"phoneCode\":\"1 876\",\"code\":\"JM\",\"name\":\"Jamaica\",\"pattern\":\"1876 XXX XXXX\",\"emoji\":\"🇯🇲\"},{\"phoneCode\":\"47 79\",\"code\":\"SJ\",\"name\":\"Svalbard & Jan Mayen\",\"pattern\":\"\",\"emoji\":\"🇸🇯\"},{\"phoneCode\":\"81\",\"code\":\"JP\",\"name\":\"Japan\",\"pattern\":\"81 XX XXXX XXXX\",\"emoji\":\"🇯🇵\"},{\"phoneCode\":\"44\",\"code\":\"JE\",\"name\":\"Jersey\",\"pattern\":\"\",\"emoji\":\"🇯🇪\"},{\"phoneCode\":\"962\",\"code\":\"JO\",\"name\":\"Jordan\",\"pattern\":\"962 X XXXX XXXX\",\"emoji\":\"🇯🇴\"},{\"phoneCode\":\"383\",\"code\":\"XK\",\"name\":\"Kosovo\",\"pattern\":\"383 XXXX XXXX\",\"emoji\":\"🇽🇰\"},{\"phoneCode\":\"7 7\",\"code\":\"KZ\",\"name\":\"Kazakhstan\",\"pattern\":\"7 XXX XXX XX XX\",\"emoji\":\"🇰🇿\"},{\"phoneCode\":\"254\",\"code\":\"KE\",\"name\":\"Kenya\",\"pattern\":\"254 XXX XXX XXX\",\"emoji\":\"🇰🇪\"},{\"phoneCode\":\"686\",\"code\":\"KI\",\"name\":\"Kiribati\",\"pattern\":\"\",\"emoji\":\"🇰🇮\"},{\"phoneCode\":\"850\",\"code\":\"KP\",\"name\":\"North Korea\",\"pattern\":\"\",\"emoji\":\"🇰🇵\"},{\"phoneCode\":\"82\",\"code\":\"KR\",\"name\":\"South Korea\",\"pattern\":\"\",\"emoji\":\"🇰🇷\"},{\"phoneCode\":\"965\",\"code\":\"KW\",\"name\":\"Kuwait\",\"pattern\":\"965 XXXX XXXX\",\"emoji\":\"🇰🇼\"},{\"phoneCode\":\"996\",\"code\":\"KG\",\"name\":\"Kyrgyzstan\",\"pattern\":\"\",\"emoji\":\"🇰🇬\"},{\"phoneCode\":\"856\",\"code\":\"LA\",\"name\":\"Laos\",\"pattern\":\"\",\"emoji\":\"🇱🇦\"},{\"phoneCode\":\"371\",\"code\":\"LV\",\"name\":\"Latvia\",\"pattern\":\"371 XXX XXXXX\",\"emoji\":\"🇱🇻\"},{\"phoneCode\":\"961\",\"code\":\"LB\",\"name\":\"Lebanon\",\"pattern\":\"\",\"emoji\":\"🇱🇧\"},{\"phoneCode\":\"266\",\"code\":\"LS\",\"name\":\"Lesotho\",\"pattern\":\"266 XX XXX XXX\",\"emoji\":\"🇱🇸\"},{\"phoneCode\":\"231\",\"code\":\"LR\",\"name\":\"Liberia\",\"pattern\":\"\",\"emoji\":\"🇱🇷\"},{\"phoneCode\":\"218\",\"code\":\"LY\",\"name\":\"Libya\",\"pattern\":\"218 XX XXX XXXX\",\"emoji\":\"🇱🇾\"},{\"phoneCode\":\"423\",\"code\":\"LI\",\"name\":\"Liechtenstein\",\"pattern\":\"\",\"emoji\":\"🇱🇮\"},{\"phoneCode\":\"370\",\"code\":\"LT\",\"name\":\"Lithuania\",\"pattern\":\"370 XXX XXXXX\",\"emoji\":\"🇱🇹\"},{\"phoneCode\":\"352\",\"code\":\"LU\",\"name\":\"Luxembourg\",\"pattern\":\"\",\"emoji\":\"🇱🇺\"},{\"phoneCode\":\"853\",\"code\":\"MO\",\"name\":\"Macau SAR China\",\"pattern\":\"\",\"emoji\":\"🇲🇴\"},{\"phoneCode\":\"389\",\"code\":\"MK\",\"name\":\"Macedonia\",\"pattern\":\"\",\"emoji\":\"🇲🇰\"},{\"phoneCode\":\"261\",\"code\":\"MG\",\"name\":\"Madagascar\",\"pattern\":\"261 XX XX XXX XX\",\"emoji\":\"🇲🇬\"},{\"phoneCode\":\"265\",\"code\":\"MW\",\"name\":\"Malawi\",\"pattern\":\"\",\"emoji\":\"🇲🇼\"},{\"phoneCode\":\"60\",\"code\":\"MY\",\"name\":\"Malaysia\",\"pattern\":\"\",\"emoji\":\"🇲🇾\"},{\"phoneCode\":\"960\",\"code\":\"MV\",\"name\":\"Maldives\",\"pattern\":\"\",\"emoji\":\"🇲🇻\"},{\"phoneCode\":\"223\",\"code\":\"ML\",\"name\":\"Mali\",\"pattern\":\"223 XXXX XXXX\",\"emoji\":\"🇲🇱\"},{\"phoneCode\":\"356\",\"code\":\"MT\",\"name\":\"Malta\",\"pattern\":\"356 XX XX XX XX\",\"emoji\":\"🇲🇹\"},{\"phoneCode\":\"692\",\"code\":\"MH\",\"name\":\"Marshall Islands\",\"pattern\":\"\",\"emoji\":\"🇲🇭\"},{\"phoneCode\":\"596\",\"code\":\"MQ\",\"name\":\"Martinique\",\"pattern\":\"\",\"emoji\":\"🇲🇶\"},{\"phoneCode\":\"222\",\"code\":\"MR\",\"name\":\"Mauritania\",\"pattern\":\"222 XXXX XXXX\",\"emoji\":\"🇲🇷\"},{\"phoneCode\":\"230\",\"code\":\"MU\",\"name\":\"Mauritius\",\"pattern\":\"\",\"emoji\":\"🇲🇺\"},{\"phoneCode\":\"262\",\"code\":\"YT\",\"name\":\"Mayotte\",\"pattern\":\"\",\"emoji\":\"🇾🇹\"},{\"phoneCode\":\"52\",\"code\":\"MX\",\"name\":\"Mexico\",\"pattern\":\"\",\"emoji\":\"🇲🇽\"},{\"phoneCode\":\"691\",\"code\":\"FM\",\"name\":\"Micronesia\",\"pattern\":\"\",\"emoji\":\"🇫🇲\"},{\"phoneCode\":\"373\",\"code\":\"MD\",\"name\":\"Moldova\",\"pattern\":\"373 XX XXX XXX\",\"emoji\":\"🇲🇩\"},{\"phoneCode\":\"377\",\"code\":\"MC\",\"name\":\"Monaco\",\"pattern\":\"377 XXXX XXXX\",\"emoji\":\"🇲🇨\"},{\"phoneCode\":\"976\",\"code\":\"MN\",\"name\":\"Mongolia\",\"pattern\":\"\",\"emoji\":\"🇲🇳\"},{\"phoneCode\":\"382\",\"code\":\"ME\",\"name\":\"Montenegro\",\"pattern\":\"\",\"emoji\":\"🇲🇪\"},{\"phoneCode\":\"1 664\",\"code\":\"MS\",\"name\":\"Montserrat\",\"pattern\":\"1664 XXX XXXX\",\"emoji\":\"🇲🇸\"},{\"phoneCode\":\"212\",\"code\":\"MA\",\"name\":\"Morocco\",\"pattern\":\"212 XX XXX XXXX\",\"emoji\":\"🇲🇦\"},{\"phoneCode\":\"258\",\"code\":\"MZ\",\"name\":\"Mozambique\",\"pattern\":\"258 XX XXX XXXX\",\"emoji\":\"🇲🇿\"},{\"phoneCode\":\"264\",\"code\":\"NA\",\"name\":\"Namibia\",\"pattern\":\"264 XX XXX XXXX\",\"emoji\":\"🇳🇦\"},{\"phoneCode\":\"674\",\"code\":\"NR\",\"name\":\"Nauru\",\"pattern\":\"\",\"emoji\":\"🇳🇷\"},{\"phoneCode\":\"977\",\"code\":\"NP\",\"name\":\"Nepal\",\"pattern\":\"\",\"emoji\":\"🇳🇵\"},{\"phoneCode\":\"31\",\"code\":\"NL\",\"name\":\"Netherlands\",\"pattern\":\"31 X XX XX XX XX\",\"emoji\":\"🇳🇱\"},{\"phoneCode\":\"687\",\"code\":\"NC\",\"name\":\"New Caledonia\",\"pattern\":\"\",\"emoji\":\"🇳🇨\"},{\"phoneCode\":\"64\",\"code\":\"NZ\",\"name\":\"New Zealand\",\"pattern\":\"\",\"emoji\":\"🇳🇿\"},{\"phoneCode\":\"505\",\"code\":\"NI\",\"name\":\"Nicaragua\",\"pattern\":\"505 XXXX XXXX\",\"emoji\":\"🇳🇮\"},{\"phoneCode\":\"227\",\"code\":\"NE\",\"name\":\"Niger\",\"pattern\":\"227 XX XX XX XX\",\"emoji\":\"🇳🇪\"},{\"phoneCode\":\"234\",\"code\":\"NG\",\"name\":\"Nigeria\",\"pattern\":\"\",\"emoji\":\"🇳🇬\"},{\"phoneCode\":\"683\",\"code\":\"NU\",\"name\":\"Niue\",\"pattern\":\"\",\"emoji\":\"🇳🇺\"},{\"phoneCode\":\"672\",\"code\":\"NF\",\"name\":\"Norfolk Island\",\"pattern\":\"\",\"emoji\":\"🇳🇫\"},{\"phoneCode\":\"1 670\",\"code\":\"MP\",\"name\":\"Northern Mariana Islands\",\"pattern\":\"1670 XXX XXXX\",\"emoji\":\"🇲🇵\"},{\"phoneCode\":\"47\",\"code\":\"NO\",\"name\":\"Norway\",\"pattern\":\"47 XXXX XXXX\",\"emoji\":\"🇳🇴\"},{\"phoneCode\":\"968\",\"code\":\"OM\",\"name\":\"Oman\",\"pattern\":\"968 XXXX XXXX\",\"emoji\":\"🇴🇲\"},{\"phoneCode\":\"92\",\"code\":\"PK\",\"name\":\"Pakistan\",\"pattern\":\"92 XXX XXX XXXX\",\"emoji\":\"🇵🇰\"},{\"phoneCode\":\"680\",\"code\":\"PW\",\"name\":\"Palau\",\"pattern\":\"\",\"emoji\":\"🇵🇼\"},{\"phoneCode\":\"970\",\"code\":\"PS\",\"name\":\"Palestinian Territories\",\"pattern\":\"970 XXX XX XXXX\",\"emoji\":\"🇵🇸\"},{\"phoneCode\":\"507\",\"code\":\"PA\",\"name\":\"Panama\",\"pattern\":\"507 XXXX XXXX\",\"emoji\":\"🇵🇦\"},{\"phoneCode\":\"675\",\"code\":\"PG\",\"name\":\"Papua New Guinea\",\"pattern\":\"\",\"emoji\":\"🇵🇬\"},{\"phoneCode\":\"595\",\"code\":\"PY\",\"name\":\"Paraguay\",\"pattern\":\"595 XXX XXX XXX\",\"emoji\":\"🇵🇾\"},{\"phoneCode\":\"51\",\"code\":\"PE\",\"name\":\"Peru\",\"pattern\":\"51 XXX XXX XXX\",\"emoji\":\"🇵🇪\"},{\"phoneCode\":\"63\",\"code\":\"PH\",\"name\":\"Philippines\",\"pattern\":\"63 XXX XXX XXXX\",\"emoji\":\"🇵🇭\"},{\"phoneCode\":\"64\",\"code\":\"PN\",\"name\":\"Pitcairn Islands\",\"pattern\":\"\",\"emoji\":\"🇵🇳\"},{\"phoneCode\":\"48\",\"code\":\"PL\",\"name\":\"Poland\",\"pattern\":\"48 XXX XXX XXX\",\"emoji\":\"🇵🇱\"},{\"phoneCode\":\"351\",\"code\":\"PT\",\"name\":\"Portugal\",\"pattern\":\"351 X XXXX XXXX\",\"emoji\":\"🇵🇹\"},{\"phoneCode\":\"1 787 and 1 939\",\"code\":\"PR\",\"name\":\"Puerto Rico\",\"pattern\":\"1 XXX XXX XXXX\",\"emoji\":\"🇵🇷\"},{\"phoneCode\":\"974\",\"code\":\"QA\",\"name\":\"Qatar\",\"pattern\":\"\",\"emoji\":\"🇶🇦\"},{\"phoneCode\":\"262\",\"code\":\"RE\",\"name\":\"Reunion\",\"pattern\":\"262 XXX XXX XXX\",\"emoji\":\"🇷🇪\"},{\"phoneCode\":\"40\",\"code\":\"RO\",\"name\":\"Romania\",\"pattern\":\"40 XXX XXX XXX\",\"emoji\":\"🇷🇴\"},{\"phoneCode\":\"7\",\"code\":\"RU\",\"name\":\"Russia\",\"pattern\":\"7 XXX XXX XX XX\",\"emoji\":\"🇷🇺\"},{\"phoneCode\":\"250\",\"code\":\"RW\",\"name\":\"Rwanda\",\"pattern\":\"250 XXX XXX XXX\",\"emoji\":\"🇷🇼\"},{\"phoneCode\":\"590\",\"code\":\"BL\",\"name\":\"St. Barthelemy\",\"pattern\":\"\",\"emoji\":\"🇧🇱\"},{\"phoneCode\":\"290\",\"code\":\"SH\",\"name\":\"St. Helena\",\"pattern\":\"290 XX XXX\",\"emoji\":\"🇸🇭\"},{\"phoneCode\":\"1 869\",\"code\":\"KN\",\"name\":\"St. Kitts & Nevis\",\"pattern\":\"1869 XXX XXXX\",\"emoji\":\"🇰🇳\"},{\"phoneCode\":\"1 758\",\"code\":\"LC\",\"name\":\"St. Lucia\",\"pattern\":\"1758 XXX XXXX\",\"emoji\":\"🇱🇨\"},{\"phoneCode\":\"590\",\"code\":\"MF\",\"name\":\"St. Martin (France)\",\"pattern\":\"\",\"emoji\":\"🇲🇫\"},{\"phoneCode\":\"508\",\"code\":\"PM\",\"name\":\"St. Pierre and Miquelon\",\"pattern\":\"\",\"emoji\":\"🇵🇲\"},{\"phoneCode\":\"1 784\",\"code\":\"VC\",\"name\":\"St. Vincent and the Grenadines\",\"pattern\":\"1784 XXX XXXX\",\"emoji\":\"🇻🇨\"},{\"phoneCode\":\"685\",\"code\":\"WS\",\"name\":\"Samoa\",\"pattern\":\"\",\"emoji\":\"🇼🇸\"},{\"phoneCode\":\"378\",\"code\":\"SM\",\"name\":\"San Marino\",\"pattern\":\"378 XXX XXX XXXX\",\"emoji\":\"🇸🇲\"},{\"phoneCode\":\"239\",\"code\":\"ST\",\"name\":\"São Tome & Principe\",\"pattern\":\"239 XX XXXXX\",\"emoji\":\"🇸🇹\"},{\"phoneCode\":\"966\",\"code\":\"SA\",\"name\":\"Saudi Arabia\",\"pattern\":\"\",\"emoji\":\"🇸🇦\"},{\"phoneCode\":\"221\",\"code\":\"SN\",\"name\":\"Senegal\",\"pattern\":\"221 XX XXX XXXX\",\"emoji\":\"🇸🇳\"},{\"phoneCode\":\"381\",\"code\":\"RS\",\"name\":\"Serbia\",\"pattern\":\"381 XX XXX XXXX\",\"emoji\":\"🇷🇸\"},{\"phoneCode\":\"248\",\"code\":\"SC\",\"name\":\"Seychelles\",\"pattern\":\"248 X XX XX XX\",\"emoji\":\"🇸🇨\"},{\"phoneCode\":\"232\",\"code\":\"SL\",\"name\":\"Sierra Leone\",\"pattern\":\"232 XX XXX XXX\",\"emoji\":\"🇸🇱\"},{\"phoneCode\":\"65\",\"code\":\"SG\",\"name\":\"Singapore\",\"pattern\":\"65 XXXX XXXX\",\"emoji\":\"🇸🇬\"},{\"phoneCode\":\"599 3\",\"code\":\"BQ\",\"name\":\"Sint Eustatius\",\"pattern\":\"\",\"emoji\":\"🇧🇶\"},{\"phoneCode\":\"1 721\",\"code\":\"SX\",\"name\":\"Sint Maarten\",\"pattern\":\"1721 XXX XXXX\",\"emoji\":\"🇸🇽\"},{\"phoneCode\":\"421\",\"code\":\"SK\",\"name\":\"Slovakia\",\"pattern\":\"\",\"emoji\":\"🇸🇰\"},{\"phoneCode\":\"386\",\"code\":\"SI\",\"name\":\"Slovenia\",\"pattern\":\"\",\"emoji\":\"🇸🇮\"},{\"phoneCode\":\"677\",\"code\":\"SB\",\"name\":\"Solomon Islands\",\"pattern\":\"\",\"emoji\":\"🇸🇧\"},{\"phoneCode\":\"252\",\"code\":\"SO\",\"name\":\"Somalia\",\"pattern\":\"252 XX XXX XXX\",\"emoji\":\"🇸🇴\"},{\"phoneCode\":\"27\",\"code\":\"ZA\",\"name\":\"South Africa\",\"pattern\":\"27 XX XXX XXXX\",\"emoji\":\"🇿🇦\"},{\"phoneCode\":\"500\",\"code\":\"GS\",\"name\":\"South Georgia & South Sandwich Islands\",\"pattern\":\"\",\"emoji\":\"🇬🇸\"},{\"phoneCode\":\"995 34\",\"code\":\"\",\"name\":\"South Ossetia\",\"pattern\":\"\",\"emoji\":\"\"},{\"phoneCode\":\"211\",\"code\":\"SS\",\"name\":\"South Sudan\",\"pattern\":\"211 XX XXX XXXX\",\"emoji\":\"🇸🇸\"},{\"phoneCode\":\"34\",\"code\":\"ES\",\"name\":\"Spain\",\"pattern\":\"34 XXX XXX XXX\",\"emoji\":\"🇪🇸\"},{\"phoneCode\":\"94\",\"code\":\"LK\",\"name\":\"Sri Lanka\",\"pattern\":\"94 XX XXX XXXX\",\"emoji\":\"🇱🇰\"},{\"phoneCode\":\"249\",\"code\":\"SD\",\"name\":\"Sudan\",\"pattern\":\"249 XX XXX XXXX\",\"emoji\":\"🇸🇩\"},{\"phoneCode\":\"597\",\"code\":\"SR\",\"name\":\"Suriname\",\"pattern\":\"597 XXX XXXX\",\"emoji\":\"🇸🇷\"},{\"phoneCode\":\"47 79\",\"code\":\"SJ\",\"name\":\"Svalbard\",\"pattern\":\"\",\"emoji\":\"🇸🇯\"},{\"phoneCode\":\"268\",\"code\":\"SZ\",\"name\":\"Swaziland\",\"pattern\":\"268 XXXX XXXX\",\"emoji\":\"🇸🇿\"},{\"phoneCode\":\"46\",\"code\":\"SE\",\"name\":\"Sweden\",\"pattern\":\"46 XX XXX XXXX\",\"emoji\":\"🇸🇪\"},{\"phoneCode\":\"41\",\"code\":\"CH\",\"name\":\"Switzerland\",\"pattern\":\"41 XX XXX XXXX\",\"emoji\":\"🇨🇭\"},{\"phoneCode\":\"963\",\"code\":\"SY\",\"name\":\"Syria\",\"pattern\":\"\",\"emoji\":\"🇸🇾\"},{\"phoneCode\":\"886\",\"code\":\"TW\",\"name\":\"Taiwan\",\"pattern\":\"\",\"emoji\":\"🇹🇼\"},{\"phoneCode\":\"992\",\"code\":\"TJ\",\"name\":\"Tajikistan\",\"pattern\":\"\",\"emoji\":\"🇹🇯\"},{\"phoneCode\":\"255\",\"code\":\"TZ\",\"name\":\"Tanzania\",\"pattern\":\"255 XX XXX XXXX\",\"emoji\":\"🇹🇿\"},{\"phoneCode\":\"66\",\"code\":\"TH\",\"name\":\"Thailand\",\"pattern\":\"66 X XXXX XXXX\",\"emoji\":\"🇹🇭\"},{\"phoneCode\":\"228\",\"code\":\"TG\",\"name\":\"Togo\",\"pattern\":\"228 XX XXX XXX\",\"emoji\":\"🇹🇬\"},{\"phoneCode\":\"690\",\"code\":\"TK\",\"name\":\"Tokelau\",\"pattern\":\"\",\"emoji\":\"🇹🇰\"},{\"phoneCode\":\"676\",\"code\":\"TO\",\"name\":\"Tonga\",\"pattern\":\"\",\"emoji\":\"🇹🇴\"},{\"phoneCode\":\"1 868\",\"code\":\"TT\",\"name\":\"Trinidad & Tobago\",\"pattern\":\"1868 XXX XXXX\",\"emoji\":\"🇹🇹\"},{\"phoneCode\":\"216\",\"code\":\"TN\",\"name\":\"Tunisia\",\"pattern\":\"216 XX XXX XXX\",\"emoji\":\"🇹🇳\"},{\"phoneCode\":\"90\",\"code\":\"TR\",\"name\":\"Turkey\",\"pattern\":\"90 XXX XXX XXXX\",\"emoji\":\"🇹🇷\"},{\"phoneCode\":\"993\",\"code\":\"TM\",\"name\":\"Turkmenistan\",\"pattern\":\"993 XX XXXXXX\",\"emoji\":\"🇹🇲\"},{\"phoneCode\":\"1 649\",\"code\":\"TC\",\"name\":\"Turks & Caicos Islands\",\"pattern\":\"1649 XXX XXXX\",\"emoji\":\"🇹🇨\"},{\"phoneCode\":\"688\",\"code\":\"TV\",\"name\":\"Tuvalu\",\"pattern\":\"\",\"emoji\":\"🇹🇻\"},{\"phoneCode\":\"256\",\"code\":\"UG\",\"name\":\"Uganda\",\"pattern\":\"256 XX XXX XXXX\",\"emoji\":\"🇺🇬\"},{\"phoneCode\":\"380\",\"code\":\"UA\",\"name\":\"Ukraine\",\"pattern\":\"380 XX XXX XX XX\",\"emoji\":\"🇺🇦\"},{\"phoneCode\":\"971\",\"code\":\"AE\",\"name\":\"United Arab Emirates\",\"pattern\":\"971 XX XXX XXXX\",\"emoji\":\"🇦🇪\"},{\"phoneCode\":\"44\",\"code\":\"GB\",\"name\":\"United Kingdom\",\"pattern\":\"44 XXXX XXXXXX\",\"emoji\":\"🇬🇧\"},{\"phoneCode\":\"1\",\"code\":\"US\",\"name\":\"United States\",\"pattern\":\"1 XXX XXX XXXX\",\"emoji\":\"🇺🇸\"},{\"phoneCode\":\"598\",\"code\":\"UY\",\"name\":\"Uruguay\",\"pattern\":\"598 XXXX XXXX\",\"emoji\":\"🇺🇾\"},{\"phoneCode\":\"1 340\",\"code\":\"VI\",\"name\":\"U.S. Virgin Islands\",\"pattern\":\"1340 XXX XXXX\",\"emoji\":\"🇻🇮\"},{\"phoneCode\":\"998\",\"code\":\"UZ\",\"name\":\"Uzbekistan\",\"pattern\":\"998 XX XXXXXXX\",\"emoji\":\"🇺🇿\"},{\"phoneCode\":\"678\",\"code\":\"VU\",\"name\":\"Vanuatu\",\"pattern\":\"\",\"emoji\":\"🇻🇺\"},{\"phoneCode\":\"58\",\"code\":\"VE\",\"name\":\"Venezuela\",\"pattern\":\"58 XXX XXX XXXX\",\"emoji\":\"🇻🇪\"},{\"phoneCode\":\"39 06 698\",\"code\":\"VA\",\"name\":\"Vatican City\",\"pattern\":\"\",\"emoji\":\"🇻🇦\"},{\"phoneCode\":\"84\",\"code\":\"VN\",\"name\":\"Vietnam\",\"pattern\":\"\",\"emoji\":\"🇻🇳\"},{\"phoneCode\":\"681\",\"code\":\"WF\",\"name\":\"Wallis & Futuna\",\"pattern\":\"\",\"emoji\":\"🇼🇫\"},{\"phoneCode\":\"967\",\"code\":\"YE\",\"name\":\"Yemen\",\"pattern\":\"967 XXX XXX XXX\",\"emoji\":\"🇾🇪\"},{\"phoneCode\":\"260\",\"code\":\"ZM\",\"name\":\"Zambia\",\"pattern\":\"260 XX XXX XXXX\",\"emoji\":\"🇿🇲\"},{\"phoneCode\":\"255\",\"code\":\"\",\"name\":\"Zanzibar\",\"pattern\":\"\",\"emoji\":\"\"},{\"phoneCode\":\"263\",\"code\":\"ZW\",\"name\":\"Zimbabwe\",\"pattern\":\"263 XX XXX XXXX\",\"emoji\":\"🇿🇼\"}];\nconst PhoneCodesMain: {[phoneCode: string]: Country} = {\n  '1': Countries.find(c => c.name === 'United States'),\n  '44': Countries.find(c => c.name === 'United Kingdom'),\n  '61': Countries.find(c => c.name === 'Australia'),\n  '64': Countries.find(c => c.name === 'New Zealand'),\n  '246': Countries.find(c => c.name === 'Diego Garcia'),\n  '255': Countries.find(c => c.name === 'Tanzania'),\n  '262': Countries.find(c => c.name === 'Reunion'),\n  '500': Countries.find(c => c.name === 'Falkland Islands'),\n  '590': Countries.find(c => c.name === 'Guadeloupe'),\n  '672': Countries.find(c => c.name === 'Norfolk Island'),\n  '1 268': Countries.find(c => c.name === 'Antigua & Barbuda'),\n};\n\n/* \nconst toInt = (str) => {\n  return parseInt(str.replace(/ /g, ''));\n};\nvar arr = window.Countries.sort((a, b) => toInt(a.phoneCode) - toInt(b.phoneCode));\narr.forEach((el, idx) => {\n  if(idx === (arr.length - 1)) {\n    return;\n  }\n\n  if(toInt(arr[idx + 1].phoneCode) === toInt(el.phoneCode)) {\n    console.log('duplicate', el, arr[idx + 1]);\n  }\n});\n*/\n\nMOUNT_CLASS_TO.Countries = Countries;\n\nexport default Countries;\nexport {PhoneCodesMain};","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport appUsersManager from '../appManagers/appUsersManager';\nimport apiManager from './mtprotoworker';\n\nexport class PasswordManager {\n  public getState(): Promise<AccountPassword> {\n    return apiManager.invokeApi('account.getPassword').then((result) => {\n      return result;\n    });\n  }\n\n  public updateSettings(settings: {\n    hint?: string,\n    email?: string,\n    newPassword?: string,\n    currentPassword?: string\n  } = {}) {\n    //state = Object.assign({}, state);\n    //state.new_algo = Object.assign({}, state.new_algo);\n\n    return this.getState().then(state => {\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\n      let newHashPromise: Promise<Uint8Array>;\n      const params: AccountUpdatePasswordSettings = {\n        password: null,\n        new_settings: {\n          _: 'account.passwordInputSettings',\n          hint: settings.hint,\n          email: settings.email\n        }\n      };\n  \n      if(settings.currentPassword) {\n        currentHashPromise = apiManager.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\n      } else {\n        currentHashPromise = Promise.resolve({\n          _: 'inputCheckPasswordEmpty'\n        });\n      }\n  \n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\n      salt1.randomize();\n      salt1.set(newAlgo.salt1, 0);\n      newAlgo.salt1 = salt1;\n  \n      if(settings.newPassword) {\n        newHashPromise = apiManager.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\n      } else {\n        newHashPromise = Promise.resolve(new Uint8Array());\n      }\n  \n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\n        params.password = hashes[0];\n        params.new_settings.new_algo = newAlgo;\n        params.new_settings.new_password_hash = hashes[1];\n  \n        return apiManager.invokeApi('account.updatePasswordSettings', params);\n      });\n    });\n  }\n\n  public check(password: string, state: AccountPassword, options: any = {}) {\n    return apiManager.invokeCrypto('computeSRP', password, state, false).then((inputCheckPassword) => {\n      //console.log('SRP', inputCheckPassword);\n      return apiManager.invokeApi('auth.checkPassword', {\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\n      }, options).then(auth => {\n        if(auth._ === 'auth.authorization') {\n          appUsersManager.saveApiUser(auth.user);\n          apiManager.setUserAuth(auth.user.id);\n        }\n\n        return auth;\n      });\n    });\n  }\n\n  public confirmPasswordEmail(code: string) {\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\n  }\n\n  public resendPasswordEmail() {\n    return apiManager.invokeApi('account.resendPasswordEmail');\n  }\n\n  public cancelPasswordEmail() {\n    return apiManager.invokeApi('account.cancelPasswordEmail');\n  }\n\n  /* public requestRecovery(options: any = {}) {\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\n  }\n\n  public recover(code: any, options: any = {}) {\n    return apiManager.invokeApi('auth.recoverPassword', {\n      code\n    }, options);\n  } */\n}\n\nconst passwordManager = new PasswordManager();\nMOUNT_CLASS_TO.passwordManager = passwordManager;\nexport default passwordManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { LangPackKey, i18n } from \"../lib/langPack\";\n\nexport default class LoginPage {\n  public element: HTMLElement;\n  public container: HTMLElement;\n  public imageDiv: HTMLElement;\n  public inputWrapper: HTMLElement;\n  public title: HTMLElement;\n  public subtitle: HTMLParagraphElement;\n\n  constructor(options: {\n    className: string,\n    withInputWrapper?: boolean,\n    titleLangKey?: LangPackKey,\n    subtitleLangKey?: LangPackKey,\n  }) {\n    this.element = document.body.querySelector('.' + options.className) as HTMLDivElement;\n    //this.element = document.createElement('div');\n    //this.element.className = 'page-' + options.className;\n\n    this.container = document.createElement('div');\n    this.container.className = 'container center-align';\n\n    this.imageDiv = document.createElement('div');\n    this.imageDiv.className = 'auth-image';\n\n    this.title = document.createElement('h4');\n    if(options.titleLangKey) {\n      this.title.append(i18n(options.titleLangKey));\n    }\n\n    this.subtitle = document.createElement('p');\n    this.subtitle.className = 'subtitle';\n    if(options.subtitleLangKey) {\n      this.subtitle.append(i18n(options.subtitleLangKey));\n    }\n    \n    this.container.append(this.imageDiv, this.title, this.subtitle);\n\n    if(options.withInputWrapper) {\n      this.inputWrapper = document.createElement('div');\n      this.inputWrapper.className = 'input-wrapper';\n      this.container.append(this.inputWrapper);\n    }\n\n    this.element.append(this.container);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport InputField, { InputFieldOptions } from \"./inputField\";\n\nexport default class PasswordInputField extends InputField {\n  public passwordVisible = false;\n  public toggleVisible: HTMLElement;\n  public onVisibilityClickAdditional: () => void;\n\n  constructor(options: InputFieldOptions = {}) {\n    super({\n      plainText: true,\n      ...options\n    });\n\n    const input = this.input as HTMLInputElement;\n    input.type = 'password';\n    input.setAttribute('required', '');\n    input.autocomplete = 'off';\n    /* input.readOnly = true;\n\n    input.addEventListener('focus', () => {\n      input.removeAttribute('readonly');\n    }, {once: true}); */\n\n    // * https://stackoverflow.com/a/35949954/6758968\n    const stealthy = document.createElement('input');\n    stealthy.classList.add('stealthy');\n    stealthy.tabIndex = -1;\n    stealthy.type = 'password';\n    input.parentElement.prepend(stealthy);\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\n\n    const toggleVisible = this.toggleVisible = document.createElement('span');\n    toggleVisible.classList.add('toggle-visible', 'tgico');\n\n    this.container.classList.add('input-field-password');\n    this.container.append(toggleVisible);\n\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\n  }\n\n  public onVisibilityClick = (e: Event) => {\n    cancelEvent(e);\n    this.passwordVisible = !this.passwordVisible;\n\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport cleanSearchText from '../helpers/cleanSearchText';\n\nexport default class SearchIndex<SearchWhat> {\n  private fullTexts: Map<SearchWhat, string> = new Map();\n\n  // minChars can be 0 because it requires at least one word (one symbol) to be found\n  constructor(private cleanText = true, private latinize = true, private minChars: number = 0) {\n\n  }\n\n  public indexObject(id: SearchWhat, searchText: string) {\n    /* if(searchIndex.fullTexts.hasOwnProperty(id)) {\n      return false;\n    } */\n\n    if(searchText.trim() && this.cleanText) {\n      searchText = cleanSearchText(searchText, this.latinize);\n    }\n\n    if(!searchText) {\n      this.fullTexts.delete(id);\n      return false;\n    }\n\n    this.fullTexts.set(id, searchText);\n    \n    /* const shortIndexes = searchIndex.shortIndexes;\n    searchText.split(' ').forEach((searchWord) => {\n      let len = Math.min(searchWord.length, 3),\n        wordPart, i;\n      for(i = 1; i <= len; i++) {\n        wordPart = searchWord.substr(0, i);\n        if(shortIndexes[wordPart] === undefined) {\n          shortIndexes[wordPart] = [id];\n        } else {\n          shortIndexes[wordPart].push(id);\n        }\n      }\n    }); */\n  }\n\n  public search(query: string) {\n    const fullTexts = this.fullTexts;\n    //const shortIndexes = searchIndex.shortIndexes;\n\n    if(this.cleanText) {\n      query = cleanSearchText(query, this.latinize);\n    }\n\n    const newFoundObjs: Array<{fullText: string, fullTextLength: number, what: SearchWhat, foundChars: number}> = [];\n    const queryWords = query.split(' ');\n    const queryWordsLength = queryWords.length;\n    fullTexts.forEach((fullText, what) => {\n      let found = true;\n      let foundChars = 0;\n      for(let i = 0; i < queryWordsLength; ++i) { // * verify that all words are found\n        const word = queryWords[i];\n        const idx = fullText.indexOf(word);\n        if(idx === -1 || (idx !== 0 && fullText[idx - 1] !== ' ')) { // * search only from word beginning\n          found = false;\n          break;\n        }\n\n        foundChars += word.length;\n      }\n\n      if(found) {\n        foundChars += queryWordsLength - 1;\n        const fullTextLength = fullText.length;\n        if(this.minChars <= foundChars || fullTextLength <= foundChars) {\n          newFoundObjs.push({fullText, fullTextLength, what, foundChars});\n        }\n      }\n    });\n\n    newFoundObjs.sort((a, b) => a.fullTextLength - b.fullTextLength || b.foundChars - a.foundChars);\n\n    //newFoundObjs.sort((a, b) => a.fullText.localeCompare(b.fullText));\n    const newFoundObjs2: Set<SearchWhat> = new Set(newFoundObjs.map(o => o.what));\n\n    /* const queryWords = query.split(' ');\n    let foundArr: number[];\n    for(let i = 0; i < queryWords.length; i++) {\n      const newFound = shortIndexes[queryWords[i].substr(0, 3)];\n      if(!newFound) {\n        foundArr = [];\n        break;\n      }\n      \n      if(foundArr === undefined || foundArr.length > newFound.length) {\n        foundArr = newFound;\n      }\n    }\n\n    for(let j = 0; j < foundArr.length; j++) {\n      let found = true;\n      let searchText = fullTexts[foundArr[j]];\n      for(let i = 0; i < queryWords.length; i++) {\n        if(searchText.indexOf(queryWords[i]) === -1) {\n          found = false;\n          break;\n        }\n      }\n\n      if(found) {\n        newFoundObjs[foundArr[j]] = true;\n      }\n    } */\n\n    return newFoundObjs2;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\nimport PasswordInputField from \"../passwordInputField\";\n\nexport default class PasswordMonkey {\n  public container: HTMLElement;\n  public animation: RLottiePlayer;\n  public needFrame = 0;\n  protected loadPromise: Promise<void>;\n\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\n    this.container = document.createElement('div');\n    this.container.classList.add('media-sticker-wrapper');\n  }\n\n  public load() {\n    if(this.loadPromise) return this.loadPromise;\n    return this.loadPromise = lottieLoader.loadAnimationFromURL({\n      container: this.container,\n      loop: false,\n      autoplay: false,\n      width: this.size,\n      height: this.size,\n      noCache: true\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\n    }, 'assets/img/TwoFactorSetupMonkeyPeek.tgs').then(_animation => {\n      //return;\n      this.animation = _animation;\n      this.animation.addEventListener('enterFrame', currentFrame => {\n        //console.log('enterFrame', currentFrame, this.needFrame);\n\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\n            this.animation.setSpeed(1);\n            this.animation.pause();\n        } \n      });\n\n      this.passwordInputField.onVisibilityClickAdditional = () => {\n        if(this.passwordInputField.passwordVisible) {\n          this.animation.setDirection(1);\n          this.animation.curFrame = 0;\n          this.needFrame = 16;\n          this.animation.play();\n        } else {\n          this.animation.setDirection(-1);\n          this.animation.curFrame = 16;\n          this.needFrame = 0;\n          this.animation.play();\n        }\n      };\n\n      return lottieLoader.waitForFirstFrame(_animation);\n    });\n  }\n\n  public remove() {\n    if(this.animation) {\n      this.animation.remove();\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Config from \"../lib/config\";\n\nconst badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\nconst trimRe = /^\\s+|\\s$/g;\n\nexport default function cleanSearchText(text: string, latinize = true) {\n  const hasTag = text.charAt(0) === '%';\n  text = text.replace(badCharsRe, '').replace(trimRe, '');\n  if(latinize) {\n    text = text.replace(/[^A-Za-z0-9]/g, (ch) => {\n      const latinizeCh = Config.LatinizeMap[ch];\n      return latinizeCh !== undefined ? latinizeCh : ch;\n    });\n  }\n  \n  text = text.toLowerCase();\n  if(hasTag) {\n    text = '%' + text;\n  }\n\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n/**\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\n */\nexport type UserAuth = {dcID: number | string, date: number, id: number};\n\nexport const REPLIES_PEER_ID = 1271266957;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function htmlToSpan(html: string) {\n  const span = document.createElement('span');\n  span.innerHTML = html;\n  return span;\n}\n"],"sourceRoot":""}
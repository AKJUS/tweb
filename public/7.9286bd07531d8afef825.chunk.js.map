{"version":3,"sources":["webpack:///./src/helpers/dom/replaceContent.ts","webpack:///./src/components/inputField.ts","webpack:///./src/components/scrollable.ts","webpack:///./src/helpers/dom/getRichValue.ts","webpack:///./src/components/checkboxField.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/dom/findUpTag.ts","webpack:///./src/helpers/dom/getRichElementValue.ts","webpack:///./src/helpers/dom/findUpAttribute.ts","webpack:///./src/helpers/dom/isInputEmpty.ts","webpack:///./src/lib/filemanager.ts","webpack:///./src/lib/cacheStorage.ts"],"names":["replaceContent","elem","node","innerHTML","firstChild","lastChild","replaceWith","textContent","append","init","document","addEventListener","e","target","preventDefault","text","originalEvent","clipboardData","getData","entities","parseEntities","filter","_","wrapRichText","noLinks","wrappingDraft","window","execCommand","InputState","options","this","container","createElement","classList","add","maxLength","showLengthOn","Math","round","placeholder","name","plainText","input","processInput","label","labelText","firstElementChild","observer","MutationObserver","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","wasInputFakeClientHeight","setAttribute","className","undefined","border","setLabel","labelEl","lastElementChild","showingLength","wasError","contains","inputLength","value","length","diff","isError","toggle","select","labelOptions","scrollHeight","clientHeight","style","height","setValueSilently","event","Event","bubbles","cancelable","dispatchEvent","fireFakeInput","originalValue","silent","wrapDraftText","state","Error","Valid","setState","ScrollableBase","el","logPrefix","onScrollMeasure","isHeavyAnimationInProgress","needCheckAfterAnimation","log","Array","from","children","forEach","c","onScroll","passive","capture","cancelAnimationFrame","element","position","margin","maxDistance","forceDirection","forceDuration","axis","Scrollable","onScrollOffset","withPaddingContainer","super","onAdditionalScroll","onScrolledTop","onScrolledBottom","lastScrollTop","lastScrollDirection","loadedAll","top","bottom","splitUp","requestAnimationFrame","scrollTop","checkForTriggers","maxScrollTop","setListeners","elements","padding","prepend","offsetHeight","getDistanceToEnd","y","ScrollableX","splitCount","scrollHorizontally","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","getRichValue","field","withEntities","lines","line","push","join","replace","combineSameEntities","CheckboxField","restriction","disabled","toggleDisability","span","type","id","checked","stateKey","getState","then","stateValue","stateValues","indexOf","setByKey","textArgs","box","checkSvg","createElementNS","setAttributeNS","use","bg","withRipple","withHover","disable","removeAttribute","findUpTag","tag","closest","markdownTags","bold","match","entityName","underline","italic","monospace","strikethrough","link","mentionName","getRichElementValue","selNode","selOffset","offset","nodeType","nodeValue","substr","trim","parentNode","parentElement","getAttribute","url","href","user_id","dataset","follow","isSelected","isBlock","tagName","splice","alt","curChild","nextSibling","findUpAttribute","attribute","isInputEmpty","hasAttribute","blobSupported","fileWriter","bytes","Blob","arr","write","mimeType","saveFileCallback","blobParts","part","truncate","finalize","saveToStorage","blob","dbName","useStorage","test","STORAGES","openDatabase","openDbPromise","caches","open","entryName","timeoutOperation","cache","delete","response","put","fileName","method","get","Response","headers","size","save","callback","Promise","resolve","reject","rejected","timeout","setTimeout","res","err","clearTimeout","fakeWriter","getFakeFileWriter","saveFile","catch","enabled","all","map","storage","deleteAll"],"mappings":"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","file":"7.9286bd07531d8afef825.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function replaceContent(elem: HTMLElement, node: string | Node) {\r\n  if(typeof(node) === 'string') {\r\n    elem.innerHTML = node;\r\n    return;\r\n  }\r\n\r\n  // * children.length doesn't count text nodes\r\n  const firstChild = elem.firstChild;\r\n  if(firstChild) {\r\n    if(elem.lastChild === firstChild) {\r\n      firstChild.replaceWith(node);\r\n    } else {\r\n      elem.textContent = '';\r\n      elem.append(node);\r\n    }\r\n  } else {\r\n    elem.append(node);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\r\nimport getRichValue from \"../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../helpers/dom/isInputEmpty\";\r\nimport debounce from \"../helpers/schedulers/debounce\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\n\r\nlet init = () => {\r\n  document.addEventListener('paste', (e) => {\r\n    if(!findUpAttribute(e.target, 'contenteditable=\"true\"')) {\r\n      return;\r\n    }\r\n    //console.log('document paste');\r\n\r\n    //console.log('messageInput paste');\r\n\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    let text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n\r\n    let entities = RichTextProcessor.parseEntities(text);\r\n    //console.log('messageInput paste', text, entities);\r\n    entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n    //text = RichTextProcessor.wrapEmojiText(text);\r\n    text = RichTextProcessor.wrapRichText(text, {entities, noLinks: true, wrappingDraft: true});\r\n\r\n    // console.log('messageInput paste after', text);\r\n\r\n    // @ts-ignore\r\n    //let html = (e.originalEvent || e).clipboardData.getData('text/html');\r\n\r\n    // @ts-ignore\r\n    //console.log('paste text', text, );\r\n    window.document.execCommand('insertHTML', false, text);\r\n  });\r\n\r\n  init = null;\r\n};\r\n\r\n// ! it doesn't respect symbols other than strongs\r\n/* const checkAndSetRTL = (input: HTMLElement) => {\r\n  //const isEmpty = isInputEmpty(input);\r\n  //console.log('input', isEmpty);\r\n\r\n  //const char = [...getRichValue(input)][0];\r\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\r\n  let direction = 'ltr';\r\n  if(char && checkRTL(char)) {\r\n    direction = 'rtl';\r\n  }\r\n\r\n  //console.log('RTL', direction, char);\r\n\r\n  input.style.direction = direction;\r\n}; */\r\n\r\nexport enum InputState {\r\n  Neutral = 0,\r\n  Valid = 1,\r\n  Error = 2\r\n};\r\n\r\nexport type InputFieldOptions = {\r\n  placeholder?: LangPackKey, \r\n  label?: LangPackKey, \r\n  labelOptions?: any[],\r\n  labelText?: string,\r\n  name?: string, \r\n  maxLength?: number, \r\n  showLengthOn?: number,\r\n  plainText?: true,\r\n  animate?: true\r\n};\r\n\r\nclass InputField {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputFake: HTMLElement;\r\n  public label: HTMLLabelElement;\r\n\r\n  public originalValue: string;\r\n\r\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\r\n  protected wasInputFakeClientHeight: number;\r\n  // protected showScrollDebounced: () => void;\r\n\r\n  constructor(public options: InputFieldOptions = {}) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('input-field');\r\n\r\n    if(options.maxLength) {\r\n      options.showLengthOn = Math.round(options.maxLength / 3);\r\n    }\r\n\r\n    const {placeholder, maxLength, showLengthOn, name, plainText} = options;\r\n\r\n    let label = options.label || options.labelText;\r\n\r\n    let input: HTMLElement;\r\n    if(!plainText) {\r\n      if(init) {\r\n        init();\r\n      }\r\n\r\n      this.container.innerHTML = `\r\n      <div contenteditable=\"true\" class=\"input-field-input\"></div>\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      const observer = new MutationObserver(() => {\r\n        //checkAndSetRTL(input);\r\n\r\n        if(processInput) {\r\n          processInput();\r\n        }\r\n      });\r\n\r\n      // * because if delete all characters there will br left\r\n      input.addEventListener('input', () => {\r\n        if(isInputEmpty(input)) {\r\n          input.innerHTML = '';\r\n        }\r\n\r\n        if(this.inputFake) {\r\n          this.inputFake.innerHTML = input.innerHTML;\r\n          this.onFakeInput();\r\n        }\r\n      });\r\n      \r\n      // ! childList for paste first symbol\r\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\r\n\r\n      if(options.animate) {\r\n        input.classList.add('scrollable', 'scrollable-y');\r\n        this.wasInputFakeClientHeight = 0;\r\n        // this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\r\n        this.inputFake = document.createElement('div');\r\n        this.inputFake.setAttribute('contenteditable', 'true');\r\n        this.inputFake.className = input.className + ' input-field-input-fake';\r\n      }\r\n    } else {\r\n      this.container.innerHTML = `\r\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      //input.addEventListener('input', () => checkAndSetRTL(input));\r\n    }\r\n\r\n    input.setAttribute('dir', 'auto');\r\n\r\n    if(placeholder) {\r\n      _i18n(input, placeholder, undefined, 'placeholder');\r\n\r\n      if(this.inputFake) {\r\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\r\n      }\r\n    }\r\n\r\n    if(label || placeholder) {\r\n      const border = document.createElement('div');\r\n      border.classList.add('input-field-border');\r\n      this.container.append(border);\r\n    }\r\n\r\n    if(label) {\r\n      this.label = document.createElement('label');\r\n      this.setLabel();\r\n      this.container.append(this.label);\r\n    }\r\n\r\n    let processInput: () => void;\r\n    if(maxLength) {\r\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\r\n      let showingLength = false;\r\n\r\n      processInput = () => {\r\n        const wasError = input.classList.contains('error');\r\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\r\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input, false).value].length;\r\n        const diff = maxLength - inputLength;\r\n        const isError = diff < 0;\r\n        input.classList.toggle('error', isError);\r\n\r\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\r\n\r\n        if(isError || diff <= showLengthOn) {\r\n          this.setLabel();\r\n          labelEl.append(` (${maxLength - inputLength})`);\r\n          if(!showingLength) showingLength = true;\r\n        } else if((wasError && !isError) || showingLength) {\r\n          this.setLabel();\r\n          showingLength = false;\r\n        }\r\n      };\r\n\r\n      input.addEventListener('input', processInput);\r\n    }\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  public select() {\r\n    if((this.input as HTMLInputElement).value) { // * avoid selecting whole empty field on iOS devices\r\n      (this.input as HTMLInputElement).select(); // * select text\r\n    }\r\n  }\r\n\r\n  public setLabel() {\r\n    this.label.textContent = '';\r\n    if(this.options.labelText) {\r\n      this.label.innerHTML = this.options.labelText;\r\n    } else {\r\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\r\n    }\r\n  }\r\n\r\n  public onFakeInput() {\r\n    const {scrollHeight, clientHeight} = this.inputFake;\r\n    /* if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\r\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\r\n      this.showScrollDebounced();\r\n    } */\r\n\r\n    this.wasInputFakeClientHeight = clientHeight;\r\n    this.input.style.height = scrollHeight ? scrollHeight + 'px' : '';\r\n  }\r\n\r\n  get value() {\r\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input, false).value;\r\n    //return getRichValue(this.input);\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setValueSilently(value, false);\r\n\r\n    const event = new Event('input', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(value: string, fireFakeInput = true) {\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).value = value;\r\n    } else {\r\n      this.input.innerHTML = value;\r\n      \r\n      if(this.inputFake) {\r\n        this.inputFake.innerHTML = value;\r\n\r\n        if(fireFakeInput) {\r\n          this.onFakeInput();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public isValid() {\r\n    return !this.input.classList.contains('error') && this.value !== this.originalValue;\r\n  }\r\n\r\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\r\n    this.originalValue = value;\r\n\r\n    if(!this.options.plainText) {\r\n      value = RichTextProcessor.wrapDraftText(value);\r\n    }\r\n\r\n    if(silent) {\r\n      this.setValueSilently(value, false); \r\n    } else {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  public setState(state: InputState, label?: LangPackKey) {\r\n    if(label) {\r\n      this.label.textContent = '';\r\n      this.label.append(i18n(label, this.options.labelOptions));\r\n    }\r\n\r\n    this.input.classList.toggle('error', !!(state & InputState.Error));\r\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\r\n  }\r\n\r\n  public setError(label?: LangPackKey) {\r\n    this.setState(InputState.Error, label);\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport fastSmoothScroll, { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n/*\r\nvar el = $0;\r\nvar height = 0;\r\nvar checkUp = false;\r\n\r\ndo {\r\n  height += el.scrollHeight;\r\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\r\nconsole.log(height);\r\n*/\r\n\r\n/*\r\nArray.from($0.querySelectorAll('.bubble-content')).forEach(_el => {\r\n\t//_el.style.display = '';\t\r\n\t//return;\r\n\r\n\tlet el = _el.parentElement;\r\n\tlet height = el.scrollHeight;\r\n\tlet width = el.scrollWidth;\r\n\tel.style.width = width + 'px';\r\n\tel.style.height = height + 'px';\r\n\t_el.style.display = 'none';\r\n});\r\n*/\r\n\r\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\r\nconst scrollsIntersector = new IntersectionObserver(entries => {\r\n  for(let entry of entries) {\r\n    const scrollable = scrollables.get(entry.target as HTMLElement);\r\n\r\n    if(entry.isIntersecting) {\r\n      scrollable.isVisible = true;\r\n    } else {\r\n      scrollable.isVisible = false;\r\n\r\n      if(!isInDOM(entry.target)) {\r\n        scrollsIntersector.unobserve(scrollable.container);\r\n        scrollables.delete(scrollable.container);\r\n      }\r\n    }\r\n  }\r\n}); */\r\n\r\nexport class ScrollableBase {\r\n  protected log: ReturnType<typeof logger>;\r\n\r\n  public onScrollMeasure: number = 0;\r\n  protected onScroll: () => void;\r\n\r\n  public isHeavyAnimationInProgress = false;\r\n  protected needCheckAfterAnimation = false;\r\n\r\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\r\n    this.container.classList.add('scrollable');\r\n\r\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\r\n\r\n    if(el) {\r\n      Array.from(el.children).forEach(c => this.container.append(c));\r\n\r\n      el.append(this.container);\r\n    }\r\n    //this.onScroll();\r\n  }\r\n\r\n  protected setListeners() {\r\n    window.addEventListener('resize', this.onScroll, {passive: true});\r\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\r\n\r\n    useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n\r\n      if(this.onScrollMeasure) {\r\n        this.needCheckAfterAnimation = true;\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(this.needCheckAfterAnimation) {\r\n        this.onScroll();\r\n        this.needCheckAfterAnimation = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public append(element: HTMLElement) {\r\n    this.container.append(element);\r\n  }\r\n\r\n  public scrollIntoViewNew(\r\n    element: HTMLElement,\r\n    position: ScrollLogicalPosition,\r\n    margin?: number,\r\n    maxDistance?: number,\r\n    forceDirection?: FocusDirection,\r\n    forceDuration?: number,\r\n    axis?: 'x' | 'y'\r\n  ) {\r\n    //return Promise.resolve();\r\n    return fastSmoothScroll(this.container, element, position, margin, maxDistance, forceDirection, forceDuration, axis);\r\n  }\r\n}\r\n\r\nexport type SliceSides = 'top' | 'bottom';\r\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\r\n\r\nexport default class Scrollable extends ScrollableBase {\r\n  public splitUp: HTMLElement;\r\n  public padding: HTMLElement;\r\n  \r\n  public onAdditionalScroll: () => void = null;\r\n  public onScrolledTop: () => void = null;\r\n  public onScrolledBottom: () => void = null;\r\n  \r\n  public lastScrollTop: number = 0;\r\n  public lastScrollDirection: number = 0;\r\n\r\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\r\n\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\r\n    super(el, logPrefix);\r\n\r\n    /* if(withPaddingContainer) {\r\n      this.padding = document.createElement('div');\r\n      this.padding.classList.add('scrollable-padding');\r\n      Array.from(this.container.children).forEach(c => this.padding.append(c));\r\n      this.container.append(this.padding);\r\n    } */\r\n\r\n    this.container.classList.add('scrollable-y');\r\n    this.setListeners();\r\n  }\r\n\r\n  public setVirtualContainer(el?: HTMLElement) {\r\n    this.splitUp = el;\r\n    this.log('setVirtualContainer:', el, this);\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //if(this.debug) {\r\n      //this.log('onScroll call', this.onScrollMeasure);\r\n    //}\r\n\r\n    //return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      if(this.onScrollMeasure) {\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n\r\n      this.needCheckAfterAnimation = true;\r\n      return;\r\n    }\r\n\r\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\r\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\r\n    if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\r\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\r\n      this.onScrollMeasure = 0;\r\n\r\n      const scrollTop = this.container.scrollTop;\r\n      this.lastScrollDirection = this.lastScrollTop === scrollTop ? 0 : (this.lastScrollTop < scrollTop ? 1 : -1); // * 1 - bottom, -1 - top\r\n      this.lastScrollTop = scrollTop;\r\n\r\n      if(this.onAdditionalScroll && this.lastScrollDirection !== 0) {\r\n        this.onAdditionalScroll();\r\n      }\r\n      \r\n      if(this.checkForTriggers) {\r\n        this.checkForTriggers();\r\n      }\r\n    });\r\n  };\r\n\r\n  public checkForTriggers = () => {\r\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.onScroll();\r\n      return;\r\n    }\r\n\r\n    const scrollHeight = this.container.scrollHeight;\r\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\r\n      return;\r\n    }\r\n\r\n    const clientHeight = this.container.clientHeight;\r\n    const maxScrollTop = scrollHeight - clientHeight;\r\n    const scrollTop = this.lastScrollTop;\r\n\r\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\r\n\r\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\r\n      this.onScrolledTop();\r\n    }\r\n\r\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\r\n      this.onScrolledBottom();\r\n    }\r\n  };\r\n\r\n  public prepend(...elements: HTMLElement[]) {\r\n    (this.splitUp || this.padding || this.container).prepend(...elements);\r\n  }\r\n\r\n  public append(...elements: HTMLElement[]) {\r\n    (this.splitUp || this.padding || this.container).append(...elements);\r\n  }\r\n\r\n  public getDistanceToEnd() {\r\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\r\n  }\r\n\r\n  get isScrolledDown() {\r\n    return this.getDistanceToEnd() <= 1;\r\n  }\r\n\r\n  set scrollTop(y: number) {\r\n    this.container.scrollTop = y;\r\n  }\r\n  \r\n  get scrollTop() {\r\n    //this.log.trace('get scrollTop');\r\n    return this.container.scrollTop;\r\n  }\r\n  \r\n  get scrollHeight() {\r\n    return this.container.scrollHeight;\r\n  }\r\n}\r\n\r\nexport class ScrollableX extends ScrollableBase {\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\r\n    super(el, logPrefix, container);\r\n\r\n    this.container.classList.add('scrollable-x');\r\n\r\n    if(!isTouchSupported) {\r\n      const scrollHorizontally = (e: any) => {\r\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\r\n          this.container.scrollLeft += e.deltaY / 4;\r\n          cancelEvent(e);\r\n        }\r\n      };\r\n      \r\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValue(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, undefined, undefined, entities);\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities) {\r\n    RichTextProcessor.combineSameEntities(entities);\r\n  }\r\n\r\n  //console.log('getRichValue:', value, entities);\r\n\r\n  return {value, entities};\r\n}\r\n\r\nMOUNT_CLASS_TO.getRichValue = getRichValue;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport { getDeepProperty } from \"../helpers/object\";\r\nimport { ripple } from \"./ripple\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\n\r\nexport type CheckboxFieldOptions = {\r\n  text?: LangPackKey,\r\n  textArgs?: any[],\r\n  name?: string, \r\n  round?: boolean, \r\n  toggle?: boolean,\r\n  stateKey?: string,\r\n  stateValues?: any[],\r\n  disabled?: boolean,\r\n  checked?: boolean,\r\n  restriction?: boolean,\r\n  withRipple?: boolean,\r\n  withHover?: boolean,\r\n};\r\nexport default class CheckboxField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public span: HTMLSpanElement;\r\n\r\n  constructor(options: CheckboxFieldOptions = {}) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('checkbox-field');\r\n\r\n    if(options.restriction) {\r\n      label.classList.add('checkbox-field-restriction');\r\n    }\r\n\r\n    if(options.round) {\r\n      label.classList.add('checkbox-field-round');\r\n    }\r\n\r\n    if(options.disabled) {\r\n      this.toggleDisability(true);\r\n    }\r\n\r\n    const input = this.input = document.createElement('input');\r\n    input.type = 'checkbox';\r\n    if(options.name) {\r\n      input.id = 'input-' + options.name;\r\n    }\r\n\r\n    if(options.checked) {\r\n      input.checked = true;\r\n    }\r\n\r\n    if(options.stateKey) {\r\n      appStateManager.getState().then(state => {\r\n        const stateValue = getDeepProperty(state, options.stateKey);\r\n        let checked: boolean;\r\n        if(options.stateValues) {\r\n          checked = options.stateValues.indexOf(stateValue) === 1;\r\n        } else {\r\n          checked = stateValue;\r\n        }\r\n\r\n        this.setValueSilently(checked);\r\n\r\n        input.addEventListener('change', () => {\r\n          let value: any;\r\n          if(options.stateValues) {\r\n            value = options.stateValues[input.checked ? 1 : 0];\r\n          } else {\r\n            value = input.checked;\r\n          }\r\n\r\n          appStateManager.setByKey(options.stateKey, value);\r\n        });\r\n      });\r\n    }\r\n\r\n    let span: HTMLSpanElement;\r\n    if(options.text) {\r\n      span = this.span = document.createElement('span');\r\n      span.classList.add('checkbox-caption');\r\n      _i18n(span, options.text, options.textArgs);\r\n    } else {\r\n      label.classList.add('checkbox-without-caption');\r\n    }\r\n\r\n    label.append(input);\r\n\r\n    if(options.toggle) {\r\n      label.classList.add('checkbox-field-toggle');\r\n\r\n      const toggle = document.createElement('div');\r\n      toggle.classList.add('checkbox-toggle');\r\n      label.append(toggle);\r\n    } else {\r\n      const box = document.createElement('div');\r\n      box.classList.add('checkbox-box');\r\n  \r\n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      checkSvg.classList.add('checkbox-box-check');\r\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n      use.setAttributeNS(null, 'href', '#check');\r\n      use.setAttributeNS(null, 'x', '-1');\r\n      checkSvg.append(use);\r\n  \r\n      const bg = document.createElement('div');\r\n      bg.classList.add('checkbox-box-background');\r\n  \r\n      const border = document.createElement('div');\r\n      border.classList.add('checkbox-box-border');\r\n  \r\n      box.append(border, bg, checkSvg);\r\n  \r\n      label.append(box);\r\n    }\r\n\r\n    if(span) {\r\n      label.append(span);\r\n    }\r\n\r\n    if(options.withRipple) {\r\n      label.classList.add('checkbox-ripple', 'hover-effect');\r\n      ripple(label, undefined, undefined, true);\r\n      //label.prepend(input);\r\n    } else if(options.withHover) {\r\n      label.classList.add('hover-effect');\r\n    }\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    /* if(this.checked === checked) {\r\n      return;\r\n    } */\r\n    \r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n\r\n  public toggleDisability(disable: boolean) {\r\n    this.label.classList.toggle('checkbox-disabled', disable);\r\n    return () => this.toggleDisability(!disable);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean) {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpTag(el: any, tag: string): HTMLElement {\r\n  return el.closest(tag);\r\n  /* if(el.tagName === tag) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.tagName === tag) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\n\r\nexport type MarkdownType = 'bold' | 'italic' | 'underline' | 'strikethrough' | 'monospace' | 'link' | 'mentionName';\r\nexport type MarkdownTag = {\r\n  match: string,\r\n  entityName: 'messageEntityBold' | 'messageEntityUnderline' | 'messageEntityItalic' | 'messageEntityPre' | 'messageEntityStrike' | 'messageEntityTextUrl' | 'messageEntityMentionName';\r\n};\r\nexport const markdownTags: {[type in MarkdownType]: MarkdownTag} = {\r\n  bold: {\r\n    match: '[style*=\"font-weight\"], b',\r\n    entityName: 'messageEntityBold'\r\n  },\r\n  underline: {\r\n    match: '[style*=\"underline\"], u',\r\n    entityName: 'messageEntityUnderline'\r\n  },\r\n  italic: {\r\n    match: '[style*=\"italic\"], i',\r\n    entityName: 'messageEntityItalic'\r\n  },\r\n  monospace: {\r\n    match: '[style*=\"monospace\"], [face=\"monospace\"]',\r\n    entityName: 'messageEntityPre'\r\n  },\r\n  strikethrough: {\r\n    match: '[style*=\"line-through\"], strike',\r\n    entityName: 'messageEntityStrike'\r\n  },\r\n  link: {\r\n    match: 'A:not(.follow)',\r\n    entityName: 'messageEntityTextUrl'\r\n  },\r\n  mentionName: {\r\n    match: 'A.follow',\r\n    entityName: 'messageEntityMentionName'\r\n  }\r\n};\r\n\r\nexport default function getRichElementValue(node: HTMLElement, lines: string[], line: string[], selNode?: Node, selOffset?: number, entities?: MessageEntity[], offset = {offset: 0}) {\r\n  if(node.nodeType === 3) { // TEXT\r\n    const nodeValue = node.nodeValue;\r\n\r\n    if(selNode === node) {\r\n      line.push(nodeValue.substr(0, selOffset) + '\\x01' + nodeValue.substr(selOffset));\r\n    } else {\r\n      line.push(nodeValue);\r\n    }\r\n\r\n    if(entities && nodeValue.trim()) {\r\n      if(node.parentNode) {\r\n        const parentElement = node.parentElement;\r\n        \r\n        for(const type in markdownTags) {\r\n          const tag = markdownTags[type as MarkdownType];\r\n          const closest = parentElement.closest(tag.match + ', [contenteditable]');\r\n          if(closest && closest.getAttribute('contenteditable') === null) {\r\n            if(tag.entityName === 'messageEntityTextUrl') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                url: (parentElement as HTMLAnchorElement).href,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            } else if(tag.entityName === 'messageEntityMentionName') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                offset: offset.offset,\r\n                length: nodeValue.length,\r\n                user_id: +parentElement.dataset.follow\r\n              });\r\n            } else {\r\n              entities.push({\r\n                _: tag.entityName as any,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    offset.offset += nodeValue.length;\r\n\r\n    return;\r\n  }\r\n\r\n  if(node.nodeType !== 1) { // NON-ELEMENT\r\n    return;\r\n  }\r\n\r\n  const isSelected = (selNode === node);\r\n  const isBlock = node.tagName === 'DIV' || node.tagName === 'P';\r\n  if(isBlock && line.length || node.tagName === 'BR') {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  } else if(node.tagName === 'IMG') {\r\n    const alt = (node as HTMLImageElement).alt;\r\n    if(alt) {\r\n      line.push(alt);\r\n      offset.offset += alt.length;\r\n    }\r\n  }\r\n\r\n  if(isSelected && !selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  let curChild = node.firstChild as HTMLElement;\r\n  while(curChild) {\r\n    getRichElementValue(curChild, lines, line, selNode, selOffset, entities, offset);\r\n    curChild = curChild.nextSibling as any;\r\n  }\r\n\r\n  if(isSelected && selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  if(isBlock && line.length) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAttribute(el: any, attribute: string): HTMLElement {\r\n  return el.closest(`[${attribute}]`);\r\n  /* if(el.getAttribute(attribute) !== null) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.getAttribute(attribute) !== null) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport getRichValue from \"./getRichValue\";\r\n\r\nexport default function isInputEmpty(element: HTMLElement) {\r\n  if(element.hasAttribute('contenteditable') || element.tagName !== 'INPUT') {\r\n    /* const value = element.innerText;\r\n\r\n    return !value.trim() && !serializeNodes(Array.from(element.childNodes)).trim(); */\r\n    return !getRichValue(element, false).value.trim();\r\n  } else {\r\n    return !(element as HTMLInputElement).value.trim();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { blobConstruct, readBlobAsUint8Array } from \"../helpers/blob\";\r\n\r\nexport class FileManager {\r\n  public blobSupported = true;\r\n  \r\n  constructor() {\r\n    try {\r\n      blobConstruct([], '');\r\n    } catch(e) {\r\n      this.blobSupported = false;\r\n    }\r\n  }\r\n  \r\n  public isAvailable() {\r\n    return this.blobSupported;\r\n  }\r\n  \r\n  public write(fileWriter: ReturnType<FileManager['getFakeFileWriter']>, bytes: Uint8Array | Blob | string): Promise<void> {\r\n    if(bytes instanceof Blob) { // is file bytes\r\n      return readBlobAsUint8Array(bytes).then(arr => {\r\n        return fileWriter.write(arr);\r\n      });\r\n    } else {\r\n      return fileWriter.write(bytes);\r\n    }\r\n  }\r\n\r\n  public getFakeFileWriter(mimeType: string, saveFileCallback?: (blob: Blob) => Promise<Blob>) {\r\n    const blobParts: Array<Uint8Array | string> = [];\r\n    const fakeFileWriter = {\r\n      write: async(part: Uint8Array | string) => {\r\n        if(!this.blobSupported) {\r\n          throw false;\r\n        }\r\n        \r\n        blobParts.push(part);\r\n      },\r\n      truncate: () => {\r\n        blobParts.length = 0;\r\n      },\r\n      finalize: (saveToStorage = true) => {\r\n        const blob = blobConstruct(blobParts, mimeType);\r\n\r\n        if(saveToStorage && saveFileCallback) {\r\n          saveFileCallback(blob);\r\n        }\r\n        \r\n        return blob;\r\n      }\r\n    };\r\n    \r\n    return fakeFileWriter;\r\n  }\r\n}\r\n\r\nexport default new FileManager();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../config/modes';\r\nimport { blobConstruct } from '../helpers/blob';\r\nimport FileManager from './filemanager';\r\n//import { MOUNT_CLASS_TO } from './mtproto/mtproto_config';\r\n//import { logger } from './polyfill';\r\n\r\nexport type CacheStorageDbName = 'cachedFiles' | 'cachedStreamChunks' | 'cachedAssets';\r\n\r\nexport default class CacheStorageController {\r\n  private static STORAGES: CacheStorageController[] = [];\r\n  private openDbPromise: Promise<Cache>;\r\n\r\n  private useStorage = true;\r\n\r\n  //private log: ReturnType<typeof logger> = logger('CS');\r\n\r\n  constructor(private dbName: CacheStorageDbName) {\r\n    if(Modes.test) {\r\n      this.dbName += '_test';\r\n    }\r\n\r\n    if(CacheStorageController.STORAGES.length) {\r\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\r\n    }\r\n    \r\n    this.openDatabase();\r\n    CacheStorageController.STORAGES.push(this);\r\n  }\r\n\r\n  private openDatabase(): Promise<Cache> {\r\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\r\n  }\r\n\r\n  public delete(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\r\n  }\r\n\r\n  public deleteAll() {\r\n    return caches.delete(this.dbName);\r\n  }\r\n\r\n  public get(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.match('/' + entryName));\r\n  }\r\n\r\n  public save(entryName: string, response: Response) {\r\n    // return new Promise((resolve) => {}); // DEBUG\r\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, response));\r\n  }\r\n\r\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\r\n    /* if(method === 'blob') {\r\n      return Promise.reject();\r\n    } */\r\n\r\n    // const str = `get fileName: ${fileName}`;\r\n    // console.time(str);\r\n    return this.get(fileName).then((response) => {\r\n      if(!response) {\r\n        //console.warn('getFile:', response, fileName);\r\n        throw 'NO_ENTRY_FOUND';\r\n      }\r\n\r\n      const promise = response[method]();\r\n      // promise.then(() => {\r\n      //   console.timeEnd(str);\r\n      // });\r\n      return promise;\r\n    });\r\n  }\r\n\r\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n    //return Promise.resolve(blobConstruct([blob]));\r\n    if(!(blob instanceof Blob)) {\r\n      blob = blobConstruct(blob) as Blob;\r\n    }\r\n\r\n    const response = new Response(blob, {\r\n      headers: {\r\n        'Content-Length': '' + blob.size\r\n      }\r\n    });\r\n    \r\n    return this.save(fileName, response).then(() => blob as Blob);\r\n  }\r\n\r\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\r\n    if(!this.useStorage) {\r\n      return Promise.reject('STORAGE_OFFLINE');\r\n    }\r\n\r\n    return new Promise<T>(async(resolve, reject) => {\r\n      let rejected = false;\r\n      const timeout = setTimeout(() => {\r\n        reject();\r\n        //console.warn('CACHESTORAGE TIMEOUT');\r\n        rejected = true;\r\n      }, 15e3);\r\n\r\n      try {\r\n        const cache = await this.openDatabase();\r\n        if(!cache) {\r\n          this.useStorage = false;\r\n          this.openDbPromise = undefined;\r\n          throw 'no cache?';\r\n        }\r\n\r\n        const res = await callback(cache);\r\n\r\n        if(rejected) return;\r\n        resolve(res);\r\n      } catch(err) {\r\n        reject(err);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n    });\r\n  }\r\n\r\n  public getFileWriter(fileName: string, mimeType: string) {\r\n    const fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob).catch(() => blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean) {\r\n    return Promise.all(this.STORAGES.map(storage => {\r\n      storage.useStorage = enabled;\r\n      \r\n      if(!enabled) {\r\n        return storage.deleteAll();\r\n      }\r\n    }));\r\n  }\r\n}\r\n\r\n//const cacheStorage = new CacheStorageController(); \r\n//MOUNT_CLASS_TO.cacheStorage = cacheStorage;\r\n//export default cacheStorage;\r\n"],"sourceRoot":""}
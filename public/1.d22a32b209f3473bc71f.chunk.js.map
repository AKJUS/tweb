{"version":3,"sources":["webpack:///./src/lib/appManagers/appRuntimeManager.ts","webpack:///./src/lib/langPack.ts","webpack:///./src/lib/webp/webp.worker.ts","webpack:///./src/lib/webp/webpWorkerController.ts","webpack:///./src/lib/mtproto/singleInstance.ts","webpack:///./src/lib/mtproto/webPushApiManager.ts","webpack:///./src/lib/mtproto/telegramMeWebManager.ts","webpack:///./src/lib/mtproto/mtproto.worker.ts","webpack:///./src/lib/mtproto/transports/websocket.ts","webpack:///./src/lib/mtproto/mtprotoworker.ts","webpack:///./src/lib/crypto/crypto_methods.ts","webpack:///./src/helpers/date.ts","webpack:///./src/helpers/string.ts"],"names":["appRuntimeManager","location","reload","e","window","close","focus","langPack","I18n","pluralRules","cacheLangPackPromise","loadLocalLangPack","defaultCode","langPackCode","lastRequestedLangCode","Promise","all","then","lang","langSign","strings","formatLocalStrings","default","saveLangPack","_","from_version","lang_code","version","local","loadLangPack","langCode","requestedServerLanguage","invokeApiCacheable","lang_pack","polyfillPromise","pushTo","i","v","push","key","value","getLangPack","_langPack","__langPack","___langPack","forEach","l","concat","string","appVersion","langPackVersion","set","applyLangPack","Intl","PluralRules","err","console","error","split","clear","dispatchEvent","Array","from","document","querySelectorAll","element","instance","weakMap","get","update","superFormatter","input","args","indexHolder","out","lastIndex","replace","match","p1","p2","p3","offset","slice","b","createElement","append","length","format","plain","str","select","regExp","Map","getCacheLangPack","finally","undefined","getStrings","invokeApi","keys","resolve","_Intl","Object","assign","WeakMap","IntlElementBase","options","property","this","classList","add","IntlElement","textContent","formatted","dataset","IntlDateElement","dateTimeFormat","DateTimeFormat","date","i18n","i18n_","_i18n","join","elements","useLast","arr","delimiterKey","Worker_fn","Worker","webpWorkerController","convertPromises","worker","addEventListener","payload","data","fileName","indexOf","promise","bytes","reject","postMessage","init","isWebpSupportedCache","toDataURL","startsWith","hasOwnProperty","convertPromise","type","singleInstance","log","clearInstance","masterInstance","deactivated","warn","delete","deactivateInstance","deactivateTimeout","idle","checkInstance","isIDLE","time","Date","now","newInstance","id","instanceID","curInstance","xt_instance","startAll","initial","clearTimeout","stopAll","setTimeout","started","reset","setInterval","documentElement","WebPushApiManager","isAvailable","isPushEnabled","localNotificationsAvailable","settings","isFirefox","navigator","userAgent","toLowerCase","userVisibleOnly","subscribe","serviceWorker","ready","reg","pushManager","subscription","pushSubscriptionNotify","catch","Notification","permission","isAliveNotify","baseUrl","href","ACTIONS_LANG_MAP","push_action_mute1d","push_action_settings","push_message_nopreview","action","task","localNotifications","postSWMessage","isAliveTO","getSubscription","setUpServiceWorkerChannel","unsubscribe","successful","newSettings","addServiceWorkerTaskListener","event","subscriptionObj","toJSON","endpoint","p256dh","auth","tokenType","tokenValue","JSON","stringify","webPushApiManager","TelegramMeWebManager","disabled","test","domains","hostname","canRedirect","curValue","ts","tgme_sync","promises","map","url","script","onload","onerror","remove","src","body","appendChild","telegramMeWebManager","dcId","logSuffix","super","debug","handleOpen","handleError","handleClose","removeListeners","handleMessage","byteLength","send","ws","logTypes","Error","Log","Debug","logger","connect","removeEventListener","WebSocket","binaryType","apiManagerProxy","method","performTaskWorker","afterMessageIdTemp","taskId","awaiting","pending","updatesProcessor","hashes","apiPromisesSingle","apiPromisesCacheable","isSWRegistered","sockets","taskListeners","taskListenersSW","postMessagesWaiting","onWorkerMessage","callback","progress","rootScope","finalizeTask","result","start","registerServiceWorker","addTaskListener","toggleStorage","sessionStorage","race","setAuthorized","forceUnsubscribe","cacheName","caches","socketTask","socket","onOpen","onClose","onMessage","buffer","storageTask","res","language","performTaskWorkerVoid","forceReconnectTimeout","registerWorker","getConfig","register","scope","registration","installing","waiting","active","onServiceWorkerFail","releasePending","controller","responseTask","uploadFile","originalPayload","message","bind","isWebpSupported","name","onWorkerFirstMessage","once","deferred","taskName","params","o","prepareTempMessageId","messageId","queryJSON","cached","hash","includes","q","cache","item","override","fulfilled","timeout","cacheSeconds","timestamp","verify","queueId","userAuth","dcID","dc_id","enabled","getConfigPromise","config","months","days","ONE_DAY","getWeekNumber","d","UTC","getFullYear","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","Math","ceil","getTime","formatDateAccordingToToday","timeStr","getHours","getMinutes","getDay","formatDateAccordingToTodayNew","today","hour","minute","year","day","month","weekday","formatTime","getFullDate","joiner","monthAsNumber","noSeconds","getSeconds","leadingZero","noTime","tsNow","seconds","t","yearPattern","RegExp","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","fillTipDates","query","dates","trim","setFullYear","setHours","minDate","maxDate","title","dayOfWeek","c","setDate","formatWeekLong","getDayOfWeek","distance","setTime","matches","exec","g1","g2","k","createForDayMonth","createForMonthYear","selectedYear","currentYear","g3","parseInt","validDateForMonth","formatterYearMax","k1","setMonth","formatterMonthYear","formatterDayMonth","limitSymbols","limitFrom","escapeRegExp","encodeEntities","charCodeAt","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","index","partLength","convertInputKeyToKey","inputKey","convertKeyToInputKey","toUpperCase","capitalizeFirstLetter","charAt"],"mappings":"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","file":"1.d22a32b209f3473bc71f.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport class AppRuntimeManager {\r\n  public reload() {\r\n    try {\r\n      location.reload();\r\n    } catch(e) {};\r\n\r\n    // if(window.chrome && chrome.runtime && chrome.runtime.reload) {\r\n    //   chrome.runtime.reload();\r\n    // }\r\n  }\r\n\r\n  public close() {\r\n    try {\r\n      window.close();\r\n    } catch(e) {}\r\n  }\r\n\r\n  /**\r\n   * Better to call from event\r\n   */\r\n  public focus() {\r\n    // // @ts-ignore\r\n    // if(window.navigator.mozApps && document.hidden) {\r\n    //   // Get app instance and launch it to bring app to foreground\r\n    //   // @ts-ignore\r\n    //   window.navigator.mozApps.getSelf().onsuccess = function() {\r\n    //     this.result.launch();\r\n    //   };\r\n    // } else {\r\n    //   // @ts-ignore\r\n    //   if(window.chrome && chrome.app && chrome.app.window) {\r\n    //     // @ts-ignore\r\n    //     chrome.app.window.current().focus();\r\n    //   }\r\n\r\n      window.focus();\r\n    // }\r\n  }\r\n}\r\n\r\nconst appRuntimeManager = new AppRuntimeManager();\r\nexport default appRuntimeManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG, { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { safeAssign } from \"../helpers/object\";\r\nimport { capitalizeFirstLetter } from \"../helpers/string\";\r\nimport type lang from \"../lang\";\r\nimport type langSign from \"../langSign\";\r\nimport { LangPackDifference, LangPackString } from \"../layer\";\r\nimport apiManager from \"./mtproto/mtprotoworker\";\r\nimport stateStorage from \"./stateStorage\";\r\nimport App from \"../config/app\";\r\nimport rootScope from \"./rootScope\";\r\n\r\nexport const langPack: {[actionType: string]: LangPackKey} = {\r\n  \"messageActionChatCreate\": \"ActionCreateGroup\",\r\n  \"messageActionChatCreateYou\": \"ActionYouCreateGroup\",\r\n\t\"messageActionChatEditTitle\": \"ActionChangedTitle\",\r\n\t\"messageActionChatEditPhoto\": \"ActionChangedPhoto\",\r\n\t\"messageActionChatEditVideo\": \"ActionChangedVideo\",\r\n\t\"messageActionChatDeletePhoto\": \"ActionRemovedPhoto\",\r\n\t\"messageActionChatReturn\": \"ActionAddUserSelf\",\r\n\t\"messageActionChatReturnYou\": \"ActionAddUserSelfYou\",\r\n\t\"messageActionChatJoined\": \"ActionAddUserSelfMega\",\r\n\t\"messageActionChatJoinedYou\": \"ChannelMegaJoined\",\r\n  \"messageActionChatAddUser\": \"ActionAddUser\",\r\n  \"messageActionChatAddUsers\": \"ActionAddUser\",\r\n\t\"messageActionChatLeave\": \"ActionLeftUser\",\r\n\t\"messageActionChatLeaveYou\": \"YouLeft\",\r\n\t\"messageActionChatDeleteUser\": \"ActionKickUser\",\r\n\t\"messageActionChatJoinedByLink\": \"ActionInviteUser\",\r\n  \"messageActionPinMessage\": \"ActionPinnedNoText\",\r\n  \"messageActionContactSignUp\": \"Chat.Service.PeerJoinedTelegram\",\r\n\t\"messageActionChannelCreate\": \"ActionCreateChannel\",\r\n\t\"messageActionChannelEditTitle\": \"Chat.Service.Channel.UpdatedTitle\",\r\n\t\"messageActionChannelEditPhoto\": \"Chat.Service.Channel.UpdatedPhoto\",\r\n\t\"messageActionChannelEditVideo\": \"Chat.Service.Channel.UpdatedVideo\",\r\n  \"messageActionChannelDeletePhoto\": \"Chat.Service.Channel.RemovedPhoto\",\r\n  \"messageActionHistoryClear\": \"HistoryCleared\",\r\n\r\n  \"messageActionChannelMigrateFrom\": \"ActionMigrateFromGroup\",\r\n\r\n  \"messageActionPhoneCall.in_ok\": \"ChatList.Service.Call.incoming\",\r\n\t\"messageActionPhoneCall.out_ok\": \"ChatList.Service.Call.outgoing\",\r\n\t\"messageActionPhoneCall.in_missed\": \"ChatList.Service.Call.Missed\",\r\n\t\"messageActionPhoneCall.out_missed\": \"ChatList.Service.Call.Cancelled\",\r\n\r\n\t\"messageActionGroupCall.started\": \"ActionGroupCallJustStarted\",\r\n\t\"messageActionGroupCall.started_by\": \"ActionGroupCallStarted\",\r\n\t\"messageActionGroupCall.started_byYou\": \"ActionGroupCallStartedByYou\",\r\n\t\"messageActionGroupCall.ended_by\": \"Chat.Service.VoiceChatFinished\",\r\n\t\"messageActionGroupCall.ended_byYou\": \"Chat.Service.VoiceChatFinishedYou\",\r\n\r\n\t\"messageActionBotAllowed\": \"Chat.Service.BotPermissionAllowed\"\r\n};\r\n\r\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\r\n\r\nnamespace I18n {\r\n\texport const strings: Map<LangPackKey, LangPackString> = new Map();\r\n\tlet pluralRules: Intl.PluralRules;\r\n\r\n\tlet cacheLangPackPromise: Promise<LangPackDifference>;\r\n\texport let lastRequestedLangCode: string;\r\n\texport let requestedServerLanguage = false;\r\n\texport function getCacheLangPack(): Promise<LangPackDifference> {\r\n\t\tif(cacheLangPackPromise) return cacheLangPackPromise;\r\n\t\treturn cacheLangPackPromise = Promise.all([\r\n\t\t\tstateStorage.get('langPack') as Promise<LangPackDifference>,\r\n\t\t\tpolyfillPromise\r\n\t\t]).then(([langPack]) => {\r\n\t\t\tif(!langPack/*  || true */) {\r\n\t\t\t\treturn loadLocalLangPack();\r\n\t\t\t} else if(DEBUG && false) {\r\n\t\t\t\treturn getLangPack(langPack.lang_code);\r\n\t\t\t}/*  else if(langPack.appVersion !== App.langPackVersion) {\r\n\t\t\t\treturn getLangPack(langPack.lang_code);\r\n\t\t\t} */\r\n\t\t\t\r\n\t\t\tif(!lastRequestedLangCode) {\r\n\t\t\t\tlastRequestedLangCode = langPack.lang_code;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tapplyLangPack(langPack);\r\n\t\t\treturn langPack;\r\n\t\t}).finally(() => {\r\n\t\t\tcacheLangPackPromise = undefined;\r\n\t\t});\r\n\t}\r\n\r\n\texport function loadLocalLangPack() {\r\n\t\tconst defaultCode = App.langPackCode;\r\n\t\tlastRequestedLangCode = defaultCode;\r\n\t\treturn Promise.all([\r\n\t\t\timport('../lang'),\r\n\t\t\timport('../langSign')\r\n\t\t]).then(([lang, langSign]) => {\r\n\t\t\tconst strings: LangPackString[] = [];\r\n\t\t\tformatLocalStrings(lang.default, strings);\r\n\t\t\tformatLocalStrings(langSign.default, strings);\r\n\r\n\t\t\tconst langPack: LangPackDifference = {\r\n\t\t\t\t_: 'langPackDifference',\r\n\t\t\t\tfrom_version: 0,\r\n\t\t\t\tlang_code: defaultCode,\r\n\t\t\t\tstrings,\r\n\t\t\t\tversion: 0,\r\n\t\t\t\tlocal: true\r\n\t\t\t};\r\n\t\t\treturn saveLangPack(langPack);\r\n\t\t});\r\n\t}\r\n\r\n\texport function loadLangPack(langCode: string) {\r\n\t\trequestedServerLanguage = true;\r\n\t\treturn Promise.all([\r\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\r\n\t\t\t\tlang_code: langCode,\r\n\t\t\t\tlang_pack: App.langPack\r\n\t\t\t}),\r\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\r\n\t\t\t\tlang_code: langCode,\r\n\t\t\t\tlang_pack: 'android'\r\n\t\t\t}),\r\n\t\t\timport('../lang'),\r\n\t\t\timport('../langSign'),\r\n\t\t\tpolyfillPromise\r\n\t\t]);\r\n\t}\r\n\r\n\texport function getStrings(langCode: string, strings: string[]) {\r\n\t\treturn apiManager.invokeApi('langpack.getStrings', {\r\n\t\t\tlang_pack: App.langPack,\r\n\t\t\tlang_code: langCode,\r\n\t\t\tkeys: strings\r\n\t\t});\r\n\t}\r\n\r\n\texport function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\r\n\t\tfor(const i in strings) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst v = strings[i];\r\n\t\t\tif(typeof(v) === 'string') {\r\n\t\t\t\tpushTo.push({\r\n\t\t\t\t\t_: 'langPackString',\r\n\t\t\t\t\tkey: i,\r\n\t\t\t\t\tvalue: v\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tpushTo.push({\r\n\t\t\t\t\t_: 'langPackStringPluralized',\r\n\t\t\t\t\tkey: i,\r\n\t\t\t\t\t...v\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pushTo;\r\n\t}\r\n\r\n\texport function getLangPack(langCode: string) {\r\n\t\tlastRequestedLangCode = langCode;\r\n\t\treturn loadLangPack(langCode).then(([langPack, _langPack, __langPack, ___langPack, _]) => {\r\n\t\t\tlet strings: LangPackString[] = [];\r\n\r\n\t\t\t[__langPack, ___langPack].forEach(l => {\r\n\t\t\t\tformatLocalStrings(l.default as any, strings);\r\n\t\t\t});\r\n\r\n\t\t\tstrings = strings.concat(langPack.strings);\r\n\r\n\t\t\tfor(const string of _langPack.strings) {\r\n\t\t\t\tstrings.push(string);\r\n\t\t\t}\r\n\r\n\t\t\tlangPack.strings = strings;\r\n\t\t\treturn saveLangPack(langPack);\r\n\t\t});\r\n\t}\r\n\r\n\texport function saveLangPack(langPack: LangPackDifference) {\r\n\t\tlangPack.appVersion = App.langPackVersion;\r\n\r\n\t\treturn stateStorage.set({langPack}).then(() => {\r\n\t\t\tapplyLangPack(langPack);\r\n\t\t\treturn langPack;\r\n\t\t});\r\n\t}\r\n\r\n\texport const polyfillPromise = (function checkIfPolyfillNeeded() {\r\n\t\tif(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t} else {\r\n\t\t\treturn import('./pluralPolyfill').then((_Intl) => {\r\n\t\t\t\t(window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\r\n\t\t\t});\r\n\t\t}\r\n\t})();\r\n\t\r\n\texport function applyLangPack(langPack: LangPackDifference) {\r\n\t\tif(langPack.lang_code !== lastRequestedLangCode) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code);\r\n\t\t} catch(err) {\r\n\t\t\tconsole.error('pluralRules error', err);\r\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\r\n\t\t}\r\n\r\n\t\tstrings.clear();\r\n\r\n\t\tfor(const string of langPack.strings) {\r\n\t\t\tstrings.set(string.key as LangPackKey, string);\r\n\t\t}\r\n\r\n\t\trootScope.dispatchEvent('language_change', langPack.lang_code);\r\n\r\n\t\tconst elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\r\n\t\telements.forEach(element => {\r\n\t\t\tconst instance = weakMap.get(element);\r\n\r\n\t\t\tif(instance) {\r\n\t\t\t\tinstance.update();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\texport function superFormatter(input: string, args?: any[], indexHolder = {i: 0}) {\r\n\t\tlet out: (string | HTMLElement)[] = [];\r\n\t\tconst regExp = /(\\*\\*)(.+?)\\1|(\\n)|un\\d|%\\d\\$.|%./g;\r\n\r\n\t\tlet lastIndex = 0;\r\n\t\tinput.replace(regExp, (match, p1: any, p2: any, p3: any, offset: number, string: string) => {\r\n\t\t\t//console.table({match, p1, p2, offset, string});\r\n\r\n\t\t\tout.push(string.slice(lastIndex, offset));\r\n\r\n\t\t\tif(p1) {\r\n\t\t\t\t//offset += p1.length;\r\n\t\t\t\tswitch(p1) {\r\n\t\t\t\t\tcase '**': {\r\n\t\t\t\t\t\tconst b = document.createElement('b');\r\n\t\t\t\t\t\tb.append(...superFormatter(p2, args, indexHolder));\r\n\t\t\t\t\t\tout.push(b);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(p3) {\r\n\t\t\t\tout.push(document.createElement('br'));\r\n\t\t\t} else if(args) {\r\n\t\t\t\tout.push(args[indexHolder.i++]);\r\n\t\t\t}\r\n\r\n\t\t\tlastIndex = offset + match.length;\r\n\t\t\treturn '';\r\n\t\t});\r\n\t\r\n\t\tif(lastIndex !== input.length) {\r\n\t\t\tout.push(input.slice(lastIndex));\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\texport function format(key: LangPackKey, plain: true, args?: any[]): string;\r\n\texport function format(key: LangPackKey, plain?: false, args?: any[]): (string | HTMLElement)[];\r\n\texport function format(key: LangPackKey, plain = false, args?: any[]): (string | HTMLElement)[] | string {\r\n\t\tconst str = strings.get(key);\r\n\t\tlet input: string;\r\n\t\tif(str) {\r\n\t\t\tif(str._ === 'langPackStringPluralized' && args?.length) {\r\n\t\t\t\tlet v = args[0] as number | string;\r\n\t\t\t\tif(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\r\n\t\t\t\tconst s = pluralRules.select(v);\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tinput = str[s + '_value'] || str['other_value'];\r\n\t\t\t} else if(str._ === 'langPackString') {\r\n\t\t\t\tinput = str.value;\r\n\t\t\t} else {\r\n\t\t\t\t//input = '[' + key + ']';\r\n\t\t\t\tinput = key;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//input = '[' + key + ']';\r\n\t\t\tinput = key;\r\n\t\t}\r\n\t\t\r\n\t\tif(plain) {\r\n\t\t\tif(args?.length) {\r\n\t\t\t\tconst regExp = /un\\d|%\\d\\$.|%./g;\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tinput = input.replace(regExp, (match, offset, string) => {\r\n\t\t\t\t\treturn '' + args[i++];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn input;\r\n\t\t} else {\r\n\t\t\treturn superFormatter(input, args);\r\n\t\t}\r\n\t}\r\n\r\n\texport const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\r\n\r\n\texport type IntlElementBaseOptions = {\r\n\t\telement?: HTMLElement,\r\n\t\tproperty?: /* 'innerText' |  */'innerHTML' | 'placeholder',\r\n\t};\r\n\r\n\tabstract class IntlElementBase<Options extends IntlElementBaseOptions> {\r\n\t\tpublic element: IntlElementBaseOptions['element'];\r\n\t\tpublic property: IntlElementBaseOptions['property'] = 'innerHTML';\r\n\t\r\n\t\tconstructor(options: Options) {\r\n\t\t\tthis.element = options.element || document.createElement('span');\r\n\t\t\tthis.element.classList.add('i18n');\r\n\t\t\t\r\n\t\t\tthis.update(options);\r\n\t\t\tweakMap.set(this.element, this);\r\n\t\t}\r\n\r\n\t\tabstract update(options?: Options): void;\r\n\t}\r\n\r\n\texport type IntlElementOptions = IntlElementBaseOptions & {\r\n\t\tkey: LangPackKey,\r\n\t\targs?: any[]\r\n\t};\r\n\texport class IntlElement extends IntlElementBase<IntlElementOptions> {\r\n\t\tpublic key: IntlElementOptions['key'];\r\n\t\tpublic args: IntlElementOptions['args'];\r\n\r\n\t\tpublic update(options?: IntlElementOptions) {\r\n\t\t\tsafeAssign(this, options);\r\n\t\r\n\t\t\tif(this.property === 'innerHTML') {\r\n\t\t\t\tthis.element.textContent = '';\r\n\t\t\t\tthis.element.append(...format(this.key, false, this.args));\r\n\t\t\t} else {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst v = this.element[this.property];\r\n\t\t\t\tconst formatted = format(this.key, true, this.args);\r\n\r\n\t\t\t\t// * hasOwnProperty won't work here\r\n\t\t\t\tif(v === undefined) this.element.dataset[this.property] = formatted;\r\n\t\t\t\telse (this.element as HTMLInputElement)[this.property] = formatted;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport type IntlDateElementOptions = IntlElementBaseOptions & {\r\n\t\tdate: Date,\r\n\t\toptions: Intl.DateTimeFormatOptions\r\n\t};\r\n\texport class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\r\n\t\tpublic date: IntlDateElementOptions['date'];\r\n\t\tpublic options: IntlDateElementOptions['options'];\r\n\r\n\t\tpublic update(options?: IntlDateElementOptions) {\r\n\t\t\tsafeAssign(this, options);\r\n\t\r\n\t\t\t//var options = { month: 'long', day: 'numeric' };\r\n\t\t\t\r\n\t\t\t// * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\r\n\t\t\tconst dateTimeFormat = new Intl.DateTimeFormat(lastRequestedLangCode + '-u-hc-h23', this.options);\r\n\t\t\t\r\n\t\t\t(this.element as any)[this.property] = capitalizeFirstLetter(dateTimeFormat.format(this.date));\r\n\t\t}\r\n\t}\r\n\r\n\texport function i18n(key: LangPackKey, args?: any[]) {\r\n\t\treturn new IntlElement({key, args}).element;\r\n\t}\r\n\t\r\n\texport function i18n_(options: IntlElementOptions) {\r\n\t\treturn new IntlElement(options).element;\r\n\t}\r\n\r\n\texport function _i18n(element: HTMLElement, key: LangPackKey, args?: any[], property?: IntlElementOptions['property']) {\r\n\t\treturn new IntlElement({element, key, args, property}).element;\r\n\t}\r\n}\r\n\r\nexport {I18n};\r\nexport default I18n;\r\n\r\nconst i18n = I18n.i18n;\r\nexport {i18n};\r\n\r\nconst i18n_ = I18n.i18n_;\r\nexport {i18n_};\r\n\r\nconst _i18n = I18n._i18n;\r\nexport {_i18n};\r\n\r\nexport function join(elements: HTMLElement[], useLast = true) {\r\n\tconst arr: HTMLElement[] = elements.slice(0, 1);\r\n  for(let i = 1; i < elements.length; ++i) {\r\n    const isLast = (elements.length - 1) === i;\r\n    const delimiterKey: LangPackKey = isLast && useLast ? 'WordDelimiterLast' : 'WordDelimiter';\r\n    arr.push(i18n(delimiterKey));\r\n    arr.push(elements[i]);\r\n  }\r\n\r\n\treturn arr;\r\n}\r\n\r\nMOUNT_CLASS_TO.I18n = I18n;\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"webp.worker.eafb4e17dc09d5858dc8.bundle.worker.js\");\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport WebpWorker from 'worker-loader!./webp.worker';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport { CancellablePromise, deferredPromise } from '../../helpers/cancellablePromise';\r\nimport apiManagerProxy from '../mtproto/mtprotoworker';\r\n\r\nexport type WebpConvertTask = {\r\n  type: 'convertWebp', \r\n  payload: {\r\n    fileName: string, \r\n    bytes: Uint8Array\r\n  }\r\n};\r\n\r\nexport class WebpWorkerController {\r\n  private worker: Worker;\r\n  private convertPromises: {[fileName: string]: CancellablePromise<Uint8Array>} = {};\r\n  private isWebpSupportedCache: boolean;\r\n  \r\n  init() {\r\n    this.worker = new WebpWorker();\r\n    this.worker.addEventListener('message', (e) => {\r\n      const payload = (e.data as WebpConvertTask).payload;\r\n\r\n      if(payload.fileName.indexOf('main-') === 0) {\r\n        const promise = this.convertPromises[payload.fileName];\r\n        if(promise) {\r\n          payload.bytes ? promise.resolve(payload.bytes) : promise.reject();\r\n          delete this.convertPromises[payload.fileName];\r\n        }\r\n      } else {\r\n        apiManagerProxy.postMessage(e.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  postMessage(data: WebpConvertTask) {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    this.worker.postMessage(data);\r\n  }\r\n\r\n  isWebpSupported() {\r\n    if(this.isWebpSupportedCache === undefined) {\r\n      this.isWebpSupportedCache = document.createElement('canvas').toDataURL('image/webp').startsWith('data:image/webp');\r\n    }\r\n\r\n    return this.isWebpSupportedCache;\r\n  }\r\n\r\n  convert(fileName: string, bytes: Uint8Array) {\r\n    fileName = 'main-' + fileName;\r\n\r\n    if(this.convertPromises.hasOwnProperty(fileName)) {\r\n      return this.convertPromises[fileName];\r\n    }\r\n    \r\n    const convertPromise = deferredPromise<Uint8Array>();\r\n\r\n    this.postMessage({type: 'convertWebp', payload: {fileName, bytes}});\r\n\r\n    return this.convertPromises[fileName] = convertPromise;\r\n  }\r\n}\r\n\r\nconst webpWorkerController = new WebpWorkerController();\r\nMOUNT_CLASS_TO.webpWorkerController = webpWorkerController;\r\nexport default webpWorkerController;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { nextRandomInt } from \"../../helpers/random\";\r\nimport { logger } from \"../logger\";\r\nimport rootScope from \"../rootScope\";\r\nimport sessionStorage from \"../sessionStorage\";\r\nimport apiManager from \"./mtprotoworker\";\r\n\r\nexport type AppInstance = {\r\n  id: number,\r\n  idle: boolean,\r\n  time: number\r\n};\r\n\r\nconst CHECK_INSTANCE_INTERVAL = 5000; \r\nconst DEACTIVATE_TIMEOUT = 30000;\r\nconst MULTIPLE_TABS_THRESHOLD = 20000;\r\n\r\nexport class SingleInstance {\r\n  private instanceID: number;\r\n  private started: boolean;\r\n  private masterInstance: boolean;\r\n  private deactivateTimeout: number;\r\n  private deactivated: boolean;\r\n  private initial: boolean;\r\n  private log = logger('INSTANCE');\r\n\r\n  public start() {\r\n    if(!this.started/*  && !Config.Navigator.mobile && !Config.Modes.packed */) {\r\n      this.started = true;\r\n\r\n      this.reset();\r\n      //IdleManager.start();\r\n\r\n      rootScope.addEventListener('idle', this.checkInstance);\r\n      setInterval(this.checkInstance, CHECK_INSTANCE_INTERVAL);\r\n      this.checkInstance();\r\n\r\n      try {\r\n        document.documentElement.addEventListener('beforeunload', this.clearInstance);\r\n      } catch(e) {}\r\n    }\r\n  }\r\n\r\n  public reset() {\r\n    this.instanceID = nextRandomInt(0xFFFFFFFF);\r\n    this.masterInstance = false;\r\n    if(this.deactivateTimeout) clearTimeout(this.deactivateTimeout);\r\n    this.deactivateTimeout = 0;\r\n    this.deactivated = false;\r\n    this.initial = false;\r\n  }\r\n\r\n  public clearInstance = () => {\r\n    if(this.masterInstance && !this.deactivated) {\r\n      this.log.warn('clear master instance');\r\n      sessionStorage.delete('xt_instance');\r\n    }\r\n  };\r\n\r\n  public activateInstance() {\r\n    if(this.deactivated) {\r\n      this.reset();\r\n      this.checkInstance(false);\r\n      rootScope.dispatchEvent('instance_activated');\r\n    }\r\n  }\r\n\r\n  public deactivateInstance = () => {\r\n    if(this.masterInstance || this.deactivated) {\r\n      return false;\r\n    }\r\n\r\n    this.log('deactivate');\r\n    this.deactivateTimeout = 0;\r\n    this.deactivated = true;\r\n    this.clearInstance();\r\n    //$modalStack.dismissAll();\r\n\r\n    //document.title = _('inactive_tab_title_raw')\r\n\r\n    rootScope.idle.deactivated = true;\r\n    rootScope.dispatchEvent('instance_deactivated');\r\n  };\r\n\r\n  public checkInstance = (idle = rootScope.idle && rootScope.idle.isIDLE) => {\r\n    if(this.deactivated) {\r\n      return false;\r\n    }\r\n    \r\n    const time = Date.now();\r\n    const newInstance: AppInstance = {\r\n      id: this.instanceID, \r\n      idle, \r\n      time\r\n    };\r\n\r\n    sessionStorage.get('xt_instance', false).then((curInstance: AppInstance) => {\r\n      // this.log('check instance', newInstance, curInstance)\r\n      if(!idle ||\r\n          !curInstance ||\r\n          curInstance.id === this.instanceID ||\r\n          curInstance.time < (time - MULTIPLE_TABS_THRESHOLD)) {\r\n        sessionStorage.set({xt_instance: newInstance});\r\n\r\n        if(!this.masterInstance) {\r\n          apiManager.startAll();\r\n          if(!this.initial) {\r\n            this.initial = true;\r\n          } else {\r\n            this.log.warn('now master instance', newInstance);\r\n          }\r\n\r\n          this.masterInstance = true;\r\n        }\r\n\r\n        if(this.deactivateTimeout) {\r\n          clearTimeout(this.deactivateTimeout);\r\n          this.deactivateTimeout = 0;\r\n        }\r\n      } else {\r\n        if(this.masterInstance) {\r\n          apiManager.stopAll();\r\n          this.log.warn('now idle instance', newInstance);\r\n          if(!this.deactivateTimeout) {\r\n            this.deactivateTimeout = window.setTimeout(this.deactivateInstance, DEACTIVATE_TIMEOUT);\r\n          }\r\n\r\n          this.masterInstance = false;\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst singleInstance = new SingleInstance();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.singleInstance = singleInstance);\r\nexport default singleInstance;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { NotificationSettings } from \"../appManagers/appNotificationsManager\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { copy } from \"../../helpers/object\";\r\nimport { logger } from \"../logger\";\r\nimport rootScope from \"../rootScope\";\r\nimport { ServiceWorkerNotificationsClearTask, ServiceWorkerPingTask, ServiceWorkerPushClickTask } from \"../serviceWorker/index.service\";\r\nimport apiManager from \"./mtprotoworker\";\r\nimport I18n, { LangPackKey } from \"../langPack\";\r\nimport { isMobile } from \"../../helpers/userAgent\";\r\nimport appRuntimeManager from \"../appManagers/appRuntimeManager\";\r\n\r\nexport type PushSubscriptionNotifyType = 'init' | 'subscribe' | 'unsubscribe';\r\nexport type PushSubscriptionNotifyEvent = `push_${PushSubscriptionNotifyType}`;\r\n\r\nexport type PushSubscriptionNotify = {\r\n  tokenType: number,\r\n  tokenValue: string\r\n};\r\n\r\nexport class WebPushApiManager {\r\n  public isAvailable = true;\r\n  private isPushEnabled = false;\r\n  private localNotificationsAvailable = true;\r\n  private started = false;\r\n  private settings: NotificationSettings & {baseUrl?: string} = {} as any;\r\n  private isAliveTO: any;\r\n  private isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n  private userVisibleOnly = this.isFirefox ? false : true;\r\n  private log = logger('PM');\r\n\r\n  constructor() {\r\n    if(!('PushManager' in window) ||\r\n      !('Notification' in window) ||\r\n      !('serviceWorker' in navigator)) {\r\n      this.log.warn('Push messaging is not supported.');\r\n      this.isAvailable = false;\r\n      this.localNotificationsAvailable = false;\r\n    }\r\n\r\n    if(this.isAvailable && Notification.permission === 'denied') {\r\n      this.log.warn('The user has blocked notifications.');\r\n    }\r\n  }\r\n\r\n  public start() {\r\n    if(!this.started) {\r\n      this.started = true;\r\n      this.getSubscription();\r\n      this.setUpServiceWorkerChannel();\r\n    }\r\n  }\r\n\r\n  public setLocalNotificationsDisabled() {\r\n    this.localNotificationsAvailable = false;\r\n  }\r\n\r\n  public getSubscription() {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    navigator.serviceWorker.ready.then((reg) => {\r\n      reg.pushManager.getSubscription().then((subscription) => {\r\n        this.isPushEnabled = !!subscription;\r\n        this.pushSubscriptionNotify('init', subscription);\r\n      }).catch((err) => {\r\n        this.log.error('Error during getSubscription()', err);\r\n      });\r\n    });\r\n  }\r\n\r\n  public subscribe = () => {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    navigator.serviceWorker.ready.then((reg) => {\r\n      reg.pushManager.subscribe({userVisibleOnly: this.userVisibleOnly}).then((subscription) => {\r\n        // The subscription was successful\r\n        this.isPushEnabled = true;\r\n        this.pushSubscriptionNotify('subscribe', subscription);\r\n      }).catch((e) => {\r\n        if(Notification.permission === 'denied') {\r\n          this.log('Permission for Notifications was denied');\r\n        } else {\r\n          this.log('Unable to subscribe to push.', e);\r\n          if(!this.userVisibleOnly) {\r\n            this.userVisibleOnly = true;\r\n            setTimeout(this.subscribe, 0);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public unsubscribe() {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n    \r\n    navigator.serviceWorker.ready.then((reg) => {\r\n      reg.pushManager.getSubscription().then((subscription) => {\r\n        this.isPushEnabled = false;\r\n\r\n        if(subscription) {\r\n          this.pushSubscriptionNotify('unsubscribe', subscription);\r\n\r\n          setTimeout(() => {\r\n            subscription.unsubscribe().then((successful) => {\r\n              this.isPushEnabled = false;\r\n            }).catch((e) => {\r\n              this.log.error('Unsubscription error: ', e);\r\n            });\r\n          }, 3000);\r\n        }\r\n      }).catch((e) => {\r\n        this.log.error('Error thrown while unsubscribing from ' +\r\n          'push messaging.', e);\r\n      });\r\n    });\r\n  }\r\n\r\n  public forceUnsubscribe() {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    navigator.serviceWorker.ready.then((reg) => {\r\n      reg.pushManager.getSubscription().then((subscription) => {\r\n        this.log.warn('force unsubscribe', subscription);\r\n        if(subscription) {\r\n          subscription.unsubscribe().then((successful) => {\r\n            this.log.warn('force unsubscribe successful', successful);\r\n            this.isPushEnabled = false;\r\n          }).catch((e) => {\r\n            this.log.error('Unsubscription error: ', e);\r\n          });\r\n        }\r\n      }).catch((e) => {\r\n        this.log.error('Error thrown while unsubscribing from ' +\r\n          'push messaging.', e);\r\n      });\r\n    });\r\n  }\r\n\r\n  public isAliveNotify = () => {\r\n    if(!this.isAvailable || rootScope.idle && rootScope.idle.deactivated) {\r\n      return;\r\n    }\r\n\r\n    this.settings.baseUrl = (location.href || '').replace(/#.*$/, '') + '#/im';\r\n\r\n    const lang: ServiceWorkerPingTask['payload']['lang'] = {} as any;\r\n    const ACTIONS_LANG_MAP: Record<keyof ServiceWorkerPingTask['payload']['lang'], LangPackKey> = {\r\n      push_action_mute1d: isMobile ? 'PushNotification.Action.Mute1d.Mobile' : 'PushNotification.Action.Mute1d',\r\n      push_action_settings: isMobile ? 'PushNotification.Action.Settings.Mobile' : 'PushNotification.Action.Settings',\r\n      push_message_nopreview: 'PushNotification.Message.NoPreview'\r\n    };\r\n\r\n    for(const action in ACTIONS_LANG_MAP) {\r\n      lang[action as keyof typeof ACTIONS_LANG_MAP] = I18n.format(ACTIONS_LANG_MAP[action as keyof typeof ACTIONS_LANG_MAP], true);\r\n    }\r\n\r\n    const task: ServiceWorkerPingTask = {\r\n      type: 'ping',\r\n      payload: {\r\n        localNotifications: this.localNotificationsAvailable,\r\n        lang: lang,\r\n        settings: this.settings\r\n      }\r\n    };\r\n\r\n    apiManager.postSWMessage(task);\r\n\r\n    this.isAliveTO = setTimeout(this.isAliveNotify, 10000);\r\n  }\r\n\r\n  public setSettings(newSettings: WebPushApiManager['settings']) {\r\n    this.settings = copy(newSettings);\r\n    clearTimeout(this.isAliveTO);\r\n    this.isAliveNotify();\r\n  }\r\n\r\n  public hidePushNotifications() {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    const task: ServiceWorkerNotificationsClearTask = {type: 'notifications_clear'};\r\n    apiManager.postSWMessage(task);\r\n  }\r\n\r\n  public setUpServiceWorkerChannel() {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    apiManager.addServiceWorkerTaskListener('push_click', (task: ServiceWorkerPushClickTask) => {\r\n      if(rootScope.idle && rootScope.idle.deactivated) {\r\n        appRuntimeManager.reload();\r\n        return;\r\n      }\r\n\r\n      rootScope.dispatchEvent('push_notification_click', task.payload);\r\n    });\r\n\r\n    navigator.serviceWorker.ready.then(this.isAliveNotify);\r\n  }\r\n\r\n  public pushSubscriptionNotify(event: PushSubscriptionNotifyType, subscription?: PushSubscription) {\r\n    if(subscription) {\r\n      const subscriptionObj: PushSubscriptionJSON = subscription.toJSON();\r\n      if(!subscriptionObj ||\r\n        !subscriptionObj.endpoint ||\r\n        !subscriptionObj.keys ||\r\n        !subscriptionObj.keys.p256dh ||\r\n        !subscriptionObj.keys.auth) {\r\n        this.log.warn('Invalid push subscription', subscriptionObj);\r\n        this.unsubscribe();\r\n        this.isAvailable = false;\r\n        this.pushSubscriptionNotify(event);\r\n        return;\r\n      }\r\n      \r\n      this.log.warn('Push', event, subscriptionObj);\r\n      rootScope.dispatchEvent(('push_' + event) as PushSubscriptionNotifyEvent, {\r\n        tokenType: 10,\r\n        tokenValue: JSON.stringify(subscriptionObj)\r\n      });\r\n    } else {\r\n      this.log.warn('Push', event, false);\r\n      rootScope.dispatchEvent(('push_' + event) as PushSubscriptionNotifyEvent, false as any);\r\n    }\r\n  }\r\n}\r\n\r\nconst webPushApiManager = new WebPushApiManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.webPushApiManager = webPushApiManager);\r\nexport default webPushApiManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport App from \"../../config/app\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport Modes from \"../../config/modes\";\r\nimport { tsNow } from \"../../helpers/date\";\r\nimport sessionStorage from '../sessionStorage';\r\n\r\nexport class TelegramMeWebManager {\r\n  private disabled = /* false &&  */(Modes.test || App.domains.indexOf(location.hostname) === -1);\r\n\r\n  public setAuthorized(canRedirect: boolean) {\r\n    if(this.disabled) {\r\n      return;\r\n    }\r\n\r\n    return sessionStorage.get('tgme_sync').then((curValue) => {\r\n      const ts = tsNow(true);\r\n      if(canRedirect &&\r\n        curValue &&\r\n        curValue.canRedirect === canRedirect &&\r\n        (curValue.ts + 86400) > ts) {\r\n        return;\r\n      }\r\n\r\n      sessionStorage.set({\r\n        tgme_sync: {\r\n          canRedirect, \r\n          ts\r\n        }\r\n      });\r\n\r\n      const urls = [\r\n        '//telegram.me/_websync_?authed=' + (canRedirect ? '1' : '0'),\r\n        '//t.me/_websync_?authed=' + (canRedirect ? '1' : '0')\r\n      ];\r\n\r\n      const promises = urls.map(url => {\r\n        const script = document.createElement('script');\r\n        const promise = new Promise<void>((resolve) => {\r\n          script.onload = script.onerror = () => {\r\n            script.remove();\r\n            resolve();\r\n          };\r\n        });\r\n        script.src = url;\r\n        document.body.appendChild(script);\r\n        return promise;\r\n      });\r\n\r\n      return Promise.all(promises);\r\n    });\r\n  }\r\n}\r\n\r\nconst telegramMeWebManager = new TelegramMeWebManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.telegramMeWebManager = telegramMeWebManager);\r\nexport default telegramMeWebManager;\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"mtproto.worker.f5de751b6389ce38e0de.bundle.worker.js\");\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { logger, LogTypes } from '../../logger';\r\nimport Modes from '../../../config/modes';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport { MTConnection } from './transport';\r\n\r\nexport default class Socket extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private ws: WebSocket;\r\n  private log: ReturnType<typeof logger>;\r\n  private debug = Modes.debug && false;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n    this.connect();\r\n\r\n    return this;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.ws.removeEventListener('open', this.handleOpen);\r\n    this.ws.removeEventListener('close', this.handleClose);\r\n    this.ws.removeEventListener('error', this.handleError);\r\n    this.ws.removeEventListener('message', this.handleMessage);\r\n    this.ws = undefined;\r\n  }\r\n  \r\n  private connect() {\r\n    this.ws = new WebSocket(this.url, 'binary');\r\n    this.ws.binaryType = 'arraybuffer';\r\n    this.ws.addEventListener('open', this.handleOpen);\r\n    this.ws.addEventListener('close', this.handleClose);\r\n    this.ws.addEventListener('error', this.handleError);\r\n    this.ws.addEventListener('message', this.handleMessage);\r\n  }\r\n\r\n  public close() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.log('close execution');\r\n\r\n    try {\r\n      this.ws.close();\r\n    } catch(err) {\r\n\r\n    }\r\n    this.handleClose();\r\n  }\r\n  \r\n  private handleOpen = () => {\r\n    this.log('opened');\r\n\r\n    this.debug && this.log.debug('sending init packet');\r\n    this.dispatchEvent('open');\r\n  };\r\n\r\n  private handleError = (e: Event) => {\r\n    this.log.error('handleError', e);\r\n    this.close();\r\n  };\r\n\r\n  private handleClose = () => {\r\n    this.log('closed'/* , event, this.pending, this.ws.bufferedAmount */);\r\n\r\n    this.removeListeners();\r\n    this.dispatchEvent('close');\r\n  };\r\n\r\n  private handleMessage = (event: MessageEvent) => {\r\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\r\n\r\n    this.dispatchEvent('message', event.data as ArrayBuffer);\r\n  };\r\n\r\n  public send = (body: Uint8Array) => {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    this.ws.send(body);\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { LocalStorageProxyTask, LocalStorageProxyTaskResponse } from '../localStorage';\r\n//import type { LocalStorageProxyDeleteTask, LocalStorageProxySetTask } from '../storage';\r\nimport type { Awaited, InvokeApiOptions, WorkerTaskVoidTemplate } from '../../types';\r\nimport type { Config, InputFile, MethodDeclMap } from '../../layer';\r\nimport MTProtoWorker from 'worker-loader!./mtproto.worker';\r\n//import './mtproto.worker';\r\nimport { isObject } from '../../helpers/object';\r\nimport CryptoWorkerMethods from '../crypto/crypto_methods';\r\nimport { logger } from '../logger';\r\nimport rootScope from '../rootScope';\r\nimport webpWorkerController from '../webp/webpWorkerController';\r\nimport { ApiFileManager, DownloadOptions } from './apiFileManager';\r\nimport type { RequestFilePartTask, RequestFilePartTaskResponse, ServiceWorkerTask } from '../serviceWorker/index.service';\r\nimport { UserAuth } from './mtproto_config';\r\nimport type { MTMessage } from './networker';\r\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport Socket from './transports/websocket';\r\nimport singleInstance from './singleInstance';\r\nimport sessionStorage from '../sessionStorage';\r\nimport webPushApiManager from './webPushApiManager';\r\nimport AppStorage from '../storage';\r\nimport appRuntimeManager from '../appManagers/appRuntimeManager';\r\nimport { SocketProxyTask } from './transports/socketProxied';\r\nimport telegramMeWebManager from './telegramMeWebManager';\r\nimport { pause } from '../../helpers/schedulers';\r\nimport { CacheStorageDbName } from '../cacheStorage';\r\n\r\ntype Task = {\r\n  taskId: number,\r\n  task: string,\r\n  args: any[]\r\n};\r\n\r\ntype HashResult = {\r\n  hash: number,\r\n  result: any\r\n};\r\n\r\ntype HashOptions = {\r\n  [queryJSON: string]: HashResult\r\n};\r\n\r\nexport interface ToggleStorageTask extends WorkerTaskVoidTemplate {\r\n  type: 'toggleStorage',\r\n  payload: boolean\r\n};\r\n\r\nexport class ApiManagerProxy extends CryptoWorkerMethods {\r\n  public worker: /* Window */Worker;\r\n  private afterMessageIdTemp = 0;\r\n\r\n  private taskId = 0;\r\n  private awaiting: {\r\n    [id: number]: {\r\n      resolve: any,\r\n      reject: any,\r\n      taskName: string\r\n    }\r\n  } = {} as any;\r\n  private pending: Array<Task> = [];\r\n\r\n  public updatesProcessor: (obj: any) => void = null;\r\n\r\n  private log = logger('API-PROXY');\r\n\r\n  private hashes: {[method: string]: HashOptions} = {};\r\n\r\n  private apiPromisesSingle: {\r\n    [q: string]: Promise<any>\r\n  } = {};\r\n  private apiPromisesCacheable: {\r\n    [method: string]: {\r\n      [queryJSON: string]: {\r\n        timestamp: number,\r\n        promise: Promise<any>,\r\n        fulfilled: boolean,\r\n        timeout?: number,\r\n        params: any\r\n      }\r\n    }\r\n  } = {};\r\n\r\n  private isSWRegistered = true;\r\n\r\n  private debug = DEBUG /* && false */;\r\n\r\n  private sockets: Map<number, Socket> = new Map();\r\n\r\n  private taskListeners: {[taskType: string]: (task: any) => void} = {};\r\n  private taskListenersSW: {[taskType: string]: (task: any) => void} = {};\r\n\r\n  public onServiceWorkerFail: () => void;\r\n\r\n  private postMessagesWaiting: any[][] = [];\r\n\r\n  private getConfigPromise: Promise<Config.config>;\r\n\r\n  constructor() {\r\n    super();\r\n    this.log('constructor');\r\n\r\n    singleInstance.start();\r\n\r\n    this.registerServiceWorker();\r\n\r\n    this.addTaskListener('clear', () => {\r\n      const toClear: CacheStorageDbName[] = ['cachedFiles', 'cachedStreamChunks'];\r\n      Promise.all([\r\n        AppStorage.toggleStorage(false), \r\n        sessionStorage.clear(),\r\n        Promise.race([\r\n          telegramMeWebManager.setAuthorized(false),\r\n          pause(3000)\r\n        ]),\r\n        webPushApiManager.forceUnsubscribe(),\r\n        Promise.all(toClear.map(cacheName => caches.delete(cacheName)))\r\n      ]).finally(() => {\r\n        appRuntimeManager.reload();\r\n      });\r\n    });\r\n\r\n    this.addTaskListener('connectionStatusChange', (task: any) => {\r\n      rootScope.dispatchEvent('connection_status_change', task.payload);\r\n    });\r\n\r\n    this.addTaskListener('convertWebp', (task) => {\r\n      webpWorkerController.postMessage(task);\r\n    });\r\n\r\n    this.addTaskListener('socketProxy', (task: SocketProxyTask) => {\r\n      const socketTask = task.payload;\r\n      const id = socketTask.id;\r\n      //console.log('socketProxy', socketTask, id);\r\n\r\n      if(socketTask.type === 'send') {\r\n        const socket = this.sockets.get(id);\r\n        socket.send(socketTask.payload);\r\n      } else if(socketTask.type === 'close') { // will remove from map in onClose\r\n        const socket = this.sockets.get(id);\r\n        socket.close();\r\n      } else if(socketTask.type === 'setup') {\r\n        const socket = new Socket(socketTask.payload.dcId, socketTask.payload.url, socketTask.payload.logSuffix);\r\n        \r\n        const onOpen = () => {\r\n          //console.log('socketProxy onOpen');\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'open',\r\n              id\r\n            }\r\n          });\r\n        };\r\n        const onClose = () => {\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'close',\r\n              id\r\n            }\r\n          });\r\n\r\n          socket.removeEventListener('open', onOpen);\r\n          socket.removeEventListener('close', onClose);\r\n          socket.removeEventListener('message', onMessage);\r\n          this.sockets.delete(id);\r\n        };\r\n        const onMessage = (buffer: ArrayBuffer) => {\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'message',\r\n              id,\r\n              payload: buffer\r\n            }\r\n          });\r\n        };\r\n\r\n        socket.addEventListener('open', onOpen);\r\n        socket.addEventListener('close', onClose);\r\n        socket.addEventListener('message', onMessage);\r\n        this.sockets.set(id, socket);\r\n      }\r\n    });\r\n\r\n    this.addTaskListener('localStorageProxy', (task: LocalStorageProxyTask) => {\r\n      const storageTask = task.payload;\r\n      // @ts-ignore\r\n      sessionStorage[storageTask.type](...storageTask.args).then(res => {\r\n        this.postMessage({\r\n          type: 'localStorageProxy',\r\n          id: task.id,\r\n          payload: res\r\n        } as LocalStorageProxyTaskResponse);\r\n      });\r\n    });\r\n\r\n    rootScope.addEventListener('language_change', (language) => {\r\n      this.performTaskWorkerVoid('setLanguage', language);\r\n    });\r\n\r\n    window.addEventListener('online', (event) => {\r\n      this.forceReconnectTimeout();\r\n    });\r\n\r\n                       \r\n    this.registerWorker();\r\n              \r\n\r\n    setTimeout(() => {\r\n      this.getConfig();\r\n    }, 5000);\r\n  }\r\n\r\n  public isServiceWorkerOnline() {\r\n    return this.isSWRegistered;\r\n  }\r\n\r\n  private registerServiceWorker() {\r\n    if(!('serviceWorker' in navigator)) return;\r\n    \r\n    const worker = navigator.serviceWorker;\r\n    worker.register('./sw.js', {scope: './'}).then(registration => {\r\n      this.log('SW registered', registration);\r\n      this.isSWRegistered = true;\r\n\r\n      const sw = registration.installing || registration.waiting || registration.active;\r\n      sw.addEventListener('statechange', (e) => {\r\n        this.log('SW statechange', e);\r\n      });\r\n\r\n      //this.postSWMessage = worker.controller.postMessage.bind(worker.controller);\r\n\r\n                        \r\n                                                                                                                     \r\n                                            \r\n                \r\n    }, (err) => {\r\n      this.isSWRegistered = false;\r\n      this.log.error('SW registration failed!', err);\r\n\r\n      if(this.onServiceWorkerFail) {\r\n        this.onServiceWorkerFail();\r\n      }\r\n    });\r\n\r\n    worker.addEventListener('controllerchange', () => {\r\n      this.log.warn('controllerchange');\r\n      this.releasePending();\r\n\r\n      worker.controller.addEventListener('error', (e) => {\r\n        this.log.error('controller error:', e);\r\n      });\r\n    });\r\n\r\n                      \r\n                                                             \r\n             \r\n    worker.addEventListener('message', (e) => {\r\n      const task: ServiceWorkerTask = e.data;\r\n      if(!isObject(task)) {\r\n        return;\r\n      }\r\n\r\n      const callback = this.taskListenersSW[task.type];\r\n      if(callback) {\r\n        callback(task);\r\n      }\r\n    });\r\n\r\n    this.addServiceWorkerTaskListener('requestFilePart', (task: RequestFilePartTask) => {\r\n      const responseTask: RequestFilePartTaskResponse = {\r\n        type: task.type,\r\n        id: task.id\r\n      };\r\n      \r\n      this.performTaskWorker<Awaited<ReturnType<ApiFileManager['requestFilePart']>>>('requestFilePart', ...task.payload)\r\n      .then((uploadFile) => {\r\n        responseTask.payload = uploadFile;\r\n        this.postSWMessage(responseTask);\r\n      }, (err) => {\r\n        responseTask.originalPayload = task.payload;\r\n        responseTask.error = err;\r\n        this.postSWMessage(responseTask);\r\n      });\r\n    });\r\n\r\n              \r\n\r\n    worker.addEventListener('messageerror', (e) => {\r\n      this.log.error('SW messageerror:', e);\r\n    });\r\n  }\r\n\r\n  public postMessage(...args: any[]) {\r\n    this.postMessagesWaiting.push(args);\r\n  }\r\n\r\n  public postSWMessage(message: any) {\r\n    if(navigator.serviceWorker.controller) {\r\n      navigator.serviceWorker.controller.postMessage(message);\r\n    }\r\n  }\r\n\r\n  private onWorkerFirstMessage(worker: any) {\r\n    if(!this.worker) {\r\n      this.worker = worker;\r\n      this.log('set webWorker');\r\n\r\n      this.postMessage = this.worker.postMessage.bind(this.worker);\r\n\r\n      this.postMessagesWaiting.forEach(args => this.postMessage(...args));\r\n      this.postMessagesWaiting.length = 0;\r\n\r\n      const isWebpSupported = webpWorkerController.isWebpSupported();\r\n      this.log('WebP supported:', isWebpSupported);\r\n      this.postMessage({type: 'webpSupport', payload: isWebpSupported});\r\n      this.postMessage({type: 'userAgent', payload: navigator.userAgent});\r\n\r\n      this.releasePending();\r\n    }\r\n  }\r\n\r\n  public addTaskListener(name: keyof ApiManagerProxy['taskListeners'], callback: ApiManagerProxy['taskListeners'][typeof name]) {\r\n    this.taskListeners[name] = callback;\r\n  }\r\n\r\n  public addServiceWorkerTaskListener(name: keyof ApiManagerProxy['taskListenersSW'], callback: ApiManagerProxy['taskListenersSW'][typeof name]) {\r\n    this.taskListenersSW[name] = callback;\r\n  }\r\n\r\n  private onWorkerMessage = (e: MessageEvent) => {\r\n    //this.log('got message from worker:', e.data);\r\n\r\n    const task = e.data;\r\n\r\n    if(!isObject(task)) {\r\n      return;\r\n    }\r\n\r\n    const callback = this.taskListeners[task.type];\r\n    if(callback) {\r\n      callback(task);\r\n      return;\r\n    }\r\n\r\n    if(task.update) {\r\n      if(this.updatesProcessor) {\r\n        this.updatesProcessor(task.update);\r\n      }\r\n    } else if(task.progress) {\r\n      rootScope.dispatchEvent('download_progress', task.progress);\r\n    } else if(task.hasOwnProperty('result') || task.hasOwnProperty('error')) {\r\n      this.finalizeTask(task.taskId, task.result, task.error);\r\n    }\r\n  };\r\n\r\n                     \r\n  private registerWorker() {\r\n    //return;\r\n\r\n    const worker = new MTProtoWorker();\r\n    //const worker = window;\r\n    worker.addEventListener('message', this.onWorkerFirstMessage.bind(this, worker), {once: true});\r\n    worker.addEventListener('message', this.onWorkerMessage);\r\n\r\n    worker.addEventListener('error', (err) => {\r\n      this.log.error('WORKER ERROR', err);\r\n    });\r\n  }\r\n            \r\n\r\n  private finalizeTask(taskId: number, result: any, error: any) {\r\n    const deferred = this.awaiting[taskId];\r\n    if(deferred !== undefined) {\r\n      this.debug && this.log.debug('done', deferred.taskName, result, error);\r\n      error ? deferred.reject(error) : deferred.resolve(result);\r\n      delete this.awaiting[taskId];\r\n    }\r\n  }\r\n\r\n  public performTaskWorkerVoid(task: string, ...args: any[]) {\r\n    const params = {\r\n      task,\r\n      taskId: this.taskId,\r\n      args\r\n    };\r\n\r\n    this.pending.push(params);\r\n    this.releasePending();\r\n\r\n    this.taskId++;\r\n  }\r\n\r\n  public performTaskWorker<T>(task: string, ...args: any[]) {\r\n    this.debug && this.log.debug('start', task, args);\r\n\r\n    return new Promise<T>((resolve, reject) => {\r\n      this.awaiting[this.taskId] = {resolve, reject, taskName: task};\r\n      this.performTaskWorkerVoid(task, ...args);\r\n    });\r\n  }\r\n\r\n  private releasePending() {\r\n    //return;\r\n\r\n    if(this.postMessage) {\r\n      this.debug && this.log.debug('releasing tasks, length:', this.pending.length);\r\n      this.pending.forEach(pending => {\r\n        this.postMessage(pending);\r\n      });\r\n      \r\n      this.debug && this.log.debug('released tasks');\r\n      this.pending.length = 0;\r\n    }\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    //console.log('will invokeApi:', method, params, options);\r\n    return this.performTaskWorker('invokeApi', method, params, options);\r\n  }\r\n\r\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    let o = options;\r\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\r\n    \r\n    o = {...options};\r\n    (options as MTMessage).messageId = o.prepareTempMessageId;\r\n\r\n    //console.log('will invokeApi:', method, params, options);\r\n    return this.invokeApi(method, params, o);\r\n  }\r\n\r\n  public invokeApiHashable<T extends keyof MethodDeclMap>(method: T, params: Omit<MethodDeclMap[T]['req'], 'hash'> = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    //console.log('will invokeApi:', method, params, options);\r\n\r\n    const queryJSON = JSON.stringify(params);\r\n    let cached: HashResult;\r\n    if(this.hashes[method]) {\r\n      cached = this.hashes[method][queryJSON];\r\n      if(cached) {\r\n        (params as any).hash = cached.hash;\r\n      }\r\n    }\r\n\r\n    return this.invokeApi(method, params, options).then((result: any) => {\r\n      if(result._.includes('NotModified')) {\r\n        this.debug && this.log.warn('NotModified saved!', method, queryJSON);\r\n        return cached.result;\r\n      }\r\n      \r\n      if(result.hash/*  || result.messages */) {\r\n        const hash = result.hash/*  || this.computeHash(result.messages) */;\r\n        \r\n        if(!this.hashes[method]) this.hashes[method] = {};\r\n        this.hashes[method][queryJSON] = {\r\n          hash,\r\n          result\r\n        };\r\n      }\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    const q = method + '-' + JSON.stringify(params);\r\n    if(this.apiPromisesSingle[q]) {\r\n      return this.apiPromisesSingle[q];\r\n    }\r\n\r\n    return this.apiPromisesSingle[q] = this.invokeApi(method, params, options).finally(() => {\r\n      delete this.apiPromisesSingle[q];\r\n    });\r\n  }\r\n\r\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\r\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\r\n    const queryJSON = JSON.stringify(params);\r\n    const item = cache[queryJSON];\r\n    if(item && (!options.override || !item.fulfilled)) {\r\n      return item.promise;\r\n    }\r\n\r\n    if(options.override) {\r\n      if(item && item.timeout) {\r\n        clearTimeout(item.timeout);\r\n        delete item.timeout;\r\n      }\r\n\r\n      delete options.override;\r\n    }\r\n\r\n    let timeout: number;\r\n    if(options.cacheSeconds) {\r\n      timeout = window.setTimeout(() => {\r\n        delete cache[queryJSON];\r\n      }, options.cacheSeconds * 1000);\r\n      delete options.cacheSeconds;\r\n    }\r\n\r\n    const promise = this.invokeApi(method, params, options);\r\n\r\n    cache[queryJSON] = {\r\n      timestamp: Date.now(),\r\n      fulfilled: false,\r\n      timeout,\r\n      promise,\r\n      params\r\n    };\r\n\r\n    return promise;\r\n  }\r\n\r\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\r\n    const cache = this.apiPromisesCacheable[method];\r\n    if(cache) {\r\n      for(const queryJSON in cache) {\r\n        const item = cache[queryJSON];\r\n        if(verify(item.params)) {\r\n          if(item.timeout) {\r\n            clearTimeout(item.timeout);\r\n          }\r\n\r\n          delete cache[queryJSON];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /* private computeHash(smth: any[]) {\r\n    smth = smth.slice().sort((a, b) => a.id - b.id);\r\n    //return smth.reduce((hash, v) => (((hash * 0x4F25) & 0x7FFFFFFF) + v.id) & 0x7FFFFFFF, 0);\r\n    return smth.reduce((hash, v) => ((hash * 20261) + 0x80000000 + v.id) % 0x80000000, 0);\r\n  } */\r\n\r\n  public setBaseDcId(dcId: number) {\r\n    return this.performTaskWorker('setBaseDcId', dcId);\r\n  }\r\n\r\n  public setQueueId(queueId: number) {\r\n    return this.performTaskWorker('setQueueId', queueId);\r\n  }\r\n\r\n  public setUserAuth(userAuth: UserAuth | number) {\r\n    if(typeof(userAuth) === 'number') {\r\n      userAuth = {dcID: 0, date: Date.now() / 1000 | 0, id: userAuth};\r\n    }\r\n    \r\n    rootScope.dispatchEvent('user_auth', userAuth);\r\n    return this.performTaskWorker('setUserAuth', userAuth);\r\n  }\r\n\r\n  public getNetworker(dc_id: number, options?: InvokeApiOptions) {\r\n    return this.performTaskWorker('getNetworker', dc_id, options);\r\n  }\r\n\r\n  public logOut(): Promise<void> {\r\n    // AppStorage.toggleStorage(false);\r\n    return this.performTaskWorker('logOut');\r\n  }\r\n\r\n  public cancelDownload(fileName: string) {\r\n    return this.performTaskWorker('cancelDownload', fileName);\r\n  }\r\n\r\n  public downloadFile(options: DownloadOptions) {\r\n    return this.performTaskWorker<Blob>('downloadFile', options);\r\n  }\r\n\r\n  public uploadFile(options: {file: Blob | File, fileName: string}) {\r\n    return this.performTaskWorker<InputFile>('uploadFile', options);\r\n  }\r\n\r\n  public toggleStorage(enabled: boolean) {\r\n    const task: ToggleStorageTask = {type: 'toggleStorage', payload: enabled};\r\n    this.postMessage(task);\r\n    this.postSWMessage(task);\r\n  }\r\n\r\n  public stopAll() {\r\n    return this.performTaskWorkerVoid('stopAll');\r\n  }\r\n\r\n  public startAll() {\r\n    return this.performTaskWorkerVoid('startAll');\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    this.postMessage({type: 'online'});\r\n  }\r\n\r\n  public forceReconnect() {\r\n    this.postMessage({type: 'forceReconnect'});\r\n  }\r\n\r\n  public getConfig() {\r\n    if(this.getConfigPromise) return this.getConfigPromise;\r\n    return this.getConfigPromise = this.invokeApi('help.getConfig').then(config => {\r\n      rootScope.config = config;\r\n      return config;\r\n    });\r\n  }\r\n}\r\n\r\nconst apiManagerProxy = new ApiManagerProxy();\r\nMOUNT_CLASS_TO.apiManagerProxy = apiManagerProxy;\r\nexport default apiManagerProxy;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { Awaited } from \"../../types\";\r\nimport type { aesEncryptSync, aesDecryptSync, sha256HashSync, sha1HashSync, bytesModPow, hash_pbkdf2, rsaEncrypt, pqPrimeFactorization, gzipUncompress } from \"./crypto_utils\";\r\nimport type { computeSRP } from \"./srp\";\r\n\r\nexport type CryptoMethods = {\r\n  'sha1-hash': typeof sha1HashSync,\r\n  'sha256-hash': typeof sha256HashSync,\r\n  'pbkdf2': typeof hash_pbkdf2,\r\n  'aes-encrypt': typeof aesEncryptSync,\r\n  'aes-decrypt': typeof aesDecryptSync,\r\n  'rsa-encrypt': typeof rsaEncrypt,\r\n  'factorize': typeof pqPrimeFactorization,\r\n  'mod-pow': typeof bytesModPow,\r\n  'gzipUncompress': typeof gzipUncompress,\r\n  'computeSRP': typeof computeSRP\r\n};\r\n\r\nexport default abstract class CryptoWorkerMethods {\r\n  abstract performTaskWorker<T>(task: string, ...args: any[]): Promise<T>;\r\n\r\n  public invokeCrypto<Method extends keyof CryptoMethods>(method: Method, ...args: Parameters<CryptoMethods[typeof method]>): Promise<Awaited<ReturnType<CryptoMethods[typeof method]>>> {\r\n    return this.performTaskWorker<Awaited<ReturnType<CryptoMethods[typeof method]>>>(method, ...args as any[]);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport I18n from \"../lib/langPack\";\r\n\r\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nexport const ONE_DAY = 86400;\r\n\r\n// https://stackoverflow.com/a/6117889\r\nexport const getWeekNumber = (date: Date) => {\r\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n  const dayNum = d.getUTCDay() || 7;\r\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\r\n};\r\n\r\nexport const formatDateAccordingToToday = (time: Date) => {\r\n  const date = new Date();\r\n  const now = date.getTime() / 1000 | 0;\r\n  const timestamp = time.getTime() / 1000 | 0;\r\n\r\n  let timeStr: string;\r\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\r\n    timeStr = ('0' + time.getHours()).slice(-2) + ':' + ('0' + time.getMinutes()).slice(-2);\r\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\r\n    timeStr = time.getDate() + '.' + ('0' + (time.getMonth() + 1)).slice(-2) + '.' + ('' + time.getFullYear()).slice(-2);\r\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(date) === getWeekNumber(time)) { // current week\r\n    timeStr = days[time.getDay()].slice(0, 3);\r\n  } else { // same year\r\n    timeStr = months[time.getMonth()].slice(0, 3) + ' ' + ('0' + time.getDate()).slice(-2);\r\n  }\r\n\r\n  return timeStr;\r\n};\r\n\r\nexport function formatDateAccordingToTodayNew(time: Date) {\r\n  const today = new Date();\r\n  const now = today.getTime() / 1000 | 0;\r\n  const timestamp = time.getTime() / 1000 | 0;\r\n\r\n  const options: Intl.DateTimeFormatOptions = {};\r\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\r\n    options.hour = options.minute = '2-digit';\r\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\r\n    options.year = options.day = 'numeric';\r\n    options.month = '2-digit';\r\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\r\n    options.weekday = 'short';\r\n  } else { // same year\r\n    options.month = 'short';\r\n    options.day = 'numeric';\r\n  }\r\n\r\n  return new I18n.IntlDateElement({\r\n    date: time,\r\n    options\r\n  }).element;\r\n}\r\n\r\nexport function formatTime(date: Date) {\r\n  return new I18n.IntlDateElement({\r\n    date,\r\n    options: {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }\r\n  }).element;\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\r\n\r\nexport const getFullDate = (date: Date, options: Partial<{\r\n  noTime: true, \r\n  noSeconds: true,\r\n  monthAsNumber: true,\r\n  leadingZero: true\r\n}> = {}) => {\r\n  const joiner = options.monthAsNumber ? '.' : ' ';\r\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\r\n\r\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) + \r\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) + \r\n    joiner + date.getFullYear() + \r\n    (options.noTime ? '' : ', ' + time);\r\n};\r\n\r\nexport function tsNow(seconds?: true) {\r\n  const t = Date.now();\r\n  return seconds ? t / 1000 | 0 : t;\r\n}\r\n\r\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\r\nconst minYear = 2013;\r\nconst yearPattern = new RegExp(\"20[0-9]{1,2}\");\r\nconst monthYearOrDayPattern = new RegExp(\"(\\\\w{3,}) ([0-9]{0,4})\", 'i');\r\nconst yearOrDayAndMonthPattern = new RegExp(\"([0-9]{0,4}) (\\\\w{2,})\", 'i');\r\nconst shortDate = new RegExp(\"^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\r\nconst longDate = new RegExp(\"^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\r\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nexport type DateData = {\r\n  title: string,\r\n  minDate: number,\r\n  maxDate: number,\r\n};\r\nexport function fillTipDates(query: string, dates: DateData[]) {\r\n  const q = query.trim().toLowerCase();\r\n\r\n  if(q.length < 3) {\r\n    return;\r\n  }\r\n\r\n  if(\"today\".indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: 'Today',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  if(\"yesterday\".indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime() - 86400000;\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 86400001;\r\n    dates.push({\r\n      title: 'Yesterday',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  const dayOfWeek = getDayOfWeek(q);\r\n  if(dayOfWeek >= 0) {\r\n    const date = new Date();\r\n    const now = date.getTime();\r\n    const currentDay = date.getDay();\r\n    const distance = dayOfWeek - currentDay;\r\n    date.setDate(date.getDate() + distance);\r\n    if(date.getTime() > now) {\r\n      date.setTime(date.getTime() - 604800000);\r\n    }\r\n    const year = date.getFullYear()\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: formatWeekLong(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  let matches: any[];\r\n  if((matches = shortDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const k = parseInt(g1);\r\n    const k1 = parseInt(g2);\r\n    if(k > 0 && k <= 31) {\r\n      if(k1 >= minYear && k <= 12) {\r\n        const selectedYear = k1;\r\n        const month = k - 1;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      } else if (k1 <= 12) {\r\n        const day = k - 1;\r\n        const month = k1 - 1;\r\n        createForDayMonth(dates, day, month);\r\n      }\r\n    } else if (k >= minYear && k1 <= 12) {\r\n      const selectedYear = k;\r\n      const month = k1 - 1;\r\n      createForMonthYear(dates, month, selectedYear);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = longDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const g3 = matches[5];\r\n    if(!matches[2] === matches[4]) {\r\n      return;\r\n    }\r\n\r\n    const day = parseInt(g1);\r\n    const month = parseInt(g2) - 1;\r\n    let year = parseInt(g3);\r\n    if(year >= 10 && year <= 99) {\r\n      year += 2000;\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(year, month, day);\r\n      date.setHours(0, 0, 0);\r\n      \r\n      const minDate = date.getTime();\r\n      date.setFullYear(year, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: formatterYearMax(minDate),\r\n        minDate,\r\n        maxDate\r\n      });\r\n      return;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = yearPattern.exec(q)) !== null) {\r\n    let selectedYear = +q;\r\n    const currentYear = new Date().getFullYear();\r\n    if(selectedYear < minYear) {\r\n      selectedYear = minYear;\r\n      for(let i = currentYear; i >= selectedYear; i--) {\r\n        const date = new Date();\r\n        date.setFullYear(i, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const minDate = date.getTime();\r\n        date.setFullYear(i + 1, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const maxDate = date.getTime() - 1;\r\n        dates.push({\r\n          title: '' + i,\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    } else if(selectedYear <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(selectedYear, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      date.setFullYear(selectedYear + 1, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: '' + selectedYear,\r\n        minDate,\r\n        maxDate\r\n      });\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g1);\r\n    if(month >= 0) {\r\n      const k = +g2;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if(k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g2);\r\n    if(month >= 0) {\r\n      const k = +g1;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if (k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\r\n  const currentYear = new Date().getFullYear();\r\n  const today = Date.now();\r\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\r\n    const date = new Date();\r\n    date.setFullYear(selectedYear, month, 1);\r\n    date.setHours(0, 0, 0);\r\n    const minDate = date.getTime();\r\n    if(minDate > today) {\r\n      return;\r\n    }\r\n    date.setMonth(date.getMonth() + 1);\r\n    const maxDate = date.getTime() - 1;\r\n\r\n    dates.push({\r\n      title: formatterMonthYear(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n  }\r\n}\r\n\r\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\r\n  if(validDateForMonth(day, month)) {\r\n    const currentYear = new Date().getFullYear();\r\n    const today = Date.now();\r\n    \r\n    for(let i = currentYear; i >= minYear; i--) {\r\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\r\n        continue;\r\n      }\r\n\r\n      const date = new Date();\r\n      date.setFullYear(i, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n      \r\n      const minDate = date.getTime();\r\n      if(minDate > today) {\r\n        continue;\r\n      }\r\n\r\n      date.setFullYear(i, month, day + 2);\r\n      date.setHours(0, 0, 0);\r\n      const maxDate = date.getTime() - 1;\r\n      if(i === currentYear) {\r\n        dates.push({\r\n          title: formatterDayMonth(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      } else {\r\n        dates.push({\r\n          title: formatterYearMax(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatterMonthYear(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getFullYear();\r\n}\r\n\r\nfunction formatterDayMonth(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getDate();\r\n}\r\n\r\nfunction formatterYearMax(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\r\n}\r\n\r\nfunction formatWeekLong(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return days[date.getDay()];\r\n}\r\n\r\nfunction validDateForMonth(day: number, month: number) {\r\n  if(month >= 0 && month < 12) {\r\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isLeapYear(year: number) {\r\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n}\r\n\r\nfunction getMonth(q: string) {\r\n  /* String[] months = new String[]{\r\n          LocaleController.getString(\"January\", R.string.January).toLowerCase(),\r\n          LocaleController.getString(\"February\", R.string.February).toLowerCase(),\r\n          LocaleController.getString(\"March\", R.string.March).toLowerCase(),\r\n          LocaleController.getString(\"April\", R.string.April).toLowerCase(),\r\n          LocaleController.getString(\"May\", R.string.May).toLowerCase(),\r\n          LocaleController.getString(\"June\", R.string.June).toLowerCase(),\r\n          LocaleController.getString(\"July\", R.string.July).toLowerCase(),\r\n          LocaleController.getString(\"August\", R.string.August).toLowerCase(),\r\n          LocaleController.getString(\"September\", R.string.September).toLowerCase(),\r\n          LocaleController.getString(\"October\", R.string.October).toLowerCase(),\r\n          LocaleController.getString(\"November\", R.string.November).toLowerCase(),\r\n          LocaleController.getString(\"December\", R.string.December).toLowerCase()\r\n  }; */\r\n\r\n  /* String[] monthsEng = new String[12];\r\n  Calendar c = Calendar.getInstance();\r\n  for (int i = 1; i <= 12; i++) {\r\n      c.set(0, 0, 0, 0, 0, 0);\r\n      c.set(Calendar.MONTH, i);\r\n      monthsEng[i - 1] = c.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.ENGLISH).toLowerCase();\r\n  } */\r\n\r\n  q = q.toLowerCase();\r\n  for(let i = 0; i < 12; i++) {\r\n    const month = months[i].toLowerCase();\r\n    if(month.indexOf(q) === 0) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction getDayOfWeek(q: string) {\r\n  const c = new Date();\r\n  if(q.length <= 3) {\r\n    return -1;\r\n  }\r\n  \r\n  for(let i = 0; i < 7; i++) {\r\n    c.setDate(c.getDate() + 1);\r\n    \r\n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\r\n      return c.getDay();\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n/* export function stringMiddleOverflow(str: string, maxLength: number) {\r\n  return str.length > maxLength ? str.slice(0, maxLength / 2 | 0) + '...' + str.slice(-Math.round(maxLength / 2)) : str; \r\n} */\r\n\r\nexport function limitSymbols(str: string, length: number, limitFrom = length + 10) {\r\n  str = str.trim();\r\n  if(str.length > limitFrom) {\r\n    str = str.slice(0, length)/* .replace(/\\s*$/, '') */ + '...';\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n// credits to https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\r\nexport function escapeRegExp(str: string) {\r\n  return str\r\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\r\n    .replace(/-/g, '\\\\x2d');\r\n}\r\n\r\nexport function encodeEntities(value: string) {\r\n  return value.replace(/&/g, '&amp;').replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, (value) => {\r\n    var hi = value.charCodeAt(0);\r\n    var low = value.charCodeAt(1);\r\n    return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\r\n  }).replace(/([^\\#-~| |!])/g, (value) => { // non-alphanumeric\r\n    return '&#' + value.charCodeAt(0) + ';';\r\n  }).replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n}\r\n\r\nexport function splitStringByLength(str: string, maxLength: number) {\r\n  if(str.length < maxLength) return [str];\r\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\r\n  const delimiter = ' ';//'\\n';\r\n  const out: string[] = [];\r\n\r\n  const cut = (end?: number) => {\r\n    let part = str.slice(lastSliceStartIndex, end);\r\n    const _arrayIndex = arrayIndex++;\r\n    if(part.length > maxLength) {\r\n      let overflowPart = part.slice(maxLength);\r\n      const splitted = splitStringByLength(overflowPart, maxLength);\r\n      splitted.forEach(part => {\r\n        out[arrayIndex++] = part;\r\n      });\r\n\r\n      part = part.slice(0, maxLength);\r\n    }\r\n\r\n    lastSliceStartIndex = end;\r\n    length = 0;\r\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\r\n  };\r\n\r\n  let lastIndex = 0;\r\n  do {\r\n    let index = str.indexOf(delimiter, lastIndex);\r\n    if(index === -1) {\r\n      if(lastIndex !== (str.length - 1)) {\r\n        cut();\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    index += delimiter.length;\r\n\r\n    const partLength = index - lastIndex;\r\n    if((length + partLength) > maxLength) {\r\n      cut(length);\r\n    }\r\n    \r\n    lastIndex = index;\r\n    length += partLength;\r\n  } while(true);\r\n\r\n  return out;\r\n}\r\n\r\n// https://stackoverflow.com/a/14824756\r\n/* export const checkRTL = (s: string) => {           \r\n  const ltrChars  = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF'+'\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF',\r\n    rtlChars      = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC',\r\n    rtlDirCheck   = new RegExp('^[^'+ltrChars+']*['+rtlChars+']');\r\n\r\n  return rtlDirCheck.test(s);\r\n}; */\r\n\r\n//(window as any).checkRTL = checkRTL;\r\n\r\nexport function convertInputKeyToKey<T extends string>(inputKey: string) {\r\n  const str = inputKey.replace('input', '');\r\n  return (str[0].toLowerCase() + str.slice(1)) as T;\r\n}\r\n\r\nexport function convertKeyToInputKey(key: string) {\r\n  key = key[0].toUpperCase() + key.slice(1);\r\n  key = 'input' + key;\r\n  return key;\r\n}\r\n\r\nexport function capitalizeFirstLetter(string: string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n"],"sourceRoot":""}
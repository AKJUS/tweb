{"version":3,"sources":["webpack:///./src/components/monkeys/tracking.ts","webpack:///./src/components/codeInputField.ts","webpack:///./src/components/popups/index.ts","webpack:///./src/lib/mtproto/passwordManager.ts","webpack:///./src/components/passwordInputField.ts","webpack:///./src/components/monkeys/password.ts","webpack:///./src/lib/cropper.ts","webpack:///./src/components/popups/avatar.ts"],"names":["TrackingMonkey","inputField","size","max","needFrame","this","container","document","createElement","classList","add","input","addEventListener","playAnimation","e","value","length","animation","frame","Math","min","round","idleAnimation","stop","canvas","style","display","direction","setDirection","setSpeed","play","loadPromise","Promise","all","loadAnimationFromURL","loop","autoplay","width","height","then","waitForFirstFrame","_animation","currentFrame","pause","remove","CodeInputField","options","super","plainText","type","setAttribute","autocomplete","lastLength","setLabel","replace","slice","setValueSilently","onFill","PopupElement","className","buttons","element","header","title","onEscape","hide","back","destroy","onClose","btnClose","removeEventListener","overlayIsActive","removeItem","navigationItem","undefined","setTimeout","onCloseAfterTimeout","checkAnimations","append","closable","prepend","once","overlayClosable","onOverlayClick","target","withConfirm","btnConfirm","body","buttonsDiv","buttonsElements","map","b","button","isDanger","text","innerHTML","langKey","langArgs","callback","isCancel","onPop","pushItem","offsetWidth","addCancelButton","find","push","passwordManager","invokeApi","result","settings","getState","state","currentHashPromise","newHashPromise","params","password","new_settings","_","hint","email","currentPassword","computeSRP","resolve","newAlgo","new_algo","salt1","Uint8Array","randomize","set","newPassword","hashes","new_password_hash","inputCheckPassword","auth","saveApiUser","user","setUserAuth","id","code","PasswordInputField","passwordVisible","onVisibilityClick","toggleVisible","toggle","onVisibilityClickAdditional","stealthy","tabIndex","parentElement","insertBefore","cloneNode","nextSibling","PasswordMonkey","passwordInputField","noCache","curFrame","originalImage","cropComponent","cropImage","event_state","cropLeft","cropTop","cropWidth","cropHeight","scaledRatio","init","draggable","Image","src","overlayColor","appendChild","parentNode","maxWidth","naturalWidth","left","CROPWIDTH","top","offsetHeight","CROPHEIGHT","updateCropSize","updateCropImage","updateContainer","startMoving","resizing","keyHandler","imgZoom","zoom","PI","right","bottom","newWidth","floor","clientWidth","newHeight","clientHeight","w","h","offsetLeft","offsetTop","preventDefault","String","fromCharCode","charCode","deltaY","stopPropagation","container_width","container_height","container_left","container_top","mouse_x","clientX","pageX","touches","window","scrollX","mouse_y","clientY","pageY","scrollY","saveEventState","moving","endMoving","currentTouch","x","y","complete","onload","crop","getContext","drawImage","removeHandlers","image","cropper","h6","cropContainer","file","files","reader","FileReader","contents","show","readAsDataURL","btnSubmit","ripple","click","toBlob","blob","darkenCanvas","onCrop","appDownloadManager","upload","postCanvas","ctx","fillStyle","fillRect"],"mappings":"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","file":"6.6db4d76397796d8fd5ed.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField from \"../inputField\";\r\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\r\n\r\nexport default class TrackingMonkey {\r\n  public container: HTMLElement;\r\n\r\n  protected max = 45;\r\n  protected needFrame = 0;\r\n\r\n  protected animation: RLottiePlayer;\r\n  protected idleAnimation: RLottiePlayer;\r\n\r\n  protected loadPromise: Promise<any>;\r\n\r\n  constructor(protected inputField: InputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n\r\n    const input = inputField.input;\r\n\r\n    input.addEventListener('blur', () => {\r\n      this.playAnimation(0);\r\n    });\r\n\r\n    input.addEventListener('input', (e) => {\r\n      this.playAnimation(inputField.value.length);\r\n    });\r\n\r\n    /* codeInput.addEventListener('focus', () => {\r\n      playAnimation(Math.max(codeInput.value.length, 1));\r\n    }); */\r\n  }\r\n\r\n  // 1st symbol = frame 15\r\n  // end symbol = frame 165\r\n  public playAnimation(length: number) {\r\n    if(!this.animation) return;\r\n\r\n    length = Math.min(length, 30);\r\n    let frame: number;\r\n    if(length) {\r\n      frame = Math.round(Math.min(this.max, length) * (165 / this.max) + 11.33);\r\n\r\n      if(this.idleAnimation) {\r\n        this.idleAnimation.stop(true);\r\n        this.idleAnimation.canvas.style.display = 'none';\r\n      }\r\n      \r\n      this.animation.canvas.style.display = '';\r\n    } else {\r\n      /* const cb = (frameNo: number) => {\r\n        if(frameNo <= 1) { */\r\n          /* idleAnimation.play();\r\n          idleAnimation.canvas.style.display = '';\r\n          animation.canvas.style.display = 'none'; */\r\n      /*     animation.removeListener('enterFrame', cb);\r\n        }\r\n      };\r\n      animation.addListener('enterFrame', cb); */\r\n      \r\n      frame = 0;\r\n    }\r\n    //animation.playSegments([1, 2]);\r\n\r\n    const direction = this.needFrame > frame ? -1 : 1;\r\n    //console.log('keydown', length, frame, direction);\r\n\r\n    this.animation.setDirection(direction);\r\n    if(this.needFrame !== 0 && frame === 0) {\r\n      this.animation.setSpeed(7);\r\n    }\r\n    /* let diff = Math.abs(needFrame - frame * direction);\r\n    if((diff / 20) > 1) animation.setSpeed(diff / 20 | 0); */\r\n    this.needFrame = frame;\r\n    \r\n    this.animation.play();\r\n\r\n    /* animation.goToAndStop(15, true); */\r\n    //animation.goToAndStop(length / max * );\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = Promise.all([\r\n      lottieLoader.loadAnimationFromURL({\r\n        container: this.container,\r\n        loop: true,\r\n        autoplay: true,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'assets/img/TwoFactorSetupMonkeyIdle.tgs').then(animation => {\r\n        this.idleAnimation = animation;\r\n\r\n        // ! animationIntersector will stop animation instantly\r\n        if(!this.inputField.value.length) {\r\n          animation.play();\r\n        }\r\n\r\n        return lottieLoader.waitForFirstFrame(animation);\r\n      }),\r\n\r\n      lottieLoader.loadAnimationFromURL({\r\n        container: this.container,\r\n        loop: false,\r\n        autoplay: false,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'assets/img/TwoFactorSetupMonkeyTracking.tgs').then(_animation => {\r\n        this.animation = _animation;\r\n\r\n        if(!this.inputField.value.length) {\r\n          this.animation.canvas.style.display = 'none';\r\n        }\r\n\r\n        this.animation.addEventListener('enterFrame', currentFrame => {\r\n          //console.log('enterFrame', currentFrame, needFrame);\r\n          //let currentFrame = Math.round(e.currentTime);\r\n          \r\n          if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n            (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n          }\r\n\r\n          if(currentFrame === 0 && this.needFrame === 0) {\r\n            //animation.curFrame = 0;\r\n            \r\n            if(this.idleAnimation) {\r\n              this.idleAnimation.canvas.style.display = '';\r\n              this.idleAnimation.play();\r\n              this.animation.canvas.style.display = 'none';\r\n            }\r\n          }\r\n        });\r\n        //console.log(animation.getDuration(), animation.getDuration(true));\r\n\r\n        return lottieLoader.waitForFirstFrame(_animation);\r\n      })\r\n    ]);\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) this.animation.remove();\r\n    if(this.idleAnimation) this.idleAnimation.remove();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class CodeInputField extends InputField {\r\n  constructor(options: InputFieldOptions & {\r\n    length: number,\r\n    onFill: (code: number) => void\r\n  }) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'tel';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n\r\n    let lastLength = 0;\r\n    this.input.addEventListener('input', (e) => {\r\n      this.input.classList.remove('error');\r\n      this.setLabel();\r\n  \r\n      const value = this.value.replace(/\\D/g, '').slice(0, options.length);\r\n      this.setValueSilently(value);\r\n  \r\n      const length = this.value.length;\r\n      if(length === options.length) { // submit code\r\n        options.onFill(+this.value);\r\n      } else if(length === lastLength) {\r\n        return;\r\n      }\r\n  \r\n      lastLength = length;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { ripple } from \"../ripple\";\r\nimport animationIntersector from \"../animationIntersector\";\r\nimport appNavigationController, { NavigationItem } from \"../appNavigationController\";\r\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\r\n\r\nexport type PopupButton = {\r\n  text?: string,\r\n  callback?: () => void,\r\n  langKey?: LangPackKey,\r\n  langArgs?: any[],\r\n  isDanger?: true,\r\n  isCancel?: true\r\n};\r\n\r\nexport type PopupOptions = Partial<{\r\n  closable: true, \r\n  overlayClosable: true, \r\n  withConfirm: LangPackKey | true, \r\n  body: true\r\n}>;\r\n\r\nexport default class PopupElement {\r\n  protected element = document.createElement('div');\r\n  protected container = document.createElement('div');\r\n  protected header = document.createElement('div');\r\n  protected title = document.createElement('div');\r\n  protected btnClose: HTMLElement;\r\n  protected btnConfirm: HTMLElement;\r\n  protected body: HTMLElement;\r\n\r\n  protected onClose: () => void;\r\n  protected onCloseAfterTimeout: () => void;\r\n  protected onEscape: () => boolean = () => true;\r\n\r\n  protected navigationItem: NavigationItem;\r\n\r\n  constructor(className: string, buttons?: Array<PopupButton>, options: PopupOptions = {}) {\r\n    this.element.classList.add('popup');\r\n    this.element.className = 'popup' + (className ? ' ' + className : '');\r\n    this.container.classList.add('popup-container', 'z-depth-1');\r\n\r\n    this.header.classList.add('popup-header');\r\n    this.title.classList.add('popup-title');\r\n\r\n    this.header.append(this.title);\r\n\r\n    if(options.closable) {\r\n      this.btnClose = document.createElement('span');\r\n      this.btnClose.classList.add('btn-icon', 'popup-close', 'tgico-close');\r\n      //ripple(this.closeBtn);\r\n      this.header.prepend(this.btnClose);\r\n\r\n      this.btnClose.addEventListener('click', this.hide, {once: true});\r\n    }\r\n\r\n    if(options.overlayClosable) {\r\n      const onOverlayClick = (e: MouseEvent) => {\r\n        if(!findUpClassName(e.target, 'popup-container')) {\r\n          this.hide();\r\n          this.element.removeEventListener('click', onOverlayClick);\r\n        }\r\n      };\r\n  \r\n      this.element.addEventListener('click', onOverlayClick);\r\n    }\r\n\r\n    if(options.withConfirm) {\r\n      this.btnConfirm = document.createElement('button');\r\n      this.btnConfirm.classList.add('btn-primary', 'btn-color-primary');\r\n      if(options.withConfirm !== true) {\r\n        this.btnConfirm.append(i18n(options.withConfirm));\r\n      }\r\n      this.header.append(this.btnConfirm);\r\n      ripple(this.btnConfirm);\r\n    }\r\n\r\n    this.container.append(this.header);\r\n    if(options.body) {\r\n      this.body = document.createElement('div');\r\n      this.body.classList.add('popup-body');\r\n      this.container.append(this.body);\r\n    }\r\n\r\n    if(buttons && buttons.length) {\r\n      const buttonsDiv = document.createElement('div');\r\n      buttonsDiv.classList.add('popup-buttons');\r\n\r\n      if(buttons.length === 2) {\r\n        buttonsDiv.classList.add('popup-buttons-row');\r\n      }\r\n  \r\n      const buttonsElements = buttons.map(b => {\r\n        const button = document.createElement('button');\r\n        button.className = 'btn' + (b.isDanger ? ' danger' : ' primary');\r\n\r\n        ripple(button);\r\n        \r\n        if(b.text) {\r\n          button.innerHTML =  b.text;\r\n        } else {\r\n          button.append(i18n(b.langKey, b.langArgs));\r\n        }\r\n  \r\n        if(b.callback) {\r\n          button.addEventListener('click', () => {\r\n            b.callback();\r\n            this.destroy();\r\n          }, {once: true});\r\n        } else if(b.isCancel) {\r\n          button.addEventListener('click', () => {\r\n            this.destroy();\r\n          }, {once: true});\r\n        }\r\n  \r\n        return button;\r\n      });\r\n  \r\n      buttonsDiv.append(...buttonsElements);\r\n      this.container.append(buttonsDiv);\r\n    }\r\n\r\n    this.element.append(this.container);\r\n  }\r\n\r\n  public show() {\r\n    this.navigationItem = {\r\n      type: 'popup',\r\n      onPop: this.destroy,\r\n      onEscape: this.onEscape\r\n    };\r\n\r\n    appNavigationController.pushItem(this.navigationItem);\r\n\r\n    blurActiveElement(); // * hide mobile keyboard\r\n    document.body.append(this.element);\r\n    void this.element.offsetWidth; // reflow\r\n    this.element.classList.add('active');\r\n    rootScope.overlayIsActive = true;\r\n    animationIntersector.checkAnimations(true);\r\n  }\r\n\r\n  public hide = () => {\r\n    appNavigationController.back('popup');\r\n  };\r\n\r\n  private destroy = () => {\r\n    this.onClose && this.onClose();\r\n    this.element.classList.add('hiding');\r\n    this.element.classList.remove('active');\r\n\r\n    if(this.btnClose) this.btnClose.removeEventListener('click', this.hide);\r\n    rootScope.overlayIsActive = false;\r\n\r\n    appNavigationController.removeItem(this.navigationItem);\r\n    this.navigationItem = undefined;\r\n\r\n    setTimeout(() => {\r\n      this.element.remove();\r\n      this.onCloseAfterTimeout && this.onCloseAfterTimeout();\r\n      animationIntersector.checkAnimations(false);\r\n    }, 150);\r\n  };\r\n}\r\n\r\nexport const addCancelButton = (buttons: PopupButton[]) => {\r\n  const button = buttons.find(b => b.isCancel);\r\n  if(!button) {\r\n    buttons.push({\r\n      langKey: 'Cancel',\r\n      isCancel: true\r\n    });\r\n  }\r\n\r\n  return buttons;\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountPasswordInputSettings, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport type CryptoWorkerMethods from '../crypto/crypto_methods';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport appUsersManager from '../appManagers/appUsersManager';\r\nimport apiManager from './mtprotoworker';\r\n//import { computeCheck } from \"../crypto/srp\";\r\n\r\nexport class PasswordManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then(state => {\r\n      let currentHashPromise: ReturnType<CryptoWorkerMethods['computeSRP']>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = apiManager.computeSRP(settings.currentPassword, state);\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      salt1.randomize();\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = apiManager.computeSRP(settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return apiManager.computeSRP(password, state).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword\r\n      }, options).then(auth => {\r\n        if(auth._ === 'auth.authorization') {\r\n          appUsersManager.saveApiUser(auth.user);\r\n          apiManager.setUserAuth(auth.user.id);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n\r\nconst passwordManager = new PasswordManager();\r\nMOUNT_CLASS_TO.passwordManager = passwordManager;\r\nexport default passwordManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class PasswordInputField extends InputField {\r\n  public passwordVisible = false;\r\n  public toggleVisible: HTMLElement;\r\n  public onVisibilityClickAdditional: () => void;\r\n\r\n  constructor(options: InputFieldOptions = {}) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'password';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n    /* input.readOnly = true;\r\n\r\n    input.addEventListener('focus', () => {\r\n      input.removeAttribute('readonly');\r\n    }, {once: true}); */\r\n\r\n    // * https://stackoverflow.com/a/35949954/6758968\r\n    const stealthy = document.createElement('input');\r\n    stealthy.classList.add('stealthy');\r\n    stealthy.tabIndex = -1;\r\n    stealthy.type = 'password';\r\n    input.parentElement.prepend(stealthy);\r\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\r\n\r\n    const toggleVisible = this.toggleVisible = document.createElement('span');\r\n    toggleVisible.classList.add('toggle-visible', 'tgico');\r\n\r\n    this.container.classList.add('input-field-password');\r\n    this.container.append(toggleVisible);\r\n\r\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\r\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\r\n  }\r\n\r\n  public onVisibilityClick = (e: Event) => {\r\n    cancelEvent(e);\r\n    this.passwordVisible = !this.passwordVisible;\r\n\r\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\r\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\r\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\r\nimport PasswordInputField from \"../passwordInputField\";\r\n\r\nexport default class PasswordMonkey {\r\n  public container: HTMLElement;\r\n  public animation: RLottiePlayer;\r\n  public needFrame = 0;\r\n  protected loadPromise: Promise<void>;\r\n\r\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = lottieLoader.loadAnimationFromURL({\r\n      container: this.container,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: this.size,\r\n      height: this.size,\r\n      noCache: true\r\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\r\n    }, 'assets/img/TwoFactorSetupMonkeyPeek.tgs').then(_animation => {\r\n      //return;\r\n      this.animation = _animation;\r\n      this.animation.addEventListener('enterFrame', currentFrame => {\r\n        //console.log('enterFrame', currentFrame, this.needFrame);\r\n\r\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n        } \r\n      });\r\n\r\n      this.passwordInputField.onVisibilityClickAdditional = () => {\r\n        if(this.passwordInputField.passwordVisible) {\r\n          this.animation.setDirection(1);\r\n          this.animation.curFrame = 0;\r\n          this.needFrame = 16;\r\n          this.animation.play();\r\n        } else {\r\n          this.animation.setDirection(-1);\r\n          this.animation.curFrame = 16;\r\n          this.needFrame = 0;\r\n          this.animation.play();\r\n        }\r\n      };\r\n\r\n      return lottieLoader.waitForFirstFrame(_animation);\r\n    });\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) {\r\n      this.animation.remove();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nfunction resizeableImage(originalImage: HTMLImageElement, canvas?: HTMLCanvasElement) {\r\n  let cropComponent: HTMLDivElement, \r\n    container: HTMLDivElement, \r\n    cropImage: HTMLImageElement, \r\n    event_state: Partial<{  \r\n      mouse_x: number,   \r\n      mouse_y: number,   \r\n      container_width: number,  \r\n      container_height: number,  \r\n      container_left: number,  \r\n      container_top: number\r\n    }> = {}, \r\n    keyZoomValue = 4.0, \r\n    MINWIDTH = 50, \r\n    MINHEIGHT = 50, \r\n    CROPWIDTH = 200, \r\n    CROPHEIGHT = 200, \r\n    cropLeft = 0, \r\n    cropTop = 0, \r\n    cropWidth = 0, \r\n    cropHeight = 0,\r\n    scaledRatio = 0;\r\n  \r\n  if(originalImage.complete) init();\r\n  else originalImage.onload = init;\r\n  \r\n  function removeHandlers() {\r\n    container.removeEventListener('mousedown', startMoving);\r\n    container.removeEventListener('touchstart', startMoving);\r\n    container.removeEventListener('wheel', resizing);\r\n    \r\n    document.removeEventListener('mouseup', endMoving);\r\n    document.removeEventListener('touchend', endMoving);\r\n    document.removeEventListener('mousemove', moving);\r\n    document.removeEventListener('touchmove', moving);\r\n    document.removeEventListener('keypress', keyHandler);\r\n\r\n    cropComponent.remove();\r\n    container.remove();\r\n    cropImage.remove();\r\n  }\r\n  \r\n  function addHandlers() {\r\n    container.addEventListener('mousedown', startMoving, false);\r\n    container.addEventListener('touchstart', startMoving, false);\r\n    container.addEventListener('wheel', resizing, false);\r\n    \r\n    document.addEventListener('keypress', keyHandler, false);\r\n    //document.querySelector('.btn-crop').addEventListener('click', openCropCanvasImg);\r\n  }\r\n  \r\n  function init() {\r\n    originalImage.classList.add('crop-blur');\r\n    originalImage.draggable = false;\r\n    \r\n    cropImage = new Image();\r\n    cropImage.src = originalImage.src;\r\n    cropImage.draggable = false;\r\n    cropImage.classList.add('crop-overlay-image');\r\n    \r\n    if(!canvas) {\r\n      canvas = document.createElement('canvas');\r\n    }\r\n    \r\n    cropComponent = document.createElement('div');\r\n    cropComponent.classList.add('crop-component');\r\n    \r\n    container = document.createElement('div');\r\n    container.classList.add('crop-overlay');\r\n    \r\n    const overlayColor = document.createElement('div');\r\n    overlayColor.classList.add('crop-overlay-color');\r\n    \r\n    cropComponent.appendChild(container);\r\n    const wrapper = originalImage.parentNode as HTMLElement;\r\n    wrapper.appendChild(cropComponent);\r\n    cropComponent.appendChild(cropImage);\r\n    cropComponent.appendChild(originalImage);\r\n    cropComponent.appendChild(overlayColor);\r\n    container.appendChild(cropImage);\r\n\r\n    cropImage.style.maxWidth = originalImage.width + 'px';\r\n\r\n    scaledRatio = originalImage.naturalWidth / originalImage.offsetWidth;\r\n    \r\n    const left = originalImage.offsetWidth / 2 - CROPWIDTH / 2;\r\n    const top = originalImage.offsetHeight / 2 - CROPHEIGHT / 2;\r\n    \r\n    updateCropSize(CROPWIDTH, CROPHEIGHT);\r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    addHandlers();\r\n    //crop();\r\n  }\r\n  \r\n  function updateCropSize(width: number, height: number) {\r\n    cropWidth = width * scaledRatio;\r\n    cropHeight = height * scaledRatio;\r\n\r\n    container.style.width = width + 'px';\r\n    container.style.height = height + 'px';\r\n  }\r\n  \r\n  function updateCropImage(left: number, top: number) {\r\n    cropTop = top * scaledRatio;\r\n    cropLeft = left * scaledRatio;\r\n\r\n    cropImage.style.top = -top + 'px';\r\n    cropImage.style.left = -left + 'px';\r\n  }\r\n  \r\n  function updateContainer(left: number, top: number) {\r\n    container.style.top = top + 'px';\r\n    container.style.left = left + 'px';\r\n  }\r\n  \r\n  // Save the initial event details and container state\r\n  function saveEventState(e: any) {\r\n    event_state.container_width = container.offsetWidth;\r\n    event_state.container_height = container.offsetHeight;\r\n    \r\n    event_state.container_left = container.offsetLeft;\r\n    event_state.container_top = container.offsetTop;\r\n    \r\n    event_state.mouse_x = (e.clientX || e.pageX || e.touches && e.touches[0].clientX) + window.scrollX;\r\n    event_state.mouse_y = (e.clientY || e.pageY || e.touches && e.touches[0].clientY) + window.scrollY;\r\n  }\r\n  \r\n  function imgZoom(zoom: number) {\r\n    zoom = zoom * Math.PI * 2\r\n    let newWidth = Math.floor(container.clientWidth + zoom), \r\n      newHeight = Math.floor(container.clientHeight + zoom), \r\n      w = cropImage.clientWidth, \r\n      h = cropImage.clientHeight, \r\n      left: number, \r\n      top: number, \r\n      right: number, \r\n      bottom: number;\r\n    \r\n    if(newWidth < MINWIDTH) {\r\n      return;\r\n    } else if(newWidth > w) {\r\n      return;\r\n    }\r\n    \r\n    left = container.offsetLeft - (zoom / 2);\r\n    top = container.offsetTop - (zoom / 2);\r\n    right = left + newWidth;\r\n    bottom = top + newHeight;\r\n    \r\n    if(left < 0) left = 0;\r\n    if(top < 0) top = 0;\r\n\r\n    if(right > w) return;\r\n    if(bottom > h) return;\r\n\r\n    updateCropSize(newWidth, newWidth);\r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    //crop();\r\n  }\r\n  \r\n  function keyHandler(e: KeyboardEvent) {\r\n    e.preventDefault();\r\n    \r\n    switch (String.fromCharCode(e.charCode)) {\r\n      case '+' :\r\n      imgZoom(keyZoomValue);\r\n      break;\r\n      case '-' :\r\n      imgZoom(-keyZoomValue);\r\n      break;\r\n    }\r\n  }\r\n  \r\n  function resizing(e: any) {\r\n    e.preventDefault();\r\n    imgZoom(e.deltaY > 0 ? 1 : -1);\r\n  }\r\n  \r\n  function startMoving(e: MouseEvent | TouchEvent) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    saveEventState(e);\r\n    \r\n    document.addEventListener('mousemove', moving);\r\n    document.addEventListener('touchmove', moving);\r\n    document.addEventListener('mouseup', endMoving);\r\n    document.addEventListener('touchend', endMoving);\r\n  }\r\n  \r\n  function endMoving(e: MouseEvent | TouchEvent) {\r\n    e.preventDefault();\r\n    \r\n    document.removeEventListener('mouseup', endMoving);\r\n    document.removeEventListener('touchend', endMoving);\r\n    document.removeEventListener('mousemove', moving);\r\n    document.removeEventListener('touchmove', moving);\r\n  }\r\n  \r\n  function moving(e: any) {\r\n    let currentTouch = {x: 0, y: 0}, \r\n      left: number, \r\n      top: number, \r\n      w: number, \r\n      h: number;\r\n    \r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    currentTouch.x = e.pageX || e.touches && e.touches[0].pageX;\r\n    currentTouch.y = e.pageY || e.touches && e.touches[0].pageY;\r\n    \r\n    left = currentTouch.x - (event_state.mouse_x - event_state.container_left);\r\n    top = currentTouch.y - (event_state.mouse_y - event_state.container_top);\r\n    w = container.offsetWidth;\r\n    h = container.offsetHeight;\r\n    \r\n    if(left < 0) left = 0;\r\n    else if(left > cropImage.offsetWidth - w) left = cropImage.offsetWidth - w;\r\n\r\n    if(top < 0) top = 0;\r\n    else if(top > cropImage.offsetHeight - h) top = cropImage.offsetHeight - h;\r\n    \r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    //crop();\r\n  }\r\n\r\n  function crop() {\r\n    canvas.width = cropWidth;\r\n    canvas.height = cropHeight;\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(originalImage,\r\n      cropLeft, cropTop,\r\n      cropWidth, cropHeight,\r\n      0, 0,\r\n      cropWidth, cropHeight\r\n    );\r\n  }\r\n  \r\n  return {crop, removeHandlers};\r\n}\r\n\r\nexport default resizeableImage;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDownloadManager from \"../../lib/appManagers/appDownloadManager\";\r\nimport resizeableImage from \"../../lib/cropper\";\r\nimport PopupElement from \".\";\r\nimport { ripple } from \"../ripple\";\r\nimport { _i18n } from \"../../lib/langPack\";\r\n\r\nexport default class PopupAvatar extends PopupElement {\r\n  private cropContainer: HTMLElement;\r\n  private input: HTMLInputElement;\r\n  private btnSubmit: HTMLElement;\r\n  private h6: HTMLElement;\r\n\r\n  private image = new Image();\r\n\r\n  private canvas: HTMLCanvasElement;\r\n  private blob: Blob;\r\n  private cropper = {\r\n    crop: () => {},\r\n    removeHandlers: () => {}\r\n  };\r\n\r\n  private onCrop: (upload: () => ReturnType<typeof appDownloadManager.upload>) => void;\r\n\r\n  constructor() {\r\n    super('popup-avatar', null, {closable: true});\r\n\r\n    this.h6 = document.createElement('h6');\r\n    _i18n(this.h6, 'Popup.Avatar.Title');\r\n\r\n    this.btnClose.classList.remove('btn-icon');\r\n\r\n    this.header.append(this.h6);\r\n\r\n    this.cropContainer = document.createElement('div');\r\n    this.cropContainer.classList.add('crop');\r\n    this.cropContainer.append(this.image);\r\n\r\n    this.input = document.createElement('input');\r\n    this.input.type = 'file';\r\n    this.input.style.display = 'none';\r\n    this.input.addEventListener('change', (e: any) => {\r\n      const file = e.target.files[0];\r\n      if(!file) {\r\n        return;\r\n      }\r\n  \r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const contents = e.target.result as string;\r\n        \r\n        this.image = new Image();\r\n        this.cropContainer.append(this.image);\r\n        this.image.src = contents;\r\n  \r\n        this.image.onload = () => {\r\n          /* let {w, h} = calcImageInBox(this.image.naturalWidth, this.image.naturalHeight, 460, 554);\r\n          cropContainer.style.width = w + 'px';\r\n          cropContainer.style.height = h + 'px'; */\r\n          this.show();\r\n  \r\n          this.cropper = resizeableImage(this.image, this.canvas);\r\n          this.input.value = '';\r\n        };\r\n      };\r\n  \r\n      reader.readAsDataURL(file);\r\n    }, false);\r\n\r\n    this.btnSubmit = document.createElement('button');\r\n    this.btnSubmit.className = 'btn-primary btn-color-primary btn-circle btn-crop btn-icon tgico-check z-depth-1';\r\n    ripple(this.btnSubmit);\r\n    this.btnSubmit.addEventListener('click', () => {\r\n      this.cropper.crop();\r\n      this.btnClose.click();\r\n\r\n      this.canvas.toBlob(blob => {\r\n        this.blob = blob; // save blob to send after reg\r\n        this.darkenCanvas();\r\n        this.resolve();\r\n      }, 'image/jpeg', 1);\r\n    });\r\n\r\n    this.container.append(this.cropContainer, this.btnSubmit, this.input);\r\n\r\n    this.onCloseAfterTimeout = () => {\r\n      this.cropper.removeHandlers();\r\n      if(this.image) {\r\n        this.image.remove();\r\n      }\r\n    };\r\n  }\r\n\r\n  private resolve() {\r\n    this.onCrop(() => {\r\n      return appDownloadManager.upload(this.blob);\r\n    });\r\n  }\r\n\r\n  public open(postCanvas: HTMLCanvasElement, onCrop: PopupAvatar['onCrop']) {\r\n    this.canvas = postCanvas;\r\n    this.onCrop = onCrop;\r\n\r\n    this.input.click();\r\n  }\r\n\r\n  public darkenCanvas() {\r\n    let ctx = this.canvas.getContext('2d');\r\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\r\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n}\r\n"],"sourceRoot":""}
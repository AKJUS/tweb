{"version":3,"sources":["webpack:///./src/lib/filemanager.ts","webpack:///./src/lib/cacheStorage.ts","webpack:///./src/helpers/dom/replaceContent.ts","webpack:///./src/components/inputField.ts","webpack:///./src/components/scrollable.ts","webpack:///./src/components/checkboxField.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/dom/findUpTag.ts","webpack:///./src/helpers/dom/getRichValue.ts","webpack:///./src/helpers/dom/getRichElementValue.ts","webpack:///./src/helpers/dom/findUpAttribute.ts","webpack:///./src/helpers/dom/isInputEmpty.ts","webpack:///./src/helpers/formatPhoneNumber.ts","webpack:///./src/helpers/dom/placeCaretAtEnd.ts"],"names":["blobSupported","e","this","fileWriter","bytes","Blob","then","arr","write","mimeType","saveFileCallback","blobParts","part","push","truncate","length","finalize","saveToStorage","blob","dbName","useStorage","test","STORAGES","openDatabase","openDbPromise","caches","open","entryName","timeoutOperation","cache","delete","match","response","put","fileName","method","get","Response","headers","size","save","callback","Promise","resolve","reject","rejected","timeout","setTimeout","undefined","res","err","clearTimeout","fakeWriter","getFakeFileWriter","saveFile","catch","enabled","all","map","storage","deleteAll","replaceContent","elem","node","innerHTML","firstChild","lastChild","replaceWith","textContent","append","init","document","addEventListener","target","preventDefault","text","originalEvent","clipboardData","getData","entities","parseEntities","filter","_","wrapRichText","noLinks","wrappingDraft","window","execCommand","InputState","options","container","createElement","classList","add","maxLength","showLengthOn","Math","min","round","placeholder","name","plainText","input","processInput","label","labelText","firstElementChild","observer","MutationObserver","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","wasInputFakeClientHeight","setAttribute","className","border","setLabel","labelEl","lastElementChild","showingLength","wasError","contains","inputLength","value","diff","isError","toggle","select","labelOptions","scrollHeight","clientHeight","style","height","setValueSilently","fireFakeInput","originalValue","silent","wrapDraftText","state","Error","Valid","setState","ScrollableBase","el","logPrefix","onScrollMeasure","isHeavyAnimationInProgress","needCheckAfterAnimation","log","Array","from","children","forEach","c","onScroll","passive","capture","cancelAnimationFrame","element","position","margin","maxDistance","forceDirection","forceDuration","axis","Scrollable","onScrollOffset","withPaddingContainer","super","onAdditionalScroll","onScrolledTop","onScrolledBottom","lastScrollTop","lastScrollDirection","loadedAll","top","bottom","splitUp","requestAnimationFrame","scrollTop","checkForTriggers","maxScrollTop","setListeners","elements","padding","prepend","offsetHeight","getDistanceToEnd","y","ScrollableX","splitCount","scrollHorizontally","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","CheckboxField","restriction","disabled","toggleDisability","span","type","id","checked","stateKey","getState","stateValue","stateValues","indexOf","setByKey","textArgs","box","checkSvg","createElementNS","setAttributeNS","use","bg","withRipple","withHover","event","Event","bubbles","cancelable","dispatchEvent","disable","removeAttribute","findUpTag","tag","closest","getRichValue","field","withEntities","lines","line","join","replace","combineSameEntities","markdownTags","bold","entityName","underline","italic","monospace","strikethrough","link","mentionName","getRichElementValue","selNode","selOffset","offset","nodeType","nodeValue","substr","trim","parentNode","parentElement","getAttribute","url","href","user_id","dataset","follow","isSelected","isBlock","tagName","splice","alt","curChild","nextSibling","findUpAttribute","attribute","isInputEmpty","hasAttribute","prefixes","Map","maxPrefixLength","setPrefix","country","code","prefix","country_code","max","set","formatPhoneNumber","originalStr","countriesList","country_codes","prefixCountry","str","phoneCode","slice","i","formatted","leftPattern","patterns","searchForPattern","pattern","mostMatchedPatternMatches","mostMatchedPattern","_pattern","patternMatches","k","split","symbol","idx","placeCaretAtEnd","ignoreTouchCheck","activeElement","focus","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText"],"mappings":"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","file":"4.879c42057615bcf0cf13.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { blobConstruct, readBlobAsUint8Array } from \"../helpers/blob\";\r\n\r\nexport class FileManager {\r\n  public blobSupported = true;\r\n  \r\n  constructor() {\r\n    try {\r\n      blobConstruct([], '');\r\n    } catch(e) {\r\n      this.blobSupported = false;\r\n    }\r\n  }\r\n  \r\n  public isAvailable() {\r\n    return this.blobSupported;\r\n  }\r\n  \r\n  public write(fileWriter: ReturnType<FileManager['getFakeFileWriter']>, bytes: Uint8Array | Blob | string): Promise<void> {\r\n    if(bytes instanceof Blob) { // is file bytes\r\n      return readBlobAsUint8Array(bytes).then(arr => {\r\n        return fileWriter.write(arr);\r\n      });\r\n    } else {\r\n      return fileWriter.write(bytes);\r\n    }\r\n  }\r\n\r\n  public getFakeFileWriter(mimeType: string, saveFileCallback?: (blob: Blob) => Promise<Blob>) {\r\n    const blobParts: Array<Uint8Array | string> = [];\r\n    const fakeFileWriter = {\r\n      write: async(part: Uint8Array | string) => {\r\n        if(!this.blobSupported) {\r\n          throw false;\r\n        }\r\n        \r\n        blobParts.push(part);\r\n      },\r\n      truncate: () => {\r\n        blobParts.length = 0;\r\n      },\r\n      finalize: (saveToStorage = true) => {\r\n        const blob = blobConstruct(blobParts, mimeType);\r\n\r\n        if(saveToStorage && saveFileCallback) {\r\n          saveFileCallback(blob);\r\n        }\r\n        \r\n        return blob;\r\n      }\r\n    };\r\n    \r\n    return fakeFileWriter;\r\n  }\r\n}\r\n\r\nexport default new FileManager();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../config/modes';\r\nimport { blobConstruct } from '../helpers/blob';\r\nimport FileManager from './filemanager';\r\n//import { MOUNT_CLASS_TO } from './mtproto/mtproto_config';\r\n//import { logger } from './polyfill';\r\n\r\nexport type CacheStorageDbName = 'cachedFiles' | 'cachedStreamChunks' | 'cachedAssets';\r\n\r\nexport default class CacheStorageController {\r\n  private static STORAGES: CacheStorageController[] = [];\r\n  private openDbPromise: Promise<Cache>;\r\n\r\n  private useStorage = true;\r\n\r\n  //private log: ReturnType<typeof logger> = logger('CS');\r\n\r\n  constructor(private dbName: CacheStorageDbName) {\r\n    if(Modes.test) {\r\n      this.dbName += '_test';\r\n    }\r\n\r\n    if(CacheStorageController.STORAGES.length) {\r\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\r\n    }\r\n    \r\n    this.openDatabase();\r\n    CacheStorageController.STORAGES.push(this);\r\n  }\r\n\r\n  private openDatabase(): Promise<Cache> {\r\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\r\n  }\r\n\r\n  public delete(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\r\n  }\r\n\r\n  public deleteAll() {\r\n    return caches.delete(this.dbName);\r\n  }\r\n\r\n  public get(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.match('/' + entryName));\r\n  }\r\n\r\n  public save(entryName: string, response: Response) {\r\n    // return new Promise((resolve) => {}); // DEBUG\r\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, response));\r\n  }\r\n\r\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\r\n    /* if(method === 'blob') {\r\n      return Promise.reject();\r\n    } */\r\n\r\n    // const str = `get fileName: ${fileName}`;\r\n    // console.time(str);\r\n    return this.get(fileName).then((response) => {\r\n      if(!response) {\r\n        //console.warn('getFile:', response, fileName);\r\n        throw 'NO_ENTRY_FOUND';\r\n      }\r\n\r\n      const promise = response[method]();\r\n      // promise.then(() => {\r\n      //   console.timeEnd(str);\r\n      // });\r\n      return promise;\r\n    });\r\n  }\r\n\r\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n    //return Promise.resolve(blobConstruct([blob]));\r\n    if(!(blob instanceof Blob)) {\r\n      blob = blobConstruct(blob) as Blob;\r\n    }\r\n\r\n    const response = new Response(blob, {\r\n      headers: {\r\n        'Content-Length': '' + blob.size\r\n      }\r\n    });\r\n    \r\n    return this.save(fileName, response).then(() => blob as Blob);\r\n  }\r\n\r\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\r\n    if(!this.useStorage) {\r\n      return Promise.reject('STORAGE_OFFLINE');\r\n    }\r\n\r\n    return new Promise<T>(async(resolve, reject) => {\r\n      let rejected = false;\r\n      const timeout = setTimeout(() => {\r\n        reject();\r\n        //console.warn('CACHESTORAGE TIMEOUT');\r\n        rejected = true;\r\n      }, 15e3);\r\n\r\n      try {\r\n        const cache = await this.openDatabase();\r\n        if(!cache) {\r\n          this.useStorage = false;\r\n          this.openDbPromise = undefined;\r\n          throw 'no cache?';\r\n        }\r\n\r\n        const res = await callback(cache);\r\n\r\n        if(rejected) return;\r\n        resolve(res);\r\n      } catch(err) {\r\n        reject(err);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n    });\r\n  }\r\n\r\n  public getFileWriter(fileName: string, mimeType: string) {\r\n    const fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob).catch(() => blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean) {\r\n    return Promise.all(this.STORAGES.map(storage => {\r\n      storage.useStorage = enabled;\r\n      \r\n      if(!enabled) {\r\n        return storage.deleteAll();\r\n      }\r\n    }));\r\n  }\r\n}\r\n\r\n//const cacheStorage = new CacheStorageController(); \r\n//MOUNT_CLASS_TO.cacheStorage = cacheStorage;\r\n//export default cacheStorage;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function replaceContent(elem: HTMLElement, node: string | Node) {\r\n  if(typeof(node) === 'string') {\r\n    elem.innerHTML = node;\r\n    return;\r\n  }\r\n\r\n  // * children.length doesn't count text nodes\r\n  const firstChild = elem.firstChild;\r\n  if(firstChild) {\r\n    if(elem.lastChild === firstChild) {\r\n      firstChild.replaceWith(node);\r\n    } else {\r\n      elem.textContent = '';\r\n      elem.append(node);\r\n    }\r\n  } else {\r\n    elem.append(node);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\r\nimport getRichValue from \"../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../helpers/dom/isInputEmpty\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\n\r\nlet init = () => {\r\n  document.addEventListener('paste', (e) => {\r\n    if(!findUpAttribute(e.target, 'contenteditable=\"true\"')) {\r\n      return;\r\n    }\r\n    //console.log('document paste');\r\n\r\n    //console.log('messageInput paste');\r\n\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    let text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n\r\n    let entities = RichTextProcessor.parseEntities(text);\r\n    //console.log('messageInput paste', text, entities);\r\n    entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n    //text = RichTextProcessor.wrapEmojiText(text);\r\n    text = RichTextProcessor.wrapRichText(text, {entities, noLinks: true, wrappingDraft: true});\r\n\r\n    // console.log('messageInput paste after', text);\r\n\r\n    // @ts-ignore\r\n    //let html = (e.originalEvent || e).clipboardData.getData('text/html');\r\n\r\n    // @ts-ignore\r\n    //console.log('paste text', text, );\r\n    window.document.execCommand('insertHTML', false, text);\r\n  });\r\n\r\n  init = null;\r\n};\r\n\r\n// ! it doesn't respect symbols other than strongs\r\n/* const checkAndSetRTL = (input: HTMLElement) => {\r\n  //const isEmpty = isInputEmpty(input);\r\n  //console.log('input', isEmpty);\r\n\r\n  //const char = [...getRichValue(input)][0];\r\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\r\n  let direction = 'ltr';\r\n  if(char && checkRTL(char)) {\r\n    direction = 'rtl';\r\n  }\r\n\r\n  //console.log('RTL', direction, char);\r\n\r\n  input.style.direction = direction;\r\n}; */\r\n\r\nexport enum InputState {\r\n  Neutral = 0,\r\n  Valid = 1,\r\n  Error = 2\r\n};\r\n\r\nexport type InputFieldOptions = {\r\n  placeholder?: LangPackKey, \r\n  label?: LangPackKey, \r\n  labelOptions?: any[],\r\n  labelText?: string,\r\n  name?: string, \r\n  maxLength?: number, \r\n  showLengthOn?: number,\r\n  plainText?: true,\r\n  animate?: true\r\n};\r\n\r\nclass InputField {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputFake: HTMLElement;\r\n  public label: HTMLLabelElement;\r\n\r\n  public originalValue: string;\r\n\r\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\r\n  protected wasInputFakeClientHeight: number;\r\n  // protected showScrollDebounced: () => void;\r\n\r\n  constructor(public options: InputFieldOptions = {}) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('input-field');\r\n\r\n    if(options.maxLength) {\r\n      options.showLengthOn = Math.min(40, Math.round(options.maxLength / 3));\r\n    }\r\n\r\n    const {placeholder, maxLength, showLengthOn, name, plainText} = options;\r\n\r\n    let label = options.label || options.labelText;\r\n\r\n    let input: HTMLElement;\r\n    if(!plainText) {\r\n      if(init) {\r\n        init();\r\n      }\r\n\r\n      this.container.innerHTML = `\r\n      <div contenteditable=\"true\" class=\"input-field-input\"></div>\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      const observer = new MutationObserver(() => {\r\n        //checkAndSetRTL(input);\r\n\r\n        if(processInput) {\r\n          processInput();\r\n        }\r\n      });\r\n\r\n      // * because if delete all characters there will br left\r\n      input.addEventListener('input', () => {\r\n        if(isInputEmpty(input)) {\r\n          input.innerHTML = '';\r\n        }\r\n\r\n        if(this.inputFake) {\r\n          this.inputFake.innerHTML = input.innerHTML;\r\n          this.onFakeInput();\r\n        }\r\n      });\r\n      \r\n      // ! childList for paste first symbol\r\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\r\n\r\n      if(options.animate) {\r\n        input.classList.add('scrollable', 'scrollable-y');\r\n        this.wasInputFakeClientHeight = 0;\r\n        // this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\r\n        this.inputFake = document.createElement('div');\r\n        this.inputFake.setAttribute('contenteditable', 'true');\r\n        this.inputFake.className = input.className + ' input-field-input-fake';\r\n      }\r\n    } else {\r\n      this.container.innerHTML = `\r\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      //input.addEventListener('input', () => checkAndSetRTL(input));\r\n    }\r\n\r\n    input.setAttribute('dir', 'auto');\r\n\r\n    if(placeholder) {\r\n      _i18n(input, placeholder, undefined, 'placeholder');\r\n\r\n      if(this.inputFake) {\r\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\r\n      }\r\n    }\r\n\r\n    if(label || placeholder) {\r\n      const border = document.createElement('div');\r\n      border.classList.add('input-field-border');\r\n      this.container.append(border);\r\n    }\r\n\r\n    if(label) {\r\n      this.label = document.createElement('label');\r\n      this.setLabel();\r\n      this.container.append(this.label);\r\n    }\r\n\r\n    let processInput: () => void;\r\n    if(maxLength) {\r\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\r\n      let showingLength = false;\r\n\r\n      processInput = () => {\r\n        const wasError = input.classList.contains('error');\r\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\r\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input, false).value].length;\r\n        const diff = maxLength - inputLength;\r\n        const isError = diff < 0;\r\n        input.classList.toggle('error', isError);\r\n\r\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\r\n\r\n        if(isError || diff <= showLengthOn) {\r\n          this.setLabel();\r\n          labelEl.append(` (${maxLength - inputLength})`);\r\n          if(!showingLength) showingLength = true;\r\n        } else if((wasError && !isError) || showingLength) {\r\n          this.setLabel();\r\n          showingLength = false;\r\n        }\r\n      };\r\n\r\n      input.addEventListener('input', processInput);\r\n    }\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  public select() {\r\n    if((this.input as HTMLInputElement).value) { // * avoid selecting whole empty field on iOS devices\r\n      (this.input as HTMLInputElement).select(); // * select text\r\n    }\r\n  }\r\n\r\n  public setLabel() {\r\n    this.label.textContent = '';\r\n    if(this.options.labelText) {\r\n      this.label.innerHTML = this.options.labelText;\r\n    } else {\r\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\r\n    }\r\n  }\r\n\r\n  public onFakeInput() {\r\n    const {scrollHeight, clientHeight} = this.inputFake;\r\n    /* if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\r\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\r\n      this.showScrollDebounced();\r\n    } */\r\n\r\n    this.wasInputFakeClientHeight = clientHeight;\r\n    this.input.style.height = scrollHeight ? scrollHeight + 'px' : '';\r\n  }\r\n\r\n  get value() {\r\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input, false).value;\r\n    //return getRichValue(this.input);\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setValueSilently(value, false);\r\n\r\n    simulateEvent(this.input, 'input');\r\n  }\r\n\r\n  public setValueSilently(value: string, fireFakeInput = true) {\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).value = value;\r\n    } else {\r\n      this.input.innerHTML = value;\r\n      \r\n      if(this.inputFake) {\r\n        this.inputFake.innerHTML = value;\r\n\r\n        if(fireFakeInput) {\r\n          this.onFakeInput();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public isValid() {\r\n    return !this.input.classList.contains('error') && this.value !== this.originalValue;\r\n  }\r\n\r\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\r\n    this.originalValue = value;\r\n\r\n    if(!this.options.plainText) {\r\n      value = RichTextProcessor.wrapDraftText(value);\r\n    }\r\n\r\n    if(silent) {\r\n      this.setValueSilently(value, false); \r\n    } else {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  public setState(state: InputState, label?: LangPackKey) {\r\n    if(label) {\r\n      this.label.textContent = '';\r\n      this.label.append(i18n(label, this.options.labelOptions));\r\n    }\r\n\r\n    this.input.classList.toggle('error', !!(state & InputState.Error));\r\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\r\n  }\r\n\r\n  public setError(label?: LangPackKey) {\r\n    this.setState(InputState.Error, label);\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport fastSmoothScroll, { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n/*\r\nvar el = $0;\r\nvar height = 0;\r\nvar checkUp = false;\r\n\r\ndo {\r\n  height += el.scrollHeight;\r\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\r\nconsole.log(height);\r\n*/\r\n\r\n/*\r\nArray.from($0.querySelectorAll('.bubble-content')).forEach(_el => {\r\n\t//_el.style.display = '';\t\r\n\t//return;\r\n\r\n\tlet el = _el.parentElement;\r\n\tlet height = el.scrollHeight;\r\n\tlet width = el.scrollWidth;\r\n\tel.style.width = width + 'px';\r\n\tel.style.height = height + 'px';\r\n\t_el.style.display = 'none';\r\n});\r\n*/\r\n\r\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\r\nconst scrollsIntersector = new IntersectionObserver(entries => {\r\n  for(let entry of entries) {\r\n    const scrollable = scrollables.get(entry.target as HTMLElement);\r\n\r\n    if(entry.isIntersecting) {\r\n      scrollable.isVisible = true;\r\n    } else {\r\n      scrollable.isVisible = false;\r\n\r\n      if(!isInDOM(entry.target)) {\r\n        scrollsIntersector.unobserve(scrollable.container);\r\n        scrollables.delete(scrollable.container);\r\n      }\r\n    }\r\n  }\r\n}); */\r\n\r\nexport class ScrollableBase {\r\n  protected log: ReturnType<typeof logger>;\r\n\r\n  public onScrollMeasure: number = 0;\r\n  protected onScroll: () => void;\r\n\r\n  public isHeavyAnimationInProgress = false;\r\n  protected needCheckAfterAnimation = false;\r\n\r\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\r\n    this.container.classList.add('scrollable');\r\n\r\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\r\n\r\n    if(el) {\r\n      Array.from(el.children).forEach(c => this.container.append(c));\r\n\r\n      el.append(this.container);\r\n    }\r\n    //this.onScroll();\r\n  }\r\n\r\n  protected setListeners() {\r\n    window.addEventListener('resize', this.onScroll, {passive: true});\r\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\r\n\r\n    useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n\r\n      if(this.onScrollMeasure) {\r\n        this.needCheckAfterAnimation = true;\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(this.needCheckAfterAnimation) {\r\n        this.onScroll();\r\n        this.needCheckAfterAnimation = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public append(element: HTMLElement) {\r\n    this.container.append(element);\r\n  }\r\n\r\n  public scrollIntoViewNew(\r\n    element: HTMLElement,\r\n    position: ScrollLogicalPosition,\r\n    margin?: number,\r\n    maxDistance?: number,\r\n    forceDirection?: FocusDirection,\r\n    forceDuration?: number,\r\n    axis?: 'x' | 'y'\r\n  ) {\r\n    //return Promise.resolve();\r\n    return fastSmoothScroll(this.container, element, position, margin, maxDistance, forceDirection, forceDuration, axis);\r\n  }\r\n}\r\n\r\nexport type SliceSides = 'top' | 'bottom';\r\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\r\n\r\nexport default class Scrollable extends ScrollableBase {\r\n  public splitUp: HTMLElement;\r\n  public padding: HTMLElement;\r\n  \r\n  public onAdditionalScroll: () => void = null;\r\n  public onScrolledTop: () => void = null;\r\n  public onScrolledBottom: () => void = null;\r\n  \r\n  public lastScrollTop: number = 0;\r\n  public lastScrollDirection: number = 0;\r\n\r\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\r\n\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\r\n    super(el, logPrefix);\r\n\r\n    /* if(withPaddingContainer) {\r\n      this.padding = document.createElement('div');\r\n      this.padding.classList.add('scrollable-padding');\r\n      Array.from(this.container.children).forEach(c => this.padding.append(c));\r\n      this.container.append(this.padding);\r\n    } */\r\n\r\n    this.container.classList.add('scrollable-y');\r\n    this.setListeners();\r\n  }\r\n\r\n  public setVirtualContainer(el?: HTMLElement) {\r\n    this.splitUp = el;\r\n    this.log('setVirtualContainer:', el, this);\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //if(this.debug) {\r\n      //this.log('onScroll call', this.onScrollMeasure);\r\n    //}\r\n\r\n    //return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      if(this.onScrollMeasure) {\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n\r\n      this.needCheckAfterAnimation = true;\r\n      return;\r\n    }\r\n\r\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\r\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\r\n    if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\r\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\r\n      this.onScrollMeasure = 0;\r\n\r\n      const scrollTop = this.container.scrollTop;\r\n      this.lastScrollDirection = this.lastScrollTop === scrollTop ? 0 : (this.lastScrollTop < scrollTop ? 1 : -1); // * 1 - bottom, -1 - top\r\n      this.lastScrollTop = scrollTop;\r\n\r\n      if(this.onAdditionalScroll && this.lastScrollDirection !== 0) {\r\n        this.onAdditionalScroll();\r\n      }\r\n      \r\n      if(this.checkForTriggers) {\r\n        this.checkForTriggers();\r\n      }\r\n    });\r\n  };\r\n\r\n  public checkForTriggers = () => {\r\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.onScroll();\r\n      return;\r\n    }\r\n\r\n    const scrollHeight = this.container.scrollHeight;\r\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\r\n      return;\r\n    }\r\n\r\n    const clientHeight = this.container.clientHeight;\r\n    const maxScrollTop = scrollHeight - clientHeight;\r\n    const scrollTop = this.lastScrollTop;\r\n\r\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\r\n\r\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\r\n      this.onScrolledTop();\r\n    }\r\n\r\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\r\n      this.onScrolledBottom();\r\n    }\r\n  };\r\n\r\n  public prepend(...elements: HTMLElement[]) {\r\n    (this.splitUp || this.padding || this.container).prepend(...elements);\r\n  }\r\n\r\n  public append(...elements: HTMLElement[]) {\r\n    (this.splitUp || this.padding || this.container).append(...elements);\r\n  }\r\n\r\n  public getDistanceToEnd() {\r\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\r\n  }\r\n\r\n  get isScrolledDown() {\r\n    return this.getDistanceToEnd() <= 1;\r\n  }\r\n\r\n  set scrollTop(y: number) {\r\n    this.container.scrollTop = y;\r\n  }\r\n  \r\n  get scrollTop() {\r\n    //this.log.trace('get scrollTop');\r\n    return this.container.scrollTop;\r\n  }\r\n  \r\n  get scrollHeight() {\r\n    return this.container.scrollHeight;\r\n  }\r\n}\r\n\r\nexport class ScrollableX extends ScrollableBase {\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\r\n    super(el, logPrefix, container);\r\n\r\n    this.container.classList.add('scrollable-x');\r\n\r\n    if(!isTouchSupported) {\r\n      const scrollHorizontally = (e: any) => {\r\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\r\n          this.container.scrollLeft += e.deltaY / 4;\r\n          cancelEvent(e);\r\n        }\r\n      };\r\n      \r\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport { getDeepProperty } from \"../helpers/object\";\r\nimport { ripple } from \"./ripple\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\n\r\nexport type CheckboxFieldOptions = {\r\n  text?: LangPackKey,\r\n  textArgs?: any[],\r\n  name?: string, \r\n  round?: boolean, \r\n  toggle?: boolean,\r\n  stateKey?: string,\r\n  stateValues?: any[],\r\n  disabled?: boolean,\r\n  checked?: boolean,\r\n  restriction?: boolean,\r\n  withRipple?: boolean,\r\n  withHover?: boolean,\r\n};\r\nexport default class CheckboxField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public span: HTMLSpanElement;\r\n\r\n  constructor(options: CheckboxFieldOptions = {}) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('checkbox-field');\r\n\r\n    if(options.restriction) {\r\n      label.classList.add('checkbox-field-restriction');\r\n    }\r\n\r\n    if(options.round) {\r\n      label.classList.add('checkbox-field-round');\r\n    }\r\n\r\n    if(options.disabled) {\r\n      this.toggleDisability(true);\r\n    }\r\n\r\n    const input = this.input = document.createElement('input');\r\n    input.type = 'checkbox';\r\n    if(options.name) {\r\n      input.id = 'input-' + options.name;\r\n    }\r\n\r\n    if(options.checked) {\r\n      input.checked = true;\r\n    }\r\n\r\n    if(options.stateKey) {\r\n      appStateManager.getState().then(state => {\r\n        const stateValue = getDeepProperty(state, options.stateKey);\r\n        let checked: boolean;\r\n        if(options.stateValues) {\r\n          checked = options.stateValues.indexOf(stateValue) === 1;\r\n        } else {\r\n          checked = stateValue;\r\n        }\r\n\r\n        this.setValueSilently(checked);\r\n\r\n        input.addEventListener('change', () => {\r\n          let value: any;\r\n          if(options.stateValues) {\r\n            value = options.stateValues[input.checked ? 1 : 0];\r\n          } else {\r\n            value = input.checked;\r\n          }\r\n\r\n          appStateManager.setByKey(options.stateKey, value);\r\n        });\r\n      });\r\n    }\r\n\r\n    let span: HTMLSpanElement;\r\n    if(options.text) {\r\n      span = this.span = document.createElement('span');\r\n      span.classList.add('checkbox-caption');\r\n      _i18n(span, options.text, options.textArgs);\r\n    } else {\r\n      label.classList.add('checkbox-without-caption');\r\n    }\r\n\r\n    label.append(input);\r\n\r\n    if(options.toggle) {\r\n      label.classList.add('checkbox-field-toggle');\r\n\r\n      const toggle = document.createElement('div');\r\n      toggle.classList.add('checkbox-toggle');\r\n      label.append(toggle);\r\n    } else {\r\n      const box = document.createElement('div');\r\n      box.classList.add('checkbox-box');\r\n  \r\n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      checkSvg.classList.add('checkbox-box-check');\r\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n      use.setAttributeNS(null, 'href', '#check');\r\n      use.setAttributeNS(null, 'x', '-1');\r\n      checkSvg.append(use);\r\n  \r\n      const bg = document.createElement('div');\r\n      bg.classList.add('checkbox-box-background');\r\n  \r\n      const border = document.createElement('div');\r\n      border.classList.add('checkbox-box-border');\r\n  \r\n      box.append(border, bg, checkSvg);\r\n  \r\n      label.append(box);\r\n    }\r\n\r\n    if(span) {\r\n      label.append(span);\r\n    }\r\n\r\n    if(options.withRipple) {\r\n      label.classList.add('checkbox-ripple', 'hover-effect');\r\n      ripple(label, undefined, undefined, true);\r\n      //label.prepend(input);\r\n    } else if(options.withHover) {\r\n      label.classList.add('hover-effect');\r\n    }\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    /* if(this.checked === checked) {\r\n      return;\r\n    } */\r\n    \r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n\r\n  public toggleDisability(disable: boolean) {\r\n    this.label.classList.toggle('checkbox-disabled', disable);\r\n    return () => this.toggleDisability(!disable);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean) {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpTag(el: any, tag: string): HTMLElement {\r\n  return el.closest(tag);\r\n  /* if(el.tagName === tag) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.tagName === tag) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValue(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, undefined, undefined, entities);\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities) {\r\n    RichTextProcessor.combineSameEntities(entities);\r\n  }\r\n\r\n  //console.log('getRichValue:', value, entities);\r\n\r\n  return {value, entities};\r\n}\r\n\r\nMOUNT_CLASS_TO.getRichValue = getRichValue;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\n\r\nexport type MarkdownType = 'bold' | 'italic' | 'underline' | 'strikethrough' | 'monospace' | 'link' | 'mentionName';\r\nexport type MarkdownTag = {\r\n  match: string,\r\n  entityName: 'messageEntityBold' | 'messageEntityUnderline' | 'messageEntityItalic' | 'messageEntityPre' | 'messageEntityStrike' | 'messageEntityTextUrl' | 'messageEntityMentionName';\r\n};\r\nexport const markdownTags: {[type in MarkdownType]: MarkdownTag} = {\r\n  bold: {\r\n    match: '[style*=\"font-weight\"], b',\r\n    entityName: 'messageEntityBold'\r\n  },\r\n  underline: {\r\n    match: '[style*=\"underline\"], u',\r\n    entityName: 'messageEntityUnderline'\r\n  },\r\n  italic: {\r\n    match: '[style*=\"italic\"], i',\r\n    entityName: 'messageEntityItalic'\r\n  },\r\n  monospace: {\r\n    match: '[style*=\"monospace\"], [face=\"monospace\"], pre',\r\n    entityName: 'messageEntityPre'\r\n  },\r\n  strikethrough: {\r\n    match: '[style*=\"line-through\"], strike',\r\n    entityName: 'messageEntityStrike'\r\n  },\r\n  link: {\r\n    match: 'A:not(.follow)',\r\n    entityName: 'messageEntityTextUrl'\r\n  },\r\n  mentionName: {\r\n    match: 'A.follow',\r\n    entityName: 'messageEntityMentionName'\r\n  }\r\n};\r\n\r\nexport default function getRichElementValue(node: HTMLElement, lines: string[], line: string[], selNode?: Node, selOffset?: number, entities?: MessageEntity[], offset = {offset: 0}) {\r\n  if(node.nodeType === 3) { // TEXT\r\n    const nodeValue = node.nodeValue;\r\n\r\n    if(selNode === node) {\r\n      line.push(nodeValue.substr(0, selOffset) + '\\x01' + nodeValue.substr(selOffset));\r\n    } else {\r\n      line.push(nodeValue);\r\n    }\r\n\r\n    if(entities && nodeValue.trim()) {\r\n      if(node.parentNode) {\r\n        const parentElement = node.parentElement;\r\n        \r\n        for(const type in markdownTags) {\r\n          const tag = markdownTags[type as MarkdownType];\r\n          const closest = parentElement.closest(tag.match + ', [contenteditable]');\r\n          if(closest && closest.getAttribute('contenteditable') === null) {\r\n            if(tag.entityName === 'messageEntityTextUrl') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                url: (parentElement as HTMLAnchorElement).href,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            } else if(tag.entityName === 'messageEntityMentionName') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                offset: offset.offset,\r\n                length: nodeValue.length,\r\n                user_id: +parentElement.dataset.follow\r\n              });\r\n            } else {\r\n              entities.push({\r\n                _: tag.entityName as any,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    offset.offset += nodeValue.length;\r\n\r\n    return;\r\n  }\r\n\r\n  if(node.nodeType !== 1) { // NON-ELEMENT\r\n    return;\r\n  }\r\n\r\n  const isSelected = (selNode === node);\r\n  const isBlock = node.tagName === 'DIV' || node.tagName === 'P';\r\n  if(isBlock && line.length || node.tagName === 'BR') {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  } else if(node.tagName === 'IMG') {\r\n    const alt = (node as HTMLImageElement).alt;\r\n    if(alt) {\r\n      line.push(alt);\r\n      offset.offset += alt.length;\r\n    }\r\n  }\r\n\r\n  if(isSelected && !selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  let curChild = node.firstChild as HTMLElement;\r\n  while(curChild) {\r\n    getRichElementValue(curChild, lines, line, selNode, selOffset, entities, offset);\r\n    curChild = curChild.nextSibling as any;\r\n  }\r\n\r\n  if(isSelected && selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  if(isBlock && line.length) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAttribute(el: any, attribute: string): HTMLElement {\r\n  return el.closest(`[${attribute}]`);\r\n  /* if(el.getAttribute(attribute) !== null) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.getAttribute(attribute) !== null) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport getRichValue from \"./getRichValue\";\r\n\r\nexport default function isInputEmpty(element: HTMLElement) {\r\n  if(element.hasAttribute('contenteditable') || element.tagName !== 'INPUT') {\r\n    /* const value = element.innerText;\r\n\r\n    return !value.trim() && !serializeNodes(Array.from(element.childNodes)).trim(); */\r\n    return !getRichValue(element, false).value.trim();\r\n  } else {\r\n    return !(element as HTMLInputElement).value.trim();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\r\nimport I18n from \"../lib/langPack\";\r\n\r\nlet sortedCountries: HelpCountry[];\r\ntype PrefixCountry = {country: HelpCountry, code: HelpCountryCode};\r\nconst prefixes: Map<string, PrefixCountry> = new Map();\r\nlet maxPrefixLength = 0;\r\nconst setPrefix = (country: HelpCountry, code: HelpCountryCode, prefix: string = '') => {\r\n  prefix = code.country_code + prefix;\r\n  /* if(prefixes.has(prefix)) {\r\n    console.error('asdasdasd', prefixes.get(prefix), country, code);\r\n  } */\r\n  maxPrefixLength = Math.max(maxPrefixLength, prefix.length);\r\n  prefixes.set(prefix, {country, code});\r\n};\r\n\r\nexport function formatPhoneNumber(originalStr: string): {\r\n  formatted: string,\r\n  country: HelpCountry,\r\n  code: HelpCountryCode,\r\n  leftPattern: string\r\n} {\r\n  if(!prefixes.size) {\r\n    I18n.countriesList.forEach(country => {\r\n      country.country_codes.forEach(code => {\r\n        const s = {country, code};\r\n\r\n        if(code.prefixes) {\r\n          code.prefixes.forEach(prefix => {\r\n            setPrefix(country, code, prefix);\r\n          });\r\n        } else {\r\n          setPrefix(country, code);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // return {formatted: originalStr, country: undefined as any, leftPattern: ''};\r\n  let str = originalStr.replace(/\\D/g, '');\r\n  let phoneCode = str.slice(0, maxPrefixLength);\r\n  \r\n  ////console.log('str', str, phoneCode);\r\n  // if(!sortedCountries) {\r\n  //   sortedCountries = I18n.countriesList.slice().sort((a, b) => b.country_codes[0].country_code.length - a.country_codes[0].country_code.length);\r\n  // }\r\n  \r\n  // let country = sortedCountries.find((c) => {\r\n  //   return c.country_codes.find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\r\n  // });\r\n\r\n  let prefixCountry: PrefixCountry;\r\n  for(let i = phoneCode.length - 1; i >= 0; --i) { // lookup for country by prefix\r\n    prefixCountry = prefixes.get(phoneCode.slice(0, i + 1));\r\n    if(prefixCountry) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!prefixCountry) {\r\n    return {\r\n      formatted: str, \r\n      country: undefined, \r\n      code: undefined, \r\n      leftPattern: ''\r\n    };\r\n  }\r\n\r\n  // country = /* PhoneCodesMain[country.phoneCode] ||  */country;\r\n  const country = prefixCountry.country;\r\n  \r\n  const patterns = prefixCountry.code.patterns || [];\r\n  const searchForPattern = str.slice(prefixCountry.code.country_code.length); // splice country code\r\n  let pattern = '', mostMatchedPatternMatches = 0, mostMatchedPattern = '';\r\n  for(let i = patterns.length - 1; i >= 0; --i) {\r\n    pattern = patterns[i];\r\n\r\n    const _pattern = pattern.replace(/ /g, '');\r\n    let patternMatches = 0;\r\n    for(let k = 0, length = Math.min(searchForPattern.length, _pattern.length); k < length; ++k) {\r\n      if(searchForPattern[k] === _pattern[k] || _pattern[k] === 'X') {\r\n        ++patternMatches;\r\n      } else {\r\n        patternMatches = 0;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(patternMatches > mostMatchedPatternMatches) {\r\n      mostMatchedPatternMatches = patternMatches;\r\n      mostMatchedPattern = pattern;\r\n    }\r\n  }\r\n\r\n  pattern = mostMatchedPattern || pattern;\r\n  pattern = pattern.replace(/\\d/g, 'X');\r\n\r\n  pattern = prefixCountry.code.country_code + ' ' + pattern;\r\n  // let pattern = country.pattern || country.phoneCode;\r\n  pattern.split('').forEach((symbol, idx) => {\r\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\r\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\r\n    }\r\n  });\r\n  \r\n  /* if(country.pattern) {\r\n    str = str.slice(0, country.pattern.length);\r\n  } */\r\n\r\n  let leftPattern = pattern && pattern.length > str.length ? pattern.slice(str.length) : '';\r\n  if(leftPattern) {\r\n    /* const length = str.length;\r\n    leftPattern = leftPattern.split('').map((_, idx) => (length + idx).toString().slice(-1)).join(''); */\r\n    leftPattern = leftPattern.replace(/X/g, '‒');\r\n    // leftPattern = leftPattern.replace(/X/g, '0');\r\n  }\r\n  \r\n  return {formatted: str, country, code: prefixCountry.code, leftPattern};\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { isTouchSupported } from \"../touchSupport\";\r\n\r\nexport default function placeCaretAtEnd(el: HTMLElement, ignoreTouchCheck = false) {\r\n  if(isTouchSupported && (!ignoreTouchCheck || document.activeElement !== el)) {\r\n    return;\r\n  }\r\n  \r\n  el.focus();\r\n  if(typeof window.getSelection !== \"undefined\" && typeof document.createRange !== \"undefined\") {\r\n    var range = document.createRange();\r\n    range.selectNodeContents(el);\r\n    range.collapse(false);\r\n    var sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n    // @ts-ignore\r\n  } else if(typeof document.body.createTextRange !== \"undefined\") {\r\n    // @ts-ignore\r\n    var textRange = document.body.createTextRange();\r\n    textRange.moveToElementText(el);\r\n    textRange.collapse(false);\r\n    textRange.select();\r\n  }\r\n}\r\n"],"sourceRoot":""}
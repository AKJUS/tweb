{"version":3,"file":"scrollable-b5735114.js","sources":["../src/components/scrollable.ts"],"sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport IS_TOUCH_SUPPORTED from '../environment/touchSupport';\nimport {logger, LogTypes} from '../lib/logger';\nimport fastSmoothScroll, {ScrollOptions} from '../helpers/fastSmoothScroll';\nimport useHeavyAnimationCheck from '../hooks/useHeavyAnimationCheck';\nimport cancelEvent from '../helpers/dom/cancelEvent';\n/*\nvar el = $0;\nvar height = 0;\nvar checkUp = false;\n\ndo {\n  height += el.scrollHeight;\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\nconsole.log(height);\n*/\n\n/*\nArray.from($0.querySelectorAll('.bubble-content')).forEach((_el) => {\n  //_el.style.display = '';\n  //return;\n\n  let el = _el.parentElement;\n  let height = el.scrollHeight;\n  let width = el.scrollWidth;\n  el.style.width = width + 'px';\n  el.style.height = height + 'px';\n  _el.style.display = 'none';\n});\n*/\n\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\nconst scrollsIntersector = new IntersectionObserver((entries) => {\n  for(let entry of entries) {\n    const scrollable = scrollables.get(entry.target as HTMLElement);\n\n    if(entry.isIntersecting) {\n      scrollable.isVisible = true;\n    } else {\n      scrollable.isVisible = false;\n\n      if(!isInDOM(entry.target)) {\n        scrollsIntersector.unobserve(scrollable.container);\n        scrollables.delete(scrollable.container);\n      }\n    }\n  }\n}); */\n\nconst SCROLL_THROTTLE = /* IS_ANDROID ? 200 :  */24;\n\nexport class ScrollableBase {\n  protected log: ReturnType<typeof logger>;\n\n  public splitUp: HTMLElement;\n  public onScrollMeasure: number = 0;\n\n  public lastScrollPosition: number = 0;\n  public lastScrollDirection: number = 0;\n\n  public onAdditionalScroll: () => void;\n  public onScrolledTop: () => void;\n  public onScrolledBottom: () => void;\n\n  public isHeavyAnimationInProgress = false;\n  protected needCheckAfterAnimation = false;\n\n  public checkForTriggers?: () => void;\n\n  public scrollProperty: 'scrollTop' | 'scrollLeft';\n\n  protected removeHeavyAnimationListener: () => void;\n  protected addedScrollListener: boolean;\n\n  constructor(public el?: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\n    this.container.classList.add('scrollable');\n\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\n\n    if(el) {\n      Array.from(el.children).forEach((c) => this.container.append(c));\n\n      el.append(this.container);\n    }\n    // this.onScroll();\n  }\n\n  public addScrollListener() {\n    if(this.addedScrollListener) {\n      return;\n    }\n\n    this.addedScrollListener = true;\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\n  }\n\n  public removeScrollListener() {\n    if(!this.addedScrollListener) {\n      return;\n    }\n\n    this.addedScrollListener = false;\n    this.container.removeEventListener('scroll', this.onScroll, {capture: true});\n  }\n\n  public setListeners() {\n    if(this.removeHeavyAnimationListener) {\n      return;\n    }\n\n    window.addEventListener('resize', this.onScroll, {passive: true});\n    this.addScrollListener();\n\n    this.removeHeavyAnimationListener = useHeavyAnimationCheck(() => {\n      this.isHeavyAnimationInProgress = true;\n\n      if(this.onScrollMeasure) {\n        this.cancelMeasure();\n        this.needCheckAfterAnimation = true;\n      }\n    }, () => {\n      this.isHeavyAnimationInProgress = false;\n\n      if(this.needCheckAfterAnimation) {\n        this.onScroll();\n        this.needCheckAfterAnimation = false;\n      }\n    });\n  }\n\n  public removeListeners() {\n    if(!this.removeHeavyAnimationListener) {\n      return;\n    }\n\n    window.removeEventListener('resize', this.onScroll);\n    this.removeScrollListener();\n\n    this.removeHeavyAnimationListener();\n    this.removeHeavyAnimationListener = undefined;\n  }\n\n  public destroy() {\n    this.removeListeners();\n    this.onAdditionalScroll = undefined;\n    this.onScrolledTop = undefined;\n    this.onScrolledBottom = undefined;\n  }\n\n  public append(...args: Parameters<HTMLElement['append']>) {\n    this.container.append(...args);\n  }\n\n  public scrollIntoViewNew(options: Omit<ScrollOptions, 'container'>) {\n    // return Promise.resolve();\n    // this.removeListeners();\n    return fastSmoothScroll({\n      ...options,\n      container: this.container\n    });/* .finally(() => {\n      this.setListeners();\n    }); */\n  }\n\n  public onScroll = () => {\n    // if(this.debug) {\n    // this.log('onScroll call', this.onScrollMeasure);\n    // }\n\n    // return;\n\n    if(this.isHeavyAnimationInProgress) {\n      this.cancelMeasure();\n      this.needCheckAfterAnimation = true;\n      return;\n    }\n\n    // if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\n    if(this.onScrollMeasure) return;\n    // if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\n    // this.onScrollMeasure = window.requestAnimationFrame(() => {\n    this.onScrollMeasure = window.setTimeout(() => {\n      this.onScrollMeasure = 0;\n\n      const scrollPosition = this.container[this.scrollProperty];\n      this.lastScrollDirection = this.lastScrollPosition === scrollPosition ? 0 : (this.lastScrollPosition < scrollPosition ? 1 : -1); // * 1 - bottom, -1 - top\n      this.lastScrollPosition = scrollPosition;\n\n      // lastScrollDirection check is useless here, every callback should decide on its own\n      if(this.onAdditionalScroll/*  && this.lastScrollDirection !== 0 */) {\n        this.onAdditionalScroll();\n      }\n\n      if(this.checkForTriggers) {\n        this.checkForTriggers();\n      }\n    // });\n    }, SCROLL_THROTTLE);\n  };\n\n  public cancelMeasure() {\n    if(this.onScrollMeasure) {\n      // window.cancelAnimationFrame(this.onScrollMeasure);\n      clearTimeout(this.onScrollMeasure);\n      this.onScrollMeasure = 0;\n    }\n  }\n}\n\nexport type SliceSides = 'top' | 'bottom';\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\n\nexport default class Scrollable extends ScrollableBase {\n  public padding: HTMLElement;\n\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\n\n  constructor(el?: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\n    super(el, logPrefix);\n\n    /* if(withPaddingContainer) {\n      this.padding = document.createElement('div');\n      this.padding.classList.add('scrollable-padding');\n      Array.from(this.container.children).forEach((c) => this.padding.append(c));\n      this.container.append(this.padding);\n    } */\n\n    this.container.classList.add('scrollable-y');\n    this.setListeners();\n    this.scrollProperty = 'scrollTop';\n  }\n\n  public attachBorderListeners(setClassOn = this.container) {\n    const cb = this.onAdditionalScroll;\n    this.onAdditionalScroll = () => {\n      cb?.();\n      setClassOn.classList.toggle('scrolled-top', !this.scrollTop);\n      setClassOn.classList.toggle('scrolled-bottom', this.isScrolledDown);\n    };\n\n    setClassOn.classList.add('scrolled-top', 'scrolled-bottom', 'scrollable-y-bordered');\n  }\n\n  public setVirtualContainer(el?: HTMLElement) {\n    this.splitUp = el;\n    this.log('setVirtualContainer:', el, this);\n  }\n\n  public checkForTriggers = () => {\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\n\n    if(this.isHeavyAnimationInProgress) {\n      this.onScroll();\n      return;\n    }\n\n    const scrollHeight = this.container.scrollHeight;\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\n      return;\n    }\n\n    const clientHeight = this.container.clientHeight;\n    const maxScrollTop = scrollHeight - clientHeight;\n    const scrollTop = this.lastScrollPosition;\n\n    // this.log('checkForTriggers:', scrollTop, maxScrollTop);\n\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\n      this.onScrolledTop();\n    }\n\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\n      this.onScrolledBottom();\n    }\n  };\n\n  public prepend(...elements: (HTMLElement | DocumentFragment)[]) {\n    (this.splitUp || this.padding || this.container).prepend(...elements);\n  }\n\n  public append(...elements: (HTMLElement | DocumentFragment)[]) {\n    (this.splitUp || this.padding || this.container).append(...elements);\n  }\n\n  public getDistanceToEnd() {\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\n  }\n\n  get isScrolledDown() {\n    return this.getDistanceToEnd() <= 1;\n  }\n\n  set scrollTop(y: number) {\n    this.container.scrollTop = y;\n  }\n\n  get scrollTop() {\n    // this.log.trace('get scrollTop');\n    return this.container.scrollTop;\n  }\n\n  public setScrollTopSilently(value: number) {\n    this.lastScrollPosition = value;\n    this.ignoreNextScrollEvent();\n\n    this.scrollTop = value;\n  }\n\n  public ignoreNextScrollEvent() {\n    if(this.removeHeavyAnimationListener) {\n      this.removeScrollListener();\n      this.container.addEventListener('scroll', (e) => {\n        cancelEvent(e);\n        this.addScrollListener();\n      }, {capture: true, passive: false, once: true});\n    }\n  }\n\n  get scrollHeight() {\n    return this.container.scrollHeight;\n  }\n}\n\nexport class ScrollableX extends ScrollableBase {\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\n    super(el, logPrefix, container);\n\n    this.container.classList.add('scrollable-x');\n\n    if(!IS_TOUCH_SUPPORTED) {\n      const scrollHorizontally = (e: WheelEvent) => {\n        e.stopPropagation();\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\n          this.container.scrollLeft += e.deltaY / 4;\n          cancelEvent(e);\n        }\n      };\n\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\n    }\n\n    this.scrollProperty = 'scrollLeft';\n  }\n}\n"],"names":["SCROLL_THROTTLE","ScrollableBase","el","logPrefix","container","scrollPosition","logger","LogTypes","c","useHeavyAnimationCheck","args","options","fastSmoothScroll","Scrollable","onScrollOffset","withPaddingContainer","scrollHeight","clientHeight","maxScrollTop","scrollTop","setClassOn","cb","elements","y","value","e","cancelEvent","ScrollableX","splitCount","IS_TOUCH_SUPPORTED","scrollHorizontally"],"mappings":"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"}
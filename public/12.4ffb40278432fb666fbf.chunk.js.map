{"version":3,"sources":["webpack:///./src/helpers/dom/cancelEvent.ts","webpack:///./src/helpers/dom/clickEvent.ts","webpack:///./src/helpers/touchSupport.ts","webpack:///./src/components/button.ts","webpack:///./src/lib/appManagers/appStateManager.ts","webpack:///./src/components/misc.ts","webpack:///./src/helpers/mediaSizes.ts","webpack:///./src/components/ripple.ts","webpack:///./src/helpers/date.ts","webpack:///./src/lib/storages/dialogs.ts","webpack:///./src/lib/storages/filters.ts","webpack:///./src/helpers/formatCallDuration.ts","webpack:///./src/helpers/formatDuration.ts","webpack:///./src/lib/appManagers/appMessagesManager.ts","webpack:///./src/lib/rlottie/rlottie.worker.ts","webpack:///./src/lib/lottieLoader.ts","webpack:///./src/lib/appManagers/appPhotosManager.ts","webpack:///./src/components/appNavigationController.ts","webpack:///./src/lib/appManagers/appDownloadManager.ts","webpack:///./src/hooks/useHeavyAnimationCheck.ts","webpack:///./src/helpers/dom/isInDOM.ts","webpack:///./src/components/peerTitle.ts","webpack:///./src/helpers/fastSmoothScroll.ts","webpack:///./src/components/animationIntersector.ts","webpack:///./src/helpers/number.ts","webpack:///./src/helpers/dom/whichChild.ts","webpack:///./src/lib/appManagers/appDocsManager.ts","webpack:///./src/pages/pagesManager.ts","webpack:///./src/pages/page.ts","webpack:///./src/helpers/array.ts","webpack:///./src/helpers/sequentialDom.ts","webpack:///./src/lib/mtproto/serverTimeManager.ts","webpack:///./src/lib/appManagers/appProfileManager.ts","webpack:///./src/components/popups/index.ts","webpack:///./src/helpers/dom/renderImageFromUrl.ts","webpack:///./src/countries.ts","webpack:///./src/components/visibilityIntersector.ts","webpack:///./src/components/lazyLoadQueue.ts","webpack:///./src/lib/appManagers/appNotificationsManager.ts","webpack:///./src/components/singleTransition.ts","webpack:///./src/helpers/calcImageInBox.ts","webpack:///./src/pages/loginPage.ts","webpack:///./src/lib/mtproto/referenceDatabase.ts","webpack:///./src/components/preloader.ts","webpack:///./src/helpers/fileName.ts","webpack:///./src/lib/filemanager.ts","webpack:///./src/lib/cacheStorage.ts","webpack:///./src/components/horizontalMenu.ts","webpack:///./src/components/transition.ts","webpack:///./src/helpers/files.ts","webpack:///./src/helpers/animation.ts","webpack:///./src/helpers/slicedArray.ts","webpack:///./src/helpers/dom/findUpAsChild.ts","webpack:///./src/lib/appManagers/appPollsManager.ts","webpack:///./src/helpers/heavyQueue.ts","webpack:///./src/helpers/blur.ts","webpack:///./src/lib/appManagers/appDraftsManager.ts","webpack:///./src/components/middleEllipsis.ts","webpack:///./src/lib/appManagers/appAvatarsManager.ts","webpack:///./src/lib/opusDecodeController.ts","webpack:///./src/lib/appManagers/appWebPagesManager.ts","webpack:///./src/helpers/dom/htmlToDocumentFragment.ts","webpack:///./src/lib/cropper.ts","webpack:///./src/components/popups/avatar.ts","webpack:///./src/vendor/leemon.ts","webpack:///./src/lib/mtproto/bin_utils.ts","webpack:///./src/pages/pageSignUp.ts"],"names":["cancelEvent","event","window","originalEvent","stopPropagation","preventDefault","returnValue","cancelBubble","err","CLICK_EVENT_NAME","attachClickEvent","elem","callback","options","add","listenerSetter","bind","addEventListener","removeManual","removeEventListener","touchMouseDown","detachClickEvent","isTouchSupported","DocumentTouch","document","className","button","createElement","asDiv","icon","noRipple","rippleSquare","classList","onlyMobile","disabled","setAttribute","text","append","STATE_VERSION","version","STATE_INIT","allDialogsLoaded","pinnedOrders","contactsList","updates","filters","maxSeenMsgId","stateCreatedTime","Date","now","recentEmoji","topPeers","recentSearch","authState","_","hiddenPinnedMessages","settings","messagesTextSize","sendShortcut","animationsEnabled","autoDownload","contacts","private","groups","channels","autoPlay","gifs","videos","stickers","suggest","loop","emoji","big","themes","name","background","type","blur","slug","highlightningColor","color","theme","notifications","sound","keepSigned","ALL_KEYS","Object","keys","REFRESH_KEYS","AppStateManager","super","log","neededPeers","Map","singlePeerMap","storages","users","chats","dialogs","storagesResults","storage","this","loadSavedState","loaded","console","time","Promise","resolve","storagesKeys","storagesPromises","map","key","getAll","promises","get","concat","all","then","arr","state","i","length","value","undefined","pushToState","splice","auth","shift","shiftedWebKAuth","push","values","dcID","baseDcId","date","id","obj","forEach","idx","set","dispatchEvent","s","r","hasOwnProperty","nightTheme","find","t","missingKey","timeEnd","catch","first","split","direct","peerId","limit","has","Set","keepPeerSingle","existsPeerId","delete","size","appStateManager","putPreloader","returnDiv","html","div","innerHTML","appendChild","insertAdjacentHTML","lastElementChild","setButtonLoader","remove","removeAttribute","sortedCountries","formatPhoneNumber","str","phoneCode","replace","slice","sort","a","b","country","c","indexOf","pattern","symbol","formatted","onMouseMove","e","rect","openedMenu","getBoundingClientRect","clientX","clientY","diffX","right","left","diffY","bottom","top","closeBtnMenu","onClick","parentElement","menuOverlay","openedMenuOnClose","removeByType","openBtnMenu","menuElement","onClose","pushItem","onPop","canAnimate","insertBefore","once","positionMenu","pageX","pageY","side","scrollWidth","menuWidth","scrollHeight","menuHeight","body","windowWidth","width","windowHeight","height","isMobile","verticalSide","sides","x","intermediateX","y","intermediateY","possibleSides","style","attachContextMenuListener","element","timeout","capture","onCancel","clearTimeout","touches","setTimeout","ScreenSize","MediaSize","boxSize","fitted","aspect","makeMediaSize","MediaSizes","screenSizes","mobile","medium","large","sizes","handhelds","regular","webpage","album","esgSticker","animatedSticker","staticSticker","emojiSticker","desktop","handleResize","innerWidth","activeScreen","wasScreen","active","rAF","cancelAnimationFrame","requestAnimationFrame","mediaSizes","rippleClickId","ripple","onEnd","prepend","querySelector","handler","contains","drawRipple","startTime","clickId","duration","getComputedStyle","getPropertyValue","elapsedTime","cb","mutate","delay","Math","max","touchStartFired","clickX","clickY","sqrt","abs","isRippleUnneeded","target","includes","tagName","touchEnd","passive","dataset","months","days","ONE_DAY","getWeekNumber","d","UTC","getFullYear","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","getTime","formatDateAccordingToToday","timestamp","timeStr","getHours","getMinutes","getDay","formatDateAccordingToTodayNew","today","hour","minute","year","day","month","weekday","IntlDateElement","formatTime","getFullDate","joiner","monthAsNumber","noSeconds","getSeconds","leadingZero","noTime","tsNow","seconds","floor","yearPattern","RegExp","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","fillTipDates","query","dates","q","trim","toLowerCase","setFullYear","setHours","minDate","maxDate","title","dayOfWeek","setDate","formatWeekLong","getDayOfWeek","distance","setTime","matches","exec","g1","g2","k","createForDayMonth","createForMonthYear","selectedYear","currentYear","g3","parseInt","validDateForMonth","formatterYearMax","k1","setMonth","formatterMonthYear","formatterDayMonth","appMessagesManager","appChatsManager","appPeersManager","appUsersManager","appDraftsManager","appNotificationsManager","apiUpdatesManager","serverTimeManager","byFolders","dialogsIndex","cachedResults","count","folderId","onUpdateFolderPeers","update","folder_peers","folderPeer","folder_id","peer","getPeerId","dialog","dropDialog","pFlags","pinned","findAndSplice","p","generateIndexForDialog","pushDialog","scheduleHandleNewDialogs","onUpdateDialogPinned","getDialogOnly","onUpdatePinnedDialogs","handleOrder","order","reverse","newPinned","getFolder","invokeApi","dialogsResult","applyDialogs","reset","getSelf","peerText","getPeerSearchText","indexObject","addMultipleEventsListeners","updateFolderPeers","updateDialogPinned","updatePinnedDialogs","getState","top_message","getServerMessageId","topMessage","saveMessages","saveDialog","getMessageByPeer","deleted","reloadConversation","dialogsOffsetDate","0","1","dialogsNum","filter","filtersStorage","testDialogForFilter","index","pinnedIndex","pinned_peers","generateDialogIndex","generateDialogPinnedDateByIndex","folders","folder","findIndex","serverTimeOffset","justReturn","message","channelId","isChannel","topDate","generateDialogPinnedDate","channel","getChat","draft","foundIndex","getOutputPeer","read_inbox_max_id","read_outbox_max_id","unread_count","unread_mentions_count","notify_settings","historyStorage","getHistoryStorage","history","incomingMessage","mid","is_outgoing","fromId","requestPeer","pts","newPts","getChannelState","offsetDate","pos","setDialogToState","foundDialog","getDialog","saveApiUsers","saveApiChats","messages","updatedDialogs","topPendingMessage","pendingTopMsgs","maxId","dropped","newUpdatesAfterReloadToHandle","saveUpdate","error","assign","chat","kicked","generateMessageId","generateTempMessageId","from_id","peer_id","out","isOutgoing","migrated_to","deactivated","migratedToPeer","migratedFromTo","migratedToFrom","wasDialogBefore","saveDraft","unread","isEnd","Bottom","insertSlice","setEnd","unshift","readMaxId","readOutboxMaxId","savePeerSettings","addChannelState","offsetIndex","realFolderId","curDialogStorage","results","search","d1","d2","offset","loadedAll","isDialogsLoaded","getTopMessages","messagesDialogs","rootScope","orderIndex","onUpdateDialogFilter","saveDialogFilter","onUpdateDialogFilterOrder","filterId","setOrderIndex","updateDialogFilter","updateDialogFilters","oldFilters","getDialogFilters","_filterId","updateDialogFilterOrder","exclude_peers","include_peers","exclude_archived","exclude_read","unread_mark","exclude_muted","isPeerLocalMuted","broadcasts","isBroadcast","isAnyGroup","isBot","bots","non_contacts","isContact","flags","getOutputDialogFilter","bool","getInputPeerById","overwrite","CALL_DURATION_LANG_KEYS","m","h","w","formatCallDuration","elements","showLast","o","modulus","formatDuration","fragment","messagesStorageByPeerId","groupedMessagesStorage","scheduledMessagesStorage","historiesStorage","threadsStorage","searchesStorage","pinnedMessages","threadsServiceMessagesIdsStorage","threadsToReplies","pendingByRandomId","pendingByMessageId","pendingAfterMsgs","tempNum","tempFinalizeCallbacks","sendSmthLazyLoadQueue","needSingleMessages","fetchSingleMessagesPromise","maxSeenId","newMessagesHandleTimeout","newMessagesToHandle","newDialogsToHandle","notificationsHandlePromise","notificationsToHandle","reloadConversationsPeers","logger","Error","Debug","Log","Warn","groupedTempId","typings","handleNewMessages","handleNewDialogs","newMaxSeenId","dialogsStorage","incrementMaxSeenId","handleNotifications","_peerId","idle","isIDLE","notifyPeerToHandle","getNotifyPeerTypeSettings","getNotifySettings","getInputNotifyPeerById","peerTypeNotifySettings","notifyAboutMessage","fwdCount","onUpdateMessageId","randomId","random_id","pendingData","tempId","threadId","getMessageFromStorage","Boolean","finalizePendingMessageCallbacks","onUpdateNewMessage","getMessagePeer","getMessagesStorage","isLocalThreadUpdate","threadKey","getThreadKey","good","isInChat","pendingMessage","checkPendingMessage","updateMessageRepliesIfNeeded","findSlice","firstSlice","mergeReplyKeyboard","forceUserOnline","handleNewMessage","inboxUnread","setDialogTopMessage","notifyPeer","fwd_from","onUpdateDialogUnreadMark","onUpdateEditMessage","oldMessage","newMessage","handleEditedMessage","isTopMessage","clear_history","grouped_id","onUpdateReadHistory","channel_id","max_id","read_max_id","top_msg_id","isOut","stillUnreadCount","still_unread_count","newUnreadCount","foundAffected","repliesKey","n","updateMessage","messageId","replyTo","reply_to","reply_to_top_id","reply_to_msg_id","cancel","getReadMaxIdIfUnread","threadKeyPart","onUpdateReadMessagesContents","mids","getMessageById","media_unread","setDialogToStateIfMessageIsTop","onUpdateChannelAvailableMessages","msgId","available_min_id","onUpdateDeleteMessages","clearCache","params","threadKeys","historyUpdated","handleDeletedMessages","threadsStorages","Array","from","splitted","msgs","onUpdateChannel","needDialog","username","onUpdateChannelReload","onUpdateChannelMessageViews","views","onUpdateServiceNotification","inbox_date","media","entities","hasUser","verified","access_hash","first_name","phone","onUpdatePinnedMessages","missingMessages","wrapSingleMessage","finally","werePinned","onUpdateNotifySettings","onUpdateNewScheduledMessage","isScheduled","onUpdateDeleteScheduledMessages","updateMessageID","updateNewDiscussionMessage","updateNewMessage","updateNewChannelMessage","updateDialogUnreadMark","updateEditMessage","updateEditChannelMessage","updateReadChannelDiscussionInbox","updateReadChannelDiscussionOutbox","updateReadHistoryInbox","updateReadHistoryOutbox","updateReadChannelInbox","updateReadChannelOutbox","updateChannelReadMessagesContents","updateReadMessagesContents","updateChannelAvailableMessages","updateDeleteMessages","updateDeleteChannelMessages","updateChannel","updateChannelReload","updateChannelMessageViews","updateServiceNotification","updatePinnedMessages","updatePinnedChannelMessages","updateNotifySettings","updateNewScheduledMessage","updateDeleteScheduledMessages","getConversationsAll","filterFunc","eventData","appWebPagesManager","getWebPage","sendEntites","entity","user_id","getUserInput","callbackName","finalize","deferred","invokeAfterMessageIsSent","editMessage","parseMarkdown","schedule_date","scheduleDate","is_scheduled","newMedia","getInputEntities","no_webpage","noWebPage","processUpdateMessage","handled","reject","replyToMsgId","webPage","sendText","getPeerMigratedTo","viaBotId","generateOutgoingMessage","toggleError","on","send","sentRequestOptions","apiPromise","afterMessageId","invokeApiAfter","query_id","queryId","resultId","clear_draft","clearDraft","silent","wrapMessageEntities","seq","pts_count","local","beforeMessageSending","file","attachType","apiFileName","fileType","mime_type","fileName","File","isDocument","Blob","caption","attributes","isPhoto","photo","actionName","isVoiceMessage","attribute","voice","waveform","isMedia","photoSize","location","cacheContext","appDownloadManager","getCacheContext","downloaded","url","objectURL","appPhotosManager","savePhoto","videoAttribute","round_message","isRoundMessage","file_name","thumbs","thumb","thumbURL","thumbBlob","thumbCacheContext","appDocsManager","saveDoc","preloader","attachMethod","tryAgainOnFail","isUpload","sentDeferred","attachPromise","uploaded","cancelPendingMessage","setTyping","uploadPromise","promise","file_reference","inputMedia","load","thumbUploadPromise","upload","notifyAll","done","total","blob","inputFile","addNotifyListener","progress","percents","isGroupedItem","code","files","sendFile","sendFileDetails","groupId","details","syncDraft","notify","inputPeer","invoke","multiMedia","multi_media","messageMedia","getInput","doc","getMediaInput","inputSingleMedia","inputs","poll","appPollsManager","savePoll","total_voters","getPoll","getScheduledMessagesStorage","generateFromId","generateFlags","random","generateReplyHeader","via_bot_id","reply_markup","replies","generateReplies","pending","replyToTopId","header","channelFull","appProfileManager","chatsFull","linked_chat_id","comments","replies_pts","getPeer","admin_rights","anonymous","post","originalMessage","myId","fwdHeader","from_name","post_author","channel_post","saved_from_msg_id","saved_from_peer","Number","MAX_SAFE_INTEGER","action","outDialogs","getConversations","getDialogs","chatHistoryStorage","getOffsetDate","invokeApiSingle","offset_date","offset_id","offset_peer","hash","noErrorBox","resetPinnedOrder","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setDialogsLoaded","fromPeerId","newMessages","generateForwardHeader","group","from_peer","to_peer","with_my_score","withMyScore","createMessageStorage","reloadConversationsPromise","peers","getInputDialogPeerById","clear","result","justClear","revoke","just_clear","affectedHistory","doFlushHistory","getHistory","historyResult","getChannelInput","getPinnedMessage","getSearch","inputFilter","unpin","oneSide","pm_oneside","unpinAll","unpinAllMessages","totalEntities","foundMessages","getMidsByAlbum","verify","temp","MESSAGE_ID_OFFSET","num","MESSAGE_ID_INCREMENT","l","used","increment","reply_to_mid","overwriting","savedFromPeerId","savedFromMid","savedFrom","fwdFromId","mediaContext","ttl_seconds","saveWebPage","migrateFrom","migrateTo","suffix","video_sizes","chat_id","reason","migrateChecks","apiEntities","fixEmoji","myEntities","parseEntities","mergeEntities","usingMids","plain","highlightWord","parts","addPart","langKey","part","format","el","usingFullAlbum","getMidsByMessage","getAlbumText","emoticon","wrapEmojiText","htmlToDocumentFragment","question","rReply","prefix","game","stickerEmojiRaw","stickerEmoji","actionWrapped","wrapMessageActionTextNew","match","found","regExp","messageWrapped","wrapRichText","noLinebreaks","noLinks","noTextFormat","join","createDocumentFragment","peerTitle","senderTitle","getPeerTitle","wrapPlainText","langPackKey","args","getNameDivHTML","endsWith","peerIds","daysToStart","tomorrowDate","_args","htmlToSpan","userId","anchorHTML","domain","langPack","toggleDialogPin","getDialogPeer","read","hasChat","fromChat","kind","goodMedias","sticker","canMessageBeEdited","hasRights","messageReplyMarkup","lastReplyMarkup","selective","maxOutId","single_use","hidden","canCache","invokeApiCacheable","func","nextRate","backLimit","foundMsgs","filtering","neededContents","neededDocTypes","excludeDocTypes","goodEntities","matchUrl","next_rate","offset_id_offset","method","min_date","max_date","add_offset","min_id","offsetPeerId","offsetId","offsetMessage","offset_rate","searchResult","foundCount","getDiscussionMessage","maxMessageId","serviceStartMessage","is_single","msg_id","filterMessages","generateThreadServiceStartMessage","newDialogsHandlePromise","localMessageIds","creator","editor","megagroup","goodMsgIds","affectedMessages","force","triedToReadMaxId","readPromise","soundReset","getPeerString","readHistory","msgIds","threadMessage","broadcastEventName","finalizePendingMessage","mute","mute_until","canSendToUser","finalMessage","callbacks","getPhoto","newPhoto","newPhotoSize","oldCacheContext","downloadOptions","getPhotoDownloadOptions","fakeDownload","getDoc","newDoc","getInputFileName","polls","tempMessage","notification","peerString","notificationMessage","show_previews","wrapMessageForReply","onclick","tag","peerPhoto","getPeerPhoto","appAvatarsManager","loadAvatar","loadPromise","image","canWriteToPeer","isFetchIntervalNeeded","unsetEnd","haveSlice","sliceMe","fulfilled","Both","fillHistoryStorage","constructSlice","offsetIdOffset","requestHistory","topWasMeantToLoad","isTopEnd","isBottomEnd","Top","oldestMessage","foundSlice","_historyResult","getMessagesResult","fetchSingleMessages","typing","smth","referenceDatabase","deleteContext","deleteWebPageFromPending","groupedStorage","albums","peerMessagesToHandle","deletedMids","Worker_fn","Worker","convert","round","min","worker","reqId","paused","direction","speed","autoplay","frames","cachingDelta","skipRatio","_loop","_autoplay","skipDelta","pixelRatio","devicePixelRatio","needUpscale","noCache","Infinity","canvas","context","getContext","clamped","Uint8ClampedArray","imageData","ImageData","methodName","sendQuery","jsonString","setMainLoop","clearPendingRAF","rafId","renderFirstFrame","pause","curFrame","frameCount","requestFrame","stop","play","lottieLoader","onDestroy","frame","frameNo","data","putImageData","frInterval","delta","frThen","renderFrame2","renderFrame","fps","mainLoopForwards","mainLoopBackwards","currentMethod","frameListener","listenerResults","diff","defaultListener","onError","onerror","onmessage","queryMethodListener","queryMethodArguments","call","postMessage","terminate","queryMethod","transfer","arg","ArrayBuffer","buffer","isWebAssemblySupported","workersLimit","players","workers","curWorkerNum","onPlayerLoaded","rlPlayer","debug","onLoad","warn","onFrame","onPlayerError","animationIntersector","getAnimations","animation","checkAnimation","player","remain","object","toneIndex","replacements","COLORREPLACEMENTS","checkSmth","ty","foundReplacement","applyTo","iterateIt","it","layer","layers","shapes","shape","loadLottieWorkers","fetch","res","arrayBuffer","gzipUncompress","loadAnimationWorker","animationData","race","newAnimationData","JSON","parse","applyReplacements","stringify","container","initPlayer","addAnimation","loadFromData","AppPhotosManager","photos","windowW","windowH","visualViewport","innerHeight","oldPhoto","saveContext","boxWidth","boxHeight","useBytes","bestPhotoSize","inputUser","cacheSeconds","photosResult","photoIds","bytes","isSticker","mimeType","Uint8Array","jpegHeader","jpegTail","URL","createObjectURL","path","getPreviewURLFromBytes","useBlur","getPreviewURLFromThumb","Image","noZoom","choosePhotoSize","isFit","aspectCovered","ignoreCache","getImageFromStrippedThumb","queueId","onlyCache","thumb_size","dcId","dc_id","photoId","fullWidth","fullHeight","download","getDownload","fullPhotoSize","downloadToDisc","appNavigationController","navigations","manual","currentHash","isPossibleSwipe","onHashChange","replaceState","pushState","item","pop","handleItem","onEscape","back","detach","onTouchEnd","onTouchMove","moved","scrollRestoration","noBlurOnPop","ret","findItemByType","noHistory","origin","pathname","single","cacheStorage","downloads","progressCallbacks","uploadId","thumbsCache","cancelDownload","clearDownload","getNewDeferred","response","refreshReference","tryDownload","getFile","downloadFile","ext","uploadFile","onRemove","href","position","clickEvent","createEvent","initMouseEvent","click","open","discFileName","createDownloadAnchor","revokeObjectURL","thumbSize","cache","isAnimating","heavyAnimationPromise","promisesInQueue","dispatchHeavyAnimationEvent","perf","performance","_heavyAnimationPromise","isFulfilled","onHeavyAnimationEnd","interruptHeavyAnimation","getHeavyAnimationPromise","handleAnimationStart","handleAnimationEnd","isInDOM","isConnected","weakMap","WeakMap","peerTitleWeakMap","querySelectorAll","PeerTitle","plainText","onlyFirstName","getUser","FocusDirection","fastSmoothScroll","margin","maxDistance","forceDirection","forceDuration","axis","Static","scrollWithJs","elementRect","containerRect","offsetTop","scrollTop","Up","Down","rectStartKey","rectEndKey","sizeKey","scrollSizeKey","scrollPositionKey","elementPosition","elementSize","containerSize","scrollPosition","scrollSize","remainingPath","startAt","tick","currentPath","transition","visible","byGroups","lockedGroups","onlyOnePlayableGroup","intersectionLockedGroups","videosLocked","observer","IntersectionObserver","entries","entry","isIntersecting","checkAnimations","HTMLVideoElement","src","unobserve","observe","blurred","destroy","removeAnimation","animations","refreshGroup","numberThousandSplitter","toString","formatBytes","decimals","dm","parseFloat","pow","toFixed","formatNumber","clamp","v","whichChild","parentNode","previousElementSibling","docs","savingLottiePreview","onServiceWorkerFail","supportsStreaming","oldDoc","audioTitle","audioPerformer","performer","alt","stickerset","stickerSetInput","isWebpSupported","animated","isServiceWorkerOnline","getFileURL","docId","inputFileLocation","getFileDownloadOptions","preloadPhoto","tryNotToUseBytes","getThumbURL","originalPromise","isPlaySupported","reader","FileReader","onloadend","uint8","decode","readAsArrayBuffer","stickerCachedThumbs","toBlob","downloadDoc","pagesManager","pageId","pagesDiv","getElementById","scrollableDiv","selectTab","horizontalMenu","page","onShown","isAuthPage","display","pageEl","firstElementChild","onFirstMount","onMount","installed","setPage","accumulate","initialValue","reduce","acc","findAndSpliceAll","array","forEachReverse","insertInDescendSortedArray","property","sortProperty","len","sequentialDom","raf","scheduled","scheduleFlush","do","write","timestampNow","midnightNoOffset","midnightOffseted","midnightOffset","timeParams","to","AppProfileManager","usersFull","fullPromises","onUpdateUserTyping","typingsInPeer","cancelAction","getChatFull","updateChatParticipants","participants","chatId","chatFull","updateChatParticipantAdd","_participants","inviter_id","updateChatParticipantDelete","updateUserTyping","updateChatUserTyping","updateChannelUserTyping","fullChat","emptyPhoto","chat_photo","photo_id","invalidateChannelParticipants","megagroupOnlines","override","userFull","user","saveApiUser","profile_photo","about","rAbout","getProfile","getProfileByPeerId","profile","getChannelFull","full_chat","exported_invite","link","exportedInvite","broadcast","participant","channelParticipant","fullChannel","processUserIds","userIds","getUserSearchText","getChannelParticipants","cP","getParticipantPeerId","last_name","updateResult","previous","participants_count","isMegagroup","cached","onlines","getChannelInputPeer","status","PopupElement","buttons","hide","btnClose","overlayIsActive","removeItem","navigationItem","onCloseAfterTimeout","closable","overlayClosable","onOverlayClick","withConfirm","btnConfirm","buttonsDiv","buttonsElements","isDanger","langArgs","isCancel","offsetWidth","addCancelButton","loadedURLs","HTMLImageElement","SVGImageElement","setAttributeNS","backgroundImage","renderImageFromUrl","useCache","isImage","loader","Countries","PhoneCodesMain","VisibilityIntersector","onVisibilityChange","items","locked","changed","getVisible","disconnect","targets","unlock","refresh","parallelLimit","queue","inProcess","lockPromise","unlockResolve","processQueue","_processQueue","loadItem","getItem","processItem","addElement","lock","intersector","unlockAndRefresh","intersectorTimeout","wasSeen","setProcessQueueTimeout","_queue","spliced","notificationsShown","notificationIndex","notificationsCount","soundsPlayed","vibrateSupport","navigator","vibrate","peerSettings","notifyUsers","notifyChats","notifyBroadcasts","faviconEl","head","titleBackup","titleChanged","stopped","pushInited","updateLocalSettings","updSettings","nodesktop","volume","novibrate","nopreview","nopush","needPush","isAvailable","registeredDevice","subscribe","unsubscribe","setSettings","nosound","requestPermission","Notification","mozVibrate","webkitVibrate","notificationsUiSupport","topMessagesDeferred","notifySoundEl","start","newVal","toggleToggler","tokenData","unregisterDevice","registerDevice","notificationData","period","custom","enable","resetTitle","setFavicon","clearInterval","titleInterval","setInterval","ctx","beginPath","arc","PI","fillStyle","fill","fontSize","font","textBaseline","textAlign","fillText","toDataURL","getNotifyPeerTypePromise","inputKey","compare_sound","notifyContactsSignUp","prevFavicon","cloneNode","replaceChild","peerNotifySettings","isMuted","respectType","notifySettings","inputNotify","typeNotifySettings","getPeerLocalSettings","permission","testSound","setLocalNotificationsDisabled","close","onclose","show","nextSoundAt","prevSoundVolume","filename","audio","hidePushNotifications","token_type","tokenType","token","tokenValue","other_uids","app_sandbox","secret","forwards","onTransitionEnd","afterTimeout","toggle","calcImageInBox","imageW","imageH","boxW","boxH","boxedImageW","boxedImageH","LoginPage","imageDiv","titleLangKey","subtitle","subtitleLangKey","withInputWrapper","inputWrapper","contexts","links","addTaskListener","task","originalPayload","getReferenceByLink","newTask","payload","serviceWorker","controller","reference","getContexts","_context","next","ProgressivePreloader","detached","cancelable","streamable","loadFunc","bold","constructContainer","construct","downloadSvg","cancelSvg","circle","setProgress","TRANSITION_TIME","setManual","totalLength","getTotalLength","strokeDasharray","getFileNameByLocation","short_name","thumb_version","volume_id","local_id","encodeURIComponent","blobSupported","fileWriter","fileReader","onload","saveFileCallback","blobParts","truncate","saveToStorage","dbName","useStorage","test","STORAGES","openDatabase","openDbPromise","caches","entryName","timeoutOperation","put","Response","headers","save","rejected","fakeWriter","getFakeFileWriter","saveFile","enabled","deleteAll","tabs","content","transitionTime","scrollableX","proxy","Proxy","apply","that","animate","children","selectTarget","tabContent","canChange","scrollIntoViewNew","prevId","prev","useStripe","indicator","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","transform","tab","slideNavigation","prevTabContent","toRight","slideTabs","scrollableContainer","overflowY","TransitionSlider","isHeavy","animationFunction","Transition","onTransitionEndCallbacks","animationDeferred","animationStarted","self","HTMLElement","_from","onTransitionEndCallback","createPosterFromVideo","video","onseeked","videoWidth","videoHeight","drawImage","currentTime","createPosterForVideo","onloadedmetadata","preloadVideo","onVideoLoad","readyState","HAVE_METADATA","getFilesFromEvent","onlyTypes","scanFiles","isDirectory","directoryReader","createReader","readEntries","itemFile","getAsFile","DataTransferItem","DragEvent","dataTransfer","clipboardData","webkitGetAsEntry","requestFile","accept","input","instances","cancelAnimationByKey","instance","getAnimationInstance","isCancelled","animateSingle","createAnimationInstance","SliceEnd","SlicedArray","sliceConstructor","getSliceConstructor","slices","slicedArray","end","None","last","deleteCount","flatten","lowerBound","upperBound","lowerIndex","upperIndex","foundSliceIndex","sliced","insertIndex","prevSlice","nextSlice","sliceOffset","findSliceOffset","sliceStart","sliceEnd","bottomWasMeantToLoad","topFulfilled","bottomFulfilled","findUpAsChild","parent","updateMessagePoll","poll_id","saveResults","rQuestion","chosenIndexes","answer","chosen","pollId","correctAnswers","solution","solutionEntities","correct_answers","solution_entities","optionIds","answers","option","sendVote","votesList","closed","newPoll","getInputMediaPoll","heavyQueue","processingQueue","addHeavyTask","processHeavyQueue","todo","f","possiblePromise","process","realResult","timedChunk","isFilterAvailable","requireBlurPromise","fastBlurFunc","processBlurNext","img","radius","iterations","alpha","default","blurPromises","dataUri","drafts","getAllDraftPromise","updateDraftMessage","peerID","getKey","getAllDrafts","updatesState","syncLoading","apiDraft","processApiDraft","draft1","draft2","rMessage","wrapDraftText","localDraft","saveOnServer","serverDraft","getDraft","draftsAreEqual","draftObj","isEmptyDraft","saveLocalDraft","testQueue","fontFamily","timeoutId","setTestQueue","testQueueElements","testElement","mapped","firstTime","textLength","multiplier","textWidth","elementWidth","textContent","fontWeight","getTextWidth","newElementWidth","widthChanged","smallerText","smallerWidth","smallerTextLength","half","half1","substr","half2","measureText","MiddleEllipsisElement","customElements","define","savedAvatarURLs","getAvatarPromise","saved","peerPhotoFileLocation","onlyThumb","renderThumbPromise","thumbImage","stripped_thumb","childElementCount","mutateElement","renderPromise","isDialog","avatarAvailable","avatarRendered","innerText","getPeerColorById","abbr","getAbbreviation","initials","putAvatar","opusDecodeController","sampleRate","tasks","keepAlive","isPlaySupportedResult","canPlayType","wavWorker","onTaskEnd","command","buffers","typedArray","loadWorker","loadWavWorker","terminateWorkers","executeNewTask","kill","decoderSampleRate","outputBufferSampleRate","wavBitDepth","wavSampleRate","pages","withWaveform","pushDecodeTask","dataBlob","webpages","pendingWebPages","updateWebPage","apiWebPage","siteName","site_name","shortTitle","author","rTitle","contextHashtag","shortDescriptionText","description","rDescription","contextSite","template","originalImage","cropComponent","cropImage","event_state","cropLeft","cropTop","cropWidth","cropHeight","scaledRatio","init","draggable","overlayColor","maxWidth","naturalWidth","CROPWIDTH","offsetHeight","CROPHEIGHT","updateCropSize","updateCropImage","updateContainer","startMoving","resizing","keyHandler","imgZoom","zoom","newWidth","newHeight","clientHeight","String","fromCharCode","charCode","deltaY","container_width","container_height","container_left","container_top","mouse_x","scrollX","mouse_y","scrollY","saveEventState","moving","endMoving","currentTouch","complete","crop","removeHandlers","cropper","h6","cropContainer","contents","readAsDataURL","btnSubmit","darkenCanvas","onCrop","postCanvas","fillRect","bpe","mask","int2bigInt","bits","minSize","buff","copyInt_","isObject","authCode","imported","avatarPreview","addIco","uploadAvatar","_uploadAvatar","handleInput","nameInputField","lastName","lastNameInputField","fullName","label","maxLength","btnSignUp","btnI18n","IntlElement","phone_number","phone_code_hash","setUserAuth","uploadProfilePhoto","mount","_authCode"],"mappings":"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","file":"12.4ffb40278432fb666fbf.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nexport function cancelEvent(event: Event) {\n  event = event || window.event;\n  if(event) {\n    // @ts-ignore\n    event = event.originalEvent || event;\n\n    try {\n      if(event.stopPropagation) event.stopPropagation();\n      if(event.preventDefault) event.preventDefault();\n      event.returnValue = false;\n      event.cancelBubble = true;\n    } catch(err) {}\n  }\n\n  return false;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type ListenerSetter from \"../listenerSetter\";\nimport { isTouchSupported } from \"../touchSupport\";\n\nexport const CLICK_EVENT_NAME: 'mousedown' | 'touchend' | 'click' = (isTouchSupported ? 'mousedown' : 'click') as any;\nexport type AttachClickOptions = AddEventListenerOptions & Partial<{listenerSetter: ListenerSetter, touchMouseDown: true}>;\nexport function attachClickEvent(elem: HTMLElement, callback: (e: TouchEvent | MouseEvent) => void, options: AttachClickOptions = {}) {\n  const add = options.listenerSetter ? options.listenerSetter.add.bind(options.listenerSetter, elem) : elem.addEventListener.bind(elem);\n  const remove = options.listenerSetter ? options.listenerSetter.removeManual.bind(options.listenerSetter, elem) : elem.removeEventListener.bind(elem);\n\n  options.touchMouseDown = true;\n  /* if(options.touchMouseDown && CLICK_EVENT_NAME === 'touchend') {\n    add('mousedown', callback, options);\n  } else if(CLICK_EVENT_NAME === 'touchend') {\n    const o = {...options, once: true};\n\n    const onTouchStart = (e: TouchEvent) => {\n      const onTouchMove = (e: TouchEvent) => {\n        remove('touchmove', onTouchMove, o);\n        remove('touchend', onTouchEnd, o);\n      };\n  \n      const onTouchEnd = (e: TouchEvent) => {\n        remove('touchmove', onTouchMove, o);\n        callback(e);\n        if(options.once) {\n          remove('touchstart', onTouchStart);\n        }\n      };\n  \n      add('touchend', onTouchEnd, o);\n      add('touchmove', onTouchMove, o);\n    };\n\n    add('touchstart', onTouchStart);\n  } else {\n    add(CLICK_EVENT_NAME, callback, options);\n  } */\n  add(CLICK_EVENT_NAME, callback, options);\n}\n\nexport function detachClickEvent(elem: HTMLElement, callback: (e: TouchEvent | MouseEvent) => void, options?: AddEventListenerOptions) {\n  if(CLICK_EVENT_NAME === 'touchend') {\n    elem.removeEventListener('touchstart', callback, options);\n  } else {\n    elem.removeEventListener(CLICK_EVENT_NAME, callback, options);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// @ts-ignore\nexport const isTouchSupported = ('ontouchstart' in window) || (window.DocumentTouch && document instanceof DocumentTouch)/*  || true */;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { i18n, LangPackKey } from \"../lib/langPack\";\nimport { ripple } from \"./ripple\";\n\nconst Button = (className: string, options: Partial<{\n  noRipple: true, \n  onlyMobile: true, \n  icon: string, \n  rippleSquare: true, \n  text: LangPackKey, \n  disabled: boolean,\n  asDiv: boolean\n}> = {}) => {\n  const button: HTMLButtonElement = document.createElement(options.asDiv ? 'div' : 'button') as any;\n  button.className = className + (options.icon ? ' tgico-' + options.icon : '');\n\n  if(!options.noRipple) {\n    if(options.rippleSquare) {\n      button.classList.add('rp-square');\n    }\n\n    ripple(button);\n  }\n\n  if(options.onlyMobile) {\n    button.classList.add('only-handhelds');\n  }\n\n  if(options.disabled) {\n    button.setAttribute('disabled', 'true');\n  }\n\n  if(options.text) {\n    button.append(i18n(options.text));\n  }\n\n  return button;\n};\n\nexport default Button;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Dialog } from './appMessagesManager';\nimport type { UserAuth } from '../mtproto/mtproto_config';\nimport type { User } from './appUsersManager';\nimport type { AuthState } from '../../types';\nimport type FiltersStorage from '../storages/filters';\nimport type DialogsStorage from '../storages/dialogs';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport rootScope from '../rootScope';\nimport stateStorage from '../stateStorage';\nimport { logger } from '../logger';\nimport { copy, setDeepProperty, validateInitObject } from '../../helpers/object';\nimport App from '../../config/app';\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\nimport AppStorage from '../storage';\nimport { Chat } from '../../layer';\nimport { isMobile } from '../../helpers/userAgent';\nimport DATABASE_STATE from '../../config/databases/state';\nimport sessionStorage from '../sessionStorage';\n\nconst REFRESH_EVERY = 24 * 60 * 60 * 1000; // 1 day\n//const REFRESH_EVERY_WEEK = 24 * 60 * 60 * 1000 * 7; // 7 days\nconst STATE_VERSION = App.version;\n\nexport type Background = {\n  type: 'color' | 'image' | 'default',\n  blur: boolean,\n  highlightningColor?: string,\n  color?: string,\n  slug?: string,\n};\n\nexport type Theme = {\n  name: 'day' | 'night' | 'system',\n  background: Background\n};\n\nexport type State = {\n  allDialogsLoaded: DialogsStorage['allDialogsLoaded'],\n  pinnedOrders: DialogsStorage['pinnedOrders'],\n  contactsList: number[],\n  updates: Partial<{\n    seq: number,\n    pts: number,\n    date: number\n  }>,\n  filters: FiltersStorage['filters'],\n  maxSeenMsgId: number,\n  stateCreatedTime: number,\n  recentEmoji: string[],\n  topPeers: number[],\n  recentSearch: number[],\n  version: typeof STATE_VERSION,\n  authState: AuthState,\n  hiddenPinnedMessages: {[peerId: string]: number},\n  settings: {\n    messagesTextSize: number,\n    sendShortcut: 'enter' | 'ctrlEnter',\n    animationsEnabled: boolean,\n    autoDownload: {\n      contacts: boolean\n      private: boolean\n      groups: boolean\n      channels: boolean\n    },\n    autoPlay: {\n      gifs: boolean,\n      videos: boolean\n    },\n    stickers: {\n      suggest: boolean,\n      loop: boolean\n    },\n    emoji: {\n      suggest: boolean,\n      big: boolean\n    },\n    background?: Background, // ! DEPRECATED\n    themes: Theme[],\n    theme: Theme['name'],\n    notifications: {\n      sound: boolean\n    },\n    nightTheme?: boolean, // ! DEPRECATED\n  },\n  keepSigned: boolean\n};\n\nexport const STATE_INIT: State = {\n  allDialogsLoaded: {},\n  pinnedOrders: {},\n  contactsList: [],\n  updates: {},\n  filters: {},\n  maxSeenMsgId: 0,\n  stateCreatedTime: Date.now(),\n  recentEmoji: [],\n  topPeers: [],\n  recentSearch: [],\n  version: STATE_VERSION,\n  authState: {\n    _: isMobile ? 'authStateSignIn' : 'authStateSignQr'\n  },\n  hiddenPinnedMessages: {},\n  settings: {\n    messagesTextSize: 16,\n    sendShortcut: 'enter',\n    animationsEnabled: true,\n    autoDownload: {\n      contacts: true,\n      private: true,\n      groups: true,\n      channels: true\n    },\n    autoPlay: {\n      gifs: true,\n      videos: true\n    },\n    stickers: {\n      suggest: true,\n      loop: true\n    },\n    emoji: {\n      suggest: true,\n      big: true\n    },\n    themes: [{\n      name: 'day',\n      background: {\n        type: 'image',\n        blur: false,\n        slug: 'ByxGo2lrMFAIAAAAmkJxZabh8eM', // * new blurred camomile,\n        highlightningColor: 'hsla(85.5319, 36.9171%, 40.402%, 0.4)'\n      }\n    }, {\n      name: 'night',\n      background: {\n        type: 'color',\n        blur: false,\n        color: '#0f0f0f',\n        highlightningColor: 'hsla(0, 0%, 3.82353%, 0.4)'\n      }\n    }],\n    theme: 'system',\n    notifications: {\n      sound: false\n    }\n  },\n  keepSigned: true\n};\n\nconst ALL_KEYS = Object.keys(STATE_INIT) as any as Array<keyof State>;\n\nconst REFRESH_KEYS = ['contactsList', 'stateCreatedTime',\n  'maxSeenMsgId', 'filters', 'topPeers'] as any as Array<keyof State>;\n\n//const REFRESH_KEYS_WEEK = ['dialogs', 'allDialogsLoaded', 'updates', 'pinnedOrders'] as any as Array<keyof State>;\n\nexport class AppStateManager extends EventListenerBase<{\n  save: (state: State) => Promise<void>,\n  peerNeeded: (peerId: number) => void,\n  peerUnneeded: (peerId: number) => void,\n}> {\n  public static STATE_INIT = STATE_INIT;\n  private loaded: Promise<State>;\n  private log = logger('STATE'/* , LogLevels.error */);\n\n  private state: State;\n\n  private neededPeers: Map<number, Set<string>> = new Map();\n  private singlePeerMap: Map<string, number> = new Map();\n\n  public storages = {\n    users: new AppStorage<Record<number, User>, typeof DATABASE_STATE>(DATABASE_STATE, 'users'),\n    chats: new AppStorage<Record<number, Chat>, typeof DATABASE_STATE>(DATABASE_STATE, 'chats'),\n    dialogs: new AppStorage<Record<number, Dialog>, typeof DATABASE_STATE>(DATABASE_STATE, 'dialogs')\n  };\n\n  public storagesResults: {[key in keyof AppStateManager['storages']]: any[]} = {} as any;\n\n  public storage = stateStorage;\n\n  constructor() {\n    super();\n    this.loadSavedState();\n  }\n\n  public loadSavedState(): Promise<State> {\n    if(this.loaded) return this.loaded;\n    console.time('load state');\n    this.loaded = new Promise((resolve) => {\n      const storagesKeys = Object.keys(this.storages) as Array<keyof AppStateManager['storages']>;\n      const storagesPromises: Promise<any>[] = storagesKeys.map(key => this.storages[key].getAll());\n\n      const promises: Promise<any>[] = ALL_KEYS.map(key => stateStorage.get(key))\n      .concat(sessionStorage.get('user_auth'))\n      .concat(stateStorage.get('user_auth' as any)) // support old webk format\n      .concat(storagesPromises);\n\n      Promise.all(promises).then(async(arr) => {\n        /* const self = this;\n        const skipHandleKeys = new Set(['isProxy', 'filters', 'drafts']);\n        const getHandler = (path?: string) => {\n          return {\n            get(target: any, key: any) {\n              if(key === 'isProxy') {\n                return true;\n              }\n\n              const prop = target[key];\n\n              if(prop !== undefined && !skipHandleKeys.has(key) && !prop.isProxy && typeof(prop) === 'object') {\n                target[key] = new Proxy(prop, getHandler(path || key));\n                return target[key];\n              }\n              \n              return prop;\n            },\n            set(target: any, key: any, value: any) {\n              console.log('Setting', target, `.${key} to equal`, value, path);\n          \n              target[key] = value;\n\n              // @ts-ignore\n              self.pushToState(path || key, path ? self.state[path] : value, false);\n\n              return true;\n            }\n          };\n        }; */\n\n        let state: State = this.state = {} as any;\n\n        // ! then can't store false values\n        for(let i = 0, length = ALL_KEYS.length; i < length; ++i) {\n          const key = ALL_KEYS[i];\n          const value = arr[i];\n          if(value !== undefined) {\n            // @ts-ignore\n            state[key] = value;\n          } else {\n            this.pushToState(key, copy(STATE_INIT[key]));\n          }\n        }\n\n        arr.splice(0, ALL_KEYS.length);\n\n        // * Read auth\n        let auth = arr.shift() as UserAuth | number;\n        let shiftedWebKAuth = arr.shift() as UserAuth | number;\n        if(!auth && shiftedWebKAuth) { // support old webk auth\n          auth = shiftedWebKAuth;\n          const keys: string[] = ['dc', 'server_time_offset', 'xt_instance'];\n          for(let i = 1; i <= 5; ++i) {\n            keys.push(`dc${i}_server_salt`);\n            keys.push(`dc${i}_auth_key`);\n          }\n\n          const values = await Promise.all(keys.map(key => stateStorage.get(key as any)));\n          keys.push('user_auth');\n          values.push(typeof(auth) === 'number' ? {dcID: values[0] || App.baseDcId, date: Date.now() / 1000 | 0, id: auth} as UserAuth : auth);\n\n          let obj: any = {};\n          keys.forEach((key, idx) => {\n            obj[key] = values[idx];\n          });\n\n          await sessionStorage.set(obj);\n        }\n        \n        /* if(!auth) { // try to read Webogram's session from localStorage\n          try {\n            const keys = Object.keys(localStorage);\n            for(let i = 0; i < keys.length; ++i) {\n              const key = keys[i];\n              let value: any;\n              try {\n                value = localStorage.getItem(key);\n                value = JSON.parse(value);\n              } catch(err) {\n                //console.error(err);\n              }\n\n              sessionStorage.set({\n                [key as any]: value\n              });\n            }\n\n            auth = sessionStorage.getFromCache('user_auth');\n          } catch(err) {\n            this.log.error('localStorage import error', err);\n          }\n        } */\n\n        if(auth) {\n          // ! Warning ! DON'T delete this\n          state.authState = {_: 'authStateSignedIn'};\n          rootScope.dispatchEvent('user_auth', typeof(auth) === 'number' ? {dcID: 0, date: Date.now() / 1000 | 0, id: auth} : auth); // * support old version\n        }\n\n        // * Read storages\n        for(let i = 0, length = storagesKeys.length; i < length; ++i) {\n          this.storagesResults[storagesKeys[i]] = arr[i] as any;\n        }\n\n        arr.splice(0, storagesKeys.length);\n\n        const time = Date.now();\n        if((state.stateCreatedTime + REFRESH_EVERY) < time) {\n          if(DEBUG) {\n            this.log('will refresh state', state.stateCreatedTime, time);\n          }\n\n          const r = (keys: typeof REFRESH_KEYS) => {\n            keys.forEach(key => {\n              this.pushToState(key, copy(STATE_INIT[key]));\n  \n              // @ts-ignore\n              const s = this.storagesResults[key];\n              if(s && s.length) {\n                s.length = 0;\n              }\n            });\n          };\n          \n          r(REFRESH_KEYS);\n\n          /* if((state.stateCreatedTime + REFRESH_EVERY_WEEK) < time) {\n            if(DEBUG) {\n              this.log('will refresh updates');\n            }\n\n            r(REFRESH_KEYS_WEEK);\n          } */\n        }\n        \n        //state = this.state = new Proxy(state, getHandler());\n\n        // * support old version\n        if(!state.settings.hasOwnProperty('theme') && state.settings.hasOwnProperty('nightTheme')) {\n          state.settings.theme = state.settings.nightTheme ? 'night' : 'day';\n          this.pushToState('settings', state.settings);\n        }\n\n        // * support old version\n        if(!state.settings.hasOwnProperty('themes') && state.settings.background) {\n          state.settings.themes = copy(STATE_INIT.settings.themes);\n          const theme = state.settings.themes.find(t => t.name === state.settings.theme);\n          if(theme) {\n            theme.background = state.settings.background;\n            this.pushToState('settings', state.settings);\n          }\n        }\n\n        validateInitObject(STATE_INIT, state, (missingKey) => {\n          // @ts-ignore\n          this.pushToState(missingKey, state[missingKey]);\n        });\n\n        if(state.version !== STATE_VERSION) {\n          this.pushToState('version', STATE_VERSION);\n        }\n\n        // ! probably there is better place for it\n        rootScope.settings = state.settings;\n\n        if(DEBUG) {\n          this.log('state res', state, copy(state));\n        }\n        \n        //return resolve();\n\n        console.timeEnd('load state');\n        resolve(state);\n      }).catch(resolve);\n    });\n\n    return this.loaded;\n  }\n\n  public getState() {\n    return this.state === undefined ? this.loadSavedState() : Promise.resolve(this.state);\n  }\n\n  public setByKey(key: string, value: any) {\n    setDeepProperty(this.state, key, value);\n    rootScope.dispatchEvent('settings_updated', {key, value});\n\n    const first = key.split('.')[0];\n    // @ts-ignore\n    this.pushToState(first, this.state[first]);\n  }\n\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true) {\n    if(direct) {\n      this.state[key] = value;\n    }\n\n    this.storage.set({\n      [key]: value\n    });\n  }\n\n  public requestPeer(peerId: number, type: string, limit?: number) {\n    let set = this.neededPeers.get(peerId);\n    if(set && set.has(type)) {\n      return;\n    }\n\n    if(!set) {\n      set = new Set();\n      this.neededPeers.set(peerId, set);\n    }\n\n    set.add(type);\n    this.dispatchEvent('peerNeeded', peerId);\n\n    if(limit !== undefined) {\n      this.keepPeerSingle(peerId, type);\n    }\n  }\n\n  public isPeerNeeded(peerId: number) {\n    return this.neededPeers.has(peerId);\n  }\n\n  public keepPeerSingle(peerId: number, type: string) {\n    const existsPeerId = this.singlePeerMap.get(type);\n    if(existsPeerId && existsPeerId !== peerId && this.neededPeers.has(existsPeerId)) {\n      const set = this.neededPeers.get(existsPeerId);\n      set.delete(type);\n\n      if(!set.size) {\n        this.neededPeers.delete(existsPeerId);\n        this.dispatchEvent('peerUnneeded', existsPeerId);\n      }\n    }\n\n    if(peerId) {\n      this.singlePeerMap.set(type, peerId);\n    }\n  }\n\n  /* public resetState() {\n    for(let i in this.state) {\n      // @ts-ignore\n      this.state[i] = false;\n    }\n    sessionStorage.set(this.state).then(() => {\n      location.reload();\n    });\n  } */\n}\n\n//console.trace('appStateManager include');\n\nconst appStateManager = new AppStateManager();\nMOUNT_CLASS_TO.appStateManager = appStateManager;\nexport default appStateManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport Countries, { Country, PhoneCodesMain } from \"../countries\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { CLICK_EVENT_NAME } from \"../helpers/dom/clickEvent\";\nimport ListenerSetter from \"../helpers/listenerSetter\";\nimport mediaSizes from \"../helpers/mediaSizes\";\nimport { isTouchSupported } from \"../helpers/touchSupport\";\nimport { isApple, isMobileSafari, isSafari } from \"../helpers/userAgent\";\nimport appNavigationController from \"./appNavigationController\";\n\nexport function putPreloader(elem: Element, returnDiv = false): HTMLElement {\n  const html = `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-circular\" viewBox=\"25 25 50 50\">\n  <circle class=\"preloader-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-miterlimit=\"10\"/>\n  </svg>`;\n\n  if(returnDiv) {\n    const div = document.createElement('div');\n    div.classList.add('preloader');\n    div.innerHTML = html;\n\n    if(elem) {\n      elem.appendChild(div);\n    }\n\n    return div;\n  }\n  \n  elem.insertAdjacentHTML('beforeend', html);\n  return elem.lastElementChild as HTMLElement;\n}\n\nMOUNT_CLASS_TO.putPreloader = putPreloader;\n\nexport function setButtonLoader(elem: HTMLButtonElement, icon = 'check') {\n  elem.classList.remove('tgico-' + icon);\n  elem.disabled = true;\n  putPreloader(elem);\n\n  return () => {\n    elem.innerHTML = '';\n    elem.classList.add('tgico-' + icon);\n    elem.removeAttribute('disabled');\n  };\n}\n\nlet sortedCountries: Country[];\nexport function formatPhoneNumber(str: string) {\n  str = str.replace(/\\D/g, '');\n  let phoneCode = str.slice(0, 6);\n  \n  ////console.log('str', str, phoneCode);\n  if(!sortedCountries) {\n    sortedCountries = Countries.slice().sort((a, b) => b.phoneCode.length - a.phoneCode.length);\n  }\n  \n  let country = sortedCountries.find((c) => {\n    return c.phoneCode.split(' and ').find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\n  });\n\n  if(!country) return {formatted: str, country};\n\n  country = PhoneCodesMain[country.phoneCode] || country;\n  \n  let pattern = country.pattern || country.phoneCode;\n  pattern.split('').forEach((symbol, idx) => {\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\n    }\n  });\n  \n  /* if(country.pattern) {\n    str = str.slice(0, country.pattern.length);\n  } */\n  \n  return {formatted: str, country};\n}\n\n/* export function parseMenuButtonsTo(to: {[name: string]: HTMLElement}, elements: HTMLCollection | NodeListOf<HTMLElement>) {\n  Array.from(elements).forEach(el => {\n    const match = el.className.match(/(?:^|\\s)menu-(.+?)(?:$|\\s)/);\n    if(!match) return;\n    to[match[1]] = el as HTMLElement;\n  });\n} */\n\nlet onMouseMove = (e: MouseEvent) => {\n  let rect = openedMenu.getBoundingClientRect();\n  let {clientX, clientY} = e;\n  \n  let diffX = clientX >= rect.right ? clientX - rect.right : rect.left - clientX;\n  let diffY = clientY >= rect.bottom ? clientY - rect.bottom : rect.top - clientY;\n  \n  if(diffX >= 100 || diffY >= 100) {\n    closeBtnMenu();\n    //openedMenu.parentElement.click();\n  }\n  //console.log('mousemove', diffX, diffY);\n};\n\nconst onClick = (e: MouseEvent | TouchEvent) => {\n  //cancelEvent(e);\n  closeBtnMenu();\n};\n\n// ! no need in this due to the same handler in appNavigationController\n/* const onKeyDown = (e: KeyboardEvent) => {\n  if(e.key === 'Escape') {\n    closeBtnMenu();\n    cancelEvent(e);\n  }\n}; */\n\nexport const closeBtnMenu = () => {\n  if(openedMenu) {\n    openedMenu.classList.remove('active');\n    openedMenu.parentElement.classList.remove('menu-open');\n    //openedMenu.previousElementSibling.remove(); // remove overlay\n    if(menuOverlay) menuOverlay.remove();\n    openedMenu = null;\n  }\n  \n  if(openedMenuOnClose) {\n    openedMenuOnClose();\n    openedMenuOnClose = null;\n  }\n\n  if(!isTouchSupported) {\n    window.removeEventListener('mousemove', onMouseMove);\n    //window.removeEventListener('keydown', onKeyDown, {capture: true});\n    window.removeEventListener('contextmenu', onClick);\n  }\n\n  document.removeEventListener(CLICK_EVENT_NAME, onClick);\n\n  if(!isMobileSafari) {\n    appNavigationController.removeByType('menu');\n  }\n};\n\nwindow.addEventListener('resize', () => {\n  if(openedMenu) {\n    closeBtnMenu();\n  }\n  \n  /* if(openedMenu && (openedMenu.style.top || openedMenu.style.left)) {\n    const rect = openedMenu.getBoundingClientRect();\n    const {innerWidth, innerHeight} = window;\n\n    console.log(innerWidth, innerHeight, rect);\n  } */\n});\n\nlet openedMenu: HTMLElement = null, openedMenuOnClose: () => void = null, menuOverlay: HTMLElement = null;\nexport function openBtnMenu(menuElement: HTMLElement, onClose?: () => void) {\n  closeBtnMenu();\n\n  if(!isMobileSafari) {\n    appNavigationController.pushItem({\n      type: 'menu',\n      onPop: (canAnimate) => {\n        closeBtnMenu();\n      }\n    });\n  }\n  \n  openedMenu = menuElement;\n  openedMenu.classList.add('active');\n  openedMenu.parentElement.classList.add('menu-open');\n\n  if(!menuOverlay) {\n    menuOverlay = document.createElement('div');\n    menuOverlay.classList.add('btn-menu-overlay');\n\n    // ! because this event must be canceled, and can't cancel on menu click (below)\n    menuOverlay.addEventListener(CLICK_EVENT_NAME, (e) => {\n      cancelEvent(e);\n      onClick(e);\n    });\n  }\n\n  openedMenu.parentElement.insertBefore(menuOverlay, openedMenu);\n\n  //document.body.classList.add('disable-hover');\n  \n  openedMenuOnClose = onClose;\n\n  if(!isTouchSupported) {\n    window.addEventListener('mousemove', onMouseMove);\n    //window.addEventListener('keydown', onKeyDown, {capture: true});\n    window.addEventListener('contextmenu', onClick, {once: true});\n  }\n\n  /* // ! because this event must be canceled, and can't cancel on menu click (below)\n  overlay.addEventListener(CLICK_EVENT_NAME, (e) => {\n    cancelEvent(e);\n    onClick(e);\n  }); */\n  \n  // ! safari iOS doesn't handle window click event on overlay, idk why\n  document.addEventListener(CLICK_EVENT_NAME, onClick);\n}\n\nconst PADDING_TOP = 8;\nconst PADDING_LEFT = 8;\nexport function positionMenu({pageX, pageY}: MouseEvent | Touch, elem: HTMLElement, side?: 'left' | 'right' | 'center') {\n  //let {clientX, clientY} = e;\n\n  // * side mean the OPEN side\n\n  let {scrollWidth: menuWidth, scrollHeight: menuHeight} = elem;\n  //let {innerWidth: windowWidth, innerHeight: windowHeight} = window;\n  const rect = document.body.getBoundingClientRect();\n  const windowWidth = rect.width;\n  const windowHeight = rect.height;\n\n  side = mediaSizes.isMobile ? 'right' : 'left';\n  let verticalSide: 'top' /* | 'bottom' */ | 'center' = 'top';\n\n  const getSides = () => {\n    return {\n      x: {\n        left: pageX,\n        right: pageX - menuWidth\n      },\n      intermediateX: side === 'right' ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\n      //intermediateX: clientX < windowWidth / 2 ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\n      y: {\n        top: pageY,\n        bottom: pageY - menuHeight\n      },\n      //intermediateY: verticalSide === 'top' ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\n      intermediateY: pageY < windowHeight / 2 ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\n    };\n  };\n\n  const sides = getSides();\n\n  const possibleSides = {\n    x: {\n      left: sides.x.left + menuWidth + PADDING_LEFT <= windowWidth,\n      right: sides.x.right >= PADDING_LEFT\n    },\n    y: {\n      top: sides.y.top + menuHeight + PADDING_TOP <= windowHeight,\n      bottom: sides.y.bottom - PADDING_TOP >= PADDING_TOP\n    }\n  };\n\n  /* if(side === undefined) {\n    if((clientX + menuWidth + PADDING_LEFT) > windowWidth) {\n      side = 'right';\n    }\n  } */\n\n  {\n    /* const x = sides.x;\n\n    const s = Object.keys(x) as (keyof typeof possibleSides.x)[];\n    if(side) {\n      s.findAndSplice(s => s === side);\n      s.unshift(side);\n    }\n\n    const possibleSide = s.find(s => possibleSides.x[s]); */\n    let left: number;\n    /* if(possibleSide) {\n      left = x[possibleSide];\n      side = possibleSide;\n    } else {\n      left = sides.intermediateX;\n      side = undefined;\n    } */\n    left = possibleSides.x[side] ? sides.x[side] : (side = 'center', sides.intermediateX);\n  \n    elem.style.left = left + 'px';\n  }\n\n  /* if((clientY + menuHeight + PADDING_TOP) > windowHeight) {\n    elem.style.top = clamp(clientY - menuHeight, PADDING_TOP, windowHeight - menuHeight - PADDING_TOP) + 'px';\n    // elem.style.top = (innerHeight - scrollHeight - PADDING_TOP) + 'px';\n    verticalSide = 'bottom';\n  } else {\n    elem.style.top = Math.max(PADDING_TOP, clientY) + 'px';\n    verticalSide = 'top';\n  } */\n\n  {\n    let top: number;\n\n    top = possibleSides.y[verticalSide] ? sides.y[verticalSide] : (verticalSide = 'center', sides.intermediateY);\n  \n    elem.style.top = top + 'px';\n  }\n  \n  elem.className = elem.className.replace(/(top|center|bottom)-(left|center|right)/g, '');\n  elem.classList.add(\n    //(verticalSide === 'center' ? verticalSide : (verticalSide === 'bottom' ? 'top' : 'bottom')) +\n    (verticalSide === 'center' ? verticalSide : 'bottom') +\n    '-' +\n    (side === 'center' ? side : (side === 'left' ? 'right' : 'left')));\n}\n\nexport function attachContextMenuListener(element: HTMLElement, callback: (e: Touch | MouseEvent) => void, listenerSetter?: ListenerSetter) {\n  const add = listenerSetter ? listenerSetter.add.bind(listenerSetter, element) : element.addEventListener.bind(element);\n  const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, element) : element.removeEventListener.bind(element);\n\n  if(isApple && isTouchSupported) {\n    let timeout: number;\n\n    const options: any = /* null */{capture: true};\n\n    const onCancel = () => {\n      clearTimeout(timeout);\n      remove('touchmove', onCancel, options);\n      remove('touchend', onCancel, options);\n      remove('touchcancel', onCancel, options);\n    };\n\n    add('touchstart', (e: TouchEvent) => {\n      if(e.touches.length > 1) {\n        onCancel();\n        return;\n      }\n  \n      add('touchmove', onCancel, options);\n      add('touchend', onCancel, options);\n      add('touchcancel', onCancel, options);\n\n      timeout = window.setTimeout(() => {\n        callback(e.touches[0]);\n        onCancel();\n\n        if(openedMenu) {\n          element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\n        }\n      }, .4e3);\n    });\n\n    /* if(!isSafari) {\n      add('contextmenu', (e: any) => {\n        cancelEvent(e);\n      }, {passive: false, capture: true});\n    } */\n  } else {\n    add('contextmenu', isTouchSupported ? (e: any) => {\n      callback(e);\n\n      if(openedMenu) {\n        element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\n      }\n    } : callback);\n  }\n};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport calcImageInBox from \"./calcImageInBox\";\nimport EventListenerBase from \"./eventListenerBase\";\n\nexport class MediaSize {\n  constructor(public width = 0, public height = width) {\n\n  }\n\n  public aspect(boxSize: MediaSize, fitted: boolean) {\n    return calcImageInBox(this.width, this.height, boxSize.width, boxSize.height, fitted);\n  }\n\n  public aspectFitted(boxSize: MediaSize) {\n    return this.aspect(boxSize, true);\n  }\n\n  public aspectCovered(boxSize: MediaSize) {\n    return this.aspect(boxSize, false);\n  }\n}\n\nexport function makeMediaSize(width?: number, height?: number): MediaSize {\n  return new MediaSize(width, height);\n}\n\ntype MediaTypeSizes = {\n  regular: MediaSize,\n  webpage: MediaSize,\n  album: MediaSize,\n  esgSticker: MediaSize,\n  animatedSticker: MediaSize,\n  staticSticker: MediaSize,\n  emojiSticker: MediaSize\n};\n\nexport enum ScreenSize {\n  mobile,\n  medium,\n  large\n}\n\nconst MOBILE_SIZE = 600;\nconst MEDIUM_SIZE = 1275;\nconst LARGE_SIZE = 1680;\n\nclass MediaSizes extends EventListenerBase<{\n  changeScreen: (from: ScreenSize, to: ScreenSize) => void\n}> {\n  private screenSizes: {key: ScreenSize, value: number}[] = [\n    {key: ScreenSize.mobile, value: MOBILE_SIZE},\n    {key: ScreenSize.medium, value: MEDIUM_SIZE},\n    {key: ScreenSize.large, value: LARGE_SIZE}\n  ];\n\n  private sizes: {[k in 'desktop' | 'handhelds']: MediaTypeSizes} = {\n    handhelds: {\n      regular: makeMediaSize(270, 270),\n      webpage: makeMediaSize(270, 200),\n      album: makeMediaSize(270, 0),\n      esgSticker: makeMediaSize(68, 68),\n      animatedSticker: makeMediaSize(180, 180),\n      staticSticker: makeMediaSize(180, 180),\n      emojiSticker: makeMediaSize(112, 112)\n    },\n    desktop: {\n      regular: makeMediaSize(400, 320),\n      webpage: makeMediaSize(400, 320),\n      album: makeMediaSize(420, 0),\n      esgSticker: makeMediaSize(80, 80),\n      animatedSticker: makeMediaSize(200, 200),\n      staticSticker: makeMediaSize(200, 200),\n      emojiSticker: makeMediaSize(112, 112)\n    }\n  };\n\n  public isMobile = false;\n  public active: MediaTypeSizes;\n  public activeScreen: ScreenSize;\n  public rAF: number;\n\n  constructor() {\n    super();\n\n    window.addEventListener('resize', () => {\n      if(this.rAF) window.cancelAnimationFrame(this.rAF);\n      this.rAF = window.requestAnimationFrame(() => {\n        this.handleResize();\n        this.rAF = 0;\n      });\n    });\n    this.handleResize();\n  }\n\n  private handleResize = () => {\n    const innerWidth = window.innerWidth;\n    //this.isMobile = innerWidth <= 720;\n    \n    let activeScreen = this.screenSizes[0].key;\n    for(let i = this.screenSizes.length - 1; i >= 0; --i) {\n      if(this.screenSizes[i].value < innerWidth) {\n        activeScreen = (this.screenSizes[i + 1] || this.screenSizes[i]).key;\n        break;\n      }\n    }\n\n    const wasScreen = this.activeScreen;\n    this.activeScreen = activeScreen;\n    this.isMobile = this.activeScreen === ScreenSize.mobile;\n    this.active = this.isMobile ? this.sizes.handhelds : this.sizes.desktop;\n\n    //console.time('esg');\n    //const computedStyle = window.getComputedStyle(document.documentElement);\n    //this.active.esgSticker.width = parseFloat(computedStyle.getPropertyValue('--esg-sticker-size'));\n    //console.timeEnd('esg');\n\n    if(wasScreen !== activeScreen) {\n      //console.log('changeScreen', this.activeScreen, activeScreen);\n\n      if(wasScreen !== undefined) {\n        this.dispatchEvent('changeScreen', this.activeScreen, activeScreen);\n      }\n    }\n\n    /* if(this.isMobile) {\n      for(let i in this.active) {\n        // @ts-ignore\n        let size = this.active[i];\n        size.width = innerWidth \n      }\n    } */\n  };\n}\n\nconst mediaSizes = new MediaSizes();\nMOUNT_CLASS_TO.mediaSizes = mediaSizes;\nexport default mediaSizes;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport sequentialDom from \"../helpers/sequentialDom\";\nimport {isTouchSupported} from \"../helpers/touchSupport\";\nimport rootScope from \"../lib/rootScope\";\n\nlet rippleClickId = 0;\nexport function ripple(elem: HTMLElement, callback: (id: number) => Promise<boolean | void> = () => Promise.resolve(), onEnd: (id: number) => void = null, prepend = false) {\n  //return;\n  if(elem.querySelector('.c-ripple')) return;\n  elem.classList.add('rp');\n  \n  let r = document.createElement('div');\n  r.classList.add('c-ripple');\n\n  const isSquare = elem.classList.contains('rp-square');\n  if(isSquare) {\n    r.classList.add('is-square');\n  }\n\n  elem[prepend ? 'prepend' : 'append'](r);\n\n  let handler: () => void;\n  //let animationEndPromise: Promise<number>;\n  const drawRipple = (clientX: number, clientY: number) => {\n    const startTime = Date.now();\n    const elem = document.createElement('div');\n\n    const clickId = rippleClickId++;\n    \n    //console.log('ripple drawRipple');\n    \n    const duration = +window.getComputedStyle(r).getPropertyValue('--ripple-duration').replace('s', '') * 1000;\n    //console.log('ripple duration', duration);\n\n    handler = () => {\n    //handler = () => animationEndPromise.then((duration) => {\n      //console.log('ripple animation was:', duration);\n\n      //const duration = isSquare || mediaSizes.isMobile ? 200 : 700;\n      //return;\n      let elapsedTime = Date.now() - startTime;\n      const cb = () => {\n        //console.log('ripple elapsedTime total pre-remove:', Date.now() - startTime);\n        sequentialDom.mutate(() => {\n          elem.remove();\n        });\n        \n        if(onEnd) onEnd(clickId);\n      };\n      if(elapsedTime < duration) {\n        let delay = Math.max(duration - elapsedTime, duration / 2);\n        setTimeout(() => elem.classList.add('hiding'), Math.max(delay - duration / 2, 0));\n\n        setTimeout(cb, delay);\n      } else {\n        elem.classList.add('hiding');\n        setTimeout(cb, duration / 2);\n      }\n\n      if(!isTouchSupported) {\n        window.removeEventListener('contextmenu', handler);\n      }\n\n      handler = null;\n      touchStartFired = false;\n    };\n    //});\n\n    callback && callback(clickId);\n\n    /* callback().then((bad) => {\n      if(bad) {\n        span.remove();\n        return;\n      } */\n      \n      //console.log('ripple after promise', Date.now() - startTime);\n      //console.log('ripple tooSlow:', tooSlow);\n      /* if(tooSlow) {\n        span.remove();\n        return;\n      } */\n\n      window.requestAnimationFrame(() => {\n        const rect = r.getBoundingClientRect();\n        elem.classList.add('c-ripple__circle');\n\n        const clickX = clientX - rect.left;\n        const clickY = clientY - rect.top;\n\n        const radius = Math.sqrt((Math.abs(clickY - rect.height / 2) + rect.height / 2) ** 2 + (Math.abs(clickX - rect.width / 2) + rect.width / 2) ** 2);\n        const size = radius;\n\n        // center of circle\n        const x = clickX - size / 2;\n        const y = clickY - size / 2;\n\n        //console.log('ripple click', offsetFromCenter, size, clickX, clickY);\n\n        elem.style.width = elem.style.height = size + 'px';\n        elem.style.left = x + 'px';\n        elem.style.top = y + 'px';\n\n        // нижний код выполняется с задержкой\n        /* animationEndPromise = new Promise((resolve) => {\n          span.addEventListener('animationend', () => {\n            // 713 -> 700\n            resolve(((Date.now() - startTime) / 100 | 0) * 100);\n          }, {once: true});\n        }); */\n        \n        // нижний код не всегда включает анимацию ПРИ КЛИКЕ НА ТАЧПАД БЕЗ ТАПТИК ЭНЖИНА\n        /* span.style.display = 'none';\n        r.append(span);\n        duration = +window.getComputedStyle(span).getPropertyValue('animation-duration').replace('s', '') * 1000;\n        span.style.display = ''; */\n\n        r.append(elem);\n\n        //r.classList.add('active');\n        //handler();\n      });\n    //});\n  };\n\n  const isRippleUnneeded = (e: Event) => e.target !== elem && (\n      ['BUTTON', 'A'].includes((e.target as HTMLElement).tagName) \n      || findUpClassName(e.target as HTMLElement, 'c-ripple') !== r\n    );\n\n  // TODO: rename this variable\n  let touchStartFired = false;\n  if(isTouchSupported) {\n    let touchEnd = () => {\n      handler && handler();\n    };\n  \n    elem.addEventListener('touchstart', (e) => {\n      if(!rootScope.settings.animationsEnabled) {\n        return;\n      }\n\n      //console.log('ripple touchstart', e);\n      if(e.touches.length > 1 || touchStartFired || isRippleUnneeded(e)) {\n        return;\n      }\n      \n      //console.log('touchstart', e);\n      touchStartFired = true;\n  \n      let {clientX, clientY} = e.touches[0];\n      drawRipple(clientX, clientY);\n      elem.addEventListener('touchend', touchEnd, {once: true});\n  \n      window.addEventListener('touchmove', (e) => {\n        e.cancelBubble = true;\n        e.stopPropagation();\n        touchEnd();\n        elem.removeEventListener('touchend', touchEnd);\n      }, {once: true});\n    }, {passive: true});\n  } else {\n    elem.addEventListener('mousedown', (e) => {\n      if(![0, 2].includes(e.button)) { // only left and right buttons\n        return;\n      }\n\n      if(!rootScope.settings.animationsEnabled) {\n        return;\n      }\n      //console.log('ripple mousedown', e, e.target, findUpClassName(e.target as HTMLElement, 'c-ripple') === r);\n\n      if(elem.dataset.ripple === '0' || isRippleUnneeded(e)) {\n        return;\n      } else if(touchStartFired) {\n        touchStartFired = false;\n        return;\n      }\n  \n      let {clientX, clientY} = e;\n      drawRipple(clientX, clientY);\n      window.addEventListener('mouseup', handler, {once: true, passive: true});\n      window.addEventListener('contextmenu', handler, {once: true, passive: true});\n    }, {passive: true});\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport I18n from \"../lib/langPack\";\n\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nexport const ONE_DAY = 86400;\n\n// https://stackoverflow.com/a/6117889\nexport const getWeekNumber = (date: Date) => {\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  const dayNum = d.getUTCDay() || 7;\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\n};\n\nexport const formatDateAccordingToToday = (time: Date) => {\n  const date = new Date();\n  const now = date.getTime() / 1000 | 0;\n  const timestamp = time.getTime() / 1000 | 0;\n\n  let timeStr: string;\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\n    timeStr = ('0' + time.getHours()).slice(-2) + ':' + ('0' + time.getMinutes()).slice(-2);\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\n    timeStr = time.getDate() + '.' + ('0' + (time.getMonth() + 1)).slice(-2) + '.' + ('' + time.getFullYear()).slice(-2);\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(date) === getWeekNumber(time)) { // current week\n    timeStr = days[time.getDay()].slice(0, 3);\n  } else { // same year\n    timeStr = months[time.getMonth()].slice(0, 3) + ' ' + ('0' + time.getDate()).slice(-2);\n  }\n\n  return timeStr;\n};\n\nexport function formatDateAccordingToTodayNew(time: Date) {\n  const today = new Date();\n  const now = today.getTime() / 1000 | 0;\n  const timestamp = time.getTime() / 1000 | 0;\n\n  const options: Intl.DateTimeFormatOptions = {};\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\n    options.hour = options.minute = '2-digit';\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\n    options.year = options.day = 'numeric';\n    options.month = '2-digit';\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\n    options.weekday = 'short';\n  } else { // same year\n    options.month = 'short';\n    options.day = 'numeric';\n  }\n\n  return new I18n.IntlDateElement({\n    date: time,\n    options\n  }).element;\n}\n\nexport function formatTime(date: Date) {\n  return new I18n.IntlDateElement({\n    date,\n    options: {\n      hour: '2-digit',\n      minute: '2-digit'\n    }\n  }).element;\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\n\nexport const getFullDate = (date: Date, options: Partial<{\n  noTime: true, \n  noSeconds: true,\n  monthAsNumber: true,\n  leadingZero: true\n}> = {}) => {\n  const joiner = options.monthAsNumber ? '.' : ' ';\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\n\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) + \n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) + \n    joiner + date.getFullYear() + \n    (options.noTime ? '' : ', ' + time);\n};\n\nexport function tsNow(seconds?: true) {\n  const t = Date.now();\n  return seconds ? Math.floor(t / 1000) : t;\n}\n\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\nconst minYear = 2013;\nconst yearPattern = new RegExp(\"20[0-9]{1,2}\");\nconst monthYearOrDayPattern = new RegExp(\"(\\\\w{3,}) ([0-9]{0,4})\", 'i');\nconst yearOrDayAndMonthPattern = new RegExp(\"([0-9]{0,4}) (\\\\w{2,})\", 'i');\nconst shortDate = new RegExp(\"^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\nconst longDate = new RegExp(\"^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexport type DateData = {\n  title: string,\n  minDate: number,\n  maxDate: number,\n};\nexport function fillTipDates(query: string, dates: DateData[]) {\n  const q = query.trim().toLowerCase();\n\n  if(q.length < 3) {\n    return;\n  }\n\n  if(\"today\".indexOf(q) === 0) {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime();\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 1;\n    dates.push({\n      title: 'Today',\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  if(\"yesterday\".indexOf(q) === 0) {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime() - 86400000;\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 86400001;\n    dates.push({\n      title: 'Yesterday',\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  const dayOfWeek = getDayOfWeek(q);\n  if(dayOfWeek >= 0) {\n    const date = new Date();\n    const now = date.getTime();\n    const currentDay = date.getDay();\n    const distance = dayOfWeek - currentDay;\n    date.setDate(date.getDate() + distance);\n    if(date.getTime() > now) {\n      date.setTime(date.getTime() - 604800000);\n    }\n    const year = date.getFullYear()\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime();\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 1;\n    dates.push({\n      title: formatWeekLong(minDate),\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  let matches: any[];\n  if((matches = shortDate.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[3];\n    const k = parseInt(g1);\n    const k1 = parseInt(g2);\n    if(k > 0 && k <= 31) {\n      if(k1 >= minYear && k <= 12) {\n        const selectedYear = k1;\n        const month = k - 1;\n        createForMonthYear(dates, month, selectedYear);\n        return;\n      } else if (k1 <= 12) {\n        const day = k - 1;\n        const month = k1 - 1;\n        createForDayMonth(dates, day, month);\n      }\n    } else if (k >= minYear && k1 <= 12) {\n      const selectedYear = k;\n      const month = k1 - 1;\n      createForMonthYear(dates, month, selectedYear);\n    }\n\n    return;\n  }\n\n  if((matches = longDate.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[3];\n    const g3 = matches[5];\n    if(!matches[2] === matches[4]) {\n      return;\n    }\n\n    const day = parseInt(g1);\n    const month = parseInt(g2) - 1;\n    let year = parseInt(g3);\n    if(year >= 10 && year <= 99) {\n      year += 2000;\n    }\n\n    const currentYear = new Date().getFullYear();\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\n      const date = new Date();\n      date.setFullYear(year, month, day);\n      date.setHours(0, 0, 0);\n      \n      const minDate = date.getTime();\n      date.setFullYear(year, month, day + 1);\n      date.setHours(0, 0, 0);\n\n      const maxDate = date.getTime() - 1;\n      dates.push({\n        title: formatterYearMax(minDate),\n        minDate,\n        maxDate\n      });\n      return;\n    }\n\n    return;\n  }\n\n  if((matches = yearPattern.exec(q)) !== null) {\n    let selectedYear = +q;\n    const currentYear = new Date().getFullYear();\n    if(selectedYear < minYear) {\n      selectedYear = minYear;\n      for(let i = currentYear; i >= selectedYear; i--) {\n        const date = new Date();\n        date.setFullYear(i, 0, 1);\n        date.setHours(0, 0, 0);\n\n        const minDate = date.getTime();\n        date.setFullYear(i + 1, 0, 1);\n        date.setHours(0, 0, 0);\n\n        const maxDate = date.getTime() - 1;\n        dates.push({\n          title: '' + i,\n          minDate,\n          maxDate\n        });\n      }\n    } else if(selectedYear <= currentYear) {\n      const date = new Date();\n      date.setFullYear(selectedYear, 0, 1);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      date.setFullYear(selectedYear + 1, 0, 1);\n      date.setHours(0, 0, 0);\n\n      const maxDate = date.getTime() - 1;\n      dates.push({\n        title: '' + selectedYear,\n        minDate,\n        maxDate\n      });\n    }\n\n    return;\n  }\n\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[2];\n    const month = getMonth(g1);\n    if(month >= 0) {\n      const k = +g2;\n      if(k > 0 && k <= 31) {\n        const day = k - 1;\n        createForDayMonth(dates, day, month);\n        return;\n      } else if(k >= minYear) {\n        const selectedYear = k;\n        createForMonthYear(dates, month, selectedYear);\n        return;\n      }\n    }\n  }\n\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[2];\n    const month = getMonth(g2);\n    if(month >= 0) {\n      const k = +g1;\n      if(k > 0 && k <= 31) {\n        const day = k - 1;\n        createForDayMonth(dates, day, month);\n        return;\n      } else if (k >= minYear) {\n        const selectedYear = k;\n        createForMonthYear(dates, month, selectedYear);\n      }\n    }\n  }\n}\n\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\n  const currentYear = new Date().getFullYear();\n  const today = Date.now();\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\n    const date = new Date();\n    date.setFullYear(selectedYear, month, 1);\n    date.setHours(0, 0, 0);\n    const minDate = date.getTime();\n    if(minDate > today) {\n      return;\n    }\n    date.setMonth(date.getMonth() + 1);\n    const maxDate = date.getTime() - 1;\n\n    dates.push({\n      title: formatterMonthYear(minDate),\n      minDate,\n      maxDate\n    });\n  }\n}\n\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\n  if(validDateForMonth(day, month)) {\n    const currentYear = new Date().getFullYear();\n    const today = Date.now();\n    \n    for(let i = currentYear; i >= minYear; i--) {\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\n        continue;\n      }\n\n      const date = new Date();\n      date.setFullYear(i, month, day + 1);\n      date.setHours(0, 0, 0);\n      \n      const minDate = date.getTime();\n      if(minDate > today) {\n        continue;\n      }\n\n      date.setFullYear(i, month, day + 2);\n      date.setHours(0, 0, 0);\n      const maxDate = date.getTime() - 1;\n      if(i === currentYear) {\n        dates.push({\n          title: formatterDayMonth(minDate),\n          minDate,\n          maxDate\n        });\n      } else {\n        dates.push({\n          title: formatterYearMax(minDate),\n          minDate,\n          maxDate\n        });\n      }\n    }\n  }\n}\n\nfunction formatterMonthYear(timestamp: number) {\n  const date = new Date(timestamp);\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getFullYear();\n}\n\nfunction formatterDayMonth(timestamp: number) {\n  const date = new Date(timestamp);\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getDate();\n}\n\nfunction formatterYearMax(timestamp: number) {\n  const date = new Date(timestamp);\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\n}\n\nfunction formatWeekLong(timestamp: number) {\n  const date = new Date(timestamp);\n  return days[date.getDay()];\n}\n\nfunction validDateForMonth(day: number, month: number) {\n  if(month >= 0 && month < 12) {\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isLeapYear(year: number) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nfunction getMonth(q: string) {\n  /* String[] months = new String[]{\n          LocaleController.getString(\"January\", R.string.January).toLowerCase(),\n          LocaleController.getString(\"February\", R.string.February).toLowerCase(),\n          LocaleController.getString(\"March\", R.string.March).toLowerCase(),\n          LocaleController.getString(\"April\", R.string.April).toLowerCase(),\n          LocaleController.getString(\"May\", R.string.May).toLowerCase(),\n          LocaleController.getString(\"June\", R.string.June).toLowerCase(),\n          LocaleController.getString(\"July\", R.string.July).toLowerCase(),\n          LocaleController.getString(\"August\", R.string.August).toLowerCase(),\n          LocaleController.getString(\"September\", R.string.September).toLowerCase(),\n          LocaleController.getString(\"October\", R.string.October).toLowerCase(),\n          LocaleController.getString(\"November\", R.string.November).toLowerCase(),\n          LocaleController.getString(\"December\", R.string.December).toLowerCase()\n  }; */\n\n  /* String[] monthsEng = new String[12];\n  Calendar c = Calendar.getInstance();\n  for (int i = 1; i <= 12; i++) {\n      c.set(0, 0, 0, 0, 0, 0);\n      c.set(Calendar.MONTH, i);\n      monthsEng[i - 1] = c.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.ENGLISH).toLowerCase();\n  } */\n\n  q = q.toLowerCase();\n  for(let i = 0; i < 12; i++) {\n    const month = months[i].toLowerCase();\n    if(month.indexOf(q) === 0) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getDayOfWeek(q: string) {\n  const c = new Date();\n  if(q.length <= 3) {\n    return -1;\n  }\n  \n  for(let i = 0; i < 7; i++) {\n    c.setDate(c.getDate() + 1);\n    \n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\n      return c.getDay();\n    }\n  }\n  return -1;\n}\n\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { Chat, DialogPeer, Message, MessagesPeerDialogs, Update } from \"../../layer\";\nimport type { AppChatsManager } from \"../appManagers/appChatsManager\";\nimport type { AppMessagesManager, Dialog, MyMessage } from \"../appManagers/appMessagesManager\";\nimport type { AppPeersManager } from \"../appManagers/appPeersManager\";\nimport type { AppUsersManager } from \"../appManagers/appUsersManager\";\nimport type { AppDraftsManager } from \"../appManagers/appDraftsManager\";\nimport type { AppNotificationsManager } from \"../appManagers/appNotificationsManager\";\nimport type { ApiUpdatesManager } from \"../appManagers/apiUpdatesManager\";\nimport type { ServerTimeManager } from \"../mtproto/serverTimeManager\";\nimport { tsNow } from \"../../helpers/date\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport SearchIndex from \"../searchIndex\";\nimport { forEachReverse, insertInDescendSortedArray } from \"../../helpers/array\";\nimport rootScope from \"../rootScope\";\nimport { safeReplaceObject } from \"../../helpers/object\";\nimport { AppStateManager } from \"../appManagers/appStateManager\";\nimport { SliceEnd } from \"../../helpers/slicedArray\";\n\nexport default class DialogsStorage {\n  private storage: AppStateManager['storages']['dialogs'];\n  \n  private dialogs: {[peerId: string]: Dialog} = {};\n  public byFolders: {[folderId: number]: Dialog[]} = {};\n\n  private allDialogsLoaded: {[folder_id: number]: boolean};\n  private dialogsOffsetDate: {[folder_id: number]: number};\n  private pinnedOrders: {[folder_id: number]: number[]};\n  private dialogsNum: number;\n\n  private dialogsIndex = new SearchIndex<number>();\n\n  private cachedResults: {\n    query: string,\n    count: number,\n    dialogs: Dialog[],\n    folderId: number\n  } = {\n    query: '',\n    count: 0,\n    dialogs: [],\n    folderId: 0\n  };\n\n  constructor(private appMessagesManager: AppMessagesManager, \n    private appChatsManager: AppChatsManager, \n    private appPeersManager: AppPeersManager, \n    private appUsersManager: AppUsersManager,\n    private appDraftsManager: AppDraftsManager,\n    private appNotificationsManager: AppNotificationsManager,\n    private appStateManager: AppStateManager,\n    private apiUpdatesManager: ApiUpdatesManager,\n    private serverTimeManager: ServerTimeManager\n  ) {\n    this.storage = this.appStateManager.storages.dialogs;\n\n    this.reset();\n\n    rootScope.addEventListener('language_change', (e) => {\n      const peerId = appUsersManager.getSelf().id;\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        const peerText = appPeersManager.getPeerSearchText(peerId);\n        this.dialogsIndex.indexObject(peerId, peerText);\n      }\n    });\n\n    rootScope.addMultipleEventsListeners({\n      updateFolderPeers: this.onUpdateFolderPeers,\n\n      updateDialogPinned: this.onUpdateDialogPinned,\n\n      updatePinnedDialogs: this.onUpdatePinnedDialogs,\n    });\n\n    appStateManager.getState().then((state) => {\n      this.pinnedOrders = state.pinnedOrders || {};\n      if(!this.pinnedOrders[0]) this.pinnedOrders[0] = [];\n      if(!this.pinnedOrders[1]) this.pinnedOrders[1] = [];\n      \n      const dialogs = appStateManager.storagesResults.dialogs;\n      if(dialogs.length) {\n        for(let i = 0, length = dialogs.length; i < length; ++i) {\n          const dialog = dialogs[i];\n          if(dialog) {\n            dialog.top_message = this.appMessagesManager.getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\n\n            if(dialog.topMessage) {\n              this.appMessagesManager.saveMessages([dialog.topMessage]);\n            }\n  \n            this.saveDialog(dialog);\n\n            // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\n            const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n            if(message.deleted) {\n              this.appMessagesManager.reloadConversation(dialog.peerId);\n            }\n          }\n        }\n      }\n\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\n    });\n  }\n\n  public isDialogsLoaded(folderId: number) {\n    return !!this.allDialogsLoaded[folderId];\n  }\n\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\n    this.allDialogsLoaded[folderId] = loaded;\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\n  }\n\n  public reset() {\n    this.allDialogsLoaded = {};\n    this.dialogsOffsetDate = {};\n    this.pinnedOrders = {\n      0: [],\n      1: []\n    };\n    this.dialogsNum = 0;\n  }\n\n  public resetPinnedOrder(folderId: number) {\n    this.pinnedOrders[folderId] = [];\n  }\n\n  public getOffsetDate(folderId: number) {\n    return this.dialogsOffsetDate[folderId] || 0;\n  }\n\n  public getFolder(id: number) {\n    if(id <= 1) {\n      return this.byFolders[id] ?? (this.byFolders[id] = []);\n    }\n\n    const dialogs: {dialog: Dialog, index: number}[] = [];\n    const filter = this.appMessagesManager.filtersStorage.filters[id];\n\n    for(const peerId in this.dialogs) {\n      const dialog = this.dialogs[peerId];\n      if(this.appMessagesManager.filtersStorage.testDialogForFilter(dialog, filter)) {\n        let index: number;\n\n        const pinnedIndex = filter.pinned_peers.indexOf(dialog.peerId);\n        if(pinnedIndex !== -1) {\n          index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(filter.pinned_peers.length - 1 - pinnedIndex));\n        } else if(dialog.pFlags?.pinned) {\n          index = this.generateIndexForDialog(dialog, true);\n        } else {\n          index = dialog.index;\n        }\n\n        dialogs.push({dialog, index});\n      }\n    }\n\n    dialogs.sort((a, b) => b.index - a.index);\n    return dialogs.map(d => d.dialog);\n  }\n\n  public getDialog(peerId: number, folderId?: number): [Dialog, number] | [] {\n    const folders: Dialog[][] = [];\n\n    if(folderId === undefined) {\n      const dialogs = this.byFolders;\n      for(const folderId in dialogs) {\n        folders.push(dialogs[folderId]);\n      }\n    } else {\n      folders.push(this.getFolder(folderId));\n    }\n\n    for(let folder of folders) {\n      const index = folder.findIndex(dialog => dialog.peerId === peerId);\n      if(index !== -1) {\n        return [folder[index], index];\n      }\n    }\n\n    return [];\n  }\n\n  public getDialogOnly(peerId: number) {\n    return this.dialogs[peerId];\n  }\n\n  /*\n  var date = Date.now() / 1000 | 0;\n  var m = date * 0x10000;\n\n  var k = (date + 1) * 0x10000;\n  k - m;\n  65536\n  */\n  public generateDialogIndex(date?: number) {\n    if(date === undefined) {\n      date = tsNow(true) + this.serverTimeManager.serverTimeOffset;\n    }\n\n    return (date * 0x10000) + ((++this.dialogsNum) & 0xFFFF);\n  }\n\n  public generateIndexForDialog(dialog: Dialog, justReturn = false, message?: MyMessage) {\n    const channelId = this.appPeersManager.isChannel(dialog.peerId) ? -dialog.peerId : 0;\n    \n    let topDate = 0;\n    if(dialog.pFlags.pinned && !justReturn) {\n      topDate = this.generateDialogPinnedDate(dialog);\n    } else {\n      if(!message) {\n        message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      }\n\n      topDate = (message as Message.message).date || topDate;\n      if(channelId) {\n        const channel = this.appChatsManager.getChat(channelId);\n        if(!topDate || (channel.date && channel.date > topDate)) {\n          topDate = channel.date;\n        }\n      }\n  \n      if(dialog.draft?._ === 'draftMessage' && dialog.draft.date > topDate) {\n        topDate = dialog.draft.date;\n      }\n    }\n\n    if(!topDate) {\n      topDate = Date.now() / 1000;\n    }\n\n    const index = this.generateDialogIndex(topDate);\n    if(justReturn) return index;\n    dialog.index = index;\n  }\n\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\n  }\n\n  public generateDialogPinnedDate(dialog: Dialog) {\n    const order = this.pinnedOrders[dialog.folder_id];\n\n    const foundIndex = order.indexOf(dialog.peerId);\n    let pinnedIndex = foundIndex;\n    if(foundIndex === -1) {\n      pinnedIndex = order.push(dialog.peerId) - 1;\n      this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n    }\n\n    return this.generateDialogPinnedDateByIndex(pinnedIndex);\n  }\n\n  public generateDialog(peerId: number) {\n    const dialog: Dialog = {\n      _: 'dialog',\n      pFlags: {},\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      top_message: 0,\n      read_inbox_max_id: 0,\n      read_outbox_max_id: 0,\n      unread_count: 0,\n      unread_mentions_count: 0,\n      notify_settings: {\n        _: 'peerNotifySettings',\n      },\n    };\n\n    return dialog;\n  }\n\n  public setDialogToState(dialog: Dialog) {\n    const historyStorage = this.appMessagesManager.getHistoryStorage(dialog.peerId);\n    const history = [].concat(historyStorage.history.slice);\n    let incomingMessage: any;\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const mid = history[i];\n      const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, mid);\n      if(!message.pFlags.is_outgoing) {\n        incomingMessage = message;\n  \n        if(message.fromId !== dialog.peerId) {\n          this.appStateManager.requestPeer(message.fromId, 'topMessage_' + dialog.peerId, 1);\n        }\n\n        break;\n      }\n    }\n\n    dialog.topMessage = incomingMessage;\n\n    if(dialog.peerId < 0 && dialog.pts) {\n      const newPts = this.apiUpdatesManager.getChannelState(-dialog.peerId, dialog.pts).pts;\n      dialog.pts = newPts;\n    }\n\n    this.storage.set({\n      [dialog.peerId]: dialog\n    });\n\n    this.appStateManager.requestPeer(dialog.peerId, 'dialog_' + dialog.peerId, 1);\n  }\n\n  public pushDialog(dialog: Dialog, offsetDate?: number) {\n    const dialogs = this.getFolder(dialog.folder_id);\n    const pos = dialogs.findIndex(d => d.peerId === dialog.peerId);\n    if(pos !== -1) {\n      dialogs.splice(pos, 1);\n    }\n\n    //if(!this.dialogs[dialog.peerId]) {\n      this.dialogs[dialog.peerId] = dialog;\n\n      this.setDialogToState(dialog);\n    //}\n\n    if(offsetDate &&\n      !dialog.pFlags.pinned &&\n      (!this.dialogsOffsetDate[dialog.folder_id] || offsetDate < this.dialogsOffsetDate[dialog.folder_id])) {\n      if(pos !== -1) {\n        // So the dialog jumped to the last position\n        return false;\n      }\n      this.dialogsOffsetDate[dialog.folder_id] = offsetDate;\n    }\n\n    insertInDescendSortedArray(dialogs, dialog, 'index', pos);\n  }\n\n  public dropDialog(peerId: number): [Dialog, number] | [] {\n    const foundDialog = this.getDialog(peerId);\n    if(foundDialog[0]) {\n      this.byFolders[foundDialog[0].folder_id].splice(foundDialog[1], 1);\n      delete this.dialogs[peerId];\n      this.dialogsIndex.indexObject(peerId, '');\n\n      // clear from state\n      this.appStateManager.keepPeerSingle(0, 'topMessage_' + peerId);\n      this.appStateManager.keepPeerSingle(0, 'dialog_' + peerId);\n      this.storage.delete(peerId);\n    }\n\n    return foundDialog;\n  }\n\n  public applyDialogs(dialogsResult: MessagesPeerDialogs.messagesPeerDialogs) {\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\n\n    // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\n    forEachReverse(dialogsResult.dialogs, (dialog, idx) => {\n      if(dialog._ === 'dialogFolder') {\n        dialogsResult.dialogs.splice(idx, 1);\n      }\n    });\n\n    this.appUsersManager.saveApiUsers(dialogsResult.users);\n    this.appChatsManager.saveApiChats(dialogsResult.chats);\n    this.appMessagesManager.saveMessages(dialogsResult.messages);\n\n    this.appMessagesManager.log('applyConversation', dialogsResult);\n\n    const updatedDialogs: {[peerId: number]: Dialog} = {};\n    (dialogsResult.dialogs as Dialog[]).forEach((dialog) => {\n      const peerId = this.appPeersManager.getPeerId(dialog.peer);\n      let topMessage = dialog.top_message;\n\n      const topPendingMessage = this.appMessagesManager.pendingTopMsgs[peerId];\n      if(topPendingMessage) {\n        if(!topMessage \n          || (this.appMessagesManager.getMessageByPeer(peerId, topPendingMessage) as MyMessage).date > (this.appMessagesManager.getMessageByPeer(peerId, topMessage) as MyMessage).date) {\n          dialog.top_message = topMessage = topPendingMessage;\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMessage;\n        }\n      }\n\n      /* const d = Object.assign({}, dialog);\n      if(peerId === 239602833) {\n        this.log.error('applyConversation lun', dialog, d);\n      } */\n\n      if(topMessage || (dialog.draft && dialog.draft._ === 'draftMessage')) {\n        this.saveDialog(dialog);\n        updatedDialogs[peerId] = dialog;\n      } else {\n        const dropped = this.dropDialog(peerId);\n        if(dropped.length) {\n          rootScope.dispatchEvent('dialog_drop', {peerId, dialog: dropped[0]});\n        }\n      }\n\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n      if(updates !== undefined) {\n        for(const update of updates) {\n          this.apiUpdatesManager.saveUpdate(update);\n        }\n\n        delete this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n      }\n    });\n\n    if(Object.keys(updatedDialogs).length) {\n      rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n    }\n  }\n\n  /**\n   * Won't save migrated from peer, forbidden peers, left and kicked\n   */\n  public saveDialog(dialog: Dialog, folderId = 0) {\n    const peerId = this.appPeersManager.getPeerId(dialog.peer);\n    if(!peerId) {\n      console.error('saveConversation no peerId???', dialog, folderId);\n      return false;\n    }\n\n    if(dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\n      console.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\n    }\n    \n    const channelId = this.appPeersManager.isChannel(peerId) ? -peerId : 0;\n\n    if(peerId < 0) {\n      const chat: Chat = this.appChatsManager.getChat(-peerId);\n      if(chat._ === 'channelForbidden' || chat._ === 'chatForbidden' || (chat as Chat.chat).pFlags.left || (chat as Chat.chat).pFlags.kicked) {\n        return false;\n      }\n    }\n\n    const peerText = this.appPeersManager.getPeerSearchText(peerId);\n    this.dialogsIndex.indexObject(peerId, peerText);\n\n    let mid: number, message;\n    if(dialog.top_message) {\n      mid = this.appMessagesManager.generateMessageId(dialog.top_message);//dialog.top_message;\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\n    } else {\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\n      message = {\n        _: 'message',\n        id: mid,\n        mid,\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id),\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        deleted: true,\n        pFlags: {out: true},\n        date: 0,\n        message: ''\n      };\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\n    }\n\n    if(!message?.pFlags) {\n      this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\n    }\n\n    if(!channelId && peerId < 0) {\n      const chat = this.appChatsManager.getChat(-peerId);\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n        const migratedToPeer = this.appPeersManager.getPeerId(chat.migrated_to);\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\n        return;\n      }\n    }\n\n    const wasDialogBefore = this.getDialogOnly(peerId);\n\n    dialog.top_message = mid;\n    dialog.read_inbox_max_id = this.appMessagesManager.generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesManager.generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id);\n\n    if(!dialog.hasOwnProperty('folder_id')) {\n      if(dialog._ === 'dialog') {\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\n        dialog.folder_id = wasDialogBefore ? wasDialogBefore.folder_id : folderId;\n      }/*  else if(dialog._ === 'dialogFolder') {\n        dialog.folder_id = dialog.folder.id;\n      } */\n    }\n\n    dialog.draft = this.appDraftsManager.saveDraft(peerId, 0, dialog.draft);\n    dialog.peerId = peerId;\n\n    // Because we saved message without dialog present\n    if(message.pFlags.is_outgoing) {\n      if(mid > dialog[message.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id']) message.pFlags.unread = true;\n      else delete message.pFlags.unread;\n    }\n\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const slice = historyStorage.history.slice;\n    /* if(historyStorage === undefined) { // warning\n      historyStorage.history.push(mid);\n      if(this.mergeReplyKeyboard(historyStorage, message)) {\n        rootScope.broadcast('history_reply_markup', {peerId});\n      }\n    } else  */if(!slice.length) {\n      historyStorage.history.unshift(mid);\n    } else if(!slice.isEnd(SliceEnd.Bottom)) { // * this will probably never happen, however, if it does, then it will fix slice with top_message\n      const slice = historyStorage.history.insertSlice([mid]);\n      slice.setEnd(SliceEnd.Bottom);\n    }\n\n    historyStorage.maxId = mid;\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\n\n    this.appNotificationsManager.savePeerSettings(peerId, dialog.notify_settings);\n\n    if(channelId && dialog.pts) {\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\n    }\n\n    this.generateIndexForDialog(dialog);\n\n    if(wasDialogBefore) {\n      safeReplaceObject(wasDialogBefore, dialog);\n    }\n\n    this.pushDialog(dialog, message.date);\n  }\n\n  public getDialogs(query = '', offsetIndex?: number, limit = 20, folderId = 0) {\n    const realFolderId = folderId > 1 ? 0 : folderId;\n    let curDialogStorage = this.getFolder(folderId);\n\n    if(query) {\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== folderId) {\n        this.cachedResults.query = query;\n        this.cachedResults.folderId = folderId;\n\n        const results = this.dialogsIndex.search(query);\n\n        this.cachedResults.dialogs = [];\n\n        for(const peerId in this.dialogs) {\n          const dialog = this.dialogs[peerId];\n          if(results.has(dialog.peerId) && dialog.folder_id === folderId) {\n            this.cachedResults.dialogs.push(dialog);\n          }\n        }\n\n        this.cachedResults.dialogs.sort((d1, d2) => d2.index - d1.index);\n\n        this.cachedResults.count = this.cachedResults.dialogs.length;\n      }\n\n      curDialogStorage = this.cachedResults.dialogs;\n    } else {\n      this.cachedResults.query = '';\n    }\n\n    let offset = 0;\n    if(offsetIndex > 0) {\n      for(; offset < curDialogStorage.length; offset++) {\n        if(offsetIndex > curDialogStorage[offset].index) {\n          break;\n        }\n      }\n    }\n\n    const loadedAll = this.isDialogsLoaded(realFolderId);\n    if(query || loadedAll || curDialogStorage.length >= offset + limit) {\n      return Promise.resolve({\n        dialogs: curDialogStorage.slice(offset, offset + limit),\n        count: loadedAll ? curDialogStorage.length : null,\n        isEnd: loadedAll && (offset + limit) >= curDialogStorage.length\n      });\n    }\n\n    return this.appMessagesManager.getTopMessages(limit, realFolderId).then(messagesDialogs => {\n      //const curDialogStorage = this[folderId];\n\n      offset = 0;\n      if(offsetIndex > 0) {\n        for(; offset < curDialogStorage.length; offset++) {\n          if(offsetIndex > curDialogStorage[offset].index) {\n            break;\n          }\n        }\n      }\n\n      //this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\n\n      return {\n        dialogs: curDialogStorage.slice(offset, offset + limit),\n        count: messagesDialogs._ === 'messages.dialogs' ? messagesDialogs.dialogs.length : messagesDialogs.count,\n        isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\n      };\n    });\n  }\n\n  // only 0 and 1 folders\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\n    //this.log('updateFolderPeers', update);\n    const peers = update.folder_peers;\n\n    peers.forEach((folderPeer) => {\n      const {folder_id, peer} = folderPeer;\n\n      const peerId = this.appPeersManager.getPeerId(peer);\n      const dialog = this.dropDialog(peerId)[0];\n      if(dialog) {\n        if(dialog.pFlags?.pinned) {\n          delete dialog.pFlags.pinned;\n          this.pinnedOrders[folder_id].findAndSplice(p => p === dialog.peerId);\n          this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n        }\n\n        dialog.folder_id = folder_id;\n        this.generateIndexForDialog(dialog);\n        this.pushDialog(dialog); // need for simultaneously updatePinnedDialogs\n      }\n\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n    });\n  };\n\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\n    const folderId = update.folder_id ?? 0;\n    //this.log('updateDialogPinned', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\n    /* if(update.folder_id > 1) {\n      const filter = this.filtersStorage.filters[update.folder_id];\n      if(update.pFlags.pinned) {\n        filter.pinned_peers.unshift(peerId);\n      } else {\n        filter.pinned_peers.findAndSplice(p => p === peerId);\n      }\n    } */\n\n    if(dialog) {\n      if(!update.pFlags.pinned) {\n        delete dialog.pFlags.pinned;\n        this.pinnedOrders[folderId].findAndSplice(p => p === dialog.peerId);\n        this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n      } else { // means set\n        dialog.pFlags.pinned = true;\n      }\n\n      this.generateIndexForDialog(dialog);\n    } \n\n    this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n  };\n\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\n    const folderId = update.folder_id ?? 0;\n        \n    const handleOrder = (order: number[]) => {\n      this.pinnedOrders[folderId].length = 0;\n      order.reverse(); // index must be higher\n      order.forEach((peerId) => {\n        newPinned[peerId] = true;\n  \n        const dialog = this.getDialogOnly(peerId);\n        this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n        if(!dialog) {\n          return;\n        }\n  \n        dialog.pFlags.pinned = true;\n        this.generateIndexForDialog(dialog);\n      });\n      \n      this.getFolder(folderId).forEach(dialog => {\n        const peerId = dialog.peerId;\n        if(dialog.pFlags.pinned && !newPinned[peerId]) {\n          this.appMessagesManager.scheduleHandleNewDialogs(peerId);\n        }\n      });\n    };\n\n    //this.log('updatePinnedDialogs', update);\n    const newPinned: {[peerId: number]: true} = {};\n    if(!update.order) {\n      apiManager.invokeApi('messages.getPinnedDialogs', {\n        folder_id: folderId\n      }).then((dialogsResult) => {\n        // * for test reordering and rendering\n        // dialogsResult.dialogs.reverse();\n\n        this.applyDialogs(dialogsResult);\n\n        handleOrder(dialogsResult.dialogs.map(d => d.peerId));\n\n        /* dialogsResult.dialogs.forEach((dialog) => {\n          newPinned[dialog.peerId] = true;\n        });\n\n        this.dialogsStorage.getFolder(folderId).forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(dialog.pFlags.pinned && !newPinned[peerId]) {\n            this.newDialogsToHandle[peerId] = {reload: true};\n            this.scheduleHandleNewDialogs();\n          }\n        }); */\n      });\n\n      return;\n    }\n\n    //this.log('before order:', this.dialogsStorage[0].map(d => d.peerId));\n\n    handleOrder(update.order.map(peer => this.appPeersManager.getPeerId((peer as DialogPeer.dialogPeer).peer)));\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { copy } from \"../../helpers/object\";\nimport type { DialogFilter, Update } from \"../../layer\";\nimport type { Modify } from \"../../types\";\nimport type { AppPeersManager } from \"../appManagers/appPeersManager\";\nimport type { AppUsersManager } from \"../appManagers/appUsersManager\";\n//import type { ApiManagerProxy } from \"../mtproto/mtprotoworker\";\nimport type _rootScope from \"../rootScope\";\nimport type {AppMessagesManager, Dialog} from '../appManagers/appMessagesManager';\nimport type {AppNotificationsManager} from \"../appManagers/appNotificationsManager\";\nimport type { ApiUpdatesManager } from \"../appManagers/apiUpdatesManager\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport { forEachReverse } from \"../../helpers/array\";\nimport { AppStateManager } from \"../appManagers/appStateManager\";\n\nexport type MyDialogFilter = Modify<DialogFilter, {\n  pinned_peers: number[],\n  include_peers: number[],\n  exclude_peers: number[],\n  orderIndex?: number\n}>;\n\n// ! because 0 index is 'All Chats'\nconst START_ORDER_INDEX = 1;\n\nexport default class FiltersStorage {\n  public filters: {[filterId: string]: MyDialogFilter} = {};\n  private orderIndex = START_ORDER_INDEX;\n\n  constructor(private appMessagesManager: AppMessagesManager,\n    private appPeersManager: AppPeersManager, \n    private appUsersManager: AppUsersManager, \n    private appNotificationsManager: AppNotificationsManager, \n    private appStateManager: AppStateManager,\n    private apiUpdatesManager: ApiUpdatesManager, \n    /* private apiManager: ApiManagerProxy, */ \n    private rootScope: typeof _rootScope) {\n\n    this.appStateManager.getState().then((state) => {\n      this.filters = state.filters;\n\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        if(filter.hasOwnProperty('orderIndex') && filter.orderIndex >= this.orderIndex) {\n          this.orderIndex = filter.orderIndex + 1;\n        }\n      }\n    });\n\n    rootScope.addMultipleEventsListeners({\n      updateDialogFilter: this.onUpdateDialogFilter,\n\n      updateDialogFilters: (update) => {\n        //console.warn('updateDialogFilters', update);\n\n        const oldFilters = copy(this.filters);\n\n        this.getDialogFilters(true).then(filters => {\n          for(const _filterId in oldFilters) {\n            const filterId = +_filterId;\n            if(!filters.find(filter => filter.id === filterId)) { // * deleted\n              this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\n            }\n          }\n\n          this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map(filter => filter.id)});\n        });\n      },\n\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\n    });\n  }\n\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\n    if(update.filter) {\n      this.saveDialogFilter(update.filter as any);\n    } else if(this.filters[update.id]) { // Папка удалена\n      //this.getDialogFilters(true);\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\n      delete this.filters[update.id];\n    }\n\n    this.appStateManager.pushToState('filters', this.filters);\n  };\n\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\n    //console.log('updateDialogFilterOrder', update);\n\n    this.orderIndex = START_ORDER_INDEX;\n    update.order.forEach((filterId, idx) => {\n      const filter = this.filters[filterId];\n      delete filter.orderIndex;\n      this.setOrderIndex(filter);\n    });\n\n    this.rootScope.dispatchEvent('filter_order', update.order);\n\n    this.appStateManager.pushToState('filters', this.filters);\n  };\n\n  public testDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    // exclude_peers\n    for(const peerId of filter.exclude_peers) {\n      if(peerId === dialog.peerId) {\n        return false;\n      }\n    }\n\n    // include_peers\n    for(const peerId of filter.include_peers) {\n      if(peerId === dialog.peerId) {\n        return true;\n      }\n    }\n\n    const pFlags = filter.pFlags;\n\n    // exclude_archived\n    if(pFlags.exclude_archived && dialog.folder_id === 1) {\n      return false;\n    }\n\n    // exclude_read\n    if(pFlags.exclude_read && !dialog.unread_count && !dialog.pFlags.unread_mark) {\n      return false;\n    }\n\n    // exclude_muted\n    if(pFlags.exclude_muted) {\n      const isMuted = this.appNotificationsManager.isPeerLocalMuted(dialog.peerId);\n      if(isMuted) {\n        return false;\n      }\n    }\n\n    const peerId = dialog.peerId;\n    if(peerId < 0) {\n      // broadcasts\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\n        return true;\n      }\n\n      // groups\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\n        return true;\n      }\n    } else {\n      // bots\n      if(this.appPeersManager.isBot(peerId)) {\n        return !!pFlags.bots;\n      }\n      \n      // non_contacts\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(peerId)) {\n        return true;\n      }\n\n      // contacts\n      if(pFlags.contacts && this.appUsersManager.isContact(peerId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public toggleDialogPin(peerId: number, filterId: number) {\n    const filter = this.filters[filterId];\n\n    const wasPinned = filter.pinned_peers.findAndSplice(p => p === peerId);\n    if(!wasPinned) {\n      filter.pinned_peers.unshift(peerId);\n    }\n    \n    return this.updateDialogFilter(filter);\n  }\n\n  public createDialogFilter(filter: MyDialogFilter) {\n    let maxId = Math.max(1, ...Object.keys(this.filters).map(i => +i));\n    filter = copy(filter);\n    filter.id = maxId + 1;\n    return this.updateDialogFilter(filter);\n  }\n\n  public updateDialogFilter(filter: MyDialogFilter, remove = false) {\n    const flags = remove ? 0 : 1;\n\n    return apiManager.invokeApi('messages.updateDialogFilter', {\n      flags,\n      id: filter.id,\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\n    }).then((bool: boolean) => { // возможно нужна проверка и откат, если результат не ТРУ\n      //console.log('updateDialogFilter bool:', bool);\n\n      if(bool) {\n        /* if(!this.filters[filter.id]) {\n          this.saveDialogFilter(filter);\n        }\n\n        rootScope.$broadcast('filter_update', filter); */\n\n        this.onUpdateDialogFilter({\n          _: 'updateDialogFilter',\n          id: filter.id,\n          filter: remove ? undefined : filter as any\n        });\n      }\n\n      return bool;\n    });\n  }\n\n  public getOutputDialogFilter(filter: MyDialogFilter) {\n    const c: MyDialogFilter = copy(filter);\n    ['pinned_peers', 'exclude_peers', 'include_peers'].forEach(key => {\n      // @ts-ignore\n      c[key] = c[key].map((peerId: number) => this.appPeersManager.getInputPeerById(peerId));\n    });\n\n    forEachReverse(c.include_peers, (peerId, idx) => {\n      if(c.pinned_peers.includes(peerId)) {\n        c.include_peers.splice(idx, 1);\n      }\n    });\n\n    return c as any as DialogFilter;\n  }\n\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\n    const keys = Object.keys(this.filters);\n    if(keys.length && !overwrite) {\n      return keys.map(filterId => this.filters[filterId]).sort((a, b) => a.orderIndex - b.orderIndex);\n    }\n\n    const filters: MyDialogFilter[] = await apiManager.invokeApi('messages.getDialogFilters') as any;\n    for(const filter of filters) {\n      this.saveDialogFilter(filter, overwrite);\n    }\n\n    //console.log(this.filters);\n    return filters;\n  }\n\n  public saveDialogFilter(filter: MyDialogFilter, update = true) {\n    ['pinned_peers', 'exclude_peers', 'include_peers'].forEach(key => {\n      // @ts-ignore\n      filter[key] = filter[key].map((peer: any) => this.appPeersManager.getPeerId(peer));\n    });\n\n    forEachReverse(filter.include_peers, (peerId, idx) => {\n      if(filter.pinned_peers.includes(peerId)) {\n        filter.include_peers.splice(idx, 1);\n      }\n    });\n    \n    filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\n\n    if(this.filters[filter.id]) {\n      Object.assign(this.filters[filter.id], filter);\n    } else {\n      this.filters[filter.id] = filter;\n    }\n\n    this.setOrderIndex(filter);\n\n    if(update) {\n      this.rootScope.dispatchEvent('filter_update', filter);\n    }\n  }\n\n  public setOrderIndex(filter: MyDialogFilter) {\n    if(filter.hasOwnProperty('orderIndex')) {\n      if(filter.orderIndex >= this.orderIndex) {\n        this.orderIndex = filter.orderIndex + 1;\n      }\n    } else {\n      filter.orderIndex = this.orderIndex++;\n    }\n\n    this.appStateManager.pushToState('filters', this.filters);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { i18n, join, LangPackKey } from \"../lib/langPack\";\nimport formatDuration, { DurationType } from \"./formatDuration\";\n\nconst CALL_DURATION_LANG_KEYS: {[type in DurationType]: LangPackKey} = {\n  s: 'Seconds',\n  m: 'Minutes',\n  h: 'Hours',\n  d: 'Days',\n  w: 'Weeks'\n};\nexport default function formatCallDuration(duration: number) {\n  const a = formatDuration(duration, 2);\n  const elements = a.map(d => i18n(CALL_DURATION_LANG_KEYS[d.type], [d.duration]));\n\n  const fragment = document.createElement('span');\n  fragment.append(...join(elements, false));\n\n  return fragment;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport type DurationType = 's' | 'm' | 'h' | 'd' | 'w';\nexport default function formatDuration(duration: number, showLast = 2) {\n  if(!duration) {\n    duration = 1;\n  }\n\n  let d: {duration: number, type: DurationType}[] = [];\n  const p = [\n    {m: 1, t: 's'},\n    {m: 60, t: 'm'}, \n    {m: 60, t: 'h'}, \n    {m: 24, t: 'd'}, \n    {m: 7, t: 'w'}\n  ] as Array<{m?: number, t: DurationType}>\n  const s = 1;\n  let t = s;\n  p.forEach((o, idx) => {\n    t *= o.m;\n\n    if(duration < t) {\n      return;\n    }\n\n    const modulus = p[idx === (p.length - 1) ? idx : idx + 1].m;\n    d.push({\n      duration: (duration / t % modulus | 0),\n      type: o.t\n    });\n  });\n\n  return d.slice(-showLast).reverse();\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { LazyLoadQueueBase } from \"../../components/lazyLoadQueue\";\nimport ProgressivePreloader from \"../../components/preloader\";\nimport { CancellablePromise, deferredPromise } from \"../../helpers/cancellablePromise\";\nimport { formatTime, tsNow } from \"../../helpers/date\";\nimport { createPosterForVideo } from \"../../helpers/files\";\nimport { copy, getObjectKeysAndSort } from \"../../helpers/object\";\nimport { randomLong } from \"../../helpers/random\";\nimport { splitStringByLength, limitSymbols, escapeRegExp } from \"../../helpers/string\";\nimport { Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates } from \"../../layer\";\nimport { InvokeApiOptions } from \"../../types\";\nimport I18n, { i18n, join, langPack, LangPackKey, _i18n } from \"../langPack\";\nimport { logger, LogTypes } from \"../logger\";\nimport type { ApiFileManager } from '../mtproto/apiFileManager';\n//import apiManager from '../mtproto/apiManager';\nimport apiManager from '../mtproto/mtprotoworker';\nimport referenceDatabase, { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport serverTimeManager from \"../mtproto/serverTimeManager\";\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport DialogsStorage from \"../storages/dialogs\";\nimport FiltersStorage from \"../storages/filters\";\n//import { telegramMeWebService } from \"../mtproto/mtproto\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appDocsManager, { MyDocument } from \"./appDocsManager\";\nimport appDownloadManager from \"./appDownloadManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appPhotosManager, { MyPhoto } from \"./appPhotosManager\";\nimport appPollsManager from \"./appPollsManager\";\nimport appStateManager from \"./appStateManager\";\nimport appUsersManager from \"./appUsersManager\";\nimport appWebPagesManager from \"./appWebPagesManager\";\nimport appDraftsManager from \"./appDraftsManager\";\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\nimport appProfileManager from \"./appProfileManager\";\nimport DEBUG, { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport SlicedArray, { Slice, SliceEnd } from \"../../helpers/slicedArray\";\nimport appNotificationsManager, { NotifyOptions } from \"./appNotificationsManager\";\nimport PeerTitle from \"../../components/peerTitle\";\nimport { forEachReverse } from \"../../helpers/array\";\nimport htmlToDocumentFragment from \"../../helpers/dom/htmlToDocumentFragment\";\nimport htmlToSpan from \"../../helpers/dom/htmlToSpan\";\nimport { REPLIES_PEER_ID } from \"../mtproto/mtproto_config\";\nimport formatCallDuration from \"../../helpers/formatCallDuration\";\nimport appAvatarsManager from \"./appAvatarsManager\";\n\n//console.trace('include');\n// TODO: если удалить сообщение в непрогруженном диалоге, то при обновлении, из-за стейта, последнего сообщения в чатлисте не будет\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\n\nconst APITIMEOUT = 0;\n\nexport type HistoryStorage = {\n  count: number | null,\n  history: SlicedArray,\n\n  maxId?: number,\n  readPromise?: Promise<void>,\n  readMaxId?: number,\n  readOutboxMaxId?: number,\n  triedToReadMaxId?: number,\n\n  maxOutId?: number,\n  reply_markup?: any\n};\n\nexport type HistoryResult = {\n  count: number,\n  history: Slice,\n  offsetIdOffset?: number,\n};\n\nexport type Dialog = MTDialog.dialog;\n\nexport type MyMessage = Message.message | Message.messageService;\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty' \n  | 'inputMessagesFilterPhotos' \n  | 'inputMessagesFilterPhotoVideo' \n  | 'inputMessagesFilterVideo' \n  | 'inputMessagesFilterDocument' \n  | 'inputMessagesFilterVoice' \n  | 'inputMessagesFilterRoundVoice' \n  | 'inputMessagesFilterRoundVideo' \n  | 'inputMessagesFilterMusic' \n  | 'inputMessagesFilterUrl' \n  | 'inputMessagesFilterMyMentions'\n  | 'inputMessagesFilterChatPhotos'\n  | 'inputMessagesFilterPinned';\n\nexport type PinnedStorage = Partial<{\n  promise: Promise<PinnedStorage>,\n  count: number,\n  maxId: number\n}>;\nexport type MessagesStorage = {\n  //generateIndex: (message: any) => void\n  [mid: string]: any\n};\n\nexport type MyMessageActionType = Message.messageService['action']['_'];\n\nexport class AppMessagesManager {\n  private static MESSAGE_ID_INCREMENT = 0x10000;\n  private static MESSAGE_ID_OFFSET = 0xFFFFFFFF;\n\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage} = {};\n  public groupedMessagesStorage: {[groupId: string]: MessagesStorage} = {}; // will be used for albums\n  private scheduledMessagesStorage: {[peerId: string]: MessagesStorage} = {};\n  private historiesStorage: {\n    [peerId: string]: HistoryStorage\n  } = {};\n  private threadsStorage: {\n    [peerId: string]: {\n      [threadId: string]: HistoryStorage\n    }\n  } = {};\n  private searchesStorage: {\n    [peerId: string]: Partial<{\n      [inputFilter in MyInputMessagesFilter]: {\n        count?: number,\n        history: number[]\n      }\n    }>\n  } = {};\n  public pinnedMessages: {[peerId: string]: PinnedStorage} = {};\n\n  public threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number} = {};\n  private threadsToReplies: {\n    [peerId_threadId: string]: string;\n  } = {};\n\n  private pendingByRandomId: {\n    [randomId: string]: {\n      peerId: number,\n      tempId: number,\n      threadId: number,\n      storage: MessagesStorage\n    }\n  } = {};\n  private pendingByMessageId: {[mid: string]: string} = {};\n  private pendingAfterMsgs: any = {};\n  public pendingTopMsgs: {[peerId: string]: number} = {};\n  private tempNum = 0;\n  private tempFinalizeCallbacks: {\n    [tempId: string]: {\n      [callbackName: string]: Partial<{\n        deferred: CancellablePromise<void>, \n        callback: (message: any) => Promise<any>\n      }>\n    }\n  } = {};\n  \n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(1);\n\n  private needSingleMessages: {[peerId: string]: number[]} = {};\n  private fetchSingleMessagesPromise: Promise<void> = null;\n\n  private maxSeenId = 0;\n\n  public migratedFromTo: {[peerId: number]: number} = {};\n  public migratedToFrom: {[peerId: number]: number} = {};\n\n  private newMessagesHandleTimeout = 0;\n  private newMessagesToHandle: {[peerId: string]: Set<number>} = {};\n  private newDialogsHandlePromise: Promise<any>;\n  private newDialogsToHandle: {[peerId: string]: Dialog} = {};\n  public newUpdatesAfterReloadToHandle: {[peerId: string]: Set<Update>} = {};\n\n  private notificationsHandlePromise = 0;\n  private notificationsToHandle: {[peerId: string]: {\n    fwdCount: number,\n    fromId: number,\n    topMessage?: MyMessage\n  }} = {};\n\n  private reloadConversationsPromise: Promise<void>;\n  private reloadConversationsPeers: Set<number> = new Set();\n\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\n\n  public dialogsStorage: DialogsStorage;\n  public filtersStorage: FiltersStorage;\n\n  private groupedTempId = 0;\n\n  private typings: {[peerId: string]: {type: SendMessageAction['_'], timeout?: number}} = {};\n\n  constructor() {\n    rootScope.addMultipleEventsListeners({\n      updateMessageID: this.onUpdateMessageId,\n\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\n      updateNewMessage: this.onUpdateNewMessage,\n      updateNewChannelMessage: this.onUpdateNewMessage,\n\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\n\n      updateEditMessage: this.onUpdateEditMessage,\n      updateEditChannelMessage: this.onUpdateEditMessage,\n\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\n      updateReadHistoryInbox: this.onUpdateReadHistory,\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\n      updateReadChannelInbox: this.onUpdateReadHistory,\n      updateReadChannelOutbox: this.onUpdateReadHistory,\n\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\n\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\n\n      updateDeleteMessages: this.onUpdateDeleteMessages,\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\n\n      updateChannel: this.onUpdateChannel,\n\n      // @ts-ignore\n      updateChannelReload: this.onUpdateChannelReload,\n\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\n\n      updateServiceNotification: this.onUpdateServiceNotification,\n\n      updatePinnedMessages: this.onUpdatePinnedMessages,\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\n\n      updateNotifySettings: this.onUpdateNotifySettings,\n\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\n\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages\n    });\n\n    // ! Invalidate notify settings, can optimize though\n    rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\n      this.getConversationsAll().then(dialogs => {\n        let filterFunc: (dialog: Dialog) => boolean;\n        if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId > 0;\n        else if(key === 'notifyBroadcasts') filterFunc = (dialog) => appChatsManager.isBroadcast(-dialog.peerId);\n        else filterFunc = (dialog) => appPeersManager.isAnyGroup(dialog.peerId);\n\n        dialogs\n        .filter(filterFunc)\n        .forEach(dialog => {\n          rootScope.dispatchEvent('dialog_notify_settings', dialog);\n        });\n      });\n    });\n\n    rootScope.addEventListener('webpage_updated', (e) => {\n      const eventData = e;\n      eventData.msgs.forEach((mid) => {\n        const message = this.getMessageById(mid) as Message.message;\n        if(!message) return;\n        message.media = {\n          _: 'messageMediaWebPage', \n          webpage: appWebPagesManager.getWebPage(eventData.id)\n        };\n\n        const peerId = this.getMessagePeer(message);\n        const storage = this.getMessagesStorage(peerId);\n        rootScope.dispatchEvent('message_edit', {\n          storage,\n          peerId,\n          mid\n        });\n      });\n    });\n\n    rootScope.addEventListener('draft_updated', (e) => {\n      const {peerId, threadId, draft} = e;\n\n      if(threadId) return;\n\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog && !threadId) {\n        dialog.draft = draft;\n        this.dialogsStorage.generateIndexForDialog(dialog);\n        this.dialogsStorage.pushDialog(dialog);\n\n        rootScope.dispatchEvent('dialog_draft', {\n          peerId,\n          draft,\n          index: dialog.index\n        });\n      } else {\n        this.reloadConversation(peerId);\n      }\n    });\n    \n    appStateManager.getState().then(state => {\n      if(state.maxSeenMsgId) {\n        this.maxSeenId = state.maxSeenMsgId;\n      }\n    });\n  }\n\n  public construct() {\n    this.filtersStorage = new FiltersStorage(this, appPeersManager, appUsersManager, appNotificationsManager, appStateManager, apiUpdatesManager, /* apiManager, */ rootScope);\n    this.dialogsStorage = new DialogsStorage(this, appChatsManager, appPeersManager, appUsersManager, appDraftsManager, appNotificationsManager, appStateManager, apiUpdatesManager, serverTimeManager);\n  }\n\n  public getInputEntities(entities: MessageEntity[]) {\n    const sendEntites = copy(entities);\n    sendEntites.forEach((entity) => {\n      if(entity._ === 'messageEntityMentionName') {\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = appUsersManager.getUserInput(entity.user_id);\n      }\n    });\n    return sendEntites;\n  }\n\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: any) => Promise<any>) {\n    const finalize = this.tempFinalizeCallbacks[tempId] ?? (this.tempFinalizeCallbacks[tempId] = {});\n    const obj = finalize[callbackName] ?? (finalize[callbackName] = {deferred: deferredPromise<void>()});\n\n    obj.callback = callback;\n\n    return obj.deferred;\n  }\n\n  public editMessage(message: any, text: string, options: Partial<{\n    noWebPage: true,\n    newMedia: any,\n    scheduleDate: number,\n    entities: MessageEntity[]\n  }> = {}): Promise<void> {\n    /* if(!this.canEditMessage(messageId)) {\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\n    } */\n\n    const {mid, peerId} = message;\n\n    if(message.pFlags.is_outgoing) {\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\n        //this.log('invoke editMessage callback', message);\n        return this.editMessage(message, text, options);\n      });\n    }\n\n    let entities = options.entities || [];\n    if(text) {\n      text = RichTextProcessor.parseMarkdown(text, entities);\n    }\n\n    const schedule_date = options.scheduleDate || (message.pFlags.is_scheduled ? message.date : undefined);\n    return apiManager.invokeApi('messages.editMessage', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: message.id,\n      message: text,\n      media: options.newMedia,\n      entities: entities.length ? this.getInputEntities(entities) : undefined,\n      no_webpage: options.noWebPage,\n      schedule_date\n    }).then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    }, (error) => {\n      this.log.error('editMessage error:', error);\n      \n      if(error && error.type === 'MESSAGE_NOT_MODIFIED') {\n        error.handled = true;\n        return;\n      }\n      if(error && error.type === 'MESSAGE_EMPTY') {\n        error.handled = true;\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  public sendText(peerId: number, text: string, options: Partial<{\n    entities: any[],\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: number,\n    queryId: string,\n    resultId: string,\n    noWebPage: true,\n    reply_markup: any,\n    clearDraft: true,\n    webPage: any,\n    scheduleDate: number,\n    silent: true\n  }> = {}) {\n    if(typeof(text) !== 'string' || !text.length) {\n      return;\n    }\n\n    //this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    const MAX_LENGTH = 4096;\n    if(text.length > MAX_LENGTH) {\n      const splitted = splitStringByLength(text, MAX_LENGTH);\n      text = splitted[0];\n\n      if(splitted.length > 1) {\n        delete options.webPage;\n      }\n\n      for(let i = 1; i < splitted.length; ++i) {\n        setTimeout(() => {\n          this.sendText(peerId, splitted[i], options);\n        }, i);\n      }\n    }\n\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    let entities = options.entities || [];\n    if(!options.viaBotId) {\n      text = RichTextProcessor.parseMarkdown(text, entities);\n      //entities = RichTextProcessor.mergeEntities(entities, RichTextProcessor.parseEntities(text));\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    message.entities = entities;\n    message.message = text;\n\n    const replyToMsgId = options.replyToMsgId ? this.getServerMessageId(options.replyToMsgId) : undefined;\n    const isChannel = appPeersManager.isChannel(peerId);\n\n    if(options.webPage) {\n      message.media = {\n        _: 'messageMediaWebPage',\n        webpage: options.webPage\n      };\n    }\n\n    const toggleError = (on: any) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      toggleError(false);\n      const sentRequestOptions: InvokeApiOptions = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      let apiPromise: any;\n      if(options.viaBotId) {\n        apiPromise = apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft\n        }, sentRequestOptions);\n      } else {\n        apiPromise = apiManager.invokeApiAfter('messages.sendMessage', {\n          no_webpage: options.noWebPage,\n          peer: appPeersManager.getInputPeerById(peerId),\n          message: text,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate || undefined,\n          silent: options.silent\n        }, sentRequestOptions);\n      }\n\n      /* function is<T>(value: any, condition: boolean): value is T {\n        return condition;\n      } */\n\n      //this.log('sendText', message.mid);\n      apiPromise.then((updates: Updates) => {\n        //this.log('sendText sent', message.mid);\n        //if(is<Updates.updateShortSentMessage>(updates, updates._ === 'updateShortSentMessage')) {\n        if(updates._ === 'updateShortSentMessage') {\n          //assumeType<Updates.updateShortSentMessage>(updates);\n          message.date = updates.date;\n          message.id = updates.id;\n          message.media = updates.media;\n          message.entities = updates.entities;\n          this.wrapMessageEntities(message);\n          if(updates.pFlags.out) {\n            message.pFlags.out = true;\n          }\n\n          // * override with new updates\n          updates = {\n            _: 'updates',\n            users: [],\n            chats: [],\n            seq: 0,\n            updates: [{\n              _: 'updateMessageID',\n              random_id: message.random_id,\n              id: updates.id\n            }, {\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\n              message: message,\n              pts: updates.pts,\n              pts_count: updates.pts_count\n            }]\n          } as any;\n        } else if((updates as Updates.updates).updates) {\n          (updates as Updates.updates).updates.forEach((update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n        // Testing bad situations\n        // var upd = angular.copy(updates)\n        // updates.updates.splice(0, 1)\n\n        apiUpdatesManager.processUpdateMessage(updates);\n\n        // $timeout(function () {\n        // ApiUpdatesManager.processUpdateMessage(upd)\n        // }, 5000)\n      }, (/* error: any */) => {\n        toggleError(true);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n    }\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft\n    });\n  }\n\n  public sendFile(peerId: number, file: File | Blob | MyDocument, options: Partial<{\n    isRoundMessage: true,\n    isVoiceMessage: true,\n    isGroupedItem: true,\n    isMedia: true,\n\n    replyToMsgId: number,\n    threadId: number,\n    groupId: string,\n    caption: string,\n    entities: MessageEntity[],\n    width: number,\n    height: number,\n    objectURL: string,\n    thumbBlob: Blob,\n    thumbURL: string,\n    duration: number,\n    background: true,\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number,\n\n    waveform: Uint8Array,\n  }> = {}) {\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    //this.checkSendOptions(options);\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? this.getServerMessageId(options.replyToMsgId) : undefined;\n\n    let attachType: string, apiFileName: string;\n\n    const fileType = 'mime_type' in file ? file.mime_type : file.type;\n    const fileName = file instanceof File ? file.name : '';\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\n    let caption = options.caption || '';\n\n    this.log('sendFile', file, fileType);\n\n    const entities = options.entities || [];\n    if(caption) {\n      caption = RichTextProcessor.parseMarkdown(caption, entities);\n    }\n\n    const attributes: DocumentAttribute[] = [];\n\n    const isPhoto = ['image/jpeg', 'image/png', 'image/bmp'].indexOf(fileType) >= 0;\n\n    let photo: MyPhoto, document: MyDocument;\n\n    let actionName: SendMessageAction['_'];\n    if(isDocument) { // maybe it's a sticker or gif\n      attachType = 'document';\n      apiFileName = '';\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\n      attachType = 'audio';\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\n      actionName = 'sendMessageUploadAudioAction';\n\n      if(options.isVoiceMessage) {\n        attachType = 'voice';\n        message.pFlags.media_unread = true;\n      }\n\n      let attribute: DocumentAttribute.documentAttributeAudio = {\n        _: 'documentAttributeAudio',\n        pFlags: {\n          voice: options.isVoiceMessage\n        },\n        waveform: options.waveform,\n        duration: options.duration || 0\n      };\n\n      attributes.push(attribute);\n    } else if(!options.isMedia) {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    } else if(isPhoto) {\n      attachType = 'photo';\n      apiFileName = 'photo.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadPhotoAction';\n\n      const photoSize = {\n        _: 'photoSize',\n        w: options.width,\n        h: options.height,\n        type: 'full',\n        location: null,\n        size: file.size\n      } as PhotoSize.photoSize;\n\n      photo = {\n        _: 'photo',\n        id: '' + message.id,\n        sizes: [photoSize],\n        w: options.width,\n        h: options.height\n      } as any;\n\n      const cacheContext = appDownloadManager.getCacheContext(photo, photoSize.type);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n      \n      photo = appPhotosManager.savePhoto(photo);\n    } else if(fileType.indexOf('video/') === 0) {\n      attachType = 'video';\n      apiFileName = 'video.mp4';\n      actionName = 'sendMessageUploadVideoAction';\n\n      let videoAttribute: DocumentAttribute.documentAttributeVideo = {\n        _: 'documentAttributeVideo',\n        pFlags: {\n          round_message: options.isRoundMessage\n        }, \n        duration: options.duration,\n        w: options.width,\n        h: options.height\n      };\n\n      attributes.push(videoAttribute);\n    } else {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    }\n\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\n\n    if(['document', 'video', 'audio', 'voice'].indexOf(attachType) !== -1 && !isDocument) {\n      const thumbs: PhotoSize[] = [];\n      document = {\n        _: 'document',\n        id: '' + message.id,\n        duration: options.duration,\n        attributes,\n        w: options.width,\n        h: options.height,\n        thumbs,\n        mime_type: fileType,\n        size: file.size\n      } as any;\n\n      const cacheContext = appDownloadManager.getCacheContext(document);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n\n      let thumb: PhotoSize.photoSize;\n      if(isPhoto) {\n        attributes.push({\n          _: 'documentAttributeImageSize',\n          w: options.width,\n          h: options.height\n        });\n\n        thumb = {\n          _: 'photoSize',\n          w: options.width,\n          h: options.height,\n          type: 'full',\n          size: file.size\n        };\n      } else if(attachType === 'video') {\n        if(options.thumbURL) {\n          thumb = {\n            _: 'photoSize',\n            w: options.width,\n            h: options.height,\n            type: 'full',\n            size: options.thumbBlob.size\n          };\n\n          const thumbCacheContext = appDownloadManager.getCacheContext(document, thumb.type);\n          thumbCacheContext.downloaded = thumb.size;\n          thumbCacheContext.url = options.thumbURL;\n        }\n      }\n\n      if(thumb) {\n        thumbs.push(thumb);\n      }\n\n      /* if(thumbs.length) {\n        const thumb = thumbs[0] as PhotoSize.photoSize;\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\n        docThumb.downloaded = thumb.size;\n        docThumb.url = thumb.url;\n      } */\n      \n      document = appDocsManager.saveDoc(document);\n    }\n\n    this.log('sendFile', attachType, apiFileName, file.type, options);\n\n    const preloader = isDocument ? undefined : new ProgressivePreloader({\n      attachMethod: 'prepend',\n      tryAgainOnFail: false,\n      isUpload: true\n    });\n\n    const sentDeferred = deferredPromise<InputMedia>();\n\n    if(preloader) {\n      preloader.attachPromise(sentDeferred);\n      sentDeferred.cancel = () => {\n        const error = new Error('Download canceled');\n        error.name = 'AbortError';\n        sentDeferred.reject(error);\n      };\n\n      sentDeferred.catch(err => {\n        if(err.name === 'AbortError' && !uploaded) {\n          this.log('cancelling upload', media);\n\n          sentDeferred.reject(err);\n          this.cancelPendingMessage(message.random_id);\n          this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n          if(uploadPromise?.cancel) {\n            uploadPromise.cancel();\n          }\n        }\n      });\n    }\n\n    const media = isDocument ? undefined : {\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\n      pFlags: {},\n      preloader,\n      photo,\n      document,\n      promise: sentDeferred\n    };\n\n    message.entities = entities;\n    message.message = caption;\n    message.media = isDocument ? {\n      _: 'messageMediaDocument',\n      pFlags: {},\n      document: file \n    } : media;\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    let uploaded = false,\n      uploadPromise: ReturnType<ApiFileManager['uploadFile']> = null;\n\n    message.send = () => {\n      if(isDocument) {\n        const {id, access_hash, file_reference} = file as MyDocument;\n\n        const inputMedia: InputMedia = {\n          _: 'inputMediaDocument',\n          id: {\n            _: 'inputDocument',\n            id,\n            access_hash,\n            file_reference\n          }\n        };\n        \n        sentDeferred.resolve(inputMedia);\n      } else if(file instanceof File || file instanceof Blob) {\n        const load = () => {\n          if(!uploaded || message.error) {\n            uploaded = false;\n            uploadPromise = appDownloadManager.upload(file);\n            sentDeferred.notifyAll({done: 0, total: file.size});\n          }\n\n          let thumbUploadPromise: typeof uploadPromise;\n          if(attachType === 'video' && options.objectURL) {\n            thumbUploadPromise = new Promise((resolve, reject) => {\n              const blobPromise = options.thumbBlob ? Promise.resolve(options.thumbBlob) : createPosterForVideo(options.objectURL);\n              blobPromise.then(blob => {\n                if(!blob) {\n                  resolve(null);\n                } else {\n                  appDownloadManager.upload(blob).then(resolve, reject);\n                }\n              }, reject);\n            });\n          }\n  \n          uploadPromise && uploadPromise.then(async(inputFile) => {\n            /* if(DEBUG) {\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\n            } */\n\n            delete message.media.preloader;\n\n            inputFile.name = apiFileName;\n            uploaded = true;\n            let inputMedia: InputMedia;\n            switch(attachType) {\n              case 'photo':\n                inputMedia = {\n                  _: 'inputMediaUploadedPhoto', \n                  file: inputFile\n                };\n                break;\n\n              default:\n                inputMedia = {\n                  _: 'inputMediaUploadedDocument', \n                  file: inputFile, \n                  mime_type: fileType, \n                  attributes\n                };\n            }\n\n            if(thumbUploadPromise) {\n              try {\n                const inputFile = await thumbUploadPromise;\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\n              } catch(err) {\n                this.log.error('sendFile thumb upload error:', err);\n              }\n            }\n            \n            sentDeferred.resolve(inputMedia);\n          }, (/* error */) => {\n            toggleError(true);\n          });\n  \n          uploadPromise.addNotifyListener((progress: {done: number, total: number}) => {\n            /* if(DEBUG) {\n              this.log('upload progress', progress);\n            } */\n\n            const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\n            if(actionName) {\n              this.setTyping(peerId, {_: actionName, progress: percents | 0});\n            }\n            sentDeferred.notifyAll(progress);\n          });\n\n          return sentDeferred;\n        };\n\n        if(options.isGroupedItem) {\n          load();\n        } else {\n          this.sendSmthLazyLoadQueue.push({\n            load\n          });\n        }\n      }\n\n      return sentDeferred;\n    };\n\n    this.beforeMessageSending(message, {\n      isGroupedItem: options.isGroupedItem, \n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft\n    });\n\n    if(!options.isGroupedItem) {\n      sentDeferred.then(inputMedia => {\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n        return apiManager.invokeApi('messages.sendMedia', {\n          background: options.background,\n          peer: appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          message: caption,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          entities,\n          clear_draft: options.clearDraft\n        }).then((updates) => {\n          apiUpdatesManager.processUpdateMessage(updates);\n        }, (error) => {\n          if(attachType === 'photo' &&\n            error.code === 400 &&\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\n            error.handled = true;\n            attachType = 'document';\n            message.send();\n            return;\n          }\n\n          toggleError(true);\n        });\n      });\n    }\n\n    return {message, promise: sentDeferred};\n  }\n\n  public async sendAlbum(peerId: number, files: File[], options: Partial<{\n    isMedia: true,\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    threadId: number,\n    caption: string,\n    sendFileDetails: Partial<{\n      duration: number,\n      width: number,\n      height: number,\n      objectURL: string,\n      thumbBlob: Blob,\n      thumbURL: string\n    }>[],\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number\n  }> = {}) {\n    //this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    if(files.length === 1) {\n      return this.sendFile(peerId, files[0], {...options, ...options.sendFileDetails[0]});\n    }\n\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    const replyToMsgId = options.replyToMsgId ? this.getServerMessageId(options.replyToMsgId) : undefined;\n\n    let caption = options.caption || '';\n    let entities = options.entities || [];\n    if(caption) {\n      caption = RichTextProcessor.parseMarkdown(caption, entities);\n    }\n\n    this.log('sendAlbum', files, options);\n\n    const groupId = '' + ++this.groupedTempId;\n\n    const messages = files.map((file, idx) => {\n      const details = options.sendFileDetails[idx];\n      const o: any = {\n        isGroupedItem: true,\n        isMedia: options.isMedia,\n        scheduleDate: options.scheduleDate,\n        silent: options.silent,\n        replyToMsgId,\n        threadId: options.threadId,\n        groupId,\n        ...details\n      };\n\n      if(idx === 0) {\n        o.caption = caption;\n        o.entities = entities;\n        //o.replyToMsgId = replyToMsgId;\n      }\n\n      return this.sendFile(peerId, file, o).message;\n    });\n\n    if(options.threadId) {\n      appDraftsManager.syncDraft(peerId, options.threadId);\n    } else {\n      appDraftsManager.saveDraft(peerId, options.threadId, null, {notify: true});  \n    }\n    \n    // * test pending\n    //return;\n\n    const toggleError = (message: any, on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    const inputPeer = appPeersManager.getInputPeerById(peerId);\n    const invoke = (multiMedia: any[]) => {\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n      this.sendSmthLazyLoadQueue.push({\n        load: () => {\n          return apiManager.invokeApi('messages.sendMultiMedia', {\n            peer: inputPeer,\n            multi_media: multiMedia,\n            reply_to_msg_id: replyToMsgId,\n            schedule_date: options.scheduleDate,\n            silent: options.silent,\n            clear_draft: options.clearDraft\n          }).then((updates) => {\n            apiUpdatesManager.processUpdateMessage(updates);\n          }, (error) => {\n            messages.forEach(message => toggleError(message, true));\n          });\n        }\n      });\n    };\n\n    const promises: Promise<InputSingleMedia>[] = messages.map((message, idx) => {\n      return (message.send() as Promise<InputMedia>).then((inputMedia: InputMedia) => {\n        return apiManager.invokeApi('messages.uploadMedia', {\n          peer: inputPeer,\n          media: inputMedia\n        });\n      })\n      .then(messageMedia => {\n        let inputMedia: any;\n        if(messageMedia._ === 'messageMediaPhoto') {\n          const photo = appPhotosManager.savePhoto(messageMedia.photo);\n          inputMedia = appPhotosManager.getInput(photo);\n        } else if(messageMedia._ === 'messageMediaDocument') {\n          const doc = appDocsManager.saveDoc(messageMedia.document);\n          inputMedia = appDocsManager.getMediaInput(doc);\n        }\n\n        const inputSingleMedia: InputSingleMedia = {\n          _: 'inputSingleMedia',\n          media: inputMedia,\n          random_id: message.random_id,\n          message: caption,\n          entities\n        };\n\n        // * only 1 caption for all inputs\n        if(caption) {\n          caption = '';\n          entities = [];\n        }\n\n        return inputSingleMedia;\n      }).catch((err: any) => {\n        if(err.name === 'AbortError') {\n          return null;\n        }\n\n        this.log.error('sendAlbum upload item error:', err, message);\n        toggleError(message, true);\n        throw err;\n      });\n    });\n\n    Promise.all(promises).then(inputs => {\n      invoke(inputs.filter(Boolean));\n    });\n  }\n\n  public sendOther(peerId: number, inputMedia: any, options: Partial<{\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: number,\n    reply_markup: any,\n    clearDraft: true,\n    queryId: string\n    resultId: string,\n    scheduleDate: number,\n    silent: true\n  }> = {}) {\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    //this.checkSendOptions(options);\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? this.getServerMessageId(options.replyToMsgId) : undefined;\n\n    let media;\n    switch(inputMedia._) {\n      case 'inputMediaPoll': {\n        inputMedia.poll.id = message.id;\n        appPollsManager.savePoll(inputMedia.poll, {\n          _: 'pollResults',\n          flags: 4,\n          total_voters: 0,\n          pFlags: {},\n        });\n\n        const {poll, results} = appPollsManager.getPoll('' + message.id);\n        media = {\n          _: 'messageMediaPoll',\n          poll,\n          results\n        };\n\n        break;\n      }\n      /* case 'inputMediaPhoto':\n        media = {\n          _: 'messageMediaPhoto',\n          photo: appPhotosManager.getPhoto(inputMedia.id.id),\n          caption: inputMedia.caption || ''\n        };\n        break;\n\n      case 'inputMediaDocument':\n        var doc = appDocsManager.getDoc(inputMedia.id.id);\n        if(doc.sticker && doc.stickerSetInput) {\n          appStickersManager.pushPopularSticker(doc.id);\n        }\n        media = {\n          _: 'messageMediaDocument',\n          'document': doc,\n          caption: inputMedia.caption || ''\n        };\n        break;\n\n      case 'inputMediaContact':\n        media = {\n          _: 'messageMediaContact',\n          phone_number: inputMedia.phone_number,\n          first_name: inputMedia.first_name,\n          last_name: inputMedia.last_name,\n          user_id: 0\n        };\n        break;\n\n      case 'inputMediaGeoPoint':\n        media = {\n          _: 'messageMediaGeo',\n          geo: {\n            _: 'geoPoint',\n            'lat': inputMedia.geo_point['lat'],\n            'long': inputMedia.geo_point['long']\n          }\n        };\n        break;\n\n      case 'inputMediaVenue':\n        media = {\n          _: 'messageMediaVenue',\n          geo: {\n            _: 'geoPoint',\n            'lat': inputMedia.geo_point['lat'],\n            'long': inputMedia.geo_point['long']\n          },\n          title: inputMedia.title,\n          address: inputMedia.address,\n          provider: inputMedia.provider,\n          venue_id: inputMedia.venue_id\n        };\n        break;\n\n      case 'messageMediaPending':\n        media = inputMedia;\n        break; */\n    }\n\n    message.media = media;\n\n    let toggleError = (on: boolean) => {\n      /* const historyMessage = this.messagesForHistory[messageId];\n      if (on) {\n        message.error = true\n        if (historyMessage) {\n          historyMessage.error = true\n        }\n      } else {\n        delete message.error\n        if (historyMessage) {\n          delete historyMessage.error\n        }\n      } */\n      rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      const sentRequestOptions: any = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      let apiPromise: Promise<any>;\n      if(options.viaBotId) {\n        apiPromise = apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft\n        }, sentRequestOptions);\n      } else {\n        apiPromise = apiManager.invokeApiAfter('messages.sendMedia', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          message: '',\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent\n        }, sentRequestOptions);\n      }\n\n      apiPromise.then((updates) => {\n        if(updates.updates) {\n          updates.updates.forEach((update: any) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true\n            }\n          });\n        }\n\n        apiUpdatesManager.processUpdateMessage(updates);\n      }, (error) => {\n        toggleError(true);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n    }\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft\n    });\n  }\n\n  /* private checkSendOptions(options: Partial<{\n    scheduleDate: number\n  }>) {\n    if(options.scheduleDate) {\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\n      if(options.scheduleDate <= minTimestamp) {\n        delete options.scheduleDate;\n      }\n    }\n  } */\n\n  private beforeMessageSending(message: any, options: Partial<{\n    isGroupedItem: true, \n    isScheduled: true, \n    threadId: number, \n    clearDraft: true\n  }> = {}) {\n    const messageId = message.id;\n    const peerId = this.getMessagePeer(message);\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getMessagesStorage(peerId);\n\n    if(options.isScheduled) {\n      //if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\n      setTimeout(() => {\n        rootScope.dispatchEvent('scheduled_new', {peerId, mid: messageId});\n      }, 0);\n    } else {\n      /* if(options.threadId && this.threadsStorage[peerId]) {\n        delete this.threadsStorage[peerId][options.threadId];\n      } */\n      const storages: HistoryStorage[] = [\n        this.getHistoryStorage(peerId),\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\n      ];\n\n      for(const storage of storages) {\n        if(storage) {\n          storage.history.unshift(messageId);\n        }\n      }\n\n      //if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isOutgoing: true});\n      setTimeout(() => {\n        this.setDialogTopMessage(message);\n        rootScope.dispatchEvent('history_append', {storage, peerId, mid: messageId});\n      }, 0);\n    }\n\n    if(!options.isGroupedItem && options.clearDraft) {\n      if(options.threadId) {\n        appDraftsManager.syncDraft(peerId, options.threadId);\n      } else {\n        appDraftsManager.saveDraft(peerId, options.threadId, null, {notify: true});  \n      }\n    }\n    \n    this.pendingByRandomId[message.random_id] = {\n      peerId, \n      tempId: messageId, \n      threadId: options.threadId, \n      storage\n    };\n\n    if(!options.isGroupedItem && message.send) {\n      setTimeout(message.send, 0);\n      //setTimeout(message.send, 4000);\n      //setTimeout(message.send, 7000);\n    }\n  }\n\n  private generateOutgoingMessage(peerId: number, options: Partial<{\n    scheduleDate: number,\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: number,\n    groupId: string,\n    reply_markup: any,\n  }>) {\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    const message: any = {\n      _: 'message',\n      id: this.generateTempMessageId(peerId),\n      from_id: this.generateFromId(peerId),\n      peer_id: appPeersManager.getOutputPeer(peerId),\n      pFlags: this.generateFlags(peerId),\n      date: options.scheduleDate || (tsNow(true) + serverTimeManager.serverTimeOffset),\n      message: '',\n      grouped_id: options.groupId,\n      random_id: randomLong(),\n      reply_to: this.generateReplyHeader(options.replyToMsgId, options.threadId),\n      via_bot_id: options.viaBotId,\n      reply_markup: options.reply_markup,\n      replies: this.generateReplies(peerId),\n      views: appPeersManager.isBroadcast(peerId) && 1,\n      pending: true,\n    };\n\n    return message;\n  }\n\n  private generateReplyHeader(replyToMsgId: number, replyToTopId?: number) {\n    const header = {\n      _: 'messageReplyHeader',\n      reply_to_msg_id: replyToMsgId || replyToTopId,\n    } as MessageReplyHeader;\n\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\n      header.reply_to_top_id = replyToTopId;\n    }\n\n    return header;\n  }\n\n  private generateReplies(peerId: number) {\n    let replies: MessageReplies.messageReplies;\n    if(appPeersManager.isBroadcast(peerId)) {\n      const channelFull = appProfileManager.chatsFull[-peerId] as ChatFull.channelFull;\n      if(channelFull?.linked_chat_id) {\n        replies = {\n          _: 'messageReplies',\n          flags: 1,\n          pFlags: {\n            comments: true\n          },\n          channel_id: channelFull.linked_chat_id,\n          replies: 0,\n          replies_pts: 0\n        };\n      }\n    }\n\n    return replies;\n  }\n\n  /**\n   * Generate correct from_id according to anonymous or broadcast\n   */\n  private generateFromId(peerId: number) {\n    if(peerId < 0 && (appPeersManager.isBroadcast(peerId) || appPeersManager.getPeer(peerId).admin_rights?.pFlags?.anonymous)) {\n      return undefined;\n    } else {\n      return appPeersManager.getOutputPeer(appUsersManager.getSelf().id);\n    }\n  }\n\n  private generateFlags(peerId: number) {\n    const pFlags: any = {};\n    const fromId = appUsersManager.getSelf().id;\n    if(peerId !== fromId) {\n      pFlags.out = true;\n\n      if(!appPeersManager.isChannel(peerId) && !appUsersManager.isBot(peerId)) {\n        pFlags.unread = true;\n      }\n    }\n\n    if(appPeersManager.isBroadcast(peerId)) {\n      pFlags.post = true;\n    }\n\n    return pFlags;\n  }\n\n  private generateForwardHeader(peerId: number, originalMessage: Message.message) {\n    const myId = appUsersManager.getSelf().id;\n    if(originalMessage.fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from) {\n      return;\n    }\n\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\n      _: 'messageFwdHeader',\n      flags: 0,\n      date: originalMessage.date\n    };\n\n    if(originalMessage.fwd_from) {\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\n    } else {\n      fwdHeader.from_id = appPeersManager.getOutputPeer(originalMessage.fromId);\n      fwdHeader.post_author = originalMessage.post_author;\n    }\n\n    if(appPeersManager.isBroadcast(originalMessage.peerId)) {\n      if(originalMessage.post_author) {\n        fwdHeader.post_author = originalMessage.post_author;\n      }\n\n      fwdHeader.channel_post = originalMessage.id;\n    }\n    \n    // * there is no way to detect whether user profile is hidden\n    if(peerId === myId) {\n      fwdHeader.saved_from_msg_id = originalMessage.id;\n      fwdHeader.saved_from_peer = appPeersManager.getOutputPeer(originalMessage.peerId);\n    }\n\n    return fwdHeader;\n  }\n\n  public generateFakeAvatarMessage(peerId: number, photo: Photo) {\n    const maxId = Number.MAX_SAFE_INTEGER;\n    const message = {\n      _: 'messageService',\n      action: {\n        _: 'messageActionChannelEditPhoto',\n        photo\n      },\n      mid: maxId,\n      peerId,\n      date: (photo as Photo.photo).date,\n      fromId: peerId\n    } as Message.messageService;\n\n    this.getMessagesStorage(peerId)[maxId] = message;\n    return message;\n  }\n\n  public setDialogTopMessage(message: MyMessage, dialog: MTDialog.dialog = this.getDialogOnly(message.peerId)) {\n    if(dialog) {\n      dialog.top_message = message.mid;\n      \n      const historyStorage = this.getHistoryStorage(message.peerId);\n      historyStorage.maxId = message.mid;\n\n      this.dialogsStorage.generateIndexForDialog(dialog, false, message);\n\n      this.scheduleHandleNewDialogs(message.peerId, dialog);\n    }\n  }\n\n  public cancelPendingMessage(randomId: string) {\n    const pendingData = this.pendingByRandomId[randomId];\n\n    /* if(DEBUG) {\n      this.log('cancelPendingMessage', randomId, pendingData);\n    } */\n\n    if(pendingData) {\n      const {peerId, tempId, storage} = pendingData;\n      const historyStorage = this.getHistoryStorage(peerId);\n\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updateDeleteMessages',\n          messages: [tempId]\n        }\n      });\n\n      historyStorage.history.delete(tempId);\n\n      delete this.pendingByRandomId[randomId];\n      delete storage[tempId];\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public async refreshConversations() {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(let folderId = 0; folderId < 2; ++folderId) {\n      let offsetDate = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getTopMessages(limit, folderId, offsetDate);\n  \n        if(dialogs.length) {\n          outDialogs.push(...dialogs as Dialog[]);\n          const dialog = dialogs[dialogs.length - 1];\n\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\n          const peerId = appPeersManager.getPeerId(dialog.peer);\n          const mid = this.generateMessageId(dialog.top_message);\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\n\n          if(!offsetDate) {\n            console.error('refreshConversations: got no offsetDate', dialog);\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n\n    let obj: {[peerId: string]: Dialog} = {};\n    outDialogs.forEach(dialog => {\n      obj[dialog.peerId] = dialog;\n    });\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n\n    return outDialogs;\n  }\n\n  public async getConversationsAll(query = '', folderId = 0) {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(; folderId < 2; ++folderId) {\n      let offsetIndex = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId);\n  \n        if(dialogs.length) {\n          outDialogs.push(...dialogs);\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return outDialogs;\n  }\n\n  public getConversations(query = '', offsetIndex?: number, limit = 20, folderId = 0) {\n    return this.dialogsStorage.getDialogs(query, offsetIndex, limit, folderId);\n  }\n\n  public getReadMaxIdIfUnread(peerId: number, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(threadId) {\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\n      return !message.pFlags.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    } else {\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\n      const readMaxId = peerId > 0 ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\n      return !message.pFlags.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    }\n  }\n\n  public getTopMessages(limit: number, folderId: number, offsetDate?: number) {\n    const dialogs = this.dialogsStorage.getFolder(folderId);\n    let offsetId = 0;\n    let offsetPeerId = 0;\n    let offsetIndex = 0;\n\n    if(offsetDate === undefined) {\n      offsetDate = this.dialogsStorage.getOffsetDate(folderId);\n    }\n\n    if(offsetDate) {\n      offsetIndex = offsetDate * 0x10000;\n      offsetDate += serverTimeManager.serverTimeOffset;\n    }\n\n    // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\n    // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\n    // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\n    return apiManager.invokeApiSingle('messages.getDialogs', {\n      folder_id: folderId,\n      offset_date: offsetDate,\n      offset_id: offsetId,\n      offset_peer: appPeersManager.getInputPeerById(offsetPeerId),\n      limit,\n      hash: 0\n    }, {\n      //timeout: APITIMEOUT,\n      noErrorBox: true\n    }).then((dialogsResult) => {\n      if(dialogsResult._ === 'messages.dialogsNotModified') return null;\n\n      if(DEBUG) {\n        this.log('messages.getDialogs result:', dialogsResult.dialogs, {...dialogsResult.dialogs[0]});\n      }\n\n      /* if(!offsetDate) {\n        telegramMeWebService.setAuthorized(true);\n      } */\n\n      // can reset here pinned order\n      if(!offsetId && !offsetDate && !offsetPeerId) {\n        this.dialogsStorage.resetPinnedOrder(folderId);\n      }\n\n      appUsersManager.saveApiUsers(dialogsResult.users);\n      appChatsManager.saveApiChats(dialogsResult.chats);\n      this.saveMessages(dialogsResult.messages);\n\n      let maxSeenIdIncremented = offsetDate ? true : false;\n      let hasPrepend = false;\n      const noIdsDialogs: {[peerId: number]: Dialog} = {};\n      forEachReverse((dialogsResult.dialogs as Dialog[]), dialog => {\n        //const d = Object.assign({}, dialog);\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\n        this.dialogsStorage.saveDialog(dialog, dialog.folder_id ?? folderId);\n\n        if(!maxSeenIdIncremented &&\n          !appPeersManager.isChannel(appPeersManager.getPeerId(dialog.peer))) {\n          this.incrementMaxSeenId(dialog.top_message);\n          maxSeenIdIncremented = true;\n        }\n\n        if(dialog.peerId === undefined) {\n          return;\n        }\n\n        /* if(dialog.peerId === -1213511294) {\n          this.log.error('lun bot', folderId, d);\n        } */\n\n        if(offsetIndex && dialog.index > offsetIndex) {\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\n          hasPrepend = true;\n        }\n\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\n        if(!this.getServerMessageId(dialog.read_inbox_max_id) && !this.getServerMessageId(dialog.read_outbox_max_id)) {\n          noIdsDialogs[dialog.peerId] = dialog;\n\n          this.log.error('noIdsDialogs', dialog);\n\n          /* if(dialog.peerId === -1213511294) {\n            this.log.error('lun bot', folderId);\n          } */\n        }\n      });\n\n      if(Object.keys(noIdsDialogs).length) {\n        //setTimeout(() => { // test bad situation\n          this.reloadConversation(Object.keys(noIdsDialogs).map(id => +id)).then(() => {\n            rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\n  \n            for(let peerId in noIdsDialogs) {\n              rootScope.dispatchEvent('dialog_unread', {peerId: +peerId});\n            }\n          });\n        //}, 10e3);\n      }\n\n      const count = (dialogsResult as MessagesDialogs.messagesDialogsSlice).count;\n\n      if(limit > dialogsResult.dialogs.length || \n        !count || \n        dialogs.length >= count) {\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\n      }\n\n      if(hasPrepend) {\n        this.scheduleHandleNewDialogs();\n      } else {\n        rootScope.dispatchEvent('dialogs_multiupdate', {});\n      }\n\n      return dialogsResult;\n    });\n  }\n\n  public forwardMessages(peerId: number, fromPeerId: number, mids: number[], options: Partial<{\n    withMyScore: true,\n    silent: true,\n    scheduleDate: number\n  }> = {}) {\n    peerId = appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    mids = mids.slice().sort((a, b) => a - b);\n\n    const groups: {\n      [groupId: string]: {\n        tempId: string,\n        messages: any[]\n      }\n    } = {};\n\n    const newMessages = mids.map(mid => {\n      const originalMessage: Message.message = this.getMessageByPeer(fromPeerId, mid);\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\n      message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\n\n      (['entities', 'forwards', 'message', 'media', 'reply_markup', 'views'] as any as Array<keyof MyMessage>).forEach(key => {\n        // @ts-ignore\n        message[key] = originalMessage[key];\n      });\n\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n      if(document) {\n        const types: MyDocument['type'][] = ['round', 'voice'];\n        if(types.includes(document.type)) {\n          (message as MyMessage).pFlags.media_unread = true;\n        }\n      }\n\n      if(originalMessage.grouped_id) {\n        const group = groups[originalMessage.grouped_id] ?? (groups[originalMessage.grouped_id] = {tempId: '' + ++this.groupedTempId, messages: []});\n        group.messages.push(message);\n      }\n\n      return message;\n    });\n\n    for(const groupId in groups) {\n      const group = groups[groupId];\n      if(group.messages.length > 1) {\n        group.messages.forEach(message => {\n          message.grouped_id = group.tempId;\n        });\n      }\n    }\n\n    newMessages.forEach(message => {\n      this.beforeMessageSending(message, {\n        isScheduled: !!options.scheduleDate || undefined\n      });\n    });\n\n    const sentRequestOptions: InvokeApiOptions = {};\n    if(this.pendingAfterMsgs[peerId]) {\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n    }\n\n    const promise = /* true ? Promise.resolve() :  */apiManager.invokeApiAfter('messages.forwardMessages', {\n      from_peer: appPeersManager.getInputPeerById(fromPeerId),\n      id: mids.map(mid => this.getServerMessageId(mid)),\n      random_id: newMessages.map(message => message.random_id),\n      to_peer: appPeersManager.getInputPeerById(peerId),\n      with_my_score: options.withMyScore,\n      silent: options.silent,\n      schedule_date: options.scheduleDate\n    }, sentRequestOptions).then((updates) => {\n      this.log('forwardMessages updates:', updates);\n      apiUpdatesManager.processUpdateMessage(updates);\n    }).finally(() => {\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n        delete this.pendingAfterMsgs[peerId];\n      }\n    });\n\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\n    return promise;\n  }\n\n  public getMessageFromStorage(storage: MessagesStorage, messageId: number) {\n    return storage && storage[messageId] || {\n      _: 'messageEmpty',\n      id: messageId,\n      deleted: true,\n      pFlags: {}\n    };\n  }\n\n  private createMessageStorage() {\n    const storage: MessagesStorage = {} as any;\n    \n    /* let num = 0;\n    Object.defineProperty(storage, 'num', {\n      get: () => ++num,\n      set: (_num: number) => num = _num, \n      enumerable: false\n    });\n\n    Object.defineProperty(storage, 'generateIndex', {\n      value: (message: any) => {\n        if(message.index === undefined) {\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\n        }\n      },\n      enumerable: false\n    }); */\n\n    return storage;\n  }\n\n  public getMessagesStorage(peerId: number) {\n    return this.messagesStorageByPeerId[peerId] ?? (this.messagesStorageByPeerId[peerId] = this.createMessageStorage());\n  }\n\n  public getMessageById(messageId: number) {\n    for(const peerId in this.messagesStorageByPeerId) {\n      if(appPeersManager.isChannel(+peerId)) {\n        continue;\n      }\n\n      const message = this.messagesStorageByPeerId[peerId][messageId];\n      if(message) {\n        return message;\n      }\n    }\n\n    return this.getMessageFromStorage(null, messageId);\n  }\n\n  public getMessageByPeer(peerId: number, messageId: number) {\n    if(!peerId) {\n      return this.getMessageById(messageId);\n    }\n\n    return this.getMessageFromStorage(this.getMessagesStorage(peerId), messageId);\n  }\n\n  public getMessagePeer(message: any): number {\n    const toId = message.peer_id && appPeersManager.getPeerId(message.peer_id) || 0;\n\n    return toId;\n  }\n\n  public getDialogByPeerId(peerId: number): [Dialog, number] | [] {\n    return this.dialogsStorage.getDialog(peerId);\n  }\n\n  public getDialogOnly(peerId: number) {\n    return this.dialogsStorage.getDialogOnly(peerId);\n  }\n\n  public reloadConversation(peerId: number | number[]) {\n    [].concat(peerId).forEach(peerId => {\n      if(!this.reloadConversationsPeers.has(peerId)) {\n        this.reloadConversationsPeers.add(peerId);\n        //this.log('will reloadConversation', peerId);\n      }\n    });\n\n    if(this.reloadConversationsPromise) return this.reloadConversationsPromise;\n    return this.reloadConversationsPromise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const peers = Array.from(this.reloadConversationsPeers).map(peerId => appPeersManager.getInputDialogPeerById(peerId));\n        this.reloadConversationsPeers.clear();\n\n        apiManager.invokeApi('messages.getPeerDialogs', {peers}).then((result) => {\n          this.dialogsStorage.applyDialogs(result);\n          resolve();\n        }, reject).finally(() => {\n          this.reloadConversationsPromise = null;\n        });\n      }, 0);\n    });\n  }\n\n  private doFlushHistory(inputPeer: any, justClear?: boolean, revoke?: boolean): Promise<true> {\n    return apiManager.invokeApi('messages.deleteHistory', {\n      just_clear: justClear,\n      revoke: revoke,\n      peer: inputPeer,\n      max_id: 0\n    }).then((affectedHistory) => {\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        return true;\n      }\n\n      return this.doFlushHistory(inputPeer, justClear);\n    })\n  }\n\n  public async flushHistory(peerId: number, justClear?: boolean, revoke?: boolean) {\n    if(appPeersManager.isChannel(peerId)) {\n      const promise = this.getHistory(peerId, 0, 1);\n\n      const historyResult = promise instanceof Promise ? await promise : promise;\n\n      const channelId = -peerId;\n      const maxId = historyResult.history[0] || 0;\n      return apiManager.invokeApi('channels.deleteHistory', {\n        channel: appChatsManager.getChannelInput(channelId),\n        max_id: maxId\n      }).then(() => {\n        apiUpdatesManager.processUpdateMessage({\n          _: 'updateShort',\n          update: {\n            _: 'updateChannelAvailableMessages',\n            channel_id: channelId,\n            available_min_id: maxId\n          } as Update.updateChannelAvailableMessages\n        });\n\n        return true;\n      });\n    }\n\n    return this.doFlushHistory(appPeersManager.getInputPeerById(peerId), justClear, revoke).then(() => {\n      delete this.historiesStorage[peerId];\n      delete this.messagesStorageByPeerId[peerId];\n\n      if(justClear) {\n        rootScope.dispatchEvent('dialog_flush', {peerId});\n      } else {\n        this.dialogsStorage.dropDialog(peerId);\n\n        rootScope.dispatchEvent('dialog_drop', {peerId});\n      }\n    });\n  }\n\n  public hidePinnedMessages(peerId: number) {\n    return Promise.all([\n      appStateManager.getState(),\n      this.getPinnedMessage(peerId)\n    ])\n    .then(([state, pinned]) => {\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\n      rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\n    });\n  }\n\n  public getPinnedMessage(peerId: number) {\n    const p = this.pinnedMessages[peerId] ?? (this.pinnedMessages[peerId] = {});\n    if(p.promise) return p.promise;\n    else if(p.maxId) return Promise.resolve(p);\n\n    return p.promise = this.getSearch({\n      peerId, \n      inputFilter: {_: 'inputMessagesFilterPinned'},\n      maxId: 0,\n      limit: 1\n    }).then(result => {\n      p.count = result.count;\n      p.maxId = result.history[0]?.mid;\n      return p;\n    }).finally(() => {\n      delete p.promise;\n    });\n  }\n\n  public updatePinnedMessage(peerId: number, mid: number, unpin?: true, silent?: true, oneSide?: true) {\n    return apiManager.invokeApi('messages.updatePinnedMessage', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      unpin,\n      silent,\n      pm_oneside: oneSide,\n      id: this.getServerMessageId(mid)\n    }).then(updates => {\n      //this.log('pinned updates:', updates);\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public unpinAllMessages(peerId: number): Promise<boolean> {\n    return apiManager.invokeApi('messages.unpinAllMessages', {\n      peer: appPeersManager.getInputPeerById(peerId)\n    }).then(affectedHistory => {\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        const storage = this.getMessagesStorage(peerId);\n        for(const mid in storage) {\n          const message = storage[mid];\n          if(message.pFlags.pinned) {\n            delete message.pFlags.pinned;\n          }\n        }\n\n        rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\n        delete this.pinnedMessages[peerId];\n\n        return true;\n      }\n\n      return this.unpinAllMessages(peerId);\n    });\n  }\n\n  public getAlbumText(grouped_id: string) {\n    const group = this.groupedMessagesStorage[grouped_id];\n    let foundMessages = 0, message: string, totalEntities: MessageEntity[], entities: MessageEntity[];\n    for(const i in group) {\n      const m = group[i];\n      if(m.message) {\n        if(++foundMessages > 1) break;\n        message = m.message;\n        totalEntities = m.totalEntities;\n        entities = m.entities;\n      }  \n    }\n\n    if(foundMessages > 1) {\n      message = undefined;\n      totalEntities = undefined;\n      entities = undefined;\n    }\n\n    return {message, entities, totalEntities};\n  }\n\n  public getMidsByAlbum(grouped_id: string) {\n    return getObjectKeysAndSort(this.groupedMessagesStorage[grouped_id], 'asc');\n    //return Object.keys(this.groupedMessagesStorage[grouped_id]).map(id => +id).sort((a, b) => a - b);\n  }\n\n  public getMidsByMessage(message: any) {\n    if(message?.grouped_id) return this.getMidsByAlbum(message.grouped_id);\n    else return [message.mid];\n  }\n\n  public filterMessages(message: any, verify: (message: MyMessage) => boolean) {\n    const out: MyMessage[] = [];\n    if(message.grouped_id) {\n      const storage = this.groupedMessagesStorage[message.grouped_id];\n      for(const mid in storage) {\n        const message = storage[mid];\n        if(verify(message)) {\n          out.push(message);\n        }\n      }\n    } else {\n      if(verify(message)) {\n        out.push(message);\n      }\n    }\n\n    return out;\n  }\n\n  public generateTempMessageId(peerId: number) {\n    const dialog = this.getDialogOnly(peerId);\n    return this.generateMessageId(dialog?.top_message || 0, true);\n  }\n\n  public generateMessageId(messageId: number, temp = false) {\n    const q = AppMessagesManager.MESSAGE_ID_OFFSET;\n    const num = temp ? ++this.tempNum : 0;\n    if(messageId >= q) {\n      if(temp) {\n        return messageId + (num & (AppMessagesManager.MESSAGE_ID_INCREMENT - 1));\n      }\n\n      return messageId;\n    }\n\n    return q + (messageId * AppMessagesManager.MESSAGE_ID_INCREMENT + (num & (AppMessagesManager.MESSAGE_ID_INCREMENT - 1)));\n  }\n\n  /**\n   * * will ignore outgoing offset\n   */\n  public getServerMessageId(messageId: number) {\n    const q = AppMessagesManager.MESSAGE_ID_OFFSET;\n    if(messageId < q) { // id 0 -> mid 0xFFFFFFFF, so 0xFFFFFFFF must convert to 0\n      return messageId;\n    }\n\n    const l = AppMessagesManager.MESSAGE_ID_INCREMENT - 1;\n    const used = messageId & l;\n    if(used !== l) {\n      messageId -= used + 1;\n    }\n\n    return (messageId - q) / AppMessagesManager.MESSAGE_ID_INCREMENT;\n  }\n\n  public incrementMessageId(messageId: number, increment: number) {\n    return this.generateMessageId(this.getServerMessageId(messageId) + increment);\n  }\n\n  public saveMessages(messages: any[], options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    //isNew: boolean, // * new - from update\n  }> = {}) {\n    //let groups: Set<string>;\n    messages.forEach((message) => {\n      if(message.pFlags === undefined) {\n        message.pFlags = {};\n      }\n\n      if(message._ === 'messageEmpty') {\n        return;\n      }\n\n      // * exclude from state\n      // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\n\n      const peerId = this.getMessagePeer(message);\n      const storage = options.storage || this.getMessagesStorage(peerId);\n      const isChannel = message.peer_id._ === 'peerChannel';\n      const channelId = isChannel ? -peerId : 0;\n      const isBroadcast = isChannel && appChatsManager.isBroadcast(channelId);\n\n      if(options.isScheduled) {\n        message.pFlags.is_scheduled = true;\n      }\n\n      if(options.isOutgoing) {\n        message.pFlags.is_outgoing = true;\n      }\n      \n      const mid = this.generateMessageId(message.id);\n      message.mid = mid;\n\n      if(message.grouped_id) {\n        const storage = this.groupedMessagesStorage[message.grouped_id] ?? (this.groupedMessagesStorage[message.grouped_id] = {});\n        storage[mid] = message;\n      }\n\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog && mid) {\n        if(mid > dialog[message.pFlags.out\n          ? 'read_outbox_max_id'\n          : 'read_inbox_max_id']) {\n          message.pFlags.unread = true;\n        }\n      }\n      // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n      if(message.reply_to) {\n        if(message.reply_to.reply_to_msg_id) {\n          message.reply_to.reply_to_msg_id = message.reply_to_mid = this.generateMessageId(message.reply_to.reply_to_msg_id);\n        } \n\n        if(message.reply_to.reply_to_top_id) message.reply_to.reply_to_top_id = this.generateMessageId(message.reply_to.reply_to_top_id);\n      }\n\n      if(message.replies) {\n        if(message.replies.max_id) message.replies.max_id = this.generateMessageId(message.replies.max_id);\n        if(message.replies.read_max_id) message.replies.read_max_id = this.generateMessageId(message.replies.read_max_id);\n      }\n\n      const overwriting = !!message.peerId;\n      if(!overwriting) {\n        message.date -= serverTimeManager.serverTimeOffset;\n      }\n      \n      //storage.generateIndex(message);\n      const myId = appUsersManager.getSelf().id;\n\n      message.peerId = peerId;\n      if(message.peerId === myId/*  && !message.from_id && !message.fwd_from */) {\n        message.fromId = message.fwd_from ? (message.fwd_from.from_id ? appPeersManager.getPeerId(message.fwd_from.from_id) : 0) : myId;\n      } else {\n        //message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\n        message.fromId = message.pFlags.post || !message.from_id ? peerId : appPeersManager.getPeerId(message.from_id);\n      }\n\n      const fwdHeader = message.fwd_from as MessageFwdHeader;\n      if(fwdHeader) {\n        //if(peerId === myID) {\n          if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = this.generateMessageId(fwdHeader.saved_from_msg_id);\n          if(fwdHeader.channel_post) fwdHeader.channel_post = this.generateMessageId(fwdHeader.channel_post);\n\n          const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\n          const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\n          if(peer && msgId) {\n            const savedFromPeerId = appPeersManager.getPeerId(peer);\n            const savedFromMid = this.generateMessageId(msgId);\n            message.savedFrom = savedFromPeerId + '_' + savedFromMid;\n          }\n\n          /* if(peerId < 0 || peerId === myID) {\n            message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\n          } */\n        /* } else {\n          apiMessage.fwdPostID = fwdHeader.channel_post;\n        } */\n\n        message.fwdFromId = appPeersManager.getPeerId(fwdHeader.from_id);\n\n        if(!overwriting) {\n          fwdHeader.date -= serverTimeManager.serverTimeOffset;\n        }\n      }\n\n      if(message.via_bot_id > 0) {\n        message.viaBotId = message.via_bot_id;\n      }\n\n      const mediaContext: ReferenceContext = {\n        type: 'message',\n        peerId,\n        messageId: mid\n      };\n\n      if(message.media) {\n        switch(message.media._) {\n          case 'messageMediaEmpty':\n            delete message.media;\n            break;\n          case 'messageMediaPhoto':\n            if(message.media.ttl_seconds) {\n              message.media = {_: 'messageMediaUnsupportedWeb'};\n            } else {\n              message.media.photo = appPhotosManager.savePhoto(message.media.photo, mediaContext);\n            }\n\n            if(!message.media.photo) { // * found this bug on test DC\n              delete message.media;\n            }\n            \n            break;\n          case 'messageMediaPoll':\n            message.media.poll = appPollsManager.savePoll(message.media.poll, message.media.results);\n            break;\n          case 'messageMediaDocument':\n            if(message.media.ttl_seconds) {\n              message.media = {_: 'messageMediaUnsupportedWeb'};\n            } else {\n              message.media.document = appDocsManager.saveDoc(message.media.document, mediaContext); // 11.04.2020 warning\n            }\n\n            break;\n          case 'messageMediaWebPage':\n            message.media.webpage = appWebPagesManager.saveWebPage(message.media.webpage, message.mid, mediaContext);\n            break;\n          /*case 'messageMediaGame':\n            AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\n            apiMessage.media.handleMessage = true;\n            break; */\n          case 'messageMediaInvoice':\n            message.media = {_: 'messageMediaUnsupportedWeb'};\n            break;\n        }\n      }\n\n      if(message.action) {\n        const action = message.action;\n        let migrateFrom: number;\n        let migrateTo: number;\n        const suffix = message.fromId === appUsersManager.getSelf().id ? 'You' : '';\n        switch(action._) {\n          //case 'messageActionChannelEditPhoto':\n          case 'messageActionChatEditPhoto':\n            action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\n            if(action.photo.video_sizes) {\n              action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\n            } else {\n              if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\n                action._ = 'messageActionChannelEditPhoto';\n              }\n            }\n            break;\n          \n          case 'messageActionGroupCall': {\n            //assumeType<MessageAction.messageActionGroupCall>(action);\n\n            let type: string;\n            if(action.duration === undefined) {\n              type = 'started';\n              if(message.peerId !== message.fromId) {\n                type += '_by' + suffix;\n              }\n            } else {\n              type = 'ended_by' + suffix;\n            }\n\n            action.type = type;\n\n            break;\n          }\n\n          case 'messageActionChatEditTitle':\n            /* if(options.isNew) {\n              const chat = appChatsManager.getChat(-peerId);\n              chat.title = action.title;\n              appChatsManager.saveApiChat(chat, true);\n            } */\n            \n            if(isBroadcast) {\n              action._ = 'messageActionChannelEditTitle';\n            }\n            break;\n\n          case 'messageActionChatDeletePhoto':\n            if(isBroadcast) {\n              action._ = 'messageActionChannelDeletePhoto';\n            }\n            break;\n\n          case 'messageActionChatAddUser':\n            if(action.users.length === 1) {\n              action.user_id = action.users[0];\n              if(message.fromId === action.user_id) {\n                if(isChannel) {\n                  action._ = 'messageActionChatJoined' + suffix;\n                } else {\n                  action._ = 'messageActionChatReturn' + suffix;\n                }\n              }\n            } else if(action.users.length > 1) {\n              action._ = 'messageActionChatAddUsers';\n            }\n            break;\n\n          case 'messageActionChatDeleteUser':\n            if(message.fromId === action.user_id) {\n              action._ = 'messageActionChatLeave' + suffix;\n            }\n            break;\n\n          case 'messageActionChannelMigrateFrom':\n            migrateFrom = -action.chat_id;\n            migrateTo = -channelId;\n            break\n\n          case 'messageActionChatMigrateTo':\n            migrateFrom = -channelId;\n            migrateTo = -action.channel_id;\n            break;\n\n          case 'messageActionHistoryClear':\n            //apiMessage.deleted = true;\n            message.clear_history = true;\n            delete message.pFlags.out;\n            delete message.pFlags.unread;\n            break;\n\n          case 'messageActionPhoneCall':\n            action.type = \n              (message.pFlags.out ? 'out_' : 'in_') +\n              (\n                action.reason._ === 'phoneCallDiscardReasonMissed' ||\n                action.reason._ === 'phoneCallDiscardReasonBusy'\n                   ? 'missed'\n                   : 'ok'\n              );\n            break;\n        }\n        \n        if(migrateFrom &&\n            migrateTo &&\n            !this.migratedFromTo[migrateFrom] &&\n            !this.migratedToFrom[migrateTo]) {\n          this.migrateChecks(migrateFrom, migrateTo);\n        }\n      }\n\n      /* if(message.grouped_id) {\n        if(!groups) {\n          groups = new Set();\n        }\n\n        groups.add(message.grouped_id);\n      } else {\n        message.rReply = this.getRichReplyText(message);\n      } */\n\n      if(message.message && message.message.length && !message.totalEntities) {\n        this.wrapMessageEntities(message);  \n      }\n\n      storage[mid] = message;\n    });\n\n    /* if(groups) {\n      for(const groupId of groups) {\n        const mids = this.groupedMessagesStorage[groupId];\n        for(const mid in mids) {\n          const message = this.groupedMessagesStorage[groupId][mid];\n          message.rReply = this.getRichReplyText(message);\n        }\n      }\n    } */\n  }\n\n  private wrapMessageEntities(message: any) {\n    const apiEntities = message.entities ? message.entities.slice() : [];\n    message.message = RichTextProcessor.fixEmoji(message.message, apiEntities);\n\n    const myEntities = RichTextProcessor.parseEntities(message.message);\n    message.totalEntities = RichTextProcessor.mergeEntities(apiEntities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n  }\n\n  public wrapMessageForReply(message: any, text: string, usingMids: number[], plain: true, highlightWord?: string): string;\n  public wrapMessageForReply(message: any, text?: string, usingMids?: number[], plain?: false, highlightWord?: string): DocumentFragment;\n  public wrapMessageForReply(message: any, text: string = message.message, usingMids?: number[], plain?: boolean, highlightWord?: string): DocumentFragment | string {\n    const parts: (HTMLElement | string)[] = [];\n\n    const addPart = (langKey: LangPackKey, part?: string | HTMLElement, text?: string) => {\n      if(langKey) {\n        part = plain ? I18n.format(langKey, true) : i18n(langKey);\n      }\n      \n      if(plain) {\n        parts.push(part);\n      } else {\n        const el = document.createElement('i');\n        if(typeof(part) === 'string') el.innerHTML = part;\n        else el.append(part);\n        parts.push(el);\n      }\n\n      if(text) {\n        parts.push(', ');\n      }\n    };\n\n    if(message.media) {\n      let usingFullAlbum = true;\n      if(message.grouped_id) {\n        if(usingMids) {\n          const mids = this.getMidsByMessage(message);\n          if(usingMids.length === mids.length) {\n            for(const mid of mids) {\n              if(!usingMids.includes(mid)) {\n                usingFullAlbum = false;\n                break;\n              }\n            }\n          } else {\n            usingFullAlbum = false;\n          }\n        }\n\n        if(usingFullAlbum) {\n          text = this.getAlbumText(message.grouped_id).message;\n          addPart('AttachAlbum', undefined, text);\n        }\n      } else {\n        usingFullAlbum = false;\n      }\n\n      if(!usingFullAlbum) {\n        const media = message.media;\n        switch(media._) {\n          case 'messageMediaPhoto':\n            addPart('AttachPhoto', undefined, message.message);\n            break;\n          case 'messageMediaDice':\n            addPart(undefined, plain ? media.emoticon : RichTextProcessor.wrapEmojiText(media.emoticon));\n            break;\n          case 'messageMediaVenue': {\n            const text = plain ? media.title : RichTextProcessor.wrapEmojiText(media.title);\n            addPart('AttachLocation', undefined, text);\n            parts.push(htmlToDocumentFragment(text) as any);\n            break;\n          }\n          case 'messageMediaGeo':\n            addPart('AttachLocation');\n            break;\n          case 'messageMediaGeoLive':\n            addPart('AttachLiveLocation');\n            break;\n          case 'messageMediaPoll':\n            addPart(undefined, plain ? '📊' + ' ' + (media.poll.question || 'poll') : media.poll.rReply);\n            break;\n          case 'messageMediaContact':\n            addPart('AttachContact');\n            break;\n          case 'messageMediaGame': {\n            const prefix = '🎮' + ' ';\n            addPart(undefined, plain ? prefix + media.game.title : RichTextProcessor.wrapEmojiText(prefix + media.game.title));\n            break;\n          }\n          case 'messageMediaDocument':\n            let document = media.document;\n  \n            if(document.type === 'video') {\n              addPart('AttachVideo', undefined, message.message);\n            } else if(document.type === 'voice') {\n              addPart('AttachAudio', undefined, message.message);\n            } else if(document.type === 'gif') {\n              addPart('AttachGif', undefined, message.message);\n            } else if(document.type === 'round') {\n              addPart('AttachRound', undefined, message.message);\n            } else if(document.type === 'sticker') {\n              addPart(undefined, ((plain ? document.stickerEmojiRaw : document.stickerEmoji) || '') + 'Sticker');\n              text = '';\n            } else {\n              addPart(document.file_name, undefined, message.message);\n            }\n  \n            break;\n  \n          default:\n            //messageText += media._;\n            ///////this.log.warn('Got unknown media type!', message);\n            break;\n        }\n      } \n    }\n\n    if(message.action) {\n      const actionWrapped = this.wrapMessageActionTextNew(message, plain);\n      if(actionWrapped) {\n        addPart(undefined, actionWrapped);\n      }\n    }\n\n    if(text) {\n      text = limitSymbols(text, 100);\n\n      if(plain) {\n        parts.push(text);\n      } else {\n        let entities = RichTextProcessor.parseEntities(text.replace(/\\n/g, ' '));\n\n        if(highlightWord) {\n          highlightWord = highlightWord.trim();\n          if(!entities) entities = [];\n          let found = false;\n          let match: any;\n          let regExp = new RegExp(escapeRegExp(highlightWord), 'gi');\n          while((match = regExp.exec(text)) !== null) {\n            entities.push({_: 'messageEntityHighlight', length: highlightWord.length, offset: match.index});\n            found = true;\n          }\n      \n          if(found) {\n            entities.sort((a, b) => a.offset - b.offset);\n          }\n        }\n\n        const messageWrapped = RichTextProcessor.wrapRichText(text, {\n          noLinebreaks: true, \n          entities, \n          noLinks: true,\n          noTextFormat: true\n        });\n  \n        parts.push(htmlToDocumentFragment(messageWrapped) as any);\n      }\n    }\n\n    if(plain) {\n      return parts.join('');\n    } else {\n      const fragment = document.createDocumentFragment();\n      fragment.append(...parts);\n      return fragment;\n    }\n  }\n\n  public getSenderToPeerText(message: MyMessage) {\n    let senderTitle = '', peerTitle: string;\n    \n    senderTitle = message.pFlags.out ? 'You' : appPeersManager.getPeerTitle(message.fromId, false, false);\n    peerTitle = appPeersManager.isAnyGroup(message.peerId) || (message.pFlags.out && message.peerId !== rootScope.myId) ? \n      appPeersManager.getPeerTitle(message.peerId, false, false) : \n      '';\n\n    if(peerTitle) {\n      senderTitle += ' ➝ ' + peerTitle;\n    }\n\n    return senderTitle;\n  }\n\n  public wrapMessageActionTextNew(message: any, plain: true): string;\n  public wrapMessageActionTextNew(message: any, plain?: false): HTMLElement;\n  public wrapMessageActionTextNew(message: any, plain: boolean): HTMLElement | string;\n  public wrapMessageActionTextNew(message: any, plain?: boolean): HTMLElement | string {\n    const element: HTMLElement = plain ? undefined : document.createElement('span');\n    const action = message.action as MessageAction;\n\n    // this.log('message action:', action);\n\n    if((action as MessageAction.messageActionCustomAction).message) {\n      if(plain) {\n        return RichTextProcessor.wrapPlainText(message.message);\n      } else {\n        element.innerHTML = RichTextProcessor.wrapRichText((action as MessageAction.messageActionCustomAction).message, {noLinebreaks: true});\n        return element;\n      }\n    } else {\n      let _ = action._;\n      //let suffix = '';\n      let langPackKey: LangPackKey;\n      let args: any[];\n\n      const getNameDivHTML = (peerId: number, plain: boolean) => {\n        return plain ? appPeersManager.getPeerTitle(peerId, plain) + ' ' : (new PeerTitle({peerId})).element;\n      };\n\n      switch(action._) {\n        case 'messageActionPhoneCall': {\n          _ += '.' + (action as any).type;\n\n          args = [formatCallDuration(action.duration)];\n          break;\n        }\n\n        case 'messageActionGroupCall': {\n          _ += '.' + (action as any).type;\n\n          args = [];\n          if(!_.endsWith('You')) {\n            args.push(getNameDivHTML(message.fromId, plain));\n          }\n\n          args.push(formatCallDuration(action.duration));\n          break;\n        }\n\n        case 'messageActionInviteToGroupCall': {\n          const peerIds = [message.fromId, action.users[0]];\n          let a = 'ActionGroupCall';\n          const myId = appUsersManager.getSelf().id;\n          if(peerIds[0] === myId) a += 'You';\n          a += 'Invited';\n          if(peerIds[1] === myId) a += 'You';\n          peerIds.findAndSplice(peerId => peerId === myId);\n\n          langPackKey = a as LangPackKey;\n          args = peerIds.map(peerId => getNameDivHTML(peerId, plain));\n          break;\n        }\n\n        case 'messageActionGroupCallScheduled': {\n          const today = new Date();\n          const date = new Date(action.schedule_date * 1000);\n          const daysToStart = (date.getTime() - today.getTime()) / 86400e3;\n          const tomorrowDate = new Date(today);\n          tomorrowDate.setDate(tomorrowDate.getDate() + 1);\n\n          langPackKey = 'ChatList.Service.VoiceChatScheduled';\n          const myId = appUsersManager.getSelf().id;\n          if(message.fromId === myId) {\n            langPackKey += 'You';\n          }\n\n          let k: LangPackKey, _args: any[] = [];\n          if(daysToStart < 1 && date.getDate() === today.getDate()) {\n            k = 'TodayAtFormattedWithToday';\n          } else if(daysToStart < 2 && date.getDate() === tomorrowDate.getDate()) {\n            k = 'Time.TomorrowAt';\n          } else {\n            k = 'formatDateAtTime';\n            _args.push(new I18n.IntlDateElement({\n              date, \n              options: {\n                day: '2-digit',\n                month: '2-digit',\n                year: '2-digit'\n              }\n            }).element);\n          }\n\n          _args.push(formatTime(date));\n          const t = i18n(k, _args);\n          args = [t];\n\n          break;\n        }\n\n        case 'messageActionPinMessage':\n        case 'messageActionContactSignUp':\n        case 'messageActionChatReturn':\n        case 'messageActionChatLeave':\n        case 'messageActionChatJoined':\n        case 'messageActionChatCreate':\n        case 'messageActionChatEditPhoto':\n        case 'messageActionChatDeletePhoto':\n        case 'messageActionChatEditVideo':\n        case 'messageActionChatJoinedByLink':\n        case 'messageActionChannelEditVideo':\n        case 'messageActionChannelDeletePhoto': {\n          args = [getNameDivHTML(message.fromId, plain)];\n          break;\n        }\n\n        case 'messageActionChannelEditTitle':\n        case 'messageActionChatEditTitle': {\n          args = [];\n          if(action._ === 'messageActionChatEditTitle') {\n            args.push(getNameDivHTML(message.fromId, plain));\n          }\n\n          args.push(plain ? action.title : htmlToSpan(RichTextProcessor.wrapEmojiText(action.title)));\n          break;\n        }\n\n        case 'messageActionChatDeleteUser':\n        case 'messageActionChatAddUsers':\n        case 'messageActionChatAddUser': {\n          const users: number[] = (action as MessageAction.messageActionChatAddUser).users \n            || [(action as MessageAction.messageActionChatDeleteUser).user_id];\n\n          args = [getNameDivHTML(message.fromId, plain)];\n\n          if(users.length > 1) {\n            if(plain) {\n              args.push(...users.map((userId: number) => (getNameDivHTML(userId, true) as string).trim()).join(', '));\n            } else {\n              const fragment = document.createElement('span');\n              fragment.append(\n                ...join(\n                  users.map((userId: number) => getNameDivHTML(userId, false)) as HTMLElement[],\n                  false\n                )\n              );\n              args.push(fragment);\n            }\n          } else {\n            args.push(getNameDivHTML(users[0], plain));\n          }\n\n          break;\n        }\n\n        case 'messageActionBotAllowed': {\n          const anchorHTML = RichTextProcessor.wrapRichText(action.domain, {\n            entities: [{\n              _: 'messageEntityUrl',\n              length: action.domain.length,\n              offset: 0\n            }]\n          });\n\n          const node = htmlToSpan(anchorHTML);\n\n          args = [node];\n          break;\n        }\n\n        default:\n          langPackKey = (langPack[_] || `[${action._}]`) as any;\n          break;\n      }\n\n      if(!langPackKey) {\n        langPackKey = langPack[_];\n        if(langPackKey === undefined) {\n          langPackKey = '[' + _ + ']' as any;\n        }\n      }\n\n      if(plain) {\n        return I18n.format(langPackKey, true, args);\n      } else {\n        return _i18n(element, langPackKey, args);\n      }\n\n      //str = !langPackKey || langPackKey[0].toUpperCase() === langPackKey[0] ? langPackKey : getNameDivHTML(message.fromId) + langPackKey + (suffix ? ' ' : '');\n    }\n  }\n\n  public editPeerFolders(peerIds: number[], folderId: number) {\n    apiManager.invokeApi('folders.editPeerFolders', {\n      folder_peers: peerIds.map(peerId => {\n        return {\n          _: 'inputFolderPeer',\n          peer: appPeersManager.getInputPeerById(peerId),\n          folder_id: folderId\n        };\n      })\n    }).then(updates => {\n      //this.log('editPeerFolders updates:', updates);\n      apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\n    });\n  }\n\n  public toggleDialogPin(peerId: number, filterId?: number) {\n    if(filterId > 1) {\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\n    return apiManager.invokeApi('messages.toggleDialogPin', {\n      peer: appPeersManager.getInputDialogPeerById(peerId),\n      pinned\n    }).then(bool => {\n      if(bool) {\n        const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\n        apiUpdatesManager.saveUpdate({\n          _: 'updateDialogPinned',\n          peer: appPeersManager.getDialogPeer(peerId),\n          folder_id: filterId,\n          pFlags\n        });\n      }\n    });\n  }\n\n  public markDialogUnread(peerId: number, read?: true) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\n    return apiManager.invokeApi('messages.markDialogUnread', {\n      peer: appPeersManager.getInputDialogPeerById(peerId),\n      unread\n    }).then(bool => {\n      if(bool) {\n        const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\n        this.onUpdateDialogUnreadMark({\n          _: 'updateDialogUnreadMark',\n          peer: appPeersManager.getDialogPeer(peerId),\n          pFlags\n        });\n      }\n    });\n  }\n\n  public migrateChecks(migrateFrom: number, migrateTo: number) {\n    if(!this.migratedFromTo[migrateFrom] &&\n      !this.migratedToFrom[migrateTo] &&\n      appChatsManager.hasChat(-migrateTo)) {\n      const fromChat = appChatsManager.getChat(-migrateFrom);\n      if(fromChat &&\n        fromChat.migrated_to &&\n        fromChat.migrated_to.channel_id === -migrateTo) {\n          this.migratedFromTo[migrateFrom] = migrateTo;\n          this.migratedToFrom[migrateTo] = migrateFrom;\n\n        //setTimeout(() => {\n          rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\n\n          const dropped = this.dialogsStorage.dropDialog(migrateFrom);\n          if(dropped.length) {\n            rootScope.dispatchEvent('dialog_drop', {peerId: migrateFrom, dialog: dropped[0]});\n          }\n        //}, 100);\n      }\n    }\n  }\n\n  private canMessageBeEdited(message: any, kind: 'text' | 'poll') {\n    if(message.pFlags.is_outgoing) {\n      return false;\n    }\n\n    const goodMedias = [\n      'messageMediaPhoto',\n      'messageMediaDocument',\n      'messageMediaWebPage'\n    ];\n\n    if(kind === 'poll') {\n      goodMedias.push('messageMediaPoll');\n    }\n\n    if(message._ !== 'message' ||\n        message.deleted ||\n        message.fwd_from ||\n        message.via_bot_id ||\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\n        message.fromId && appUsersManager.isBot(message.fromId)) {\n      return false;\n    }\n    \n    if(message.media &&\n        message.media._ === 'messageMediaDocument' &&\n        (message.media.document.sticker || message.media.document.type === 'round')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canEditMessage(message: any, kind: 'text' | 'poll' = 'text') {\n    if(!message || !this.canMessageBeEdited(message, kind)) {\n      return false;\n    }\n\n    // * second rule for saved messages, because there is no 'out' flag\n    if(message.pFlags.out || this.getMessagePeer(message) === appUsersManager.getSelf().id) {\n      return true;\n    }\n\n    if((message.date < (tsNow(true) - (2 * 86400)) && message.media?._ !== 'messageMediaPoll') || !message.pFlags.out) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canDeleteMessage(message: any) {\n    return message && (\n      message.peerId > 0 \n      || message.fromId === rootScope.myId \n      || appChatsManager.getChat(message.peerId)._ === 'chat' \n      || appChatsManager.hasRights(message.peerId, 'delete_messages')\n    ) && !message.pFlags.is_outgoing;\n  }\n\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: any) {\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n    if(!message.reply_markup &&\n      !message.pFlags?.out &&\n      !message.action) {\n      return false;\n    }\n    if(message.reply_markup &&\n      message.reply_markup._ === 'replyInlineMarkup') {\n      return false;\n    }\n    var messageReplyMarkup = message.reply_markup;\n    var lastReplyMarkup = historyStorage.reply_markup;\n    if(messageReplyMarkup) {\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n        return false;\n      }\n\n      if(messageReplyMarkup.pFlags.selective) {\n        return false;\n      }\n\n      if(historyStorage.maxOutId &&\n        message.mid < historyStorage.maxOutId &&\n        messageReplyMarkup.pFlags.single_use) {\n        messageReplyMarkup.pFlags.hidden = true;\n      }\n      messageReplyMarkup = Object.assign({\n        mid: message.mid\n      }, messageReplyMarkup);\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\n        messageReplyMarkup.fromId = appPeersManager.getPeerId(message.from_id);\n      }\n      historyStorage.reply_markup = messageReplyMarkup;\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    if(message.pFlags.out) {\n      if(lastReplyMarkup) {\n        if(lastReplyMarkup.pFlags.single_use &&\n          !lastReplyMarkup.pFlags.hidden &&\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\n          message.message) {\n          lastReplyMarkup.pFlags.hidden = true;\n          // this.log('set', historyStorage.reply_markup)\n          return true;\n        }\n      } else if(!historyStorage.maxOutId ||\n        message.mid > historyStorage.maxOutId) {\n        historyStorage.maxOutId = message.mid;\n      }\n    }\n\n    if(message.action &&\n      message.action._ === 'messageActionChatDeleteUser' &&\n      (lastReplyMarkup\n        ? message.action.user_id === lastReplyMarkup.fromId\n        : appUsersManager.isBot(message.action.user_id)\n      )\n    ) {\n      historyStorage.reply_markup = {\n        _: 'replyKeyboardHide',\n        mid: message.mid,\n        pFlags: {}\n      };\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    return false;\n  }\n\n  public getSearchStorage(peerId: number, inputFilter: MyInputMessagesFilter) {\n    if(!this.searchesStorage[peerId]) this.searchesStorage[peerId] = {};\n    if(!this.searchesStorage[peerId][inputFilter]) this.searchesStorage[peerId][inputFilter] = {history: []};\n    return this.searchesStorage[peerId][inputFilter];\n  }\n\n  public getSearchCounters(peerId: number, filters: MessagesFilter[], canCache = true) {\n    const func = (canCache ? apiManager.invokeApiCacheable : apiManager.invokeApi).bind(apiManager);\n    return func('messages.getSearchCounters', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      filters\n    });\n  }\n\n  public getSearch({peerId, query, inputFilter, maxId, limit, nextRate, backLimit, threadId, folderId, minDate, maxDate}: {\n    peerId?: number,\n    maxId?: number,\n    limit?: number,\n    nextRate?: number,\n    backLimit?: number,\n    threadId?: number,\n    folderId?: number,\n    query?: string,\n    inputFilter?: {\n      _: MyInputMessagesFilter\n    },\n    minDate?: number,\n    maxDate?: number\n  }): Promise<{\n    count: number,\n    next_rate: number,\n    offset_id_offset: number,\n    history: MyMessage[]\n  }> {\n    if(!peerId) peerId = 0;\n    if(!query) query = '';\n    if(!inputFilter) inputFilter = {_: 'inputMessagesFilterEmpty'};\n    if(limit === undefined) limit = 20;\n    if(!nextRate) nextRate = 0;\n    if(!backLimit) backLimit = 0;\n\n    minDate = minDate ? minDate / 1000 | 0 : 0;\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\n\n    const foundMsgs: Message.message[] = [];\n\n    //this.log('search', maxId);\n\n    if(backLimit) {\n      limit += backLimit;\n    }\n\n    //const beta = inputFilter._ === 'inputMessagesFilterPinned' && !backLimit;\n    const beta = false;\n\n    let storage: {\n      count?: number;\n      history: SlicedArray;\n    };\n\n    // * костыль для limit 1, если нужно и получить сообщение, и узнать количество сообщений\n    if(peerId && !backLimit && !maxId && !query && limit !== 1 && !threadId/*  && inputFilter._ !== 'inputMessagesFilterPinned' */) {\n      storage = beta ? \n        this.getSearchStorage(peerId, inputFilter._) as any : \n        this.getHistoryStorage(peerId);\n      let filtering = true;\n\n      const history = /* maxId ? storage.history.slice(storage.history.indexOf(maxId) + 1) :  */storage.history;\n\n      if(storage !== undefined && history.length) {\n        const neededContents: {\n          [messageMediaType: string]: boolean\n        } = {},\n          neededDocTypes: string[] = [], \n          excludeDocTypes: string[] = []/* ,\n          neededFlags: string[] = [] */;\n\n        switch(inputFilter._) {\n          case 'inputMessagesFilterPhotos':\n            neededContents['messageMediaPhoto'] = true;\n            break;\n\n          case 'inputMessagesFilterPhotoVideo':\n            neededContents['messageMediaPhoto'] = true;\n            neededContents['messageMediaDocument'] = true;\n            neededDocTypes.push('video');\n            break;\n\n          case 'inputMessagesFilterVideo':\n            neededContents['messageMediaDocument'] = true;\n            neededDocTypes.push('video');\n            break;\n\n          case 'inputMessagesFilterDocument':\n            neededContents['messageMediaDocument'] = true;\n            excludeDocTypes.push('video');\n            break;\n\n          case 'inputMessagesFilterVoice':\n            neededContents['messageMediaDocument'] = true;\n            neededDocTypes.push('voice');\n            break;\n\n          case 'inputMessagesFilterRoundVoice':\n            neededContents['messageMediaDocument'] = true;\n            neededDocTypes.push('round', 'voice');\n            break;\n\n          case 'inputMessagesFilterRoundVideo':\n            neededContents['messageMediaDocument'] = true;\n            neededDocTypes.push('round');\n            break;\n\n          case 'inputMessagesFilterMusic':\n            neededContents['messageMediaDocument'] = true;\n            neededDocTypes.push('audio');\n            break;\n\n          case 'inputMessagesFilterUrl':\n            neededContents['url'] = true;\n            break;\n\n          case 'inputMessagesFilterChatPhotos':\n            neededContents['avatar'] = true;\n            break;\n\n          /* case 'inputMessagesFilterPinned':\n            neededFlags.push('pinned');\n            break; */\n\n          /* case 'inputMessagesFilterMyMentions':\n            neededContents['mentioned'] = true;\n            break; */\n\n          default:\n            filtering = false;\n            break;\n            /* return Promise.resolve({\n              count: 0,\n              next_rate: 0,\n              history: [] as number[]\n            }); */\n        }\n\n        if(filtering) {\n          const storage = this.getMessagesStorage(peerId);\n          for(let i = 0, length = history.length; i < length; i++) {\n            const message = storage[history.slice[i]];\n\n            if(!message) continue;\n  \n            //|| (neededContents['mentioned'] && message.totalEntities.find((e: any) => e._ === 'messageEntityMention'));\n  \n            let found = false;\n            if(message.media && neededContents[message.media._] && !message.fwd_from) {\n              if(message.media._ === 'messageMediaDocument') {\n                if((neededDocTypes.length && !neededDocTypes.includes(message.media.document.type)) \n                  || excludeDocTypes.includes(message.media.document.type)) {\n                  continue;\n                }\n              }\n  \n              found = true;\n            } else if(neededContents['url'] && message.message) {\n              const goodEntities = ['messageEntityTextUrl', 'messageEntityUrl'];\n              if((message.totalEntities as MessageEntity[]).find(e => goodEntities.includes(e._)) || RichTextProcessor.matchUrl(message.message)) {\n                found = true;\n              }\n            } else if(neededContents['avatar'] && message.action && ['messageActionChannelEditPhoto', 'messageActionChatEditPhoto', 'messageActionChannelEditVideo', 'messageActionChatEditVideo'].includes(message.action._)) {\n              found = true;\n            }/*  else if(neededFlags.find(flag => message.pFlags[flag])) {\n              found = true;\n            } */\n  \n            if(found) {\n              foundMsgs.push(message);\n              if(foundMsgs.length >= limit) {\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if(foundMsgs.length) {\n      if(foundMsgs.length < limit && (beta ? storage.count !== storage.history.length : true)) {\n        maxId = foundMsgs[foundMsgs.length - 1].mid;\n        limit = limit - foundMsgs.length;\n      } else {\n        return Promise.resolve({\n          count: beta ? storage.count : 0,\n          next_rate: 0,\n          offset_id_offset: 0,\n          history: foundMsgs\n        });\n      }\n    } else if(beta && storage?.count) {\n      return Promise.resolve({\n        count: storage.count,\n        next_rate: 0,\n        offset_id_offset: 0,\n        history: []\n      });\n    }\n\n    const canCache = false && (['inputMessagesFilterChatPhotos', 'inputMessagesFilterPinned'] as MyInputMessagesFilter[]).includes(inputFilter._);\n    const method = (canCache ? apiManager.invokeApiCacheable : apiManager.invokeApi).bind(apiManager);\n\n    let apiPromise: Promise<any>;\n    if(peerId && !nextRate && folderId === undefined/*  || !query */) {\n      apiPromise = method('messages.search', {\n        peer: appPeersManager.getInputPeerById(peerId),\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        limit,\n        offset_id: this.getServerMessageId(maxId) || 0,\n        add_offset: backLimit ? -backLimit : 0,\n        max_id: 0,\n        min_id: 0,\n        hash: 0,\n        top_msg_id: this.getServerMessageId(threadId) || 0\n      }, {\n        //timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    } else {\n      //var offsetDate = 0;\n      let offsetPeerId = 0;\n      let offsetId = 0;\n      let offsetMessage = maxId && this.getMessageByPeer(peerId, maxId);\n\n      if(offsetMessage && offsetMessage.date) {\n        //offsetDate = offsetMessage.date + serverTimeManager.serverTimeOffset;\n        offsetId = offsetMessage.id;\n        offsetPeerId = this.getMessagePeer(offsetMessage);\n      }\n\n      apiPromise = method('messages.searchGlobal', {\n        q: query,\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        offset_rate: nextRate,\n        offset_peer: appPeersManager.getInputPeerById(offsetPeerId),\n        offset_id: offsetId,\n        limit,\n        folder_id: folderId\n      }, {\n        //timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    }\n\n    return apiPromise.then((searchResult: any) => {\n      appUsersManager.saveApiUsers(searchResult.users);\n      appChatsManager.saveApiChats(searchResult.chats);\n      this.saveMessages(searchResult.messages);\n\n      /* if(beta && storage && (!maxId || storage.history[storage.history.length - 1] === maxId)) {\n        const storage = this.getSearchStorage(peerId, inputFilter._);\n        const add = (searchResult.messages.map((m: any) => m.mid) as number[]).filter(mid => storage.history.indexOf(mid) === -1);\n        storage.history.push(...add);\n        storage.history.sort((a, b) => b - a);\n        storage.count = searchResult.count;\n      } */\n\n      if(DEBUG) {\n        this.log('getSearch result:', inputFilter, searchResult);\n      }\n\n      const foundCount: number = searchResult.count || (foundMsgs.length + searchResult.messages.length);\n\n      searchResult.messages.forEach((message: any) => {\n        const peerId = this.getMessagePeer(message);\n        if(peerId < 0) {\n          const chat = appChatsManager.getChat(-peerId);\n          if(chat.migrated_to) {\n            this.migrateChecks(peerId, -chat.migrated_to.channel_id);\n          }\n        }\n\n        foundMsgs.push(message);\n      });\n\n      return {\n        count: foundCount,\n        offset_id_offset: searchResult.offset_id_offset || 0,\n        next_rate: searchResult.next_rate,\n        history: foundMsgs\n      };\n    });\n  }\n\n  public subscribeRepliesThread(peerId: number, mid: number) {\n    const repliesKey = peerId + '_' + mid;\n    for(const threadKey in this.threadsToReplies) {\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\n    }\n\n    this.getDiscussionMessage(peerId, mid);\n  }\n\n  public generateThreadServiceStartMessage(message: Message.message) {\n    const threadKey = message.peerId + '_' + message.mid;\n    if(this.threadsServiceMessagesIdsStorage[threadKey]) return;\n\n    const maxMessageId = this.getServerMessageId(Math.max(...this.getMidsByMessage(message)));\n    const serviceStartMessage: Message.messageService = {\n      _: 'messageService',\n      pFlags: {\n        is_single: true\n      } as any,\n      id: this.generateMessageId(maxMessageId, true),\n      date: message.date,\n      from_id: {_: 'peerUser', user_id: 0}/* message.from_id */,\n      peer_id: message.peer_id,\n      action: {\n        _: 'messageActionCustomAction',\n        message: 'Discussion started'\n      },\n      reply_to: this.generateReplyHeader(message.id)\n    };\n\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\n    this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\n  } \n\n  public getDiscussionMessage(peerId: number, mid: number) {\n    return apiManager.invokeApiSingle('messages.getDiscussionMessage', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      msg_id: this.getServerMessageId(mid)\n    }).then(result => {\n      appChatsManager.saveApiChats(result.chats);\n      appUsersManager.saveApiUsers(result.users);\n      this.saveMessages(result.messages);\n\n      const message = this.filterMessages(result.messages[0], message => !!(message as Message.message).replies)[0] as Message.message;\n      const threadKey = message.peerId + '_' + message.mid;\n\n      this.generateThreadServiceStartMessage(message);\n      \n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\n      result.max_id = historyStorage.maxId = this.generateMessageId(result.max_id) || 0;\n      result.read_inbox_max_id = historyStorage.readMaxId = this.generateMessageId(result.read_inbox_max_id ?? message.mid);\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = this.generateMessageId(result.read_outbox_max_id) || 0;\n\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\n\n      return message;\n    });\n  }\n\n  private handleNewMessage(peerId: number, mid: number) {\n    if(this.newMessagesToHandle[peerId] === undefined) {\n      this.newMessagesToHandle[peerId] = new Set();\n    }\n\n    this.newMessagesToHandle[peerId].add(mid);\n    if(!this.newMessagesHandleTimeout) {\n      this.newMessagesHandleTimeout = window.setTimeout(this.handleNewMessages, 0);\n    }\n  }\n\n  handleNewMessages = () => {\n    clearTimeout(this.newMessagesHandleTimeout);\n    this.newMessagesHandleTimeout = 0;\n\n    rootScope.dispatchEvent('history_multiappend', this.newMessagesToHandle);\n    this.newMessagesToHandle = {};\n  };\n\n  handleNewDialogs = () => {\n    let newMaxSeenId = 0;\n    const obj = this.newDialogsToHandle;\n    for(const peerId in obj) {\n      const dialog = obj[peerId];\n      if(!dialog) {\n        this.reloadConversation(+peerId);\n        delete obj[peerId];\n      } else {\n        this.dialogsStorage.pushDialog(dialog);\n        if(!appPeersManager.isChannel(+peerId)) {\n          newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\n        }\n      }\n    }\n\n    //this.log('after order:', this.dialogsStorage[0].map(d => d.peerId));\n\n    if(newMaxSeenId !== 0) {\n      this.incrementMaxSeenId(newMaxSeenId);\n    }\n\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n    this.newDialogsToHandle = {};\n  };\n\n  public scheduleHandleNewDialogs(peerId?: number, dialog?: Dialog) {\n    if(peerId !== undefined) {\n      this.newDialogsToHandle[peerId] = dialog;\n    }\n\n    if(this.newDialogsHandlePromise) return this.newDialogsHandlePromise;\n    return this.newDialogsHandlePromise = new Promise((resolve) => {\n      setTimeout(() => {\n        this.newDialogsHandlePromise = undefined;\n        this.handleNewDialogs();\n      }, 0);\n    });\n  }\n\n  public deleteMessages(peerId: number, mids: number[], revoke?: true) {\n    let promise: Promise<any>;\n\n    const localMessageIds = mids.map(mid => this.getServerMessageId(mid));\n\n    if(peerId < 0 && appPeersManager.isChannel(peerId)) {\n      const channelId = -peerId;\n      const channel = appChatsManager.getChat(channelId);\n      if(!channel.pFlags.creator && !(channel.pFlags.editor && channel.pFlags.megagroup)) {\n        const goodMsgIds: number[] = [];\n        if(channel.pFlags.editor || channel.pFlags.megagroup) {\n          mids.forEach((msgId, i) => {\n            const message = this.getMessageByPeer(peerId, mids[i]);\n            if(message.pFlags.out) {\n              goodMsgIds.push(msgId);\n            }\n          });\n        }\n\n        if(!goodMsgIds.length) {\n          return;\n        }\n\n        mids = goodMsgIds;\n      }\n\n      promise = apiManager.invokeApi('channels.deleteMessages', {\n        channel: appChatsManager.getChannelInput(channelId),\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        apiUpdatesManager.processUpdateMessage({\n          _: 'updateShort',\n          update: {\n            _: 'updateDeleteChannelMessages',\n            channel_id: channelId,\n            messages: mids,\n            pts: affectedMessages.pts,\n            pts_count: affectedMessages.pts_count\n          }\n        });\n      });\n    } else {\n      promise = apiManager.invokeApi('messages.deleteMessages', {\n        revoke,\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        apiUpdatesManager.processUpdateMessage({\n          _: 'updateShort',\n          update: {\n            _: 'updateDeleteMessages',\n            messages: mids,\n            pts: affectedMessages.pts,\n            pts_count: affectedMessages.pts_count\n          }\n        });\n      });\n    }\n\n    return promise;\n  }\n\n  // TODO: cancel notification by peer when this function is being called\n  public readHistory(peerId: number, maxId = 0, threadId?: number, force = false) {\n    // return Promise.resolve();\n    // console.trace('start read')\n    this.log('readHistory:', peerId, maxId, threadId);\n    if(!this.getReadMaxIdIfUnread(peerId, threadId) && !force) {\n      this.log('readHistory: isn\\'t unread');\n      return Promise.resolve();\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(historyStorage.triedToReadMaxId >= maxId) {\n      return Promise.resolve();\n    }\n\n    let apiPromise: Promise<any>;\n    if(threadId) {\n      if(!historyStorage.readPromise) {\n        apiPromise = apiManager.invokeApi('messages.readDiscussion', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          msg_id: this.getServerMessageId(threadId),\n          read_max_id: this.getServerMessageId(maxId)\n        });\n      }\n\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updateReadChannelDiscussionInbox',\n          channel_id: -peerId,\n          top_msg_id: threadId,\n          read_max_id: maxId\n        } as Update.updateReadChannelDiscussionInbox\n      });\n    } else if(appPeersManager.isChannel(peerId)) {\n      if(!historyStorage.readPromise) {\n        apiPromise = apiManager.invokeApi('channels.readHistory', {\n          channel: appChatsManager.getChannelInput(-peerId),\n          max_id: this.getServerMessageId(maxId)\n        });\n      }\n\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updateReadChannelInbox',\n          max_id: maxId,\n          channel_id: -peerId\n        } as Update.updateReadChannelInbox\n      });\n    } else {\n      if(!historyStorage.readPromise) {\n        apiPromise = apiManager.invokeApi('messages.readHistory', {\n          peer: appPeersManager.getInputPeerById(peerId),\n          max_id: this.getServerMessageId(maxId)\n        }).then((affectedMessages) => {\n          apiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          });\n        });\n      }\n\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updateReadHistoryInbox',\n          max_id: maxId,\n          peer: appPeersManager.getOutputPeer(peerId)\n        } as Update.updateReadHistoryInbox\n      });\n    }\n\n    appNotificationsManager.soundReset(appPeersManager.getPeerString(peerId));\n\n    if(historyStorage.readPromise) {\n      return historyStorage.readPromise;\n    }\n\n    historyStorage.triedToReadMaxId = maxId;\n\n    apiPromise.finally(() => {\n      delete historyStorage.readPromise;\n\n      this.log('readHistory: promise finally', maxId, historyStorage.readMaxId);\n\n      if(historyStorage.readMaxId > maxId) {\n        this.readHistory(peerId, historyStorage.readMaxId, threadId, true);\n      }\n    });\n\n    return historyStorage.readPromise = apiPromise;\n  }\n\n  public readAllHistory(peerId: number, threadId?: number, force = false) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(historyStorage.maxId) {\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\n    }\n  }\n\n  public readMessages(peerId: number, msgIds: number[]) {\n    msgIds = msgIds.map(mid => this.getServerMessageId(mid));\n    if(peerId < 0 && appPeersManager.isChannel(peerId)) {\n      const channelId = -peerId;\n      apiManager.invokeApi('channels.readMessageContents', {\n        channel: appChatsManager.getChannelInput(channelId),\n        id: msgIds\n      }).then(() => {\n        apiUpdatesManager.processUpdateMessage({\n          _: 'updateShort',\n          update: {\n            _: 'updateChannelReadMessagesContents',\n            channel_id: channelId,\n            messages: msgIds\n          } as Update.updateChannelReadMessagesContents\n        });\n      });\n    } else {\n      apiManager.invokeApi('messages.readMessageContents', {\n        id: msgIds\n      }).then((affectedMessages) => {\n        apiUpdatesManager.processUpdateMessage({\n          _: 'updateShort',\n          update: {\n            _: 'updateReadMessagesContents',\n            messages: msgIds,\n            pts: affectedMessages.pts,\n            pts_count: affectedMessages.pts_count\n          } as Update.updateReadMessagesContents\n        });\n      });\n    }\n  }\n\n  public getHistoryStorage(peerId: number, threadId?: number) {\n    if(threadId) {\n      //threadId = this.getLocalMessageId(threadId);\n      if(!this.threadsStorage[peerId]) this.threadsStorage[peerId] = {};\n      return this.threadsStorage[peerId][threadId] ?? (this.threadsStorage[peerId][threadId] = {count: null, history: new SlicedArray()});\n    }\n\n    return this.historiesStorage[peerId] ?? (this.historiesStorage[peerId] = {count: null, history: new SlicedArray()});\n  }\n\n  private handleNotifications = () => {\n    window.clearTimeout(this.notificationsHandlePromise);\n    this.notificationsHandlePromise = 0;\n\n    //var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\n    //const timeout = 1000;\n\n    for(const _peerId in this.notificationsToHandle) {\n      const peerId = +_peerId;\n\n      if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\n        continue;\n      }\n\n      const notifyPeerToHandle = this.notificationsToHandle[peerId];\n\n      Promise.all([\n        appNotificationsManager.getNotifyPeerTypeSettings(),\n        appNotificationsManager.getNotifySettings(appPeersManager.getInputNotifyPeerById(peerId, true))\n      ]).then(([_, peerTypeNotifySettings]) => {\n        const topMessage = notifyPeerToHandle.topMessage;\n        if(appNotificationsManager.isPeerLocalMuted(peerId, true) || !topMessage.pFlags.unread) {\n          return;\n        }\n\n        //setTimeout(() => {\n          if(topMessage.pFlags.unread) {\n            this.notifyAboutMessage(topMessage, {\n              fwdCount: notifyPeerToHandle.fwdCount,\n              peerTypeNotifySettings\n            });\n          }\n        //}, timeout);\n      });\n    }\n\n    this.notificationsToHandle = {};\n  };\n\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\n    const randomId = update.random_id;\n    const pendingData = this.pendingByRandomId[randomId];\n    //this.log('AMM updateMessageID:', update, pendingData);\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n      //const mid = update.id;\n      const mid = this.generateMessageId(update.id);\n      const message = this.getMessageFromStorage(storage, mid);\n      if(!message.deleted) {\n        [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n        .filter(Boolean)\n        .forEach(storage => {\n          storage.history.delete(tempId);\n        });\n\n        this.finalizePendingMessageCallbacks(storage, tempId, mid);\n      } else {\n        this.pendingByMessageId[mid] = randomId;\n      }\n    }\n  };\n\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const storage = this.getMessagesStorage(peerId);\n    const dialog = this.getDialogOnly(peerId);\n\n    // * local update\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\n\n    // * temporary save the message for info (peerId, reply mids...)\n    this.saveMessages([message], {storage: {}});\n\n    const threadKey = this.getThreadKey(message);\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\n    if(threadId && !isLocalThreadUpdate && this.threadsStorage[peerId] && this.threadsStorage[peerId][threadId]) {\n      const update = {\n        _: 'updateNewDiscussionMessage',\n        message\n      } as Update.updateNewDiscussionMessage;\n\n      this.onUpdateNewMessage(update);\n    }\n\n    if(!dialog && !isLocalThreadUpdate) {\n      let good = true;\n      if(peerId < 0) {\n        good = appChatsManager.isInChat(-peerId);\n      }\n\n      if(good) {\n        const set = this.newUpdatesAfterReloadToHandle[peerId] ?? (this.newUpdatesAfterReloadToHandle[peerId] = new Set());\n        if(set.has(update)) {\n          this.log.error('here we go again', peerId);\n          return;\n        }\n\n        this.scheduleHandleNewDialogs(peerId);\n        set.add(update);\n      }\n\n      return;\n    }\n\n    /* if(update._ === 'updateNewChannelMessage') {\n      const chat = appChatsManager.getChat(-peerId);\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n        return;\n      }\n    } */\n\n    this.saveMessages([message], {storage});\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n    /* if((message as Message.message).grouped_id) {\n      this.log('updateNewMessage', message);\n    } */\n\n    const pendingMessage = this.checkPendingMessage(message);\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if(!isLocalThreadUpdate) {\n      this.updateMessageRepliesIfNeeded(message);\n    }\n\n    if(historyStorage.history.findSlice(message.mid)) {\n      return false;\n    }\n\n    // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\n    const firstSlice = historyStorage.history.first;\n    if(firstSlice.isEnd(SliceEnd.Bottom)) {\n      let i = 0;\n      for(const length = firstSlice.length; i < length; ++i) {\n        if(message.mid > firstSlice[i]) {\n          break;\n        }\n      }\n\n      firstSlice.splice(i, 0, message.mid);\n    } else {\n      historyStorage.history.unshift(message.mid);\n    }\n\n    if(historyStorage.count !== null) {\n      historyStorage.count++;\n    }\n\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\n      rootScope.dispatchEvent('history_reply_markup', {peerId});\n    }\n\n    if(message.fromId > 0 && !message.pFlags.out && message.from_id) {\n      appUsersManager.forceUserOnline(message.fromId, message.date);\n    }\n\n    if(!pendingMessage) {\n      this.handleNewMessage(peerId, message.mid);\n    }\n\n    if(isLocalThreadUpdate) {\n      return;\n    }\n    \n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\n    if(dialog) {\n      this.setDialogTopMessage(message, dialog);\n      if(inboxUnread) {\n        dialog.unread_count++;\n      }\n    }\n\n    if(inboxUnread/*  && ($rootScope.selectedPeerID != peerID || $rootScope.idle.isIDLE) */) {\n      const notifyPeer = message.peerId;\n      let notifyPeerToHandle = this.notificationsToHandle[notifyPeer];\n      if(notifyPeerToHandle === undefined) {\n        notifyPeerToHandle = this.notificationsToHandle[notifyPeer] = {\n          fwdCount: 0,\n          fromId: 0\n        };\n      }\n\n      if(notifyPeerToHandle.fromId !== message.fromId) {\n        notifyPeerToHandle.fromId = message.fromId;\n        notifyPeerToHandle.fwdCount = 0;\n      }\n\n      if((message as Message.message).fwd_from) {\n        notifyPeerToHandle.fwdCount++;\n      }\n\n      notifyPeerToHandle.topMessage = message;\n\n      if(!this.notificationsHandlePromise) {\n        this.notificationsHandlePromise = window.setTimeout(this.handleNotifications, 0);\n      }\n    }\n  };\n\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\n    //this.log('updateDialogUnreadMark', update);\n    const peerId = appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    if(!dialog) {\n      this.scheduleHandleNewDialogs(peerId);\n    } else {\n      if(!update.pFlags.unread) {\n        delete dialog.pFlags.unread_mark;\n      } else {\n        dialog.pFlags.unread_mark = true;\n      }\n\n      rootScope.dispatchEvent('dialogs_multiupdate', {[peerId]: dialog});\n      this.dialogsStorage.setDialogToState(dialog);\n    }\n  };\n\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const mid = this.generateMessageId(message.id);\n    const storage = this.getMessagesStorage(peerId);\n    if(storage[mid] === undefined) {\n      return;\n    }\n\n    // console.trace(dT(), 'edit message', message)\n    \n    const oldMessage = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage});\n    const newMessage = this.getMessageFromStorage(storage, mid);\n\n    this.handleEditedMessage(oldMessage, newMessage);\n\n    const dialog = this.getDialogOnly(peerId);\n    const isTopMessage = dialog && dialog.top_message === mid;\n    // @ts-ignore\n    if(message.clear_history) { // that's will never happen\n      if(isTopMessage) {\n        rootScope.dispatchEvent('dialog_flush', {peerId});\n      }\n    } else {\n      rootScope.dispatchEvent('message_edit', {\n        storage,\n        peerId,\n        mid\n      });\n\n      if(isTopMessage || (message as Message.message).grouped_id) {\n        const updatedDialogs: {[peerId: number]: Dialog} = {};\n        updatedDialogs[peerId] = dialog;\n        rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox \n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox \n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\n    const maxId = this.generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id);\n    const threadId = this.generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id);\n    const peerId = channelId ? -channelId : appPeersManager.getPeerId((update as Update.updateReadHistoryInbox).peer);\n\n    const isOut = update._ === 'updateReadHistoryOutbox' || update._ === 'updateReadChannelOutbox' || update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\n\n    const storage = this.getMessagesStorage(peerId);\n    const history = getObjectKeysAndSort(storage, 'desc');\n    const foundDialog = this.getDialogOnly(peerId);\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\n    let newUnreadCount = 0;\n    let foundAffected = false;\n\n    //this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(peerId > 0 && isOut) {\n      appUsersManager.forceUserOnline(peerId);\n    }\n\n    if(threadId) {\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\n      if(repliesKey) {\n        const [peerId, mid] = repliesKey.split('_').map(n => +n);\n        this.updateMessage(peerId, mid, 'replies_updated');\n      }\n    }\n\n    for(let i = 0, length = history.length; i < length; i++) {\n      const messageId = history[i];\n      if(messageId > maxId) {\n        continue;\n      }\n      \n      const message = storage[messageId];\n\n      if(message.pFlags.out !== isOut) {\n        continue;\n      }\n\n      if(!message.pFlags.unread) {\n        break;\n      }\n\n      if(threadId) {\n        const replyTo = message.reply_to as MessageReplyHeader;\n        if(!replyTo || (replyTo.reply_to_top_id || replyTo.reply_to_msg_id) !== threadId) {\n          continue;\n        }\n      }\n      \n      // this.log.warn('read', messageId, message.pFlags.unread, message)\n      if(message.pFlags.unread) {\n        delete message.pFlags.unread;\n        if(!foundAffected) {\n          foundAffected = true;\n        }\n\n        if(!message.pFlags.out && !threadId && foundDialog && stillUnreadCount === undefined) {\n          newUnreadCount = --foundDialog.unread_count;\n        }\n        \n        appNotificationsManager.cancel('msg' + messageId);\n      }\n    }\n\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\n    else historyStorage.readMaxId = maxId;\n\n    if(!threadId && foundDialog) {\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\n      else foundDialog.read_inbox_max_id = maxId;\n\n      if(!isOut) {\n        if(newUnreadCount < 0 || !this.getReadMaxIdIfUnread(peerId)) {\n          foundDialog.unread_count = 0;\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\n          foundDialog.unread_count = newUnreadCount;\n        }\n      }\n      \n      rootScope.dispatchEvent('dialog_unread', {peerId});\n      this.dialogsStorage.setDialogToState(foundDialog);\n    }\n\n    if(foundAffected) {\n      rootScope.dispatchEvent('messages_read');\n    }\n\n    if(!threadId && channelId) {\n      const threadKeyPart = peerId + '_';\n      for(const threadKey in this.threadsToReplies) {\n        if(threadKey.indexOf(threadKeyPart) === 0) {\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_').map(n => +n);\n          rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId, mid));\n        }\n      }\n    }\n  };\n\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\n    const mids = (update as Update.updateReadMessagesContents).messages.map(id => this.generateMessageId(id));\n    const peerId = channelId ? -channelId : this.getMessageById(mids[0]).peerId;\n    for(const mid of mids) {\n      const message = this.getMessageByPeer(peerId, mid);\n      if(!message.deleted) {\n        delete message.pFlags.media_unread;\n        this.setDialogToStateIfMessageIsTop(message);\n      }\n    }\n\n    rootScope.dispatchEvent('messages_media_read', {peerId, mids});\n  };\n\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\n    const channelId: number = update.channel_id;\n    const messages: number[] = [];\n    const peerId: number = -channelId;\n    const history = this.getHistoryStorage(peerId).history.slice;\n    if(history.length) {\n      history.forEach((msgId: number) => {\n        if(!update.available_min_id || msgId <= update.available_min_id) {\n          messages.push(msgId);\n        }\n      });\n    }\n\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\n  };\n\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\n    const channelId: number = (update as Update.updateDeleteChannelMessages).channel_id;\n    //const messages = (update as any as Update.updateDeleteChannelMessages).messages;\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map(id => this.generateMessageId(id));\n    const peerId: number = channelId ? -channelId : this.getMessageById(messages[0]).peerId;\n    \n    if(!peerId) {\n      return;\n    }\n\n    apiManager.clearCache('messages.getSearchCounters', (params) => {\n      return appPeersManager.getPeerId(params.peer) === peerId;\n    });\n\n    const threadKeys: Set<string> = new Set();\n    for(const mid of messages) {\n      const message = this.getMessageByPeer(peerId, mid);\n      const threadKey = this.getThreadKey(message);\n      if(threadKey && this.threadsStorage[peerId] && this.threadsStorage[peerId][+threadKey.split('_')[1]]) {\n        threadKeys.add(threadKey);\n      }\n    }\n    \n    const historyUpdated = this.handleDeletedMessages(peerId, this.getMessagesStorage(peerId), messages);\n\n    const threadsStorages = Array.from(threadKeys).map(threadKey => {\n      const splitted = threadKey.split('_');\n      return this.getHistoryStorage(+splitted[0], +splitted[1]);\n    });\n\n    [this.getHistoryStorage(peerId)].concat(threadsStorages).forEach(historyStorage => {\n      for(const mid in historyUpdated.msgs) {\n        historyStorage.history.delete(+mid);\n      }\n      if(historyUpdated.count &&\n        historyStorage.count !== null &&\n        historyStorage.count > 0) {\n        historyStorage.count -= historyUpdated.count;\n        if(historyStorage.count < 0) {\n          historyStorage.count = 0;\n        }\n      }\n    });\n\n    rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\n\n    const foundDialog = this.getDialogOnly(peerId);\n    if(foundDialog) {\n      if(historyUpdated.unread) {\n        foundDialog.unread_count -= historyUpdated.unread;\n\n        rootScope.dispatchEvent('dialog_unread', {peerId});\n      }\n\n      if(historyUpdated.msgs[foundDialog.top_message]) {\n        this.reloadConversation(peerId);\n      }\n    }\n  };\n\n  private onUpdateChannel = (update: Update.updateChannel) => {\n    const channelId: number = update.channel_id;\n    const peerId = -channelId;\n    const channel: Chat.channel = appChatsManager.getChat(channelId);\n\n    const needDialog = appChatsManager.isInChat(channelId);\n    \n    const canViewHistory = !!channel.username || !channel.pFlags.left;\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\n    \n    if(canViewHistory !== hasHistory) {\n      delete this.historiesStorage[peerId];\n      rootScope.dispatchEvent('history_forbidden', peerId);\n    }\n    \n    const dialog = this.getDialogOnly(peerId);\n    if(!!dialog !== needDialog) {\n      if(needDialog) {\n        this.reloadConversation(-channelId);\n      } else {\n        if(dialog) {\n          this.dialogsStorage.dropDialog(peerId);\n          rootScope.dispatchEvent('dialog_drop', {peerId, dialog});\n        }\n      }\n    }\n  };\n\n  private onUpdateChannelReload = (update: any) => {\n    // @ts-ignore\n    const channelId: number = update.channel_id;\n    const peerId = -channelId;\n\n    this.dialogsStorage.dropDialog(peerId);\n\n    delete this.historiesStorage[peerId];\n    this.reloadConversation(-channelId).then(() => {\n      rootScope.dispatchEvent('history_reload', peerId);\n    });\n  };\n  \n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\n    const views = update.views;\n    //const mid = update.id;\n    const mid = this.generateMessageId(update.id);\n    const message = this.getMessageByPeer(-update.channel_id, mid);\n    if(!message.deleted && message.views && message.views < views) {\n      message.views = views;\n      rootScope.dispatchEvent('message_views', {mid, views});\n    }\n  };\n\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\n    //this.log('updateServiceNotification', update);\n    const fromId = 777000;\n    const peerId = fromId;\n    const messageId = this.generateTempMessageId(peerId);\n    const message: any = {\n      _: 'message',\n      id: messageId,\n      from_id: appPeersManager.getOutputPeer(fromId),\n      peer_id: appPeersManager.getOutputPeer(peerId),\n      pFlags: {unread: true},\n      date: (update.inbox_date || tsNow(true)) + serverTimeManager.serverTimeOffset,\n      message: update.message,\n      media: update.media,\n      entities: update.entities\n    };\n    if(!appUsersManager.hasUser(fromId)) {\n      appUsersManager.saveApiUsers([{\n        _: 'user',\n        id: fromId,\n        pFlags: {verified: true},\n        access_hash: 0,\n        first_name: 'Telegram',\n        phone: '42777'\n      }]);\n    }\n    this.saveMessages([message], {isOutgoing: true});\n\n    if(update.inbox_date) {\n      this.pendingTopMsgs[peerId] = messageId;\n      this.onUpdateNewMessage({\n        _: 'updateNewMessage',\n        message\n      } as any);\n    }\n  };\n\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\n    const peerId = channelId ? -channelId : appPeersManager.getPeerId((update as Update.updatePinnedMessages).peer);\n\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\n    if(storage.count !== storage.history.length) {\n      if(storage.count !== undefined) {\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];  \n      }\n\n      rootScope.broadcast('peer_pinned_messages', peerId);\n      break;\n    } */\n\n    const messages = update.messages.map(id => this.generateMessageId(id)); \n\n    const storage = this.getMessagesStorage(peerId);\n    const missingMessages = messages.filter(mid => !storage[mid]);\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map(mid => this.wrapSingleMessage(peerId, mid))) : Promise.resolve();\n    getMissingPromise.finally(() => {\n      const werePinned = update.pFlags?.pinned;\n      if(werePinned) {\n        for(const mid of messages) {\n          //storage.history.push(mid);\n          const message = storage[mid];\n          message.pFlags.pinned = true;\n        }\n\n        /* if(this.pinnedMessages[peerId]?.maxId) {\n          const maxMid = Math.max(...messages);\n          this.pinnedMessages\n        } */\n\n        //storage.history.sort((a, b) => b - a);\n      } else {\n        for(const mid of messages) {\n          //storage.history.findAndSplice(_mid => _mid === mid);\n          const message = storage[mid];\n          delete message.pFlags.pinned;\n        }\n      }\n\n      /* const info = this.pinnedMessages[peerId];\n      if(info) {\n        info.count += messages.length * (werePinned ? 1 : -1);\n      } */\n  \n      delete this.pinnedMessages[peerId];\n      appStateManager.getState().then(state => {\n        delete state.hiddenPinnedMessages[peerId];\n        rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\n      });\n    });\n  };\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer, notify_settings} = update;\n    if(peer._ === 'notifyPeer') {\n      const peerId = appPeersManager.getPeerId((peer as NotifyPeer.notifyPeer).peer);\n    \n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        dialog.notify_settings = notify_settings;\n        rootScope.dispatchEvent('dialog_notify_settings', dialog);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mid = this.generateMessageId(message.id);\n\n      const oldMessage = this.getMessageFromStorage(storage, mid);\n      this.saveMessages([message], {storage, isScheduled: true});\n      const newMessage = this.getMessageFromStorage(storage, mid);\n\n      if(!oldMessage.deleted) {\n        this.handleEditedMessage(oldMessage, newMessage);\n        rootScope.dispatchEvent('message_edit', {storage, peerId, mid: message.mid});\n      } else {\n        const pendingMessage = this.checkPendingMessage(message);\n        if(!pendingMessage) {\n          rootScope.dispatchEvent('scheduled_new', {peerId, mid: message.mid});\n        }\n      }\n    }\n  };\n\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\n    const peerId = appPeersManager.getPeerId(update.peer);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mids = update.messages.map(id => this.generateMessageId(id));\n      this.handleDeletedMessages(peerId, storage, mids);\n\n      rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\n    }\n  };\n\n  public setDialogToStateIfMessageIsTop(message: any) {\n    const dialog = this.getDialogOnly(message.peerId);\n    if(dialog && dialog.top_message === message.mid) {\n      this.dialogsStorage.setDialogToState(dialog);\n    }\n  }\n\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\n    try { // * на всякий случай, скорее всего это не понадобится\n      const threadKey = this.getThreadKey(threadMessage);\n      if(threadKey) {\n        const repliesKey = this.threadsToReplies[threadKey];\n        if(repliesKey) {\n          const [peerId, mid] = repliesKey.split('_').map(n => +n);\n\n          this.updateMessage(peerId, mid, 'replies_updated');\n        }\n      }\n    } catch(err) {\n      this.log.error('incrementMessageReplies err', err, threadMessage);\n    }\n  }\n\n  private getThreadKey(threadMessage: MyMessage) {\n    let threadKey = '';\n    if(threadMessage.peerId < 0 && threadMessage.reply_to) {\n      const threadId = threadMessage.reply_to.reply_to_top_id || threadMessage.reply_to.reply_to_msg_id;\n      threadKey = threadMessage.peerId + '_' + threadId;\n    }\n\n    return threadKey;\n  }\n\n  public updateMessage(peerId: number, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\n    const promise: Promise<Message.message> = this.wrapSingleMessage(peerId, mid, true).then(() => {\n      const message = this.getMessageByPeer(peerId, mid);\n\n      if(broadcastEventName) {\n        rootScope.dispatchEvent(broadcastEventName, message);\n      }\n\n      return message;\n    });\n    \n    return promise;\n  }\n\n  private checkPendingMessage(message: any) {\n    const randomId = this.pendingByMessageId[message.mid];\n    let pendingMessage: any;\n    if(randomId) {\n      const pendingData = this.pendingByRandomId[randomId];\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\n        rootScope.dispatchEvent('history_update', {storage: pendingData.storage, peerId: message.peerId, mid: message.mid});\n      }\n\n      delete this.pendingByMessageId[message.mid];\n    }\n\n    return pendingMessage;\n  }\n\n  public mutePeer(peerId: number, mute?: boolean) {\n    const settings: InputPeerNotifySettings = {\n      _: 'inputPeerNotifySettings'\n    };\n\n    if(mute === undefined) {\n      mute = !appNotificationsManager.isPeerLocalMuted(peerId, false);\n    }\n    \n    settings.mute_until = mute ? 0x7FFFFFFF : 0;\n\n    return appNotificationsManager.updateNotifySettings({\n      _: 'inputNotifyPeer',\n      peer: appPeersManager.getInputPeerById(peerId)\n    }, settings);\n  }\n\n  public canWriteToPeer(peerId: number, threadId?: number) {\n    if(peerId < 0) {\n      const isChannel = appPeersManager.isChannel(peerId);\n      const hasRights = isChannel && appChatsManager.hasRights(-peerId, 'send_messages', undefined, !!threadId); \n      return !isChannel || hasRights;\n    } else {\n      return appUsersManager.canSendToUser(peerId);\n    }\n  }\n\n  public finalizePendingMessage(randomId: string, finalMessage: any) {\n    const pendingData = this.pendingByRandomId[randomId];\n    // this.log('pdata', randomID, pendingData)\n\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n\n      [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n      .filter(Boolean)\n      .forEach(storage => {\n        storage.history.delete(tempId);\n      });\n\n      // this.log('pending', randomID, historyStorage.pending)\n\n      const message = this.getMessageFromStorage(storage, tempId);\n      if(!message.deleted) {\n        delete message.pFlags.is_outgoing;\n        delete message.pending;\n        delete message.error;\n        delete message.random_id;\n        delete message.send;\n\n        rootScope.dispatchEvent('messages_pending');\n      }\n      \n      delete this.pendingByRandomId[randomId];\n\n      this.finalizePendingMessageCallbacks(storage, tempId, finalMessage.mid);\n\n      return message;\n    }\n\n    return false;\n  }\n\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, mid: number) {\n    const message = this.getMessageFromStorage(storage, mid);\n    const callbacks = this.tempFinalizeCallbacks[tempId];\n    //this.log.warn(callbacks, tempId);\n    if(callbacks !== undefined) {\n      for(const name in callbacks) {\n        const {deferred, callback} = callbacks[name];\n        //this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\n        callback(message).then(deferred.resolve, deferred.reject);\n      }\n\n      delete this.tempFinalizeCallbacks[tempId];\n    }\n\n    // set cached url to media\n    if(message.media) {\n      if(message.media.photo) {\n        const photo = appPhotosManager.getPhoto('' + tempId);\n        if(/* photo._ !== 'photoEmpty' */photo) {\n          const newPhoto = message.media.photo as MyPhoto;\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\n          const cacheContext = appDownloadManager.getCacheContext(newPhoto, newPhotoSize.type);\n          const oldCacheContext = appDownloadManager.getCacheContext(photo, 'full');\n          Object.assign(cacheContext, oldCacheContext);\n\n          const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\n\n          const downloadOptions = appPhotosManager.getPhotoDownloadOptions(newPhoto, photoSize);\n          const fileName = getFileNameByLocation(downloadOptions.location);\n          appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n        }\n      } else if(message.media.document) {\n        const doc = appDocsManager.getDoc('' + tempId);\n        if(doc) {\n          if(/* doc._ !== 'documentEmpty' &&  */doc.type && doc.type !== 'sticker') {\n            const newDoc = message.media.document;\n            const cacheContext = appDownloadManager.getCacheContext(newDoc);\n            const oldCacheContext = appDownloadManager.getCacheContext(doc);\n            Object.assign(cacheContext, oldCacheContext);\n\n            const fileName = appDocsManager.getInputFileName(newDoc);\n            appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n          }\n        }\n      } else if(message.media.poll) {\n        delete appPollsManager.polls[tempId];\n        delete appPollsManager.results[tempId];\n      }\n    }\n\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\n    delete storage[tempId];\n\n    rootScope.dispatchEvent('message_sent', {storage, tempId, tempMessage, mid});\n  }\n\n  public incrementMaxSeenId(maxId: number) {\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\n      return false;\n    }\n\n    this.maxSeenId = maxId;\n    appStateManager.pushToState('maxSeenMsgId', maxId);\n\n    apiManager.invokeApi('messages.receivedMessages', {\n      max_id: this.getServerMessageId(maxId)\n    });\n  }\n\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\n    fwdCount: number,\n    peerTypeNotifySettings: PeerNotifySettings\n  }> = {}) {\n    const peerId = this.getMessagePeer(message);\n    const notification: NotifyOptions = {};\n    const peerString = appPeersManager.getPeerString(peerId);\n    let notificationMessage: string;\n\n    if(options.peerTypeNotifySettings.show_previews) {\n      if(message._ === 'message' && message.fwd_from && options.fwdCount) {\n        notificationMessage = I18n.format('Notifications.Forwarded', true, [options.fwdCount]);\n      } else {\n        notificationMessage = this.wrapMessageForReply(message, undefined, undefined, true);\n      }\n    } else {\n      notificationMessage = I18n.format('Notifications.New', true);\n    }\n\n    notification.title = appPeersManager.getPeerTitle(peerId, true);\n    if(peerId < 0 && message.fromId !== message.peerId) {\n      notification.title = appPeersManager.getPeerTitle(message.fromId, true) +\n        ' @ ' +\n        notification.title;\n    }\n\n    notification.title = RichTextProcessor.wrapPlainText(notification.title);\n\n    notification.onclick = () => {\n      rootScope.dispatchEvent('history_focus', {peerId, mid: message.mid});\n    };\n\n    notification.message = notificationMessage;\n    notification.key = 'msg' + message.mid;\n    notification.tag = peerString;\n    notification.silent = true;//message.pFlags.silent || false;\n\n    const peerPhoto = appPeersManager.getPeerPhoto(peerId);\n    if(peerPhoto) {\n      appAvatarsManager.loadAvatar(peerId, peerPhoto, 'photo_small').loadPromise.then(url => {\n        if(message.pFlags.unread) {\n          notification.image = url;\n          appNotificationsManager.notify(notification);\n        }\n      });\n    } else {\n      appNotificationsManager.notify(notification);\n    }\n  }\n\n  public getScheduledMessagesStorage(peerId: number) {\n    return this.scheduledMessagesStorage[peerId] ?? (this.scheduledMessagesStorage[peerId] = this.createMessageStorage());\n  }\n\n  public getScheduledMessages(peerId: number): Promise<number[]> {\n    if(!this.canWriteToPeer(peerId)) return Promise.resolve([]);\n\n    const storage = this.getScheduledMessagesStorage(peerId);\n    if(Object.keys(storage).length) {\n      return Promise.resolve(Object.keys(storage).map(id => +id));\n    }\n\n    return apiManager.invokeApiSingle('messages.getScheduledHistory', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      hash: 0\n    }).then(historyResult => {\n      if(historyResult._ !== 'messages.messagesNotModified') {\n        appUsersManager.saveApiUsers(historyResult.users);\n        appChatsManager.saveApiChats(historyResult.chats);\n        \n        const storage = this.getScheduledMessagesStorage(peerId);\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\n        return Object.keys(storage).map(id => +id);\n      }\n      \n      return [];\n    });\n  }\n\n  public sendScheduledMessages(peerId: number, mids: number[]) {\n    return apiManager.invokeApi('messages.sendScheduledMessages', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: mids.map(mid => this.getServerMessageId(mid))\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public deleteScheduledMessages(peerId: number, mids: number[]) {\n    return apiManager.invokeApi('messages.deleteScheduledMessages', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      id: mids.map(mid => this.getServerMessageId(mid))\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getMessageWithReplies(message: Message.message) {\n    if(message.peerId !== REPLIES_PEER_ID) {\n      message = this.filterMessages(message, message => !!(message as Message.message).replies)[0] as any;\n      if(!(message && message.replies && message.replies.pFlags.comments && message.replies.channel_id !== 777)) {\n        return;\n      }\n    }\n\n    return message;\n  }\n\n  public isFetchIntervalNeeded(peerId: number) {\n    return peerId < 0 && !appChatsManager.isInChat(peerId);\n  }\n\n  public async getNewHistory(peerId: number, threadId?: number) {\n    if(!this.isFetchIntervalNeeded(peerId)) {\n      return;\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(!slice.isEnd(SliceEnd.Bottom)) {\n      return;\n    }\n\n    delete historyStorage.maxId;\n    slice.unsetEnd(SliceEnd.Bottom);\n\n    // if there is no id - then request by first id because cannot request by id 0 with backLimit\n    let historyResult = this.getHistory(peerId, slice[0] ?? 1, 0, 50, threadId);\n    if(historyResult instanceof Promise) {\n      historyResult = await historyResult;\n    }\n\n    for(let i = 0, length = historyResult.history.length; i < length; ++i) {\n      this.handleNewMessage(peerId, historyResult.history[i]);\n    }\n\n    return historyStorage;\n  }\n\n  /**\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\n   */\n  public getHistory(peerId: number, maxId = 0, limit: number, backLimit?: number, threadId?: number): Promise<HistoryResult> | HistoryResult {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    let offset = 0;\n    /* \n    let offsetFound = true;\n\n    if(maxId) {\n      offsetFound = false;\n      for(; offset < historyStorage.history.length; offset++) {\n        if(maxId > historyStorage.history.slice[offset]) {\n          offsetFound = true;\n          break;\n        }\n      }\n    }\n\n    if(offsetFound && (\n      historyStorage.count !== null && historyStorage.history.length === historyStorage.count ||\n      historyStorage.history.length >= offset + limit\n      )) {\n      if(backLimit) {\n        backLimit = Math.min(offset, backLimit);\n        offset = Math.max(0, offset - backLimit);\n        limit += backLimit;\n      } else {\n        limit = limit;\n      }\n\n      const history = historyStorage.history.slice.slice(offset, offset + limit);\n      return {\n        count: historyStorage.count,\n        history: history,\n        offsetIdOffset: offset\n      };\n    }\n\n    if(offsetFound) {\n      offset = 0;\n    } */\n\n    if(backLimit) {\n      offset = -backLimit;\n      limit += backLimit;\n\n      /* return this.requestHistory(reqPeerId, maxId, limit, offset, undefined, threadId).then((historyResult) => {\n        historyStorage.count = (historyResult as MessagesMessages.messagesMessagesSlice).count || historyResult.messages.length;\n\n        const history = (historyResult.messages as MyMessage[]).map(message => message.mid);\n        return {\n          count: historyStorage.count,\n          history,\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0\n        };\n      }); */\n    }\n\n    const haveSlice = historyStorage.history.sliceMe(maxId, offset, limit);\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\n      return {\n        count: historyStorage.count,\n        history: haveSlice.slice,\n        offsetIdOffset: haveSlice.offsetIdOffset\n      }; \n    }\n\n    return this.fillHistoryStorage(peerId, maxId, limit, offset, historyStorage, threadId).then(() => {\n      const slice = historyStorage.history.sliceMe(maxId, offset, limit);\n      return {\n        count: historyStorage.count,\n        history: slice?.slice || historyStorage.history.constructSlice(),\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\n      };\n    });\n  }\n\n  public fillHistoryStorage(peerId: number, offset_id: number, limit: number, add_offset: number, historyStorage: HistoryStorage, threadId?: number): Promise<void> {\n    return this.requestHistory(peerId, offset_id, limit, add_offset, undefined, threadId).then((historyResult) => {\n      const {offset_id_offset, count, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n\n      historyStorage.count = count || messages.length;\n      const offsetIdOffset = offset_id_offset || 0;\n\n      const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\n\n      const isTopEnd = offsetIdOffset >= (historyStorage.count - topWasMeantToLoad) || historyStorage.count < topWasMeantToLoad;\n      const isBottomEnd = !offsetIdOffset || (add_offset < 0 && (offsetIdOffset + add_offset) <= 0);\n\n      /* if(!maxId && historyResult.messages.length) {\n        maxId = this.incrementMessageId((historyResult.messages[0] as MyMessage).mid, 1);\n      }\n\n      const wasTotalCount = historyStorage.history.length; */\n\n      const mids = messages.map((message) => {\n        if(this.mergeReplyKeyboard(historyStorage, message)) {\n          rootScope.dispatchEvent('history_reply_markup', {peerId});\n        }\n\n        return (message as MyMessage).mid;\n      });\n\n      // * add bound manually. \n      // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\n      if(offset_id && !mids.includes(offset_id) && offsetIdOffset < historyStorage.count) {\n        let i = 0;\n        for(const length = mids.length; i < length; ++i) {\n          if(offset_id > mids[i]) {\n            break;\n          }\n        }\n\n        mids.splice(i, 0, offset_id);\n      }\n      \n      const slice = historyStorage.history.insertSlice(mids) || historyStorage.history.slice;\n      if(isTopEnd) {\n        slice.setEnd(SliceEnd.Top);\n      }\n  \n      if(isBottomEnd) {\n        slice.setEnd(SliceEnd.Bottom);\n        historyStorage.maxId = slice[0]; // ! WARNING\n      }\n      \n      /* const isBackLimit = offset < 0 && -offset !== fullLimit;\n      if(isBackLimit) {\n        return;\n      }\n\n      const totalCount = historyStorage.history.length;\n      fullLimit -= (totalCount - wasTotalCount);\n\n      const migratedNextPeer = this.migratedFromTo[peerId];\n      const migratedPrevPeer = this.migratedToFrom[peerId]\n      const isMigrated = migratedNextPeer !== undefined || migratedPrevPeer !== undefined;\n\n      if(isMigrated) {\n        historyStorage.count = Math.max(historyStorage.count, totalCount) + 1;\n      }\n\n      if(fullLimit > 0) {\n        maxId = historyStorage.history.slice[totalCount - 1];\n        if(isMigrated) {\n          if(!historyResult.messages.length) {\n            if(migratedPrevPeer) {\n              maxId = 0;\n              peerId = migratedPrevPeer;\n            } else {\n              historyStorage.count = totalCount;\n              return true;\n            }\n          }\n\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, historyStorage, threadId);\n        } else if(totalCount < historyStorage.count) {\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, offset, historyStorage, threadId);\n        }\n      } */\n    });\n  }\n\n  public requestHistory(peerId: number, maxId: number, limit = 0, offset = 0, offsetDate = 0, threadId = 0): Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>> {\n    //console.trace('requestHistory', peerId, maxId, limit, offset);\n\n    //rootScope.broadcast('history_request');\n\n    const options: any = {\n      peer: appPeersManager.getInputPeerById(peerId),\n      offset_id: this.getServerMessageId(maxId) || 0,\n      offset_date: offsetDate,\n      add_offset: offset,\n      limit,\n      max_id: 0,\n      min_id: 0,\n      hash: 0\n    };\n\n    if(threadId) {\n      options.msg_id = this.getServerMessageId(threadId) || 0;\n    }\n\n    const promise: ReturnType<AppMessagesManager['requestHistory']> = apiManager.invokeApiSingle(threadId ? 'messages.getReplies' : 'messages.getHistory', options, {\n      //timeout: APITIMEOUT,\n      noErrorBox: true\n    }) as any;\n\n    return promise.then((historyResult) => {\n      if(DEBUG) {\n        this.log('requestHistory result:', peerId, historyResult, maxId, limit, offset);\n      }\n\n      appUsersManager.saveApiUsers(historyResult.users);\n      appChatsManager.saveApiChats(historyResult.chats);\n      this.saveMessages(historyResult.messages);\n\n      if(appPeersManager.isChannel(peerId)) {\n        apiUpdatesManager.addChannelState(-peerId, (historyResult as MessagesMessages.messagesChannelMessages).pts);\n      }\n\n      let length = historyResult.messages.length, count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\n      if(length && historyResult.messages[length - 1].deleted) {\n        historyResult.messages.splice(length - 1, 1);\n        length--;\n        count--;\n      }\n\n      // will load more history if last message is album grouped (because it can be not last item)\n      // historyResult.messages: desc sorted\n      const historyStorage = this.getHistoryStorage(peerId, threadId);\n      const oldestMessage: Message.message = historyResult.messages[length - 1] as any;\n      if(length && oldestMessage.grouped_id) {\n        const foundSlice = historyStorage.history.findSlice(oldestMessage.mid);\n        if(foundSlice && (foundSlice.slice.length + historyResult.messages.length) < count) {\n          return this.requestHistory(peerId, oldestMessage.mid, 10, 0, offsetDate, threadId).then((_historyResult) => {\n            return historyResult;\n          });\n        }\n      }\n\n      return historyResult;\n    }, (error) => {\n      switch (error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = appChatsManager.getChat(-peerId);\n          channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title};\n          apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: -peerId\n            }],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      throw error;\n    });\n  }\n\n  public fetchSingleMessages() {\n    if(this.fetchSingleMessagesPromise) {\n      return this.fetchSingleMessagesPromise;\n    }\n\n    return this.fetchSingleMessagesPromise = new Promise((resolve) => {\n      setTimeout(() => {\n        let promises: Promise<void>[] = [];\n        \n        for(const peerId in this.needSingleMessages) {\n          const mids = this.needSingleMessages[peerId];\n          delete this.needSingleMessages[peerId];\n    \n          const msgIds: InputMessage[] = mids.map((msgId: number) => {\n            return {\n              _: 'inputMessageID',\n              id: this.getServerMessageId(msgId)\n            };\n          });\n    \n          let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\n          if(+peerId < 0 && appPeersManager.isChannel(+peerId)) {\n            promise = apiManager.invokeApiSingle('channels.getMessages', {\n              channel: appChatsManager.getChannelInput(-+peerId),\n              id: msgIds\n            });\n          } else {\n            promise = apiManager.invokeApiSingle('messages.getMessages', {\n              id: msgIds\n            });\n          }\n    \n          promises.push(promise.then(getMessagesResult => {\n            if(getMessagesResult._ !== 'messages.messagesNotModified') {\n              appUsersManager.saveApiUsers(getMessagesResult.users);\n              appChatsManager.saveApiChats(getMessagesResult.chats);\n              this.saveMessages(getMessagesResult.messages);\n            }\n    \n            rootScope.dispatchEvent('messages_downloaded', {peerId: +peerId, mids});\n          }));\n        }\n\n        Promise.all(promises).finally(() => {\n          this.fetchSingleMessagesPromise = null;\n          if(Object.keys(this.needSingleMessages).length) this.fetchSingleMessages();\n          resolve();\n        });\n      }, 0);\n    });\n  }\n\n  public wrapSingleMessage(peerId: number, msgId: number, overwrite = false): Promise<void> {\n    if(!this.getMessageByPeer(peerId, msgId).deleted && !overwrite) {\n      rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [msgId]});\n      return Promise.resolve();\n    } else if(!this.needSingleMessages[peerId] || this.needSingleMessages[peerId].indexOf(msgId) === -1) {\n      (this.needSingleMessages[peerId] ?? (this.needSingleMessages[peerId] = [])).push(msgId);\n      return this.fetchSingleMessages();\n    } else if(this.fetchSingleMessagesPromise) {\n      return this.fetchSingleMessagesPromise;\n    }\n  }\n\n  public setTyping(peerId: number, action: SendMessageAction): Promise<boolean> {\n    let typing = this.typings[peerId];\n    if(!rootScope.myId || \n      !peerId || \n      !this.canWriteToPeer(peerId) || \n      peerId === rootScope.myId ||\n      typing?.type === action._\n    ) {\n      return Promise.resolve(false);\n    }\n\n    if(typing?.timeout) {\n      clearTimeout(typing.timeout);\n    }\n\n    typing = this.typings[peerId] = {\n      type: action._\n    };\n\n    return apiManager.invokeApi('messages.setTyping', {\n      peer: appPeersManager.getInputPeerById(peerId),\n      action\n    }).finally(() => {\n      if(typing === this.typings[peerId]) {\n        typing.timeout = window.setTimeout(() => {\n          delete this.typings[peerId];\n        }, 6000);\n      }\n    });\n  }\n\n  private handleDeletedMessages(peerId: number, storage: MessagesStorage, messages: number[]) {\n    const history: {\n      count: number, \n      unread: number, \n      msgs: {[mid: number]: true},\n      albums?: {[groupId: string]: Set<number>},\n    } = {count: 0, unread: 0, msgs: {}} as any;\n\n    for(const mid of messages) {\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\n      if(message.deleted) continue;\n\n      if((message as Message.message).media) {\n        // @ts-ignore\n        const c = message.media.webpage || message.media;\n        const smth = c.photo || c.document;\n\n        if(smth?.file_reference) {\n          referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId, messageId: mid});\n        }\n\n        // @ts-ignore\n        if(message.media.webpage) {\n          // @ts-ignore\n          appWebPagesManager.deleteWebPageFromPending(message.media.webpage, mid);\n        }\n      }\n\n      this.updateMessageRepliesIfNeeded(message);\n\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\n        history.unread++;\n        appNotificationsManager.cancel('msg' + mid);\n      }\n      history.count++;\n      history.msgs[mid] = true;\n\n      message.deleted = true;\n\n      if(message._ !== 'messageService' && message.grouped_id) {\n        const groupedStorage = this.groupedMessagesStorage[message.grouped_id];\n        if(groupedStorage) {\n          delete groupedStorage[mid];\n\n          if(!history.albums) history.albums = {};\n          (history.albums[message.grouped_id] || (history.albums[message.grouped_id] = new Set())).add(mid);\n\n          if(!Object.keys(groupedStorage).length) {\n            delete history.albums;\n            delete this.groupedMessagesStorage[message.grouped_id];\n          }\n        }\n      }\n\n      delete storage[mid];\n\n      const peerMessagesToHandle = this.newMessagesToHandle[peerId];\n      if(peerMessagesToHandle && peerMessagesToHandle.has(mid)) {\n        peerMessagesToHandle.delete(mid);\n      }\n    }\n\n    if(history.albums) {\n      for(const groupId in history.albums) {\n        rootScope.dispatchEvent('album_edit', {peerId, groupId, deletedMids: [...history.albums[groupId]]});\n        /* const mids = this.getMidsByAlbum(groupId);\n        if(mids.length) {\n          const mid = Math.max(...mids);\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\n        } */\n      }\n    }\n\n    return history;\n  }\n  \n  private handleEditedMessage(oldMessage: any, newMessage: any) {\n    if(oldMessage.media?.webpage) {\n      appWebPagesManager.deleteWebPageFromPending(oldMessage.media.webpage, oldMessage.mid);\n    }\n  }\n}\n\nconst appMessagesManager = new AppMessagesManager();\nMOUNT_CLASS_TO.appMessagesManager = appMessagesManager;\nexport default appMessagesManager;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"rlottie.worker.6777ef401e7048467332.bundle.worker.js\");\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport RLottieWorker from 'worker-loader!./rlottie/rlottie.worker';\nimport animationIntersector from \"../components/animationIntersector\";\nimport { MOUNT_CLASS_TO } from '../config/debug';\nimport EventListenerBase from \"../helpers/eventListenerBase\";\nimport mediaSizes from \"../helpers/mediaSizes\";\nimport { clamp } from '../helpers/number';\nimport { pause } from '../helpers/schedulers';\nimport { isAndroid, isApple, isAppleMobile, isSafari } from \"../helpers/userAgent\";\nimport { logger, LogTypes } from \"./logger\";\nimport apiManager from \"./mtproto/mtprotoworker\";\n\nlet convert = (value: number) => {\n\treturn Math.round(Math.min(Math.max(value, 0), 1) * 255);\n};\n\ntype RLottiePlayerListeners = 'enterFrame' | 'ready' | 'firstFrame' | 'cached';\ntype RLottieOptions = {\n  container: HTMLElement, \n  autoplay?: boolean, \n  animationData: string, \n  loop?: boolean, \n  width?: number,\n  height?: number,\n  group?: string,\n  noCache?: true,\n  needUpscale?: true,\n  skipRatio?: number\n};\n\nexport class RLottiePlayer extends EventListenerBase<{\n  enterFrame: (frameNo: number) => void,\n  ready: () => void,\n  firstFrame: () => void,\n  cached: () => void\n}> {\n  public static reqId = 0;\n\n  public reqId = 0;\n  public curFrame: number;\n  public frameCount: number;\n  public fps: number;\n  public skipDelta: number;\n\n  public worker: QueryableWorker;\n  \n  public width = 0;\n  public height = 0;\n\n  public el: HTMLElement;\n  public canvas: HTMLCanvasElement;\n  public context: CanvasRenderingContext2D;\n\n  public paused = true;\n  //public paused = false;\n  public direction = 1;\n  public speed = 1;\n  public autoplay = true;\n  public _autoplay: boolean; // ! will be used to store original value for settings.stickers.loop\n  public loop = true;\n  public _loop: boolean; // ! will be used to store original value for settings.stickers.loop\n  public group = '';\n\n  private frInterval: number;\n  private frThen: number;\n  private rafId: number;\n\n  //private caching = false;\n  //private removed = false;\n\n  private frames: {[frameNo: string]: Uint8ClampedArray} = {};\n  public imageData: ImageData;\n  public clamped: Uint8ClampedArray;\n  public cachingDelta = 0;\n\n  //private playedTimes = 0;\n\n  private currentMethod: RLottiePlayer['mainLoopForwards'] | RLottiePlayer['mainLoopBackwards'];\n  private frameListener: () => void;\n\n  constructor({el, worker, options}: {\n    el: HTMLElement,\n    worker: QueryableWorker,\n    options: RLottieOptions\n  }) {\n    super(true);\n\n    this.reqId = ++RLottiePlayer['reqId'];\n    this.el = el;\n    this.worker = worker;\n\n    for(let i in options) {\n      if(this.hasOwnProperty(i)) {\n        // @ts-ignore\n        this[i] = options[i];\n      }\n    }\n\n    this._loop = this.loop;\n    this._autoplay = this.autoplay;\n\n    // * Skip ratio (30fps)\n    let skipRatio: number;\n    if(options.skipRatio !== undefined) skipRatio = options.skipRatio;\n    else if((isAndroid || isAppleMobile || (isApple && !isSafari)) && this.width < 100 && this.height < 100) {\n      skipRatio = 0.5;\n    }\n\n    this.skipDelta = skipRatio !== undefined ? 1 / skipRatio | 0 : 1;\n\n    //options.needUpscale = true;\n\n    // * Pixel ratio\n    //const pixelRatio = window.devicePixelRatio;\n    const pixelRatio = clamp(window.devicePixelRatio, 1, 2);\n    if(pixelRatio > 1) {\n      //this.cachingEnabled = true;//this.width < 100 && this.height < 100;\n      if(options.needUpscale) {\n        this.width = Math.round(this.width * pixelRatio);\n        this.height = Math.round(this.height * pixelRatio);\n      } else if(pixelRatio > 1) {\n        if(this.width > 100 && this.height > 100) {\n          if(isApple || !mediaSizes.isMobile) {\n            /* this.width = Math.round(this.width * (pixelRatio - 1));\n            this.height = Math.round(this.height * (pixelRatio - 1)); */\n            this.width = Math.round(this.width * pixelRatio);\n            this.height = Math.round(this.height * pixelRatio);\n          } else if(pixelRatio > 2.5) {\n            this.width = Math.round(this.width * (pixelRatio - 1.5));\n            this.height = Math.round(this.height * (pixelRatio - 1.5));\n          }\n        } else {\n          this.width = Math.round(this.width * Math.max(1.5, pixelRatio - 1.5));\n          this.height = Math.round(this.height * Math.max(1.5, pixelRatio - 1.5));\n        }\n      }\n    }\n\n    //options.noCache = true;\n    \n    // * Cache frames params\n    if(!options.noCache/*  && false */) {\n      // проверка на размер уже после скейлинга, сделано для попапа и сайдбара, где стикеры 80х80 и 68х68, туда нужно 75%\n      if(isApple && this.width > 100 && this.height > 100) {\n        this.cachingDelta = 2; //2 // 50%\n      } else if(this.width < 100 && this.height < 100) {\n        this.cachingDelta = Infinity; // 100%\n      } else {\n        this.cachingDelta = 4; // 75%\n      }\n    }\n    \n    // this.cachingDelta = Infinity;\n    // if(isApple) {\n    //   this.cachingDelta = 0; //2 // 50%\n    // }\n\n    /* this.width *= 0.8;\n    this.height *= 0.8; */\n    \n    //console.log(\"RLottiePlayer width:\", this.width, this.height, options);\n    this.canvas = document.createElement('canvas');\n    this.canvas.classList.add('rlottie');\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.context = this.canvas.getContext('2d');\n\n    this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\n    this.imageData = new ImageData(this.width, this.height);\n  }\n\n  public clearCache() {\n    this.frames = {};\n  }\n\n  public sendQuery(methodName: string, ...args: any[]) {\n    //console.trace('RLottie sendQuery:', methodName);\n    this.worker.sendQuery(methodName, this.reqId, ...args);\n  }\n\n  public loadFromData(jsonString: string) {\n    this.sendQuery('loadFromData', jsonString, this.width, this.height/* , this.canvas.transferControlToOffscreen() */);\n  }\n\n  public play() {\n    if(!this.paused) return;\n\n    //return;\n\n    //console.log('RLOTTIE PLAY' + this.reqId);\n\n    this.paused = false;\n    this.setMainLoop();\n  }\n\n  public pause(clearPendingRAF = true) {\n    if(this.paused) return;\n\n    this.paused = true;\n    if(clearPendingRAF) {\n      clearTimeout(this.rafId);\n    }\n    //window.cancelAnimationFrame(this.rafId);\n  }\n\n  public stop(renderFirstFrame = true) {\n    this.pause();\n\n    this.curFrame = this.direction === 1 ? 0 : this.frameCount;\n    if(renderFirstFrame) {\n      this.requestFrame(this.curFrame);\n      //this.sendQuery('renderFrame', this.curFrame);\n    }\n  }\n\n  public restart() {\n    this.stop(false);\n    this.play();\n  }\n\n  public setSpeed(speed: number) {\n    this.speed = speed;\n\n    if(!this.paused) {\n      this.setMainLoop();\n    }\n  }\n\n  public setDirection(direction: number) {\n    this.direction = direction;\n    \n    if(!this.paused) {\n      this.setMainLoop();\n    }\n  }\n\n  public remove() {\n    //alert('remove');\n    lottieLoader.onDestroy(this.reqId);\n    this.pause();\n    this.sendQuery('destroy');\n    //this.removed = true;\n  }\n\n  public renderFrame2(frame: Uint8ClampedArray, frameNo: number) {\n    /* this.setListenerResult('enterFrame', frameNo);\n    return; */\n\n    try {\n      this.imageData.data.set(frame);\n      \n      //this.context.putImageData(new ImageData(frame, this.width, this.height), 0, 0);\n      //let perf = performance.now();\n      this.context.putImageData(this.imageData, 0, 0);\n      //console.log('renderFrame2 perf:', performance.now() - perf);\n    } catch(err) {\n      console.error('RLottiePlayer renderFrame error:', err/* , frame */, this.width, this.height);\n      this.autoplay = false;\n      this.pause();\n      return;\n    }\n    \n    //console.log('set result enterFrame', frameNo);\n    this.dispatchEvent('enterFrame', frameNo);\n  }\n\n  public renderFrame(frame: Uint8ClampedArray, frameNo: number) {\n    //console.log('renderFrame', frameNo, this);\n    if(this.cachingDelta && (frameNo % this.cachingDelta || !frameNo) && !this.frames[frameNo]) {\n      this.frames[frameNo] = new Uint8ClampedArray(frame);//frame;\n    }\n\n    /* if(!this.listenerResults.hasOwnProperty('cached')) {\n      this.setListenerResult('enterFrame', frameNo);\n      if(frameNo === (this.frameCount - 1)) {\n        this.setListenerResult('cached');\n      }\n\n      return;\n    } */\n\n    if(this.frInterval) {\n      const now = Date.now(), delta = now - this.frThen;\n      //console.log(`renderFrame delta${this.reqId}:`, this, delta, this.frInterval);\n\n      if(delta < 0) {\n        if(this.rafId) clearTimeout(this.rafId);\n        return this.rafId = window.setTimeout(() => {\n          this.renderFrame2(frame, frameNo);\n        }, this.frInterval > -delta ? -delta % this.frInterval : this.frInterval);\n        //await new Promise((resolve) => setTimeout(resolve, -delta % this.frInterval));\n      }\n    }\n\n    this.renderFrame2(frame, frameNo);\n  }\n\n  public requestFrame(frameNo: number) {\n    if(this.frames[frameNo]) {\n      this.renderFrame(this.frames[frameNo], frameNo);\n    } else if(isSafari) {\n      this.sendQuery('renderFrame', frameNo);\n    } else {\n      if(!this.clamped.length) { // fix detached\n        this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\n      }\n      \n      this.sendQuery('renderFrame', frameNo, this.clamped);\n    }\n  }\n\n  private mainLoopForwards() {\n    const frame = (this.curFrame + this.skipDelta) >= this.frameCount ? this.curFrame = 0 : this.curFrame += this.skipDelta;\n    //console.log('mainLoopForwards', this.curFrame, this.skipDelta, frame);\n\n    this.requestFrame(frame);\n    if((frame + this.skipDelta) >= this.frameCount) {\n      //this.playedTimes++;\n\n      if(!this.loop) {\n        this.pause(false);\n        return false;\n      }\n    }\n\n    return true;\n  }\n  \n  private mainLoopBackwards() {\n    const frame = (this.curFrame - this.skipDelta) < 0 ? this.curFrame = this.frameCount - 1 : this.curFrame -= this.skipDelta;\n    //console.log('mainLoopBackwards', this.curFrame, this.skipDelta, frame);\n\n    this.requestFrame(frame);\n    if((frame - this.skipDelta) < 0) {\n      //this.playedTimes++;\n\n      if(!this.loop) {\n        this.pause(false);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  public setMainLoop() {\n    //window.cancelAnimationFrame(this.rafId);\n    clearTimeout(this.rafId);\n\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\n    this.frThen = Date.now() - this.frInterval;\n\n    //console.trace('setMainLoop', this.frInterval, this.direction, this, JSON.stringify(this.listenerResults), this.listenerResults);\n\n    const method = (this.direction === 1 ? this.mainLoopForwards : this.mainLoopBackwards).bind(this);\n    this.currentMethod = method;\n    //this.frameListener && this.removeListener('enterFrame', this.frameListener);\n\n    //setTimeout(() => {\n      //this.addListener('enterFrame', this.frameListener);\n    //}, 0);\n\n    if(this.frameListener && this.listenerResults.hasOwnProperty('enterFrame')) {\n      this.frameListener();\n    }\n  \n    //this.mainLoop(method);\n    //this.r(method);\n    //method();\n  }\n\n  public async onLoad(frameCount: number, fps: number) {\n    this.curFrame = this.direction === 1 ? 0 : frameCount - 1;\n    this.frameCount = frameCount;\n    this.fps = fps;\n\n    // * Handle 30fps stickers if 30fps set\n    if(this.fps < 60 && this.skipDelta !== 1) {\n      const diff = 60 / fps;\n      this.skipDelta = this.skipDelta / diff | 0;\n    }\n\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\n    this.frThen = Date.now() - this.frInterval;\n    //this.sendQuery('renderFrame', 0);\n    \n    // Кешировать сразу не получится, рендер стикера (тайгер) занимает 519мс, \n    // если рендерить 75% с получением каждого кадра из воркера, будет 475мс, т.е. при 100% было бы 593мс, потеря на передаче 84мс. \n\n    /* console.time('cache' + this.reqId);\n    for(let i = 0; i < frameCount; ++i) {\n      //if(this.removed) return;\n      \n      if(i % 4) {\n        await new Promise((resolve) => {\n          delete this.listenerResults.enterFrame;\n          this.addListener('enterFrame', resolve, true);\n          this.requestFrame(i);\n        });  \n      }\n    }\n    \n    console.timeEnd('cache' + this.reqId); */\n    //console.log('cached');\n    /* this.el.innerHTML = '';\n    this.el.append(this.canvas);\n    return; */\n\n    this.requestFrame(0);\n    this.dispatchEvent('ready');\n    this.addEventListener('enterFrame', () => {\n      this.dispatchEvent('firstFrame');\n\n      this.el.appendChild(this.canvas);\n\n      //console.log('enterFrame firstFrame');\n \n      //let lastTime = this.frThen;\n      this.frameListener = () => {\n        if(this.paused) {\n          return;\n        }\n\n        const time = Date.now();\n        //console.log(`enterFrame handle${this.reqId}`, time, (time - lastTime), this.frInterval);\n        /* if(Math.round(time - lastTime + this.frInterval * 0.25) < Math.round(this.frInterval)) {\n          return;\n        } */\n\n        //lastTime = time;\n\n        this.frThen = time + this.frInterval;\n        const canContinue = this.currentMethod();\n        if(!canContinue && !this.loop && this.autoplay) {\n          this.autoplay = false;\n        }\n      };\n\n      this.addEventListener('enterFrame', this.frameListener);\n    }, true);\n  }\n}\n\nclass QueryableWorker extends EventListenerBase<any> {\n  constructor(private worker: Worker, private defaultListener: (data: any) => void = () => {}, onError?: (error: any) => void) {\n    super();\n\n    if(onError) {\n      this.worker.onerror = onError;\n    }\n\n    this.worker.onmessage = (event) => {\n      //return;\n      //console.log('worker onmessage', event.data);\n      if(event.data instanceof Object &&\n        event.data.hasOwnProperty('queryMethodListener') &&\n        event.data.hasOwnProperty('queryMethodArguments')) {\n        /* if(event.data.queryMethodListener === 'frame') {\n          return;\n        } */\n\n        this.dispatchEvent(event.data.queryMethodListener, ...event.data.queryMethodArguments);\n      } else {\n        this.defaultListener.call(this, event.data);\n      }\n    };\n  }\n\n  public postMessage(message: any) {\n    this.worker.postMessage(message);\n  }\n\n  public terminate() {\n    this.worker.terminate();\n  }\n\n  public sendQuery(queryMethod: string, ...args: any[]) {\n    if(isSafari) {\n      this.worker.postMessage({\n        'queryMethod': queryMethod,\n        'queryMethodArguments': args\n      });\n    } else {\n      //const transfer: (ArrayBuffer | OffscreenCanvas)[] = [];\n      const transfer: ArrayBuffer[] = [];\n      args.forEach(arg => {\n        if(arg instanceof ArrayBuffer) {\n          transfer.push(arg);\n        }\n  \n        if(arg.buffer && arg.buffer instanceof ArrayBuffer) {\n          transfer.push(arg.buffer);\n        }\n      });\n  \n      //console.log('transfer', transfer);\n      this.worker.postMessage({\n        'queryMethod': queryMethod,\n        'queryMethodArguments': args\n      }, transfer as PostMessageOptions);\n    }\n  }\n}\n\ntype LottieShape = {\n  c: {\n    k: number[]\n  },\n  ty: 'st' | 'fl',\n  it?: LottieShape[]\n};\nclass LottieLoader {\n  public isWebAssemblySupported = typeof(WebAssembly) !== 'undefined';\n  public loadPromise: Promise<void> = !this.isWebAssemblySupported ? Promise.reject() : undefined;\n  public loaded = false;\n\n  // https://github.com/telegramdesktop/tdesktop/blob/97d8ee75d51874fcb74a9bfadc79f835c82be54a/Telegram/SourceFiles/chat_helpers/stickers_emoji_pack.cpp#L46\n  private static COLORREPLACEMENTS = [\n    [\n      [0xf77e41, 0xcb7b55],\n\t\t\t[0xffb139, 0xf6b689],\n\t\t\t[0xffd140, 0xffcda7],\n\t\t\t[0xffdf79, 0xffdfc5],\n    ],\n\n    [\n      [0xf77e41, 0xa45a38],\n\t\t\t[0xffb139, 0xdf986b],\n\t\t\t[0xffd140, 0xedb183],\n\t\t\t[0xffdf79, 0xf4c3a0],\n    ],\n\n    [\n      [0xf77e41, 0x703a17],\n\t\t\t[0xffb139, 0xab673d],\n\t\t\t[0xffd140, 0xc37f4e],\n\t\t\t[0xffdf79, 0xd89667],\n    ],\n\n    [\n      [0xf77e41, 0x4a2409],\n\t\t\t[0xffb139, 0x7d3e0e],\n\t\t\t[0xffd140, 0x965529],\n\t\t\t[0xffdf79, 0xa96337],\n    ],\n\n    [\n\t\t\t[0xf77e41, 0x200f0a],\n\t\t\t[0xffb139, 0x412924],\n\t\t\t[0xffd140, 0x593d37],\n\t\t\t[0xffdf79, 0x63453f],\n    ]\n  ];\n\n  private workersLimit = 4;\n  private players: {[reqId: number]: RLottiePlayer} = {};\n\n  private workers: QueryableWorker[] = [];\n  private curWorkerNum = 0;\n\n  private log = logger('LOTTIE', LogTypes.Error);\n\n  public getAnimation(element: HTMLElement) {\n    for(const i in this.players) {\n      if(this.players[i].el === element) {\n        return this.players[i];\n      }\n    }\n\n    return null;\n  }\n\n  public setLoop(loop: boolean) {\n    for(const i in this.players) {\n      const player = this.players[i];\n      player.loop = loop;\n      player.autoplay = player._autoplay;\n    }\n  }\n\n  public loadLottieWorkers() {\n    if(this.loadPromise) {\n      return this.loadPromise;\n    }\n\n    return this.loadPromise = new Promise((resolve, reject) => {\n      let remain = this.workersLimit;\n      for(let i = 0; i < this.workersLimit; ++i) {\n        const worker = this.workers[i] = new QueryableWorker(new RLottieWorker());\n\n        worker.addEventListener('ready', () => {\n          this.log('worker #' + i + ' ready');\n\n          worker.addEventListener('frame', this.onFrame);\n          worker.addEventListener('loaded', this.onPlayerLoaded);\n          worker.addEventListener('error', this.onPlayerError);\n\n          --remain;\n          if(!remain) {\n            this.log('workers ready');\n            resolve();\n            this.loaded = true;\n          }\n        });\n      }\n    });\n  }\n\n  private applyReplacements(object: {\n    layers: Array<{shapes: LottieShape[]}>\n  }, toneIndex: number) {\n    const replacements = LottieLoader.COLORREPLACEMENTS[Math.max(toneIndex - 1, 0)];\n\n    const applyTo = (smth: LottieShape) => {\n      const k = smth.c.k;\n      const color = convert(k[2]) | (convert(k[1]) << 8) | (convert(k[0]) << 16);\n\n      const foundReplacement = replacements.find(p => p[0] === color);\n      if(foundReplacement) {\n        k[0] = ((foundReplacement[1] >> 16) & 255) / 255;\n        k[1] = ((foundReplacement[1] >> 8) & 255) / 255;\n        k[2] = (foundReplacement[1] & 255) / 255;\n      }\n\n      //console.log('foundReplacement!', foundReplacement, color.toString(16), k);\n    };\n\n    const checkSmth = (smth: LottieShape) => {\n      switch(smth.ty) {\n        case 'st':\n        case 'fl':\n          applyTo(smth);\n          break;\n      }\n\n      if(smth.hasOwnProperty('it')) {\n        iterateIt(smth.it);\n      }\n    };\n\n    const iterateIt = (it: LottieShape['it']) => {\n      for(const smth of it) {\n        checkSmth(smth);\n      }\n    };\n\n    try {\n      for(const layer of object.layers) {\n        if(!layer.shapes) continue;\n  \n        for(const shape of layer.shapes) {\n          if(!shape.it) {\n            checkSmth(shape);\n            continue;\n          }\n\n          iterateIt(shape.it);\n        }\n      }\n    } catch(err) {\n      this.log.warn('cant apply replacements', err, object, toneIndex);\n    }\n  }\n\n  public loadAnimationFromURL(params: Omit<RLottieOptions, 'animationData'>, url: string): Promise<RLottiePlayer> {\n    if(!this.isWebAssemblySupported) {\n      return this.loadPromise as any;\n    }\n    \n    if(!this.loaded) {\n      this.loadLottieWorkers();\n    }\n    \n    return fetch(url)\n    .then(res => res.arrayBuffer())\n    .then(data => apiManager.gzipUncompress<string>(data, true))\n    /* .then(str => {\n      return new Promise<string>((resolve) => setTimeout(() => resolve(str), 2e3));\n    }) */\n    .then(str => {\n      return this.loadAnimationWorker(Object.assign(params, {animationData: str/* JSON.parse(str) */, needUpscale: true}));\n    });\n  }\n\n  public waitForFirstFrame(player: RLottiePlayer): Promise<void> {\n    return Promise.race([\n      /* new Promise<void>((resolve) => {\n        player.addEventListener('firstFrame', () => {\n          setTimeout(() => resolve(), 1500);\n        }, true);\n      }) */\n      new Promise<void>((resolve) => {\n        player.addEventListener('firstFrame', resolve, true);\n      }),\n      pause(2500)\n    ]);\n  }\n\n  public async loadAnimationWorker(params: RLottieOptions, group = '', toneIndex = -1): Promise<RLottiePlayer> {\n    if(!this.isWebAssemblySupported) {\n      return this.loadPromise as any;\n    }\n    //params.autoplay = true;\n\n    if(toneIndex >= 1 && toneIndex <= 5) {\n      /* params.animationData = copy(params.animationData);\n      this.applyReplacements(params.animationData, toneIndex); */\n\n      const newAnimationData = JSON.parse(params.animationData);\n      this.applyReplacements(newAnimationData, toneIndex);\n      params.animationData = JSON.stringify(newAnimationData);\n    }\n\n    if(!this.loaded) {\n      await this.loadLottieWorkers();\n    }\n\n    if(!params.width || !params.height) {\n      params.width = parseInt(params.container.style.width);\n      params.height = parseInt(params.container.style.height);\n    }\n\n    if(!params.width || !params.height) {\n      throw new Error('No size for sticker!');\n    }\n\n    params.group = group;\n\n    const player = this.initPlayer(params.container, params);\n    animationIntersector.addAnimation(player, group);\n\n    return player;\n  }\n\n  private onPlayerLoaded = (reqId: number, frameCount: number, fps: number) => {\n    const rlPlayer = this.players[reqId];\n    if(!rlPlayer) {\n      this.log.warn('onPlayerLoaded on destroyed player:', reqId, frameCount);\n      return;\n    }\n\n    this.log.debug('onPlayerLoaded');\n    rlPlayer.onLoad(frameCount, fps);\n    //rlPlayer.addListener('firstFrame', () => {\n      //animationIntersector.addAnimation(player, group);\n    //}, true);\n  };\n\n  private onFrame = (reqId: number, frameNo: number, frame: Uint8ClampedArray) => {\n    const rlPlayer = this.players[reqId];\n    if(!rlPlayer) {\n      this.log.warn('onFrame on destroyed player:', reqId, frameNo);\n      return;\n    }\n\n    rlPlayer.clamped = frame;\n    rlPlayer.renderFrame(frame, frameNo);\n  };\n\n  private onPlayerError = (reqId: number, error: Error) => {\n    const rlPlayer = this.players[reqId];\n    if(rlPlayer) {\n      // ! will need refactoring later, this is not the best way to remove the animation\n      const animations = animationIntersector.getAnimations(rlPlayer.el);\n      animations.forEach(animation => {\n        animationIntersector.checkAnimation(animation, true, true);\n      });\n    }\n  };\n\n  public onDestroy(reqId: number) {\n    delete this.players[reqId];\n  }\n\n  public destroyWorkers() {\n    this.workers.forEach((worker, idx) => {\n      worker.terminate();\n      this.log('worker #' + idx + ' terminated');\n    });\n\n    this.log('workers destroyed');\n    this.workers.length = 0;\n  }\n\n  private initPlayer(el: HTMLElement, options: RLottieOptions) {\n    const rlPlayer = new RLottiePlayer({\n      el, \n      worker: this.workers[this.curWorkerNum++],\n      options\n    });\n\n    this.players[rlPlayer.reqId] = rlPlayer;\n    if(this.curWorkerNum >= this.workers.length) {\n      this.curWorkerNum = 0;\n    }\n\n    rlPlayer.loadFromData(options.animationData);\n\n    return rlPlayer;\n  }\n}\n\nconst lottieLoader = new LottieLoader();\nMOUNT_CLASS_TO.lottieLoader = lottieLoader;\nexport default lottieLoader;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { DownloadOptions } from \"../mtproto/apiFileManager\";\nimport { bytesFromHex } from \"../../helpers/bytes\";\nimport { CancellablePromise } from \"../../helpers/cancellablePromise\";\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\nimport { safeReplaceArrayInObject, isObject } from \"../../helpers/object\";\nimport { isSafari } from \"../../helpers/userAgent\";\nimport { InputFileLocation, InputMedia, Photo, PhotoSize, PhotosPhotos } from \"../../layer\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport referenceDatabase, { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport { MyDocument } from \"./appDocsManager\";\nimport appDownloadManager, { ThumbCache } from \"./appDownloadManager\";\nimport appUsersManager from \"./appUsersManager\";\nimport blur from \"../../helpers/blur\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport renderImageFromUrl from \"../../helpers/dom/renderImageFromUrl\";\nimport calcImageInBox from \"../../helpers/calcImageInBox\";\nimport { makeMediaSize, MediaSize } from \"../../helpers/mediaSizes\";\n\nexport type MyPhoto = Photo.photo;\n\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\n//let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\n\nexport class AppPhotosManager {\n  private photos: {\n    [id: string]: MyPhoto\n  } = {};\n\n  public windowW = 0;\n  public windowH = 0;\n  \n  private static jpegHeader = bytesFromHex('ffd8ffe000104a46494600010100000100010000ffdb004300281c1e231e19282321232d2b28303c64413c37373c7b585d4964918099968f808c8aa0b4e6c3a0aadaad8a8cc8ffcbdaeef5ffffff9bc1fffffffaffe6fdfff8ffdb0043012b2d2d3c353c76414176f8a58ca5f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ffc00011080000000003012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00');\n  private static jpegTail = bytesFromHex('ffd9');\n  \n  constructor() {\n    // @ts-ignore\n    const w: any = 'visualViewport' in window ? window.visualViewport : window;\n    const set = () => {\n      this.windowW = w.width || w.innerWidth;\n      this.windowH = w.height || w.innerHeight;\n    };\n    w.addEventListener('resize', set);\n    set();\n  }\n  \n  public savePhoto(photo: Photo, context?: ReferenceContext) {\n    if(photo._ === 'photoEmpty') return undefined;\n\n    /* if(photo.id === TEST_FILE_REFERENCE) {\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\n      //photo.file_reference = new Uint8Array(bytes);\n      photo.file_reference = bytes;\n      if(!--TEST_FILE_REFERENCE_TIMES) {\n        TEST_FILE_REFERENCE = '';\n      }\n    } */\n\n    const oldPhoto = this.photos[photo.id];\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\n      referenceDatabase.saveContext(photo.file_reference, context);\n    }\n\n    if(photo.sizes?.length) {\n      const size = photo.sizes[photo.sizes.length - 1];\n      if(size._ === 'photoSizeProgressive') {\n        size.size = size.sizes[size.sizes.length - 1];\n      }\n    }\n\n    if(oldPhoto) {\n      return Object.assign(oldPhoto, photo);\n    }\n\n    return this.photos[photo.id] = photo;\n  }\n  \n  public choosePhotoSize(photo: MyPhoto | MyDocument, boxWidth = 0, boxHeight = 0, useBytes = false) {\n    if(window.devicePixelRatio > 1) {\n      boxWidth *= 2;\n      boxHeight *= 2;\n    }\n    \n    /*\n    s\tbox\t100x100\n    m\tbox\t320x320\n    x\tbox\t800x800\n    y\tbox\t1280x1280\n    w\tbox\t2560x2560\n    a\tcrop\t160x160\n    b\tcrop\t320x320\n    c\tcrop\t640x640\n    d\tcrop\t1280x1280 */\n\n    let bestPhotoSize: PhotoSize = {_: 'photoSizeEmpty', type: ''};\n    const sizes = ((photo as MyPhoto).sizes || (photo as MyDocument).thumbs) as PhotoSize[];\n    if(sizes?.length) {\n      for(let i = 0, length = sizes.length; i < length; ++i) {\n        const photoSize = sizes[i];\n        if(!('w' in photoSize) && !('h' in photoSize)) continue;\n  \n        bestPhotoSize = photoSize;\n  \n        const size = calcImageInBox(photoSize.w, photoSize.h, boxWidth, boxHeight);\n        if(size.width >= boxWidth || size.height >= boxHeight) {\n          break;\n        }\n      }\n\n      if(useBytes && bestPhotoSize._ === 'photoSizeEmpty' && sizes[0]._ === 'photoStrippedSize') {\n        bestPhotoSize = sizes[0];\n      }\n    }\n    \n    return bestPhotoSize;\n  }\n  \n  public getUserPhotos(userId: number, maxId: string = '0', limit: number = 20) {\n    const inputUser = appUsersManager.getUserInput(userId);\n    return apiManager.invokeApiCacheable('photos.getUserPhotos', {\n      user_id: inputUser,\n      offset: 0,\n      limit,\n      max_id: maxId\n    }, {cacheSeconds: 60}).then((photosResult) => {\n      appUsersManager.saveApiUsers(photosResult.users);\n      const photoIds: string[] = photosResult.photos.map((photo, idx) => {\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId});\n        return photo.id;\n      });\n      \n      return {\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photosResult.photos.length,\n        photos: photoIds\n      };\n    });\n  }\n\n  public getPreviewURLFromBytes(bytes: Uint8Array | number[], isSticker = false) {\n    let arr: Uint8Array;\n    if(!isSticker) {\n      arr = new Uint8Array(AppPhotosManager.jpegHeader.concat(Array.from(bytes.slice(3)), AppPhotosManager.jpegTail));\n      arr[164] = bytes[1];\n      arr[166] = bytes[2];\n    } else {\n      arr = bytes instanceof Uint8Array ? bytes : new Uint8Array(bytes);\n    }\n\n    let mimeType: string;\n    if(isSticker) {\n      mimeType = isSafari ? 'image/png' : 'image/webp';\n    } else {\n      mimeType = 'image/jpeg';\n    }\n\n    const blob = new Blob([arr], {type: mimeType});\n    return URL.createObjectURL(blob);\n  }\n\n  /**\n   * https://core.telegram.org/api/files#vector-thumbnails\n   */\n  public getPathFromPhotoPathSize(size: PhotoSize.photoPathSize) {\n    const bytes = size.bytes;\n    const lookup = \"AACAAAAHAAALMAAAQASTAVAAAZaacaaaahaaalmaaaqastava.az0123456789-,\";\n\n    let path = 'M';\n    for(let i = 0, length = bytes.length; i < length; ++i) {\n      const num = bytes[i];\n\n      if(num >= (128 + 64)) {\n        path += lookup[num - 128 - 64];\n      } else {\n        if(num >= 128) {\n          path += ',';\n        } else if(num >= 64) {\n          path += '-'; \n        }\n        path += '' + (num & 63);\n      }\n    }\n    path += 'z';\n\n    return path;\n  }\n\n  public getPreviewURLFromThumb(photo: MyPhoto | MyDocument, thumb: PhotoSize.photoCachedSize | PhotoSize.photoStrippedSize, isSticker = false) {\n    const cacheContext = appDownloadManager.getCacheContext(photo, thumb.type);\n    return cacheContext.url || (cacheContext.url = this.getPreviewURLFromBytes(thumb.bytes, isSticker));\n  }\n  \n  public getImageFromStrippedThumb(photo: MyPhoto | MyDocument, thumb: PhotoSize.photoCachedSize | PhotoSize.photoStrippedSize, useBlur: boolean) {\n    const url = this.getPreviewURLFromThumb(photo, thumb, false);\n\n    const image = new Image();\n    image.classList.add('thumbnail');\n\n    const loadPromise = (useBlur ? blur(url) : Promise.resolve(url)).then(url => {\n      return new Promise<any>((resolve) => {\n        renderImageFromUrl(image, url, resolve);\n      });\n    });\n    \n    return {image, loadPromise};\n  }\n  \n  public setAttachmentSize(photo: MyPhoto | MyDocument, element: HTMLElement | SVGForeignObjectElement, boxWidth: number, boxHeight: number, noZoom = true, message?: any) {\n    const photoSize = this.choosePhotoSize(photo, boxWidth, boxHeight);\n    //console.log('setAttachmentSize', photo, photo.sizes[0].bytes, div);\n    \n    let size: MediaSize;\n    if(photo._ === 'document') {\n      size = makeMediaSize(photo.w || 512, photo.h || 512);\n    } else {\n      size = makeMediaSize('w' in photoSize ? photoSize.w : 100, 'h' in photoSize ? photoSize.h : 100);\n    }\n\n    let boxSize = makeMediaSize(boxWidth, boxHeight);\n\n    boxSize = size = size.aspect(boxSize, noZoom);\n\n    let isFit = true;\n\n    if(photo._ === 'photo' || ['video', 'gif'].includes(photo.type)) {\n      if(boxSize.width < 200 && boxSize.height < 200) { // make at least one side this big\n        boxSize = size = size.aspectCovered(makeMediaSize(200, 200));\n      }\n  \n      if(message && \n        (message.message || \n          message.reply_to_mid || \n          message.media.webpage || \n          (message.replies && message.replies.pFlags.comments && message.replies.channel_id !== 777)\n        )\n      ) { // make sure that bubble block is human-readable\n        if(boxSize.width < 320) {\n          boxSize = makeMediaSize(320, boxSize.height);\n          isFit = false;\n        }\n      }\n  \n      if(isFit && boxSize.width < 120) { // if image is too narrow\n        boxSize = makeMediaSize(120, boxSize.height);\n        isFit = false;\n      }\n    }\n\n    // if(element instanceof SVGForeignObjectElement) {\n    //   element.setAttributeNS(null, 'width', '' + w);\n    //   element.setAttributeNS(null, 'height', '' + h);\n\n    //   //console.log('set dimensions to svg element:', element, w, h);\n    // } else {\n      element.style.width = boxSize.width + 'px';\n      element.style.height = boxSize.height + 'px';\n    // }\n    \n    return {photoSize, size, isFit};\n  }\n\n  public getStrippedThumbIfNeeded(photo: MyPhoto | MyDocument, cacheContext: ThumbCache, useBlur: boolean, ignoreCache = false): ReturnType<AppPhotosManager['getImageFromStrippedThumb']> {\n    if(!cacheContext.downloaded || (['video', 'gif'] as MyDocument['type'][]).includes((photo as MyDocument).type) || ignoreCache) {\n      if(photo._ === 'document' && cacheContext.downloaded && !ignoreCache) {\n        return null;\n      }\n\n      const sizes = (photo as MyPhoto).sizes || (photo as MyDocument).thumbs;\n      const thumb = sizes?.length ? sizes.find(size => size._ === 'photoStrippedSize') : null;\n      if(thumb && ('bytes' in thumb)) {\n        return this.getImageFromStrippedThumb(photo, thumb as any, useBlur);\n      }\n    }\n\n    return null;\n  }\n  \n  public getPhotoDownloadOptions(photo: MyPhoto | MyDocument, photoSize: PhotoSize, queueId?: number, onlyCache?: boolean): DownloadOptions {\n    const isDocument = photo._ === 'document';\n\n    if(!photoSize || photoSize._ === 'photoSizeEmpty') {\n      //console.error('no photoSize by photo:', photo);\n      throw new Error('photoSizeEmpty!');\n    }\n    \n    // maybe it's a thumb\n    const isPhoto = (photoSize._ === 'photoSize' || photoSize._ === 'photoSizeProgressive') && photo.access_hash && photo.file_reference;\n    const location: InputFileLocation.inputPhotoFileLocation | InputFileLocation.inputDocumentFileLocation = {\n      _: isDocument ? 'inputDocumentFileLocation' : 'inputPhotoFileLocation',\n      id: photo.id,\n      access_hash: photo.access_hash,\n      file_reference: photo.file_reference,\n      thumb_size: photoSize.type\n    };\n\n    return {\n      dcId: photo.dc_id, \n      location, \n      size: isPhoto ? (photoSize as PhotoSize.photoSize).size : undefined, \n      queueId, \n      onlyCache\n    };\n  }\n\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\n\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\n  } */\n\n  /* public isDownloaded(media: any) {\n    const isPhoto = media._ === 'photo';\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\n    let isDownloaded: boolean;\n    if(photo) {\n      isDownloaded = photo.downloaded > 0;\n    } else {\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\n      isDownloaded = cachedThumb?.downloaded > 0;\n    }\n\n    return isDownloaded;\n  } */\n  \n  public preloadPhoto(photoId: MyPhoto | MyDocument | string, photoSize?: PhotoSize, queueId?: number, onlyCache?: boolean): CancellablePromise<Blob> {\n    const photo = this.getPhoto(photoId);\n\n    // @ts-ignore\n    if(!photo || photo._ === 'photoEmpty') {\n      throw new Error('preloadPhoto photoEmpty!');\n    }\n\n    if(!photoSize) {\n      const fullWidth = this.windowW;\n      const fullHeight = this.windowH;\n      \n      photoSize = this.choosePhotoSize(photo, fullWidth, fullHeight);\n    }\n\n    const cacheContext = appDownloadManager.getCacheContext(photo, photoSize.type);\n    if(cacheContext.downloaded >= ('size' in photoSize ? photoSize.size : 0) && cacheContext.url) {\n      return Promise.resolve() as any;\n    }\n    \n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize, queueId, onlyCache);\n    const fileName = getFileNameByLocation(downloadOptions.location);\n\n    let download = appDownloadManager.getDownload(fileName);\n    if(download) {\n      return download;\n    }\n\n    download = appDownloadManager.download(downloadOptions);\n    download.then(blob => {\n      if(!cacheContext.downloaded || cacheContext.downloaded < blob.size) {\n        const url = URL.createObjectURL(blob);\n        cacheContext.downloaded = blob.size;\n        cacheContext.url = url;\n\n        //console.log('wrote photo:', photo, photoSize, cacheContext, blob);\n      }\n\n      return blob;\n    }).catch(() => {});\n\n    return download;\n  }\n  \n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\n  }\n\n  public getInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\n    return {\n      _: 'inputMediaPhoto',\n      id: {\n        _: 'inputPhoto',\n        id: photo.id,\n        access_hash: photo.access_hash,\n        file_reference: photo.file_reference\n      },\n      ttl_seconds: 0\n    };\n  }\n\n  public savePhotoFile(photo: MyPhoto | MyDocument, queueId?: number) {\n    const fullPhotoSize = this.choosePhotoSize(photo, 0xFFFF, 0xFFFF);\n    if(!(fullPhotoSize._ === 'photoSize' || fullPhotoSize._ === 'photoSizeProgressive')) {\n      return;\n    }\n\n    const downloadOptions = this.getPhotoDownloadOptions(photo, fullPhotoSize, queueId);\n    downloadOptions.fileName = 'photo' + photo.id + '.jpg';\n    appDownloadManager.downloadToDisc(downloadOptions, downloadOptions.fileName);\n  }\n}\n\nconst appPhotosManager = new AppPhotosManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appPhotosManager = appPhotosManager);\nexport default appPhotosManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport { isMobileSafari } from \"../helpers/userAgent\";\nimport { logger } from \"../lib/logger\";\nimport { doubleRaf } from \"../helpers/schedulers\";\nimport blurActiveElement from \"../helpers/dom/blurActiveElement\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\n\nexport type NavigationItem = {\n  type: 'left' | 'right' | 'im' | 'chat' | 'popup' | 'media' | 'menu' | \n    'esg' | 'multiselect' | 'input-helper' | 'autocomplete-helper' | 'markup' | 'global-search',\n  onPop: (canAnimate: boolean) => boolean | void,\n  onEscape?: () => boolean,\n  noHistory?: boolean,\n  noBlurOnPop?: boolean,\n};\n\nexport class AppNavigationController {\n  private navigations: Array<NavigationItem> = [];\n  private id = Date.now();\n  private manual = false;\n  private log = logger('NC');\n  private debug = true;\n  private currentHash = window.location.hash;\n  public onHashChange: () => void;\n\n  constructor() {\n    let isPossibleSwipe = false;\n    window.addEventListener('popstate', (e) => {\n      this.debug && this.log('popstate', e, isPossibleSwipe);\n\n      if(window.location.hash !== this.currentHash) {\n        this.onHashChange && this.onHashChange();\n        this.replaceState();\n        return;\n      }\n      this.currentHash = window.location.hash;\n\n      const id: number = e.state;\n      if(id !== this.id/*  && !this.navigations.length */) {\n        this.pushState();\n        return;\n      }\n\n      const item = this.navigations.pop();\n      if(!item) {\n        this.pushState();\n        return;\n      }\n\n      this.manual = !isPossibleSwipe;\n      this.handleItem(item);\n      //this.pushState(); // * prevent adding forward arrow\n    });\n\n    window.addEventListener('keydown', (e) => {\n      const item = this.navigations[this.navigations.length - 1];\n      if(!item) return;\n      if(e.key === 'Escape' && (item.onEscape ? item.onEscape() : true)) {\n        cancelEvent(e);\n        this.back(item.type);\n      }\n    }, {capture: true, passive: false});\n\n    if(isMobileSafari) {\n      const options = {passive: true};\n      window.addEventListener('touchstart', (e) => {\n        if(e.touches.length > 1) return;\n        this.debug && this.log('touchstart');\n\n        const detach = () => {\n          window.removeEventListener('touchend', onTouchEnd);\n          window.removeEventListener('touchmove', onTouchMove);\n        };\n\n        let moved = false;\n        const onTouchMove = (e: TouchEvent) => {\n          this.debug && this.log('touchmove');\n          if(e.touches.length > 1) {\n            detach();\n            return;\n          }\n\n          moved = true;\n        };\n\n        const onTouchEnd = (e: TouchEvent) => {\n          this.debug && this.log('touchend');\n          if(e.touches.length > 1 || !moved) {\n            detach();\n            return;\n          }\n\n          isPossibleSwipe = true;\n          doubleRaf().then(() => {\n            isPossibleSwipe = false;\n          });\n\n          detach();\n        };\n\n        window.addEventListener('touchend', onTouchEnd, options);\n        window.addEventListener('touchmove', onTouchMove, options);\n      }, options);\n    }\n\n    history.scrollRestoration = 'manual';\n\n    this.pushState(); // * push init state\n  }\n\n  private handleItem(item: NavigationItem) {\n    const good = item.onPop(!this.manual ? false : undefined);\n    this.debug && this.log('popstate, navigation:', item, this.navigations);\n    if(good === false) {\n      this.pushItem(item);\n    } else if(!item.noBlurOnPop) {\n      blurActiveElement(); // no better place for it\n    }\n\n    this.manual = false;\n  }\n\n  public findItemByType(type: NavigationItem['type']) {\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\n      const item = this.navigations[i];\n      if(item.type === type) {\n        return {item, index: i};\n      }\n    }\n  }\n\n  public back(type?: NavigationItem['type']) {\n    if(type) {\n      const ret = this.findItemByType(type);\n      if(ret) {\n        this.manual = true;\n        // ! commented because 'popstate' event will be fired with delay\n        //if(ret.index !== (this.navigations.length - 1)) {\n          this.navigations.splice(ret.index, 1);\n          this.handleItem(ret.item);\n          return;\n        //}\n      }\n    }\n\n    history.back();\n  }\n\n  public pushItem(item: NavigationItem) {\n    this.navigations.push(item);\n    this.debug && this.log('pushstate', item, this.navigations);\n\n    if(!item.noHistory) {\n      this.pushState();\n    }\n  }\n\n  private pushState() {\n    this.manual = false;\n    history.pushState(this.id, '');\n  }\n\n  public replaceState() {\n    history.replaceState(this.id, '', location.origin + location.pathname);\n  }\n\n  public removeItem(item: NavigationItem) {\n    this.navigations.findAndSplice(i => i === item);\n  }\n\n  public removeByType(type: NavigationItem['type'], single = false) {\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\n      const item = this.navigations[i];\n      if(item.type === type) {\n        this.navigations.splice(i, 1);\n\n        if(single) {\n          break;\n        }\n      }\n    }\n  }\n}\n\nconst appNavigationController = new AppNavigationController();\nMOUNT_CLASS_TO.appNavigationController = appNavigationController;\nexport default appNavigationController;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { DownloadOptions } from \"../mtproto/apiFileManager\";\nimport type { ApiError } from \"../mtproto/apiManager\";\nimport type { MyDocument } from \"./appDocsManager\";\nimport type { MyPhoto } from \"./appPhotosManager\";\nimport rootScope from \"../rootScope\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport { deferredPromise, CancellablePromise } from \"../../helpers/cancellablePromise\";\nimport { InputFile } from \"../../layer\";\nimport referenceDatabase, {ReferenceBytes} from \"../mtproto/referenceDatabase\";\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\nimport CacheStorageController from \"../cacheStorage\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\n\nexport type ResponseMethodBlob = 'blob';\nexport type ResponseMethodJson = 'json';\nexport type ResponseMethod = ResponseMethodBlob | ResponseMethodJson;\n\n/* export type DownloadBlob = {promise: Promise<Blob>, controller: AbortController};\nexport type DownloadJson = {promise: Promise<any>, controller: AbortController}; */\nexport type DownloadBlob = CancellablePromise<Blob>;\nexport type DownloadJson = CancellablePromise<any>;\n//export type Download = DownloadBlob/*  | DownloadJson */;\nexport type Download = DownloadBlob/*  | DownloadJson */;\n\nexport type Progress = {done: number, fileName: string, total: number, offset: number};\nexport type ProgressCallback = (details: Progress) => void;\n\nexport type ThumbCache = {\n  downloaded: number, \n  url: string\n};\n\nexport type ThumbsCache = {\n  [id: string]: {\n    [size: string]: ThumbCache\n  }\n};\n\nexport class AppDownloadManager {\n  public cacheStorage = new CacheStorageController('cachedFiles');\n  private downloads: {[fileName: string]: Download} = {};\n  private progress: {[fileName: string]: Progress} = {};\n  private progressCallbacks: {[fileName: string]: Array<ProgressCallback>} = {};\n\n  private uploadId = 0;\n\n  private thumbsCache: {\n    photo: ThumbsCache,\n    document: ThumbsCache\n  } = {\n    photo: {},\n    document: {}\n  };\n\n  constructor() {\n    rootScope.addEventListener('download_progress', (e) => {\n      const details = e as {done: number, fileName: string, total: number, offset: number};\n      this.progress[details.fileName] = details;\n\n      const callbacks = this.progressCallbacks[details.fileName];\n      if(callbacks) {\n        callbacks.forEach(callback => callback(details));\n      }\n\n      const download = this.downloads[details.fileName];\n      if(download) {\n        download.notifyAll(details);\n      }\n    });\n  }\n\n  private getNewDeferred(fileName: string) {\n    const deferred = deferredPromise<Blob>();\n\n    deferred.cancel = () => {\n      //try {\n        const error = new Error('Download canceled');\n        error.name = 'AbortError';\n        \n        apiManager.cancelDownload(fileName);\n        \n        deferred.reject(error);\n        deferred.cancel = () => {};\n      /* } catch(err) {\n\n      } */\n    };\n\n    deferred.finally(() => {\n      delete this.progress[fileName];\n      delete this.progressCallbacks[fileName];\n    });\n\n    deferred.catch(() => {\n      this.clearDownload(fileName);\n    });\n\n    return this.downloads[fileName] = deferred;\n  }\n\n  private clearDownload(fileName: string) {\n    delete this.downloads[fileName];\n  }\n\n  public fakeDownload(fileName: string, value: Blob | string) {\n    const deferred = this.getNewDeferred(fileName);\n    if(typeof(value) === 'string') {\n      fetch(value)\n      .then(response => response.blob())\n      .then(blob => deferred.resolve(blob));\n    } else {\n      deferred.resolve(value);\n    }\n\n    return deferred;\n  }\n\n  public download(options: DownloadOptions): DownloadBlob {\n    const fileName = getFileNameByLocation(options.location, {fileName: options.fileName});\n    if(this.downloads.hasOwnProperty(fileName)) return this.downloads[fileName];\n\n    const deferred = this.getNewDeferred(fileName);\n\n    const onError = (err: ApiError) => {\n      switch(err.type) {\n        case 'FILE_REFERENCE_EXPIRED': {\n          // @ts-ignore\n          const bytes: ReferenceBytes = options?.location?.file_reference;\n          if(bytes) {\n            referenceDatabase.refreshReference(bytes).then(tryDownload);\n            /* referenceDatabase.refreshReference(bytes).then(() => {\n              console.log('FILE_REFERENCE_EXPIRED: refreshed reference', bytes);\n            }); */\n            break;\n          } else {\n            console.warn('FILE_REFERENCE_EXPIRED: no context for bytes:', bytes);\n          }\n        }\n\n        default:\n          deferred.reject(err);\n          break;\n      }\n    };\n\n    const tryDownload = (): Promise<unknown> => {\n      //return Promise.resolve();\n\n      if(!apiManager.worker || options.onlyCache) {\n        const promise = this.cacheStorage.getFile(fileName).then((blob) => {\n          if(blob.size < options.size) throw 'wrong size';\n          else deferred.resolve(blob);\n        });\n        \n        if(options.onlyCache) return promise.catch(onError);\n        return promise.catch(() => {\n          return apiManager.downloadFile(options).then(deferred.resolve, onError);\n        });\n      } else {\n        /* return apiManager.downloadFile(options).then(res => {\n          setTimeout(() => deferred.resolve(res), 5e3);\n        }, onError); */\n\n        return apiManager.downloadFile(options).then(deferred.resolve, onError);\n      }\n    };\n\n    tryDownload();\n\n    //console.log('Will download file:', fileName, url);\n    return deferred;\n  }\n\n  public upload(file: File | Blob, fileName?: string) {\n    if(!fileName) {\n      const mimeType = file?.type;\n      if(mimeType) { // the same like apiFileName in appMessagesManager for upload!\n        const ext = this.uploadId++ + '.' + mimeType.split('/')[1];\n  \n        if(['image/jpeg', 'image/png', 'image/bmp'].indexOf(mimeType) >= 0) {\n          fileName = 'photo' + ext;\n        } else if(mimeType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(mimeType) >= 0) {\n          fileName = 'audio' + ext;\n        } else if(mimeType.indexOf('video/') === 0) {\n          fileName = 'video' + ext;\n        } else {\n          fileName = 'document' + ext;\n        }\n        \n      } else {\n        fileName = 'upload-' + this.uploadId++;\n      }\n    }\n\n    const deferred = this.getNewDeferred(fileName);\n    apiManager.uploadFile({file, fileName}).then(deferred.resolve, deferred.reject);\n\n    deferred.finally(() => {\n      this.clearDownload(fileName);\n    });\n\n    return deferred as any as CancellablePromise<InputFile>;\n  }\n\n  public getDownload(fileName: string) {\n    return this.downloads[fileName];\n  }\n\n  public addProgressCallback(fileName: string, callback: ProgressCallback) {\n    const progress = this.progress[fileName];\n    (this.progressCallbacks[fileName] ?? (this.progressCallbacks[fileName] = [])).push(callback);\n\n    if(progress) {\n      callback(progress);\n    }\n  }\n\n  public createDownloadAnchor(url: string, fileName: string, onRemove?: () => void) {\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fileName;\n    a.target = '_blank';\n    \n    a.style.position = 'absolute';\n    a.style.top = '1px';\n    a.style.left = '1px';\n    \n    document.body.append(a);\n  \n    try {\n      var clickEvent = document.createEvent('MouseEvents');\n      clickEvent.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n      a.dispatchEvent(clickEvent);\n    } catch (e) {\n      console.error('Download click error', e);\n      try {\n        a.click();\n      } catch (e) {\n        window.open(url as string, '_blank');\n      }\n    }\n    \n    setTimeout(() => {\n      a.remove();\n      onRemove && onRemove();\n    }, 100);\n  }\n\n  /* public downloadToDisc(fileName: string, url: string) {\n    this.createDownloadAnchor(url);\n  \n    return this.download(fileName, url);\n  } */\n\n  public downloadToDisc(options: DownloadOptions, discFileName: string) {\n    const download = this.download(options);\n    download/* .promise */.then(blob => {\n      const objectURL = URL.createObjectURL(blob);\n      this.createDownloadAnchor(objectURL, discFileName, () => {\n        URL.revokeObjectURL(objectURL);\n      });\n    });\n  \n    return download;\n  }\n\n  public getCacheContext(media: MyPhoto | MyDocument, thumbSize: string = 'full'): ThumbCache {\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\n      thumbSize = 'full';\n    } */\n\n    const cache = this.thumbsCache[media._][media.id] ?? (this.thumbsCache[media._][media.id] = {});\n    return cache[thumbSize] ?? (cache[thumbSize] = {downloaded: 0, url: ''});\n  }\n}\n\nconst appDownloadManager = new AppDownloadManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appDownloadManager = appDownloadManager);\nexport default appDownloadManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// * Jolly Cobra's useHeavyAnimationCheck.ts, patched\n\nimport { AnyToVoidFunction } from '../types';\nimport ListenerSetter from '../helpers/listenerSetter';\nimport { CancellablePromise, deferredPromise } from '../helpers/cancellablePromise';\nimport { pause } from '../helpers/schedulers';\nimport rootScope from '../lib/rootScope';\nimport DEBUG from '../config/debug';\n\nconst ANIMATION_START_EVENT = 'event-heavy-animation-start';\nconst ANIMATION_END_EVENT = 'event-heavy-animation-end';\n\nlet isAnimating = false;\nlet heavyAnimationPromise: CancellablePromise<void> = deferredPromise<void>();\nlet promisesInQueue = 0;\n\nheavyAnimationPromise.resolve();\n\nconst log = console.log.bind(console.log, '[HEAVY-ANIMATION]:');\n\nexport function dispatchHeavyAnimationEvent(promise: Promise<any>, timeout?: number) {\n  if(!isAnimating) {\n    heavyAnimationPromise = deferredPromise<void>();\n    rootScope.dispatchEvent(ANIMATION_START_EVENT);\n    isAnimating = true;\n    DEBUG && log('start');\n  }\n  \n  ++promisesInQueue;\n  DEBUG && log('attach promise, length:', promisesInQueue, timeout);\n\n  const promises = [\n    timeout !== undefined ? pause(timeout) : undefined,\n    promise.finally(() => {})\n  ].filter(Boolean);\n\n  const perf = performance.now();\n  const _heavyAnimationPromise = heavyAnimationPromise;\n  Promise.race(promises).then(() => {\n    if(heavyAnimationPromise !== _heavyAnimationPromise || heavyAnimationPromise.isFulfilled) { // interrupted\n      return;\n    }\n\n    --promisesInQueue;\n    DEBUG && log('promise end, length:', promisesInQueue, performance.now() - perf);\n    if(promisesInQueue <= 0) {\n      onHeavyAnimationEnd();\n    }\n  });\n\n  return heavyAnimationPromise;\n}\n\nfunction onHeavyAnimationEnd() {\n  if(heavyAnimationPromise.isFulfilled) {\n    return;\n  }\n\n  isAnimating = false;\n  promisesInQueue = 0;\n  rootScope.dispatchEvent(ANIMATION_END_EVENT);\n  heavyAnimationPromise.resolve();\n\n  DEBUG && log('end');\n}\n\nexport function interruptHeavyAnimation() {\n  onHeavyAnimationEnd();\n}\n\nexport function getHeavyAnimationPromise() {\n  return heavyAnimationPromise;\n}\n\nexport default function(\n  handleAnimationStart: AnyToVoidFunction,\n  handleAnimationEnd: AnyToVoidFunction,\n  listenerSetter?: ListenerSetter\n) {\n  //useEffect(() => {\n    if(isAnimating) {\n      handleAnimationStart();\n    }\n\n    const add = listenerSetter ? listenerSetter.add.bind(listenerSetter, rootScope) : rootScope.addEventListener.bind(rootScope);\n    const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, rootScope) : rootScope.removeEventListener.bind(rootScope);\n    add(ANIMATION_START_EVENT, handleAnimationStart);\n    add(ANIMATION_END_EVENT, handleAnimationEnd);\n\n    return () => {\n      remove(ANIMATION_END_EVENT, handleAnimationEnd);\n      remove(ANIMATION_START_EVENT, handleAnimationStart);\n    };\n  //}, [handleAnimationEnd, handleAnimationStart]);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n/* export function isInDOM(element: Element, parentNode?: HTMLElement): boolean {\n  if(!element) {\n    return false;\n  }\n\n  parentNode = parentNode || document.body;\n  if(element === parentNode) {\n    return true;\n  }\n  return isInDOM(element.parentNode as HTMLElement, parentNode);\n} */\nexport default function isInDOM(element: Element): boolean {\n  return element?.isConnected;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport appPeersManager from \"../lib/appManagers/appPeersManager\";\nimport rootScope from \"../lib/rootScope\";\nimport { i18n } from \"../lib/langPack\";\nimport replaceContent from \"../helpers/dom/replaceContent\";\nimport appUsersManager from \"../lib/appManagers/appUsersManager\";\n\nexport type PeerTitleOptions = {\n  peerId: number,\n  plainText?: boolean,\n  onlyFirstName?: boolean,\n  dialog?: boolean\n};\n\nconst weakMap: WeakMap<HTMLElement, PeerTitle> = new WeakMap();\n\nMOUNT_CLASS_TO.peerTitleWeakMap = weakMap;\n\nrootScope.addEventListener('peer_title_edit', (peerId) => {\n  const elements = Array.from(document.querySelectorAll(`.peer-title[data-peer-id=\"${peerId}\"]`)) as HTMLElement[];\n  elements.forEach(element => {\n    const peerTitle = weakMap.get(element);\n    //console.log('in the summer silence i was doing nothing', peerTitle, peerId);\n\n    if(peerTitle) {\n      peerTitle.update();\n    }\n  });\n});\n\nexport default class PeerTitle {\n  public element: HTMLElement;\n  public peerId: number;\n  public plainText = false;\n  public onlyFirstName = false;\n  public dialog = false;\n\n  constructor(options: PeerTitleOptions) {\n    this.element = document.createElement('span');\n    this.element.classList.add('peer-title');\n    this.element.setAttribute('dir', 'auto');\n    \n    this.update(options);\n    weakMap.set(this.element, this);\n  }\n\n  public update(options?: PeerTitleOptions) {\n    if(options) {\n      for(let i in options) {\n        // @ts-ignore\n        this.element.dataset[i] = options[i] ? '' + (typeof(options[i]) === 'boolean' ? +options[i] : options[i]) : '0';\n        // @ts-ignore\n        this[i] = options[i];\n      }\n    }\n\n    if(this.peerId !== rootScope.myId || !this.dialog) {\n      if(this.peerId > 0 && appUsersManager.getUser(this.peerId).pFlags.deleted) {\n        replaceContent(this.element, i18n(this.onlyFirstName ? 'Deleted' : 'HiddenName'));\n      } else {\n        this.element.innerHTML = appPeersManager.getPeerTitle(this.peerId, this.plainText, this.onlyFirstName);\n      }\n    } else {\n      replaceContent(this.element, i18n(this.onlyFirstName ? 'Saved' : 'SavedMessages'));\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// * Jolly Cobra's fastSmoothScroll slightly patched\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { fastRaf } from './schedulers';\nimport { animateSingle, cancelAnimationByKey } from './animation';\nimport rootScope from '../lib/rootScope';\nimport isInDOM from './dom/isInDOM';\n\nconst MAX_DISTANCE = 1500;\nconst MIN_JS_DURATION = 250;\nconst MAX_JS_DURATION = 600;\n\nexport enum FocusDirection {\n  Up,\n  Down,\n  Static,\n};\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition,\n  margin = 0,\n  maxDistance = MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  axis: 'x' | 'y' = 'y'\n) {\n  //return;\n\n  if(!rootScope.settings.animationsEnabled) {\n    forceDirection = FocusDirection.Static;\n  }\n\n  if(forceDirection === FocusDirection.Static) {\n    forceDuration = 0;\n    return scrollWithJs(container, element, position, margin, forceDuration, axis);\n    /* return Promise.resolve();\n\n    element.scrollIntoView({ block: position });\n\n    cancelAnimationByKey(container);\n    return Promise.resolve(); */\n  }\n\n  if(axis === 'y' && element !== container && isInDOM(element) && container.getBoundingClientRect) {\n    const elementRect = element.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n  \n    const offsetTop = elementRect.top - containerRect.top;\n    if(forceDirection === undefined) {\n      if(offsetTop < -maxDistance) {\n        container.scrollTop += (offsetTop + maxDistance);\n      } else if(offsetTop > maxDistance) {\n        container.scrollTop += (offsetTop - maxDistance);\n      }\n    } else if(forceDirection === FocusDirection.Up) { // * not tested yet\n      container.scrollTop = offsetTop + container.scrollTop + maxDistance;\n    } else if(forceDirection === FocusDirection.Down) { // * not tested yet\n      container.scrollTop = Math.max(0, offsetTop + container.scrollTop - maxDistance);\n    }\n    /* const { offsetTop } = element;\n\n    if(forceDirection === undefined) {\n      const offset = offsetTop - container.scrollTop;\n\n      if(offset < -maxDistance) {\n        container.scrollTop += (offset + maxDistance);\n      } else if(offset > maxDistance) {\n        container.scrollTop += (offset - maxDistance);\n      }\n    } else if(forceDirection === FocusDirection.Up) {\n      container.scrollTop = offsetTop + maxDistance;\n    } else if(forceDirection === FocusDirection.Down) {\n      container.scrollTop = Math.max(0, offsetTop - maxDistance);\n    } */\n  }\n\n  const promise = new Promise((resolve) => {\n    fastRaf(() => {\n      scrollWithJs(container, element, position, margin, forceDuration, axis)\n      .then(resolve);\n    });\n  });\n\n  return axis === 'y' ? dispatchHeavyAnimationEvent(promise) : promise;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement, element: HTMLElement, position: ScrollLogicalPosition, margin = 0, forceDuration?: number, axis: 'x' | 'y' = 'y'\n) {\n  if(!isInDOM(element)) {\n    cancelAnimationByKey(container);\n    return Promise.resolve();\n  }\n  \n  const rectStartKey = axis === 'y' ? 'top' : 'left';\n  const rectEndKey = axis === 'y' ? 'bottom' : 'right';\n  const sizeKey = axis === 'y' ? 'height' : 'width';\n  const scrollSizeKey = axis === 'y' ? 'scrollHeight' : 'scrollWidth';\n  const scrollPositionKey = axis === 'y' ? 'scrollTop' : 'scrollLeft';\n\n  //const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const elementRect = element.getBoundingClientRect();\n  const containerRect = container.getBoundingClientRect ? container.getBoundingClientRect() : document.body.getBoundingClientRect();\n\n  //const transformable = container.firstElementChild as HTMLElement;\n\n  const elementPosition = elementRect[rectStartKey] - containerRect[rectStartKey];\n  const elementSize = element[scrollSizeKey]; // margin is exclusive in DOMRect\n\n  const containerSize = containerRect[sizeKey];\n\n  const scrollPosition = container[scrollPositionKey];\n  const scrollSize = container[scrollSizeKey];\n  /* const elementPosition = element.offsetTop;\n  const elementSize = element.offsetHeight;\n\n  const scrollPosition = container[scrollPositionKey];\n  const scrollSize = container[scrollSizeKey];\n  const containerSize = container.offsetHeight; */\n\n  let path!: number;\n\n  switch(position) {\n    case 'start':\n      path = elementPosition - margin;\n      break;\n    case 'end':\n      path = elementRect[rectEndKey] + (elementSize - elementRect[sizeKey]) - containerRect[rectEndKey];\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n      path = elementSize < containerSize\n        ? (elementPosition + elementSize / 2) - (containerSize / 2)\n        : elementPosition - margin;\n      break;\n  }\n  /* switch (position) {\n    case 'start':\n      path = (elementPosition - margin) - scrollPosition;\n      break;\n    case 'end':\n      path = (elementPosition + elementSize + margin) - (scrollPosition + containerSize);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n      path = elementSize < containerSize\n        ? (elementPosition + elementSize / 2) - (scrollPosition + containerSize / 2)\n        : (elementPosition - margin) - scrollPosition;\n      break;\n  } */\n\n  // console.log('scrollWithJs: will scroll path:', path, element);\n\n  /* let existsTransform = 0;\n  const currentTransform = transformable.style.transform;\n  if(currentTransform) {\n    existsTransform = parseInt(currentTransform.match(/\\((.+?), (.+?), .+\\)/)[2]);\n    //path += existsTransform;\n  } */\n\n  if(path < 0) {\n    const remainingPath = -scrollPosition;\n    path = Math.max(path, remainingPath);\n  } else if(path > 0) {\n    const remainingPath = scrollSize - (scrollPosition + containerSize);\n    path = Math.min(path, remainingPath);\n  }\n\n  const target = container[scrollPositionKey] + path;\n  const duration = forceDuration ?? (\n    MIN_JS_DURATION + (Math.abs(path) / MAX_DISTANCE) * (MAX_JS_DURATION - MIN_JS_DURATION)\n  );\n  const startAt = Date.now();\n\n  /* transformable.classList.add('no-transition');\n\n  const tickTransform = () => {\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\n    const currentPath = path * transition(t);\n\n    transformable.style.transform = `translate3d(0, ${-currentPath}px, 0)`;\n    container.dataset.translate = '' + -currentPath;\n\n    const willContinue = t < 1;\n    if(!willContinue) {\n      fastRaf(() => {\n        delete container.dataset.transform;\n        container.dataset.transform = '';\n        transformable.style.transform = '';\n        void transformable.offsetLeft; // reflow\n        transformable.classList.remove('no-transition');\n        void transformable.offsetLeft; // reflow\n        container[scrollPositionKey] = Math.round(target);\n      });\n    }\n\n    return willContinue;\n  };\n  \n  return animateSingle(tickTransform, container); */\n\n  /* return new Promise((resolve) => {\n    fastRaf(() => {\n      transformable.style.transform = '';\n      transformable.style.transition = '';\n\n      setTimeout(resolve, duration);\n    });\n  });\n\n  const transformableHeight = transformable.scrollHeight;\n  //transformable.style.minHeight = `${transformableHeight}px`;\n  */\n\n  const tick = () => {\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\n\n    const currentPath = path * (1 - transition(t));\n    container[scrollPositionKey] = Math.round(target - currentPath);\n    \n    return t < 1;\n  };\n\n  if(!duration || !path) {\n    cancelAnimationByKey(container);\n    tick();\n    return Promise.resolve();\n  }\n\n  /* return new Promise((resolve) => {\n    setTimeout(resolve, duration);\n  }).then(() => {\n    transformable.classList.add('no-transition');\n    void transformable.offsetLeft; // reflow\n    transformable.style.transform = '';\n    transformable.style.transition = '';\n    void transformable.offsetLeft; // reflow\n    transformable.classList.remove('no-transition');\n    void transformable.offsetLeft; // reflow\n    fastRaf(() => {\n      \n      container[scrollPositionKey] = Math.round(target);\n      //transformable.style.minHeight = ``;\n    });\n    \n  }); */\n\n  return animateSingle(tick, container);\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { RLottiePlayer } from \"../lib/lottieLoader\";\nimport rootScope from \"../lib/rootScope\";\nimport { isSafari } from \"../helpers/userAgent\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport isInDOM from \"../helpers/dom/isInDOM\";\n\nexport interface AnimationItem {\n  el: HTMLElement,\n  group: string,\n  animation: RLottiePlayer | HTMLVideoElement\n};\n\nexport class AnimationIntersector {\n  public observer: IntersectionObserver;\n  private visible: Set<AnimationItem> = new Set();\n\n  private byGroups: {[group: string]: AnimationItem[]} = {};\n  private lockedGroups: {[group: string]: true} = {};\n  private onlyOnePlayableGroup: string = '';\n  \n  private intersectionLockedGroups: {[group: string]: true} = {};\n  private videosLocked = false;\n\n  constructor() {\n    this.observer = new IntersectionObserver((entries) => {\n      if(rootScope.idle.isIDLE) return;\n\n      for(const entry of entries) {\n        const target = entry.target;\n\n        for(const group in this.byGroups) {\n          if(this.intersectionLockedGroups[group]) {\n            continue;\n          }\n\n          const player = this.byGroups[group].find(p => p.el === target);\n          if(player) {\n            if(entry.isIntersecting) {\n              this.visible.add(player);\n              this.checkAnimation(player, false);\n            } else {\n              this.visible.delete(player);\n              this.checkAnimation(player, true);\n\n              if(player.animation instanceof RLottiePlayer/*  && player.animation.cachingDelta === 2 */) {\n                //console.warn('will clear cache', player);\n                player.animation.clearCache();\n              }\n            }\n\n            break;\n          }\n        }\n      }\n    });\n\n    rootScope.addEventListener('audio_play', ({doc}) => {\n      if(doc.type === 'round') {\n        this.videosLocked = true;\n        this.checkAnimations();\n      }\n    });\n\n    rootScope.addEventListener('audio_pause', () => {\n      if(this.videosLocked) {\n        this.videosLocked = false;\n        this.checkAnimations();\n      }\n    });\n  }\n\n  public getAnimations(element: HTMLElement) {\n    const found: AnimationItem[] = [];\n    for(const group in this.byGroups) {\n      for(const player of this.byGroups[group]) {\n        if(player.el === element) {\n          found.push(player);\n        }\n      }\n    }\n\n    return found;\n  }\n\n  public removeAnimation(player: AnimationItem) {\n    //console.log('destroy animation');\n    const {el, animation} = player;\n    animation.remove();\n\n    if(animation instanceof HTMLVideoElement && isSafari) {\n      setTimeout(() => { // TODO: очистка по очереди, а не все вместе с этим таймаутом\n        animation.src = '';\n        animation.load();\n      }, 1e3);\n    }\n\n    for(const group in this.byGroups) {\n      this.byGroups[group].findAndSplice(p => p === player);\n    }\n  \n    this.observer.unobserve(el);\n    this.visible.delete(player);\n  }\n\n  public addAnimation(animation: RLottiePlayer | HTMLVideoElement, group = '') {\n    const player = {\n      el: animation instanceof RLottiePlayer ? animation.el : animation, \n      animation: animation, \n      group\n    };\n\n    if(animation instanceof RLottiePlayer) {\n      if(!rootScope.settings.stickers.loop && animation.loop) {\n        animation.loop = rootScope.settings.stickers.loop;\n      }\n    }\n\n    (this.byGroups[group] ?? (this.byGroups[group] = [])).push(player);\n    this.observer.observe(player.el);\n  }\n\n  public checkAnimations(blurred?: boolean, group?: string, destroy = false) {\n    if(rootScope.idle.isIDLE) return;\n    \n    const groups = group /* && false */ ? [group] : Object.keys(this.byGroups);\n\n    if(group && !this.byGroups[group]) {\n      //console.warn('no animation group:', group);\n      this.byGroups[group] = [];\n      return;\n    }\n\n    for(const group of groups) {\n      const animations = this.byGroups[group];\n\n      animations.forEach(player => {\n        this.checkAnimation(player, blurred, destroy);\n      });\n    }\n  }\n\n  public checkAnimation(player: AnimationItem, blurred = false, destroy = false) {\n    const {el, animation, group} = player;\n    //return;\n    if((destroy || (!isInDOM(el) && !this.lockedGroups[group]))/*  && false */) {\n      this.removeAnimation(player);\n      return;\n    }\n\n    if(blurred || (this.onlyOnePlayableGroup && this.onlyOnePlayableGroup !== group) || (animation instanceof HTMLVideoElement && this.videosLocked)) {\n      if(!animation.paused) {\n        //console.warn('pause animation:', animation);\n        animation.pause();\n      }\n    } else if(animation.paused && \n      this.visible.has(player) && \n      animation.autoplay && \n      (!this.onlyOnePlayableGroup || this.onlyOnePlayableGroup === group)\n    ) {\n      //console.warn('play animation:', animation);\n      animation.play();\n    }\n  }\n\n  public setOnlyOnePlayableGroup(group: string) {\n    this.onlyOnePlayableGroup = group;\n  }\n\n  public lockGroup(group: string) {\n    this.lockedGroups[group] = true;\n  }\n\n  public unlockGroup(group: string) {\n    delete this.lockedGroups[group];\n    this.checkAnimations(undefined, group);\n  }\n\n  public refreshGroup(group: string) {\n    const animations = this.byGroups[group];\n    if(animations && animations.length) {\n      animations.forEach(animation => {\n        this.observer.unobserve(animation.el);\n      });\n\n      window.requestAnimationFrame(() => {\n        animations.forEach(animation => {\n          this.observer.observe(animation.el);\n        });\n      });\n    }\n  }\n\n  public lockIntersectionGroup(group: string) {\n    this.intersectionLockedGroups[group] = true;\n  }\n\n  public unlockIntersectionGroup(group: string) {\n    delete this.intersectionLockedGroups[group];\n    this.refreshGroup(group);\n  }\n}\n\nconst animationIntersector = new AnimationIntersector();\nif(MOUNT_CLASS_TO) {\n  MOUNT_CLASS_TO.animationIntersector = animationIntersector;\n}\nexport default animationIntersector;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport function numberThousandSplitter(x: number, joiner = ' ') {\n  const parts = x.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, joiner);\n  return parts.join(\".\");\n}\n\nexport function formatBytes(bytes: number, decimals = 2) {\n  if(bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport function formatNumber(bytes: number, decimals = 2) {\n  if(bytes === 0) return '0';\n\n  const k = 1000;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['', 'K', 'M', 'B', 'T'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\n}\n\nexport function clamp(v: number, min: number, max: number): number {\n  return v < min ? min : ((v > max) ? max : v);\n}\n\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function whichChild(elem: Node) {\n  if(!elem.parentNode) {\n    return -1;\n  }\n  \n  let i = 0;\n  // @ts-ignore\n  while((elem = elem.previousElementSibling) !== null) ++i;\n  return i;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { FileURLType, getFileNameByLocation, getFileURL } from '../../helpers/fileName';\nimport { safeReplaceArrayInObject, defineNotNumerableProperties, isObject } from '../../helpers/object';\nimport { Document, InputFileLocation, PhotoSize } from '../../layer';\nimport referenceDatabase, { ReferenceContext } from '../mtproto/referenceDatabase';\nimport opusDecodeController from '../opusDecodeController';\nimport { RichTextProcessor } from '../richtextprocessor';\nimport webpWorkerController from '../webp/webpWorkerController';\nimport appDownloadManager, { DownloadBlob } from './appDownloadManager';\nimport appPhotosManager from './appPhotosManager';\nimport blur from '../../helpers/blur';\nimport apiManager from '../mtproto/mtprotoworker';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { getFullDate } from '../../helpers/date';\n\nexport type MyDocument = Document.document;\n\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\n\nexport class AppDocsManager {\n  private docs: {[docId: string]: MyDocument} = {};\n  private savingLottiePreview: {[docId: string]: true} = {};\n\n  constructor() {\n    apiManager.onServiceWorkerFail = this.onServiceWorkerFail;\n  }\n\n  public onServiceWorkerFail = () => {\n    for(const id in this.docs) {\n      const doc = this.docs[id];\n\n      if(doc.supportsStreaming) {\n        delete doc.supportsStreaming;\n        const cacheContext = appDownloadManager.getCacheContext(doc);\n        delete cacheContext.url;\n      }\n    }\n  };\n\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\n    if(doc._ === 'documentEmpty') {\n      return undefined;\n    }\n\n    const oldDoc = this.docs[doc.id];\n\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\n      referenceDatabase.saveContext(doc.file_reference, context);\n    }\n    \n    //console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\n    if(oldDoc) {\n      //if(doc._ !== 'documentEmpty' && doc._ === d._) {\n        if(doc.thumbs) {\n          if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\n          /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\n            d.thumbs.unshift(apiDoc.thumbs[0]);\n          } else if(d.thumbs[0].url) { // fix for converted thumb in safari\n            apiDoc.thumbs[0] = d.thumbs[0];\n          } */\n        }\n\n      //}\n\n      return oldDoc;\n\n      //return Object.assign(d, apiDoc, context);\n      //return context ? Object.assign(d, context) : d;\n    }\n\n    this.docs[doc.id] = doc;\n\n    // * exclude from state\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name', \n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle', \n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw', \n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\n\n    doc.attributes.forEach(attribute => {\n      switch(attribute._) {\n        case 'documentAttributeFilename':\n          doc.file_name = RichTextProcessor.wrapPlainText(attribute.file_name);\n          break;\n\n        case 'documentAttributeAudio':\n          doc.duration = attribute.duration;\n          doc.audioTitle = attribute.title;\n          doc.audioPerformer = attribute.performer;\n          doc.type = attribute.pFlags.voice && doc.mime_type === 'audio/ogg' ? 'voice' : 'audio';\n          /* if(apiDoc.type === 'audio') {\n            apiDoc.supportsStreaming = true;\n          } */\n          break;\n\n        case 'documentAttributeVideo':\n          doc.duration = attribute.duration;\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          //apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\n            doc.type = 'round';\n          } else /* if(apiDoc.thumbs) */ {\n            doc.type = 'video';\n          }\n          break;\n\n        case 'documentAttributeSticker':\n          if(attribute.alt !== undefined) {\n            doc.stickerEmojiRaw = attribute.alt;\n            doc.stickerEmoji = RichTextProcessor.wrapRichText(doc.stickerEmojiRaw, {noLinks: true, noLinebreaks: true});\n          }\n\n          if(attribute.stickerset) {\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\n              delete attribute.stickerset;\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\n              doc.stickerSetInput = attribute.stickerset;\n            }\n          }\n\n          // * there can be no thumbs, then it is a document\n          if(/* apiDoc.thumbs &&  */doc.mime_type === 'image/webp' && (doc.thumbs || webpWorkerController.isWebpSupported())) {\n            doc.type = 'sticker';\n            doc.sticker = 1;\n          }\n          break;\n\n        case 'documentAttributeImageSize':\n          doc.type = 'photo';\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          break;\n\n        case 'documentAttributeAnimated':\n          if((doc.mime_type === 'image/gif' || doc.mime_type === 'video/mp4')/*  && apiDoc.thumbs */) {\n            doc.type = 'gif';\n          }\n\n          doc.animated = true;\n          break;\n      }\n    });\n    \n    if(!doc.mime_type) {\n      switch(doc.type) {\n        case 'gif':\n        case 'video':\n        case 'round':\n          doc.mime_type = 'video/mp4';\n          break;\n        case 'sticker':\n          doc.mime_type = 'image/webp';\n          break;\n        case 'audio':\n          doc.mime_type = 'audio/mpeg';\n          break;\n        case 'voice':\n          doc.mime_type = 'audio/ogg';\n          break;\n        default:\n          doc.mime_type = 'application/octet-stream';\n          break;\n      }\n    }\n\n    if(doc.mime_type === 'application/pdf') {\n      doc.type = 'pdf';\n    }\n\n    if(doc.type === 'voice' || doc.type === 'round') {\n      // browser will identify extension\n      doc.file_name = doc.type + '_' + getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\n    }\n\n    if(apiManager.isServiceWorkerOnline()) {\n      if((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video') {\n        doc.supportsStreaming = true;\n        \n        const cacheContext = appDownloadManager.getCacheContext(doc);\n        if(!cacheContext.url) {\n          cacheContext.url = this.getFileURL(doc);\n        }\n      }\n    }\n\n    // for testing purposes\n    // doc.supportsStreaming = false;\n    // doc.url = ''; // * this will break upload urls\n    \n    if(!doc.file_name) {\n      doc.file_name = '';\n    }\n\n    if(doc.mime_type === 'application/x-tgsticker' && doc.file_name === 'AnimatedSticker.tgs') {\n      doc.type = 'sticker';\n      doc.animated = true;\n      doc.sticker = 2;\n    }\n\n    /* if(!doc.url) {\n      doc.url = this.getFileURL(doc);\n    } */\n\n    return doc;\n  }\n  \n  public getDoc(docId: string | MyDocument): MyDocument {\n    return isObject(docId) && typeof(docId) !== 'string' ? docId as any : this.docs[docId as string] as any;\n  }\n\n  public getMediaInput(doc: MyDocument) {\n    return {\n      _: 'inputMediaDocument',\n      id: {\n        _: 'inputDocument',\n        id: doc.id,\n        access_hash: doc.access_hash,\n        file_reference: doc.file_reference\n      },\n      ttl_seconds: 0\n    };\n  }\n\n  public getInput(doc: MyDocument, thumbSize?: string): InputFileLocation.inputDocumentFileLocation {\n    return {\n      _: 'inputDocumentFileLocation',\n      id: doc.id,\n      access_hash: doc.access_hash,\n      file_reference: doc.file_reference,\n      thumb_size: thumbSize\n    };\n  }\n\n  public getFileDownloadOptions(doc: MyDocument, thumb?: PhotoSize.photoSize, queueId?: number, onlyCache?: boolean) {\n    const inputFileLocation = this.getInput(doc, thumb?.type);\n\n    let mimeType: string;\n    if(thumb) {\n      mimeType = doc.sticker ? 'image/webp' : 'image/jpeg'/* doc.mime_type */;\n    } else {\n      mimeType = doc.mime_type || 'application/octet-stream';\n    }\n\n    return {\n      dcId: doc.dc_id, \n      location: inputFileLocation, \n      size: thumb ? thumb.size : doc.size, \n      mimeType,\n      fileName: doc.file_name,\n      queueId,\n      onlyCache\n    };\n  }\n\n  public getFileURL(doc: MyDocument, download = false, thumb?: PhotoSize.photoSize) {\n    let type: FileURLType;\n    if(download) {\n      type = 'download';\n    } else if(thumb) {\n      type = 'thumb';\n    } else if(doc.supportsStreaming) {\n      type = 'stream';\n    } else {\n      type = 'document';\n    }\n\n    return getFileURL(type, this.getFileDownloadOptions(doc, thumb));\n  }\n\n  public getThumbURL(doc: MyDocument, thumb: PhotoSize.photoSize | PhotoSize.photoCachedSize | PhotoSize.photoStrippedSize) {\n    let promise: Promise<any> = Promise.resolve();\n\n    const cacheContext = appDownloadManager.getCacheContext(doc, thumb.type);\n    if(!cacheContext.url) {\n      if('bytes' in thumb) {\n        promise = blur(appPhotosManager.getPreviewURLFromBytes(thumb.bytes, !!doc.sticker)).then(url => {\n          cacheContext.url = url;\n        }) as any;\n      } else {\n        //return this.getFileURL(doc, false, thumb);\n        promise = appPhotosManager.preloadPhoto(doc, thumb) as any;\n      }\n    }\n\n    return {thumb, cacheContext, promise};\n  }\n\n  public getThumb(doc: MyDocument, tryNotToUseBytes = true) {\n    const thumb = appPhotosManager.choosePhotoSize(doc, 0, 0, !tryNotToUseBytes);\n    if(thumb._ === 'photoSizeEmpty') return null;\n    return this.getThumbURL(doc, thumb as any);\n  }\n\n  public getInputFileName(doc: MyDocument, thumbSize?: string) {\n    return getFileNameByLocation(this.getInput(doc, thumbSize), {fileName: doc.file_name});\n  }\n\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean): DownloadBlob {\n    const fileName = this.getInputFileName(doc);\n\n    let download: DownloadBlob = appDownloadManager.getDownload(fileName);\n    if(download) {\n      return download;\n    }\n\n    const downloadOptions = this.getFileDownloadOptions(doc, undefined, queueId, onlyCache);\n    download = appDownloadManager.download(downloadOptions);\n\n    const cacheContext = appDownloadManager.getCacheContext(doc);\n    const originalPromise = download;\n    originalPromise.then((blob) => {\n      cacheContext.url = URL.createObjectURL(blob);\n      cacheContext.downloaded = blob.size;\n    }, () => {});\n    \n    if(doc.type === 'voice' && !opusDecodeController.isPlaySupported()) {\n      download = originalPromise.then(async(blob) => {\n        const reader = new FileReader();\n  \n        await new Promise<void>((resolve, reject) => {\n          reader.onloadend = (e) => {\n            const uint8 = new Uint8Array(e.target.result as ArrayBuffer);\n            //console.log('sending uint8 to decoder:', uint8);\n            opusDecodeController.decode(uint8).then(result => {\n              cacheContext.url = result.url;\n              resolve();\n            }, (err) => {\n              delete cacheContext.downloaded;\n              reject(err);\n            });\n          };\n    \n          reader.readAsArrayBuffer(blob);\n        });\n  \n        return blob;\n      });\n    }\n\n    return download;\n  }\n\n  public saveLottiePreview(doc: MyDocument, canvas: HTMLCanvasElement, toneIndex: number) {\n    const key = doc.id + '-' + toneIndex;\n    if(this.savingLottiePreview[key]/*  || true */) return;\n\n    if(!doc.stickerCachedThumbs) {\n      defineNotNumerableProperties(doc, ['stickerCachedThumbs']);\n      doc.stickerCachedThumbs = {};\n    }\n\n    const thumb = doc.stickerCachedThumbs[toneIndex];\n    if(thumb && thumb.w >= canvas.width && thumb.h >= canvas.height) {\n      return;\n    }\n\n    /* if(doc.thumbs.find(t => t._ === 'photoStrippedSize') \n      || (doc.stickerCachedThumb || (doc.stickerSavedThumbWidth >= canvas.width && doc.stickerSavedThumbHeight >= canvas.height))) {\n      return;\n    } */\n\n    this.savingLottiePreview[key] = true;\n    canvas.toBlob((blob) => {\n      //console.log('got lottie preview', doc, blob, URL.createObjectURL(blob));\n\n      const thumb = {\n        url: URL.createObjectURL(blob),\n        w: canvas.width,\n        h: canvas.height\n      };\n\n      doc.stickerCachedThumbs[toneIndex] = thumb;\n\n      delete this.savingLottiePreview[key];\n      \n      /* const reader = new FileReader();\n      reader.onloadend = (e) => {\n        const uint8 = new Uint8Array(e.target.result as ArrayBuffer);\n        const thumb: PhotoSize.photoStrippedSize = {\n          _: 'photoStrippedSize',\n          bytes: uint8,\n          type: 'i'\n        };\n\n        doc.stickerSavedThumbWidth = canvas.width;\n        doc.stickerSavedThumbHeight = canvas.width;\n\n        defineNotNumerableProperties(thumb, ['url']);\n        thumb.url = URL.createObjectURL(blob);\n        doc.thumbs.findAndSplice(t => t._ === thumb._);\n        doc.thumbs.unshift(thumb);\n\n        if(!webpWorkerController.isWebpSupported()) {\n          doc.pFlags.stickerThumbConverted = true;\n        }\n\n        delete this.savingLottiePreview[doc.id];\n      };\n      reader.readAsArrayBuffer(blob); */\n    });\n  }\n\n  public saveDocFile(doc: MyDocument, queueId?: number) {\n    /* const options = this.getFileDownloadOptions(doc, undefined, queueId);\n    return appDownloadManager.downloadToDisc(options, doc.file_name); */\n    const promise = this.downloadDoc(doc, queueId);\n    promise.then(() => {\n      const cacheContext = appDownloadManager.getCacheContext(doc);\n      appDownloadManager.createDownloadAnchor(cacheContext.url, doc.file_name);\n    });\n    return promise;\n  }\n}\n\nconst appDocsManager = new AppDocsManager();\nMOUNT_CLASS_TO.appDocsManager = appDocsManager;\nexport default appDocsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Page from \"./page\";\nimport lottieLoader from \"../lib/lottieLoader\";\nimport { horizontalMenu } from \"../components/horizontalMenu\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\nimport whichChild from \"../helpers/dom/whichChild\";\n\nclass PagesManager {\n  private pageId = -1;\n  private page: Page;\n\n  private selectTab: ReturnType<typeof horizontalMenu>;\n  public pagesDiv: HTMLDivElement;\n  public scrollableDiv: HTMLElement;\n\n  constructor() {\n    this.pagesDiv = document.getElementById('auth-pages') as HTMLDivElement;\n    this.scrollableDiv = this.pagesDiv.querySelector('.scrollable') as HTMLElement;\n    this.selectTab = horizontalMenu(null, this.scrollableDiv.querySelector('.tabs-container') as HTMLDivElement, null, () => {\n      if(this.page?.onShown) {\n        this.page.onShown();\n      }\n    });\n  }\n\n  public setPage(page: Page) {\n    if(page.isAuthPage) {\n      this.pagesDiv.style.display = '';\n\n      let id = whichChild(page.pageEl);\n      if(this.pageId === id) return;\n\n      this.selectTab(id);\n\n      if(this.pageId !== -1 && id > 1) {\n        lottieLoader.loadLottieWorkers();\n      }\n\n\n\n      this.pageId = id;\n\n      if(this.scrollableDiv) {\n        fastSmoothScroll(this.scrollableDiv, this.scrollableDiv.firstElementChild as HTMLElement, 'start');\n      }\n    } else {\n      this.pagesDiv.style.display = 'none';\n      page.pageEl.style.display = '';\n\n      this.pageId = -1;\n    }\n\n    this.page = page;\n  }\n}\n\nconst pagesManager = new PagesManager();\nMOUNT_CLASS_TO.pagesManager = pagesManager;\nexport default pagesManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport pagesManager from \"./pagesManager\";\n\nexport default class Page {\n  public pageEl: HTMLDivElement;\n  private installed = false;\n\n  constructor(className: string, public isAuthPage: boolean, private onFirstMount?: (...args: any[]) => Promise<any> | void, private onMount?: (...args: any[]) => void, public onShown?: () => void) {\n    this.pageEl = document.body.querySelector('.' + className) as HTMLDivElement;\n  }\n\n  public async mount(...args: any[]) {\n    //this.pageEl.style.display = '';\n\n    if(this.onMount) {\n      this.onMount(...args);\n    }\n\n    if(!this.installed) {\n      if(this.onFirstMount) {\n        try {\n          const res = this.onFirstMount(...args);\n          if(res instanceof Promise) {\n            await res;\n          }\n        } catch(err) {\n          console.error('PAGE MOUNT ERROR:', err);\n        }\n      }\n      \n      this.installed = true;\n    }\n\n    pagesManager.setPage(this);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n/* import { copy } from \"./object\";\n\nexport function listMergeSorted(list1: any[] = [], list2: any[] = []) {\n  const result = copy(list1);\n\n  const minId = list1.length ? list1[list1.length - 1] : 0xFFFFFFFF;\n  for(let i = 0; i < list2.length; i++) {\n    if(list2[i] < minId) {\n      result.push(list2[i]);\n    }\n  }\n\n  return result;\n} */\n\nexport const accumulate = (arr: number[], initialValue: number) => arr.reduce((acc, value) => acc + value, initialValue);\n\nexport function findAndSpliceAll<T>(array: Array<T>, verify: (value: T, index: number, arr: typeof array) => boolean) {\n  const out: typeof array = [];\n  let idx = -1;\n  while((idx = array.findIndex(verify)) !== -1) {\n    out.push(array.splice(idx, 1)[0]);\n  }\n\n  return out;\n}\n\nexport function forEachReverse<T>(array: Array<T>, callback: (value: T, index?: number, array?: Array<T>) => void) {\n  for(let length = array.length, i = length - 1; i >= 0; --i) {\n    callback(array[i], i, array);\n  }\n};\n\nexport function insertInDescendSortedArray<T extends {[smth in K]?: number}, K extends keyof T>(array: Array<T>, element: T, property: K, pos?: number) {\n  if(pos === undefined) {\n    pos = array.indexOf(element);\n    if(pos !== -1) {\n      array.splice(pos, 1);\n    }\n  }\n\n  const sortProperty: number = element[property];\n  const len = array.length;\n  if(!len || sortProperty <= array[len - 1][property]) {\n    return array.push(element) - 1;\n  } else if(sortProperty >= array[0][property]) {\n    array.unshift(element);\n    return 0;\n  } else {\n    for(let i = 0; i < len; i++) {\n      if(sortProperty > array[i][property]) {\n        array.splice(i, 0, element);\n        return i;\n      }\n    }\n  }\n\n  console.error('wtf', array, element);\n  return array.indexOf(element);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { fastRaf } from \"./schedulers\";\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport isInDOM from \"./dom/isInDOM\";\n\nclass SequentialDom {\n  private promises: Partial<{\n    read: CancellablePromise<void>,\n    write: CancellablePromise<void>\n  }> = {};\n  private raf = fastRaf.bind(null);\n  private scheduled = false;\n\n  private do(kind: keyof SequentialDom['promises'], callback?: VoidFunction) {\n    let promise = this.promises[kind];\n    if(!promise) {\n      this.scheduleFlush();\n      promise = this.promises[kind] = deferredPromise<void>();\n    }\n\n    if(callback !== undefined) {\n      promise.then(() => callback());\n    }\n    \n    return promise;\n  }\n\n  public measure(callback?: VoidFunction) {\n    return this.do('read', callback);\n  }\n\n  public mutate(callback?: VoidFunction) {\n    return this.do('write', callback);\n  }\n\n  /**\n   * Will fire instantly if element is not connected\n   * @param element \n   * @param callback \n   */\n  public mutateElement(element: HTMLElement, callback?: VoidFunction) {\n    const promise = isInDOM(element) ? this.mutate() : Promise.resolve();\n\n    if(callback !== undefined) {\n      promise.then(() => callback());\n    }\n\n    return promise;\n  }\n\n  private scheduleFlush() {\n    if(!this.scheduled) {\n      this.scheduled = true;\n\n      this.raf(() => {\n        this.promises.read && this.promises.read.resolve();\n        this.promises.write && this.promises.write.resolve();\n\n        this.scheduled = false;\n        this.promises = {};\n      });\n    }\n  }\n}\n\nconst sequentialDom = new SequentialDom();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.sequentialDom = sequentialDom);\nexport default sequentialDom;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { tsNow } from '../../helpers/date';\nimport sessionStorage from '../sessionStorage';\n\nexport class ServerTimeManager {\n  public timestampNow = tsNow(true);\n  public midnightNoOffset = this.timestampNow - (this.timestampNow % 86400);\n  public midnightOffseted = new Date();\n\n  public midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000));\n\n  public serverTimeOffset = 0; // in seconds\n  public timeParams = {\n    midnightOffset: this.midnightOffset,\n    serverTimeOffset: this.serverTimeOffset\n  };\n\n  constructor() {\n    this.midnightOffseted.setHours(0, 0, 0, 0);\n\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.serverTimeOffset = to;\n        this.timeParams.serverTimeOffset = to;\n      }\n    });\n  }\n}\n\nconst serverTimeManager = new ServerTimeManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.serverTimeManager = serverTimeManager);\nexport default serverTimeManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { tsNow } from \"../../helpers/date\";\nimport { numberThousandSplitter } from \"../../helpers/number\";\nimport { ChannelParticipantsFilter, ChannelsChannelParticipants, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, InputFileLocation, PhotoSize, SendMessageAction, Update, UserFull, UserProfilePhoto } from \"../../layer\";\nimport { LangPackKey, i18n } from \"../langPack\";\n//import apiManager from '../mtproto/apiManager';\nimport apiManager from '../mtproto/mtprotoworker';\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport SearchIndex from \"../searchIndex\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appNotificationsManager from \"./appNotificationsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appPhotosManager from \"./appPhotosManager\";\nimport appUsersManager, { User } from \"./appUsersManager\";\n\nexport type UserTyping = Partial<{userId: number, action: SendMessageAction, timeout: number}>;\n\nexport class AppProfileManager {\n  //private botInfos: any = {};\n  private usersFull: {[id: string]: UserFull.userFull} = {};\n  public chatsFull: {[id: string]: ChatFull} = {};\n  private fullPromises: {[peerId: string]: Promise<ChatFull.chatFull | ChatFull.channelFull | UserFull>} = {};\n\n  private megagroupOnlines: {[id: number]: {timestamp: number, onlines: number}};\n\n  private typingsInPeer: {[peerId: number]: UserTyping[]};\n\n  constructor() {\n    rootScope.addMultipleEventsListeners({\n      updateChatParticipants: (update) => {\n        const participants = update.participants;\n        if(participants._ === 'chatParticipants') {\n          const chatId = participants.chat_id;\n          const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\n          if(chatFull !== undefined) {\n            chatFull.participants = participants;\n            rootScope.dispatchEvent('chat_full_update', chatId);\n          }\n        }\n      },\n\n      updateChatParticipantAdd: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              return;\n            }\n          }\n\n          participants.push({\n            _: 'chatParticipant',\n            user_id: update.user_id,\n            inviter_id: update.inviter_id,\n            date: tsNow(true)\n          });\n\n          _participants.version = update.version;\n          rootScope.dispatchEvent('chat_full_update', update.chat_id);\n        }\n      },\n\n      updateChatParticipantDelete: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              participants.splice(i, 1);\n              _participants.version = update.version;\n              rootScope.dispatchEvent('chat_full_update', update.chat_id);\n              return;\n            }\n          }\n        }\n      },\n\n      updateUserTyping: this.onUpdateUserTyping,\n      updateChatUserTyping: this.onUpdateUserTyping,\n      updateChannelUserTyping: this.onUpdateUserTyping\n    });\n\n    rootScope.addEventListener('chat_update', (chatId) => {\n      const fullChat = this.chatsFull[chatId];\n      const chat: Chat.chat = appChatsManager.getChat(chatId);\n      if(!chat.photo || !fullChat) {\n        return;\n      }\n\n      const emptyPhoto = chat.photo._ === 'chatPhotoEmpty';\n      //////console.log('chat_update:', fullChat);\n      if(fullChat.chat_photo && emptyPhoto !== (fullChat.chat_photo._ === 'photoEmpty')) {\n        delete this.chatsFull[chatId];\n        rootScope.dispatchEvent('chat_full_update', chatId);\n        return;\n      }\n      if(emptyPhoto) {\n        return;\n      }\n\n      const photoId = (chat.photo as ChatPhoto.chatPhoto).photo_id;\n      const chatFullPhotoId = fullChat.chat_photo?.id;\n      if(chatFullPhotoId !== photoId) {\n        delete this.chatsFull[chatId];\n        rootScope.dispatchEvent('chat_full_update', chatId);\n      }\n    });\n\n    rootScope.addEventListener('invalidate_participants', chatId => {\n      this.invalidateChannelParticipants(chatId);\n    });\n\n    this.megagroupOnlines = {};\n    this.typingsInPeer = {};\n  }\n\n  /* public saveBotInfo(botInfo: any) {\n    const botId = botInfo && botInfo.user_id;\n    if(!botId) {\n      return null;\n    }\n\n    const commands: any = {};\n    botInfo.commands.forEach((botCommand: any) => {\n      commands[botCommand.command] = botCommand.description;\n    });\n\n    return this.botInfos[botId] = {\n      id: botId,\n      version: botInfo.version,\n      shareText: botInfo.share_text,\n      description: botInfo.description,\n      commands: commands\n    };\n  } */\n\n  public getProfile(id: number, override?: true): Promise<UserFull> {\n    if(this.usersFull[id] && !override) {\n      return Promise.resolve(this.usersFull[id]);\n    }\n\n    if(this.fullPromises[id]) {\n      return this.fullPromises[id] as any;\n    }\n\n    return this.fullPromises[id] = apiManager.invokeApi('users.getFullUser', {\n      id: appUsersManager.getUserInput(id)\n    }).then((userFull) => {\n      const user = userFull.user as User;\n      appUsersManager.saveApiUser(user, true);\n\n      if(userFull.profile_photo) {\n        userFull.profile_photo = appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId: id});\n      }\n\n      if(userFull.about !== undefined) {\n        userFull.rAbout = RichTextProcessor.wrapRichText(userFull.about, {noLinebreaks: true});\n      }\n\n      appNotificationsManager.savePeerSettings(id, userFull.notify_settings);\n\n      /* if(userFull.bot_info) {\n        userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\n      } */\n\n      //appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\n\n      delete this.fullPromises[id];\n\n      return this.usersFull[id] = userFull;\n    }) as any;\n  }\n\n  public getProfileByPeerId(peerId: number, override?: true): Promise<ChatFull.chatFull | ChatFull.channelFull | UserFull.userFull> {\n    if(peerId < 0) return this.getChatFull(-peerId, override);\n    else return this.getProfile(peerId, override);\n  }\n\n  public getFullPhoto(peerId: number) {\n    return this.getProfileByPeerId(peerId).then(profile => {\n      switch(profile._) {\n        case 'userFull':\n          return profile.profile_photo;\n        case 'channelFull':\n        case 'chatFull':\n          return profile.chat_photo;\n      }\n    });\n  }\n\n  /* public getPeerBots(peerId: number) {\n    var peerBots: any[] = [];\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\n      return Promise.resolve(peerBots);\n    }\n    if(peerId >= 0) {\n      return this.getProfile(peerId).then((userFull: any) => {\n        var botInfo = userFull.bot_info;\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\n          peerBots.push(botInfo);\n        }\n        return peerBots;\n      });\n    }\n\n    return this.getChatFull(-peerId).then((chatFull: any) => {\n      chatFull.bot_info.forEach((botInfo: any) => {\n        peerBots.push(this.saveBotInfo(botInfo))\n      });\n      return peerBots;\n    });\n  } */\n\n  public getChatFull(id: number, override?: true): Promise<ChatFull.chatFull | ChatFull.channelFull> {\n    if(appChatsManager.isChannel(id)) {\n      return this.getChannelFull(id, override);\n    }\n\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\n    if(fullChat && !override) {\n      const chat = appChatsManager.getChat(id);\n      if(chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version ||\n        chat.pFlags.left) {\n        return Promise.resolve(fullChat);\n      }\n    }\n\n    const peerId = -id;\n    if(this.fullPromises[peerId] !== undefined) {\n      return this.fullPromises[peerId] as any;\n    }\n\n    // console.trace(dT(), 'Get chat full', id, appChatsManager.getChat(id))\n    return this.fullPromises[peerId] = apiManager.invokeApi('messages.getFullChat', {\n      chat_id: id\n    }).then((result) => {\n      appChatsManager.saveApiChats(result.chats, true);\n      appUsersManager.saveApiUsers(result.users);\n      const fullChat = result.full_chat as ChatFull.chatFull;\n      if(fullChat && fullChat.chat_photo && fullChat.chat_photo.id) {\n        fullChat.chat_photo = appPhotosManager.savePhoto(fullChat.chat_photo, {type: 'profilePhoto', peerId: peerId});\n      }\n\n      //appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\n      appNotificationsManager.savePeerSettings(peerId, fullChat.notify_settings);\n      delete this.fullPromises[peerId];\n      this.chatsFull[id] = fullChat;\n      rootScope.dispatchEvent('chat_full_update', id);\n\n      return fullChat;\n    }) as any;\n  }\n\n  public getChatInviteLink(id: number, force?: boolean) {\n    return this.getChatFull(id).then((chatFull) => {\n      if(!force &&\n        chatFull.exported_invite &&\n        chatFull.exported_invite._ == 'chatInviteExported') {\n        return chatFull.exported_invite.link;\n      }\n      \n      return apiManager.invokeApi('messages.exportChatInvite', {\n        peer: appPeersManager.getInputPeerById(-id)\n      }).then((exportedInvite) => {\n        if(this.chatsFull[id] !== undefined) {\n          this.chatsFull[id].exported_invite = exportedInvite;\n        }\n\n        return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\n      });\n    });\n  }\n\n  public getChannelParticipants(id: number, filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'}, limit = 200, offset = 0) {\n    if(filter._ === 'channelParticipantsRecent') {\n      const chat = appChatsManager.getChat(id);\n      if(chat &&\n          chat.pFlags && (\n            chat.pFlags.kicked ||\n            chat.pFlags.broadcast && !chat.pFlags.creator && !chat.admin_rights\n          )) {\n        return Promise.reject();\n      }\n    }\n\n    return apiManager.invokeApiCacheable('channels.getParticipants', {\n      channel: appChatsManager.getChannelInput(id),\n      filter,\n      offset,\n      limit,\n      hash: 0\n    }, {cacheSeconds: 60}).then(result => {\n      appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\n    });\n    /* let maybeAddSelf = (participants: any[]) => {\n      let chat = appChatsManager.getChat(id);\n      let selfMustBeFirst = filter._ === 'channelParticipantsRecent' &&\n                            !offset &&\n                            !chat.pFlags.kicked &&\n                            !chat.pFlags.left;\n\n      if(selfMustBeFirst) {\n        participants = copy(participants);\n        let myID = appUsersManager.getSelf().id;\n        let myIndex = participants.findIndex(p => p.user_id === myID);\n        let myParticipant;\n\n        if(myIndex !== -1) {\n          myParticipant = participants[myIndex];\n          participants.splice(myIndex, 1);\n        } else {\n          myParticipant = {_: 'channelParticipantSelf', user_id: myID};\n        }\n\n        participants.unshift(myParticipant);\n      }\n\n      return participants;\n    } */\n  }\n\n  public getChannelParticipant(id: number, peerId: number) {\n    return apiManager.invokeApiSingle('channels.getParticipant', {\n      channel: appChatsManager.getChannelInput(id),\n      participant: appPeersManager.getInputPeerById(peerId),\n    }).then(channelParticipant => {\n      appUsersManager.saveApiUsers(channelParticipant.users);\n      return channelParticipant.participant;\n    });\n  }\n\n  public getChannelFull(id: number, override?: true): Promise<ChatFull.channelFull> {\n    if(this.chatsFull[id] !== undefined && !override) {\n      return Promise.resolve(this.chatsFull[id] as ChatFull.channelFull);\n    }\n\n    const peerId = -id;\n    if(this.fullPromises[peerId] !== undefined) {\n      return this.fullPromises[peerId] as any;\n    }\n\n    return this.fullPromises[peerId] = apiManager.invokeApi('channels.getFullChannel', {\n      channel: appChatsManager.getChannelInput(id)\n    }).then((result) => {\n      appChatsManager.saveApiChats(result.chats, true);\n      appUsersManager.saveApiUsers(result.users);\n      const fullChannel = result.full_chat as ChatFull.channelFull;\n      if(fullChannel && fullChannel.chat_photo.id) {\n        fullChannel.chat_photo = appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\n        //appPhotosManager.savePhoto(fullChannel.chat_photo);\n      }\n      appNotificationsManager.savePeerSettings(peerId, fullChannel.notify_settings);\n\n      delete this.fullPromises[peerId];\n      this.chatsFull[id] = fullChannel;\n      rootScope.dispatchEvent('chat_full_update', id);\n\n      return fullChannel;\n    }, (error) => {\n      switch (error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = appChatsManager.getChat(id);\n          channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title};\n          apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: id\n            } as Update.updateChannel],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      return Promise.reject(error);\n    }) as any;\n  }\n\n  public getMentions(chatId: number, query: string, threadId?: number): Promise<number[]> {\n    const processUserIds = (userIds: number[]) => {\n      const index = new SearchIndex<number>(true, true);\n      userIds.forEach(userId => {\n        index.indexObject(userId, appUsersManager.getUserSearchText(userId));\n      });\n\n      return Array.from(index.search(query));\n    };\n\n    if(appChatsManager.isChannel(chatId)) {\n      return this.getChannelParticipants(chatId, {\n        _: 'channelParticipantsMentions',\n        q: query,\n        top_msg_id: threadId\n      }, 50, 0).then(cP => {\n        return processUserIds(cP.participants.map(p => appChatsManager.getParticipantPeerId(p)));\n      });\n    } else {\n      return (this.getChatFull(chatId) as Promise<ChatFull.chatFull>).then(chatFull => {\n        return processUserIds((chatFull.participants as ChatParticipants.chatParticipants).participants.map(p => p.user_id));\n      });\n    }\n  }\n\n  public invalidateChannelParticipants(id: number) {\n    delete this.chatsFull[id];\n    delete this.fullPromises[-id];\n    apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\n    rootScope.dispatchEvent('chat_full_update', id);\n  }\n\n  public updateProfile(first_name: string, last_name: string, about: string) {\n    return apiManager.invokeApi('account.updateProfile', {\n      first_name,\n      last_name,\n      about\n    }).then(user => {\n      appUsersManager.saveApiUser(user);\n      \n      return this.getProfile(rootScope.myId, true);\n    });\n  }\n\n  public uploadProfilePhoto(inputFile: InputFile) {\n    return apiManager.invokeApi('photos.uploadProfilePhoto', {\n      file: inputFile\n    }).then((updateResult) => {\n      appUsersManager.saveApiUsers(updateResult.users);\n\n      const myId = rootScope.myId;\n      appPhotosManager.savePhoto(updateResult.photo, {\n        type: 'profilePhoto',\n        peerId: myId\n      });\n\n      apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updateUserPhoto',\n          user_id: myId,\n          date: tsNow(true),\n          photo: appUsersManager.getUser(myId).photo,\n          previous: true\n        } as Update.updateUserPhoto\n      });\n    });\n  }\n\n  public getChatMembersString(id: number) {\n    const chat = appChatsManager.getChat(id);\n    const chatFull = this.chatsFull[id];\n    let count: number;\n    if(chatFull) {\n      if(chatFull._ === 'channelFull') {\n        count = chatFull.participants_count;\n      } else {\n        count = (chatFull.participants as ChatParticipants.chatParticipants).participants?.length;\n      }\n    } else {\n      count = chat.participants_count || chat.participants?.participants.length;\n    }\n\n    const isChannel = appChatsManager.isBroadcast(id);\n    count = count || 1;\n\n    let key: LangPackKey = isChannel ? 'Peer.Status.Subscribers' : 'Peer.Status.Member';\n    return i18n(key, [numberThousandSplitter(count)]);\n  }\n\n  public async getOnlines(id: number): Promise<number> {\n    if(appChatsManager.isMegagroup(id)) {\n      const timestamp = Date.now() / 1000 | 0;\n      const cached = this.megagroupOnlines[id] ?? (this.megagroupOnlines[id] = {timestamp: 0, onlines: 1});\n      if((timestamp - cached.timestamp) < 60) {\n        return cached.onlines;\n      }\n\n      const res = await apiManager.invokeApi('messages.getOnlines', {\n        peer: appChatsManager.getChannelInputPeer(id)\n      });\n\n      const onlines = res.onlines ?? 1;\n      cached.timestamp = timestamp;\n      cached.onlines = onlines;\n\n      return onlines;\n    } else if(appChatsManager.isBroadcast(id)) {\n      return 1;\n    }\n\n    const chatInfo = await this.getChatFull(id);\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\n    if(_participants && _participants.participants) {\n      const participants = _participants.participants;\n\n      return participants.reduce((acc: number, participant) => {\n        const user = appUsersManager.getUser(participant.user_id);\n        if(user && user.status && user.status._ === 'userStatusOnline') {\n          return acc + 1;\n        }\n\n        return acc;\n      }, 0);\n    } else {\n      return 1;\n    }\n  }\n\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\n    const fromId = (update as Update.updateUserTyping).user_id || appPeersManager.getPeerId((update as Update.updateChatUserTyping).from_id);\n    if(rootScope.myId === fromId || update.action._ === 'speakingInGroupCallAction') {\n      return;\n    }\n    \n    const peerId = update._ === 'updateUserTyping' ? \n      fromId : \n      -((update as Update.updateChatUserTyping).chat_id || (update as Update.updateChannelUserTyping).channel_id);\n    const typings = this.typingsInPeer[peerId] ?? (this.typingsInPeer[peerId] = []);\n    let typing = typings.find(t => t.userId === fromId);\n\n    const cancelAction = () => {\n      delete typing.timeout;\n      //typings.findAndSplice(t => t === typing);\n      const idx = typings.indexOf(typing);\n      if(idx !== -1) {\n        typings.splice(idx, 1);\n      }\n\n      rootScope.dispatchEvent('peer_typings', {peerId, typings});\n\n      if(!typings.length) {\n        delete this.typingsInPeer[peerId];\n      }\n    };\n\n    if(typing && typing.timeout !== undefined) {\n      clearTimeout(typing.timeout);\n    }\n\n    if(update.action._ === 'sendMessageCancelAction') {\n      if(!typing) {\n        return;\n      }\n\n      cancelAction();\n      return;\n    }\n\n    if(!typing) {\n      typing = {\n        userId: fromId\n      };\n\n      typings.push(typing);\n    }\n\n    //console.log('updateChatUserTyping', update, typings);\n    \n    typing.action = update.action;\n    \n    const hasUser = appUsersManager.hasUser(fromId);\n    if(!hasUser) {\n      // let's load user here\n      if(update._ === 'updateChatUserTyping') {\n        if(update.chat_id && appChatsManager.hasChat(update.chat_id) && !appChatsManager.isChannel(update.chat_id)) {\n          appProfileManager.getChatFull(update.chat_id).then(() => {\n            if(typing.timeout !== undefined && appUsersManager.hasUser(fromId)) {\n              rootScope.dispatchEvent('peer_typings', {peerId, typings});\n            }\n          });\n        }\n      }\n      \n      //return;\n    } else {\n      appUsersManager.forceUserOnline(fromId);\n    }\n\n    typing.timeout = window.setTimeout(cancelAction, 6000);\n    if(hasUser) {\n      rootScope.dispatchEvent('peer_typings', {peerId, typings});\n    }\n  };\n\n  public getPeerTypings(peerId: number) {\n    return this.typingsInPeer[peerId];\n  }\n}\n\nconst appProfileManager = new AppProfileManager();\nMOUNT_CLASS_TO.appProfileManager = appProfileManager;\nexport default appProfileManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport rootScope from \"../../lib/rootScope\";\nimport { ripple } from \"../ripple\";\nimport animationIntersector from \"../animationIntersector\";\nimport appNavigationController, { NavigationItem } from \"../appNavigationController\";\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\n\nexport type PopupButton = {\n  text?: string,\n  callback?: () => void,\n  langKey?: LangPackKey,\n  langArgs?: any[],\n  isDanger?: true,\n  isCancel?: true\n};\n\nexport type PopupOptions = Partial<{\n  closable: true, \n  overlayClosable: true, \n  withConfirm: LangPackKey | true, \n  body: true\n}>;\n\nexport default class PopupElement {\n  protected element = document.createElement('div');\n  protected container = document.createElement('div');\n  protected header = document.createElement('div');\n  protected title = document.createElement('div');\n  protected btnClose: HTMLElement;\n  protected btnConfirm: HTMLElement;\n  protected body: HTMLElement;\n\n  protected onClose: () => void;\n  protected onCloseAfterTimeout: () => void;\n  protected onEscape: () => boolean = () => true;\n\n  protected navigationItem: NavigationItem;\n\n  constructor(className: string, buttons?: Array<PopupButton>, options: PopupOptions = {}) {\n    this.element.classList.add('popup');\n    this.element.className = 'popup' + (className ? ' ' + className : '');\n    this.container.classList.add('popup-container', 'z-depth-1');\n\n    this.header.classList.add('popup-header');\n    this.title.classList.add('popup-title');\n\n    this.header.append(this.title);\n\n    if(options.closable) {\n      this.btnClose = document.createElement('span');\n      this.btnClose.classList.add('btn-icon', 'popup-close', 'tgico-close');\n      //ripple(this.closeBtn);\n      this.header.prepend(this.btnClose);\n\n      this.btnClose.addEventListener('click', this.hide, {once: true});\n    }\n\n    if(options.overlayClosable) {\n      const onOverlayClick = (e: MouseEvent) => {\n        if(!findUpClassName(e.target, 'popup-container')) {\n          this.hide();\n          this.element.removeEventListener('click', onOverlayClick);\n        }\n      };\n  \n      this.element.addEventListener('click', onOverlayClick);\n    }\n\n    if(options.withConfirm) {\n      this.btnConfirm = document.createElement('button');\n      this.btnConfirm.classList.add('btn-primary', 'btn-color-primary');\n      if(options.withConfirm !== true) {\n        this.btnConfirm.append(i18n(options.withConfirm));\n      }\n      this.header.append(this.btnConfirm);\n      ripple(this.btnConfirm);\n    }\n\n    this.container.append(this.header);\n    if(options.body) {\n      this.body = document.createElement('div');\n      this.body.classList.add('popup-body');\n      this.container.append(this.body);\n    }\n\n    if(buttons && buttons.length) {\n      const buttonsDiv = document.createElement('div');\n      buttonsDiv.classList.add('popup-buttons');\n\n      if(buttons.length === 2) {\n        buttonsDiv.classList.add('popup-buttons-row');\n      }\n  \n      const buttonsElements = buttons.map(b => {\n        const button = document.createElement('button');\n        button.className = 'btn' + (b.isDanger ? ' danger' : ' primary');\n\n        ripple(button);\n        \n        if(b.text) {\n          button.innerHTML =  b.text;\n        } else {\n          button.append(i18n(b.langKey, b.langArgs));\n        }\n  \n        if(b.callback) {\n          button.addEventListener('click', () => {\n            b.callback();\n            this.destroy();\n          }, {once: true});\n        } else if(b.isCancel) {\n          button.addEventListener('click', () => {\n            this.destroy();\n          }, {once: true});\n        }\n  \n        return button;\n      });\n  \n      buttonsDiv.append(...buttonsElements);\n      this.container.append(buttonsDiv);\n    }\n\n    this.element.append(this.container);\n  }\n\n  public show() {\n    this.navigationItem = {\n      type: 'popup',\n      onPop: this.destroy,\n      onEscape: this.onEscape\n    };\n\n    appNavigationController.pushItem(this.navigationItem);\n\n    blurActiveElement(); // * hide mobile keyboard\n    document.body.append(this.element);\n    void this.element.offsetWidth; // reflow\n    this.element.classList.add('active');\n    rootScope.overlayIsActive = true;\n    animationIntersector.checkAnimations(true);\n  }\n\n  public hide = () => {\n    appNavigationController.back('popup');\n  };\n\n  private destroy = () => {\n    this.onClose && this.onClose();\n    this.element.classList.add('hiding');\n    this.element.classList.remove('active');\n\n    if(this.btnClose) this.btnClose.removeEventListener('click', this.hide);\n    rootScope.overlayIsActive = false;\n\n    appNavigationController.removeItem(this.navigationItem);\n    this.navigationItem = undefined;\n\n    setTimeout(() => {\n      this.element.remove();\n      this.onCloseAfterTimeout && this.onCloseAfterTimeout();\n      animationIntersector.checkAnimations(false);\n    }, 150);\n  };\n}\n\nexport const addCancelButton = (buttons: PopupButton[]) => {\n  const button = buttons.find(b => b.isCancel);\n  if(!button) {\n    buttons.push({\n      langKey: 'Cancel',\n      isCancel: true\n    });\n  }\n\n  return buttons;\n};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport const loadedURLs: {[url: string]: boolean} = {};\nconst set = (elem: HTMLElement | HTMLImageElement | SVGImageElement | HTMLVideoElement, url: string) => {\n  if(elem instanceof HTMLImageElement || elem instanceof HTMLVideoElement) elem.src = url;\n  else if(elem instanceof SVGImageElement) elem.setAttributeNS(null, 'href', url);\n  else elem.style.backgroundImage = 'url(' + url + ')';\n};\n\n// проблема функции в том, что она не подходит для ссылок, пригодна только для blob'ов, потому что обычным ссылкам нужен 'load' каждый раз.\nexport default async function renderImageFromUrl(elem: HTMLElement | HTMLImageElement | SVGImageElement | HTMLVideoElement, url: string, callback?: (err?: Event) => void, useCache = true) {\n  if(!url) {\n    console.error('renderImageFromUrl: no url?', elem, url);\n    callback && callback();\n    return;\n  }\n\n  if(((loadedURLs[url]/*  && false */) && useCache) || elem instanceof HTMLVideoElement) {\n    if(elem) {\n      set(elem, url);\n    }\n    \n    callback && callback();\n  } else {\n    const isImage = elem instanceof HTMLImageElement;\n    const loader = isImage ? elem as HTMLImageElement : new Image();\n    //const loader = new Image();\n    loader.src = url;\n    //let perf = performance.now();\n    loader.addEventListener('load', () => {\n      if(!isImage && elem) {\n        set(elem, url);\n      }\n\n      loadedURLs[url] = true;\n      //console.log('onload:', url, performance.now() - perf);\n      if(callback) {\n        // TODO: переделать прогрузки аватаров до начала анимации, иначе с этим ожиданием они неприятно появляются\n        /* getHeavyAnimationPromise().then(() => {\n          callback();\n        }); */\n        callback();\n      }\n\n      //callback && callback();\n    });\n\n    if(callback) {\n      loader.addEventListener('error', callback);\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"./config/debug\";\n\nexport type Country = {\n  phoneCode: string,\n  code: string,\n  name: string,\n  pattern: string,\n  emoji: string\n};\n\nconst Countries: Country[] = [{\"phoneCode\":\"7 840\",\"code\":\"AB\",\"name\":\"Abkhazia\",\"pattern\":\"\",\"emoji\":\"\"},{\"phoneCode\":\"93\",\"code\":\"AF\",\"name\":\"Afghanistan\",\"pattern\":\"93 XXX XXX XXX\",\"emoji\":\"🇦🇫\"},{\"phoneCode\":\"358 18\",\"code\":\"AX\",\"name\":\"Aland Islands\",\"pattern\":\"\",\"emoji\":\"🇦🇽\"},{\"phoneCode\":\"355\",\"code\":\"AL\",\"name\":\"Albania\",\"pattern\":\"355 XX XXX XXXX\",\"emoji\":\"🇦🇱\"},{\"phoneCode\":\"213\",\"code\":\"DZ\",\"name\":\"Algeria\",\"pattern\":\"213 XXX XX XX XX\",\"emoji\":\"🇩🇿\"},{\"phoneCode\":\"1 684\",\"code\":\"AS\",\"name\":\"American Samoa\",\"pattern\":\"1684 XXX XXXX\",\"emoji\":\"🇦🇸\"},{\"phoneCode\":\"376\",\"code\":\"AD\",\"name\":\"Andorra\",\"pattern\":\"376 XX XX XX\",\"emoji\":\"🇦🇩\"},{\"phoneCode\":\"244\",\"code\":\"AO\",\"name\":\"Angola\",\"pattern\":\"244 XXX XXX XXX\",\"emoji\":\"🇦🇴\"},{\"phoneCode\":\"1 264\",\"code\":\"AI\",\"name\":\"Anguilla\",\"pattern\":\"1264 XXX XXXX\",\"emoji\":\"🇦🇮\"},{\"phoneCode\":\"1 268\",\"code\":\"AG\",\"name\":\"Antigua & Barbuda\",\"pattern\":\"1268 XXX XXXX\",\"emoji\":\"🇦🇬\"},{\"phoneCode\":\"54\",\"code\":\"AR\",\"name\":\"Argentina\",\"pattern\":\"\",\"emoji\":\"🇦🇷\"},{\"phoneCode\":\"374\",\"code\":\"AM\",\"name\":\"Armenia\",\"pattern\":\"374 XX XXX XXX\",\"emoji\":\"🇦🇲\"},{\"phoneCode\":\"297\",\"code\":\"AW\",\"name\":\"Aruba\",\"pattern\":\"297 XXX XXXX\",\"emoji\":\"🇦🇼\"},{\"phoneCode\":\"247\",\"code\":\"SH\",\"name\":\"Ascension\",\"pattern\":\"290 XX XXX\",\"emoji\":\"🇸🇭\"},{\"phoneCode\":\"61\",\"code\":\"AU\",\"name\":\"Australia\",\"pattern\":\"61 XXX XXX XXX\",\"emoji\":\"🇦🇺\"},{\"phoneCode\":\"672\",\"code\":\"AU\",\"name\":\"Australian External Territories\",\"pattern\":\"61 XXX XXX XXX\",\"emoji\":\"🇦🇺\"},{\"phoneCode\":\"43\",\"code\":\"AT\",\"name\":\"Austria\",\"pattern\":\"\",\"emoji\":\"🇦🇹\"},{\"phoneCode\":\"994\",\"code\":\"AZ\",\"name\":\"Azerbaijan\",\"pattern\":\"994 XX XXX XX XX\",\"emoji\":\"🇦🇿\"},{\"phoneCode\":\"1 242\",\"code\":\"BS\",\"name\":\"Bahamas\",\"pattern\":\"1242 XXX XXXX\",\"emoji\":\"🇧🇸\"},{\"phoneCode\":\"973\",\"code\":\"BH\",\"name\":\"Bahrain\",\"pattern\":\"973 XXXX XXXX\",\"emoji\":\"🇧🇭\"},{\"phoneCode\":\"880\",\"code\":\"BD\",\"name\":\"Bangladesh\",\"pattern\":\"\",\"emoji\":\"🇧🇩\"},{\"phoneCode\":\"1 246\",\"code\":\"BB\",\"name\":\"Barbados\",\"pattern\":\"1246 XXX XXXX\",\"emoji\":\"🇧🇧\"},{\"phoneCode\":\"1 268\",\"code\":\"AG\",\"name\":\"Barbuda\",\"pattern\":\"1268 XXX XXXX\",\"emoji\":\"🇦🇬\"},{\"phoneCode\":\"375\",\"code\":\"BY\",\"name\":\"Belarus\",\"pattern\":\"375 XX XXX XXXX\",\"emoji\":\"🇧🇾\"},{\"phoneCode\":\"32\",\"code\":\"BE\",\"name\":\"Belgium\",\"pattern\":\"32 XXX XX XX XX\",\"emoji\":\"🇧🇪\"},{\"phoneCode\":\"501\",\"code\":\"BZ\",\"name\":\"Belize\",\"pattern\":\"\",\"emoji\":\"🇧🇿\"},{\"phoneCode\":\"229\",\"code\":\"BJ\",\"name\":\"Benin\",\"pattern\":\"229 XX XXX XXX\",\"emoji\":\"🇧🇯\"},{\"phoneCode\":\"1 441\",\"code\":\"BM\",\"name\":\"Bermuda\",\"pattern\":\"1441 XXX XXXX\",\"emoji\":\"🇧🇲\"},{\"phoneCode\":\"975\",\"code\":\"BT\",\"name\":\"Bhutan\",\"pattern\":\"\",\"emoji\":\"🇧🇹\"},{\"phoneCode\":\"591\",\"code\":\"BO\",\"name\":\"Bolivia\",\"pattern\":\"591 X XXX XXXX\",\"emoji\":\"🇧🇴\"},{\"phoneCode\":\"599 7\",\"code\":\"BQ\",\"name\":\"Caribbean Netherlands\",\"pattern\":\"\",\"emoji\":\"🇧🇶\"},{\"phoneCode\":\"387\",\"code\":\"BA\",\"name\":\"Bosnia & Herzegovina\",\"pattern\":\"\",\"emoji\":\"🇧🇦\"},{\"phoneCode\":\"267\",\"code\":\"BW\",\"name\":\"Botswana\",\"pattern\":\"267 XX XXX XXX\",\"emoji\":\"🇧🇼\"},{\"phoneCode\":\"55\",\"code\":\"BR\",\"name\":\"Brazil\",\"pattern\":\"55 XX XXXXX XXXX\",\"emoji\":\"🇧🇷\"},{\"phoneCode\":\"246\",\"code\":\"IO\",\"name\":\"British Indian Ocean Territory\",\"pattern\":\"246 XXX XXXX\",\"emoji\":\"🇮🇴\"},{\"phoneCode\":\"1 284\",\"code\":\"VG\",\"name\":\"British Virgin Islands\",\"pattern\":\"1284 XXX XXXX\",\"emoji\":\"🇻🇬\"},{\"phoneCode\":\"673\",\"code\":\"BN\",\"name\":\"Brunei\",\"pattern\":\"673 XXX XXXX\",\"emoji\":\"🇧🇳\"},{\"phoneCode\":\"359\",\"code\":\"BG\",\"name\":\"Bulgaria\",\"pattern\":\"\",\"emoji\":\"🇧🇬\"},{\"phoneCode\":\"226\",\"code\":\"BF\",\"name\":\"Burkina Faso\",\"pattern\":\"226 XX XX XX XX\",\"emoji\":\"🇧🇫\"},{\"phoneCode\":\"95\",\"code\":\"MM\",\"name\":\"Myanmar (Burma)\",\"pattern\":\"\",\"emoji\":\"🇲🇲\"},{\"phoneCode\":\"257\",\"code\":\"BI\",\"name\":\"Burundi\",\"pattern\":\"257 XX XX XXXX\",\"emoji\":\"🇧🇮\"},{\"phoneCode\":\"855\",\"code\":\"KH\",\"name\":\"Cambodia\",\"pattern\":\"\",\"emoji\":\"🇰🇭\"},{\"phoneCode\":\"237\",\"code\":\"CM\",\"name\":\"Cameroon\",\"pattern\":\"237 XXXX XXXX\",\"emoji\":\"🇨🇲\"},{\"phoneCode\":\"1\",\"code\":\"CA\",\"name\":\"Canada\",\"pattern\":\"1 XXX XXX XXXX\",\"emoji\":\"🇨🇦\"},{\"phoneCode\":\"238\",\"code\":\"CV\",\"name\":\"Cape Verde\",\"pattern\":\"238 XXX XXXX\",\"emoji\":\"🇨🇻\"},{\"phoneCode\":\"1 345\",\"code\":\"KY\",\"name\":\"Cayman Islands\",\"pattern\":\"1345 XXX XXXX\",\"emoji\":\"🇰🇾\"},{\"phoneCode\":\"236\",\"code\":\"CF\",\"name\":\"Central African Republic\",\"pattern\":\"236 XX XX XX XX\",\"emoji\":\"🇨🇫\"},{\"phoneCode\":\"235\",\"code\":\"TD\",\"name\":\"Chad\",\"pattern\":\"235 XX XX XX XX\",\"emoji\":\"🇹🇩\"},{\"phoneCode\":\"56\",\"code\":\"CL\",\"name\":\"Chile\",\"pattern\":\"56 X XXXX XXXX\",\"emoji\":\"🇨🇱\"},{\"phoneCode\":\"86\",\"code\":\"CN\",\"name\":\"China\",\"pattern\":\"86 XXX XXXX XXXX\",\"emoji\":\"🇨🇳\"},{\"phoneCode\":\"61\",\"code\":\"CX\",\"name\":\"Christmas Island\",\"pattern\":\"\",\"emoji\":\"🇨🇽\"},{\"phoneCode\":\"61\",\"code\":\"CC\",\"name\":\"Cocos (Keeling) Islands\",\"pattern\":\"\",\"emoji\":\"🇨🇨\"},{\"phoneCode\":\"57\",\"code\":\"CO\",\"name\":\"Colombia\",\"pattern\":\"57 XXX XXX XXXX\",\"emoji\":\"🇨🇴\"},{\"phoneCode\":\"269\",\"code\":\"KM\",\"name\":\"Comoros\",\"pattern\":\"269 XXX XXXX\",\"emoji\":\"🇰🇲\"},{\"phoneCode\":\"242\",\"code\":\"CG\",\"name\":\"Congo - Brazzaville\",\"pattern\":\"242 XX XXX XXXX\",\"emoji\":\"🇨🇬\"},{\"phoneCode\":\"243\",\"code\":\"CD\",\"name\":\"Congo - Kinshasa\",\"pattern\":\"243 XX XXX XXXX\",\"emoji\":\"🇨🇩\"},{\"phoneCode\":\"682\",\"code\":\"CK\",\"name\":\"Cook Islands\",\"pattern\":\"\",\"emoji\":\"🇨🇰\"},{\"phoneCode\":\"506\",\"code\":\"CR\",\"name\":\"Costa Rica\",\"pattern\":\"\",\"emoji\":\"🇨🇷\"},{\"phoneCode\":\"225\",\"code\":\"CI\",\"name\":\"Cote d’Ivoire\",\"pattern\":\"225 XX XXX XXX\",\"emoji\":\"🇨🇮\"},{\"phoneCode\":\"385\",\"code\":\"HR\",\"name\":\"Croatia\",\"pattern\":\"\",\"emoji\":\"🇭🇷\"},{\"phoneCode\":\"53\",\"code\":\"CU\",\"name\":\"Cuba\",\"pattern\":\"53 XXXX XXXX\",\"emoji\":\"🇨🇺\"},{\"phoneCode\":\"599 9\",\"code\":\"CW\",\"name\":\"Curacao\",\"pattern\":\"\",\"emoji\":\"🇨🇼\"},{\"phoneCode\":\"357\",\"code\":\"CY\",\"name\":\"Cyprus\",\"pattern\":\"357 XXXX XXXX\",\"emoji\":\"🇨🇾\"},{\"phoneCode\":\"420\",\"code\":\"CZ\",\"name\":\"Czech Republic\",\"pattern\":\"\",\"emoji\":\"🇨🇿\"},{\"phoneCode\":\"45\",\"code\":\"DK\",\"name\":\"Denmark\",\"pattern\":\"45 XXXX XXXX\",\"emoji\":\"🇩🇰\"},{\"phoneCode\":\"246\",\"code\":\"DG\",\"name\":\"Diego Garcia\",\"pattern\":\"\",\"emoji\":\"🇩🇬\"},{\"phoneCode\":\"253\",\"code\":\"DJ\",\"name\":\"Djibouti\",\"pattern\":\"253 XX XX XX XX\",\"emoji\":\"🇩🇯\"},{\"phoneCode\":\"1 767\",\"code\":\"DM\",\"name\":\"Dominica\",\"pattern\":\"1767 XXX XXXX\",\"emoji\":\"🇩🇲\"},{\"phoneCode\":\"1 809 and 1 829\",\"code\":\"DO\",\"name\":\"Dominican Republic\",\"pattern\":\"1 XXX XXX XXXX\",\"emoji\":\"🇩🇴\"},{\"phoneCode\":\"670\",\"code\":\"TL\",\"name\":\"Timor-Leste\",\"pattern\":\"\",\"emoji\":\"🇹🇱\"},{\"phoneCode\":\"593\",\"code\":\"EC\",\"name\":\"Ecuador\",\"pattern\":\"\",\"emoji\":\"🇪🇨\"},{\"phoneCode\":\"20\",\"code\":\"EG\",\"name\":\"Egypt\",\"pattern\":\"20 XX XXX XXXX\",\"emoji\":\"🇪🇬\"},{\"phoneCode\":\"503\",\"code\":\"SV\",\"name\":\"El Salvador\",\"pattern\":\"503 XXXX XXXX\",\"emoji\":\"🇸🇻\"},{\"phoneCode\":\"240\",\"code\":\"GQ\",\"name\":\"Equatorial Guinea\",\"pattern\":\"240 XXX XXX XXX\",\"emoji\":\"🇬🇶\"},{\"phoneCode\":\"291\",\"code\":\"ER\",\"name\":\"Eritrea\",\"pattern\":\"291 X XXX XXX\",\"emoji\":\"🇪🇷\"},{\"phoneCode\":\"372\",\"code\":\"EE\",\"name\":\"Estonia\",\"pattern\":\"\",\"emoji\":\"🇪🇪\"},{\"phoneCode\":\"251\",\"code\":\"ET\",\"name\":\"Ethiopia\",\"pattern\":\"251 XX XXX XXXX\",\"emoji\":\"🇪🇹\"},{\"phoneCode\":\"500\",\"code\":\"FK\",\"name\":\"Falkland Islands\",\"pattern\":\"\",\"emoji\":\"🇫🇰\"},{\"phoneCode\":\"298\",\"code\":\"FO\",\"name\":\"Faroe Islands\",\"pattern\":\"298 XXX XXX\",\"emoji\":\"🇫🇴\"},{\"phoneCode\":\"679\",\"code\":\"FJ\",\"name\":\"Fiji\",\"pattern\":\"\",\"emoji\":\"🇫🇯\"},{\"phoneCode\":\"358\",\"code\":\"FI\",\"name\":\"Finland\",\"pattern\":\"\",\"emoji\":\"🇫🇮\"},{\"phoneCode\":\"33\",\"code\":\"FR\",\"name\":\"France\",\"pattern\":\"33 X XX XX XX XX\",\"emoji\":\"🇫🇷\"},{\"phoneCode\":\"594\",\"code\":\"GF\",\"name\":\"French Guiana\",\"pattern\":\"\",\"emoji\":\"🇬🇫\"},{\"phoneCode\":\"689\",\"code\":\"PF\",\"name\":\"French Polynesia\",\"pattern\":\"\",\"emoji\":\"🇵🇫\"},{\"phoneCode\":\"241\",\"code\":\"GA\",\"name\":\"Gabon\",\"pattern\":\"241 X XX XX XX\",\"emoji\":\"🇬🇦\"},{\"phoneCode\":\"220\",\"code\":\"GM\",\"name\":\"Gambia\",\"pattern\":\"220 XXX XXXX\",\"emoji\":\"🇬🇲\"},{\"phoneCode\":\"995\",\"code\":\"GE\",\"name\":\"Georgia\",\"pattern\":\"\",\"emoji\":\"🇬🇪\"},{\"phoneCode\":\"49\",\"code\":\"DE\",\"name\":\"Germany\",\"pattern\":\"49 XXX XXXXXXXX\",\"emoji\":\"🇩🇪\"},{\"phoneCode\":\"233\",\"code\":\"GH\",\"name\":\"Ghana\",\"pattern\":\"\",\"emoji\":\"🇬🇭\"},{\"phoneCode\":\"350\",\"code\":\"GI\",\"name\":\"Gibraltar\",\"pattern\":\"350 XXXX XXXX\",\"emoji\":\"🇬🇮\"},{\"phoneCode\":\"30\",\"code\":\"GR\",\"name\":\"Greece\",\"pattern\":\"30 XX XXXX XXXX\",\"emoji\":\"🇬🇷\"},{\"phoneCode\":\"299\",\"code\":\"GL\",\"name\":\"Greenland\",\"pattern\":\"299 XXX XXX\",\"emoji\":\"🇬🇱\"},{\"phoneCode\":\"1 473\",\"code\":\"GD\",\"name\":\"Grenada\",\"pattern\":\"1473 XXX XXXX\",\"emoji\":\"🇬🇩\"},{\"phoneCode\":\"590\",\"code\":\"GP\",\"name\":\"Guadeloupe\",\"pattern\":\"\",\"emoji\":\"🇬🇵\"},{\"phoneCode\":\"1 671\",\"code\":\"GU\",\"name\":\"Guam\",\"pattern\":\"1671 XXX XXXX\",\"emoji\":\"🇬🇺\"},{\"phoneCode\":\"502\",\"code\":\"GT\",\"name\":\"Guatemala\",\"pattern\":\"502 X XXX XXXX\",\"emoji\":\"🇬🇹\"},{\"phoneCode\":\"44\",\"code\":\"GG\",\"name\":\"Guernsey\",\"pattern\":\"\",\"emoji\":\"🇬🇬\"},{\"phoneCode\":\"224\",\"code\":\"GN\",\"name\":\"Guinea\",\"pattern\":\"224 XXX XXX XXX\",\"emoji\":\"🇬🇳\"},{\"phoneCode\":\"245\",\"code\":\"GW\",\"name\":\"Guinea-Bissau\",\"pattern\":\"245 XXX XXXX\",\"emoji\":\"🇬🇼\"},{\"phoneCode\":\"592\",\"code\":\"GY\",\"name\":\"Guyana\",\"pattern\":\"\",\"emoji\":\"🇬🇾\"},{\"phoneCode\":\"509\",\"code\":\"HT\",\"name\":\"Haiti\",\"pattern\":\"\",\"emoji\":\"🇭🇹\"},{\"phoneCode\":\"504\",\"code\":\"HN\",\"name\":\"Honduras\",\"pattern\":\"504 XXXX XXXX\",\"emoji\":\"🇭🇳\"},{\"phoneCode\":\"852\",\"code\":\"HK\",\"name\":\"Hong Kong SAR China\",\"pattern\":\"\",\"emoji\":\"🇭🇰\"},{\"phoneCode\":\"36\",\"code\":\"HU\",\"name\":\"Hungary\",\"pattern\":\"36 XX XXX XXXX\",\"emoji\":\"🇭🇺\"},{\"phoneCode\":\"354\",\"code\":\"IS\",\"name\":\"Iceland\",\"pattern\":\"354 XXX XXXX\",\"emoji\":\"🇮🇸\"},{\"phoneCode\":\"91\",\"code\":\"IN\",\"name\":\"India\",\"pattern\":\"91 XXXXX XXXXX\",\"emoji\":\"🇮🇳\"},{\"phoneCode\":\"62\",\"code\":\"ID\",\"name\":\"Indonesia\",\"pattern\":\"\",\"emoji\":\"🇮🇩\"},{\"phoneCode\":\"98\",\"code\":\"IR\",\"name\":\"Iran\",\"pattern\":\"98 XXX XXX XXXX\",\"emoji\":\"🇮🇷\"},{\"phoneCode\":\"964\",\"code\":\"IQ\",\"name\":\"Iraq\",\"pattern\":\"964 XXX XXX XXXX\",\"emoji\":\"🇮🇶\"},{\"phoneCode\":\"353\",\"code\":\"IE\",\"name\":\"Ireland\",\"pattern\":\"353 XX XXX XXXX\",\"emoji\":\"🇮🇪\"},{\"phoneCode\":\"972\",\"code\":\"IL\",\"name\":\"Israel\",\"pattern\":\"972 XX XXX XXXX\",\"emoji\":\"🇮🇱\"},{\"phoneCode\":\"39\",\"code\":\"IT\",\"name\":\"Italy\",\"pattern\":\"39 XXX XXX XXXX\",\"emoji\":\"🇮🇹\"},{\"phoneCode\":\"1 876\",\"code\":\"JM\",\"name\":\"Jamaica\",\"pattern\":\"1876 XXX XXXX\",\"emoji\":\"🇯🇲\"},{\"phoneCode\":\"47 79\",\"code\":\"SJ\",\"name\":\"Svalbard & Jan Mayen\",\"pattern\":\"\",\"emoji\":\"🇸🇯\"},{\"phoneCode\":\"81\",\"code\":\"JP\",\"name\":\"Japan\",\"pattern\":\"81 XX XXXX XXXX\",\"emoji\":\"🇯🇵\"},{\"phoneCode\":\"44\",\"code\":\"JE\",\"name\":\"Jersey\",\"pattern\":\"\",\"emoji\":\"🇯🇪\"},{\"phoneCode\":\"962\",\"code\":\"JO\",\"name\":\"Jordan\",\"pattern\":\"962 X XXXX XXXX\",\"emoji\":\"🇯🇴\"},{\"phoneCode\":\"7 7\",\"code\":\"KZ\",\"name\":\"Kazakhstan\",\"pattern\":\"7 XXX XXX XX XX\",\"emoji\":\"🇰🇿\"},{\"phoneCode\":\"254\",\"code\":\"KE\",\"name\":\"Kenya\",\"pattern\":\"254 XXX XXX XXX\",\"emoji\":\"🇰🇪\"},{\"phoneCode\":\"686\",\"code\":\"KI\",\"name\":\"Kiribati\",\"pattern\":\"\",\"emoji\":\"🇰🇮\"},{\"phoneCode\":\"850\",\"code\":\"KP\",\"name\":\"North Korea\",\"pattern\":\"\",\"emoji\":\"🇰🇵\"},{\"phoneCode\":\"82\",\"code\":\"KR\",\"name\":\"South Korea\",\"pattern\":\"\",\"emoji\":\"🇰🇷\"},{\"phoneCode\":\"965\",\"code\":\"KW\",\"name\":\"Kuwait\",\"pattern\":\"965 XXXX XXXX\",\"emoji\":\"🇰🇼\"},{\"phoneCode\":\"996\",\"code\":\"KG\",\"name\":\"Kyrgyzstan\",\"pattern\":\"\",\"emoji\":\"🇰🇬\"},{\"phoneCode\":\"856\",\"code\":\"LA\",\"name\":\"Laos\",\"pattern\":\"\",\"emoji\":\"🇱🇦\"},{\"phoneCode\":\"371\",\"code\":\"LV\",\"name\":\"Latvia\",\"pattern\":\"371 XXX XXXXX\",\"emoji\":\"🇱🇻\"},{\"phoneCode\":\"961\",\"code\":\"LB\",\"name\":\"Lebanon\",\"pattern\":\"\",\"emoji\":\"🇱🇧\"},{\"phoneCode\":\"266\",\"code\":\"LS\",\"name\":\"Lesotho\",\"pattern\":\"266 XX XXX XXX\",\"emoji\":\"🇱🇸\"},{\"phoneCode\":\"231\",\"code\":\"LR\",\"name\":\"Liberia\",\"pattern\":\"\",\"emoji\":\"🇱🇷\"},{\"phoneCode\":\"218\",\"code\":\"LY\",\"name\":\"Libya\",\"pattern\":\"218 XX XXX XXXX\",\"emoji\":\"🇱🇾\"},{\"phoneCode\":\"423\",\"code\":\"LI\",\"name\":\"Liechtenstein\",\"pattern\":\"\",\"emoji\":\"🇱🇮\"},{\"phoneCode\":\"370\",\"code\":\"LT\",\"name\":\"Lithuania\",\"pattern\":\"370 XXX XXXXX\",\"emoji\":\"🇱🇹\"},{\"phoneCode\":\"352\",\"code\":\"LU\",\"name\":\"Luxembourg\",\"pattern\":\"\",\"emoji\":\"🇱🇺\"},{\"phoneCode\":\"853\",\"code\":\"MO\",\"name\":\"Macau SAR China\",\"pattern\":\"\",\"emoji\":\"🇲🇴\"},{\"phoneCode\":\"389\",\"code\":\"MK\",\"name\":\"Macedonia\",\"pattern\":\"\",\"emoji\":\"🇲🇰\"},{\"phoneCode\":\"261\",\"code\":\"MG\",\"name\":\"Madagascar\",\"pattern\":\"261 XX XX XXX XX\",\"emoji\":\"🇲🇬\"},{\"phoneCode\":\"265\",\"code\":\"MW\",\"name\":\"Malawi\",\"pattern\":\"\",\"emoji\":\"🇲🇼\"},{\"phoneCode\":\"60\",\"code\":\"MY\",\"name\":\"Malaysia\",\"pattern\":\"\",\"emoji\":\"🇲🇾\"},{\"phoneCode\":\"960\",\"code\":\"MV\",\"name\":\"Maldives\",\"pattern\":\"\",\"emoji\":\"🇲🇻\"},{\"phoneCode\":\"223\",\"code\":\"ML\",\"name\":\"Mali\",\"pattern\":\"223 XXXX XXXX\",\"emoji\":\"🇲🇱\"},{\"phoneCode\":\"356\",\"code\":\"MT\",\"name\":\"Malta\",\"pattern\":\"356 XX XX XX XX\",\"emoji\":\"🇲🇹\"},{\"phoneCode\":\"692\",\"code\":\"MH\",\"name\":\"Marshall Islands\",\"pattern\":\"\",\"emoji\":\"🇲🇭\"},{\"phoneCode\":\"596\",\"code\":\"MQ\",\"name\":\"Martinique\",\"pattern\":\"\",\"emoji\":\"🇲🇶\"},{\"phoneCode\":\"222\",\"code\":\"MR\",\"name\":\"Mauritania\",\"pattern\":\"222 XXXX XXXX\",\"emoji\":\"🇲🇷\"},{\"phoneCode\":\"230\",\"code\":\"MU\",\"name\":\"Mauritius\",\"pattern\":\"\",\"emoji\":\"🇲🇺\"},{\"phoneCode\":\"262\",\"code\":\"YT\",\"name\":\"Mayotte\",\"pattern\":\"\",\"emoji\":\"🇾🇹\"},{\"phoneCode\":\"52\",\"code\":\"MX\",\"name\":\"Mexico\",\"pattern\":\"\",\"emoji\":\"🇲🇽\"},{\"phoneCode\":\"691\",\"code\":\"FM\",\"name\":\"Micronesia\",\"pattern\":\"\",\"emoji\":\"🇫🇲\"},{\"phoneCode\":\"373\",\"code\":\"MD\",\"name\":\"Moldova\",\"pattern\":\"373 XX XXX XXX\",\"emoji\":\"🇲🇩\"},{\"phoneCode\":\"377\",\"code\":\"MC\",\"name\":\"Monaco\",\"pattern\":\"377 XXXX XXXX\",\"emoji\":\"🇲🇨\"},{\"phoneCode\":\"976\",\"code\":\"MN\",\"name\":\"Mongolia\",\"pattern\":\"\",\"emoji\":\"🇲🇳\"},{\"phoneCode\":\"382\",\"code\":\"ME\",\"name\":\"Montenegro\",\"pattern\":\"\",\"emoji\":\"🇲🇪\"},{\"phoneCode\":\"1 664\",\"code\":\"MS\",\"name\":\"Montserrat\",\"pattern\":\"1664 XXX XXXX\",\"emoji\":\"🇲🇸\"},{\"phoneCode\":\"212\",\"code\":\"MA\",\"name\":\"Morocco\",\"pattern\":\"212 XX XXX XXXX\",\"emoji\":\"🇲🇦\"},{\"phoneCode\":\"258\",\"code\":\"MZ\",\"name\":\"Mozambique\",\"pattern\":\"258 XX XXX XXXX\",\"emoji\":\"🇲🇿\"},{\"phoneCode\":\"264\",\"code\":\"NA\",\"name\":\"Namibia\",\"pattern\":\"264 XX XXX XXXX\",\"emoji\":\"🇳🇦\"},{\"phoneCode\":\"674\",\"code\":\"NR\",\"name\":\"Nauru\",\"pattern\":\"\",\"emoji\":\"🇳🇷\"},{\"phoneCode\":\"977\",\"code\":\"NP\",\"name\":\"Nepal\",\"pattern\":\"\",\"emoji\":\"🇳🇵\"},{\"phoneCode\":\"31\",\"code\":\"NL\",\"name\":\"Netherlands\",\"pattern\":\"31 X XX XX XX XX\",\"emoji\":\"🇳🇱\"},{\"phoneCode\":\"687\",\"code\":\"NC\",\"name\":\"New Caledonia\",\"pattern\":\"\",\"emoji\":\"🇳🇨\"},{\"phoneCode\":\"64\",\"code\":\"NZ\",\"name\":\"New Zealand\",\"pattern\":\"\",\"emoji\":\"🇳🇿\"},{\"phoneCode\":\"505\",\"code\":\"NI\",\"name\":\"Nicaragua\",\"pattern\":\"505 XXXX XXXX\",\"emoji\":\"🇳🇮\"},{\"phoneCode\":\"227\",\"code\":\"NE\",\"name\":\"Niger\",\"pattern\":\"227 XX XX XX XX\",\"emoji\":\"🇳🇪\"},{\"phoneCode\":\"234\",\"code\":\"NG\",\"name\":\"Nigeria\",\"pattern\":\"\",\"emoji\":\"🇳🇬\"},{\"phoneCode\":\"683\",\"code\":\"NU\",\"name\":\"Niue\",\"pattern\":\"\",\"emoji\":\"🇳🇺\"},{\"phoneCode\":\"672\",\"code\":\"NF\",\"name\":\"Norfolk Island\",\"pattern\":\"\",\"emoji\":\"🇳🇫\"},{\"phoneCode\":\"1 670\",\"code\":\"MP\",\"name\":\"Northern Mariana Islands\",\"pattern\":\"1670 XXX XXXX\",\"emoji\":\"🇲🇵\"},{\"phoneCode\":\"47\",\"code\":\"NO\",\"name\":\"Norway\",\"pattern\":\"47 XXXX XXXX\",\"emoji\":\"🇳🇴\"},{\"phoneCode\":\"968\",\"code\":\"OM\",\"name\":\"Oman\",\"pattern\":\"968 XXXX XXXX\",\"emoji\":\"🇴🇲\"},{\"phoneCode\":\"92\",\"code\":\"PK\",\"name\":\"Pakistan\",\"pattern\":\"92 XXX XXX XXXX\",\"emoji\":\"🇵🇰\"},{\"phoneCode\":\"680\",\"code\":\"PW\",\"name\":\"Palau\",\"pattern\":\"\",\"emoji\":\"🇵🇼\"},{\"phoneCode\":\"970\",\"code\":\"PS\",\"name\":\"Palestinian Territories\",\"pattern\":\"970 XXX XX XXXX\",\"emoji\":\"🇵🇸\"},{\"phoneCode\":\"507\",\"code\":\"PA\",\"name\":\"Panama\",\"pattern\":\"507 XXXX XXXX\",\"emoji\":\"🇵🇦\"},{\"phoneCode\":\"675\",\"code\":\"PG\",\"name\":\"Papua New Guinea\",\"pattern\":\"\",\"emoji\":\"🇵🇬\"},{\"phoneCode\":\"595\",\"code\":\"PY\",\"name\":\"Paraguay\",\"pattern\":\"595 XXX XXX XXX\",\"emoji\":\"🇵🇾\"},{\"phoneCode\":\"51\",\"code\":\"PE\",\"name\":\"Peru\",\"pattern\":\"51 XXX XXX XXX\",\"emoji\":\"🇵🇪\"},{\"phoneCode\":\"63\",\"code\":\"PH\",\"name\":\"Philippines\",\"pattern\":\"63 XXX XXX XXXX\",\"emoji\":\"🇵🇭\"},{\"phoneCode\":\"64\",\"code\":\"PN\",\"name\":\"Pitcairn Islands\",\"pattern\":\"\",\"emoji\":\"🇵🇳\"},{\"phoneCode\":\"48\",\"code\":\"PL\",\"name\":\"Poland\",\"pattern\":\"48 XXX XXX XXX\",\"emoji\":\"🇵🇱\"},{\"phoneCode\":\"351\",\"code\":\"PT\",\"name\":\"Portugal\",\"pattern\":\"351 X XXXX XXXX\",\"emoji\":\"🇵🇹\"},{\"phoneCode\":\"1 787 and 1 939\",\"code\":\"PR\",\"name\":\"Puerto Rico\",\"pattern\":\"1 XXX XXX XXXX\",\"emoji\":\"🇵🇷\"},{\"phoneCode\":\"974\",\"code\":\"QA\",\"name\":\"Qatar\",\"pattern\":\"\",\"emoji\":\"🇶🇦\"},{\"phoneCode\":\"262\",\"code\":\"RE\",\"name\":\"Reunion\",\"pattern\":\"262 XXX XXX XXX\",\"emoji\":\"🇷🇪\"},{\"phoneCode\":\"40\",\"code\":\"RO\",\"name\":\"Romania\",\"pattern\":\"40 XXX XXX XXX\",\"emoji\":\"🇷🇴\"},{\"phoneCode\":\"7\",\"code\":\"RU\",\"name\":\"Russia\",\"pattern\":\"7 XXX XXX XX XX\",\"emoji\":\"🇷🇺\"},{\"phoneCode\":\"250\",\"code\":\"RW\",\"name\":\"Rwanda\",\"pattern\":\"250 XXX XXX XXX\",\"emoji\":\"🇷🇼\"},{\"phoneCode\":\"590\",\"code\":\"BL\",\"name\":\"St. Barthelemy\",\"pattern\":\"\",\"emoji\":\"🇧🇱\"},{\"phoneCode\":\"290\",\"code\":\"SH\",\"name\":\"St. Helena\",\"pattern\":\"290 XX XXX\",\"emoji\":\"🇸🇭\"},{\"phoneCode\":\"1 869\",\"code\":\"KN\",\"name\":\"St. Kitts & Nevis\",\"pattern\":\"1869 XXX XXXX\",\"emoji\":\"🇰🇳\"},{\"phoneCode\":\"1 758\",\"code\":\"LC\",\"name\":\"St. Lucia\",\"pattern\":\"1758 XXX XXXX\",\"emoji\":\"🇱🇨\"},{\"phoneCode\":\"590\",\"code\":\"MF\",\"name\":\"St. Martin (France)\",\"pattern\":\"\",\"emoji\":\"🇲🇫\"},{\"phoneCode\":\"508\",\"code\":\"PM\",\"name\":\"St. Pierre and Miquelon\",\"pattern\":\"\",\"emoji\":\"🇵🇲\"},{\"phoneCode\":\"1 784\",\"code\":\"VC\",\"name\":\"St. Vincent and the Grenadines\",\"pattern\":\"1784 XXX XXXX\",\"emoji\":\"🇻🇨\"},{\"phoneCode\":\"685\",\"code\":\"WS\",\"name\":\"Samoa\",\"pattern\":\"\",\"emoji\":\"🇼🇸\"},{\"phoneCode\":\"378\",\"code\":\"SM\",\"name\":\"San Marino\",\"pattern\":\"378 XXX XXX XXXX\",\"emoji\":\"🇸🇲\"},{\"phoneCode\":\"239\",\"code\":\"ST\",\"name\":\"São Tome & Principe\",\"pattern\":\"239 XX XXXXX\",\"emoji\":\"🇸🇹\"},{\"phoneCode\":\"966\",\"code\":\"SA\",\"name\":\"Saudi Arabia\",\"pattern\":\"\",\"emoji\":\"🇸🇦\"},{\"phoneCode\":\"221\",\"code\":\"SN\",\"name\":\"Senegal\",\"pattern\":\"221 XX XXX XXXX\",\"emoji\":\"🇸🇳\"},{\"phoneCode\":\"381\",\"code\":\"RS\",\"name\":\"Serbia\",\"pattern\":\"381 XX XXX XXXX\",\"emoji\":\"🇷🇸\"},{\"phoneCode\":\"248\",\"code\":\"SC\",\"name\":\"Seychelles\",\"pattern\":\"248 X XX XX XX\",\"emoji\":\"🇸🇨\"},{\"phoneCode\":\"232\",\"code\":\"SL\",\"name\":\"Sierra Leone\",\"pattern\":\"232 XX XXX XXX\",\"emoji\":\"🇸🇱\"},{\"phoneCode\":\"65\",\"code\":\"SG\",\"name\":\"Singapore\",\"pattern\":\"65 XXXX XXXX\",\"emoji\":\"🇸🇬\"},{\"phoneCode\":\"599 3\",\"code\":\"BQ\",\"name\":\"Sint Eustatius\",\"pattern\":\"\",\"emoji\":\"🇧🇶\"},{\"phoneCode\":\"1 721\",\"code\":\"SX\",\"name\":\"Sint Maarten\",\"pattern\":\"1721 XXX XXXX\",\"emoji\":\"🇸🇽\"},{\"phoneCode\":\"421\",\"code\":\"SK\",\"name\":\"Slovakia\",\"pattern\":\"\",\"emoji\":\"🇸🇰\"},{\"phoneCode\":\"386\",\"code\":\"SI\",\"name\":\"Slovenia\",\"pattern\":\"\",\"emoji\":\"🇸🇮\"},{\"phoneCode\":\"677\",\"code\":\"SB\",\"name\":\"Solomon Islands\",\"pattern\":\"\",\"emoji\":\"🇸🇧\"},{\"phoneCode\":\"252\",\"code\":\"SO\",\"name\":\"Somalia\",\"pattern\":\"252 XX XXX XXX\",\"emoji\":\"🇸🇴\"},{\"phoneCode\":\"27\",\"code\":\"ZA\",\"name\":\"South Africa\",\"pattern\":\"27 XX XXX XXXX\",\"emoji\":\"🇿🇦\"},{\"phoneCode\":\"500\",\"code\":\"GS\",\"name\":\"South Georgia & South Sandwich Islands\",\"pattern\":\"\",\"emoji\":\"🇬🇸\"},{\"phoneCode\":\"995 34\",\"code\":\"\",\"name\":\"South Ossetia\",\"pattern\":\"\",\"emoji\":\"\"},{\"phoneCode\":\"211\",\"code\":\"SS\",\"name\":\"South Sudan\",\"pattern\":\"211 XX XXX XXXX\",\"emoji\":\"🇸🇸\"},{\"phoneCode\":\"34\",\"code\":\"ES\",\"name\":\"Spain\",\"pattern\":\"34 XXX XXX XXX\",\"emoji\":\"🇪🇸\"},{\"phoneCode\":\"94\",\"code\":\"LK\",\"name\":\"Sri Lanka\",\"pattern\":\"94 XX XXX XXXX\",\"emoji\":\"🇱🇰\"},{\"phoneCode\":\"249\",\"code\":\"SD\",\"name\":\"Sudan\",\"pattern\":\"249 XX XXX XXXX\",\"emoji\":\"🇸🇩\"},{\"phoneCode\":\"597\",\"code\":\"SR\",\"name\":\"Suriname\",\"pattern\":\"597 XXX XXXX\",\"emoji\":\"🇸🇷\"},{\"phoneCode\":\"47 79\",\"code\":\"SJ\",\"name\":\"Svalbard\",\"pattern\":\"\",\"emoji\":\"🇸🇯\"},{\"phoneCode\":\"268\",\"code\":\"SZ\",\"name\":\"Swaziland\",\"pattern\":\"268 XXXX XXXX\",\"emoji\":\"🇸🇿\"},{\"phoneCode\":\"46\",\"code\":\"SE\",\"name\":\"Sweden\",\"pattern\":\"46 XX XXX XXXX\",\"emoji\":\"🇸🇪\"},{\"phoneCode\":\"41\",\"code\":\"CH\",\"name\":\"Switzerland\",\"pattern\":\"41 XX XXX XXXX\",\"emoji\":\"🇨🇭\"},{\"phoneCode\":\"963\",\"code\":\"SY\",\"name\":\"Syria\",\"pattern\":\"\",\"emoji\":\"🇸🇾\"},{\"phoneCode\":\"886\",\"code\":\"TW\",\"name\":\"Taiwan\",\"pattern\":\"\",\"emoji\":\"🇹🇼\"},{\"phoneCode\":\"992\",\"code\":\"TJ\",\"name\":\"Tajikistan\",\"pattern\":\"\",\"emoji\":\"🇹🇯\"},{\"phoneCode\":\"255\",\"code\":\"TZ\",\"name\":\"Tanzania\",\"pattern\":\"255 XX XXX XXXX\",\"emoji\":\"🇹🇿\"},{\"phoneCode\":\"66\",\"code\":\"TH\",\"name\":\"Thailand\",\"pattern\":\"66 X XXXX XXXX\",\"emoji\":\"🇹🇭\"},{\"phoneCode\":\"228\",\"code\":\"TG\",\"name\":\"Togo\",\"pattern\":\"228 XX XXX XXX\",\"emoji\":\"🇹🇬\"},{\"phoneCode\":\"690\",\"code\":\"TK\",\"name\":\"Tokelau\",\"pattern\":\"\",\"emoji\":\"🇹🇰\"},{\"phoneCode\":\"676\",\"code\":\"TO\",\"name\":\"Tonga\",\"pattern\":\"\",\"emoji\":\"🇹🇴\"},{\"phoneCode\":\"1 868\",\"code\":\"TT\",\"name\":\"Trinidad & Tobago\",\"pattern\":\"1868 XXX XXXX\",\"emoji\":\"🇹🇹\"},{\"phoneCode\":\"216\",\"code\":\"TN\",\"name\":\"Tunisia\",\"pattern\":\"216 XX XXX XXX\",\"emoji\":\"🇹🇳\"},{\"phoneCode\":\"90\",\"code\":\"TR\",\"name\":\"Turkey\",\"pattern\":\"90 XXX XXX XXXX\",\"emoji\":\"🇹🇷\"},{\"phoneCode\":\"993\",\"code\":\"TM\",\"name\":\"Turkmenistan\",\"pattern\":\"993 XX XXXXXX\",\"emoji\":\"🇹🇲\"},{\"phoneCode\":\"1 649\",\"code\":\"TC\",\"name\":\"Turks & Caicos Islands\",\"pattern\":\"1649 XXX XXXX\",\"emoji\":\"🇹🇨\"},{\"phoneCode\":\"688\",\"code\":\"TV\",\"name\":\"Tuvalu\",\"pattern\":\"\",\"emoji\":\"🇹🇻\"},{\"phoneCode\":\"256\",\"code\":\"UG\",\"name\":\"Uganda\",\"pattern\":\"256 XX XXX XXXX\",\"emoji\":\"🇺🇬\"},{\"phoneCode\":\"380\",\"code\":\"UA\",\"name\":\"Ukraine\",\"pattern\":\"380 XX XXX XX XX\",\"emoji\":\"🇺🇦\"},{\"phoneCode\":\"971\",\"code\":\"AE\",\"name\":\"United Arab Emirates\",\"pattern\":\"971 XX XXX XXXX\",\"emoji\":\"🇦🇪\"},{\"phoneCode\":\"44\",\"code\":\"GB\",\"name\":\"United Kingdom\",\"pattern\":\"44 XXXX XXXXXX\",\"emoji\":\"🇬🇧\"},{\"phoneCode\":\"1\",\"code\":\"US\",\"name\":\"United States\",\"pattern\":\"1 XXX XXX XXXX\",\"emoji\":\"🇺🇸\"},{\"phoneCode\":\"598\",\"code\":\"UY\",\"name\":\"Uruguay\",\"pattern\":\"598 XXXX XXXX\",\"emoji\":\"🇺🇾\"},{\"phoneCode\":\"1 340\",\"code\":\"VI\",\"name\":\"U.S. Virgin Islands\",\"pattern\":\"1340 XXX XXXX\",\"emoji\":\"🇻🇮\"},{\"phoneCode\":\"998\",\"code\":\"UZ\",\"name\":\"Uzbekistan\",\"pattern\":\"998 XX XXXXXXX\",\"emoji\":\"🇺🇿\"},{\"phoneCode\":\"678\",\"code\":\"VU\",\"name\":\"Vanuatu\",\"pattern\":\"\",\"emoji\":\"🇻🇺\"},{\"phoneCode\":\"58\",\"code\":\"VE\",\"name\":\"Venezuela\",\"pattern\":\"58 XXX XXX XXXX\",\"emoji\":\"🇻🇪\"},{\"phoneCode\":\"39 06 698\",\"code\":\"VA\",\"name\":\"Vatican City\",\"pattern\":\"\",\"emoji\":\"🇻🇦\"},{\"phoneCode\":\"84\",\"code\":\"VN\",\"name\":\"Vietnam\",\"pattern\":\"\",\"emoji\":\"🇻🇳\"},{\"phoneCode\":\"681\",\"code\":\"WF\",\"name\":\"Wallis & Futuna\",\"pattern\":\"\",\"emoji\":\"🇼🇫\"},{\"phoneCode\":\"967\",\"code\":\"YE\",\"name\":\"Yemen\",\"pattern\":\"967 XXX XXX XXX\",\"emoji\":\"🇾🇪\"},{\"phoneCode\":\"260\",\"code\":\"ZM\",\"name\":\"Zambia\",\"pattern\":\"260 XX XXX XXXX\",\"emoji\":\"🇿🇲\"},{\"phoneCode\":\"255\",\"code\":\"\",\"name\":\"Zanzibar\",\"pattern\":\"\",\"emoji\":\"\"},{\"phoneCode\":\"263\",\"code\":\"ZW\",\"name\":\"Zimbabwe\",\"pattern\":\"263 XX XXX XXXX\",\"emoji\":\"🇿🇼\"}];\nconst PhoneCodesMain: {[phoneCode: string]: Country} = {\n  '1': Countries.find(c => c.name === 'United States'),\n  '44': Countries.find(c => c.name === 'United Kingdom'),\n  '61': Countries.find(c => c.name === 'Australia'),\n  '64': Countries.find(c => c.name === 'New Zealand'),\n  '246': Countries.find(c => c.name === 'Diego Garcia'),\n  '255': Countries.find(c => c.name === 'Tanzania'),\n  '262': Countries.find(c => c.name === 'Reunion'),\n  '500': Countries.find(c => c.name === 'Falkland Islands'),\n  '590': Countries.find(c => c.name === 'Guadeloupe'),\n  '672': Countries.find(c => c.name === 'Norfolk Island'),\n  '1 268': Countries.find(c => c.name === 'Antigua & Barbuda'),\n};\n\n/* \nconst toInt = (str) => {\n  return parseInt(str.replace(/ /g, ''));\n};\nvar arr = window.Countries.sort((a, b) => toInt(a.phoneCode) - toInt(b.phoneCode));\narr.forEach((el, idx) => {\n  if(idx === (arr.length - 1)) {\n    return;\n  }\n\n  if(toInt(arr[idx + 1].phoneCode) === toInt(el.phoneCode)) {\n    console.log('duplicate', el, arr[idx + 1]);\n  }\n});\n*/\n\nMOUNT_CLASS_TO.Countries = Countries;\n\nexport default Countries;\nexport {PhoneCodesMain};","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\ntype TargetType = HTMLElement;\nexport type OnVisibilityChange = (target: TargetType, visible: boolean) => void;\n\nexport default class VisibilityIntersector {\n  private observer: IntersectionObserver;\n  private items: Map<TargetType, boolean> = new Map();\n  private locked = false;\n\n  constructor(onVisibilityChange: OnVisibilityChange) {\n    this.observer = new IntersectionObserver((entries) => {\n      if(this.locked) {\n        return;\n      }\n\n      const changed: {target: TargetType, visible: boolean}[] = [];\n\n      entries.forEach(entry => {\n        const target = entry.target as TargetType;\n\n        if(this.items.get(target) === entry.isIntersecting) {\n          return;\n        } else {\n          this.items.set(target, entry.isIntersecting);\n        }\n\n        /* if(entry.isIntersecting) {\n          console.log('ooo', entry);\n        } */\n\n        /* if(this.locked) {\n          return;\n        } */\n\n        changed[entry.isIntersecting ? 'unshift' : 'push']({target, visible: entry.isIntersecting});\n\n        //onVisibilityChange(target, entry.isIntersecting);\n      });\n\n      changed.forEach(smth => {\n        onVisibilityChange(smth.target, smth.visible);\n      });\n    });\n  }\n\n  public getVisible() {\n    const items: TargetType[] = [];\n    this.items.forEach((value, key) => {\n      if(value) {\n        items.push(key);\n      }\n    });\n\n    return items;\n  }\n\n  public clearVisible() {\n    const visible = this.getVisible();\n    for(const target of visible) {\n      this.items.set(target, false);\n    }\n  }\n\n  public isVisible(target: TargetType) {\n    return this.items.get(target);\n  }\n\n  public disconnect() {\n    this.observer.disconnect();\n    this.items.clear();\n  }\n\n  public refresh() {\n    this.observer.disconnect();\n\n    //window.requestAnimationFrame(() => {\n      const targets = [...this.items.keys()];\n      for(const target of targets) {\n        //this.items.set(target, false);\n        this.observer.observe(target);\n      }\n    //});\n  }\n\n  public refreshVisible() {\n    const visible = this.getVisible();\n    for(const target of visible) {\n      this.observer.unobserve(target);\n    }\n\n    for(const target of visible) {\n      this.observer.observe(target);\n    }\n  }\n\n  public observe(target: TargetType) {\n    this.items.set(target, false);\n    this.observer.observe(target);\n  }\n\n  public unobserve(target: TargetType) {\n    this.observer.unobserve(target);\n    this.items.delete(target);\n  }\n\n  public unlock() {\n    this.locked = false;\n  }\n\n  public unlockAndRefresh() {\n    this.unlock();\n    this.refresh();\n  }\n\n  public lock() {\n    this.locked = true;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { throttle } from \"../helpers/schedulers\";\nimport { logger, LogTypes } from \"../lib/logger\";\nimport VisibilityIntersector, { OnVisibilityChange } from \"./visibilityIntersector\";\nimport { findAndSpliceAll } from \"../helpers/array\";\n\ntype LazyLoadElementBase = {\n  load: () => Promise<any>\n};\n\ntype LazyLoadElement = Omit<LazyLoadElementBase, 'load'> & {\n  load: (target?: HTMLElement) => Promise<any>,\n  div: HTMLElement\n  wasSeen?: boolean,\n};\n\nconst PARALLEL_LIMIT = 8;\n\nexport class LazyLoadQueueBase {\n  public queueId = 0;\n  protected queue: Array<LazyLoadElementBase> = [];\n  protected inProcess: Set<LazyLoadElementBase> = new Set();\n\n  protected lockPromise: Promise<void> = null;\n  protected unlockResolve: () => void = null;\n\n  protected log = logger('LL', LogTypes.Error);\n  protected processQueue: () => void;\n\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\n    this.processQueue = throttle(() => this._processQueue(), 20, false);\n  }\n\n  public clear() {\n    this.inProcess.clear(); // ацтеки забьются, будет плохо\n\n    this.queue.length = 0;\n    // unreachable code\n    /* for(let item of this.inProcess) { \n      this.lazyLoadMedia.push(item);\n    } */\n  }\n\n  public lock() {\n    if(this.lockPromise) return;\n\n    //const perf = performance.now();\n    this.lockPromise = new Promise((resolve, reject) => {\n      this.unlockResolve = resolve;\n    });\n\n    /* if(DEBUG) {\n      this.lockPromise.then(() => {\n        this.log('was locked for:', performance.now() - perf);\n      });\n    } */\n  }\n\n  public unlock() {\n    if(!this.unlockResolve) return;\n\n    this.unlockResolve();\n    this.unlockResolve = this.lockPromise = null;\n\n    this.processQueue();\n  }\n\n  protected async processItem(item: LazyLoadElementBase) {\n    if(this.lockPromise) {\n      return;\n    }\n\n    this.inProcess.add(item);\n\n    /* if(DEBUG) {\n      this.log('will load media', this.lockPromise, item);\n    } */\n\n    try {\n      //await new Promise((resolve) => setTimeout(resolve, 2e3));\n      //await new Promise((resolve, reject) => window.requestAnimationFrame(() => window.requestAnimationFrame(resolve)));\n      //await item.load(item.div);\n      await this.loadItem(item);\n    } catch(err) {\n      if(!['NO_ENTRY_FOUND', 'STORAGE_OFFLINE'].includes(err)) {\n        this.log.error('loadMediaQueue error:', err/* , item */);\n      }\n    }\n\n    this.inProcess.delete(item);\n\n    /* if(DEBUG) {\n      this.log('loaded media', item);\n    } */\n\n    this.processQueue();\n  }\n\n  protected loadItem(item: LazyLoadElementBase) {\n    return item.load();\n  }\n\n  protected getItem() {\n    return this.queue.shift();\n  }\n\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElementBase) {\n    this.queue[method](el);\n    this.processQueue();\n  }\n\n  protected _processQueue(item?: LazyLoadElementBase) {\n    if(!this.queue.length || this.lockPromise || (this.parallelLimit > 0 && this.inProcess.size >= this.parallelLimit)) return;\n\n    //console.log('_processQueue start');\n    let added = 0;\n    do {\n      if(item) {\n        this.queue.findAndSplice(i => i === item);\n      } else {\n        item = this.getItem();\n      }\n  \n      if(item) {\n        this.processItem(item);\n      } else {\n        break;\n      }\n\n      item = null;\n      ++added;\n    } while(this.inProcess.size < this.parallelLimit && this.queue.length);\n    //console.log('_processQueue end, added', added, this.queue.length);\n  }\n\n  public push(el: LazyLoadElementBase) {\n    this.addElement('push', el);\n  }\n\n  public unshift(el: LazyLoadElementBase) {\n    this.addElement('unshift', el);\n  }\n}\n\nexport class LazyLoadQueueIntersector extends LazyLoadQueueBase {\n  protected queue: Array<LazyLoadElement> = [];\n  protected inProcess: Set<LazyLoadElement> = new Set();\n\n  public intersector: VisibilityIntersector;\n  protected intersectorTimeout: number;\n\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\n    super(parallelLimit);\n  }\n\n  public lock() {\n    super.lock();\n    this.intersector.lock();\n  }\n\n  public unlock() {\n    super.unlock();\n    this.intersector.unlock();\n  }\n\n  public unlockAndRefresh() {\n    super.unlock();\n    this.intersector.unlockAndRefresh();\n  }\n\n  public clear() {\n    super.clear();\n    this.intersector.disconnect();\n  }\n\n  public refresh() {\n    this.intersector.refresh();\n  }\n\n  protected loadItem(item: LazyLoadElement) {\n    return item.load(item.div);\n  }\n\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElement) {\n    const item = this.queue.find(i => i.div === el.div && i.load === el.load);\n    if(item) {\n      return false;\n    } else {\n      for(const item of this.inProcess) {\n        if(item.div === el.div && item.load === el.load) {\n          return false;\n        }\n      }\n    }\n\n    this.queue[method](el);\n    return true;\n  }\n\n  protected setProcessQueueTimeout() {\n    if(!this.intersectorTimeout) {\n      this.intersectorTimeout = window.setTimeout(() => {\n        this.intersectorTimeout = 0;\n        this.processQueue();\n      }, 0);\n    }\n  }\n\n  public push(el: LazyLoadElement) {\n    super.push(el);\n  }\n\n  public unshift(el: LazyLoadElement) {\n    super.unshift(el);\n  }\n\n  public unobserve(el: HTMLElement) {\n    findAndSpliceAll(this.queue, (i) => i.div === el);\n\n    this.intersector.unobserve(el);\n  }\n}\n\nexport default class LazyLoadQueue extends LazyLoadQueueIntersector {\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\n    super(parallelLimit);\n\n    this.intersector = new VisibilityIntersector(this.onVisibilityChange);\n  }\n\n  private onVisibilityChange = (target: HTMLElement, visible: boolean) => {\n    if(visible) {\n      /* if(DEBUG) {\n        this.log('isIntersecting', target);\n      } */\n\n      // need for set element first if scrolled\n      findAndSpliceAll(this.queue, (i) => i.div === target).forEach(item => {\n        item.wasSeen = true;\n        this.queue.unshift(item);\n        //this.processQueue(item);\n      });\n\n      this.setProcessQueueTimeout();\n    }\n  };\n\n  protected getItem() {\n    return this.queue.findAndSplice(item => item.wasSeen);\n  }\n\n  public async processItem(item: LazyLoadElement) {\n    await super.processItem(item);\n    this.intersector.unobserve(item.div);\n  }\n\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElement) {\n    const inserted = super.addElement(method, el);\n\n    if(!inserted) return false;\n\n    this.intersector.observe(el.div);\n    /* if(el.wasSeen) {\n      this.processQueue(el);\n    } else  */if(!el.hasOwnProperty('wasSeen')) {\n      el.wasSeen = false;\n    }\n    \n    return true;\n  }\n}\n\nexport class LazyLoadQueueRepeat extends LazyLoadQueueIntersector {\n  private _queue: Map<HTMLElement, LazyLoadElement> = new Map();\n\n  constructor(protected parallelLimit = PARALLEL_LIMIT, protected onVisibilityChange?: OnVisibilityChange) {\n    super(parallelLimit);\n\n    this.intersector = new VisibilityIntersector((target, visible) => {\n      const spliced = findAndSpliceAll(this.queue, (i) => i.div === target);\n      if(visible) {\n        const items = spliced.length ? spliced : [this._queue.get(target)];\n        items.forEach(item => {\n          this.queue.unshift(item || this._queue.get(target));\n        });\n      }\n  \n      this.onVisibilityChange && this.onVisibilityChange(target, visible);\n      this.setProcessQueueTimeout();\n    });\n  }\n\n  public clear() {\n    super.clear();\n    this._queue.clear();\n  }\n\n  /* public async processItem(item: LazyLoadElement) {\n    //await super.processItem(item);\n    await LazyLoadQueueBase.prototype.processItem.call(this, item);\n\n    if(this.lazyLoadMedia.length) {\n      this.processQueue();\n    }\n  } */\n\n  public observe(el: LazyLoadElement) {\n    this._queue.set(el.div, el);\n    this.intersector.observe(el.div);\n  }\n}\n\nexport class LazyLoadQueueRepeat2 extends LazyLoadQueueIntersector {\n  constructor(protected parallelLimit = PARALLEL_LIMIT, protected onVisibilityChange?: OnVisibilityChange) {\n    super(parallelLimit);\n\n    this.intersector = new VisibilityIntersector((target, visible) => {\n      const spliced = findAndSpliceAll(this.queue, (i) => i.div === target);\n      if(visible && spliced.length) {\n        spliced.forEach(item => {\n          this.queue.unshift(item);\n        });\n      }\n  \n      this.onVisibilityChange && this.onVisibilityChange(target, visible);\n      this.setProcessQueueTimeout();\n    });\n  }\n\n  public observe(el: HTMLElement) {\n    this.intersector.observe(el);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { fontFamily } from \"../../components/middleEllipsis\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { CancellablePromise, deferredPromise } from \"../../helpers/cancellablePromise\";\nimport { tsNow } from \"../../helpers/date\";\nimport { deepEqual } from \"../../helpers/object\";\nimport { convertInputKeyToKey } from \"../../helpers/string\";\nimport { isMobile } from \"../../helpers/userAgent\";\nimport { InputNotifyPeer, InputPeerNotifySettings, NotifyPeer, PeerNotifySettings, Update } from \"../../layer\";\nimport I18n from \"../langPack\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport webPushApiManager, { PushSubscriptionNotify } from \"../mtproto/webPushApiManager\";\nimport rootScope from \"../rootScope\";\nimport stateStorage from \"../stateStorage\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appChatsManager from \"./appChatsManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appStateManager from \"./appStateManager\";\nimport appUsersManager from \"./appUsersManager\";\n\ntype MyNotification = Notification & {\n  hidden?: boolean,\n  show?: () => void,\n};\n\nexport type NotifyOptions = Partial<{\n  tag: string;\n  image: string;\n  key: string;\n  title: string;\n  message: string;\n  silent: boolean;\n  onclick: () => void;\n}>;\n\nexport type NotificationSettings = {\n  nodesktop: boolean,\n  volume: number,\n  novibrate: boolean,\n  nopreview: boolean,\n  nopush: boolean,\n  nosound: boolean\n};\n\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\nexport class AppNotificationsManager {\n  private notificationsUiSupport: boolean;\n  private notificationsShown: {[key: string]: MyNotification} = {};\n  private notificationIndex = 0;\n  private notificationsCount = 0;\n  private soundsPlayed: {[tag: string]: number} = {};\n  private vibrateSupport = !!navigator.vibrate;\n  private nextSoundAt: number;\n  private prevSoundVolume: number;\n  private peerSettings = {\n    notifyPeer: {} as {[peerId: number]: ImSadAboutIt},\n    notifyUsers: null as ImSadAboutIt,\n    notifyChats: null as ImSadAboutIt,\n    notifyBroadcasts: null as ImSadAboutIt\n  };\n  //private exceptions: {[peerId: string]: PeerNotifySettings} = {};\n  private notifyContactsSignUp: Promise<boolean>;\n  private faviconEl: HTMLLinkElement = document.head.querySelector('link[rel=\"icon\"]');\n\n  private titleBackup = document.title;\n  private titleChanged = false;\n  private titleInterval: number;\n  private prevFavicon: string;\n  private stopped = false;\n\n  private settings: NotificationSettings = {} as any;\n\n  private registeredDevice: any;\n  private pushInited = false;\n\n  private topMessagesDeferred: CancellablePromise<void>;\n\n  private notifySoundEl: HTMLElement;\n\n  private getNotifyPeerTypePromise: Promise<any>;\n\n  constructor() {\n    // @ts-ignore\n    navigator.vibrate = navigator.vibrate || navigator.mozVibrate || navigator.webkitVibrate;\n\n    this.notificationsUiSupport = ('Notification' in window) || ('mozNotification' in navigator);\n\n    this.topMessagesDeferred = deferredPromise<void>();\n\n    this.notifySoundEl = document.createElement('div');\n    this.notifySoundEl.id = 'notify-sound';\n    document.body.append(this.notifySoundEl);\n\n    rootScope.addEventListener('instance_deactivated', () => {\n      this.stop();\n    });\n\n    rootScope.addEventListener('instance_activated', () => {\n      if(this.stopped) {\n        this.start();\n      }\n    });\n\n    rootScope.addEventListener('idle', (newVal) => {\n      if(this.stopped) {\n        return;\n      }\n\n      if(!newVal) {\n        this.clear();\n      }\n\n      this.toggleToggler();\n    });\n\n    rootScope.addMultipleEventsListeners({\n      updateNotifySettings: (update) => {\n        this.savePeerSettings(update.peer._ === 'notifyPeer' ? appPeersManager.getPeerId(update.peer.peer) : update.peer._, update.notify_settings);\n        rootScope.dispatchEvent('notify_settings', update);\n      }\n    });\n\n    rootScope.addEventListener('push_init', (tokenData) => {\n      this.pushInited = true;\n      if(!this.settings.nodesktop && !this.settings.nopush) {\n        if(tokenData) {\n          this.registerDevice(tokenData);\n        } else {\n          webPushApiManager.subscribe();\n        }\n      } else {\n        this.unregisterDevice(tokenData);\n      }\n    });\n    rootScope.addEventListener('push_subscribe', (tokenData) => {\n      this.registerDevice(tokenData);\n    });\n    rootScope.addEventListener('push_unsubscribe', (tokenData) => {\n      this.unregisterDevice(tokenData);\n    });\n\n    rootScope.addEventListener('dialogs_multiupdate', () => {\n      //unregisterTopMsgs()\n      this.topMessagesDeferred.resolve();\n    }, true);\n\n    rootScope.addEventListener('push_notification_click', (notificationData) => {\n      if(notificationData.action === 'push_settings') {\n        /* this.topMessagesDeferred.then(() => {\n          $modal.open({\n            templateUrl: templateUrl('settings_modal'),\n            controller: 'SettingsModalController',\n            windowClass: 'settings_modal_window mobile_modal',\n            backdrop: 'single'\n          })\n        }); */\n        return;\n      }\n\n      if(notificationData.action === 'mute1d') {\n        apiManager.invokeApi('account.updateDeviceLocked', {\n          period: 86400\n        }).then(() => {\n          // var toastData = toaster.pop({\n          //   type: 'info',\n          //   body: _('push_action_mute1d_success'),\n          //   bodyOutputType: 'trustedHtml',\n          //   clickHandler: () => {\n          //     toaster.clear(toastData)\n          //   },\n          //   showCloseButton: false\n          // })\n        });\n\n        return;\n      }\n\n      const peerId = notificationData.custom && +notificationData.custom.peerId;\n      console.log('click', notificationData, peerId);\n      if(peerId) {\n        this.topMessagesDeferred.then(() => {\n          if(notificationData.custom.channel_id &&\n              !appChatsManager.hasChat(+notificationData.custom.channel_id)) {\n            return;\n          }\n\n          if(peerId > 0 && !appUsersManager.hasUser(peerId)) {\n            return;\n          }\n\n          rootScope.dispatchEvent('history_focus', {\n            peerId,\n            mid: +notificationData.custom.msg_id\n          });\n        });\n      }\n    });\n  }\n\n  private toggleToggler(enable = rootScope.idle.isIDLE) {\n    if(isMobile) return;\n\n    const resetTitle = () => {\n      this.titleChanged = false;\n      document.title = this.titleBackup;\n      this.setFavicon();\n    };\n\n    window.clearInterval(this.titleInterval);\n    this.titleInterval = 0;\n\n    if(!enable) {\n      resetTitle();\n    } else {\n      this.titleInterval = window.setInterval(() => {\n        if(!this.notificationsCount) {\n          this.toggleToggler(false);\n        } else if(this.titleChanged) {\n          resetTitle();\n        } else {\n          this.titleChanged = true;\n          document.title = I18n.format('Notifications.Count', true, [this.notificationsCount]);\n          //this.setFavicon('assets/img/favicon_unread.ico');\n\n          // fetch('assets/img/favicon.ico')\n          // .then(res => res.blob())\n          // .then(blob => {\n            // const img = document.createElement('img');\n            // img.src = URL.createObjectURL(blob);\n\n            const canvas = document.createElement('canvas');\n            canvas.width = 32 * window.devicePixelRatio;\n            canvas.height = canvas.width;\n  \n            const ctx = canvas.getContext('2d');\n            ctx.beginPath();\n            ctx.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, 2 * Math.PI, false);\n            ctx.fillStyle = '#3390ec';\n            ctx.fill();\n\n            let fontSize = 24;\n            let str = '' + this.notificationsCount;\n            if(this.notificationsCount < 10) {\n              fontSize = 22;\n            } else if(this.notificationsCount < 100) {\n              fontSize = 20;\n            } else {\n              str = '99+';\n              fontSize = 16;\n            }\n\n            fontSize *= window.devicePixelRatio;\n            \n            ctx.font = `700 ${fontSize}px ${fontFamily}`;\n            ctx.textBaseline = 'middle';\n            ctx.textAlign = 'center';\n            ctx.fillStyle = 'white';\n            ctx.fillText(str, canvas.width / 2, canvas.height * .5625);\n\n            /* const ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height); */\n  \n            this.setFavicon(canvas.toDataURL());\n          // });\n        }\n      }, 1000);\n    }\n  }\n\n  public updateLocalSettings = () => {\n    Promise.all(['notify_nodesktop', 'notify_volume', 'notify_novibrate', 'notify_nopreview', 'notify_nopush'].map(k => stateStorage.get(k as any)))\n    .then((updSettings) => {\n      this.settings.nodesktop = updSettings[0];\n      this.settings.volume = updSettings[1] === undefined ? 0.5 : updSettings[1];\n      this.settings.novibrate = updSettings[2];\n      this.settings.nopreview = updSettings[3];\n      this.settings.nopush = updSettings[4];\n\n      if(this.pushInited) {\n        const needPush = !this.settings.nopush && !this.settings.nodesktop && webPushApiManager.isAvailable || false;\n        const hasPush = this.registeredDevice !== false;\n        if(needPush !== hasPush) {\n          if(needPush) {\n            webPushApiManager.subscribe();\n          } else {\n            webPushApiManager.unsubscribe();\n          }\n        }\n      }\n\n      webPushApiManager.setSettings(this.settings);\n    });\n\n    appStateManager.getState().then(state => {\n      this.settings.nosound = !state.settings.notifications.sound;\n    });\n  }\n\n  public getLocalSettings() {\n    return this.settings;\n  }\n\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\n    let key: any = convertInputKeyToKey(peer._);\n    let obj: any = this.peerSettings[key as NotifyPeer['_']];\n\n    if(peer._ === 'inputNotifyPeer') {\n      key = appPeersManager.getPeerId(peer.peer);\n      obj = obj[key];\n    }\n\n    if(obj) {\n      return obj;\n    }\n\n    return (obj || this.peerSettings)[key] = apiManager.invokeApi('account.getNotifySettings', {peer})\n    .then(settings => {\n      this.savePeerSettings(key, settings);\n      return settings;\n    });\n  }\n\n  public getNotifyPeerTypeSettings() {\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\n\n    const promises = (['inputNotifyBroadcasts', 'inputNotifyUsers', 'inputNotifyChats'] as Exclude<InputNotifyPeer['_'], 'inputNotifyPeer'>[])\n    .map((inputKey) => {\n      return this.getNotifySettings({_: inputKey});\n    });\n\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\n  }\n\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\n    //this.savePeerSettings(peerId, settings);\n\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\n    inputSettings._ = 'inputPeerNotifySettings'; */\n\n    return apiManager.invokeApi('account.updateNotifySettings', {\n      peer,\n      settings\n    }).then(value => {\n      if(value) {\n        apiUpdatesManager.processUpdateMessage({\n          _: 'updateShort',\n          update: {\n            _: 'updateNotifySettings', \n            peer: {\n              ...peer,\n              _: convertInputKeyToKey(peer._)\n            }, \n            notify_settings: { // ! WOW, IT WORKS !\n              ...settings,\n              _: 'peerNotifySettings',\n            }\n          } as Update.updateNotifySettings\n        });\n      }\n    });\n  }\n\n  public getNotifyExceptions() {\n    apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\n    .then((updates) => {\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getContactSignUpNotification() {\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\n    return this.notifyContactsSignUp = apiManager.invokeApi('account.getContactSignUpNotification');\n  }\n\n  public setContactSignUpNotification(silent: boolean) {\n    apiManager.invokeApi('account.setContactSignUpNotification', {silent})\n    .then(value => {\n      this.notifyContactsSignUp = Promise.resolve(!silent);\n    });\n  }\n\n  private setFavicon(href: string = 'assets/img/favicon.ico') {\n    if(this.prevFavicon === href) {\n      return;\n    }\n\n    const link = this.faviconEl.cloneNode() as HTMLLinkElement;\n    link.href = href;\n    this.faviconEl.parentNode.replaceChild(link, this.faviconEl);\n    this.faviconEl = link;\n\n    this.prevFavicon = href;\n  }\n\n  public savePeerSettings(key: number | Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings) {\n    let obj: any;\n    if(typeof(key) === 'number') {\n      obj = this.peerSettings['notifyPeer'];\n    }\n    \n    (obj || this.peerSettings)[key] = settings;\n\n    if(typeof(key) !== 'number') {\n      rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\n    }\n\n    //rootScope.broadcast('notify_settings', {peerId: peerId});\n  }\n\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\n    return peerNotifySettings._ === 'peerNotifySettings' &&\n      ((peerNotifySettings.mute_until * 1000) > tsNow() || peerNotifySettings.silent);\n  }\n\n  public getPeerMuted(peerId: number) {\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: appPeersManager.getInputPeerById(peerId)});\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\n  }\n\n  public getPeerLocalSettings(peerId: number, respectType = true): PeerNotifySettings {\n    const n: PeerNotifySettings = {\n      _: 'peerNotifySettings'\n    };\n\n    const notifySettings = this.peerSettings['notifyPeer'][peerId];\n    //if(!notifySettings || (notifySettings instanceof Promise)) return false;\n    if(notifySettings && !(notifySettings instanceof Promise)) {\n      Object.assign(n, notifySettings);\n    }\n\n    if(respectType) {\n      const inputNotify = appPeersManager.getInputNotifyPeerById(peerId, true);\n      const key = convertInputKeyToKey(inputNotify._);\n      const typeNotifySettings = this.peerSettings[key as NotifyPeer['_']];\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\n        for(let i in typeNotifySettings) {\n          // @ts-ignore\n          if(n[i] === undefined) {\n            // @ts-ignore\n            n[i] = typeNotifySettings[i];\n          }\n        }\n      }\n    }\n\n    return n;\n  }\n\n  public isPeerLocalMuted(peerId: number, respectType = true) {\n    if(peerId === rootScope.myId) return false;\n\n    const notifySettings = this.getPeerLocalSettings(peerId, respectType);\n    return this.isMuted(notifySettings);\n  }\n\n  public start() {\n    this.updateLocalSettings();\n    rootScope.addEventListener('settings_updated', this.updateLocalSettings);\n    webPushApiManager.start();\n\n    if(!this.notificationsUiSupport) {\n      return false;\n    }\n\n    if('Notification' in window && Notification.permission !== 'granted' && Notification.permission !== 'denied') {\n      window.addEventListener('click', this.requestPermission);\n    }\n\n    try {\n      if('onbeforeunload' in window) {\n        window.addEventListener('beforeunload', this.clear);\n      }\n    } catch (e) {}\n  }\n\n  private stop() {\n    this.clear();\n    window.clearInterval(this.titleInterval);\n    this.titleInterval = 0;\n    this.setFavicon();\n    this.stopped = true;\n  }\n\n  private requestPermission = () => {\n    Notification.requestPermission();\n    window.removeEventListener('click', this.requestPermission);\n  };\n\n  public notify(data: NotifyOptions) {\n    //console.log('notify', data, rootScope.idle.isIDLE, this.notificationsUiSupport, this.stopped);\n    \n    if(this.stopped) {\n      return;\n    }\n\n    // FFOS Notification blob src bug workaround\n    /* if(Config.Navigator.ffos && !Config.Navigator.ffos2p) {\n      data.image = 'https://telegram.org/img/t_logo.png'\n    }\n    else if (data.image && !angular.isString(data.image)) {\n      if (Config.Navigator.ffos2p) {\n        FileManager.getDataUrl(data.image, 'image/jpeg').then(function (url) {\n          data.image = url\n          notify(data)\n        })\n        return false\n      } else {\n        data.image = FileManager.getUrl(data.image, 'image/jpeg')\n      }\n    }\n    else */ if(!data.image) {\n      data.image = 'assets/img/logo_filled_rounded.png';\n    }\n    // console.log('notify image', data.image)\n\n    this.notificationsCount++;\n    if(!this.titleInterval) {\n      this.toggleToggler();\n    }\n\n    const now = tsNow();\n    if(this.settings.volume > 0 && !this.settings.nosound/* &&\n      (\n        !data.tag ||\n        !this.soundsPlayed[data.tag] ||\n        now > this.soundsPlayed[data.tag] + 60000\n      ) */\n    ) {\n      this.testSound(this.settings.volume);\n      this.soundsPlayed[data.tag] = now;\n    }\n\n    if(!this.notificationsUiSupport ||\n      'Notification' in window && Notification.permission !== 'granted') {\n      return false;\n    }\n\n    if(this.settings.nodesktop) {\n      if(this.vibrateSupport && !this.settings.novibrate) {\n        navigator.vibrate([200, 100, 200]);\n        return;\n      }\n\n      return;\n    }\n\n    const idx = ++this.notificationIndex;\n    const key = data.key || 'k' + idx;\n    let notification: MyNotification;\n\n    if('Notification' in window) {\n      try {\n        if(data.tag) {\n          for(let i in this.notificationsShown) {\n            const notification = this.notificationsShown[i];\n            if(notification &&\n                notification.tag === data.tag) {\n              notification.hidden = true;\n            }\n          }\n        }\n\n        notification = new Notification(data.title, {\n          icon: data.image || '',\n          body: data.message || '',\n          tag: data.tag || '',\n          silent: data.silent || false\n        });\n\n        //console.log('notify constructed notification');\n      } catch(e) {\n        this.notificationsUiSupport = false;\n        webPushApiManager.setLocalNotificationsDisabled();\n        return;\n      }\n    } /* else if('mozNotification' in navigator) {\n      notification = navigator.mozNotification.createNotification(data.title, data.message || '', data.image || '')\n    } else if(notificationsMsSiteMode) {\n      window.external.msSiteModeClearIconOverlay()\n      window.external.msSiteModeSetIconOverlay('img/icons/icon16.png', data.title)\n      window.external.msSiteModeActivate()\n      notification = {\n        index: idx\n      }\n    } */ else {\n      return;\n    }\n\n    notification.onclick = () => {\n      notification.close();\n      //AppRuntimeManager.focus();\n      this.clear();\n      if(data.onclick) {\n        data.onclick();\n      }\n    };\n\n    notification.onclose = () => {\n      if(!notification.hidden) {\n        delete this.notificationsShown[key];\n        this.clear();\n      }\n    };\n\n    if(notification.show) {\n      notification.show();\n    }\n    this.notificationsShown[key] = notification;\n\n    if(!isMobile) {\n      setTimeout(() => {\n        this.hide(key);\n      }, 8000);\n    }\n  }\n\n  public testSound(volume: number) {\n    const now = tsNow();\n    if(this.nextSoundAt && now < this.nextSoundAt && this.prevSoundVolume === volume) {\n      return;\n    }\n\n    this.nextSoundAt = now + 1000;\n    this.prevSoundVolume = volume;\n    const filename = 'assets/audio/notification.mp3';\n    const audio = document.createElement('audio');\n    audio.autoplay = true;\n    audio.setAttribute('mozaudiochannel', 'notification');\n    audio.volume = volume;\n    audio.innerHTML = `\n      <source src=\"${filename}\" type=\"audio/mpeg\" />\n      <embed hidden=\"true\" autostart=\"true\" loop=\"false\" volume=\"${volume * 100}\" src=\"${filename}\" />\n    `;\n    this.notifySoundEl.append(audio);\n\n    audio.addEventListener('ended', () => {\n      audio.remove();\n    }, {once: true});\n  }\n\n  public cancel(key: string) {\n    const notification = this.notificationsShown[key];\n    if(notification) {\n      if(this.notificationsCount > 0) {\n        this.notificationsCount--;\n      }\n\n      try {\n        if(notification.close) {\n          notification.hidden = true;\n          notification.close();\n        }/*  else if(notificationsMsSiteMode &&\n          notification.index === notificationIndex) {\n          window.external.msSiteModeClearIconOverlay()\n        } */\n      } catch (e) {}\n\n      delete this.notificationsShown[key];\n    }\n  }\n\n  private hide(key: string) {\n    const notification = this.notificationsShown[key];\n    if(notification) {\n      try {\n        if(notification.close) {\n          notification.hidden = true;\n          notification.close();\n        }\n      } catch (e) {}\n    }\n  }\n\n  public soundReset(tag: string) {\n    delete this.soundsPlayed[tag];\n  }\n\n  public clear() {\n    /* if(notificationsMsSiteMode) {\n      window.external.msSiteModeClearIconOverlay()\n    } else { */\n      for(let i in this.notificationsShown) {\n        const notification = this.notificationsShown[i];\n        try {\n          if(notification.close) {\n            notification.close();\n          }\n        } catch (e) {}\n      }\n    /* } */\n    this.notificationsShown = {};\n    this.notificationsCount = 0;\n\n    webPushApiManager.hidePushNotifications();\n  }\n\n  private registerDevice(tokenData: PushSubscriptionNotify) {\n    if(this.registeredDevice && deepEqual(this.registeredDevice, tokenData)) {\n      return false;\n    }\n\n    apiManager.invokeApi('account.registerDevice', {\n      token_type: tokenData.tokenType,\n      token: tokenData.tokenValue,\n      other_uids: [],\n      app_sandbox: false,\n      secret: new Uint8Array()\n    }).then(() => {\n      this.registeredDevice = tokenData;\n    }, (error) => {\n      error.handled = true;\n    });\n  }\n\n  private unregisterDevice(tokenData: PushSubscriptionNotify) {\n    if(!this.registeredDevice) {\n      return false;\n    }\n\n    apiManager.invokeApi('account.unregisterDevice', {\n      token_type: tokenData.tokenType,\n      token: tokenData.tokenValue,\n      other_uids: []\n    }).then(() => {\n      this.registeredDevice = false;\n    }, (error) => {\n      error.handled = true;\n    });\n  }\n\n  public getVibrateSupport() {\n    return this.vibrateSupport\n  }\n}\n\nconst appNotificationsManager = new AppNotificationsManager();\nMOUNT_CLASS_TO.appNotificationsManager = appNotificationsManager;\nexport default appNotificationsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport rootScope from \"../lib/rootScope\";\n\nconst SetTransition = (element: HTMLElement, className: string, forwards: boolean, duration: number, onTransitionEnd?: () => void) => {\n  const timeout = element.dataset.timeout;\n  if(timeout !== undefined) {\n    clearTimeout(+timeout);\n  }\n\n  if(forwards && className) {\n    element.classList.add(className);\n  }\n\n  const afterTimeout = () => {\n    delete element.dataset.timeout;\n    if(!forwards && className) {\n      element.classList.remove('backwards', className);\n    }\n\n    element.classList.remove('animating');\n    \n    onTransitionEnd && onTransitionEnd();\n  };\n\n  if(!rootScope.settings.animationsEnabled) {\n    element.classList.remove('animating', 'backwards');\n    afterTimeout();\n    return;\n  }\n\n  element.classList.add('animating');\n\n  element.classList.toggle('backwards', !forwards);\n  element.dataset.timeout = '' + setTimeout(afterTimeout, duration);\n};\n\nexport default SetTransition;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { makeMediaSize } from \"./mediaSizes\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\n\nexport default function calcImageInBox(imageW: number, imageH: number, boxW: number, boxH: number, noZoom = true) {\n  if(imageW < boxW && imageH < boxH && noZoom) {\n    return makeMediaSize(imageW, imageH);\n  }\n\n  let boxedImageW = boxW;\n  let boxedImageH = boxH;\n\n  if((imageW / imageH) > (boxW / boxH)) {\n    boxedImageH = (imageH * boxW / imageW) | 0;\n  } else {\n    boxedImageW = (imageW * boxH / imageH) | 0;\n    if(boxedImageW > boxW) {\n      boxedImageH = (boxedImageH * boxW / boxedImageW) | 0;\n      boxedImageW = boxW;\n    }\n  }\n\n  // if (Config.Navigator.retina) {\n  //   imageW = Math.floor(imageW / 2)\n  //   imageH = Math.floor(imageH / 2)\n  // }\n\n  if(noZoom && boxedImageW >= imageW && boxedImageH >= imageH) {\n    boxedImageW = imageW;\n    boxedImageH = imageH;\n  }\n\n  return makeMediaSize(boxedImageW, boxedImageH);\n}\n\nMOUNT_CLASS_TO.calcImageInBox = calcImageInBox;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { LangPackKey, i18n } from \"../lib/langPack\";\n\nexport default class LoginPage {\n  public element: HTMLElement;\n  public container: HTMLElement;\n  public imageDiv: HTMLElement;\n  public inputWrapper: HTMLElement;\n  public title: HTMLElement;\n  public subtitle: HTMLParagraphElement;\n\n  constructor(options: {\n    className: string,\n    withInputWrapper?: boolean,\n    titleLangKey?: LangPackKey,\n    subtitleLangKey?: LangPackKey,\n  }) {\n    this.element = document.body.querySelector('.' + options.className) as HTMLDivElement;\n    //this.element = document.createElement('div');\n    //this.element.className = 'page-' + options.className;\n\n    this.container = document.createElement('div');\n    this.container.className = 'container center-align';\n\n    this.imageDiv = document.createElement('div');\n    this.imageDiv.className = 'auth-image';\n\n    this.title = document.createElement('h4');\n    if(options.titleLangKey) {\n      this.title.append(i18n(options.titleLangKey));\n    }\n\n    this.subtitle = document.createElement('p');\n    this.subtitle.className = 'subtitle';\n    if(options.subtitleLangKey) {\n      this.subtitle.append(i18n(options.subtitleLangKey));\n    }\n    \n    this.container.append(this.imageDiv, this.title, this.subtitle);\n\n    if(options.withInputWrapper) {\n      this.inputWrapper = document.createElement('div');\n      this.inputWrapper.className = 'input-wrapper';\n      this.container.append(this.inputWrapper);\n    }\n\n    this.element.append(this.container);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { RequestFilePartTask, RequestFilePartTaskResponse } from \"../serviceWorker/index.service\";\nimport type { ApiError } from \"./apiManager\";\nimport appMessagesManager from \"../appManagers/appMessagesManager\";\nimport { Photo } from \"../../layer\";\nimport { bytesToHex } from \"../../helpers/bytes\";\nimport { deepEqual } from \"../../helpers/object\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport apiManager from \"./mtprotoworker\";\n\nexport type ReferenceContext = ReferenceContext.referenceContextProfilePhoto | ReferenceContext.referenceContextMessage;\nexport namespace ReferenceContext {\n  export type referenceContextProfilePhoto = {\n    type: 'profilePhoto',\n    peerId: number\n  };\n\n  export type referenceContextMessage = {\n    type: 'message',\n    peerId: number,\n    messageId: number\n  };\n}\n\nexport type ReferenceBytes = Photo.photo['file_reference'];\nexport type ReferenceContexts = Set<ReferenceContext>;\n\n//type ReferenceBytes = Uint8Array;\n\nclass ReferenceDatabase {\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\n  //private references: Map<ReferenceBytes, number[]> = new Map();\n  private links: {[hex: string]: ReferenceBytes} = {};\n\n  constructor() {\n    apiManager.addTaskListener('requestFilePart', (task: RequestFilePartTaskResponse) => {\n      if(task.error) {\n        const onError = (error: ApiError) => {\n          if(error?.type === 'FILE_REFERENCE_EXPIRED') {\n            // @ts-ignore\n            const bytes = task.originalPayload[1].file_reference;\n            referenceDatabase.refreshReference(bytes).then(() => {\n              // @ts-ignore\n              task.originalPayload[1].file_reference = referenceDatabase.getReferenceByLink(bytes);\n              const newTask: RequestFilePartTask = {\n                type: task.type,\n                id: task.id,\n                payload: task.originalPayload\n              };\n\n              apiManager.postMessage(newTask);\n            }).catch(onError);\n          } else {\n            navigator.serviceWorker.controller.postMessage(task);\n          }\n        };\n\n        onError(task.error);\n      } else {\n        navigator.serviceWorker.controller.postMessage(task);\n      }\n    });\n  }\n\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(!contexts) {\n      contexts = new Set();\n      this.contexts.set(reference, contexts);\n      this.links[bytesToHex(reference)] = reference;\n    }\n\n    for(const _context of contexts) {\n      if(deepEqual(_context, context)) {\n        return;\n      }\n    }\n\n    contexts.add(context);\n  }\n\n  public getReferenceByLink(reference: ReferenceBytes) {\n    return this.links[bytesToHex(reference)];\n  }\n\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\n    return [contexts, reference];\n  }\n\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\n    const contexts = this.getContexts(reference);\n    return contexts ? [contexts[0].values().next().value, contexts[1]] : undefined;\n  }\n\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(contexts) {\n      for(const _context of contexts) {\n        if(deepEqual(_context, context)) {\n          contexts.delete(_context);\n          if(!contexts.size) {\n            this.contexts.delete(reference);\n            delete this.links[bytesToHex(reference)];\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<void> {\n    [context, reference] = this.getContext(reference);\n    switch(context?.type) {\n      case 'message': {\n        return appMessagesManager.wrapSingleMessage(context.peerId, context.messageId, true);\n        // .then(() => {\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\n        // });\n      }\n\n      default: {\n        console.warn('FILE_REFERENCE_EXPIRED: not implemented context', context);\n        return Promise.reject();\n      }\n    }\n  }\n\n  /* handleReferenceError = (reference: ReferenceBytes, error: ApiError) => {\n    switch(error.type) {\n      case 'FILE_REFERENCE_EXPIRED': {\n        return this.refreshReference(reference);\n      }\n\n      default:\n        return Promise.reject(error);\n    }\n  }; */\n\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\n    const contexts = this.contexts.get(oldReference);\n    if(contexts) {\n      this.contexts.delete(oldReference);\n      this.contexts.set(newReference, contexts);\n    }\n  } */\n}\n\nconst referenceDatabase = new ReferenceDatabase();\nMOUNT_CLASS_TO.referenceDatabase = referenceDatabase;\nexport default referenceDatabase;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { CancellablePromise } from \"../helpers/cancellablePromise\";\nimport SetTransition from \"./singleTransition\";\nimport { fastRaf } from \"../helpers/schedulers\";\nimport { safeAssign } from \"../helpers/object\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\nimport isInDOM from \"../helpers/dom/isInDOM\";\n\nconst TRANSITION_TIME = 200;\n\nexport default class ProgressivePreloader {\n  public preloader: HTMLDivElement;\n  private circle: SVGCircleElement;\n  private cancelSvg: SVGSVGElement;\n  private downloadSvg: HTMLElement;\n  \n  private tempId = 0;\n  private detached = true;\n\n  public promise: CancellablePromise<any> = null;\n\n  public isUpload = false;\n  private cancelable = true;\n  private streamable = false;\n  private tryAgainOnFail = true;\n  private attachMethod: 'append' | 'prepend' = 'append';\n\n  public loadFunc: () => {download: CancellablePromise<any>};\n\n  private totalLength: number;\n\n  constructor(options?: Partial<{\n    isUpload: ProgressivePreloader['isUpload'],\n    cancelable: ProgressivePreloader['cancelable'], \n    streamable: ProgressivePreloader['streamable'], \n    tryAgainOnFail: ProgressivePreloader['tryAgainOnFail'],\n    attachMethod: ProgressivePreloader['attachMethod']\n  }>) {\n    if(options) {\n      safeAssign(this, options);\n    }\n  }\n\n  public constructContainer(options: Partial<{\n    color: 'transparent',\n    bold: boolean\n  }> = {}) {\n    if(!this.preloader) {\n      this.preloader = document.createElement('div');\n      this.preloader.classList.add('preloader-container');\n\n      if(options.color) {\n        this.preloader.classList.add('preloader-' + options.color);\n      }\n\n      if(options.bold) {\n        this.preloader.classList.add('preloader-bold');\n      }\n  \n      if(this.streamable) {\n        this.preloader.classList.add('preloader-streamable');\n      }\n    }\n  }\n\n  public constructDownloadIcon() {\n    this.constructContainer();\n  }\n\n  public construct() {\n    this.construct = null;\n\n    this.constructContainer();\n    \n    this.preloader.innerHTML = `\n    <div class=\"you-spin-me-round\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-circular\" viewBox=\"${this.streamable ? '25 25 50 50' : '27 27 54 54'}\">\n    <circle class=\"preloader-path-new\" cx=\"${this.streamable ? '50' : '54'}\" cy=\"${this.streamable ? '50' : '54'}\" r=\"${this.streamable ? 19 : 24}\" fill=\"none\" stroke-miterlimit=\"10\"/>\n    </svg>\n    </div>`;\n\n    if(this.cancelable) {\n      this.preloader.innerHTML += `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-close\" viewBox=\"0 0 24 24\">\n        <g fill=\"none\" fill-rule=\"evenodd\">\n          <polygon points=\"0 0 24 0 24 24 0 24\"/>\n          <path fill=\"#000\" fill-rule=\"nonzero\" d=\"M5.20970461,5.38710056 L5.29289322,5.29289322 C5.65337718,4.93240926 6.22060824,4.90467972 6.61289944,5.20970461 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3466228,19.0675907 17.7793918,19.0953203 17.3871006,18.7902954 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 L5.29289322,5.29289322 L5.20970461,5.38710056 Z\"/>\n        </g>\n      </svg>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-download\" viewBox=\"0 0 24 24\">\n        <g fill=\"none\" fill-rule=\"evenodd\">\n          <polygon points=\"0 0 24 0 24 24 0 24\"/>\n          <path fill=\"#000\" fill-rule=\"nonzero\" d=\"M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z\"/>\n        </g>\n      </svg>`;\n\n      this.downloadSvg = this.preloader.lastElementChild as HTMLElement;\n      this.cancelSvg = this.downloadSvg.previousElementSibling as any;\n    } else {\n      this.preloader.classList.add('preloader-swing');\n    }\n    \n    this.circle = this.preloader.firstElementChild.firstElementChild.firstElementChild as SVGCircleElement;\n\n    if(this.cancelable) {\n      attachClickEvent(this.preloader, this.onClick);\n    }\n  }\n\n  public onClick = (e?: Event) => {\n    if(e) {\n      cancelEvent(e);\n    }\n\n    if(this.preloader.classList.contains('manual')) {\n      if(this.loadFunc) {\n        this.loadFunc();\n      }\n    } else {\n      if(this.promise && this.promise.cancel) {\n        this.promise.cancel();\n      }\n    }\n  };\n\n  public setDownloadFunction(func: ProgressivePreloader['loadFunc']) {\n    this.loadFunc = func;\n  }\n\n  public setManual() {\n    this.preloader.classList.add('manual');\n    this.setProgress(0);\n  }\n\n  public attachPromise(promise: CancellablePromise<any>) {\n    if(this.isUpload && this.promise) return;\n\n    this.promise = promise;\n\n    const tempId = --this.tempId;\n    const startTime = Date.now();\n\n    const onEnd = (err: Error) => {\n      promise.notify = null;\n\n      if(tempId !== this.tempId) {\n        return;\n      }\n\n      const elapsedTime = Date.now() - startTime;\n\n      //console.log('[PP]: end', this.detached, performance.now());\n\n      if(!err && this.cancelable) {\n        this.setProgress(100);\n\n        const delay = TRANSITION_TIME * 0.75;\n\n        if(elapsedTime < delay) {\n          this.detach();\n        } else {\n          setTimeout(() => { // * wait for transition complete\n            if(tempId === this.tempId) {\n              this.detach();\n            }\n          }, delay);\n        }\n      } else {\n        if(this.tryAgainOnFail) {\n          SetTransition(this.preloader, '', true, TRANSITION_TIME);\n          fastRaf(() => {\n            this.setManual();\n          });\n        } else {\n          this.detach();\n        }\n      }\n      \n      this.promise = promise = null;\n    };\n    \n    promise\n    .then(() => onEnd(null))\n    .catch((err) => onEnd(err));\n\n    if(promise.addNotifyListener) {\n      promise.addNotifyListener((details: {done: number, total: number}) => {\n        /* if(details.done >= details.total) {\n          onEnd();\n        } */\n\n        if(tempId !== this.tempId) return;\n\n        //console.log('preloader download', promise, details);\n        const percents = details.done / details.total * 100;\n        this.setProgress(percents);\n      });\n    }\n  }\n\n  public attach(elem: Element, reset = false, promise?: CancellablePromise<any>) {\n    if(promise/*  && false */) {\n      this.attachPromise(promise);\n    }\n\n    //return;\n\n    this.detached = false;\n    /* fastRaf(() => {\n      if(this.detached) return;\n      this.detached = false; */\n\n      if(this.construct) {\n        this.construct();\n      }\n\n      if(this.preloader.parentElement) {\n        this.preloader.classList.remove('manual');\n      }\n\n      if(this.preloader.parentElement !== elem) {\n        elem[this.attachMethod](this.preloader);\n      }\n\n      fastRaf(() => {\n        //console.log('[PP]: attach after rAF', this.detached, performance.now());\n\n        if(this.detached) {\n          return;\n        }\n\n        SetTransition(this.preloader, 'is-visible', true, TRANSITION_TIME);\n      });\n\n      if(this.cancelable && reset) {\n        this.setProgress(0);\n      }\n    //});\n  }\n  \n  public detach() {\n    //return;\n\n    this.detached = true;\n\n    //return;\n    \n    if(this.preloader && this.preloader.parentElement) {\n      /* setTimeout(() =>  *///fastRaf(() => {\n        /* if(!this.detached) return;\n        this.detached = true; */\n\n        fastRaf(() => {\n          //console.log('[PP]: detach after rAF', this.detached, performance.now());\n\n          if(!this.detached || !this.preloader.parentElement) {\n            return;\n          }\n\n          SetTransition(this.preloader, 'is-visible', false, TRANSITION_TIME, () => {\n            this.preloader.remove();\n          });\n        });\n      //})/* , 5e3) */;\n    }\n  }\n  \n  public setProgress(percents: number) {\n    if(!isInDOM(this.circle)) {\n      return;\n    }\n    \n    if(percents === 0) {\n      this.circle.style.strokeDasharray = '';\n      return;\n    }\n    \n    try {\n      if(!this.totalLength) {\n        this.totalLength = this.circle.getTotalLength();\n      }\n\n      //console.log('setProgress', (percents / 100 * totalLength));\n      this.circle.style.strokeDasharray = '' + Math.max(5, percents / 100 * this.totalLength) + ', ' + this.totalLength;\n    } catch(err) {}\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { InputFileLocation, InputStickerSet } from \"../layer\";\nimport type { DownloadOptions } from \"../lib/mtproto/apiFileManager\";\n\nconst FILENAME_JOINER = '_';\n\nexport function getFileNameByLocation(location: InputFileLocation, options?: Partial<{\n  fileName: string\n}>) {\n  const fileName = '';//(options?.fileName || '').split('.');\n  const ext = fileName[fileName.length - 1] || '';\n\n  let str: string;\n  switch(location._) {\n    case 'inputPhotoFileLocation': {\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputDocumentFileLocation': {\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputPeerPhotoFileLocation':\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\n      break;\n    \n    case 'inputStickerSetThumb': {\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id || \n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name || \n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon || \n        location.stickerset._;\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputFileLocation': {\n      str = location.volume_id + '_' + location.local_id;\n      break;\n    }\n\n    default: {\n      console.error('Unrecognized location:', location);\n      str = '';\n      break;\n    }\n  }\n\n  return str + (ext ? '.' + ext : ext);\n}\n\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download';\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\n  //console.log('getFileURL', location);\n  //const perf = performance.now();\n  const encoded = encodeURIComponent(JSON.stringify(options));\n  //console.log('getFileURL encode:', performance.now() - perf, encoded);\n\n  return '/' + type + '/' + encoded;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { blobConstruct } from \"../helpers/blob\";\n\nexport class FileManager {\n  public blobSupported = true;\n  \n  constructor() {\n    try {\n      blobConstruct([], '');\n    } catch(e) {\n      this.blobSupported = false;\n    }\n  }\n  \n  public isAvailable() {\n    return this.blobSupported;\n  }\n  \n  public write(fileWriter: ReturnType<FileManager['getFakeFileWriter']>, bytes: Uint8Array | Blob | string): Promise<void> {\n    if(bytes instanceof Blob) { // is file bytes\n      return new Promise((resolve, reject) => {\n        let fileReader = new FileReader();\n        fileReader.onload = function(event) {\n          let arrayBuffer = event.target.result as ArrayBuffer;\n          \n          let arr = new Uint8Array(arrayBuffer);\n          \n          fileWriter.write(arr).then(resolve, reject);\n        };\n        \n        fileReader.readAsArrayBuffer(bytes);\n      });\n    } else {\n      return fileWriter.write(bytes);\n    }\n  }\n\n  public getFakeFileWriter(mimeType: string, saveFileCallback?: (blob: Blob) => Promise<Blob>) {\n    const blobParts: Array<Uint8Array | string> = [];\n    const fakeFileWriter = {\n      write: async(part: Uint8Array | string) => {\n        if(!this.blobSupported) {\n          throw false;\n        }\n        \n        blobParts.push(part);\n      },\n      truncate: () => {\n        blobParts.length = 0;\n      },\n      finalize: (saveToStorage = true) => {\n        const blob = blobConstruct(blobParts, mimeType);\n\n        if(saveToStorage && saveFileCallback) {\n          saveFileCallback(blob);\n        }\n        \n        return blob;\n      }\n    };\n    \n    return fakeFileWriter;\n  }\n}\n\nexport default new FileManager();\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from '../config/modes';\nimport { blobConstruct } from '../helpers/blob';\nimport FileManager from './filemanager';\n//import { MOUNT_CLASS_TO } from './mtproto/mtproto_config';\n//import { logger } from './polyfill';\n\nexport default class CacheStorageController {\n  private static STORAGES: CacheStorageController[] = [];\n  //public dbName = 'cachedFiles';\n  private openDbPromise: Promise<Cache>;\n\n  private useStorage = true;\n\n  //private log: ReturnType<typeof logger> = logger('CS');\n\n  constructor(private dbName: string) {\n    if(Modes.test) {\n      this.dbName += '_test';\n    }\n\n    if(CacheStorageController.STORAGES.length) {\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\n    }\n    \n    this.openDatabase();\n    CacheStorageController.STORAGES.push(this);\n  }\n\n  private openDatabase(): Promise<Cache> {\n    if(this.openDbPromise) {\n      return this.openDbPromise;\n    }\n\n    return this.openDbPromise = caches.open(this.dbName);\n  }\n\n  public delete(entryName: string) {\n    return this.timeoutOperation((cache) => {\n      return cache.delete('/' + entryName);\n    });\n  }\n\n  public deleteAll() {\n    return caches.delete(this.dbName);\n  }\n\n  public save(entryName: string, response: Response) {\n    if(!this.useStorage) return Promise.reject('STORAGE_OFFLINE');\n\n    return this.timeoutOperation((cache) => {\n      return cache.put('/' + entryName, response);\n    });\n  }\n\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\n    if(!this.useStorage) return Promise.reject('STORAGE_OFFLINE');\n\n    //return Promise.resolve(blobConstruct([blob]));\n    if(!(blob instanceof Blob)) {\n      blob = blobConstruct(blob) as Blob;\n    }\n\n    const response = new Response(blob, {\n      headers: {\n        'Content-Length': '' + blob.size\n      }\n    });\n    \n    return this.save(fileName, response).then(() => {\n      return blob as Blob;\n    });\n  }\n\n  /* public getBlobSize(blob: any) {\n    return blob.size || blob.byteLength || blob.length;\n  } */\n\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\n    if(!this.useStorage) return Promise.reject('STORAGE_OFFLINE');\n\n    /* if(method === 'blob') {\n      return Promise.reject();\n    } */\n\n    // const str = `get fileName: ${fileName}`;\n    // console.time(str);\n    return this.timeoutOperation(async(cache) => {\n      const response = await cache.match('/' + fileName);\n\n      if(!response || !cache) {\n        //console.warn('getFile:', response, fileName);\n        throw 'NO_ENTRY_FOUND';\n      }\n   \n      const promise = response[method]();\n      // promise.then(() => {\n      //   console.timeEnd(str);\n      // });\n      return promise;\n    });\n  }\n\n  private timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\n    return new Promise<T>(async(resolve, reject) => {\n      let rejected = false;\n      const timeout = setTimeout(() => {\n        reject();\n        //console.warn('CACHESTORAGE TIMEOUT');\n        rejected = true;\n      }, 15e3);\n\n      try {\n        const cache = await this.openDatabase();\n        if(!cache) {\n          throw 'no cache?';\n        }\n\n        const res = await callback(cache);\n\n        if(rejected) return;\n        resolve(res);\n      } catch(err) {\n        reject(err);\n      }\n\n      clearTimeout(timeout);\n    });\n  }\n\n  public getFileWriter(fileName: string, mimeType: string) {\n    const fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\n      return this.saveFile(fileName, blob).catch(() => blob);\n    });\n\n    return Promise.resolve(fakeWriter);\n  }\n\n  public static toggleStorage(enabled: boolean) {\n    return Promise.all(this.STORAGES.map(storage => {\n      storage.useStorage = enabled;\n      \n      if(!enabled) {\n        return storage.deleteAll();\n      }\n    }));\n  }\n}\n\n//const cacheStorage = new CacheStorageController(); \n//MOUNT_CLASS_TO.cacheStorage = cacheStorage;\n//export default cacheStorage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { TransitionSlider } from \"./transition\";\nimport { ScrollableX } from \"./scrollable\";\nimport rootScope from \"../lib/rootScope\";\nimport { fastRaf } from \"../helpers/schedulers\";\nimport { FocusDirection } from \"../helpers/fastSmoothScroll\";\nimport findUpAsChild from \"../helpers/dom/findUpAsChild\";\nimport whichChild from \"../helpers/dom/whichChild\";\n\nexport function horizontalMenu(tabs: HTMLElement, content: HTMLElement, onClick?: (id: number, tabContent: HTMLDivElement, animate: boolean) => void | boolean, onTransitionEnd?: () => void, transitionTime = 250, scrollableX?: ScrollableX) {\n  const selectTab = TransitionSlider(content, tabs || content.dataset.animation === 'tabs' ? 'tabs' : 'navigation', transitionTime, onTransitionEnd);\n\n  if(tabs) {\n    const proxy = new Proxy(selectTab, {\n      apply: (target, that, args) => {\n        const id = +args[0];\n        const animate = args[1] !== undefined ? args[1] : true;\n  \n        const el = (tabs.querySelector(`[data-tab=\"${id}\"]`) || tabs.children[id]) as HTMLElement;\n        selectTarget(el, id, animate);\n      }\n    });\n\n    const selectTarget = (target: HTMLElement, id: number, animate = true) => {\n      const tabContent = content.children[id] as HTMLDivElement;\n\n      if(onClick) {\n        const canChange = onClick(id, tabContent, animate);\n        if(canChange !== undefined && !canChange) {\n          return;\n        }\n      }\n\n      if(scrollableX) {\n        scrollableX.scrollIntoViewNew(target.parentElement.children[id] as HTMLElement, 'center', undefined, undefined, animate ? undefined : FocusDirection.Static, transitionTime, 'x');\n      }\n\n      if(!rootScope.settings.animationsEnabled) {\n        animate = false;\n      }\n\n      const prevId = selectTab.prevId();\n      if(target.classList.contains('active') || id === prevId) {\n        return false;\n      }\n      \n      const prev = tabs.querySelector(tagName.toLowerCase() + '.active') as HTMLElement;\n\n      fastRaf(() => {\n        prev && prev.classList.remove('active');\n      });\n      \n      // stripe from ZINCHUK\n      if(useStripe && prevId !== -1 && animate) {\n        fastRaf(() => {\n          const indicator = target.querySelector('i')!;\n          const currentIndicator = target.parentElement.children[prevId].querySelector('i')!;\n    \n          currentIndicator.classList.remove('animate');\n          indicator.classList.remove('animate');\n    \n          // We move and resize our indicator so it repeats the position and size of the previous one.\n          const shiftLeft = currentIndicator.parentElement.parentElement.offsetLeft - indicator.parentElement.parentElement.offsetLeft;\n          const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\n          indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n  \n          //console.log(`translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`);\n    \n          requestAnimationFrame(() => {\n            // Now we remove the transform to let it animate to its own position and size.\n            indicator.classList.add('animate');\n            indicator.style.transform = 'none';\n          });\n        });\n      }\n      // stripe END\n\n      fastRaf(() => {\n        target.classList.add('active');\n      });\n      \n      selectTab(id, animate);\n    };\n\n    const useStripe = !tabs.classList.contains('no-stripe');\n\n    //const tagName = tabs.classList.contains('menu-horizontal-div') ? 'BUTTON' : 'LI';\n    const tagName = tabs.firstElementChild.tagName;\n    tabs.addEventListener('click', function(e) {\n      let target = e.target as HTMLElement;\n      \n      target = findUpAsChild(target, tabs);\n      \n      //console.log('tabs click:', target);\n      \n      if(!target) return false;\n\n      let id: number;\n      if(target.dataset.tab) {\n        id = +target.dataset.tab;\n        if(id === -1) {\n          return false;\n        }\n      } else {\n        id = whichChild(target);\n      }\n\n      selectTarget(target, id);\n    });\n\n    return proxy;\n  }\n  \n  return selectTab;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport rootScope from \"../lib/rootScope\";\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\nimport { dispatchHeavyAnimationEvent } from \"../hooks/useHeavyAnimationCheck\";\nimport whichChild from \"../helpers/dom/whichChild\";\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport { isSafari } from \"../helpers/userAgent\";\n\nfunction slideNavigation(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\n  const width = prevTabContent.getBoundingClientRect().width;\n  const elements = [tabContent, prevTabContent];\n  if(toRight) elements.reverse();\n  elements[0].style.filter = `brightness(80%)`;\n  elements[0].style.transform = `translate3d(${-width * .25}px, 0, 0)`;\n  elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\n  \n  tabContent.classList.add('active');\n  void tabContent.offsetWidth; // reflow\n\n  tabContent.style.transform = '';\n  tabContent.style.filter = '';\n\n  return () => {\n    prevTabContent.style.transform = prevTabContent.style.filter = '';\n  };\n}\n\nfunction slideTabs(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\n  // Jolly Cobra's // Workaround for scrollable content flickering during animation.\n  const scrollableContainer = findUpClassName(tabContent, 'scrollable-y');\n  if(scrollableContainer && scrollableContainer.style.overflowY !== 'hidden') {\n    // const scrollBarWidth = scrollableContainer.offsetWidth - scrollableContainer.clientWidth;\n    scrollableContainer.style.overflowY = 'hidden';\n    // scrollableContainer.style.paddingRight = `${scrollBarWidth}px`;\n    // this.container.classList.add('sliding');\n  }\n\n  //window.requestAnimationFrame(() => {\n    const width = prevTabContent.getBoundingClientRect().width;\n    /* tabContent.style.setProperty('--width', width + 'px');\n    prevTabContent.style.setProperty('--width', width + 'px');\n\n    tabContent.classList.add('active'); */\n    //void tabContent.offsetWidth; // reflow\n    const elements = [tabContent, prevTabContent];\n    if(toRight) elements.reverse();\n    elements[0].style.transform = `translate3d(${-width}px, 0, 0)`;\n    elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\n  \n    tabContent.classList.add('active');\n    void tabContent.offsetWidth; // reflow\n  \n    tabContent.style.transform = '';\n  //});\n  \n  return () => {\n    prevTabContent.style.transform = '';\n\n    if(scrollableContainer) {\n      // Jolly Cobra's // Workaround for scrollable content flickering during animation.\n      if(isSafari) { // ! safari doesn't respect sticky header, so it flicks when overflow is changing\n        scrollableContainer.style.display = 'none';\n      }\n\n      scrollableContainer.style.overflowY = '';\n\n      if(isSafari) {\n        void scrollableContainer.offsetLeft; // reflow\n        scrollableContainer.style.display = '';\n      }\n\n      // scrollableContainer.style.paddingRight = '0';\n      // this.container.classList.remove('sliding');\n    }\n  };\n}\n\nexport const TransitionSlider = (content: HTMLElement, type: 'tabs' | 'navigation' | 'zoom-fade' | 'slide-fade' | 'none'/*  | 'counter' */, transitionTime: number, onTransitionEnd?: (id: number) => void, isHeavy = true) => {\n  let animationFunction: TransitionFunction = null;\n\n  switch(type) {\n    case 'tabs':\n      animationFunction = slideTabs;\n      break;\n    case 'navigation':\n      animationFunction = slideNavigation;\n      break;\n    /* default:\n      break; */\n  }\n\n  content.dataset.animation = type;\n  \n  return Transition(content, animationFunction, transitionTime, onTransitionEnd, isHeavy);\n};\n\ntype TransitionFunction = (tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) => void | (() => void);\n\nconst Transition = (content: HTMLElement, animationFunction: TransitionFunction, transitionTime: number, onTransitionEnd?: (id: number) => void, isHeavy = true) => {\n  const onTransitionEndCallbacks: Map<HTMLElement, Function> = new Map();\n  let animationDeferred: CancellablePromise<void>;\n  let animationStarted = 0;\n  let from: HTMLElement = null;\n\n  // TODO: check for transition type (transform, etc) using by animationFunction\n  content.addEventListener(animationFunction ? 'transitionend' : 'animationend', (e) => {\n    if((e.target as HTMLElement).parentElement !== content) {\n      return;\n    }\n    \n    //console.log('Transition: transitionend', /* content, */ e, selectTab.prevId, performance.now() - animationStarted);\n\n    const callback = onTransitionEndCallbacks.get(e.target as HTMLElement);\n    if(callback) callback();\n\n    if(e.target !== from) {\n      return;\n    }\n\n    if(!animationDeferred && isHeavy) return;\n\n    if(animationDeferred) {\n      animationDeferred.resolve();\n      animationDeferred = undefined;\n    }\n\n    if(onTransitionEnd) {\n      onTransitionEnd(selectTab.prevId());\n    }\n\n    content.classList.remove('animating', 'backwards', 'disable-hover');\n  });\n\n  function selectTab(id: number | HTMLElement, animate = true) {\n    const self = selectTab;\n\n    if(id instanceof HTMLElement) {\n      id = whichChild(id);\n    }\n    \n    const prevId = self.prevId();\n    if(id === prevId) return false;\n\n    //console.log('selectTab id:', id);\n\n    const _from = from;\n    const to = content.children[id] as HTMLElement;\n\n    if(!rootScope.settings.animationsEnabled || prevId === -1) {\n      animate = false;\n    }\n\n    if(!animate) {\n      if(_from) _from.classList.remove('active', 'to', 'from');  \n      if(to) {\n        to.classList.remove('to', 'from');\n        to.classList.add('active');\n      }\n\n      content.classList.remove('animating', 'backwards', 'disable-hover');\n\n      from = to;\n\n      if(onTransitionEnd) onTransitionEnd(id);\n      return;\n    }\n\n    if(from) {\n      from.classList.remove('to');\n      from.classList.add('from');\n    }\n\n    content.classList.add('animating', 'disable-hover');\n    const toRight = prevId < id;\n    content.classList.toggle('backwards', !toRight);\n\n    let onTransitionEndCallback: ReturnType<TransitionFunction>;\n    if(!to) {\n      //prevTabContent.classList.remove('active');\n    } else {\n      if(animationFunction) {\n        onTransitionEndCallback = animationFunction(to, from, toRight);\n      } else {\n        to.classList.add('active');\n      }\n\n      to.classList.remove('from');\n      to.classList.add('to');\n    }\n    \n    if(to) {\n      onTransitionEndCallbacks.set(to, () => {\n        to.classList.remove('to');\n        onTransitionEndCallbacks.delete(to);\n      });\n    }\n\n    if(_from/*  && false */) {\n      const callback = () => {\n        _from.classList.remove('active', 'from');\n\n        if(onTransitionEndCallback) {\n          onTransitionEndCallback();\n        }\n\n        onTransitionEndCallbacks.delete(_from);\n      };\n\n      if(to) {\n        onTransitionEndCallbacks.set(_from, callback);\n      } else {\n        const timeout = window.setTimeout(callback, transitionTime);\n        onTransitionEndCallbacks.set(_from, () => {\n          clearTimeout(timeout);\n        });\n      }\n\n      if(isHeavy) {\n        if(!animationDeferred) {\n          animationDeferred = deferredPromise<void>();\n          animationStarted = performance.now();\n        }\n  \n        dispatchHeavyAnimationEvent(animationDeferred, transitionTime * 2);\n      }\n    }\n    \n    from = to;\n  }\n\n  //selectTab.prevId = -1;\n  selectTab.prevId = () => from ? whichChild(from) : -1;\n  \n  return selectTab;\n};\n\nexport default Transition;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { pause } from \"./schedulers\";\nimport { isAppleMobile } from \"./userAgent\";\n\nexport function preloadVideo(url: string): Promise<HTMLVideoElement> {\n  return new Promise((resolve, reject) => {\n    const video = document.createElement('video');\n    video.volume = 0;\n    video.onloadedmetadata = () => resolve(video);\n    video.onerror = reject;\n    video.src = url;\n  });\n}\n\nexport function createPosterFromVideo(video: HTMLVideoElement): Promise<Blob> {\n  return new Promise((resolve, reject) => {\n    video.onseeked = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = Math.min(1280, video.videoWidth);\n      canvas.height = Math.min(720, video.videoHeight);\n      const ctx = canvas.getContext('2d')!;\n      ctx.drawImage(video, 0, 0);\n      canvas.toBlob(blob => {\n        resolve(blob);\n      }, 'image/jpeg', 1);\n    };\n\n    video.onerror = reject;\n    video.currentTime = Math.min(video.duration, 1);\n  });\n}\n\nexport async function createPosterForVideo(url: string): Promise<Blob | undefined> {\n  const video = await preloadVideo(url);\n\n  return Promise.race([\n    pause(2000) as Promise<undefined>,\n    createPosterFromVideo(video),\n  ]);\n}\n\nexport function onVideoLoad(video: HTMLVideoElement) {\n  return new Promise<void>((resolve) => {\n    if(video.readyState >= video.HAVE_METADATA) {\n      resolve();\n      return;\n    }\n\n    video.addEventListener(isAppleMobile ? 'loadeddata' : 'canplay', () => resolve(), {once: true});\n  });\n}\n\nexport async function getFilesFromEvent(e: ClipboardEvent | DragEvent, onlyTypes = false): Promise<any[]> {\n  const files: any[] = [];\n\n  const scanFiles = async(entry: any, item: DataTransferItem) => {\n    if(entry.isDirectory) {\n      const directoryReader = entry.createReader();\n      await new Promise<void>((resolve, reject) => {\n        directoryReader.readEntries(async(entries: any) => {\n          for(const entry of entries) {\n            await scanFiles(entry, item);\n          }\n\n          resolve();\n        });\n      });\n    } else if(entry) {\n      if(onlyTypes) {\n        files.push(entry.type);\n      } else {\n        const itemFile = item.getAsFile(); // * Safari can't handle entry.file with pasting\n        const file = entry instanceof File ? \n          entry : \n          (\n            entry instanceof DataTransferItem ? \n              entry.getAsFile() : \n              await new Promise((resolve, reject) => entry.file(resolve, (err: any) => resolve(itemFile)))\n          );\n\n        /* if(!onlyTypes) {\n          console.log('getFilesFromEvent: got file', item, file);\n        } */\n\n        if(!file) return;\n        files.push(file);\n      }\n    }\n  };\n\n  if(e instanceof DragEvent && e.dataTransfer.files && !e.dataTransfer.items) {\n    for(let i = 0; i < e.dataTransfer.files.length; i++) {\n      const file = e.dataTransfer.files[i];\n      files.push(onlyTypes ? file.type : file);\n    }\n  } else {\n    // @ts-ignore\n    const items = (e.dataTransfer || e.clipboardData || e.originalEvent.clipboardData).items;\n\n    const promises: Promise<any>[] = [];\n    for(let i = 0; i < items.length; ++i) {\n      const item: DataTransferItem = items[i];\n      if(item.kind === 'file') {\n        const entry = (onlyTypes ? item : item.webkitGetAsEntry()) || item.getAsFile();\n        promises.push(scanFiles(entry, item));\n      }\n    }\n    \n    await Promise.all(promises);\n  }\n\n  /* if(!onlyTypes) {\n    console.log('getFilesFromEvent: got files:', e, files);\n  } */\n  \n  return files;\n}\n\nexport function requestFile(accept?: string) {\n  const input = document.createElement('input');\n  input.type = 'file';\n  input.style.display = 'none';\n\n  if(accept) {\n    input.accept = accept;\n  }\n\n  document.body.append(input);\n\n  const promise = new Promise<File>((resolve, reject) => {\n    input.addEventListener('change', (e: any) => {\n      const file: File = e.target.files[0];\n      if(!file) {\n        reject('NO_FILE_SELECTED');\n        return;\n      }\n  \n      resolve(file);\n    }, {once: true});\n  }).finally(() => {\n    input.remove();\n  });\n\n  input.click();\n\n  return promise;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// * Jolly Cobra's animation.ts\n\nimport { fastRaf } from './schedulers';\nimport { CancellablePromise, deferredPromise } from './cancellablePromise';\n\ninterface AnimationInstance {\n  isCancelled: boolean;\n  deferred: CancellablePromise<void>\n}\n\ntype AnimationInstanceKey = any;\nconst instances: Map<AnimationInstanceKey, AnimationInstance> = new Map();\n\nexport function createAnimationInstance(key: AnimationInstanceKey) {\n  cancelAnimationByKey(key);\n\n  const instance: AnimationInstance = {\n    isCancelled: false, \n    deferred: deferredPromise<void>()\n  };\n\n  instances.set(key, instance);\n  instance.deferred.then(() => {\n    instances.delete(key);\n  });\n\n  return instance;\n}\n\nexport function getAnimationInstance(key: AnimationInstanceKey) {\n  return instances.get(key);\n}\n\nexport function cancelAnimationByKey(key: AnimationInstanceKey) {\n  const instance = getAnimationInstance(key);\n  if(instance) {\n    instance.isCancelled = true;\n    instance.deferred.resolve();\n  }\n}\n\nexport function animateSingle(tick: Function, key: AnimationInstanceKey, instance?: AnimationInstance) {\n  if(!instance) {\n    instance = createAnimationInstance(key);\n  }\n\n  fastRaf(() => {\n    if(instance.isCancelled) {\n      return;\n    }\n    \n    if(tick()) {\n      animateSingle(tick, key, instance);\n    } else {\n      instance.deferred.resolve();\n    }\n  });\n\n  return instance.deferred;\n}\n\nexport function animate(tick: Function) {\n  fastRaf(() => {\n    if(tick()) {\n      animate(tick);\n    }\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\n\n/**\n * Descend sorted storage\n */\n\ntype ItemType = number;\n\nexport enum SliceEnd {\n  None = 0,\n  Top = 1,\n  Bottom = 2,\n  Both = SliceEnd.Top | SliceEnd.Bottom\n};\n\nexport interface Slice extends Array<ItemType> {\n  //slicedArray: SlicedArray;\n  end: SliceEnd;\n\n  isEnd: (side: SliceEnd) => boolean;\n  setEnd: (side: SliceEnd) => void;\n  unsetEnd: (side: SliceEnd) => void;\n\n  slice: (from?: number, to?: number) => Slice;\n  splice: (start: number, deleteCount: number, ...items: ItemType[]) => Slice;\n}\n\nexport interface SliceConstructor {\n  new(...items: ItemType[]): Slice;\n}\n\n// TODO: Clear empty arrays after deleting items\nexport default class SlicedArray {\n  private slices: Slice[]/*  = [[7,6,5],[4,3,2],[1,0,-1]] */;\n  private sliceConstructor: SliceConstructor;\n  \n  constructor() {\n    // @ts-ignore\n    this.sliceConstructor = SlicedArray.getSliceConstructor(this);\n\n    const first = this.constructSlice();\n    //first.setEnd(SliceEnd.Bottom);\n    this.slices = [first];\n  }\n\n  private static getSliceConstructor(slicedArray: SlicedArray) {\n    return class Slice extends Array<ItemType> implements Slice {\n      //slicedArray: SlicedArray;\n      end: SliceEnd = SliceEnd.None;\n  \n      /* constructor(...items: ItemType[]) {\n        super(...items);\n        //this.slicedArray = slicedArray;\n      } */\n  \n      isEnd(side: SliceEnd): boolean {\n        if((this.end & side) === side) {\n          return true;\n        }/*  else if(!this.slicedArray) {\n          return false;\n        } */\n  \n        let isEnd = false;\n        if(side === SliceEnd.Top) {\n          const slice = slicedArray.last;\n          isEnd = slice.end & side ? this.includes(slice[slice.length - 1])/*  || !slice.length */ : false;\n        } else if(side === SliceEnd.Bottom) {\n          const slice = slicedArray.first;\n          isEnd = slice.end & side ? this.includes(slice[0])/*  || !slice.length */ : false;\n        } else if(side === SliceEnd.Both) {\n          return this.isEnd(SliceEnd.Top) && this.isEnd(SliceEnd.Bottom);\n        }\n\n        if(isEnd) {\n          this.setEnd(side);\n        }\n  \n        return isEnd;\n      }\n  \n      setEnd(side: SliceEnd) {\n        this.end |= side;\n      }\n\n      unsetEnd(side: SliceEnd) {\n        this.end ^= side;\n      }\n\n      splice(start: number, deleteCount: number, ...items: ItemType[]) {\n        const ret = super.splice(start, deleteCount, ...items);\n\n        if(!this.length) {\n          const slices = slicedArray.slices as number[][];\n          const idx = slices.indexOf(this);\n          if(idx !== -1) {\n            if(slices.length === 1) { // left empty slice without ends\n              this.unsetEnd(SliceEnd.Both);\n            } else { // delete this slice\n              slices.splice(idx, 1);\n            }\n          }\n        }\n\n        return ret;\n      }\n    }\n  }\n\n  public constructSlice(...items: ItemType[]) {\n    //const slice = new Slice(this, ...items);\n    // can't pass items directly to constructor because first argument is length\n    const slice = new this.sliceConstructor(items.length);\n    for(let i = 0, length = items.length; i < length; ++i) {\n      slice[i] = items[i];\n    }\n    return slice;\n    \n    // ! code below will slow execution in 15 times\n    /* const self = this;\n    const p: Slice = new Proxy(slice, {\n      get: function(target, name: any) {\n        if(name === 'constructor') {\n          const p = new Proxy(Slice, {\n            construct: (target, args) => {\n              return self.constructSlice(...args);\n            }\n          });\n\n          return p;\n        }\n\n        return target[name];\n      }\n    });\n\n    return p; */\n\n    /*\n    var p = slicedArray.constructSlice();\n    p.length = 100000;\n    p.fill(255);\n\n    var a = new Array(100000);\n    a.fill(255);\n\n    var b = 0;\n    var perf = performance.now();\n    for(var i = 0; i < p.length; ++i) {\n        b += p[i];\n    }\n\n    console.log('perf 1', performance.now() - perf);\n\n    b = 0;\n    perf = performance.now();\n    for(var i = 0; i < a.length; ++i) {\n        b += a[i];\n    }\n\n    console.log('perf 2', performance.now() - perf);\n    */\n  }\n\n  public insertSlice(slice: ItemType[], flatten = true) {\n    if(!slice.length) {\n      return;\n    }\n\n    const first = this.slices[0];\n    if(!first.length) {\n      first.push(...slice);\n      return first;\n    }\n\n    const lowerBound = slice[slice.length - 1];\n    const upperBound = slice[0];\n\n    let foundSlice: Slice, lowerIndex = -1, upperIndex = -1, foundSliceIndex = 0;\n    for(; foundSliceIndex < this.slices.length; ++foundSliceIndex) {\n      foundSlice = this.slices[foundSliceIndex];\n      lowerIndex = foundSlice.indexOf(lowerBound);\n      upperIndex = foundSlice.indexOf(upperBound);\n      \n      if(upperIndex !== -1 && -1 !== lowerIndex) {\n        break;\n      } else if(upperIndex !== -1 || -1 !== lowerIndex) {\n        break;\n      }\n    }\n\n    if(upperIndex !== -1 && -1 !== lowerIndex) {\n\n    } else if(upperIndex !== -1) {  // ([1, 2, 3] | [1, 2, 3, 4, 5]) -> [1, 2, 3, 4, 5]\n      const sliced = slice.slice(foundSlice.length - upperIndex);\n      foundSlice.push(...sliced);\n    } else if(lowerIndex !== -1) {  // ([1, 2, 3] | [-1, 0, 1]) -> [-1, 0, 1, 2, 3]\n      const sliced = slice.slice(0, slice.length - lowerIndex - 1);\n      foundSlice.unshift(...sliced);\n    } else {\n      let insertIndex = 0;\n      for(const length = this.slices.length; insertIndex < length; ++insertIndex) { // * maybe should iterate from the end, could be faster ?\n        const s = this.slices[insertIndex];\n        if(slice[0] > s[0]) {\n          break;\n        }\n      }\n\n      this.slices.splice(insertIndex, 0, this.constructSlice(...slice));\n      foundSliceIndex = insertIndex;\n    }\n\n    if(flatten) {\n      return this.flatten(foundSliceIndex);\n    }\n  }\n\n  private flatten(foundSliceIndex: number) {\n    if(this.slices.length >= 2) {\n      for(let i = 0, length = this.slices.length; i < (length - 1); ++i) {\n        const prevSlice = this.slices[i];\n        const nextSlice = this.slices[i + 1];\n  \n        const upperIndex = prevSlice.indexOf(nextSlice[0]);\n        if(upperIndex !== -1) {\n          prevSlice.setEnd(nextSlice.end);\n          this.slices.splice(i + 1, 1);\n\n          if(i < foundSliceIndex) {\n            --foundSliceIndex;\n          }\n\n          --length; // respect array bounds\n          --i;      // repeat from the same place\n  \n          this.insertSlice(nextSlice, false);\n        }\n      }\n    }\n\n    return this.slices[foundSliceIndex];\n  }\n\n  // * \n  \n  get first() {\n    return this.slices[0];\n  }\n  \n  get last() {\n    return this.slices[this.slices.length - 1];\n  }\n\n  get slice() {\n    return this.first;\n  }\n\n  get length() {\n    return this.slice.length;\n  }\n\n  public findSlice(item: ItemType) {\n    for(let i = 0, length = this.slices.length; i < length; ++i) {\n      const slice = this.slices[i];\n      const index = slice.indexOf(item);\n      if(index !== -1) {\n        return {slice, index};\n      }\n    }\n    \n    return undefined;\n  }\n\n  public findSliceOffset(maxId: number) {\n    let slice: Slice;\n    for(let i = 0; i < this.slices.length; ++i) {\n      let offset = 0;\n      slice = this.slices[i];\n      if(slice.length < 2) {\n        continue;\n      }\n      \n      for(; offset < slice.length; offset++) {\n        if(maxId >= slice[offset]) {\n          /* if(!offset) { // because can't find 3 in [[5,4], [2,1]]\n            return undefined;\n          } */\n\n          return {\n            slice, \n            offset: maxId === slice[offset] ? offset : offset - 1\n          };\n        }\n      }\n    }\n\n    if(slice && slice.isEnd(SliceEnd.Top)) {\n      return {\n        slice,\n        offset: slice.length\n      };\n    }\n\n    return undefined;\n  }\n\n  // * https://core.telegram.org/api/offsets\n  public sliceMe(offsetId: number, add_offset: number, limit: number) {\n    let slice = this.slice;\n    let offset = 0;\n    let sliceOffset = 0;\n\n    if(offsetId) {\n      const pos = this.findSliceOffset(offsetId);\n      if(!pos) {\n        return undefined;\n      }\n\n      slice = pos.slice;\n      offset = sliceOffset = pos.offset;\n\n      if(slice.includes(offsetId)) {\n        sliceOffset += 1;\n      }\n\n      /* if(slice.includes(offsetId) && add_offset < 0) {\n        add_offset += 1;\n      } */\n    }\n\n    let sliceStart = Math.max(sliceOffset + add_offset, 0);\n    let sliceEnd = sliceOffset + add_offset + limit;\n    //const fixHalfBackLimit = add_offset && !(limit / add_offset % 2) && (sliceEnd % 2) ? 1 : 0;\n    //sliceEnd += fixHalfBackLimit;\n\n    const sliced = slice.slice(sliceStart, sliceEnd) as Slice;\n\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\n    const bottomWasMeantToLoad = Math.abs(add_offset);\n\n    // can use 'slice' here to check because if it's end, then 'sliced' is out of 'slice'\n    // useful when there is only 1 message in chat on its reopening\n    const topFulfilled = (slice.length - sliceOffset) >= topWasMeantToLoad || (slice.isEnd(SliceEnd.Top) ? (sliced.setEnd(SliceEnd.Top), true) : false);\n    const bottomFulfilled = (sliceOffset - bottomWasMeantToLoad) >= 0 || (slice.isEnd(SliceEnd.Bottom) ? (sliced.setEnd(SliceEnd.Bottom), true) : false);\n\n    //console.log('sliceMe', topFulfilled, bottomFulfilled);\n\n    return {\n      slice: sliced, \n      offsetIdOffset: offset,\n      fulfilled: SliceEnd.None | (topFulfilled && bottomFulfilled ? SliceEnd.Both : ((topFulfilled ? SliceEnd.Top : SliceEnd.None) | (bottomFulfilled ? SliceEnd.Bottom : SliceEnd.None)))\n    };\n  }\n\n  public unshift(...items: ItemType[]) {\n    let slice = this.first;\n    if(!slice.length) {\n      slice.setEnd(SliceEnd.Bottom);\n    } else if(!slice.isEnd(SliceEnd.Bottom)) {\n      slice = this.constructSlice();\n      slice.setEnd(SliceEnd.Bottom);\n      this.slices.unshift(slice);\n    }\n\n    slice.unshift(...items);\n  }\n\n  public push(...items: ItemType[]) {\n    let slice = this.last;\n    if(!slice.length) {\n      slice.setEnd(SliceEnd.Top);\n    } else if(!slice.isEnd(SliceEnd.Top)) {\n      slice = this.constructSlice();\n      slice.setEnd(SliceEnd.Top);\n      this.slices.push(slice);\n    }\n\n    slice.push(...items);\n  }\n\n  public delete(item: ItemType) {\n    const found = this.findSlice(item);\n    if(found) {\n      found.slice.splice(found.index, 1);\n      return true;\n    }\n\n    return false;\n  }\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.SlicedArray = SlicedArray);\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function findUpAsChild(el: any, parent: any) {\n  if(el.parentElement === parent) return el;\n  \n  while(el.parentElement) {\n    el = el.parentElement;\n    if(el.parentElement === parent) {\n      return el;\n    }\n  }\n\n  return null;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { copy } from \"../../helpers/object\";\nimport { InputMedia, MessageEntity } from \"../../layer\";\nimport { logger, LogTypes } from \"../logger\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport appMessagesManager from './appMessagesManager';\nimport appPeersManager from './appPeersManager';\nimport appUsersManager from \"./appUsersManager\";\n\nexport type PollAnswer = {\n  _: 'pollAnswer',\n  text: string,\n  option: Uint8Array\n};\n\nexport type PollAnswerVoters = {\n  _: 'pollAnswerVoters',\n  flags: number,\n  option: Uint8Array,\n  voters: number,\n\n  pFlags: Partial<{\n    chosen: true,\n    correct: true\n  }>\n};\n\nexport type PollResult = {\n  _: 'pollAnswerVoters',\n  flags: number,\n  option: Uint8Array,\n  voters: number,\n\n  pFlags?: Partial<{chosen: true, correct: true}>\n};\n\nexport type PollResults = {\n  _: 'pollResults',\n  flags: number,\n  results?: Array<PollResult>,\n  total_voters?: number,\n  recent_voters?: number[],\n  solution?: string,\n  solution_entities?: any[],\n\n  pFlags: Partial<{\n    min: true\n  }>,\n};\n\nexport type Poll = {\n  _: 'poll',\n  question: string,\n  id: string,\n  answers: Array<PollAnswer>,\n  close_period?: number,\n  close_date?: number\n\n  pFlags?: Partial<{\n    closed: true,\n    public_voters: true,\n    multiple_choice: true,\n    quiz: true\n  }>,\n  rQuestion?: string,\n  rReply?: string,\n  chosenIndexes?: number[]\n};\n\nexport class AppPollsManager {\n  public polls: {[id: string]: Poll} = {};\n  public results: {[id: string]: PollResults} = {};\n\n  private log = logger('POLLS', LogTypes.Error);\n\n  constructor() {\n    rootScope.addMultipleEventsListeners({\n      updateMessagePoll: (update) => {\n        this.log('updateMessagePoll:', update);\n\n        let poll: Poll = update.poll || this.polls[update.poll_id];\n        if(!poll) {\n          return;\n        }\n\n        poll = this.savePoll(poll, update.results as any);\n        rootScope.dispatchEvent('poll_update', {poll, results: update.results as any});\n      }\n    });\n  }\n\n  public savePoll(poll: Poll, results: PollResults) {\n    const id = poll.id;\n    if(this.polls[id]) {\n      poll = Object.assign(this.polls[id], poll);\n      this.saveResults(poll, results);\n      return poll;\n    }\n\n    this.polls[id] = poll;\n\n    poll.rQuestion = RichTextProcessor.wrapEmojiText(poll.question);\n    poll.rReply = RichTextProcessor.wrapEmojiText('📊') + ' ' + (poll.rQuestion || 'poll');\n    poll.chosenIndexes = [];\n    this.saveResults(poll, results);\n    return poll;\n  }\n\n  public saveResults(poll: Poll, results: PollResults) {\n    if(this.results[poll.id]) {\n      results = Object.assign(this.results[poll.id], results);\n    } else {\n      this.results[poll.id] = results;\n    }\n\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\n      poll.chosenIndexes.length = 0;\n      if(results?.results?.length) {\n        results.results.forEach((answer, idx) => {\n          if(answer.pFlags?.chosen) {\n            poll.chosenIndexes.push(idx);\n          }\n        });\n      }\n    }\n  }\n\n  public getPoll(pollId: string): {poll: Poll, results: PollResults} {\n    return {\n      poll: this.polls[pollId], \n      results: this.results[pollId]\n    };\n  }\n\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\n    if(solution) {\n      if(!solutionEntities) {\n        solutionEntities = [];\n      }\n\n      solution = RichTextProcessor.parseMarkdown(solution, solutionEntities);\n    } else {\n      solution = undefined; // can be string here\n    }\n\n    return {\n      _: 'inputMediaPoll',\n      poll,\n      correct_answers: correctAnswers,\n      solution,\n      solution_entities: solution ? solutionEntities : undefined\n    };\n  }\n\n  public sendVote(message: any, optionIds: number[]): Promise<void> {\n    const poll: Poll = message.media.poll;\n\n    const options: Uint8Array[] = optionIds.map(index => {\n      return poll.answers[index].option;\n    });\n    \n    const messageId = message.mid;\n    const peerId = message.peerId;\n    const inputPeer = appPeersManager.getInputPeerById(peerId);\n\n    if(message.pFlags.is_outgoing) {\n      return appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\n        this.log('invoke sendVote callback');\n        return this.sendVote(message, optionIds);\n      });\n    }\n\n    return apiManager.invokeApi('messages.sendVote', {\n      peer: inputPeer,\n      msg_id: appMessagesManager.getServerMessageId(message.mid),\n      options\n    }).then(updates => {\n      this.log('sendVote updates:', updates);\n      apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getResults(message: any) {\n    const inputPeer = appPeersManager.getInputPeerById(message.peerId);\n\n    return apiManager.invokeApi('messages.getPollResults', {\n      peer: inputPeer,\n      msg_id: appMessagesManager.getServerMessageId(message.mid)\n    }).then(updates => {\n      apiUpdatesManager.processUpdateMessage(updates);\n      this.log('getResults updates:', updates);\n    });\n  }\n\n  public getVotes(message: any, option?: Uint8Array, offset?: string, limit = 20) {\n    return apiManager.invokeApi('messages.getPollVotes', {\n      peer: appPeersManager.getInputPeerById(message.peerId),\n      id: appMessagesManager.getServerMessageId(message.mid),\n      option,\n      offset,\n      limit\n    }).then((votesList) => {\n      this.log('getPollVotes messages:', votesList);\n\n      appUsersManager.saveApiUsers(votesList.users);\n\n      return votesList;\n    });\n  }\n\n  public stopPoll(message: any) {\n    const poll: Poll = message.media.poll;\n    \n    if(poll.pFlags.closed) return Promise.resolve();\n\n    const newPoll = copy(poll);\n    newPoll.pFlags.closed = true;\n    return appMessagesManager.editMessage(message, undefined, {\n      newMedia: this.getInputMediaPoll(newPoll)\n    }).then(() => {\n      //console.log('stopped poll');\n    }, err => {\n      this.log.error('stopPoll error:', err);\n    });\n  }\n}\n\nconst appPollsManager = new AppPollsManager();\nMOUNT_CLASS_TO.appPollsManager = appPollsManager;\nexport default appPollsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\nimport { getHeavyAnimationPromise } from \"../hooks/useHeavyAnimationCheck\";\nimport { fastRaf } from \"./schedulers\";\n\ntype HeavyQueue<T> = {\n  items: any[], \n  process: (...args: any[]) => T,\n  context: any,\n  promise?: CancellablePromise<ReturnType<HeavyQueue<T>['process']>[]>\n};\nconst heavyQueue: HeavyQueue<any>[] = [];\nlet processingQueue = false;\n\nexport default function addHeavyTask<T>(queue: HeavyQueue<T>, method: 'push' | 'unshift' = 'push') {\n  if(!queue.items.length) {\n    return Promise.resolve([]);\n  }\n  \n  queue.promise = deferredPromise<T[]>();\n  heavyQueue[method](queue);\n  processHeavyQueue();\n\n  return queue.promise;\n}\n\nfunction processHeavyQueue() {\n  if(!processingQueue) {\n    const queue = heavyQueue.shift();\n    timedChunk(queue).finally(() => {\n      processingQueue = false;\n      if(heavyQueue.length) {\n        processHeavyQueue();\n      }\n    });\n  }\n}\n\nfunction timedChunk<T>(queue: HeavyQueue<T>) {\n  if(!queue.items.length) {\n    queue.promise.resolve([]);\n    return Promise.resolve([]);\n  }\n\n  const todo = queue.items.slice();\n  const results: T[] = [];\n\n  return new Promise<T[]>((resolve, reject) => {\n    const f = async() => {\n      const start = performance.now();\n\n      do {\n        await getHeavyAnimationPromise();\n        const possiblePromise = queue.process.apply(queue.context, todo.shift());\n        let realResult: T;\n        if(possiblePromise instanceof Promise) {\n          try {\n            realResult = await possiblePromise;\n          } catch(err) {\n            reject(err);\n            return;\n          }\n        } else {\n          realResult = possiblePromise;\n        }\n\n        results.push(realResult);\n      } while(todo.length > 0 && (performance.now() - start) < 6);\n\n      if(todo.length > 0) {\n        fastRaf(f);\n        //setTimeout(f, 25);\n      } else {\n        resolve(results);\n      }\n    };\n\n    fastRaf(f);\n    //setTimeout(f, 25);\n  }).then(queue.promise.resolve, queue.promise.reject);\n}","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type fastBlur from '../vendor/fastBlur';\nimport addHeavyTask from './heavyQueue';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nconst isFilterAvailable = 'filter' in (document.createElement('canvas').getContext('2d') || {});\nlet requireBlurPromise: Promise<any>;\nlet fastBlurFunc: typeof fastBlur;\nif(!isFilterAvailable) {\n  requireBlurPromise = import('../vendor/fastBlur').then(m => {\n    fastBlurFunc = m.default;\n  });\n} else {\n  requireBlurPromise = Promise.resolve();\n}\n\nfunction processBlurNext(img: HTMLImageElement, radius: number, iterations: number) {\n  return new Promise<string>((resolve) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    \n    const ctx = canvas.getContext('2d', {alpha: false});\n    if(isFilterAvailable) {\n      ctx.filter = `blur(${radius}px)`;\n      ctx.drawImage(img, -radius * 2, -radius * 2, canvas.width + radius * 4, canvas.height + radius * 4);\n    } else {\n      ctx.drawImage(img, 0, 0);\n      fastBlurFunc(ctx, 0, 0, canvas.width, canvas.height, radius, iterations);\n    }\n    \n    resolve(canvas.toDataURL());\n    /* if(DEBUG) {\n      console.log(`[blur] end, radius: ${radius}, iterations: ${iterations}, time: ${performance.now() - perf}`);\n    } */\n\n    /* canvas.toBlob(blob => {\n      resolve(URL.createObjectURL(blob));\n      \n      if(DEBUG) {\n        console.log(`[blur] end, radius: ${radius}, iterations: ${iterations}, time: ${performance.now() - perf}`);\n      }\n    }); */\n  });\n}\n\nconst blurPromises: Map<string, Promise<string>> = new Map();\nconst CACHE_SIZE = 1000;\n\nexport default function blur(dataUri: string, radius: number = RADIUS, iterations: number = ITERATIONS) {\n  if(!dataUri) {\n    console.error('no dataUri for blur', dataUri);\n    return Promise.resolve(dataUri);\n  }\n\n  if(blurPromises.size > CACHE_SIZE) {\n    blurPromises.clear();\n  }\n  \n  if(blurPromises.has(dataUri)) return blurPromises.get(dataUri);\n  const promise = new Promise<string>((resolve) => {\n    //return resolve(dataUri);\n    requireBlurPromise.then(() => {\n      const img = new Image();\n      img.onload = () => {\n        if(isFilterAvailable) {\n          processBlurNext(img, radius, iterations).then(resolve);\n        } else {\n          addHeavyTask({\n            items: [[img, radius, iterations]],\n            context: null,\n            process: processBlurNext\n          }, 'unshift').then(results => {\n            resolve(results[0]);\n          });\n        }\n      };\n      img.src = dataUri;\n\n      /* addHeavyTask({\n        items: [[dataUri, radius, iterations]],\n        context: null,\n        process: processBlur\n      }, 'unshift').then(results => {\n        resolve(results[0]);\n      }); */\n    });\n  });\n\n  blurPromises.set(dataUri, promise);\n\n  return promise;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport rootScope from \"../rootScope\";\nimport appPeersManager from \"./appPeersManager\";\nimport appMessagesManager from \"./appMessagesManager\";\nimport apiUpdatesManager from \"./apiUpdatesManager\";\nimport RichTextProcessor from \"../richtextprocessor\";\nimport serverTimeManager from \"../mtproto/serverTimeManager\";\nimport { MessageEntity, DraftMessage, MessagesSaveDraft } from \"../../layer\";\nimport apiManager from \"../mtproto/mtprotoworker\";\nimport { tsNow } from \"../../helpers/date\";\nimport { deepEqual } from \"../../helpers/object\";\nimport { isObject } from \"../mtproto/bin_utils\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport stateStorage from \"../stateStorage\";\n\nexport type MyDraftMessage = DraftMessage.draftMessage;\n\nexport class AppDraftsManager {\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage} = {};\n  private getAllDraftPromise: Promise<void> = null;\n\n  constructor() {\n    stateStorage.get('drafts').then(drafts => {\n      this.drafts = drafts || {};\n    });\n\n    rootScope.addMultipleEventsListeners({\n      updateDraftMessage: (update) => {\n        const peerID = appPeersManager.getPeerId(update.peer);\n        this.saveDraft(peerID, (update as any).threadId, update.draft, {notify: true});\n      }\n    });\n  }\n\n  private getKey(peerId: number, threadId?: number) {\n    return '' + peerId + (threadId ? '_' + threadId : '');\n  }\n\n  public getDraft(peerId: number, threadId?: number) {\n    return this.drafts[this.getKey(peerId, threadId)];\n  }\n\n  public addMissedDialogs() {\n    return this.getAllDrafts().then(() => {\n      for(const key in this.drafts) {\n        if(key.indexOf('_') !== -1) { // exclude threads\n          continue;\n        }\n\n        const peerId = +key;\n        const dialog = appMessagesManager.getDialogOnly(peerId);\n        if(!dialog) {\n          appMessagesManager.reloadConversation(peerId);\n          /* const dialog = appMessagesManager.generateDialog(peerId);\n          dialog.draft = this.drafts[key];\n          appMessagesManager.saveConversation(dialog);\n          appMessagesManager.newDialogsToHandle[peerId] = dialog;\n          appMessagesManager.scheduleHandleNewDialogs(); */\n        }\n      }\n    });\n  }\n\n  public getAllDrafts() {\n    return this.getAllDraftPromise || (this.getAllDraftPromise = new Promise((resolve) => {\n      apiManager.invokeApi('messages.getAllDrafts').then((updates) => {\n        const p = apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\n        p.then(() => {\n          apiUpdatesManager.processUpdateMessage(updates);\n        });\n        \n        resolve();\n      });\n    }));\n  }\n\n  public saveDraft(peerId: number, threadId: number, apiDraft: DraftMessage, options: Partial<{\n    notify: boolean\n  }> = {}) {\n    const draft = this.processApiDraft(apiDraft);\n\n    const key = this.getKey(peerId, threadId);\n    if(draft) {\n      this.drafts[key] = draft;\n    } else {\n      delete this.drafts[key];\n    }\n\n    stateStorage.set({\n      drafts: this.drafts\n    });\n\n    if(options.notify) {\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\n      rootScope.dispatchEvent('draft_updated', {\n        peerId,\n        threadId,\n        draft\n      });\n    }\n\n    return draft;\n  }\n\n  public draftsAreEqual(draft1: DraftMessage, draft2: DraftMessage) {\n    if(typeof(draft1) !== typeof(draft2)) {\n      return false;\n    }\n\n    if(!isObject(draft1)) {\n      return true;\n    }\n\n    if(draft1._ !== draft2._) {\n      return false;\n    }\n  \n    if(draft1._ === 'draftMessage' && draft2._ === draft1._) {\n      if(draft1.reply_to_msg_id !== draft2.reply_to_msg_id) {\n        return false;\n      }\n  \n      if(!deepEqual(draft1.entities, draft2.entities)) {\n        return false;\n      }\n  \n      if(draft1.message !== draft2.message) {\n        return false;\n      }\n  \n      if(draft1.pFlags.no_webpage !== draft2.pFlags.no_webpage) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  public isEmptyDraft(draft: DraftMessage) {\n    if(!draft || draft._ === 'draftMessageEmpty') {\n      return true;\n    }\n    \n    if(draft.reply_to_msg_id > 0) {\n      return false;\n    }\n    \n    if(!draft.message.length) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  public processApiDraft(draft: DraftMessage): MyDraftMessage {\n    if(!draft || draft._ !== 'draftMessage') {\n      return undefined;\n    }\n\n    const myEntities = RichTextProcessor.parseEntities(draft.message);\n    const apiEntities = draft.entities || [];\n    const totalEntities = RichTextProcessor.mergeEntities(apiEntities.slice(), myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n\n    draft.rMessage = RichTextProcessor.wrapDraftText(draft.message, {entities: totalEntities});\n    //draft.rReply = appMessagesManager.getRichReplyText(draft);\n    if(draft.reply_to_msg_id) {\n      draft.reply_to_msg_id = appMessagesManager.generateMessageId(draft.reply_to_msg_id);\n    }\n\n    return draft;\n  }\n\n  public async syncDraft(peerId: number, threadId: number, localDraft?: MyDraftMessage, saveOnServer = true) {\n    // console.warn(dT(), 'sync draft', peerID)\n    const serverDraft = this.getDraft(peerId, threadId);\n    if(this.draftsAreEqual(serverDraft, localDraft)) {\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\n      return true;\n    }\n\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\n    let params: MessagesSaveDraft = {\n      peer: appPeersManager.getInputPeerById(peerId),\n      message: ''\n    };\n\n    let draftObj: DraftMessage;\n    if(this.isEmptyDraft(localDraft)) {\n      draftObj = {_: 'draftMessageEmpty'};\n    } else {\n      let message = localDraft.message;\n      let entities: MessageEntity[] = localDraft.entities;\n\n      if(localDraft.reply_to_msg_id) {\n        params.reply_to_msg_id = appMessagesManager.getServerMessageId(localDraft.reply_to_msg_id);\n      }\n\n      if(entities?.length) {\n        params.entities = appMessagesManager.getInputEntities(entities);\n      }\n\n      if(localDraft.pFlags.no_webpage) {\n        params.no_webpage = localDraft.pFlags.no_webpage;\n      }\n\n      params.message = message;\n    }\n\n    const saveLocalDraft = draftObj || localDraft;\n    saveLocalDraft.date = tsNow(true) + serverTimeManager.serverTimeOffset;\n\n    this.saveDraft(peerId, threadId, saveLocalDraft, {notify: true});\n\n    if(saveOnServer && !threadId) {\n      return apiManager.invokeApi('messages.saveDraft', params);\n    }\n\n    return true;\n  }\n}\n\nconst appDraftsManager = new AppDraftsManager();\nMOUNT_CLASS_TO.appDraftsManager = appDraftsManager;\nexport default appDraftsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// Thanks to https://stackoverflow.com/a/49349813\nimport { clamp } from \"../helpers/number\";\n\n/**\n * Attibute modifier to create middle ellipsis\n * When the attribute value is left blank the ellipsis will be in the middle\n * When positive the attribute value will be used as a percentage\n * When negative the attribute value will be used as character index counted from the end\n * @example\n *   <div data-middle-ellipsis>A Javascript solution to middle ellipsis</div>\n *   <div data-middle-ellipsis=\"20\">A Javascript solution to middle ellipsis</div>\n *   <div data-middle-ellipsis=\"-3\">A Javascript solution to middle ellipsis</div>\n */\nconst ellipsis = '…';\nconst map: Map<HTMLElement, {\n  text: string,\n  textLength: number,\n  from: number,\n  multiplier: number,\n  font: string,\n  textWidth: number,\n  elementWidth: number\n}> = new Map();\n\nconst testQueue: Set<HTMLElement> = new Set();\nexport const fontFamily = 'Roboto, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif';\nconst fontSize = '16px';\nlet timeoutId: number;\n\nconst setTestQueue = () => {\n  cancelAnimationFrame(timeoutId);\n  timeoutId = window.requestAnimationFrame(testQueueElements);\n};\n\nconst testQueueElements = () => {\n  testQueue.forEach(testElement);\n  testQueue.clear();\n};\n\nwindow.addEventListener('resize', () => {\n  for(const [key] of map) {\n    testQueue.add(key);\n  }\n  \n  setTestQueue();\n}, {capture: true, passive: true});\n\nconst testElement = (element: HTMLElement) => {\n  //const perf = performance.now();\n  // do not recalculate variables a second time\n  let mapped = map.get(element);\n  const firstTime = !mapped;\n\n  let {text, textLength, from, multiplier, font, textWidth, elementWidth} = mapped || {};\n  //console.log('[MEE] testElement got mapped', mapped);\n\n  if(firstTime) {\n    text = element.textContent;\n    textLength = text.length;\n    from = /* parseFloat(element.getAttribute(attributeName)) ||  */50;\n    multiplier = from > 0 && from / 100;\n\n    //const perf = performance.now();\n    font = `${element.dataset.fontWeight || 400} ${fontSize} ${fontFamily}`;\n    /* const computedStyle = window.getComputedStyle(elm, null);\n    font = `${computedStyle.getPropertyValue('font-weight')} ${computedStyle.getPropertyValue('font-size')} ${computedStyle.getPropertyValue('font-family')}`; */\n    //console.log('testMiddleEllipsis get computed style:', performance.now() - perf, font);\n\n    textWidth = getTextWidth(text, font);\n    //const perf = performance.now();\n    elementWidth = element.getBoundingClientRect().width;\n    //console.log('testMiddleEllipsis get offsetWidth:', performance.now() - perf, font);\n    mapped = {text, textLength, from, multiplier, font, textWidth, elementWidth};\n    map.set(element, mapped);\n\n    //console.log('[MEE] testElement map set', element);\n  }\n  \n  const newElementWidth = element.getBoundingClientRect().width;\n  const widthChanged = firstTime || elementWidth !== newElementWidth;\n  !firstTime && widthChanged && (mapped.elementWidth = elementWidth = newElementWidth);\n  \n  if(widthChanged) {\n    if(textWidth > elementWidth) {\n      element.setAttribute('title', text);\n      let smallerText = text;\n      let smallerWidth = elementWidth;\n      while(smallerText.length > 3) {\n        let smallerTextLength = smallerText.length;\n        const half = multiplier &&\n          clamp(multiplier * smallerTextLength << 0, 1, smallerTextLength - 2) ||\n          Math.max(smallerTextLength + from - 1, 1);\n        const half1 = smallerText.substr(0, half).replace(/\\s*$/,'');\n        const half2 = smallerText.substr(half + 1).replace(/^\\s*/,'');\n        smallerText = half1 + half2;\n        smallerWidth = getTextWidth(smallerText + ellipsis, font);\n        if(smallerWidth < elementWidth) {\n          element.textContent = half1 + ellipsis + half2;\n          break;\n        }\n      }\n\n      // * set new width after cutting text\n      mapped.elementWidth = element.getBoundingClientRect().width;\n      //mapped.textWidth = smallerWidth;\n    } else {\n      element.removeAttribute('title');\n    }\n  }\n\n  //console.log('testMiddleEllipsis for element:', elm, performance.now() - perf);\n};\n\nlet context: CanvasRenderingContext2D;\n/**\n * Get the text width\n * @param {string} text\n * @param {string} font\n */\nfunction getTextWidth(text: string, font: string) {\n  //const perf = performance.now();\n  if(!context) {\n    const canvas = document.createElement('canvas');\n    context = canvas.getContext('2d');\n    context.font = font;\n  }\n\n  //context.font = font;\n  const metrics = context.measureText(text);\n  //console.log('getTextWidth perf:', performance.now() - perf);\n  return metrics.width;\n  //return Math.round(metrics.width);\n}\n\nexport class MiddleEllipsisElement extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    //console.log('[MEE]: connectedCallback before', map.has(this), testQueue.has(this), map.size, this.textContent, map);\n\n    map.set(this, null);\n    testQueue.add(this);\n    setTestQueue();\n    //testElement(this);\n\n    //console.log('[MEE]: connectedCallback after', map.has(this), map.size, testQueue.has(this), testQueue.size);\n  }\n\n  disconnectedCallback() {\n    const deleted = map.delete(this);\n    //console.log('[MEE]: disconnectedCallback', deleted, map.has(this), map.size, this.textContent, map);\n  }\n}\n\ncustomElements.define(\"middle-ellipsis-element\", MiddleEllipsisElement);\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport renderImageFromUrl from \"../../helpers/dom/renderImageFromUrl\";\nimport replaceContent from \"../../helpers/dom/replaceContent\";\nimport sequentialDom from \"../../helpers/sequentialDom\";\nimport { UserProfilePhoto, ChatPhoto, InputFileLocation } from \"../../layer\";\nimport RichTextProcessor from \"../richtextprocessor\";\nimport rootScope from \"../rootScope\";\nimport appDownloadManager from \"./appDownloadManager\";\nimport appPeersManager from \"./appPeersManager\";\nimport appPhotosManager from \"./appPhotosManager\";\nimport appUsersManager from \"./appUsersManager\";\n\ntype PeerPhotoSize = 'photo_small' | 'photo_big';\n\nexport class AppAvatarsManager {\n  private savedAvatarURLs: {\n    [peerId: number]: {\n      [size in PeerPhotoSize]?: string | Promise<string>\n    }\n  } = {};\n  \n  public removeFromAvatarsCache(peerId: number) {\n    if(this.savedAvatarURLs[peerId]) {\n      delete this.savedAvatarURLs[peerId];\n    }\n  }\n\n  public loadAvatar(peerId: number, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\n    const inputPeer = appPeersManager.getInputPeerById(peerId);\n\n    let cached = false;\n    let getAvatarPromise: Promise<string>;\n    let saved = this.savedAvatarURLs[peerId];\n    if(!saved || !saved[size]) {\n      if(!saved) {\n        saved = this.savedAvatarURLs[peerId] = {};\n      }\n\n      //console.warn('will invoke downloadSmallFile:', peerId);\n      const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\n        _: 'inputPeerPhotoFileLocation', \n        pFlags: {},\n        peer: inputPeer, \n        photo_id: photo.photo_id\n      };\n\n      if(size === 'photo_big') {\n        peerPhotoFileLocation.pFlags.big = true;\n      }\n\n      const downloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\n\n      /* let str: string;\n      const time = Date.now();\n      if(peerId === 0) {\n        str = `download avatar ${peerId}`;\n      } */\n\n      const promise = appDownloadManager.download(downloadOptions);\n      getAvatarPromise = saved[size] = promise.then(blob => {\n        return saved[size] = URL.createObjectURL(blob);\n\n        /* if(str) {\n          console.log(str, Date.now() / 1000, Date.now() - time);\n        } */\n      });\n    } else if(typeof(saved[size]) !== 'string') {\n      getAvatarPromise = saved[size] as Promise<any>;\n    } else {\n      getAvatarPromise = Promise.resolve(saved[size]);\n      cached = true;\n    }\n\n    return {cached, loadPromise: getAvatarPromise};\n  }\n\n  public putAvatar(div: HTMLElement, peerId: number, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize, img = new Image(), onlyThumb = false) {\n    let {cached, loadPromise} = this.loadAvatar(peerId, photo, size);\n\n    let renderThumbPromise: Promise<void>;\n    let callback: () => void;\n    if(cached) {\n      // смотри в misc.ts: renderImageFromUrl\n      callback = () => {\n        replaceContent(div, img);\n        div.dataset.color = '';\n      };\n    } else {\n      const animate = rootScope.settings.animationsEnabled;\n      if(animate) {\n        img.classList.add('fade-in');\n      }\n\n      let thumbImage: HTMLImageElement;\n      if(photo.stripped_thumb) {\n        thumbImage = new Image();\n        div.classList.add('avatar-relative');\n        thumbImage.classList.add('avatar-photo', 'avatar-photo-thumbnail');\n        img.classList.add('avatar-photo');\n        const url = appPhotosManager.getPreviewURLFromBytes(photo.stripped_thumb);\n        renderThumbPromise = renderImageFromUrl(thumbImage, url).then(() => {\n          replaceContent(div, thumbImage);\n        });\n      }\n\n      callback = () => {\n        if(photo.stripped_thumb) {\n          div.append(img);\n        } else {\n          replaceContent(div, img);\n        }\n\n        setTimeout(() => {\n          if(div.childElementCount) {\n            sequentialDom.mutateElement(img, () => {\n              div.dataset.color = '';\n              \n              if(animate) {\n                img.classList.remove('fade-in');\n              }\n\n              if(thumbImage) {\n                thumbImage.remove();\n              }\n            });\n          }\n        }, animate ? 200 : 0);\n      };\n    }\n\n    const renderPromise = loadPromise\n    .then((url) => renderImageFromUrl(img, url/* , false */))\n    .then(() => callback());\n\n    return {cached, loadPromise: renderThumbPromise || renderPromise};\n  }\n\n  // peerId === peerId || title\n  public putPhoto(div: HTMLElement, peerId: number, isDialog = false, title = '', onlyThumb = false) {\n    const photo = appPeersManager.getPeerPhoto(peerId);\n\n    const size: PeerPhotoSize = 'photo_small';\n    const avatarAvailable = !!photo;\n    const avatarRendered = div.firstElementChild && !(div.firstElementChild as HTMLElement).classList.contains('emoji');\n    \n    const myId = rootScope.myId;\n\n    //console.log('loadDialogPhoto location:', location, inputPeer);\n    if(peerId === myId && isDialog) {\n      div.innerText = '';\n      div.dataset.color = '';\n      div.classList.add('tgico-saved');\n      div.classList.remove('tgico-deletedaccount');\n      return;\n    }\n\n    if(peerId > 0) {\n      const user = appUsersManager.getUser(peerId);\n      if(user && user.pFlags && user.pFlags.deleted) {\n        div.innerText = '';\n        div.dataset.color = appPeersManager.getPeerColorById(peerId);\n        div.classList.add('tgico-deletedaccount');\n        div.classList.remove('tgico-saved');\n        return;\n      }\n    }\n\n    if(!avatarAvailable || !avatarRendered || !this.savedAvatarURLs[peerId]) {\n      let color = '';\n      if(peerId && (peerId !== myId || !isDialog)) {\n        color = appPeersManager.getPeerColorById(peerId);\n      }\n      \n      div.innerText = '';\n      div.classList.remove('tgico-saved', 'tgico-deletedaccount');\n      div.dataset.color = color;\n\n      let abbr: string;\n      if(!title) {\n        const peer = appPeersManager.getPeer(peerId);\n        abbr = peer.initials ?? '';\n      } else {\n        abbr = RichTextProcessor.getAbbreviation(title);\n      }\n\n      div.innerHTML = abbr;\n      //return Promise.resolve(true);\n    }\n\n    if(avatarAvailable/*  && false */) {\n      return this.putAvatar(div, peerId, photo, size, undefined, onlyThumb);\n    }\n  }\n}\n\nconst appAvatarsManager = new AppAvatarsManager();\nexport default appAvatarsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport { isSafari } from \"../helpers/userAgent\";\nimport { logger, LogTypes } from \"./logger\";\n\ntype Result = {\n  bytes: Uint8Array, \n  waveform?: Uint8Array\n};\n\ntype Task = {\n  pages: Uint8Array,\n  withWaveform: boolean,\n  waveform?: Uint8Array,\n  callback: {resolve: (result: Result) => void, reject: (err: any) => void},\n  timeout: number\n};\n\nexport class OpusDecodeController {\n  private worker: Worker;\n  private wavWorker : Worker;\n  private sampleRate = 48000;\n  private tasks: Array<Task> = [];\n  private keepAlive = false;\n  private isPlaySupportedResult: boolean;\n  private log = logger('OPUS', LogTypes.Error);\n\n  public isPlaySupported() {\n    if(this.isPlaySupportedResult !== undefined) return this.isPlaySupportedResult;\n\n    const audio = document.createElement('audio');\n    return this.isPlaySupportedResult = !!(audio.canPlayType && audio.canPlayType('audio/ogg;').replace(/no/, ''))/*  && false */;\n  }\n\n  public loadWavWorker() {\n    if(this.wavWorker) return;\n\n    this.wavWorker = new Worker('waveWorker.min.js');\n    this.wavWorker.addEventListener('message', (e) => {\n      const data = e.data;\n\n      this.log('[WAV] got message:', data);\n      if(data && data.page) {\n        const bytes = data.page;\n        this.onTaskEnd(this.tasks.shift(), bytes);\n      }\n    });\n  }\n\n  public loadWorker() {\n    if(this.worker) return;\n\n    this.worker = new Worker('decoderWorker.min.js');\n    this.worker.addEventListener('message', (e) => {\n      const data = e.data;\n      \n      this.log('[DECODER] got message', data);\n      if(data.type === 'done') {\n        //this.log('[DECODER] send done to wav');\n        this.wavWorker.postMessage({command: 'done'});\n\n        if(data.waveform) {\n          this.tasks[0].waveform = data.waveform;\n        }\n      } else { // e.data contains decoded buffers as float32 values\n        //this.log('[DECODER] send encode to wav');\n        this.wavWorker.postMessage({\n          command: 'encode',\n          buffers: e.data\n        }, isSafari ? undefined : data.map((typedArray: Uint8Array) => typedArray.buffer));\n      }\n    });\n  }\n\n  public setKeepAlive(keepAlive: boolean) {\n    this.keepAlive = keepAlive;\n    if(this.keepAlive) {\n      this.loadWorker();\n      this.loadWavWorker();\n    } else if(!this.tasks.length) {\n      this.terminateWorkers();\n    }\n  }\n\n  public onTaskEnd(task: Task, result?: Uint8Array) {\n    if(!result) {\n      task.callback.reject('timeout');\n    } else {\n      clearTimeout(task.timeout);\n      task.callback.resolve({bytes: result, waveform: task.waveform});\n    }\n\n    if(this.tasks.length) {\n      this.executeNewTask(this.tasks[0]);\n    }\n\n    this.terminateWorkers();\n  }\n\n  public terminateWorkers(kill = false) {\n    if((this.keepAlive || this.tasks.length) && !kill) return;\n\n    if(this.worker) {\n      this.worker.terminate();\n      this.worker = null;\n    }\n    \n    if(this.wavWorker) {\n      this.wavWorker.terminate();\n      this.wavWorker = null;\n    }\n  }\n\n  public executeNewTask(task: Task) {\n    this.worker.postMessage({ \n      command: 'init',\n      decoderSampleRate: this.sampleRate,\n      outputBufferSampleRate: this.sampleRate\n    });\n\n    this.wavWorker.postMessage({ \n      command: 'init',\n      wavBitDepth: 16,\n      wavSampleRate: this.sampleRate\n    });\n\n    //console.log('sending command to worker:', task);\n    //setTimeout(() => {\n      this.log('[DECODER] send decode');\n      this.worker.postMessage({\n        command: 'decode',\n        pages: task.pages,\n        waveform: task.withWaveform\n      }, isSafari ? undefined : [task.pages.buffer]);\n    //}, 1e3);\n\n    task.timeout = window.setTimeout(() => {\n      this.log.error('decode timeout'/* , task */);\n\n      this.terminateWorkers(true);\n      if(this.tasks.length) {\n        this.loadWorker();\n        this.loadWavWorker();\n      }\n\n      this.onTaskEnd(this.tasks.shift());\n    }, 10e3);\n  }\n\n  public pushDecodeTask(pages: Uint8Array, withWaveform: boolean) {\n    return new Promise<Result>((resolve, reject) => {\n      const task = {\n        pages,\n        withWaveform,\n        callback: {resolve, reject},\n        timeout: 0\n      };\n\n      this.loadWorker();\n      this.loadWavWorker();\n\n      if(this.tasks.push(task) === 1) {\n        this.executeNewTask(task);\n      }\n    });\n  }\n\n  public async decode(typedArray: Uint8Array, withWaveform = false) {\n    return this.pushDecodeTask(typedArray, withWaveform).then(result => {\n      const dataBlob = new Blob([result.bytes], {type: \"audio/wav\"});\n      return {url: URL.createObjectURL(dataBlob), waveform: result.waveform};\n    });\n  }\n}\n\nconst opusDecodeController = new OpusDecodeController();\nMOUNT_CLASS_TO.opusDecodeController = opusDecodeController;\nexport default opusDecodeController;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport appPhotosManager from \"./appPhotosManager\";\nimport appDocsManager from \"./appDocsManager\";\nimport { RichTextProcessor } from \"../richtextprocessor\";\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport rootScope from \"../rootScope\";\nimport { safeReplaceObject } from \"../../helpers/object\";\nimport { limitSymbols } from \"../../helpers/string\";\n\nexport class AppWebPagesManager {\n  private webpages: any = {};\n  private pendingWebPages: {\n    [webPageId: string]: {\n      [mid: string]: true\n    }\n  } = {};\n  \n  constructor() {\n    rootScope.addMultipleEventsListeners({\n      updateWebPage: (update) => {\n        this.saveWebPage(update.webpage);\n      }\n    });\n  }\n  \n  public saveWebPage(apiWebPage: any, mid?: number, mediaContext?: ReferenceContext) {\n    if(apiWebPage.photo && apiWebPage.photo._ === 'photo') {\n      //appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\n      apiWebPage.photo = appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\n    } else {\n      delete apiWebPage.photo;\n    }\n\n    if(apiWebPage.document && apiWebPage.document._ === 'document') {\n      apiWebPage.document = appDocsManager.saveDoc(apiWebPage.document, mediaContext); // warning 11.04.2020\n    } else {\n      if(apiWebPage.type === 'document') {\n        delete apiWebPage.type;\n      }\n\n      delete apiWebPage.document;\n    }\n    \n    const siteName = apiWebPage.site_name;\n    let shortTitle = apiWebPage.title || apiWebPage.author || siteName || '';\n    if(siteName && shortTitle === siteName) {\n      delete apiWebPage.site_name;\n    }\n\n    shortTitle = limitSymbols(shortTitle, 80, 100);\n\n    apiWebPage.rTitle = RichTextProcessor.wrapRichText(shortTitle, {noLinks: true, noLinebreaks: true});\n    let contextHashtag = '';\n    if(siteName === 'GitHub') {\n      const matches = apiWebPage.url.match(/(https?:\\/\\/github\\.com\\/[^\\/]+\\/[^\\/]+)/);\n      if(matches) {\n        contextHashtag = matches[0] + '/issues/{1}';\n      }\n    }\n\n    // delete apiWebPage.description\n    const shortDescriptionText = limitSymbols(apiWebPage.description || '', 150, 180);\n    apiWebPage.rDescription = RichTextProcessor.wrapRichText(shortDescriptionText, {\n      contextSite: siteName || 'external',\n      contextHashtag: contextHashtag\n    });\n    \n    if(apiWebPage.type !== 'photo' &&\n      apiWebPage.type !== 'video' &&\n      apiWebPage.type !== 'gif' &&\n      apiWebPage.type !== 'document' &&\n      !apiWebPage.description &&\n      apiWebPage.photo) {\n      apiWebPage.type = 'photo';\n    }\n    \n    if(mid) {\n      if(this.pendingWebPages[apiWebPage.id] === undefined) {\n        this.pendingWebPages[apiWebPage.id] = {};\n      }\n\n      this.pendingWebPages[apiWebPage.id][mid] = true;\n    }\n    \n    if(this.webpages[apiWebPage.id] === undefined) {\n      this.webpages[apiWebPage.id] = apiWebPage;\n    } else {\n      safeReplaceObject(this.webpages[apiWebPage.id], apiWebPage);\n    }\n    \n    if(!mid && this.pendingWebPages[apiWebPage.id] !== undefined) {\n      const msgs: number[] = [];\n      for(const msgId in this.pendingWebPages[apiWebPage.id]) {\n        msgs.push(+msgId);\n      }\n\n      rootScope.dispatchEvent('webpage_updated', {\n        id: apiWebPage.id,\n        msgs\n      });\n    }\n\n    return apiWebPage;\n  }\n\n  public deleteWebPageFromPending(webPage: any, mid: number) {\n    const id = webPage.id;\n    if(this.pendingWebPages[id] && this.pendingWebPages[id][mid]) {\n      delete this.pendingWebPages[id][mid];\n\n      if(!Object.keys(this.pendingWebPages[id]).length) {\n        delete this.pendingWebPages[id];\n      }\n    }\n  }\n\n  public getWebPage(id: string) {\n    return this.webpages[id];\n  }\n}\n\nexport default new AppWebPagesManager();\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function htmlToDocumentFragment(html: string) {\n  var template = document.createElement('template');\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  return template.content;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nfunction resizeableImage(originalImage: HTMLImageElement, canvas?: HTMLCanvasElement) {\n  let cropComponent: HTMLDivElement, \n    container: HTMLDivElement, \n    cropImage: HTMLImageElement, \n    event_state: Partial<{  \n      mouse_x: number,   \n      mouse_y: number,   \n      container_width: number,  \n      container_height: number,  \n      container_left: number,  \n      container_top: number\n    }> = {}, \n    keyZoomValue = 4.0, \n    MINWIDTH = 50, \n    MINHEIGHT = 50, \n    CROPWIDTH = 200, \n    CROPHEIGHT = 200, \n    cropLeft = 0, \n    cropTop = 0, \n    cropWidth = 0, \n    cropHeight = 0,\n    scaledRatio = 0;\n  \n  if(originalImage.complete) init();\n  else originalImage.onload = init;\n  \n  function removeHandlers() {\n    container.removeEventListener('mousedown', startMoving);\n    container.removeEventListener('touchstart', startMoving);\n    container.removeEventListener('wheel', resizing);\n    \n    document.removeEventListener('mouseup', endMoving);\n    document.removeEventListener('touchend', endMoving);\n    document.removeEventListener('mousemove', moving);\n    document.removeEventListener('touchmove', moving);\n    document.removeEventListener('keypress', keyHandler);\n\n    cropComponent.remove();\n    container.remove();\n    cropImage.remove();\n  }\n  \n  function addHandlers() {\n    container.addEventListener('mousedown', startMoving, false);\n    container.addEventListener('touchstart', startMoving, false);\n    container.addEventListener('wheel', resizing, false);\n    \n    document.addEventListener('keypress', keyHandler, false);\n    //document.querySelector('.btn-crop').addEventListener('click', openCropCanvasImg);\n  }\n  \n  function init() {\n    originalImage.classList.add('crop-blur');\n    originalImage.draggable = false;\n    \n    cropImage = new Image();\n    cropImage.src = originalImage.src;\n    cropImage.draggable = false;\n    cropImage.classList.add('crop-overlay-image');\n    \n    if(!canvas) {\n      canvas = document.createElement('canvas');\n    }\n    \n    cropComponent = document.createElement('div');\n    cropComponent.classList.add('crop-component');\n    \n    container = document.createElement('div');\n    container.classList.add('crop-overlay');\n    \n    const overlayColor = document.createElement('div');\n    overlayColor.classList.add('crop-overlay-color');\n    \n    cropComponent.appendChild(container);\n    const wrapper = originalImage.parentNode as HTMLElement;\n    wrapper.appendChild(cropComponent);\n    cropComponent.appendChild(cropImage);\n    cropComponent.appendChild(originalImage);\n    cropComponent.appendChild(overlayColor);\n    container.appendChild(cropImage);\n\n    cropImage.style.maxWidth = originalImage.width + 'px';\n\n    scaledRatio = originalImage.naturalWidth / originalImage.offsetWidth;\n    \n    const left = originalImage.offsetWidth / 2 - CROPWIDTH / 2;\n    const top = originalImage.offsetHeight / 2 - CROPHEIGHT / 2;\n    \n    updateCropSize(CROPWIDTH, CROPHEIGHT);\n    updateCropImage(left, top);\n    updateContainer(left, top);\n    addHandlers();\n    //crop();\n  }\n  \n  function updateCropSize(width: number, height: number) {\n    cropWidth = width * scaledRatio;\n    cropHeight = height * scaledRatio;\n\n    container.style.width = width + 'px';\n    container.style.height = height + 'px';\n  }\n  \n  function updateCropImage(left: number, top: number) {\n    cropTop = top * scaledRatio;\n    cropLeft = left * scaledRatio;\n\n    cropImage.style.top = -top + 'px';\n    cropImage.style.left = -left + 'px';\n  }\n  \n  function updateContainer(left: number, top: number) {\n    container.style.top = top + 'px';\n    container.style.left = left + 'px';\n  }\n  \n  // Save the initial event details and container state\n  function saveEventState(e: any) {\n    event_state.container_width = container.offsetWidth;\n    event_state.container_height = container.offsetHeight;\n    \n    event_state.container_left = container.offsetLeft;\n    event_state.container_top = container.offsetTop;\n    \n    event_state.mouse_x = (e.clientX || e.pageX || e.touches && e.touches[0].clientX) + window.scrollX;\n    event_state.mouse_y = (e.clientY || e.pageY || e.touches && e.touches[0].clientY) + window.scrollY;\n  }\n  \n  function imgZoom(zoom: number) {\n    zoom = zoom * Math.PI * 2\n    let newWidth = Math.floor(container.clientWidth + zoom), \n      newHeight = Math.floor(container.clientHeight + zoom), \n      w = cropImage.clientWidth, \n      h = cropImage.clientHeight, \n      left: number, \n      top: number, \n      right: number, \n      bottom: number;\n    \n    if(newWidth < MINWIDTH) {\n      return;\n    } else if(newWidth > w) {\n      return;\n    }\n    \n    left = container.offsetLeft - (zoom / 2);\n    top = container.offsetTop - (zoom / 2);\n    right = left + newWidth;\n    bottom = top + newHeight;\n    \n    if(left < 0) left = 0;\n    if(top < 0) top = 0;\n\n    if(right > w) return;\n    if(bottom > h) return;\n\n    updateCropSize(newWidth, newWidth);\n    updateCropImage(left, top);\n    updateContainer(left, top);\n    //crop();\n  }\n  \n  function keyHandler(e: KeyboardEvent) {\n    e.preventDefault();\n    \n    switch (String.fromCharCode(e.charCode)) {\n      case '+' :\n      imgZoom(keyZoomValue);\n      break;\n      case '-' :\n      imgZoom(-keyZoomValue);\n      break;\n    }\n  }\n  \n  function resizing(e: any) {\n    e.preventDefault();\n    imgZoom(e.deltaY > 0 ? 1 : -1);\n  }\n  \n  function startMoving(e: MouseEvent | TouchEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    saveEventState(e);\n    \n    document.addEventListener('mousemove', moving);\n    document.addEventListener('touchmove', moving);\n    document.addEventListener('mouseup', endMoving);\n    document.addEventListener('touchend', endMoving);\n  }\n  \n  function endMoving(e: MouseEvent | TouchEvent) {\n    e.preventDefault();\n    \n    document.removeEventListener('mouseup', endMoving);\n    document.removeEventListener('touchend', endMoving);\n    document.removeEventListener('mousemove', moving);\n    document.removeEventListener('touchmove', moving);\n  }\n  \n  function moving(e: any) {\n    let currentTouch = {x: 0, y: 0}, \n      left: number, \n      top: number, \n      w: number, \n      h: number;\n    \n    e.preventDefault();\n    e.stopPropagation();\n    \n    currentTouch.x = e.pageX || e.touches && e.touches[0].pageX;\n    currentTouch.y = e.pageY || e.touches && e.touches[0].pageY;\n    \n    left = currentTouch.x - (event_state.mouse_x - event_state.container_left);\n    top = currentTouch.y - (event_state.mouse_y - event_state.container_top);\n    w = container.offsetWidth;\n    h = container.offsetHeight;\n    \n    if(left < 0) left = 0;\n    else if(left > cropImage.offsetWidth - w) left = cropImage.offsetWidth - w;\n\n    if(top < 0) top = 0;\n    else if(top > cropImage.offsetHeight - h) top = cropImage.offsetHeight - h;\n    \n    updateCropImage(left, top);\n    updateContainer(left, top);\n    //crop();\n  }\n\n  function crop() {\n    canvas.width = cropWidth;\n    canvas.height = cropHeight;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(originalImage,\n      cropLeft, cropTop,\n      cropWidth, cropHeight,\n      0, 0,\n      cropWidth, cropHeight\n    );\n  }\n  \n  return {crop, removeHandlers};\n}\n\nexport default resizeableImage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appDownloadManager from \"../../lib/appManagers/appDownloadManager\";\nimport resizeableImage from \"../../lib/cropper\";\nimport PopupElement from \".\";\nimport { ripple } from \"../ripple\";\nimport { _i18n } from \"../../lib/langPack\";\n\nexport default class PopupAvatar extends PopupElement {\n  private cropContainer: HTMLElement;\n  private input: HTMLInputElement;\n  private btnSubmit: HTMLElement;\n  private h6: HTMLElement;\n\n  private image = new Image();\n\n  private canvas: HTMLCanvasElement;\n  private blob: Blob;\n  private cropper = {\n    crop: () => {},\n    removeHandlers: () => {}\n  };\n\n  private onCrop: (upload: () => ReturnType<typeof appDownloadManager.upload>) => void;\n\n  constructor() {\n    super('popup-avatar', null, {closable: true});\n\n    this.h6 = document.createElement('h6');\n    _i18n(this.h6, 'Popup.Avatar.Title');\n\n    this.btnClose.classList.remove('btn-icon');\n\n    this.header.append(this.h6);\n\n    this.cropContainer = document.createElement('div');\n    this.cropContainer.classList.add('crop');\n    this.cropContainer.append(this.image);\n\n    this.input = document.createElement('input');\n    this.input.type = 'file';\n    this.input.style.display = 'none';\n    this.input.addEventListener('change', (e: any) => {\n      const file = e.target.files[0];\n      if(!file) {\n        return;\n      }\n  \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const contents = e.target.result as string;\n        \n        this.image = new Image();\n        this.cropContainer.append(this.image);\n        this.image.src = contents;\n  \n        this.image.onload = () => {\n          /* let {w, h} = calcImageInBox(this.image.naturalWidth, this.image.naturalHeight, 460, 554);\n          cropContainer.style.width = w + 'px';\n          cropContainer.style.height = h + 'px'; */\n          this.show();\n  \n          this.cropper = resizeableImage(this.image, this.canvas);\n          this.input.value = '';\n        };\n      };\n  \n      reader.readAsDataURL(file);\n    }, false);\n\n    this.btnSubmit = document.createElement('button');\n    this.btnSubmit.className = 'btn-primary btn-color-primary btn-circle btn-crop btn-icon tgico-check z-depth-1';\n    ripple(this.btnSubmit);\n    this.btnSubmit.addEventListener('click', () => {\n      this.cropper.crop();\n      this.btnClose.click();\n\n      this.canvas.toBlob(blob => {\n        this.blob = blob; // save blob to send after reg\n        this.darkenCanvas();\n        this.resolve();\n      }, 'image/jpeg', 1);\n    });\n\n    this.container.append(this.cropContainer, this.btnSubmit, this.input);\n\n    this.onCloseAfterTimeout = () => {\n      this.cropper.removeHandlers();\n      if(this.image) {\n        this.image.remove();\n      }\n    };\n  }\n\n  private resolve() {\n    this.onCrop(() => {\n      return appDownloadManager.upload(this.blob);\n    });\n  }\n\n  public open(postCanvas: HTMLCanvasElement, onCrop: PopupAvatar['onCrop']) {\n    this.canvas = postCanvas;\n    this.onCrop = onCrop;\n\n    this.input.click();\n  }\n\n  public darkenCanvas() {\n    let ctx = this.canvas.getContext('2d');\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n}\n","'use strict'\n//@flow\n\n/** * * * * * * * * * *\n * Big Integer Library *\n * Created 2000        *\n * Leemon Baird        *\n * www.leemon.com      *\n * * * * * * * * * * * */\n\n////////////////////////////////////////////////////////////////////////////////////////\n// These functions are designed to avoid frequent dynamic memory allocation in the inner loop.\n// For most functions, if it needs a BigInt as a local variable it will actually use\n// a global, and will only allocate to it only when it's not the right size.  This ensures\n// that when a function is called repeatedly with same-sized parameters, it only allocates\n// memory on the first call.\n//\n// Note that for cryptographic purposes, the calls to Math.random() must\n// be replaced with calls to a better pseudorandom number generator.\n//\n// In the following, \"bigInt\" means a bigInt with at least one leading zero element,\n// and \"integer\" means a nonnegative integer less than radix.  In some cases, integer\n// can be negative.  Negative bigInts are 2s complement.\n//\n// The following functions do not modify their inputs.\n// Those returning a bigInt, string, or Array will dynamically allocate memory for that value.\n// Those returning a boolean will return the integer 0 (false) or 1 (true).\n// Those returning boolean or int will not allocate memory except possibly on the first\n// time they're called with a given parameter size.\n//\n// bigInt  add(x,y)               //return (x+y) for bigInts x and y.\n// bigInt  addInt(x,n)            //return (x+n) where x is a bigInt and n is an integer.\n// string  bigInt2str(x,base)     //return a string form of bigInt x in a given base, with 2 <= base <= 95\n// int     bitSize(x)             //return how many bits long the bigInt x is, not counting leading zeros\n// bigInt  dup(x)                 //return a copy of bigInt x\n// boolean equals(x,y)            //is the bigInt x equal to the bigint y?\n// boolean equalsInt(x,y)         //is bigint x equal to integer y?\n// bigInt  expand(x,n)            //return a copy of x with at least n elements, adding leading zeros if needed\n// Array   findPrimes(n)          //return array of all primes less than integer n\n// bigInt  GCD(x,y)               //return greatest common divisor of bigInts x and y (each with same number of elements).\n// boolean greater(x,y)           //is x>y?  (x and y are nonnegative bigInts)\n// boolean greaterShift(x,y,shift)//is (x <<(shift*bpe)) > y?\n// bigInt  int2bigInt(t,n,m)      //return a bigInt equal to integer t, with at least n bits and m array elements\n// bigInt  inverseMod(x,n)        //return (x**(-1) mod n) for bigInts x and n.  If no inverse exists, it returns null\n// int     inverseModInt(x,n)     //return x**(-1) mod n, for integers x and n.  Return 0 if there is no inverse\n// boolean isZero(x)              //is the bigInt x equal to zero?\n// boolean millerRabin(x,b)       //does one round of Miller-Rabin base integer b say that bigInt x is possibly prime? (b is bigInt, 1<b<x)\n// boolean millerRabinInt(x,b)    //does one round of Miller-Rabin base integer b say that bigInt x is possibly prime? (b is int,    1<b<x)\n// bigInt  mod(x,n)               //return a new bigInt equal to (x mod n) for bigInts x and n.\n// int     modInt(x,n)            //return x mod n for bigInt x and integer n.\n// bigInt  mult(x,y)              //return x*y for bigInts x and y. This is faster when y<x.\n// bigInt  multMod(x,y,n)         //return (x*y mod n) for bigInts x,y,n.  For greater speed, let y<x.\n// boolean negative(x)            //is bigInt x negative?\n// bigInt  powMod(x,y,n)          //return (x**y mod n) where x,y,n are bigInts and ** is exponentiation.  0**0=1. Faster for odd n.\n// bigInt  randBigInt(n,s)        //return an n-bit random BigInt (n>=1).  If s=1, then the most significant of those n bits is set to 1.\n// bigInt  randTruePrime(k)       //return a new, random, k-bit, true prime bigInt using Maurer's algorithm.\n// bigInt  randProbPrime(k)       //return a new, random, k-bit, probable prime bigInt (probability it's composite less than 2^-80).\n// bigInt  str2bigInt(s,b,n,m)    //return a bigInt for number represented in string s in base b with at least n bits and m array elements\n// bigInt  sub(x,y)               //return (x-y) for bigInts x and y.  Negative answers will be 2s complement\n// bigInt  trim(x,k)              //return a copy of x with exactly k leading zero elements\n//\n//\n// The following functions each have a non-underscored version, which most users should call instead.\n// These functions each write to a single parameter, and the caller is responsible for ensuring the array\n// passed in is large enough to hold the result.\n//\n// void    addInt_(x,n)          //do x=x+n where x is a bigInt and n is an integer\n// void    add_(x,y)             //do x=x+y for bigInts x and y\n// void    copy_(x,y)            //do x=y on bigInts x and y\n// void    copyInt_(x,n)         //do x=n on bigInt x and integer n\n// void    GCD_(x,y)             //set x to the greatest common divisor of bigInts x and y, (y is destroyed).  (This never overflows its array).\n// boolean inverseMod_(x,n)      //do x=x**(-1) mod n, for bigInts x and n. Returns 1 (0) if inverse does (doesn't) exist\n// void    mod_(x,n)             //do x=x mod n for bigInts x and n. (This never overflows its array).\n// void    mult_(x,y)            //do x=x*y for bigInts x and y.\n// void    multMod_(x,y,n)       //do x=x*y  mod n for bigInts x,y,n.\n// void    powMod_(x,y,n)        //do x=x**y mod n, where x,y,n are bigInts (n is odd) and ** is exponentiation.  0**0=1.\n// void    randBigInt_(b,n,s)    //do b = an n-bit random BigInt. if s=1, then nth bit (most significant bit) is set to 1. n>=1.\n// void    randTruePrime_(ans,k) //do ans = a random k-bit true random prime (not just probable prime) with 1 in the msb.\n// void    sub_(x,y)             //do x=x-y for bigInts x and y. Negative answers will be 2s complement.\n//\n// The following functions do NOT have a non-underscored version.\n// They each write a bigInt result to one or more parameters.  The caller is responsible for\n// ensuring the arrays passed in are large enough to hold the results.\n//\n// void addShift_(x,y,ys)       //do x=x+(y<<(ys*bpe))\n// void carry_(x)               //do carries and borrows so each element of the bigInt x fits in bpe bits.\n// void divide_(x,y,q,r)        //divide x by y giving quotient q and remainder r\n// int  divInt_(x,n)            //do x=floor(x/n) for bigInt x and integer n, and return the remainder. (This never overflows its array).\n// void eGCD_(x,y,d,a,b)        //sets a,b,d to positive bigInts such that d = GCD_(x,y) = a*x-b*y\n// void halve_(x)               //do x=floor(|x|/2)*sgn(x) for bigInt x in 2's complement.  (This never overflows its array).\n// void leftShift_(x,n)         //left shift bigInt x by n bits.  n<bpe.\n// void linComb_(x,y,a,b)       //do x=a*x+b*y for bigInts x and y and integers a and b\n// void linCombShift_(x,y,b,ys) //do x=x+b*(y<<(ys*bpe)) for bigInts x and y, and integers b and ys\n// void mont_(x,y,n,np)         //Montgomery multiplication (see comments where the function is defined)\n// void multInt_(x,n)           //do x=x*n where x is a bigInt and n is an integer.\n// void rightShift_(x,n)        //right shift bigInt x by n bits.  0 <= n < bpe. (This never overflows its array).\n// void squareMod_(x,n)         //do x=x*x  mod n for bigInts x,n\n// void subShift_(x,y,ys)       //do x=x-(y<<(ys*bpe)). Negative answers will be 2s complement.\n//\n// The following functions are based on algorithms from the _Handbook of Applied Cryptography_\n//    powMod_()           = algorithm 14.94, Montgomery exponentiation\n//    eGCD_,inverseMod_() = algorithm 14.61, Binary extended GCD_\n//    GCD_()              = algorothm 14.57, Lehmer's algorithm\n//    mont_()             = algorithm 14.36, Montgomery multiplication\n//    divide_()           = algorithm 14.20  Multiple-precision division\n//    squareMod_()        = algorithm 14.16  Multiple-precision squaring\n//    randTruePrime_()    = algorithm  4.62, Maurer's algorithm\n//    millerRabin()       = algorithm  4.24, Miller-Rabin algorithm\n//\n// Profiling shows:\n//     randTruePrime_() spends:\n//         10% of its time in calls to powMod_()\n//         85% of its time in calls to millerRabin()\n//     millerRabin() spends:\n//         99% of its time in calls to powMod_()   (always with a base of 2)\n//     powMod_() spends:\n//         94% of its time in calls to mont_()  (almost always with x==y)\n//\n// This suggests there are several ways to speed up this library slightly:\n//     - convert powMod_ to use a Montgomery form of k-ary window (or maybe a Montgomery form of sliding window)\n//         -- this should especially focus on being fast when raising 2 to a power mod n\n//     - convert randTruePrime_() to use a minimum r of 1/3 instead of 1/2 with the appropriate change to the test\n//     - tune the parameters in randTruePrime_(), including c, m, and recLimit\n//     - speed up the single loop in mont_() that takes 95% of the runtime, perhaps by reducing checking\n//       within the loop when all the parameters are the same length.\n//\n// There are several ideas that look like they wouldn't help much at all:\n//     - replacing trial division in randTruePrime_() with a sieve (that speeds up something taking almost no time anyway)\n//     - increase bpe from 15 to 30 (that would help if we had a 32*32->64 multiplier, but not with JavaScript's 32*32->32)\n//     - speeding up mont_(x,y,n,np) when x==y by doing a non-modular, non-Montgomery square\n//       followed by a Montgomery reduction.  The intermediate answer will be twice as long as x, so that\n//       method would be slower.  This is unfortunate because the code currently spends almost all of its time\n//       doing mont_(x,x,...), both for randTruePrime_() and powMod_().  A faster method for Montgomery squaring\n//       would have a large impact on the speed of randTruePrime_() and powMod_().  HAC has a couple of poorly-worded\n//       sentences that seem to imply it's faster to do a non-modular square followed by a single\n//       Montgomery reduction, but that's obviously wrong.\n////////////////////////////////////////////////////////////////////////////////////////\n\nexport type Bool = 1 | 0\n\n//globals\nexport var bpe = 0 //bits stored per array element\nvar mask = 0 //AND this with an array element to chop it down to bpe bits\nvar radix = mask + 1 //equals 2^bpe.  A single 1 bit to the left of the last bit of mask.\n\n//the digits for converting to different bases\nvar digitsStr =\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_=!@#$%^&*()[]{}|;:,.<>/?`~ \\\\\\'\"+-'\n\n//initialize the global variables\n\n//bpe=number of bits in the mantissa on this platform\nfor (bpe = 0; 1 << (bpe + 1) > 1 << bpe; bpe++);\nbpe >>= 1 //bpe=number of bits in one element of the array representing the bigInt\nmask = (1 << bpe) - 1 //AND the mask with an integer to get its bpe least significant bits\nradix = mask + 1 //2^bpe.  a single 1 bit to the left of the first bit of mask\nexport var one = int2bigInt(1, 1, 1) //constant used in powMod_()\nexport var zero = int2bigInt(0, 1, 1)\n\n//the following global variables are scratchpad memory to\n//reduce dynamic memory allocation in the inner loop\nvar t: number[] | number = new Array(0)\nvar ss = t //used in mult_()\nvar s0 = t //used in multMod_(), squareMod_()\n// var s1=t;    //used in powMod_(), multMod_(), squareMod_()\n// var s2=t;    //used in powMod_(), multMod_()\nvar s3 = t //used in powMod_()\nvar s4 = t,\n    s5 = t //used in mod_()\nvar s6 = t //used in bigInt2str()\nvar s7 = t //used in powMod_()\nvar T = t //used in GCD_()\nvar sa = t //used in mont_()\nvar mr_x1 = t,\n    mr_r = t,\n    mr_a = t, //used in millerRabin()\n    eg_v = t,\n    eg_u = t,\n    eg_A = t,\n    eg_B = t,\n    eg_C = t,\n    eg_D = t, //used in eGCD_(), inverseMod_()\n    //, md_q1=t, md_q2=t, md_q3=t, md_r=t, md_r1=t, md_r2=t, md_tt=t, //used in mod_()\n\n    primes = t,\n    pows = t,\n    s_i = t,\n    s_i2 = t,\n    s_R = t,\n    s_rm = t,\n    s_q = t,\n    s_n1 = t,\n    s_a = t,\n    s_r2 = t,\n    s_n = t,\n    s_b = t,\n    s_d = t,\n    s_x1 = t,\n    s_x2 = t,\n    s_aa = t, //used in randTruePrime_()\n    rpprb = t //used in randProbPrimeRounds() (which also uses \"primes\")\n\n////////////////////////////////////////////////////////////////////////////////////////\n\nvar k, buff\n\n/**\n * return array of all primes less than integer n\n *\n * @param {number} n\n * @returns {number[]}\n */\nexport function findPrimes(n: number): number[] {\n  var i, s, p, ans\n  s = new Array(n)\n  for (i = 0; i < n; i++) s[i] = 0\n  s[0] = 2\n  p = 0 //first p elements of s are primes, the rest are a sieve\n  for (; s[p] < n; ) {\n    //s[p] is the pth prime\n    for (\n      i = s[p] * s[p];\n      i < n;\n      i += s[p] //mark multiples of s[p]\n    )\n      s[i] = 1\n    p++\n    s[p] = s[p - 1] + 1\n    for (; s[p] < n && s[s[p]]; s[p]++); //find next prime (where s[p]==0)\n  }\n  ans = new Array(p)\n  for (i = 0; i < p; i++) ans[i] = s[i]\n  return ans\n}\n\n/**\n * does a single round of Miller-Rabin base b consider x to be a possible prime?\n *\n * x is a bigInt, and b is an integer, with b<x\n *\n * @export\n * @param {number[]} x\n * @param {number} b\n * @returns {(0 | 1)}\n */\nexport function millerRabinInt(x: number[], b: number): Bool {\n  if (mr_x1.length !== x.length) {\n    mr_x1 = dup(x)\n    mr_r = dup(x)\n    mr_a = dup(x)\n  }\n\n  copyInt_(mr_a, b)\n  return millerRabin(x, mr_a)\n}\n\n/**\n * does a single round of Miller-Rabin base b consider x to be a possible prime?\n *\n * x and b are bigInts with b<x\n *\n * @export\n * @param {number[]} x\n * @param {number[]} b\n * @returns {(0 | 1)}\n */\nexport function millerRabin(x: number[], b: number[]): Bool {\n  var i, j, k, s\n\n  if (mr_x1.length !== x.length) {\n    mr_x1 = dup(x)\n    mr_r = dup(x)\n    mr_a = dup(x)\n  }\n\n  copy_(mr_a, b)\n  copy_(mr_r, x)\n  copy_(mr_x1, x)\n\n  addInt_(mr_r, -1)\n  addInt_(mr_x1, -1)\n\n  //s=the highest power of two that divides mr_r\n  k = 0\n  for (i = 0; i < mr_r.length; i++)\n    for (j = 1; j < mask; j <<= 1)\n      if (x[i] & j) {\n        s = k < mr_r.length + bpe ? k : 0\n        i = mr_r.length\n        j = mask\n      } else k++\n\n  if (s) rightShift_(mr_r, s)\n\n  powMod_(mr_a, mr_r, x)\n\n  if (!equalsInt(mr_a, 1) && !equals(mr_a, mr_x1)) {\n    j = 1\n    //$off\n    while (j <= s - 1 && !equals(mr_a, mr_x1)) {\n      squareMod_(mr_a, x)\n      if (equalsInt(mr_a, 1)) {\n        return 0\n      }\n      j++\n    }\n    if (!equals(mr_a, mr_x1)) {\n      return 0\n    }\n  }\n  return 1\n}\n\n/**\n * returns how many bits long the bigInt is, not counting leading zeros.\n *\n * @param {number[]} x\n * @returns {number}\n */\nexport function bitSize(x: number[]): number {\n  var j, z, w\n  for (j = x.length - 1; x[j] == 0 && j > 0; j--);\n  for (z = 0, w = x[j]; w; w >>= 1, z++);\n  z += bpe * j\n  return z\n}\n\n/**\n * return a copy of x with at least n elements, adding leading zeros if needed\n *\n * @param {number[]} x\n * @param {number} n\n * @returns {number[]}\n */\nexport function expand(x: number[], n: number): number[] {\n  var ans = int2bigInt(0, (x.length > n ? x.length : n) * bpe, 0)\n  copy_(ans, x)\n  return ans\n}\n\n/**\n * return a k-bit true random prime using Maurer's algorithm.\n *\n * @export\n * @param {number} k\n * @returns {number[]}\n */\nexport function randTruePrime(k: number): number[] {\n  var ans = int2bigInt(0, k, 0)\n  randTruePrime_(ans, k)\n  return trim(ans, 1)\n}\n\n/**\n * return a k-bit random probable prime with probability of error < 2^-80\n *\n * @export\n * @param {number} k\n * @returns {number[]}\n */\nexport function randProbPrime(k: number): number[] {\n  if (k >= 600) return randProbPrimeRounds(k, 2) //numbers from HAC table 4.3\n  if (k >= 550) return randProbPrimeRounds(k, 4)\n  if (k >= 500) return randProbPrimeRounds(k, 5)\n  if (k >= 400) return randProbPrimeRounds(k, 6)\n  if (k >= 350) return randProbPrimeRounds(k, 7)\n  if (k >= 300) return randProbPrimeRounds(k, 9)\n  if (k >= 250) return randProbPrimeRounds(k, 12) //numbers from HAC table 4.4\n  if (k >= 200) return randProbPrimeRounds(k, 15)\n  if (k >= 150) return randProbPrimeRounds(k, 18)\n  if (k >= 100) return randProbPrimeRounds(k, 27)\n  return randProbPrimeRounds(k, 40) //number from HAC remark 4.26 (only an estimate)\n}\n\n/**\n * return a k-bit probable random prime using n rounds of Miller Rabin\n * (after trial division with small primes)\n *\n * @export\n * @param {number} k\n * @param {number} n\n * @returns {number[]}\n */\nexport function randProbPrimeRounds(k: number, n: number): number[] {\n  var ans, i, divisible, B\n  B = 30000 //B is largest prime to use in trial division\n  ans = int2bigInt(0, k, 0)\n\n  //optimization: try larger and smaller B to find the best limit.\n\n  if (primes.length === 0) primes = findPrimes(30000) //check for divisibility by primes <=30000\n\n  if (rpprb.length !== ans.length) rpprb = dup(ans)\n\n  for (;;) {\n    //keep trying random values for ans until one appears to be prime\n    //optimization: pick a random number times L=2*3*5*...*p, plus a\n    //   random element of the list of all numbers in [0,L) not divisible by any prime up to p.\n    //   This can reduce the amount of random number generation.\n\n    randBigInt_(ans, k, 0) //ans = a random odd number to check\n    ans[0] |= 1\n    divisible = 0\n\n    //check ans for divisibility by small primes up to B\n    for (i = 0; i < primes.length && primes[i] <= B; i++)\n      if (modInt(ans, primes[i]) === 0 && !equalsInt(ans, primes[i])) {\n        divisible = 1\n        break\n      }\n\n    //optimization: change millerRabin so the base can be bigger than the number being checked, then eliminate the while here.\n\n    //do n rounds of Miller Rabin, with random bases less than ans\n    for (i = 0; i < n && !divisible; i++) {\n      randBigInt_(rpprb, k, 0)\n      while (\n        !greater(ans, rpprb) //pick a random rpprb that's < ans\n      )\n        randBigInt_(rpprb, k, 0)\n      if (!millerRabin(ans, rpprb)) divisible = 1\n    }\n\n    if (!divisible) return ans\n  }\n  /*::\n  declare var never: empty\n  return never\n  */\n}\n\n/**\n * return a new bigInt equal to (x mod n) for bigInts x and n.\n *\n * @param {number[]} x\n * @param {number[]} n\n * @returns {number[]}\n */\nexport function mod(x: number[], n: number[]): number[] {\n  var ans = dup(x)\n  mod_(ans, n)\n  return trim(ans, 1)\n}\n\n/**\n * return (x+n) where x is a bigInt and n is an integer.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {number[]}\n */\nexport function addInt(x: number[], n: number): number[] {\n  var ans = expand(x, x.length + 1)\n  addInt_(ans, n)\n  return trim(ans, 1)\n}\n\n/**\n * return x*y for bigInts x and y. This is faster when y<x.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function mult(x: number[], y: number[]): number[] {\n  var ans = expand(x, x.length + y.length)\n  mult_(ans, y)\n  return trim(ans, 1)\n}\n\n/**\n * return (x**y mod n) where x,y,n are bigInts and ** is exponentiation.\n *\n * 0**0=1.\n *\n * Faster for odd n.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @returns {number[]}\n */\nexport function powMod(x: number[], y: number[], n: number[]): number[] {\n  var ans = expand(x, n.length)\n  powMod_(\n    //this should work without the trim, but doesn't\n    ans,\n    trim(y, 2),\n    trim(n, 2),\n  )\n  return trim(ans, 1)\n}\n\n/**\n * Simple pow with no optimizations (in 40x times slower than jsbn's pow)\n * @param x bigInt\n * @param e\n */\nexport function pow(x: number[], e: number) {\n  let ans = dup(x);\n  e -= 1;\n  for(let i = 0; i < e; ++i) {\n    ans = mult(ans, x);\n  }\n  return trim(ans, 1);\n}\n\n/**\n * return (x-y) for bigInts x and y\n *\n * Negative answers will be 2s complement\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function sub(x: number[], y: number[]): number[] {\n  var ans = expand(x, x.length > y.length ? x.length + 1 : y.length + 1)\n  sub_(ans, y)\n  return trim(ans, 1)\n}\n\n/**\n * return (x+y) for bigInts x and y\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function add(x: number[], y: number[]): number[] {\n  var ans = expand(x, x.length > y.length ? x.length + 1 : y.length + 1)\n  add_(ans, y)\n  return trim(ans, 1)\n}\n\n/**\n * return (x**(-1) mod n) for bigInts x and n.\n *\n * If no inverse exists, it returns null\n *\n * @param {number[]} x\n * @param {number[]} n\n * @returns {(number[] | null)}\n */\nexport function inverseMod(x: number[], n: number[]): number[] | null {\n  var ans = expand(x, n.length)\n  var s = inverseMod_(ans, n)\n  return s ? trim(ans, 1) : null\n}\n\n/**\n * return (x*y mod n) for bigInts x,y,n.\n *\n * For greater speed, let y<x.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @returns {number[]}\n */\nexport function multMod(x: number[], y: number[], n: number[]): number[] {\n  var ans = expand(x, n.length)\n  multMod_(ans, y, n)\n  return trim(ans, 1)\n}\n\n/**\n * generate a k-bit true random prime using Maurer's algorithm, and put it into ans.\n *\n * The bigInt ans must be large enough to hold it.\n *\n * @export\n * @param {number[]} ans\n * @param {number} k\n * @return {void}\n */\nexport function randTruePrime_(ans: number[], k: number): void {\n  var c, m, pm, dd, j, r, B, divisible, z, zz, recSize\n  var w\n  if (primes.length == 0) primes = findPrimes(30000) //check for divisibility by primes <=30000\n\n  if (pows.length == 0) {\n    pows = new Array(512)\n    for (j = 0; j < 512; j++) {\n      pows[j] = Math.pow(2, j / 511 - 1)\n    }\n  }\n\n  //c and m should be tuned for a particular machine and value of k, to maximize speed\n  c = 0.1 //c=0.1 in HAC\n  m = 20 //generate this k-bit number by first recursively generating a number that has between k/2 and k-m bits\n  var recLimit = 20 //stop recursion when k <=recLimit.  Must have recLimit >= 2\n\n  if (s_i2.length != ans.length) {\n    s_i2 = dup(ans)\n    s_R = dup(ans)\n    s_n1 = dup(ans)\n    s_r2 = dup(ans)\n    s_d = dup(ans)\n    s_x1 = dup(ans) //TODO Seems like a bug in eslint, reports as unused\n    s_x2 = dup(ans)\n    s_b = dup(ans)\n    s_n = dup(ans)\n    s_i = dup(ans)\n    s_rm = dup(ans)\n    s_q = dup(ans)\n    s_a = dup(ans)\n    s_aa = dup(ans)\n  }\n\n  if (k <= recLimit) {\n    //generate small random primes by trial division up to its square root\n    pm = (1 << ((k + 2) >> 1)) - 1 //pm is binary number with all ones, just over sqrt(2^k)\n    copyInt_(ans, 0)\n    for (dd = 1; dd; ) {\n      dd = 0\n      ans[0] = 1 | (1 << (k - 1)) | Math.floor(Math.random() * (1 << k)) //random, k-bit, odd integer, with msb 1\n      for (j = 1; j < primes.length && (primes[j] & pm) == primes[j]; j++) {\n        //trial division by all primes 3...sqrt(2^k)\n        if (0 == ans[0] % primes[j]) {\n          dd = 1\n          break\n        }\n      }\n    }\n    carry_(ans)\n    return\n  }\n\n  B = c * k * k //try small primes up to B (or all the primes[] array if the largest is less than B).\n  if (k > 2 * m)\n    //generate this k-bit number by first recursively generating a number that has between k/2 and k-m bits\n    for (r = 1; k - k * r <= m; ) r = pows[Math.floor(Math.random() * 512)] //r=Math.pow(2,Math.random()-1);\n  else r = 0.5\n\n  //simulation suggests the more complex algorithm using r=.333 is only slightly faster.\n\n  recSize = Math.floor(r * k) + 1\n\n  randTruePrime_(s_q, recSize)\n  copyInt_(s_i2, 0)\n  s_i2[Math.floor((k - 2) / bpe)] |= 1 << ((k - 2) % bpe) //s_i2=2^(k-2)\n  divide_(s_i2, s_q, s_i, s_rm) //s_i=floor((2^(k-1))/(2q))\n\n  z = bitSize(s_i)\n\n  for (;;) {\n    for (;;) {\n      //generate z-bit numbers until one falls in the range [0,s_i-1]\n      randBigInt_(s_R, z, 0)\n      if (greater(s_i, s_R)) break\n    } //now s_R is in the range [0,s_i-1]\n    addInt_(s_R, 1) //now s_R is in the range [1,s_i]\n    add_(s_R, s_i) //now s_R is in the range [s_i+1,2*s_i]\n\n    copy_(s_n, s_q)\n    mult_(s_n, s_R)\n    multInt_(s_n, 2)\n    addInt_(s_n, 1) //s_n=2*s_R*s_q+1\n\n    copy_(s_r2, s_R)\n    multInt_(s_r2, 2) //s_r2=2*s_R\n\n    //check s_n for divisibility by small primes up to B\n    for (divisible = 0, j = 0; j < primes.length && primes[j] < B; j++)\n      if (modInt(s_n, primes[j]) == 0 && !equalsInt(s_n, primes[j])) {\n        divisible = 1\n        break\n      }\n\n    if (!divisible)\n      if (!millerRabinInt(s_n, 2))\n        //if it passes small primes check, then try a single Miller-Rabin base 2\n        //this line represents 75% of the total runtime for randTruePrime_\n        divisible = 1\n\n    if (!divisible) {\n      //if it passes that test, continue checking s_n\n      addInt_(s_n, -3)\n      for (j = s_n.length - 1; s_n[j] == 0 && j > 0; j--); //strip leading zeros\n      for (zz = 0, w = s_n[j]; w; w >>= 1, zz++);\n      zz += bpe * j //zz=number of bits in s_n, ignoring leading zeros\n      for (;;) {\n        //generate z-bit numbers until one falls in the range [0,s_n-1]\n        randBigInt_(s_a, zz, 0)\n        if (greater(s_n, s_a)) break\n      } //now s_a is in the range [0,s_n-1]\n      addInt_(s_n, 3) //now s_a is in the range [0,s_n-4]\n      addInt_(s_a, 2) //now s_a is in the range [2,s_n-2]\n      copy_(s_b, s_a)\n      copy_(s_n1, s_n)\n      addInt_(s_n1, -1)\n      powMod_(s_b, s_n1, s_n) //s_b=s_a^(s_n-1) modulo s_n\n      addInt_(s_b, -1)\n      if (isZero(s_b)) {\n        copy_(s_b, s_a)\n        powMod_(s_b, s_r2, s_n)\n        addInt_(s_b, -1)\n        copy_(s_aa, s_n)\n        copy_(s_d, s_b)\n        GCD_(s_d, s_n) //if s_b and s_n are relatively prime, then s_n is a prime\n        if (equalsInt(s_d, 1)) {\n          copy_(ans, s_aa)\n          return //if we've made it this far, then s_n is absolutely guaranteed to be prime\n        }\n      }\n    }\n  }\n}\n\n/**\n * Return an n-bit random BigInt (n>=1).  If s=1, then the most significant of those n bits is set to 1.\n *\n * @export\n * @param {number} n\n * @param {number} s\n * @returns {number[]}\n */\nexport function randBigInt(n: number, s: number): number[] {\n  var a, b\n  a = Math.floor((n - 1) / bpe) + 2 //# array elements to hold the BigInt with a leading 0 element\n  b = int2bigInt(0, 0, a)\n  randBigInt_(b, n, s)\n  return b\n}\n\n/**\n * Set b to an n-bit random BigInt.  If s=1, then the most significant of those n bits is set to 1.\n *\n * Array b must be big enough to hold the result. Must have n>=1\n *\n * @export\n * @param {number[]} b\n * @param {number} n\n * @param {number} s\n * @return {void}\n */\nexport function randBigInt_(b: number[], n: number, s: number): void {\n  var i, a\n  for (i = 0; i < b.length; i++) b[i] = 0\n  a = Math.floor((n - 1) / bpe) + 1 //# array elements to hold the BigInt\n  for (i = 0; i < a; i++) {\n    b[i] = Math.floor(Math.random() * (1 << (bpe - 1)))\n  }\n  b[a - 1] &= (2 << ((n - 1) % bpe)) - 1\n  if (s == 1) b[a - 1] |= 1 << ((n - 1) % bpe)\n}\n\n/**\n * Return the greatest common divisor of bigInts x and y (each with same number of elements).\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {number[]}\n */\nexport function GCD(x: number[], y: number[]): number[] {\n  var xc, yc\n  xc = dup(x)\n  yc = dup(y)\n  GCD_(xc, yc)\n  return xc\n}\n\n/**\n * set x to the greatest common divisor of bigInts x and y (each with same number of elements).\n *\n * y is destroyed.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n */\nexport function GCD_(x: number[], y: number[]): void {\n  var i: number, xp: number, yp: number, A: number, B, C: number, D: number, q, sing\n  var qp\n  if (T.length !== x.length) T = dup(x)\n\n  sing = 1\n  while (sing) {\n    //while y has nonzero elements other than y[0]\n    sing = 0\n    for (\n      i = 1;\n      i < y.length;\n      i++ //check if y has nonzero elements other than 0\n    )\n      if (y[i]) {\n        sing = 1\n        break\n      }\n    if (!sing) break //quit when y all zero elements except possibly y[0]\n\n    for (i = x.length; !x[i] && i >= 0; i--); //find most significant element of x\n    xp = x[i]\n    yp = y[i]\n    A = 1\n    B = 0\n    C = 0\n    D = 1\n    while (yp + C && yp + D) {\n      q = Math.floor((xp + A) / (yp + C))\n      qp = Math.floor((xp + B) / (yp + D))\n      if (q != qp) break\n      t = A - q * C\n      A = C\n      C = t //  do (A,B,xp, C,D,yp) = (C,D,yp, A,B,xp) - q*(0,0,0, C,D,yp)\n      t = B - q * D\n      B = D\n      D = t\n      t = xp - q * yp\n      xp = yp\n      yp = t\n    }\n    if (B) {\n      copy_(T, x)\n      linComb_(x, y, A, B) //x=A*x+B*y\n      linComb_(y, T, D, C) //y=D*y+C*T\n    } else {\n      mod_(x, y)\n      copy_(T, x)\n      copy_(x, y)\n      copy_(y, T)\n    }\n  }\n  if (y[0] === 0) return\n  t = modInt(x, y[0])\n  copyInt_(x, y[0])\n  y[0] = t\n  while (y[0]) {\n    x[0] %= y[0]\n    t = x[0]\n    x[0] = y[0]\n    y[0] = t\n  }\n}\n\n/**\n * do x=x**(-1) mod n, for bigInts x and n.\n *\n * If no inverse exists, it sets x to zero and returns 0, else it returns 1.\n * The x array must be at least as large as the n array.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} n\n * @returns {(0 | 1)}\n */\nexport function inverseMod_(x: number[], n: number[]): Bool {\n  var k = 1 + 2 * Math.max(x.length, n.length)\n\n  if (!(x[0] & 1) && !(n[0] & 1)) {\n    //if both inputs are even, then inverse doesn't exist\n    copyInt_(x, 0)\n    return 0\n  }\n\n  if (eg_u.length != k) {\n    eg_u = new Array(k)\n    eg_v = new Array(k)\n    eg_A = new Array(k)\n    eg_B = new Array(k)\n    eg_C = new Array(k)\n    eg_D = new Array(k)\n  }\n\n  copy_(eg_u, x)\n  copy_(eg_v, n)\n  copyInt_(eg_A, 1)\n  copyInt_(eg_B, 0)\n  copyInt_(eg_C, 0)\n  copyInt_(eg_D, 1)\n  for (;;) {\n    while (!(eg_u[0] & 1)) {\n      //while eg_u is even\n      halve_(eg_u)\n      if (!(eg_A[0] & 1) && !(eg_B[0] & 1)) {\n        //if eg_A==eg_B==0 mod 2\n        halve_(eg_A)\n        halve_(eg_B)\n      } else {\n        add_(eg_A, n)\n        halve_(eg_A)\n        sub_(eg_B, x)\n        halve_(eg_B)\n      }\n    }\n\n    while (!(eg_v[0] & 1)) {\n      //while eg_v is even\n      halve_(eg_v)\n      if (!(eg_C[0] & 1) && !(eg_D[0] & 1)) {\n        //if eg_C==eg_D==0 mod 2\n        halve_(eg_C)\n        halve_(eg_D)\n      } else {\n        add_(eg_C, n)\n        halve_(eg_C)\n        sub_(eg_D, x)\n        halve_(eg_D)\n      }\n    }\n\n    if (!greater(eg_v, eg_u)) {\n      //eg_v <= eg_u\n      sub_(eg_u, eg_v)\n      sub_(eg_A, eg_C)\n      sub_(eg_B, eg_D)\n    } else {\n      //eg_v > eg_u\n      sub_(eg_v, eg_u)\n      sub_(eg_C, eg_A)\n      sub_(eg_D, eg_B)\n    }\n\n    if (equalsInt(eg_u, 0)) {\n      while (\n        negative(eg_C) //make sure answer is nonnegative\n      )\n        add_(eg_C, n)\n      copy_(x, eg_C)\n\n      if (!equalsInt(eg_v, 1)) {\n        //if GCD_(x,n)!=1, then there is no inverse\n        copyInt_(x, 0)\n        return 0\n      }\n      return 1\n    }\n  }\n  /*::\n  declare var never: empty\n  return never\n  */\n}\n\n/**\n * return x**(-1) mod n, for integers x and n.\n *\n * Return 0 if there is no inverse\n *\n * @param {number} x\n * @param {number} n\n * @returns {number}\n */\nexport function inverseModInt(x: number, n: number): number {\n  var a = 1,\n      b = 0,\n      t\n  for (;;) {\n    if (x === 1) return a\n    if (x === 0) return 0\n    b -= a * Math.floor(n / x)\n    //$off\n    n %= x\n\n    if (n === 1) return b //to avoid negatives, change this b to n-b, and each -= to +=\n    if (n === 0) return 0\n    a -= b * Math.floor(x / n)\n    //$off\n    x %= n\n  }\n  /*::\n  declare var never: empty\n  return never\n  */\n}\n\n//this deprecated function is for backward compatibility only.\nfunction inverseModInt_(x: number, n: number) {\n  return inverseModInt(x, n)\n}\n\n/**\n * Given positive bigInts x and y, change the bigints v, a, and b to positive bigInts such that:\n *\n *      v = GCD_(x,y) = a*x-b*y\n *\n * The bigInts v, a, b, must have exactly as many elements as the larger of x and y.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} v\n * @param {number[]} a\n * @param {number[]} b\n * @return {void}\n */\nexport function eGCD_(\n  x: number[],\n  y: number[],\n  v: number[],\n  a: number[],\n  b: number[],\n): void {\n  var g = 0\n  var k = Math.max(x.length, y.length)\n  if (eg_u.length != k) {\n    eg_u = new Array(k)\n    eg_A = new Array(k)\n    eg_B = new Array(k)\n    eg_C = new Array(k)\n    eg_D = new Array(k)\n  }\n  while (!(x[0] & 1) && !(y[0] & 1)) {\n    //while x and y both even\n    halve_(x)\n    halve_(y)\n    g++\n  }\n  copy_(eg_u, x)\n  copy_(v, y)\n  copyInt_(eg_A, 1)\n  copyInt_(eg_B, 0)\n  copyInt_(eg_C, 0)\n  copyInt_(eg_D, 1)\n  for (;;) {\n    while (!(eg_u[0] & 1)) {\n      //while u is even\n      halve_(eg_u)\n      if (!(eg_A[0] & 1) && !(eg_B[0] & 1)) {\n        //if A==B==0 mod 2\n        halve_(eg_A)\n        halve_(eg_B)\n      } else {\n        add_(eg_A, y)\n        halve_(eg_A)\n        sub_(eg_B, x)\n        halve_(eg_B)\n      }\n    }\n\n    while (!(v[0] & 1)) {\n      //while v is even\n      halve_(v)\n      if (!(eg_C[0] & 1) && !(eg_D[0] & 1)) {\n        //if C==D==0 mod 2\n        halve_(eg_C)\n        halve_(eg_D)\n      } else {\n        add_(eg_C, y)\n        halve_(eg_C)\n        sub_(eg_D, x)\n        halve_(eg_D)\n      }\n    }\n\n    if (!greater(v, eg_u)) {\n      //v<=u\n      sub_(eg_u, v)\n      sub_(eg_A, eg_C)\n      sub_(eg_B, eg_D)\n    } else {\n      //v>u\n      sub_(v, eg_u)\n      sub_(eg_C, eg_A)\n      sub_(eg_D, eg_B)\n    }\n    if (equalsInt(eg_u, 0)) {\n      while (negative(eg_C)) {\n        //make sure a (C) is nonnegative\n        add_(eg_C, y)\n        sub_(eg_D, x)\n      }\n      multInt_(eg_D, -1) ///make sure b (D) is nonnegative\n      copy_(a, eg_C)\n      copy_(b, eg_D)\n      leftShift_(v, g)\n      return\n    }\n  }\n}\n\n/**\n * is bigInt x negative?\n *\n * @param {number[]} x\n * @returns {(1 | 0)}\n */\nexport function negative(x: number[]) {\n  //TODO Flow Bool type inference\n  return (x[x.length - 1] >> (bpe - 1)) & 1\n}\n\n/**\n * is (x << (shift*bpe)) > y?\n *\n * x and y are nonnegative bigInts\n * shift is a nonnegative integer\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} shift\n * @returns {(1 | 0)}\n */\nexport function greaterShift(x: number[], y: number[], shift: number): Bool {\n  var i,\n      kx = x.length,\n      ky = y.length\n  k = kx + shift < ky ? kx + shift : ky\n  for (i = ky - 1 - shift; i < kx && i >= 0; i++) if (x[i] > 0) return 1 //if there are nonzeros in x to the left of the first column of y, then x is bigger\n  for (i = kx - 1 + shift; i < ky; i++) if (y[i] > 0) return 0 //if there are nonzeros in y to the left of the first column of x, then x is not bigger\n  for (i = k - 1; i >= shift; i--)\n    if (x[i - shift] > y[i]) return 1\n    else if (x[i - shift] < y[i]) return 0\n  return 0\n}\n\n/**\n * is x > y?\n *\n * x and y both nonnegative\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {(1 | 0)}\n */\nexport function greater(x: number[], y: number[]): Bool {\n  var i\n  var k = x.length < y.length ? x.length : y.length\n\n  for (i = x.length; i < y.length; i++) if (y[i]) return 0 //y has more digits\n\n  for (i = y.length; i < x.length; i++) if (x[i]) return 1 //x has more digits\n\n  for (i = k - 1; i >= 0; i--)\n    if (x[i] > y[i]) return 1\n    else if (x[i] < y[i]) return 0\n  return 0\n}\n\n/**\n * divide x by y giving quotient q and remainder r.\n *\n *     q = floor(x/y)\n *     r = x mod y\n *\n * All 4 are bigints.\n *\n * * x must have at least one leading zero element.\n * * y must be nonzero.\n * * q and r must be arrays that are exactly the same length as x. (Or q can have more).\n * * Must have x.length >= y.length >= 2.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} q\n * @param {number[]} r\n * @return {void}\n */\nexport function divide_(\n  x: number[],\n  y: number[],\n  q: number[],\n  r: number[],\n): void {\n  var kx, ky\n  var i, j, y1, y2, c, a, b\n  copy_(r, x)\n  for (ky = y.length; y[ky - 1] === 0; ky--); //ky is number of elements in y, not including leading zeros\n\n  //normalize: ensure the most significant element of y has its highest bit set\n  b = y[ky - 1]\n  for (a = 0; b; a++) b >>= 1\n  a = bpe - a //a is how many bits to shift so that the high order bit of y is leftmost in its array element\n  leftShift_(y, a) //multiply both by 1<<a now, then divide both by that at the end\n  leftShift_(r, a)\n\n  //Rob Visser discovered a bug: the following line was originally just before the normalization.\n  for (kx = r.length; r[kx - 1] === 0 && kx > ky; kx--); //kx is number of elements in normalized x, not including leading zeros\n\n  copyInt_(q, 0) // q=0\n  while (!greaterShift(y, r, kx - ky)) {\n    // while (leftShift_(y,kx-ky) <= r) {\n    subShift_(r, y, kx - ky) //   r=r-leftShift_(y,kx-ky)\n    q[kx - ky]++ //   q[kx-ky]++;\n  } // }\n\n  for (i = kx - 1; i >= ky; i--) {\n    if (r[i] == y[ky - 1]) q[i - ky] = mask\n    else q[i - ky] = Math.floor((r[i] * radix + r[i - 1]) / y[ky - 1])\n\n    //The following for(;;) loop is equivalent to the commented while loop,\n    //except that the uncommented version avoids overflow.\n    //The commented loop comes from HAC, which assumes r[-1]==y[-1]==0\n    //  while (q[i-ky]*(y[ky-1]*radix+y[ky-2]) > r[i]*radix*radix+r[i-1]*radix+r[i-2])\n    //    q[i-ky]--;\n    for (;;) {\n      y2 = (ky > 1 ? y[ky - 2] : 0) * q[i - ky]\n      c = y2 >> bpe\n      y2 = y2 & mask\n      y1 = c + q[i - ky] * y[ky - 1]\n      c = y1 >> bpe\n      y1 = y1 & mask\n\n      if (\n        c == r[i]\n          ? y1 == r[i - 1] ? y2 > (i > 1 ? r[i - 2] : 0) : y1 > r[i - 1]\n          : c > r[i]\n      )\n        q[i - ky]--\n      else break\n    }\n\n    linCombShift_(r, y, -q[i - ky], i - ky) //r=r-q[i-ky]*leftShift_(y,i-ky)\n    if (negative(r)) {\n      addShift_(r, y, i - ky) //r=r+leftShift_(y,i-ky)\n      q[i - ky]--\n    }\n  }\n\n  rightShift_(y, a) //undo the normalization step\n  rightShift_(r, a) //undo the normalization step\n}\n\n/**\n * do carries and borrows so each element of the bigInt x fits in bpe bits.\n *\n * @param {number[]} x\n */\nexport function carry_(x: number[]): void {\n  var i, k, c, b\n  k = x.length\n  c = 0\n  for (i = 0; i < k; i++) {\n    c += x[i]\n    b = 0\n    if (c < 0) {\n      b = -(c >> bpe)\n      c += b * radix\n    }\n    x[i] = c & mask\n    c = (c >> bpe) - b\n  }\n}\n\n/**\n * return x mod n for bigInt x and integer n.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {number}\n */\nexport function modInt(x: number[], n: number): number {\n  var i,\n      c = 0\n  for (i = x.length - 1; i >= 0; i--) c = (c * radix + x[i]) % n\n  return c\n}\n\n/**\n * convert the integer t into a bigInt with at least the given number of bits.\n * the returned array stores the bigInt in bpe-bit chunks, little endian (buff[0] is least significant word)\n * Pad the array with leading zeros so that it has at least minSize elements.\n *\n * There will always be at least one leading 0 element.\n *\n * @export\n * @param {number} t\n * @param {number} bits\n * @param {number} minSize\n * @returns {number[]}\n */\nexport function int2bigInt(t: number, bits: number, minSize: number): number[] {\n  var i, k\n  k = Math.ceil(bits / bpe) + 1\n  k = minSize > k ? minSize : k\n  var buff = new Array(k)\n  copyInt_(buff, t)\n  return buff\n}\n\n/**\n * return the bigInt given a string representation in a given base.\n * Pad the array with leading zeros so that it has at least minSize elements.\n * If base=-1, then it reads in a space-separated list of array elements in decimal.\n *\n * The array will always have at least one leading zero, unless base=-1.\n *\n * @export\n * @param {string} s\n * @param {number} base\n * @param {number} [minSize]\n * @returns {number[]}\n */\nexport function str2bigInt(\n  s: string,\n  base: number,\n  minSize?: number,\n): number[] {\n  var d, i, x, y, kk\n  var k = s.length\n  if (base === -1) {\n    //comma-separated list of array elements in decimal\n    x = new Array(0)\n    for (;;) {\n      y = new Array(x.length + 1)\n      for (i = 0; i < x.length; i++) y[i + 1] = x[i]\n      y[0] = parseInt(s, 10) //TODO PERF Should we replace that with ~~ (not not)? https://jsperf.com/number-vs-parseint-vs-plus/7\n      x = y\n      d = s.indexOf(',', 0)\n      if (d < 1) break\n      //$off\n      s = s.substring(d + 1)\n      if (s.length == 0) break\n    }\n    //$off\n    if (x.length < minSize) {\n      //$off\n      y = new Array(minSize)\n      copy_(y, x)\n      return y\n    }\n    return x\n  }\n\n  x = int2bigInt(0, base * k, 0)\n  for (i = 0; i < k; i++) {\n    d = digitsStr.indexOf(s.substring(i, i + 1), 0)\n    if (base <= 36 && d >= 36)\n      //convert lowercase to uppercase if base<=36\n      d -= 26\n    if (d >= base || d < 0) {\n      //stop at first illegal character\n      break\n    }\n    multInt_(x, base)\n    addInt_(x, d)\n  }\n\n  for (k = x.length; k > 0 && !x[k - 1]; k--); //strip off leading zeros\n  //$off\n  k = minSize > k + 1 ? minSize : k + 1\n  //$off\n  y = new Array(k)\n  //$off\n  kk = k < x.length ? k : x.length\n  //$off\n  for (i = 0; i < kk; i++) y[i] = x[i]\n  //$off\n  for (; i < k; i++) y[i] = 0\n  return y\n}\n\n//return the bigInt given a string representation in a given base.\n//Pad the array with leading zeros so that it has at least minSize elements.\n//If base=-1, then it reads in a space-separated list of array elements in decimal.\n//The array will always have at least one leading zero, unless base=-1.\n// function str2bigInt(s,b,minSize) {\n//   var d, i, j, base, str, x, y, kk;\n//   if (typeof b === 'string') {\n//           base = b.length;\n//           str = b;\n//   } else {\n//           base = b;\n//           str = digitsStr;\n//   }\n//   var k=s.length;\n//   if (base==-1) { //comma-separated list of array elements in decimal\n//       x=new Array(0);\n//       for (;;) {\n//           y=new Array(x.length+1);\n//           for (i=0;i<x.length;i++)\n//               y[i+1]=x[i];\n//           y[0]=parseInt(s,10);\n//           x=y;\n//           d=s.indexOf(',',0);\n//           if (d<1)\n//               break;\n//           s=s.substring(d+1);\n//           if (s.length==0)\n//               break;\n//       }\n//       if (x.length<minSize) {\n//           y=new Array(minSize);\n//           copy_(y,x);\n//           return y;\n//       }\n//       return x;\n//   }\n\n//   x=int2bigInt(0,base*k,0);\n// for (i=0;i<k;i++) {\n//   d=str.indexOf(s.substring(i,i+1),0);\n//   if (base<=36 && d>=36) { //convert lowercase to uppercase if base<=36\n//       d-=26;\n//   }\n//   if (d>=base || d<0) {   //ignore illegal characters\n//   continue;\n//       }\n//       multInt_(x,base);\n//       addInt_(x,d);\n//   }\n\n//   for (k=x.length;k>0 && !x[k-1];k--); //strip off leading zeros\n//   k=minSize>k+1 ? minSize : k+1;\n//   y=new Array(k);\n//   kk=k<x.length ? k : x.length;\n//   for (i=0;i<kk;i++)\n//       y[i]=x[i];\n//   for (;i<k;i++)\n//       y[i]=0;\n//   return y;\n// }\n\n/**\n * is bigint x equal to integer y?\n *\n * y must have less than bpe bits\n *\n * @export\n * @param {number[]} x\n * @param {number} y\n * @returns {(1 | 0)}\n */\nexport function equalsInt(x: number[], y: number): Bool {\n  var i\n  if (x[0] != y) return 0\n  for (i = 1; i < x.length; i++) if (x[i]) return 0\n  return 1\n}\n\n/**\n * are bigints x and y equal?\n *\n * this works even if x and y are different lengths and have arbitrarily many leading zeros\n *\n * @param {number[]} x\n * @param {number[]} y\n * @returns {(1 | 0)}\n */\nexport function equals(x: number[], y: number[]): Bool {\n  var i\n  var k = x.length < y.length ? x.length : y.length\n  for (i = 0; i < k; i++) if (x[i] !== y[i]) return 0\n  if (x.length > y.length) {\n    for (; i < x.length; i++) if (x[i]) return 0\n  } else {\n    for (; i < y.length; i++) if (y[i]) return 0\n  }\n  return 1\n}\n\n/**\n * is the bigInt x equal to zero?\n *\n * @export\n * @param {number[]} x\n * @returns {(1 | 0)}\n */\nexport function isZero(x: number[]): Bool {\n  var i\n  for (i = 0; i < x.length; i++) if (x[i]) return 0\n  return 1\n}\n\n/**\n * Convert a bigInt into a string in a given base, from base 2 up to base 95.\n *\n * Base -1 prints the contents of the array representing the number.\n *\n * @export\n * @param {number[]} x\n * @param {number} base\n * @returns {string}\n */\nexport function bigInt2str(x: number[], base: number): string {\n  var i,\n      t,\n      s = ''\n\n  if (s6.length !== x.length) s6 = dup(x)\n  else copy_(s6, x)\n\n  if (base === -1) {\n    //return the list of array contents\n    for (i = x.length - 1; i > 0; i--) s += x[i] + ','\n    s += x[0]\n  } else {\n    //return it in the given base\n    while (!isZero(s6)) {\n      t = divInt_(s6, base) //t=s6 % base; s6=floor(s6/base);\n      s = digitsStr.substring(t, t + 1) + s\n    }\n  }\n  if (s.length === 0) s = '0'\n  return s\n}\n\n/**\n * Convert a bigInt into bytes\n * @param x bigInt\n * @param littleEndian byte order by default\n */\nexport function bigInt2bytes(x: number[], littleEndian = true) {\n  if(s6.length !== x.length) s6 = dup(x);\n  else copy_(s6, x);\n\n  const out: number[] = [];\n\n  //console.log('bigInt2bytes');\n  while(!isZero(s6)) {\n    t = divInt_(s6, 256); //t=s6 % base; s6=floor(s6/base);\n    out.push(t);\n    //console.log('bigInt2bytes', t);\n  }\n\n  if(littleEndian) {\n    out.reverse();\n  }\n\n  //console.log('bigInt2bytes', out);\n\n  return out;\n}\n\n/**\n * Compare two bigInts and return -1 if x is less, 0 if equals, 1 if greater\n * @param x bigInt\n * @param y bigInt\n */\nexport function cmp(x: number[], y: number[]) {\n  return greater(x, y) ? 1 : (equals(x, y) ? 0 : -1);\n}\n\n/* Object.assign(self, {\n  cmp,\n  str2bigInt,\n  int2bigInt,\n  bigInt2str,\n  one,\n  divide_,\n  divInt_,\n  dup,\n  negative\n}); */\n\n/**\n * Returns a duplicate of bigInt x\n *\n * @export\n * @param {number[]} x\n * @returns {number[]}\n */\nexport function dup(x: number[]): number[] {\n  var i\n  buff = Array(x.length)\n  copy_(buff, x)\n  return buff\n}\n\n/**\n * do x=y on bigInts x and y.\n *\n * x must be an array at least as big as y (not counting the leading zeros in y).\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @returns {void}\n */\nexport function copy_(x: number[], y: number[]): void {\n  var i\n  var k = x.length < y.length ? x.length : y.length\n  for (i = 0; i < k; i++) x[i] = y[i]\n  for (i = k; i < x.length; i++) x[i] = 0\n}\n\n/**\n * do x=y on bigInt x and integer y.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function copyInt_(x: number[], n: number): void {\n  var i, c\n  var len = x.length //TODO .length in for loop have perfomance costs. Bench this\n  for (c = n, i = 0; i < len; i++) {\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x+n where x is a bigInt and n is an integer.\n *\n * x must be large enough to hold the result.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function addInt_(x: number[], n: number): void {\n  var i, k, c, b\n  x[0] += n\n  k = x.length\n  c = 0\n  for (i = 0; i < k; i++) {\n    c += x[i]\n    b = 0\n    if (c < 0) {\n      b = -(c >> bpe)\n      c += b * radix\n    }\n    x[i] = c & mask\n    c = (c >> bpe) - b\n    if (!c) return //stop carrying as soon as the carry is zero\n  }\n}\n\n/**\n * right shift bigInt x by n bits.\n *\n *     0 <= n < bpe.\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n */\nexport function rightShift_(x: number[], n: number): void {\n  var i\n  var k = Math.floor(n / bpe)\n  if (k) {\n    for (\n      i = 0;\n      i < x.length - k;\n      i++ //right shift x by k elements\n    )\n      x[i] = x[i + k]\n    for (; i < x.length; i++) x[i] = 0\n    //$off\n    n %= bpe\n  }\n  for (i = 0; i < x.length - 1; i++) {\n    x[i] = mask & ((x[i + 1] << (bpe - n)) | (x[i] >> n))\n  }\n  x[i] >>= n\n}\n\n/**\n * do x=floor(|x|/2)*sgn(x) for bigInt x in 2's complement\n *\n * @param {number[]} x\n * @returns {void}\n */\nexport function halve_(x: number[]): void {\n  var i\n  for (i = 0; i < x.length - 1; i++) {\n    x[i] = mask & ((x[i + 1] << (bpe - 1)) | (x[i] >> 1))\n  }\n  x[i] = (x[i] >> 1) | (x[i] & (radix >> 1)) //most significant bit stays the same\n}\n\n/**\n * left shift bigInt x by n bits\n *\n * @export\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function leftShift_(x: number[], n: number): void {\n  var i\n  var k = Math.floor(n / bpe)\n  if (k) {\n    for (\n      i = x.length;\n      i >= k;\n      i-- //left shift x by k elements\n    )\n      x[i] = x[i - k]\n    for (; i >= 0; i--) x[i] = 0\n    //$off\n    n %= bpe\n  }\n  if (!n) return\n  for (i = x.length - 1; i > 0; i--) {\n    x[i] = mask & ((x[i] << n) | (x[i - 1] >> (bpe - n)))\n  }\n  x[i] = mask & (x[i] << n)\n}\n\n/**\n * do x=x*n where x is a bigInt and n is an integer.\n *\n * x must be large enough to hold the result.\n *\n * @param {number[]} x\n * @param {number} n\n * @returns {void}\n */\nexport function multInt_(x: number[], n: number): void {\n  var i, k, c, b\n  if (!n) return\n  k = x.length\n  c = 0\n  for (i = 0; i < k; i++) {\n    c += x[i] * n\n    b = 0\n    if (c < 0) {\n      b = -(c >> bpe)\n      c += b * radix\n    }\n    x[i] = c & mask\n    c = (c >> bpe) - b\n  }\n}\n\n/**\n * do x=floor(x/n) for bigInt x and integer n, and return the remainder\n *\n * @param {number[]} x\n * @param {number} n\n * @returns {number} remainder\n */\nexport function divInt_(x: number[], n: number): number {\n  var i,\n      r = 0,\n      s\n  for (i = x.length - 1; i >= 0; i--) {\n    s = r * radix + x[i]\n    x[i] = Math.floor(s / n)\n    r = s % n\n  }\n  return r\n}\n\n/**\n * do the linear combination x=a*x+b*y for bigInts x and y, and integers a and b.\n *\n * x must be large enough to hold the answer.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} a\n * @param {number} b\n * @returns {void}\n */\nexport function linComb_(x: number[], y: number[], a: number, b: number): void {\n  var i, c, k, kk\n  k = x.length < y.length ? x.length : y.length\n  kk = x.length\n  for (c = 0, i = 0; i < k; i++) {\n    c += a * x[i] + b * y[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; i < kk; i++) {\n    c += a * x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do the linear combination x=a*x+b*(y<<(ys*bpe)) for bigInts x and y, and integers a, b and ys.\n *\n * x must be large enough to hold the answer.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} b\n * @param {number} ys\n * @returns {void}\n */\nexport function linCombShift_(\n  x: number[],\n  y: number[],\n  b: number,\n  ys: number,\n): void {\n  var i, c, k, kk\n  k = x.length < ys + y.length ? x.length : ys + y.length\n  kk = x.length\n  for (c = 0, i = ys; i < k; i++) {\n    c += x[i] + b * y[i - ys]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < kk; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x+(y<<(ys*bpe)) for bigInts x and y, and integer ys.\n *\n * x must be large enough to hold the answer.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} ys\n * @return {void}\n */\nexport function addShift_(x: number[], y: number[], ys: number): void {\n  var i, c, k, kk\n  k = x.length < ys + y.length ? x.length : ys + y.length\n  kk = x.length\n  for (c = 0, i = ys; i < k; i++) {\n    c += x[i] + y[i - ys]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < kk; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x-(y<<(ys*bpe)) for bigInts x and y, and integer ys\n *\n * x must be large enough to hold the answer\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number} ys\n * @return {void}\n */\nexport function subShift_(x: number[], y: number[], ys: number): void {\n  var i, c, k, kk\n  k = x.length < ys + y.length ? x.length : ys + y.length\n  kk = x.length\n  for (c = 0, i = ys; i < k; i++) {\n    c += x[i] - y[i - ys]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < kk; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x-y for bigInts x and y\n *\n * x must be large enough to hold the answer\n *\n * negative answers will be 2s complement\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @return {void}\n */\nexport function sub_(x: number[], y: number[]): void {\n  var i, c, k, kk\n  k = x.length < y.length ? x.length : y.length\n  for (c = 0, i = 0; i < k; i++) {\n    c += x[i] - y[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < x.length; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x+y for bigInts x and y\n *\n * x must be large enough to hold the answer\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @return {void}\n */\nexport function add_(x: number[], y: number[]): void {\n  var i, c, k, kk\n  k = x.length < y.length ? x.length : y.length\n  for (c = 0, i = 0; i < k; i++) {\n    c += x[i] + y[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n  for (i = k; c && i < x.length; i++) {\n    c += x[i]\n    x[i] = c & mask\n    c >>= bpe\n  }\n}\n\n/**\n * do x=x*y for bigInts x and y.\n *\n * This is faster when y<x.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @return {void}\n */\nexport function mult_(x: number[], y: number[]): void {\n  var i\n  if (ss.length != 2 * x.length) ss = new Array(2 * x.length)\n  copyInt_(ss, 0)\n  for (i = 0; i < y.length; i++) if (y[i]) linCombShift_(ss, x, y[i], i) //ss=1*ss+y[i]*(x<<(i*bpe))\n  copy_(x, ss)\n}\n\n/**\n * do x=x mod n for bigInts x and n\n *\n * @export\n * @param {number[]} x\n * @param {number[]} n\n * @return {void}\n */\nexport function mod_(x: number[], n: number[]): void {\n  if (s4.length !== x.length) s4 = dup(x)\n  else copy_(s4, x)\n  if (s5.length !== x.length) s5 = dup(x)\n  divide_(s4, n, s5, x) //x = remainder of s4 / n\n}\n\n/**\n * do x=x*y mod n for bigInts x,y,n.\n *\n * for greater speed, let y<x.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @return {void}\n */\nexport function multMod_(x: number[], y: number[], n: number[]): void {\n  var i\n  if (s0.length != 2 * x.length) s0 = new Array(2 * x.length)\n  copyInt_(s0, 0)\n  for (i = 0; i < y.length; i++) if (y[i]) linCombShift_(s0, x, y[i], i) //s0=1*s0+y[i]*(x<<(i*bpe))\n  mod_(s0, n)\n  copy_(x, s0)\n}\n\n/**\n * do x=x*x mod n for bigInts x,n.\n *\n * @export\n * @param {number[]} x\n * @param {number[]} n\n * @return {void}\n */\nexport function squareMod_(x: number[], n: number[]): void {\n  var i, j, d, c, kx, kn, k\n  for (kx = x.length; kx > 0 && !x[kx - 1]; kx--); //ignore leading zeros in x\n  k = kx > n.length ? 2 * kx : 2 * n.length //k=# elements in the product, which is twice the elements in the larger of x and n\n  if (s0.length != k) s0 = new Array(k)\n  copyInt_(s0, 0)\n  for (i = 0; i < kx; i++) {\n    c = s0[2 * i] + x[i] * x[i]\n    s0[2 * i] = c & mask\n    c >>= bpe\n    for (j = i + 1; j < kx; j++) {\n      c = s0[i + j] + 2 * x[i] * x[j] + c\n      s0[i + j] = c & mask\n      c >>= bpe\n    }\n    s0[i + kx] = c\n  }\n  mod_(s0, n)\n  copy_(x, s0)\n}\n\n/**\n * return x with exactly k leading zero elements\n *\n * @export\n * @param {number[]} x\n * @param {number} k\n * @returns {number[]}\n */\nexport function trim(x: number[], k: number): number[] {\n  var i, y\n  for (i = x.length; i > 0 && !x[i - 1]; i--);\n  y = new Array(i + k)\n  copy_(y, x)\n  return y\n}\n\n/**\n * do `x=x**y mod n`, where x,y,n are bigInts and `**` is exponentiation.  `0**0=1`.\n *\n * this is faster when n is odd.\n *\n * x usually needs to have as many elements as n.\n *\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @return {void}\n */\nexport function powMod_(x: number[], y: number[], n: number[]): void {\n  var k1, k2, kn, np\n  if (s7.length != n.length) s7 = dup(n)\n\n  //for even modulus, use a simple square-and-multiply algorithm,\n  //rather than using the more complex Montgomery algorithm.\n  if ((n[0] & 1) == 0) {\n    copy_(s7, x)\n    copyInt_(x, 1)\n    while (!equalsInt(y, 0)) {\n      if (y[0] & 1) multMod_(x, s7, n)\n      divInt_(y, 2)\n      squareMod_(s7, n)\n    }\n    return\n  }\n\n  //calculate np from n for the Montgomery multiplications\n  copyInt_(s7, 0)\n  for (kn = n.length; kn > 0 && !n[kn - 1]; kn--);\n  np = radix - inverseModInt(modInt(n, radix), radix)\n  s7[kn] = 1\n  multMod_(x, s7, n) // x = x * 2**(kn*bp) mod n\n\n  if (s3.length != x.length) s3 = dup(x)\n  else copy_(s3, x)\n  //$off\n  // @ts-ignore\n  for (k1 = y.length - 1; (k1 > 0) & !y[k1]; k1--); //k1=first nonzero element of y\n  if (y[k1] == 0) {\n    //anything to the 0th power is 1\n    copyInt_(x, 1)\n    return\n  }\n  for (k2 = 1 << (bpe - 1); k2 && !(y[k1] & k2); k2 >>= 1); //k2=position of first 1 bit in y[k1]\n  for (;;) {\n    if (!(k2 >>= 1)) {\n      //look at next bit of y\n      k1--\n      if (k1 < 0) {\n        mont_(x, one, n, np)\n        return\n      }\n      k2 = 1 << (bpe - 1)\n    }\n    mont_(x, x, n, np)\n\n    if (k2 & y[k1])\n      //if next bit is a 1\n      mont_(x, s3, n, np)\n  }\n}\n\n/**\n * do x=x*y*Ri mod n for bigInts x,y,n,\n * where Ri = 2**(-kn*bpe) mod n, and kn is the\n * number of elements in the n array, not\n * counting leading zeros.\n *\n * x array must have at least as many elemnts as the n array\n * It's OK if x and y are the same variable.\n *\n * must have:\n *  * x,y < n\n *  * n is odd\n *  * np = -(n^(-1)) mod radix\n *\n * @export\n * @param {number[]} x\n * @param {number[]} y\n * @param {number[]} n\n * @param {number} np\n * @return {void}\n */\nexport function mont_(x: number[], y: number[], n: number[], np: number): void {\n  var i, j, c, ui, t, ks\n  var kn = n.length\n  var ky = y.length\n\n  if (sa.length != kn) sa = new Array(kn)\n\n  copyInt_(sa, 0)\n\n  for (; kn > 0 && n[kn - 1] == 0; kn--); //ignore leading zeros of n\n  for (; ky > 0 && y[ky - 1] == 0; ky--); //ignore leading zeros of y\n  ks = sa.length - 1 //sa will never have more than this many nonzero elements.\n\n  //the following loop consumes 95% of the runtime for randTruePrime_() and powMod_() for large numbers\n  for (i = 0; i < kn; i++) {\n    t = sa[0] + x[i] * y[0]\n    ui = ((t & mask) * np) & mask //the inner \"& mask\" was needed on Safari (but not MSIE) at one time\n    c = (t + ui * n[0]) >> bpe\n    t = x[i]\n\n    //do sa=(sa+x[i]*y+ui*n)/b   where b=2**bpe.  Loop is unrolled 5-fold for speed\n    j = 1\n    for (; j < ky - 4; ) {\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < ky; ) {\n      c += sa[j] + ui * n[j] + t * y[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < kn - 4; ) {\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < kn; ) {\n      c += sa[j] + ui * n[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    for (; j < ks; ) {\n      c += sa[j]\n      sa[j - 1] = c & mask\n      c >>= bpe\n      j++\n    }\n    sa[j - 1] = c & mask\n  }\n\n  if (!greater(n, sa)) sub_(sa, n)\n  copy_(x, sa)\n}","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { bufferConcats } from '../../helpers/bytes';\nimport { add_, bigInt2str, cmp, leftShift_, str2bigInt } from '../../vendor/leemon';\nimport { nextRandomInt } from '../../helpers/random';\n\n                       \n             \n                                                 \n\n                                                                           \n                                                                                 \n                                                                                             \n                                               \n                                                                          \n                                                              \n                \n \n          \n\nexport function isObject(object: any) {\n  return typeof(object) === 'object' && object !== null;\n}\n\n/* export function bigint(num: number) {\n  return new BigInteger(num.toString(16), 16);\n} */\n\n/* export function bigStringInt(strNum: string) {\n  return new BigInteger(strNum, 10);\n} */\n\n/* export function base64ToBlob(base64str: string, mimeType: string) {\n  var sliceSize = 1024;\n  var byteCharacters = atob(base64str);\n  var bytesLength = byteCharacters.length;\n  var slicesCount = Math.ceil(bytesLength / sliceSize);\n  var byteArrays = new Array(slicesCount);\n\n  for(var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    var begin = sliceIndex * sliceSize;\n    var end = Math.min(begin + sliceSize, bytesLength);\n\n    var bytes = new Array(end - begin);\n    for(var offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n\n  return blobConstruct(byteArrays, mimeType);\n}\n\nexport function dataUrlToBlob(url: string) {\n  // var name = 'b64blob ' + url.length\n  // console.time(name)\n  var urlParts = url.split(',');\n  var base64str = urlParts[1];\n  var mimeType = urlParts[0].split(':')[1].split(';')[0];\n  var blob = base64ToBlob(base64str, mimeType);\n  // console.timeEnd(name)\n  return blob;\n} */\n\n/* export function bytesFromBigInt(bigInt: BigInteger, len?: number) {\n  var bytes = bigInt.toByteArray();\n\n  if(len && bytes.length < len) {\n    var padding = [];\n    for(var i = 0, needPadding = len - bytes.length; i < needPadding; i++) {\n      padding[i] = 0;\n    }\n    if(bytes instanceof ArrayBuffer) {\n      bytes = bufferConcat(padding, bytes);\n    } else {\n      bytes = padding.concat(bytes);\n    }\n  } else {\n    while (!bytes[0] && (!len || bytes.length > len)) {\n      bytes = bytes.slice(1);\n    }\n  }\n\n  return bytes;\n} */\n\nexport function longFromInts(high: number, low: number): string {\n  //let perf = performance.now();\n  //let str = bigint(high).shiftLeft(32).add(bigint(low)).toString(10);\n  //console.log('longFromInts jsbn', performance.now() - perf);\n  \n  //perf = performance.now();\n  const bigInt = str2bigInt(high.toString(16), 16, 32);//int2bigInt(high, 64, 64);\n  //console.log('longFromInts construct high', bigint(high).toString(10), bigInt2str(bigInt, 10));\n  leftShift_(bigInt, 32);\n  //console.log('longFromInts shiftLeft', bigint(high).shiftLeft(32).toString(10), bigInt2str(bigInt, 10));\n  add_(bigInt, str2bigInt(low.toString(16), 16, 32));\n  const _str = bigInt2str(bigInt, 10);\n\n  //console.log('longFromInts leemon', performance.now() - perf);\n\n  //console.log('longFromInts', high, low, str, _str, str === _str);\n\n  return _str;\n}\n\nexport function sortLongsArray(arr: string[]) {\n  return arr.map(long => {\n    return str2bigInt(long, 10);\n  }).sort((a, b) => {\n    return cmp(a, b);\n  }).map(bigInt => {\n    return bigInt2str(bigInt, 10);\n  });\n}\n\nexport function addPadding(bytes: any, blockSize: number = 16, zeroes?: boolean, full = false, prepend = false) {\n  let len = bytes.byteLength || bytes.length;\n  let needPadding = blockSize - (len % blockSize);\n  if(needPadding > 0 && (needPadding < blockSize || full)) {\n    ////console.log('addPadding()', len, blockSize, needPadding);\n    let padding = new Array(needPadding);\n    if(zeroes) {\n      for(let i = 0; i < needPadding; i++) {\n        padding[i] = 0;\n      }\n    } else {\n      for(let i = 0; i < padding.length; ++i) {\n        padding[i] = nextRandomInt(255);\n      }\n    }\n\n    if(bytes instanceof ArrayBuffer) {\n      bytes = (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer;\n    } else if(bytes instanceof Uint8Array) {\n      bytes = prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding);\n    } else {\n      bytes = prepend ? padding.concat(bytes) : bytes.concat(padding);\n    }\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { CancellablePromise } from '../helpers/cancellablePromise';\nimport type { InputFile } from '../layer';\nimport type { AuthState } from '../types';\nimport Button from '../components/button';\nimport InputField from '../components/inputField';\nimport { putPreloader } from '../components/misc';\nimport PopupAvatar from '../components/popups/avatar';\nimport appStateManager from '../lib/appManagers/appStateManager';\nimport I18n, { i18n } from '../lib/langPack';\n//import apiManager from '../lib/mtproto/apiManager';\nimport apiManager from '../lib/mtproto/mtprotoworker';\nimport RichTextProcessor from '../lib/richtextprocessor';\nimport LoginPage from './loginPage';\nimport Page from './page';\nimport blurActiveElement from '../helpers/dom/blurActiveElement';\nimport replaceContent from '../helpers/dom/replaceContent';\n\nlet authCode: AuthState.signUp['authCode'] = null;\n\nconst onFirstMount = () => import('../lib/appManagers/appProfileManager').then(imported => {\n  const page = new LoginPage({\n    className: 'page-signUp',\n    withInputWrapper: true,\n    titleLangKey: 'YourName',\n    subtitleLangKey: 'Login.Register.Subtitle'\n  });\n\n  page.imageDiv.classList.add('avatar-edit');\n\n  page.title.classList.add('fullName');\n\n  const avatarPreview = document.createElement('canvas');\n  avatarPreview.id = 'canvas-avatar';\n  avatarPreview.className = 'avatar-edit-canvas';\n\n  const addIco = document.createElement('span');\n  addIco.className = 'tgico tgico-cameraadd';\n\n  page.imageDiv.append(avatarPreview, addIco);\n  \n  const appProfileManager = imported.default;\n\n  let uploadAvatar: () => CancellablePromise<InputFile>;\n  page.imageDiv.addEventListener('click', () => {\n    new PopupAvatar().open(avatarPreview, (_uploadAvatar) => {\n      uploadAvatar = _uploadAvatar;\n    });\n  });\n\n  const handleInput = (e: Event) => {\n    const name = nameInputField.value || '';\n    const lastName = lastNameInputField.value || '';\n\n    const fullName = name || lastName \n      ? (name + ' ' + lastName).trim() \n      : '';\n    \n    if(fullName) replaceContent(page.title, RichTextProcessor.wrapEmojiText(fullName));\n    else replaceContent(page.title, i18n('YourName'));\n  };\n\n  let sendAvatar = () => new Promise<void>((resolve, reject) => {\n    if(!uploadAvatar) {\n      //console.log('User has not selected avatar');\n      return resolve();\n    }\n\n    //console.log('invoking uploadFile...');\n    uploadAvatar().then((inputFile) => {\n      //console.log('uploaded smthn', inputFile);\n  \n      appProfileManager.uploadProfilePhoto(inputFile).then(resolve, reject);\n    }, reject);\n  });\n\n  const nameInputField = new InputField({\n    label: 'FirstName',\n    maxLength: 70\n  });\n\n  const lastNameInputField = new InputField({\n    label: 'LastName',\n    maxLength: 64\n  });\n\n  const btnSignUp = Button('btn-primary btn-color-primary');\n  const btnI18n = new I18n.IntlElement({key: 'StartMessaging'});\n  btnSignUp.append(btnI18n.element);\n\n  page.inputWrapper.append(nameInputField.container, lastNameInputField.container, btnSignUp);\n\n  nameInputField.input.addEventListener('input', handleInput);\n  lastNameInputField.input.addEventListener('input', handleInput);\n\n  btnSignUp.addEventListener('click', function(this: typeof btnSignUp, e) {\n    if(nameInputField.input.classList.contains('error') || lastNameInputField.input.classList.contains('error')) {\n      return false;\n    }\n\n    if(!nameInputField.value.length) {\n      nameInputField.input.classList.add('error');\n      return false;\n    }\n\n    this.disabled = true;\n\n    const name = nameInputField.value.trim();\n    const lastName = lastNameInputField.value.trim();\n\n    const params = {\n      phone_number: authCode.phone_number,\n      phone_code_hash: authCode.phone_code_hash,\n      first_name: name,\n      last_name: lastName\n    };\n\n    //console.log('invoking auth.signUp with params:', params);\n\n    btnI18n.update({key: 'PleaseWait'});\n    const preloader = putPreloader(this);\n\n    apiManager.invokeApi('auth.signUp', params)\n    .then((response) => {\n      //console.log('auth.signUp response:', response);\n      \n      switch(response._) {\n        case 'auth.authorization': // success\n          apiManager.setUserAuth(response.user.id);\n\n          sendAvatar().finally(() => {\n            import('./pageIm').then(m => {\n              m.default.mount();\n            });\n          });\n          \n          break;\n        default:\n          btnI18n.update({key: response._ as any});\n          this.removeAttribute('disabled');\n          preloader.remove();\n          break;\n      }\n\n      /* (document.body.getElementsByClassName('page-sign')[0] as HTMLDivElement).style.display = 'none';\n      pageAuthCode(Object.assign(code, {phoneNumber})); */\n    }).catch(err => {\n      this.removeAttribute('disabled');\n      preloader.remove();\n\n      switch(err.type) {\n        default:\n          btnI18n.update({key: err.type});\n          break;\n      }\n    });\n  });\n\n  blurActiveElement();\n  return new Promise((resolve) => {\n    window.requestAnimationFrame(resolve);\n  });\n});\n\nconst page = new Page('page-signUp', true, onFirstMount, (_authCode: typeof authCode) => {\n  authCode = _authCode;\n\n  appStateManager.pushToState('authState', {_: 'authStateSignUp', authCode: _authCode});\n});\n\nexport default page;\n"],"sourceRoot":""}
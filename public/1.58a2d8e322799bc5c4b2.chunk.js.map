{"version":3,"sources":["webpack:///./src/lib/appManagers/appRuntimeManager.ts","webpack:///./src/lib/webp/webp.worker.ts","webpack:///./src/lib/webp/webpWorkerController.ts","webpack:///./src/lib/mtproto/singleInstance.ts","webpack:///./src/lib/langPack.ts","webpack:///./src/lib/mtproto/webPushApiManager.ts","webpack:///./src/lib/mtproto/telegramMeWebManager.ts","webpack:///./src/lib/mtproto/mtproto.worker.ts","webpack:///./src/lib/mtproto/transports/websocket.ts","webpack:///./src/lib/mtproto/mtprotoworker.ts","webpack:///./src/lib/crypto/crypto_methods.ts","webpack:///./src/helpers/date.ts","webpack:///./src/helpers/random.ts","webpack:///./src/helpers/string.ts","webpack:///./src/helpers/bytes.ts"],"names":["appRuntimeManager","location","reload","e","window","close","focus","Worker_fn","Worker","webpWorkerController","convertPromises","this","worker","addEventListener","payload","data","fileName","indexOf","promise","bytes","resolve","reject","postMessage","init","undefined","isWebpSupportedCache","document","createElement","toDataURL","startsWith","hasOwnProperty","convertPromise","type","singleInstance","log","clearInstance","masterInstance","deactivated","warn","delete","deactivateInstance","deactivateTimeout","idle","dispatchEvent","checkInstance","isIDLE","time","Date","now","newInstance","id","instanceID","get","then","curInstance","set","xt_instance","startAll","initial","clearTimeout","stopAll","setTimeout","started","reset","setInterval","documentElement","langPack","I18n","pluralRules","cacheLangPackPromise","loadLocalLangPack","defaultCode","langPackCode","lastRequestedLangCode","Promise","all","lang","langSign","strings","formatLocalStrings","default","saveLangPack","_","from_version","lang_code","version","local","loadLangPack","langCode","requestedServerLanguage","invokeApiCacheable","lang_pack","polyfillPromise","pushTo","i","v","push","key","value","getLangPack","_langPack","__langPack","___langPack","forEach","l","concat","string","appVersion","langPackVersion","applyLangPack","Intl","PluralRules","err","console","error","split","clear","Array","from","querySelectorAll","element","instance","weakMap","update","superFormatter","input","args","indexHolder","out","lastIndex","replace","match","p1","p2","p3","offset","slice","b","append","length","format","plain","str","select","regExp","Map","getCacheLangPack","finally","getStrings","invokeApi","keys","_Intl","Object","assign","WeakMap","IntlElementBase","options","property","classList","add","IntlElement","textContent","formatted","dataset","IntlDateElement","dateTimeFormat","DateTimeFormat","date","i18n","i18n_","_i18n","join","elements","useLast","arr","delimiterKey","WebPushApiManager","isAvailable","isPushEnabled","localNotificationsAvailable","settings","isFirefox","navigator","userAgent","toLowerCase","userVisibleOnly","subscribe","serviceWorker","ready","reg","pushManager","subscription","pushSubscriptionNotify","catch","Notification","permission","isAliveNotify","baseUrl","href","ACTIONS_LANG_MAP","push_action_mute1d","push_action_settings","push_message_nopreview","action","task","localNotifications","controller","isAliveTO","getSubscription","setUpServiceWorkerChannel","unsubscribe","successful","newSettings","addServiceWorkerTaskListener","event","subscriptionObj","toJSON","endpoint","p256dh","auth","tokenType","tokenValue","JSON","stringify","webPushApiManager","TelegramMeWebManager","disabled","test","domains","hostname","canRedirect","curValue","ts","tgme_sync","promises","map","url","script","onload","onerror","remove","src","body","appendChild","telegramMeWebManager","dcId","logSuffix","super","debug","handleOpen","handleError","handleClose","removeListeners","handleMessage","byteLength","send","ws","logTypes","Error","Log","Debug","logger","connect","removeEventListener","WebSocket","binaryType","apiManagerProxy","performTaskWorker","buffer","salt","iterations","keyBytes","ivBytes","encryptedBytes","publicKey","x","y","m","toString","password","state","isNew","postSWMessage","afterMessageIdTemp","taskId","awaiting","pending","updatesProcessor","hashes","apiPromisesSingle","apiPromisesCacheable","isSWRegistered","sockets","taskListeners","taskListenersSW","onWorkerMessage","callback","progress","rootScope","finalizeTask","result","start","registerServiceWorker","addTaskListener","toggleStorage","sessionStorage","race","setAuthorized","forceUnsubscribe","cacheName","caches","socketTask","socket","onOpen","onClose","onMessage","storageTask","res","language","performTaskWorkerVoid","forceReconnectTimeout","registerWorker","register","scope","registration","installing","waiting","active","bind","onServiceWorkerFail","releasePending","isWebpSupported","name","onWorkerFirstMessage","once","deferred","taskName","params","method","o","prepareTempMessageId","messageId","queryJSON","cached","hash","includes","q","cache","item","override","fulfilled","timeout","cacheSeconds","timestamp","verify","queueId","userAuth","dcID","dc_id","enabled","months","days","ONE_DAY","getWeekNumber","d","UTC","getFullYear","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","Math","ceil","getTime","formatDateAccordingToToday","timeStr","getHours","getMinutes","getDay","formatDateAccordingToTodayNew","today","hour","minute","year","day","month","weekday","formatTime","getFullDate","joiner","monthAsNumber","noSeconds","getSeconds","leadingZero","noTime","tsNow","seconds","t","yearPattern","RegExp","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","fillTipDates","query","dates","trim","setFullYear","setHours","minDate","maxDate","title","dayOfWeek","c","setDate","formatWeekLong","getDayOfWeek","distance","setTime","matches","exec","g1","g2","k","createForDayMonth","createForMonthYear","selectedYear","currentYear","g3","parseInt","validDateForMonth","formatterYearMax","k1","setMonth","formatterMonthYear","formatterDayMonth","nextRandomInt","maxValue","floor","random","randomLong","limitSymbols","limitFrom","escapeRegExp","encodeEntities","charCodeAt","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","index","partLength","convertInputKeyToKey","inputKey","convertKeyToInputKey","toUpperCase","capitalizeFirstLetter","charAt","bytesToHex","bytesFromHex","hexString","len","substr","bytesToBase64","mod3","nLen","nUint24","nIdx","String","fromCharCode","uint6ToBase64","nUint6","bytesCmp","bytes1","bytes2","convertToArrayBuffer","ArrayBuffer","BYTES_PER_ELEMENT","Uint8Array","bufferConcats","tmp","lastLength"],"mappings":"sFAmDA,MAAMA,EAAoB,IAxCnB,MACE,SACL,IACEC,SAASC,SACT,MAAMC,KAOH,QACL,IACEC,OAAOC,QACP,MAAMF,KAMH,QAeHC,OAAOE,UAME,O,iCCpDA,SAASC,IACtB,OAAO,IAAIC,OAAO,IAA0B,qD,4BCwE9C,MAAMC,EAAuB,IAtDtB,MAAP,cAEU,KAAAC,gBAAwE,GAGhF,OACEC,KAAKC,OAAS,IAAI,EAClBD,KAAKC,OAAOC,iBAAiB,UAAYV,IACvC,MAAMW,EAAWX,EAAEY,KAAyBD,QAE5C,GAAyC,IAAtCA,EAAQE,SAASC,QAAQ,SAAgB,CAC1C,MAAMC,EAAUP,KAAKD,gBAAgBI,EAAQE,UAC1CE,IACDJ,EAAQK,MAAQD,EAAQE,QAAQN,EAAQK,OAASD,EAAQG,gBAClDV,KAAKD,gBAAgBI,EAAQE,gBAGtC,IAAgBM,YAAYnB,EAAEY,QAKpC,YAAYA,GACPJ,KAAKY,OACNZ,KAAKY,OACLZ,KAAKY,KAAO,MAGdZ,KAAKC,OAAOU,YAAYP,GAG1B,kBAKE,YAJiCS,IAA9Bb,KAAKc,uBACNd,KAAKc,qBAAuBC,SAASC,cAAc,UAAUC,UAAU,cAAcC,WAAW,oBAG3FlB,KAAKc,qBAGd,QAAQT,EAAkBG,GAGxB,GAFAH,EAAW,QAAUA,EAElBL,KAAKD,gBAAgBoB,eAAed,GACrC,OAAOL,KAAKD,gBAAgBM,GAG9B,MAAMe,EAAiB,cAIvB,OAFApB,KAAKW,YAAY,CAACU,KAAM,cAAelB,QAAS,CAACE,WAAUG,WAEpDR,KAAKD,gBAAgBM,GAAYe,IAK5C,IAAetB,qBAAuBA,EACvB,O,iCC3Ef,oDAiJA,MAAMwB,EAAiB,IArHhB,MAAP,cAOU,KAAAC,IAAM,YAAO,YA4Bd,KAAAC,cAAgB,KAClBxB,KAAKyB,iBAAmBzB,KAAK0B,cAC9B1B,KAAKuB,IAAII,KAAK,yBACd,IAAeC,OAAO,iBAYnB,KAAAC,mBAAqB,KAC1B,GAAG7B,KAAKyB,gBAAkBzB,KAAK0B,YAC7B,OAAO,EAGT1B,KAAKuB,IAAI,cACTvB,KAAK8B,kBAAoB,EACzB9B,KAAK0B,aAAc,EACnB1B,KAAKwB,gBAKL,UAAUO,KAAKL,aAAc,EAC7B,UAAUM,cAAc,yBAGnB,KAAAC,cAAgB,CAACF,EAAO,UAAUA,MAAQ,UAAUA,KAAKG,UAC9D,GAAGlC,KAAK0B,YACN,OAAO,EAGT,MAAMS,EAAOC,KAAKC,MACZC,EAA2B,CAC/BC,GAAIvC,KAAKwC,WACTT,OACAI,QAGF,IAAeM,IAAI,eAAe,GAAOC,KAAMC,KAEzCZ,IACCY,GACDA,EAAYJ,KAAOvC,KAAKwC,YACxBG,EAAYR,KAAQA,EAtFE,KAuFxB,IAAeS,IAAI,CAACC,YAAaP,IAE7BtC,KAAKyB,iBACP,IAAWqB,WACP9C,KAAK+C,QAGP/C,KAAKuB,IAAII,KAAK,sBAAuBW,GAFrCtC,KAAK+C,SAAU,EAKjB/C,KAAKyB,gBAAiB,GAGrBzB,KAAK8B,oBACNkB,aAAahD,KAAK8B,mBAClB9B,KAAK8B,kBAAoB,IAGxB9B,KAAKyB,iBACN,IAAWwB,UACXjD,KAAKuB,IAAII,KAAK,oBAAqBW,GAC/BtC,KAAK8B,oBACP9B,KAAK8B,kBAAoBrC,OAAOyD,WAAWlD,KAAK6B,mBA9GjC,MAiHjB7B,KAAKyB,gBAAiB,MArGvB,QACL,IAAIzB,KAAKmD,QAAmE,CAC1EnD,KAAKmD,SAAU,EAEfnD,KAAKoD,QAGL,UAAUlD,iBAAiB,OAAQF,KAAKiC,eACxCoB,YAAYrD,KAAKiC,cArBS,KAsB1BjC,KAAKiC,gBAEL,IACElB,SAASuC,gBAAgBpD,iBAAiB,eAAgBF,KAAKwB,eAC/D,MAAMhC,MAIL,QACLQ,KAAKwC,WAAa,YAAc,YAChCxC,KAAKyB,gBAAiB,EACnBzB,KAAK8B,mBAAmBkB,aAAahD,KAAK8B,mBAC7C9B,KAAK8B,kBAAoB,EACzB9B,KAAK0B,aAAc,EACnB1B,KAAK+C,SAAU,EAUV,mBACF/C,KAAK0B,cACN1B,KAAKoD,QACLpD,KAAKiC,eAAc,GACnB,UAAUD,cAAc,yBAwE9B,MAAmB,IAAeV,eAAiBA,GACpC,O,gCCnJf,sSAiBO,MAAMiC,EAAgD,CAC3D,wBAA2B,oBAC5B,2BAA8B,qBAC9B,2BAA8B,qBAC9B,2BAA8B,qBAC9B,6BAAgC,qBAChC,wBAA2B,oBAC3B,2BAA8B,uBAC9B,wBAA2B,wBAC3B,2BAA8B,oBAC7B,yBAA4B,gBAC5B,0BAA6B,gBAC9B,uBAA0B,iBAC1B,0BAA6B,UAC7B,4BAA+B,iBAC/B,8BAAiC,mBAChC,wBAA2B,qBAC3B,2BAA8B,kCAC/B,2BAA8B,sBAC9B,8BAAiC,oCACjC,8BAAiC,oCACjC,8BAAiC,oCAChC,gCAAmC,oCACnC,0BAA6B,iBAE7B,gCAAmC,yBAEnC,+BAAgC,iCACjC,gCAAiC,iCACjC,mCAAoC,+BACpC,oCAAqC,kCAErC,iCAAkC,6BAClC,oCAAqC,yBACrC,uCAAwC,8BACxC,kCAAmC,iCACnC,qCAAsC,oCAEtC,wBAA2B,qCAK5B,IAAUC,GAAV,SAAUA,GAET,IAAIC,EAEAC,EA4BJ,SAAgBC,IACf,MAAMC,EAAc,IAAIC,aAExB,OADA,EAAAC,sBAAwBF,EACjBG,QAAQC,IAAI,CAClB,8BACA,gCACEtB,KAAK,EAAEuB,EAAMC,MACf,MAAMC,EAA4B,GAClCC,EAAmBH,EAAKI,QAASF,GACjCC,EAAmBF,EAASG,QAASF,GAUrC,OAAOG,EAR8B,CACpCC,EAAG,qBACHC,aAAc,EACdC,UAAWb,EACXO,UACAO,QAAS,EACTC,OAAO,MAMV,SAAgBC,EAAaC,GAE5B,OADA,EAAAC,yBAA0B,EACnBf,QAAQC,IAAI,CAClB,IAAWe,mBAAmB,uBAAwB,CACrDN,UAAWI,EACXG,UAAW,IAAIzB,WAEhB,IAAWwB,mBAAmB,uBAAwB,CACrDN,UAAWI,EACXG,UAAW,YAEZ,8BACA,8BACA,EAAAC,kBAYF,SAAgBb,EAAmBD,EAAce,EAA2B,IAC3E,IAAI,MAAMC,KAAKhB,EAAS,CAEvB,MAAMiB,EAAIjB,EAAQgB,GACD,iBAAR,EACRD,EAAOG,KAAK,CACXd,EAAG,iBACHe,IAAKH,EACLI,MAAOH,IAGRF,EAAOG,KAAK,OAAD,QACVd,EAAG,2BACHe,IAAKH,GACFC,IAKN,OAAOF,EAGR,SAAgBM,EAAYX,GAE3B,OADA,EAAAf,sBAAwBe,EACjBD,EAAaC,GAAUnC,KAAK,EAAEa,EAAUkC,EAAWC,EAAYC,EAAapB,MAClF,IAAIJ,EAA4B,GAEhC,CAACuB,EAAYC,GAAaC,QAAQC,IACjCzB,EAAmByB,EAAExB,QAAgBF,KAGtCA,EAAUA,EAAQ2B,OAAOvC,EAASY,SAElC,IAAI,MAAM4B,KAAUN,EAAUtB,QAC7BA,EAAQkB,KAAKU,GAId,OADAxC,EAASY,QAAUA,EACZG,EAAaf,KAItB,SAAgBe,EAAaf,GAG5B,OAFAA,EAASyC,WAAa,IAAIC,gBAEnB,IAAarD,IAAI,CAACW,aAAWb,KAAK,KACxCwD,EAAc3C,GACPA,IAcT,SAAgB2C,EAAc3C,GAC7B,GAAGA,EAASkB,YAAc,EAAAX,sBACzB,OAGD,IACCL,EAAc,IAAI0C,KAAKC,YAAY7C,EAASkB,WAC3C,MAAM4B,GACPC,QAAQC,MAAM,oBAAqBF,GACnC5C,EAAc,IAAI0C,KAAKC,YAAY7C,EAASkB,UAAU+B,MAAM,IAAK,GAAG,IAGrE,EAAArC,QAAQsC,QAER,IAAI,MAAMV,KAAUxC,EAASY,QAC5B,EAAAA,QAAQvB,IAAImD,EAAOT,IAAoBS,GAGxC,UAAU/D,cAAc,kBAAmBuB,EAASkB,WAEnCiC,MAAMC,KAAK5F,SAAS6F,iBAAiB,UAC7ChB,QAAQiB,IAChB,MAAMC,EAAW,EAAAC,QAAQtE,IAAIoE,GAE1BC,GACFA,EAASE,WAKZ,SAAgBC,EAAeC,EAAeC,EAAcC,EAAc,CAACjC,EAAG,IAC7E,IAAIkC,EAAgC,GAGpC,IAAIC,EAAY,EA8BhB,OA7BAJ,EAAMK,QAHS,qCAGO,CAACC,EAAOC,EAASC,EAASC,EAASC,EAAgB7B,KAKxE,GAFAsB,EAAIhC,KAAKU,EAAO8B,MAAMP,EAAWM,IAE9BH,EAEF,OAAOA,GACN,IAAK,KAAM,CACV,MAAMK,EAAI/G,SAASC,cAAc,KACjC8G,EAAEC,UAAUd,EAAeS,EAAIP,EAAMC,IACrCC,EAAIhC,KAAKyC,GACT,YAGOH,EACTN,EAAIhC,KAAKtE,SAASC,cAAc,OACvBmG,GACTE,EAAIhC,KAAK8B,EAAKC,EAAYjC,MAI3B,OADAmC,EAAYM,EAASJ,EAAMQ,OACpB,KAGLV,IAAcJ,EAAMc,QACtBX,EAAIhC,KAAK6B,EAAMW,MAAMP,IAGfD,EAKR,SAAgBY,EAAO3C,EAAkB4C,GAAQ,EAAOf,GACvD,MAAMgB,EAAM,EAAAhE,QAAQ1B,IAAI6C,GACxB,IAAI4B,EACJ,GAAGiB,EACF,GAAa,6BAAVA,EAAI5D,IAAoC4C,aAAI,EAAJA,EAAMa,QAAQ,CACxD,IAAI5C,EAAI+B,EAAK,GACI,iBAAR,IAAkB/B,GAAKA,EAAEmC,QAAQ,MAAO,KAGjDL,EAAQiB,EAFE1E,EAAY2E,OAAOhD,GAEb,WAAa+C,EAAiB,iBAE9CjB,EADmB,mBAAViB,EAAI5D,EACL4D,EAAI5C,MAGJD,OAIT4B,EAAQ5B,EAGT,GAAG4C,EAAO,CACT,GAAGf,aAAI,EAAJA,EAAMa,OAAQ,CAChB,MAAMK,EAAS,kBACf,IAAIlD,EAAI,EACR+B,EAAQA,EAAMK,QAAQc,EAAQ,CAACb,EAAOI,EAAQ7B,IACtC,GAAKoB,EAAKhC,MAInB,OAAO+B,EAEP,OAAOD,EAAeC,EAAOC,GAjPlB,EAAAhD,QAA4C,IAAImE,IAKlD,EAAAxD,yBAA0B,EACrB,EAAAyD,iBAAhB,WACC,OAAG7E,IACIA,EAAuBK,QAAQC,IAAI,CACzC,IAAavB,IAAI,YACjB,EAAAwC,kBACEvC,KAAK,EAAEa,KACLA,GAEM,IAMN,EAAAO,wBACH,EAAAA,sBAAwBP,EAASkB,WAGlCyB,EAAc3C,GACPA,GAZCI,KAaN6E,QAAQ,KACV9E,OAAuB7C,MAIT,EAAA8C,kBAAiB,EAuBjB,EAAAiB,aAAY,EAiBZ,EAAA6D,WAAhB,SAA2B5D,EAAkBV,GAC5C,OAAO,IAAWuE,UAAU,sBAAuB,CAClD1D,UAAW,IAAIzB,SACfkB,UAAWI,EACX8D,KAAMxE,KAIQ,EAAAC,mBAAkB,EAsBlB,EAAAoB,YAAW,EAoBX,EAAAlB,aAAY,EASf,EAAAW,gBACQ,oBAAX,WAAuD,IAAtBkB,KAAgB,YAClDpC,QAAQtD,UAER,+BAA2BiC,KAAMkG,IACtCnJ,OAAe0G,KAAO0C,OAAOC,OAAwB,oBAAX,KAAyB3C,KAAO,GAAIyC,EAAMvE,WAKxE,EAAA6B,cAAa,EA8Bb,EAAAe,eAAc,EAuCd,EAAAgB,OAAM,EAoCT,EAAAlB,QAAyE,IAAIgC,QAO1F,MAAeC,EAId,YAAYC,GAFL,KAAAC,SAA+C,YAGrDlJ,KAAK6G,QAAUoC,EAAQpC,SAAW9F,SAASC,cAAc,QACzDhB,KAAK6G,QAAQsC,UAAUC,IAAI,QAE3BpJ,KAAKgH,OAAOiC,GACZ,EAAAlC,QAAQnE,IAAI5C,KAAK6G,QAAS7G,OAU5B,MAAaqJ,UAAoBL,EAIzB,OAAOC,GAGb,GAFA,YAAWjJ,KAAMiJ,GAEI,cAAlBjJ,KAAKkJ,SACPlJ,KAAK6G,QAAQyC,YAAc,GAC3BtJ,KAAK6G,QAAQkB,UAAUE,EAAOjI,KAAKsF,KAAK,EAAOtF,KAAKmH,WAC9C,CAEN,MAAM/B,EAAIpF,KAAK6G,QAAQ7G,KAAKkJ,UACtBK,EAAYtB,EAAOjI,KAAKsF,KAAK,EAAMtF,KAAKmH,WAGrCtG,IAANuE,EAAiBpF,KAAK6G,QAAQ2C,QAAQxJ,KAAKkJ,UAAYK,EACpDvJ,KAAK6G,QAA6B7G,KAAKkJ,UAAYK,IAjB/C,EAAAF,YAAW,EA0BX,EAAAI,gBAAb,cAAqCT,EAI7B,OAAOC,GACb,YAAWjJ,KAAMiJ,GAKjB,MAAMS,EAAiB,IAAIvD,KAAKwD,eAAe,EAAA7F,sBAAwB,YAAa9D,KAAKiJ,SAExFjJ,KAAK6G,QAAgB7G,KAAKkJ,UAAY,YAAsBQ,EAAezB,OAAOjI,KAAK4J,SAI1E,EAAAC,KAAhB,SAAqBvE,EAAkB6B,GACtC,OAAO,IAAIkC,EAAY,CAAC/D,MAAK6B,SAAON,SAGrB,EAAAiD,MAAhB,SAAsBb,GACrB,OAAO,IAAII,EAAYJ,GAASpC,SAGjB,EAAAkD,MAAhB,SAAsBlD,EAAsBvB,EAAkB6B,EAAc+B,GAC3E,OAAO,IAAIG,EAAY,CAACxC,UAASvB,MAAK6B,OAAM+B,aAAWrC,SAnUzD,CAAUrD,MAAI,KAwUC,YAEf,MAAMqG,EAAOrG,EAAKqG,KAGZC,EAAQtG,EAAKsG,MAGbC,EAAQvG,EAAKuG,MAGZ,SAASC,EAAKC,EAAyBC,GAAU,GACvD,MAAMC,EAAqBF,EAASpC,MAAM,EAAG,GAC5C,IAAI,IAAI1C,EAAI,EAAGA,EAAI8E,EAASjC,SAAU7C,EAAG,CACvC,MACMiF,EADUH,EAASjC,OAAS,IAAO7C,GACG+E,EAAU,oBAAsB,gBAC5EC,EAAI9E,KAAKwE,EAAKO,IACdD,EAAI9E,KAAK4E,EAAS9E,IAGrB,OAAOgF,EAGR,IAAe3G,KAAOA,G,gCC3ZtB,6HA8BO,MAAM6G,EAWX,cAVO,KAAAC,aAAc,EACb,KAAAC,eAAgB,EAChB,KAAAC,6BAA8B,EAC9B,KAAArH,SAAU,EACV,KAAAsH,SAAsD,GAEtD,KAAAC,UAAYC,UAAUC,UAAUC,cAAcvK,QAAQ,YAAc,EACpE,KAAAwK,iBAAkB9K,KAAK0K,UACvB,KAAAnJ,IAAM,YAAO,MA2Cd,KAAAwJ,UAAY,KACb/K,KAAKsK,aAITK,UAAUK,cAAcC,MAAMvI,KAAMwI,IAClCA,EAAIC,YAAYJ,UAAU,CAACD,gBAAiB9K,KAAK8K,kBAAkBpI,KAAM0I,IAEvEpL,KAAKuK,eAAgB,EACrBvK,KAAKqL,uBAAuB,YAAaD,KACxCE,MAAO9L,IACuB,WAA5B+L,aAAaC,WACdxL,KAAKuB,IAAI,4CAETvB,KAAKuB,IAAI,+BAAgC/B,GACrCQ,KAAK8K,kBACP9K,KAAK8K,iBAAkB,EACvB5H,WAAWlD,KAAK+K,UAAW,UAyD9B,KAAAU,cAAgB,KACrB,IAAIzL,KAAKsK,aAAe,UAAUvI,MAAQ,UAAUA,KAAKL,YACvD,OAGF1B,KAAKyK,SAASiB,SAAWpM,SAASqM,MAAQ,IAAIpE,QAAQ,OAAQ,IAAM,OAEpE,MAAMtD,EAAiD,GACjD2H,EAAwF,CAC5FC,mBAAoB,WAAW,wCAA0C,iCACzEC,qBAAsB,WAAW,0CAA4C,mCAC7EC,uBAAwB,sCAG1B,IAAI,MAAMC,KAAUJ,EAClB3H,EAAK+H,GAA2C,UAAK/D,OAAO2D,EAAiBI,IAA0C,GAGzH,MAAMC,EAA8B,CAClC5K,KAAM,OACNlB,QAAS,CACP+L,mBAAoBlM,KAAKwK,4BACzBvG,KAAMA,EACNwG,SAAUzK,KAAKyK,WAIhBE,UAAUK,cAAcmB,YACzBxB,UAAUK,cAAcmB,WAAWxL,YAAYsL,GAGjDjM,KAAKoM,UAAYlJ,WAAWlD,KAAKyL,cAAe,MAjJ3C,gBAAiBhM,QAClB,iBAAkBA,QAClB,kBAAmBkL,YACrB3K,KAAKuB,IAAII,KAAK,oCACd3B,KAAKsK,aAAc,EACnBtK,KAAKwK,6BAA8B,GAGlCxK,KAAKsK,aAA2C,WAA5BiB,aAAaC,YAClCxL,KAAKuB,IAAII,KAAK,uCAIX,QACD3B,KAAKmD,UACPnD,KAAKmD,SAAU,EACfnD,KAAKqM,kBACLrM,KAAKsM,6BAIF,gCACLtM,KAAKwK,6BAA8B,EAG9B,kBACDxK,KAAKsK,aAITK,UAAUK,cAAcC,MAAMvI,KAAMwI,IAClCA,EAAIC,YAAYkB,kBAAkB3J,KAAM0I,IACtCpL,KAAKuK,gBAAkBa,EACvBpL,KAAKqL,uBAAuB,OAAQD,KACnCE,MAAOjF,IACRrG,KAAKuB,IAAIgF,MAAM,iCAAkCF,OA6BhD,cACDrG,KAAKsK,aAITK,UAAUK,cAAcC,MAAMvI,KAAMwI,IAClCA,EAAIC,YAAYkB,kBAAkB3J,KAAM0I,IACtCpL,KAAKuK,eAAgB,EAElBa,IACDpL,KAAKqL,uBAAuB,cAAeD,GAE3ClI,WAAW,KACTkI,EAAamB,cAAc7J,KAAM8J,IAC/BxM,KAAKuK,eAAgB,IACpBe,MAAO9L,IACRQ,KAAKuB,IAAIgF,MAAM,yBAA0B/G,MAE1C,QAEJ8L,MAAO9L,IACRQ,KAAKuB,IAAIgF,MAAM,wDACM/G,OAKpB,mBACDQ,KAAKsK,aAITK,UAAUK,cAAcC,MAAMvI,KAAMwI,IAClCA,EAAIC,YAAYkB,kBAAkB3J,KAAM0I,IACtCpL,KAAKuB,IAAII,KAAK,oBAAqByJ,GAChCA,GACDA,EAAamB,cAAc7J,KAAM8J,IAC/BxM,KAAKuB,IAAII,KAAK,+BAAgC6K,GAC9CxM,KAAKuK,eAAgB,IACpBe,MAAO9L,IACRQ,KAAKuB,IAAIgF,MAAM,yBAA0B/G,OAG5C8L,MAAO9L,IACRQ,KAAKuB,IAAIgF,MAAM,wDACM/G,OAuCpB,YAAYiN,GACjBzM,KAAKyK,SAAW,YAAKgC,GACrBzJ,aAAahD,KAAKoM,WAClBpM,KAAKyL,gBAGA,wBACL,GAAIzL,KAAKsK,aAINK,UAAUK,cAAcmB,WAAY,CACrC,MAAMF,EAA4C,CAAC5K,KAAM,uBACzDsJ,UAAUK,cAAcmB,WAAWxL,YAAYsL,IAI5C,4BACDjM,KAAKsK,cAIT,IAAWoC,6BAA6B,aAAeT,IAClD,UAAUlK,MAAQ,UAAUA,KAAKL,YAClC,IAAkBnC,SAIpB,UAAUyC,cAAc,0BAA2BiK,EAAK9L,WAG1DwK,UAAUK,cAAcC,MAAMvI,KAAK1C,KAAKyL,gBAGnC,uBAAuBkB,EAAmCvB,GAC/D,GAAGA,EAAc,CACf,MAAMwB,EAAwCxB,EAAayB,SAC3D,KAAID,GACDA,EAAgBE,UAChBF,EAAgBjE,MAChBiE,EAAgBjE,KAAKoE,QACrBH,EAAgBjE,KAAKqE,MAKtB,OAJAhN,KAAKuB,IAAII,KAAK,4BAA6BiL,GAC3C5M,KAAKuM,cACLvM,KAAKsK,aAAc,OACnBtK,KAAKqL,uBAAuBsB,GAI9B3M,KAAKuB,IAAII,KAAK,OAAQgL,EAAOC,GAC7B,UAAU5K,cAAe,QAAU2K,EAAuC,CACxEM,UAAW,GACXC,WAAYC,KAAKC,UAAUR,UAG7B5M,KAAKuB,IAAII,KAAK,OAAQgL,GAAO,GAC7B,UAAU3K,cAAe,QAAU2K,GAAuC,IAKhF,MAAMU,EAAoB,IAAIhD,EAC9B,MAAmB,IAAegD,kBAAoBA,GACvC,a,gCC7Pf,uG,sSAiBO,MAAMC,EAAb,cACU,KAAAC,SAA2B,IAAMC,OAAoD,IAA5C,IAAIC,QAAQnN,QAAQhB,SAASoO,UAEjE,cAAcC,G,yCACtB3N,KAAKuN,UAIR,IAAe9K,IAAI,aAAaC,KAAMkL,IACpC,MAAMC,EAAK,aAAM,GACjB,GAAGF,GACDC,GACAA,EAASD,cAAgBA,GACxBC,EAASC,GAAK,MAASA,EACxB,OAGF,IAAejL,IAAI,CACjBkL,UAAW,CACTH,cACAE,QAIJ,MAKME,EALO,CACX,mCAAqCJ,EAAc,IAAM,KACzD,4BAA8BA,EAAc,IAAM,MAG9BK,IAAIC,IACxB,MAAMC,EAASnN,SAASC,cAAc,UAChCT,EAAU,IAAIwD,QAAetD,IACjCyN,EAAOC,OAASD,EAAOE,QAAU,KAC/BF,EAAOG,SACP5N,OAKJ,OAFAyN,EAAOI,IAAML,EACblN,SAASwN,KAAKC,YAAYN,GACnB3N,IAGT,OAAOwD,QAAQC,IAAI+J,SAKzB,MAAMU,EAAuB,IAAInB,EACjC,MAAmB,IAAemB,qBAAuBA,GAC1C,a,gCClEA,SAAS7O,IACtB,OAAO,IAAIC,OAAO,IAA0B,wD,yECU/B,MAAM,UAAe,IASlC,YAAsB6O,EAAwBT,EAAaU,GACzDC,QADoB,KAAAF,OAAwB,KAAAT,MAFtC,KAAAY,MAAQ,IAAMA,QAAS,EAkDvB,KAAAC,WAAa,KACnB9O,KAAKuB,IAAI,UAETvB,KAAK6O,OAAS7O,KAAKuB,IAAIsN,MAAM,uBAC7B7O,KAAKgC,cAAc,SAGb,KAAA+M,YAAevP,IACrBQ,KAAKuB,IAAIgF,MAAM,cAAe/G,GAC9BQ,KAAKN,SAGC,KAAAsP,YAAc,KACpBhP,KAAKuB,IAAI,UAETvB,KAAKiP,kBACLjP,KAAKgC,cAAc,UAGb,KAAAkN,cAAiBvC,IACvB3M,KAAK6O,OAAS7O,KAAKuB,IAAIsN,MAAM,KAAM,gBAA8BlC,EAAMvM,KAAK+O,YAE5EnP,KAAKgC,cAAc,UAAW2K,EAAMvM,OAG/B,KAAAgP,KAAQb,IACbvO,KAAK6O,OAAS7O,KAAKuB,IAAIsN,MAAM,0BAA2BN,EAAKvG,QAE7DhI,KAAKqP,GAAGD,KAAKb,IAzEb,IAAIe,EAAW,IAASC,MAAQ,IAASC,IAMzC,OALGxP,KAAK6O,QAAOS,GAAY,IAASG,OACpCzP,KAAKuB,IAAM,OAAAmO,EAAA,GAAO,MAAMhB,EAASC,EAAWW,GAC5CtP,KAAKuB,IAAI,eACTvB,KAAK2P,UAEE3P,KAGD,kBACFA,KAAKqP,KAITrP,KAAKqP,GAAGO,oBAAoB,OAAQ5P,KAAK8O,YACzC9O,KAAKqP,GAAGO,oBAAoB,QAAS5P,KAAKgP,aAC1ChP,KAAKqP,GAAGO,oBAAoB,QAAS5P,KAAK+O,aAC1C/O,KAAKqP,GAAGO,oBAAoB,UAAW5P,KAAKkP,eAC5ClP,KAAKqP,QAAKxO,GAGJ,UACNb,KAAKqP,GAAK,IAAIQ,UAAU7P,KAAKiO,IAAK,UAClCjO,KAAKqP,GAAGS,WAAa,cACrB9P,KAAKqP,GAAGnP,iBAAiB,OAAQF,KAAK8O,YACtC9O,KAAKqP,GAAGnP,iBAAiB,QAASF,KAAKgP,aACvChP,KAAKqP,GAAGnP,iBAAiB,QAASF,KAAK+O,aACvC/O,KAAKqP,GAAGnP,iBAAiB,UAAWF,KAAKkP,eAGpC,QACL,GAAIlP,KAAKqP,GAAT,CAIArP,KAAKuB,IAAI,mBAET,IACEvB,KAAKqP,GAAG3P,QACR,MAAM2G,IAGRrG,KAAKgP,gB,8DC6fT,MAAMe,EAAkB,IAzgBjB,cCjDQ,MAGN,SAASvP,GACd,OAAOR,KAAKgQ,kBAA8B,YAAaxP,GAGlD,WAAWA,GAChB,OAAOR,KAAKgQ,kBAA4B,cAAexP,GAGlD,OAAOyP,EAAoBC,EAAkBC,GAClD,OAAOnQ,KAAKgQ,kBAA+B,SAAUC,EAAQC,EAAMC,GAG9D,WAAW3P,EAChB4P,EACAC,GACA,OAAOrQ,KAAKgQ,kBAAqD,cAAe,YAAqBxP,GACnG,YAAqB4P,GAAW,YAAqBC,IAGlD,WAAWC,EAChBF,EACAC,GACA,OAAOrQ,KAAKgQ,kBAA+B,cACzCM,EAAgBF,EAAUC,GACzB3N,KAAKlC,GAAS,YAAqBA,IAGjC,WAAW+P,EAAgD/P,GAChE,OAAOR,KAAKgQ,kBAA4B,cAAeO,EAAW/P,GAG7D,UAAUA,GACf,OAAOR,KAAKgQ,kBAAgD,YAAa,IAAIxP,IAGxE,OAAOgQ,EAAsCC,EAAsCC,GACxF,OAAO1Q,KAAKgQ,kBAAkD,UAAWQ,EAAGC,EAAGC,GAG1E,eAAkBlQ,EAAoBmQ,GAC3C,OAAO3Q,KAAKgQ,kBAAqB,iBAAkBxP,EAAOmQ,GAGrD,WAAWC,EAAkBC,EAAYC,GAAQ,GACtD,OAAO9Q,KAAKgQ,kBAAkB,aAAcY,EAAUC,EAAOC,KDkD/D,cACElC,QA9CK,KAAAmC,cAA0C,OACzC,KAAAC,mBAAqB,EAErB,KAAAC,OAAS,EACT,KAAAC,SAMJ,GACI,KAAAC,QAAuB,GAExB,KAAAC,iBAAuC,KAEtC,KAAA7P,IAAM,OAAAmO,EAAA,GAAO,aAEb,KAAA2B,OAA0C,GAE1C,KAAAC,kBAEJ,GACI,KAAAC,qBAUJ,GAEI,KAAAC,gBAAiB,EAEjB,KAAA3C,MAAQ,IAER,KAAA4C,QAA+B,IAAInJ,IAEnC,KAAAoJ,cAA2D,GAC3D,KAAAC,gBAA6D,GA+M7D,KAAAC,gBAAmBpS,IAGzB,MAAMyM,EAAOzM,EAAEY,KAEf,IAAI,YAAS6L,GACX,OAGF,MAAM4F,EAAW7R,KAAK0R,cAAczF,EAAK5K,MACtCwQ,EACDA,EAAS5F,GAIRA,EAAKjF,OACHhH,KAAKoR,kBACNpR,KAAKoR,iBAAiBnF,EAAKjF,QAErBiF,EAAK6F,SACbC,EAAA,QAAU/P,cAAc,oBAAqBiK,EAAK6F,WAC1C7F,EAAK9K,eAAe,WAAa8K,EAAK9K,eAAe,WAC7DnB,KAAKgS,aAAa/F,EAAKgF,OAAQhF,EAAKgG,OAAQhG,EAAK1F,QA/NnDvG,KAAKuB,IAAI,eAETD,EAAA,EAAe4Q,QAEflS,KAAKmS,wBAELnS,KAAKoS,gBAAgB,QAAS,KAE5BrO,QAAQC,IAAI,CACV,IAAWqO,eAAc,GACzBC,EAAA,EAAe7L,QACf1C,QAAQwO,KAAK,CACX9D,EAAA,QAAqB+D,eAAc,GACnC,YAAM,OAERnF,EAAA,QAAkBoF,mBAClB1O,QAAQC,IAT4B,CAAC,cAAe,sBAShCgK,IAAI0E,GAAaC,OAAO/Q,OAAO8Q,OAClDlK,QAAQ,KACTnJ,EAAA,EAAkBE,aAItBS,KAAKoS,gBAAgB,yBAA2BnG,IAC9C8F,EAAA,QAAU/P,cAAc,2BAA4BiK,EAAK9L,WAG3DH,KAAKoS,gBAAgB,cAAgBnG,IACnCnM,EAAA,EAAqBa,YAAYsL,KAGnCjM,KAAKoS,gBAAgB,cAAgBnG,IACnC,MAAM2G,EAAa3G,EAAK9L,QAClBoC,EAAKqQ,EAAWrQ,GAGtB,GAAuB,SAApBqQ,EAAWvR,KAAiB,CACdrB,KAAKyR,QAAQhP,IAAIF,GACzB6M,KAAKwD,EAAWzS,cAClB,GAAuB,UAApByS,EAAWvR,KAAkB,CACtBrB,KAAKyR,QAAQhP,IAAIF,GACzB7C,aACF,GAAuB,UAApBkT,EAAWvR,KAAkB,CACrC,MAAMwR,EAAS,IAAI,EAAOD,EAAWzS,QAAQuO,KAAMkE,EAAWzS,QAAQ8N,IAAK2E,EAAWzS,QAAQwO,WAExFmE,EAAS,KAEb9S,KAAKW,YAAY,CACfU,KAAM,cACNlB,QAAS,CACPkB,KAAM,OACNkB,SAIAwQ,EAAU,KACd/S,KAAKW,YAAY,CACfU,KAAM,cACNlB,QAAS,CACPkB,KAAM,QACNkB,QAIJsQ,EAAOjD,oBAAoB,OAAQkD,GACnCD,EAAOjD,oBAAoB,QAASmD,GACpCF,EAAOjD,oBAAoB,UAAWoD,GACtChT,KAAKyR,QAAQ7P,OAAOW,IAEhByQ,EAAa/C,IACjBjQ,KAAKW,YAAY,CACfU,KAAM,cACNlB,QAAS,CACPkB,KAAM,UACNkB,KACApC,QAAS8P,MAKf4C,EAAO3S,iBAAiB,OAAQ4S,GAChCD,EAAO3S,iBAAiB,QAAS6S,GACjCF,EAAO3S,iBAAiB,UAAW8S,GACnChT,KAAKyR,QAAQ7O,IAAIL,EAAIsQ,MAIzB7S,KAAKoS,gBAAgB,oBAAsBnG,IACzC,MAAMgH,EAAchH,EAAK9L,QAEzBmS,EAAA,EAAeW,EAAY5R,SAAS4R,EAAY9L,MAAMzE,KAAKwQ,IACzDlT,KAAKW,YAAY,CACfU,KAAM,oBACNkB,GAAI0J,EAAK1J,GACTpC,QAAS+S,QAKfnB,EAAA,QAAU7R,iBAAiB,kBAAoBiT,IAC7CnT,KAAKoT,sBAAsB,cAAeD,KAG5C1T,OAAOS,iBAAiB,SAAWyM,IACjC3M,KAAKqT,0BAIPrT,KAAKsT,iBAIA,wBACL,OAAOtT,KAAKwR,eAGN,wBACN,KAAK,kBAAmB7G,WAAY,OAEpC,MAAM1K,EAAS0K,UAAUK,cACzB/K,EAAOsT,SAAS,UAAW,CAACC,MAAO,OAAO9Q,KAAK+Q,IAC7CzT,KAAKuB,IAAI,gBAAiBkS,GAC1BzT,KAAKwR,gBAAiB,GAEXiC,EAAaC,YAAcD,EAAaE,SAAWF,EAAaG,QACxE1T,iBAAiB,cAAgBV,IAClCQ,KAAKuB,IAAI,iBAAkB/B,KAG7BQ,KAAK+Q,cAAgB9Q,EAAOkM,WAAWxL,YAAYkT,KAAK5T,EAAOkM,aAM7D9F,IACFrG,KAAKwR,gBAAiB,EACtBxR,KAAKuB,IAAIgF,MAAM,0BAA2BF,GAEvCrG,KAAK8T,qBACN9T,KAAK8T,wBAIT7T,EAAOC,iBAAiB,mBAAoB,KAC1CF,KAAKuB,IAAII,KAAK,oBACd3B,KAAK+T,iBAEL9T,EAAOkM,WAAWjM,iBAAiB,QAAUV,IAC3CQ,KAAKuB,IAAIgF,MAAM,oBAAqB/G,OAOxCS,EAAOC,iBAAiB,UAAYV,IAClC,MAAMyM,EAA0BzM,EAAEY,KAClC,IAAI,YAAS6L,GACX,OAGF,MAAM4F,EAAW7R,KAAK2R,gBAAgB1F,EAAK5K,MACxCwQ,GACDA,EAAS5F,KAIbjM,KAAK0M,6BAA6B,kBAAoBT,IACpDjM,KAAKW,YAAYsL,KAInBhM,EAAOC,iBAAiB,eAAiBV,IACvCQ,KAAKuB,IAAIgF,MAAM,mBAAoB/G,KAI/B,qBAAqBS,GAC3B,IAAID,KAAKC,OAAQ,CACfD,KAAKC,OAASA,EACdD,KAAKuB,IAAI,iBAETvB,KAAKW,YAAcX,KAAKC,OAAOU,YAAYkT,KAAK7T,KAAKC,QAErD,MAAM+T,EAAkBlU,EAAA,EAAqBkU,kBAC7ChU,KAAKuB,IAAI,kBAAmByS,GAC5BhU,KAAKW,YAAY,CAACU,KAAM,cAAelB,QAAS6T,IAChDhU,KAAKW,YAAY,CAACU,KAAM,YAAalB,QAASwK,UAAUC,YAExD5K,KAAK+T,kBAIF,gBAAgBE,EAA8CpC,GACnE7R,KAAK0R,cAAcuC,GAAQpC,EAGtB,6BAA6BoC,EAAgDpC,GAClF7R,KAAK2R,gBAAgBsC,GAAQpC,EA8BvB,iBAGN,MAAM5R,EAAS,IAAI,EAEnBA,EAAOC,iBAAiB,UAAWF,KAAKkU,qBAAqBL,KAAK7T,KAAMC,GAAS,CAACkU,MAAM,IACxFlU,EAAOC,iBAAiB,UAAWF,KAAK4R,iBAExC3R,EAAOC,iBAAiB,QAAUmG,IAChCrG,KAAKuB,IAAIgF,MAAM,eAAgBF,KAK3B,aAAa4K,EAAgBgB,EAAa1L,GAChD,MAAM6N,EAAWpU,KAAKkR,SAASD,QACfpQ,IAAbuT,IACDpU,KAAK6O,OAAS7O,KAAKuB,IAAIsN,MAAM,OAAQuF,EAASC,SAAUpC,EAAQ1L,GAChEA,EAAQ6N,EAAS1T,OAAO6F,GAAS6N,EAAS3T,QAAQwR,UAC3CjS,KAAKkR,SAASD,IAIlB,sBAAsBhF,KAAiB9E,GAC5C,MAAMmN,EAAS,CACbrI,OACAgF,OAAQjR,KAAKiR,OACb9J,QAGFnH,KAAKmR,QAAQ9L,KAAKiP,GAClBtU,KAAK+T,iBAEL/T,KAAKiR,SAGA,kBAAqBhF,KAAiB9E,GAG3C,OAFAnH,KAAK6O,OAAS7O,KAAKuB,IAAIsN,MAAM,QAAS5C,EAAM9E,GAErC,IAAIpD,QAAW,CAACtD,EAASC,KAC9BV,KAAKkR,SAASlR,KAAKiR,QAAU,CAACxQ,UAASC,SAAQ2T,SAAUpI,GACzDjM,KAAKoT,sBAAsBnH,KAAS9E,KAIhC,iBAGHnH,KAAKW,cACNX,KAAK6O,OAAS7O,KAAKuB,IAAIsN,MAAM,2BAA4B7O,KAAKmR,QAAQnJ,QACtEhI,KAAKmR,QAAQvL,QAAQuL,IACnBnR,KAAKW,YAAYwQ,KAGnBnR,KAAK6O,OAAS7O,KAAKuB,IAAIsN,MAAM,kBAC7B7O,KAAKmR,QAAQnJ,OAAS,GAInB,oBAAoB6J,GACzB7R,KAAKoR,iBAAmBS,EAGnB,UAAyC0C,EAAWD,EAAkC,GAAIrL,EAA4B,IAE3H,OAAOjJ,KAAKgQ,kBAAkB,YAAauE,EAAQD,EAAQrL,GAGtD,eAA8CsL,EAAWD,EAAkC,GAAIrL,EAA4B,IAChI,IAAIuL,EAAIvL,EAOR,OANAuL,EAAEC,qBAAuB,MAAOzU,KAAKgR,mBAErCwD,EAAI,OAAH,UAAOvL,GACPA,EAAsByL,UAAYF,EAAEC,qBAG9BzU,KAAK0I,UAAU6L,EAAQD,EAAQE,GAGjC,kBAAiDD,EAAWD,EAAgD,GAAWrL,EAA4B,IAGxJ,MAAM0L,EAAYxH,KAAKC,UAAUkH,GACjC,IAAIM,EAQJ,OAPG5U,KAAKqR,OAAOkD,KACbK,EAAS5U,KAAKqR,OAAOkD,GAAQI,GAC1BC,IACAN,EAAeO,KAAOD,EAAOC,OAI3B7U,KAAK0I,UAAU6L,EAAQD,EAAQrL,GAASvG,KAAMuP,IACnD,GAAGA,EAAO1N,EAAEuQ,SAAS,eAEnB,OADA9U,KAAK6O,OAAS7O,KAAKuB,IAAII,KAAK,qBAAsB4S,EAAQI,GACnDC,EAAO3C,OAGhB,GAAGA,EAAO4C,KAA+B,CACvC,MAAMA,EAAO5C,EAAO4C,KAEhB7U,KAAKqR,OAAOkD,KAASvU,KAAKqR,OAAOkD,GAAU,IAC/CvU,KAAKqR,OAAOkD,GAAQI,GAAa,CAC/BE,OACA5C,UAIJ,OAAOA,IAIJ,gBAA+CsC,EAAWD,EAAkC,GAAWrL,EAA4B,IACxI,MAAM8L,EAAIR,EAAS,IAAMpH,KAAKC,UAAUkH,GACxC,OAAGtU,KAAKsR,kBAAkByD,GACjB/U,KAAKsR,kBAAkByD,GAGzB/U,KAAKsR,kBAAkByD,GAAK/U,KAAK0I,UAAU6L,EAAQD,EAAQrL,GAAST,QAAQ,YAC1ExI,KAAKsR,kBAAkByD,KAI3B,mBAAkDR,EAAWD,EAAkC,GAAWrL,EAAiF,I,MAChM,MAAM+L,EAAyC,QAAjC,EAAAhV,KAAKuR,qBAAqBgD,UAAO,QAAKvU,KAAKuR,qBAAqBgD,GAAU,GAClFI,EAAYxH,KAAKC,UAAUkH,GAC3BW,EAAOD,EAAML,GACnB,GAAGM,KAAUhM,EAAQiM,WAAaD,EAAKE,WACrC,OAAOF,EAAK1U,QAYd,IAAI6U,EATDnM,EAAQiM,WACND,GAAQA,EAAKG,UACdpS,aAAaiS,EAAKG,gBACXH,EAAKG,gBAGPnM,EAAQiM,UAIdjM,EAAQoM,eACTD,EAAU3V,OAAOyD,WAAW,YACnB8R,EAAML,IACW,IAAvB1L,EAAQoM,qBACJpM,EAAQoM,cAGjB,MAAM9U,EAAUP,KAAK0I,UAAU6L,EAAQD,EAAQrL,GAU/C,OARA+L,EAAML,GAAa,CACjBW,UAAWlT,KAAKC,MAChB8S,WAAW,EACXC,UACA7U,UACA+T,UAGK/T,EAGF,WAA0CgU,EAAWgB,GAC1D,MAAMP,EAAQhV,KAAKuR,qBAAqBgD,GACxC,GAAGS,EACD,IAAI,MAAML,KAAaK,EAAO,CAC5B,MAAMC,EAAOD,EAAML,GAChBY,EAAON,EAAKX,UACVW,EAAKG,SACNpS,aAAaiS,EAAKG,gBAGbJ,EAAML,KAYd,YAAYjG,GACjB,OAAO1O,KAAKgQ,kBAAkB,cAAetB,GAGxC,WAAW8G,GAChB,OAAOxV,KAAKgQ,kBAAkB,aAAcwF,GAGvC,YAAYC,GAMjB,MALwB,iBAAf,IACPA,EAAW,CAACC,KAAM,EAAG9L,KAAMxH,KAAKC,MAAQ,IAAO,EAAGE,GAAIkT,IAGxD1D,EAAA,QAAU/P,cAAc,YAAayT,GAC9BzV,KAAKgQ,kBAAkB,cAAeyF,GAGxC,aAAaE,EAAe1M,GACjC,OAAOjJ,KAAKgQ,kBAAkB,eAAgB2F,EAAO1M,GAGhD,SAEL,OAAOjJ,KAAKgQ,kBAAkB,UAGzB,eAAe3P,GACpB,OAAOL,KAAKgQ,kBAAkB,iBAAkB3P,GAG3C,aAAa4I,GAClB,OAAOjJ,KAAKgQ,kBAAkB,eAAgB/G,GAGzC,WAAWA,GAChB,OAAOjJ,KAAKgQ,kBAAkB,aAAc/G,GAGvC,cAAc2M,GACnB,MAAM3J,EAA0B,CAAC5K,KAAM,gBAAiBlB,QAASyV,GACjE5V,KAAKW,YAAYsL,GACjBjM,KAAK+Q,cAAc9E,GAGd,UACL,OAAOjM,KAAKoT,sBAAsB,WAG7B,WACL,OAAOpT,KAAKoT,sBAAsB,YAG7B,wBACLpT,KAAKW,YAAY,CAACU,KAAM,WAGnB,iBACLrB,KAAKW,YAAY,CAACU,KAAM,qBAK5B,IAAe0O,gBAAkBA,EAClB,O,gCEhkBf,oSASO,MAAM8F,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACxHC,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE1EC,EAAU,MAGVC,EAAiBpM,IAC5B,MAAMqM,EAAI,IAAI7T,KAAKA,KAAK8T,IAAItM,EAAKuM,cAAevM,EAAKwM,WAAYxM,EAAKyM,YAChEC,EAASL,EAAEM,aAAe,EAChCN,EAAEO,WAAWP,EAAEQ,aAAe,EAAIH,GAClC,MAAMI,EAAY,IAAItU,KAAKA,KAAK8T,IAAID,EAAEU,iBAAkB,EAAG,IAC3D,OAAOC,KAAKC,OAAQZ,EAAEa,UAAYJ,EAAUI,WAAaf,EAAW,GAAK,IAG9DgB,EAA8B5U,IACzC,MAAMyH,EAAO,IAAIxH,KACXC,EAAMuH,EAAKkN,UAAY,IAAO,EAC9BxB,EAAYnT,EAAK2U,UAAY,IAAO,EAE1C,IAAIE,EAWJ,OATEA,EADE3U,EAAMiT,EAAaS,GAAWnM,EAAKyM,YAAclU,EAAKkU,WAC7C,IAAMlU,EAAK8U,YAAYpP,OAAO,GAAK,KAAO,IAAM1F,EAAK+U,cAAcrP,OAAO,GAC7E+B,EAAKuM,gBAAkBhU,EAAKgU,cAC1BhU,EAAKkU,UAAY,KAAO,KAAOlU,EAAKiU,WAAa,IAAIvO,OAAO,GAAK,KAAO,GAAK1F,EAAKgU,eAAetO,OAAO,GACzGxF,EAAMiT,EAAwB,EAAVS,GAAgBC,EAAcpM,KAAUoM,EAAc7T,GACzE2T,EAAK3T,EAAKgV,UAAUtP,MAAM,EAAG,GAE7BgO,EAAO1T,EAAKiU,YAAYvO,MAAM,EAAG,GAAK,KAAO,IAAM1F,EAAKkU,WAAWxO,OAAO,GAG/EmP,GAGF,SAASI,EAA8BjV,GAC5C,MAAMkV,EAAQ,IAAIjV,KACZC,EAAMgV,EAAMP,UAAY,IAAO,EAC/BxB,EAAYnT,EAAK2U,UAAY,IAAO,EAEpC7N,EAAsC,GAa5C,OAZI5G,EAAMiT,EAAaS,GAAWsB,EAAMhB,YAAclU,EAAKkU,UACzDpN,EAAQqO,KAAOrO,EAAQsO,OAAS,UACxBF,EAAMlB,gBAAkBhU,EAAKgU,eACrClN,EAAQuO,KAAOvO,EAAQwO,IAAM,UAC7BxO,EAAQyO,MAAQ,WACPrV,EAAMiT,EAAwB,EAAVS,GAAgBC,EAAcqB,KAAWrB,EAAc7T,GACpF8G,EAAQ0O,QAAU,SAElB1O,EAAQyO,MAAQ,QAChBzO,EAAQwO,IAAM,WAGT,IAAI,UAAKhO,gBAAgB,CAC9BG,KAAMzH,EACN8G,YACCpC,QAGE,SAAS+Q,EAAWhO,GACzB,OAAO,IAAI,UAAKH,gBAAgB,CAC9BG,OACAX,QAAS,CACPqO,KAAM,UACNC,OAAQ,aAET1Q,QAGL,MAAmB,IAAeuQ,8BAAgCA,GAE3D,MAAMS,EAAc,CAACjO,EAAYX,EAKnC,MACH,MAAM6O,EAAS7O,EAAQ8O,cAAgB,IAAM,IACvC5V,GAAQ,IAAMyH,EAAKqN,YAAYpP,OAAO,GAAK,KAAO,IAAM+B,EAAKsN,cAAcrP,OAAO,IAAMoB,EAAQ+O,UAAY,GAAK,KAAO,IAAMpO,EAAKqO,cAAcpQ,OAAO,IAE9J,OAAQoB,EAAQiP,aAAe,IAAMtO,EAAKyM,WAAWxO,OAAO,GAAK+B,EAAKyM,WACpEyB,GAAU7O,EAAQ8O,eAAiB,KAAOnO,EAAKwM,WAAa,IAAIvO,OAAO,GAAKgO,EAAOjM,EAAKwM,aACxF0B,EAASlO,EAAKuM,eACblN,EAAQkP,OAAS,GAAK,KAAOhW,IAG3B,SAASiW,EAAMC,GACpB,MAAMC,EAAIlW,KAAKC,MACf,OAAOgW,EAAUC,EAAI,IAAO,EAAIA,EAIlC,MACMC,EAAc,IAAIC,OAAO,gBACzBC,EAAwB,IAAID,OAAO,yBAA0B,KAC7DE,EAA2B,IAAIF,OAAO,yBAA0B,KAChEG,EAAY,IAAIH,OAAO,0CAA2C,KAClEI,EAAW,IAAIJ,OAAO,mEAAoE,KAC1FK,EAAwB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAMpE,SAASC,EAAaC,EAAeC,GAC1C,MAAMjE,EAAIgE,EAAME,OAAOpO,cAEvB,GAAGkK,EAAE/M,OAAS,EACZ,OAGF,GAA0B,IAAvB,QAAQ1H,QAAQyU,GAAU,CAC3B,MAAMnL,EAAO,IAAIxH,KACXoV,EAAO5N,EAAKuM,cACZuB,EAAQ9N,EAAKwM,WACbqB,EAAM7N,EAAKyM,UACjBzM,EAAKsP,YAAY1B,EAAME,EAAOD,GAC9B7N,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAUxP,EAAKkN,UACrBlN,EAAKsP,YAAY1B,EAAME,EAAOD,EAAM,GACpC7N,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAUzP,EAAKkN,UAAY,EAMjC,YALAkC,EAAM3T,KAAK,CACTiU,MAAO,QACPF,UACAC,YAKJ,GAA8B,IAA3B,YAAY/Y,QAAQyU,GAAU,CAC/B,MAAMnL,EAAO,IAAIxH,KACXoV,EAAO5N,EAAKuM,cACZuB,EAAQ9N,EAAKwM,WACbqB,EAAM7N,EAAKyM,UACjBzM,EAAKsP,YAAY1B,EAAME,EAAOD,GAC9B7N,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAUxP,EAAKkN,UAAY,MACjClN,EAAKsP,YAAY1B,EAAME,EAAOD,EAAM,GACpC7N,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAUzP,EAAKkN,UAAY,SAMjC,YALAkC,EAAM3T,KAAK,CACTiU,MAAO,YACPF,UACAC,YAKJ,MAAME,EAySR,SAAsBxE,GACpB,MAAMyE,EAAI,IAAIpX,KACd,GAAG2S,EAAE/M,QAAU,EACb,OAAQ,EAGV,IAAI,IAAI7C,EAAI,EAAGA,EAAI,EAAGA,IAGpB,GAFAqU,EAAEC,QAAQD,EAAEnD,UAAY,GAEoC,IAAzDqD,EAAeF,EAAE1C,WAAWjM,cAAcvK,QAAQyU,GACnD,OAAOyE,EAAErC,SAGb,OAAQ,EAtTUwC,CAAa5E,GAC/B,GAAGwE,GAAa,EAAG,CACjB,MAAM3P,EAAO,IAAIxH,KACXC,EAAMuH,EAAKkN,UAEX8C,EAAWL,EADE3P,EAAKuN,SAExBvN,EAAK6P,QAAQ7P,EAAKyM,UAAYuD,GAC3BhQ,EAAKkN,UAAYzU,GAClBuH,EAAKiQ,QAAQjQ,EAAKkN,UAAY,QAEhC,MAAMU,EAAO5N,EAAKuM,cACZuB,EAAQ9N,EAAKwM,WACbqB,EAAM7N,EAAKyM,UACjBzM,EAAKsP,YAAY1B,EAAME,EAAOD,GAC9B7N,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAUxP,EAAKkN,UACrBlN,EAAKsP,YAAY1B,EAAME,EAAOD,EAAM,GACpC7N,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAUzP,EAAKkN,UAAY,EAMjC,YALAkC,EAAM3T,KAAK,CACTiU,MAAOI,EAAeN,GACtBA,UACAC,YAKJ,IAAIS,EACJ,GAAqC,QAAjCA,EAAUnB,EAAUoB,KAAKhF,IAyB7B,GAAoC,QAAhC+E,EAAUlB,EAASmB,KAAKhF,IAqC5B,GAAuC,QAAnC+E,EAAUvB,EAAYwB,KAAKhF,IAA/B,CAyCA,GAAiD,QAA7C+E,EAAUrB,EAAsBsB,KAAKhF,IAAc,CACrD,MAAMiF,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbpC,EAAQtB,EAAS4D,GACvB,GAAGtC,GAAS,EAAG,CACb,MAAMwC,GAAKD,EACX,GAAGC,EAAI,GAAKA,GAAK,GAAI,CAGnB,YADAC,EAAkBnB,EADNkB,EAAI,EACcxC,GAEzB,GAAGwC,GA5MA,KA4Mc,CAGtB,YADAE,EAAmBpB,EAAOtB,EADLwC,KAO3B,GAAoD,QAAhDJ,EAAUpB,EAAyBqB,KAAKhF,IAAc,CACxD,MAAMiF,EAAKF,EAAQ,GAEbpC,EAAQtB,EADH0D,EAAQ,IAEnB,GAAGpC,GAAS,EAAG,CACb,MAAMwC,GAAKF,EACX,GAAGE,EAAI,GAAKA,GAAK,GAAI,CAGnB,YADAC,EAAkBnB,EADNkB,EAAI,EACcxC,GAEzB,GAAIwC,GA9ND,KA8Ne,CAEvBE,EAAmBpB,EAAOtB,EADLwC,UAtE3B,CACE,IAAIG,GAAgBtF,EACpB,MAAMuF,GAAc,IAAIlY,MAAO+T,cAC/B,GAAGkE,EA5JS,KA4Je,CACzBA,EA7JU,KA8JV,IAAI,IAAIlV,EAAImV,EAAanV,GAAKkV,EAAclV,IAAK,CAC/C,MAAMyE,EAAO,IAAIxH,KACjBwH,EAAKsP,YAAY/T,EAAG,EAAG,GACvByE,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAUxP,EAAKkN,UACrBlN,EAAKsP,YAAY/T,EAAI,EAAG,EAAG,GAC3ByE,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAUzP,EAAKkN,UAAY,EACjCkC,EAAM3T,KAAK,CACTiU,MAAO,GAAKnU,EACZiU,UACAC,kBAGC,GAAGgB,GAAgBC,EAAa,CACrC,MAAM1Q,EAAO,IAAIxH,KACjBwH,EAAKsP,YAAYmB,EAAc,EAAG,GAClCzQ,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAUxP,EAAKkN,UACrBlN,EAAKsP,YAAYmB,EAAe,EAAG,EAAG,GACtCzQ,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAUzP,EAAKkN,UAAY,EACjCkC,EAAM3T,KAAK,CACTiU,MAAO,GAAKe,EACZjB,UACAC,iBAvEN,CACE,MAAMW,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbS,EAAKT,EAAQ,GACnB,IAAIA,EAAQ,KAAOA,EAAQ,GACzB,OAGF,MAAMrC,EAAM+C,SAASR,GACftC,EAAQ8C,SAASP,GAAM,EAC7B,IAAIzC,EAAOgD,SAASD,GACjB/C,GAAQ,IAAMA,GAAQ,KACvBA,GAAQ,KAGV,MAAM8C,GAAc,IAAIlY,MAAO+T,cAC/B,GAAGsE,EAAkBhD,EAAM,EAAGC,IAAUF,GApI5B,MAoI+CA,GAAQ8C,EAAa,CAC9E,MAAM1Q,EAAO,IAAIxH,KACjBwH,EAAKsP,YAAY1B,EAAME,EAAOD,GAC9B7N,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAUxP,EAAKkN,UACrBlN,EAAKsP,YAAY1B,EAAME,EAAOD,EAAM,GACpC7N,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAME,EAAUzP,EAAKkN,UAAY,EAMjC,YALAkC,EAAM3T,KAAK,CACTiU,MAAOoB,EAAiBtB,GACxBA,UACAC,iBAtDN,CACE,MAAMW,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbI,EAAIM,SAASR,GACbW,EAAKH,SAASP,GACpB,GAAGC,EAAI,GAAKA,GAAK,GAAI,CACnB,GAAGS,GAjGO,MAiGUT,GAAK,GAAI,CAI3B,YADAE,EAAmBpB,EADLkB,EAAI,EADGS,GAIhB,GAAIA,GAAM,GAAI,CAGnBR,EAAkBnB,EAFNkB,EAAI,EACFS,EAAK,SAGhB,GAAIT,GA3GC,MA2GeS,GAAM,GAAI,CAGnCP,EAAmBpB,EADL2B,EAAK,EADET,KA0H3B,SAASE,EAAmBpB,EAAmBtB,EAAe2C,GAC5D,MAAMC,GAAc,IAAIlY,MAAO+T,cACzBkB,EAAQjV,KAAKC,MACnB,GAAGgY,GAzOW,MAyOgBA,GAAgBC,EAAa,CACzD,MAAM1Q,EAAO,IAAIxH,KACjBwH,EAAKsP,YAAYmB,EAAc3C,EAAO,GACtC9N,EAAKuP,SAAS,EAAG,EAAG,GACpB,MAAMC,EAAUxP,EAAKkN,UACrB,GAAGsC,EAAU/B,EACX,OAEFzN,EAAKgR,SAAShR,EAAKwM,WAAa,GAChC,MAAMiD,EAAUzP,EAAKkN,UAAY,EAEjCkC,EAAM3T,KAAK,CACTiU,MAAOuB,EAAmBzB,GAC1BA,UACAC,aAKN,SAASc,EAAkBnB,EAAmBvB,EAAaC,GACzD,GAAG+C,EAAkBhD,EAAKC,GAAQ,CAChC,MAAM4C,GAAc,IAAIlY,MAAO+T,cACzBkB,EAAQjV,KAAKC,MAEnB,IAAI,IAAI8C,EAAImV,EAAanV,GAjQb,KAiQ2BA,IAAK,CAC1C,GAAa,IAAVuS,GAAuB,KAARD,MA8DJD,EA9D8BrS,GA+DhC,GAAM,GAAOqS,EAAO,KAAQ,IAAQA,EAAO,KAAQ,GA9D7D,SAGF,MAAM5N,EAAO,IAAIxH,KACjBwH,EAAKsP,YAAY/T,EAAGuS,EAAOD,EAAM,GACjC7N,EAAKuP,SAAS,EAAG,EAAG,GAEpB,MAAMC,EAAUxP,EAAKkN,UACrB,GAAGsC,EAAU/B,EACX,SAGFzN,EAAKsP,YAAY/T,EAAGuS,EAAOD,EAAM,GACjC7N,EAAKuP,SAAS,EAAG,EAAG,GACpB,MAAME,EAAUzP,EAAKkN,UAAY,EAC9B3R,IAAMmV,EACPtB,EAAM3T,KAAK,CACTiU,MAAOwB,EAAkB1B,GACzBA,UACAC,YAGFL,EAAM3T,KAAK,CACTiU,MAAOoB,EAAiBtB,GACxBA,UACAC,aAoCV,IAAoB7B,EA7BpB,SAASqD,EAAmBvF,GAC1B,MAAM1L,EAAO,IAAIxH,KAAKkT,GACtB,OAAOO,EAAOjM,EAAKwM,YAAYvO,MAAM,EAAG,GAAK,IAAM+B,EAAKuM,cAG1D,SAAS2E,EAAkBxF,GACzB,MAAM1L,EAAO,IAAIxH,KAAKkT,GACtB,OAAOO,EAAOjM,EAAKwM,YAAYvO,MAAM,EAAG,GAAK,IAAM+B,EAAKyM,UAG1D,SAASqE,EAAiBpF,GACxB,MAAM1L,EAAO,IAAIxH,KAAKkT,GACtB,OAAQ,IAAM1L,EAAKyM,WAAWxO,OAAO,GAAK,KAAO,KAAO+B,EAAKwM,WAAa,IAAIvO,OAAO,GAAK,IAAM+B,EAAKuM,cAGvG,SAASuD,EAAepE,GACtB,MAAM1L,EAAO,IAAIxH,KAAKkT,GACtB,OAAOQ,EAAKlM,EAAKuN,UAGnB,SAASsD,EAAkBhD,EAAaC,GACtC,OAAGA,GAAS,GAAKA,EAAQ,IACpBD,GAAO,GAAKA,EAAMoB,EAAsBnB,GAW/C,SAAStB,EAASrB,GAwBhBA,EAAIA,EAAElK,cACN,IAAI,IAAI1F,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE1B,GAAwB,IADV0Q,EAAO1Q,GAAG0F,cACfvK,QAAQyU,GACf,OAAO5P,EAGX,OAAQ,EAmBV,IAAe2T,aAAeA,G,gCCndvB,SAASiC,EAAcC,GAC5B,OAAOpE,KAAKqE,MAAMrE,KAAKsE,SAAWF,GAG7B,SAASG,IACd,MAAO,GAAKJ,EAAc,YAAcA,EAAc,UAXxD,qE,gCCUO,SAASK,EAAajT,EAAaH,EAAgBqT,EAAYrT,EAAS,IAM7E,OALAG,EAAMA,EAAI8Q,QACHjR,OAASqT,IACdlT,EAAMA,EAAIN,MAAM,EAAGG,GAAoC,OAGlDG,EAIF,SAASmT,EAAanT,GAC3B,OAAOA,EACJZ,QAAQ,sBAAuB,QAC/BA,QAAQ,KAAM,SAGZ,SAASgU,EAAehW,GAC7B,OAAOA,EAAMgC,QAAQ,KAAM,SAASA,QAAQ,kCAAoChC,GAGvE,MAAyB,MAFvBA,EAAMiW,WAAW,GAEJ,QADZjW,EAAMiW,WAAW,GACqB,OAAU,OAAW,KACpEjU,QAAQ,iBAAmBhC,GACrB,KAAOA,EAAMiW,WAAW,GAAK,KACnCjU,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAGlC,SAASkU,EAAoBtT,EAAauT,GAC/C,GAAGvT,EAAIH,OAAS0T,EAAW,MAAO,CAACvT,GACnC,IAAIH,EAAS,EAAG2T,EAAsB,EAAGC,EAAa,EACtD,MACMvU,EAAgB,GAEhBwU,EAAOC,IACX,IAAIC,EAAO5T,EAAIN,MAAM8T,EAAqBG,GAC1C,MAAME,EAAcJ,IACpB,GAAGG,EAAK/T,OAAS0T,EAAW,CAETD,EADEM,EAAKlU,MAAM6T,GACqBA,GAC1C9V,QAAQmW,IACf1U,EAAIuU,KAAgBG,IAGtBA,EAAOA,EAAKlU,MAAM,EAAG6T,GAGvBC,EAAsBG,EACtB9T,EAAS,EACTX,EAAI2U,IAAgB3U,EAAI2U,IAAgB,IAAMD,GAGhD,IAAIzU,EAAY,EAChB,OAAG,CACD,IAAI2U,EAAQ9T,EAAI7H,QAvBA,IAuBmBgH,GACnC,IAAc,IAAX2U,EAAc,CACZ3U,IAAea,EAAIH,OAAS,GAC7B6T,IAGF,MAGFI,GAhCgB,IAgCGjU,OAEnB,MAAMkU,EAAaD,EAAQ3U,EACvBU,EAASkU,EAAcR,GACzBG,EAAI7T,GAGNV,EAAY2U,EACZjU,GAAUkU,EAGZ,OAAO7U,EAcF,SAAS8U,EAAqBC,GACnC,MAAMjU,EAAMiU,EAAS7U,QAAQ,QAAS,IACtC,OAAQY,EAAI,GAAG0C,cAAgB1C,EAAIN,MAAM,GAGpC,SAASwU,EAAqB/W,GAGnC,OADAA,EAAM,SADNA,EAAMA,EAAI,GAAGgX,cAAgBhX,EAAIuC,MAAM,IAKlC,SAAS0U,EAAsBxW,GACpC,OAAOA,EAAOyW,OAAO,GAAGF,cAAgBvW,EAAO8B,MAAM,GA5GvD,+O,gCCWO,SAAS4U,EAAWjc,GACzBA,EAAQA,GAAS,GACjB,IAAI2J,EAAgB,GACpB,IAAI,IAAIhF,EAAI,EAAGA,EAAI3E,EAAMwH,SAAU7C,EACjCgF,EAAI9E,MAAM7E,EAAM2E,GAAK,GAAK,IAAM,KAAO3E,EAAM2E,IAAM,GAAGwL,SAAS,KAEjE,OAAOxG,EAAIH,KAAK,IAGX,SAAS0S,EAAaC,GAC3B,MAAMC,EAAMD,EAAU3U,OACtB,IAAIkK,EAAQ,EACR1R,EAAkB,GAEnBoc,EAAM,IACPpc,EAAM6E,KAAKmV,SAASmC,EAAUH,OAAO,GAAI,OACvCtK,GAGJ,IAAI,IAAI/M,EAAI+M,EAAO/M,EAAIyX,EAAKzX,GAAK,EAC/B3E,EAAM6E,KAAKmV,SAASmC,EAAUE,OAAO1X,EAAG,GAAI,KAG9C,OAAO3E,EAGF,SAASsc,EAActc,GAC5B,IAAIuc,EACA9K,EAAS,GAEb,IAAI,IAAI+K,EAAOxc,EAAMwH,OAAQiV,EAAU,EAAGC,EAAO,EAAGA,EAAOF,IAAQE,EACjEH,EAAOG,EAAO,EACdD,GAAWzc,EAAM0c,KAAU,KAAOH,EAAO,IAC7B,IAATA,GAAcC,EAAOE,GAAS,IAC/BjL,GAAUkL,OAAOC,aACfC,EAAcJ,IAAY,GAAK,IAC/BI,EAAcJ,IAAY,GAAK,IAC/BI,EAAcJ,IAAY,EAAI,IAC9BI,EAAwB,GAAVJ,IAEhBA,EAAU,GAId,OAAOhL,EAAO1K,QAAQ,aAAc,KAG/B,SAAS8V,EAAcC,GAC5B,OAAOA,EAAS,GACZA,EAAS,GACTA,EAAS,GACPA,EAAS,GACTA,EAAS,GACPA,EAAS,EACE,KAAXA,EACE,GACW,KAAXA,EACE,GACA,GAGP,SAASC,EAASC,EAA+BC,GACtD,MAAMb,EAAMY,EAAOxV,OACnB,GAAG4U,IAAQa,EAAOzV,OAChB,OAAO,EAGT,IAAI,IAAI7C,EAAI,EAAGA,EAAIyX,IAAOzX,EACxB,GAAGqY,EAAOrY,KAAOsY,EAAOtY,GACtB,OAAO,EAIX,OAAO,EAkBF,SAASuY,EAAqBld,GAEnC,OAAGA,aAAiBmd,YACXnd,OAEWK,IAAjBL,EAAMyP,QACPzP,EAAMyP,OAAOd,aAAe3O,EAAMwH,OAASxH,EAAMod,kBAC1Cpd,EAAMyP,OAVR,IAAK4N,WAYcrd,GAZCyP,OA+CtB,SAAS6N,KAAiB3W,GAC/B,IAAIa,EAAS,EACbb,EAAKvB,QAAQkC,GAAKE,GAAUF,EAAEqH,YAAcrH,EAAEE,QAE9C,MAAM+V,EAAM,IAAIF,WAAW7V,GAE3B,IAAIgW,EAAa,EAMjB,OALA7W,EAAKvB,QAAQkC,IACXiW,EAAInb,IAAIkF,aAAa6V,YAAc,IAAIE,WAAW/V,GAAKA,EAAGkW,GAC1DA,GAAclW,EAAEqH,YAAcrH,EAAEE,SAG3B+V,EA9JT","file":"1.58a2d8e322799bc5c4b2.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport class AppRuntimeManager {\r\n  public reload() {\r\n    try {\r\n      location.reload();\r\n    } catch(e) {};\r\n\r\n    // if(window.chrome && chrome.runtime && chrome.runtime.reload) {\r\n    //   chrome.runtime.reload();\r\n    // }\r\n  }\r\n\r\n  public close() {\r\n    try {\r\n      window.close();\r\n    } catch(e) {}\r\n  }\r\n\r\n  /**\r\n   * Better to call from event\r\n   */\r\n  public focus() {\r\n    // // @ts-ignore\r\n    // if(window.navigator.mozApps && document.hidden) {\r\n    //   // Get app instance and launch it to bring app to foreground\r\n    //   // @ts-ignore\r\n    //   window.navigator.mozApps.getSelf().onsuccess = function() {\r\n    //     this.result.launch();\r\n    //   };\r\n    // } else {\r\n    //   // @ts-ignore\r\n    //   if(window.chrome && chrome.app && chrome.app.window) {\r\n    //     // @ts-ignore\r\n    //     chrome.app.window.current().focus();\r\n    //   }\r\n\r\n      window.focus();\r\n    // }\r\n  }\r\n}\r\n\r\nconst appRuntimeManager = new AppRuntimeManager();\r\nexport default appRuntimeManager;\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"webp.worker.eafb4e17dc09d5858dc8.bundle.worker.js\");\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport WebpWorker from 'worker-loader!./webp.worker';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport { CancellablePromise, deferredPromise } from '../../helpers/cancellablePromise';\r\nimport apiManagerProxy from '../mtproto/mtprotoworker';\r\n\r\nexport type WebpConvertTask = {\r\n  type: 'convertWebp', \r\n  payload: {\r\n    fileName: string, \r\n    bytes: Uint8Array\r\n  }\r\n};\r\n\r\nexport class WebpWorkerController {\r\n  private worker: Worker;\r\n  private convertPromises: {[fileName: string]: CancellablePromise<Uint8Array>} = {};\r\n  private isWebpSupportedCache: boolean;\r\n  \r\n  init() {\r\n    this.worker = new WebpWorker();\r\n    this.worker.addEventListener('message', (e) => {\r\n      const payload = (e.data as WebpConvertTask).payload;\r\n\r\n      if(payload.fileName.indexOf('main-') === 0) {\r\n        const promise = this.convertPromises[payload.fileName];\r\n        if(promise) {\r\n          payload.bytes ? promise.resolve(payload.bytes) : promise.reject();\r\n          delete this.convertPromises[payload.fileName];\r\n        }\r\n      } else {\r\n        apiManagerProxy.postMessage(e.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  postMessage(data: WebpConvertTask) {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    this.worker.postMessage(data);\r\n  }\r\n\r\n  isWebpSupported() {\r\n    if(this.isWebpSupportedCache === undefined) {\r\n      this.isWebpSupportedCache = document.createElement('canvas').toDataURL('image/webp').startsWith('data:image/webp');\r\n    }\r\n\r\n    return this.isWebpSupportedCache;\r\n  }\r\n\r\n  convert(fileName: string, bytes: Uint8Array) {\r\n    fileName = 'main-' + fileName;\r\n\r\n    if(this.convertPromises.hasOwnProperty(fileName)) {\r\n      return this.convertPromises[fileName];\r\n    }\r\n    \r\n    const convertPromise = deferredPromise<Uint8Array>();\r\n\r\n    this.postMessage({type: 'convertWebp', payload: {fileName, bytes}});\r\n\r\n    return this.convertPromises[fileName] = convertPromise;\r\n  }\r\n}\r\n\r\nconst webpWorkerController = new WebpWorkerController();\r\nMOUNT_CLASS_TO.webpWorkerController = webpWorkerController;\r\nexport default webpWorkerController;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { nextRandomInt } from \"../../helpers/random\";\r\nimport { logger } from \"../logger\";\r\nimport rootScope from \"../rootScope\";\r\nimport sessionStorage from \"../sessionStorage\";\r\nimport apiManager from \"./mtprotoworker\";\r\n\r\nexport type AppInstance = {\r\n  id: number,\r\n  idle: boolean,\r\n  time: number\r\n};\r\n\r\nconst CHECK_INSTANCE_INTERVAL = 5000; \r\nconst DEACTIVATE_TIMEOUT = 30000;\r\nconst MULTIPLE_TABS_THRESHOLD = 20000;\r\n\r\nexport class SingleInstance {\r\n  private instanceID: number;\r\n  private started: boolean;\r\n  private masterInstance: boolean;\r\n  private deactivateTimeout: number;\r\n  private deactivated: boolean;\r\n  private initial: boolean;\r\n  private log = logger('INSTANCE');\r\n\r\n  public start() {\r\n    if(!this.started/*  && !Config.Navigator.mobile && !Config.Modes.packed */) {\r\n      this.started = true;\r\n\r\n      this.reset();\r\n      //IdleManager.start();\r\n\r\n      rootScope.addEventListener('idle', this.checkInstance);\r\n      setInterval(this.checkInstance, CHECK_INSTANCE_INTERVAL);\r\n      this.checkInstance();\r\n\r\n      try {\r\n        document.documentElement.addEventListener('beforeunload', this.clearInstance);\r\n      } catch(e) {}\r\n    }\r\n  }\r\n\r\n  public reset() {\r\n    this.instanceID = nextRandomInt(0xFFFFFFFF);\r\n    this.masterInstance = false;\r\n    if(this.deactivateTimeout) clearTimeout(this.deactivateTimeout);\r\n    this.deactivateTimeout = 0;\r\n    this.deactivated = false;\r\n    this.initial = false;\r\n  }\r\n\r\n  public clearInstance = () => {\r\n    if(this.masterInstance && !this.deactivated) {\r\n      this.log.warn('clear master instance');\r\n      sessionStorage.delete('xt_instance');\r\n    }\r\n  };\r\n\r\n  public activateInstance() {\r\n    if(this.deactivated) {\r\n      this.reset();\r\n      this.checkInstance(false);\r\n      rootScope.dispatchEvent('instance_activated');\r\n    }\r\n  }\r\n\r\n  public deactivateInstance = () => {\r\n    if(this.masterInstance || this.deactivated) {\r\n      return false;\r\n    }\r\n\r\n    this.log('deactivate');\r\n    this.deactivateTimeout = 0;\r\n    this.deactivated = true;\r\n    this.clearInstance();\r\n    //$modalStack.dismissAll();\r\n\r\n    //document.title = _('inactive_tab_title_raw')\r\n\r\n    rootScope.idle.deactivated = true;\r\n    rootScope.dispatchEvent('instance_deactivated');\r\n  };\r\n\r\n  public checkInstance = (idle = rootScope.idle && rootScope.idle.isIDLE) => {\r\n    if(this.deactivated) {\r\n      return false;\r\n    }\r\n    \r\n    const time = Date.now();\r\n    const newInstance: AppInstance = {\r\n      id: this.instanceID, \r\n      idle, \r\n      time\r\n    };\r\n\r\n    sessionStorage.get('xt_instance', false).then((curInstance: AppInstance) => {\r\n      // this.log('check instance', newInstance, curInstance)\r\n      if(!idle ||\r\n          !curInstance ||\r\n          curInstance.id === this.instanceID ||\r\n          curInstance.time < (time - MULTIPLE_TABS_THRESHOLD)) {\r\n        sessionStorage.set({xt_instance: newInstance});\r\n\r\n        if(!this.masterInstance) {\r\n          apiManager.startAll();\r\n          if(!this.initial) {\r\n            this.initial = true;\r\n          } else {\r\n            this.log.warn('now master instance', newInstance);\r\n          }\r\n\r\n          this.masterInstance = true;\r\n        }\r\n\r\n        if(this.deactivateTimeout) {\r\n          clearTimeout(this.deactivateTimeout);\r\n          this.deactivateTimeout = 0;\r\n        }\r\n      } else {\r\n        if(this.masterInstance) {\r\n          apiManager.stopAll();\r\n          this.log.warn('now idle instance', newInstance);\r\n          if(!this.deactivateTimeout) {\r\n            this.deactivateTimeout = window.setTimeout(this.deactivateInstance, DEACTIVATE_TIMEOUT);\r\n          }\r\n\r\n          this.masterInstance = false;\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst singleInstance = new SingleInstance();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.singleInstance = singleInstance);\r\nexport default singleInstance;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG, { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { safeAssign } from \"../helpers/object\";\r\nimport { capitalizeFirstLetter } from \"../helpers/string\";\r\nimport type lang from \"../lang\";\r\nimport type langSign from \"../langSign\";\r\nimport { LangPackDifference, LangPackString } from \"../layer\";\r\nimport apiManager from \"./mtproto/mtprotoworker\";\r\nimport stateStorage from \"./stateStorage\";\r\nimport App from \"../config/app\";\r\nimport rootScope from \"./rootScope\";\r\n\r\nexport const langPack: {[actionType: string]: LangPackKey} = {\r\n  \"messageActionChatCreate\": \"ActionCreateGroup\",\r\n\t\"messageActionChatEditTitle\": \"ActionChangedTitle\",\r\n\t\"messageActionChatEditPhoto\": \"ActionChangedPhoto\",\r\n\t\"messageActionChatEditVideo\": \"ActionChangedVideo\",\r\n\t\"messageActionChatDeletePhoto\": \"ActionRemovedPhoto\",\r\n\t\"messageActionChatReturn\": \"ActionAddUserSelf\",\r\n\t\"messageActionChatReturnYou\": \"ActionAddUserSelfYou\",\r\n\t\"messageActionChatJoined\": \"ActionAddUserSelfMega\",\r\n\t\"messageActionChatJoinedYou\": \"ChannelMegaJoined\",\r\n  \"messageActionChatAddUser\": \"ActionAddUser\",\r\n  \"messageActionChatAddUsers\": \"ActionAddUser\",\r\n\t\"messageActionChatLeave\": \"ActionLeftUser\",\r\n\t\"messageActionChatLeaveYou\": \"YouLeft\",\r\n\t\"messageActionChatDeleteUser\": \"ActionKickUser\",\r\n\t\"messageActionChatJoinedByLink\": \"ActionInviteUser\",\r\n  \"messageActionPinMessage\": \"ActionPinnedNoText\",\r\n  \"messageActionContactSignUp\": \"Chat.Service.PeerJoinedTelegram\",\r\n\t\"messageActionChannelCreate\": \"ActionCreateChannel\",\r\n\t\"messageActionChannelEditTitle\": \"Chat.Service.Channel.UpdatedTitle\",\r\n\t\"messageActionChannelEditPhoto\": \"Chat.Service.Channel.UpdatedPhoto\",\r\n\t\"messageActionChannelEditVideo\": \"Chat.Service.Channel.UpdatedVideo\",\r\n  \"messageActionChannelDeletePhoto\": \"Chat.Service.Channel.RemovedPhoto\",\r\n  \"messageActionHistoryClear\": \"HistoryCleared\",\r\n\r\n  \"messageActionChannelMigrateFrom\": \"ActionMigrateFromGroup\",\r\n\r\n  \"messageActionPhoneCall.in_ok\": \"ChatList.Service.Call.incoming\",\r\n\t\"messageActionPhoneCall.out_ok\": \"ChatList.Service.Call.outgoing\",\r\n\t\"messageActionPhoneCall.in_missed\": \"ChatList.Service.Call.Missed\",\r\n\t\"messageActionPhoneCall.out_missed\": \"ChatList.Service.Call.Cancelled\",\r\n\r\n\t\"messageActionGroupCall.started\": \"ActionGroupCallJustStarted\",\r\n\t\"messageActionGroupCall.started_by\": \"ActionGroupCallStarted\",\r\n\t\"messageActionGroupCall.started_byYou\": \"ActionGroupCallStartedByYou\",\r\n\t\"messageActionGroupCall.ended_by\": \"Chat.Service.VoiceChatFinished\",\r\n\t\"messageActionGroupCall.ended_byYou\": \"Chat.Service.VoiceChatFinishedYou\",\r\n\r\n\t\"messageActionBotAllowed\": \"Chat.Service.BotPermissionAllowed\"\r\n};\r\n\r\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\r\n\r\nnamespace I18n {\r\n\texport const strings: Map<LangPackKey, LangPackString> = new Map();\r\n\tlet pluralRules: Intl.PluralRules;\r\n\r\n\tlet cacheLangPackPromise: Promise<LangPackDifference>;\r\n\texport let lastRequestedLangCode: string;\r\n\texport let requestedServerLanguage = false;\r\n\texport function getCacheLangPack(): Promise<LangPackDifference> {\r\n\t\tif(cacheLangPackPromise) return cacheLangPackPromise;\r\n\t\treturn cacheLangPackPromise = Promise.all([\r\n\t\t\tstateStorage.get('langPack') as Promise<LangPackDifference>,\r\n\t\t\tpolyfillPromise\r\n\t\t]).then(([langPack]) => {\r\n\t\t\tif(!langPack/*  || true */) {\r\n\t\t\t\treturn loadLocalLangPack();\r\n\t\t\t} else if(DEBUG && false) {\r\n\t\t\t\treturn getLangPack(langPack.lang_code);\r\n\t\t\t}/*  else if(langPack.appVersion !== App.langPackVersion) {\r\n\t\t\t\treturn getLangPack(langPack.lang_code);\r\n\t\t\t} */\r\n\t\t\t\r\n\t\t\tif(!lastRequestedLangCode) {\r\n\t\t\t\tlastRequestedLangCode = langPack.lang_code;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tapplyLangPack(langPack);\r\n\t\t\treturn langPack;\r\n\t\t}).finally(() => {\r\n\t\t\tcacheLangPackPromise = undefined;\r\n\t\t});\r\n\t}\r\n\r\n\texport function loadLocalLangPack() {\r\n\t\tconst defaultCode = App.langPackCode;\r\n\t\tlastRequestedLangCode = defaultCode;\r\n\t\treturn Promise.all([\r\n\t\t\timport('../lang'),\r\n\t\t\timport('../langSign')\r\n\t\t]).then(([lang, langSign]) => {\r\n\t\t\tconst strings: LangPackString[] = [];\r\n\t\t\tformatLocalStrings(lang.default, strings);\r\n\t\t\tformatLocalStrings(langSign.default, strings);\r\n\r\n\t\t\tconst langPack: LangPackDifference = {\r\n\t\t\t\t_: 'langPackDifference',\r\n\t\t\t\tfrom_version: 0,\r\n\t\t\t\tlang_code: defaultCode,\r\n\t\t\t\tstrings,\r\n\t\t\t\tversion: 0,\r\n\t\t\t\tlocal: true\r\n\t\t\t};\r\n\t\t\treturn saveLangPack(langPack);\r\n\t\t});\r\n\t}\r\n\r\n\texport function loadLangPack(langCode: string) {\r\n\t\trequestedServerLanguage = true;\r\n\t\treturn Promise.all([\r\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\r\n\t\t\t\tlang_code: langCode,\r\n\t\t\t\tlang_pack: App.langPack\r\n\t\t\t}),\r\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\r\n\t\t\t\tlang_code: langCode,\r\n\t\t\t\tlang_pack: 'android'\r\n\t\t\t}),\r\n\t\t\timport('../lang'),\r\n\t\t\timport('../langSign'),\r\n\t\t\tpolyfillPromise\r\n\t\t]);\r\n\t}\r\n\r\n\texport function getStrings(langCode: string, strings: string[]) {\r\n\t\treturn apiManager.invokeApi('langpack.getStrings', {\r\n\t\t\tlang_pack: App.langPack,\r\n\t\t\tlang_code: langCode,\r\n\t\t\tkeys: strings\r\n\t\t});\r\n\t}\r\n\r\n\texport function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\r\n\t\tfor(const i in strings) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst v = strings[i];\r\n\t\t\tif(typeof(v) === 'string') {\r\n\t\t\t\tpushTo.push({\r\n\t\t\t\t\t_: 'langPackString',\r\n\t\t\t\t\tkey: i,\r\n\t\t\t\t\tvalue: v\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tpushTo.push({\r\n\t\t\t\t\t_: 'langPackStringPluralized',\r\n\t\t\t\t\tkey: i,\r\n\t\t\t\t\t...v\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pushTo;\r\n\t}\r\n\r\n\texport function getLangPack(langCode: string) {\r\n\t\tlastRequestedLangCode = langCode;\r\n\t\treturn loadLangPack(langCode).then(([langPack, _langPack, __langPack, ___langPack, _]) => {\r\n\t\t\tlet strings: LangPackString[] = [];\r\n\r\n\t\t\t[__langPack, ___langPack].forEach(l => {\r\n\t\t\t\tformatLocalStrings(l.default as any, strings);\r\n\t\t\t});\r\n\r\n\t\t\tstrings = strings.concat(langPack.strings);\r\n\r\n\t\t\tfor(const string of _langPack.strings) {\r\n\t\t\t\tstrings.push(string);\r\n\t\t\t}\r\n\r\n\t\t\tlangPack.strings = strings;\r\n\t\t\treturn saveLangPack(langPack);\r\n\t\t});\r\n\t}\r\n\r\n\texport function saveLangPack(langPack: LangPackDifference) {\r\n\t\tlangPack.appVersion = App.langPackVersion;\r\n\r\n\t\treturn stateStorage.set({langPack}).then(() => {\r\n\t\t\tapplyLangPack(langPack);\r\n\t\t\treturn langPack;\r\n\t\t});\r\n\t}\r\n\r\n\texport const polyfillPromise = (function checkIfPolyfillNeeded() {\r\n\t\tif(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t} else {\r\n\t\t\treturn import('./pluralPolyfill').then((_Intl) => {\r\n\t\t\t\t(window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\r\n\t\t\t});\r\n\t\t}\r\n\t})();\r\n\t\r\n\texport function applyLangPack(langPack: LangPackDifference) {\r\n\t\tif(langPack.lang_code !== lastRequestedLangCode) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code);\r\n\t\t} catch(err) {\r\n\t\t\tconsole.error('pluralRules error', err);\r\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\r\n\t\t}\r\n\r\n\t\tstrings.clear();\r\n\r\n\t\tfor(const string of langPack.strings) {\r\n\t\t\tstrings.set(string.key as LangPackKey, string);\r\n\t\t}\r\n\r\n\t\trootScope.dispatchEvent('language_change', langPack.lang_code);\r\n\r\n\t\tconst elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\r\n\t\telements.forEach(element => {\r\n\t\t\tconst instance = weakMap.get(element);\r\n\r\n\t\t\tif(instance) {\r\n\t\t\t\tinstance.update();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\texport function superFormatter(input: string, args?: any[], indexHolder = {i: 0}) {\r\n\t\tlet out: (string | HTMLElement)[] = [];\r\n\t\tconst regExp = /(\\*\\*)(.+?)\\1|(\\n)|un\\d|%\\d\\$.|%./g;\r\n\r\n\t\tlet lastIndex = 0;\r\n\t\tinput.replace(regExp, (match, p1: any, p2: any, p3: any, offset: number, string: string) => {\r\n\t\t\t//console.table({match, p1, p2, offset, string});\r\n\r\n\t\t\tout.push(string.slice(lastIndex, offset));\r\n\r\n\t\t\tif(p1) {\r\n\t\t\t\t//offset += p1.length;\r\n\t\t\t\tswitch(p1) {\r\n\t\t\t\t\tcase '**': {\r\n\t\t\t\t\t\tconst b = document.createElement('b');\r\n\t\t\t\t\t\tb.append(...superFormatter(p2, args, indexHolder));\r\n\t\t\t\t\t\tout.push(b);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(p3) {\r\n\t\t\t\tout.push(document.createElement('br'));\r\n\t\t\t} else if(args) {\r\n\t\t\t\tout.push(args[indexHolder.i++]);\r\n\t\t\t}\r\n\r\n\t\t\tlastIndex = offset + match.length;\r\n\t\t\treturn '';\r\n\t\t});\r\n\t\r\n\t\tif(lastIndex !== input.length) {\r\n\t\t\tout.push(input.slice(lastIndex));\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\texport function format(key: LangPackKey, plain: true, args?: any[]): string;\r\n\texport function format(key: LangPackKey, plain?: false, args?: any[]): (string | HTMLElement)[];\r\n\texport function format(key: LangPackKey, plain = false, args?: any[]): (string | HTMLElement)[] | string {\r\n\t\tconst str = strings.get(key);\r\n\t\tlet input: string;\r\n\t\tif(str) {\r\n\t\t\tif(str._ === 'langPackStringPluralized' && args?.length) {\r\n\t\t\t\tlet v = args[0] as number | string;\r\n\t\t\t\tif(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\r\n\t\t\t\tconst s = pluralRules.select(v);\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tinput = str[s + '_value'] || str['other_value'];\r\n\t\t\t} else if(str._ === 'langPackString') {\r\n\t\t\t\tinput = str.value;\r\n\t\t\t} else {\r\n\t\t\t\t//input = '[' + key + ']';\r\n\t\t\t\tinput = key;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//input = '[' + key + ']';\r\n\t\t\tinput = key;\r\n\t\t}\r\n\t\t\r\n\t\tif(plain) {\r\n\t\t\tif(args?.length) {\r\n\t\t\t\tconst regExp = /un\\d|%\\d\\$.|%./g;\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tinput = input.replace(regExp, (match, offset, string) => {\r\n\t\t\t\t\treturn '' + args[i++];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn input;\r\n\t\t} else {\r\n\t\t\treturn superFormatter(input, args);\r\n\t\t}\r\n\t}\r\n\r\n\texport const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\r\n\r\n\texport type IntlElementBaseOptions = {\r\n\t\telement?: HTMLElement,\r\n\t\tproperty?: /* 'innerText' |  */'innerHTML' | 'placeholder',\r\n\t};\r\n\r\n\tabstract class IntlElementBase<Options extends IntlElementBaseOptions> {\r\n\t\tpublic element: IntlElementBaseOptions['element'];\r\n\t\tpublic property: IntlElementBaseOptions['property'] = 'innerHTML';\r\n\t\r\n\t\tconstructor(options: Options) {\r\n\t\t\tthis.element = options.element || document.createElement('span');\r\n\t\t\tthis.element.classList.add('i18n');\r\n\t\t\t\r\n\t\t\tthis.update(options);\r\n\t\t\tweakMap.set(this.element, this);\r\n\t\t}\r\n\r\n\t\tabstract update(options?: Options): void;\r\n\t}\r\n\r\n\texport type IntlElementOptions = IntlElementBaseOptions & {\r\n\t\tkey: LangPackKey,\r\n\t\targs?: any[]\r\n\t};\r\n\texport class IntlElement extends IntlElementBase<IntlElementOptions> {\r\n\t\tpublic key: IntlElementOptions['key'];\r\n\t\tpublic args: IntlElementOptions['args'];\r\n\r\n\t\tpublic update(options?: IntlElementOptions) {\r\n\t\t\tsafeAssign(this, options);\r\n\t\r\n\t\t\tif(this.property === 'innerHTML') {\r\n\t\t\t\tthis.element.textContent = '';\r\n\t\t\t\tthis.element.append(...format(this.key, false, this.args));\r\n\t\t\t} else {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst v = this.element[this.property];\r\n\t\t\t\tconst formatted = format(this.key, true, this.args);\r\n\r\n\t\t\t\t// * hasOwnProperty won't work here\r\n\t\t\t\tif(v === undefined) this.element.dataset[this.property] = formatted;\r\n\t\t\t\telse (this.element as HTMLInputElement)[this.property] = formatted;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport type IntlDateElementOptions = IntlElementBaseOptions & {\r\n\t\tdate: Date,\r\n\t\toptions: Intl.DateTimeFormatOptions\r\n\t};\r\n\texport class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\r\n\t\tpublic date: IntlDateElementOptions['date'];\r\n\t\tpublic options: IntlDateElementOptions['options'];\r\n\r\n\t\tpublic update(options?: IntlDateElementOptions) {\r\n\t\t\tsafeAssign(this, options);\r\n\t\r\n\t\t\t//var options = { month: 'long', day: 'numeric' };\r\n\t\t\t\r\n\t\t\t// * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\r\n\t\t\tconst dateTimeFormat = new Intl.DateTimeFormat(lastRequestedLangCode + '-u-hc-h23', this.options);\r\n\t\t\t\r\n\t\t\t(this.element as any)[this.property] = capitalizeFirstLetter(dateTimeFormat.format(this.date));\r\n\t\t}\r\n\t}\r\n\r\n\texport function i18n(key: LangPackKey, args?: any[]) {\r\n\t\treturn new IntlElement({key, args}).element;\r\n\t}\r\n\t\r\n\texport function i18n_(options: IntlElementOptions) {\r\n\t\treturn new IntlElement(options).element;\r\n\t}\r\n\r\n\texport function _i18n(element: HTMLElement, key: LangPackKey, args?: any[], property?: IntlElementOptions['property']) {\r\n\t\treturn new IntlElement({element, key, args, property}).element;\r\n\t}\r\n}\r\n\r\nexport {I18n};\r\nexport default I18n;\r\n\r\nconst i18n = I18n.i18n;\r\nexport {i18n};\r\n\r\nconst i18n_ = I18n.i18n_;\r\nexport {i18n_};\r\n\r\nconst _i18n = I18n._i18n;\r\nexport {_i18n};\r\n\r\nexport function join(elements: HTMLElement[], useLast = true) {\r\n\tconst arr: HTMLElement[] = elements.slice(0, 1);\r\n  for(let i = 1; i < elements.length; ++i) {\r\n    const isLast = (elements.length - 1) === i;\r\n    const delimiterKey: LangPackKey = isLast && useLast ? 'WordDelimiterLast' : 'WordDelimiter';\r\n    arr.push(i18n(delimiterKey));\r\n    arr.push(elements[i]);\r\n  }\r\n\r\n\treturn arr;\r\n}\r\n\r\nMOUNT_CLASS_TO.I18n = I18n;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { NotificationSettings } from \"../appManagers/appNotificationsManager\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { copy } from \"../../helpers/object\";\r\nimport { logger } from \"../logger\";\r\nimport rootScope from \"../rootScope\";\r\nimport { ServiceWorkerNotificationsClearTask, ServiceWorkerPingTask, ServiceWorkerPushClickTask } from \"../serviceWorker/index.service\";\r\nimport apiManager from \"./mtprotoworker\";\r\nimport I18n, { LangPackKey } from \"../langPack\";\r\nimport { isMobile } from \"../../helpers/userAgent\";\r\nimport appRuntimeManager from \"../appManagers/appRuntimeManager\";\r\n\r\nexport type PushSubscriptionNotifyType = 'init' | 'subscribe' | 'unsubscribe';\r\nexport type PushSubscriptionNotifyEvent = `push_${PushSubscriptionNotifyType}`;\r\n\r\nexport type PushSubscriptionNotify = {\r\n  tokenType: number,\r\n  tokenValue: string\r\n};\r\n\r\nexport class WebPushApiManager {\r\n  public isAvailable = true;\r\n  private isPushEnabled = false;\r\n  private localNotificationsAvailable = true;\r\n  private started = false;\r\n  private settings: NotificationSettings & {baseUrl?: string} = {} as any;\r\n  private isAliveTO: any;\r\n  private isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n  private userVisibleOnly = this.isFirefox ? false : true;\r\n  private log = logger('PM');\r\n\r\n  constructor() {\r\n    if(!('PushManager' in window) ||\r\n      !('Notification' in window) ||\r\n      !('serviceWorker' in navigator)) {\r\n      this.log.warn('Push messaging is not supported.');\r\n      this.isAvailable = false;\r\n      this.localNotificationsAvailable = false;\r\n    }\r\n\r\n    if(this.isAvailable && Notification.permission === 'denied') {\r\n      this.log.warn('The user has blocked notifications.');\r\n    }\r\n  }\r\n\r\n  public start() {\r\n    if(!this.started) {\r\n      this.started = true;\r\n      this.getSubscription();\r\n      this.setUpServiceWorkerChannel();\r\n    }\r\n  }\r\n\r\n  public setLocalNotificationsDisabled() {\r\n    this.localNotificationsAvailable = false;\r\n  }\r\n\r\n  public getSubscription() {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    navigator.serviceWorker.ready.then((reg) => {\r\n      reg.pushManager.getSubscription().then((subscription) => {\r\n        this.isPushEnabled = !!subscription;\r\n        this.pushSubscriptionNotify('init', subscription);\r\n      }).catch((err) => {\r\n        this.log.error('Error during getSubscription()', err);\r\n      });\r\n    });\r\n  }\r\n\r\n  public subscribe = () => {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    navigator.serviceWorker.ready.then((reg) => {\r\n      reg.pushManager.subscribe({userVisibleOnly: this.userVisibleOnly}).then((subscription) => {\r\n        // The subscription was successful\r\n        this.isPushEnabled = true;\r\n        this.pushSubscriptionNotify('subscribe', subscription);\r\n      }).catch((e) => {\r\n        if(Notification.permission === 'denied') {\r\n          this.log('Permission for Notifications was denied');\r\n        } else {\r\n          this.log('Unable to subscribe to push.', e);\r\n          if(!this.userVisibleOnly) {\r\n            this.userVisibleOnly = true;\r\n            setTimeout(this.subscribe, 0);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public unsubscribe() {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n    \r\n    navigator.serviceWorker.ready.then((reg) => {\r\n      reg.pushManager.getSubscription().then((subscription) => {\r\n        this.isPushEnabled = false;\r\n\r\n        if(subscription) {\r\n          this.pushSubscriptionNotify('unsubscribe', subscription);\r\n\r\n          setTimeout(() => {\r\n            subscription.unsubscribe().then((successful) => {\r\n              this.isPushEnabled = false;\r\n            }).catch((e) => {\r\n              this.log.error('Unsubscription error: ', e);\r\n            });\r\n          }, 3000);\r\n        }\r\n      }).catch((e) => {\r\n        this.log.error('Error thrown while unsubscribing from ' +\r\n          'push messaging.', e);\r\n      });\r\n    });\r\n  }\r\n\r\n  public forceUnsubscribe() {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    navigator.serviceWorker.ready.then((reg) => {\r\n      reg.pushManager.getSubscription().then((subscription) => {\r\n        this.log.warn('force unsubscribe', subscription);\r\n        if(subscription) {\r\n          subscription.unsubscribe().then((successful) => {\r\n            this.log.warn('force unsubscribe successful', successful);\r\n            this.isPushEnabled = false;\r\n          }).catch((e) => {\r\n            this.log.error('Unsubscription error: ', e);\r\n          });\r\n        }\r\n      }).catch((e) => {\r\n        this.log.error('Error thrown while unsubscribing from ' +\r\n          'push messaging.', e);\r\n      });\r\n    });\r\n  }\r\n\r\n  public isAliveNotify = () => {\r\n    if(!this.isAvailable || rootScope.idle && rootScope.idle.deactivated) {\r\n      return;\r\n    }\r\n\r\n    this.settings.baseUrl = (location.href || '').replace(/#.*$/, '') + '#/im';\r\n\r\n    const lang: ServiceWorkerPingTask['payload']['lang'] = {} as any;\r\n    const ACTIONS_LANG_MAP: Record<keyof ServiceWorkerPingTask['payload']['lang'], LangPackKey> = {\r\n      push_action_mute1d: isMobile ? 'PushNotification.Action.Mute1d.Mobile' : 'PushNotification.Action.Mute1d',\r\n      push_action_settings: isMobile ? 'PushNotification.Action.Settings.Mobile' : 'PushNotification.Action.Settings',\r\n      push_message_nopreview: 'PushNotification.Message.NoPreview'\r\n    };\r\n\r\n    for(const action in ACTIONS_LANG_MAP) {\r\n      lang[action as keyof typeof ACTIONS_LANG_MAP] = I18n.format(ACTIONS_LANG_MAP[action as keyof typeof ACTIONS_LANG_MAP], true);\r\n    }\r\n\r\n    const task: ServiceWorkerPingTask = {\r\n      type: 'ping',\r\n      payload: {\r\n        localNotifications: this.localNotificationsAvailable,\r\n        lang: lang,\r\n        settings: this.settings\r\n      }\r\n    };\r\n\r\n    if(navigator.serviceWorker.controller) {\r\n      navigator.serviceWorker.controller.postMessage(task);\r\n    }\r\n\r\n    this.isAliveTO = setTimeout(this.isAliveNotify, 10000);\r\n  }\r\n\r\n  public setSettings(newSettings: WebPushApiManager['settings']) {\r\n    this.settings = copy(newSettings);\r\n    clearTimeout(this.isAliveTO);\r\n    this.isAliveNotify();\r\n  }\r\n\r\n  public hidePushNotifications() {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    if(navigator.serviceWorker.controller) {\r\n      const task: ServiceWorkerNotificationsClearTask = {type: 'notifications_clear'};\r\n      navigator.serviceWorker.controller.postMessage(task);\r\n    }\r\n  }\r\n\r\n  public setUpServiceWorkerChannel() {\r\n    if(!this.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    apiManager.addServiceWorkerTaskListener('push_click', (task: ServiceWorkerPushClickTask) => {\r\n      if(rootScope.idle && rootScope.idle.deactivated) {\r\n        appRuntimeManager.reload();\r\n        return;\r\n      }\r\n\r\n      rootScope.dispatchEvent('push_notification_click', task.payload);\r\n    });\r\n\r\n    navigator.serviceWorker.ready.then(this.isAliveNotify);\r\n  }\r\n\r\n  public pushSubscriptionNotify(event: PushSubscriptionNotifyType, subscription?: PushSubscription) {\r\n    if(subscription) {\r\n      const subscriptionObj: PushSubscriptionJSON = subscription.toJSON();\r\n      if(!subscriptionObj ||\r\n        !subscriptionObj.endpoint ||\r\n        !subscriptionObj.keys ||\r\n        !subscriptionObj.keys.p256dh ||\r\n        !subscriptionObj.keys.auth) {\r\n        this.log.warn('Invalid push subscription', subscriptionObj);\r\n        this.unsubscribe();\r\n        this.isAvailable = false;\r\n        this.pushSubscriptionNotify(event);\r\n        return;\r\n      }\r\n      \r\n      this.log.warn('Push', event, subscriptionObj);\r\n      rootScope.dispatchEvent(('push_' + event) as PushSubscriptionNotifyEvent, {\r\n        tokenType: 10,\r\n        tokenValue: JSON.stringify(subscriptionObj)\r\n      });\r\n    } else {\r\n      this.log.warn('Push', event, false);\r\n      rootScope.dispatchEvent(('push_' + event) as PushSubscriptionNotifyEvent, false as any);\r\n    }\r\n  }\r\n}\r\n\r\nconst webPushApiManager = new WebPushApiManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.webPushApiManager = webPushApiManager);\r\nexport default webPushApiManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport App from \"../../config/app\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport Modes from \"../../config/modes\";\r\nimport { tsNow } from \"../../helpers/date\";\r\nimport sessionStorage from '../sessionStorage';\r\n\r\nexport class TelegramMeWebManager {\r\n  private disabled = /* false &&  */(Modes.test || App.domains.indexOf(location.hostname) === -1);\r\n\r\n  public async setAuthorized(canRedirect: boolean) {\r\n    if(this.disabled) {\r\n      return;\r\n    }\r\n\r\n    sessionStorage.get('tgme_sync').then((curValue) => {\r\n      const ts = tsNow(true);\r\n      if(canRedirect &&\r\n        curValue &&\r\n        curValue.canRedirect === canRedirect &&\r\n        (curValue.ts + 86400) > ts) {\r\n        return;\r\n      }\r\n\r\n      sessionStorage.set({\r\n        tgme_sync: {\r\n          canRedirect, \r\n          ts\r\n        }\r\n      });\r\n\r\n      const urls = [\r\n        '//telegram.me/_websync_?authed=' + (canRedirect ? '1' : '0'),\r\n        '//t.me/_websync_?authed=' + (canRedirect ? '1' : '0')\r\n      ];\r\n\r\n      const promises = urls.map(url => {\r\n        const script = document.createElement('script');\r\n        const promise = new Promise<void>((resolve) => {\r\n          script.onload = script.onerror = () => {\r\n            script.remove();\r\n            resolve();\r\n          };\r\n        });\r\n        script.src = url;\r\n        document.body.appendChild(script);\r\n        return promise;\r\n      });\r\n\r\n      return Promise.all(promises);\r\n    });\r\n  }\r\n}\r\n\r\nconst telegramMeWebManager = new TelegramMeWebManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.telegramMeWebManager = telegramMeWebManager);\r\nexport default telegramMeWebManager;\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"mtproto.worker.07e0f1193ee76602a399.bundle.worker.js\");\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { logger, LogTypes } from '../../logger';\r\nimport Modes from '../../../config/modes';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport { MTConnection } from './transport';\r\n\r\nexport default class Socket extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private ws: WebSocket;\r\n  private log: ReturnType<typeof logger>;\r\n  private debug = Modes.debug && false;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n    this.connect();\r\n\r\n    return this;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.ws.removeEventListener('open', this.handleOpen);\r\n    this.ws.removeEventListener('close', this.handleClose);\r\n    this.ws.removeEventListener('error', this.handleError);\r\n    this.ws.removeEventListener('message', this.handleMessage);\r\n    this.ws = undefined;\r\n  }\r\n  \r\n  private connect() {\r\n    this.ws = new WebSocket(this.url, 'binary');\r\n    this.ws.binaryType = 'arraybuffer';\r\n    this.ws.addEventListener('open', this.handleOpen);\r\n    this.ws.addEventListener('close', this.handleClose);\r\n    this.ws.addEventListener('error', this.handleError);\r\n    this.ws.addEventListener('message', this.handleMessage);\r\n  }\r\n\r\n  public close() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.log('close execution');\r\n\r\n    try {\r\n      this.ws.close();\r\n    } catch(err) {\r\n\r\n    }\r\n    this.handleClose();\r\n  }\r\n  \r\n  private handleOpen = () => {\r\n    this.log('opened');\r\n\r\n    this.debug && this.log.debug('sending init packet');\r\n    this.dispatchEvent('open');\r\n  };\r\n\r\n  private handleError = (e: Event) => {\r\n    this.log.error('handleError', e);\r\n    this.close();\r\n  };\r\n\r\n  private handleClose = () => {\r\n    this.log('closed'/* , event, this.pending, this.ws.bufferedAmount */);\r\n\r\n    this.removeListeners();\r\n    this.dispatchEvent('close');\r\n  };\r\n\r\n  private handleMessage = (event: MessageEvent) => {\r\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\r\n\r\n    this.dispatchEvent('message', event.data as ArrayBuffer);\r\n  };\r\n\r\n  public send = (body: Uint8Array) => {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    this.ws.send(body);\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { LocalStorageProxyTask, LocalStorageProxyTaskResponse } from '../localStorage';\r\n//import type { LocalStorageProxyDeleteTask, LocalStorageProxySetTask } from '../storage';\r\nimport type { InvokeApiOptions, WorkerTaskVoidTemplate } from '../../types';\r\nimport type { MethodDeclMap } from '../../layer';\r\nimport MTProtoWorker from 'worker-loader!./mtproto.worker';\r\n//import './mtproto.worker';\r\nimport { isObject } from '../../helpers/object';\r\nimport CryptoWorkerMethods from '../crypto/crypto_methods';\r\nimport { logger } from '../logger';\r\nimport rootScope from '../rootScope';\r\nimport webpWorkerController from '../webp/webpWorkerController';\r\nimport type { DownloadOptions } from './apiFileManager';\r\nimport type { ServiceWorkerTask } from '../serviceWorker/index.service';\r\nimport { UserAuth } from './mtproto_config';\r\nimport type { MTMessage } from './networker';\r\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport Socket from './transports/websocket';\r\nimport singleInstance from './singleInstance';\r\nimport sessionStorage from '../sessionStorage';\r\nimport webPushApiManager from './webPushApiManager';\r\nimport AppStorage from '../storage';\r\nimport appRuntimeManager from '../appManagers/appRuntimeManager';\r\nimport { SocketProxyTask } from './transports/socketProxied';\r\nimport telegramMeWebManager from './telegramMeWebManager';\r\nimport { pause } from '../../helpers/schedulers';\r\nimport { CacheStorageDbName } from '../cacheStorage';\r\n\r\ntype Task = {\r\n  taskId: number,\r\n  task: string,\r\n  args: any[]\r\n};\r\n\r\ntype HashResult = {\r\n  hash: number,\r\n  result: any\r\n};\r\n\r\ntype HashOptions = {\r\n  [queryJSON: string]: HashResult\r\n};\r\n\r\nexport interface ToggleStorageTask extends WorkerTaskVoidTemplate {\r\n  type: 'toggleStorage',\r\n  payload: boolean\r\n};\r\n\r\nexport class ApiManagerProxy extends CryptoWorkerMethods {\r\n  public worker: /* Window */Worker;\r\n  public postMessage: (...args: any[]) => void;\r\n  public postSWMessage: (...args: any[]) => void = () => {};\r\n  private afterMessageIdTemp = 0;\r\n\r\n  private taskId = 0;\r\n  private awaiting: {\r\n    [id: number]: {\r\n      resolve: any,\r\n      reject: any,\r\n      taskName: string\r\n    }\r\n  } = {} as any;\r\n  private pending: Array<Task> = [];\r\n\r\n  public updatesProcessor: (obj: any) => void = null;\r\n\r\n  private log = logger('API-PROXY');\r\n\r\n  private hashes: {[method: string]: HashOptions} = {};\r\n\r\n  private apiPromisesSingle: {\r\n    [q: string]: Promise<any>\r\n  } = {};\r\n  private apiPromisesCacheable: {\r\n    [method: string]: {\r\n      [queryJSON: string]: {\r\n        timestamp: number,\r\n        promise: Promise<any>,\r\n        fulfilled: boolean,\r\n        timeout?: number,\r\n        params: any\r\n      }\r\n    }\r\n  } = {};\r\n\r\n  private isSWRegistered = true;\r\n\r\n  private debug = DEBUG /* && false */;\r\n\r\n  private sockets: Map<number, Socket> = new Map();\r\n\r\n  private taskListeners: {[taskType: string]: (task: any) => void} = {};\r\n  private taskListenersSW: {[taskType: string]: (task: any) => void} = {};\r\n\r\n  public onServiceWorkerFail: () => void;\r\n\r\n  constructor() {\r\n    super();\r\n    this.log('constructor');\r\n\r\n    singleInstance.start();\r\n\r\n    this.registerServiceWorker();\r\n\r\n    this.addTaskListener('clear', () => {\r\n      const toClear: CacheStorageDbName[] = ['cachedFiles', 'cachedStreamChunks'];\r\n      Promise.all([\r\n        AppStorage.toggleStorage(false), \r\n        sessionStorage.clear(),\r\n        Promise.race([\r\n          telegramMeWebManager.setAuthorized(false),\r\n          pause(3000)\r\n        ]),\r\n        webPushApiManager.forceUnsubscribe(),\r\n        Promise.all(toClear.map(cacheName => caches.delete(cacheName)))\r\n      ]).finally(() => {\r\n        appRuntimeManager.reload();\r\n      });\r\n    });\r\n\r\n    this.addTaskListener('connectionStatusChange', (task: any) => {\r\n      rootScope.dispatchEvent('connection_status_change', task.payload);\r\n    });\r\n\r\n    this.addTaskListener('convertWebp', (task) => {\r\n      webpWorkerController.postMessage(task);\r\n    });\r\n\r\n    this.addTaskListener('socketProxy', (task: SocketProxyTask) => {\r\n      const socketTask = task.payload;\r\n      const id = socketTask.id;\r\n      //console.log('socketProxy', socketTask, id);\r\n\r\n      if(socketTask.type === 'send') {\r\n        const socket = this.sockets.get(id);\r\n        socket.send(socketTask.payload);\r\n      } else if(socketTask.type === 'close') { // will remove from map in onClose\r\n        const socket = this.sockets.get(id);\r\n        socket.close();\r\n      } else if(socketTask.type === 'setup') {\r\n        const socket = new Socket(socketTask.payload.dcId, socketTask.payload.url, socketTask.payload.logSuffix);\r\n        \r\n        const onOpen = () => {\r\n          //console.log('socketProxy onOpen');\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'open',\r\n              id\r\n            }\r\n          });\r\n        };\r\n        const onClose = () => {\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'close',\r\n              id\r\n            }\r\n          });\r\n\r\n          socket.removeEventListener('open', onOpen);\r\n          socket.removeEventListener('close', onClose);\r\n          socket.removeEventListener('message', onMessage);\r\n          this.sockets.delete(id);\r\n        };\r\n        const onMessage = (buffer: ArrayBuffer) => {\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'message',\r\n              id,\r\n              payload: buffer\r\n            }\r\n          });\r\n        };\r\n\r\n        socket.addEventListener('open', onOpen);\r\n        socket.addEventListener('close', onClose);\r\n        socket.addEventListener('message', onMessage);\r\n        this.sockets.set(id, socket);\r\n      }\r\n    });\r\n\r\n    this.addTaskListener('localStorageProxy', (task: LocalStorageProxyTask) => {\r\n      const storageTask = task.payload;\r\n      // @ts-ignore\r\n      sessionStorage[storageTask.type](...storageTask.args).then(res => {\r\n        this.postMessage({\r\n          type: 'localStorageProxy',\r\n          id: task.id,\r\n          payload: res\r\n        } as LocalStorageProxyTaskResponse);\r\n      });\r\n    });\r\n\r\n    rootScope.addEventListener('language_change', (language) => {\r\n      this.performTaskWorkerVoid('setLanguage', language);\r\n    });\r\n\r\n    window.addEventListener('online', (event) => {\r\n      this.forceReconnectTimeout();\r\n    });\r\n\r\n                       \r\n    this.registerWorker();\r\n              \r\n  }\r\n\r\n  public isServiceWorkerOnline() {\r\n    return this.isSWRegistered;\r\n  }\r\n\r\n  private registerServiceWorker() {\r\n    if(!('serviceWorker' in navigator)) return;\r\n    \r\n    const worker = navigator.serviceWorker;\r\n    worker.register('./sw.js', {scope: './'}).then(registration => {\r\n      this.log('SW registered', registration);\r\n      this.isSWRegistered = true;\r\n\r\n      const sw = registration.installing || registration.waiting || registration.active;\r\n      sw.addEventListener('statechange', (e) => {\r\n        this.log('SW statechange', e);\r\n      });\r\n\r\n      this.postSWMessage = worker.controller.postMessage.bind(worker.controller);\r\n\r\n                        \r\n                                                                                                                     \r\n                                            \r\n                \r\n    }, (err) => {\r\n      this.isSWRegistered = false;\r\n      this.log.error('SW registration failed!', err);\r\n\r\n      if(this.onServiceWorkerFail) {\r\n        this.onServiceWorkerFail();\r\n      }\r\n    });\r\n\r\n    worker.addEventListener('controllerchange', () => {\r\n      this.log.warn('controllerchange');\r\n      this.releasePending();\r\n\r\n      worker.controller.addEventListener('error', (e) => {\r\n        this.log.error('controller error:', e);\r\n      });\r\n    });\r\n\r\n                      \r\n                                                             \r\n             \r\n    worker.addEventListener('message', (e) => {\r\n      const task: ServiceWorkerTask = e.data;\r\n      if(!isObject(task)) {\r\n        return;\r\n      }\r\n\r\n      const callback = this.taskListenersSW[task.type];\r\n      if(callback) {\r\n        callback(task);\r\n      }\r\n    });\r\n\r\n    this.addServiceWorkerTaskListener('requestFilePart', (task) => {\r\n      this.postMessage(task);\r\n    });\r\n              \r\n\r\n    worker.addEventListener('messageerror', (e) => {\r\n      this.log.error('SW messageerror:', e);\r\n    });\r\n  }\r\n\r\n  private onWorkerFirstMessage(worker: any) {\r\n    if(!this.worker) {\r\n      this.worker = worker;\r\n      this.log('set webWorker');\r\n\r\n      this.postMessage = this.worker.postMessage.bind(this.worker);\r\n\r\n      const isWebpSupported = webpWorkerController.isWebpSupported();\r\n      this.log('WebP supported:', isWebpSupported);\r\n      this.postMessage({type: 'webpSupport', payload: isWebpSupported});\r\n      this.postMessage({type: 'userAgent', payload: navigator.userAgent});\r\n\r\n      this.releasePending();\r\n    }\r\n  }\r\n\r\n  public addTaskListener(name: keyof ApiManagerProxy['taskListeners'], callback: ApiManagerProxy['taskListeners'][typeof name]) {\r\n    this.taskListeners[name] = callback;\r\n  }\r\n\r\n  public addServiceWorkerTaskListener(name: keyof ApiManagerProxy['taskListenersSW'], callback: ApiManagerProxy['taskListenersSW'][typeof name]) {\r\n    this.taskListenersSW[name] = callback;\r\n  }\r\n\r\n  private onWorkerMessage = (e: MessageEvent) => {\r\n    //this.log('got message from worker:', e.data);\r\n\r\n    const task = e.data;\r\n\r\n    if(!isObject(task)) {\r\n      return;\r\n    }\r\n\r\n    const callback = this.taskListeners[task.type];\r\n    if(callback) {\r\n      callback(task);\r\n      return;\r\n    }\r\n\r\n    if(task.update) {\r\n      if(this.updatesProcessor) {\r\n        this.updatesProcessor(task.update);\r\n      }\r\n    } else if(task.progress) {\r\n      rootScope.dispatchEvent('download_progress', task.progress);\r\n    } else if(task.hasOwnProperty('result') || task.hasOwnProperty('error')) {\r\n      this.finalizeTask(task.taskId, task.result, task.error);\r\n    }\r\n  };\r\n\r\n                     \r\n  private registerWorker() {\r\n    //return;\r\n\r\n    const worker = new MTProtoWorker();\r\n    //const worker = window;\r\n    worker.addEventListener('message', this.onWorkerFirstMessage.bind(this, worker), {once: true});\r\n    worker.addEventListener('message', this.onWorkerMessage);\r\n\r\n    worker.addEventListener('error', (err) => {\r\n      this.log.error('WORKER ERROR', err);\r\n    });\r\n  }\r\n            \r\n\r\n  private finalizeTask(taskId: number, result: any, error: any) {\r\n    const deferred = this.awaiting[taskId];\r\n    if(deferred !== undefined) {\r\n      this.debug && this.log.debug('done', deferred.taskName, result, error);\r\n      error ? deferred.reject(error) : deferred.resolve(result);\r\n      delete this.awaiting[taskId];\r\n    }\r\n  }\r\n\r\n  public performTaskWorkerVoid(task: string, ...args: any[]) {\r\n    const params = {\r\n      task,\r\n      taskId: this.taskId,\r\n      args\r\n    };\r\n\r\n    this.pending.push(params);\r\n    this.releasePending();\r\n\r\n    this.taskId++;\r\n  }\r\n\r\n  public performTaskWorker<T>(task: string, ...args: any[]) {\r\n    this.debug && this.log.debug('start', task, args);\r\n\r\n    return new Promise<T>((resolve, reject) => {\r\n      this.awaiting[this.taskId] = {resolve, reject, taskName: task};\r\n      this.performTaskWorkerVoid(task, ...args);\r\n    });\r\n  }\r\n\r\n  private releasePending() {\r\n    //return;\r\n\r\n    if(this.postMessage) {\r\n      this.debug && this.log.debug('releasing tasks, length:', this.pending.length);\r\n      this.pending.forEach(pending => {\r\n        this.postMessage(pending);\r\n      });\r\n      \r\n      this.debug && this.log.debug('released tasks');\r\n      this.pending.length = 0;\r\n    }\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    //console.log('will invokeApi:', method, params, options);\r\n    return this.performTaskWorker('invokeApi', method, params, options);\r\n  }\r\n\r\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    let o = options;\r\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\r\n    \r\n    o = {...options};\r\n    (options as MTMessage).messageId = o.prepareTempMessageId;\r\n\r\n    //console.log('will invokeApi:', method, params, options);\r\n    return this.invokeApi(method, params, o);\r\n  }\r\n\r\n  public invokeApiHashable<T extends keyof MethodDeclMap>(method: T, params: Omit<MethodDeclMap[T]['req'], 'hash'> = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    //console.log('will invokeApi:', method, params, options);\r\n\r\n    const queryJSON = JSON.stringify(params);\r\n    let cached: HashResult;\r\n    if(this.hashes[method]) {\r\n      cached = this.hashes[method][queryJSON];\r\n      if(cached) {\r\n        (params as any).hash = cached.hash;\r\n      }\r\n    }\r\n\r\n    return this.invokeApi(method, params, options).then((result: any) => {\r\n      if(result._.includes('NotModified')) {\r\n        this.debug && this.log.warn('NotModified saved!', method, queryJSON);\r\n        return cached.result;\r\n      }\r\n      \r\n      if(result.hash/*  || result.messages */) {\r\n        const hash = result.hash/*  || this.computeHash(result.messages) */;\r\n        \r\n        if(!this.hashes[method]) this.hashes[method] = {};\r\n        this.hashes[method][queryJSON] = {\r\n          hash,\r\n          result\r\n        };\r\n      }\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    const q = method + '-' + JSON.stringify(params);\r\n    if(this.apiPromisesSingle[q]) {\r\n      return this.apiPromisesSingle[q];\r\n    }\r\n\r\n    return this.apiPromisesSingle[q] = this.invokeApi(method, params, options).finally(() => {\r\n      delete this.apiPromisesSingle[q];\r\n    });\r\n  }\r\n\r\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\r\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\r\n    const queryJSON = JSON.stringify(params);\r\n    const item = cache[queryJSON];\r\n    if(item && (!options.override || !item.fulfilled)) {\r\n      return item.promise;\r\n    }\r\n\r\n    if(options.override) {\r\n      if(item && item.timeout) {\r\n        clearTimeout(item.timeout);\r\n        delete item.timeout;\r\n      }\r\n\r\n      delete options.override;\r\n    }\r\n\r\n    let timeout: number;\r\n    if(options.cacheSeconds) {\r\n      timeout = window.setTimeout(() => {\r\n        delete cache[queryJSON];\r\n      }, options.cacheSeconds * 1000);\r\n      delete options.cacheSeconds;\r\n    }\r\n\r\n    const promise = this.invokeApi(method, params, options);\r\n\r\n    cache[queryJSON] = {\r\n      timestamp: Date.now(),\r\n      fulfilled: false,\r\n      timeout,\r\n      promise,\r\n      params\r\n    };\r\n\r\n    return promise;\r\n  }\r\n\r\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\r\n    const cache = this.apiPromisesCacheable[method];\r\n    if(cache) {\r\n      for(const queryJSON in cache) {\r\n        const item = cache[queryJSON];\r\n        if(verify(item.params)) {\r\n          if(item.timeout) {\r\n            clearTimeout(item.timeout);\r\n          }\r\n\r\n          delete cache[queryJSON];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /* private computeHash(smth: any[]) {\r\n    smth = smth.slice().sort((a, b) => a.id - b.id);\r\n    //return smth.reduce((hash, v) => (((hash * 0x4F25) & 0x7FFFFFFF) + v.id) & 0x7FFFFFFF, 0);\r\n    return smth.reduce((hash, v) => ((hash * 20261) + 0x80000000 + v.id) % 0x80000000, 0);\r\n  } */\r\n\r\n  public setBaseDcId(dcId: number) {\r\n    return this.performTaskWorker('setBaseDcId', dcId);\r\n  }\r\n\r\n  public setQueueId(queueId: number) {\r\n    return this.performTaskWorker('setQueueId', queueId);\r\n  }\r\n\r\n  public setUserAuth(userAuth: UserAuth | number) {\r\n    if(typeof(userAuth) === 'number') {\r\n      userAuth = {dcID: 0, date: Date.now() / 1000 | 0, id: userAuth};\r\n    }\r\n    \r\n    rootScope.dispatchEvent('user_auth', userAuth);\r\n    return this.performTaskWorker('setUserAuth', userAuth);\r\n  }\r\n\r\n  public getNetworker(dc_id: number, options?: InvokeApiOptions) {\r\n    return this.performTaskWorker('getNetworker', dc_id, options);\r\n  }\r\n\r\n  public logOut(): Promise<void> {\r\n    // AppStorage.toggleStorage(false);\r\n    return this.performTaskWorker('logOut');\r\n  }\r\n\r\n  public cancelDownload(fileName: string) {\r\n    return this.performTaskWorker('cancelDownload', fileName);\r\n  }\r\n\r\n  public downloadFile(options: DownloadOptions) {\r\n    return this.performTaskWorker('downloadFile', options);\r\n  }\r\n\r\n  public uploadFile(options: {file: Blob | File, fileName: string}) {\r\n    return this.performTaskWorker('uploadFile', options);\r\n  }\r\n\r\n  public toggleStorage(enabled: boolean) {\r\n    const task: ToggleStorageTask = {type: 'toggleStorage', payload: enabled};\r\n    this.postMessage(task);\r\n    this.postSWMessage(task);\r\n  }\r\n\r\n  public stopAll() {\r\n    return this.performTaskWorkerVoid('stopAll');\r\n  }\r\n\r\n  public startAll() {\r\n    return this.performTaskWorkerVoid('startAll');\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    this.postMessage({type: 'online'});\r\n  }\r\n\r\n  public forceReconnect() {\r\n    this.postMessage({type: 'forceReconnect'});\r\n  }\r\n}\r\n\r\nconst apiManagerProxy = new ApiManagerProxy();\r\nMOUNT_CLASS_TO.apiManagerProxy = apiManagerProxy;\r\nexport default apiManagerProxy;\r\n","import { convertToArrayBuffer } from \"../../helpers/bytes\";\r\nimport type { InputCheckPasswordSRP } from \"../../layer\";\r\nimport { aesEncryptSync, aesDecryptSync, sha256HashSync, sha1HashSync, bytesModPow } from \"./crypto_utils\";\r\n\r\nexport default abstract class CryptoWorkerMethods {\r\n  abstract performTaskWorker<T>(task: string, ...args: any[]): Promise<T>;\r\n\r\n  public sha1Hash(bytes: Parameters<typeof sha1HashSync>[0]): Promise<Uint8Array> {\r\n    return this.performTaskWorker<Uint8Array>('sha1-hash', bytes);\r\n  }\r\n\r\n  public sha256Hash(bytes: Parameters<typeof sha256HashSync>[0]) {\r\n    return this.performTaskWorker<number[]>('sha256-hash', bytes);\r\n  }\r\n\r\n  public pbkdf2(buffer: Uint8Array, salt: Uint8Array, iterations: number) {\r\n    return this.performTaskWorker<ArrayBuffer>('pbkdf2', buffer, salt, iterations);\r\n  }\r\n\r\n  public aesEncrypt(bytes: Parameters<typeof aesEncryptSync>[0], \r\n    keyBytes: Parameters<typeof aesEncryptSync>[1], \r\n    ivBytes: Parameters<typeof aesEncryptSync>[2]) {\r\n    return this.performTaskWorker<ReturnType<typeof aesEncryptSync>>('aes-encrypt', convertToArrayBuffer(bytes), \r\n      convertToArrayBuffer(keyBytes), convertToArrayBuffer(ivBytes));\r\n  }\r\n\r\n  public aesDecrypt(encryptedBytes: Parameters<typeof aesDecryptSync>[0], \r\n    keyBytes: Parameters<typeof aesDecryptSync>[1], \r\n    ivBytes: Parameters<typeof aesDecryptSync>[2]): Promise<ArrayBuffer> {\r\n    return this.performTaskWorker<ArrayBuffer>('aes-decrypt', \r\n      encryptedBytes, keyBytes, ivBytes)\r\n      .then(bytes => convertToArrayBuffer(bytes));\r\n  }\r\n\r\n  public rsaEncrypt(publicKey: {modulus: string, exponent: string}, bytes: any): Promise<number[]> {\r\n    return this.performTaskWorker<number[]>('rsa-encrypt', publicKey, bytes);\r\n  }\r\n\r\n  public factorize(bytes: Uint8Array) {\r\n    return this.performTaskWorker<[number[], number[], number]>('factorize', [...bytes]);\r\n  }\r\n\r\n  public modPow(x: Parameters<typeof bytesModPow>[0], y: Parameters<typeof bytesModPow>[1], m: Parameters<typeof bytesModPow>[2]) {\r\n    return this.performTaskWorker<ReturnType<typeof bytesModPow>>('mod-pow', x, y, m);\r\n  }\r\n\r\n  public gzipUncompress<T>(bytes: ArrayBuffer, toString?: boolean) {\r\n    return this.performTaskWorker<T>('gzipUncompress', bytes, toString);\r\n  }\r\n\r\n  public computeSRP(password: string, state: any, isNew = false): Promise<InputCheckPasswordSRP> {\r\n    return this.performTaskWorker('computeSRP', password, state, isNew);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport I18n from \"../lib/langPack\";\r\n\r\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nexport const ONE_DAY = 86400;\r\n\r\n// https://stackoverflow.com/a/6117889\r\nexport const getWeekNumber = (date: Date) => {\r\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n  const dayNum = d.getUTCDay() || 7;\r\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\r\n};\r\n\r\nexport const formatDateAccordingToToday = (time: Date) => {\r\n  const date = new Date();\r\n  const now = date.getTime() / 1000 | 0;\r\n  const timestamp = time.getTime() / 1000 | 0;\r\n\r\n  let timeStr: string;\r\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\r\n    timeStr = ('0' + time.getHours()).slice(-2) + ':' + ('0' + time.getMinutes()).slice(-2);\r\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\r\n    timeStr = time.getDate() + '.' + ('0' + (time.getMonth() + 1)).slice(-2) + '.' + ('' + time.getFullYear()).slice(-2);\r\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(date) === getWeekNumber(time)) { // current week\r\n    timeStr = days[time.getDay()].slice(0, 3);\r\n  } else { // same year\r\n    timeStr = months[time.getMonth()].slice(0, 3) + ' ' + ('0' + time.getDate()).slice(-2);\r\n  }\r\n\r\n  return timeStr;\r\n};\r\n\r\nexport function formatDateAccordingToTodayNew(time: Date) {\r\n  const today = new Date();\r\n  const now = today.getTime() / 1000 | 0;\r\n  const timestamp = time.getTime() / 1000 | 0;\r\n\r\n  const options: Intl.DateTimeFormatOptions = {};\r\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\r\n    options.hour = options.minute = '2-digit';\r\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\r\n    options.year = options.day = 'numeric';\r\n    options.month = '2-digit';\r\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\r\n    options.weekday = 'short';\r\n  } else { // same year\r\n    options.month = 'short';\r\n    options.day = 'numeric';\r\n  }\r\n\r\n  return new I18n.IntlDateElement({\r\n    date: time,\r\n    options\r\n  }).element;\r\n}\r\n\r\nexport function formatTime(date: Date) {\r\n  return new I18n.IntlDateElement({\r\n    date,\r\n    options: {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }\r\n  }).element;\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\r\n\r\nexport const getFullDate = (date: Date, options: Partial<{\r\n  noTime: true, \r\n  noSeconds: true,\r\n  monthAsNumber: true,\r\n  leadingZero: true\r\n}> = {}) => {\r\n  const joiner = options.monthAsNumber ? '.' : ' ';\r\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\r\n\r\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) + \r\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) + \r\n    joiner + date.getFullYear() + \r\n    (options.noTime ? '' : ', ' + time);\r\n};\r\n\r\nexport function tsNow(seconds?: true) {\r\n  const t = Date.now();\r\n  return seconds ? t / 1000 | 0 : t;\r\n}\r\n\r\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\r\nconst minYear = 2013;\r\nconst yearPattern = new RegExp(\"20[0-9]{1,2}\");\r\nconst monthYearOrDayPattern = new RegExp(\"(\\\\w{3,}) ([0-9]{0,4})\", 'i');\r\nconst yearOrDayAndMonthPattern = new RegExp(\"([0-9]{0,4}) (\\\\w{2,})\", 'i');\r\nconst shortDate = new RegExp(\"^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\r\nconst longDate = new RegExp(\"^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\r\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nexport type DateData = {\r\n  title: string,\r\n  minDate: number,\r\n  maxDate: number,\r\n};\r\nexport function fillTipDates(query: string, dates: DateData[]) {\r\n  const q = query.trim().toLowerCase();\r\n\r\n  if(q.length < 3) {\r\n    return;\r\n  }\r\n\r\n  if(\"today\".indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: 'Today',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  if(\"yesterday\".indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime() - 86400000;\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 86400001;\r\n    dates.push({\r\n      title: 'Yesterday',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  const dayOfWeek = getDayOfWeek(q);\r\n  if(dayOfWeek >= 0) {\r\n    const date = new Date();\r\n    const now = date.getTime();\r\n    const currentDay = date.getDay();\r\n    const distance = dayOfWeek - currentDay;\r\n    date.setDate(date.getDate() + distance);\r\n    if(date.getTime() > now) {\r\n      date.setTime(date.getTime() - 604800000);\r\n    }\r\n    const year = date.getFullYear()\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: formatWeekLong(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  let matches: any[];\r\n  if((matches = shortDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const k = parseInt(g1);\r\n    const k1 = parseInt(g2);\r\n    if(k > 0 && k <= 31) {\r\n      if(k1 >= minYear && k <= 12) {\r\n        const selectedYear = k1;\r\n        const month = k - 1;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      } else if (k1 <= 12) {\r\n        const day = k - 1;\r\n        const month = k1 - 1;\r\n        createForDayMonth(dates, day, month);\r\n      }\r\n    } else if (k >= minYear && k1 <= 12) {\r\n      const selectedYear = k;\r\n      const month = k1 - 1;\r\n      createForMonthYear(dates, month, selectedYear);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = longDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const g3 = matches[5];\r\n    if(!matches[2] === matches[4]) {\r\n      return;\r\n    }\r\n\r\n    const day = parseInt(g1);\r\n    const month = parseInt(g2) - 1;\r\n    let year = parseInt(g3);\r\n    if(year >= 10 && year <= 99) {\r\n      year += 2000;\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(year, month, day);\r\n      date.setHours(0, 0, 0);\r\n      \r\n      const minDate = date.getTime();\r\n      date.setFullYear(year, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: formatterYearMax(minDate),\r\n        minDate,\r\n        maxDate\r\n      });\r\n      return;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = yearPattern.exec(q)) !== null) {\r\n    let selectedYear = +q;\r\n    const currentYear = new Date().getFullYear();\r\n    if(selectedYear < minYear) {\r\n      selectedYear = minYear;\r\n      for(let i = currentYear; i >= selectedYear; i--) {\r\n        const date = new Date();\r\n        date.setFullYear(i, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const minDate = date.getTime();\r\n        date.setFullYear(i + 1, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const maxDate = date.getTime() - 1;\r\n        dates.push({\r\n          title: '' + i,\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    } else if(selectedYear <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(selectedYear, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      date.setFullYear(selectedYear + 1, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: '' + selectedYear,\r\n        minDate,\r\n        maxDate\r\n      });\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g1);\r\n    if(month >= 0) {\r\n      const k = +g2;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if(k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g2);\r\n    if(month >= 0) {\r\n      const k = +g1;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if (k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\r\n  const currentYear = new Date().getFullYear();\r\n  const today = Date.now();\r\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\r\n    const date = new Date();\r\n    date.setFullYear(selectedYear, month, 1);\r\n    date.setHours(0, 0, 0);\r\n    const minDate = date.getTime();\r\n    if(minDate > today) {\r\n      return;\r\n    }\r\n    date.setMonth(date.getMonth() + 1);\r\n    const maxDate = date.getTime() - 1;\r\n\r\n    dates.push({\r\n      title: formatterMonthYear(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n  }\r\n}\r\n\r\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\r\n  if(validDateForMonth(day, month)) {\r\n    const currentYear = new Date().getFullYear();\r\n    const today = Date.now();\r\n    \r\n    for(let i = currentYear; i >= minYear; i--) {\r\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\r\n        continue;\r\n      }\r\n\r\n      const date = new Date();\r\n      date.setFullYear(i, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n      \r\n      const minDate = date.getTime();\r\n      if(minDate > today) {\r\n        continue;\r\n      }\r\n\r\n      date.setFullYear(i, month, day + 2);\r\n      date.setHours(0, 0, 0);\r\n      const maxDate = date.getTime() - 1;\r\n      if(i === currentYear) {\r\n        dates.push({\r\n          title: formatterDayMonth(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      } else {\r\n        dates.push({\r\n          title: formatterYearMax(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatterMonthYear(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getFullYear();\r\n}\r\n\r\nfunction formatterDayMonth(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getDate();\r\n}\r\n\r\nfunction formatterYearMax(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\r\n}\r\n\r\nfunction formatWeekLong(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return days[date.getDay()];\r\n}\r\n\r\nfunction validDateForMonth(day: number, month: number) {\r\n  if(month >= 0 && month < 12) {\r\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isLeapYear(year: number) {\r\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n}\r\n\r\nfunction getMonth(q: string) {\r\n  /* String[] months = new String[]{\r\n          LocaleController.getString(\"January\", R.string.January).toLowerCase(),\r\n          LocaleController.getString(\"February\", R.string.February).toLowerCase(),\r\n          LocaleController.getString(\"March\", R.string.March).toLowerCase(),\r\n          LocaleController.getString(\"April\", R.string.April).toLowerCase(),\r\n          LocaleController.getString(\"May\", R.string.May).toLowerCase(),\r\n          LocaleController.getString(\"June\", R.string.June).toLowerCase(),\r\n          LocaleController.getString(\"July\", R.string.July).toLowerCase(),\r\n          LocaleController.getString(\"August\", R.string.August).toLowerCase(),\r\n          LocaleController.getString(\"September\", R.string.September).toLowerCase(),\r\n          LocaleController.getString(\"October\", R.string.October).toLowerCase(),\r\n          LocaleController.getString(\"November\", R.string.November).toLowerCase(),\r\n          LocaleController.getString(\"December\", R.string.December).toLowerCase()\r\n  }; */\r\n\r\n  /* String[] monthsEng = new String[12];\r\n  Calendar c = Calendar.getInstance();\r\n  for (int i = 1; i <= 12; i++) {\r\n      c.set(0, 0, 0, 0, 0, 0);\r\n      c.set(Calendar.MONTH, i);\r\n      monthsEng[i - 1] = c.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.ENGLISH).toLowerCase();\r\n  } */\r\n\r\n  q = q.toLowerCase();\r\n  for(let i = 0; i < 12; i++) {\r\n    const month = months[i].toLowerCase();\r\n    if(month.indexOf(q) === 0) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction getDayOfWeek(q: string) {\r\n  const c = new Date();\r\n  if(q.length <= 3) {\r\n    return -1;\r\n  }\r\n  \r\n  for(let i = 0; i < 7; i++) {\r\n    c.setDate(c.getDate() + 1);\r\n    \r\n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\r\n      return c.getDay();\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport function nextRandomInt(maxValue: number) {\r\n  return Math.floor(Math.random() * maxValue);\r\n}\r\n\r\nexport function randomLong() {\r\n  return '' + nextRandomInt(0xFFFFFFFF) + nextRandomInt(0xFFFFFF);\r\n  //return '' + parseInt(nextRandomInt(0xFFFFFFFF).toString(16) + nextRandomInt(0xFFFFFFFF).toString(16), 16);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n/* export function stringMiddleOverflow(str: string, maxLength: number) {\r\n  return str.length > maxLength ? str.slice(0, maxLength / 2 | 0) + '...' + str.slice(-Math.round(maxLength / 2)) : str; \r\n} */\r\n\r\nexport function limitSymbols(str: string, length: number, limitFrom = length + 10) {\r\n  str = str.trim();\r\n  if(str.length > limitFrom) {\r\n    str = str.slice(0, length)/* .replace(/\\s*$/, '') */ + '...';\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n// credits to https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\r\nexport function escapeRegExp(str: string) {\r\n  return str\r\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\r\n    .replace(/-/g, '\\\\x2d');\r\n}\r\n\r\nexport function encodeEntities(value: string) {\r\n  return value.replace(/&/g, '&amp;').replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, (value) => {\r\n    var hi = value.charCodeAt(0);\r\n    var low = value.charCodeAt(1);\r\n    return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\r\n  }).replace(/([^\\#-~| |!])/g, (value) => { // non-alphanumeric\r\n    return '&#' + value.charCodeAt(0) + ';';\r\n  }).replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n}\r\n\r\nexport function splitStringByLength(str: string, maxLength: number) {\r\n  if(str.length < maxLength) return [str];\r\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\r\n  const delimiter = ' ';//'\\n';\r\n  const out: string[] = [];\r\n\r\n  const cut = (end?: number) => {\r\n    let part = str.slice(lastSliceStartIndex, end);\r\n    const _arrayIndex = arrayIndex++;\r\n    if(part.length > maxLength) {\r\n      let overflowPart = part.slice(maxLength);\r\n      const splitted = splitStringByLength(overflowPart, maxLength);\r\n      splitted.forEach(part => {\r\n        out[arrayIndex++] = part;\r\n      });\r\n\r\n      part = part.slice(0, maxLength);\r\n    }\r\n\r\n    lastSliceStartIndex = end;\r\n    length = 0;\r\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\r\n  };\r\n\r\n  let lastIndex = 0;\r\n  do {\r\n    let index = str.indexOf(delimiter, lastIndex);\r\n    if(index === -1) {\r\n      if(lastIndex !== (str.length - 1)) {\r\n        cut();\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    index += delimiter.length;\r\n\r\n    const partLength = index - lastIndex;\r\n    if((length + partLength) > maxLength) {\r\n      cut(length);\r\n    }\r\n    \r\n    lastIndex = index;\r\n    length += partLength;\r\n  } while(true);\r\n\r\n  return out;\r\n}\r\n\r\n// https://stackoverflow.com/a/14824756\r\n/* export const checkRTL = (s: string) => {           \r\n  const ltrChars  = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF'+'\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF',\r\n    rtlChars      = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC',\r\n    rtlDirCheck   = new RegExp('^[^'+ltrChars+']*['+rtlChars+']');\r\n\r\n  return rtlDirCheck.test(s);\r\n}; */\r\n\r\n//(window as any).checkRTL = checkRTL;\r\n\r\nexport function convertInputKeyToKey(inputKey: string) {\r\n  const str = inputKey.replace('input', '');\r\n  return (str[0].toLowerCase() + str.slice(1)) as string;\r\n}\r\n\r\nexport function convertKeyToInputKey(key: string) {\r\n  key = key[0].toUpperCase() + key.slice(1);\r\n  key = 'input' + key;\r\n  return key;\r\n}\r\n\r\nexport function capitalizeFirstLetter(string: string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport function bytesToHex(bytes: ArrayLike<number>) {\r\n  bytes = bytes || [];\r\n  let arr: string[] = [];\r\n  for(let i = 0; i < bytes.length; ++i) {\r\n    arr.push((bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16));\r\n  }\r\n  return arr.join('');\r\n}\r\n\r\nexport function bytesFromHex(hexString: string) {\r\n  const len = hexString.length;\r\n  let start = 0;\r\n  let bytes: number[] = [];\r\n\r\n  if(len % 2) { // read 0x581 as 0x0581\r\n    bytes.push(parseInt(hexString.charAt(0), 16));\r\n    ++start;\r\n  }\r\n\r\n  for(let i = start; i < len; i += 2) {\r\n    bytes.push(parseInt(hexString.substr(i, 2), 16));\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bytesToBase64(bytes: number[] | Uint8Array) {\r\n  let mod3: number;\r\n  let result = '';\r\n\r\n  for(let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; ++nIdx) {\r\n    mod3 = nIdx % 3;\r\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24);\r\n    if(mod3 === 2 || nLen - nIdx === 1) {\r\n      result += String.fromCharCode(\r\n        uint6ToBase64(nUint24 >>> 18 & 63),\r\n        uint6ToBase64(nUint24 >>> 12 & 63),\r\n        uint6ToBase64(nUint24 >>> 6 & 63),\r\n        uint6ToBase64(nUint24 & 63)\r\n      );\r\n      nUint24 = 0;\r\n    }\r\n  }\r\n\r\n  return result.replace(/A(?=A$|$)/g, '=');\r\n}\r\n\r\nexport function uint6ToBase64(nUint6: number) {\r\n  return nUint6 < 26\r\n    ? nUint6 + 65\r\n    : nUint6 < 52\r\n      ? nUint6 + 71\r\n      : nUint6 < 62\r\n        ? nUint6 - 4\r\n        : nUint6 === 62\r\n          ? 43\r\n          : nUint6 === 63\r\n            ? 47\r\n            : 65\r\n}\r\n\r\nexport function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  if(len !== bytes2.length) {\r\n    return false;\r\n  }\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    if(bytes1[i] !== bytes2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function bytesXor(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  const bytes: number[] = [];\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = bytes1[i] ^ bytes2[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bytesToArrayBuffer(b: number[]) {\r\n  return (new Uint8Array(b)).buffer;\r\n}\r\n\r\nexport function convertToArrayBuffer(bytes: any | ArrayBuffer | Uint8Array) {\r\n  // Be careful with converting subarrays!!\r\n  if(bytes instanceof ArrayBuffer) {\r\n    return bytes;\r\n  }\r\n  if(bytes.buffer !== undefined &&\r\n    bytes.buffer.byteLength === bytes.length * bytes.BYTES_PER_ELEMENT) {\r\n    return bytes.buffer;\r\n  }\r\n  return bytesToArrayBuffer(bytes);\r\n}\r\n\r\nexport function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\r\n  if((bytes as Uint8Array).buffer !== undefined) {\r\n    return bytes as Uint8Array;\r\n  } else if(typeof(bytes) === 'string') {\r\n    return new TextEncoder().encode(bytes);\r\n  }\r\n\r\n  return new Uint8Array(bytes);\r\n}\r\n\r\nexport function bytesFromArrayBuffer(buffer: ArrayBuffer) {\r\n  const len = buffer.byteLength;\r\n  const byteView = new Uint8Array(buffer);\r\n  const bytes: number[] = [];\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = byteView[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bufferConcat(buffer1: any, buffer2: any) {\r\n  const l1 = buffer1.byteLength || buffer1.length;\r\n  const l2 = buffer2.byteLength || buffer2.length;\r\n  const tmp = new Uint8Array(l1 + l2);\r\n  tmp.set(buffer1 instanceof ArrayBuffer ? new Uint8Array(buffer1) : buffer1, 0);\r\n  tmp.set(buffer2 instanceof ArrayBuffer ? new Uint8Array(buffer2) : buffer2, l1);\r\n\r\n  return tmp.buffer;\r\n}\r\n\r\nexport function bufferConcats(...args: any[]) {\r\n  let length = 0;\r\n  args.forEach(b => length += b.byteLength || b.length);\r\n\r\n  const tmp = new Uint8Array(length);\r\n  \r\n  let lastLength = 0;\r\n  args.forEach(b => {\r\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\r\n    lastLength += b.byteLength || b.length;\r\n  });\r\n\r\n  return tmp/* .buffer */;\r\n}\r\n\r\nexport function bytesFromWordss(input: Uint32Array) {\r\n  const o: number[] = [];\r\n  for(let i = 0, length = input.length * 4; i < length; ++i) {\r\n    o.push((input[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff);\r\n  }\r\n\r\n  return o;\r\n}\r\n\r\nexport function bytesToWordss(input: ArrayBuffer | Uint8Array) {\r\n  let bytes: Uint8Array;\r\n  if(input instanceof ArrayBuffer) bytes = new Uint8Array(input);\r\n  else bytes = input;\r\n\r\n  const words: number[] = [];\r\n  for(let i = 0, len = bytes.length; i < len; ++i) {\r\n    words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8);\r\n  }\r\n\r\n  return new Uint32Array(words);\r\n}\r\n\r\n// * https://stackoverflow.com/a/52827031\r\n/* export const isBigEndian = (() => {\r\n  const array = new Uint8Array(4);\r\n  const view = new Uint32Array(array.buffer);\r\n  return !((view[0] = 1) & array[0]);\r\n})(); */\r\n"],"sourceRoot":""}
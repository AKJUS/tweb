{"version":3,"sources":["webpack:///./src/pages/pageSignUp.ts","webpack:///./src/lib/appManagers/appDownloadManager.ts","webpack:///./src/components/popups/index.ts","webpack:///./src/pages/loginPage.ts","webpack:///./src/helpers/fileName.ts","webpack:///./src/lib/cropper.ts","webpack:///./src/components/popups/avatar.ts"],"names":["authCode","page","then","imported","className","withInputWrapper","titleLangKey","subtitleLangKey","imageDiv","classList","add","title","avatarPreview","document","createElement","id","addIco","append","appProfileManager","default","uploadAvatar","addEventListener","open","_uploadAvatar","handleInput","e","name","nameInputField","value","lastName","lastNameInputField","fullName","trim","wrapEmojiText","label","maxLength","btnSignUp","btnI18n","IntlElement","key","element","inputWrapper","container","input","contains","length","this","disabled","params","phone_number","phone_code_hash","first_name","last_name","update","preloader","invokeApi","response","_","setUserAuth","user","Promise","resolve","reject","inputFile","uploadProfilePhoto","finally","m","mount","removeAttribute","remove","catch","err","type","window","requestAnimationFrame","_authCode","pushToState","appDownloadManager","cacheStorage","downloads","progress","progressCallbacks","uploadId","thumbsCache","photo","details","fileName","callbacks","forEach","callback","download","notifyAll","deferred","cancel","error","Error","cancelDownload","clearDownload","getNewDeferred","fetch","blob","options","location","hasOwnProperty","onError","worker","onlyCache","promise","getFile","size","downloadFile","tryDownload","file","mimeType","ext","split","indexOf","uploadFile","push","url","onRemove","a","href","target","style","position","top","left","body","clickEvent","createEvent","initMouseEvent","dispatchEvent","console","click","setTimeout","discFileName","objectURL","URL","createObjectURL","createDownloadAnchor","revokeObjectURL","media","thumbSize","cache","downloaded","PopupElement","buttons","header","onEscape","hide","back","destroy","onClose","btnClose","removeEventListener","overlayIsActive","removeItem","navigationItem","undefined","onCloseAfterTimeout","checkAnimations","closable","prepend","once","overlayClosable","onOverlayClick","withConfirm","btnConfirm","buttonsDiv","buttonsElements","map","b","button","isDanger","text","innerHTML","langKey","langArgs","isCancel","onPop","pushItem","offsetWidth","addCancelButton","find","LoginPage","querySelector","subtitle","getFileNameByLocation","str","thumb_size","filter","Boolean","join","photo_id","pFlags","big","stickerset","short_name","emoticon","thumb_version","volume_id","local_id","getFileURL","encodeURIComponent","JSON","stringify","originalImage","canvas","cropComponent","cropImage","event_state","cropLeft","cropTop","cropWidth","cropHeight","scaledRatio","init","draggable","Image","src","overlayColor","appendChild","parentNode","maxWidth","width","naturalWidth","CROPWIDTH","offsetHeight","CROPHEIGHT","updateCropSize","updateCropImage","updateContainer","startMoving","resizing","keyHandler","height","imgZoom","zoom","Math","PI","right","bottom","newWidth","floor","clientWidth","newHeight","clientHeight","w","h","offsetLeft","offsetTop","preventDefault","String","fromCharCode","charCode","deltaY","stopPropagation","container_width","container_height","container_left","container_top","mouse_x","clientX","pageX","touches","scrollX","mouse_y","clientY","pageY","scrollY","saveEventState","moving","endMoving","currentTouch","x","y","complete","onload","crop","getContext","drawImage","removeHandlers","super","image","cropper","h6","cropContainer","display","files","contents","show","btnSubmit","ripple","toBlob","darkenCanvas","onCrop","upload","postCanvas","ctx","fillStyle","fillRect"],"mappings":"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","file":"19.dda0c091dfd41d71e9a5.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { CancellablePromise } from '../helpers/cancellablePromise';\r\nimport type { InputFile } from '../layer';\r\nimport type { AuthState } from '../types';\r\nimport Button from '../components/button';\r\nimport InputField from '../components/inputField';\r\nimport { putPreloader } from '../components/misc';\r\nimport PopupAvatar from '../components/popups/avatar';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport I18n, { i18n } from '../lib/langPack';\r\n//import apiManager from '../lib/mtproto/apiManager';\r\nimport apiManager from '../lib/mtproto/mtprotoworker';\r\nimport RichTextProcessor from '../lib/richtextprocessor';\r\nimport LoginPage from './loginPage';\r\nimport Page from './page';\r\nimport blurActiveElement from '../helpers/dom/blurActiveElement';\r\nimport replaceContent from '../helpers/dom/replaceContent';\r\n\r\nlet authCode: AuthState.signUp['authCode'] = null;\r\n\r\nconst onFirstMount = () => import('../lib/appManagers/appProfileManager').then(imported => {\r\n  const page = new LoginPage({\r\n    className: 'page-signUp',\r\n    withInputWrapper: true,\r\n    titleLangKey: 'YourName',\r\n    subtitleLangKey: 'Login.Register.Subtitle'\r\n  });\r\n\r\n  page.imageDiv.classList.add('avatar-edit');\r\n\r\n  page.title.classList.add('fullName');\r\n\r\n  const avatarPreview = document.createElement('canvas');\r\n  avatarPreview.id = 'canvas-avatar';\r\n  avatarPreview.className = 'avatar-edit-canvas';\r\n\r\n  const addIco = document.createElement('span');\r\n  addIco.className = 'tgico tgico-cameraadd';\r\n\r\n  page.imageDiv.append(avatarPreview, addIco);\r\n  \r\n  const appProfileManager = imported.default;\r\n\r\n  let uploadAvatar: () => CancellablePromise<InputFile>;\r\n  page.imageDiv.addEventListener('click', () => {\r\n    new PopupAvatar().open(avatarPreview, (_uploadAvatar) => {\r\n      uploadAvatar = _uploadAvatar;\r\n    });\r\n  });\r\n\r\n  const handleInput = (e: Event) => {\r\n    const name = nameInputField.value || '';\r\n    const lastName = lastNameInputField.value || '';\r\n\r\n    const fullName = name || lastName \r\n      ? (name + ' ' + lastName).trim() \r\n      : '';\r\n    \r\n    if(fullName) replaceContent(page.title, RichTextProcessor.wrapEmojiText(fullName));\r\n    else replaceContent(page.title, i18n('YourName'));\r\n  };\r\n\r\n  let sendAvatar = () => new Promise<void>((resolve, reject) => {\r\n    if(!uploadAvatar) {\r\n      //console.log('User has not selected avatar');\r\n      return resolve();\r\n    }\r\n\r\n    //console.log('invoking uploadFile...');\r\n    uploadAvatar().then((inputFile) => {\r\n      //console.log('uploaded smthn', inputFile);\r\n  \r\n      appProfileManager.uploadProfilePhoto(inputFile).then(resolve, reject);\r\n    }, reject);\r\n  });\r\n\r\n  const nameInputField = new InputField({\r\n    label: 'FirstName',\r\n    maxLength: 70\r\n  });\r\n\r\n  const lastNameInputField = new InputField({\r\n    label: 'LastName',\r\n    maxLength: 64\r\n  });\r\n\r\n  const btnSignUp = Button('btn-primary btn-color-primary');\r\n  const btnI18n = new I18n.IntlElement({key: 'StartMessaging'});\r\n  btnSignUp.append(btnI18n.element);\r\n\r\n  page.inputWrapper.append(nameInputField.container, lastNameInputField.container, btnSignUp);\r\n\r\n  nameInputField.input.addEventListener('input', handleInput);\r\n  lastNameInputField.input.addEventListener('input', handleInput);\r\n\r\n  btnSignUp.addEventListener('click', function(this: typeof btnSignUp, e) {\r\n    if(nameInputField.input.classList.contains('error') || lastNameInputField.input.classList.contains('error')) {\r\n      return false;\r\n    }\r\n\r\n    if(!nameInputField.value.length) {\r\n      nameInputField.input.classList.add('error');\r\n      return false;\r\n    }\r\n\r\n    this.disabled = true;\r\n\r\n    const name = nameInputField.value.trim();\r\n    const lastName = lastNameInputField.value.trim();\r\n\r\n    const params = {\r\n      phone_number: authCode.phone_number,\r\n      phone_code_hash: authCode.phone_code_hash,\r\n      first_name: name,\r\n      last_name: lastName\r\n    };\r\n\r\n    //console.log('invoking auth.signUp with params:', params);\r\n\r\n    btnI18n.update({key: 'PleaseWait'});\r\n    const preloader = putPreloader(this);\r\n\r\n    apiManager.invokeApi('auth.signUp', params)\r\n    .then((response) => {\r\n      //console.log('auth.signUp response:', response);\r\n      \r\n      switch(response._) {\r\n        case 'auth.authorization': // success\r\n          apiManager.setUserAuth(response.user.id);\r\n\r\n          sendAvatar().finally(() => {\r\n            import('./pageIm').then(m => {\r\n              m.default.mount();\r\n            });\r\n          });\r\n          \r\n          break;\r\n        default:\r\n          btnI18n.update({key: response._ as any});\r\n          this.removeAttribute('disabled');\r\n          preloader.remove();\r\n          break;\r\n      }\r\n\r\n      /* (document.body.getElementsByClassName('page-sign')[0] as HTMLDivElement).style.display = 'none';\r\n      pageAuthCode(Object.assign(code, {phoneNumber})); */\r\n    }).catch(err => {\r\n      this.removeAttribute('disabled');\r\n      preloader.remove();\r\n\r\n      switch(err.type) {\r\n        default:\r\n          btnI18n.update({key: err.type});\r\n          break;\r\n      }\r\n    });\r\n  });\r\n\r\n  blurActiveElement();\r\n  return new Promise((resolve) => {\r\n    window.requestAnimationFrame(resolve);\r\n  });\r\n});\r\n\r\nconst page = new Page('page-signUp', true, onFirstMount, (_authCode: typeof authCode) => {\r\n  authCode = _authCode;\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateSignUp', authCode: _authCode});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { DownloadOptions } from \"../mtproto/apiFileManager\";\r\nimport type { ApiError } from \"../mtproto/apiManager\";\r\nimport type { MyDocument } from \"./appDocsManager\";\r\nimport type { MyPhoto } from \"./appPhotosManager\";\r\nimport rootScope from \"../rootScope\";\r\nimport apiManager from \"../mtproto/mtprotoworker\";\r\nimport { deferredPromise, CancellablePromise } from \"../../helpers/cancellablePromise\";\r\nimport { InputFile } from \"../../layer\";\r\nimport referenceDatabase, {ReferenceBytes} from \"../mtproto/referenceDatabase\";\r\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\r\nimport CacheStorageController from \"../cacheStorage\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\n\r\nexport type ResponseMethodBlob = 'blob';\r\nexport type ResponseMethodJson = 'json';\r\nexport type ResponseMethod = ResponseMethodBlob | ResponseMethodJson;\r\n\r\n/* export type DownloadBlob = {promise: Promise<Blob>, controller: AbortController};\r\nexport type DownloadJson = {promise: Promise<any>, controller: AbortController}; */\r\nexport type DownloadBlob = CancellablePromise<Blob>;\r\nexport type DownloadJson = CancellablePromise<any>;\r\n//export type Download = DownloadBlob/*  | DownloadJson */;\r\nexport type Download = DownloadBlob/*  | DownloadJson */;\r\n\r\nexport type Progress = {done: number, fileName: string, total: number, offset: number};\r\nexport type ProgressCallback = (details: Progress) => void;\r\n\r\nexport type ThumbCache = {\r\n  downloaded: number, \r\n  url: string\r\n};\r\n\r\nexport type ThumbsCache = {\r\n  [id: string]: {\r\n    [size: string]: ThumbCache\r\n  }\r\n};\r\n\r\nexport class AppDownloadManager {\r\n  public cacheStorage = new CacheStorageController('cachedFiles');\r\n  private downloads: {[fileName: string]: Download} = {};\r\n  private progress: {[fileName: string]: Progress} = {};\r\n  private progressCallbacks: {[fileName: string]: Array<ProgressCallback>} = {};\r\n\r\n  private uploadId = 0;\r\n\r\n  private thumbsCache: {\r\n    photo: ThumbsCache,\r\n    document: ThumbsCache\r\n  } = {\r\n    photo: {},\r\n    document: {}\r\n  };\r\n\r\n  constructor() {\r\n    rootScope.addEventListener('download_progress', (e) => {\r\n      const details = e as {done: number, fileName: string, total: number, offset: number};\r\n      this.progress[details.fileName] = details;\r\n\r\n      const callbacks = this.progressCallbacks[details.fileName];\r\n      if(callbacks) {\r\n        callbacks.forEach(callback => callback(details));\r\n      }\r\n\r\n      const download = this.downloads[details.fileName];\r\n      if(download) {\r\n        download.notifyAll(details);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getNewDeferred<T>(fileName: string) {\r\n    const deferred = deferredPromise<T>();\r\n\r\n    deferred.cancel = () => {\r\n      //try {\r\n        const error = new Error('Download canceled');\r\n        error.name = 'AbortError';\r\n        \r\n        apiManager.cancelDownload(fileName);\r\n        \r\n        deferred.reject(error);\r\n        deferred.cancel = () => {};\r\n      /* } catch(err) {\r\n\r\n      } */\r\n    };\r\n\r\n    deferred.finally(() => {\r\n      delete this.progress[fileName];\r\n      delete this.progressCallbacks[fileName];\r\n    });\r\n\r\n    deferred.catch(() => {\r\n      this.clearDownload(fileName);\r\n    });\r\n\r\n    return this.downloads[fileName] = deferred as any;\r\n  }\r\n\r\n  private clearDownload(fileName: string) {\r\n    delete this.downloads[fileName];\r\n  }\r\n\r\n  public fakeDownload(fileName: string, value: Blob | string) {\r\n    const deferred = this.getNewDeferred<Blob>(fileName);\r\n    if(typeof(value) === 'string') {\r\n      fetch(value)\r\n      .then(response => response.blob())\r\n      .then(blob => deferred.resolve(blob));\r\n    } else {\r\n      deferred.resolve(value);\r\n    }\r\n\r\n    return deferred;\r\n  }\r\n\r\n  public download(options: DownloadOptions): DownloadBlob {\r\n    const fileName = getFileNameByLocation(options.location, {fileName: options.fileName});\r\n    if(this.downloads.hasOwnProperty(fileName)) return this.downloads[fileName];\r\n\r\n    const deferred = this.getNewDeferred<Blob>(fileName);\r\n\r\n    const onError = (err: ApiError) => {\r\n      deferred.reject(err);\r\n    };\r\n\r\n    const tryDownload = (): Promise<unknown> => {\r\n      //return Promise.resolve();\r\n\r\n      if(!apiManager.worker || options.onlyCache) {\r\n        const promise = this.cacheStorage.getFile(fileName).then((blob) => {\r\n          if(blob.size < options.size) throw 'wrong size';\r\n          else deferred.resolve(blob);\r\n        });\r\n        \r\n        if(options.onlyCache) return promise.catch(onError);\r\n        return promise.catch(() => {\r\n          return apiManager.downloadFile(options).then(deferred.resolve, onError);\r\n        });\r\n      } else {\r\n        /* return apiManager.downloadFile(options).then(res => {\r\n          setTimeout(() => deferred.resolve(res), 5e3);\r\n        }, onError); */\r\n\r\n        return apiManager.downloadFile(options).then(deferred.resolve, onError);\r\n      }\r\n    };\r\n\r\n    tryDownload();\r\n\r\n    //console.log('Will download file:', fileName, url);\r\n    return deferred;\r\n  }\r\n\r\n  public upload(file: File | Blob, fileName?: string) {\r\n    if(!fileName) {\r\n      const mimeType = file?.type;\r\n      if(mimeType) { // the same like apiFileName in appMessagesManager for upload!\r\n        const ext = this.uploadId++ + '.' + mimeType.split('/')[1];\r\n  \r\n        if(['image/jpeg', 'image/png', 'image/bmp'].indexOf(mimeType) >= 0) {\r\n          fileName = 'photo' + ext;\r\n        } else if(mimeType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(mimeType) >= 0) {\r\n          fileName = 'audio' + ext;\r\n        } else if(mimeType.indexOf('video/') === 0) {\r\n          fileName = 'video' + ext;\r\n        } else {\r\n          fileName = 'document' + ext;\r\n        }\r\n        \r\n      } else {\r\n        fileName = 'upload-' + this.uploadId++;\r\n      }\r\n    }\r\n\r\n    const deferred = this.getNewDeferred<InputFile>(fileName);\r\n    apiManager.uploadFile({file, fileName}).then(deferred.resolve, deferred.reject);\r\n\r\n    deferred.finally(() => {\r\n      this.clearDownload(fileName);\r\n    });\r\n\r\n    return deferred as any as CancellablePromise<InputFile>;\r\n  }\r\n\r\n  public getDownload(fileName: string) {\r\n    return this.downloads[fileName];\r\n  }\r\n\r\n  public addProgressCallback(fileName: string, callback: ProgressCallback) {\r\n    const progress = this.progress[fileName];\r\n    (this.progressCallbacks[fileName] ?? (this.progressCallbacks[fileName] = [])).push(callback);\r\n\r\n    if(progress) {\r\n      callback(progress);\r\n    }\r\n  }\r\n\r\n  public createDownloadAnchor(url: string, fileName: string, onRemove?: () => void) {\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = fileName;\r\n    a.target = '_blank';\r\n    \r\n    a.style.position = 'absolute';\r\n    a.style.top = '1px';\r\n    a.style.left = '1px';\r\n    \r\n    document.body.append(a);\r\n  \r\n    try {\r\n      var clickEvent = document.createEvent('MouseEvents');\r\n      clickEvent.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n      a.dispatchEvent(clickEvent);\r\n    } catch (e) {\r\n      console.error('Download click error', e);\r\n      try {\r\n        a.click();\r\n      } catch (e) {\r\n        window.open(url as string, '_blank');\r\n      }\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      a.remove();\r\n      onRemove && onRemove();\r\n    }, 100);\r\n  }\r\n\r\n  /* public downloadToDisc(fileName: string, url: string) {\r\n    this.createDownloadAnchor(url);\r\n  \r\n    return this.download(fileName, url);\r\n  } */\r\n\r\n  public downloadToDisc(options: DownloadOptions, discFileName: string) {\r\n    const download = this.download(options);\r\n    download/* .promise */.then(blob => {\r\n      const objectURL = URL.createObjectURL(blob);\r\n      this.createDownloadAnchor(objectURL, discFileName, () => {\r\n        URL.revokeObjectURL(objectURL);\r\n      });\r\n    });\r\n  \r\n    return download;\r\n  }\r\n\r\n  public getCacheContext(media: MyPhoto | MyDocument, thumbSize: string = 'full'): ThumbCache {\r\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\r\n      thumbSize = 'full';\r\n    } */\r\n\r\n    const cache = this.thumbsCache[media._][media.id] ?? (this.thumbsCache[media._][media.id] = {});\r\n    return cache[thumbSize] ?? (cache[thumbSize] = {downloaded: 0, url: ''});\r\n  }\r\n}\r\n\r\nconst appDownloadManager = new AppDownloadManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appDownloadManager = appDownloadManager);\r\nexport default appDownloadManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { ripple } from \"../ripple\";\r\nimport animationIntersector from \"../animationIntersector\";\r\nimport appNavigationController, { NavigationItem } from \"../appNavigationController\";\r\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\r\n\r\nexport type PopupButton = {\r\n  text?: string,\r\n  callback?: () => void,\r\n  langKey?: LangPackKey,\r\n  langArgs?: any[],\r\n  isDanger?: true,\r\n  isCancel?: true\r\n};\r\n\r\nexport type PopupOptions = Partial<{\r\n  closable: true, \r\n  overlayClosable: true, \r\n  withConfirm: LangPackKey | true, \r\n  body: true\r\n}>;\r\n\r\nexport default class PopupElement {\r\n  protected element = document.createElement('div');\r\n  protected container = document.createElement('div');\r\n  protected header = document.createElement('div');\r\n  protected title = document.createElement('div');\r\n  protected btnClose: HTMLElement;\r\n  protected btnConfirm: HTMLElement;\r\n  protected body: HTMLElement;\r\n\r\n  protected onClose: () => void;\r\n  protected onCloseAfterTimeout: () => void;\r\n  protected onEscape: () => boolean = () => true;\r\n\r\n  protected navigationItem: NavigationItem;\r\n\r\n  constructor(className: string, buttons?: Array<PopupButton>, options: PopupOptions = {}) {\r\n    this.element.classList.add('popup');\r\n    this.element.className = 'popup' + (className ? ' ' + className : '');\r\n    this.container.classList.add('popup-container', 'z-depth-1');\r\n\r\n    this.header.classList.add('popup-header');\r\n    this.title.classList.add('popup-title');\r\n\r\n    this.header.append(this.title);\r\n\r\n    if(options.closable) {\r\n      this.btnClose = document.createElement('span');\r\n      this.btnClose.classList.add('btn-icon', 'popup-close', 'tgico-close');\r\n      //ripple(this.closeBtn);\r\n      this.header.prepend(this.btnClose);\r\n\r\n      this.btnClose.addEventListener('click', this.hide, {once: true});\r\n    }\r\n\r\n    if(options.overlayClosable) {\r\n      const onOverlayClick = (e: MouseEvent) => {\r\n        if(!findUpClassName(e.target, 'popup-container')) {\r\n          this.hide();\r\n          this.element.removeEventListener('click', onOverlayClick);\r\n        }\r\n      };\r\n  \r\n      this.element.addEventListener('click', onOverlayClick);\r\n    }\r\n\r\n    if(options.withConfirm) {\r\n      this.btnConfirm = document.createElement('button');\r\n      this.btnConfirm.classList.add('btn-primary', 'btn-color-primary');\r\n      if(options.withConfirm !== true) {\r\n        this.btnConfirm.append(i18n(options.withConfirm));\r\n      }\r\n      this.header.append(this.btnConfirm);\r\n      ripple(this.btnConfirm);\r\n    }\r\n\r\n    this.container.append(this.header);\r\n    if(options.body) {\r\n      this.body = document.createElement('div');\r\n      this.body.classList.add('popup-body');\r\n      this.container.append(this.body);\r\n    }\r\n\r\n    if(buttons && buttons.length) {\r\n      const buttonsDiv = document.createElement('div');\r\n      buttonsDiv.classList.add('popup-buttons');\r\n\r\n      if(buttons.length === 2) {\r\n        buttonsDiv.classList.add('popup-buttons-row');\r\n      }\r\n  \r\n      const buttonsElements = buttons.map(b => {\r\n        const button = document.createElement('button');\r\n        button.className = 'btn' + (b.isDanger ? ' danger' : ' primary');\r\n\r\n        ripple(button);\r\n        \r\n        if(b.text) {\r\n          button.innerHTML =  b.text;\r\n        } else {\r\n          button.append(i18n(b.langKey, b.langArgs));\r\n        }\r\n  \r\n        if(b.callback) {\r\n          button.addEventListener('click', () => {\r\n            b.callback();\r\n            this.destroy();\r\n          }, {once: true});\r\n        } else if(b.isCancel) {\r\n          button.addEventListener('click', () => {\r\n            this.destroy();\r\n          }, {once: true});\r\n        }\r\n  \r\n        return button;\r\n      });\r\n  \r\n      buttonsDiv.append(...buttonsElements);\r\n      this.container.append(buttonsDiv);\r\n    }\r\n\r\n    this.element.append(this.container);\r\n  }\r\n\r\n  public show() {\r\n    this.navigationItem = {\r\n      type: 'popup',\r\n      onPop: this.destroy,\r\n      onEscape: this.onEscape\r\n    };\r\n\r\n    appNavigationController.pushItem(this.navigationItem);\r\n\r\n    blurActiveElement(); // * hide mobile keyboard\r\n    document.body.append(this.element);\r\n    void this.element.offsetWidth; // reflow\r\n    this.element.classList.add('active');\r\n    rootScope.overlayIsActive = true;\r\n    animationIntersector.checkAnimations(true);\r\n  }\r\n\r\n  public hide = () => {\r\n    appNavigationController.back('popup');\r\n  };\r\n\r\n  private destroy = () => {\r\n    this.onClose && this.onClose();\r\n    this.element.classList.add('hiding');\r\n    this.element.classList.remove('active');\r\n\r\n    if(this.btnClose) this.btnClose.removeEventListener('click', this.hide);\r\n    rootScope.overlayIsActive = false;\r\n\r\n    appNavigationController.removeItem(this.navigationItem);\r\n    this.navigationItem = undefined;\r\n\r\n    setTimeout(() => {\r\n      this.element.remove();\r\n      this.onCloseAfterTimeout && this.onCloseAfterTimeout();\r\n      animationIntersector.checkAnimations(false);\r\n    }, 150);\r\n  };\r\n}\r\n\r\nexport const addCancelButton = (buttons: PopupButton[]) => {\r\n  const button = buttons.find(b => b.isCancel);\r\n  if(!button) {\r\n    buttons.push({\r\n      langKey: 'Cancel',\r\n      isCancel: true\r\n    });\r\n  }\r\n\r\n  return buttons;\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { LangPackKey, i18n } from \"../lib/langPack\";\r\n\r\nexport default class LoginPage {\r\n  public element: HTMLElement;\r\n  public container: HTMLElement;\r\n  public imageDiv: HTMLElement;\r\n  public inputWrapper: HTMLElement;\r\n  public title: HTMLElement;\r\n  public subtitle: HTMLParagraphElement;\r\n\r\n  constructor(options: {\r\n    className: string,\r\n    withInputWrapper?: boolean,\r\n    titleLangKey?: LangPackKey,\r\n    subtitleLangKey?: LangPackKey,\r\n  }) {\r\n    this.element = document.body.querySelector('.' + options.className) as HTMLDivElement;\r\n    //this.element = document.createElement('div');\r\n    //this.element.className = 'page-' + options.className;\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'container center-align';\r\n\r\n    this.imageDiv = document.createElement('div');\r\n    this.imageDiv.className = 'auth-image';\r\n\r\n    this.title = document.createElement('h4');\r\n    if(options.titleLangKey) {\r\n      this.title.append(i18n(options.titleLangKey));\r\n    }\r\n\r\n    this.subtitle = document.createElement('p');\r\n    this.subtitle.className = 'subtitle';\r\n    if(options.subtitleLangKey) {\r\n      this.subtitle.append(i18n(options.subtitleLangKey));\r\n    }\r\n    \r\n    this.container.append(this.imageDiv, this.title, this.subtitle);\r\n\r\n    if(options.withInputWrapper) {\r\n      this.inputWrapper = document.createElement('div');\r\n      this.inputWrapper.className = 'input-wrapper';\r\n      this.container.append(this.inputWrapper);\r\n    }\r\n\r\n    this.element.append(this.container);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { InputFileLocation, InputStickerSet } from \"../layer\";\r\nimport type { DownloadOptions } from \"../lib/mtproto/apiFileManager\";\r\n\r\nconst FILENAME_JOINER = '_';\r\n\r\nexport function getFileNameByLocation(location: InputFileLocation, options?: Partial<{\r\n  fileName: string\r\n}>) {\r\n  const fileName = '';//(options?.fileName || '').split('.');\r\n  const ext = fileName[fileName.length - 1] || '';\r\n\r\n  let str: string;\r\n  switch(location._) {\r\n    case 'inputPhotoFileLocation': {\r\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputDocumentFileLocation': {\r\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputPeerPhotoFileLocation':\r\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\r\n      break;\r\n    \r\n    case 'inputStickerSetThumb': {\r\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id || \r\n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name || \r\n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon || \r\n        location.stickerset._;\r\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputFileLocation': {\r\n      str = location.volume_id + '_' + location.local_id;\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      console.error('Unrecognized location:', location);\r\n      str = '';\r\n      break;\r\n    }\r\n  }\r\n\r\n  return str + (ext ? '.' + ext : ext);\r\n}\r\n\r\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download';\r\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\r\n  //console.log('getFileURL', location);\r\n  //const perf = performance.now();\r\n  const encoded = encodeURIComponent(JSON.stringify(options));\r\n  //console.log('getFileURL encode:', performance.now() - perf, encoded);\r\n\r\n  return '/' + type + '/' + encoded;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nfunction resizeableImage(originalImage: HTMLImageElement, canvas?: HTMLCanvasElement) {\r\n  let cropComponent: HTMLDivElement, \r\n    container: HTMLDivElement, \r\n    cropImage: HTMLImageElement, \r\n    event_state: Partial<{  \r\n      mouse_x: number,   \r\n      mouse_y: number,   \r\n      container_width: number,  \r\n      container_height: number,  \r\n      container_left: number,  \r\n      container_top: number\r\n    }> = {}, \r\n    keyZoomValue = 4.0, \r\n    MINWIDTH = 50, \r\n    MINHEIGHT = 50, \r\n    CROPWIDTH = 200, \r\n    CROPHEIGHT = 200, \r\n    cropLeft = 0, \r\n    cropTop = 0, \r\n    cropWidth = 0, \r\n    cropHeight = 0,\r\n    scaledRatio = 0;\r\n  \r\n  if(originalImage.complete) init();\r\n  else originalImage.onload = init;\r\n  \r\n  function removeHandlers() {\r\n    container.removeEventListener('mousedown', startMoving);\r\n    container.removeEventListener('touchstart', startMoving);\r\n    container.removeEventListener('wheel', resizing);\r\n    \r\n    document.removeEventListener('mouseup', endMoving);\r\n    document.removeEventListener('touchend', endMoving);\r\n    document.removeEventListener('mousemove', moving);\r\n    document.removeEventListener('touchmove', moving);\r\n    document.removeEventListener('keypress', keyHandler);\r\n\r\n    cropComponent.remove();\r\n    container.remove();\r\n    cropImage.remove();\r\n  }\r\n  \r\n  function addHandlers() {\r\n    container.addEventListener('mousedown', startMoving, false);\r\n    container.addEventListener('touchstart', startMoving, false);\r\n    container.addEventListener('wheel', resizing, false);\r\n    \r\n    document.addEventListener('keypress', keyHandler, false);\r\n    //document.querySelector('.btn-crop').addEventListener('click', openCropCanvasImg);\r\n  }\r\n  \r\n  function init() {\r\n    originalImage.classList.add('crop-blur');\r\n    originalImage.draggable = false;\r\n    \r\n    cropImage = new Image();\r\n    cropImage.src = originalImage.src;\r\n    cropImage.draggable = false;\r\n    cropImage.classList.add('crop-overlay-image');\r\n    \r\n    if(!canvas) {\r\n      canvas = document.createElement('canvas');\r\n    }\r\n    \r\n    cropComponent = document.createElement('div');\r\n    cropComponent.classList.add('crop-component');\r\n    \r\n    container = document.createElement('div');\r\n    container.classList.add('crop-overlay');\r\n    \r\n    const overlayColor = document.createElement('div');\r\n    overlayColor.classList.add('crop-overlay-color');\r\n    \r\n    cropComponent.appendChild(container);\r\n    const wrapper = originalImage.parentNode as HTMLElement;\r\n    wrapper.appendChild(cropComponent);\r\n    cropComponent.appendChild(cropImage);\r\n    cropComponent.appendChild(originalImage);\r\n    cropComponent.appendChild(overlayColor);\r\n    container.appendChild(cropImage);\r\n\r\n    cropImage.style.maxWidth = originalImage.width + 'px';\r\n\r\n    scaledRatio = originalImage.naturalWidth / originalImage.offsetWidth;\r\n    \r\n    const left = originalImage.offsetWidth / 2 - CROPWIDTH / 2;\r\n    const top = originalImage.offsetHeight / 2 - CROPHEIGHT / 2;\r\n    \r\n    updateCropSize(CROPWIDTH, CROPHEIGHT);\r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    addHandlers();\r\n    //crop();\r\n  }\r\n  \r\n  function updateCropSize(width: number, height: number) {\r\n    cropWidth = width * scaledRatio;\r\n    cropHeight = height * scaledRatio;\r\n\r\n    container.style.width = width + 'px';\r\n    container.style.height = height + 'px';\r\n  }\r\n  \r\n  function updateCropImage(left: number, top: number) {\r\n    cropTop = top * scaledRatio;\r\n    cropLeft = left * scaledRatio;\r\n\r\n    cropImage.style.top = -top + 'px';\r\n    cropImage.style.left = -left + 'px';\r\n  }\r\n  \r\n  function updateContainer(left: number, top: number) {\r\n    container.style.top = top + 'px';\r\n    container.style.left = left + 'px';\r\n  }\r\n  \r\n  // Save the initial event details and container state\r\n  function saveEventState(e: any) {\r\n    event_state.container_width = container.offsetWidth;\r\n    event_state.container_height = container.offsetHeight;\r\n    \r\n    event_state.container_left = container.offsetLeft;\r\n    event_state.container_top = container.offsetTop;\r\n    \r\n    event_state.mouse_x = (e.clientX || e.pageX || e.touches && e.touches[0].clientX) + window.scrollX;\r\n    event_state.mouse_y = (e.clientY || e.pageY || e.touches && e.touches[0].clientY) + window.scrollY;\r\n  }\r\n  \r\n  function imgZoom(zoom: number) {\r\n    zoom = zoom * Math.PI * 2\r\n    let newWidth = Math.floor(container.clientWidth + zoom), \r\n      newHeight = Math.floor(container.clientHeight + zoom), \r\n      w = cropImage.clientWidth, \r\n      h = cropImage.clientHeight, \r\n      left: number, \r\n      top: number, \r\n      right: number, \r\n      bottom: number;\r\n    \r\n    if(newWidth < MINWIDTH) {\r\n      return;\r\n    } else if(newWidth > w) {\r\n      return;\r\n    }\r\n    \r\n    left = container.offsetLeft - (zoom / 2);\r\n    top = container.offsetTop - (zoom / 2);\r\n    right = left + newWidth;\r\n    bottom = top + newHeight;\r\n    \r\n    if(left < 0) left = 0;\r\n    if(top < 0) top = 0;\r\n\r\n    if(right > w) return;\r\n    if(bottom > h) return;\r\n\r\n    updateCropSize(newWidth, newWidth);\r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    //crop();\r\n  }\r\n  \r\n  function keyHandler(e: KeyboardEvent) {\r\n    e.preventDefault();\r\n    \r\n    switch (String.fromCharCode(e.charCode)) {\r\n      case '+' :\r\n      imgZoom(keyZoomValue);\r\n      break;\r\n      case '-' :\r\n      imgZoom(-keyZoomValue);\r\n      break;\r\n    }\r\n  }\r\n  \r\n  function resizing(e: any) {\r\n    e.preventDefault();\r\n    imgZoom(e.deltaY > 0 ? 1 : -1);\r\n  }\r\n  \r\n  function startMoving(e: MouseEvent | TouchEvent) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    saveEventState(e);\r\n    \r\n    document.addEventListener('mousemove', moving);\r\n    document.addEventListener('touchmove', moving);\r\n    document.addEventListener('mouseup', endMoving);\r\n    document.addEventListener('touchend', endMoving);\r\n  }\r\n  \r\n  function endMoving(e: MouseEvent | TouchEvent) {\r\n    e.preventDefault();\r\n    \r\n    document.removeEventListener('mouseup', endMoving);\r\n    document.removeEventListener('touchend', endMoving);\r\n    document.removeEventListener('mousemove', moving);\r\n    document.removeEventListener('touchmove', moving);\r\n  }\r\n  \r\n  function moving(e: any) {\r\n    let currentTouch = {x: 0, y: 0}, \r\n      left: number, \r\n      top: number, \r\n      w: number, \r\n      h: number;\r\n    \r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    currentTouch.x = e.pageX || e.touches && e.touches[0].pageX;\r\n    currentTouch.y = e.pageY || e.touches && e.touches[0].pageY;\r\n    \r\n    left = currentTouch.x - (event_state.mouse_x - event_state.container_left);\r\n    top = currentTouch.y - (event_state.mouse_y - event_state.container_top);\r\n    w = container.offsetWidth;\r\n    h = container.offsetHeight;\r\n    \r\n    if(left < 0) left = 0;\r\n    else if(left > cropImage.offsetWidth - w) left = cropImage.offsetWidth - w;\r\n\r\n    if(top < 0) top = 0;\r\n    else if(top > cropImage.offsetHeight - h) top = cropImage.offsetHeight - h;\r\n    \r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    //crop();\r\n  }\r\n\r\n  function crop() {\r\n    canvas.width = cropWidth;\r\n    canvas.height = cropHeight;\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(originalImage,\r\n      cropLeft, cropTop,\r\n      cropWidth, cropHeight,\r\n      0, 0,\r\n      cropWidth, cropHeight\r\n    );\r\n  }\r\n  \r\n  return {crop, removeHandlers};\r\n}\r\n\r\nexport default resizeableImage;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDownloadManager from \"../../lib/appManagers/appDownloadManager\";\r\nimport resizeableImage from \"../../lib/cropper\";\r\nimport PopupElement from \".\";\r\nimport { ripple } from \"../ripple\";\r\nimport { _i18n } from \"../../lib/langPack\";\r\nimport { readBlobAsDataURL } from \"../../helpers/blob\";\r\n\r\nexport default class PopupAvatar extends PopupElement {\r\n  private cropContainer: HTMLElement;\r\n  private input: HTMLInputElement;\r\n  private btnSubmit: HTMLElement;\r\n  private h6: HTMLElement;\r\n\r\n  private image = new Image();\r\n\r\n  private canvas: HTMLCanvasElement;\r\n  private blob: Blob;\r\n  private cropper = {\r\n    crop: () => {},\r\n    removeHandlers: () => {}\r\n  };\r\n\r\n  private onCrop: (upload: () => ReturnType<typeof appDownloadManager.upload>) => void;\r\n\r\n  constructor() {\r\n    super('popup-avatar', null, {closable: true});\r\n\r\n    this.h6 = document.createElement('h6');\r\n    _i18n(this.h6, 'Popup.Avatar.Title');\r\n\r\n    this.btnClose.classList.remove('btn-icon');\r\n\r\n    this.header.append(this.h6);\r\n\r\n    this.cropContainer = document.createElement('div');\r\n    this.cropContainer.classList.add('crop');\r\n    this.cropContainer.append(this.image);\r\n\r\n    this.input = document.createElement('input');\r\n    this.input.type = 'file';\r\n    this.input.style.display = 'none';\r\n    this.input.addEventListener('change', (e: any) => {\r\n      const file = e.target.files[0];\r\n      if(!file) {\r\n        return;\r\n      }\r\n\r\n      readBlobAsDataURL(file).then(contents => {\r\n        this.image = new Image();\r\n        this.cropContainer.append(this.image);\r\n        this.image.src = contents;\r\n  \r\n        this.image.onload = () => {\r\n          /* let {w, h} = calcImageInBox(this.image.naturalWidth, this.image.naturalHeight, 460, 554);\r\n          cropContainer.style.width = w + 'px';\r\n          cropContainer.style.height = h + 'px'; */\r\n          this.show();\r\n  \r\n          this.cropper = resizeableImage(this.image, this.canvas);\r\n          this.input.value = '';\r\n        };\r\n      });\r\n    }, false);\r\n\r\n    this.btnSubmit = document.createElement('button');\r\n    this.btnSubmit.className = 'btn-primary btn-color-primary btn-circle btn-crop btn-icon tgico-check z-depth-1';\r\n    ripple(this.btnSubmit);\r\n    this.btnSubmit.addEventListener('click', () => {\r\n      this.cropper.crop();\r\n      this.btnClose.click();\r\n\r\n      this.canvas.toBlob(blob => {\r\n        this.blob = blob; // save blob to send after reg\r\n        this.darkenCanvas();\r\n        this.resolve();\r\n      }, 'image/jpeg', 1);\r\n    });\r\n\r\n    this.container.append(this.cropContainer, this.btnSubmit, this.input);\r\n\r\n    this.onCloseAfterTimeout = () => {\r\n      this.cropper.removeHandlers();\r\n      if(this.image) {\r\n        this.image.remove();\r\n      }\r\n    };\r\n  }\r\n\r\n  private resolve() {\r\n    this.onCrop(() => {\r\n      return appDownloadManager.upload(this.blob);\r\n    });\r\n  }\r\n\r\n  public open(postCanvas: HTMLCanvasElement, onCrop: PopupAvatar['onCrop']) {\r\n    this.canvas = postCanvas;\r\n    this.onCrop = onCrop;\r\n\r\n    this.input.click();\r\n  }\r\n\r\n  public darkenCanvas() {\r\n    let ctx = this.canvas.getContext('2d');\r\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\r\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n}\r\n"],"sourceRoot":""}
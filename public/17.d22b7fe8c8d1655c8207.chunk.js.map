{"version":3,"sources":["webpack:///./src/lib/rootScope.ts","webpack:///./src/helpers/touchSupport.ts","webpack:///./src/components/ripple.ts","webpack:///./src/config/debug.ts","webpack:///./src/helpers/schedulers.ts","webpack:///./src/helpers/schedulers/debounce.ts","webpack:///./src/helpers/cancellablePromise.ts","webpack:///./src/config/modes.ts","webpack:///./src/helpers/eventListenerBase.ts","webpack:///./src/helpers/sequentialDom.ts","webpack:///./src/helpers/dom/isInDOM.ts"],"names":["RootScope","super","_overlayIsActive","myId","idle","isIDLE","deactivated","focusPromise","Promise","resolve","focusResolve","connectionStatus","peerId","this","addEventListener","e","id","status","name","darkModeMediaQuery","window","matchMedia","checkDarkMode","systemTheme","matches","dispatchEvent","setTheme","addListener","err","isNight","getTheme","colorScheme","document","head","querySelector","setAttribute","documentElement","classList","toggle","value","settings","theme","themes","find","t","rootScope","isTouchSupported","DocumentTouch","rippleClickId","ripple","elem","callback","onEnd","prepend","add","r","createElement","handler","contains","drawRipple","clientX","clientY","startTime","Date","now","clickId","duration","getComputedStyle","getPropertyValue","replace","elapsedTime","cb","mutate","remove","delay","Math","max","setTimeout","removeEventListener","touchStartFired","requestAnimationFrame","rect","getBoundingClientRect","clickX","left","clickY","top","size","sqrt","abs","height","width","x","y","style","append","isRippleUnneeded","target","includes","tagName","touchEnd","animationsEnabled","touches","length","once","cancelBubble","stopPropagation","passive","button","dataset","DEBUG","debug","MOUNT_CLASS_TO","self","fn","ms","shouldRunFirst","shouldRunLast","waitingTimeout","args","clearTimeout","throttle","isPending","interval","_args","setInterval","clearInterval","pause","fastRafCallbacks","rafPromise","fastRaf","push","currentCallbacks","undefined","forEach","fastRafPromise","then","doubleRaf","deferredPromise","deferredHelper","isFulfilled","isRejected","notify","notifyAll","lastNotify","listeners","addNotifyListener","deferred","reject","finally","cancel","Object","assign","Modes","test","location","search","indexOf","http","ssl","multipleConnections","asServiceWorker","EventListenerBase","reuseResults","_constructor","listenerResults","options","hasOwnProperty","pop","obj","i","findAndSplice","l","arr","slice","listener","findIndex","sequentialDom","promises","raf","bind","scheduled","kind","promise","scheduleFlush","do","element","read","write","isInDOM","isConnected"],"mappings":"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","file":"17.d22b7fe8c8d1655c8207.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, ConstructorDeclMap } from \"../layer\";\nimport type { MyDocument } from \"./appManagers/appDocsManager\";\nimport type { AppMessagesManager, Dialog, MessagesStorage } from \"./appManagers/appMessagesManager\";\nimport type { Poll, PollResults } from \"./appManagers/appPollsManager\";\nimport type { MyDialogFilter } from \"./storages/filters\";\nimport type { UserTyping } from \"./appManagers/appProfileManager\";\nimport type Chat from \"../components/chat/chat\";\nimport type { UserAuth } from \"./mtproto/mtproto_config\";\nimport type { State, Theme } from \"./appManagers/appStateManager\";\nimport type { MyDraftMessage } from \"./appManagers/appDraftsManager\";\nimport type { PushSubscriptionNotify } from \"./mtproto/webPushApiManager\";\nimport type { PushNotificationObject } from \"./serviceWorker/push\";\nimport type { ConnectionStatusChange } from \"./mtproto/connectionStatus\";\nimport EventListenerBase from \"../helpers/eventListenerBase\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\n\nexport type BroadcastEvents = {\n  'user_update': number,\n  'user_auth': UserAuth,\n  'peer_changed': number,\n  'peer_changing': Chat,\n  'peer_pinned_messages': {peerId: number, mids?: number[], pinned?: boolean, unpinAll?: true},\n  'peer_pinned_hidden': {peerId: number, maxId: number},\n  'peer_typings': {peerId: number, typings: UserTyping[]},\n  'peer_block': {peerId: number, blocked: boolean},\n  'peer_title_edit': number,\n  'peer_bio_edit': number,\n\n  'filter_delete': MyDialogFilter,\n  'filter_update': MyDialogFilter,\n  'filter_order': number[],\n  \n  'dialog_draft': {peerId: number, draft: MyDraftMessage | undefined, index: number},\n  'dialog_unread': {peerId: number},\n  'dialog_flush': {peerId: number},\n  'dialog_drop': {peerId: number, dialog?: Dialog},\n  'dialog_migrate': {migrateFrom: number, migrateTo: number},\n  //'dialog_top': Dialog,\n  'dialog_notify_settings': Dialog,\n  'dialogs_multiupdate': {[peerId: string]: Dialog},\n  'dialogs_archived_unread': {count: number},\n  \n  'history_append': {storage: MessagesStorage, peerId: number, mid: number},\n  'history_update': {storage: MessagesStorage, peerId: number, mid: number},\n  'history_reply_markup': {peerId: number},\n  'history_multiappend': AppMessagesManager['newMessagesToHandle'],\n  'history_delete': {peerId: number, msgs: {[mid: number]: true}},\n  'history_forbidden': number,\n  'history_reload': number,\n  'history_focus': {peerId: number, mid?: number},\n  //'history_request': void,\n  \n  'message_edit': {storage: MessagesStorage, peerId: number, mid: number},\n  'message_views': {mid: number, views: number},\n  'message_sent': {storage: MessagesStorage, tempId: number, tempMessage: any, mid: number},\n  'messages_pending': void,\n  'messages_read': void,\n  'messages_downloaded': {peerId: number, mids: number[]},\n  'messages_media_read': {peerId: number, mids: number[]},\n\n  'replies_updated': Message.message,\n\n  'scheduled_new': {peerId: number, mid: number},\n  'scheduled_delete': {peerId: number, mids: number[]},\n\n  'album_edit': {peerId: number, groupId: string, deletedMids: number[]},\n\n  'stickers_installed': StickerSet.stickerSet,\n  'stickers_deleted': StickerSet.stickerSet,\n\n  'audio_play': {doc: MyDocument, mid: number, peerId: number},\n  'audio_pause': void,\n  \n  'state_cleared': void,\n  'state_synchronized': number | void,\n  'state_synchronizing': number | void,\n  \n  'contacts_update': number,\n  'avatar_update': number,\n  'chat_full_update': number,\n  'poll_update': {poll: Poll, results: PollResults},\n  'chat_update': number,\n  'invalidate_participants': number,\n  //'channel_settings': {channelId: number},\n  'webpage_updated': {id: string, msgs: number[]},\n\n  'download_progress': any,\n  'connection_status_change': ConnectionStatusChange,\n  'settings_updated': {key: string, value: any},\n  'draft_updated': {peerId: number, threadId: number, draft: MyDraftMessage | undefined},\n\n  'event-heavy-animation-start': void,\n  'event-heavy-animation-end': void,\n\n  'im_mount': void,\n  'im_tab_change': number,\n\n  'idle': boolean,\n\n  'overlay_toggle': boolean,\n\n  'background_change': void,\n\n  'privacy_update': Update.updatePrivacy,\n\n  'notify_settings': Update.updateNotifySettings,\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\n\n  'language_change': string,\n  \n  'theme_change': void,\n\n  'instance_activated': void,\n  'instance_deactivated': void,\n\n  'push_notification_click': PushNotificationObject,\n  'push_init': PushSubscriptionNotify,\n  'push_subscribe': PushSubscriptionNotify,\n  'push_unsubscribe': PushSubscriptionNotify,\n\n  'emoji_recent': string\n};\n\nexport class RootScope extends EventListenerBase<{\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\n} & {\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\n}> {\n  private _overlayIsActive: boolean = false;\n  public myId = 0;\n  public idle = {\n    isIDLE: true,\n    deactivated: false,\n    focusPromise: Promise.resolve(),\n    focusResolve: () => {}\n  };\n  public connectionStatus: {[name: string]: ConnectionStatusChange} = {};\n  public settings: State['settings'];\n  public peerId = 0;\n  public systemTheme: Theme['name'];\n\n  constructor() {\n    super();\n\n    this.addEventListener('peer_changed', (peerId) => {\n      this.peerId = peerId;\n    });\n\n    this.addEventListener('user_auth', (e) => {\n      this.myId = e.id;\n    });\n\n    this.addEventListener('connection_status_change', (e) => {\n      const status = e;\n      this.connectionStatus[e.name] = status;\n    });\n\n    this.addEventListener('idle', (isIDLE) => {\n      if(isIDLE) {\n        this.idle.focusPromise = new Promise((resolve) => {\n          this.idle.focusResolve = resolve;\n        });\n      } else {\n        this.idle.focusResolve();\n      }\n    });\n  }\n\n  public setThemeListener() {\n    try {\n      const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      const checkDarkMode = () => {\n        //const theme = this.getTheme();\n        this.systemTheme = darkModeMediaQuery.matches ? 'night' : 'day';\n        //const newTheme = this.getTheme();\n\n        if(this.myId) {\n          this.dispatchEvent('theme_change');\n        } else {\n          this.setTheme();\n        }\n      };\n\n      if('addEventListener' in darkModeMediaQuery) {\n        darkModeMediaQuery.addEventListener('change', checkDarkMode);\n      } else if('addListener' in darkModeMediaQuery) {\n        (darkModeMediaQuery as any).addListener(checkDarkMode);\n      }\n\n      checkDarkMode();\n    } catch(err) {\n\n    }\n  }\n\n  public setTheme() {\n    const isNight = this.getTheme().name === 'night';\n    const colorScheme = document.head.querySelector('[name=\"color-scheme\"]');\n    if(colorScheme) {\n      colorScheme.setAttribute('content', isNight ? 'dark' : 'light');\n    }\n\n    document.documentElement.classList.toggle('night', isNight);\n  }\n\n  get overlayIsActive() {\n    return this._overlayIsActive;\n  }\n\n  set overlayIsActive(value: boolean) {\n    this._overlayIsActive = value;\n    this.dispatchEvent('overlay_toggle', value);\n  }\n\n  public getTheme(name: Theme['name'] = this.settings.theme === 'system' ? this.systemTheme : this.settings.theme) {\n    return this.settings.themes.find(t => t.name === name);\n  }\n}\n\nconst rootScope = new RootScope();\nMOUNT_CLASS_TO.rootScope = rootScope;\nexport default rootScope;\n\n/* rootScope.addEventListener('album_edit', (e) => {\n  \n});\n\nrootScope.addEventListener<'album_edit'>('album_edit', (e) => {\n  \n}); */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// @ts-ignore\nexport const isTouchSupported = ('ontouchstart' in window) || (window.DocumentTouch && document instanceof DocumentTouch)/*  || true */;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport sequentialDom from \"../helpers/sequentialDom\";\nimport {isTouchSupported} from \"../helpers/touchSupport\";\nimport rootScope from \"../lib/rootScope\";\n\nlet rippleClickId = 0;\nexport function ripple(elem: HTMLElement, callback: (id: number) => Promise<boolean | void> = () => Promise.resolve(), onEnd: (id: number) => void = null, prepend = false) {\n  //return;\n  if(elem.querySelector('.c-ripple')) return;\n  elem.classList.add('rp');\n  \n  let r = document.createElement('div');\n  r.classList.add('c-ripple');\n\n  const isSquare = elem.classList.contains('rp-square');\n  if(isSquare) {\n    r.classList.add('is-square');\n  }\n\n  elem[prepend ? 'prepend' : 'append'](r);\n\n  let handler: () => void;\n  //let animationEndPromise: Promise<number>;\n  const drawRipple = (clientX: number, clientY: number) => {\n    const startTime = Date.now();\n    const elem = document.createElement('div');\n\n    const clickId = rippleClickId++;\n    \n    //console.log('ripple drawRipple');\n    \n    const duration = +window.getComputedStyle(r).getPropertyValue('--ripple-duration').replace('s', '') * 1000;\n    //console.log('ripple duration', duration);\n\n    handler = () => {\n    //handler = () => animationEndPromise.then((duration) => {\n      //console.log('ripple animation was:', duration);\n\n      //const duration = isSquare || mediaSizes.isMobile ? 200 : 700;\n      //return;\n      let elapsedTime = Date.now() - startTime;\n      const cb = () => {\n        //console.log('ripple elapsedTime total pre-remove:', Date.now() - startTime);\n        sequentialDom.mutate(() => {\n          elem.remove();\n        });\n        \n        if(onEnd) onEnd(clickId);\n      };\n      if(elapsedTime < duration) {\n        let delay = Math.max(duration - elapsedTime, duration / 2);\n        setTimeout(() => elem.classList.add('hiding'), Math.max(delay - duration / 2, 0));\n\n        setTimeout(cb, delay);\n      } else {\n        elem.classList.add('hiding');\n        setTimeout(cb, duration / 2);\n      }\n\n      if(!isTouchSupported) {\n        window.removeEventListener('contextmenu', handler);\n      }\n\n      handler = null;\n      touchStartFired = false;\n    };\n    //});\n\n    callback && callback(clickId);\n\n    /* callback().then((bad) => {\n      if(bad) {\n        span.remove();\n        return;\n      } */\n      \n      //console.log('ripple after promise', Date.now() - startTime);\n      //console.log('ripple tooSlow:', tooSlow);\n      /* if(tooSlow) {\n        span.remove();\n        return;\n      } */\n\n      window.requestAnimationFrame(() => {\n        const rect = r.getBoundingClientRect();\n        elem.classList.add('c-ripple__circle');\n\n        const clickX = clientX - rect.left;\n        const clickY = clientY - rect.top;\n\n        const radius = Math.sqrt((Math.abs(clickY - rect.height / 2) + rect.height / 2) ** 2 + (Math.abs(clickX - rect.width / 2) + rect.width / 2) ** 2);\n        const size = radius;\n\n        // center of circle\n        const x = clickX - size / 2;\n        const y = clickY - size / 2;\n\n        //console.log('ripple click', offsetFromCenter, size, clickX, clickY);\n\n        elem.style.width = elem.style.height = size + 'px';\n        elem.style.left = x + 'px';\n        elem.style.top = y + 'px';\n\n        // нижний код выполняется с задержкой\n        /* animationEndPromise = new Promise((resolve) => {\n          span.addEventListener('animationend', () => {\n            // 713 -> 700\n            resolve(((Date.now() - startTime) / 100 | 0) * 100);\n          }, {once: true});\n        }); */\n        \n        // нижний код не всегда включает анимацию ПРИ КЛИКЕ НА ТАЧПАД БЕЗ ТАПТИК ЭНЖИНА\n        /* span.style.display = 'none';\n        r.append(span);\n        duration = +window.getComputedStyle(span).getPropertyValue('animation-duration').replace('s', '') * 1000;\n        span.style.display = ''; */\n\n        r.append(elem);\n\n        //r.classList.add('active');\n        //handler();\n      });\n    //});\n  };\n\n  const isRippleUnneeded = (e: Event) => e.target !== elem && (\n      ['BUTTON', 'A'].includes((e.target as HTMLElement).tagName) \n      || findUpClassName(e.target as HTMLElement, 'c-ripple') !== r\n    );\n\n  // TODO: rename this variable\n  let touchStartFired = false;\n  if(isTouchSupported) {\n    let touchEnd = () => {\n      handler && handler();\n    };\n  \n    elem.addEventListener('touchstart', (e) => {\n      if(!rootScope.settings.animationsEnabled) {\n        return;\n      }\n\n      //console.log('ripple touchstart', e);\n      if(e.touches.length > 1 || touchStartFired || isRippleUnneeded(e)) {\n        return;\n      }\n      \n      //console.log('touchstart', e);\n      touchStartFired = true;\n  \n      let {clientX, clientY} = e.touches[0];\n      drawRipple(clientX, clientY);\n      elem.addEventListener('touchend', touchEnd, {once: true});\n  \n      window.addEventListener('touchmove', (e) => {\n        e.cancelBubble = true;\n        e.stopPropagation();\n        touchEnd();\n        elem.removeEventListener('touchend', touchEnd);\n      }, {once: true});\n    }, {passive: true});\n  } else {\n    elem.addEventListener('mousedown', (e) => {\n      if(![0, 2].includes(e.button)) { // only left and right buttons\n        return;\n      }\n\n      if(!rootScope.settings.animationsEnabled) {\n        return;\n      }\n      //console.log('ripple mousedown', e, e.target, findUpClassName(e.target as HTMLElement, 'c-ripple') === r);\n\n      if(elem.dataset.ripple === '0' || isRippleUnneeded(e)) {\n        return;\n      } else if(touchStartFired) {\n        touchStartFired = false;\n        return;\n      }\n  \n      let {clientX, clientY} = e;\n      drawRipple(clientX, clientY);\n      window.addEventListener('mouseup', handler, {once: true, passive: true});\n      window.addEventListener('contextmenu', handler, {once: true, passive: true});\n    }, {passive: true});\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from \"./modes\";\n\nexport const DEBUG = process.env.NODE_ENV !== 'production' || Modes.debug;\nconst ctx: any = typeof(window) !== 'undefined' ? window : self;\nexport const MOUNT_CLASS_TO: any = DEBUG || true/*  && false */ ? ctx : {};\nexport default DEBUG;\n\n//let m = DEBUG;\n/* if(!DEBUG) {\n  ctx.sandpitTurtle = () => {\n    //if(!m) {\n      for(let i in MOUNT_CLASS_TO) {\n        ctx[i] = MOUNT_CLASS_TO[i];\n      }\n      //m = true;\n    //}\n  \n    //DEBUG = !DEBUG;\n  };\n} */\n\n/* export const superDebug = (object: any, key: string) => {\n  var d = object[key];\n  var beforeStr = '', afterStr = '';\n  for(var r of d) {\n    beforeStr += r.before.hex + '\\n';\n    afterStr += r.after.hex + '\\n';\n  }\n\n  beforeStr = beforeStr.trim();\n  afterStr = afterStr.trim();\n  //var beforeStr = d.map(r => r.before.hex).join('\\n');\n  //var afterStr = d.map(r => r.after.hex).join('\\n');\n\n  var dada = (name: string, str: string) => {\n    var a = document.createElement('a');\n    a.target = '_blank';\n    a.download = name + '.txt';\n    a.href = URL.createObjectURL(new Blob([str], {\n      type: 'text/plain'\n    }));\n    document.body.append(a);\n    a.click();\n  };\n\n  dada(key + '_' + 'before', beforeStr);\n  dada(key + '_' + 'after', afterStr);\n}\n\nMOUNT_CLASS_TO.superDebug = superDebug; */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// * Jolly Cobra's schedulers\nimport { AnyToVoidFunction, NoneToVoidFunction } from \"../types\";\nimport _debounce from './schedulers/debounce';\n\n//type Scheduler = typeof requestAnimationFrame | typeof onTickEnd | typeof runNow;\n\nconst debounce = _debounce;\nexport {debounce};\n\nexport function throttle<F extends AnyToVoidFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true,\n) {\n  let interval: number | null = null;\n  let isPending: boolean;\n  let args: Parameters<F>;\n\n  return (..._args: Parameters<F>) => {\n    isPending = true;\n    args = _args;\n\n    if(!interval) {\n      if(shouldRunFirst) {\n        isPending = false;\n        // @ts-ignore\n        fn(...args);\n      }\n\n      interval = setInterval(() => {\n        if (!isPending) {\n          clearInterval(interval!);\n          interval = null;\n          return;\n        }\n\n        isPending = false;\n        // @ts-ignore\n        fn(...args);\n      }, ms) as any;\n    }\n  };\n}\n\n/* export function throttleWithRaf<F extends AnyToVoidFunction>(fn: F) {\n  return throttleWith(fastRaf, fn);\n}\n\nexport function throttleWithTickEnd<F extends AnyToVoidFunction>(fn: F) {\n  return throttleWith(onTickEnd, fn);\n}\n\nexport function throttleWithNow<F extends AnyToVoidFunction>(fn: F) {\n  return throttleWith(runNow, fn);\n}\n\nexport function throttleWith<F extends AnyToVoidFunction>(schedulerFn: Scheduler, fn: F) {\n  let waiting = false;\n  let args: Parameters<F>;\n\n  return (..._args: Parameters<F>) => {\n    args = _args;\n\n    if (!waiting) {\n      waiting = true;\n\n      schedulerFn(() => {\n        waiting = false;\n        // @ts-ignore\n        fn(...args);\n      });\n    }\n  };\n}\n\nexport function onTickEnd(cb: NoneToVoidFunction) {\n  Promise.resolve().then(cb);\n}\n\nfunction runNow(fn: NoneToVoidFunction) {\n  fn();\n} */\n\nexport const pause = (ms: number) => new Promise<void>((resolve) => {\n  setTimeout(resolve, ms);\n});\n\nlet fastRafCallbacks: NoneToVoidFunction[] | undefined;\nexport function fastRaf(callback: NoneToVoidFunction) {\n  if(!fastRafCallbacks) {\n    fastRafCallbacks = [callback];\n\n    requestAnimationFrame(() => {\n      const currentCallbacks = fastRafCallbacks!;\n      fastRafCallbacks = undefined;\n      currentCallbacks.forEach((cb) => cb());\n    });\n  } else {\n    fastRafCallbacks.push(callback);\n  }\n}\n\nlet rafPromise: Promise<DOMHighResTimeStamp>;\nexport function fastRafPromise() {\n  if(rafPromise) return rafPromise;\n\n  rafPromise = new Promise(requestAnimationFrame);\n  rafPromise.then(() => {\n    rafPromise = undefined;\n  });\n\n  return rafPromise;\n}\n\nexport function doubleRaf() {\n  return new Promise<void>((resolve) => {\n    fastRaf(() => {\n      fastRaf(resolve);\n    });\n  });\n}\n","// * Jolly Cobra's schedulers\n\nimport { AnyToVoidFunction } from \"../../types\";\n\nexport default function debounce<F extends AnyToVoidFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true,\n  shouldRunLast = true,\n) {\n  let waitingTimeout: number | null = null;\n\n  return (...args: Parameters<F>) => {\n    if(waitingTimeout) {\n      clearTimeout(waitingTimeout);\n      waitingTimeout = null;\n    } else if(shouldRunFirst) {\n      // @ts-ignore\n      fn(...args);\n    }\n\n    waitingTimeout = setTimeout(() => {\n      if(shouldRunLast) {\n        // @ts-ignore\n        fn(...args);\n      }\n\n      waitingTimeout = null;\n    }, ms) as any;\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport interface CancellablePromise<T> extends Promise<T> {\n  resolve?: (value: T) => void,\n  reject?: (...args: any[]) => void,\n  cancel?: () => void,\n\n  notify?: (...args: any[]) => void,\n  notifyAll?: (...args: any[]) => void,\n  lastNotify?: any,\n  listeners?: Array<(...args: any[]) => void>,\n  addNotifyListener?: (callback: (...args: any[]) => void) => void,\n\n  isFulfilled?: boolean,\n  isRejected?: boolean\n}\n\nexport function deferredPromise<T>() {\n  let deferredHelper: any = {\n    isFulfilled: false, \n    isRejected: false,\n\n    notify: () => {}, \n    notifyAll: (...args: any[]) => {\n      deferredHelper.lastNotify = args;\n      deferredHelper.listeners.forEach((callback: any) => callback(...args));\n    }, \n\n    lastNotify: undefined,\n    listeners: [],\n    addNotifyListener: (callback: (...args: any[]) => void) => {\n      if(deferredHelper.lastNotify) {\n        callback(...deferredHelper.lastNotify);\n      }\n\n      deferredHelper.listeners.push(callback);\n    }\n  };\n\n  let deferred: CancellablePromise<T> = new Promise<T>((resolve, reject) => {\n    deferredHelper.resolve = (value: T) => {\n      if(deferred.isFulfilled) return;\n\n      deferred.isFulfilled = true;\n      resolve(value);\n    };\n    \n    deferredHelper.reject = (...args: any[]) => {\n      if(deferred.isRejected) return;\n      \n      deferred.isRejected = true;\n      reject(...args);\n    };\n  });\n\n  // @ts-ignore\n  /* deferred.then = (resolve: (value: T) => any, reject: (...args: any[]) => any) => {\n    const n = deferredPromise<ReturnType<typeof resolve>>();\n    \n  }; */\n\n  deferred.finally(() => {\n    deferred.notify = null;\n    deferred.listeners.length = 0;\n    deferred.lastNotify = null;\n\n    if(deferred.cancel) {\n      deferred.cancel = () => {};\n    }\n  });\n\n  Object.assign(deferred, deferredHelper);\n\n  return deferred;\n}","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nconst Modes = {\n  test: location.search.indexOf('test=1') > 0/*  || true */,\n  debug: location.search.indexOf('debug=1') > 0,\n  http: false, //location.search.indexOf('http=1') > 0,\n  ssl: true, // location.search.indexOf('ssl=1') > 0 || location.protocol === 'https:' && location.search.indexOf('ssl=0') === -1,\n  multipleConnections: true,\n  asServiceWorker: false\n};\n\n                  \n                             \n          \n\nexport default Modes;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n//import { MOUNT_CLASS_TO } from \"../config/debug\";\nimport type { ArgumentTypes, SuperReturnType } from \"../types\";\n\n// class EventSystem {\n//   wm: WeakMap<any, Record<any, Set<any>>> = new WeakMap();\n\n//   add(target: any, event: any, listener: any) {\n//     let listeners = this.wm.get(target);\n//     if (listeners === undefined) {\n//         listeners = {};\n//     }\n//     let listenersForEvent = listeners[event];\n//     if (listenersForEvent === undefined) {\n//         listenersForEvent = new Set();\n//     }\n//     listenersForEvent.add(listener);\n//     listeners[event] = listenersForEvent;\n//     //target.addEventListener(event, listener);\n//     this.wm.set(target, listeners);\n//   };\n\n//   remove(target: any, event: any, listener: any) {\n//     let listeners = this.wm.get(target);\n//     if (!listeners) return;\n//     let listenersForEvent = listeners[event];\n//     if (!listenersForEvent) return;\n//     listenersForEvent.delete(listener);\n//   };\n  \n//   /* fire(target, event) {\n//      let listeners = this.wm.get(target);\n//      if (!listeners) return;\n//      let listenersForEvent = listeners[event];\n//      if (!listenersForEvent) return;\n//      for (let handler of handlers) {\n//          setTimeout(handler, 0, event, target); // we use a setTimeout here because we want event triggering to be asynchronous. \n//      }\n//   }; */\n// }\n\n// console.log = () => {};\n\n// const e = new EventSystem();\n// MOUNT_CLASS_TO.e = e;\n\n/**\n * Better not to remove listeners during setting\n * Should add listener callback only once\n */\n\n// type EventLitenerCallback<T> = (data: T) => \n// export default class EventListenerBase<Listeners extends {[name: string]: Function}> {\nexport default class EventListenerBase<Listeners extends Record<string, Function>> {\n  protected listeners: Partial<{\n    [k in keyof Listeners]: Array<{callback: Listeners[k], options: boolean | AddEventListenerOptions}>\n  }>;\n  protected listenerResults: Partial<{\n    [k in keyof Listeners]: ArgumentTypes<Listeners[k]>\n  }>;\n\n  private reuseResults: boolean;\n\n  constructor(reuseResults?: boolean) {\n    this._constructor(reuseResults);\n  }\n\n  public _constructor(reuseResults = false): any {\n    this.reuseResults = reuseResults;\n    this.listeners = {};\n    this.listenerResults = {};\n  }\n\n  public addEventListener<T extends keyof Listeners>(name: T, callback: Listeners[T], options?: boolean | AddEventListenerOptions) {\n    (this.listeners[name] ?? (this.listeners[name] = [])).push({callback, options}); // ! add before because if you don't, you won't be able to delete it from callback\n\n    if(this.listenerResults.hasOwnProperty(name)) {\n      callback(...this.listenerResults[name]);\n      \n      if((options as AddEventListenerOptions)?.once) {\n        this.listeners[name].pop();\n        return;\n      }\n    }\n    \n    //e.add(this, name, {callback, once});\n  }\n\n  public addMultipleEventsListeners(obj: {\n    [name in keyof Listeners]?: Listeners[name]\n  }) {\n    for(const i in obj) {\n      this.addEventListener(i, obj[i]);\n    }\n  }\n\n  public removeEventListener<T extends keyof Listeners>(name: T, callback: Listeners[T], options?: boolean | AddEventListenerOptions) {\n    if(this.listeners[name]) {\n      this.listeners[name].findAndSplice(l => l.callback === callback);\n    }\n    //e.remove(this, name, callback);\n  }\n\n  // * must be protected, but who cares\n  public dispatchEvent<T extends keyof Listeners>(name: T, ...args: ArgumentTypes<Listeners[T]>) {\n    if(this.reuseResults) {\n      this.listenerResults[name] = args;\n    }\n\n    const arr: Array<SuperReturnType<Listeners[typeof name]>> = [];\n\n    /* let a = e.wm.get(this)[name];\n    if(!a) return arr;\n    const listeners = [...a]; */\n    const listeners = this.listeners[name];\n    if(listeners) {\n      // ! this one will guarantee execution even if delete another listener during setting\n      const left = listeners.slice();\n      left.forEach((listener) => {\n        const index = listeners.findIndex((l) => l.callback === listener.callback);\n        if(index === -1) {\n          return;\n        }\n\n        arr.push(listener.callback(...args));\n\n        if((listener.options as AddEventListenerOptions)?.once) {\n          this.removeEventListener(name, listener.callback);\n        }\n      });\n\n      /* for(let i = 0, length = listeners.length; i < length; ++i) {\n        const listener = listeners[i];\n        arr.push(listener.callback(...args));\n\n        if(listener.once) {\n          listeners.splice(i, 1);\n          --i;\n          --length;\n        }\n      } */\n    }\n\n    return arr;\n  }\n\n  public cleanup() {\n    this.listeners = {}; \n    this.listenerResults = {};\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { fastRaf } from \"./schedulers\";\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport isInDOM from \"./dom/isInDOM\";\n\nclass SequentialDom {\n  private promises: Partial<{\n    read: CancellablePromise<void>,\n    write: CancellablePromise<void>\n  }> = {};\n  private raf = fastRaf.bind(null);\n  private scheduled = false;\n\n  private do(kind: keyof SequentialDom['promises'], callback?: VoidFunction) {\n    let promise = this.promises[kind];\n    if(!promise) {\n      this.scheduleFlush();\n      promise = this.promises[kind] = deferredPromise<void>();\n    }\n\n    if(callback !== undefined) {\n      promise.then(() => callback());\n    }\n    \n    return promise;\n  }\n\n  public measure(callback?: VoidFunction) {\n    return this.do('read', callback);\n  }\n\n  public mutate(callback?: VoidFunction) {\n    return this.do('write', callback);\n  }\n\n  /**\n   * Will fire instantly if element is not connected\n   * @param element \n   * @param callback \n   */\n  public mutateElement(element: HTMLElement, callback?: VoidFunction) {\n    const promise = isInDOM(element) ? this.mutate() : Promise.resolve();\n\n    if(callback !== undefined) {\n      promise.then(() => callback());\n    }\n\n    return promise;\n  }\n\n  private scheduleFlush() {\n    if(!this.scheduled) {\n      this.scheduled = true;\n\n      this.raf(() => {\n        this.promises.read && this.promises.read.resolve();\n        this.promises.write && this.promises.write.resolve();\n\n        this.scheduled = false;\n        this.promises = {};\n      });\n    }\n  }\n}\n\nconst sequentialDom = new SequentialDom();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.sequentialDom = sequentialDom);\nexport default sequentialDom;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n/* export function isInDOM(element: Element, parentNode?: HTMLElement): boolean {\n  if(!element) {\n    return false;\n  }\n\n  parentNode = parentNode || document.body;\n  if(element === parentNode) {\n    return true;\n  }\n  return isInDOM(element.parentNode as HTMLElement, parentNode);\n} */\nexport default function isInDOM(element: Element): boolean {\n  return element?.isConnected;\n}\n"],"sourceRoot":""}
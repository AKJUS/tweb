{"version":3,"sources":["webpack:///./src/pages/pageAuthCode.ts","webpack:///./src/components/monkeys/tracking.ts","webpack:///./src/components/codeInputField.ts"],"names":["codeInput","authCode","headerElement","sentTypeElement","page","CODELENGTH","type","length","codeInputField","label","name","onFill","code","submitCode","input","pageEl","querySelector","append","container","addEventListener","mount","cleanup","setTimeout","monkey","remove","setAttribute","params","phone_number","phone_code_hash","phone_code","invokeApi","ignoreErrors","then","response","_","setUserAuth","user","id","m","default","catch","err","good","handled","value","classList","add","innerText","select","removeAttribute","imageDiv","size","isMobile","load","_authCode","evt","document","createEvent","initEvent","dispatchEvent","getElementsByClassName","key","args","pushToState","sentCode","focus","TrackingMonkey","inputField","max","needFrame","this","createElement","playAnimation","e","animation","frame","Math","min","round","idleAnimation","stop","canvas","style","display","direction","setDirection","setSpeed","play","loadPromise","Promise","all","loadAnimationFromURL","loop","autoplay","width","height","waitForFirstFrame","_animation","currentFrame","pause","CodeInputField","options","super","plainText","autocomplete","lastLength","setLabel","replace","slice","setValueSilently"],"mappings":"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","file":"23.a0f9d9dfc644e413a4cf.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport mediaSizes from '../helpers/mediaSizes';\r\nimport { AuthSentCode, AuthSentCodeType, AuthSignIn } from '../layer';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport apiManager from '../lib/mtproto/mtprotoworker';\r\nimport Page from './page';\r\nimport pageSignIn from './pageSignIn';\r\nimport TrackingMonkey from '../components/monkeys/tracking';\r\nimport CodeInputField from '../components/codeInputField';\r\nimport { i18n, LangPackKey } from '../lib/langPack';\r\nimport { randomLong } from '../helpers/random';\r\nimport replaceContent from '../helpers/dom/replaceContent';\r\n\r\nlet authCode: AuthSentCode.authSentCode = null;\r\n\r\nlet headerElement: HTMLHeadElement = null;\r\nlet sentTypeElement: HTMLParagraphElement = null;\r\nlet codeInput: HTMLInputElement;\r\n\r\nlet onFirstMount = (): Promise<any> => {\r\n  const CODELENGTH = (authCode.type as AuthSentCodeType.authSentCodeTypeApp).length;\r\n\r\n  const codeInputField = new CodeInputField({\r\n    label: 'Code',\r\n    name: randomLong(),\r\n    length: CODELENGTH,\r\n    onFill: (code) => {\r\n      submitCode(code);\r\n    }\r\n  });\r\n\r\n  codeInput = codeInputField.input as HTMLInputElement;\r\n\r\n  page.pageEl.querySelector('.input-wrapper').append(codeInputField.container);\r\n\r\n  const editButton = page.pageEl.querySelector('.phone-edit') as HTMLElement;\r\n\r\n  editButton.addEventListener('click', function() {\r\n    return pageSignIn.mount();\r\n  });\r\n\r\n  const cleanup = () => {\r\n    setTimeout(() => {\r\n      monkey.remove();\r\n    }, 300);\r\n  };\r\n\r\n  const submitCode = (code: string) => {\r\n    codeInput.setAttribute('disabled', 'true');\r\n\r\n    const params: AuthSignIn = {\r\n      phone_number: authCode.phone_number,\r\n      phone_code_hash: authCode.phone_code_hash,\r\n      phone_code: code\r\n    };\r\n\r\n    //console.log('invoking auth.signIn with params:', params);\r\n\r\n    apiManager.invokeApi('auth.signIn', params, {ignoreErrors: true})\r\n    .then((response) => {\r\n      //console.log('auth.signIn response:', response);\r\n      \r\n      switch(response._) {\r\n        case 'auth.authorization':\r\n          apiManager.setUserAuth(response.user.id);\r\n\r\n          import('./pageIm').then(m => {\r\n            m.default.mount();\r\n          });\r\n          cleanup();\r\n          break;\r\n        case 'auth.authorizationSignUpRequired':\r\n          //console.log('Registration needed!');\r\n\r\n          import('./pageSignUp').then(m => {\r\n            m.default.mount({\r\n              'phone_number': authCode.phone_number,\r\n              'phone_code_hash': authCode.phone_code_hash\r\n            });\r\n          });\r\n\r\n          cleanup();\r\n          break;\r\n        /* default:\r\n          codeInput.innerText = response._;\r\n          break; */\r\n      }\r\n    }).catch(async(err) => {\r\n      let good = false;\r\n      switch(err.type) {\r\n        case 'SESSION_PASSWORD_NEEDED':\r\n          //console.warn('pageAuthCode: SESSION_PASSWORD_NEEDED');\r\n          good = true;\r\n          err.handled = true;\r\n          await (await import('./pagePassword')).default.mount(); // lol\r\n          setTimeout(() => {\r\n            codeInput.value = '';\r\n          }, 300);\r\n          break;\r\n        case 'PHONE_CODE_EXPIRED':\r\n          codeInput.classList.add('error');\r\n          replaceContent(codeInputField.label, i18n('PHONE_CODE_EXPIRED'));\r\n          break;\r\n        case 'PHONE_CODE_EMPTY':\r\n        case 'PHONE_CODE_INVALID':\r\n          codeInput.classList.add('error');\r\n          replaceContent(codeInputField.label, i18n('PHONE_CODE_INVALID'));\r\n          break;\r\n        default:\r\n          codeInputField.label.innerText = err.type;\r\n          break;\r\n      }\r\n\r\n      if(!good) {\r\n        codeInputField.select();\r\n      }\r\n\r\n      codeInput.removeAttribute('disabled');\r\n    });\r\n  };\r\n\r\n  const imageDiv = page.pageEl.querySelector('.auth-image') as HTMLDivElement;\r\n  const size = mediaSizes.isMobile ? 100 : 166;\r\n  const monkey = new TrackingMonkey(codeInputField, size);\r\n  imageDiv.append(monkey.container);\r\n  return monkey.load();\r\n};\r\n\r\nconst page = new Page('page-authCode', true, onFirstMount, (_authCode: typeof authCode) => {\r\n  authCode = _authCode;\r\n\r\n  if(!headerElement) {\r\n    headerElement = page.pageEl.getElementsByClassName('phone')[0] as HTMLHeadElement;\r\n    sentTypeElement = page.pageEl.getElementsByClassName('sent-type')[0] as HTMLParagraphElement;\r\n  } else {\r\n    codeInput.value = '';\r\n\r\n    const evt = document.createEvent('HTMLEvents');\r\n    evt.initEvent('input', false, true);\r\n    codeInput.dispatchEvent(evt);\r\n  }\r\n\r\n  headerElement.innerText = authCode.phone_number;\r\n  let key: LangPackKey, args: any[];\r\n  switch(authCode.type._) {\r\n    case 'auth.sentCodeTypeSms':\r\n      key = 'Login.Code.SentSms';\r\n      break;\r\n    case 'auth.sentCodeTypeApp': \r\n      key = 'Login.Code.SentInApp';\r\n      break;\r\n    case 'auth.sentCodeTypeCall': \r\n      key = 'Login.Code.SentCall';\r\n      break;\r\n    default:\r\n      key = 'Login.Code.SentUnknown';\r\n      args = [authCode.type._];\r\n      break;\r\n  }\r\n\r\n  replaceContent(sentTypeElement, i18n(key, args));\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateAuthCode', sentCode: _authCode});\r\n}, () => {\r\n  codeInput.focus();\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField from \"../inputField\";\r\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\r\n\r\nexport default class TrackingMonkey {\r\n  public container: HTMLElement;\r\n\r\n  protected max = 45;\r\n  protected needFrame = 0;\r\n\r\n  protected animation: RLottiePlayer;\r\n  protected idleAnimation: RLottiePlayer;\r\n\r\n  protected loadPromise: Promise<any>;\r\n\r\n  constructor(protected inputField: InputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n\r\n    const input = inputField.input;\r\n\r\n    input.addEventListener('blur', () => {\r\n      this.playAnimation(0);\r\n    });\r\n\r\n    input.addEventListener('input', (e) => {\r\n      this.playAnimation(inputField.value.length);\r\n    });\r\n\r\n    /* codeInput.addEventListener('focus', () => {\r\n      playAnimation(Math.max(codeInput.value.length, 1));\r\n    }); */\r\n  }\r\n\r\n  // 1st symbol = frame 15\r\n  // end symbol = frame 165\r\n  public playAnimation(length: number) {\r\n    if(!this.animation) return;\r\n\r\n    length = Math.min(length, 30);\r\n    let frame: number;\r\n    if(length) {\r\n      frame = Math.round(Math.min(this.max, length) * (165 / this.max) + 11.33);\r\n\r\n      if(this.idleAnimation) {\r\n        this.idleAnimation.stop(true);\r\n        this.idleAnimation.canvas.style.display = 'none';\r\n      }\r\n      \r\n      this.animation.canvas.style.display = '';\r\n    } else {\r\n      /* const cb = (frameNo: number) => {\r\n        if(frameNo <= 1) { */\r\n          /* idleAnimation.play();\r\n          idleAnimation.canvas.style.display = '';\r\n          animation.canvas.style.display = 'none'; */\r\n      /*     animation.removeListener('enterFrame', cb);\r\n        }\r\n      };\r\n      animation.addListener('enterFrame', cb); */\r\n      \r\n      frame = 0;\r\n    }\r\n    //animation.playSegments([1, 2]);\r\n\r\n    const direction = this.needFrame > frame ? -1 : 1;\r\n    //console.log('keydown', length, frame, direction);\r\n\r\n    this.animation.setDirection(direction);\r\n    if(this.needFrame !== 0 && frame === 0) {\r\n      this.animation.setSpeed(7);\r\n    }\r\n    /* let diff = Math.abs(needFrame - frame * direction);\r\n    if((diff / 20) > 1) animation.setSpeed(diff / 20 | 0); */\r\n    this.needFrame = frame;\r\n    \r\n    this.animation.play();\r\n\r\n    /* animation.goToAndStop(15, true); */\r\n    //animation.goToAndStop(length / max * );\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = Promise.all([\r\n      lottieLoader.loadAnimationFromURL({\r\n        container: this.container,\r\n        loop: true,\r\n        autoplay: true,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'assets/img/TwoFactorSetupMonkeyIdle.tgs').then(animation => {\r\n        this.idleAnimation = animation;\r\n\r\n        // ! animationIntersector will stop animation instantly\r\n        if(!this.inputField.value.length) {\r\n          animation.play();\r\n        }\r\n\r\n        return lottieLoader.waitForFirstFrame(animation);\r\n      }),\r\n\r\n      lottieLoader.loadAnimationFromURL({\r\n        container: this.container,\r\n        loop: false,\r\n        autoplay: false,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'assets/img/TwoFactorSetupMonkeyTracking.tgs').then(_animation => {\r\n        this.animation = _animation;\r\n\r\n        if(!this.inputField.value.length) {\r\n          this.animation.canvas.style.display = 'none';\r\n        }\r\n\r\n        this.animation.addEventListener('enterFrame', currentFrame => {\r\n          //console.log('enterFrame', currentFrame, needFrame);\r\n          //let currentFrame = Math.round(e.currentTime);\r\n          \r\n          if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n            (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n          }\r\n\r\n          if(currentFrame === 0 && this.needFrame === 0) {\r\n            //animation.curFrame = 0;\r\n            \r\n            if(this.idleAnimation) {\r\n              this.idleAnimation.canvas.style.display = '';\r\n              this.idleAnimation.play();\r\n              this.animation.canvas.style.display = 'none';\r\n            }\r\n          }\r\n        });\r\n        //console.log(animation.getDuration(), animation.getDuration(true));\r\n\r\n        return lottieLoader.waitForFirstFrame(_animation);\r\n      })\r\n    ]);\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) this.animation.remove();\r\n    if(this.idleAnimation) this.idleAnimation.remove();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class CodeInputField extends InputField {\r\n  constructor(options: InputFieldOptions & {\r\n    length: number,\r\n    onFill: (code: string) => void\r\n  }) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'tel';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n\r\n    let lastLength = 0;\r\n    this.input.addEventListener('input', (e) => {\r\n      this.input.classList.remove('error');\r\n      this.setLabel();\r\n  \r\n      const value = this.value.replace(/\\D/g, '').slice(0, options.length);\r\n      this.setValueSilently(value);\r\n  \r\n      const length = this.value.length;\r\n      if(length === options.length) { // submit code\r\n        options.onFill(this.value);\r\n      } else if(length === lastLength) {\r\n        return;\r\n      }\r\n  \r\n      lastLength = length;\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/lib/webp/webp.worker.ts","webpack:///./src/lib/webp/webpWorkerController.ts","webpack:///./src/lib/langPack.ts","webpack:///./src/lib/mtproto/webPushApiManager.ts","webpack:///./src/lib/mtproto/singleInstance.ts","webpack:///./src/lib/mtproto/mtproto.worker.ts","webpack:///./src/lib/mtproto/transports/websocket.ts","webpack:///./src/lib/mtproto/mtprotoworker.ts","webpack:///./src/lib/crypto/crypto_methods.ts","webpack:///./src/helpers/random.ts","webpack:///./src/helpers/string.ts","webpack:///./src/helpers/bytes.ts"],"names":["Worker_fn","Worker","webpWorkerController","convertPromises","this","worker","addEventListener","e","payload","data","fileName","indexOf","promise","bytes","resolve","reject","postMessage","init","undefined","isWebpSupportedCache","document","createElement","toDataURL","startsWith","hasOwnProperty","convertPromise","type","langPack","I18n","pluralRules","cacheLangPackPromise","loadLocalLangPack","defaultCode","langPackCode","lastRequestedLangCode","Promise","all","then","lang","langSign","strings","formatLocalStrings","default","saveLangPack","_","from_version","lang_code","version","local","loadLangPack","langCode","requestedServerLanguage","invokeApiCacheable","lang_pack","polyfillPromise","pushTo","i","v","push","key","value","getLangPack","_langPack","__langPack","___langPack","forEach","l","concat","string","appVersion","langPackVersion","set","applyLangPack","Intl","PluralRules","err","console","error","split","clear","dispatchEvent","Array","from","querySelectorAll","element","instance","weakMap","get","update","superFormatter","input","args","indexHolder","out","lastIndex","replace","match","p1","p2","p3","offset","slice","b","append","length","format","plain","str","select","regExp","Map","getCacheLangPack","finally","getStrings","invokeApi","keys","_Intl","window","Object","assign","WeakMap","IntlElementBase","options","property","classList","add","IntlElement","textContent","formatted","dataset","IntlDateElement","dateTimeFormat","DateTimeFormat","date","i18n","i18n_","_i18n","join","elements","useLast","arr","delimiterKey","WebPushApiManager","isAvailable","isPushEnabled","localNotificationsAvailable","started","settings","isFirefox","navigator","userAgent","toLowerCase","userVisibleOnly","log","subscribe","serviceWorker","ready","reg","pushManager","subscription","pushSubscriptionNotify","catch","Notification","permission","setTimeout","isAliveNotify","idle","deactivated","baseUrl","location","href","ACTIONS_LANG_MAP","push_action_mute1d","push_action_settings","push_message_nopreview","action","task","localNotifications","controller","isAliveTO","warn","getSubscription","setUpServiceWorkerChannel","unsubscribe","successful","newSettings","clearTimeout","addServiceWorkerTaskListener","reload","event","subscriptionObj","toJSON","endpoint","p256dh","auth","tokenType","tokenValue","JSON","stringify","webPushApiManager","singleInstance","clearInstance","masterInstance","delete","deactivateInstance","deactivateTimeout","checkInstance","isIDLE","time","Date","now","newInstance","id","instanceID","curInstance","xt_instance","startAll","initial","stopAll","reset","setInterval","documentElement","dcId","url","logSuffix","super","debug","handleOpen","handleError","close","handleClose","removeListeners","handleMessage","byteLength","send","body","ws","logTypes","Error","Log","Debug","logger","connect","removeEventListener","WebSocket","binaryType","apiManagerProxy","performTaskWorker","buffer","salt","iterations","keyBytes","ivBytes","encryptedBytes","publicKey","x","y","m","toString","password","state","isNew","afterMessageIdTemp","taskId","awaiting","pending","updatesProcessor","hashes","apiPromisesSingle","apiPromisesCacheable","isSWRegistered","sockets","taskListeners","taskListenersSW","onWorkerMessage","callback","progress","rootScope","finalizeTask","result","start","registerServiceWorker","addTaskListener","toggleStorage","sessionStorage","forceUnsubscribe","socketTask","socket","onOpen","onClose","onMessage","storageTask","res","language","performTaskWorkerVoid","registerWorker","register","scope","registration","installing","waiting","active","onServiceWorkerFail","releasePending","bind","isWebpSupported","name","onWorkerFirstMessage","once","deferred","taskName","params","method","o","prepareTempMessageId","messageId","queryJSON","cached","hash","includes","q","cache","item","override","fulfilled","timeout","cacheSeconds","timestamp","verify","queueId","userAuth","dcID","dc_id","enabled","nextRandomInt","maxValue","Math","floor","random","randomLong","limitSymbols","limitFrom","trim","escapeRegExp","encodeEntities","charCodeAt","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","index","partLength","convertInputKeyToKey","inputKey","convertKeyToInputKey","toUpperCase","capitalizeFirstLetter","charAt","bytesToHex","bytesFromHex","hexString","len","parseInt","substr","bytesToBase64","mod3","nLen","nUint24","nIdx","String","fromCharCode","uint6ToBase64","nUint6","bytesCmp","bytes1","bytes2","convertToArrayBuffer","ArrayBuffer","BYTES_PER_ELEMENT","Uint8Array","bufferConcats","tmp","lastLength"],"mappings":"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","file":"1.cb3b4b4ed89ed36a2a3b.chunk.js","sourcesContent":["export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"webp.worker.bd598dc02a03fd59d71a.bundle.worker.js\");\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport WebpWorker from 'worker-loader!./webp.worker';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport { CancellablePromise, deferredPromise } from '../../helpers/cancellablePromise';\nimport apiManagerProxy from '../mtproto/mtprotoworker';\n\nexport type WebpConvertTask = {\n  type: 'convertWebp', \n  payload: {\n    fileName: string, \n    bytes: Uint8Array\n  }\n};\n\nexport class WebpWorkerController {\n  private worker: Worker;\n  private convertPromises: {[fileName: string]: CancellablePromise<Uint8Array>} = {};\n  private isWebpSupportedCache: boolean;\n  \n  init() {\n    this.worker = new WebpWorker();\n    this.worker.addEventListener('message', (e) => {\n      const payload = (e.data as WebpConvertTask).payload;\n\n      if(payload.fileName.indexOf('main-') === 0) {\n        const promise = this.convertPromises[payload.fileName];\n        if(promise) {\n          payload.bytes ? promise.resolve(payload.bytes) : promise.reject();\n          delete this.convertPromises[payload.fileName];\n        }\n      } else {\n        apiManagerProxy.postMessage(e.data);\n      }\n    });\n  }\n\n  postMessage(data: WebpConvertTask) {\n    if(this.init) {\n      this.init();\n      this.init = null;\n    }\n\n    this.worker.postMessage(data);\n  }\n\n  isWebpSupported() {\n    if(this.isWebpSupportedCache === undefined) {\n      this.isWebpSupportedCache = document.createElement('canvas').toDataURL('image/webp').startsWith('data:image/webp');\n    }\n\n    return this.isWebpSupportedCache;\n  }\n\n  convert(fileName: string, bytes: Uint8Array) {\n    fileName = 'main-' + fileName;\n\n    if(this.convertPromises.hasOwnProperty(fileName)) {\n      return this.convertPromises[fileName];\n    }\n    \n    const convertPromise = deferredPromise<Uint8Array>();\n\n    this.postMessage({type: 'convertWebp', payload: {fileName, bytes}});\n\n    return this.convertPromises[fileName] = convertPromise;\n  }\n}\n\nconst webpWorkerController = new WebpWorkerController();\nMOUNT_CLASS_TO.webpWorkerController = webpWorkerController;\nexport default webpWorkerController;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport DEBUG, { MOUNT_CLASS_TO } from \"../config/debug\";\nimport { safeAssign } from \"../helpers/object\";\nimport { capitalizeFirstLetter } from \"../helpers/string\";\nimport type lang from \"../lang\";\nimport type langSign from \"../langSign\";\nimport { LangPackDifference, LangPackString } from \"../layer\";\nimport apiManager from \"./mtproto/mtprotoworker\";\nimport stateStorage from \"./stateStorage\";\nimport App from \"../config/app\";\nimport rootScope from \"./rootScope\";\n\nexport const langPack: {[actionType: string]: LangPackKey} = {\n  \"messageActionChatCreate\": \"ActionCreateGroup\",\n\t\"messageActionChatEditTitle\": \"ActionChangedTitle\",\n\t\"messageActionChatEditPhoto\": \"ActionChangedPhoto\",\n\t\"messageActionChatEditVideo\": \"ActionChangedVideo\",\n\t\"messageActionChatDeletePhoto\": \"ActionRemovedPhoto\",\n\t\"messageActionChatReturn\": \"ActionAddUserSelf\",\n\t\"messageActionChatReturnYou\": \"ActionAddUserSelfYou\",\n\t\"messageActionChatJoined\": \"ActionAddUserSelfMega\",\n\t\"messageActionChatJoinedYou\": \"ChannelMegaJoined\",\n  \"messageActionChatAddUser\": \"ActionAddUser\",\n  \"messageActionChatAddUsers\": \"ActionAddUser\",\n\t\"messageActionChatLeave\": \"ActionLeftUser\",\n\t\"messageActionChatLeaveYou\": \"YouLeft\",\n\t\"messageActionChatDeleteUser\": \"ActionKickUser\",\n\t\"messageActionChatJoinedByLink\": \"ActionInviteUser\",\n  \"messageActionPinMessage\": \"ActionPinnedNoText\",\n  \"messageActionContactSignUp\": \"Chat.Service.PeerJoinedTelegram\",\n\t\"messageActionChannelCreate\": \"ActionCreateChannel\",\n\t\"messageActionChannelEditTitle\": \"Chat.Service.Channel.UpdatedTitle\",\n\t\"messageActionChannelEditPhoto\": \"Chat.Service.Channel.UpdatedPhoto\",\n\t\"messageActionChannelEditVideo\": \"Chat.Service.Channel.UpdatedVideo\",\n  \"messageActionChannelDeletePhoto\": \"Chat.Service.Channel.RemovedPhoto\",\n  \"messageActionHistoryClear\": \"HistoryCleared\",\n\n  \"messageActionChannelMigrateFrom\": \"ActionMigrateFromGroup\",\n\n  \"messageActionPhoneCall.in_ok\": \"ChatList.Service.Call.incoming\",\n\t\"messageActionPhoneCall.out_ok\": \"ChatList.Service.Call.outgoing\",\n\t\"messageActionPhoneCall.in_missed\": \"ChatList.Service.Call.Missed\",\n\t\"messageActionPhoneCall.out_missed\": \"ChatList.Service.Call.Cancelled\",\n\n\t\"messageActionGroupCall.started\": \"ActionGroupCallJustStarted\",\n\t\"messageActionGroupCall.started_by\": \"ActionGroupCallStarted\",\n\t\"messageActionGroupCall.started_byYou\": \"ActionGroupCallStartedByYou\",\n\t\"messageActionGroupCall.ended_by\": \"Chat.Service.VoiceChatFinished\",\n\t\"messageActionGroupCall.ended_byYou\": \"Chat.Service.VoiceChatFinishedYou\",\n\n\t\"messageActionBotAllowed\": \"Chat.Service.BotPermissionAllowed\"\n};\n\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\n\nnamespace I18n {\n\texport const strings: Map<LangPackKey, LangPackString> = new Map();\n\tlet pluralRules: Intl.PluralRules;\n\n\tlet cacheLangPackPromise: Promise<LangPackDifference>;\n\texport let lastRequestedLangCode: string;\n\texport let requestedServerLanguage = false;\n\texport function getCacheLangPack(): Promise<LangPackDifference> {\n\t\tif(cacheLangPackPromise) return cacheLangPackPromise;\n\t\treturn cacheLangPackPromise = Promise.all([\n\t\t\tstateStorage.get('langPack') as Promise<LangPackDifference>,\n\t\t\tpolyfillPromise\n\t\t]).then(([langPack]) => {\n\t\t\tif(!langPack/*  || true */) {\n\t\t\t\treturn loadLocalLangPack();\n\t\t\t} else if(DEBUG && false) {\n\t\t\t\treturn getLangPack(langPack.lang_code);\n\t\t\t}/*  else if(langPack.appVersion !== App.langPackVersion) {\n\t\t\t\treturn getLangPack(langPack.lang_code);\n\t\t\t} */\n\t\t\t\n\t\t\tif(!lastRequestedLangCode) {\n\t\t\t\tlastRequestedLangCode = langPack.lang_code;\n\t\t\t}\n\t\t\t\n\t\t\tapplyLangPack(langPack);\n\t\t\treturn langPack;\n\t\t}).finally(() => {\n\t\t\tcacheLangPackPromise = undefined;\n\t\t});\n\t}\n\n\texport function loadLocalLangPack() {\n\t\tconst defaultCode = App.langPackCode;\n\t\tlastRequestedLangCode = defaultCode;\n\t\treturn Promise.all([\n\t\t\timport('../lang'),\n\t\t\timport('../langSign')\n\t\t]).then(([lang, langSign]) => {\n\t\t\tconst strings: LangPackString[] = [];\n\t\t\tformatLocalStrings(lang.default, strings);\n\t\t\tformatLocalStrings(langSign.default, strings);\n\n\t\t\tconst langPack: LangPackDifference = {\n\t\t\t\t_: 'langPackDifference',\n\t\t\t\tfrom_version: 0,\n\t\t\t\tlang_code: defaultCode,\n\t\t\t\tstrings,\n\t\t\t\tversion: 0,\n\t\t\t\tlocal: true\n\t\t\t};\n\t\t\treturn saveLangPack(langPack);\n\t\t});\n\t}\n\n\texport function loadLangPack(langCode: string) {\n\t\trequestedServerLanguage = true;\n\t\treturn Promise.all([\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\tlang_pack: App.langPack\n\t\t\t}),\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\tlang_pack: 'android'\n\t\t\t}),\n\t\t\timport('../lang'),\n\t\t\timport('../langSign'),\n\t\t\tpolyfillPromise\n\t\t]);\n\t}\n\n\texport function getStrings(langCode: string, strings: string[]) {\n\t\treturn apiManager.invokeApi('langpack.getStrings', {\n\t\t\tlang_pack: App.langPack,\n\t\t\tlang_code: langCode,\n\t\t\tkeys: strings\n\t\t});\n\t}\n\n\texport function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\n\t\tfor(const i in strings) {\n\t\t\t// @ts-ignore\n\t\t\tconst v = strings[i];\n\t\t\tif(typeof(v) === 'string') {\n\t\t\t\tpushTo.push({\n\t\t\t\t\t_: 'langPackString',\n\t\t\t\t\tkey: i,\n\t\t\t\t\tvalue: v\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpushTo.push({\n\t\t\t\t\t_: 'langPackStringPluralized',\n\t\t\t\t\tkey: i,\n\t\t\t\t\t...v\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn pushTo;\n\t}\n\n\texport function getLangPack(langCode: string) {\n\t\tlastRequestedLangCode = langCode;\n\t\treturn loadLangPack(langCode).then(([langPack, _langPack, __langPack, ___langPack, _]) => {\n\t\t\tlet strings: LangPackString[] = [];\n\n\t\t\t[__langPack, ___langPack].forEach(l => {\n\t\t\t\tformatLocalStrings(l.default as any, strings);\n\t\t\t});\n\n\t\t\tstrings = strings.concat(langPack.strings);\n\n\t\t\tfor(const string of _langPack.strings) {\n\t\t\t\tstrings.push(string);\n\t\t\t}\n\n\t\t\tlangPack.strings = strings;\n\t\t\treturn saveLangPack(langPack);\n\t\t});\n\t}\n\n\texport function saveLangPack(langPack: LangPackDifference) {\n\t\tlangPack.appVersion = App.langPackVersion;\n\n\t\treturn stateStorage.set({langPack}).then(() => {\n\t\t\tapplyLangPack(langPack);\n\t\t\treturn langPack;\n\t\t});\n\t}\n\n\texport const polyfillPromise = (function checkIfPolyfillNeeded() {\n\t\tif(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn import('./pluralPolyfill').then((_Intl) => {\n\t\t\t\t(window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\n\t\t\t});\n\t\t}\n\t})();\n\t\n\texport function applyLangPack(langPack: LangPackDifference) {\n\t\tif(langPack.lang_code !== lastRequestedLangCode) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code);\n\t\t} catch(err) {\n\t\t\tconsole.error('pluralRules error', err);\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\n\t\t}\n\n\t\tstrings.clear();\n\n\t\tfor(const string of langPack.strings) {\n\t\t\tstrings.set(string.key as LangPackKey, string);\n\t\t}\n\n\t\trootScope.dispatchEvent('language_change', langPack.lang_code);\n\n\t\tconst elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n\t\telements.forEach(element => {\n\t\t\tconst instance = weakMap.get(element);\n\n\t\t\tif(instance) {\n\t\t\t\tinstance.update();\n\t\t\t}\n\t\t});\n\t}\n\n\texport function superFormatter(input: string, args?: any[], indexHolder = {i: 0}) {\n\t\tlet out: (string | HTMLElement)[] = [];\n\t\tconst regExp = /(\\*\\*)(.+?)\\1|(\\n)|un\\d|%\\d\\$.|%./g;\n\n\t\tlet lastIndex = 0;\n\t\tinput.replace(regExp, (match, p1: any, p2: any, p3: any, offset: number, string: string) => {\n\t\t\t//console.table({match, p1, p2, offset, string});\n\n\t\t\tout.push(string.slice(lastIndex, offset));\n\n\t\t\tif(p1) {\n\t\t\t\t//offset += p1.length;\n\t\t\t\tswitch(p1) {\n\t\t\t\t\tcase '**': {\n\t\t\t\t\t\tconst b = document.createElement('b');\n\t\t\t\t\t\tb.append(...superFormatter(p2, args, indexHolder));\n\t\t\t\t\t\tout.push(b);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if(p3) {\n\t\t\t\tout.push(document.createElement('br'));\n\t\t\t} else if(args) {\n\t\t\t\tout.push(args[indexHolder.i++]);\n\t\t\t}\n\n\t\t\tlastIndex = offset + match.length;\n\t\t\treturn '';\n\t\t});\n\t\n\t\tif(lastIndex !== input.length) {\n\t\t\tout.push(input.slice(lastIndex));\n\t\t}\n\n\t\treturn out;\n\t}\n\t\n\texport function format(key: LangPackKey, plain: true, args?: any[]): string;\n\texport function format(key: LangPackKey, plain?: false, args?: any[]): (string | HTMLElement)[];\n\texport function format(key: LangPackKey, plain = false, args?: any[]): (string | HTMLElement)[] | string {\n\t\tconst str = strings.get(key);\n\t\tlet input: string;\n\t\tif(str) {\n\t\t\tif(str._ === 'langPackStringPluralized' && args?.length) {\n\t\t\t\tlet v = args[0] as number | string;\n\t\t\t\tif(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\n\t\t\t\tconst s = pluralRules.select(v);\n\t\t\t\t// @ts-ignore\n\t\t\t\tinput = str[s + '_value'] || str['other_value'];\n\t\t\t} else if(str._ === 'langPackString') {\n\t\t\t\tinput = str.value;\n\t\t\t} else {\n\t\t\t\t//input = '[' + key + ']';\n\t\t\t\tinput = key;\n\t\t\t}\n\t\t} else {\n\t\t\t//input = '[' + key + ']';\n\t\t\tinput = key;\n\t\t}\n\t\t\n\t\tif(plain) {\n\t\t\tif(args?.length) {\n\t\t\t\tconst regExp = /un\\d|%\\d\\$.|%./g;\n\t\t\t\tlet i = 0;\n\t\t\t\tinput = input.replace(regExp, (match, offset, string) => {\n\t\t\t\t\treturn '' + args[i++];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn input;\n\t\t} else {\n\t\t\treturn superFormatter(input, args);\n\t\t}\n\t}\n\n\texport const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\n\n\texport type IntlElementBaseOptions = {\n\t\telement?: HTMLElement,\n\t\tproperty?: /* 'innerText' |  */'innerHTML' | 'placeholder',\n\t};\n\n\tabstract class IntlElementBase<Options extends IntlElementBaseOptions> {\n\t\tpublic element: IntlElementBaseOptions['element'];\n\t\tpublic property: IntlElementBaseOptions['property'] = 'innerHTML';\n\t\n\t\tconstructor(options: Options) {\n\t\t\tthis.element = options.element || document.createElement('span');\n\t\t\tthis.element.classList.add('i18n');\n\t\t\t\n\t\t\tthis.update(options);\n\t\t\tweakMap.set(this.element, this);\n\t\t}\n\n\t\tabstract update(options?: Options): void;\n\t}\n\n\texport type IntlElementOptions = IntlElementBaseOptions & {\n\t\tkey: LangPackKey,\n\t\targs?: any[]\n\t};\n\texport class IntlElement extends IntlElementBase<IntlElementOptions> {\n\t\tpublic key: IntlElementOptions['key'];\n\t\tpublic args: IntlElementOptions['args'];\n\n\t\tpublic update(options?: IntlElementOptions) {\n\t\t\tsafeAssign(this, options);\n\t\n\t\t\tif(this.property === 'innerHTML') {\n\t\t\t\tthis.element.textContent = '';\n\t\t\t\tthis.element.append(...format(this.key, false, this.args));\n\t\t\t} else {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst v = this.element[this.property];\n\t\t\t\tconst formatted = format(this.key, true, this.args);\n\n\t\t\t\t// * hasOwnProperty won't work here\n\t\t\t\tif(v === undefined) this.element.dataset[this.property] = formatted;\n\t\t\t\telse (this.element as HTMLInputElement)[this.property] = formatted;\n\t\t\t}\n\t\t}\n\t}\n\n\texport type IntlDateElementOptions = IntlElementBaseOptions & {\n\t\tdate: Date,\n\t\toptions: Intl.DateTimeFormatOptions\n\t};\n\texport class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\n\t\tpublic date: IntlDateElementOptions['date'];\n\t\tpublic options: IntlDateElementOptions['options'];\n\n\t\tpublic update(options?: IntlDateElementOptions) {\n\t\t\tsafeAssign(this, options);\n\t\n\t\t\t//var options = { month: 'long', day: 'numeric' };\n\t\t\t\n\t\t\t// * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\n\t\t\tconst dateTimeFormat = new Intl.DateTimeFormat(lastRequestedLangCode + '-u-hc-h23', this.options);\n\t\t\t\n\t\t\t(this.element as any)[this.property] = capitalizeFirstLetter(dateTimeFormat.format(this.date));\n\t\t}\n\t}\n\n\texport function i18n(key: LangPackKey, args?: any[]) {\n\t\treturn new IntlElement({key, args}).element;\n\t}\n\t\n\texport function i18n_(options: IntlElementOptions) {\n\t\treturn new IntlElement(options).element;\n\t}\n\n\texport function _i18n(element: HTMLElement, key: LangPackKey, args?: any[], property?: IntlElementOptions['property']) {\n\t\treturn new IntlElement({element, key, args, property}).element;\n\t}\n}\n\nexport {I18n};\nexport default I18n;\n\nconst i18n = I18n.i18n;\nexport {i18n};\n\nconst i18n_ = I18n.i18n_;\nexport {i18n_};\n\nconst _i18n = I18n._i18n;\nexport {_i18n};\n\nexport function join(elements: HTMLElement[], useLast = true) {\n\tconst arr: HTMLElement[] = elements.slice(0, 1);\n  for(let i = 1; i < elements.length; ++i) {\n    const isLast = (elements.length - 1) === i;\n    const delimiterKey: LangPackKey = isLast && useLast ? 'WordDelimiterLast' : 'WordDelimiter';\n    arr.push(i18n(delimiterKey));\n    arr.push(elements[i]);\n  }\n\n\treturn arr;\n}\n\nMOUNT_CLASS_TO.I18n = I18n;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { NotificationSettings } from \"../appManagers/appNotificationsManager\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { copy } from \"../../helpers/object\";\nimport { logger } from \"../logger\";\nimport rootScope from \"../rootScope\";\nimport { ServiceWorkerNotificationsClearTask, ServiceWorkerPingTask, ServiceWorkerPushClickTask } from \"../serviceWorker/index.service\";\nimport apiManager from \"./mtprotoworker\";\nimport I18n, { LangPackKey } from \"../langPack\";\nimport { isMobile } from \"../../helpers/userAgent\";\n\nexport type PushSubscriptionNotifyType = 'init' | 'subscribe' | 'unsubscribe';\nexport type PushSubscriptionNotifyEvent = `push_${PushSubscriptionNotifyType}`;\n\nexport type PushSubscriptionNotify = {\n  tokenType: number,\n  tokenValue: string\n};\n\nexport class WebPushApiManager {\n  public isAvailable = true;\n  private isPushEnabled = false;\n  private localNotificationsAvailable = true;\n  private started = false;\n  private settings: NotificationSettings & {baseUrl?: string} = {} as any;\n  private isAliveTO: any;\n  private isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  private userVisibleOnly = this.isFirefox ? false : true;\n  private log = logger('PM');\n\n  constructor() {\n    if(!('PushManager' in window) ||\n      !('Notification' in window) ||\n      !('serviceWorker' in navigator)) {\n      this.log.warn('Push messaging is not supported.');\n      this.isAvailable = false;\n      this.localNotificationsAvailable = false;\n    }\n\n    if(this.isAvailable && Notification.permission === 'denied') {\n      this.log.warn('The user has blocked notifications.');\n    }\n  }\n\n  public start() {\n    if(!this.started) {\n      this.started = true;\n      this.getSubscription();\n      this.setUpServiceWorkerChannel();\n    }\n  }\n\n  public setLocalNotificationsDisabled() {\n    this.localNotificationsAvailable = false;\n  }\n\n  public getSubscription() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.isPushEnabled = !!subscription;\n        this.pushSubscriptionNotify('init', subscription);\n      }).catch((err) => {\n        this.log.error('Error during getSubscription()', err);\n      });\n    });\n  }\n\n  public subscribe = () => {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.subscribe({userVisibleOnly: this.userVisibleOnly}).then((subscription) => {\n        // The subscription was successful\n        this.isPushEnabled = true;\n        this.pushSubscriptionNotify('subscribe', subscription);\n      }).catch((e) => {\n        if(Notification.permission === 'denied') {\n          this.log('Permission for Notifications was denied');\n        } else {\n          this.log('Unable to subscribe to push.', e);\n          if(!this.userVisibleOnly) {\n            this.userVisibleOnly = true;\n            setTimeout(this.subscribe, 0);\n          }\n        }\n      });\n    });\n  }\n\n  public unsubscribe() {\n    if(!this.isAvailable) {\n      return;\n    }\n    \n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.isPushEnabled = false;\n\n        if(subscription) {\n          this.pushSubscriptionNotify('unsubscribe', subscription);\n\n          setTimeout(() => {\n            subscription.unsubscribe().then((successful) => {\n              this.isPushEnabled = false;\n            }).catch((e) => {\n              this.log.error('Unsubscription error: ', e);\n            });\n          }, 3000);\n        }\n      }).catch((e) => {\n        this.log.error('Error thrown while unsubscribing from ' +\n          'push messaging.', e);\n      });\n    });\n  }\n\n  public forceUnsubscribe() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    navigator.serviceWorker.ready.then((reg) => {\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.log.warn('force unsubscribe', subscription);\n        if(subscription) {\n          subscription.unsubscribe().then((successful) => {\n            this.log.warn('force unsubscribe successful', successful);\n            this.isPushEnabled = false;\n          }).catch((e) => {\n            this.log.error('Unsubscription error: ', e);\n          });\n        }\n      }).catch((e) => {\n        this.log.error('Error thrown while unsubscribing from ' +\n          'push messaging.', e);\n      });\n    });\n  }\n\n  public isAliveNotify = () => {\n    if(!this.isAvailable || rootScope.idle && rootScope.idle.deactivated) {\n      return;\n    }\n\n    this.settings.baseUrl = (location.href || '').replace(/#.*$/, '') + '#/im';\n\n    const lang: ServiceWorkerPingTask['payload']['lang'] = {} as any;\n    const ACTIONS_LANG_MAP: Record<keyof ServiceWorkerPingTask['payload']['lang'], LangPackKey> = {\n      push_action_mute1d: isMobile ? 'PushNotification.Action.Mute1d.Mobile' : 'PushNotification.Action.Mute1d',\n      push_action_settings: isMobile ? 'PushNotification.Action.Settings.Mobile' : 'PushNotification.Action.Settings',\n      push_message_nopreview: 'PushNotification.Message.NoPreview'\n    };\n\n    for(const action in ACTIONS_LANG_MAP) {\n      lang[action as keyof typeof ACTIONS_LANG_MAP] = I18n.format(ACTIONS_LANG_MAP[action as keyof typeof ACTIONS_LANG_MAP], true);\n    }\n\n    const task: ServiceWorkerPingTask = {\n      type: 'ping',\n      payload: {\n        localNotifications: this.localNotificationsAvailable,\n        lang: lang,\n        settings: this.settings\n      }\n    };\n\n    if(navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage(task);\n    }\n\n    this.isAliveTO = setTimeout(this.isAliveNotify, 10000);\n  }\n\n  public setSettings(newSettings: WebPushApiManager['settings']) {\n    this.settings = copy(newSettings);\n    clearTimeout(this.isAliveTO);\n    this.isAliveNotify();\n  }\n\n  public hidePushNotifications() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    if(navigator.serviceWorker.controller) {\n      const task: ServiceWorkerNotificationsClearTask = {type: 'notifications_clear'};\n      navigator.serviceWorker.controller.postMessage(task);\n    }\n  }\n\n  public setUpServiceWorkerChannel() {\n    if(!this.isAvailable) {\n      return;\n    }\n\n    apiManager.addServiceWorkerTaskListener('push_click', (task: ServiceWorkerPushClickTask) => {\n      if(rootScope.idle && rootScope.idle.deactivated) {\n        // AppRuntimeManager.reload(); // WARNING\n        location.reload();\n        return;\n      }\n\n      rootScope.dispatchEvent('push_notification_click', task.payload);\n    });\n\n    navigator.serviceWorker.ready.then(this.isAliveNotify);\n  }\n\n  public pushSubscriptionNotify(event: PushSubscriptionNotifyType, subscription?: PushSubscription) {\n    if(subscription) {\n      const subscriptionObj: PushSubscriptionJSON = subscription.toJSON();\n      if(!subscriptionObj ||\n        !subscriptionObj.endpoint ||\n        !subscriptionObj.keys ||\n        !subscriptionObj.keys.p256dh ||\n        !subscriptionObj.keys.auth) {\n        this.log.warn('Invalid push subscription', subscriptionObj);\n        this.unsubscribe();\n        this.isAvailable = false;\n        this.pushSubscriptionNotify(event);\n        return;\n      }\n      \n      this.log.warn('Push', event, subscriptionObj);\n      rootScope.dispatchEvent(('push_' + event) as PushSubscriptionNotifyEvent, {\n        tokenType: 10,\n        tokenValue: JSON.stringify(subscriptionObj)\n      });\n    } else {\n      this.log.warn('Push', event, false);\n      rootScope.dispatchEvent(('push_' + event) as PushSubscriptionNotifyEvent, false as any);\n    }\n  }\n}\n\nconst webPushApiManager = new WebPushApiManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.webPushApiManager = webPushApiManager);\nexport default webPushApiManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport { nextRandomInt } from \"../../helpers/random\";\nimport { logger } from \"../logger\";\nimport rootScope from \"../rootScope\";\nimport sessionStorage from \"../sessionStorage\";\nimport apiManager from \"./mtprotoworker\";\n\nexport type AppInstance = {\n  id: number,\n  idle: boolean,\n  time: number\n};\n\nconst CHECK_INSTANCE_INTERVAL = 5000; \nconst DEACTIVATE_TIMEOUT = 30000;\nconst MULTIPLE_TABS_THRESHOLD = 20000;\n\nexport class SingleInstance {\n  private instanceID: number;\n  private started: boolean;\n  private masterInstance: boolean;\n  private deactivateTimeout: number;\n  private deactivated: boolean;\n  private initial: boolean;\n  private log = logger('INSTANCE');\n\n  public start() {\n    if(!this.started/*  && !Config.Navigator.mobile && !Config.Modes.packed */) {\n      this.started = true;\n\n      this.reset();\n      //IdleManager.start();\n\n      rootScope.addEventListener('idle', this.checkInstance);\n      setInterval(this.checkInstance, CHECK_INSTANCE_INTERVAL);\n      this.checkInstance();\n\n      try {\n        document.documentElement.addEventListener('beforeunload', this.clearInstance);\n      } catch(e) {}\n    }\n  }\n\n  public reset() {\n    this.instanceID = nextRandomInt(0xFFFFFFFF);\n    this.masterInstance = false;\n    if(this.deactivateTimeout) clearTimeout(this.deactivateTimeout);\n    this.deactivateTimeout = 0;\n    this.deactivated = false;\n    this.initial = false;\n  }\n\n  public clearInstance = () => {\n    if(this.masterInstance && !this.deactivated) {\n      this.log.warn('clear master instance');\n      sessionStorage.delete('xt_instance');\n    }\n  };\n\n  public activateInstance() {\n    if(this.deactivated) {\n      this.reset();\n      this.checkInstance(false);\n      rootScope.dispatchEvent('instance_activated');\n    }\n  }\n\n  public deactivateInstance = () => {\n    if(this.masterInstance || this.deactivated) {\n      return false;\n    }\n\n    this.log('deactivate');\n    this.deactivateTimeout = 0;\n    this.deactivated = true;\n    this.clearInstance();\n    //$modalStack.dismissAll();\n\n    //document.title = _('inactive_tab_title_raw')\n\n    rootScope.idle.deactivated = true;\n    rootScope.dispatchEvent('instance_deactivated');\n  };\n\n  public checkInstance = (idle = rootScope.idle && rootScope.idle.isIDLE) => {\n    if(this.deactivated) {\n      return false;\n    }\n    \n    const time = Date.now();\n    const newInstance: AppInstance = {\n      id: this.instanceID, \n      idle, \n      time\n    };\n\n    sessionStorage.get('xt_instance', false).then((curInstance: AppInstance) => {\n      // this.log('check instance', newInstance, curInstance)\n      if(!idle ||\n          !curInstance ||\n          curInstance.id === this.instanceID ||\n          curInstance.time < (time - MULTIPLE_TABS_THRESHOLD)) {\n        sessionStorage.set({xt_instance: newInstance});\n\n        if(!this.masterInstance) {\n          apiManager.startAll();\n          if(!this.initial) {\n            this.initial = true;\n          } else {\n            this.log.warn('now master instance', newInstance);\n          }\n\n          this.masterInstance = true;\n        }\n\n        if(this.deactivateTimeout) {\n          clearTimeout(this.deactivateTimeout);\n          this.deactivateTimeout = 0;\n        }\n      } else {\n        if(this.masterInstance) {\n          apiManager.stopAll();\n          this.log.warn('now idle instance', newInstance);\n          if(!this.deactivateTimeout) {\n            this.deactivateTimeout = window.setTimeout(this.deactivateInstance, DEACTIVATE_TIMEOUT);\n          }\n\n          this.masterInstance = false;\n        }\n      }\n    });\n  };\n}\n\nconst singleInstance = new SingleInstance();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.singleInstance = singleInstance);\nexport default singleInstance;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"mtproto.worker.c04383a85efa9bb73503.bundle.worker.js\");\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { logger, LogTypes } from '../../logger';\nimport Modes from '../../../config/modes';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport { MTConnection } from './transport';\n\nexport default class Socket extends EventListenerBase<{\n  open: () => void,\n  message: (buffer: ArrayBuffer) => any,\n  close: () => void,\n}> implements MTConnection {\n  private ws: WebSocket;\n  private log: ReturnType<typeof logger>;\n  private debug = Modes.debug && false;\n\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\n    super();\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n    this.connect();\n\n    return this;\n  }\n\n  private removeListeners() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.ws.removeEventListener('open', this.handleOpen);\n    this.ws.removeEventListener('close', this.handleClose);\n    this.ws.removeEventListener('error', this.handleError);\n    this.ws.removeEventListener('message', this.handleMessage);\n    this.ws = undefined;\n  }\n  \n  private connect() {\n    this.ws = new WebSocket(this.url, 'binary');\n    this.ws.binaryType = 'arraybuffer';\n    this.ws.addEventListener('open', this.handleOpen);\n    this.ws.addEventListener('close', this.handleClose);\n    this.ws.addEventListener('error', this.handleError);\n    this.ws.addEventListener('message', this.handleMessage);\n  }\n\n  public close() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.log.error('close execution');\n\n    try {\n      this.ws.close();\n    } catch(err) {\n\n    }\n    this.handleClose();\n  }\n  \n  private handleOpen = () => {\n    this.log('opened');\n\n    this.debug && this.log.debug('sending init packet');\n    this.dispatchEvent('open');\n  };\n\n  private handleError = (e: Event) => {\n    this.log.error('handleError', e);\n    this.close();\n  };\n\n  private handleClose = () => {\n    this.log('closed'/* , event, this.pending, this.ws.bufferedAmount */);\n\n    this.removeListeners();\n    this.dispatchEvent('close');\n  };\n\n  private handleMessage = (event: MessageEvent) => {\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\n\n    this.dispatchEvent('message', event.data as ArrayBuffer);\n  };\n\n  public send = (body: Uint8Array) => {\n    this.debug && this.log.debug('-> body length to send:', body.length);\n\n    this.ws.send(body);\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { LocalStorageProxyTask, LocalStorageProxyTaskResponse } from '../localStorage';\n//import type { LocalStorageProxyDeleteTask, LocalStorageProxySetTask } from '../storage';\nimport type { InvokeApiOptions } from '../../types';\nimport type { MethodDeclMap } from '../../layer';\nimport MTProtoWorker from 'worker-loader!./mtproto.worker';\n//import './mtproto.worker';\nimport { isObject } from '../../helpers/object';\nimport CryptoWorkerMethods from '../crypto/crypto_methods';\nimport { logger } from '../logger';\nimport rootScope from '../rootScope';\nimport webpWorkerController from '../webp/webpWorkerController';\nimport type { DownloadOptions } from './apiFileManager';\nimport type { ServiceWorkerTask } from '../serviceWorker/index.service';\nimport { UserAuth } from './mtproto_config';\nimport type { MTMessage } from './networker';\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\nimport Socket from './transports/websocket';\nimport singleInstance from './singleInstance';\nimport sessionStorage from '../sessionStorage';\nimport webPushApiManager from './webPushApiManager';\nimport AppStorage from '../storage';\n\ntype Task = {\n  taskId: number,\n  task: string,\n  args: any[]\n};\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport class ApiManagerProxy extends CryptoWorkerMethods {\n  public worker: /* Window */Worker;\n  public postMessage: (...args: any[]) => void;\n  private afterMessageIdTemp = 0;\n\n  private taskId = 0;\n  private awaiting: {\n    [id: number]: {\n      resolve: any,\n      reject: any,\n      taskName: string\n    }\n  } = {} as any;\n  private pending: Array<Task> = [];\n\n  public updatesProcessor: (obj: any) => void = null;\n\n  private log = logger('API-PROXY');\n\n  private hashes: {[method: string]: HashOptions} = {};\n\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  private isSWRegistered = true;\n\n  private debug = DEBUG /* && false */;\n\n  private sockets: Map<number, Socket> = new Map();\n\n  private taskListeners: {[taskType: string]: (task: any) => void} = {};\n  private taskListenersSW: {[taskType: string]: (task: any) => void} = {};\n\n  public onServiceWorkerFail: () => void;\n\n  constructor() {\n    super();\n    this.log('constructor');\n\n    singleInstance.start();\n\n    this.registerServiceWorker();\n\n    this.addTaskListener('clear', () => {\n      Promise.all([\n        AppStorage.toggleStorage(false), \n        sessionStorage.clear(),\n        webPushApiManager.forceUnsubscribe()\n      ]).finally(() => {\n        location.reload();\n      });\n    });\n\n    this.addTaskListener('connectionStatusChange', (task: any) => {\n      rootScope.dispatchEvent('connection_status_change', task.payload);\n    });\n\n    this.addTaskListener('convertWebp', (task) => {\n      webpWorkerController.postMessage(task);\n    });\n\n    this.addTaskListener('socketProxy', (task) => {\n      const socketTask = task.payload;\n      const id = socketTask.id;\n      //console.log('socketProxy', socketTask, id);\n\n      if(socketTask.type === 'send') {\n        const socket = this.sockets.get(id);\n        socket.send(socketTask.payload);\n      } else if(socketTask.type === 'close') {\n        const socket = this.sockets.get(id);\n        socket.close();\n      } else if(socketTask.type === 'setup') {\n        const socket = new Socket(socketTask.payload.dcId, socketTask.payload.url, socketTask.payload.logSuffix);\n        \n        const onOpen = () => {\n          //console.log('socketProxy onOpen');\n          this.postMessage({\n            type: 'socketProxy', \n            payload: {\n              type: 'open',\n              id\n            }\n          });\n        };\n        const onClose = () => {\n          this.postMessage({\n            type: 'socketProxy', \n            payload: {\n              type: 'close',\n              id\n            }\n          });\n\n          socket.removeEventListener('open', onOpen);\n          socket.removeEventListener('close', onClose);\n          socket.removeEventListener('message', onMessage);\n          this.sockets.delete(id);\n        };\n        const onMessage = (buffer: ArrayBuffer) => {\n          this.postMessage({\n            type: 'socketProxy', \n            payload: {\n              type: 'message',\n              id,\n              payload: buffer\n            }\n          });\n        };\n\n        socket.addEventListener('open', onOpen);\n        socket.addEventListener('close', onClose);\n        socket.addEventListener('message', onMessage);\n        this.sockets.set(id, socket);\n      }\n    });\n\n    this.addTaskListener('localStorageProxy', (task: LocalStorageProxyTask) => {\n      const storageTask = task.payload;\n      // @ts-ignore\n      sessionStorage[storageTask.type](...storageTask.args).then(res => {\n        this.postMessage({\n          type: 'localStorageProxy',\n          id: task.id,\n          payload: res\n        } as LocalStorageProxyTaskResponse);\n      });\n    });\n\n    rootScope.addEventListener('language_change', (language) => {\n      this.performTaskWorkerVoid('setLanguage', language);\n    });\n\n                       \n    this.registerWorker();\n              \n  }\n\n  public isServiceWorkerOnline() {\n    return this.isSWRegistered;\n  }\n\n  private registerServiceWorker() {\n    if(!('serviceWorker' in navigator)) return;\n    \n    const worker = navigator.serviceWorker;\n    worker.register('./sw.js', {scope: './'}).then(registration => {\n      this.log('SW registered', registration);\n      this.isSWRegistered = true;\n\n      const sw = registration.installing || registration.waiting || registration.active;\n      sw.addEventListener('statechange', (e) => {\n        this.log('SW statechange', e);\n      });\n\n                        \n                                                                                                                     \n                                            \n                \n    }, (err) => {\n      this.isSWRegistered = false;\n      this.log.error('SW registration failed!', err);\n\n      if(this.onServiceWorkerFail) {\n        this.onServiceWorkerFail();\n      }\n    });\n\n    worker.addEventListener('controllerchange', () => {\n      this.log.warn('controllerchange');\n      this.releasePending();\n\n      worker.controller.addEventListener('error', (e) => {\n        this.log.error('controller error:', e);\n      });\n    });\n\n                      \n                                                             \n             \n    worker.addEventListener('message', (e) => {\n      const task: ServiceWorkerTask = e.data;\n      if(!isObject(task)) {\n        return;\n      }\n\n      const callback = this.taskListenersSW[task.type];\n      if(callback) {\n        callback(task);\n      }\n    });\n\n    this.addServiceWorkerTaskListener('requestFilePart', (task) => {\n      this.postMessage(task);\n    });\n              \n\n    worker.addEventListener('messageerror', (e) => {\n      this.log.error('SW messageerror:', e);\n    });\n  }\n\n  private onWorkerFirstMessage(worker: any) {\n    if(!this.worker) {\n      this.worker = worker;\n      this.log('set webWorker');\n\n      this.postMessage = this.worker.postMessage.bind(this.worker);\n\n      const isWebpSupported = webpWorkerController.isWebpSupported();\n      this.log('WebP supported:', isWebpSupported);\n      this.postMessage({type: 'webpSupport', payload: isWebpSupported});\n\n      this.releasePending();\n    }\n  }\n\n  public addTaskListener(name: keyof ApiManagerProxy['taskListeners'], callback: ApiManagerProxy['taskListeners'][typeof name]) {\n    this.taskListeners[name] = callback;\n  }\n\n  public addServiceWorkerTaskListener(name: keyof ApiManagerProxy['taskListenersSW'], callback: ApiManagerProxy['taskListenersSW'][typeof name]) {\n    this.taskListenersSW[name] = callback;\n  }\n\n  private onWorkerMessage = (e: MessageEvent) => {\n    //this.log('got message from worker:', e.data);\n\n    const task = e.data;\n\n    if(!isObject(task)) {\n      return;\n    }\n\n    const callback = this.taskListeners[task.type];\n    if(callback) {\n      callback(task);\n      return;\n    }\n\n    if(task.update) {\n      if(this.updatesProcessor) {\n        this.updatesProcessor(task.update);\n      }\n    } else if(task.progress) {\n      rootScope.dispatchEvent('download_progress', task.progress);\n    } else if(task.hasOwnProperty('result') || task.hasOwnProperty('error')) {\n      this.finalizeTask(task.taskId, task.result, task.error);\n    }\n  };\n\n                     \n  private registerWorker() {\n    //return;\n\n    const worker = new MTProtoWorker();\n    //const worker = window;\n    worker.addEventListener('message', this.onWorkerFirstMessage.bind(this, worker), {once: true});\n    worker.addEventListener('message', this.onWorkerMessage);\n\n    worker.addEventListener('error', (err) => {\n      this.log.error('WORKER ERROR', err);\n    });\n  }\n            \n\n  private finalizeTask(taskId: number, result: any, error: any) {\n    const deferred = this.awaiting[taskId];\n    if(deferred !== undefined) {\n      this.debug && this.log.debug('done', deferred.taskName, result, error);\n      error ? deferred.reject(error) : deferred.resolve(result);\n      delete this.awaiting[taskId];\n    }\n  }\n\n  public performTaskWorkerVoid(task: string, ...args: any[]) {\n    const params = {\n      task,\n      taskId: this.taskId,\n      args\n    };\n\n    this.pending.push(params);\n    this.releasePending();\n\n    this.taskId++;\n  }\n\n  public performTaskWorker<T>(task: string, ...args: any[]) {\n    this.debug && this.log.debug('start', task, args);\n\n    return new Promise<T>((resolve, reject) => {\n      this.awaiting[this.taskId] = {resolve, reject, taskName: task};\n      this.performTaskWorkerVoid(task, ...args);\n    });\n  }\n\n  private releasePending() {\n    //return;\n\n    if(this.postMessage) {\n      this.debug && this.log.debug('releasing tasks, length:', this.pending.length);\n      this.pending.forEach(pending => {\n        this.postMessage(pending);\n      });\n      \n      this.debug && this.log.debug('released tasks');\n      this.pending.length = 0;\n    }\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n  }\n\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    //console.log('will invokeApi:', method, params, options);\n    return this.performTaskWorker('invokeApi', method, params, options);\n  }\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n    \n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    //console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap>(method: T, params: Omit<MethodDeclMap[T]['req'], 'hash'> = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    //console.log('will invokeApi:', method, params, options);\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        (params as any).hash = cached.hash;\n      }\n    }\n\n    return this.invokeApi(method, params, options).then((result: any) => {\n      if(result._.includes('NotModified')) {\n        this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n        return cached.result;\n      }\n      \n      if(result.hash/*  || result.messages */) {\n        const hash = result.hash/*  || this.computeHash(result.messages) */;\n        \n        if(!this.hashes[method]) this.hashes[method] = {};\n        this.hashes[method][queryJSON] = {\n          hash,\n          result\n        };\n      }\n\n      return result;\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    if(this.apiPromisesSingle[q]) {\n      return this.apiPromisesSingle[q];\n    }\n\n    return this.apiPromisesSingle[q] = this.invokeApi(method, params, options).finally(() => {\n      delete this.apiPromisesSingle[q];\n    });\n  }\n\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\n    const queryJSON = JSON.stringify(params);\n    const item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item && item.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = window.setTimeout(() => {\n        delete cache[queryJSON];\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        if(verify(item.params)) {\n          if(item.timeout) {\n            clearTimeout(item.timeout);\n          }\n\n          delete cache[queryJSON];\n        }\n      }\n    }\n  }\n\n  /* private computeHash(smth: any[]) {\n    smth = smth.slice().sort((a, b) => a.id - b.id);\n    //return smth.reduce((hash, v) => (((hash * 0x4F25) & 0x7FFFFFFF) + v.id) & 0x7FFFFFFF, 0);\n    return smth.reduce((hash, v) => ((hash * 20261) + 0x80000000 + v.id) % 0x80000000, 0);\n  } */\n\n  public setBaseDcId(dcId: number) {\n    return this.performTaskWorker('setBaseDcId', dcId);\n  }\n\n  public setQueueId(queueId: number) {\n    return this.performTaskWorker('setQueueId', queueId);\n  }\n\n  public setUserAuth(userAuth: UserAuth | number) {\n    if(typeof(userAuth) === 'number') {\n      userAuth = {dcID: 0, date: Date.now() / 1000 | 0, id: userAuth};\n    }\n    \n    rootScope.dispatchEvent('user_auth', userAuth);\n    return this.performTaskWorker('setUserAuth', userAuth);\n  }\n\n  public getNetworker(dc_id: number, options?: InvokeApiOptions) {\n    return this.performTaskWorker('getNetworker', dc_id, options);\n  }\n\n  public logOut(): Promise<void> {\n    // AppStorage.toggleStorage(false);\n    return this.performTaskWorker('logOut');\n  }\n\n  public cancelDownload(fileName: string) {\n    return this.performTaskWorker('cancelDownload', fileName);\n  }\n\n  public downloadFile(options: DownloadOptions) {\n    return this.performTaskWorker('downloadFile', options);\n  }\n\n  public uploadFile(options: {file: Blob | File, fileName: string}) {\n    return this.performTaskWorker('uploadFile', options);\n  }\n\n  public toggleStorage(enabled: boolean) {\n    return this.performTaskWorkerVoid('toggleStorage', enabled);\n  }\n\n  public stopAll() {\n    return this.performTaskWorkerVoid('stopAll');\n  }\n\n  public startAll() {\n    return this.performTaskWorkerVoid('startAll');\n  }\n}\n\nconst apiManagerProxy = new ApiManagerProxy();\nMOUNT_CLASS_TO.apiManagerProxy = apiManagerProxy;\nexport default apiManagerProxy;\n","import { convertToArrayBuffer } from \"../../helpers/bytes\";\nimport type { InputCheckPasswordSRP } from \"../../layer\";\nimport { aesEncryptSync, aesDecryptSync, sha256HashSync, sha1HashSync, bytesModPow } from \"./crypto_utils\";\n\nexport default abstract class CryptoWorkerMethods {\n  abstract performTaskWorker<T>(task: string, ...args: any[]): Promise<T>;\n\n  public sha1Hash(bytes: Parameters<typeof sha1HashSync>[0]): Promise<Uint8Array> {\n    return this.performTaskWorker<Uint8Array>('sha1-hash', bytes);\n  }\n\n  public sha256Hash(bytes: Parameters<typeof sha256HashSync>[0]) {\n    return this.performTaskWorker<number[]>('sha256-hash', bytes);\n  }\n\n  public pbkdf2(buffer: Uint8Array, salt: Uint8Array, iterations: number) {\n    return this.performTaskWorker<ArrayBuffer>('pbkdf2', buffer, salt, iterations);\n  }\n\n  public aesEncrypt(bytes: Parameters<typeof aesEncryptSync>[0], \n    keyBytes: Parameters<typeof aesEncryptSync>[1], \n    ivBytes: Parameters<typeof aesEncryptSync>[2]) {\n    return this.performTaskWorker<ReturnType<typeof aesEncryptSync>>('aes-encrypt', convertToArrayBuffer(bytes), \n      convertToArrayBuffer(keyBytes), convertToArrayBuffer(ivBytes));\n  }\n\n  public aesDecrypt(encryptedBytes: Parameters<typeof aesDecryptSync>[0], \n    keyBytes: Parameters<typeof aesDecryptSync>[1], \n    ivBytes: Parameters<typeof aesDecryptSync>[2]): Promise<ArrayBuffer> {\n    return this.performTaskWorker<ArrayBuffer>('aes-decrypt', \n      encryptedBytes, keyBytes, ivBytes)\n      .then(bytes => convertToArrayBuffer(bytes));\n  }\n\n  public rsaEncrypt(publicKey: {modulus: string, exponent: string}, bytes: any): Promise<number[]> {\n    return this.performTaskWorker<number[]>('rsa-encrypt', publicKey, bytes);\n  }\n\n  public factorize(bytes: Uint8Array) {\n    return this.performTaskWorker<[number[], number[], number]>('factorize', [...bytes]);\n  }\n\n  public modPow(x: Parameters<typeof bytesModPow>[0], y: Parameters<typeof bytesModPow>[1], m: Parameters<typeof bytesModPow>[2]) {\n    return this.performTaskWorker<ReturnType<typeof bytesModPow>>('mod-pow', x, y, m);\n  }\n\n  public gzipUncompress<T>(bytes: ArrayBuffer, toString?: boolean) {\n    return this.performTaskWorker<T>('gzipUncompress', bytes, toString);\n  }\n\n  public computeSRP(password: string, state: any, isNew = false): Promise<InputCheckPasswordSRP> {\n    return this.performTaskWorker('computeSRP', password, state, isNew);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport function nextRandomInt(maxValue: number) {\n  return Math.floor(Math.random() * maxValue);\n}\n\nexport function randomLong() {\n  return '' + nextRandomInt(0xFFFFFFFF) + nextRandomInt(0xFFFFFF);\n  //return '' + parseInt(nextRandomInt(0xFFFFFFFF).toString(16) + nextRandomInt(0xFFFFFFFF).toString(16), 16);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n/* export function stringMiddleOverflow(str: string, maxLength: number) {\n  return str.length > maxLength ? str.slice(0, maxLength / 2 | 0) + '...' + str.slice(-Math.round(maxLength / 2)) : str; \n} */\n\nexport function limitSymbols(str: string, length: number, limitFrom = length + 10) {\n  str = str.trim();\n  if(str.length > limitFrom) {\n    str = str.slice(0, length)/* .replace(/\\s*$/, '') */ + '...';\n  }\n\n  return str;\n}\n\n// credits to https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\nexport function escapeRegExp(str: string) {\n  return str\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n    .replace(/-/g, '\\\\x2d');\n}\n\nexport function encodeEntities(value: string) {\n  return value.replace(/&/g, '&amp;').replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, (value) => {\n    var hi = value.charCodeAt(0);\n    var low = value.charCodeAt(1);\n    return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n  }).replace(/([^\\#-~| |!])/g, (value) => { // non-alphanumeric\n    return '&#' + value.charCodeAt(0) + ';';\n  }).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nexport function splitStringByLength(str: string, maxLength: number) {\n  if(str.length < maxLength) return [str];\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\n  const delimiter = ' ';//'\\n';\n  const out: string[] = [];\n\n  const cut = (end?: number) => {\n    let part = str.slice(lastSliceStartIndex, end);\n    const _arrayIndex = arrayIndex++;\n    if(part.length > maxLength) {\n      let overflowPart = part.slice(maxLength);\n      const splitted = splitStringByLength(overflowPart, maxLength);\n      splitted.forEach(part => {\n        out[arrayIndex++] = part;\n      });\n\n      part = part.slice(0, maxLength);\n    }\n\n    lastSliceStartIndex = end;\n    length = 0;\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\n  };\n\n  let lastIndex = 0;\n  do {\n    let index = str.indexOf(delimiter, lastIndex);\n    if(index === -1) {\n      if(lastIndex !== (str.length - 1)) {\n        cut();\n      }\n\n      break;\n    }\n\n    index += delimiter.length;\n\n    const partLength = index - lastIndex;\n    if((length + partLength) > maxLength) {\n      cut(length);\n    }\n    \n    lastIndex = index;\n    length += partLength;\n  } while(true);\n\n  return out;\n}\n\n// https://stackoverflow.com/a/14824756\n/* export const checkRTL = (s: string) => {           \n  const ltrChars  = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF'+'\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF',\n    rtlChars      = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC',\n    rtlDirCheck   = new RegExp('^[^'+ltrChars+']*['+rtlChars+']');\n\n  return rtlDirCheck.test(s);\n}; */\n\n//(window as any).checkRTL = checkRTL;\n\nexport function convertInputKeyToKey(inputKey: string) {\n  const str = inputKey.replace('input', '');\n  return (str[0].toLowerCase() + str.slice(1)) as string;\n}\n\nexport function convertKeyToInputKey(key: string) {\n  key = key[0].toUpperCase() + key.slice(1);\n  key = 'input' + key;\n  return key;\n}\n\nexport function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nexport function bytesToHex(bytes: ArrayLike<number>) {\n  bytes = bytes || [];\n  let arr: string[] = [];\n  for(let i = 0; i < bytes.length; ++i) {\n    arr.push((bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16));\n  }\n  return arr.join('');\n}\n\nexport function bytesFromHex(hexString: string) {\n  const len = hexString.length;\n  let start = 0;\n  let bytes: number[] = [];\n\n  if(len % 2) { // read 0x581 as 0x0581\n    bytes.push(parseInt(hexString.charAt(0), 16));\n    ++start;\n  }\n\n  for(let i = start; i < len; i += 2) {\n    bytes.push(parseInt(hexString.substr(i, 2), 16));\n  }\n\n  return bytes;\n}\n\nexport function bytesToBase64(bytes: number[] | Uint8Array) {\n  let mod3: number;\n  let result = '';\n\n  for(let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; ++nIdx) {\n    mod3 = nIdx % 3;\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24);\n    if(mod3 === 2 || nLen - nIdx === 1) {\n      result += String.fromCharCode(\n        uint6ToBase64(nUint24 >>> 18 & 63),\n        uint6ToBase64(nUint24 >>> 12 & 63),\n        uint6ToBase64(nUint24 >>> 6 & 63),\n        uint6ToBase64(nUint24 & 63)\n      );\n      nUint24 = 0;\n    }\n  }\n\n  return result.replace(/A(?=A$|$)/g, '=');\n}\n\nexport function uint6ToBase64(nUint6: number) {\n  return nUint6 < 26\n    ? nUint6 + 65\n    : nUint6 < 52\n      ? nUint6 + 71\n      : nUint6 < 62\n        ? nUint6 - 4\n        : nUint6 === 62\n          ? 43\n          : nUint6 === 63\n            ? 47\n            : 65\n}\n\nexport function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\n  const len = bytes1.length;\n  if(len !== bytes2.length) {\n    return false;\n  }\n\n  for(let i = 0; i < len; ++i) {\n    if(bytes1[i] !== bytes2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function bytesXor(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\n  const len = bytes1.length;\n  const bytes: number[] = [];\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = bytes1[i] ^ bytes2[i];\n  }\n\n  return bytes;\n}\n\nexport function bytesToArrayBuffer(b: number[]) {\n  return (new Uint8Array(b)).buffer;\n}\n\nexport function convertToArrayBuffer(bytes: any | ArrayBuffer | Uint8Array) {\n  // Be careful with converting subarrays!!\n  if(bytes instanceof ArrayBuffer) {\n    return bytes;\n  }\n  if(bytes.buffer !== undefined &&\n    bytes.buffer.byteLength === bytes.length * bytes.BYTES_PER_ELEMENT) {\n    return bytes.buffer;\n  }\n  return bytesToArrayBuffer(bytes);\n}\n\nexport function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\n  if((bytes as Uint8Array).buffer !== undefined) {\n    return bytes as Uint8Array;\n  } else if(typeof(bytes) === 'string') {\n    return new TextEncoder().encode(bytes);\n  }\n\n  return new Uint8Array(bytes);\n}\n\nexport function bytesFromArrayBuffer(buffer: ArrayBuffer) {\n  const len = buffer.byteLength;\n  const byteView = new Uint8Array(buffer);\n  const bytes: number[] = [];\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = byteView[i];\n  }\n\n  return bytes;\n}\n\nexport function bufferConcat(buffer1: any, buffer2: any) {\n  const l1 = buffer1.byteLength || buffer1.length;\n  const l2 = buffer2.byteLength || buffer2.length;\n  const tmp = new Uint8Array(l1 + l2);\n  tmp.set(buffer1 instanceof ArrayBuffer ? new Uint8Array(buffer1) : buffer1, 0);\n  tmp.set(buffer2 instanceof ArrayBuffer ? new Uint8Array(buffer2) : buffer2, l1);\n\n  return tmp.buffer;\n}\n\nexport function bufferConcats(...args: any[]) {\n  let length = 0;\n  args.forEach(b => length += b.byteLength || b.length);\n\n  const tmp = new Uint8Array(length);\n  \n  let lastLength = 0;\n  args.forEach(b => {\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\n    lastLength += b.byteLength || b.length;\n  });\n\n  return tmp/* .buffer */;\n}\n\nexport function bytesFromWordss(input: Uint32Array) {\n  const o: number[] = [];\n  for(let i = 0, length = input.length * 4; i < length; ++i) {\n    o.push((input[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff);\n  }\n\n  return o;\n}\n\nexport function bytesToWordss(input: ArrayBuffer | Uint8Array) {\n  let bytes: Uint8Array;\n  if(input instanceof ArrayBuffer) bytes = new Uint8Array(input);\n  else bytes = input;\n\n  const words: number[] = [];\n  for(let i = 0, len = bytes.length; i < len; ++i) {\n    words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8);\n  }\n\n  return new Uint32Array(words);\n}\n\n// * https://stackoverflow.com/a/52827031\n/* export const isBigEndian = (() => {\n  const array = new Uint8Array(4);\n  const view = new Uint32Array(array.buffer);\n  return !((view[0] = 1) & array[0]);\n})(); */\n"],"sourceRoot":""}
{"version":3,"file":"mtproto.worker.18e6792e0f5ddc0c2a2b.chunk.js","mappings":"uBAAIA,ECEIC,EACAC,EACAC,EACAC,ECLJC,E,mCCQG,MAAMC,EAAyE,CAAC,GAAK,CAAC,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,IAAI,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,GAAG,GAAG,CAAC,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,KAAK,KAAO,KAAK,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,KAAK,KAAO,KAAK,KAAO,KAAK,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,IAAI,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,KAAK,KAAO,MAAM,KAAO,KAAK,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,KAAK,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,KAAK,KAAO,KAAK,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,OAAO,MAAM,OAAO,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAckBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,mBAAmB,MAAM,kBAAkB,MAAM,QAAQ,MAAM,kBAAkB,MAAM,4CAA4C,MAAM,4CAA4C,MAAM,4CAA4C,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,mBAAmB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,mBAAmB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,8BAA8B,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,yCAAyC,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,yCAAyC,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,6BAA6B,KAAK,wCAAwC,KAAK,QAAQ,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,8BAA8B,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,yCAAyC,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,6BAA6B,KAAK,6BAA6B,KAAK,wCAAwC,KAAK,wCAAwC,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkkBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,IAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,mBAAmB,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,mBAAmB,IAAI,QAAQ,IAAI,mBAAmB,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,IAAI,QAAQ,GAAG,QAAQ,IAAI,QAAQ,IAAI,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkkBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkkBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,IAAI,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkiBAAiB,KAAK,iBAAiB,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,kBAAkB,KAAK,kBAAkB,KAAK,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,KAAK,OAAO,MAAM,OAAO,MAAM,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wB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","sources":["webpack://tweb/webpack/runtime/chunk loaded","webpack://tweb/webpack/runtime/compat","webpack://tweb/webpack/runtime/startup chunk dependencies","webpack://tweb/./src/config/emoji.ts","webpack://tweb/./src/environment/userAgent.ts","webpack://tweb/./src/helpers/cleanSearchText.ts","webpack://tweb/./src/helpers/fileName.ts","webpack://tweb/./src/lib/idb.ts","webpack://tweb/./src/environment/utils.ts","webpack://tweb/./src/lib/rootScope.ts","webpack://tweb/./src/lib/appManagers/appStateManager.ts","webpack://tweb/./src/helpers/object/setDeepProperty.ts","webpack://tweb/./src/helpers/object/getDeepProperty.ts","webpack://tweb/./src/lib/mtproto/networkStats.ts","webpack://tweb/./src/lib/mtproto/transports/http.ts","webpack://tweb/./src/lib/mtproto/transports/websocket.ts","webpack://tweb/./src/helpers/array/randomize.ts","webpack://tweb/./src/lib/mtproto/transports/obfuscation.ts","webpack://tweb/./src/lib/mtproto/transports/abridged.ts","webpack://tweb/./src/helpers/bytes/bytesToHex.ts","webpack://tweb/./src/lib/mtproto/transports/tcpObfuscated.ts","webpack://tweb/./src/lib/mtproto/transports/socketProxied.ts","webpack://tweb/./src/lib/mtproto/dcConfigurator.ts","webpack://tweb/./src/lib/mtproto/transports/controller.ts","webpack://tweb/./src/lib/appManagers/utils/storages/resetStoragesPromise.ts","webpack://tweb/./src/lib/appManagers/manager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/loadStorages.ts","webpack://tweb/./src/lib/appManagers/appStoragesManager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/createStorages.ts","webpack://tweb/./src/lib/mtproto/passwordManager.ts","webpack://tweb/./src/lib/mtproto/referenceDatabase.ts","webpack://tweb/./src/helpers/object/safeReplaceObject.ts","webpack://tweb/./src/lib/appManagers/utils/messages/getPeerIdsFromMessage.ts","webpack://tweb/./src/helpers/object/defineNotNumerableProperties.ts","webpack://tweb/./src/lib/appManagers/utils/dialogs/setDialogIndex.ts","webpack://tweb/./src/lib/storages/dialogs.ts","webpack://tweb/./src/lib/storages/filters.ts","webpack://tweb/./src/helpers/applyMixins.ts","webpack://tweb/./src/lib/appManagers/apiUpdatesManager.ts","webpack://tweb/./src/lib/appManagers/appAvatarsManager.ts","webpack://tweb/./src/lib/appManagers/appCallsManager.ts","webpack://tweb/./src/helpers/restrictions.ts","webpack://tweb/./src/lib/appManagers/appChatsManager.ts","webpack://tweb/./src/lib/langPack.ts","webpack://tweb/./src/helpers/date.ts","webpack://tweb/./src/helpers/object/safeReplaceArrayInObject.ts","webpack://tweb/./src/lib/appManagers/appDocsManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentURL.ts","webpack://tweb/./src/lib/appManagers/appDraftsManager.ts","webpack://tweb/./src/lib/appManagers/appEmojiManager.ts","webpack://tweb/./src/lib/appManagers/appGroupCallsManager.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoInput.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoMediaInput.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentMediaInput.ts","webpack://tweb/./src/lib/appManagers/appInlineBotsManager.ts","webpack://tweb/./src/lib/appManagers/appMessagesIdsManager.ts","webpack://tweb/./src/lib/mtproto/telegramMeWebManager.ts","webpack://tweb/./src/helpers/string/splitStringByLength.ts","webpack://tweb/./src/lib/appManagers/appTabsManager.ts","webpack://tweb/./src/lib/appManagers/appMessagesManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentInputFileName.ts","webpack://tweb/./src/helpers/string/convertInputKeyToKey.ts","webpack://tweb/./src/lib/appManagers/appNotificationsManager.ts","webpack://tweb/./src/lib/appManagers/appPeersManager.ts","webpack://tweb/./src/lib/appManagers/appPhotosManager.ts","webpack://tweb/./src/lib/appManagers/appPollsManager.ts","webpack://tweb/./src/lib/appManagers/appPrivacyManager.ts","webpack://tweb/./src/lib/appManagers/appProfileManager.ts","webpack://tweb/./src/helpers/callbackifyAll.ts","webpack://tweb/./src/lib/appManagers/appReactionsManager.ts","webpack://tweb/./src/lib/appManagers/appStickersManager.ts","webpack://tweb/./src/helpers/fixBase64String.ts","webpack://tweb/./src/helpers/cleanUsername.ts","webpack://tweb/./src/lib/appManagers/appUsersManager.ts","webpack://tweb/./src/lib/appManagers/appWebPagesManager.ts","webpack://tweb/./src/lib/mtproto/apiFileManager.ts","webpack://tweb/./src/helpers/fixFirefoxSvg.ts","webpack://tweb/./src/helpers/blob/readBlobAsArrayBuffer.ts","webpack://tweb/./src/helpers/blob/readBlobAs.ts","webpack://tweb/./src/lib/mtproto/api_methods.ts","webpack://tweb/./src/lib/mtproto/apiManager.ts","webpack://tweb/./src/lib/storages/peers.ts","webpack://tweb/./src/lib/storages/thumbs.ts","webpack://tweb/./src/lib/mtproto/schema.ts","webpack://tweb/./src/helpers/number/intToUint.ts","webpack://tweb/./src/helpers/long/longFromInts.ts","webpack://tweb/./src/lib/mtproto/tl_utils.ts","webpack://tweb/./src/helpers/gzipUncompress.ts","webpack://tweb/./src/helpers/bytes/addPadding.ts","webpack://tweb/./src/helpers/bigInt/bigIntConversion.ts","webpack://tweb/./src/lib/mtproto/networker.ts","webpack://tweb/./src/helpers/long/sortLongsArray.ts","webpack://tweb/./src/helpers/long/longToBytes.ts","webpack://tweb/./src/lib/mtproto/networkerFactory.ts","webpack://tweb/./src/lib/mtproto/rsaKeysManager.ts","webpack://tweb/./src/helpers/bytes/bytesXor.ts","webpack://tweb/./src/lib/mtproto/authorizer.ts","webpack://tweb/./src/lib/mtproto/timeManager.ts","webpack://tweb/./src/lib/appManagers/appManagersManager.ts","webpack://tweb/./src/lib/appManagers/createManagers.ts","webpack://tweb/./src/lib/mtproto/mtproto.worker.ts","webpack://tweb/./src/helpers/listenMessagePort.ts","webpack://tweb/./src/lib/mtproto/mtproto_config.ts","webpack://tweb/./src/lib/richTextProcessor/combineSameEntities.ts","webpack://tweb/./src/lib/richTextProcessor/findConflictingEntity.ts","webpack://tweb/./src/lib/richTextProcessor/index.ts","webpack://tweb/./src/lib/richTextProcessor/mergeEntities.ts","webpack://tweb/./src/lib/richTextProcessor/sortEntities.ts","webpack://tweb/./src/vendor/emoji/index.ts","webpack://tweb/webpack/bootstrap","webpack://tweb/webpack/runtime/compat get default export","webpack://tweb/webpack/runtime/define property getters","webpack://tweb/webpack/runtime/ensure chunk","webpack://tweb/webpack/runtime/get javascript chunk filename","webpack://tweb/webpack/runtime/get mini-css chunk filename","webpack://tweb/webpack/runtime/global","webpack://tweb/webpack/runtime/hasOwnProperty shorthand","webpack://tweb/webpack/runtime/make namespace object","webpack://tweb/webpack/runtime/node module decorator","webpack://tweb/webpack/runtime/publicPath","webpack://tweb/webpack/runtime/importScripts chunk loading","webpack://tweb/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","(() => {\n  if (typeof __webpack_require__ !== 'undefined') {\n    var oldGetScript = __webpack_require__.u;\n    var oldLoadScript = __webpack_require__.e;\n    var queryMap = new Map();\n    var countMap = new Map();\n    __webpack_require__.u = function (chunkId) {\n      var result = oldGetScript(chunkId);\n      return (\n        result + (queryMap.has(chunkId) ? '?' + queryMap.get(chunkId) : '')\n      );\n    };\n    __webpack_require__.e = function (chunkId) {\n      var result = oldLoadScript(chunkId);\n      return result.catch(function (error) {\n        var retries = countMap.has(chunkId) ? countMap.get(chunkId) : 999999;\n        if (retries < 1) {\n          var realSrc = oldGetScript(chunkId);\n          error.message =\n            'Loading chunk ' +\n            chunkId +\n            ' failed after 999999 retries.\\n(' +\n            realSrc +\n            ')';\n          error.request = realSrc;\n          throw error;\n        }\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            var retryAttempt = 999999 - retries + 1;\n            var retryAttemptString = '&retry-attempt=' + retryAttempt;\n            var cacheBust = (function () {\n              return Date.now();\n            })();\n            +retryAttemptString;\n            queryMap.set(chunkId, cacheBust);\n            countMap.set(chunkId, retries - 1);\n            resolve(__webpack_require__.e(chunkId));\n          }, 3000);\n        });\n      });\n    };\n  }\n})();\n","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([699,211,216,960,434,339].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { EMOJI_VERSION } from \"../environment/emojiVersionsSupport\";\n\nexport const EmojiVersions: {[version in EMOJI_VERSION]: {[emoji: string]: number}} = {\"14\":{\"1f6dd\":4867,\"1f6de\":4916,\"1f6df\":4923,\"1f7f0\":62832,\"1f979\":183,\"1f9cc\":1557,\"1fa7b\":61332,\"1fa7c\":61330,\"1faa9\":51093,\"1faaa\":61364,\"1faab\":61189,\"1faac\":51085,\"1fab7\":2651,\"1fab8\":2631,\"1fab9\":2672,\"1faba\":2673,\"1fac3\":1520,\"1fac4\":1521,\"1fac5\":1505,\"1fad7\":3793,\"1fad8\":3707,\"1fad9\":3804,\"1fae0\":111,\"1fae1\":136,\"1fae2\":132,\"1fae3\":133,\"1fae4\":174,\"1fae5\":142,\"1fae6\":1385,\"1fae7\":61353,\"1faf0\":1341,\"1faf1\":1332,\"1faf2\":1333,\"1faf3\":1334,\"1faf4\":1335,\"1faf5\":1351,\"1faf6\":1360,\"1faf1-1f3fb-200d-1faf2-1f3fc\":0,\"1faf1-1f3fb-200d-1faf2-1f3fd\":0,\"1faf1-1f3fb-200d-1faf2-1f3fe\":0,\"1faf1-1f3fb-200d-1faf2-1f3ff\":0,\"1faf1-1f3fc-200d-1faf2-1f3fb\":0,\"1faf1-1f3fc-200d-1faf2-1f3fd\":0,\"1faf1-1f3fc-200d-1faf2-1f3fe\":0,\"1faf1-1f3fc-200d-1faf2-1f3ff\":0,\"1faf1-1f3fd-200d-1faf2-1f3fb\":0,\"1faf1-1f3fd-200d-1faf2-1f3fc\":0,\"1faf1-1f3fd-200d-1faf2-1f3fe\":0,\"1faf1-1f3fd-200d-1faf2-1f3ff\":0,\"1faf1-1f3fe-200d-1faf2-1f3fb\":0,\"1faf1-1f3fe-200d-1faf2-1f3fc\":0,\"1faf1-1f3fe-200d-1faf2-1f3fd\":0,\"1faf1-1f3fe-200d-1faf2-1f3ff\":0,\"1faf1-1f3ff-200d-1faf2-1f3fb\":0,\"1faf1-1f3ff-200d-1faf2-1f3fc\":0,\"1faf1-1f3ff-200d-1faf2-1f3fd\":0,\"1faf1-1f3ff-200d-1faf2-1f3fe\":0,\"1fac3-1f3fb\":0,\"1fac3-1f3fc\":0,\"1fac3-1f3fd\":0,\"1fac3-1f3fe\":0,\"1fac3-1f3ff\":0,\"1fac4-1f3fb\":0,\"1fac4-1f3fc\":0,\"1fac4-1f3fd\":0,\"1fac4-1f3fe\":0,\"1fac4-1f3ff\":0,\"1fac5-1f3fb\":0,\"1fac5-1f3fc\":0,\"1fac5-1f3fd\":0,\"1fac5-1f3fe\":0,\"1fac5-1f3ff\":0,\"1faf0-1f3fb\":0,\"1faf0-1f3fc\":0,\"1faf0-1f3fd\":0,\"1faf0-1f3fe\":0,\"1faf0-1f3ff\":0,\"1faf1-1f3fb\":0,\"1faf1-1f3fc\":0,\"1faf1-1f3fd\":0,\"1faf1-1f3fe\":0,\"1faf1-1f3ff\":0,\"1faf2-1f3fb\":0,\"1faf2-1f3fc\":0,\"1faf2-1f3fd\":0,\"1faf2-1f3fe\":0,\"1faf2-1f3ff\":0,\"1faf3-1f3fb\":0,\"1faf3-1f3fc\":0,\"1faf3-1f3fd\":0,\"1faf3-1f3fe\":0,\"1faf3-1f3ff\":0,\"1faf4-1f3fb\":0,\"1faf4-1f3fc\":0,\"1faf4-1f3fd\":0,\"1faf4-1f3fe\":0,\"1faf4-1f3ff\":0,\"1faf5-1f3fb\":0,\"1faf5-1f3fc\":0,\"1faf5-1f3fd\":0,\"1faf5-1f3fe\":0,\"1faf5-1f3ff\":0,\"1faf6-1f3fb\":0,\"1faf6-1f3fc\":0,\"1faf6-1f3fd\":0,\"1faf6-1f3fe\":0,\"1faf6-1f3ff\":0},\"\":{\"2049\":62835,\"2122\":62863,\"2139\":62888,\"2194\":62764,\"2195\":62763,\"2196\":62762,\"2197\":62756,\"2198\":62758,\"2199\":62760,\"2328\":61194,\"2600\":4990,\"2601\":4998,\"2602\":41013,\"2603\":41018,\"2604\":41020,\"2611\":62851,\"2614\":41014,\"2615\":3781,\"2618\":2667,\"2620\":1106,\"2622\":62753,\"2623\":62754,\"2626\":62783,\"2638\":62780,\"2639\":177,\"2648\":62788,\"2649\":62789,\"2650\":62796,\"2651\":62797,\"2652\":62798,\"2653\":62799,\"2660\":51095,\"2663\":51098,\"2665\":51096,\"2666\":51097,\"2668\":4865,\"2692\":61297,\"2693\":4922,\"2694\":61300,\"2696\":61311,\"2697\":61319,\"2699\":61309,\"2702\":61284,\"2705\":62850,\"2708\":4931,\"2709\":61245,\"2712\":61259,\"2714\":62852,\"2716\":62828,\"2721\":62779,\"2728\":51029,\"2733\":62858,\"2734\":62859,\"2744\":41017,\"2747\":62860,\"2753\":62836,\"2754\":62837,\"2755\":62838,\"2757\":62839,\"2763\":1137,\"2764\":1141,\"2795\":62829,\"2796\":62830,\"2797\":62831,\"2934\":62767,\"2935\":62768,\"3030\":62840,\"3297\":62912,\"3299\":62913,\"0023-20e3\":62864,\"002a-20e3\":62865,\"0030-20e3\":62866,\"0031-20e3\":62867,\"0032-20e3\":62868,\"0033-20e3\":62869,\"0034-20e3\":62870,\"0035-20e3\":62871,\"0036-20e3\":62872,\"0037-20e3\":62873,\"0038-20e3\":62874,\"0039-20e3\":62875,\"00a9\":62861,\"00ae\":62862,\"1f004\":51101,\"1f0cf\":51100,\"1f170\":62882,\"1f171\":62884,\"1f17e\":62893,\"1f17f\":62895,\"1f18e\":62883,\"1f191\":62885,\"1f192\":62886,\"1f193\":62887,\"1f194\":62889,\"1f195\":62891,\"1f196\":62892,\"1f197\":62894,\"1f198\":62896,\"1f199\":62897,\"1f19a\":62898,\"1f1e6-1f1e8\":71594,\"1f1e6-1f1e9\":71595,\"1f1e6-1f1ea\":71596,\"1f1e6-1f1eb\":71597,\"1f1e6-1f1ec\":71598,\"1f1e6-1f1ee\":71599,\"1f1e6-1f1f1\":71600,\"1f1e6-1f1f2\":71601,\"1f1e6-1f1f4\":71602,\"1f1e6-1f1f6\":71603,\"1f1e6-1f1f7\":71604,\"1f1e6-1f1f8\":71605,\"1f1e6-1f1f9\":71606,\"1f1e6-1f1fa\":71607,\"1f1e6-1f1fc\":71608,\"1f1e6-1f1fd\":71609,\"1f1e6-1f1ff\":71610,\"1f1e7-1f1e6\":71611,\"1f1e7-1f1e7\":71612,\"1f1e7-1f1e9\":71613,\"1f1e7-1f1ea\":71614,\"1f1e7-1f1eb\":71615,\"1f1e7-1f1ec\":71616,\"1f1e7-1f1ed\":71617,\"1f1e7-1f1ee\":71618,\"1f1e7-1f1ef\":71619,\"1f1e7-1f1f1\":71620,\"1f1e7-1f1f2\":71621,\"1f1e7-1f1f3\":71622,\"1f1e7-1f1f4\":71623,\"1f1e7-1f1f6\":71624,\"1f1e7-1f1f7\":71625,\"1f1e7-1f1f8\":71626,\"1f1e7-1f1f9\":71627,\"1f1e7-1f1fb\":71628,\"1f1e7-1f1fc\":71629,\"1f1e7-1f1fe\":71630,\"1f1e7-1f1ff\":71631,\"1f1e8-1f1e6\":71632,\"1f1e8-1f1e8\":71633,\"1f1e8-1f1e9\":71634,\"1f1e8-1f1eb\":71635,\"1f1e8-1f1ec\":71636,\"1f1e8-1f1ed\":71637,\"1f1e8-1f1ee\":71638,\"1f1e8-1f1f0\":71639,\"1f1e8-1f1f1\":71640,\"1f1e8-1f1f2\":71641,\"1f1e8-1f1f3\":71642,\"1f1e8-1f1f4\":71643,\"1f1e8-1f1f5\":71644,\"1f1e8-1f1f7\":71645,\"1f1e8-1f1fa\":71646,\"1f1e8-1f1fb\":71647,\"1f1e8-1f1fc\":71648,\"1f1e8-1f1fd\":71649,\"1f1e8-1f1fe\":71650,\"1f1e8-1f1ff\":71651,\"1f1e9-1f1ea\":71652,\"1f1e9-1f1ec\":71653,\"1f1e9-1f1ef\":71654,\"1f1e9-1f1f0\":71655,\"1f1e9-1f1f2\":71656,\"1f1e9-1f1f4\":71657,\"1f1e9-1f1ff\":71658,\"1f1ea-1f1e6\":71659,\"1f1ea-1f1e8\":71660,\"1f1ea-1f1ea\":71661,\"1f1ea-1f1ec\":71662,\"1f1ea-1f1ed\":71663,\"1f1ea-1f1f7\":71664,\"1f1ea-1f1f8\":71665,\"1f1ea-1f1f9\":71666,\"1f1ea-1f1fa\":71667,\"1f1eb-1f1ee\":71668,\"1f1eb-1f1ef\":71669,\"1f1eb-1f1f0\":71670,\"1f1eb-1f1f2\":71671,\"1f1eb-1f1f4\":71672,\"1f1eb-1f1f7\":71673,\"1f1ec-1f1e6\":71674,\"1f1ec-1f1e7\":71675,\"1f1ec-1f1e9\":71676,\"1f1ec-1f1ea\":71677,\"1f1ec-1f1eb\":71678,\"1f1ec-1f1ec\":71679,\"1f1ec-1f1ed\":71680,\"1f1ec-1f1ee\":71681,\"1f1ec-1f1f1\":71682,\"1f1ec-1f1f2\":71683,\"1f1ec-1f1f3\":71684,\"1f1ec-1f1f5\":71685,\"1f1ec-1f1f6\":71686,\"1f1ec-1f1f7\":71687,\"1f1ec-1f1f8\":71688,\"1f1ec-1f1f9\":71689,\"1f1ec-1f1fa\":71690,\"1f1ec-1f1fc\":71691,\"1f1ec-1f1fe\":71692,\"1f1ed-1f1f0\":71693,\"1f1ed-1f1f2\":71694,\"1f1ed-1f1f3\":71695,\"1f1ed-1f1f7\":71696,\"1f1ed-1f1f9\":71697,\"1f1ed-1f1fa\":71698,\"1f1ee-1f1e8\":71699,\"1f1ee-1f1e9\":71700,\"1f1ee-1f1ea\":71701,\"1f1ee-1f1f1\":71702,\"1f1ee-1f1f2\":71703,\"1f1ee-1f1f3\":71704,\"1f1ee-1f1f4\":71705,\"1f1ee-1f1f6\":71706,\"1f1ee-1f1f7\":71707,\"1f1ee-1f1f8\":71708,\"1f1ee-1f1f9\":71709,\"1f1ef-1f1ea\":71710,\"1f1ef-1f1f2\":71711,\"1f1ef-1f1f4\":71712,\"1f1ef-1f1f5\":71713,\"1f1f0-1f1ea\":71714,\"1f1f0-1f1ec\":71715,\"1f1f0-1f1ed\":71716,\"1f1f0-1f1ee\":71717,\"1f1f0-1f1f2\":71718,\"1f1f0-1f1f3\":71719,\"1f1f0-1f1f5\":71720,\"1f1f0-1f1f7\":71721,\"1f1f0-1f1fc\":71722,\"1f1f0-1f1fe\":71723,\"1f1f0-1f1ff\":71724,\"1f1f1-1f1e6\":71725,\"1f1f1-1f1e7\":71726,\"1f1f1-1f1e8\":71727,\"1f1f1-1f1ee\":71728,\"1f1f1-1f1f0\":71729,\"1f1f1-1f1f7\":71730,\"1f1f1-1f1f8\":71731,\"1f1f1-1f1f9\":71732,\"1f1f1-1f1fa\":71733,\"1f1f1-1f1fb\":71734,\"1f1f1-1f1fe\":71735,\"1f1f2-1f1e6\":71736,\"1f1f2-1f1e8\":71737,\"1f1f2-1f1e9\":71738,\"1f1f2-1f1ea\":71739,\"1f1f2-1f1eb\":71740,\"1f1f2-1f1ec\":71741,\"1f1f2-1f1ed\":71742,\"1f1f2-1f1f0\":71743,\"1f1f2-1f1f1\":71744,\"1f1f2-1f1f2\":71745,\"1f1f2-1f1f3\":71746,\"1f1f2-1f1f4\":71747,\"1f1f2-1f1f5\":71748,\"1f1f2-1f1f6\":71749,\"1f1f2-1f1f7\":71750,\"1f1f2-1f1f8\":71751,\"1f1f2-1f1f9\":71752,\"1f1f2-1f1fa\":71753,\"1f1f2-1f1fb\":71754,\"1f1f2-1f1fc\":71755,\"1f1f2-1f1fd\":71756,\"1f1f2-1f1fe\":71757,\"1f1f2-1f1ff\":71758,\"1f1f3-1f1e6\":71759,\"1f1f3-1f1e8\":71760,\"1f1f3-1f1ea\":71761,\"1f1f3-1f1eb\":71762,\"1f1f3-1f1ec\":71763,\"1f1f3-1f1ee\":71764,\"1f1f3-1f1f1\":71765,\"1f1f3-1f1f4\":71766,\"1f1f3-1f1f5\":71767,\"1f1f3-1f1f7\":71768,\"1f1f3-1f1fa\":71769,\"1f1f3-1f1ff\":71770,\"1f1f4-1f1f2\":71771,\"1f1f5-1f1e6\":71772,\"1f1f5-1f1ea\":71773,\"1f1f5-1f1eb\":71774,\"1f1f5-1f1ec\":71775,\"1f1f5-1f1ed\":71776,\"1f1f5-1f1f0\":71777,\"1f1f5-1f1f1\":71778,\"1f1f5-1f1f2\":71779,\"1f1f5-1f1f3\":71780,\"1f1f5-1f1f7\":71781,\"1f1f5-1f1f8\":71782,\"1f1f5-1f1f9\":71783,\"1f1f5-1f1fc\":71784,\"1f1f5-1f1fe\":71785,\"1f1f6-1f1e6\":71786,\"1f1f7-1f1ea\":71787,\"1f1f7-1f1f4\":71788,\"1f1f7-1f1f8\":71789,\"1f1f7-1f1fa\":71790,\"1f1f7-1f1fc\":71791,\"1f1f8-1f1e6\":71792,\"1f1f8-1f1e7\":71793,\"1f1f8-1f1e8\":71794,\"1f1f8-1f1e9\":71795,\"1f1f8-1f1ea\":71796,\"1f1f8-1f1ec\":71797,\"1f1f8-1f1ed\":71798,\"1f1f8-1f1ee\":71799,\"1f1f8-1f1ef\":71800,\"1f1f8-1f1f0\":71801,\"1f1f8-1f1f1\":71802,\"1f1f8-1f1f2\":71803,\"1f1f8-1f1f3\":71804,\"1f1f8-1f1f4\":71805,\"1f1f8-1f1f7\":71806,\"1f1f8-1f1f8\":71807,\"1f1f8-1f1f9\":71808,\"1f1f8-1f1fb\":71809,\"1f1f8-1f1fd\":71810,\"1f1f8-1f1fe\":71811,\"1f1f8-1f1ff\":71812,\"1f1f9-1f1e6\":71813,\"1f1f9-1f1e8\":71814,\"1f1f9-1f1e9\":71815,\"1f1f9-1f1eb\":71816,\"1f1f9-1f1ec\":71817,\"1f1f9-1f1ed\":71818,\"1f1f9-1f1ef\":71819,\"1f1f9-1f1f0\":71820,\"1f1f9-1f1f1\":71821,\"1f1f9-1f1f2\":71822,\"1f1f9-1f1f3\":71823,\"1f1f9-1f1f4\":71824,\"1f1f9-1f1f7\":71825,\"1f1f9-1f1f9\":71826,\"1f1f9-1f1fb\":71827,\"1f1f9-1f1fc\":71828,\"1f1f9-1f1ff\":71829,\"1f1fa-1f1e6\":71830,\"1f1fa-1f1ec\":71831,\"1f1fa-1f1f2\":71832,\"1f1fa-1f1f3\":71833,\"1f1fa-1f1f8\":71834,\"1f1fa-1f1fe\":71835,\"1f1fa-1f1ff\":71836,\"1f1fb-1f1e6\":71837,\"1f1fb-1f1e8\":71838,\"1f1fb-1f1ea\":71839,\"1f1fb-1f1ec\":71840,\"1f1fb-1f1ee\":71841,\"1f1fb-1f1f3\":71842,\"1f1fb-1f1fa\":71843,\"1f1fc-1f1eb\":71844,\"1f1fc-1f1f8\":71845,\"1f1fd-1f1f0\":71846,\"1f1fe-1f1ea\":71847,\"1f1fe-1f1f9\":71848,\"1f1ff-1f1e6\":71849,\"1f1ff-1f1f2\":71850,\"1f1ff-1f1fc\":71851,\"1f201\":62899,\"1f202\":62900,\"1f21a\":62906,\"1f22f\":62903,\"1f232\":62907,\"1f233\":62911,\"1f234\":62910,\"1f235\":62915,\"1f236\":62902,\"1f237\":62901,\"1f238\":62909,\"1f239\":62905,\"1f23a\":62914,\"1f250\":62904,\"1f251\":62908,\"1f300\":41010,\"1f301\":4857,\"1f302\":41012,\"1f303\":4858,\"1f304\":4860,\"1f305\":4861,\"1f306\":4862,\"1f307\":4863,\"1f308\":41011,\"1f309\":4864,\"1f30a\":41023,\"1f30b\":4815,\"1f30c\":4997,\"1f30d\":4806,\"1f30e\":4807,\"1f30f\":4808,\"1f310\":4809,\"1f311\":4977,\"1f312\":4978,\"1f313\":4979,\"1f314\":4980,\"1f315\":4981,\"1f316\":4982,\"1f317\":4983,\"1f318\":4984,\"1f319\":4985,\"1f31a\":4986,\"1f31b\":4987,\"1f31c\":4988,\"1f31d\":4991,\"1f31e\":4992,\"1f31f\":4995,\"1f320\":4996,\"1f321\":4989,\"1f324\":41001,\"1f325\":41002,\"1f326\":41003,\"1f327\":41004,\"1f328\":41005,\"1f329\":41006,\"1f32a\":41007,\"1f32b\":41008,\"1f32c\":41009,\"1f32d\":3725,\"1f32e\":3727,\"1f32f\":3728,\"1f330\":3708,\"1f331\":2659,\"1f332\":2661,\"1f333\":2662,\"1f334\":2663,\"1f335\":2664,\"1f336\":3698,\"1f337\":2658,\"1f338\":2649,\"1f339\":2653,\"1f33a\":2655,\"1f33b\":2656,\"1f33c\":2657,\"1f33d\":3697,\"1f33e\":2665,\"1f33f\":2666,\"1f340\":2668,\"1f341\":2669,\"1f342\":2670,\"1f343\":2671,\"1f344\":3705,\"1f345\":3690,\"1f346\":3694,\"1f347\":3674,\"1f348\":3675,\"1f349\":3676,\"1f34a\":3677,\"1f34b\":3678,\"1f34c\":3679,\"1f34d\":3680,\"1f34e\":3682,\"1f34f\":3683,\"1f350\":3684,\"1f351\":3685,\"1f352\":3686,\"1f353\":3687,\"1f354\":3722,\"1f355\":3724,\"1f356\":3718,\"1f357\":3719,\"1f358\":3744,\"1f359\":3745,\"1f35a\":3746,\"1f35b\":3747,\"1f35c\":3748,\"1f35d\":3749,\"1f35e\":3709,\"1f35f\":3723,\"1f360\":3750,\"1f361\":3756,\"1f362\":3751,\"1f363\":3752,\"1f364\":3753,\"1f365\":3754,\"1f366\":3765,\"1f367\":3766,\"1f368\":3767,\"1f369\":3768,\"1f36a\":3769,\"1f36b\":3774,\"1f36c\":3775,\"1f36d\":3776,\"1f36e\":3777,\"1f36f\":3778,\"1f370\":3771,\"1f371\":3743,\"1f372\":3735,\"1f373\":3733,\"1f374\":3801,\"1f375\":3783,\"1f376\":3784,\"1f377\":3786,\"1f378\":3787,\"1f379\":3788,\"1f37a\":3789,\"1f37b\":3790,\"1f37c\":3779,\"1f37d\":3800,\"1f37e\":3785,\"1f37f\":3739,\"1f380\":51040,\"1f381\":51041,\"1f382\":3770,\"1f383\":51024,\"1f384\":51025,\"1f385\":1527,\"1f386\":51026,\"1f387\":51027,\"1f388\":51030,\"1f389\":51031,\"1f38a\":51032,\"1f38b\":51033,\"1f38c\":71588,\"1f38d\":51034,\"1f38e\":51035,\"1f38f\":51036,\"1f390\":51037,\"1f391\":51038,\"1f392\":61134,\"1f393\":61147,\"1f396\":51045,\"1f397\":51042,\"1f399\":61167,\"1f39a\":61168,\"1f39b\":61169,\"1f39e\":61203,\"1f39f\":51043,\"1f3a0\":4866,\"1f3a1\":4868,\"1f3a2\":4869,\"1f3a3\":51072,\"1f3a4\":61170,\"1f3a5\":61202,\"1f3a6\":62819,\"1f3a7\":61171,\"1f3a8\":51105,\"1f3a9\":61146,\"1f3aa\":4871,\"1f3ab\":51044,\"1f3ac\":61205,\"1f3ad\":51103,\"1f3ae\":51086,\"1f3af\":51078,\"1f3b0\":51088,\"1f3b1\":51081,\"1f3b2\":51089,\"1f3b3\":51060,\"1f3b4\":51102,\"1f3b5\":61165,\"1f3b6\":61166,\"1f3b7\":61173,\"1f3b8\":61175,\"1f3b9\":61176,\"1f3ba\":61177,\"1f3bb\":61178,\"1f3bc\":61164,\"1f3bd\":51074,\"1f3be\":51058,\"1f3bf\":51075,\"1f3c0\":51054,\"1f3c1\":71586,\"1f3c2\":1600,\"1f3c3-200d-2640\":1584,\"1f3c3-200d-2642\":1583,\"1f3c3\":1582,\"1f3c4-200d-2640\":1606,\"1f3c4-200d-2642\":1605,\"1f3c4\":1604,\"1f3c5\":51047,\"1f3c6\":51046,\"1f3c7\":1598,\"1f3c8\":51056,\"1f3c9\":51057,\"1f3ca-200d-2640\":1612,\"1f3ca-200d-2642\":1611,\"1f3ca\":1610,\"1f3cb-200d-2640\":1618,\"1f3cb-200d-2642\":1617,\"1f3cb\":1616,\"1f3cc-200d-2640\":1603,\"1f3cc-200d-2642\":1602,\"1f3cc\":1601,\"1f3cd\":4902,\"1f3ce\":4901,\"1f3cf\":51061,\"1f3d0\":51055,\"1f3d1\":51062,\"1f3d2\":51063,\"1f3d3\":51065,\"1f3d4\":4813,\"1f3d5\":4817,\"1f3d6\":4818,\"1f3d7\":4824,\"1f3d8\":4829,\"1f3d9\":4859,\"1f3da\":4830,\"1f3db\":4823,\"1f3dc\":4819,\"1f3dd\":4820,\"1f3de\":4821,\"1f3df\":4822,\"1f3e0\":4831,\"1f3e1\":4832,\"1f3e2\":4833,\"1f3e3\":4834,\"1f3e4\":4835,\"1f3e5\":4836,\"1f3e6\":4837,\"1f3e7\":62729,\"1f3e8\":4838,\"1f3e9\":4839,\"1f3ea\":4840,\"1f3eb\":4841,\"1f3ec\":4842,\"1f3ed\":4843,\"1f3ee\":61216,\"1f3ef\":4844,\"1f3f0\":4845,\"1f3f3-200d-1f308\":71591,\"1f3f3-200d-26a7\":71592,\"1f3f3\":71590,\"1f3f4-200d-2620\":71593,\"1f3f4-e0067-e0062-e0065-e006e-e0067-e007f\":71852,\"1f3f4-e0067-e0062-e0073-e0063-e0074-e007f\":71853,\"1f3f4-e0067-e0062-e0077-e006c-e0073-e007f\":71854,\"1f3f4\":71589,\"1f3f5\":2652,\"1f3f7\":61234,\"1f3f8\":51066,\"1f3f9\":61303,\"1f3fa\":3805,\"1f3fb\":9525,\"1f3fc\":9526,\"1f3fd\":9527,\"1f3fe\":9528,\"1f3ff\":9529,\"1f400\":2576,\"1f401\":2575,\"1f402\":2556,\"1f403\":2557,\"1f404\":2558,\"1f405\":2547,\"1f406\":2548,\"1f407\":2579,\"1f408-200d-2b1b\":2544,\"1f408\":2543,\"1f409\":2618,\"1f40a\":2613,\"1f40b\":2622,\"1f40c\":2632,\"1f40d\":2616,\"1f40e\":2550,\"1f40f\":2563,\"1f410\":2565,\"1f411\":2564,\"1f412\":2531,\"1f413\":2596,\"1f414\":2595,\"1f415-200d-1f9ba\":2537,\"1f415\":2535,\"1f416\":2560,\"1f417\":2561,\"1f418\":2570,\"1f419\":2629,\"1f41a\":2630,\"1f41b\":2634,\"1f41c\":2635,\"1f41d\":2636,\"1f41e\":2638,\"1f41f\":2625,\"1f420\":2626,\"1f421\":2627,\"1f422\":2614,\"1f423\":2597,\"1f424\":2598,\"1f425\":2599,\"1f426\":2600,\"1f427\":2601,\"1f428\":2586,\"1f429\":2538,\"1f42a\":2566,\"1f42b\":2567,\"1f42c\":2623,\"1f42d\":2574,\"1f42e\":2555,\"1f42f\":2546,\"1f430\":2578,\"1f431\":2542,\"1f432\":2617,\"1f433\":2621,\"1f434\":2549,\"1f435\":2530,\"1f436\":2534,\"1f437\":2559,\"1f438\":2612,\"1f439\":2577,\"1f43a\":2539,\"1f43b-200d-2744\":2585,\"1f43b\":2584,\"1f43c\":2587,\"1f43d\":2562,\"1f43e\":2593,\"1f43f\":2580,\"1f440\":1381,\"1f441-200d-1f5e8\":1159,\"1f441\":1382,\"1f442\":1373,\"1f443\":1375,\"1f444\":1384,\"1f445\":1383,\"1f446\":1347,\"1f447\":1349,\"1f448\":1345,\"1f449\":1346,\"1f44a\":1355,\"1f44b\":1327,\"1f44c\":1336,\"1f44d\":1352,\"1f44e\":1353,\"1f44f\":1358,\"1f450\":1361,\"1f451\":61144,\"1f452\":61145,\"1f453\":61110,\"1f454\":61115,\"1f455\":61116,\"1f456\":61117,\"1f457\":61122,\"1f458\":61123,\"1f459\":61128,\"1f45a\":61129,\"1f45b\":61130,\"1f45c\":61131,\"1f45d\":61132,\"1f45e\":61136,\"1f45f\":61137,\"1f460\":61140,\"1f461\":61141,\"1f462\":61143,\"1f463\":1687,\"1f464\":1684,\"1f465\":1685,\"1f466\":1388,\"1f467\":1389,\"1f468-200d-1f33e\":1457,\"1f468-200d-1f373\":1460,\"1f468-200d-1f37c\":1524,\"1f468-200d-1f393\":1448,\"1f468-200d-1f3a4\":1478,\"1f468-200d-1f3a8\":1481,\"1f468-200d-1f3eb\":1451,\"1f468-200d-1f3ed\":1466,\"1f468-200d-1f466-200d-1f466\":1674,\"1f468-200d-1f466\":1673,\"1f468-200d-1f467-200d-1f466\":1676,\"1f468-200d-1f467-200d-1f467\":1677,\"1f468-200d-1f467\":1675,\"1f468-200d-1f468-200d-1f466\":1663,\"1f468-200d-1f468-200d-1f466-200d-1f466\":1666,\"1f468-200d-1f468-200d-1f467\":1664,\"1f468-200d-1f468-200d-1f467-200d-1f466\":1665,\"1f468-200d-1f468-200d-1f467-200d-1f467\":1667,\"1f468-200d-1f469-200d-1f466\":1658,\"1f468-200d-1f469-200d-1f466-200d-1f466\":1661,\"1f468-200d-1f469-200d-1f467\":1659,\"1f468-200d-1f469-200d-1f467-200d-1f466\":1660,\"1f468-200d-1f469-200d-1f467-200d-1f467\":1662,\"1f468-200d-1f4bb\":1475,\"1f468-200d-1f4bc\":1469,\"1f468-200d-1f527\":1463,\"1f468-200d-1f52c\":1472,\"1f468-200d-1f680\":1487,\"1f468-200d-1f692\":1490,\"1f468-200d-1f9af\":1574,\"1f468-200d-1f9b0\":1396,\"1f468-200d-1f9b1\":1397,\"1f468-200d-1f9b2\":1399,\"1f468-200d-1f9b3\":1398,\"1f468-200d-1f9bc\":1577,\"1f468-200d-1f9bd\":1580,\"1f468-200d-2695\":1445,\"1f468-200d-2696\":1454,\"1f468-200d-2708\":1484,\"1f468-200d-2764-200d-1f468\":1655,\"1f468-200d-2764-200d-1f48b-200d-1f468\":1651,\"1f468\":1392,\"1f469-200d-1f33e\":1458,\"1f469-200d-1f373\":1461,\"1f469-200d-1f37c\":1523,\"1f469-200d-1f393\":1449,\"1f469-200d-1f3a4\":1479,\"1f469-200d-1f3a8\":1482,\"1f469-200d-1f3eb\":1452,\"1f469-200d-1f3ed\":1467,\"1f469-200d-1f466-200d-1f466\":1679,\"1f469-200d-1f466\":1678,\"1f469-200d-1f467-200d-1f466\":1681,\"1f469-200d-1f467-200d-1f467\":1682,\"1f469-200d-1f467\":1680,\"1f469-200d-1f469-200d-1f466\":1668,\"1f469-200d-1f469-200d-1f466-200d-1f466\":1671,\"1f469-200d-1f469-200d-1f467\":1669,\"1f469-200d-1f469-200d-1f467-200d-1f466\":1670,\"1f469-200d-1f469-200d-1f467-200d-1f467\":1672,\"1f469-200d-1f4bb\":1476,\"1f469-200d-1f4bc\":1470,\"1f469-200d-1f527\":1464,\"1f469-200d-1f52c\":1473,\"1f469-200d-1f680\":1488,\"1f469-200d-1f692\":1491,\"1f469-200d-1f9af\":1575,\"1f469-200d-1f9b0\":1401,\"1f469-200d-1f9b1\":1403,\"1f469-200d-1f9b2\":1407,\"1f469-200d-1f9b3\":1405,\"1f469-200d-1f9bc\":1578,\"1f469-200d-1f9bd\":1581,\"1f469-200d-2695\":1446,\"1f469-200d-2696\":1455,\"1f469-200d-2708\":1485,\"1f469-200d-2764-200d-1f468\":1654,\"1f469-200d-2764-200d-1f469\":1656,\"1f469-200d-2764-200d-1f48b-200d-1f468\":1650,\"1f469-200d-2764-200d-1f48b-200d-1f469\":1652,\"1f469\":1400,\"1f46a\":1657,\"1f46b\":1647,\"1f46c\":1648,\"1f46d\":1646,\"1f46e-200d-2640\":1494,\"1f46e-200d-2642\":1493,\"1f46e\":1492,\"1f46f-200d-2640\":1590,\"1f46f-200d-2642\":1589,\"1f46f\":1588,\"1f470-200d-2640\":1518,\"1f470-200d-2642\":1517,\"1f470\":1516,\"1f471-200d-2640\":1409,\"1f471-200d-2642\":1410,\"1f471\":1391,\"1f472\":1511,\"1f473-200d-2640\":1510,\"1f473-200d-2642\":1509,\"1f473\":1508,\"1f474\":1412,\"1f475\":1413,\"1f476\":1386,\"1f477-200d-2640\":1504,\"1f477-200d-2642\":1503,\"1f477\":1502,\"1f478\":1507,\"1f479\":1109,\"1f47a\":1110,\"1f47b\":1111,\"1f47c\":1526,\"1f47d\":1112,\"1f47e\":1113,\"1f47f\":1104,\"1f480\":1105,\"1f481-200d-2640\":1428,\"1f481-200d-2642\":1427,\"1f481\":1426,\"1f482-200d-2640\":1500,\"1f482-200d-2642\":1499,\"1f482\":1498,\"1f483\":1585,\"1f484\":61152,\"1f485\":1366,\"1f486-200d-2640\":1560,\"1f486-200d-2642\":1559,\"1f486\":1558,\"1f487-200d-2640\":1563,\"1f487-200d-2642\":1562,\"1f487\":1561,\"1f488\":4870,\"1f489\":61326,\"1f48a\":61328,\"1f48b\":1127,\"1f48c\":1128,\"1f48d\":61153,\"1f48e\":61154,\"1f48f\":1649,\"1f490\":2648,\"1f491\":1653,\"1f492\":4846,\"1f493\":1133,\"1f494\":1138,\"1f495\":1135,\"1f496\":1131,\"1f497\":1132,\"1f498\":1129,\"1f499\":1145,\"1f49a\":1144,\"1f49b\":1143,\"1f49c\":1146,\"1f49d\":1130,\"1f49e\":1134,\"1f49f\":1136,\"1f4a0\":62946,\"1f4a1\":61214,\"1f4a2\":1151,\"1f4a3\":1157,\"1f4a4\":1163,\"1f4a5\":1152,\"1f4a6\":1154,\"1f4a7\":41022,\"1f4a8\":1155,\"1f4a9\":1107,\"1f4aa\":1368,\"1f4ab\":1153,\"1f4ac\":1158,\"1f4ad\":1162,\"1f4ae\":2650,\"1f4af\":1150,\"1f4b0\":61235,\"1f4b1\":62841,\"1f4b2\":62842,\"1f4b3\":61242,\"1f4b4\":61237,\"1f4b5\":61238,\"1f4b6\":61239,\"1f4b7\":61240,\"1f4b8\":61241,\"1f4b9\":61244,\"1f4ba\":4936,\"1f4bb\":61191,\"1f4bc\":61265,\"1f4bd\":61197,\"1f4be\":61198,\"1f4bf\":61199,\"1f4c0\":61200,\"1f4c1\":61266,\"1f4c2\":61267,\"1f4c3\":61227,\"1f4c4\":61229,\"1f4c5\":61269,\"1f4c6\":61270,\"1f4c7\":61273,\"1f4c8\":61274,\"1f4c9\":61275,\"1f4ca\":61276,\"1f4cb\":61277,\"1f4cc\":61278,\"1f4cd\":61279,\"1f4ce\":61280,\"1f4cf\":61282,\"1f4d0\":61283,\"1f4d1\":61232,\"1f4d2\":61226,\"1f4d3\":61225,\"1f4d4\":61218,\"1f4d5\":61219,\"1f4d6\":61220,\"1f4d7\":61221,\"1f4d8\":61222,\"1f4d9\":61223,\"1f4da\":61224,\"1f4db\":62847,\"1f4dc\":61228,\"1f4dd\":61264,\"1f4de\":61185,\"1f4df\":61186,\"1f4e0\":61187,\"1f4e1\":61325,\"1f4e2\":61159,\"1f4e3\":61160,\"1f4e4\":61249,\"1f4e5\":61250,\"1f4e6\":61251,\"1f4e7\":61246,\"1f4e8\":61247,\"1f4e9\":61248,\"1f4ea\":61253,\"1f4eb\":61252,\"1f4ec\":61254,\"1f4ed\":61255,\"1f4ee\":61256,\"1f4ef\":61161,\"1f4f0\":61230,\"1f4f1\":61182,\"1f4f2\":61183,\"1f4f3\":62823,\"1f4f4\":62824,\"1f4f5\":62751,\"1f4f6\":62822,\"1f4f7\":61207,\"1f4f8\":61208,\"1f4f9\":61209,\"1f4fa\":61206,\"1f4fb\":61172,\"1f4fc\":61210,\"1f4fd\":61204,\"1f4ff\":61151,\"1f500\":62801,\"1f501\":62802,\"1f502\":62803,\"1f503\":62769,\"1f504\":62770,\"1f505\":62820,\"1f506\":62821,\"1f507\":61155,\"1f508\":61156,\"1f509\":61157,\"1f50a\":61158,\"1f50b\":61188,\"1f50c\":61190,\"1f50d\":61211,\"1f50e\":61212,\"1f50f\":61290,\"1f510\":61291,\"1f511\":61292,\"1f512\":61288,\"1f513\":61289,\"1f514\":61162,\"1f515\":61163,\"1f516\":61233,\"1f517\":61313,\"1f518\":62947,\"1f519\":62771,\"1f51a\":62772,\"1f51b\":62773,\"1f51c\":62774,\"1f51d\":62775,\"1f51e\":62752,\"1f51f\":62876,\"1f520\":62877,\"1f521\":62878,\"1f522\":62879,\"1f523\":62880,\"1f524\":62881,\"1f525\":41021,\"1f526\":61215,\"1f527\":61306,\"1f528\":61294,\"1f529\":61308,\"1f52a\":3803,\"1f52b\":61301,\"1f52c\":61323,\"1f52d\":61324,\"1f52e\":51082,\"1f52f\":62787,\"1f530\":62848,\"1f531\":62846,\"1f532\":62949,\"1f533\":62948,\"1f534\":62916,\"1f535\":62920,\"1f536\":62940,\"1f537\":62941,\"1f538\":62942,\"1f539\":62943,\"1f53a\":62944,\"1f53b\":62945,\"1f53c\":62811,\"1f53d\":62813,\"1f549\":62778,\"1f54a\":2602,\"1f54b\":4854,\"1f54c\":4850,\"1f54d\":4852,\"1f54e\":62786,\"1f550\":4955,\"1f551\":4957,\"1f552\":4959,\"1f553\":4961,\"1f554\":4963,\"1f555\":4965,\"1f556\":4967,\"1f557\":4969,\"1f558\":4971,\"1f559\":4973,\"1f55a\":4975,\"1f55b\":4953,\"1f55c\":4956,\"1f55d\":4958,\"1f55e\":4960,\"1f55f\":4962,\"1f560\":4964,\"1f561\":4966,\"1f562\":4968,\"1f563\":4970,\"1f564\":4972,\"1f565\":4974,\"1f566\":4976,\"1f567\":4954,\"1f56f\":61213,\"1f570\":4952,\"1f573\":1156,\"1f574\":1587,\"1f575-200d-2640\":1497,\"1f575-200d-2642\":1496,\"1f575\":1495,\"1f576\":61111,\"1f577\":2641,\"1f578\":2642,\"1f579\":51087,\"1f57a\":1586,\"1f587\":61281,\"1f58a\":61261,\"1f58b\":61260,\"1f58c\":61262,\"1f58d\":61263,\"1f590\":1329,\"1f595\":1348,\"1f596\":1331,\"1f5a4\":1148,\"1f5a5\":61192,\"1f5a8\":61193,\"1f5b1\":61195,\"1f5b2\":61196,\"1f5bc\":51104,\"1f5c2\":61268,\"1f5c3\":61285,\"1f5c4\":61286,\"1f5d1\":61287,\"1f5d2\":61271,\"1f5d3\":61272,\"1f5dc\":61310,\"1f5dd\":61293,\"1f5de\":61231,\"1f5e1\":61299,\"1f5e3\":1683,\"1f5e8\":1160,\"1f5ef\":1161,\"1f5f3\":61257,\"1f5fa\":4810,\"1f5fb\":4816,\"1f5fc\":4847,\"1f5fd\":4848,\"1f5fe\":4811,\"1f5ff\":61362,\"1f600\":11,\"1f601\":14,\"1f602\":18,\"1f603\":12,\"1f604\":13,\"1f605\":16,\"1f606\":15,\"1f607\":114,\"1f608\":1103,\"1f609\":112,\"1f60a\":113,\"1f60b\":124,\"1f60c\":150,\"1f60d\":116,\"1f60e\":170,\"1f60f\":144,\"1f610\":139,\"1f611\":140,\"1f612\":145,\"1f613\":195,\"1f614\":151,\"1f615\":173,\"1f616\":192,\"1f617\":119,\"1f618\":118,\"1f619\":122,\"1f61a\":121,\"1f61b\":125,\"1f61c\":126,\"1f61d\":128,\"1f61e\":194,\"1f61f\":175,\"1f620\":1101,\"1f621\":1100,\"1f622\":189,\"1f623\":193,\"1f624\":199,\"1f625\":188,\"1f626\":184,\"1f627\":185,\"1f628\":186,\"1f629\":196,\"1f62a\":152,\"1f62b\":197,\"1f62c\":147,\"1f62d\":190,\"1f62e-200d-1f4a8\":148,\"1f62e\":178,\"1f62f\":179,\"1f630\":187,\"1f631\":191,\"1f632\":180,\"1f633\":181,\"1f634\":154,\"1f635-200d-1f4ab\":165,\"1f635\":164,\"1f636-200d-1f32b\":143,\"1f636\":141,\"1f637\":155,\"1f638\":1116,\"1f639\":1117,\"1f63a\":1115,\"1f63b\":1118,\"1f63c\":1119,\"1f63d\":1120,\"1f63e\":1123,\"1f63f\":1122,\"1f640\":1121,\"1f641\":176,\"1f642\":19,\"1f643\":110,\"1f644\":146,\"1f645-200d-2640\":1422,\"1f645-200d-2642\":1421,\"1f645\":1420,\"1f646-200d-2640\":1425,\"1f646-200d-2642\":1424,\"1f646\":1423,\"1f647-200d-2640\":1437,\"1f647-200d-2642\":1436,\"1f647\":1435,\"1f648\":1124,\"1f649\":1125,\"1f64a\":1126,\"1f64b-200d-2640\":1431,\"1f64b-200d-2642\":1430,\"1f64b\":1429,\"1f64c\":1359,\"1f64d-200d-2640\":1416,\"1f64d-200d-2642\":1415,\"1f64d\":1414,\"1f64e-200d-2640\":1419,\"1f64e-200d-2642\":1418,\"1f64e\":1417,\"1f64f\":1364,\"1f680\":4942,\"1f681\":4937,\"1f682\":4872,\"1f683\":4873,\"1f684\":4874,\"1f685\":4875,\"1f686\":4876,\"1f687\":4877,\"1f688\":4878,\"1f689\":4879,\"1f68a\":4880,\"1f68b\":4883,\"1f68c\":4884,\"1f68d\":4885,\"1f68e\":4886,\"1f68f\":4911,\"1f690\":4887,\"1f691\":4888,\"1f692\":4889,\"1f693\":4890,\"1f694\":4891,\"1f695\":4892,\"1f696\":4893,\"1f697\":4894,\"1f698\":4895,\"1f699\":4896,\"1f69a\":4898,\"1f69b\":4899,\"1f69c\":4900,\"1f69d\":4881,\"1f69e\":4882,\"1f69f\":4938,\"1f6a0\":4939,\"1f6a1\":4940,\"1f6a2\":4930,\"1f6a3-200d-2640\":1609,\"1f6a3-200d-2642\":1608,\"1f6a3\":1607,\"1f6a4\":4926,\"1f6a5\":4918,\"1f6a6\":4919,\"1f6a7\":4921,\"1f6a8\":4917,\"1f6a9\":71587,\"1f6aa\":61333,\"1f6ab\":62745,\"1f6ac\":61358,\"1f6ad\":62747,\"1f6ae\":62730,\"1f6af\":62748,\"1f6b0\":62731,\"1f6b1\":62749,\"1f6b2\":4907,\"1f6b3\":62746,\"1f6b4-200d-2640\":1621,\"1f6b4-200d-2642\":1620,\"1f6b4\":1619,\"1f6b5-200d-2640\":1624,\"1f6b5-200d-2642\":1623,\"1f6b5\":1622,\"1f6b6-200d-2640\":1566,\"1f6b6-200d-2642\":1565,\"1f6b6\":1564,\"1f6b7\":62750,\"1f6b8\":62743,\"1f6b9\":62733,\"1f6ba\":62734,\"1f6bb\":62735,\"1f6bc\":62736,\"1f6bd\":61340,\"1f6be\":62737,\"1f6bf\":61342,\"1f6c0\":1643,\"1f6c1\":61343,\"1f6c2\":62738,\"1f6c3\":62739,\"1f6c4\":62740,\"1f6c5\":62741,\"1f6cb\":61338,\"1f6cc\":1644,\"1f6cd\":61133,\"1f6ce\":4944,\"1f6cf\":61337,\"1f6d0\":62776,\"1f6d1\":4920,\"1f6d2\":61357,\"1f6d5\":4851,\"1f6d6\":4828,\"1f6d7\":61334,\"1f6e0\":61298,\"1f6e1\":61304,\"1f6e2\":4914,\"1f6e3\":4912,\"1f6e4\":4913,\"1f6e5\":4929,\"1f6e9\":4932,\"1f6eb\":4933,\"1f6ec\":4934,\"1f6f0\":4941,\"1f6f3\":4927,\"1f6f4\":4908,\"1f6f5\":4903,\"1f6f6\":4925,\"1f6f7\":51076,\"1f6f8\":4943,\"1f6f9\":4909,\"1f6fa\":4906,\"1f6fb\":4897,\"1f6fc\":4910,\"1f7e0\":62917,\"1f7e1\":62918,\"1f7e2\":62919,\"1f7e3\":62921,\"1f7e4\":62922,\"1f7e5\":62925,\"1f7e6\":62929,\"1f7e7\":62926,\"1f7e8\":62927,\"1f7e9\":62928,\"1f7ea\":62930,\"1f7eb\":62931,\"1f90c\":1337,\"1f90d\":1149,\"1f90e\":1147,\"1f90f\":1338,\"1f910\":137,\"1f911\":129,\"1f912\":156,\"1f913\":171,\"1f914\":135,\"1f915\":157,\"1f916\":1114,\"1f917\":130,\"1f918\":1343,\"1f919\":1344,\"1f91a\":1328,\"1f91b\":1356,\"1f91c\":1357,\"1f91d\":1363,\"1f91e\":1340,\"1f91f\":1342,\"1f920\":167,\"1f921\":1108,\"1f922\":158,\"1f923\":17,\"1f924\":153,\"1f925\":149,\"1f926-200d-2640\":1440,\"1f926-200d-2642\":1439,\"1f926\":1438,\"1f927\":160,\"1f928\":138,\"1f929\":117,\"1f92a\":127,\"1f92b\":134,\"1f92c\":1102,\"1f92d\":131,\"1f92e\":159,\"1f92f\":166,\"1f930\":1519,\"1f931\":1522,\"1f932\":1362,\"1f933\":1367,\"1f934\":1506,\"1f935-200d-2640\":1515,\"1f935-200d-2642\":1514,\"1f935\":1513,\"1f936\":1528,\"1f937-200d-2640\":1443,\"1f937-200d-2642\":1442,\"1f937\":1441,\"1f938-200d-2640\":1627,\"1f938-200d-2642\":1626,\"1f938\":1625,\"1f939-200d-2640\":1639,\"1f939-200d-2642\":1638,\"1f939\":1637,\"1f93a\":1597,\"1f93c-200d-2640\":1630,\"1f93c-200d-2642\":1629,\"1f93c\":1628,\"1f93d-200d-2640\":1633,\"1f93d-200d-2642\":1632,\"1f93d\":1631,\"1f93e-200d-2640\":1636,\"1f93e-200d-2642\":1635,\"1f93e\":1634,\"1f93f\":51073,\"1f940\":2654,\"1f941\":61180,\"1f942\":3791,\"1f943\":3792,\"1f944\":3802,\"1f945\":51069,\"1f947\":51048,\"1f948\":51049,\"1f949\":51050,\"1f94a\":51067,\"1f94b\":51068,\"1f94c\":51077,\"1f94d\":51064,\"1f94e\":51053,\"1f94f\":51059,\"1f950\":3710,\"1f951\":3693,\"1f952\":3700,\"1f953\":3721,\"1f954\":3695,\"1f955\":3696,\"1f956\":3711,\"1f957\":3738,\"1f958\":3734,\"1f959\":3730,\"1f95a\":3732,\"1f95b\":3780,\"1f95c\":3706,\"1f95d\":3689,\"1f95e\":3715,\"1f95f\":3757,\"1f960\":3758,\"1f961\":3759,\"1f962\":3799,\"1f963\":3737,\"1f964\":3794,\"1f965\":3692,\"1f966\":3702,\"1f967\":3773,\"1f968\":3713,\"1f969\":3720,\"1f96a\":3726,\"1f96b\":3742,\"1f96c\":3701,\"1f96d\":3681,\"1f96e\":3755,\"1f96f\":3714,\"1f970\":115,\"1f971\":198,\"1f972\":123,\"1f973\":168,\"1f974\":163,\"1f975\":161,\"1f976\":162,\"1f977\":1501,\"1f978\":169,\"1f97a\":182,\"1f97b\":61124,\"1f97c\":61113,\"1f97d\":61112,\"1f97e\":61138,\"1f97f\":61139,\"1f980\":3760,\"1f981\":2545,\"1f982\":2643,\"1f983\":2594,\"1f984\":2551,\"1f985\":2603,\"1f986\":2604,\"1f987\":2583,\"1f988\":2628,\"1f989\":2606,\"1f98a\":2540,\"1f98b\":2633,\"1f98c\":2553,\"1f98d\":2532,\"1f98e\":2615,\"1f98f\":2572,\"1f990\":3762,\"1f991\":3763,\"1f992\":2569,\"1f993\":2552,\"1f994\":2582,\"1f995\":2619,\"1f996\":2620,\"1f997\":2639,\"1f998\":2591,\"1f999\":2568,\"1f99a\":2610,\"1f99b\":2573,\"1f99c\":2611,\"1f99d\":2541,\"1f99e\":3761,\"1f99f\":2644,\"1f9a0\":2647,\"1f9a1\":2592,\"1f9a2\":2605,\"1f9a3\":2571,\"1f9a4\":2607,\"1f9a5\":2588,\"1f9a6\":2589,\"1f9a7\":2533,\"1f9a8\":2590,\"1f9a9\":2609,\"1f9aa\":3764,\"1f9ab\":2581,\"1f9ac\":2554,\"1f9ad\":2624,\"1f9ae\":2536,\"1f9af\":61312,\"1f9b4\":1380,\"1f9b5\":1371,\"1f9b6\":1372,\"1f9b7\":1379,\"1f9b8-200d-2640\":1532,\"1f9b8-200d-2642\":1531,\"1f9b8\":1530,\"1f9b9-200d-2640\":1535,\"1f9b9-200d-2642\":1534,\"1f9b9\":1533,\"1f9ba\":61114,\"1f9bb\":1374,\"1f9bc\":4905,\"1f9bd\":4904,\"1f9be\":1369,\"1f9bf\":1370,\"1f9c0\":3717,\"1f9c1\":3772,\"1f9c2\":3741,\"1f9c3\":3796,\"1f9c4\":3703,\"1f9c5\":3704,\"1f9c6\":3731,\"1f9c7\":3716,\"1f9c8\":3740,\"1f9c9\":3797,\"1f9ca\":3798,\"1f9cb\":3795,\"1f9cd-200d-2640\":1569,\"1f9cd-200d-2642\":1568,\"1f9cd\":1567,\"1f9ce-200d-2640\":1572,\"1f9ce-200d-2642\":1571,\"1f9ce\":1570,\"1f9cf-200d-2640\":1434,\"1f9cf-200d-2642\":1433,\"1f9cf\":1432,\"1f9d0\":172,\"1f9d1-200d-1f33e\":1456,\"1f9d1-200d-1f373\":1459,\"1f9d1-200d-1f37c\":1525,\"1f9d1-200d-1f384\":1529,\"1f9d1-200d-1f393\":1447,\"1f9d1-200d-1f3a4\":1477,\"1f9d1-200d-1f3a8\":1480,\"1f9d1-200d-1f3eb\":1450,\"1f9d1-200d-1f3ed\":1465,\"1f9d1-200d-1f4bb\":1474,\"1f9d1-200d-1f4bc\":1468,\"1f9d1-200d-1f527\":1462,\"1f9d1-200d-1f52c\":1471,\"1f9d1-200d-1f680\":1486,\"1f9d1-200d-1f692\":1489,\"1f9d1-200d-1f91d-200d-1f9d1\":1645,\"1f9d1-200d-1f9af\":1573,\"1f9d1-200d-1f9b0\":1402,\"1f9d1-200d-1f9b1\":1404,\"1f9d1-200d-1f9b2\":1408,\"1f9d1-200d-1f9b3\":1406,\"1f9d1-200d-1f9bc\":1576,\"1f9d1-200d-1f9bd\":1579,\"1f9d1-200d-2695\":1444,\"1f9d1-200d-2696\":1453,\"1f9d1-200d-2708\":1483,\"1f9d1\":1390,\"1f9d2\":1387,\"1f9d3\":1411,\"1f9d4-200d-2640\":1395,\"1f9d4-200d-2642\":1394,\"1f9d4\":1393,\"1f9d5\":1512,\"1f9d6-200d-2640\":1593,\"1f9d6-200d-2642\":1592,\"1f9d6\":1591,\"1f9d7-200d-2640\":1596,\"1f9d7-200d-2642\":1595,\"1f9d7\":1594,\"1f9d8-200d-2640\":1642,\"1f9d8-200d-2642\":1641,\"1f9d8\":1640,\"1f9d9-200d-2640\":1538,\"1f9d9-200d-2642\":1537,\"1f9d9\":1536,\"1f9da-200d-2640\":1541,\"1f9da-200d-2642\":1540,\"1f9da\":1539,\"1f9db-200d-2640\":1544,\"1f9db-200d-2642\":1543,\"1f9db\":1542,\"1f9dc-200d-2640\":1547,\"1f9dc-200d-2642\":1546,\"1f9dc\":1545,\"1f9dd-200d-2640\":1550,\"1f9dd-200d-2642\":1549,\"1f9dd\":1548,\"1f9de-200d-2640\":1553,\"1f9de-200d-2642\":1552,\"1f9de\":1551,\"1f9df-200d-2640\":1556,\"1f9df-200d-2642\":1555,\"1f9df\":1554,\"1f9e0\":1376,\"1f9e1\":1142,\"1f9e2\":61148,\"1f9e3\":61118,\"1f9e4\":61119,\"1f9e5\":61120,\"1f9e6\":61121,\"1f9e7\":51039,\"1f9e8\":51028,\"1f9e9\":51090,\"1f9ea\":61320,\"1f9eb\":61321,\"1f9ec\":61322,\"1f9ed\":4812,\"1f9ee\":61201,\"1f9ef\":61356,\"1f9f0\":61316,\"1f9f1\":4825,\"1f9f2\":61317,\"1f9f3\":4945,\"1f9f4\":61346,\"1f9f5\":51106,\"1f9f6\":51108,\"1f9f7\":61347,\"1f9f8\":51091,\"1f9f9\":61348,\"1f9fa\":61349,\"1f9fb\":61350,\"1f9fc\":61352,\"1f9fd\":61355,\"1f9fe\":61243,\"1f9ff\":51084,\"1fa70\":61142,\"1fa71\":61125,\"1fa72\":61126,\"1fa73\":61127,\"1fa74\":61135,\"1fa78\":61327,\"1fa79\":61329,\"1fa7a\":61331,\"1fa80\":51079,\"1fa81\":51080,\"1fa82\":4935,\"1fa83\":61302,\"1fa84\":51083,\"1fa85\":51092,\"1fa86\":51094,\"1fa90\":4993,\"1fa91\":61339,\"1fa92\":61345,\"1fa93\":61295,\"1fa94\":61217,\"1fa95\":61179,\"1fa96\":61149,\"1fa97\":61174,\"1fa98\":61181,\"1fa99\":61236,\"1fa9a\":61305,\"1fa9b\":61307,\"1fa9c\":61318,\"1fa9d\":61315,\"1fa9e\":61335,\"1fa9f\":61336,\"1faa0\":61341,\"1faa1\":51107,\"1faa2\":51109,\"1faa3\":61351,\"1faa4\":61344,\"1faa5\":61354,\"1faa6\":61360,\"1faa7\":61363,\"1faa8\":4826,\"1fab0\":2645,\"1fab1\":2646,\"1fab2\":2637,\"1fab3\":2640,\"1fab4\":2660,\"1fab5\":4827,\"1fab6\":2608,\"1fac0\":1377,\"1fac1\":1378,\"1fac2\":1686,\"1fad0\":3688,\"1fad1\":3699,\"1fad2\":3691,\"1fad3\":3712,\"1fad4\":3729,\"1fad5\":3736,\"1fad6\":3782,\"203c\":62834,\"21a9\":62765,\"21aa\":62766,\"231a\":4948,\"231b\":4946,\"23cf\":62818,\"23e9\":62805,\"23ea\":62809,\"23eb\":62812,\"23ec\":62814,\"23ed\":62806,\"23ee\":62810,\"23ef\":62807,\"23f0\":4949,\"23f1\":4950,\"23f2\":4951,\"23f3\":4947,\"23f8\":62815,\"23f9\":62816,\"23fa\":62817,\"24c2\":62890,\"25aa\":62938,\"25ab\":62939,\"25b6\":62804,\"25c0\":62808,\"25fb\":62935,\"25fc\":62934,\"25fd\":62937,\"25fe\":62936,\"260e\":61184,\"261d\":1350,\"262a\":62784,\"262e\":62785,\"262f\":62781,\"263a\":120,\"264a\":62790,\"264b\":62791,\"264c\":62792,\"264d\":62793,\"264e\":62794,\"264f\":62795,\"265f\":51099,\"267b\":62844,\"267e\":62833,\"267f\":62732,\"269b\":62777,\"269c\":62845,\"26a0\":62742,\"26a1\":41016,\"26a7\":62827,\"26aa\":62924,\"26ab\":62923,\"26b0\":61359,\"26b1\":61361,\"26bd\":51051,\"26be\":51052,\"26c4\":41019,\"26c5\":4999,\"26c8\":41000,\"26ce\":62800,\"26cf\":61296,\"26d1\":61150,\"26d3\":61314,\"26d4\":62744,\"26e9\":4853,\"26ea\":4849,\"26f0\":4814,\"26f1\":41015,\"26f2\":4855,\"26f3\":51070,\"26f4\":4928,\"26f5\":4924,\"26f7\":1599,\"26f8\":51071,\"26f9-200d-2640\":1615,\"26f9-200d-2642\":1614,\"26f9\":1613,\"26fa\":4856,\"26fd\":4915,\"270a\":1354,\"270b\":1330,\"270c\":1339,\"270d\":1365,\"270f\":61258,\"271d\":62782,\"274c\":62853,\"274e\":62854,\"2764-200d-1f525\":1139,\"2764-200d-1fa79\":1140,\"27a1\":62757,\"27b0\":62855,\"27bf\":62856,\"2b05\":62761,\"2b06\":62755,\"2b07\":62759,\"2b1b\":62932,\"2b1c\":62933,\"2b50\":4994,\"2b55\":62849,\"303d\":62857,\"1f385-1f3fb\":0,\"1f385-1f3fc\":0,\"1f385-1f3fd\":0,\"1f385-1f3fe\":0,\"1f385-1f3ff\":0,\"1f3c2-1f3fb\":0,\"1f3c2-1f3fc\":0,\"1f3c2-1f3fd\":0,\"1f3c2-1f3fe\":0,\"1f3c2-1f3ff\":0,\"1f3c3-1f3fb-200d-2640\":0,\"1f3c3-1f3fc-200d-2640\":0,\"1f3c3-1f3fd-200d-2640\":0,\"1f3c3-1f3fe-200d-2640\":0,\"1f3c3-1f3ff-200d-2640\":0,\"1f3c3-1f3fb-200d-2642\":0,\"1f3c3-1f3fc-200d-2642\":0,\"1f3c3-1f3fd-200d-2642\":0,\"1f3c3-1f3fe-200d-2642\":0,\"1f3c3-1f3ff-200d-2642\":0,\"1f3c3-1f3fb\":0,\"1f3c3-1f3fc\":0,\"1f3c3-1f3fd\":0,\"1f3c3-1f3fe\":0,\"1f3c3-1f3ff\":0,\"1f3c4-1f3fb-200d-2640\":0,\"1f3c4-1f3fc-200d-2640\":0,\"1f3c4-1f3fd-200d-2640\":0,\"1f3c4-1f3fe-200d-2640\":0,\"1f3c4-1f3ff-200d-2640\":0,\"1f3c4-1f3fb-200d-2642\":0,\"1f3c4-1f3fc-200d-2642\":0,\"1f3c4-1f3fd-200d-2642\":0,\"1f3c4-1f3fe-200d-2642\":0,\"1f3c4-1f3ff-200d-2642\":0,\"1f3c4-1f3fb\":0,\"1f3c4-1f3fc\":0,\"1f3c4-1f3fd\":0,\"1f3c4-1f3fe\":0,\"1f3c4-1f3ff\":0,\"1f3c7-1f3fb\":0,\"1f3c7-1f3fc\":0,\"1f3c7-1f3fd\":0,\"1f3c7-1f3fe\":0,\"1f3c7-1f3ff\":0,\"1f3ca-1f3fb-200d-2640\":0,\"1f3ca-1f3fc-200d-2640\":0,\"1f3ca-1f3fd-200d-2640\":0,\"1f3ca-1f3fe-200d-2640\":0,\"1f3ca-1f3ff-200d-2640\":0,\"1f3ca-1f3fb-200d-2642\":0,\"1f3ca-1f3fc-200d-2642\":0,\"1f3ca-1f3fd-200d-2642\":0,\"1f3ca-1f3fe-200d-2642\":0,\"1f3ca-1f3ff-200d-2642\":0,\"1f3ca-1f3fb\":0,\"1f3ca-1f3fc\":0,\"1f3ca-1f3fd\":0,\"1f3ca-1f3fe\":0,\"1f3ca-1f3ff\":0,\"1f3cb-1f3fb-200d-2640\":0,\"1f3cb-1f3fc-200d-2640\":0,\"1f3cb-1f3fd-200d-2640\":0,\"1f3cb-1f3fe-200d-2640\":0,\"1f3cb-1f3ff-200d-2640\":0,\"1f3cb-1f3fb-200d-2642\":0,\"1f3cb-1f3fc-200d-2642\":0,\"1f3cb-1f3fd-200d-2642\":0,\"1f3cb-1f3fe-200d-2642\":0,\"1f3cb-1f3ff-200d-2642\":0,\"1f3cb-1f3fb\":0,\"1f3cb-1f3fc\":0,\"1f3cb-1f3fd\":0,\"1f3cb-1f3fe\":0,\"1f3cb-1f3ff\":0,\"1f3cc-1f3fb-200d-2640\":0,\"1f3cc-1f3fc-200d-2640\":0,\"1f3cc-1f3fd-200d-2640\":0,\"1f3cc-1f3fe-200d-2640\":0,\"1f3cc-1f3ff-200d-2640\":0,\"1f3cc-1f3fb-200d-2642\":0,\"1f3cc-1f3fc-200d-2642\":0,\"1f3cc-1f3fd-200d-2642\":0,\"1f3cc-1f3fe-200d-2642\":0,\"1f3cc-1f3ff-200d-2642\":0,\"1f3cc-1f3fb\":0,\"1f3cc-1f3fc\":0,\"1f3cc-1f3fd\":0,\"1f3cc-1f3fe\":0,\"1f3cc-1f3ff\":0,\"1f442-1f3fb\":0,\"1f442-1f3fc\":0,\"1f442-1f3fd\":0,\"1f442-1f3fe\":0,\"1f442-1f3ff\":0,\"1f443-1f3fb\":0,\"1f443-1f3fc\":0,\"1f443-1f3fd\":0,\"1f443-1f3fe\":0,\"1f443-1f3ff\":0,\"1f446-1f3fb\":0,\"1f446-1f3fc\":0,\"1f446-1f3fd\":0,\"1f446-1f3fe\":0,\"1f446-1f3ff\":0,\"1f447-1f3fb\":0,\"1f447-1f3fc\":0,\"1f447-1f3fd\":0,\"1f447-1f3fe\":0,\"1f447-1f3ff\":0,\"1f448-1f3fb\":0,\"1f448-1f3fc\":0,\"1f448-1f3fd\":0,\"1f448-1f3fe\":0,\"1f448-1f3ff\":0,\"1f449-1f3fb\":0,\"1f449-1f3fc\":0,\"1f449-1f3fd\":0,\"1f449-1f3fe\":0,\"1f449-1f3ff\":0,\"1f44a-1f3fb\":0,\"1f44a-1f3fc\":0,\"1f44a-1f3fd\":0,\"1f44a-1f3fe\":0,\"1f44a-1f3ff\":0,\"1f44b-1f3fb\":0,\"1f44b-1f3fc\":0,\"1f44b-1f3fd\":0,\"1f44b-1f3fe\":0,\"1f44b-1f3ff\":0,\"1f44c-1f3fb\":0,\"1f44c-1f3fc\":0,\"1f44c-1f3fd\":0,\"1f44c-1f3fe\":0,\"1f44c-1f3ff\":0,\"1f44d-1f3fb\":0,\"1f44d-1f3fc\":0,\"1f44d-1f3fd\":0,\"1f44d-1f3fe\":0,\"1f44d-1f3ff\":0,\"1f44e-1f3fb\":0,\"1f44e-1f3fc\":0,\"1f44e-1f3fd\":0,\"1f44e-1f3fe\":0,\"1f44e-1f3ff\":0,\"1f44f-1f3fb\":0,\"1f44f-1f3fc\":0,\"1f44f-1f3fd\":0,\"1f44f-1f3fe\":0,\"1f44f-1f3ff\":0,\"1f450-1f3fb\":0,\"1f450-1f3fc\":0,\"1f450-1f3fd\":0,\"1f450-1f3fe\":0,\"1f450-1f3ff\":0,\"1f466-1f3fb\":0,\"1f466-1f3fc\":0,\"1f466-1f3fd\":0,\"1f466-1f3fe\":0,\"1f466-1f3ff\":0,\"1f467-1f3fb\":0,\"1f467-1f3fc\":0,\"1f467-1f3fd\":0,\"1f467-1f3fe\":0,\"1f467-1f3ff\":0,\"1f468-1f3fb-200d-1f33e\":0,\"1f468-1f3fc-200d-1f33e\":0,\"1f468-1f3fd-200d-1f33e\":0,\"1f468-1f3fe-200d-1f33e\":0,\"1f468-1f3ff-200d-1f33e\":0,\"1f468-1f3fb-200d-1f373\":0,\"1f468-1f3fc-200d-1f373\":0,\"1f468-1f3fd-200d-1f373\":0,\"1f468-1f3fe-200d-1f373\":0,\"1f468-1f3ff-200d-1f373\":0,\"1f468-1f3fb-200d-1f37c\":0,\"1f468-1f3fc-200d-1f37c\":0,\"1f468-1f3fd-200d-1f37c\":0,\"1f468-1f3fe-200d-1f37c\":0,\"1f468-1f3ff-200d-1f37c\":0,\"1f468-1f3fb-200d-1f393\":0,\"1f468-1f3fc-200d-1f393\":0,\"1f468-1f3fd-200d-1f393\":0,\"1f468-1f3fe-200d-1f393\":0,\"1f468-1f3ff-200d-1f393\":0,\"1f468-1f3fb-200d-1f3a4\":0,\"1f468-1f3fc-200d-1f3a4\":0,\"1f468-1f3fd-200d-1f3a4\":0,\"1f468-1f3fe-200d-1f3a4\":0,\"1f468-1f3ff-200d-1f3a4\":0,\"1f468-1f3fb-200d-1f3a8\":0,\"1f468-1f3fc-200d-1f3a8\":0,\"1f468-1f3fd-200d-1f3a8\":0,\"1f468-1f3fe-200d-1f3a8\":0,\"1f468-1f3ff-200d-1f3a8\":0,\"1f468-1f3fb-200d-1f3eb\":0,\"1f468-1f3fc-200d-1f3eb\":0,\"1f468-1f3fd-200d-1f3eb\":0,\"1f468-1f3fe-200d-1f3eb\":0,\"1f468-1f3ff-200d-1f3eb\":0,\"1f468-1f3fb-200d-1f3ed\":0,\"1f468-1f3fc-200d-1f3ed\":0,\"1f468-1f3fd-200d-1f3ed\":0,\"1f468-1f3fe-200d-1f3ed\":0,\"1f468-1f3ff-200d-1f3ed\":0,\"1f468-1f3fb-200d-1f4bb\":0,\"1f468-1f3fc-200d-1f4bb\":0,\"1f468-1f3fd-200d-1f4bb\":0,\"1f468-1f3fe-200d-1f4bb\":0,\"1f468-1f3ff-200d-1f4bb\":0,\"1f468-1f3fb-200d-1f4bc\":0,\"1f468-1f3fc-200d-1f4bc\":0,\"1f468-1f3fd-200d-1f4bc\":0,\"1f468-1f3fe-200d-1f4bc\":0,\"1f468-1f3ff-200d-1f4bc\":0,\"1f468-1f3fb-200d-1f527\":0,\"1f468-1f3fc-200d-1f527\":0,\"1f468-1f3fd-200d-1f527\":0,\"1f468-1f3fe-200d-1f527\":0,\"1f468-1f3ff-200d-1f527\":0,\"1f468-1f3fb-200d-1f52c\":0,\"1f468-1f3fc-200d-1f52c\":0,\"1f468-1f3fd-200d-1f52c\":0,\"1f468-1f3fe-200d-1f52c\":0,\"1f468-1f3ff-200d-1f52c\":0,\"1f468-1f3fb-200d-1f680\":0,\"1f468-1f3fc-200d-1f680\":0,\"1f468-1f3fd-200d-1f680\":0,\"1f468-1f3fe-200d-1f680\":0,\"1f468-1f3ff-200d-1f680\":0,\"1f468-1f3fb-200d-1f692\":0,\"1f468-1f3fc-200d-1f692\":0,\"1f468-1f3fd-200d-1f692\":0,\"1f468-1f3fe-200d-1f692\":0,\"1f468-1f3ff-200d-1f692\":0,\"1f468-1f3fb-200d-1f9af\":0,\"1f468-1f3fc-200d-1f9af\":0,\"1f468-1f3fd-200d-1f9af\":0,\"1f468-1f3fe-200d-1f9af\":0,\"1f468-1f3ff-200d-1f9af\":0,\"1f468-1f3fb-200d-1f9b0\":0,\"1f468-1f3fc-200d-1f9b0\":0,\"1f468-1f3fd-200d-1f9b0\":0,\"1f468-1f3fe-200d-1f9b0\":0,\"1f468-1f3ff-200d-1f9b0\":0,\"1f468-1f3fb-200d-1f9b1\":0,\"1f468-1f3fc-200d-1f9b1\":0,\"1f468-1f3fd-200d-1f9b1\":0,\"1f468-1f3fe-200d-1f9b1\":0,\"1f468-1f3ff-200d-1f9b1\":0,\"1f468-1f3fb-200d-1f9b2\":0,\"1f468-1f3fc-200d-1f9b2\":0,\"1f468-1f3fd-200d-1f9b2\":0,\"1f468-1f3fe-200d-1f9b2\":0,\"1f468-1f3ff-200d-1f9b2\":0,\"1f468-1f3fb-200d-1f9b3\":0,\"1f468-1f3fc-200d-1f9b3\":0,\"1f468-1f3fd-200d-1f9b3\":0,\"1f468-1f3fe-200d-1f9b3\":0,\"1f468-1f3ff-200d-1f9b3\":0,\"1f468-1f3fb-200d-1f9bc\":0,\"1f468-1f3fc-200d-1f9bc\":0,\"1f468-1f3fd-200d-1f9bc\":0,\"1f468-1f3fe-200d-1f9bc\":0,\"1f468-1f3ff-200d-1f9bc\":0,\"1f468-1f3fb-200d-1f9bd\":0,\"1f468-1f3fc-200d-1f9bd\":0,\"1f468-1f3fd-200d-1f9bd\":0,\"1f468-1f3fe-200d-1f9bd\":0,\"1f468-1f3ff-200d-1f9bd\":0,\"1f468-1f3fb-200d-2695\":0,\"1f468-1f3fc-200d-2695\":0,\"1f468-1f3fd-200d-2695\":0,\"1f468-1f3fe-200d-2695\":0,\"1f468-1f3ff-200d-2695\":0,\"1f468-1f3fb-200d-2696\":0,\"1f468-1f3fc-200d-2696\":0,\"1f468-1f3fd-200d-2696\":0,\"1f468-1f3fe-200d-2696\":0,\"1f468-1f3ff-200d-2696\":0,\"1f468-1f3fb-200d-2708\":0,\"1f468-1f3fc-200d-2708\":0,\"1f468-1f3fd-200d-2708\":0,\"1f468-1f3fe-200d-2708\":0,\"1f468-1f3ff-200d-2708\":0,\"1f468-1f3fb-200d-2764-200d-1f468-1f3fb\":0,\"1f468-1f3fb-200d-2764-200d-1f468-1f3fc\":0,\"1f468-1f3fb-200d-2764-200d-1f468-1f3fd\":0,\"1f468-1f3fb-200d-2764-200d-1f468-1f3fe\":0,\"1f468-1f3fb-200d-2764-200d-1f468-1f3ff\":0,\"1f468-1f3fc-200d-2764-200d-1f468-1f3fb\":0,\"1f468-1f3fc-200d-2764-200d-1f468-1f3fc\":0,\"1f468-1f3fc-200d-2764-200d-1f468-1f3fd\":0,\"1f468-1f3fc-200d-2764-200d-1f468-1f3fe\":0,\"1f468-1f3fc-200d-2764-200d-1f468-1f3ff\":0,\"1f468-1f3fd-200d-2764-200d-1f468-1f3fb\":0,\"1f468-1f3fd-200d-2764-200d-1f468-1f3fc\":0,\"1f468-1f3fd-200d-2764-200d-1f468-1f3fd\":0,\"1f468-1f3fd-200d-2764-200d-1f468-1f3fe\":0,\"1f468-1f3fd-200d-2764-200d-1f468-1f3ff\":0,\"1f468-1f3fe-200d-2764-200d-1f468-1f3fb\":0,\"1f468-1f3fe-200d-2764-200d-1f468-1f3fc\":0,\"1f468-1f3fe-200d-2764-200d-1f468-1f3fd\":0,\"1f468-1f3fe-200d-2764-200d-1f468-1f3fe\":0,\"1f468-1f3fe-200d-2764-200d-1f468-1f3ff\":0,\"1f468-1f3ff-200d-2764-200d-1f468-1f3fb\":0,\"1f468-1f3ff-200d-2764-200d-1f468-1f3fc\":0,\"1f468-1f3ff-200d-2764-200d-1f468-1f3fd\":0,\"1f468-1f3ff-200d-2764-200d-1f468-1f3fe\":0,\"1f468-1f3ff-200d-2764-200d-1f468-1f3ff\":0,\"1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f468-1f3fb\":0,\"1f468-1f3fc\":0,\"1f468-1f3fd\":0,\"1f468-1f3fe\":0,\"1f468-1f3ff\":0,\"1f469-1f3fb-200d-1f33e\":0,\"1f469-1f3fc-200d-1f33e\":0,\"1f469-1f3fd-200d-1f33e\":0,\"1f469-1f3fe-200d-1f33e\":0,\"1f469-1f3ff-200d-1f33e\":0,\"1f469-1f3fb-200d-1f373\":0,\"1f469-1f3fc-200d-1f373\":0,\"1f469-1f3fd-200d-1f373\":0,\"1f469-1f3fe-200d-1f373\":0,\"1f469-1f3ff-200d-1f373\":0,\"1f469-1f3fb-200d-1f37c\":0,\"1f469-1f3fc-200d-1f37c\":0,\"1f469-1f3fd-200d-1f37c\":0,\"1f469-1f3fe-200d-1f37c\":0,\"1f469-1f3ff-200d-1f37c\":0,\"1f469-1f3fb-200d-1f393\":0,\"1f469-1f3fc-200d-1f393\":0,\"1f469-1f3fd-200d-1f393\":0,\"1f469-1f3fe-200d-1f393\":0,\"1f469-1f3ff-200d-1f393\":0,\"1f469-1f3fb-200d-1f3a4\":0,\"1f469-1f3fc-200d-1f3a4\":0,\"1f469-1f3fd-200d-1f3a4\":0,\"1f469-1f3fe-200d-1f3a4\":0,\"1f469-1f3ff-200d-1f3a4\":0,\"1f469-1f3fb-200d-1f3a8\":0,\"1f469-1f3fc-200d-1f3a8\":0,\"1f469-1f3fd-200d-1f3a8\":0,\"1f469-1f3fe-200d-1f3a8\":0,\"1f469-1f3ff-200d-1f3a8\":0,\"1f469-1f3fb-200d-1f3eb\":0,\"1f469-1f3fc-200d-1f3eb\":0,\"1f469-1f3fd-200d-1f3eb\":0,\"1f469-1f3fe-200d-1f3eb\":0,\"1f469-1f3ff-200d-1f3eb\":0,\"1f469-1f3fb-200d-1f3ed\":0,\"1f469-1f3fc-200d-1f3ed\":0,\"1f469-1f3fd-200d-1f3ed\":0,\"1f469-1f3fe-200d-1f3ed\":0,\"1f469-1f3ff-200d-1f3ed\":0,\"1f469-1f3fb-200d-1f4bb\":0,\"1f469-1f3fc-200d-1f4bb\":0,\"1f469-1f3fd-200d-1f4bb\":0,\"1f469-1f3fe-200d-1f4bb\":0,\"1f469-1f3ff-200d-1f4bb\":0,\"1f469-1f3fb-200d-1f4bc\":0,\"1f469-1f3fc-200d-1f4bc\":0,\"1f469-1f3fd-200d-1f4bc\":0,\"1f469-1f3fe-200d-1f4bc\":0,\"1f469-1f3ff-200d-1f4bc\":0,\"1f469-1f3fb-200d-1f527\":0,\"1f469-1f3fc-200d-1f527\":0,\"1f469-1f3fd-200d-1f527\":0,\"1f469-1f3fe-200d-1f527\":0,\"1f469-1f3ff-200d-1f527\":0,\"1f469-1f3fb-200d-1f52c\":0,\"1f469-1f3fc-200d-1f52c\":0,\"1f469-1f3fd-200d-1f52c\":0,\"1f469-1f3fe-200d-1f52c\":0,\"1f469-1f3ff-200d-1f52c\":0,\"1f469-1f3fb-200d-1f680\":0,\"1f469-1f3fc-200d-1f680\":0,\"1f469-1f3fd-200d-1f680\":0,\"1f469-1f3fe-200d-1f680\":0,\"1f469-1f3ff-200d-1f680\":0,\"1f469-1f3fb-200d-1f692\":0,\"1f469-1f3fc-200d-1f692\":0,\"1f469-1f3fd-200d-1f692\":0,\"1f469-1f3fe-200d-1f692\":0,\"1f469-1f3ff-200d-1f692\":0,\"1f469-1f3fb-200d-1f9af\":0,\"1f469-1f3fc-200d-1f9af\":0,\"1f469-1f3fd-200d-1f9af\":0,\"1f469-1f3fe-200d-1f9af\":0,\"1f469-1f3ff-200d-1f9af\":0,\"1f469-1f3fb-200d-1f9b0\":0,\"1f469-1f3fc-200d-1f9b0\":0,\"1f469-1f3fd-200d-1f9b0\":0,\"1f469-1f3fe-200d-1f9b0\":0,\"1f469-1f3ff-200d-1f9b0\":0,\"1f469-1f3fb-200d-1f9b1\":0,\"1f469-1f3fc-200d-1f9b1\":0,\"1f469-1f3fd-200d-1f9b1\":0,\"1f469-1f3fe-200d-1f9b1\":0,\"1f469-1f3ff-200d-1f9b1\":0,\"1f469-1f3fb-200d-1f9b2\":0,\"1f469-1f3fc-200d-1f9b2\":0,\"1f469-1f3fd-200d-1f9b2\":0,\"1f469-1f3fe-200d-1f9b2\":0,\"1f469-1f3ff-200d-1f9b2\":0,\"1f469-1f3fb-200d-1f9b3\":0,\"1f469-1f3fc-200d-1f9b3\":0,\"1f469-1f3fd-200d-1f9b3\":0,\"1f469-1f3fe-200d-1f9b3\":0,\"1f469-1f3ff-200d-1f9b3\":0,\"1f469-1f3fb-200d-1f9bc\":0,\"1f469-1f3fc-200d-1f9bc\":0,\"1f469-1f3fd-200d-1f9bc\":0,\"1f469-1f3fe-200d-1f9bc\":0,\"1f469-1f3ff-200d-1f9bc\":0,\"1f469-1f3fb-200d-1f9bd\":0,\"1f469-1f3fc-200d-1f9bd\":0,\"1f469-1f3fd-200d-1f9bd\":0,\"1f469-1f3fe-200d-1f9bd\":0,\"1f469-1f3ff-200d-1f9bd\":0,\"1f469-1f3fb-200d-2695\":0,\"1f469-1f3fc-200d-2695\":0,\"1f469-1f3fd-200d-2695\":0,\"1f469-1f3fe-200d-2695\":0,\"1f469-1f3ff-200d-2695\":0,\"1f469-1f3fb-200d-2696\":0,\"1f469-1f3fc-200d-2696\":0,\"1f469-1f3fd-200d-2696\":0,\"1f469-1f3fe-200d-2696\":0,\"1f469-1f3ff-200d-2696\":0,\"1f469-1f3fb-200d-2708\":0,\"1f469-1f3fc-200d-2708\":0,\"1f469-1f3fd-200d-2708\":0,\"1f469-1f3fe-200d-2708\":0,\"1f469-1f3ff-200d-2708\":0,\"1f469-1f3fb-200d-2764-200d-1f468-1f3fb\":0,\"1f469-1f3fb-200d-2764-200d-1f468-1f3fc\":0,\"1f469-1f3fb-200d-2764-200d-1f468-1f3fd\":0,\"1f469-1f3fb-200d-2764-200d-1f468-1f3fe\":0,\"1f469-1f3fb-200d-2764-200d-1f468-1f3ff\":0,\"1f469-1f3fc-200d-2764-200d-1f468-1f3fb\":0,\"1f469-1f3fc-200d-2764-200d-1f468-1f3fc\":0,\"1f469-1f3fc-200d-2764-200d-1f468-1f3fd\":0,\"1f469-1f3fc-200d-2764-200d-1f468-1f3fe\":0,\"1f469-1f3fc-200d-2764-200d-1f468-1f3ff\":0,\"1f469-1f3fd-200d-2764-200d-1f468-1f3fb\":0,\"1f469-1f3fd-200d-2764-200d-1f468-1f3fc\":0,\"1f469-1f3fd-200d-2764-200d-1f468-1f3fd\":0,\"1f469-1f3fd-200d-2764-200d-1f468-1f3fe\":0,\"1f469-1f3fd-200d-2764-200d-1f468-1f3ff\":0,\"1f469-1f3fe-200d-2764-200d-1f468-1f3fb\":0,\"1f469-1f3fe-200d-2764-200d-1f468-1f3fc\":0,\"1f469-1f3fe-200d-2764-200d-1f468-1f3fd\":0,\"1f469-1f3fe-200d-2764-200d-1f468-1f3fe\":0,\"1f469-1f3fe-200d-2764-200d-1f468-1f3ff\":0,\"1f469-1f3ff-200d-2764-200d-1f468-1f3fb\":0,\"1f469-1f3ff-200d-2764-200d-1f468-1f3fc\":0,\"1f469-1f3ff-200d-2764-200d-1f468-1f3fd\":0,\"1f469-1f3ff-200d-2764-200d-1f468-1f3fe\":0,\"1f469-1f3ff-200d-2764-200d-1f468-1f3ff\":0,\"1f469-1f3fb-200d-2764-200d-1f469-1f3fb\":0,\"1f469-1f3fb-200d-2764-200d-1f469-1f3fc\":0,\"1f469-1f3fb-200d-2764-200d-1f469-1f3fd\":0,\"1f469-1f3fb-200d-2764-200d-1f469-1f3fe\":0,\"1f469-1f3fb-200d-2764-200d-1f469-1f3ff\":0,\"1f469-1f3fc-200d-2764-200d-1f469-1f3fb\":0,\"1f469-1f3fc-200d-2764-200d-1f469-1f3fc\":0,\"1f469-1f3fc-200d-2764-200d-1f469-1f3fd\":0,\"1f469-1f3fc-200d-2764-200d-1f469-1f3fe\":0,\"1f469-1f3fc-200d-2764-200d-1f469-1f3ff\":0,\"1f469-1f3fd-200d-2764-200d-1f469-1f3fb\":0,\"1f469-1f3fd-200d-2764-200d-1f469-1f3fc\":0,\"1f469-1f3fd-200d-2764-200d-1f469-1f3fd\":0,\"1f469-1f3fd-200d-2764-200d-1f469-1f3fe\":0,\"1f469-1f3fd-200d-2764-200d-1f469-1f3ff\":0,\"1f469-1f3fe-200d-2764-200d-1f469-1f3fb\":0,\"1f469-1f3fe-200d-2764-200d-1f469-1f3fc\":0,\"1f469-1f3fe-200d-2764-200d-1f469-1f3fd\":0,\"1f469-1f3fe-200d-2764-200d-1f469-1f3fe\":0,\"1f469-1f3fe-200d-2764-200d-1f469-1f3ff\":0,\"1f469-1f3ff-200d-2764-200d-1f469-1f3fb\":0,\"1f469-1f3ff-200d-2764-200d-1f469-1f3fc\":0,\"1f469-1f3ff-200d-2764-200d-1f469-1f3fd\":0,\"1f469-1f3ff-200d-2764-200d-1f469-1f3fe\":0,\"1f469-1f3ff-200d-2764-200d-1f469-1f3ff\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fb\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fc\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fd\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fe\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3ff\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fb\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fc\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fd\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fe\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3ff\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fb\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fc\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fd\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fe\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3ff\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fb\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fc\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fd\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fe\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3ff\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fb\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fc\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fd\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fe\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3ff\":0,\"1f469-1f3fb\":0,\"1f469-1f3fc\":0,\"1f469-1f3fd\":0,\"1f469-1f3fe\":0,\"1f469-1f3ff\":0,\"1f46b-1f3fb\":0,\"1f46b-1f3fc\":0,\"1f46b-1f3fd\":0,\"1f46b-1f3fe\":0,\"1f46b-1f3ff\":0,\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc\":0,\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd\":0,\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe\":0,\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff\":0,\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb\":0,\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd\":0,\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe\":0,\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff\":0,\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb\":0,\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc\":0,\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe\":0,\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff\":0,\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb\":0,\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc\":0,\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd\":0,\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff\":0,\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb\":0,\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc\":0,\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd\":0,\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe\":0,\"1f46c-1f3fb\":0,\"1f46c-1f3fc\":0,\"1f46c-1f3fd\":0,\"1f46c-1f3fe\":0,\"1f46c-1f3ff\":0,\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc\":0,\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd\":0,\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe\":0,\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff\":0,\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb\":0,\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd\":0,\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe\":0,\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff\":0,\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb\":0,\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc\":0,\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe\":0,\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff\":0,\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb\":0,\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc\":0,\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd\":0,\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff\":0,\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb\":0,\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc\":0,\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd\":0,\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe\":0,\"1f46d-1f3fb\":0,\"1f46d-1f3fc\":0,\"1f46d-1f3fd\":0,\"1f46d-1f3fe\":0,\"1f46d-1f3ff\":0,\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc\":0,\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd\":0,\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe\":0,\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff\":0,\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb\":0,\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd\":0,\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe\":0,\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff\":0,\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb\":0,\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc\":0,\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe\":0,\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff\":0,\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb\":0,\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc\":0,\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd\":0,\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff\":0,\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb\":0,\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc\":0,\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd\":0,\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe\":0,\"1f46e-1f3fb-200d-2640\":0,\"1f46e-1f3fc-200d-2640\":0,\"1f46e-1f3fd-200d-2640\":0,\"1f46e-1f3fe-200d-2640\":0,\"1f46e-1f3ff-200d-2640\":0,\"1f46e-1f3fb-200d-2642\":0,\"1f46e-1f3fc-200d-2642\":0,\"1f46e-1f3fd-200d-2642\":0,\"1f46e-1f3fe-200d-2642\":0,\"1f46e-1f3ff-200d-2642\":0,\"1f46e-1f3fb\":0,\"1f46e-1f3fc\":0,\"1f46e-1f3fd\":0,\"1f46e-1f3fe\":0,\"1f46e-1f3ff\":0,\"1f470-1f3fb-200d-2640\":0,\"1f470-1f3fc-200d-2640\":0,\"1f470-1f3fd-200d-2640\":0,\"1f470-1f3fe-200d-2640\":0,\"1f470-1f3ff-200d-2640\":0,\"1f470-1f3fb-200d-2642\":0,\"1f470-1f3fc-200d-2642\":0,\"1f470-1f3fd-200d-2642\":0,\"1f470-1f3fe-200d-2642\":0,\"1f470-1f3ff-200d-2642\":0,\"1f470-1f3fb\":0,\"1f470-1f3fc\":0,\"1f470-1f3fd\":0,\"1f470-1f3fe\":0,\"1f470-1f3ff\":0,\"1f471-1f3fb-200d-2640\":0,\"1f471-1f3fc-200d-2640\":0,\"1f471-1f3fd-200d-2640\":0,\"1f471-1f3fe-200d-2640\":0,\"1f471-1f3ff-200d-2640\":0,\"1f471-1f3fb-200d-2642\":0,\"1f471-1f3fc-200d-2642\":0,\"1f471-1f3fd-200d-2642\":0,\"1f471-1f3fe-200d-2642\":0,\"1f471-1f3ff-200d-2642\":0,\"1f471-1f3fb\":0,\"1f471-1f3fc\":0,\"1f471-1f3fd\":0,\"1f471-1f3fe\":0,\"1f471-1f3ff\":0,\"1f472-1f3fb\":0,\"1f472-1f3fc\":0,\"1f472-1f3fd\":0,\"1f472-1f3fe\":0,\"1f472-1f3ff\":0,\"1f473-1f3fb-200d-2640\":0,\"1f473-1f3fc-200d-2640\":0,\"1f473-1f3fd-200d-2640\":0,\"1f473-1f3fe-200d-2640\":0,\"1f473-1f3ff-200d-2640\":0,\"1f473-1f3fb-200d-2642\":0,\"1f473-1f3fc-200d-2642\":0,\"1f473-1f3fd-200d-2642\":0,\"1f473-1f3fe-200d-2642\":0,\"1f473-1f3ff-200d-2642\":0,\"1f473-1f3fb\":0,\"1f473-1f3fc\":0,\"1f473-1f3fd\":0,\"1f473-1f3fe\":0,\"1f473-1f3ff\":0,\"1f474-1f3fb\":0,\"1f474-1f3fc\":0,\"1f474-1f3fd\":0,\"1f474-1f3fe\":0,\"1f474-1f3ff\":0,\"1f475-1f3fb\":0,\"1f475-1f3fc\":0,\"1f475-1f3fd\":0,\"1f475-1f3fe\":0,\"1f475-1f3ff\":0,\"1f476-1f3fb\":0,\"1f476-1f3fc\":0,\"1f476-1f3fd\":0,\"1f476-1f3fe\":0,\"1f476-1f3ff\":0,\"1f477-1f3fb-200d-2640\":0,\"1f477-1f3fc-200d-2640\":0,\"1f477-1f3fd-200d-2640\":0,\"1f477-1f3fe-200d-2640\":0,\"1f477-1f3ff-200d-2640\":0,\"1f477-1f3fb-200d-2642\":0,\"1f477-1f3fc-200d-2642\":0,\"1f477-1f3fd-200d-2642\":0,\"1f477-1f3fe-200d-2642\":0,\"1f477-1f3ff-200d-2642\":0,\"1f477-1f3fb\":0,\"1f477-1f3fc\":0,\"1f477-1f3fd\":0,\"1f477-1f3fe\":0,\"1f477-1f3ff\":0,\"1f478-1f3fb\":0,\"1f478-1f3fc\":0,\"1f478-1f3fd\":0,\"1f478-1f3fe\":0,\"1f478-1f3ff\":0,\"1f47c-1f3fb\":0,\"1f47c-1f3fc\":0,\"1f47c-1f3fd\":0,\"1f47c-1f3fe\":0,\"1f47c-1f3ff\":0,\"1f481-1f3fb-200d-2640\":0,\"1f481-1f3fc-200d-2640\":0,\"1f481-1f3fd-200d-2640\":0,\"1f481-1f3fe-200d-2640\":0,\"1f481-1f3ff-200d-2640\":0,\"1f481-1f3fb-200d-2642\":0,\"1f481-1f3fc-200d-2642\":0,\"1f481-1f3fd-200d-2642\":0,\"1f481-1f3fe-200d-2642\":0,\"1f481-1f3ff-200d-2642\":0,\"1f481-1f3fb\":0,\"1f481-1f3fc\":0,\"1f481-1f3fd\":0,\"1f481-1f3fe\":0,\"1f481-1f3ff\":0,\"1f482-1f3fb-200d-2640\":0,\"1f482-1f3fc-200d-2640\":0,\"1f482-1f3fd-200d-2640\":0,\"1f482-1f3fe-200d-2640\":0,\"1f482-1f3ff-200d-2640\":0,\"1f482-1f3fb-200d-2642\":0,\"1f482-1f3fc-200d-2642\":0,\"1f482-1f3fd-200d-2642\":0,\"1f482-1f3fe-200d-2642\":0,\"1f482-1f3ff-200d-2642\":0,\"1f482-1f3fb\":0,\"1f482-1f3fc\":0,\"1f482-1f3fd\":0,\"1f482-1f3fe\":0,\"1f482-1f3ff\":0,\"1f483-1f3fb\":0,\"1f483-1f3fc\":0,\"1f483-1f3fd\":0,\"1f483-1f3fe\":0,\"1f483-1f3ff\":0,\"1f485-1f3fb\":0,\"1f485-1f3fc\":0,\"1f485-1f3fd\":0,\"1f485-1f3fe\":0,\"1f485-1f3ff\":0,\"1f486-1f3fb-200d-2640\":0,\"1f486-1f3fc-200d-2640\":0,\"1f486-1f3fd-200d-2640\":0,\"1f486-1f3fe-200d-2640\":0,\"1f486-1f3ff-200d-2640\":0,\"1f486-1f3fb-200d-2642\":0,\"1f486-1f3fc-200d-2642\":0,\"1f486-1f3fd-200d-2642\":0,\"1f486-1f3fe-200d-2642\":0,\"1f486-1f3ff-200d-2642\":0,\"1f486-1f3fb\":0,\"1f486-1f3fc\":0,\"1f486-1f3fd\":0,\"1f486-1f3fe\":0,\"1f486-1f3ff\":0,\"1f487-1f3fb-200d-2640\":0,\"1f487-1f3fc-200d-2640\":0,\"1f487-1f3fd-200d-2640\":0,\"1f487-1f3fe-200d-2640\":0,\"1f487-1f3ff-200d-2640\":0,\"1f487-1f3fb-200d-2642\":0,\"1f487-1f3fc-200d-2642\":0,\"1f487-1f3fd-200d-2642\":0,\"1f487-1f3fe-200d-2642\":0,\"1f487-1f3ff-200d-2642\":0,\"1f487-1f3fb\":0,\"1f487-1f3fc\":0,\"1f487-1f3fd\":0,\"1f487-1f3fe\":0,\"1f487-1f3ff\":0,\"1f48f-1f3fb\":0,\"1f48f-1f3fc\":0,\"1f48f-1f3fd\":0,\"1f48f-1f3fe\":0,\"1f48f-1f3ff\":0,\"1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fe\":0,\"1f491-1f3fb\":0,\"1f491-1f3fc\":0,\"1f491-1f3fd\":0,\"1f491-1f3fe\":0,\"1f491-1f3ff\":0,\"1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fe\":0,\"1f4aa-1f3fb\":0,\"1f4aa-1f3fc\":0,\"1f4aa-1f3fd\":0,\"1f4aa-1f3fe\":0,\"1f4aa-1f3ff\":0,\"1f574-1f3fb\":0,\"1f574-1f3fc\":0,\"1f574-1f3fd\":0,\"1f574-1f3fe\":0,\"1f574-1f3ff\":0,\"1f575-1f3fb-200d-2640\":0,\"1f575-1f3fc-200d-2640\":0,\"1f575-1f3fd-200d-2640\":0,\"1f575-1f3fe-200d-2640\":0,\"1f575-1f3ff-200d-2640\":0,\"1f575-1f3fb-200d-2642\":0,\"1f575-1f3fc-200d-2642\":0,\"1f575-1f3fd-200d-2642\":0,\"1f575-1f3fe-200d-2642\":0,\"1f575-1f3ff-200d-2642\":0,\"1f575-1f3fb\":0,\"1f575-1f3fc\":0,\"1f575-1f3fd\":0,\"1f575-1f3fe\":0,\"1f575-1f3ff\":0,\"1f57a-1f3fb\":0,\"1f57a-1f3fc\":0,\"1f57a-1f3fd\":0,\"1f57a-1f3fe\":0,\"1f57a-1f3ff\":0,\"1f590-1f3fb\":0,\"1f590-1f3fc\":0,\"1f590-1f3fd\":0,\"1f590-1f3fe\":0,\"1f590-1f3ff\":0,\"1f595-1f3fb\":0,\"1f595-1f3fc\":0,\"1f595-1f3fd\":0,\"1f595-1f3fe\":0,\"1f595-1f3ff\":0,\"1f596-1f3fb\":0,\"1f596-1f3fc\":0,\"1f596-1f3fd\":0,\"1f596-1f3fe\":0,\"1f596-1f3ff\":0,\"1f645-1f3fb-200d-2640\":0,\"1f645-1f3fc-200d-2640\":0,\"1f645-1f3fd-200d-2640\":0,\"1f645-1f3fe-200d-2640\":0,\"1f645-1f3ff-200d-2640\":0,\"1f645-1f3fb-200d-2642\":0,\"1f645-1f3fc-200d-2642\":0,\"1f645-1f3fd-200d-2642\":0,\"1f645-1f3fe-200d-2642\":0,\"1f645-1f3ff-200d-2642\":0,\"1f645-1f3fb\":0,\"1f645-1f3fc\":0,\"1f645-1f3fd\":0,\"1f645-1f3fe\":0,\"1f645-1f3ff\":0,\"1f646-1f3fb-200d-2640\":0,\"1f646-1f3fc-200d-2640\":0,\"1f646-1f3fd-200d-2640\":0,\"1f646-1f3fe-200d-2640\":0,\"1f646-1f3ff-200d-2640\":0,\"1f646-1f3fb-200d-2642\":0,\"1f646-1f3fc-200d-2642\":0,\"1f646-1f3fd-200d-2642\":0,\"1f646-1f3fe-200d-2642\":0,\"1f646-1f3ff-200d-2642\":0,\"1f646-1f3fb\":0,\"1f646-1f3fc\":0,\"1f646-1f3fd\":0,\"1f646-1f3fe\":0,\"1f646-1f3ff\":0,\"1f647-1f3fb-200d-2640\":0,\"1f647-1f3fc-200d-2640\":0,\"1f647-1f3fd-200d-2640\":0,\"1f647-1f3fe-200d-2640\":0,\"1f647-1f3ff-200d-2640\":0,\"1f647-1f3fb-200d-2642\":0,\"1f647-1f3fc-200d-2642\":0,\"1f647-1f3fd-200d-2642\":0,\"1f647-1f3fe-200d-2642\":0,\"1f647-1f3ff-200d-2642\":0,\"1f647-1f3fb\":0,\"1f647-1f3fc\":0,\"1f647-1f3fd\":0,\"1f647-1f3fe\":0,\"1f647-1f3ff\":0,\"1f64b-1f3fb-200d-2640\":0,\"1f64b-1f3fc-200d-2640\":0,\"1f64b-1f3fd-200d-2640\":0,\"1f64b-1f3fe-200d-2640\":0,\"1f64b-1f3ff-200d-2640\":0,\"1f64b-1f3fb-200d-2642\":0,\"1f64b-1f3fc-200d-2642\":0,\"1f64b-1f3fd-200d-2642\":0,\"1f64b-1f3fe-200d-2642\":0,\"1f64b-1f3ff-200d-2642\":0,\"1f64b-1f3fb\":0,\"1f64b-1f3fc\":0,\"1f64b-1f3fd\":0,\"1f64b-1f3fe\":0,\"1f64b-1f3ff\":0,\"1f64c-1f3fb\":0,\"1f64c-1f3fc\":0,\"1f64c-1f3fd\":0,\"1f64c-1f3fe\":0,\"1f64c-1f3ff\":0,\"1f64d-1f3fb-200d-2640\":0,\"1f64d-1f3fc-200d-2640\":0,\"1f64d-1f3fd-200d-2640\":0,\"1f64d-1f3fe-200d-2640\":0,\"1f64d-1f3ff-200d-2640\":0,\"1f64d-1f3fb-200d-2642\":0,\"1f64d-1f3fc-200d-2642\":0,\"1f64d-1f3fd-200d-2642\":0,\"1f64d-1f3fe-200d-2642\":0,\"1f64d-1f3ff-200d-2642\":0,\"1f64d-1f3fb\":0,\"1f64d-1f3fc\":0,\"1f64d-1f3fd\":0,\"1f64d-1f3fe\":0,\"1f64d-1f3ff\":0,\"1f64e-1f3fb-200d-2640\":0,\"1f64e-1f3fc-200d-2640\":0,\"1f64e-1f3fd-200d-2640\":0,\"1f64e-1f3fe-200d-2640\":0,\"1f64e-1f3ff-200d-2640\":0,\"1f64e-1f3fb-200d-2642\":0,\"1f64e-1f3fc-200d-2642\":0,\"1f64e-1f3fd-200d-2642\":0,\"1f64e-1f3fe-200d-2642\":0,\"1f64e-1f3ff-200d-2642\":0,\"1f64e-1f3fb\":0,\"1f64e-1f3fc\":0,\"1f64e-1f3fd\":0,\"1f64e-1f3fe\":0,\"1f64e-1f3ff\":0,\"1f64f-1f3fb\":0,\"1f64f-1f3fc\":0,\"1f64f-1f3fd\":0,\"1f64f-1f3fe\":0,\"1f64f-1f3ff\":0,\"1f6a3-1f3fb-200d-2640\":0,\"1f6a3-1f3fc-200d-2640\":0,\"1f6a3-1f3fd-200d-2640\":0,\"1f6a3-1f3fe-200d-2640\":0,\"1f6a3-1f3ff-200d-2640\":0,\"1f6a3-1f3fb-200d-2642\":0,\"1f6a3-1f3fc-200d-2642\":0,\"1f6a3-1f3fd-200d-2642\":0,\"1f6a3-1f3fe-200d-2642\":0,\"1f6a3-1f3ff-200d-2642\":0,\"1f6a3-1f3fb\":0,\"1f6a3-1f3fc\":0,\"1f6a3-1f3fd\":0,\"1f6a3-1f3fe\":0,\"1f6a3-1f3ff\":0,\"1f6b4-1f3fb-200d-2640\":0,\"1f6b4-1f3fc-200d-2640\":0,\"1f6b4-1f3fd-200d-2640\":0,\"1f6b4-1f3fe-200d-2640\":0,\"1f6b4-1f3ff-200d-2640\":0,\"1f6b4-1f3fb-200d-2642\":0,\"1f6b4-1f3fc-200d-2642\":0,\"1f6b4-1f3fd-200d-2642\":0,\"1f6b4-1f3fe-200d-2642\":0,\"1f6b4-1f3ff-200d-2642\":0,\"1f6b4-1f3fb\":0,\"1f6b4-1f3fc\":0,\"1f6b4-1f3fd\":0,\"1f6b4-1f3fe\":0,\"1f6b4-1f3ff\":0,\"1f6b5-1f3fb-200d-2640\":0,\"1f6b5-1f3fc-200d-2640\":0,\"1f6b5-1f3fd-200d-2640\":0,\"1f6b5-1f3fe-200d-2640\":0,\"1f6b5-1f3ff-200d-2640\":0,\"1f6b5-1f3fb-200d-2642\":0,\"1f6b5-1f3fc-200d-2642\":0,\"1f6b5-1f3fd-200d-2642\":0,\"1f6b5-1f3fe-200d-2642\":0,\"1f6b5-1f3ff-200d-2642\":0,\"1f6b5-1f3fb\":0,\"1f6b5-1f3fc\":0,\"1f6b5-1f3fd\":0,\"1f6b5-1f3fe\":0,\"1f6b5-1f3ff\":0,\"1f6b6-1f3fb-200d-2640\":0,\"1f6b6-1f3fc-200d-2640\":0,\"1f6b6-1f3fd-200d-2640\":0,\"1f6b6-1f3fe-200d-2640\":0,\"1f6b6-1f3ff-200d-2640\":0,\"1f6b6-1f3fb-200d-2642\":0,\"1f6b6-1f3fc-200d-2642\":0,\"1f6b6-1f3fd-200d-2642\":0,\"1f6b6-1f3fe-200d-2642\":0,\"1f6b6-1f3ff-200d-2642\":0,\"1f6b6-1f3fb\":0,\"1f6b6-1f3fc\":0,\"1f6b6-1f3fd\":0,\"1f6b6-1f3fe\":0,\"1f6b6-1f3ff\":0,\"1f6c0-1f3fb\":0,\"1f6c0-1f3fc\":0,\"1f6c0-1f3fd\":0,\"1f6c0-1f3fe\":0,\"1f6c0-1f3ff\":0,\"1f6cc-1f3fb\":0,\"1f6cc-1f3fc\":0,\"1f6cc-1f3fd\":0,\"1f6cc-1f3fe\":0,\"1f6cc-1f3ff\":0,\"1f90c-1f3fb\":0,\"1f90c-1f3fc\":0,\"1f90c-1f3fd\":0,\"1f90c-1f3fe\":0,\"1f90c-1f3ff\":0,\"1f90f-1f3fb\":0,\"1f90f-1f3fc\":0,\"1f90f-1f3fd\":0,\"1f90f-1f3fe\":0,\"1f90f-1f3ff\":0,\"1f918-1f3fb\":0,\"1f918-1f3fc\":0,\"1f918-1f3fd\":0,\"1f918-1f3fe\":0,\"1f918-1f3ff\":0,\"1f919-1f3fb\":0,\"1f919-1f3fc\":0,\"1f919-1f3fd\":0,\"1f919-1f3fe\":0,\"1f919-1f3ff\":0,\"1f91a-1f3fb\":0,\"1f91a-1f3fc\":0,\"1f91a-1f3fd\":0,\"1f91a-1f3fe\":0,\"1f91a-1f3ff\":0,\"1f91b-1f3fb\":0,\"1f91b-1f3fc\":0,\"1f91b-1f3fd\":0,\"1f91b-1f3fe\":0,\"1f91b-1f3ff\":0,\"1f91c-1f3fb\":0,\"1f91c-1f3fc\":0,\"1f91c-1f3fd\":0,\"1f91c-1f3fe\":0,\"1f91c-1f3ff\":0,\"1f91d-1f3fb\":0,\"1f91d-1f3fc\":0,\"1f91d-1f3fd\":0,\"1f91d-1f3fe\":0,\"1f91d-1f3ff\":0,\"1f91e-1f3fb\":0,\"1f91e-1f3fc\":0,\"1f91e-1f3fd\":0,\"1f91e-1f3fe\":0,\"1f91e-1f3ff\":0,\"1f91f-1f3fb\":0,\"1f91f-1f3fc\":0,\"1f91f-1f3fd\":0,\"1f91f-1f3fe\":0,\"1f91f-1f3ff\":0,\"1f926-1f3fb-200d-2640\":0,\"1f926-1f3fc-200d-2640\":0,\"1f926-1f3fd-200d-2640\":0,\"1f926-1f3fe-200d-2640\":0,\"1f926-1f3ff-200d-2640\":0,\"1f926-1f3fb-200d-2642\":0,\"1f926-1f3fc-200d-2642\":0,\"1f926-1f3fd-200d-2642\":0,\"1f926-1f3fe-200d-2642\":0,\"1f926-1f3ff-200d-2642\":0,\"1f926-1f3fb\":0,\"1f926-1f3fc\":0,\"1f926-1f3fd\":0,\"1f926-1f3fe\":0,\"1f926-1f3ff\":0,\"1f930-1f3fb\":0,\"1f930-1f3fc\":0,\"1f930-1f3fd\":0,\"1f930-1f3fe\":0,\"1f930-1f3ff\":0,\"1f931-1f3fb\":0,\"1f931-1f3fc\":0,\"1f931-1f3fd\":0,\"1f931-1f3fe\":0,\"1f931-1f3ff\":0,\"1f932-1f3fb\":0,\"1f932-1f3fc\":0,\"1f932-1f3fd\":0,\"1f932-1f3fe\":0,\"1f932-1f3ff\":0,\"1f933-1f3fb\":0,\"1f933-1f3fc\":0,\"1f933-1f3fd\":0,\"1f933-1f3fe\":0,\"1f933-1f3ff\":0,\"1f934-1f3fb\":0,\"1f934-1f3fc\":0,\"1f934-1f3fd\":0,\"1f934-1f3fe\":0,\"1f934-1f3ff\":0,\"1f935-1f3fb-200d-2640\":0,\"1f935-1f3fc-200d-2640\":0,\"1f935-1f3fd-200d-2640\":0,\"1f935-1f3fe-200d-2640\":0,\"1f935-1f3ff-200d-2640\":0,\"1f935-1f3fb-200d-2642\":0,\"1f935-1f3fc-200d-2642\":0,\"1f935-1f3fd-200d-2642\":0,\"1f935-1f3fe-200d-2642\":0,\"1f935-1f3ff-200d-2642\":0,\"1f935-1f3fb\":0,\"1f935-1f3fc\":0,\"1f935-1f3fd\":0,\"1f935-1f3fe\":0,\"1f935-1f3ff\":0,\"1f936-1f3fb\":0,\"1f936-1f3fc\":0,\"1f936-1f3fd\":0,\"1f936-1f3fe\":0,\"1f936-1f3ff\":0,\"1f937-1f3fb-200d-2640\":0,\"1f937-1f3fc-200d-2640\":0,\"1f937-1f3fd-200d-2640\":0,\"1f937-1f3fe-200d-2640\":0,\"1f937-1f3ff-200d-2640\":0,\"1f937-1f3fb-200d-2642\":0,\"1f937-1f3fc-200d-2642\":0,\"1f937-1f3fd-200d-2642\":0,\"1f937-1f3fe-200d-2642\":0,\"1f937-1f3ff-200d-2642\":0,\"1f937-1f3fb\":0,\"1f937-1f3fc\":0,\"1f937-1f3fd\":0,\"1f937-1f3fe\":0,\"1f937-1f3ff\":0,\"1f938-1f3fb-200d-2640\":0,\"1f938-1f3fc-200d-2640\":0,\"1f938-1f3fd-200d-2640\":0,\"1f938-1f3fe-200d-2640\":0,\"1f938-1f3ff-200d-2640\":0,\"1f938-1f3fb-200d-2642\":0,\"1f938-1f3fc-200d-2642\":0,\"1f938-1f3fd-200d-2642\":0,\"1f938-1f3fe-200d-2642\":0,\"1f938-1f3ff-200d-2642\":0,\"1f938-1f3fb\":0,\"1f938-1f3fc\":0,\"1f938-1f3fd\":0,\"1f938-1f3fe\":0,\"1f938-1f3ff\":0,\"1f939-1f3fb-200d-2640\":0,\"1f939-1f3fc-200d-2640\":0,\"1f939-1f3fd-200d-2640\":0,\"1f939-1f3fe-200d-2640\":0,\"1f939-1f3ff-200d-2640\":0,\"1f939-1f3fb-200d-2642\":0,\"1f939-1f3fc-200d-2642\":0,\"1f939-1f3fd-200d-2642\":0,\"1f939-1f3fe-200d-2642\":0,\"1f939-1f3ff-200d-2642\":0,\"1f939-1f3fb\":0,\"1f939-1f3fc\":0,\"1f939-1f3fd\":0,\"1f939-1f3fe\":0,\"1f939-1f3ff\":0,\"1f93d-1f3fb-200d-2640\":0,\"1f93d-1f3fc-200d-2640\":0,\"1f93d-1f3fd-200d-2640\":0,\"1f93d-1f3fe-200d-2640\":0,\"1f93d-1f3ff-200d-2640\":0,\"1f93d-1f3fb-200d-2642\":0,\"1f93d-1f3fc-200d-2642\":0,\"1f93d-1f3fd-200d-2642\":0,\"1f93d-1f3fe-200d-2642\":0,\"1f93d-1f3ff-200d-2642\":0,\"1f93d-1f3fb\":0,\"1f93d-1f3fc\":0,\"1f93d-1f3fd\":0,\"1f93d-1f3fe\":0,\"1f93d-1f3ff\":0,\"1f93e-1f3fb-200d-2640\":0,\"1f93e-1f3fc-200d-2640\":0,\"1f93e-1f3fd-200d-2640\":0,\"1f93e-1f3fe-200d-2640\":0,\"1f93e-1f3ff-200d-2640\":0,\"1f93e-1f3fb-200d-2642\":0,\"1f93e-1f3fc-200d-2642\":0,\"1f93e-1f3fd-200d-2642\":0,\"1f93e-1f3fe-200d-2642\":0,\"1f93e-1f3ff-200d-2642\":0,\"1f93e-1f3fb\":0,\"1f93e-1f3fc\":0,\"1f93e-1f3fd\":0,\"1f93e-1f3fe\":0,\"1f93e-1f3ff\":0,\"1f977-1f3fb\":0,\"1f977-1f3fc\":0,\"1f977-1f3fd\":0,\"1f977-1f3fe\":0,\"1f977-1f3ff\":0,\"1f9b5-1f3fb\":0,\"1f9b5-1f3fc\":0,\"1f9b5-1f3fd\":0,\"1f9b5-1f3fe\":0,\"1f9b5-1f3ff\":0,\"1f9b6-1f3fb\":0,\"1f9b6-1f3fc\":0,\"1f9b6-1f3fd\":0,\"1f9b6-1f3fe\":0,\"1f9b6-1f3ff\":0,\"1f9b8-1f3fb-200d-2640\":0,\"1f9b8-1f3fc-200d-2640\":0,\"1f9b8-1f3fd-200d-2640\":0,\"1f9b8-1f3fe-200d-2640\":0,\"1f9b8-1f3ff-200d-2640\":0,\"1f9b8-1f3fb-200d-2642\":0,\"1f9b8-1f3fc-200d-2642\":0,\"1f9b8-1f3fd-200d-2642\":0,\"1f9b8-1f3fe-200d-2642\":0,\"1f9b8-1f3ff-200d-2642\":0,\"1f9b8-1f3fb\":0,\"1f9b8-1f3fc\":0,\"1f9b8-1f3fd\":0,\"1f9b8-1f3fe\":0,\"1f9b8-1f3ff\":0,\"1f9b9-1f3fb-200d-2640\":0,\"1f9b9-1f3fc-200d-2640\":0,\"1f9b9-1f3fd-200d-2640\":0,\"1f9b9-1f3fe-200d-2640\":0,\"1f9b9-1f3ff-200d-2640\":0,\"1f9b9-1f3fb-200d-2642\":0,\"1f9b9-1f3fc-200d-2642\":0,\"1f9b9-1f3fd-200d-2642\":0,\"1f9b9-1f3fe-200d-2642\":0,\"1f9b9-1f3ff-200d-2642\":0,\"1f9b9-1f3fb\":0,\"1f9b9-1f3fc\":0,\"1f9b9-1f3fd\":0,\"1f9b9-1f3fe\":0,\"1f9b9-1f3ff\":0,\"1f9bb-1f3fb\":0,\"1f9bb-1f3fc\":0,\"1f9bb-1f3fd\":0,\"1f9bb-1f3fe\":0,\"1f9bb-1f3ff\":0,\"1f9cd-1f3fb-200d-2640\":0,\"1f9cd-1f3fc-200d-2640\":0,\"1f9cd-1f3fd-200d-2640\":0,\"1f9cd-1f3fe-200d-2640\":0,\"1f9cd-1f3ff-200d-2640\":0,\"1f9cd-1f3fb-200d-2642\":0,\"1f9cd-1f3fc-200d-2642\":0,\"1f9cd-1f3fd-200d-2642\":0,\"1f9cd-1f3fe-200d-2642\":0,\"1f9cd-1f3ff-200d-2642\":0,\"1f9cd-1f3fb\":0,\"1f9cd-1f3fc\":0,\"1f9cd-1f3fd\":0,\"1f9cd-1f3fe\":0,\"1f9cd-1f3ff\":0,\"1f9ce-1f3fb-200d-2640\":0,\"1f9ce-1f3fc-200d-2640\":0,\"1f9ce-1f3fd-200d-2640\":0,\"1f9ce-1f3fe-200d-2640\":0,\"1f9ce-1f3ff-200d-2640\":0,\"1f9ce-1f3fb-200d-2642\":0,\"1f9ce-1f3fc-200d-2642\":0,\"1f9ce-1f3fd-200d-2642\":0,\"1f9ce-1f3fe-200d-2642\":0,\"1f9ce-1f3ff-200d-2642\":0,\"1f9ce-1f3fb\":0,\"1f9ce-1f3fc\":0,\"1f9ce-1f3fd\":0,\"1f9ce-1f3fe\":0,\"1f9ce-1f3ff\":0,\"1f9cf-1f3fb-200d-2640\":0,\"1f9cf-1f3fc-200d-2640\":0,\"1f9cf-1f3fd-200d-2640\":0,\"1f9cf-1f3fe-200d-2640\":0,\"1f9cf-1f3ff-200d-2640\":0,\"1f9cf-1f3fb-200d-2642\":0,\"1f9cf-1f3fc-200d-2642\":0,\"1f9cf-1f3fd-200d-2642\":0,\"1f9cf-1f3fe-200d-2642\":0,\"1f9cf-1f3ff-200d-2642\":0,\"1f9cf-1f3fb\":0,\"1f9cf-1f3fc\":0,\"1f9cf-1f3fd\":0,\"1f9cf-1f3fe\":0,\"1f9cf-1f3ff\":0,\"1f9d1-1f3fb-200d-1f33e\":0,\"1f9d1-1f3fc-200d-1f33e\":0,\"1f9d1-1f3fd-200d-1f33e\":0,\"1f9d1-1f3fe-200d-1f33e\":0,\"1f9d1-1f3ff-200d-1f33e\":0,\"1f9d1-1f3fb-200d-1f373\":0,\"1f9d1-1f3fc-200d-1f373\":0,\"1f9d1-1f3fd-200d-1f373\":0,\"1f9d1-1f3fe-200d-1f373\":0,\"1f9d1-1f3ff-200d-1f373\":0,\"1f9d1-1f3fb-200d-1f37c\":0,\"1f9d1-1f3fc-200d-1f37c\":0,\"1f9d1-1f3fd-200d-1f37c\":0,\"1f9d1-1f3fe-200d-1f37c\":0,\"1f9d1-1f3ff-200d-1f37c\":0,\"1f9d1-1f3fb-200d-1f384\":0,\"1f9d1-1f3fc-200d-1f384\":0,\"1f9d1-1f3fd-200d-1f384\":0,\"1f9d1-1f3fe-200d-1f384\":0,\"1f9d1-1f3ff-200d-1f384\":0,\"1f9d1-1f3fb-200d-1f393\":0,\"1f9d1-1f3fc-200d-1f393\":0,\"1f9d1-1f3fd-200d-1f393\":0,\"1f9d1-1f3fe-200d-1f393\":0,\"1f9d1-1f3ff-200d-1f393\":0,\"1f9d1-1f3fb-200d-1f3a4\":0,\"1f9d1-1f3fc-200d-1f3a4\":0,\"1f9d1-1f3fd-200d-1f3a4\":0,\"1f9d1-1f3fe-200d-1f3a4\":0,\"1f9d1-1f3ff-200d-1f3a4\":0,\"1f9d1-1f3fb-200d-1f3a8\":0,\"1f9d1-1f3fc-200d-1f3a8\":0,\"1f9d1-1f3fd-200d-1f3a8\":0,\"1f9d1-1f3fe-200d-1f3a8\":0,\"1f9d1-1f3ff-200d-1f3a8\":0,\"1f9d1-1f3fb-200d-1f3eb\":0,\"1f9d1-1f3fc-200d-1f3eb\":0,\"1f9d1-1f3fd-200d-1f3eb\":0,\"1f9d1-1f3fe-200d-1f3eb\":0,\"1f9d1-1f3ff-200d-1f3eb\":0,\"1f9d1-1f3fb-200d-1f3ed\":0,\"1f9d1-1f3fc-200d-1f3ed\":0,\"1f9d1-1f3fd-200d-1f3ed\":0,\"1f9d1-1f3fe-200d-1f3ed\":0,\"1f9d1-1f3ff-200d-1f3ed\":0,\"1f9d1-1f3fb-200d-1f4bb\":0,\"1f9d1-1f3fc-200d-1f4bb\":0,\"1f9d1-1f3fd-200d-1f4bb\":0,\"1f9d1-1f3fe-200d-1f4bb\":0,\"1f9d1-1f3ff-200d-1f4bb\":0,\"1f9d1-1f3fb-200d-1f4bc\":0,\"1f9d1-1f3fc-200d-1f4bc\":0,\"1f9d1-1f3fd-200d-1f4bc\":0,\"1f9d1-1f3fe-200d-1f4bc\":0,\"1f9d1-1f3ff-200d-1f4bc\":0,\"1f9d1-1f3fb-200d-1f527\":0,\"1f9d1-1f3fc-200d-1f527\":0,\"1f9d1-1f3fd-200d-1f527\":0,\"1f9d1-1f3fe-200d-1f527\":0,\"1f9d1-1f3ff-200d-1f527\":0,\"1f9d1-1f3fb-200d-1f52c\":0,\"1f9d1-1f3fc-200d-1f52c\":0,\"1f9d1-1f3fd-200d-1f52c\":0,\"1f9d1-1f3fe-200d-1f52c\":0,\"1f9d1-1f3ff-200d-1f52c\":0,\"1f9d1-1f3fb-200d-1f680\":0,\"1f9d1-1f3fc-200d-1f680\":0,\"1f9d1-1f3fd-200d-1f680\":0,\"1f9d1-1f3fe-200d-1f680\":0,\"1f9d1-1f3ff-200d-1f680\":0,\"1f9d1-1f3fb-200d-1f692\":0,\"1f9d1-1f3fc-200d-1f692\":0,\"1f9d1-1f3fd-200d-1f692\":0,\"1f9d1-1f3fe-200d-1f692\":0,\"1f9d1-1f3ff-200d-1f692\":0,\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fb-200d-1f9af\":0,\"1f9d1-1f3fc-200d-1f9af\":0,\"1f9d1-1f3fd-200d-1f9af\":0,\"1f9d1-1f3fe-200d-1f9af\":0,\"1f9d1-1f3ff-200d-1f9af\":0,\"1f9d1-1f3fb-200d-1f9b0\":0,\"1f9d1-1f3fc-200d-1f9b0\":0,\"1f9d1-1f3fd-200d-1f9b0\":0,\"1f9d1-1f3fe-200d-1f9b0\":0,\"1f9d1-1f3ff-200d-1f9b0\":0,\"1f9d1-1f3fb-200d-1f9b1\":0,\"1f9d1-1f3fc-200d-1f9b1\":0,\"1f9d1-1f3fd-200d-1f9b1\":0,\"1f9d1-1f3fe-200d-1f9b1\":0,\"1f9d1-1f3ff-200d-1f9b1\":0,\"1f9d1-1f3fb-200d-1f9b2\":0,\"1f9d1-1f3fc-200d-1f9b2\":0,\"1f9d1-1f3fd-200d-1f9b2\":0,\"1f9d1-1f3fe-200d-1f9b2\":0,\"1f9d1-1f3ff-200d-1f9b2\":0,\"1f9d1-1f3fb-200d-1f9b3\":0,\"1f9d1-1f3fc-200d-1f9b3\":0,\"1f9d1-1f3fd-200d-1f9b3\":0,\"1f9d1-1f3fe-200d-1f9b3\":0,\"1f9d1-1f3ff-200d-1f9b3\":0,\"1f9d1-1f3fb-200d-1f9bc\":0,\"1f9d1-1f3fc-200d-1f9bc\":0,\"1f9d1-1f3fd-200d-1f9bc\":0,\"1f9d1-1f3fe-200d-1f9bc\":0,\"1f9d1-1f3ff-200d-1f9bc\":0,\"1f9d1-1f3fb-200d-1f9bd\":0,\"1f9d1-1f3fc-200d-1f9bd\":0,\"1f9d1-1f3fd-200d-1f9bd\":0,\"1f9d1-1f3fe-200d-1f9bd\":0,\"1f9d1-1f3ff-200d-1f9bd\":0,\"1f9d1-1f3fb-200d-2695\":0,\"1f9d1-1f3fc-200d-2695\":0,\"1f9d1-1f3fd-200d-2695\":0,\"1f9d1-1f3fe-200d-2695\":0,\"1f9d1-1f3ff-200d-2695\":0,\"1f9d1-1f3fb-200d-2696\":0,\"1f9d1-1f3fc-200d-2696\":0,\"1f9d1-1f3fd-200d-2696\":0,\"1f9d1-1f3fe-200d-2696\":0,\"1f9d1-1f3ff-200d-2696\":0,\"1f9d1-1f3fb-200d-2708\":0,\"1f9d1-1f3fc-200d-2708\":0,\"1f9d1-1f3fd-200d-2708\":0,\"1f9d1-1f3fe-200d-2708\":0,\"1f9d1-1f3ff-200d-2708\":0,\"1f9d1-1f3fb\":0,\"1f9d1-1f3fc\":0,\"1f9d1-1f3fd\":0,\"1f9d1-1f3fe\":0,\"1f9d1-1f3ff\":0,\"1f9d2-1f3fb\":0,\"1f9d2-1f3fc\":0,\"1f9d2-1f3fd\":0,\"1f9d2-1f3fe\":0,\"1f9d2-1f3ff\":0,\"1f9d3-1f3fb\":0,\"1f9d3-1f3fc\":0,\"1f9d3-1f3fd\":0,\"1f9d3-1f3fe\":0,\"1f9d3-1f3ff\":0,\"1f9d4-1f3fb-200d-2640\":0,\"1f9d4-1f3fc-200d-2640\":0,\"1f9d4-1f3fd-200d-2640\":0,\"1f9d4-1f3fe-200d-2640\":0,\"1f9d4-1f3ff-200d-2640\":0,\"1f9d4-1f3fb-200d-2642\":0,\"1f9d4-1f3fc-200d-2642\":0,\"1f9d4-1f3fd-200d-2642\":0,\"1f9d4-1f3fe-200d-2642\":0,\"1f9d4-1f3ff-200d-2642\":0,\"1f9d4-1f3fb\":0,\"1f9d4-1f3fc\":0,\"1f9d4-1f3fd\":0,\"1f9d4-1f3fe\":0,\"1f9d4-1f3ff\":0,\"1f9d5-1f3fb\":0,\"1f9d5-1f3fc\":0,\"1f9d5-1f3fd\":0,\"1f9d5-1f3fe\":0,\"1f9d5-1f3ff\":0,\"1f9d6-1f3fb-200d-2640\":0,\"1f9d6-1f3fc-200d-2640\":0,\"1f9d6-1f3fd-200d-2640\":0,\"1f9d6-1f3fe-200d-2640\":0,\"1f9d6-1f3ff-200d-2640\":0,\"1f9d6-1f3fb-200d-2642\":0,\"1f9d6-1f3fc-200d-2642\":0,\"1f9d6-1f3fd-200d-2642\":0,\"1f9d6-1f3fe-200d-2642\":0,\"1f9d6-1f3ff-200d-2642\":0,\"1f9d6-1f3fb\":0,\"1f9d6-1f3fc\":0,\"1f9d6-1f3fd\":0,\"1f9d6-1f3fe\":0,\"1f9d6-1f3ff\":0,\"1f9d7-1f3fb-200d-2640\":0,\"1f9d7-1f3fc-200d-2640\":0,\"1f9d7-1f3fd-200d-2640\":0,\"1f9d7-1f3fe-200d-2640\":0,\"1f9d7-1f3ff-200d-2640\":0,\"1f9d7-1f3fb-200d-2642\":0,\"1f9d7-1f3fc-200d-2642\":0,\"1f9d7-1f3fd-200d-2642\":0,\"1f9d7-1f3fe-200d-2642\":0,\"1f9d7-1f3ff-200d-2642\":0,\"1f9d7-1f3fb\":0,\"1f9d7-1f3fc\":0,\"1f9d7-1f3fd\":0,\"1f9d7-1f3fe\":0,\"1f9d7-1f3ff\":0,\"1f9d8-1f3fb-200d-2640\":0,\"1f9d8-1f3fc-200d-2640\":0,\"1f9d8-1f3fd-200d-2640\":0,\"1f9d8-1f3fe-200d-2640\":0,\"1f9d8-1f3ff-200d-2640\":0,\"1f9d8-1f3fb-200d-2642\":0,\"1f9d8-1f3fc-200d-2642\":0,\"1f9d8-1f3fd-200d-2642\":0,\"1f9d8-1f3fe-200d-2642\":0,\"1f9d8-1f3ff-200d-2642\":0,\"1f9d8-1f3fb\":0,\"1f9d8-1f3fc\":0,\"1f9d8-1f3fd\":0,\"1f9d8-1f3fe\":0,\"1f9d8-1f3ff\":0,\"1f9d9-1f3fb-200d-2640\":0,\"1f9d9-1f3fc-200d-2640\":0,\"1f9d9-1f3fd-200d-2640\":0,\"1f9d9-1f3fe-200d-2640\":0,\"1f9d9-1f3ff-200d-2640\":0,\"1f9d9-1f3fb-200d-2642\":0,\"1f9d9-1f3fc-200d-2642\":0,\"1f9d9-1f3fd-200d-2642\":0,\"1f9d9-1f3fe-200d-2642\":0,\"1f9d9-1f3ff-200d-2642\":0,\"1f9d9-1f3fb\":0,\"1f9d9-1f3fc\":0,\"1f9d9-1f3fd\":0,\"1f9d9-1f3fe\":0,\"1f9d9-1f3ff\":0,\"1f9da-1f3fb-200d-2640\":0,\"1f9da-1f3fc-200d-2640\":0,\"1f9da-1f3fd-200d-2640\":0,\"1f9da-1f3fe-200d-2640\":0,\"1f9da-1f3ff-200d-2640\":0,\"1f9da-1f3fb-200d-2642\":0,\"1f9da-1f3fc-200d-2642\":0,\"1f9da-1f3fd-200d-2642\":0,\"1f9da-1f3fe-200d-2642\":0,\"1f9da-1f3ff-200d-2642\":0,\"1f9da-1f3fb\":0,\"1f9da-1f3fc\":0,\"1f9da-1f3fd\":0,\"1f9da-1f3fe\":0,\"1f9da-1f3ff\":0,\"1f9db-1f3fb-200d-2640\":0,\"1f9db-1f3fc-200d-2640\":0,\"1f9db-1f3fd-200d-2640\":0,\"1f9db-1f3fe-200d-2640\":0,\"1f9db-1f3ff-200d-2640\":0,\"1f9db-1f3fb-200d-2642\":0,\"1f9db-1f3fc-200d-2642\":0,\"1f9db-1f3fd-200d-2642\":0,\"1f9db-1f3fe-200d-2642\":0,\"1f9db-1f3ff-200d-2642\":0,\"1f9db-1f3fb\":0,\"1f9db-1f3fc\":0,\"1f9db-1f3fd\":0,\"1f9db-1f3fe\":0,\"1f9db-1f3ff\":0,\"1f9dc-1f3fb-200d-2640\":0,\"1f9dc-1f3fc-200d-2640\":0,\"1f9dc-1f3fd-200d-2640\":0,\"1f9dc-1f3fe-200d-2640\":0,\"1f9dc-1f3ff-200d-2640\":0,\"1f9dc-1f3fb-200d-2642\":0,\"1f9dc-1f3fc-200d-2642\":0,\"1f9dc-1f3fd-200d-2642\":0,\"1f9dc-1f3fe-200d-2642\":0,\"1f9dc-1f3ff-200d-2642\":0,\"1f9dc-1f3fb\":0,\"1f9dc-1f3fc\":0,\"1f9dc-1f3fd\":0,\"1f9dc-1f3fe\":0,\"1f9dc-1f3ff\":0,\"1f9dd-1f3fb-200d-2640\":0,\"1f9dd-1f3fc-200d-2640\":0,\"1f9dd-1f3fd-200d-2640\":0,\"1f9dd-1f3fe-200d-2640\":0,\"1f9dd-1f3ff-200d-2640\":0,\"1f9dd-1f3fb-200d-2642\":0,\"1f9dd-1f3fc-200d-2642\":0,\"1f9dd-1f3fd-200d-2642\":0,\"1f9dd-1f3fe-200d-2642\":0,\"1f9dd-1f3ff-200d-2642\":0,\"1f9dd-1f3fb\":0,\"1f9dd-1f3fc\":0,\"1f9dd-1f3fd\":0,\"1f9dd-1f3fe\":0,\"1f9dd-1f3ff\":0,\"261d-1f3fb\":0,\"261d-1f3fc\":0,\"261d-1f3fd\":0,\"261d-1f3fe\":0,\"261d-1f3ff\":0,\"26f9-1f3fb-200d-2640\":0,\"26f9-1f3fc-200d-2640\":0,\"26f9-1f3fd-200d-2640\":0,\"26f9-1f3fe-200d-2640\":0,\"26f9-1f3ff-200d-2640\":0,\"26f9-1f3fb-200d-2642\":0,\"26f9-1f3fc-200d-2642\":0,\"26f9-1f3fd-200d-2642\":0,\"26f9-1f3fe-200d-2642\":0,\"26f9-1f3ff-200d-2642\":0,\"26f9-1f3fb\":0,\"26f9-1f3fc\":0,\"26f9-1f3fd\":0,\"26f9-1f3fe\":0,\"26f9-1f3ff\":0,\"270a-1f3fb\":0,\"270a-1f3fc\":0,\"270a-1f3fd\":0,\"270a-1f3fe\":0,\"270a-1f3ff\":0,\"270b-1f3fb\":0,\"270b-1f3fc\":0,\"270b-1f3fd\":0,\"270b-1f3fe\":0,\"270b-1f3ff\":0,\"270c-1f3fb\":0,\"270c-1f3fc\":0,\"270c-1f3fd\":0,\"270c-1f3fe\":0,\"270c-1f3ff\":0,\"270d-1f3fb\":0,\"270d-1f3fc\":0,\"270d-1f3fd\":0,\"270d-1f3fe\":0,\"270d-1f3ff\":0}};\n\nconst Emoji: {[emoji: string]: number} = EmojiVersions[''];\nfor(const version in EmojiVersions) {\n  if(version) {\n    Object.assign(Emoji, EmojiVersions[version as EMOJI_VERSION]);\n  }\n}\n\nexport default Emoji;\n\n/* Emoji[\"00a9-fe0f\"] = 6362;\nEmoji[\"00ae-fe0f\"] = 6363;\nEmoji[\"2122-fe0f\"] = 6364; */\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ctx from './ctx';\r\n\r\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\r\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\r\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\r\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n// https://stackoverflow.com/a/58065241\r\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\r\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\r\n  !(ctx as any).MSStream;\r\n\r\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\r\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n\r\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\r\n\r\nexport const IS_MOBILE = /* screen.width && screen.width < 480 ||  */navigator.maxTouchPoints > 0 && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LatinizeMap from \"../config/latinizeMap\";\n\nexport const badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\nconst trimRe = /^\\s+|\\s$/g;\n\nconst C2L: {[k: string]: string} = {\n  й: 'q',\n  ц: 'w',\n  у: 'e',\n  к: 'r',\n  е: 't',\n  н: 'y',\n  г: 'u',\n  ш: 'i',\n  щ: 'o',\n  з: 'p',\n  х: '[',\n  ъ: ']',\n  ф: 'a',\n  ы: 's',\n  в: 'd',\n  а: 'f',\n  п: 'g',\n  р: 'h',\n  о: 'j',\n  л: 'k',\n  д: 'l',\n  ж: ';',\n  э: '\\'',\n  я: 'z',\n  ч: 'x',\n  с: 'c',\n  м: 'v',\n  и: 'b',\n  т: 'n',\n  ь: 'm',\n  б: ',',\n  ю: '.',\n  '.': '/'\n};\n\nexport function clearBadCharsAndTrim(text: string) {\n  return text.replace(badCharsRe, '').replace(trimRe, '');\n}\n\nexport function fixCyrillic(text: string) {\n  return text.toLowerCase().replace(/[\\wа-я]/g, (ch) => {\n    const latinizeCh = C2L[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport function latinizeString(text: string) {\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\n    const latinizeCh = LatinizeMap[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport default function cleanSearchText(text: string, latinize = true) {\n  return processSearchText(text, {\n    clearBadChars: true,\n    latinize,\n    ignoreCase: true\n  });\n}\n\nexport type ProcessSearchTextOptions = Partial<{\n  clearBadChars: boolean,\n  latinize: boolean,\n  ignoreCase: boolean,\n  includeTag: boolean\n}>;\n\nexport function processSearchText(text: string, options: ProcessSearchTextOptions = {}) {\n  const hasTag = options.includeTag && text.charAt(0) === '%';\n  const originalText = text;\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\n  if(options.latinize) text = latinizeString(text);\n  if(options.ignoreCase) text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n  if(options.latinize) text += '\\x01' + fixCyrillic(originalText);\n  return text;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { InputFileLocation, InputStickerSet, InputWebFileLocation } from \"../layer\";\r\nimport type { DownloadOptions } from \"../lib/mtproto/apiFileManager\";\r\n\r\nconst FILENAME_JOINER = '_';\r\n\r\nexport function getFileNameByLocation(location: InputFileLocation | InputWebFileLocation, options?: Partial<{\r\n  fileName: string\r\n}>) {\r\n  const fileName = '';//(options?.fileName || '').split('.');\r\n  const ext = fileName[fileName.length - 1] || '';\r\n\r\n  let str: string;\r\n  switch(location._) {\r\n    case 'inputPhotoFileLocation': {\r\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputDocumentFileLocation': {\r\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputPeerPhotoFileLocation':\r\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\r\n      break;\r\n    \r\n    case 'inputStickerSetThumb': {\r\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id || \r\n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name || \r\n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon || \r\n        location.stickerset._;\r\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputFileLocation': {\r\n      str = location.volume_id + '_' + location.local_id;\r\n      break;\r\n    }\r\n\r\n    case 'inputWebFileLocation': {\r\n      str = ['webFile', location.url].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      console.error('Unrecognized location:', location);\r\n      str = '';\r\n      break;\r\n    }\r\n  }\r\n\r\n  return str + (ext ? '.' + ext : ext);\r\n}\r\n\r\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download';\r\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\r\n  //console.log('getFileURL', location);\r\n  //const perf = performance.now();\r\n  const encoded = encodeURIComponent(JSON.stringify(options));\r\n  //console.log('getFileURL encode:', performance.now() - perf, encoded);\r\n\r\n  return '/' + type + '/' + encoded;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { Database } from '../config/databases';\r\nimport Modes from '../config/modes';\r\nimport safeAssign from '../helpers/object/safeAssign';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/createIndex\r\n */\r\nexport type IDBIndex = {\r\n  indexName: string,\r\n  keyPath: string,\r\n  objectParameters: IDBIndexParameters\r\n};\r\n\r\nexport type IDBStore = {\r\n  name: string, \r\n  indexes?: IDBIndex[]\r\n};\r\n\r\nexport type IDBOptions = {\r\n  name?: string,\r\n  storeName: string,\r\n  stores?: IDBStore[],\r\n  version?: number\r\n};\r\n\r\nconst DEBUG = false;\r\n\r\nexport class IDB {\r\n  private static INSTANCES: IDB[] = [];\r\n  private openDbPromise: Promise<IDBDatabase>;\r\n  private db: IDBDatabase;\r\n  private storageIsAvailable: boolean;\r\n  private log: ReturnType<typeof logger>;\r\n  private name: string;\r\n  private version: number;\r\n  private stores: IDBStore[];\r\n\r\n  constructor(db: Database<any>) {\r\n    safeAssign(this, db);\r\n\r\n    if(Modes.test) {\r\n      this.name += '_test';\r\n    }\r\n\r\n    this.storageIsAvailable = true;\r\n    this.log = logger(['IDB', db.name].join('-'));\r\n    this.log('constructor');\r\n\r\n    this.openDatabase(true);\r\n\r\n    IDB.INSTANCES.push(this);\r\n  }\r\n\r\n  public isAvailable() {\r\n    return this.storageIsAvailable;\r\n  }\r\n\r\n  public openDatabase(createNew = false): Promise<IDBDatabase> {\r\n    if(this.openDbPromise && !createNew) {\r\n      return this.openDbPromise;\r\n    }\r\n\r\n    const createIndexes = (os: IDBObjectStore, store: IDBStore) => {\r\n      const indexNames = Array.from(os.indexNames);\r\n      for(const indexName of indexNames) {\r\n        os.deleteIndex(indexName);\r\n      }\r\n\r\n      if(!store.indexes?.length) {\r\n        return;\r\n      }\r\n\r\n      for(const index of store.indexes) {\r\n        if(os.indexNames.contains(index.indexName)) {\r\n          continue;\r\n        }\r\n\r\n        os.createIndex(index.indexName, index.keyPath, index.objectParameters);\r\n      }\r\n    };\r\n\r\n    const createObjectStore = (db: IDBDatabase, store: IDBStore) => {\r\n      const os = db.createObjectStore(store.name);\r\n      createIndexes(os, store);\r\n    };\r\n\r\n    try {\r\n      var request = indexedDB.open(this.name, this.version);\r\n\r\n      if(!request) {\r\n        return Promise.reject();\r\n      }\r\n    } catch(error) {\r\n      this.log.error('error opening db', (error as Error).message);\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    let finished = false;\r\n    setTimeout(() => {\r\n      if(!finished) {\r\n        request.onerror({type: 'IDB_CREATE_TIMEOUT'} as Event);\r\n      }\r\n    }, 3000);\r\n\r\n    return this.openDbPromise = new Promise<IDBDatabase>((resolve, reject) => {\r\n      request.onsuccess = (event) => {\r\n        finished = true;\r\n        const db = request.result;\r\n        let calledNew = false;\r\n\r\n        this.log('Opened');\r\n  \r\n        db.onerror = (error) => {\r\n          this.storageIsAvailable = false;\r\n          this.log.error('Error creating/accessing IndexedDB database', error);\r\n          reject(error);\r\n        };\r\n\r\n        db.onclose = (e) => {\r\n          this.log.error('closed:', e);\r\n          !calledNew && this.openDatabase();\r\n        };\r\n\r\n        db.onabort = (e) => {\r\n          this.log.error('abort:', e);\r\n          const transaction = e.target as IDBTransaction;\r\n          \r\n          this.openDatabase(calledNew = true);\r\n\r\n          if(transaction.onerror) {\r\n            transaction.onerror(e);\r\n          }\r\n\r\n          db.close();\r\n        };\r\n\r\n        db.onversionchange = (e) => {\r\n          this.log.error('onversionchange, lol?');\r\n        };\r\n\r\n        resolve(this.db = db);\r\n      };\r\n  \r\n      request.onerror = (event) => {\r\n        finished = true;\r\n        this.storageIsAvailable = false;\r\n        this.log.error('Error creating/accessing IndexedDB database', event);\r\n        reject(event);\r\n      };\r\n  \r\n      request.onupgradeneeded = (event) => {\r\n        finished = true;\r\n        this.log.warn('performing idb upgrade from', event.oldVersion, 'to', event.newVersion);\r\n\r\n        const target = event.target as IDBOpenDBRequest;\r\n        const db = target.result;\r\n        this.stores.forEach((store) => {\r\n          /* if(db.objectStoreNames.contains(store.name)) {\r\n            //if(event.oldVersion === 1) {\r\n              db.deleteObjectStore(store.name);\r\n            //}\r\n          } */\r\n    \r\n          if(!db.objectStoreNames.contains(store.name)) {\r\n            createObjectStore(db, store);\r\n          } else {\r\n            const txn = target.transaction;\r\n            const os = txn.objectStore(store.name);\r\n            createIndexes(os, store);\r\n          }\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  public static create<T extends Database<any>>(db: T) {\r\n    return this.INSTANCES.find((instance) => instance.name === db.name) ?? new IDB(db);\r\n  }\r\n\r\n  public static closeDatabases(preserve?: IDB) {\r\n    this.INSTANCES.forEach((storage) => {\r\n      if(preserve && preserve === storage) {\r\n        return;\r\n      }\r\n\r\n      const db = storage.db;\r\n      if(db) {\r\n        db.onclose = () => {};\r\n        db.close();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default class IDBStorage<T extends Database<any>, StoreName extends string = T['stores'][0]['name']> {\r\n  private log: ReturnType<typeof logger>;\r\n  private storeName: T['stores'][0]['name'];\r\n  private idb: IDB;\r\n\r\n  constructor(db: T, storeName: typeof db['stores'][0]['name']) {\r\n    this.storeName = storeName;\r\n    this.log = logger(['IDB', db.name, storeName].join('-'));\r\n    this.idb = IDB.create(db);\r\n  }\r\n\r\n  /**\r\n   * ! WARNING ! function requires at least one opened connection\r\n   */\r\n  /* public static clearObjectStores() {\r\n    const storage = this.STORAGES[0];\r\n    this.closeDatabases(storage);\r\n\r\n    const names = Array.from(storage.db.objectStoreNames);\r\n    const promises = names.map((name) => storage.clear(name));\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  /* public static deleteDatabase() {\r\n    this.closeDatabases();\r\n\r\n    const storages = this.STORAGES;\r\n    const dbNames = Array.from(new Set(storages.map((storage) => storage.name)));\r\n    const promises = dbNames.map((dbName) => {\r\n      return new Promise<void>((resolve, reject) => {\r\n        const deleteRequest = indexedDB.deleteDatabase(dbName);\r\n  \r\n        deleteRequest.onerror = () => {\r\n          reject();\r\n        };\r\n  \r\n        deleteRequest.onsuccess = () => {\r\n          resolve();\r\n        };\r\n      });\r\n    });\r\n\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  public delete(entryName: string | string[], storeName?: StoreName): Promise<void> {\r\n    //return Promise.resolve();\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n    }\r\n\r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      return (entryName as string[]).map((entryName) => objectStore.delete(entryName));\r\n    }, DEBUG ? 'delete: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  public clear(storeName?: StoreName): Promise<void> {\r\n    return this.getObjectStore('readwrite', (objectStore) => objectStore.clear(), DEBUG ? 'clear' : '', storeName);\r\n  }\r\n\r\n  public save(entryName: string | string[], value: any | any[], storeName?: StoreName) {\r\n    // const handleError = (error: Error) => {\r\n    //   this.log.error('save: transaction error:', entryName, value, db, error, error && error.name);\r\n    //   if((!error || error.name === 'InvalidStateError')/*  && false */) {\r\n    //     setTimeout(() => {\r\n    //       this.save(entryName, value);\r\n    //     }, 2e3);\r\n    //   } else {\r\n    //     //console.error('IndexedDB saveFile transaction error:', error, error && error.name);\r\n    //   }\r\n    // };\r\n\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n      value = [].concat(value);\r\n    }\r\n    \r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      return (entryName as string[]).map((entryName, idx) => objectStore.put(value[idx], entryName));\r\n    }, DEBUG ? 'save: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  // public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n  //   //return Promise.resolve(blobConstruct([blob]));\r\n  //   if(!(blob instanceof Blob)) {\r\n  //     blob = blobConstruct(blob);\r\n  //   }\r\n\r\n  //   return this.save(fileName, blob);\r\n  // }\r\n\r\n  /* public saveFileBase64(db: IDBDatabase, fileName: string, blob: Blob | any): Promise<Blob> {\r\n    if(this.getBlobSize(blob) > 10 * 1024 * 1024) {\r\n      return Promise.reject();\r\n    }\r\n\r\n    if(!(blob instanceof Blob)) {\r\n      var safeMimeType = blobSafeMimeType(blob.type || 'image/jpeg');\r\n      var address = 'data:' + safeMimeType + ';base64,' + bytesToBase64(blob);\r\n      return this.storagePutB64String(db, fileName, address).then(() => {\r\n        return blob;\r\n      });\r\n    }\r\n\r\n    try {\r\n      var reader = new FileReader();\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    let promise = new Promise<Blob>((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        this.storagePutB64String(db, fileName, reader.result as string).then(() => {\r\n          resolve(blob);\r\n        }, reject);\r\n      }\r\n  \r\n      reader.onerror = reject;\r\n    });\r\n    \r\n\r\n    try {\r\n      reader.readAsDataURL(blob);\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public storagePutB64String(db: IDBDatabase, fileName: string, b64string: string) {\r\n    try {\r\n      var objectStore = db.transaction([this.storeName], 'readwrite')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.put(b64string, fileName);\r\n    } catch(error) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      request.onsuccess = function(event) {\r\n        resolve();\r\n      };\r\n  \r\n      request.onerror = reject;\r\n    });\r\n  }\r\n\r\n  public getBlobSize(blob: any) {\r\n    return blob.size || blob.byteLength || blob.length;\r\n  } */\r\n\r\n  public get<T>(entryName: string[], storeName?: StoreName): Promise<T[]>;\r\n  public get<T>(entryName: string, storeName?: StoreName): Promise<T>;\r\n  public get<T>(entryName: string | string[], storeName?: StoreName): Promise<T> | Promise<T[]> {\r\n    //return Promise.reject();\r\n\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n    }\r\n\r\n    if(!entryName.length) {\r\n      return Promise.resolve([]) as any;\r\n    }\r\n\r\n    return this.getObjectStore<T>('readonly', (objectStore) => {\r\n      return (entryName as string[]).map((entryName) => objectStore.get(entryName));\r\n    }, DEBUG ? 'get: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  private getObjectStore<T>(\r\n    mode: IDBTransactionMode, \r\n    callback: (objectStore: IDBObjectStore) => IDBRequest | IDBRequest[], \r\n    log?: string, \r\n    storeName = this.storeName\r\n  ) {\r\n    let perf: number;\r\n\r\n    if(log) {\r\n      perf = performance.now();\r\n      this.log(log + ': start');\r\n    }\r\n\r\n    return this.idb.openDatabase().then((db) => {\r\n      return new Promise<T>((resolve, reject) => {\r\n        /* if(mode === 'readwrite') {\r\n          return;\r\n        } */\r\n\r\n        const transaction = db.transaction([storeName], mode);\r\n\r\n        const onError = () => {\r\n          clearTimeout(timeout);\r\n          reject(transaction.error);\r\n        };\r\n\r\n        // let resolved = false;\r\n        const onComplete = (/* what: string */) => {\r\n          clearTimeout(timeout);\r\n\r\n          if(log) {\r\n            this.log(log + ': end', performance.now() - perf/* , what */);\r\n          }\r\n\r\n          // if(resolved) {\r\n          //   return;\r\n          // }\r\n\r\n          // resolved = true;\r\n          const results = requests.map((r) => r.result);\r\n          resolve(isArray ? results : results[0]);\r\n        };\r\n\r\n        transaction.onerror = onError;\r\n\r\n        // * have to wait while clearing or setting something\r\n        const waitForTransactionComplete = mode === 'readwrite';\r\n        if(waitForTransactionComplete) {\r\n          transaction.oncomplete = () => onComplete(/* 'transaction' */);\r\n        }\r\n  \r\n        const timeout = setTimeout(() => {\r\n          this.log.error('transaction not finished', transaction, log);\r\n        }, 10000);\r\n  \r\n        /* transaction.addEventListener('abort', (e) => {\r\n          //handleError();\r\n          this.log.error('IndexedDB: transaction abort!', transaction.error);\r\n        }); */\r\n  \r\n        const callbackResult = callback(transaction.objectStore(storeName));\r\n\r\n        const isArray = Array.isArray(callbackResult);\r\n        const requests: IDBRequest[] = isArray ? callbackResult : [].concat(callbackResult) as any;\r\n\r\n        if(waitForTransactionComplete) {\r\n          return;\r\n        }\r\n\r\n        const length = requests.length;\r\n        let left = length;\r\n\r\n        const onRequestFinished = () => {\r\n          if(transaction.error) {\r\n            return;\r\n          }\r\n\r\n          if(!--left) {\r\n            onComplete(/* 'requests' */);\r\n          }\r\n        };\r\n\r\n        for(let i = 0; i < length; ++i) {\r\n          const request = requests[i];\r\n          request.onerror = onError;\r\n          request.onsuccess = onRequestFinished;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public getAll<T>(storeName?: StoreName): Promise<T[]> {\r\n    return this.getObjectStore<T[]>('readonly', (objectStore) => objectStore.getAll(), DEBUG ? 'getAll' : '', storeName);\r\n  }\r\n\r\n  /* public getAllKeys(): Promise<Array<string>> {\r\n    console.time('getAllEntries');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.getAllKeys();\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var result = event.target.result;\r\n          resolve(result);\r\n          console.timeEnd('getAllEntries');\r\n        }\r\n  \r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public isFileExists(fileName: string): Promise<boolean> {\r\n    console.time('isFileExists');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.openCursor(fileName);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var cursor = event.target.result;\r\n          resolve(!!cursor);\r\n          console.timeEnd('isFileExists');\r\n        }\r\n  \r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public getFileWriter(fileName: string, mimeType: string) {\r\n    var fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  } */\r\n}\r\n","import type ENVIRONMENT from \".\";\n\nlet environment: typeof ENVIRONMENT;\nexport function getEnvironment() {\n  return environment;\n}\n\nexport function setEnvironment(env: typeof environment) {\n  return environment = env;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, PollResults, Poll, WebPage, GroupCall, GroupCallParticipant, ReactionCount, MessagePeerReaction, PhoneCall } from \"../layer\";\nimport type { AppMessagesManager, Dialog, MessagesStorageKey, MyMessage } from \"./appManagers/appMessagesManager\";\nimport type { MyDialogFilter } from \"./storages/filters\";\nimport type { Folder } from \"./storages/dialogs\";\nimport type { UserTyping } from \"./appManagers/appProfileManager\";\nimport type { MyDraftMessage } from \"./appManagers/appDraftsManager\";\nimport type { ConnectionStatusChange } from \"./mtproto/connectionStatus\";\nimport type { GroupCallId } from \"./appManagers/appGroupCallsManager\";\nimport type { AppManagers } from \"./appManagers/managers\";\nimport type { State } from \"../config/state\";\nimport type { Progress } from \"./appManagers/appDownloadManager\";\nimport { NULL_PEER_ID, UserAuth } from \"./mtproto/mtproto_config\";\nimport EventListenerBase from \"../helpers/eventListenerBase\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport MTProtoMessagePort from \"./mtproto/mtprotoMessagePort\";\nimport { IS_WORKER } from \"../helpers/context\";\nimport { CallId } from \"./appManagers/appCallsManager\";\n\nexport type BroadcastEvents = {\n  'chat_full_update': ChatId,\n  'chat_update': ChatId,\n\n  'channel_update': ChatId,\n  \n  'user_update': UserId,\n  'user_auth': UserAuth,\n  'user_full_update': UserId,\n\n  'peer_pinned_messages': {peerId: PeerId, mids?: number[], pinned?: boolean, unpinAll?: true},\n  'peer_pinned_hidden': {peerId: PeerId, maxId: number},\n  'peer_typings': {peerId: PeerId, typings: UserTyping[]},\n  'peer_block': {peerId: PeerId, blocked: boolean},\n  'peer_title_edit': PeerId,\n  'peer_bio_edit': PeerId,\n  'peer_deleted': PeerId, // left chat, deleted user dialog, left channel\n  'peer_full_update': PeerId,\n\n  'filter_delete': MyDialogFilter,\n  'filter_update': MyDialogFilter,\n  'filter_new': MyDialogFilter,\n  'filter_order': number[],\n\n  'folder_unread': Omit<Folder, 'dialogs' | 'dispatchUnreadTimeout'>,\n  \n  'dialog_draft': {peerId: PeerId, dialog: Dialog, drop: boolean, draft: MyDraftMessage | undefined},\n  'dialog_unread': {peerId: PeerId, dialog: Dialog},\n  'dialog_flush': {peerId: PeerId, dialog: Dialog},\n  'dialog_drop': {peerId: PeerId, dialog?: Dialog},\n  'dialog_migrate': {migrateFrom: PeerId, migrateTo: PeerId},\n  //'dialog_top': Dialog,\n  'dialog_notify_settings': Dialog,\n  // 'dialog_order': {dialog: Dialog, pos: number},\n  'dialogs_multiupdate': {[peerId: PeerId]: Dialog},\n  \n  'history_append': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number},\n  'history_update': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number, message: MyMessage, sequential?: boolean},\n  'history_reply_markup': {peerId: PeerId},\n  'history_multiappend': AppMessagesManager['newMessagesToHandle'],\n  'history_delete': {peerId: PeerId, msgs: Set<number>},\n  'history_forbidden': PeerId,\n  'history_reload': PeerId,\n  //'history_request': void,\n  \n  'message_edit': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number, message: MyMessage},\n  'message_sent': {storageKey: MessagesStorageKey, tempId: number, tempMessage: any, mid: number, message: MyMessage},\n  'messages_views': {peerId: PeerId, mid: number, views: number}[],\n  'messages_reactions': {message: Message.message, changedResults: ReactionCount[]}[],\n  'messages_pending': void,\n  'messages_read': void,\n  'messages_downloaded': {peerId: PeerId, mids: number[]},\n  'messages_media_read': {peerId: PeerId, mids: number[]},\n\n  'replies_updated': Message.message,\n\n  'scheduled_new': {peerId: PeerId, mid: number},\n  'scheduled_delete': {peerId: PeerId, mids: number[]},\n\n  'album_edit': {peerId: PeerId, groupId: string, deletedMids: number[], messages: Message.message[]},\n\n  'stickers_installed': StickerSet.stickerSet,\n  'stickers_deleted': StickerSet.stickerSet,\n\n  'state_cleared': void,\n  'state_synchronized': ChatId | void,\n  'state_synchronizing': ChatId | void,\n  \n  'contacts_update': UserId,\n  'avatar_update': PeerId,\n  'poll_update': {poll: Poll, results: PollResults},\n  'invalidate_participants': ChatId,\n  //'channel_settings': {channelId: number},\n  'webpage_updated': {id: WebPage.webPage['id'], msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[]},\n\n  'connection_status_change': ConnectionStatusChange,\n  'settings_updated': {key: string, value: any, settings: State['settings']},\n  'draft_updated': {peerId: PeerId, threadId: number, draft: MyDraftMessage | undefined, force?: boolean},\n  \n  'background_change': void,\n  \n  'privacy_update': Update.updatePrivacy,\n  \n  'notify_settings': Update.updateNotifySettings,\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\n\n  'notification_reset': string,\n  'notification_cancel': string,\n  \n  'language_change': string,\n  \n  'theme_change': void,\n\n  'media_play': void,\n  \n  'emoji_recent': string,\n  \n  'download_progress': Progress,\n  'document_downloading': DocId,\n  'document_downloaded': DocId,\n\n  'choosing_sticker': boolean\n\n  'group_call_update': GroupCall,\n  'group_call_participant': {groupCallId: GroupCallId, participant: GroupCallParticipant},\n  // 'group_call_video_track_added': {instance: GroupCallInstance}\n\n  'call_update': PhoneCall,\n  'call_signaling': {callId: CallId, data: Uint8Array},\n\n  'quick_reaction': string,\n\n  'service_notification': Update.updateServiceNotification,\n\n  'logging_out': void\n};\n\nexport type BroadcastEventsListeners = {\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\n};\n\nexport class RootScope extends EventListenerBase<BroadcastEventsListeners> {\n  public myId: PeerId = NULL_PEER_ID;\n  private connectionStatus: {[name: string]: ConnectionStatusChange} = {};\n  public settings: State['settings'];\n  public managers: AppManagers;\n  public premium: boolean;\n\n  constructor() {\n    super();\n\n    this.premium = false;\n\n    this.addEventListener('user_auth', ({id}) => {\n      this.myId = id.toPeerId();\n    });\n\n    this.addEventListener('connection_status_change', (status) => {\n      this.connectionStatus[status.name] = status;\n    });\n\n    this.dispatchEvent = (e, ...args) => {\n      super.dispatchEvent(e, ...args);\n      MTProtoMessagePort.getInstance().invokeVoid('event', {name: e as string, args});\n    };\n\n    if(!IS_WORKER) {\n      this.addEventListener('settings_updated', ({settings}) => {\n        this.settings = settings;\n      });\n    }\n  }\n\n  public getConnectionStatus() {\n    return this.connectionStatus;\n  }\n  \n  public dispatchEventSingle(...args: any[]) {\n    // @ts-ignore\n    super.dispatchEvent(...args);\n  }\n}\n\nconst rootScope = new RootScope();\nMOUNT_CLASS_TO.rootScope = rootScope;\nexport default rootScope;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { State } from '../../config/state';\nimport rootScope from '../rootScope';\nimport stateStorage from '../stateStorage';\nimport setDeepProperty from '../../helpers/object/setDeepProperty';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\nexport class AppStateManager {\n  private state: State = {} as any;\n  private storage = stateStorage;\n\n  // ! for mtproto worker use only\n  public newVersion: string;\n  public oldVersion: string;\n  public userId: UserId;\n\n  public getState() {\n    return Promise.resolve(this.state);\n  }\n\n  public setByKey(key: string, value: any) {\n    setDeepProperty(this.state, key, value);\n    \n    const first = key.split('.')[0] as keyof State;\n    if(first === 'settings') {\n      rootScope.dispatchEvent('settings_updated', {key, value, settings: this.state.settings});\n    }\n    \n    this.pushToState(first, this.state[first]);\n  }\n\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true, onlyLocal?: boolean) {\n    if(direct) {\n      this.state[key] = value;\n    }\n\n    this.setKeyValueToStorage(key, value, onlyLocal);\n  }\n\n  public setKeyValueToStorage<T extends keyof State>(key: T, value: State[T] = this.state[key], onlyLocal?: boolean) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {name: 'state', key, value});\n    \n    this.storage.set({\n      [key]: value\n    }, onlyLocal);\n  }\n\n  /* public resetState() {\n    for(let i in this.state) {\n      // @ts-ignore\n      this.state[i] = false;\n    }\n    sessionStorage.set(this.state).then(() => {\n      location.reload();\n    });\n  } */\n}\n\nconst appStateManager = new AppStateManager();\nexport default appStateManager;\n","import getDeepProperty from \"./getDeepProperty\";\n\nexport default function setDeepProperty(object: any, key: string, value: any) {\n  const splitted = key.split('.');\n  getDeepProperty(object, splitted.slice(0, -1).join('.'))[splitted.pop()] = value;\n}\n","export default function getDeepProperty(object: any, key: string) {\n  const splitted = key.split('.');\n  let o: any = object;\n  splitted.forEach((key) => {\n    if(!key) {\n      return;\n    }\n    \n    // @ts-ignore\n    o = o[key];\n  });\n  \n  return o;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\r\nimport deferredPromise, { CancellablePromise } from \"../../helpers/cancellablePromise\";\r\nimport noop from \"../../helpers/noop\";\r\nimport { DcId } from \"../../types\";\r\n\r\nexport class NetworkStats {\r\n  public sent: number;\r\n  public received: number;\r\n  public awaitingChunks: Map<DcId, {length: number, deferred: CancellablePromise<void>}[]>;\r\n\r\n  constructor() {\r\n    this.sent = this.received = 0;\r\n    this.awaitingChunks = new Map();\r\n  }\r\n\r\n  public addSent(dcId: DcId, length: number) {\r\n    this.sent += length;\r\n  }\r\n\r\n  public addReceived(dcId: DcId, length: number) {\r\n    this.received += length;\r\n\r\n    const awaitingChunks = this.awaitingChunks.get(dcId);\r\n    const awaitingLength = awaitingChunks?.length;\r\n    if(awaitingLength) {\r\n      for(let i = 0; i < awaitingLength; ++i) {\r\n        const awaiting = awaitingChunks[i];\r\n        if(length >= awaiting.length) {\r\n          awaiting.deferred.resolve();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public waitForChunk(dcId: DcId, length: number) {\r\n    const deferred = deferredPromise<void>();\r\n    let awaitingChunks = this.awaitingChunks.get(dcId);\r\n    if(!awaitingChunks) {\r\n      this.awaitingChunks.set(dcId, awaitingChunks = []);\r\n    }\r\n\r\n    const awaiting = {length, deferred};\r\n    deferred.catch(noop).finally(() => {\r\n      indexOfAndSplice(awaitingChunks, awaiting);\r\n    });\r\n\r\n    awaitingChunks.push(awaiting);\r\n    return deferred;\r\n  }\r\n}\r\n\r\nconst networkStats = new NetworkStats();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.networkStats = networkStats);\r\nexport default networkStats;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport pause from '../../../helpers/schedulers/pause';\nimport { DcId } from '../../../types';\nimport { logger, LogTypes } from '../../logger';\nimport type MTPNetworker from '../networker';\nimport MTTransport from './transport';\nimport Modes from '../../../config/modes';\n\n                    \nimport transportController from './controller';\nimport networkStats from '../networkStats';\n          \n\nexport default class HTTP implements MTTransport {\n  public networker: MTPNetworker;\n  private log: ReturnType<typeof logger>;\n\n  private pending: Array<{\n    resolve: (body: Uint8Array) => void, \n    reject: any, \n    body: Uint8Array\n  }> = [];\n  private releasing: boolean;\n\n  public connected: boolean;\n  private destroyed: boolean;\n  private debug: boolean;\n  \n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\n    this.debug = Modes.debug && false;\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    \n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connected = false;\n  }\n\n  public _send(body: Uint8Array, mode?: RequestMode) {\n    const length = body.length;\n    this.debug && this.log.debug('-> body length to send:', length);\n\n    networkStats.addSent(this.dcId, length);\n    return fetch(this.url, {method: 'POST', body, mode}).then((response) => {\n      if(response.status !== 200 && !mode) {\n        response.arrayBuffer().then((buffer) => {\n          this.log.error('not 200', \n            new TextDecoder(\"utf-8\").decode(new Uint8Array(buffer)));\n        });\n\n        throw response;\n      }\n\n      this.setConnected(true);\n\n      // * test resending by dropping random request\n      // if(Math.random() > .5) {\n      //   throw 'asd';\n      // }\n\n      return response.arrayBuffer().then((buffer) => {\n        networkStats.addReceived(this.dcId, buffer.byteLength);\n        return new Uint8Array(buffer);\n      }); \n    }, (err) => {\n      this.setConnected(false);\n      throw err;\n    });\n  }\n\n  private setConnected(connected: boolean) {\n    if(this.connected === connected || this.destroyed) {\n      return;\n    }\n\n    this.connected = connected;\n\n                        \n    transportController.setTransportValue('https', connected);\n              \n  }\n\n  public destroy() {\n    this.setConnected(false);\n    this.destroyed = true;\n    this.pending.forEach((pending) => pending.reject());\n    this.pending.length = 0;\n  }\n\n  public send(body: Uint8Array) {\n    if(this.networker) {\n      return this._send(body);\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending() {\n    if(this.releasing) return;\n\n    this.releasing = true;\n    // this.log('-> messages to send:', this.pending.length);\n    for(let i = 0; i < this.pending.length; ++i) {\n      const pending = this.pending[i];\n      const {body, resolve} = pending;\n\n      try {\n        const result = await this._send(body);\n        resolve(result);\n        this.pending.splice(i, 1);\n      } catch(err) {\n        this.log.error('Send plain request error:', err);\n        await pause(5000);\n      }\n\n      --i;\n    }\n\n    this.releasing = false;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { logger, LogTypes } from '../../logger';\r\nimport Modes from '../../../config/modes';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport { MTConnection } from './transport';\r\n\r\n// let closeSocketBefore = Date.now() + 30e3;\r\n// let closeSocketAfter = Date.now() + 10e3;\r\n\r\nexport default class Socket extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private ws: WebSocket;\r\n  private log: ReturnType<typeof logger>;\r\n  private debug = Modes.debug && false;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n    this.connect();\r\n\r\n    return this;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.ws.removeEventListener('open', this.handleOpen);\r\n    this.ws.removeEventListener('close', this.handleClose);\r\n    this.ws.removeEventListener('error', this.handleError);\r\n    this.ws.removeEventListener('message', this.handleMessage);\r\n    this.ws = undefined;\r\n  }\r\n  \r\n  private connect() {\r\n    this.ws = new WebSocket(this.url, 'binary');\r\n    this.ws.binaryType = 'arraybuffer';\r\n    this.ws.addEventListener('open', this.handleOpen);\r\n    this.ws.addEventListener('close', this.handleClose);\r\n    this.ws.addEventListener('error', this.handleError);\r\n    this.ws.addEventListener('message', this.handleMessage);\r\n\r\n    // if(Date.now() < closeSocketBefore) {\r\n    // if(Date.now() >= closeSocketAfter) {\r\n    //   this.ws.close();\r\n    // }\r\n  }\r\n\r\n  public close() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.log('close execution');\r\n\r\n    try {\r\n      this.ws.close();\r\n    } catch(err) {\r\n\r\n    }\r\n    this.handleClose();\r\n  }\r\n  \r\n  private handleOpen = () => {\r\n    this.log('opened');\r\n\r\n    this.debug && this.log.debug('sending init packet');\r\n    this.dispatchEvent('open');\r\n  };\r\n\r\n  private handleError = (e: Event) => {\r\n    this.log.error('handleError', e);\r\n    this.close();\r\n  };\r\n\r\n  private handleClose = () => {\r\n    this.log('closed'/* , event, this.pending, this.ws.bufferedAmount */);\r\n\r\n    this.removeListeners();\r\n    this.dispatchEvent('close');\r\n  };\r\n\r\n  private handleMessage = (event: MessageEvent) => {\r\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\r\n\r\n    this.dispatchEvent('message', event.data as ArrayBuffer);\r\n  };\r\n\r\n  public send = (body: Uint8Array) => {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    this.ws.send(body);\r\n  };\r\n}\r\n","export default function randomize<T extends ArrayBufferView>(arr: T) {\n  if(crypto && 'getRandomValues' in crypto) {\n    crypto.getRandomValues(arr);\n  } else {\n    throw new Error('NO_SECURE_RANDOM');\n  }\n  \n  return arr;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n//import aesjs from 'aes-js';\r\nimport randomize from \"../../../helpers/array/randomize\";\r\nimport cryptoMessagePort from \"../../crypto/cryptoMessagePort\";\r\nimport { Codec } from \"./codec\";\r\n\r\n/* \r\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\r\n*/\r\nexport default class Obfuscation {\r\n  /* private enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\r\n  private dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\r\n\r\n  private id: number;\r\n  private idPromise: Promise<Obfuscation['id']>;\r\n  private process: (data: Uint8Array, operation: 'encrypt' | 'decrypt') => ReturnType<Obfuscation['_process']>;\r\n\r\n  // private cryptoEncKey: CryptoKey;\r\n  // private cryptoDecKey: CryptoKey;\r\n  // private cryptoKey: CryptoKey;\r\n\r\n  // private encIv: Uint8Array;\r\n  // private decIv: Uint8Array;\r\n\r\n  // private decIvCounter: Counter;\r\n\r\n  public async init(codec: Codec) {\r\n    if(this.idPromise !== undefined) {\r\n      this.release();\r\n    }\r\n\r\n    const initPayload = new Uint8Array(64);\r\n    randomize(initPayload);\r\n    \r\n    while(true) {\r\n      const val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | initPayload[0];\r\n      const val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | initPayload[4];\r\n      if(initPayload[0] !== 0xef &&\r\n          val !== 0x44414548 &&\r\n          val !== 0x54534f50 &&\r\n          val !== 0x20544547 &&\r\n          val !== 0x4954504f &&\r\n          val !== 0xeeeeeeee &&\r\n          val !== 0xdddddddd &&\r\n          val2 !== 0x00000000) {\r\n          //initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\r\n          break;\r\n      }\r\n      randomize(initPayload);\r\n    }\r\n\r\n    ////////////////////////initPayload.subarray(60, 62).hex = dcId;\r\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\r\n    console.log('initPayload', initPayload); */\r\n\r\n    const reversedPayload = initPayload.slice().reverse();\r\n\r\n    const encKey = initPayload.slice(8, 40);\r\n    const encIv = /* this.encIv =  */initPayload.slice(40, 56);\r\n    const decKey = reversedPayload.slice(8, 40);\r\n    const decIv = /* this.decIv =  */reversedPayload.slice(40, 56);\r\n\r\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\r\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\r\n    \r\n    // console.log('encKey', encKey.hex, encIv.hex);\r\n    // console.log('decKey', decKey.hex, decIv.hex);\r\n\r\n    const idPromise = this.idPromise = cryptoMessagePort.invokeCrypto('aes-ctr-prepare', {\r\n      encKey,\r\n      encIv,\r\n      decKey,\r\n      decIv\r\n    });\r\n\r\n    this.process = async(data, operation) => {\r\n      await idPromise;\r\n      return this._process(data, operation);\r\n    };\r\n\r\n    this.id = await idPromise;\r\n    \r\n    this.process = this._process;\r\n    \r\n    // this.decIvCounter = new Counter(this.decIv);\r\n    /* const key = this.cryptoEncKey = await subtle.importKey(\r\n      'raw',\r\n      encKey,\r\n      {name: 'AES-CTR'},\r\n      false,\r\n      ['encrypt']\r\n    ); */\r\n\r\n    // this.cryptoDecKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   decKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt']\r\n    // );\r\n\r\n    // this.cryptoKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   encKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt', 'decrypt']\r\n    // );\r\n\r\n    initPayload.set(codec.obfuscateTag, 56);\r\n    const encrypted = await this.encode(initPayload.slice());\r\n\r\n    //console.log('encrypted', encrypted);\r\n\r\n    initPayload.set(encrypted.slice(56, 64), 56);\r\n\r\n    return initPayload;\r\n  }\r\n\r\n  /* public encode(payload: Uint8Array) {\r\n    let startTime = performance.now();\r\n    let res = this.enc.encrypt(payload);\r\n    let time = performance.now() - startTime;\r\n\r\n    try {\r\n      startTime = performance.now();\r\n      let arr = this.encNew.encrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      let time2 = performance.now() - startTime;\r\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n    \r\n    return res;\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    let res = this.dec.encrypt(payload);\r\n\r\n    try {\r\n      let arr = this.decNew.decrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n    \r\n    return res;\r\n  } */\r\n\r\n  private _process = (data: Uint8Array, operation: 'encrypt' | 'decrypt') => {\r\n    return cryptoMessagePort.invoke('invoke', {\r\n      method: 'aes-ctr-process',\r\n      args: [{id: this.id, data, operation}],\r\n    }, undefined, undefined, [data.buffer]) as Promise<Uint8Array>;\r\n  };\r\n\r\n  public encode(payload: Uint8Array) {\r\n    /* return subtle.encrypt({\r\n        name: 'AES-CTR',\r\n        counter: this.encIv,\r\n        length: 64\r\n      },\r\n      this.cryptoEncKey,\r\n      payload\r\n    ); */\r\n    return this.process(payload, 'encrypt');\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    return this.process(payload, 'decrypt');\r\n  }\r\n\r\n  public async release() {\r\n    const idPromise = this.idPromise;\r\n    if(idPromise === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.id = undefined;\r\n    this.idPromise = undefined;\r\n\r\n    const id = await idPromise;\r\n    cryptoMessagePort.invokeCrypto('aes-ctr-destroy', id);\r\n  }\r\n\r\n  public destroy() {\r\n    this.release();\r\n  }\r\n\r\n  // public encode(payload: Uint8Array) {\r\n  //   let res = this.encNew.encrypt(payload);\r\n  //   let bytes = new Uint8Array(bytesFromWordss(res));\r\n    \r\n  //   return bytes;\r\n  // }\r\n\r\n  // public async decode(payload: Uint8Array) {\r\n  //   const counter = this.decIvCounter.counter.slice();\r\n  //   this.decIvCounter.increment();\r\n\r\n  //   const n: ArrayBuffer = await subtle.encrypt({\r\n  //       name: 'AES-CTR',\r\n  //       counter: counter,\r\n  //       length: 64\r\n  //     },\r\n  //     this.cryptoDecKey,\r\n  //     payload\r\n  //   );\r\n\r\n  //   const decoded = this.decNew.update(payload);\r\n    \r\n  //   console.log('decode', bytesToHex(decoded), 'new', n, bytesToHex(new Uint8Array(n)));\r\n\r\n  //   return decoded;\r\n  // }\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n//import { bytesFromHex, addPadding } from \"../../bin_utils\";\r\nimport { Codec } from \"./codec\";\r\n\r\nclass AbridgedPacketCodec implements Codec {\r\n  public tag = 0xef;\r\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\r\n\r\n  public encodePacket(data: Uint8Array) {\r\n    const len = data.byteLength >> 2;\r\n    let header: Uint8Array;\r\n    if(len < 127) {\r\n      header = new Uint8Array([len]);\r\n    } else { // Length: payload length, divided by four, and encoded as 3 length bytes (little endian)\r\n      //header = new Uint8Array([0x7f, ...addPadding(bytesFromHex(len.toString(16)).reverse(), 3, true)/* .reverse() */]);\r\n      header = new Uint8Array([0x7f, len & 0xFF, (len >> 8) & 0xFF, (len >> 16) & 0xFF]);\r\n      //console.log('got nobody cause im braindead', header, len);\r\n    }\r\n    \r\n    return header.concat(data);\r\n    //return new Uint8Array([...header, ...data]);\r\n  }\r\n\r\n  public readPacket(data: Uint8Array) {\r\n    let length = data[0];\r\n    if(length >= 127) { // 0x7f\r\n      length = data[1] | (data[2] << 8) | (data[3] << 16);\r\n\r\n      return data.slice(4, length << 2 + 1); // need +1\r\n    }\r\n    \r\n    return data.slice(1, length << 2 + 1); // need +1\r\n  }\r\n}\r\n\r\nexport default new AbridgedPacketCodec();\r\n","export default function bytesToHex(bytes: ArrayLike<number>) {\n  const length = bytes.length;\n  const arr: string[] = new Array(length);\n  for(let i = 0; i < length; ++i) {\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\n  }\n  return arr.join('');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from \"../../../config/modes\";\nimport { logger, LogTypes } from \"../../logger\";\nimport MTPNetworker from \"../networker\";\nimport Obfuscation from \"./obfuscation\";\nimport MTTransport, { MTConnection, MTConnectionConstructable } from \"./transport\";\n// import intermediatePacketCodec from './intermediate';\nimport abridgedPacketCodec from './abridged';\n// import paddedIntermediatePacketCodec from './padded';\nimport { ConnectionStatus } from \"../connectionStatus\";\n\n                    \nimport transportController from \"./controller\";\nimport bytesToHex from \"../../../helpers/bytes/bytesToHex\";\nimport networkStats from \"../networkStats\";\nimport ctx from \"../../../environment/ctx\";\n          \n\nexport default class TcpObfuscated implements MTTransport {\n  private codec = abridgedPacketCodec;\n  private obfuscation = new Obfuscation();\n  public networker: MTPNetworker;\n\n  private pending: Array<Partial<{\n    resolve: any, \n    reject: any, \n    body: Uint8Array, \n    encoded?: Uint8Array,\n    bodySent: boolean\n  }>> = [];\n\n  private debug = Modes.debug && false/* true */;\n  private log: ReturnType<typeof logger>;\n  public connected = false;\n  private lastCloseTime: number;\n  public connection: MTConnection;\n\n  private autoReconnect = true;\n  private reconnectTimeout: number;\n  private releasingPending: boolean;\n\n  //private debugPayloads: MTPNetworker['debugRequests'] = [];\n\n  constructor(\n    private Connection: MTConnectionConstructable, \n    private dcId: number, \n    private url: string, \n    private logSuffix: string, \n    private retryTimeout: number\n  ) {\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connect();\n  }\n\n  private onOpen = async() => {\n    this.connected = true;\n\n                        \n    transportController.setTransportOpened('websocket');\n              \n\n    const initPayload = await this.obfuscation.init(this.codec);\n    if(!this.connected) {\n      return;\n    }\n\n    this.connection.send(initPayload);\n\n    if(this.networker) {\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\n      this.networker.setConnectionStatus(ConnectionStatus.Connected);\n      this.networker.cleanupSent();\n      this.networker.resend();\n    }/*  else {\n      for(const pending of this.pending) {\n        if(pending.encoded && pending.body) {\n          pending.encoded = this.encodeBody(pending.body);\n        }\n      }\n    } */\n\n    setTimeout(() => {\n      this.releasePending();\n    }, 0);\n  };\n\n  private onMessage = async(buffer: ArrayBuffer) => {\n    networkStats.addReceived(this.dcId, buffer.byteLength);\n\n    let data = await this.obfuscation.decode(new Uint8Array(buffer));\n    data = this.codec.readPacket(data);\n\n    if(this.networker) { // authenticated!\n      //this.pending = this.pending.filter((p) => p.body); // clear pending\n\n      this.debug && this.log.debug('redirecting to networker', data.length);\n      this.networker.parseResponse(data).then((response) => {\n        this.debug && this.log.debug('redirecting to networker response:', response);\n\n        try {\n          this.networker.processMessage(response.response, response.messageId, response.sessionId);\n        } catch(err) {\n          this.log.error('handleMessage networker processMessage error', err);\n        }\n\n        //this.releasePending();\n      }).catch((err) => {\n        this.log.error('handleMessage networker parseResponse error', err);\n      });\n\n      //this.dd();\n      return;\n    }\n\n    //console.log('got hex:', data.hex);\n    const pending = this.pending.shift();\n    if(!pending) {\n      this.debug && this.log.debug('no pending for res:', bytesToHex(data));\n      return;\n    }\n\n    pending.resolve(data);\n  };\n\n  private onClose = () => {\n    this.clear();\n    \n    let needTimeout: number, retryAt: number;\n    if(this.autoReconnect) {\n      const time = Date.now();\n      const diff = time - this.lastCloseTime;\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\n      retryAt = time + needTimeout;\n    }\n    \n    if(this.networker) {\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\n      this.pending.length = 0;\n    }\n\n    if(this.autoReconnect) {\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\n      this.reconnectTimeout = ctx.setTimeout(this.reconnect, needTimeout);\n    } else {\n      this.log('reconnect isn\\'t needed');\n    }\n  };\n\n  public clear() {\n                        \n    if(this.connected) {\n      transportController.setTransportClosed('websocket');\n    }\n              \n\n    this.connected = false;\n\n    if(this.connection) {\n      this.connection.removeEventListener('open', this.onOpen);\n      this.connection.removeEventListener('close', this.onClose);\n      this.connection.removeEventListener('message', this.onMessage);\n      this.connection = undefined;\n    }\n  }\n\n  /**\n   * invoke only when closed\n   */\n  public reconnect = () => {\n    if(this.reconnectTimeout !== undefined) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = undefined;\n    }\n\n    if(this.connection) {\n      return;\n    }\n\n    this.log('trying to reconnect...');\n    this.lastCloseTime = Date.now();\n    \n    if(!this.networker) {\n      for(const pending of this.pending) {\n        if(pending.bodySent) {\n          pending.bodySent = false;\n        }\n      }\n    } else {\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.connect();\n  }\n\n  public forceReconnect() {\n    this.close();\n    this.reconnect();\n  }\n\n  public destroy() {\n    this.setAutoReconnect(false);\n    this.close();\n\n    if(this.obfuscation) {\n      this.obfuscation.destroy();\n    }\n\n    this.pending.forEach((pending) => {\n      if(pending.reject) {\n        pending.reject();\n      }\n    });\n    this.pending.length = 0;\n  }\n\n  public close() {\n    const connection = this.connection;\n    if(connection) {\n      const connected = this.connected;\n      this.clear();\n      if(connected) { // wait for buffered messages if they are there\n        connection.addEventListener('message', this.onMessage);\n        connection.addEventListener('close', () => {\n          connection.removeEventListener('message', this.onMessage);\n        }, {once: true});\n        connection.close();\n      }\n    }\n  }\n\n  /**\n   * Will connect if enable and disconnected \\\n   * Will reset reconnection timeout if disable\n   */\n  public setAutoReconnect(enable: boolean) {\n    this.autoReconnect = enable;\n\n    if(!enable) {\n      if(this.reconnectTimeout !== undefined) {\n        clearTimeout(this.reconnectTimeout);\n        this.reconnectTimeout = undefined;\n      }\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\n      this.reconnect();\n    }\n  }\n\n  private connect() {\n    if(this.connection) {\n      this.close();\n    }\n\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\n    this.connection.addEventListener('open', this.onOpen);\n    this.connection.addEventListener('close', this.onClose);\n    this.connection.addEventListener('message', this.onMessage);\n  }\n\n  private encodeBody(body: Uint8Array) {\n    const toEncode = this.codec.encodePacket(body);\n\n    //this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\n    const encoded = this.obfuscation.encode(toEncode);\n    //this.log('send after obf:', enc.hex);\n\n    return encoded;\n  }\n\n  public send(body: Uint8Array) {\n    this.debug && this.log.debug('-> body length to pending:', body.length);\n\n    const encoded: typeof body = /* this.connected ? this.encodeBody(body) :  */undefined;\n\n    //return;\n\n    if(this.networker) {\n      this.pending.push({body, encoded});\n      this.releasePending();\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body, encoded});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending(/* tt = false */) {\n    if(!this.connected || this.releasingPending) {\n      //this.connect();\n      return;\n    }\n\n    this.releasingPending = true;\n\n    /* if(!tt) {\n      this.releasePendingDebounced();\n      return;\n    } */\n\n    //this.log('-> messages to send:', this.pending.length);\n    let length = this.pending.length;\n    let sent = false;\n    //for(let i = length - 1; i >= 0; --i) {\n    for(let i = 0; i < length; ++i) {\n      const pending = this.pending[i];\n      if(!pending) {\n        break;\n      }\n      \n      const {body, bodySent} = pending;\n      if(body && !bodySent) {\n\n        //this.debugPayloads.push({before: body.slice(), after: enc});\n\n        this.debug && this.log.debug('-> body length to send:', body.length);\n\n        // if(!encoded) {\n        //   encoded = pending.encoded = this.encodeBody(body);\n        // }\n\n        const encoded = pending.encoded ??= await this.encodeBody(body);\n        if(!this.connected) {\n          break;\n        }\n\n        networkStats.addSent(this.dcId, encoded.byteLength);\n        this.connection.send(encoded);\n        \n        if(!pending.resolve) { // remove if no response needed\n          this.pending.splice(i--, 1);\n          length--;\n        } else {\n          pending.bodySent = true;\n        }\n\n        sent = true;\n        //delete pending.body;\n      }\n    }\n\n    this.releasingPending = undefined;\n\n    if(this.pending.length && sent) {\n      this.releasePending();\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { notifyAll } from \"../../../helpers/context\";\nimport EventListenerBase from \"../../../helpers/eventListenerBase\";\nimport { WorkerTaskVoidTemplate } from \"../../../types\";\nimport { MTConnection } from \"./transport\";\n\nlet socketId = 0;\nexport interface SocketProxyTask extends WorkerTaskVoidTemplate {\n  type: 'socketProxy',\n  payload: SocketProxySetupTask | SocketProxySendTask | SocketProxyCloseTask\n};\n\nexport interface SocketProxySetupTask extends WorkerTaskVoidTemplate {\n  type: 'setup',\n  payload: {\n    dcId: number,\n    url: string,\n    logSuffix: string\n  },\n  id: number\n};\n\nexport interface SocketProxySendTask extends WorkerTaskVoidTemplate {\n  type: 'send',\n  payload: Uint8Array,\n  id: number\n};\n\nexport interface SocketProxyCloseTask extends WorkerTaskVoidTemplate {\n  type: 'close',\n  id: number\n};\n\n                   \nexport default class SocketProxied extends EventListenerBase<{\n  open: () => void,\n  message: (buffer: ArrayBuffer) => any,\n  close: () => void,\n}> implements MTConnection {\n  private id: number;\n\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\n    super();\n    this.id = ++socketId;\n    socketsProxied.set(this.id, this);\n\n    const task: SocketProxyTask = {\n      type: 'socketProxy',\n      payload: {\n        type: 'setup', \n        payload: {\n          dcId, \n          url,\n          logSuffix\n        },\n        id: this.id\n      }\n    };\n\n    notifyAll(task);\n  }\n\n  public send(payload: Uint8Array) {\n    const task: SocketProxyTask = {\n      type: 'socketProxy', \n      payload: {\n        type: 'send',\n        payload,\n        id: this.id\n      }\n    };\n\n    notifyAll(task);\n  }\n\n  public close() {\n    const task: SocketProxyTask = {\n      type: 'socketProxy',\n      payload: {\n        type: 'close',\n        id: this.id\n      }\n    };\n\n    notifyAll(task);\n  }\n}\nexport const socketsProxied: Map<number, SocketProxied> = new Map();\n\n          \n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport MTTransport, { MTConnectionConstructable } from './transports/transport';\nimport Modes from '../../config/modes';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\n\n                        \nimport HTTP from './transports/http';\n          \n\n                      \nimport Socket from './transports/websocket';\nimport TcpObfuscated from './transports/tcpObfuscated';\nimport { IS_WEB_WORKER } from '../../helpers/context';\nimport { DcId } from '../../types';\nimport { getEnvironment } from '../../environment/utils';\n\n                   \nimport SocketProxied from './transports/socketProxied';\n          \n\n          \n\nexport type TransportType = 'websocket' | 'https' | 'http';\nexport type ConnectionType = 'client' | 'download' | 'upload';\ntype Servers = {\n  [transportType in TransportType]: {\n    [connectionType in ConnectionType]: {\n      [dcId: DcId]: MTTransport[]\n    }\n  }\n};\n\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\nconst PREMIUM_SUFFIX = '_premium';\n\nexport class DcConfigurator {\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\n\n  private dcOptions = Modes.test\n    ? [\n      {id: 1, host: '149.154.175.10',  port: 80},\n      {id: 2, host: '149.154.167.40',  port: 80},\n      {id: 3, host: '149.154.175.117', port: 80}\n    ]\n    : [\n      {id: 1, host: '149.154.175.50',  port: 80},\n      {id: 2, host: '149.154.167.50',  port: 80},\n      {id: 3, host: '149.154.175.100', port: 80},\n      {id: 4, host: '149.154.167.91',  port: 80},\n      {id: 5, host: '149.154.171.5',   port: 80}\n    ];\n\n  public chosenServers: Servers = {} as any;\n\n                        \n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, suffix: string, premium?: boolean) => {\n    const path = connectionType !== 'client' ? 'apiws' + (premium ? PREMIUM_SUFFIX : '') : ('apiws' + TEST_SUFFIX);\n    const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n\n    const retryTimeout = connectionType === 'client' ? 10000 : 10000;\n\n    let oooohLetMeLive: MTConnectionConstructable;\n                      \n                            \n             \n    oooohLetMeLive = (getEnvironment().IS_SAFARI && IS_WEB_WORKER && typeof(SocketProxied) !== 'undefined') /* || true */ ? SocketProxied : Socket;\n              \n\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\n  };\n            \n\n                          \n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, suffix: string, premium?: boolean) => {\n    let chosenServer: string;\n    if(Modes.ssl || !Modes.http) {\n      const subdomain = this.sslSubdomains[dcId - 1] + (connectionType !== 'client' ? '-1' : '');\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\n      chosenServer = 'https://' + subdomain + '.web.telegram.org/' + path;\n    } else {\n      for(let dcOption of this.dcOptions) {\n        if(dcOption.id === dcId) {\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\n          break;\n        }\n      }\n    }\n\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n    return new HTTP(dcId, chosenServer, logSuffix);\n  };\n            \n\n  public chooseServer(\n    dcId: DcId, \n    connectionType: ConnectionType = 'client', \n    transportType: TransportType = Modes.transport, \n    reuse = true,\n    premium?: boolean\n  ) {\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\n      connectionType = 'client';\n    } */\n\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\n      this.chosenServers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const servers = this.chosenServers[transportType][connectionType];\n\n    if(!(dcId in servers)) {\n      servers[dcId] = [];\n    }\n\n    const transports = servers[dcId];\n\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\n      let transport: MTTransport;\n\n      const suffix = connectionType === 'client' ? '' : '-1';\n\n                                                \n      transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, suffix, premium);\n                             \n                                                                              \n               \n                                                                            \n                \n  \n      if(!transport) {\n        console.error('No chosenServer!', dcId);\n        return null;\n      }\n      \n      if(reuse) {\n        transports.push(transport);\n      }\n      \n      return transport;\n    }\n  \n    return transports[0];\n  }\n  \n  public static removeTransport<T>(obj: any, transport: T) {\n    for(const transportType in obj) {\n      // @ts-ignore\n      for(const connectionType in obj[transportType]) {\n        // @ts-ignore\n        for(const dcId in obj[transportType][connectionType]) {\n          // @ts-ignore\n          const transports: T[] = obj[transportType][connectionType][dcId];\n          indexOfAndSplice(transports, transport);\n        }\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from \"../../../config/app\";\nimport deferredPromise from \"../../../helpers/cancellablePromise\";\nimport EventListenerBase from \"../../../helpers/eventListenerBase\";\nimport pause from \"../../../helpers/schedulers/pause\";\nimport { TransportType, DcConfigurator } from \"../dcConfigurator\";\nimport type HTTP from \"./http\";\nimport type TcpObfuscated from \"./tcpObfuscated\";\nimport MTTransport from \"./transport\";\n\nexport class MTTransportController extends EventListenerBase<{\n  change: (opened: MTTransportController['opened']) => void,\n  transport: (type: TransportType) => void\n}> {\n  private opened: Map<TransportType, number>;\n  private transports: {[k in TransportType]?: MTTransport};\n  private pinging: boolean;\n  private dcConfigurator: DcConfigurator;\n\n  constructor() {\n    super(true);\n\n    this.opened = new Map();\n    /* this.addEventListener('change', (opened) => {\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\n    }); */\n\n    this.addEventListener('change', (opened) => {\n      if(!opened.get('websocket')) {\n        this.waitForWebSocket();\n      }\n    });\n\n    // setTimeout(() => {\n      // this.waitForWebSocket();\n    // }, 200); // wait for first transport so won't have delay for first WS\n  }\n\n  public async pingTransports() {\n    const dcConfigurator = this.dcConfigurator ??= new DcConfigurator();\n    const timeout = 2000;\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\n    };\n\n    const httpPromise = deferredPromise<boolean>();\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\n    setTimeout(() => httpPromise.resolve(false), timeout);\n\n    const websocketPromise = deferredPromise<boolean>();\n    const socket = transports.websocket as TcpObfuscated;\n    socket.setAutoReconnect(false);\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\n    setTimeout(() => {\n      if(websocketPromise.isFulfilled || websocketPromise.isRejected) {\n        return;\n      }\n\n      if(socket.connection) {\n        socket.connection.close();\n      }\n      \n      websocketPromise.resolve(false);\n    }, timeout);\n\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\n\n    for(const transportType in transports) {\n      const transport = transports[transportType as TransportType];\n      transport.destroy();\n    }\n\n    const result = {\n      https: isHttpAvailable || this.opened.get('https') > 0,\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\n    };\n\n    // result.websocket = false;\n    return result;\n  }\n\n  public async waitForWebSocket() {\n    if(this.pinging) return;\n    this.pinging = true;\n\n    while(true) {\n      const {https, websocket} = await this.pingTransports();\n      if(https || websocket) {\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\n      }\n\n      if(websocket) {\n        break;\n      }\n\n      await pause(10000);\n    }\n\n    this.pinging = false;\n  }\n\n  public setTransportValue(type: TransportType, value: boolean) {\n    let length = this.opened.get(type) || 0;\n    length += value ? 1 : -1;\n    \n    this.opened.set(type, length);\n    this.dispatchEvent('change', this.opened);\n  }\n\n  public setTransportOpened(type: TransportType) {\n    return this.setTransportValue(type, true);\n  }\n\n  public setTransportClosed(type: TransportType) {\n    return this.setTransportValue(type, false);\n  }\n}\n\nconst transportController = new MTTransportController();\nexport default transportController;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport deferredPromise, { CancellablePromise } from \"../../../../helpers/cancellablePromise\";\r\nimport type { StoragesResults } from \"./loadStorages\";\r\n\r\nconst RESET_STORAGES_PROMISE: CancellablePromise<Set<keyof StoragesResults>> = deferredPromise();\r\nexport default RESET_STORAGES_PROMISE;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { CryptoMessagePort } from \"../crypto/cryptoMessagePort\";\nimport type { ApiFileManager } from \"../mtproto/apiFileManager\";\nimport type { ApiManager } from \"../mtproto/apiManager\";\nimport type { Authorizer } from \"../mtproto/authorizer\";\nimport type { DcConfigurator } from \"../mtproto/dcConfigurator\";\nimport type { NetworkerFactory } from \"../mtproto/networkerFactory\";\nimport type { PasswordManager } from \"../mtproto/passwordManager\";\nimport type { ReferenceDatabase } from \"../mtproto/referenceDatabase\";\nimport type { TimeManager } from \"../mtproto/timeManager\";\nimport type { RootScope } from \"../rootScope\";\nimport type DialogsStorage from \"../storages/dialogs\";\nimport type FiltersStorage from \"../storages/filters\";\nimport type PeersStorage from \"../storages/peers\";\nimport type ThumbsStorage from \"../storages/thumbs\";\nimport type { ApiUpdatesManager } from \"./apiUpdatesManager\";\nimport type { AppAvatarsManager } from \"./appAvatarsManager\";\nimport type { AppCallsManager } from \"./appCallsManager\";\nimport type { AppChatsManager } from \"./appChatsManager\";\nimport type { AppDocsManager } from \"./appDocsManager\";\nimport type { AppDraftsManager } from \"./appDraftsManager\";\nimport type { AppEmojiManager } from \"./appEmojiManager\";\nimport type { AppGroupCallsManager } from \"./appGroupCallsManager\";\nimport type { AppInlineBotsManager } from \"./appInlineBotsManager\";\nimport type { AppMessagesIdsManager } from \"./appMessagesIdsManager\";\nimport type { AppMessagesManager } from \"./appMessagesManager\";\nimport type { AppNotificationsManager } from \"./appNotificationsManager\";\nimport type { AppPeersManager } from \"./appPeersManager\";\nimport type { AppPhotosManager } from \"./appPhotosManager\";\nimport type { AppPollsManager } from \"./appPollsManager\";\nimport type { AppPrivacyManager } from \"./appPrivacyManager\";\nimport type { AppProfileManager } from \"./appProfileManager\";\nimport type { AppReactionsManager } from \"./appReactionsManager\";\nimport type { AppStateManager } from \"./appStateManager\";\nimport type { AppStickersManager } from \"./appStickersManager\";\nimport type { AppStoragesManager } from \"./appStoragesManager\";\nimport type { AppUsersManager } from \"./appUsersManager\";\nimport type { AppWebPagesManager } from \"./appWebPagesManager\";\nimport type { AppManagers } from \"./managers\";\n\nexport class AppManager {\n  protected appPeersManager: AppPeersManager;\n  protected appChatsManager: AppChatsManager;\n  protected appDocsManager: AppDocsManager;\n  protected appPhotosManager: AppPhotosManager;\n  protected appPollsManager: AppPollsManager;\n  protected appUsersManager: AppUsersManager;\n  protected appWebPagesManager: AppWebPagesManager;\n  protected appDraftsManager: AppDraftsManager;\n  protected appProfileManager: AppProfileManager;\n  protected appNotificationsManager: AppNotificationsManager;\n  protected apiUpdatesManager: ApiUpdatesManager;\n  protected appAvatarsManager: AppAvatarsManager;\n  protected appGroupCallsManager: AppGroupCallsManager;\n  protected appCallsManager: AppCallsManager;\n  protected appReactionsManager: AppReactionsManager;\n  protected appMessagesManager: AppMessagesManager;\n  protected appMessagesIdsManager: AppMessagesIdsManager;\n  protected appPrivacyManager: AppPrivacyManager;\n  protected appInlineBotsManager: AppInlineBotsManager;\n  protected appStickersManager: AppStickersManager;\n  protected referenceDatabase: ReferenceDatabase;\n  protected appEmojiManager: AppEmojiManager;\n  protected dialogsStorage: DialogsStorage;\n  protected filtersStorage: FiltersStorage;\n  protected apiManager: ApiManager;\n  // protected apiManager: ApiManagerProxy;\n  protected passwordManager: PasswordManager;\n  protected cryptoWorker: CryptoMessagePort;\n  protected apiFileManager: ApiFileManager;\n  protected peersStorage: PeersStorage;\n  protected thumbsStorage: ThumbsStorage;\n  protected networkerFactory: NetworkerFactory;\n  protected rootScope: RootScope;\n  protected authorizer: Authorizer;\n  protected dcConfigurator: DcConfigurator;\n  protected timeManager: TimeManager;\n  protected appStoragesManager: AppStoragesManager;\n  protected appStateManager: AppStateManager;\n\n  public clear: (init?: boolean) => void;\n  \n  public setManagers(managers: AppManagers) {\n    Object.assign(this, managers);\n    // this.after();\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type{ Chat } from \"../../../../layer\";\r\nimport type{ Dialog } from \"../../appMessagesManager\";\r\nimport type{ User } from \"../../appUsersManager\";\r\nimport type { StoragesStorages } from \"./createStorages\";\r\nimport { recordPromiseBound } from \"../../../../helpers/recordPromise\";\r\nimport { Awaited } from \"../../../../types\";\r\nimport { logger } from \"../../../logger\";\r\nimport RESET_STORAGES_PROMISE from \"./resetStoragesPromise\";\r\n\r\nexport type StoragesResults = Awaited<ReturnType<typeof loadStoragesInner>>;\r\n\r\nasync function loadStoragesInner(storages: StoragesStorages) {\r\n  const recordPromise = recordPromiseBound(logger('STORAGES-LOADER'));\r\n  const storagesKeys = Object.keys(storages) as Array<keyof StoragesStorages>;\r\n  const storagesPromises: Promise<any>[] = storagesKeys.map((key) => {\r\n    const promise = storages[key].getAll();\r\n    return recordPromise(promise, 'storage ' + (key as any as string));\r\n  });\r\n  \r\n  const storagesResults: {\r\n    users: User[],\r\n    chats: Chat[],\r\n    dialogs: Dialog[]\r\n  } = {} as any;\r\n  const arr = await Promise.all(storagesPromises);\r\n  for(let i = 0, length = storagesKeys.length; i < length; ++i) {\r\n    storagesResults[storagesKeys[i]] = arr[i] as any;\r\n  }\r\n\r\n  arr.splice(0, storagesKeys.length);\r\n\r\n  const resetStorages = await RESET_STORAGES_PROMISE;\r\n  if(resetStorages.size) {\r\n    for(const key of resetStorages) {\r\n      storagesResults[key].length = 0;\r\n    }\r\n\r\n    resetStorages.clear();\r\n  }\r\n\r\n  return storagesResults;\r\n}\r\n\r\nlet promise: ReturnType<typeof loadStoragesInner>;\r\nexport default function loadStorages(storages: StoragesStorages) {\r\n  return promise ??= loadStoragesInner(storages);\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { logger } from \"../logger\";\nimport { AppManager } from \"./manager\";\nimport createStorages from \"./utils/storages/createStorages\";\nimport loadStorages from \"./utils/storages/loadStorages\";\n\nexport class AppStoragesManager extends AppManager {\n  private storages: ReturnType<typeof createStorages>;\n\n  // private loadPromise: CancellablePromise<StoragesResults>;\n\n  private log: ReturnType<typeof logger>;\n\n  constructor() {\n    super();\n\n    this.log = logger('STORAGES');\n    this.storages = createStorages();\n    // this.loadPromise = deferredPromise();\n  }\n\n  public loadStorages() {\n    return loadStorages(this.storages);\n    // loadStorages(this.storages).then((storagesResults) => {\n      // this.loadPromise.resolve(storagesResults);\n    // });\n\n    // return this.loadPromise;\n  }\n\n  // public setStoragesResults(storagesResults: StoragesResults) {\n  //   this.loadPromise.resolve(storagesResults);\n  // }\n\n  public async loadStorage<T extends keyof AppStoragesManager['storages']>(name: T) {\n    return this.loadStorages().then((storagesResults) => {\n      return {\n        storage: this.storages[name],\n        results: storagesResults[name]\n      };\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { Chat } from \"../../../../layer\";\r\nimport type { Dialog } from \"../../appMessagesManager\";\r\nimport type { User } from \"../../appUsersManager\";\r\nimport DATABASE_STATE from \"../../../../config/databases/state\";\r\nimport AppStorage from \"../../../storage\";\r\n\r\nexport type StoragesStorages = {\r\n  users: AppStorage<Record<UserId, User>, typeof DATABASE_STATE>,\r\n  chats: AppStorage<Record<ChatId, Chat>, typeof DATABASE_STATE>,\r\n  dialogs: AppStorage<Record<PeerId, Dialog>, typeof DATABASE_STATE>\r\n};\r\n\r\nexport default function createStorages() {\r\n  const names: (keyof StoragesStorages)[] = ['users', 'chats', 'dialogs'];\r\n  const storages: StoragesStorages = {} as any;\r\n  for(const name of names) {\r\n    // @ts-ignore\r\n    storages[name] = new AppStorage(DATABASE_STATE, name);\r\n  }\r\n\r\n  return storages;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport randomize from '../../helpers/array/randomize';\r\nimport { AppManager } from '../appManagers/manager';\r\n\r\nexport class PasswordManager extends AppManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return this.apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then((state) => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      randomize(salt1);\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return this.apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return this.cryptoWorker.invokeCrypto('computeSRP', password, state, false).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return this.apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then((auth) => {\r\n        if(auth._ === 'auth.authorization') {\r\n          this.apiManager.setUser(auth.user);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return this.apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Photo } from \"../../layer\";\nimport { logger } from \"../logger\";\nimport bytesToHex from \"../../helpers/bytes/bytesToHex\";\nimport deepEqual from \"../../helpers/object/deepEqual\";\nimport { AppManager } from \"../appManagers/manager\";\n\nexport type ReferenceContext = ReferenceContext.referenceContextProfilePhoto | ReferenceContext.referenceContextMessage | ReferenceContext.referenceContextEmojiesSounds | ReferenceContext.referenceContextReactions;\nexport namespace ReferenceContext {\n  export type referenceContextProfilePhoto = {\n    type: 'profilePhoto',\n    peerId: PeerId\n  };\n\n  export type referenceContextMessage = {\n    type: 'message',\n    peerId: PeerId,\n    messageId: number\n  };\n\n  export type referenceContextEmojiesSounds = {\n    type: 'emojiesSounds'\n  };\n\n  export type referenceContextReactions = {\n    type: 'reactions'\n  };\n}\n\nexport type ReferenceBytes = Photo.photo['file_reference'];\nexport type ReferenceContexts = Set<ReferenceContext>;\n\n//type ReferenceBytes = Uint8Array;\n\nexport class ReferenceDatabase extends AppManager {\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\n  //private references: Map<ReferenceBytes, number[]> = new Map();\n  private links: {[hex: string]: ReferenceBytes} = {};\n  private log = logger('RD', undefined, true);\n  private refreshEmojiesSoundsPromise: Promise<any>;\n\n  // constructor() {\n  //   super();\n\n    // apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\n    //   const originalPayload = task.payload;\n\n    //   assumeType<RefreshReferenceTaskResponse>(task);\n    //   task.originalPayload = originalPayload;\n\n    //   this.refreshReference(originalPayload).then((bytes) => {\n    //     task.payload = bytes;\n    //   }, (err) => {\n    //     task.error = err;\n    //   }).then(() => apiManager.postMessage(task));\n    // });\n  // }\n\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(!contexts) {\n      contexts = new Set();\n      this.contexts.set(reference, contexts);\n    }\n    \n    this.links[bytesToHex(reference)] = reference;\n    for(const _context of contexts) {\n      if(deepEqual(_context, context)) {\n        return;\n      }\n    }\n\n    contexts.add(context);\n  }\n\n  public getReferenceByLink(reference: ReferenceBytes) {\n    return this.links[bytesToHex(reference)];\n  }\n\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\n    return [contexts, reference];\n  }\n\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\n    const contexts = this.getContexts(reference);\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\n  }\n\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(contexts) {\n      for(const _context of contexts) {\n        if(deepEqual(_context, context)) {\n          contexts.delete(_context);\n          if(!contexts.size) {\n            this.contexts.delete(reference);\n            delete this.links[bytesToHex(reference)];\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\n    this.log('refreshReference: start', reference.slice(), context);\n    if(!context) {\n      const c = this.getContext(reference);\n      if(!c) {\n        this.log('refreshReference: got no context for reference:', reference.slice());\n        return Promise.reject('NO_CONTEXT');\n      }\n\n      [context, reference] = c;\n    }\n\n    let promise: Promise<any>;\n    switch(context?.type) {\n      case 'message': {\n        promise = this.appMessagesManager.wrapSingleMessage(context.peerId, context.messageId, true);\n        break; \n        // .then(() => {\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\n        // });\n      }\n\n      case 'emojiesSounds': {\n        promise = this.refreshEmojiesSoundsPromise || this.appStickersManager.getAnimatedEmojiSounds(true).then(() => {\n          this.refreshEmojiesSoundsPromise = undefined;\n        });\n        break;\n      }\n\n      default: {\n        this.log.warn('refreshReference: not implemented context', context);\n        return Promise.reject();\n      }\n    }\n\n    const hex = bytesToHex(reference);\n    this.log('refreshReference: refreshing reference:', hex);\n    return promise.then(() => {\n      const newHex = bytesToHex(reference);\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\n      if(hex !== newHex) {\n        return reference;\n      }\n\n      this.deleteContext(reference, context);\n\n      const newContext = this.getContext(reference);\n      if(newContext) {\n        return this.refreshReference(reference, newContext[0]);\n      }\n\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\n\n      throw 'NO_NEW_CONTEXT';\n    });\n  }\n\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\n    const contexts = this.contexts.get(oldReference);\n    if(contexts) {\n      this.contexts.delete(oldReference);\n      this.contexts.set(newReference, contexts);\n    }\n  } */\n}\n","export default function safeReplaceObject(wasObject: any, newObject: any) {\n  if(!wasObject) {\n    return newObject;\n  }\n\n  for(var key in wasObject) {\n    if(!newObject.hasOwnProperty(key)) {\n      delete wasObject[key];\n    }\n  }\n\n  for(var key in newObject) {\n    //if (newObject.hasOwnProperty(key)) { // useless\n      wasObject[key] = newObject[key];\n    //}\n  }\n  \n  return wasObject;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Message, MessageAction, MessageMedia } from \"../../../../layer\";\nimport getPeerId from \"../peers/getPeerId\";\n\nexport default function getPeerIdsFromMessage(message: Message.message | Message.messageService) {\n  const peerIds: number[] = [\n    message.fromId,\n    message.viaBotId,\n    (message as Message.message).fwdFromId\n  ];\n\n  const media = (message as Message.message).media;\n  if(media) {\n    const contactUserId = (media as MessageMedia.messageMediaContact).user_id;\n    if(contactUserId !== undefined) {\n      peerIds.push(contactUserId.toPeerId());\n    }\n\n    const results = (media as MessageMedia.messageMediaPoll).results;\n    const recentVoters = results?.recent_voters;\n    if(recentVoters?.length) {\n      peerIds.push(...recentVoters.map((userId) => userId.toPeerId()));\n    }\n  }\n\n  const recentReactions = ((message as Message.message).reactions)?.recent_reactions;\n  if(recentReactions?.length) {\n    peerIds.push(...recentReactions.map((reaction) => getPeerId(reaction.peer_id)));\n  }\n\n  const action = (message as Message.messageService).action;\n  if(action) {\n    const userIds: UserId[] = [\n      ...((action as MessageAction.messageActionChatAddUser).users || []),\n      (action as MessageAction.messageActionChatDeleteUser).user_id,\n      (action as MessageAction.messageActionChatJoinedByLink).inviter_id\n    ];\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\n\n    const chatIds: ChatId[] = [\n      (action as MessageAction.messageActionChatMigrateTo).channel_id,\n      (action as MessageAction.messageActionChannelMigrateFrom).chat_id,\n    ];\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\n  }\n\n  const recentRepliers = ((message as Message.message).replies)?.recent_repliers;\n  if(recentRepliers?.length) {\n    peerIds.push(...recentRepliers.map((reply) => getPeerId(reply)));\n  }\n\n  return new Set(peerIds.filter(Boolean));\n}\n","export default function defineNotNumerableProperties<T extends any>(obj: T, names: (keyof T)[]) {\n  //const perf = performance.now();\n  const props = {writable: true, configurable: true};\n  const out: {[name in keyof T]?: typeof props} = {};\n  names.forEach((name) => {\n    if(!obj.hasOwnProperty(name)) {\n      out[name] = props;\n    }\n  });\n  Object.defineProperties(obj, out);\n  //console.log('defineNotNumerableProperties time:', performance.now() - perf);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Dialog } from \"../../appMessagesManager\";\nimport type getDialogIndexKey from \"./getDialogIndexKey\";\n\nexport default function setDialogIndex(\n  dialog: Dialog, \n  indexKey: ReturnType<typeof getDialogIndexKey>,\n  index: number\n) {\n  return dialog[indexKey] = index;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { Chat, DialogPeer, Message, MessageAction, MessageMedia, MessagesPeerDialogs, Update } from \"../../layer\";\nimport type { Dialog, MyMessage } from \"../appManagers/appMessagesManager\";\nimport tsNow from \"../../helpers/tsNow\";\nimport SearchIndex from \"../searchIndex\";\nimport { SliceEnd } from \"../../helpers/slicedArray\";\nimport { MyDialogFilter } from \"./filters\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport { NoneToVoidFunction } from \"../../types\";\nimport ctx from \"../../environment/ctx\";\nimport AppStorage from \"../storage\";\nimport type DATABASE_STATE from \"../../config/databases/state\";\nimport forEachReverse from \"../../helpers/array/forEachReverse\";\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\nimport insertInDescendSortedArray from \"../../helpers/array/insertInDescendSortedArray\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport getServerMessageId from \"../appManagers/utils/messageId/getServerMessageId\";\nimport getPeerId from \"../appManagers/utils/peers/getPeerId\";\nimport generateMessageId from \"../appManagers/utils/messageId/generateMessageId\";\nimport { AppManager } from \"../appManagers/manager\";\nimport getDialogIndexKey from \"../appManagers/utils/dialogs/getDialogIndexKey\";\nimport isObject from \"../../helpers/object/isObject\";\nimport getDialogIndex from \"../appManagers/utils/dialogs/getDialogIndex\";\nimport getPeerIdsFromMessage from \"../appManagers/utils/messages/getPeerIdsFromMessage\";\nimport { AppStoragesManager } from \"../appManagers/appStoragesManager\";\nimport defineNotNumerableProperties from \"../../helpers/object/defineNotNumerableProperties\";\nimport setDialogIndex from \"../appManagers/utils/dialogs/setDialogIndex\";\n\nexport type FolderDialog = {\n  dialog: Dialog,\n  index: number\n};\n\nexport type Folder = {\n  dialogs: Dialog[],\n  id: number,\n  unreadMessagesCount: number,\n  unreadPeerIds: Set<PeerId>,\n  unreadUnmutedPeerIds: Set<PeerId>,\n  dispatchUnreadTimeout?: number\n};\n\nexport const GLOBAL_FOLDER_ID: LOCAL_FOLDER_ID = undefined;\nexport type LOCAL_FOLDER_ID = 0 | 1;\n\n// let spentTime = 0;\nexport default class DialogsStorage extends AppManager {\n  private storage: AppStoragesManager['storages']['dialogs'];\n  \n  private dialogs: {[peerId: PeerId]: Dialog};\n\n  private folders: {[folderId: number]: Folder} = {};\n\n  private allDialogsLoaded: {[folder_id: number]: boolean};\n  private dialogsOffsetDate: {[folder_id: number]: number};\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\n  private dialogsNum: number;\n\n  private dialogsIndex: SearchIndex<PeerId>;\n\n  private cachedResults: {\n    query: string,\n    count: number,\n    dialogs: Dialog[],\n    folderId: number\n  };\n\n  protected after() {\n    this.clear(true);\n\n    this.rootScope.addEventListener('language_change', () => {\n      const peerId = this.appUsersManager.getSelf().id.toPeerId(false);\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        const peerText = this.appPeersManager.getPeerSearchText(peerId);\n        this.dialogsIndex.indexObject(peerId, peerText);\n      }\n    });\n\n    const onFilterUpdate = (filter: MyDialogFilter) => {\n      const dialogs = this.getCachedDialogs(false);\n      for(let i = 0; i < dialogs.length; ++i) {\n        this.processDialogForFilter(dialogs[i], filter);\n      }\n    };\n\n    this.rootScope.addEventListener('filter_order', () => {\n      const dialogs = this.getCachedDialogs(false);\n      // const indexKeys: ReturnType<DialogsStorage['getDialogIndexKey']>[] = [];\n      for(const filterId in this.folders) {\n        if(+filterId > 1) {\n          delete this.folders[filterId];\n        }\n\n        // indexKeys.push(this.getDialogIndexKey(+filterId));\n      }\n\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        // for(const indexKey of indexKeys) {\n        //   delete dialog[indexKey];\n        // }\n\n        this.processDialogForFilters(dialog);\n      }\n    });\n\n    this.rootScope.addEventListener('filter_update', onFilterUpdate);\n    this.rootScope.addEventListener('filter_new', onFilterUpdate);\n\n    this.rootScope.addEventListener('filter_delete', (filter) => {\n      const dialogs = this.getCachedDialogs(false);\n\n      const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        delete dialog[indexKey];\n      }\n\n      delete this.folders[filter.id];\n    });\n\n    this.rootScope.addEventListener('dialog_notify_settings', (dialog) => {\n      this.processDialogForFilters(dialog);\n      this.prepareDialogUnreadCountModifying(dialog)();\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const chat: Chat.chat = this.appChatsManager.getChat(chatId);\n\n      const peerId = chatId.toPeerId(true);\n      if(chat.pFlags.left && this.getDialogOnly(peerId)) {\n        this.dropDialogOnDeletion(peerId);\n      }\n    });\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateFolderPeers: this.onUpdateFolderPeers,\n\n      updateDialogPinned: this.onUpdateDialogPinned,\n\n      updatePinnedDialogs: this.onUpdatePinnedDialogs,\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('dialogs')\n    ]).then(([state, {results: dialogs, storage}]) => {\n      this.storage = storage;\n      this.dialogs = this.storage.getCache();\n\n      this.pinnedOrders = state.pinnedOrders || {};\n      if(!this.pinnedOrders[0]) this.pinnedOrders[0] = [];\n      if(!this.pinnedOrders[1]) this.pinnedOrders[1] = [];\n      \n      if(dialogs.length) {\n        AppStorage.freezeSaving<typeof DATABASE_STATE>(this.setDialogsFromState.bind(this, dialogs), ['chats', 'dialogs', 'messages', 'users']);\n      }\n\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\n\n      if(dialogs.length) {\n        this.appDraftsManager.addMissedDialogs();\n      }\n    });\n  }\n\n  private setDialogsFromState(dialogs: Dialog[]) {\n    for(let i = 0, length = dialogs.length; i < length; ++i) {\n      const dialog = dialogs[i];\n      if(!dialog) {\n        continue;\n      }\n\n      // if(dialog.peerId !== SERVICE_PEER_ID) {\n        dialog.top_message = getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\n      // }\n\n      if(dialog.topMessage) {\n        this.appMessagesManager.saveMessages([dialog.topMessage]);\n      }\n\n      for(let i = 0; i <= 21; ++i) {\n        const indexKey: ReturnType<typeof getDialogIndexKey> = `index_${i}` as any;\n        delete dialog[indexKey];\n      }\n      // delete dialog.indexes;\n\n      this.saveDialog(dialog, undefined, true);\n\n      // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\n      const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      if(!message) {\n        this.appMessagesManager.reloadConversation(dialog.peerId);\n      }\n    }\n  }\n\n  public isDialogsLoaded(folderId: number) {\n    return !!this.allDialogsLoaded[folderId];\n  }\n\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\n      this.allDialogsLoaded[0] = loaded;\n      this.allDialogsLoaded[1] = loaded;\n    } else {\n      this.allDialogsLoaded[folderId] = loaded;\n    }\n\n    if(this.allDialogsLoaded[0] && this.allDialogsLoaded[1]) {\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\n    }\n\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\n  }\n\n  public clear = (init = false) => {\n    this.pinnedOrders = {\n      0: [],\n      1: []\n    };\n\n    if(!init) {\n      this.storage.clear();\n\n      this.setDialogsLoaded(0, false);\n      this.setDialogsLoaded(1, false);\n      this.setDialogsLoaded(GLOBAL_FOLDER_ID, false);\n      this.savePinnedOrders();\n    } else {\n      this.allDialogsLoaded = {};\n    }\n\n    this.folders = {};\n    this.dialogsOffsetDate = {};\n    this.dialogsNum = 0;\n    this.dialogsIndex = new SearchIndex({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n    this.cachedResults = {\n      query: '',\n      count: 0,\n      dialogs: [],\n      folderId: 0\n    };\n  };\n\n  public handleDialogUnpinning(dialog: Dialog, folderId: number) {\n    delete dialog.pFlags.pinned;\n    indexOfAndSplice(this.pinnedOrders[folderId], dialog.peerId);\n    this.savePinnedOrders();\n  }\n\n  public savePinnedOrders() {\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n  }\n\n  public resetPinnedOrder(folderId: number) {\n    this.pinnedOrders[folderId] = [];\n  }\n\n  public getPinnedOrders(folderId: number) {\n    return this.pinnedOrders[folderId];\n  }\n\n  public getOffsetDate(folderId: number): number {\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\n      return Math.min(this.getOffsetDate(0), this.getOffsetDate(1));\n    }\n\n    return offsetDate;\n  }\n\n  public getFolder(id: number) {\n    let folder = this.folders[id];\n    if(!folder) {\n      folder = this.folders[id] = {\n        dialogs: [], \n        id, \n        unreadMessagesCount: 0, \n        unreadPeerIds: new Set(), \n        unreadUnmutedPeerIds: new Set()\n      };\n\n      defineNotNumerableProperties(folder, ['dispatchUnreadTimeout']);\n    }\n\n    return folder;\n  }\n\n  public getFolderDialogs(id: number, skipMigrated = true): Dialog[] {\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\n      return this.getCachedDialogs(skipMigrated);\n    }\n\n    const folder = this.getFolder(id);\n    return skipMigrated ? folder.dialogs.filter((dialog) => dialog.migratedTo === undefined) : folder.dialogs;\n  }\n\n  public getNextDialog(currentPeerId: PeerId, next: boolean, filterId: number) {\n    const folder = this.getFolderDialogs(filterId, true);\n    let dialog: Dialog;\n    if(!currentPeerId) {\n      if(next) {\n        dialog = folder[0];\n      }\n    } else {\n      const idx = folder.findIndex((dialog) => dialog.peerId === currentPeerId);\n      if(idx !== -1) {\n        const nextIndex = next ? idx + 1 : idx - 1;\n        dialog = folder[nextIndex];\n      }\n    }\n\n    return dialog;\n  }\n\n  public getDialogIndexKeyByFilterId(filterId: number) {\n    if(filterId <= 1) return getDialogIndexKey(filterId as LOCAL_FOLDER_ID);\n    const filter = this.filtersStorage.getFilter(filterId);\n    return getDialogIndexKey(filter.orderIndex);\n  }\n  \n  public isPeerUnmuted(peerId: PeerId) {\n    return !this.appNotificationsManager.isPeerLocalMuted(peerId, true);\n  }\n\n  public getFolderUnreadCount(filterId: number) {\n    const folder = this.getFolder(filterId);\n    return {unreadUnmutedCount: folder.unreadUnmutedPeerIds.size, unreadCount: folder.unreadPeerIds.size};\n  }\n\n  public getCachedDialogs(skipMigrated?: boolean) {\n    return this.getFolderDialogs(0, skipMigrated).concat(this.getFolderDialogs(1, skipMigrated));\n  }\n\n  private setDialogIndexInFilter(dialog: Dialog, indexKey: ReturnType<typeof getDialogIndexKey>, filter: MyDialogFilter) {\n    let index: number;\n\n    /* if(filter.id <= 1) {\n      index = getDialogIndex(dialog, getDialogIndexKey(filter.id));\n    } else  */if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n      const pinnedIndex = filter.pinnedPeerIds.indexOf(dialog.peerId);\n      if(pinnedIndex !== -1) {\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(filter.pinned_peers.length - 1 - pinnedIndex), true);\n      } else if(dialog.pFlags?.pinned) {\n        index = this.generateIndexForDialog(dialog, true);\n      } else {\n        index = getDialogIndex(dialog);\n      }\n    }\n\n    // if(!dialog.hasOwnProperty(indexKey)) {\n    //   defineNotNumerableProperties(dialog, [indexKey]);\n    // }\n\n    return setDialogIndex(dialog, indexKey, index);\n  }\n\n  public getDialog(peerId: PeerId, folderId?: number, skipMigrated = true): [Dialog, number] | [] {\n    const folders: Dialog[][] = [];\n\n    if(folderId === undefined) {\n      folders.push(this.getFolder(0).dialogs, this.getFolder(1).dialogs);\n    } else {\n      folders.push(this.getFolderDialogs(folderId, false));\n    }\n\n    for(let folder of folders) {\n      let i = 0, skipped = 0;\n      for(let length = folder.length; i < length; ++i) {\n        const dialog = folder[i];\n        if(dialog.peerId === peerId) {\n          return [dialog, i - skipped];\n        } else if(skipMigrated && dialog.migratedTo !== undefined) {\n          ++skipped;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogs[peerId];\n  }\n\n  public getDialogIndex(peerId: PeerId | Dialog, indexKey: ReturnType<typeof getDialogIndexKey>) {\n    const dialog = isObject(peerId) ? peerId : this.getDialogOnly(peerId);\n    return getDialogIndex(dialog, indexKey);\n  }\n\n  /*\n  var date = Date.now() / 1000 | 0;\n  var m = date * 0x10000;\n\n  var k = (date + 1) * 0x10000;\n  k - m;\n  65536\n  */\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\n    if(date === undefined) {\n      date = tsNow(true) + this.timeManager.getServerTimeOffset();\n    }\n\n    return (date * 0x10000) + (isPinned ? 0 : ((++this.dialogsNum) & 0xFFFF));\n  }\n\n  public processDialogForFilters(dialog: Dialog) {\n    // let perf = performance.now();\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      this.processDialogForFilter(dialog, filter);\n    }\n    // spentTime += (performance.now() - perf);\n    // console.log('generate index time:', spentTime);\n  }\n\n  public processDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n    const folder = this.getFolder(filter.id);\n    const dialogs = folder.dialogs;\n\n    const wasIndex = dialogs.findIndex((d) => d.peerId === dialog.peerId);\n    const wasDialog = dialogs[wasIndex];\n    const wasDialogIndex = this.getDialogIndex(wasDialog, indexKey);\n\n    const newDialogIndex = this.setDialogIndexInFilter(dialog, indexKey, filter);\n\n    if(wasDialogIndex === newDialogIndex) {\n      return false;\n    }\n\n    if((!wasDialogIndex && newDialogIndex) || (wasIndex && !newDialogIndex)) {\n      this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, !!newDialogIndex);\n    }\n\n    if(wasIndex !== -1) {\n      dialogs.splice(wasIndex, 1);\n    }\n\n    if(newDialogIndex) {\n      insertInDescendSortedArray(dialogs, dialog, (dialog) => this.getDialogIndex(dialog, indexKey), -1);\n    }\n\n    return true;\n  }\n\n  public prepareDialogUnreadCountModifying(dialog: Dialog) {\n    const callbacks: NoneToVoidFunction[] = [\n      this.prepareFolderUnreadCountModifyingByDialog(dialog.folder_id, dialog)\n    ];\n\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n        callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog));\n      }\n    }\n\n    return () => callbacks.forEach((callback) => callback());\n  }\n\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: Dialog, toggle?: boolean) {\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n    const wasUnmuted = this.isPeerUnmuted(dialog.peerId);\n    \n    if(toggle !== undefined) {\n      const addMessagesCount = toggle ? wasUnreadCount : -wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!wasUnreadCount, wasUnreadCount && wasUnmuted, dialog);\n      return;\n    }\n\n    return () => {\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n      const newUnmuted = this.isPeerUnmuted(dialog.peerId);\n\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!newUnreadCount, newUnreadCount && newUnmuted, dialog);\n    };\n  }\n\n  public modifyFolderUnreadCount(\n    folderId: number, \n    addMessagesCount: number, \n    toggleDialog: boolean, \n    toggleUnmuted: boolean, \n    dialog: Dialog\n  ) {\n    const folder = this.getFolder(folderId);\n    if(addMessagesCount) {\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\n    }\n    \n    const {peerId} = dialog;\n    if(toggleDialog) {\n      folder.unreadPeerIds.add(peerId);\n    } else {\n      folder.unreadPeerIds.delete(peerId);\n    }\n\n    if(toggleUnmuted) {\n      folder.unreadUnmutedPeerIds.add(peerId);\n    } else {\n      folder.unreadUnmutedPeerIds.delete(peerId);\n    }\n\n    if(folder.dispatchUnreadTimeout === undefined) {\n      folder.dispatchUnreadTimeout = ctx.setTimeout(() => {\n        folder.dispatchUnreadTimeout = undefined;\n        const _folder = {...folder};\n        delete _folder.dialogs;\n        this.rootScope.dispatchEvent('folder_unread', _folder);\n      }, 0);\n    }\n  }\n\n  public generateIndexForDialog(dialog: Dialog, justReturn = false, message?: MyMessage) {\n    let topDate = 0, isPinned: boolean;\n    if(dialog.pFlags.pinned && !justReturn) {\n      topDate = this.generateDialogPinnedDate(dialog);\n      isPinned = true;\n    } else {\n      if(!message) {\n        message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      }\n      \n      topDate = (message as Message.message)?.date || topDate;\n\n      const channelId = this.appPeersManager.isChannel(dialog.peerId) && dialog.peerId.toChatId();\n      if(channelId) {\n        const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n        if(!topDate || (channel.date && channel.date > topDate)) {\n          topDate = channel.date;\n        }\n      }\n  \n      if(dialog.draft?._ === 'draftMessage' && dialog.draft.date > topDate) {\n        topDate = dialog.draft.date;\n      }\n    }\n\n    if(!topDate) {\n      topDate = tsNow(true);\n    }\n\n    const index = this.generateDialogIndex(topDate, isPinned);\n    if(justReturn) {\n      return index;\n    }\n\n    const indexKey = getDialogIndexKey(dialog.folder_id);\n    setDialogIndex(dialog, indexKey, index);\n  }\n\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\n  }\n\n  public generateDialogPinnedDate(dialog: Dialog) {\n    const order = this.pinnedOrders[dialog.folder_id];\n\n    const foundIndex = order.indexOf(dialog.peerId);\n    let pinnedIndex = foundIndex;\n    if(foundIndex === -1) {\n      pinnedIndex = order.push(dialog.peerId) - 1;\n      this.savePinnedOrders();\n    }\n\n    return this.generateDialogPinnedDateByIndex(pinnedIndex);\n  }\n\n  /* public generateDialog(peerId: PeerId) {\n    const dialog: Dialog = {\n      _: 'dialog',\n      pFlags: {},\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      top_message: 0,\n      read_inbox_max_id: 0,\n      read_outbox_max_id: 0,\n      unread_count: 0,\n      unread_mentions_count: 0,\n      notify_settings: {\n        _: 'peerNotifySettings',\n      },\n    };\n\n    return dialog;\n  } */\n\n  public setDialogToState(dialog: Dialog) {\n    const {peerId, pts} = dialog;\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const messagesStorage = this.appMessagesManager.getHistoryMessagesStorage(peerId);\n    const history = historyStorage.history.slice;\n    let incomingMessage: MyMessage;\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const mid = history[i];\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\n      if(message && !message.pFlags.is_outgoing/*  || peerId === SERVICE_PEER_ID */) {\n        incomingMessage = message;\n  \n        const peerIds = getPeerIdsFromMessage(message);\n        this.peersStorage.requestPeersForKey(peerIds, `topMessage_${peerId}`);\n  \n        break;\n      }\n    }\n\n    dialog.topMessage = incomingMessage;\n\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\n      dialog.unread_count = 0;\n    }\n\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\n    // CAN TOUCH NOW\n\n    if(peerId.isAnyChat() && pts) {\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\n      dialog.pts = newPts;\n    }\n\n    this.storage.set({\n      [peerId]: dialog\n    });\n\n    this.peersStorage.requestPeer(peerId, 'dialog');\n\n    /* for(let id in this.filtersStorage.filters) {\n      const filter = this.filtersStorage.filters[id];\n\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n        \n      }\n    } */\n  }\n\n  public pushDialog(dialog: Dialog, offsetDate?: number, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const {folder_id, peerId} = dialog;\n    const dialogs = this.getFolderDialogs(folder_id, false);\n    const pos = dialogs.findIndex((d) => d.peerId === peerId);\n    if(pos !== -1) {\n      dialogs.splice(pos, 1);\n    }\n    \n    //if(!this.dialogs[peerId]) {\n      this.dialogs[peerId] = dialog;\n      \n      this.setDialogToState(dialog);\n    //}\n\n    if(offsetDate === undefined) {\n      offsetDate = this.getDialogOffsetDate(dialog);\n    }\n\n    this.processDialogForFilters(dialog);\n\n    if(offsetDate && !dialog.pFlags.pinned) {\n      if(saveGlobalOffset) {\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\n          this.dialogsOffsetDate[GLOBAL_FOLDER_ID] = offsetDate;\n        }\n      }\n\n      const savedOffsetDate = this.dialogsOffsetDate[folder_id];\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\n        // if(pos !== -1) {\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folder_id)) {\n          this.clearDialogFromState(dialog, true);\n          return;\n        }\n  \n        this.dialogsOffsetDate[folder_id] = offsetDate;\n      }\n    }\n\n    if(pos === -1) {\n      this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\n    }\n\n    const indexKey = getDialogIndexKey(folder_id);\n    /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, (dialog) => getDialogIndex(dialog, indexKey), -1);\n    /* if(pos !== -1 && pos !== newPos) {\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\n    } */\n  }\n\n  public dropDialog(peerId: PeerId): ReturnType<DialogsStorage['getDialog']> {\n    const foundDialog = this.getDialog(peerId, undefined, false);\n    const [dialog, index] = foundDialog;\n    if(dialog) {\n      delete this.dialogs[peerId];\n\n      const folder = this.getFolder(dialog.folder_id);\n      folder.dialogs.splice(index, 1);\n      const wasPinned = indexOfAndSplice(this.pinnedOrders[dialog.folder_id], peerId) !== undefined;\n      \n      this.processDialogForFilters(dialog);\n\n      this.dialogsIndex.indexObject(peerId, '');\n\n      if(wasPinned) {\n        this.savePinnedOrders();\n      }\n\n      this.clearDialogFromState(dialog, false);\n    }\n\n    return foundDialog;\n  }\n\n  public clearDialogFromState(dialog: Dialog, keepLocal: boolean) {\n    const peerId = dialog.peerId;\n    this.peersStorage.requestPeersForKey([], `topMessage_${peerId}`);\n    this.peersStorage.releasePeer(peerId, 'dialog');\n    this.storage.delete(peerId, keepLocal);\n  }\n\n  public dropDialogWithEvent(peerId: PeerId) {\n    const dropped = this.dropDialog(peerId);\n    if(dropped.length) {\n      this.rootScope.dispatchEvent('dialog_drop', {peerId, dialog: dropped[0]});\n    }\n\n    return dropped;\n  }\n\n  /**\n   * leaving chat, leaving channel, deleting private dialog\n   */\n  public dropDialogOnDeletion(peerId: PeerId) {\n    this.dropDialogWithEvent(peerId);\n    this.rootScope.dispatchEvent('peer_deleted', peerId);\n  }\n\n  public applyDialogs(dialogsResult: MessagesPeerDialogs.messagesPeerDialogs) {\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\n\n    // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\n    forEachReverse(dialogsResult.dialogs, (dialog, idx) => {\n      if(dialog._ === 'dialogFolder') {\n        dialogsResult.dialogs.splice(idx, 1);\n      }\n    });\n\n    this.appUsersManager.saveApiUsers(dialogsResult.users);\n    this.appChatsManager.saveApiChats(dialogsResult.chats);\n    this.appMessagesManager.saveMessages(dialogsResult.messages);\n\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\n\n    const updatedDialogs: {[peerId: PeerId]: Dialog} = {};\n    (dialogsResult.dialogs as Dialog[]).forEach((dialog) => {\n      const peerId = getPeerId(dialog.peer);\n      let topMessage = dialog.top_message;\n\n      const topPendingMessage = this.appMessagesManager.pendingTopMsgs[peerId];\n      if(topPendingMessage) {\n        if(!topMessage \n          || (this.appMessagesManager.getMessageByPeer(peerId, topPendingMessage) as MyMessage)?.date > (this.appMessagesManager.getMessageByPeer(peerId, topMessage) as MyMessage)?.date) {\n          dialog.top_message = topMessage = topPendingMessage;\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMessage;\n        }\n      }\n\n      /* const d = Object.assign({}, dialog);\n      if(peerId === 239602833) {\n        this.log.error('applyConversation lun', dialog, d);\n      } */\n\n      if(topMessage || dialog.draft?._ === 'draftMessage') {\n        this.saveDialog(dialog);\n        updatedDialogs[peerId] = dialog;\n      } else {\n        this.dropDialogWithEvent(peerId);\n      }\n\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n      if(updates !== undefined) {\n        for(const update of updates) {\n          updates.delete(update);\n          this.apiUpdatesManager.saveUpdate(update);\n        }\n\n        if(!updates.size) {\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n        }\n      }\n    });\n\n    if(Object.keys(updatedDialogs).length) {\n      this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n    }\n  }\n\n  private getDialogOffsetDate(dialog: Dialog) {\n    const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n    return message?.date || 0;\n  }\n\n  /**\n   * Won't save migrated from peer, forbidden peers, left and kicked\n   */\n  public saveDialog(dialog: Dialog, folderId = dialog.folder_id ?? 0, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const peerId = getPeerId(dialog.peer);\n    if(!peerId) {\n      console.error('saveConversation no peerId???', dialog, folderId);\n      return;\n    }\n\n    if(dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\n      console.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\n    }\n    \n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : NULL_PEER_ID;\n\n    if(peerId.isAnyChat()) {\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\n      // ! chatForbidden stays for chat where you're kicked\n      if(\n        chat._ === 'channelForbidden' \n        // || chat._ === 'chatForbidden' \n        || (chat as Chat.chat).pFlags.left \n        // || (chat as any).pFlags.kicked\n      ) {\n        return;\n      }\n    }\n\n    const peerText = this.appPeersManager.getPeerSearchText(peerId);\n    this.dialogsIndex.indexObject(peerId, peerText);\n\n    const wasDialogBefore = this.getDialogOnly(peerId);\n\n    let mid: number, message: MyMessage;\n    if(dialog.top_message) {\n      mid = generateMessageId(dialog.top_message);//dialog.top_message;\n\n      // preserve outgoing message\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\n        mid = wasDialogBefore.top_message;\n      }\n\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\n    } else {\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\n      message = {\n        _: 'message',\n        id: mid,\n        mid,\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        deleted: true,\n        pFlags: {out: true},\n        date: 0,\n        message: ''\n      };\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\n    }\n\n    if(!message?.pFlags) {\n      this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\n    }\n\n    if(!channelId && peerId.isAnyChat()) {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n        const migratedToPeer = getPeerId(chat.migrated_to);\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\n        dialog.migratedTo = migratedToPeer;\n        //return;\n      }\n    }\n\n    dialog.top_message = mid;\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\n    dialog.read_inbox_max_id = generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id);\n\n    if(dialog.folder_id === undefined) {\n      if(dialog._ === 'dialog') {\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\n        dialog.folder_id = wasDialogBefore ? wasDialogBefore.folder_id : folderId;\n      }/*  else if(dialog._ === 'dialogFolder') {\n        dialog.folder_id = dialog.folder.id;\n      } */\n    }\n\n    dialog.draft = this.appDraftsManager.saveDraft(peerId, 0, dialog.draft);\n    dialog.peerId = peerId;\n    // dialog.indexes ??= {} as any;\n\n    // Because we saved message without dialog present\n    if(message && message.pFlags.is_outgoing) {\n      const isOut = message.pFlags.out;\n      if(mid > dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n\n        if(!dialog.unread_count && !isOut) {\n          ++dialog.unread_count;\n        }\n      } else {\n        delete message.pFlags.unread;\n      }\n    }\n\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const slice = historyStorage.history.slice;\n    /* if(historyStorage === undefined) { // warning\n      historyStorage.history.push(mid);\n    } else  */if(!slice.length) {\n      historyStorage.history.unshift(mid);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    } else if(!slice.isEnd(SliceEnd.Bottom)) { // * this will probably never happen, however, if it does, then it will fix slice with top_message\n      const slice = historyStorage.history.insertSlice([mid]);\n      slice.setEnd(SliceEnd.Bottom);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    historyStorage.maxId = mid;\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\n\n    this.appNotificationsManager.savePeerSettings({\n      peerId, \n      settings: dialog.notify_settings\n    });\n\n    if(channelId && dialog.pts) {\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\n    }\n\n    this.generateIndexForDialog(dialog);\n\n    if(wasDialogBefore) {\n      // fix unread count\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(wasDialogBefore);\n      safeReplaceObject(wasDialogBefore, dialog);\n      releaseUnreadCount();\n    }\n\n    this.pushDialog(dialog, message?.date, ignoreOffsetDate, saveGlobalOffset);\n  }\n\n  public getDialogs(query = '', offsetIndex?: number, limit = 20, folderId: number = 0, skipMigrated = false): {\n    dialogs: Dialog[],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  } | Promise<{\n    dialogs: Dialog[],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  }> {\n    if(folderId > 1) {\n      const promises: Promise<any>[] = [];\n\n      const fillContactsResult = this.appUsersManager.fillContacts();\n      if(!fillContactsResult.cached) {\n        promises.push(fillContactsResult.promise);\n      }\n\n      const reloadMissingDialogsPromise = this.filtersStorage.reloadMissingPeerIds(folderId);\n      if(reloadMissingDialogsPromise) {\n        promises.push(reloadMissingDialogsPromise);\n      }\n\n      if(promises.length) {\n        return Promise.all(promises).then(() => {\n          return this.getDialogs(query, offsetIndex, limit, folderId, skipMigrated);\n        });\n      }\n    }\n\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\n    const realFolderId: LOCAL_FOLDER_ID = folderId > 1 || this.getOffsetDate(folderId) ? GLOBAL_FOLDER_ID : folderId as LOCAL_FOLDER_ID;\n    let curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n\n    const indexKey = this.getDialogIndexKeyByFilterId(folderId);\n\n    if(query) {\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== folderId) {\n        this.cachedResults.query = query;\n        this.cachedResults.folderId = folderId;\n\n        const results = this.dialogsIndex.search(query);\n\n        const dialogs: Dialog[] = [];\n        for(const peerId in this.dialogs) {\n          const dialog = this.dialogs[peerId];\n          if(results.has(dialog.peerId) && dialog.folder_id === folderId) {\n            dialogs.push(dialog);\n          }\n        }\n\n        dialogs.sort((d1, d2) => this.getDialogIndex(d2, indexKey) - this.getDialogIndex(d1, indexKey));\n        this.cachedResults.dialogs = dialogs;\n        this.cachedResults.count = dialogs.length;\n      }\n\n      curDialogStorage = this.cachedResults.dialogs;\n    } else {\n      this.cachedResults.query = '';\n    }\n\n    let offset = 0;\n    if(offsetIndex > 0) {\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\n        if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n          break;\n        }\n      }\n    }\n\n    const loadedAll = this.isDialogsLoaded(realFolderId);\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\n    if(query || loadedAll || isEnoughDialogs) {\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: loadedAll ? curDialogStorage.length : null,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        isEnd: (query || loadedAll) && (offset + limit) >= curDialogStorage.length\n      };\n    }\n\n    return this.appMessagesManager.getTopMessages(limit, realFolderId).then((result) => {\n      //const curDialogStorage = this[folderId];\n      if(skipMigrated) {\n        curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n      }\n\n      offset = 0;\n      if(offsetIndex > 0) {\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\n          if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n            break;\n          }\n        }\n      }\n\n      //this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\n\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: result.count === undefined ? curDialogStorage.length : result.count,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\n        isEnd: result.isEnd\n      };\n    });\n  }\n\n  // only 0 and 1 folders\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\n    //this.log('updateFolderPeers', update);\n    const peers = update.folder_peers;\n\n    peers.forEach((folderPeer) => {\n      const {folder_id, peer} = folderPeer;\n\n      const peerId = getPeerId(peer);\n      const dialog = this.dropDialog(peerId)[0];\n      if(dialog) {\n        if(dialog.pFlags?.pinned) {\n          this.handleDialogUnpinning(dialog, folder_id);\n        }\n\n        dialog.folder_id = folder_id as LOCAL_FOLDER_ID;\n        this.generateIndexForDialog(dialog);\n        this.pushDialog(dialog); // need for simultaneously updatePinnedDialogs\n      }\n\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n    });\n  };\n\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\n    const folderId = update.folder_id ?? 0;\n    //this.log('updateDialogPinned', update);\n    const peerId = getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\n    /* if(update.folder_id > 1) {\n      const filter = this.filtersStorage.filters[update.folder_id];\n      if(update.pFlags.pinned) {\n        filter.pinned_peers.unshift(peerId);\n      } else {\n        filter.pinned_peers.findAndSplice((p) => p === peerId);\n      }\n    } */\n\n    if(dialog) {\n      if(!update.pFlags.pinned) {\n        this.handleDialogUnpinning(dialog, folderId);\n      } else { // means set\n        dialog.pFlags.pinned = true;\n      }\n\n      this.generateIndexForDialog(dialog);\n    } \n\n    this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n  };\n\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\n    const folderId = update.folder_id ?? 0;\n        \n    const handleOrder = (order: PeerId[]) => {\n      this.pinnedOrders[folderId].length = 0;\n      order.reverse(); // index must be higher\n      order.forEach((peerId) => {\n        newPinned[peerId] = true;\n  \n        const dialog = this.getDialogOnly(peerId);\n        this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n        if(!dialog) {\n          return;\n        }\n  \n        dialog.pFlags.pinned = true;\n        this.generateIndexForDialog(dialog);\n      });\n      \n      const dialogs = this.getFolderDialogs(folderId, false);\n      for(const dialog of dialogs) {\n        if(!dialog.pFlags.pinned) {\n          break;\n        }\n\n        const peerId = dialog.peerId;\n        if(!newPinned[peerId]) {\n          this.appMessagesManager.scheduleHandleNewDialogs(peerId);\n        }\n      }\n    };\n\n    //this.log('updatePinnedDialogs', update);\n    const newPinned: {[peerId: PeerId]: true} = {};\n    if(!update.order) {\n      this.apiManager.invokeApi('messages.getPinnedDialogs', {\n        folder_id: folderId\n      }).then((dialogsResult) => {\n        // * for test reordering and rendering\n        // dialogsResult.dialogs.reverse();\n\n        this.applyDialogs(dialogsResult);\n\n        handleOrder(dialogsResult.dialogs.map((d) => d.peerId));\n\n        /* dialogsResult.dialogs.forEach((dialog) => {\n          newPinned[dialog.peerId] = true;\n        });\n\n        this.dialogsStorage.getFolder(folderId).forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(dialog.pFlags.pinned && !newPinned[peerId]) {\n            this.newDialogsToHandle[peerId] = {reload: true};\n            this.scheduleHandleNewDialogs();\n          }\n        }); */\n      });\n\n      return;\n    }\n\n    //this.log('before order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    handleOrder(update.order.map((peer) => getPeerId((peer as DialogPeer.dialogPeer).peer)));\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { DialogFilter, Update } from \"../../layer\";\nimport { Modify } from \"../../types\";\nimport type { Dialog } from '../appManagers/appMessagesManager';\nimport forEachReverse from \"../../helpers/array/forEachReverse\";\nimport copy from \"../../helpers/object/copy\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport getPeerId from \"../appManagers/utils/peers/getPeerId\";\nimport { AppManager } from \"../appManagers/manager\";\nimport assumeType from \"../../helpers/assumeType\";\n\nexport type MyDialogFilter = Modify<DialogFilter.dialogFilter, {\n  /* pinned_peers: PeerId[],\n  include_peers: PeerId[],\n  exclude_peers: PeerId[], */\n  pinnedPeerIds: PeerId[],\n  includePeerIds: PeerId[],\n  excludePeerIds: PeerId[]\n}>;\n\nconst convertment = [\n  ['pinned_peers', 'pinnedPeerIds'], \n  ['exclude_peers', 'excludePeerIds'], \n  ['include_peers', 'includePeerIds']\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\n\nconst START_ORDER_INDEX = 2;\n\n// const LOCAL_FILTER: MyDialogFilter = {\n//   _: 'dialogFilter',\n//   id: 0,\n//   title: '',\n//   exclude_peers: [],\n//   include_peers: [],\n//   pinned_peers: [],\n//   excludePeerIds: [],\n//   includePeerIds: [],\n//   pinnedPeerIds: [],\n//   pFlags: {}\n// };\n\nexport default class FiltersStorage extends AppManager {\n  private filters: {[filterId: string]: MyDialogFilter};\n  private orderIndex: number;\n  private reloadedPeerIds: Set<PeerId>;\n\n  protected after() {\n    this.clear(true);\n    this.filters = {};\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateDialogFilter: this.onUpdateDialogFilter,\n\n      updateDialogFilters: (update) => {\n        //console.warn('updateDialogFilters', update);\n\n        const oldFilters = copy(this.filters);\n\n        this.getDialogFilters(true).then((filters) => {\n          for(const _filterId in oldFilters) {\n            const filterId = +_filterId;\n            if(!filters.find((filter) => filter.id === filterId)) { // * deleted\n              this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\n            }\n          }\n\n          this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map((filter) => filter.id)});\n        });\n      },\n\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\n    });\n\n    // delete peers when dialog is being dropped\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        let modified = false;\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach((arr) => {\n          forEachReverse(arr, (inputPeer, idx) => {\n            if(getPeerId(inputPeer) === peerId) {\n              arr.splice(idx, 1);\n              modified = true;\n            }\n          });\n        });\n\n        if(modified) {\n          this.saveDialogFilter(filter, true);\n        }\n      }\n    }); */\n\n    return this.appStateManager.getState().then((state) => {\n      safeReplaceObject(this.filters, state.filters);\n\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        if(filter.hasOwnProperty('orderIndex') && filter.orderIndex >= this.orderIndex) {\n          this.orderIndex = filter.orderIndex + 1;\n        }\n\n        /* this.appMessagesManager.dialogsStorage.folders[+filterId] = {\n          dialogs: []\n        }; */\n      }\n\n      // delete this.filters[0];\n      // delete this.filters[1];\n      // this.getLocalFilter(0);\n      // this.getLocalFilter(1);\n    });\n  }\n\n  // private getLocalFilter(id: number) {\n  //   return this.filters[id] ??= {...copy(LOCAL_FILTER), id};\n  // }\n\n  public clear = (init?: boolean) => {\n    if(!init) {\n      // safeReplaceObject(this.filters, {});\n      this.reloadedPeerIds.clear();\n      this.clearFilters();\n    } else {\n      this.filters = {};\n      this.reloadedPeerIds = new Set();\n    }\n\n    this.orderIndex = START_ORDER_INDEX;\n  };\n\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\n    if(update.filter) {\n      this.saveDialogFilter(update.filter as any);\n    } else if(this.filters[update.id]) { // Папка удалена\n      //this.getDialogFilters(true);\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\n      delete this.filters[update.id];\n    }\n\n    this.appStateManager.pushToState('filters', this.filters);\n  };\n\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\n    //console.log('updateDialogFilterOrder', update);\n\n    this.orderIndex = START_ORDER_INDEX;\n    update.order.forEach((filterId, idx) => {\n      const filter = this.filters[filterId];\n      delete filter.orderIndex;\n      this.setOrderIndex(filter);\n    });\n\n    this.rootScope.dispatchEvent('filter_order', update.order);\n\n    this.appStateManager.pushToState('filters', this.filters);\n  };\n\n  public testDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    if(filter.id <= 1) {\n      return dialog.folder_id === filter.id;\n    }\n\n    const peerId = dialog.peerId;\n\n    // * check whether dialog exists\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\n      return false;\n    }\n\n    // exclude_peers\n    if(filter.excludePeerIds.includes(peerId)) {\n      return false;\n    }\n\n    // include_peers\n    if(filter.includePeerIds.includes(peerId)) {\n      return true;\n    }\n\n    const pFlags = filter.pFlags;\n\n    // exclude_archived\n    if(pFlags.exclude_archived && dialog.folder_id === 1) {\n      return false;\n    }\n\n    // exclude_read\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\n      return false;\n    }\n\n    // exclude_muted\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted(peerId) && !(dialog.unread_mentions_count && dialog.unread_count)) {\n      return false;\n    }\n\n    if(this.appPeersManager.isAnyChat(peerId)) {\n      // broadcasts\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\n        return true;\n      }\n\n      // groups\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\n        return true;\n      }\n    } else {\n      const userId = peerId.toUserId();\n      \n      // bots\n      if(this.appUsersManager.isBot(userId)) {\n        return !!pFlags.bots;\n      }\n      \n      // non_contacts\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n\n      // contacts\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\n  }\n\n  public getFilter(filterId: number) {\n    return this.filters[filterId];\n  }\n\n  public getFilters() {\n    return this.filters;\n  }\n\n  public clearFilters() {\n    const filters = this.getFilters();\n    for(const filterId in filters) { // delete filters\n      this.onUpdateDialogFilter({\n        _: 'updateDialogFilter',\n        id: +filterId,\n      });\n    }\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId: number) {\n    const filter = this.filters[filterId];\n\n    const index = filter.pinnedPeerIds.indexOf(peerId);\n    const wasPinned = index !== -1;\n\n    if(wasPinned) {\n      filter.pinned_peers.splice(index, 1);\n      filter.pinnedPeerIds.splice(index, 1);\n    }\n    \n    if(!wasPinned) {\n      if(filter.pinned_peers.length >= (await this.apiManager.getConfig()).pinned_infolder_count_max) {\n        return Promise.reject({type: 'PINNED_DIALOGS_TOO_MUCH'});\n      }\n      \n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\n      filter.pinnedPeerIds.unshift(peerId);\n    }\n    \n    return this.updateDialogFilter(filter);\n  }\n\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\n    const maxId = Math.max(1, ...Object.keys(this.filters).map((i) => +i));\n    filter = copy(filter);\n    filter.id = maxId + 1;\n    return this.updateDialogFilter(filter, undefined, prepend);\n  }\n\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\n    const flags = remove ? 0 : 1;\n\n    return this.apiManager.invokeApi('messages.updateDialogFilter', {\n      flags,\n      id: filter.id,\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\n    }).then((bool: boolean) => { // возможно нужна проверка и откат, если результат не ТРУ\n      //console.log('updateDialogFilter bool:', bool);\n\n      if(bool) {\n        /* if(!this.filters[filter.id]) {\n          this.saveDialogFilter(filter);\n        }\n\n        rootScope.$broadcast('filter_update', filter); */\n\n        this.onUpdateDialogFilter({\n          _: 'updateDialogFilter',\n          id: filter.id,\n          filter: remove ? undefined : filter as any\n        });\n\n        if(prepend) {\n          const f: MyDialogFilter[] = [];\n          for(const filterId in this.filters) {\n            const filter = this.filters[filterId];\n            ++filter.orderIndex;\n            f.push(filter);\n          }\n\n          filter.orderIndex = START_ORDER_INDEX;\n\n          const order = f.sort((a, b) => a.orderIndex - b.orderIndex).map((filter) => filter.id);\n          this.onUpdateDialogFilterOrder({\n            _: 'updateDialogFilterOrder',\n            order\n          });\n        }\n      }\n\n      return bool;\n    });\n  }\n\n  public getOutputDialogFilter(filter: MyDialogFilter) {\n    const c = copy(filter);\n    /* convertment.forEach(([from, to]) => {\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\n    }); */\n\n    this.filterIncludedPinnedPeers(filter);\n\n    return c;\n  }\n\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\n      if(filter.pinnedPeerIds.includes(peerId)) {\n        filter.include_peers.splice(idx, 1);\n        filter.includePeerIds.splice(idx, 1);\n      }\n    });\n  }\n\n  // private spliceMissingPeerIds(filterId: number, type: ArgumentTypes<FiltersStorage['reloadMissingPeerIds']>[1], missingPeerIds: PeerId[]) {\n  //   const filter = this.getFilter(filterId);\n  //   const peers = filter && filter[type];\n  //   if(!peers?.length) {\n  //     return;\n  //   }\n\n  //   let spliced = false;\n  //   missingPeerIds.forEach((peerId) => {\n  //     const inputPeer = findAndSplice(peers, (inputPeer) => getPeerId(inputPeer) === peerId);\n  //     if(inputPeer) {\n  //       spliced = true;\n  //     }\n  //   });\n\n  //   if(spliced) {\n  //     this.onUpdateDialogFilter({\n  //       _: 'updateDialogFilter',\n  //       id: filterId,\n  //       filter\n  //     });\n  //   }\n  // }\n\n  public reloadMissingPeerIds(filterId: number, type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers') {\n    const filter = this.getFilter(filterId);\n    const peers = filter && filter[type];\n    if(!peers?.length) {\n      return;\n    }\n\n    // const missingPeerIds: PeerId[] = [];\n    const reloadDialogs = peers.filter((inputPeer) => {\n      const peerId = getPeerId(inputPeer);\n      const isAlreadyReloaded = this.reloadedPeerIds.has(peerId);\n      const dialog = this.appMessagesManager.getDialogOnly(peerId);\n      // if(isAlreadyReloaded && !dialog) {\n      //   missingPeerIds.push(peerId);\n      // }\n\n      const reload = !isAlreadyReloaded && !dialog;\n      return reload;\n    });\n\n    if(!reloadDialogs.length) {\n      // if(missingPeerIds.length) {\n      //   this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n      // }\n\n      return;\n    }\n\n    const reloadPromises = reloadDialogs.map((inputPeer) => {\n      const peerId = getPeerId(inputPeer);\n      const promise = this.appMessagesManager.reloadConversation(inputPeer)\n      .then((dialog) => {\n        this.reloadedPeerIds.add(peerId);\n\n        return dialog ? undefined : peerId;\n      });\n\n      return promise;\n    });\n\n    const reloadPromise = Promise.all(reloadPromises).then((missingPeerIds) => {\n      missingPeerIds = missingPeerIds.filter(Boolean);\n      if(!missingPeerIds.length) {\n        return;\n      }\n\n      // this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n    });\n\n    return reloadPromise;\n  }\n\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\n    const keys = Object.keys(this.filters);\n    if(keys.length && !overwrite) {\n      return keys.map((filterId) => this.filters[filterId]).sort((a, b) => a.orderIndex - b.orderIndex);\n    }\n\n    const filters = await this.apiManager.invokeApiSingle('messages.getDialogFilters');\n    return filters.map((filter) => this.saveDialogFilter(filter, overwrite)).filter(Boolean);\n  }\n\n  public getSuggestedDialogsFilters() {\n    return this.apiManager.invokeApi('messages.getSuggestedDialogFilters');\n  }\n\n  public saveDialogFilter(filter: DialogFilter, update = true) {\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\n\n    // if(filter._ === 'dialogFilterDefault') {\n    //   return;\n    //   // filter = this.getLocalFilter(0);\n    //   // delete filter.orderIndex;\n    // }\n\n    assumeType<MyDialogFilter>(filter);\n    convertment.forEach(([from, to]) => {\n      assumeType<MyDialogFilter>(filter);\n      filter[to] = filter[from].map((peer) => getPeerId(peer));\n    });\n\n    this.filterIncludedPinnedPeers(filter);\n    \n    filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\n    filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\n\n    const oldFilter = this.filters[filter.id];\n    if(oldFilter) {\n      Object.assign(oldFilter, filter);\n    } else {\n      this.filters[filter.id] = filter;\n    }\n    \n    this.setOrderIndex(filter);\n    \n    if(update) {\n      this.rootScope.dispatchEvent('filter_update', filter);\n    } else if(!oldFilter) {\n      this.rootScope.dispatchEvent('filter_new', filter);\n    }\n\n    return filter;\n  }\n\n  public setOrderIndex(filter: MyDialogFilter) {\n    if(filter.hasOwnProperty('orderIndex')) {\n      if(filter.orderIndex >= this.orderIndex) {\n        this.orderIndex = filter.orderIndex + 1;\n      }\n    } else {\n      filter.orderIndex = this.orderIndex++ as MyDialogFilter['orderIndex'];\n    }\n\n    this.appStateManager.pushToState('filters', this.filters);\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function applyMixins(derivedCtor: any, constructors: any[]) {\r\n  // const callbacks: Array<(...args: any[]) => any> = [];\r\n\r\n  constructors.forEach((baseCtor) => {\r\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n      const value: PropertyDescriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null);\r\n      /* if(name === '_constructor') {\r\n        callbacks.push(value.value);\r\n        return;\r\n      } else  */if(name === 'constructor') {\r\n        return;\r\n      }\r\n\r\n      Object.defineProperty(\r\n        derivedCtor.prototype,\r\n        name,\r\n        value\r\n      );\r\n    });\r\n  });\r\n\r\n  // if(callbacks.length) {\r\n  //   function c(...args: any[]): any {\r\n  //     callbacks.forEach((cb, idx) => {\r\n  //       // @ts-ignore\r\n  //       cb.apply(this, args[idx] || []);\r\n  //     });\r\n  //   };\r\n\r\n  //   Object.defineProperty(derivedCtor.prototype, 'superConstructor', {\r\n  //     configurable: true,\r\n  //     enumerable: true,\r\n  //     value: c,\r\n  //     writable: true\r\n  //   });\r\n  // }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport DEBUG from '../../config/debug';\nimport { ConstructorDeclMap, Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates } from '../../layer';\nimport { logger, LogTypes } from '../logger';\nimport assumeType from '../../helpers/assumeType';\nimport App from '../../config/app';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport { AppManager } from './manager';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport getPeerId from './utils/peers/getPeerId';\nimport ctx from '../../environment/ctx';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport applyMixins from '../../helpers/applyMixins';\n\ntype UpdatesState = {\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\n  syncPending: {\n    seqAwaiting?: number,\n    ptsAwaiting?: true,\n    timeout: number\n  },\n  syncLoading: Promise<void>,\n\n  seq?: number,\n  pts?: number,\n  date?: number,\n  lastPtsUpdateTime?: number\n};\n\nconst SYNC_DELAY = 6;\n\nclass ApiUpdatesManager {\n  public updatesState: UpdatesState = {\n    pendingPtsUpdates: [],\n    pendingSeqUpdates: {},\n    syncPending: null,\n    syncLoading: null\n  };\n\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\n  private attached = false;\n\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\n  private debug = DEBUG;\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  private setProxy() {\n    const self = this;\n    this.updatesState = new Proxy(this.updatesState, {\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\n        // @ts-ignore\n        target[key] = value;\n        self.saveUpdatesState();\n        return true;\n      }\n    });\n  }\n\n  public saveUpdatesState() {\n    const us = this.updatesState;\n    this.appStateManager.pushToState('updates', {\n      seq: us.seq,\n      pts: us.pts,\n      date: us.date\n    });\n  }\n\n  private popPendingSeqUpdate() {\n    const state = this.updatesState;\n    const nextSeq = state.seq + 1;\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\n    if(!pendingUpdatesData) {\n      return false;\n    }\n\n    const updates = pendingUpdatesData.updates;\n    for(let i = 0, length = updates.length; i < length; ++i) {\n      this.saveUpdate(updates[i]);\n    }\n\n    state.seq = pendingUpdatesData.seq;\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\n      state.date = pendingUpdatesData.date;\n    }\n    delete state.pendingSeqUpdates[nextSeq];\n  \n    if(!this.popPendingSeqUpdate() &&\n      state.syncPending &&\n      state.syncPending.seqAwaiting &&\n      state.seq >= state.syncPending.seqAwaiting) {\n      if(!state.syncPending.ptsAwaiting) {\n        clearTimeout(state.syncPending.timeout);\n        state.syncPending = null;\n      } else {\n        delete state.syncPending.seqAwaiting;\n      }\n    }\n  \n    return true;\n  }\n\n  private popPendingPtsUpdate(channelId: ChatId) {\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\n    if(!curState.pendingPtsUpdates.length) {\n      return false;\n    }\n\n    curState.pendingPtsUpdates.sort((a, b) => {\n      return a.pts - b.pts;\n    });\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\n  \n    let curPts = curState.pts;\n    let goodPts = 0;\n    let goodIndex = 0;\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n      curPts += update.pts_count;\n      if(curPts >= update.pts) {\n        goodPts = update.pts;\n        goodIndex = i;\n      }\n    }\n  \n    if(!goodPts) {\n      return false;\n    }\n  \n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\n  \n    curState.pts = goodPts;\n    for(let i = 0; i <= goodIndex; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n\n      // @ts-ignore\n      this.saveUpdate(update);\n    }\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\n  \n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\n      if(!curState.syncPending.seqAwaiting) {\n        clearTimeout(curState.syncPending.timeout);\n        curState.syncPending = null;\n      } else {\n        delete curState.syncPending.ptsAwaiting;\n      }\n    }\n  \n    return true;\n  }\n\n  public forceGetDifference() {\n    if(!this.updatesState.syncLoading) {\n      this.getDifference();\n    }\n  }\n\n  public processLocalUpdate(update: Update) {\n    this.processUpdateMessage({\n      _: 'updateShort',\n      update\n    } as Updates);\n  }\n\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\n    override: boolean\n  }> = {}) => {\n    // return forceGetDifference()\n    const processOpts = {\n      date: updateMessage.date,\n      seq: updateMessage.seq,\n      seqStart: updateMessage.seq_start,\n      //ignoreSyncLoading: options.ignoreSyncLoading\n    };\n\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\n  \n    switch(updateMessage._) {\n      case 'updatesTooLong':\n      case 'new_session_created':\n        this.forceGetDifference();\n        break;\n  \n      case 'updateShort':\n        this.processUpdate(updateMessage.update, processOpts);\n        break;\n  \n      case 'updateShortMessage':\n      case 'updateShortChatMessage': {\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\n        const isOut = updateMessage.pFlags.out;\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? this.appPeersManager.peerId : (updateMessage as Updates.updateShortMessage).user_id);\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id\n          ? (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true)\n          : ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || this.appPeersManager.peerId);\n  \n        this.processUpdate({\n          _: 'updateNewMessage',\n          message: {\n            _: 'message',\n            pFlags: updateMessage.pFlags,\n            id: updateMessage.id,\n            from_id: this.appPeersManager.getOutputPeer(fromId.toPeerId()),\n            peer_id: this.appPeersManager.getOutputPeer(toId),\n            date: updateMessage.date,\n            message: updateMessage.message,\n            fwd_from: updateMessage.fwd_from,\n            reply_to: updateMessage.reply_to,\n            entities: updateMessage.entities\n          },\n          pts: updateMessage.pts,\n          pts_count: updateMessage.pts_count\n        }, processOpts);\n        break;\n      }\n  \n      case 'updatesCombined':\n      case 'updates':\n        this.appUsersManager.saveApiUsers(updateMessage.users, options.override);\n        this.appChatsManager.saveApiChats(updateMessage.chats, options.override);\n  \n        updateMessage.updates.forEach((update: Update) => {\n          this.processUpdate(update, processOpts);\n        });\n        break;\n  \n      default:\n        this.log.warn('Unknown update message', updateMessage);\n    }\n  };\n  \n  private getDifference(first = false): Promise<void> {\n    // this.trace('Get full diff')\n    const updatesState = this.updatesState;\n    let wasSyncing = updatesState.syncLoading;\n    if(!wasSyncing) {\n      updatesState.pendingSeqUpdates = {};\n      updatesState.pendingPtsUpdates = [];\n    }\n  \n    if(updatesState.syncPending) {\n      clearTimeout(updatesState.syncPending.timeout);\n      updatesState.syncPending = null;\n    }\n\n    const promise = this.apiManager.invokeApi('updates.getDifference', {\n      pts: updatesState.pts, \n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\n      date: updatesState.date, \n      qts: -1\n    }, {\n      timeout: 0x7fffffff\n    }).then((differenceResult) => {\n      this.debug && this.log.debug('Get diff result', differenceResult);\n\n      if(differenceResult._ === 'updates.differenceEmpty') {\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\n        updatesState.date = differenceResult.date;\n        updatesState.seq = differenceResult.seq;\n        return;\n      }\n\n      // ! SORRY I'M SORRY I'M SORRY\n      if(first) {\n        this.rootScope.dispatchEvent('state_synchronizing');\n      }\n\n      if(differenceResult._ !== 'updates.differenceTooLong') {\n        this.appUsersManager.saveApiUsers(differenceResult.users);\n        this.appChatsManager.saveApiChats(differenceResult.chats);\n\n        // Should be first because of updateMessageID\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\n    \n        differenceResult.other_updates.forEach((update) => {\n          switch(update._) {\n            case 'updateChannelTooLong':\n            case 'updateNewChannelMessage':\n            case 'updateEditChannelMessage':\n              this.processUpdate(update);\n              return;\n          }\n          \n          this.saveUpdate(update);\n        });\n\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\n        differenceResult.new_messages.forEach((apiMessage) => {\n          this.saveUpdate({\n            _: 'updateNewMessage',\n            message: apiMessage,\n            pts: updatesState.pts,\n            pts_count: 0\n          });\n        });\n\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\n        updatesState.seq = nextState.seq;\n        updatesState.pts = nextState.pts;\n        updatesState.date = nextState.date;\n      } else {\n        updatesState.pts = differenceResult.pts;\n        updatesState.date = (Date.now() / 1000 | 0) + this.timeManager.getServerTimeOffset();\n        delete updatesState.seq;\n        \n        this.channelStates = {};\n        \n        this.log.warn('getDifference:', differenceResult._);\n        this.onDifferenceTooLong();\n      }\n  \n      // this.log('apply diff', updatesState.seq, updatesState.pts)\n  \n      if(differenceResult._ === 'updates.differenceSlice') {\n        return this.getDifference();\n      } else {\n        this.debug && this.log.debug('finished get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(updatesState, promise);\n    }\n  \n    return promise;\n  }\n\n  private getChannelDifference(channelId: ChatId): Promise<void> {\n    const channelState = this.getChannelState(channelId);\n    const wasSyncing = channelState.syncLoading;\n    if(!wasSyncing) {\n      channelState.pendingPtsUpdates = [];\n    }\n\n    if(channelState.syncPending) {\n      clearTimeout(channelState.syncPending.timeout);\n      channelState.syncPending = null;\n    }\n\n    //this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\n    const promise = this.apiManager.invokeApi('updates.getChannelDifference', {\n      channel: this.appChatsManager.getChannelInput(channelId),\n      filter: {_: 'channelMessagesFilterEmpty'},\n      pts: channelState.pts,\n      limit: 30\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\n      this.debug && this.log.debug('Get channel diff result', differenceResult)\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\n  \n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\n        this.debug && this.log.debug('apply channel empty diff', differenceResult);\n        return;\n      }\n  \n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\n        this.debug && this.log.debug('channel diff too long', differenceResult);\n        delete this.channelStates[channelId];\n\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\n        return;\n      }\n  \n      this.appUsersManager.saveApiUsers(differenceResult.users);\n      this.appChatsManager.saveApiChats(differenceResult.chats);\n  \n      // Should be first because of updateMessageID\n      this.debug && this.log.debug('applying', differenceResult.other_updates.length, 'channel other updates');\n      differenceResult.other_updates.forEach((update) => {\n        this.saveUpdate(update);\n      });\n  \n      this.debug && this.log.debug('applying', differenceResult.new_messages.length, 'channel new messages');\n      differenceResult.new_messages.forEach((apiMessage) => {\n        this.saveUpdate({\n          _: 'updateNewChannelMessage',\n          message: apiMessage,\n          pts: channelState.pts,\n          pts_count: 0\n        });\n      });\n  \n      this.debug && this.log.debug('apply channel diff', channelState.pts);\n  \n      if(differenceResult._ === 'updates.channelDifference' &&\n        !differenceResult.pFlags['final']) {\n        return this.getChannelDifference(channelId);\n      } else {\n        this.debug && this.log.debug('finished channel get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(channelState, promise, channelId);\n    }\n\n    return promise;\n  }\n\n  private onDifferenceTooLong() {\n    this.appUsersManager.clear();\n    this.appChatsManager.clear();\n    this.appMessagesManager.clear();\n\n    this.rootScope.dispatchEvent('state_cleared');\n  }\n\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\n    state.syncLoading = promise;\n    this.rootScope.dispatchEvent('state_synchronizing', channelId);\n\n    promise.then(() => {\n      state.syncLoading = null;\n      this.rootScope.dispatchEvent('state_synchronized', channelId);\n    }, () => {\n      state.syncLoading = null;\n    });\n  }\n  \n  public addChannelState(channelId: ChatId, pts: number) {\n    if(!pts) {\n      throw new Error('Add channel state without pts ' + channelId);\n    }\n\n    if(!(channelId in this.channelStates)) {\n      this.channelStates[channelId] = {\n        pts,\n        pendingPtsUpdates: [],\n        syncPending: null,\n        syncLoading: null\n      };\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public getChannelState(channelId: ChatId, pts?: number) {\n    if(this.channelStates[channelId] === undefined) {\n      this.addChannelState(channelId, pts);\n    }\n\n    return this.channelStates[channelId];\n  }\n\n  private processUpdate(update: Update, options: Partial<{\n    date: number,\n    seq: number,\n    seqStart: number/* ,\n    ignoreSyncLoading: boolean */\n  }> = {}) {\n    let channelId: ChatId;\n    switch(update._) {\n      case 'updateNewChannelMessage':\n      case 'updateEditChannelMessage':\n        channelId = getPeerId(update.message.peer_id).toChatId();\n        break;\n      /* case 'updateDeleteChannelMessages':\n        channelId = update.channel_id;\n        break; */\n      case 'updateChannelTooLong':\n        channelId = update.channel_id;\n        if(!(channelId in this.channelStates)) {\n          return false;\n        }\n        break;\n      default:\n        if('channel_id' in update && 'pts' in update) {\n          channelId = update.channel_id;\n        }\n        break;\n    }\n  \n    const {pts, pts_count} = update as Update.updateNewMessage;\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\n  \n    // this.log.log('process', channelId, curState.pts, update)\n  \n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\n      return false;\n    }\n  \n    if(update._ === 'updateChannelTooLong') {\n      if(!curState.lastPtsUpdateTime ||\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\n        // this.log.trace('channel too long, get diff', channelId, update)\n        this.getChannelDifference(channelId);\n      }\n      return false;\n    }\n  \n    if(update._ === 'updateNewMessage' ||\n        update._ === 'updateEditMessage' ||\n        update._ === 'updateNewChannelMessage' ||\n        update._ === 'updateEditChannelMessage') {\n      const message = update.message as Message.message;\n      const toPeerId = getPeerId(message.peer_id);\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\n      let reason: string;\n      if(message.from_id && !this.appUsersManager.hasUser(getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\n          fwdHeader.from_id && !this.appUsersManager.hasUser(getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !this.appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\n          toPeerId.isUser() && !this.appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\n          toPeerId.isAnyChat() && !this.appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\n        this.log.warn('Not enough data for message update', toPeerId, reason, message);\n        if(channelId && this.appChatsManager.hasChat(channelId)) {\n          this.getChannelDifference(channelId);\n        } else {\n          this.forceGetDifference();\n        }\n        return false;\n      }\n    } else if(channelId && !this.appChatsManager.hasChat(channelId)) {\n      // this.log.log('skip update, missing channel', channelId, update)\n      return false;\n    }\n  \n    let popPts: boolean;\n    let popSeq: boolean;\n  \n    if(pts) {\n      const newPts = curState.pts + (pts_count || 0);\n      if(newPts < pts) {\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && this.appChatsManager.getChat(channelId));\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\n        if(!curState.syncPending && !curState.syncLoading) {\n          curState.syncPending = {\n            timeout: ctx.setTimeout(() => {\n              curState.syncPending = null;\n\n              if(curState.syncLoading) {\n                return;\n              }\n\n              if(channelId) {\n                this.getChannelDifference(channelId);\n              } else {\n                this.getDifference();\n              }\n            }, SYNC_DELAY)\n          };\n        }\n\n        curState.syncPending.ptsAwaiting = true;\n        return false;\n      }\n\n      if(pts > curState.pts) {\n        curState.pts = pts;\n        popPts = true;\n  \n        curState.lastPtsUpdateTime = Date.now();\n      } else if(pts_count) {\n        // this.log.warn('Duplicate update', update)\n        return false;\n      }\n\n      if(channelId && options.date && this.updatesState.date < options.date) {\n        this.updatesState.date = options.date;\n      }\n    } else if(!channelId && options.seq > 0) {\n      const seq = options.seq;\n      const seqStart = options.seqStart || seq;\n  \n      if(seqStart !== curState.seq + 1) {\n        if(seqStart > curState.seq) {\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending && curState.syncPending.seqAwaiting);\n  \n          if(curState.pendingSeqUpdates[seqStart] === undefined) {\n            curState.pendingSeqUpdates[seqStart] = {seq, date: options.date, updates: []};\n          }\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\n  \n          if(!curState.syncPending) {\n            curState.syncPending = {\n              timeout: ctx.setTimeout(() => {\n                curState.syncPending = null;\n\n                if(curState.syncLoading) {\n                  return;\n                }\n\n                this.getDifference();\n              }, SYNC_DELAY)\n            };\n          }\n\n          if(!curState.syncPending.seqAwaiting ||\n            curState.syncPending.seqAwaiting < seqStart) {\n            curState.syncPending.seqAwaiting = seqStart;\n          }\n          return false;\n        }\n      }\n  \n      if(curState.seq !== seq) {\n        curState.seq = seq;\n        if(options.date && curState.date < options.date) {\n          curState.date = options.date;\n        }\n\n        popSeq = true;\n      }\n    }\n  \n    this.saveUpdate(update);\n  \n    if(popPts) {\n      this.popPendingPtsUpdate(channelId);\n    } else if(popSeq) {\n      this.popPendingSeqUpdate();\n    }\n  }\n\n  public saveUpdate(update: Update) {\n    //this.debug && this.log('saveUpdate', update);\n    this.dispatchEvent(update._, update as any);\n  }\n  \n  public attach(langCode?: string) {\n    if(this.attached) return;\n\n    //return;\n\n    this.log('attach');\n    \n    this.attached = true;\n\n    this.appStateManager.getState().then(({updates: state}) => {\n      const newVersion = this.appStateManager.newVersion/*  || '0.8.6' */;\n\n      //rootScope.broadcast('state_synchronizing');\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\n        this.log('will get new state');\n\n        this.updatesState.syncLoading = new Promise((resolve) => {\n          this.apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\n            this.updatesState.seq = stateResult.seq;\n            this.updatesState.pts = stateResult.pts;\n            this.updatesState.date = stateResult.date;\n            this.saveUpdatesState();\n            //setTimeout(() => {\n              this.updatesState.syncLoading = null;\n              resolve();\n              //rootScope.broadcast('state_synchronized');\n            //}, 1000);\n        \n          // ! for testing\n          // updatesState.seq = 1\n          // updatesState.pts = stateResult.pts - 5000\n          // updatesState.date = 1\n          // getDifference()\n          });\n        });\n      } else {\n        // ! for testing\n        /* state.seq = 1;\n        state.pts = state.pts - 15;\n        state.date = 1; */\n        // state.pts -= 100;\n\n        /* state.date = 1628623682;\n        state.pts = 2007500;\n        state.seq = 503; */\n\n        Object.assign(this.updatesState, state);\n        \n        this.log('will get difference', Object.assign({}, state));\n        \n        this.getDifference(true)/* .finally(() => {\n          if(this.updatesState.syncLoading) {\n            rootScope.broadcast('state_synchronizing');\n          }\n        }) */;\n      }\n\n      this.apiManager.setUpdatesProcessor(this.processUpdateMessage);\n\n      // this.updatesState.syncLoading.then(() => {\n        this.setProxy();\n      // });\n\n      if(newVersion) {\n        this.updatesState.syncLoading.then(async() => {\n          const strs: Record<string, string> = {\n            en: 'was updated to version',\n            ru: 'обновлён до версии'\n          };\n\n          const getChangelog = (lang: string) => {\n            fetch(`changelogs/${lang}_${newVersion.split(' ')[0]}.md`)\n            .then((res) => (res.status === 200 && res.ok && res.text()) || Promise.reject())\n            .then((text) => {\n              const langStr = strs[lang] || strs.en;\n              const pre = `**Telegram Web${App.suffix} ${langStr} ${newVersion}**\\n\\n`;\n  \n              text = pre + text;\n  \n              const entities: MessageEntity[] = [];\n              const message = parseMarkdown(text, entities);\n  \n              const update: Update.updateServiceNotification = {\n                _: 'updateServiceNotification',\n                entities,\n                message,\n                type: 'local',\n                pFlags: {},\n                inbox_date: Date.now() / 1000 | 0,\n                media: undefined\n              };\n\n              this.processLocalUpdate(update);\n            });\n          };\n          \n          const languages = filterUnique([langCode, 'en']);\n          for(const language of languages) {\n            try {\n              await getChangelog(language);\n              break;\n            } catch(err) {\n              \n            }\n          }\n        });\n      }\n    });\n  }\n}\n\ninterface ApiUpdatesManager extends EventListenerBase<{\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\n}>, AppManager {}\napplyMixins(ApiUpdatesManager, [EventListenerBase, AppManager]);\n\nexport { ApiUpdatesManager };\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { UserProfilePhoto, ChatPhoto, InputFileLocation } from \"../../layer\";\nimport { DownloadOptions } from \"../mtproto/apiFileManager\";\nimport { AppManager } from \"./manager\";\n\nexport type PeerPhotoSize = 'photo_small' | 'photo_big';\n\nexport class AppAvatarsManager extends AppManager {\n  private savedAvatarURLs: {\n    [peerId: PeerId]: {\n      [size in PeerPhotoSize]?: string | Promise<string>\n    }\n  } = {};\n  \n  protected after() {\n    this.rootScope.addEventListener('avatar_update', (peerId) => {\n      this.removeFromAvatarsCache(peerId);\n    });\n  }\n\n  public isAvatarCached(peerId: PeerId, size?: PeerPhotoSize) {\n    const saved = this.savedAvatarURLs[peerId];\n    if(size === undefined) {\n      return !!saved;\n    }\n\n    return !!(saved && saved[size] && !(saved[size] instanceof Promise));\n  }\n  \n  public removeFromAvatarsCache(peerId: PeerId) {\n    if(this.savedAvatarURLs[peerId]) {\n      delete this.savedAvatarURLs[peerId];\n    }\n  }\n\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\n    let saved = this.savedAvatarURLs[peerId];\n    if(!saved || !saved[size]) {\n      if(!saved) {\n        saved = this.savedAvatarURLs[peerId] = {};\n      }\n\n      //console.warn('will invoke downloadSmallFile:', peerId);\n      const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\n        _: 'inputPeerPhotoFileLocation', \n        pFlags: {},\n        peer: this.appPeersManager.getInputPeerById(peerId), \n        photo_id: photo.photo_id\n      };\n\n      const downloadOptions: DownloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\n      if(size === 'photo_big') {\n        peerPhotoFileLocation.pFlags.big = true;\n        downloadOptions.limitPart = 512 * 1024;\n      }\n\n      /* let str: string;\n      const time = Date.now();\n      if(peerId === 0) {\n        str = `download avatar ${peerId}`;\n      } */\n\n      const promise = this.apiFileManager.download(downloadOptions);\n      return saved[size] = promise.then((blob) => {\n        return saved[size] = URL.createObjectURL(blob);\n\n        /* if(str) {\n          console.log(str, Date.now() / 1000, Date.now() - time);\n        } */\n      });\n    } else {\n      return saved[size];\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { getEnvironment } from \"../../environment/utils\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport { nextRandomUint } from \"../../helpers/random\";\nimport { InputPhoneCall, MessagesDhConfig, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, PhonePhoneCall } from \"../../layer\";\nimport { AppManager } from \"./manager\";\n\nexport type CallId = PhoneCall['id'];\n\nexport type MyPhoneCall = Exclude<PhoneCall, PhoneCall.phoneCallEmpty | PhoneCall.phoneCallDiscarded>;\n\nexport class AppCallsManager extends AppManager {\n  private calls: Map<CallId, MyPhoneCall>;\n  \n  protected after() {\n    this.calls = new Map();\n\n    if(!getEnvironment().IS_CALL_SUPPORTED) {\n      return;\n    }\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePhoneCall: (update) => {\n        this.saveCall(update.phone_call);\n      },\n\n      updatePhoneCallSignalingData: (update) => {\n        this.rootScope.dispatchEvent('call_signaling', {callId: update.phone_call_id, data: update.data});\n      }\n    });\n  }\n\n  public computeKey(g_b: Uint8Array, a: Uint8Array, p: Uint8Array) {\n    return this.cryptoWorker.invokeCrypto('compute-dh-key', g_b, a, p);\n  }\n  \n  public saveCall(call: PhoneCall) {\n    const isDiscarded = call._ === 'phoneCallDiscarded';\n    const oldCall = this.calls.get(call.id);\n    if(oldCall) {\n      // if(shouldUpdate) {\n      safeReplaceObject(oldCall, call);\n      // }\n\n      if(isDiscarded) {\n        this.calls.delete(call.id);\n      }\n      \n      call = oldCall;\n    } else if(!isDiscarded) {\n      this.calls.set(call.id, call as any);\n    }\n\n    this.rootScope.dispatchEvent('call_update', call);\n\n    return call;\n  }\n  \n  public getCall(callId: CallId) {\n    return this.calls.get(callId);\n  }\n  \n  public getCallInput(id: CallId): InputPhoneCall {\n    const call = this.getCall(id);\n    return {\n      _: 'inputPhoneCall',\n      id: call.id,\n      access_hash: call.access_hash\n    };\n  }\n\n  public savePhonePhoneCall(phonePhoneCall: PhonePhoneCall) {\n    this.appUsersManager.saveApiUsers(phonePhoneCall.users);\n    return this.saveCall(phonePhoneCall.phone_call);\n  }\n\n  public generateDh() {\n    return this.apiManager.invokeApi('messages.getDhConfig', {\n      version: 0,\n      random_length: 256\n    }).then((dhConfig) => {\n      return this.cryptoWorker.invokeCrypto('generate-dh', dhConfig as MessagesDhConfig.messagesDhConfig);\n    });\n  }\n\n  // private verifyProtocolCompatibility(protocol: PhoneCallProtocol) {\n  //   const my = getCallProtocol();\n  //   const myVersion = my.library_versions[0];\n  //   return !protocol.library_versions.find((version) => {\n  //     return compareVersion(myVersion, version) > 0;\n  //   });\n  // }\n\n  public async requestCall(userId: UserId, protocol: PhoneCallProtocol, g_a_hash: Uint8Array, video?: boolean) {\n    const phonePhoneCall = await this.apiManager.invokeApi('phone.requestCall', {\n      user_id: this.appUsersManager.getUserInput(userId),\n      protocol: protocol,\n      video: video,\n      random_id: nextRandomUint(32),\n      g_a_hash: g_a_hash\n    });\n\n    return this.savePhonePhoneCall(phonePhoneCall);\n  }\n\n  public async discardCall(callId: CallId, duration: number, reason: PhoneCallDiscardReason['_'], video?: boolean) {\n    if(!this.getCall(callId)) {\n      return;\n    }\n\n    const updates = await this.apiManager.invokeApi('phone.discardCall', {\n      video,\n      peer: this.getCallInput(callId),\n      duration,\n      reason: {\n        _: reason\n      },\n      connection_id: '0'\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n  }\n}\n","import { RestrictionReason } from \"../layer\";\n\nconst platforms = new Set([\n  'all',\n  'web',\n  'webk'\n]);\n\nconst ignore = new Set();\n\nexport function getRestrictionReason(reasons: RestrictionReason[]) {\n  // return reasons[0];\n  return reasons.find((reason) => platforms.has(reason.platform) && !ignore.has(reason.reason));\n}\n\nexport function isRestricted(reasons: RestrictionReason[]) {\n  return !!getRestrictionReason(reasons);\n}\n\nexport function ignoreRestrictionReasons(reasons: string[]) {\n  ignore.clear();\n  reasons.forEach((reason) => {\n    ignore.add(reason);\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport deepEqual from \"../../helpers/object/deepEqual\";\nimport isObject from \"../../helpers/object/isObject\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport { ChannelParticipant, ChannelsCreateChannel, Chat, ChatAdminRights, ChatBannedRights, ChatInvite, ChatPhoto, InputChannel, InputChatPhoto, InputFile, InputPeer, SponsoredMessage, Update, Updates } from \"../../layer\";\nimport { isRestricted } from \"../../helpers/restrictions\";\nimport { AppManager } from \"./manager\";\nimport getPeerId from \"./utils/peers/getPeerId\";\nimport hasRights from \"./utils/chats/hasRights\";\nimport getParticipantPeerId from \"./utils/chats/getParticipantPeerId\";\nimport { AppStoragesManager } from \"./appStoragesManager\";\n\nexport type Channel = Chat.channel;\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] | 'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants';\n\nexport class AppChatsManager extends AppManager {\n  private storage: AppStoragesManager['storages']['chats'];\n  \n  private chats: {[id: ChatId]: Chat.channel | Chat.chat | any};\n  //private usernames: any;\n  //private channelAccess: any;\n  //private megagroups: {[id: number]: true};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      /* updateChannel: (update) => {\n        const channelId = update.channel_id;\n        //console.log('updateChannel:', update);\n        rootScope.broadcast('channel_settings', {channelId});\n      }, */\n\n      updateChannelParticipant: (update) => {\n        this.apiManager.clearCache('channels.getParticipants', (params) => {\n          return (params.channel as InputChannel.inputChannel).channel_id === update.channel_id;\n        });\n      },\n\n      updateChatDefaultBannedRights: (update) => {\n        const chatId = getPeerId(update.peer).toChatId();\n        const chat: Chat.chat = this.chats[chatId];\n        if(chat) {\n          chat.default_banned_rights = update.default_banned_rights;\n          this.rootScope.dispatchEvent('chat_update', chatId);\n        }\n      }\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('chats')\n    ]).then(([state, {results: chats, storage}]) => {\n      this.storage = storage;\n\n      if(chats.length) {\n        for(let i = 0, length = chats.length; i < length; ++i) {\n          const chat = chats[i];\n          if(chat) {\n            this.chats[chat.id] = chat;\n          }\n        }\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.set({\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\n        });\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.delete(peerId.toChatId());\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const chatId in this.chats) {\n        if(!chatId) continue;\n        if(!this.peersStorage.isPeerNeeded(chatId.toPeerId(true))) {\n          /* const chat = this.chats[chatId];\n          if(chat.username) {\n            delete this.usernames[cleanUsername(chat.username)];\n          } */\n          \n          this.storage.delete(chatId);\n          delete this.chats[chatId];\n        }\n      }\n    } else {\n      this.chats = {};\n    }\n  };\n\n  public saveApiChats(apiChats: any[], override?: boolean) {\n    if((apiChats as any).saved) return;\n    (apiChats as any).saved = true;\n    apiChats.forEach((chat) => this.saveApiChat(chat, override));\n  }\n\n  public saveApiChat(chat: Chat, override?: boolean) {\n    if(chat._ === 'chatEmpty') return;\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\n      return;\n    } */\n    \n    // * exclude from state\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\n\n    const oldChat: Exclude<Chat, Chat.chatEmpty> = this.chats[chat.id];\n\n    /* if(oldChat && !override) {\n      return;\n    } */\n\n    if((chat as Chat.chat).pFlags === undefined) {\n      (chat as Chat.chat).pFlags = {};\n    }\n\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\n      return;\n    }\n\n    if(chat._ === 'channel' &&\n        chat.participants_count === undefined &&\n        oldChat !== undefined &&\n        (oldChat as Chat.channel).participants_count) {\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\n    }\n\n    /* if(chat.username) {\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\n      this.usernames[searchUsername] = chat.id;\n    } */\n\n    let changedPhoto = false, changedTitle = false;\n    if(oldChat === undefined) {\n      this.chats[chat.id] = chat;\n    } else {\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      if(oldPhotoId !== newPhotoId) {\n        changedPhoto = true;\n      }\n\n      if(oldChat.title !== chat.title) {\n        changedTitle = true;\n      }\n\n      safeReplaceObject(oldChat, chat);\n      this.rootScope.dispatchEvent('chat_update', chat.id);\n    }\n\n    const peerId = chat.id.toPeerId(true);\n    if(changedPhoto) {\n      this.rootScope.dispatchEvent('avatar_update', peerId);\n    }\n\n    if(changedTitle) {\n      this.rootScope.dispatchEvent('peer_title_edit', peerId);\n    }\n\n    if(this.peersStorage.isPeerNeeded(peerId)) {\n      this.storage.set({\n        [chat.id]: chat\n      });\n    }\n  }\n\n  public getChat(id: ChatId) {\n    return this.chats[id] || {_: 'chatEmpty', id, deleted: true, access_hash: '', pFlags: {}/* this.channelAccess[id] */};\n  }\n\n  public getChatTyped(id: ChatId): Chat {\n    return this.getChat(id);\n  }\n\n  /**\n   * Check the user's ability to do an action in chat\n   * @param id \n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n   * @param rights do not provide this parameter when checking rights for self\n   * @param isThread \n   * @returns \n   */\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n    return hasRights(this.getChat(id), action, rights, isThread);\n  }\n\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\n    const chat: Chat.chat = this.getChat(id);\n    if(chat.default_banned_rights) {\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\n        return Promise.resolve();\n      }\n    }\n    \n    return this.apiManager.invokeApi('messages.editChatDefaultBannedRights', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true)),\n      banned_rights\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  /* public resolveUsername(username: string) {\n    return this.usernames[username] || 0;\n  } */\n\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\n    this.channelAccess[id] = accessHash;\n  } */\n\n  /* public saveIsMegagroup(id: ChatId) {\n    this.megagroups[id] = true;\n  } */\n\n  public isChannel(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\n  }\n\n  public isMegagroup(id: ChatId) {\n    /* if(this.megagroups[id]) {\n      return true;\n    } */\n\n    const chat: Chat = this.chats[id];\n    return !!(chat as Chat.channel)?.pFlags?.megagroup;\n  }\n\n  public isBroadcast(id: ChatId) {\n    return this.isChannel(id) && !this.isMegagroup(id);\n  }\n\n  public isInChat(id: ChatId) {\n    let good = true;\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channelForbidden' \n      || chat._ === 'chatForbidden' \n      || chat._ === 'chatEmpty' \n      || (chat as Chat.chat).pFlags.left \n      // || (chat as any).pFlags.kicked \n      || (chat as Chat.chat).pFlags.deactivated) {\n      good = false;\n    }\n\n    return good;\n  }\n\n  public getChannelInput(id: ChatId): InputChannel {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'chatEmpty' || !(chat as Chat.channel).access_hash) {\n      return {\n        _: 'inputChannelEmpty'\n      };\n    } else {\n      return {\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\n      };\n    }\n  }\n\n  public getInputPeer(id: ChatId) {\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\n  }\n\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\n    return {\n      _: 'inputPeerChat',\n      chat_id: id\n    };\n  }\n\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\n    return {\n      _: 'inputPeerChannel',\n      channel_id: id,\n      access_hash: this.getChat(id).access_hash/*  || this.channelAccess[id] */ || 0\n    };\n  }\n\n  public hasChat(id: ChatId, allowMin?: true) {\n    const chat = this.chats[id];\n    return isObject(chat) && (allowMin || !chat.pFlags.min);\n  }\n\n  public getChatPhoto(id: ChatId) {\n    const chat: Chat.chat = this.getChat(id);\n\n    return chat && chat.photo || {\n      _: 'chatPhotoEmpty'\n    };\n  }\n\n  public getChatString(id: ChatId) {\n    const chat = this.getChat(id);\n    if(this.isChannel(id)) {\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + chat.access_hash;\n    }\n    return 'g' + id;\n  }\n\n  /* public wrapForFull(id: number, fullChat: any) {\n    const chatFull = copy(fullChat);\n    const chat = this.getChat(id);\n\n    if(!chatFull.participants_count) {\n      chatFull.participants_count = chat.participants_count;\n    }\n\n    if(chatFull.participants &&\n        chatFull.participants._ === 'chatParticipants') {\n      chatFull.participants.participants = this.wrapParticipants(id, chatFull.participants.participants);\n    }\n\n    if(chatFull.about) {\n      chatFull.rAbout = wrapRichText(chatFull.about, {noLinebreaks: true});\n    }\n\n    //chatFull.peerString = this.getChatString(id);\n    chatFull.chat = chat;\n\n    return chatFull;\n  }\n\n  public wrapParticipants(id: number, participants: any[]) {\n    const chat = this.getChat(id);\n    const myId = appUsersManager.getSelf().id;\n    if(this.isChannel(id)) {\n      const isAdmin = chat.pFlags.creator;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = isAdmin && participant._ === 'channelParticipant';\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    } else {\n      const isAdmin = chat.pFlags.creator || chat.pFlags.admins_enabled && chat.pFlags.admin;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = !participant.canLeave && (\n          chat.pFlags.creator ||\n          participant._ === 'chatParticipant' && (isAdmin || myId === participant.inviter_id)\n        );\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    }\n\n    return participants;\n  } */\n\n  public createChannel(options: ChannelsCreateChannel): Promise<ChatId> {\n    return this.apiManager.invokeApi('channels.createChannel', options).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const channelId = (updates as any).chats[0].id;\n      return channelId;\n    });\n  }\n\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\n    const input = this.getChannelInput(id);\n    const usersInputs = userIds.map((u) => this.appUsersManager.getUserInput(u));\n\n    return this.apiManager.invokeApi('channels.inviteToChannel', {\n      channel: input,\n      users: usersInputs\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\n    return this.apiManager.invokeApi('messages.createChat', {\n      users: userIds.map((u) => this.appUsersManager.getUserInput(u)),\n      title\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const chatId = (updates as any as Updates.updates).chats[0].id;\n      return chatId;\n    });\n  }\n\n  private onChatUpdated = (chatId: ChatId, updates?: any) => {\n    //console.log('onChatUpdated', chatId, updates);\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    if(updates?.updates?.length && this.isChannel(chatId)) {\n      this.rootScope.dispatchEvent('invalidate_participants', chatId);\n    }\n  };\n\n  public leaveChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.leaveChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public joinChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.joinChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\n    return this.apiManager.invokeApi('messages.addChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId),\n      fwd_limit: fwdLimit\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChatUser(id: ChatId, userId: UserId) {\n    return this.apiManager.invokeApi('messages.deleteChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public leaveChat(id: ChatId) {\n    return this.deleteChatUser(id, this.appUsersManager.getSelf().id);\n  }\n\n  public leave(id: ChatId) {\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\n  }\n\n  public delete(id: ChatId) {\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\n  }\n\n  public deleteChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.deleteChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChat(id: ChatId) {\n    //return this.leaveChat(id).then(() => {\n      return this.apiManager.invokeApi('messages.deleteChat', {\n        chat_id: id\n      });\n    //});\n  }\n\n  public migrateChat(id: ChatId): Promise<ChatId> {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\n    return this.apiManager.invokeApi('messages.migrateChat', {\n      chat_id: id\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find((u) => u._ === 'updateChannel') as any;\n      return update.channel_id;\n    });\n  }\n\n  public updateUsername(id: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.updateUsername', {\n      channel: this.getChannelInput(id),\n      username\n    }).then((bool) => {\n      if(bool) {\n        const chat: Chat.channel = this.getChat(id);\n        chat.username = username;\n      }\n\n      return bool;\n    });\n  }\n\n  public editPhoto(id: ChatId, inputFile: InputFile) {\n    const inputChatPhoto: InputChatPhoto = {\n      _: 'inputChatUploadedPhoto',\n      file: inputFile\n    };\n\n    let promise: any;\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editPhoto', {\n        channel: this.getChannelInput(id),\n        photo: inputChatPhoto\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatPhoto', {\n        chat_id: id,\n        photo: inputChatPhoto\n      });\n    }\n\n    return promise.then((updates: any) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editTitle(id: ChatId, title: string) {\n    let promise: any;\n\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editTitle', {\n        channel: this.getChannelInput(id),\n        title\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatTitle', {\n        chat_id: id,\n        title\n      });\n    }\n\n    return promise.then((updates: any) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editAbout(id: ChatId, about: string) {\n    const peerId = id.toPeerId(true);\n    return this.apiManager.invokeApi('messages.editChatAbout', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      about\n    }).then((bool) => {\n      if(bool) {\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return bool;\n    });\n  }\n\n  public editBanned(id: ChatId, participant: PeerId | ChannelParticipant, banned_rights: ChatBannedRights) {\n    const peerId = typeof(participant) !== 'object' ? participant : getParticipantPeerId(participant);\n    return this.apiManager.invokeApi('channels.editBanned', {\n      channel: this.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId),\n      banned_rights\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n\n      if(typeof(participant) === 'object') {\n        const timestamp = Date.now() / 1000 | 0;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateChannelParticipant',\n          channel_id: id,\n          date: timestamp,\n          actor_id: undefined,\n          qts: undefined,\n          user_id: peerId,\n          prev_participant: participant,\n          new_participant: Object.keys(banned_rights.pFlags).length ? {\n            _: 'channelParticipantBanned',\n            date: timestamp,\n            banned_rights,\n            kicked_by: this.appUsersManager.getSelf().id,\n            peer: this.appPeersManager.getOutputPeer(peerId),\n            pFlags: {}\n          } : undefined\n        });\n      }\n    });\n  }\n\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {}\n    });\n  }\n  \n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {\n        view_messages: true\n      }\n    });\n  }\n\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant) {\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant);\n    else return this.deleteChatUser(id, (participant as PeerId).toUserId());\n  }\n\n  public resolveChannel(id: ChatId) {\n    return this.apiManager.invokeApiSingle('channels.getChannels', {\n      id: [{\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: '0'\n      }]\n    }).then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\n    return this.migrateChat(id).then((channelId) => {\n      return this.apiManager.invokeApi('channels.togglePreHistoryHidden', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      });\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleSignatures(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('channels.toggleSignatures', {\n      channel: this.getChannelInput(id),\n      enabled\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('messages.toggleNoForwards', {\n      peer: this.getInputPeer(id),\n      enabled\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public setChatAvailableReactions(id: ChatId, reactions: Array<string>) {\n    return this.apiManager.invokeApi('messages.setChatAvailableReactions', {\n      peer: this.getInputPeer(id),\n      available_reactions: reactions\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public isRestricted(chatId: ChatId) {\n    const chat: Chat.channel = this.getChat(chatId);\n    const restrictionReasons = chat.restriction_reason;\n\n    return !!(chat.pFlags.restricted && restrictionReasons && isRestricted(restrictionReasons));\n  }\n\n  public getSendAs(channelId: ChatId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getSendAs', \n      params: {\n        peer: this.getChannelInputPeer(channelId)\n      },\n      processResult: (sendAsPeers) => {\n        this.appUsersManager.saveApiUsers(sendAsPeers.users);\n        this.saveApiChats(sendAsPeers.chats);\n\n        return sendAsPeers.peers;\n      }\n    });\n  }\n\n  public importChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.importChatInvite', {hash})\n    .then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      const chat = (updates as Updates.updates).chats[0];\n      return chat.id;\n    });\n  }\n\n  public checkUsername(chatId: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.checkUsername', {\n      channel: this.getChannelInput(chatId),\n      username\n    });\n  }\n\n  public getSponsoredMessage(chatId: ChatId) {\n    return this.apiManager.invokeApiCacheable('channels.getSponsoredMessages', {\n      channel: this.getChannelInput(chatId)\n    }, {cacheSeconds: 300}).then((sponsoredMessages) => {\n      this.appUsersManager.saveApiUsers(sponsoredMessages.users);\n      this.appChatsManager.saveApiChats(sponsoredMessages.chats);\n\n      const sponsoredMessage = sponsoredMessages.messages.shift();\n      sponsoredMessages.messages.push(sponsoredMessage);\n\n      return sponsoredMessages;\n    });\n  }\n\n  public viewSponsoredMessage(chatId: ChatId, randomId: SponsoredMessage['random_id']) {\n    return this.apiManager.invokeApiSingle('channels.viewSponsoredMessage', {\n      channel: this.getChannelInput(chatId),\n      random_id: randomId\n    });\n  }\n\n  public checkChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.checkChatInvite', {\n      hash: hash\n    }).then((chatInvite) => {\n      if((chatInvite as ChatInvite.chatInvitePeek).chat) {\n        this.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\n      }\n\n      return chatInvite;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type lang from \"../lang\";\nimport type langSign from \"../langSign\";\nimport type { State } from \"../config/state\";\nimport DEBUG, { MOUNT_CLASS_TO } from \"../config/debug\";\nimport { HelpCountriesList, HelpCountry, LangPackDifference, LangPackString } from \"../layer\";\nimport stateStorage from \"./stateStorage\";\nimport App from \"../config/app\";\nimport rootScope from \"./rootScope\";\nimport { IS_MOBILE } from \"../environment/userAgent\";\nimport deepEqual from \"../helpers/object/deepEqual\";\nimport safeAssign from \"../helpers/object/safeAssign\";\nimport capitalizeFirstLetter from \"../helpers/string/capitalizeFirstLetter\";\nimport matchUrlProtocol from \"./richTextProcessor/matchUrlProtocol\";\nimport wrapUrl from \"./richTextProcessor/wrapUrl\";\n\nexport const langPack: {[actionType: string]: LangPackKey} = {\n  \"messageActionChatCreate\": \"ActionCreateGroup\",\n  \"messageActionChatCreateYou\": \"ActionYouCreateGroup\",\n\t\"messageActionChatEditTitle\": \"ActionChangedTitle\",\n\t\"messageActionChatEditPhoto\": \"ActionChangedPhoto\",\n\t\"messageActionChatEditVideo\": \"ActionChangedVideo\",\n\t\"messageActionChatDeletePhoto\": \"ActionRemovedPhoto\",\n\t\"messageActionChatReturn\": \"ActionAddUserSelf\",\n\t\"messageActionChatReturnYou\": \"ActionAddUserSelfYou\",\n\t\"messageActionChatJoined\": \"ActionAddUserSelfMega\",\n\t\"messageActionChatJoinedYou\": \"ChannelMegaJoined\",\n  \"messageActionChatAddUser\": \"ActionAddUser\",\n  \"messageActionChatAddUsers\": \"ActionAddUser\",\n\t\"messageActionChatLeave\": \"ActionLeftUser\",\n\t\"messageActionChatLeaveYou\": \"YouLeft\",\n\t\"messageActionChatDeleteUser\": \"ActionKickUser\",\n\t\"messageActionChatJoinedByLink\": \"ActionInviteUser\",\n  \"messageActionPinMessage\": \"Chat.Service.Group.UpdatedPinnedMessage\",\n  \"messageActionContactSignUp\": \"Chat.Service.PeerJoinedTelegram\",\n\t\"messageActionChannelCreate\": \"ActionCreateChannel\",\n\t\"messageActionChannelEditTitle\": \"Chat.Service.Channel.UpdatedTitle\",\n\t\"messageActionChannelEditPhoto\": \"Chat.Service.Channel.UpdatedPhoto\",\n\t\"messageActionChannelEditVideo\": \"Chat.Service.Channel.UpdatedVideo\",\n  \"messageActionChannelDeletePhoto\": \"Chat.Service.Channel.RemovedPhoto\",\n  \"messageActionHistoryClear\": \"HistoryCleared\",\n\t\"messageActionDiscussionStarted\": \"DiscussionStarted\",\n\n  \"messageActionChannelMigrateFrom\": \"ActionMigrateFromGroup\",\n\n  \"messageActionPhoneCall.video_in_ok\": \"ChatList.Service.VideoCall.incoming\",\n\t\"messageActionPhoneCall.video_out_ok\": \"ChatList.Service.VideoCall.outgoing\",\n\t\"messageActionPhoneCall.video_missed\": \"ChatList.Service.VideoCall.Missed\",\n\t\"messageActionPhoneCall.video_cancelled\": \"ChatList.Service.VideoCall.Cancelled\",\n  \"messageActionPhoneCall.in_ok\": \"ChatList.Service.Call.incoming\",\n\t\"messageActionPhoneCall.out_ok\": \"ChatList.Service.Call.outgoing\",\n\t\"messageActionPhoneCall.missed\": \"ChatList.Service.Call.Missed\",\n\t\"messageActionPhoneCall.cancelled\": \"ChatList.Service.Call.Cancelled\",\n\n\t\"messageActionGroupCall.started\": \"Chat.Service.VoiceChatStarted.Channel\",\n\t\"messageActionGroupCall.started_by\": \"Chat.Service.VoiceChatStarted\",\n\t\"messageActionGroupCall.started_byYou\": \"Chat.Service.VoiceChatStartedYou\",\n\t\"messageActionGroupCall.ended\": \"Chat.Service.VoiceChatFinished.Channel\",\n\t\"messageActionGroupCall.ended_by\": \"Chat.Service.VoiceChatFinished\",\n\t\"messageActionGroupCall.ended_byYou\": \"Chat.Service.VoiceChatFinishedYou\",\n\n\t\"messageActionBotAllowed\": \"Chat.Service.BotPermissionAllowed\"\n};\n\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\n\nexport type FormatterArgument = string | number | Node | FormatterArgument[];\nexport type FormatterArguments = FormatterArgument[];\n\nexport const UNSUPPORTED_LANG_PACK_KEY: LangPackKey = IS_MOBILE ? 'Message.Unsupported.Mobile' : 'Message.Unsupported.Desktop';\n\nnamespace I18n {\n\texport const strings: Map<LangPackKey, LangPackString> = new Map();\n\texport const countriesList: HelpCountry[] = [];\n\tlet pluralRules: Intl.PluralRules;\n\n\tlet cacheLangPackPromise: Promise<LangPackDifference>;\n\texport let lastRequestedLangCode: string;\n\texport let lastAppliedLangCode: string;\n\texport let requestedServerLanguage = false;\n  export let timeFormat: State['settings']['timeFormat'];\n\texport function getCacheLangPack(): Promise<LangPackDifference> {\n\t\tif(cacheLangPackPromise) return cacheLangPackPromise;\n\t\treturn cacheLangPackPromise = Promise.all([\n\t\t\tstateStorage.get('langPack') as Promise<LangPackDifference>,\n\t\t\tpolyfillPromise\n\t\t]).then(([langPack]) => {\n\t\t\tif(!langPack/*  || true */) {\n\t\t\t\treturn loadLocalLangPack();\n\t\t\t} else if(DEBUG && false) {\n\t\t\t\treturn getLangPack(langPack.lang_code);\n\t\t\t}/*  else if(langPack.appVersion !== App.langPackVersion) {\n\t\t\t\treturn getLangPack(langPack.lang_code);\n\t\t\t} */\n\t\t\t\n\t\t\tif(!lastRequestedLangCode) {\n\t\t\t\tlastRequestedLangCode = langPack.lang_code;\n\t\t\t}\n\t\t\t\n\t\t\tapplyLangPack(langPack);\n\t\t\treturn langPack;\n\t\t}).finally(() => {\n\t\t\tcacheLangPackPromise = undefined;\n\t\t});\n\t}\n\n  function updateAmPm() {\n    if(timeFormat === 'h12') {\n      try {\n        const dateTimeFormat = getDateTimeFormat({hour: 'numeric', minute: 'numeric', hour12: true});\n        const date = new Date();\n        date.setHours(0);\n        const amText = dateTimeFormat.format(date);\n        amPmCache.am = amText.split(' ')[1];\n        date.setHours(12);\n        const pmText = dateTimeFormat.format(date);\n        amPmCache.pm = pmText.split(' ')[1];\n      } catch(err) {\n        console.error('cannot get am/pm', err);\n        amPmCache = {am: 'AM', pm: 'PM'};\n      }\n    }\n  }\n\n  export function setTimeFormat(\n    format: State['settings']['timeFormat'],\n    haveToUpdate = !!timeFormat && timeFormat !== format\n  ) {\n    timeFormat = format;\n\n    updateAmPm();\n\n    if(haveToUpdate) {\n      cachedDateTimeFormats.clear();\n      const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n      elements.forEach((element) => {\n        const instance = weakMap.get(element);\n\n        if(instance instanceof IntlDateElement) {\n          instance.update();\n        }\n      });\n    }\n  }\n\n\texport function loadLocalLangPack() {\n\t\tconst defaultCode = App.langPackCode;\n\t\tlastRequestedLangCode = defaultCode;\n\t\treturn Promise.all([\n\t\t\timport('../lang'),\n\t\t\timport('../langSign'),\n\t\t\timport('../countries')\n\t\t]).then(([lang, langSign, countries]) => {\n\t\t\tconst strings: LangPackString[] = [];\n\t\t\tformatLocalStrings(lang.default, strings);\n\t\t\tformatLocalStrings(langSign.default, strings);\n\n\t\t\tconst langPack: LangPackDifference = {\n\t\t\t\t_: 'langPackDifference',\n\t\t\t\tfrom_version: 0,\n\t\t\t\tlang_code: defaultCode,\n\t\t\t\tstrings,\n\t\t\t\tversion: 0,\n\t\t\t\tlocal: true,\n\t\t\t\tcountries: countries.default\n\t\t\t};\n\t\t\treturn saveLangPack(langPack);\n\t\t});\n\t}\n\n\texport function loadLangPack(langCode: string) {\n\t\trequestedServerLanguage = true;\n    const managers = rootScope.managers;\n\t\treturn Promise.all([\n\t\t\tmanagers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\tlang_pack: App.langPack\n\t\t\t}),\n\t\t\tmanagers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\tlang_pack: 'android'\n\t\t\t}),\n\t\t\timport('../lang'),\n\t\t\timport('../langSign'),\n\t\t\tmanagers.apiManager.invokeApiCacheable('help.getCountriesList', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\thash: 0\n\t\t\t}) as Promise<HelpCountriesList.helpCountriesList>,\n\t\t\tpolyfillPromise,\n\t\t]);\n\t}\n\n\texport function getStrings(langCode: string, strings: string[]) {\n\t\treturn rootScope.managers.apiManager.invokeApi('langpack.getStrings', {\n\t\t\tlang_pack: App.langPack,\n\t\t\tlang_code: langCode,\n\t\t\tkeys: strings\n\t\t});\n\t}\n\n\texport function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\n\t\tfor(const i in strings) {\n\t\t\t// @ts-ignore\n\t\t\tconst v = strings[i];\n\t\t\tif(typeof(v) === 'string') {\n\t\t\t\tpushTo.push({\n\t\t\t\t\t_: 'langPackString',\n\t\t\t\t\tkey: i,\n\t\t\t\t\tvalue: v\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpushTo.push({\n\t\t\t\t\t_: 'langPackStringPluralized',\n\t\t\t\t\tkey: i,\n\t\t\t\t\t...v\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn pushTo;\n\t}\n\n\texport function getLangPack(langCode: string) {\n\t\tlastRequestedLangCode = langCode;\n\t\treturn loadLangPack(langCode).then(([langPack1, langPack2, localLangPack1, localLangPack2, countries, _]) => {\n\t\t\tlet strings: LangPackString[] = [];\n\n\t\t\t[localLangPack1, localLangPack2].forEach((l) => {\n\t\t\t\tformatLocalStrings(l.default as any, strings);\n\t\t\t});\n\n\t\t\tstrings = strings.concat(langPack1.strings);\n\n\t\t\tfor(const string of langPack2.strings) {\n\t\t\t\tstrings.push(string);\n\t\t\t}\n\n\t\t\tlangPack1.strings = strings;\n\t\t\tlangPack1.countries = countries;\n\t\t\treturn saveLangPack(langPack1);\n\t\t});\n\t}\n\n\texport function saveLangPack(langPack: LangPackDifference) {\n\t\tlangPack.appVersion = App.langPackVersion;\n\n\t\treturn stateStorage.set({langPack}).then(() => {\n\t\t\tapplyLangPack(langPack);\n\t\t\treturn langPack;\n\t\t});\n\t}\n\n\texport const polyfillPromise = (function checkIfPolyfillNeeded() {\n\t\tif(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn import('./pluralPolyfill').then((_Intl) => {\n\t\t\t\t(window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\n\t\t\t});\n\t\t}\n\t})();\n\t\n\texport function applyLangPack(langPack: LangPackDifference) {\n\t\tif(langPack.lang_code !== lastRequestedLangCode) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code);\n\t\t} catch(err) {\n\t\t\tconsole.error('pluralRules error', err);\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\n\t\t}\n\n\t\tstrings.clear();\n\n\t\tfor(const string of langPack.strings) {\n\t\t\tstrings.set(string.key as LangPackKey, string);\n\t\t}\n\n\t\tif(langPack.countries) {\n\t\t\tcountriesList.length = 0;\n\t\t\tcountriesList.push(...langPack.countries.countries);\n\n\t\t\tlangPack.countries.countries.forEach((country) => {\n\t\t\t\tif(country.name) {\n\t\t\t\t\tconst langPackKey: any = country.default_name;\n\t\t\t\t\tstrings.set(langPackKey, {\n\t\t\t\t\t\t_: 'langPackString',\n\t\t\t\t\t\tkey: langPackKey,\n\t\t\t\t\t\tvalue: country.name\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif(lastAppliedLangCode !== langPack.lang_code) {\n\t\t\trootScope.dispatchEvent('language_change', langPack.lang_code);\n\t\t\tlastAppliedLangCode = langPack.lang_code;\n      cachedDateTimeFormats.clear();\n      updateAmPm();\n\t\t}\n\n\t\tconst elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n\t\telements.forEach((element) => {\n\t\t\tconst instance = weakMap.get(element);\n\n\t\t\tif(instance) {\n\t\t\t\tinstance.update();\n\t\t\t}\n\t\t});\n\t}\n\n  function pushNextArgument(out: ReturnType<typeof superFormatter>, args: FormatterArguments, indexHolder: {i: number}) {\n    const arg = args[indexHolder.i++];\n\t\tif(Array.isArray(arg)) {\n\t\t\tout.push(...arg as any);\n\t\t} else {\n\t\t\tout.push(arg);\n\t\t}\n  }\n\n\texport function superFormatter(input: string, args?: FormatterArguments, indexHolder = {i: 0}): Exclude<FormatterArgument, FormatterArgument[]>[] {\n\t\tlet out: ReturnType<typeof superFormatter> = [];\n\t\tconst regExp = /(\\*\\*|__)(.+?)\\1|(\\n)|(\\[.+?\\]\\(.*?\\))|un\\d|%\\d\\$.|%./g;\n\n\t\tlet lastIndex = 0;\n\t\tinput.replace(regExp, (match, p1: any, p2: any, p3: any, p4: string, offset: number, string: string) => {\n\t\t\t//console.table({match, p1, p2, offset, string});\n\n\t\t\tout.push(string.slice(lastIndex, offset));\n\n\t\t\tif(p1) {\n\t\t\t\t//offset += p1.length;\n        let element: HTMLElement;\n\t\t\t\tswitch(p1) {\n\t\t\t\t\tcase '**': {\n            element = document.createElement('b');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n          case '__': {\n            element = document.createElement('i');\n            break;\n          }\n\t\t\t\t}\n\n        element.append(...superFormatter(p2, args, indexHolder) as any);\n        out.push(element);\n\t\t\t} else if(p3) {\n\t\t\t\tout.push(document.createElement('br'));\n\t\t\t} else if(p4) {\n        const idx = p4.lastIndexOf(']');\n\t\t\t\tconst text = p4.slice(1, idx);\n        \n\t\t\t\tconst url = p4.slice(idx + 2, p4.length - 1);\n        let a: HTMLAnchorElement;\n\t\t\t\tif(url && matchUrlProtocol(url)) {\n          a = document.createElement('a');\n          const wrappedUrl = wrapUrl(url);\n          a.href = wrappedUrl.url;\n          if(wrappedUrl.onclick) a.setAttribute('onclick', wrappedUrl.onclick);\n          a.target = '_blank';\n\t\t\t\t} else {\n          a = args[indexHolder.i++] as HTMLAnchorElement;\n          a.textContent = ''; // reset content\n        }\n\n        a.append(...superFormatter(text, args, indexHolder) as any);\n\n\t\t\t\tout.push(a);\n\t\t\t} else if(args) {\n        pushNextArgument(out, args, indexHolder);\n\t\t\t}\n\n\t\t\tlastIndex = offset + match.length;\n\t\t\treturn '';\n\t\t});\n\t\n\t\tif(lastIndex !== input.length) {\n\t\t\tout.push(input.slice(lastIndex));\n\t\t}\n\n\t\treturn out;\n\t}\n\t\n\texport function format(key: LangPackKey, plain: true, args?: FormatterArguments): string;\n\texport function format(key: LangPackKey, plain?: false, args?: FormatterArguments): ReturnType<typeof superFormatter>;\n\texport function format(key: LangPackKey, plain = false, args?: FormatterArguments): ReturnType<typeof superFormatter> | string {\n\t\tconst str = strings.get(key);\n\t\tlet input: string;\n\t\tif(str) {\n\t\t\tif(str._ === 'langPackStringPluralized' && args?.length) {\n\t\t\t\tlet v = args[0] as number | string;\n\t\t\t\tif(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\n\t\t\t\tconst s = pluralRules.select(v);\n\t\t\t\t// @ts-ignore\n\t\t\t\tinput = str[s + '_value'] || str['other_value'];\n\t\t\t} else if(str._ === 'langPackString') {\n\t\t\t\tinput = str.value;\n\t\t\t} else {\n\t\t\t\t//input = '[' + key + ']';\n\t\t\t\tinput = key;\n\t\t\t}\n\t\t} else {\n\t\t\t//input = '[' + key + ']';\n\t\t\tinput = key;\n\t\t}\n\n    const result = superFormatter(input, args);\n    if(plain) { // * let's try a hack now... (don't want to replace []() entity)\n      return result.map((item) => item instanceof Node ? item.textContent : item).join('');\n    } else {\n      return result;\n    }\n\t\t\n\t\t/* if(plain) {\n\t\t\tif(args?.length) {\n\t\t\t\tconst regExp = /un\\d|%\\d\\$.|%./g;\n\t\t\t\tlet i = 0;\n\t\t\t\tinput = input.replace(regExp, (match, offset, string) => {\n\t\t\t\t\treturn '' + args[i++];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn input;\n\t\t} else {\n\t\t\treturn superFormatter(input, args);\n\t\t} */\n\t}\n\n\texport const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\n\n\texport type IntlElementBaseOptions = {\n\t\telement?: HTMLElement,\n\t\tproperty?: 'innerText' | 'innerHTML' | 'placeholder' | 'textContent',\n\t};\n\n\tabstract class IntlElementBase<Options extends IntlElementBaseOptions> {\n\t\tpublic element: IntlElementBaseOptions['element'];\n\t\tpublic property: IntlElementBaseOptions['property'];\n\t\n\t\tconstructor(options?: Options) {\n\t\t\tthis.element = options?.element || document.createElement('span');\n\t\t\tthis.element.classList.add('i18n');\n\t\t\t\n      this.property = options?.property;\n      if(options && ((options as any as IntlElementOptions).key || (options as any as IntlDateElementOptions).date)) {\n        this.update(options);\n      }\n\n\t\t\tweakMap.set(this.element, this);\n\t\t}\n\n\t\tabstract update(options?: Options): void;\n\t}\n\n\texport type IntlElementOptions = IntlElementBaseOptions & {\n\t\tkey?: LangPackKey,\n\t\targs?: FormatterArguments\n\t};\n\texport class IntlElement extends IntlElementBase<IntlElementOptions> {\n\t\tpublic key: IntlElementOptions['key'];\n\t\tpublic args: IntlElementOptions['args'];\n\n    constructor(options: IntlElementOptions = {}) {\n      super({...options, property: options.property ?? 'innerHTML'});\n    }\n\n\t\tpublic update(options?: IntlElementOptions) {\n\t\t\tsafeAssign(this, options);\n\t\n\t\t\tif(this.property === 'innerHTML') {\n\t\t\t\tthis.element.textContent = '';\n\t\t\t\tthis.element.append(...format(this.key, false, this.args) as any);\n\t\t\t} else {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst v = this.element[this.property];\n\t\t\t\tconst formatted = format(this.key, true, this.args);\n\n\t\t\t\t// * hasOwnProperty won't work here\n\t\t\t\tif(v === undefined) this.element.dataset[this.property] = formatted;\n\t\t\t\telse (this.element as HTMLInputElement)[this.property] = formatted;\n\t\t\t}\n\t\t}\n\n    public compareAndUpdate(options?: IntlElementOptions) {\n      if(this.key === options.key && deepEqual(this.args, options.args)) {\n        return;\n      }\n\n      return this.update(options);\n    }\n\t}\n\n  const cachedDateTimeFormats: Map<string, Intl.DateTimeFormat> = new Map();\n  function getDateTimeFormat(options: Intl.DateTimeFormatOptions = {}) {\n    let json = JSON.stringify(options);\n    let dateTimeFormat = cachedDateTimeFormats.get(json);\n    if(!dateTimeFormat) {\n      cachedDateTimeFormats.set(json, dateTimeFormat = new Intl.DateTimeFormat(lastRequestedLangCode + '-u-hc-' + timeFormat, options));\n    }\n\n    return dateTimeFormat;\n  }\n\n  export let amPmCache = {am: 'AM', pm: 'PM'};\n\texport type IntlDateElementOptions = IntlElementBaseOptions & {\n\t\tdate?: Date,\n\t\toptions: Intl.DateTimeFormatOptions\n\t};\n\texport class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\n\t\tpublic date: IntlDateElementOptions['date'];\n\t\tpublic options: IntlDateElementOptions['options'];\n\n    constructor(options: IntlDateElementOptions) {\n      super({...options, property: options.property ?? 'textContent'});\n    }\n\n\t\tpublic update(options?: IntlDateElementOptions) {\n\t\t\tsafeAssign(this, options);\n\t\n      let text: string;\n      if(this.options.hour && this.options.minute && Object.keys(this.options).length === 2/*  && false */) {\n        let hours = this.date.getHours();\n        text = ('0' + (timeFormat === 'h12' ? (hours % 12) || 12 : hours)).slice(-2) + ':' + ('0' + this.date.getMinutes()).slice(-2);\n        // if(this.options.second) {\n        //   text += ':' + ('0' + this.date.getSeconds()).slice(-2);\n        // }\n\n        if(timeFormat === 'h12') {\n          text += ' ' + (hours < 12 ? amPmCache.am : amPmCache.pm);\n        }\n      } else {\n        // * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\n        const dateTimeFormat = getDateTimeFormat(this.options);\n        text = capitalizeFirstLetter(dateTimeFormat.format(this.date));\n      }\n\n      (this.element as any)[this.property] = text;\n\t\t}\n\t}\n\n\texport function i18n(key: LangPackKey, args?: FormatterArguments) {\n\t\treturn new IntlElement({key, args}).element;\n\t}\n\t\n\texport function i18n_(options: IntlElementOptions) {\n\t\treturn new IntlElement(options).element;\n\t}\n\n\texport function _i18n(element: HTMLElement, key: LangPackKey, args?: FormatterArguments, property?: IntlElementOptions['property']) {\n\t\treturn new IntlElement({element, key, args, property}).element;\n\t}\n}\n\nexport {I18n};\nexport default I18n;\n\nconst i18n = I18n.i18n;\nexport {i18n};\n\nconst i18n_ = I18n.i18n_;\nexport {i18n_};\n\nconst _i18n = I18n._i18n;\nexport {_i18n};\n\nexport function joinElementsWith(elements: (Node | string)[], joiner: typeof elements[0] | ((isLast: boolean) => typeof elements[0])) {\n\tconst arr = elements.slice(0, 1);\n  for(let i = 1; i < elements.length; ++i) {\n    const isLast = (elements.length - 1) === i;\n    arr.push(typeof(joiner) === 'function' ? joiner(isLast) : joiner);\n    arr.push(elements[i]);\n  }\n\n\treturn arr;\n}\n\n\nexport function join(elements: (Node | string)[], useLast: boolean, plain: true): string;\nexport function join(elements: (Node | string)[], useLast?: boolean, plain?: false): (string | Node)[];\nexport function join(elements: (Node | string)[], useLast: boolean, plain: boolean): string | (string | Node)[];\nexport function join(elements: (Node | string)[], useLast = true, plain?: boolean): string | (string | Node)[] {\n\tconst joined = joinElementsWith(elements, (isLast) => {\n    const langPackKey: LangPackKey = isLast && useLast ? 'AutoDownloadSettings.LastDelimeter' : 'AutoDownloadSettings.Delimeter';\n    return plain ? I18n.format(langPackKey, true) : i18n(langPackKey);\n  });\n\n  return plain ? joined.join('') : joined;\n}\n\nMOUNT_CLASS_TO.I18n = I18n;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport I18n, { i18n } from \"../lib/langPack\";\r\n\r\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nexport const ONE_DAY = 86400;\r\n\r\n// https://stackoverflow.com/a/6117889\r\nexport const getWeekNumber = (date: Date) => {\r\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n  const dayNum = d.getUTCDay() || 7;\r\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\r\n};\r\n\r\nexport function formatDateAccordingToTodayNew(time: Date) {\r\n  const today = new Date();\r\n  const now = today.getTime() / 1000 | 0;\r\n  const timestamp = time.getTime() / 1000 | 0;\r\n\r\n  const options: Intl.DateTimeFormatOptions = {};\r\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\r\n    options.hour = options.minute = '2-digit';\r\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\r\n    options.year = options.day = 'numeric';\r\n    options.month = '2-digit';\r\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\r\n    options.weekday = 'short';\r\n  } else { // same year\r\n    options.month = 'short';\r\n    options.day = 'numeric';\r\n  }\r\n\r\n  return new I18n.IntlDateElement({\r\n    date: time,\r\n    options\r\n  }).element;\r\n}\r\n\r\nexport function formatFullSentTimeRaw(timestamp: number, options: {\r\n  capitalize?: boolean\r\n} = {}) {\r\n  const date = new Date();\r\n  const time = new Date(timestamp * 1000);\r\n  const now = date.getTime() / 1000;\r\n\r\n  const timeEl = formatTime(time);\r\n\r\n  let dateEl: Node | string;\r\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\r\n    dateEl = i18n(options.capitalize ? 'Date.Today' : 'Peer.Status.Today');\r\n  } else if((now - timestamp) < (ONE_DAY * 2) && (date.getDate() - 1) === time.getDate()) { // yesterday\r\n    dateEl = i18n(options.capitalize ? 'Yesterday' : 'Peer.Status.Yesterday');\r\n\r\n    if(options.capitalize) {\r\n      (dateEl as HTMLElement).style.textTransform = 'capitalize';\r\n    }\r\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\r\n    dateEl = new I18n.IntlDateElement({\r\n      date: time,\r\n      options: {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      }\r\n    }).element;\r\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate() + ', ' + time.getFullYear();\r\n  } else {\r\n    dateEl = new I18n.IntlDateElement({\r\n      date: time,\r\n      options: {\r\n        month: 'short',\r\n        day: 'numeric'\r\n      }\r\n    }).element;\r\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate();\r\n  }\r\n\r\n  return {dateEl, timeEl};\r\n}\r\n\r\nexport function formatFullSentTime(timestamp: number) {\r\n  const {dateEl, timeEl} = formatFullSentTimeRaw(timestamp, {\r\n    capitalize: true\r\n  });\r\n\r\n  const fragment = document.createDocumentFragment();\r\n  fragment.append(dateEl, ' ', i18n('ScheduleController.at'), ' ', timeEl);\r\n  return fragment;\r\n}\r\n\r\nexport function formatTime(date: Date) {\r\n  return new I18n.IntlDateElement({\r\n    date,\r\n    options: {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }\r\n  }).element;\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\r\n\r\nexport const getFullDate = (date: Date, options: Partial<{\r\n  noTime: true, \r\n  noSeconds: true,\r\n  monthAsNumber: true,\r\n  leadingZero: true\r\n}> = {}) => {\r\n  const joiner = options.monthAsNumber ? '.' : ' ';\r\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\r\n\r\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) + \r\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) + \r\n    joiner + date.getFullYear() + \r\n    (options.noTime ? '' : ', ' + time);\r\n};\r\n\r\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\r\nconst minYear = 2013;\r\nconst yearPattern = new RegExp(\"20[0-9]{1,2}\");\r\nconst monthYearOrDayPattern = new RegExp(\"(\\\\w{3,}) ([0-9]{0,4})\", 'i');\r\nconst yearOrDayAndMonthPattern = new RegExp(\"([0-9]{0,4}) (\\\\w{2,})\", 'i');\r\nconst shortDate = new RegExp(\"^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\r\nconst longDate = new RegExp(\"^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\r\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nexport type DateData = {\r\n  title: string,\r\n  minDate: number,\r\n  maxDate: number,\r\n};\r\nexport function fillTipDates(query: string, dates: DateData[]) {\r\n  const q = query.trim().toLowerCase();\r\n\r\n  if(q.length < 3) {\r\n    return;\r\n  }\r\n\r\n  if(\"today\".indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: 'Today',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  if(\"yesterday\".indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime() - 86400000;\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 86400001;\r\n    dates.push({\r\n      title: 'Yesterday',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  const dayOfWeek = getDayOfWeek(q);\r\n  if(dayOfWeek >= 0) {\r\n    const date = new Date();\r\n    const now = date.getTime();\r\n    const currentDay = date.getDay();\r\n    const distance = dayOfWeek - currentDay;\r\n    date.setDate(date.getDate() + distance);\r\n    if(date.getTime() > now) {\r\n      date.setTime(date.getTime() - 604800000);\r\n    }\r\n    const year = date.getFullYear()\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: formatWeekLong(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  let matches: any[];\r\n  if((matches = shortDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const k = parseInt(g1);\r\n    const k1 = parseInt(g2);\r\n    if(k > 0 && k <= 31) {\r\n      if(k1 >= minYear && k <= 12) {\r\n        const selectedYear = k1;\r\n        const month = k - 1;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      } else if (k1 <= 12) {\r\n        const day = k - 1;\r\n        const month = k1 - 1;\r\n        createForDayMonth(dates, day, month);\r\n      }\r\n    } else if (k >= minYear && k1 <= 12) {\r\n      const selectedYear = k;\r\n      const month = k1 - 1;\r\n      createForMonthYear(dates, month, selectedYear);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = longDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const g3 = matches[5];\r\n    if(!matches[2] === matches[4]) {\r\n      return;\r\n    }\r\n\r\n    const day = parseInt(g1);\r\n    const month = parseInt(g2) - 1;\r\n    let year = parseInt(g3);\r\n    if(year >= 10 && year <= 99) {\r\n      year += 2000;\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(year, month, day);\r\n      date.setHours(0, 0, 0);\r\n      \r\n      const minDate = date.getTime();\r\n      date.setFullYear(year, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: formatterYearMax(minDate),\r\n        minDate,\r\n        maxDate\r\n      });\r\n      return;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = yearPattern.exec(q)) !== null) {\r\n    let selectedYear = +q;\r\n    const currentYear = new Date().getFullYear();\r\n    if(selectedYear < minYear) {\r\n      selectedYear = minYear;\r\n      for(let i = currentYear; i >= selectedYear; i--) {\r\n        const date = new Date();\r\n        date.setFullYear(i, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const minDate = date.getTime();\r\n        date.setFullYear(i + 1, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const maxDate = date.getTime() - 1;\r\n        dates.push({\r\n          title: '' + i,\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    } else if(selectedYear <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(selectedYear, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      date.setFullYear(selectedYear + 1, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: '' + selectedYear,\r\n        minDate,\r\n        maxDate\r\n      });\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g1);\r\n    if(month >= 0) {\r\n      const k = +g2;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if(k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g2);\r\n    if(month >= 0) {\r\n      const k = +g1;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if (k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\r\n  const currentYear = new Date().getFullYear();\r\n  const today = Date.now();\r\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\r\n    const date = new Date();\r\n    date.setFullYear(selectedYear, month, 1);\r\n    date.setHours(0, 0, 0);\r\n    const minDate = date.getTime();\r\n    if(minDate > today) {\r\n      return;\r\n    }\r\n    date.setMonth(date.getMonth() + 1);\r\n    const maxDate = date.getTime() - 1;\r\n\r\n    dates.push({\r\n      title: formatterMonthYear(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n  }\r\n}\r\n\r\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\r\n  if(validDateForMonth(day, month)) {\r\n    const currentYear = new Date().getFullYear();\r\n    const today = Date.now();\r\n    \r\n    for(let i = currentYear; i >= minYear; i--) {\r\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\r\n        continue;\r\n      }\r\n\r\n      const date = new Date();\r\n      date.setFullYear(i, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n      \r\n      const minDate = date.getTime();\r\n      if(minDate > today) {\r\n        continue;\r\n      }\r\n\r\n      date.setFullYear(i, month, day + 2);\r\n      date.setHours(0, 0, 0);\r\n      const maxDate = date.getTime() - 1;\r\n      if(i === currentYear) {\r\n        dates.push({\r\n          title: formatterDayMonth(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      } else {\r\n        dates.push({\r\n          title: formatterYearMax(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatterMonthYear(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getFullYear();\r\n}\r\n\r\nfunction formatterDayMonth(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getDate();\r\n}\r\n\r\nfunction formatterYearMax(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\r\n}\r\n\r\nfunction formatWeekLong(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return days[date.getDay()];\r\n}\r\n\r\nfunction validDateForMonth(day: number, month: number) {\r\n  if(month >= 0 && month < 12) {\r\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isLeapYear(year: number) {\r\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n}\r\n\r\nfunction getMonth(q: string) {\r\n  /* String[] months = new String[]{\r\n          LocaleController.getString(\"January\", R.string.January).toLowerCase(),\r\n          LocaleController.getString(\"February\", R.string.February).toLowerCase(),\r\n          LocaleController.getString(\"March\", R.string.March).toLowerCase(),\r\n          LocaleController.getString(\"April\", R.string.April).toLowerCase(),\r\n          LocaleController.getString(\"May\", R.string.May).toLowerCase(),\r\n          LocaleController.getString(\"June\", R.string.June).toLowerCase(),\r\n          LocaleController.getString(\"July\", R.string.July).toLowerCase(),\r\n          LocaleController.getString(\"August\", R.string.August).toLowerCase(),\r\n          LocaleController.getString(\"September\", R.string.September).toLowerCase(),\r\n          LocaleController.getString(\"October\", R.string.October).toLowerCase(),\r\n          LocaleController.getString(\"November\", R.string.November).toLowerCase(),\r\n          LocaleController.getString(\"December\", R.string.December).toLowerCase()\r\n  }; */\r\n\r\n  /* String[] monthsEng = new String[12];\r\n  Calendar c = Calendar.getInstance();\r\n  for (int i = 1; i <= 12; i++) {\r\n      c.set(0, 0, 0, 0, 0, 0);\r\n      c.set(Calendar.MONTH, i);\r\n      monthsEng[i - 1] = c.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.ENGLISH).toLowerCase();\r\n  } */\r\n\r\n  q = q.toLowerCase();\r\n  for(let i = 0; i < 12; i++) {\r\n    const month = months[i].toLowerCase();\r\n    if(month.indexOf(q) === 0) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction getDayOfWeek(q: string) {\r\n  const c = new Date();\r\n  if(q.length <= 3) {\r\n    return -1;\r\n  }\r\n  \r\n  for(let i = 0; i < 7; i++) {\r\n    c.setDate(c.getDate() + 1);\r\n    \r\n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\r\n      return c.getDay();\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\r\n","/**\n * Will be used for FILE_REFERENCE_EXPIRED\n * @param key \n * @param wasObject \n * @param newObject \n */\n export default function safeReplaceArrayInObject<K>(key: K, wasObject: any, newObject: any) {\n  if('byteLength' in newObject[key]) { // Uint8Array\n    newObject[key] = [...newObject[key]];\n  }\n\n  if(wasObject && wasObject[key] !== newObject[key]) {\n    wasObject[key].length = newObject[key].length;\n    (newObject[key] as any[]).forEach((v, i) => {\n      wasObject[key][i] = v;\n    });\n\n    /* wasObject[key].set(newObject[key]); */\n    newObject[key] = wasObject[key];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { AccountWallPapers, Document, MessagesSavedGifs, PhotoSize, WallPaper } from '../../layer';\nimport { ReferenceContext } from '../mtproto/referenceDatabase';\nimport { getFullDate } from '../../helpers/date';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport { AppManager } from './manager';\nimport wrapPlainText from '../richTextProcessor/wrapPlainText';\nimport assumeType from '../../helpers/assumeType';\nimport { getEnvironment } from '../../environment/utils';\nimport { isServiceWorkerOnline } from '../mtproto/mtproto.worker';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport getDocumentURL from './utils/docs/getDocumentURL';\nimport type { ThumbCache } from '../storages/thumbs';\n\nexport type MyDocument = Document.document;\n\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\n\nconst EXTENSION_MIME_TYPE_MAP = {\n  mov: 'video/quicktime',\n  gif: 'image/gif',\n  pdf: 'application/pdf',\n};\n\ntype WallPaperId = WallPaper.wallPaper['id'];\n\nlet uploadWallPaperTempId = 0;\n\nexport class AppDocsManager extends AppManager {\n  private docs: {[docId: DocId]: MyDocument};\n\n  private stickerCachedThumbs: {[docId: DocId]: {[toneIndex: number]: {url: string, w: number, h: number}}};\n\n  private uploadingWallPapers: {[id: WallPaperId]: {cacheContext: ThumbCache, file: File}};\n\n  protected after() {\n    this.docs = {};\n    this.stickerCachedThumbs = {};\n    this.uploadingWallPapers = {};\n\n    MTProtoMessagePort.getInstance<false>().addEventListener('serviceWorkerOnline', (online) => {\n      if(!online) {\n        this.onServiceWorkerFail();\n      }\n    });\n  }\n\n  private onServiceWorkerFail = () => {\n    for(const id in this.docs) {\n      const doc = this.docs[id];\n\n      if(doc.supportsStreaming) {\n        delete doc.supportsStreaming;\n        this.thumbsStorage.deleteCacheContext(doc);\n      }\n    }\n  };\n\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\n    if(!doc || doc._ === 'documentEmpty') {\n      return;\n    }\n\n    const oldDoc = this.docs[doc.id];\n\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\n      this.referenceDatabase.saveContext(doc.file_reference, context);\n    }\n    \n    //console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\n    // if(oldDoc) {\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\n    //     if(doc.thumbs) {\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\n    //         apiDoc.thumbs[0] = d.thumbs[0];\n    //       } */\n    //     }\n\n    //   //}\n\n    //   return oldDoc;\n\n    //   //return Object.assign(d, apiDoc, context);\n    //   //return context ? Object.assign(d, context) : d;\n    // }\n\n    if(!oldDoc) {\n      this.docs[doc.id] = doc;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name', \n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle', \n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw', \n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\n\n    for(let i = 0, length = doc.attributes.length; i < length; ++i) {\n      const attribute = doc.attributes[i];\n      switch(attribute._) {\n        case 'documentAttributeFilename':\n          doc.file_name = wrapPlainText(attribute.file_name);\n          break;\n\n        case 'documentAttributeAudio':\n          doc.duration = attribute.duration;\n          doc.type = attribute.pFlags.voice && doc.mime_type === 'audio/ogg' ? 'voice' : 'audio';\n          /* if(apiDoc.type === 'audio') {\n            apiDoc.supportsStreaming = true;\n          } */\n          break;\n\n        case 'documentAttributeVideo':\n          doc.duration = attribute.duration;\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          //apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\n            doc.type = 'round';\n          } else /* if(apiDoc.thumbs) */ {\n            doc.type = 'video';\n          }\n          break;\n\n        case 'documentAttributeSticker':\n          if(attribute.alt !== undefined) {\n            doc.stickerEmojiRaw = attribute.alt;\n          }\n\n          if(attribute.stickerset) {\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\n              delete attribute.stickerset;\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\n              doc.stickerSetInput = attribute.stickerset;\n            }\n          }\n\n          // * there can be no thumbs, then it is a document\n          if(/* apiDoc.thumbs &&  */doc.mime_type === 'image/webp' && (doc.thumbs || getEnvironment().IS_WEBP_SUPPORTED)) {\n            doc.type = 'sticker';\n            doc.sticker = 1;\n          } else if(doc.mime_type === 'video/webm') {\n            if(!getEnvironment().IS_WEBM_SUPPORTED) {\n              return;\n            }\n\n            doc.type = 'sticker';\n            doc.sticker = 3;\n            doc.animated = true;\n          }\n          break;\n\n        case 'documentAttributeImageSize':\n          doc.type = 'photo';\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          break;\n\n        case 'documentAttributeAnimated':\n          if((doc.mime_type === 'image/gif' || doc.mime_type === 'video/mp4')/*  && apiDoc.thumbs */) {\n            doc.type = 'gif';\n          }\n\n          doc.animated = true;\n          break;\n      }\n    }\n    \n    if(!doc.mime_type) {\n      const ext = (doc.file_name || '').split('.').pop();\n      // @ts-ignore\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase()];\n      if(mappedMimeType) {\n        doc.mime_type = mappedMimeType;\n      } else {\n        switch(doc.type) {\n          case 'gif':\n          case 'video':\n          case 'round':\n            doc.mime_type = 'video/mp4';\n            break;\n          case 'sticker':\n            doc.mime_type = 'image/webp';\n            break;\n          case 'audio':\n            doc.mime_type = 'audio/mpeg';\n            break;\n          case 'voice':\n            doc.mime_type = 'audio/ogg';\n            break;\n          default:\n            doc.mime_type = 'application/octet-stream';\n            break;\n        }\n      }\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\n      doc.type = 'pdf';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\n      doc.type = 'gif';\n    }\n\n    if(doc.type === 'voice' || doc.type === 'round') {\n      // browser will identify extension\n      doc.file_name = doc.type + '_' + getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\n    }\n\n    if(isServiceWorkerOnline()) {\n      if((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video'/*  || doc.mime_type.indexOf('video/') === 0 */) {\n        doc.supportsStreaming = true;\n        \n        const cacheContext = this.thumbsStorage.getCacheContext(doc);\n        if(!cacheContext.url) {\n          this.thumbsStorage.setCacheContextURL(doc, undefined, getDocumentURL(doc), 0);\n        }\n      }\n    }\n\n    // for testing purposes\n    // doc.supportsStreaming = false;\n    // doc.url = ''; // * this will break upload urls\n    \n    if(!doc.file_name) {\n      doc.file_name = '';\n    }\n\n    if(doc.mime_type === 'application/x-tgsticker' && doc.file_name === 'AnimatedSticker.tgs') {\n      doc.type = 'sticker';\n      doc.animated = true;\n      doc.sticker = 2;\n    }\n\n    /* if(!doc.url) {\n      doc.url = this.getFileURL(doc);\n    } */\n\n    if(oldDoc) {\n      return Object.assign(oldDoc, doc);\n    }\n\n    return doc;\n  }\n  \n  public getDoc(docId: DocId | MyDocument): MyDocument {\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\n  }\n\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean) {\n    return this.apiFileManager.downloadMedia({\n      media: doc,\n      queueId,\n      onlyCache\n    });\n  }\n\n  public getLottieCachedThumb(docId: DocId, toneIndex: number) {\n    const cached = this.stickerCachedThumbs[docId];\n    return cached && cached[toneIndex];\n  }\n\n  public saveLottiePreview(docId: DocId, blob: Blob, width: number, height: number, toneIndex: number) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const cached = this.stickerCachedThumbs[doc.id] ??= {};\n  \n    const thumb = cached[toneIndex];\n    if(thumb && thumb.w >= width && thumb.h >= height) {\n      return;\n    }\n\n    cached[toneIndex] = {\n      url: URL.createObjectURL(blob),\n      w: width,\n      h: height\n    };\n  }\n\n  public saveWebPConvertedStrippedThumb(docId: DocId, bytes: Uint8Array) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const thumb = doc.thumbs && doc.thumbs.find((thumb) => thumb._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n    if(!thumb) {\n      return;\n    }\n\n    doc.pFlags.stickerThumbConverted = true;\n    thumb.bytes = bytes;\n  }\n\n  public getWallPapers() {\n    return this.apiManager.invokeApiHashable({method: 'account.getWallPapers'}).then((accountWallpapers) => {\n      const wallPapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers as WallPaper.wallPaper[];\n      wallPapers.forEach((wallPaper) => {\n        wallPaper.document = this.saveDoc(wallPaper.document);\n      });\n\n      return wallPapers;\n    });\n  }\n\n  public prepareWallPaperUpload(file: File) {\n    const id = 'wallpaper-upload-' + ++uploadWallPaperTempId;\n\n    const thumb = {\n      _: 'photoSize',\n      h: 0,\n      w: 0,\n      location: {} as any,\n      size: file.size,\n      type: 'full',\n    } as PhotoSize.photoSize;\n    let document: MyDocument = {\n      _: 'document',\n      access_hash: '',\n      attributes: [],\n      dc_id: 0,\n      file_reference: [],\n      id,\n      mime_type: file.type,\n      size: file.size,\n      date: Date.now() / 1000,\n      pFlags: {},\n      thumbs: [thumb],\n      file_name: file.name\n    };\n\n    document = this.saveDoc(document);\n\n    const cacheContext = this.thumbsStorage.setCacheContextURL(document, undefined, URL.createObjectURL(file), file.size);\n\n    const wallpaper: WallPaper.wallPaper = {\n      _: 'wallPaper',\n      access_hash: '',\n      document: document,\n      id,\n      slug: id,\n      pFlags: {}\n    };\n\n    this.uploadingWallPapers[id] = {\n      cacheContext,\n      file,\n    };\n\n    return wallpaper;\n  }\n\n  public uploadWallPaper(id: WallPaperId) {\n    const {cacheContext, file} = this.uploadingWallPapers[id];\n    delete this.uploadingWallPapers[id];\n\n    const upload = this.apiFileManager.upload({file, fileName: file.name});\n    return upload.then((inputFile) => {\n      return this.apiManager.invokeApi('account.uploadWallPaper', {\n        file: inputFile,\n        mime_type: file.type,\n        settings: {\n          _: 'wallPaperSettings',\n          \n        }\n      }).then((wallPaper) => {\n        assumeType<WallPaper.wallPaper>(wallPaper);\n        wallPaper.document = this.saveDoc(wallPaper.document);\n        this.thumbsStorage.setCacheContextURL(wallPaper.document, undefined, cacheContext.url, cacheContext.downloaded);\n\n        return wallPaper;\n      });\n    });\n  }\n\n  public getGifs() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getSavedGifs',\n      processResult: (res) => {\n        assumeType<MessagesSavedGifs.messagesSavedGifs>(res);\n        return res.gifs.map((doc) => this.saveDoc(doc));\n      }\n    });\n  }\n\n  public requestDocPart(docId: DocId, dcId: number, offset: number, limit: number) {\n    const doc = this.getDoc(docId);\n    return this.apiFileManager.requestFilePart(dcId, getDocumentInput(doc), offset, limit);\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { FileURLType, getFileURL } from \"../../../../helpers/fileName\";\r\nimport { Document, PhotoSize } from \"../../../../layer\";\r\nimport getDocumentDownloadOptions from \"./getDocumentDownloadOptions\";\r\n\r\nexport default function getDocumentURL(doc: Document.document, download = false, thumb?: PhotoSize.photoSize) {\r\n  let type: FileURLType;\r\n  if(download) {\r\n    type = 'download';\r\n  } else if(thumb) {\r\n    type = 'thumb';\r\n  } else if(doc.supportsStreaming) {\r\n    type = 'stream';\r\n  } else {\r\n    type = 'document';\r\n  }\r\n\r\n  return getFileURL(type, getDocumentDownloadOptions(doc, thumb));\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity, DraftMessage, MessagesSaveDraft } from \"../../layer\";\r\nimport tsNow from \"../../helpers/tsNow\";\r\nimport stateStorage from \"../stateStorage\";\r\nimport assumeType from \"../../helpers/assumeType\";\r\nimport isObject from \"../../helpers/object/isObject\";\r\nimport deepEqual from \"../../helpers/object/deepEqual\";\r\nimport { AppManager } from \"./manager\";\r\nimport getPeerId from \"./utils/peers/getPeerId\";\r\nimport generateMessageId from \"./utils/messageId/generateMessageId\";\r\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\r\n\r\nexport type MyDraftMessage = DraftMessage.draftMessage;\r\n\r\nexport class AppDraftsManager extends AppManager {\r\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage} = {};\r\n  private getAllDraftPromise: Promise<void> = null;\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateDraftMessage: (update) => {\r\n        const peerId = getPeerId(update.peer);\r\n        this.saveDraft(peerId, update.threadId, update.draft, {notify: true});\r\n      }\r\n    });\r\n\r\n    /* return  */stateStorage.get('drafts').then((drafts) => {\r\n      this.drafts = drafts || {};\r\n    });\r\n  }\r\n\r\n  private getKey(peerId: PeerId, threadId?: number) {\r\n    return '' + peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public getDraft(peerId: PeerId, threadId?: number) {\r\n    return this.drafts[this.getKey(peerId, threadId)];\r\n  }\r\n\r\n  public addMissedDialogs() {\r\n    return this.getAllDrafts().then(() => {\r\n      for(const key in this.drafts) {\r\n        if(key.indexOf('_') !== -1) { // exclude threads\r\n          continue;\r\n        }\r\n\r\n        const peerId = key.toPeerId();\r\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n        if(!dialog) {\r\n          this.appMessagesManager.reloadConversation(peerId);\r\n          /* const dialog = appMessagesManager.generateDialog(peerId);\r\n          dialog.draft = this.drafts[key];\r\n          appMessagesManager.saveConversation(dialog);\r\n          appMessagesManager.newDialogsToHandle[peerId] = dialog;\r\n          appMessagesManager.scheduleHandleNewDialogs(); */\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAllDrafts() {\r\n    return this.getAllDraftPromise || (\r\n      this.getAllDraftPromise = this.apiManager.invokeApi('messages.getAllDrafts')\r\n      .then((updates) => {\r\n        const p = this.apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\r\n        p.then(() => {\r\n          this.apiUpdatesManager.processUpdateMessage(updates);\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  public saveDraft(peerId: PeerId, threadId: number, apiDraft: DraftMessage, options: Partial<{\r\n    notify: boolean,\r\n    force: boolean\r\n  }> = {}) {\r\n    const draft = this.processApiDraft(apiDraft);\r\n\r\n    const key = this.getKey(peerId, threadId);\r\n    if(draft) {\r\n      this.drafts[key] = draft;\r\n    } else {\r\n      delete this.drafts[key];\r\n    }\r\n\r\n    stateStorage.set({\r\n      drafts: this.drafts\r\n    });\r\n\r\n    if(options.notify) {\r\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\r\n      this.rootScope.dispatchEvent('draft_updated', {\r\n        peerId,\r\n        threadId,\r\n        draft,\r\n        force: options.force\r\n      });\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  private draftsAreEqual(draft1: DraftMessage, draft2: DraftMessage) {\r\n    if(typeof(draft1) !== typeof(draft2)) {\r\n      return false;\r\n    }\r\n\r\n    if(!isObject(draft1)) {\r\n      return true;\r\n    }\r\n\r\n    if(draft1._ !== draft2._) {\r\n      return false;\r\n    }\r\n  \r\n    if(draft1._ === 'draftMessage' && draft2._ === draft1._) {\r\n      if(draft1.reply_to_msg_id !== draft2.reply_to_msg_id) {\r\n        return false;\r\n      }\r\n  \r\n      if(!deepEqual(draft1.entities, draft2.entities)) {\r\n        return false;\r\n      }\r\n  \r\n      if(draft1.message !== draft2.message) {\r\n        return false;\r\n      }\r\n  \r\n      if(draft1.pFlags.no_webpage !== draft2.pFlags.no_webpage) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private isEmptyDraft(draft: DraftMessage) {\r\n    if(!draft || draft._ === 'draftMessageEmpty') {\r\n      return true;\r\n    }\r\n    \r\n    if(draft.reply_to_msg_id > 0) {\r\n      return false;\r\n    }\r\n    \r\n    if(!draft.message.length) {\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  private processApiDraft(draft: DraftMessage): MyDraftMessage {\r\n    if(!draft || draft._ !== 'draftMessage') {\r\n      return undefined;\r\n    }\r\n\r\n    if(draft.reply_to_msg_id) {\r\n      draft.reply_to_msg_id = generateMessageId(draft.reply_to_msg_id);\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  public async syncDraft(peerId: PeerId, threadId: number, localDraft?: DraftMessage, saveOnServer = true, force = false) {\r\n    // console.warn(dT(), 'sync draft', peerID)\r\n    const serverDraft = this.getDraft(peerId, threadId);\r\n    if(this.draftsAreEqual(serverDraft, localDraft)) {\r\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\r\n      return true;\r\n    }\r\n\r\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\r\n    let params: MessagesSaveDraft = {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      message: ''\r\n    };\r\n\r\n    let draftObj: DraftMessage;\r\n    if(this.isEmptyDraft(localDraft)) {\r\n      draftObj = {_: 'draftMessageEmpty'};\r\n    } else {\r\n      assumeType<DraftMessage.draftMessage>(localDraft);\r\n      let message = localDraft.message;\r\n      let entities: MessageEntity[] = localDraft.entities;\r\n\r\n      if(localDraft.reply_to_msg_id) {\r\n        params.reply_to_msg_id = getServerMessageId(localDraft.reply_to_msg_id);\r\n      }\r\n\r\n      if(entities?.length) {\r\n        params.entities = this.appMessagesManager.getInputEntities(entities);\r\n      }\r\n\r\n      if(localDraft.pFlags.no_webpage) {\r\n        params.no_webpage = localDraft.pFlags.no_webpage;\r\n      }\r\n\r\n      params.message = message;\r\n    }\r\n\r\n    const saveLocalDraft = draftObj || localDraft;\r\n    saveLocalDraft.date = tsNow(true) + this.timeManager.getServerTimeOffset();\r\n\r\n    this.saveDraft(peerId, threadId, saveLocalDraft, {notify: true, force});\r\n\r\n    if(saveOnServer && !threadId) {\r\n      return this.apiManager.invokeApi('messages.saveDraft', params);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public clearAllDrafts() {\r\n    return this.apiManager.invokeApi('messages.clearAllDrafts').then((bool) => {\r\n      if(!bool) {\r\n        return;\r\n      }\r\n\r\n      for(const combined in this.drafts) {\r\n        const [peerId, threadId] = combined.split('_');\r\n        this.rootScope.dispatchEvent('draft_updated', {\r\n          peerId: peerId.toPeerId(),\r\n          threadId: threadId ? +threadId : undefined,\r\n          draft: undefined\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearDraft(peerId: PeerId, threadId: number) {\r\n    const emptyDraft: DraftMessage.draftMessageEmpty = {\r\n      _: 'draftMessageEmpty'\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, emptyDraft as any, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, emptyDraft, {notify: true, force: true});  \r\n    }\r\n  }\r\n\r\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\r\n    const draft: DraftMessage.draftMessage = {\r\n      _: 'draftMessage',\r\n      date: Date.now() / 1000 | 0,\r\n      message,\r\n      pFlags: {},\r\n      entities\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, draft, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, draft, {notify: true, force: true});  \r\n    }\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from \"../../config/app\";\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\nimport isObject from \"../../helpers/object/isObject\";\nimport validateInitObject from \"../../helpers/object/validateInitObject\";\nimport I18n from \"../langPack\";\nimport fixEmoji from \"../richTextProcessor/fixEmoji\";\nimport SearchIndex from \"../searchIndex\";\nimport stateStorage from \"../stateStorage\";\nimport { AppManager } from \"./manager\";\n\ntype EmojiLangPack = {\n  keywords: {\n    [keyword: string]: string[],\n  },\n  version: number,\n  langCode: string\n};\n\nconst EMOJI_LANG_PACK: EmojiLangPack = {\n  keywords: {},\n  version: 0,\n  langCode: App.langPackCode\n};\n\nconst RECENT_MAX_LENGTH = 36;\n\nexport class AppEmojiManager extends AppManager {\n  private static POPULAR_EMOJI = [\"😂\", \"😘\", \"❤️\", \"😍\", \"😊\", \"😁\", \"👍\", \"☺️\", \"😔\", \"😄\", \"😭\", \"💋\", \"😒\", \"😳\", \"😜\", \"🙈\", \"😉\", \"😃\", \"😢\", \"😝\", \"😱\", \"😡\", \"😏\", \"😞\", \"😅\", \"😚\", \"🙊\", \"😌\", \"😀\", \"😋\", \"😆\", \"👌\", \"😐\", \"😕\"];\n  private keywordLangPacks: {\n    [langCode: string]: EmojiLangPack\n  } = {};\n\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\n\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\n\n  private recent: string[];\n  private getRecentEmojisPromise: Promise<AppEmojiManager['recent']>;\n\n  /* public getPopularEmoji() {\n    return stateStorage.get('emojis_popular').then((popEmojis) => {\n      var result = []\n      if (popEmojis && popEmojis.length) {\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\n        }\n        callback(result)\n        return\n      }\n\n      return stateStorage.get('emojis_recent').then((recentEmojis) => {\n        recentEmojis = recentEmojis || popular || []\n        var shortcut\n        var code\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\n          shortcut = recentEmojis[i]\n          if (Array.isArray(shortcut)) {\n            shortcut = shortcut[0]\n          }\n          if (shortcut && typeof shortcut === 'string') {\n            if (shortcut.charAt(0) == ':') {\n              shortcut = shortcut.substr(1, shortcut.length - 2)\n            }\n            if (code = shortcuts[shortcut]) {\n              result.push({code: code, rate: 1})\n            }\n          }\n        }\n        callback(result)\n      });\n    });\n  }\n\n  function pushPopularEmoji (code) {\n    getPopularEmoji(function (popularEmoji) {\n      var exists = false\n      var count = popularEmoji.length\n      var result = []\n      for (var i = 0; i < count; i++) {\n        if (popularEmoji[i].code == code) {\n          exists = true\n          popularEmoji[i].rate++\n        }\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\n      }\n      if (exists) {\n        result.sort(function (a, b) {\n          return b[1] - a[1]\n        })\n      } else {\n        if (result.length > 41) {\n          result = result.slice(0, 41)\n        }\n        result.push([code, 1])\n      }\n      ConfigStorage.set({emojis_popular: result})\n    })\n  } */\n\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\n    const promise = this.getKeywordsPromises[langCode];\n    if(promise) {\n      return promise;\n    }\n\n    const storageKey: any = 'emojiKeywords_' + langCode;\n    return this.getKeywordsPromises[langCode] = stateStorage.get(storageKey).then((pack: EmojiLangPack) => {\n      if(!isObject(pack)) {\n        pack = {} as any;\n      }\n\n      validateInitObject(EMOJI_LANG_PACK, pack);\n\n      // important\n      pack.langCode = langCode;\n      this.keywordLangPacks[langCode] = pack;\n\n      return this.apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\n        lang_code: pack.langCode,\n        from_version: pack.version\n      }).then((keywordsDifference) => {\n        pack.version = keywordsDifference.version;\n        \n        const packKeywords = pack.keywords;\n        const keywords = keywordsDifference.keywords;\n        for(let i = 0, length = keywords.length; i < length; ++i) {\n          const {keyword, emoticons} = keywords[i];\n          packKeywords[keyword] = emoticons;\n        }\n\n        stateStorage.set({\n          [storageKey]: pack\n        });\n\n        return pack;\n      }, () => {\n        return pack;\n      });\n    });\n  }\n\n  public getBothEmojiKeywords() {\n    const promises: Promise<any>[] = [\n      this.getEmojiKeywords()\n    ];\n\n    if(I18n.lastRequestedLangCode !== App.langPackCode) {\n      promises.push(this.getEmojiKeywords(I18n.lastRequestedLangCode));\n    }\n\n    if(!this.recent) {\n      promises.push(this.getRecentEmojis());\n    }\n\n    return Promise.all(promises);\n  }\n\n  private indexEmojis() {\n    if(!this.index) {\n      this.index = new SearchIndex(undefined, 2);\n    }\n\n    for(const langCode in this.keywordLangPacks) {\n      if(this.indexedLangPacks[langCode]) {\n        continue;\n      }\n\n      const pack = this.keywordLangPacks[langCode];\n      const keywords = pack.keywords;\n\n      for(const keyword in keywords) {\n        const emoticons = keywords[keyword];\n        this.index.indexObject(emoticons, keyword);\n      }\n\n      this.indexedLangPacks[langCode] = true;\n    }\n  }\n\n  public searchEmojis(q: string) {\n    this.indexEmojis();\n\n    q = q.toLowerCase().replace(/_/g, ' ');\n    \n    //const perf = performance.now();\n    let emojis: Array<string>;\n    if(q.trim()) {\n      const set = this.index.search(q);\n      emojis = Array.from(set).reduce((acc, v) => acc.concat(v), []);\n    } else {\n      emojis = this.recent.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\n    }\n\n    emojis = Array.from(new Set(emojis));\n    //console.log('searchEmojis', q, 'time', performance.now() - perf);\n\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\n        emojis[i] += '\\ufe0f';\n      }\n    } */\n\n    return emojis;\n  }\n\n  public getRecentEmojis() {\n    if(this.getRecentEmojisPromise) return this.getRecentEmojisPromise;\n    return this.getRecentEmojisPromise = this.appStateManager.getState().then((state) => {\n      return this.recent = Array.isArray(state.recentEmoji) ? state.recentEmoji : [];\n    });\n  }\n\n  public pushRecentEmoji(emoji: string) {\n    emoji = fixEmoji(emoji);\n    this.getRecentEmojis().then((recent) => {\n      indexOfAndSplice(recent, emoji);\n      recent.unshift(emoji);\n      if(recent.length > RECENT_MAX_LENGTH) {\n        recent.length = RECENT_MAX_LENGTH;\n      }\n\n      this.appStateManager.pushToState('recentEmoji', recent);\n      this.rootScope.dispatchEvent('emoji_recent', emoji);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport type GroupCallConnectionInstance from \"../calls/groupCallConnectionInstance\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport { nextRandomUint } from \"../../helpers/random\";\nimport { DataJSON, GroupCall, GroupCallParticipant, GroupCallParticipantVideoSourceGroup, InputGroupCall, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates } from \"../../layer\";\nimport { logger } from \"../logger\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport { AppManager } from \"./manager\";\nimport getPeerId from \"./utils/peers/getPeerId\";\n\nexport type GroupCallId = GroupCall['id'];\nexport type MyGroupCall = GroupCall | InputGroupCall;\n\nexport type GroupCallConnectionType = 'main' | 'presentation';\n\nexport type JoinGroupCallJsonPayload = {\n  fingerprints: {\n    fingerprint: string;\n    setup: string;\n    hash: string;\n  }[];\n  pwd: string;\n  ssrc: number;\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\n  ufrag: string;\n};\n\nconst GET_PARTICIPANTS_LIMIT = 100;\n\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\n\nexport class AppGroupCallsManager extends AppManager {\n  private log: ReturnType<typeof logger>;\n  \n  private groupCalls: Map<GroupCallId, MyGroupCall>;\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\n  private nextOffsets: Map<GroupCallId, string>;\n  \n  // private doNotDispatchParticipantUpdate: PeerId;\n\n  protected after() {\n    this.log = logger('GROUP-CALLS');\n    \n    this.groupCalls = new Map();\n    this.participants = new Map();\n    this.nextOffsets = new Map();\n    \n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateGroupCall: (update) => {\n        this.saveGroupCall(update.call, update.chat_id);\n      },\n      \n      updateGroupCallParticipants: (update) => {\n        this.saveGroupCall(update.call);\n        \n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\n\n        const groupCallId = update.call.id;\n        this.saveApiParticipants(groupCallId, update.participants);\n      }\n    });\n\n    this.rootScope.addEventListener('group_call_update', (groupCall) => {\n      if(groupCall._ === 'groupCallDiscarded') {\n        this.participants.delete(groupCall.id);\n      }\n    });\n  }\n\n  public getCachedParticipants(groupCallId: GroupCallId) {\n    let participants = this.participants.get(groupCallId);\n    if(!participants) {\n      this.participants.set(groupCallId, participants = new Map());\n    }\n\n    return participants;\n  }\n\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\n    const nextOffsetsMap = this.nextOffsets;\n\n    const setNextOffset = (newNextOffset: string) => {\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\n        nextOffsetsMap.set(groupCallId, newNextOffset);\n      }\n    };\n\n    const nextOffset = nextOffsetsMap.get(groupCallId);\n    return {\n      nextOffset,\n      setNextOffset\n    };\n  }\n\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\n    const participants = this.getCachedParticipants(groupCallId);\n\n    const peerId = getPeerId(participant.peer);\n\n    const oldParticipant = participants.get(peerId);\n    const hasLeft = participant.pFlags.left;\n    if(!oldParticipant && hasLeft) {\n      return;\n    }\n\n    // * fix missing flag\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\n      participant.pFlags.can_self_unmute = true;\n    }\n\n    if(oldParticipant) {\n      safeReplaceObject(oldParticipant, participant);\n      participant = oldParticipant;\n    } else {\n      participants.set(peerId, participant);\n    }\n\n    // if(!skipCounterUpdating) {\n      const groupCall = this.getGroupCall(groupCallId);\n      if(groupCall?._ === 'groupCall') {\n        let modified = false;\n        if(hasLeft) {\n          --groupCall.participants_count;\n          modified = true;\n        } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\n          ++groupCall.participants_count;\n          modified = true;\n        }\n  \n        if(modified) {\n          this.rootScope.dispatchEvent('group_call_update', groupCall);\n        }\n      }\n    // }\n    \n    if(hasLeft) {\n      participants.delete(peerId);\n    }\n\n    if(oldParticipant || true/*  && this.doNotDispatchParticipantUpdate !== peerId */) {\n      this.rootScope.dispatchEvent('group_call_participant', {\n        groupCallId,\n        participant\n      });\n    }\n  }\n\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\n    if((apiParticipants as any).saved) return;\n    (apiParticipants as any).saved = true;\n    apiParticipants.forEach((p) => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\n  }\n\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\n    muted: boolean,\n    volume: number,\n    raiseHand: boolean,\n    videoStopped: boolean,\n    videoPaused: boolean,\n    presentationPaused: boolean\n  }>) {\n    this.saveApiParticipant(groupCallId, participant);\n\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : getPeerId(participant.peer);\n    const updates = await this.apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\n      call: this.getGroupCallInput(groupCallId),\n      participant: peerId === NULL_PEER_ID ? this.appPeersManager.getInputPeerSelf() : this.appPeersManager.getInputPeerById(peerId),\n      muted: options.muted,\n      volume: options.volume,\n      raise_hand: options.raiseHand,\n      video_paused: options.videoPaused,\n      video_stopped: options.videoStopped,\n      presentation_paused: options.presentationPaused\n    });\n    \n    // do not replace with peerId because it can be null\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = getPeerId(participant.peer);\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\n  }\n  \n  public getGroupCall(id: GroupCallId) {\n    return this.groupCalls.get(id);\n  }\n\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\n    const call = this.getGroupCall(id);\n    if(call && call._ !== 'inputGroupCall' && !override) {\n      return call;\n    }\n\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'phone.getGroupCall',\n      params: {\n        call: this.getGroupCallInput(id),\n        limit\n      },\n      processResult: (groupCall) => {\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\n        this.appUsersManager.saveApiUsers(groupCall.users);\n        this.appChatsManager.saveApiChats(groupCall.chats);\n        this.saveApiParticipants(id, groupCall.participants, true);\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\n\n        if(limit && this.nextOffsets.get(id) === undefined) {\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\n        }\n\n        return call;\n      }\n    });\n  }\n  \n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\n    const oldCall = this.groupCalls.get(call.id);\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\n    if(oldCall) {\n      if(shouldUpdate) {\n        safeReplaceObject(oldCall, call);\n      }\n      \n      call = oldCall;\n    } else {\n      this.groupCalls.set(call.id, call);\n    }\n\n    if(shouldUpdate) {\n      this.rootScope.dispatchEvent('group_call_update', call as any);\n    }\n\n    return call;\n  }\n\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string) {\n    const updates = await this.apiManager.invokeApi('phone.createGroupCall', {\n      peer: this.appPeersManager.getInputPeerById(chatId.toPeerId(true)),\n      random_id: nextRandomUint(32),\n      schedule_date: scheduleDate,\n      title\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCall') as Update.updateGroupCall;\n    return update.call;\n  }\n\n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\n    const groupCall = this.getGroupCall(id);\n    return {\n      _: 'inputGroupCall',\n      id: groupCall.id,\n      access_hash: groupCall.access_hash\n    };\n  }\n\n  // public generateSelfParticipant(): GroupCallParticipant {\n  //   const mainSources = this.currentGroupCall.connections.main.sources;\n  //   const presentationSources = this.currentGroupCall.connections.presentation?.sources;\n  //   return {\n  //     _: 'groupCallParticipant',\n  //     pFlags: {\n  //       can_self_unmute: true,\n  //       self: true\n  //     },\n  //     source: mainSources.audio.source,\n  //     video: this.generateSelfVideo(mainSources.video),\n  //     presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\n  //     date: tsNow(true),\n  //     peer: this.appPeersManager.getOutputPeer(rootScope.myId)\n  //   };\n  // }\n\n  public async getGroupCallParticipants(id: GroupCallId) {\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\n\n    if(nextOffset !== '') {\n      await this.apiManager.invokeApiSingleProcess({\n        method: 'phone.getGroupParticipants', \n        params: {\n          call: this.getGroupCallInput(id),\n          ids: [],\n          sources: [],\n          offset: nextOffset || '',\n          limit: GET_PARTICIPANTS_LIMIT\n        },\n        processResult: (groupCallParticipants) => {\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\n  \n          this.appChatsManager.saveApiChats(groupCallParticipants.chats);\n          this.appUsersManager.saveApiUsers(groupCallParticipants.users);\n          this.saveApiParticipants(id, groupCallParticipants.participants);\n    \n          setNextOffset(newNextOffset);\n        }\n      });\n    }\n\n    return {\n      participants: this.getCachedParticipants(id),\n      isEnd: this.nextOffsets.get(id) === ''\n    };\n  }\n\n  public hangUp(id: GroupCallId, discard?: boolean | number) {\n    const groupCallInput = this.getGroupCallInput(id);\n    let promise: Promise<Updates>;\n    if(typeof(discard) === 'boolean' && discard) {\n      promise = this.apiManager.invokeApi('phone.discardGroupCall', {\n        call: groupCallInput\n      });\n    } else if(typeof(discard) === 'number') {\n      promise = this.apiManager.invokeApi('phone.leaveGroupCall', {\n        call: groupCallInput,\n        source: discard\n      });\n    } else {\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', {\n        call: groupCallInput,\n        join_as: {_: 'inputPeerSelf'},\n        muted: true,\n        video_stopped: true,\n        params: {\n          _: 'dataJSON',\n          data: ''\n        }\n      });\n    }\n\n    return promise.then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public async joinGroupCall(groupCallId: GroupCallId, params: DataJSON, options: GroupCallConnectionInstance['options']) {\n    const groupCallInput = this.getGroupCallInput(groupCallId);\n    let promise: Promise<Updates>;\n    if(options.type === 'main') {\n      const request: PhoneJoinGroupCall = {\n        call: groupCallInput,\n        join_as: {_: 'inputPeerSelf'},\n        params,\n        muted: options.isMuted,\n        video_stopped: !options.joinVideo\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', request);\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\n    } else {\n      const request: PhoneJoinGroupCallPresentation = {\n        call: groupCallInput,\n        params,\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCallPresentation', request);\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\n    }\n\n    const updates = await promise;\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\n    return update;\n  }\n\n  public leaveGroupCallPresentation(groupCallId: GroupCallId) {\n    return this.apiManager.invokeApi('phone.leaveGroupCallPresentation', {\n      call: this.getGroupCallInput(groupCallId)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { InputPhoto } from \"../../../../layer\";\nimport { MyPhoto } from \"../../appPhotosManager\";\n\nexport default function getPhotoInput(photo: MyPhoto): InputPhoto.inputPhoto {\n  return {\n    _: 'inputPhoto',\n    id: photo.id,\n    access_hash: photo.access_hash,\n    file_reference: photo.file_reference\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { InputMedia } from \"../../../../layer\";\nimport { MyPhoto } from \"../../appPhotosManager\";\nimport getPhotoInput from \"./getPhotoInput\";\n\nexport default function getPhotoMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\n  return {\n    _: 'inputMediaPhoto',\n    id: getPhotoInput(photo),\n    ttl_seconds: 0\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { Document, InputMedia } from \"../../../../layer\";\r\n\r\nexport default function getMediaInput(doc: Document.document): InputMedia.inputMediaDocument {\r\n  return {\r\n    _: 'inputMediaDocument',\r\n    id: {\r\n      _: 'inputDocument',\r\n      id: doc.id,\r\n      access_hash: doc.access_hash,\r\n      file_reference: doc.file_reference\r\n    },\r\n    ttl_seconds: 0\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { MyDocument } from \"./appDocsManager\";\r\nimport type { MyPhoto } from \"./appPhotosManager\";\r\nimport type { MyTopPeer } from \"./appUsersManager\";\r\nimport { BotInlineResult, GeoPoint, InputGeoPoint, InputMedia, MessageEntity, MessagesBotResults, ReplyMarkup } from \"../../layer\";\r\nimport insertInDescendSortedArray from \"../../helpers/array/insertInDescendSortedArray\";\r\nimport { AppManager } from \"./manager\";\r\nimport getPhotoMediaInput from \"./utils/photos/getPhotoMediaInput\";\r\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\r\nimport generateQId from \"./utils/inlineBots/generateQId\";\r\nimport getDocumentMediaInput from \"./utils/docs/getDocumentMediaInput\";\r\n\r\nexport class AppInlineBotsManager extends AppManager {\r\n  private inlineResults: {[queryAndResultIds: string]: BotInlineResult} = {};\r\n  private setHash: {\r\n    [botId: UserId]: {\r\n      peerId: PeerId, \r\n      time: number\r\n    }\r\n  } = {};\r\n\r\n  public getGeoInput(geo: GeoPoint): InputGeoPoint {\r\n    return geo._ === 'geoPoint' ? {\r\n      _: 'inputGeoPoint',\r\n      lat: geo.lat,\r\n      long: geo.long,\r\n      accuracy_radius: geo.accuracy_radius\r\n    } : {\r\n      _: 'inputGeoPointEmpty'\r\n    };\r\n  }\r\n\r\n  public getInlineResults(peerId: PeerId, botId: BotId, query = '', offset = '', geo?: GeoPoint) {\r\n    return this.apiManager.invokeApi('messages.getInlineBotResults', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      query,\r\n      geo_point: geo ? this.getGeoInput(geo) : undefined,\r\n      offset\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then((botResults) => {\r\n      const queryId = botResults.query_id;\r\n\r\n      /* if(botResults.switch_pm) {\r\n        botResults.switch_pm.rText = wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\r\n      } */\r\n      \r\n      botResults.results.forEach((result) => {\r\n        if(result._ === 'botInlineMediaResult') {\r\n          if(result.document) {\r\n            result.document = this.appDocsManager.saveDoc(result.document);\r\n          }\r\n          \r\n          if(result.photo) {\r\n            result.photo = this.appPhotosManager.savePhoto(result.photo);\r\n          }\r\n        }\r\n        \r\n        this.inlineResults[generateQId(queryId, result.id)] = result;\r\n      });\r\n\r\n      return botResults;\r\n    });\r\n  }\r\n\r\n  private pushPopularBot(botId: BotId) {\r\n    this.appUsersManager.getTopPeers('bots_inline').then((topPeers) => {\r\n      const botPeerId = botId.toPeerId();\r\n      const index = topPeers.findIndex((topPeer) => topPeer.id === botPeerId);\r\n      let topPeer: MyTopPeer;\r\n      if(index !== -1) {\r\n        topPeer = topPeers[index];\r\n      } else {\r\n        topPeer = {\r\n          id: botPeerId,\r\n          rating: 0\r\n        };\r\n      }\r\n\r\n      ++topPeer.rating;\r\n      insertInDescendSortedArray(topPeers, topPeer, 'rating');\r\n\r\n      this.appStateManager.setKeyValueToStorage('topPeersCache');\r\n      \r\n      // rootScope.$broadcast('inline_bots_popular')\r\n    });\r\n  }\r\n\r\n  public switchToPM(fromPeerId: PeerId, botId: BotId, startParam: string) {\r\n    this.setHash[botId] = {peerId: fromPeerId, time: Date.now()};\r\n    return this.appMessagesManager.startBot(botId, undefined, startParam);\r\n  }\r\n  \r\n  /*\r\n  function resolveInlineMention (username) {\r\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\r\n      if (peerId.isUser()) {\r\n        var bot = AppUsersManager.getUser(peerId)\r\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\r\n          var resolvedBot = {\r\n            username: username,\r\n            id: peerId,\r\n            placeholder: bot.bot_inline_placeholder\r\n          }\r\n          if (bot.pFlags.bot_inline_geo &&\r\n            GeoLocationManager.isAvailable()) {\r\n              return checkGeoLocationAccess(peerId).then(function () {\r\n                return GeoLocationManager.getPosition().then(function (coords) {\r\n                  resolvedBot.geo = coords\r\n                  return qSync.when(resolvedBot)\r\n                })\r\n              })['catch'](function () {\r\n                return qSync.when(resolvedBot)\r\n              })\r\n            }\r\n            return qSync.when(resolvedBot)\r\n          }\r\n        }\r\n        return $q.reject()\r\n      }, function (error) {\r\n        error.handled = true\r\n        return $q.reject(error)\r\n      })\r\n    }\r\n    \r\n    function regroupWrappedResults (results, rowW, rowH) {\r\n      if (!results ||\r\n        !results[0] ||\r\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\r\n          return\r\n        }\r\n        var ratios = []\r\n        angular.forEach(results, function (result) {\r\n          var w\r\n          var h, doc\r\n          var photo\r\n          if (result._ === 'botInlineMediaResult') {\r\n            if (doc = result.document) {\r\n              w = result.document.w\r\n              h = result.document.h\r\n            }\r\n            else if (photo = result.photo) {\r\n              var photoSize = (photo.sizes || [])[0]\r\n              w = photoSize && photoSize.w\r\n              h = photoSize && photoSize.h\r\n            }\r\n          }else {\r\n            w = result.w\r\n            h = result.h\r\n          }\r\n          if (!w || !h) {\r\n            w = h = 1\r\n          }\r\n          ratios.push(w / h)\r\n        })\r\n        \r\n        var rows = []\r\n        var curCnt = 0\r\n        var curW = 0\r\n        angular.forEach(ratios, function (ratio) {\r\n          var w = ratio * rowH\r\n          curW += w\r\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\r\n            curCnt++\r\n          } else {\r\n            rows.push(curCnt)\r\n            curCnt = 1\r\n            curW = w\r\n          }\r\n        })\r\n        if (curCnt) {\r\n          rows.push(curCnt)\r\n        }\r\n        \r\n        var i = 0\r\n        var thumbs = []\r\n        var lastRowI = rows.length - 1\r\n        angular.forEach(rows, function (rowCnt, rowI) {\r\n          var lastRow = rowI === lastRowI\r\n          var curRatios = ratios.slice(i, i + rowCnt)\r\n          var sumRatios = 0\r\n          angular.forEach(curRatios, function (ratio) {\r\n            sumRatios += ratio\r\n          })\r\n          angular.forEach(curRatios, function (ratio, j) {\r\n            var thumbH = rowH\r\n            var thumbW = rowW * ratio / sumRatios\r\n            var realW = thumbH * ratio\r\n            if (lastRow && thumbW > realW) {\r\n              thumbW = realW\r\n            }\r\n            var result = results[i + j]\r\n            result.thumbW = Math.floor(thumbW) - 2\r\n            result.thumbH = Math.floor(thumbH) - 2\r\n          })\r\n          \r\n          i += rowCnt\r\n        })\r\n      } */\r\n\r\n  public async checkSwitchReturn(botId: BotId) {\r\n    const bot = this.appUsersManager.getUser(botId);\r\n    if(!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\r\n      return;\r\n    }\r\n\r\n    const peerData = this.setHash[botId];\r\n    if(peerData) {\r\n      delete this.setHash[botId];\r\n      if((Date.now() - peerData.time) < 3600e3) {\r\n        return peerData.peerId;\r\n      }\r\n    }\r\n  }\r\n\r\n  public switchInlineQuery(peerId: PeerId, threadId: number, botId: BotId, query: string) {\r\n    this.appDraftsManager.setDraft(peerId, threadId, '@' + this.appUsersManager.getUser(botId).username + ' ' + query);\r\n  }\r\n\r\n  public callbackButtonClick(peerId: PeerId, mid: number, button: any) {\r\n    return this.apiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid),\r\n      data: button.data\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true});\r\n  }\r\n      \r\n  /* function gameButtonClick (id) {\r\n    var message = AppMessagesManager.getMessage(id)\r\n    var peerId = AppMessagesManager.getMessagePeer(message)\r\n    \r\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: AppPeersManager.getInputPeerByID(peerId),\r\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\r\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\r\n      if (typeof callbackAnswer.message === 'string' &&\r\n      callbackAnswer.message.length) {\r\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\r\n      }\r\n      else if (typeof callbackAnswer.url === 'string') {\r\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\r\n      }\r\n    })\r\n  } */\r\n\r\n  public sendInlineResult(peerId: PeerId, botId: BotId, queryAndResultIds: string, options: Partial<{\r\n    viaBotId: BotId,\r\n    queryId: string,\r\n    resultId: string,\r\n    replyMarkup: ReplyMarkup,\r\n    entities: MessageEntity[],\r\n    replyToMsgId: number,\r\n    clearDraft: true,\r\n    scheduleDate: number,\r\n    silent: true,\r\n    sendAsPeerId: PeerId,\r\n    geoPoint: GeoPoint\r\n  }> = {}) {\r\n    const inlineResult = this.inlineResults[queryAndResultIds];\r\n    if(!inlineResult) {\r\n      return;\r\n    }\r\n\r\n    this.pushPopularBot(botId);\r\n    const splitted = queryAndResultIds.split('_');\r\n    const queryID = splitted.shift();\r\n    const resultID = splitted.join('_');\r\n    options.viaBotId = botId;\r\n    options.queryId = queryID;\r\n    options.resultId = resultID;\r\n    if(inlineResult.send_message.reply_markup) {\r\n      options.replyMarkup = inlineResult.send_message.reply_markup;\r\n    }\r\n    \r\n    if(inlineResult.send_message._ === 'botInlineMessageText') {\r\n      options.entities = inlineResult.send_message.entities;\r\n      this.appMessagesManager.sendText(peerId, inlineResult.send_message.message, options);\r\n    } else {\r\n      let caption = '';\r\n      let inputMedia: InputMedia;\r\n      const sendMessage = inlineResult.send_message;\r\n      switch(sendMessage._) {\r\n        case 'botInlineMessageMediaAuto': {\r\n          caption = sendMessage.message;\r\n\r\n          if(inlineResult._ === 'botInlineMediaResult') {\r\n            const {document, photo} = inlineResult;\r\n            if(document) {\r\n              inputMedia = getDocumentMediaInput(document as MyDocument);\r\n            } else {\r\n              inputMedia = getPhotoMediaInput(photo as MyPhoto);\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaGeo': {\r\n          inputMedia = {\r\n            _: 'inputMediaGeoPoint',\r\n            geo_point: this.getGeoInput(sendMessage.geo)\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n        \r\n        case 'botInlineMessageMediaVenue': {\r\n          inputMedia = {\r\n            _: 'inputMediaVenue',\r\n            geo_point: this.getGeoInput(sendMessage.geo),\r\n            title: sendMessage.title,\r\n            address: sendMessage.address,\r\n            provider: sendMessage.provider,\r\n            venue_id: sendMessage.venue_id,\r\n            venue_type: sendMessage.venue_type\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaContact': {\r\n          inputMedia = {\r\n            _: 'inputMediaContact',\r\n            phone_number: sendMessage.phone_number,\r\n            first_name: sendMessage.first_name,\r\n            last_name: sendMessage.last_name,\r\n            vcard: sendMessage.vcard\r\n          };\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      if(!inputMedia) {\r\n        inputMedia = {\r\n          _: 'messageMediaPending',\r\n          type: inlineResult.type,\r\n          file_name: inlineResult.title || \r\n            (inlineResult as BotInlineResult.botInlineResult).content?.url || \r\n            (inlineResult as BotInlineResult.botInlineResult).url,\r\n          size: 0,\r\n          progress: {percent: 30, total: 0}\r\n        } as any;\r\n      }\r\n\r\n      this.appMessagesManager.sendOther(peerId, inputMedia, options);\r\n    }\r\n  }\r\n  \r\n  /* function checkGeoLocationAccess (botID) {\r\n    var key = 'bot_access_geo' + botID\r\n    return Storage.get(key).then(function (geoAccess) {\r\n      if (geoAccess && geoAccess.granted) {\r\n        return true\r\n      }\r\n      return ErrorService.confirm({\r\n        type: 'BOT_ACCESS_GEO_INLINE'\r\n      }).then(function () {\r\n        var setHash = {}\r\n        setHash[key] = {granted: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return true\r\n      }, function () {\r\n        var setHash = {}\r\n        setHash[key] = {denied: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return $q.reject()\r\n      })\r\n    })\r\n  } */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MESSAGE_ID_INCREMENT } from \"./utils/messageId\";\r\nimport generateMessageId from \"./utils/messageId/generateMessageId\";\r\n\r\nexport class AppMessagesIdsManager {\r\n  private tempNum = 0;\r\n\r\n  public generateTempMessageId(messageId: number) {\r\n    const num = ++this.tempNum;\r\n    return generateMessageId(messageId) + (num & (MESSAGE_ID_INCREMENT - 1));\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport App from \"../../config/app\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport Modes from \"../../config/modes\";\r\nimport tsNow from \"../../helpers/tsNow\";\r\nimport sessionStorage from '../sessionStorage';\r\n\r\nexport class TelegramMeWebManager {\r\n  private disabled = /* false &&  */(Modes.test || App.domains.indexOf(location.hostname) === -1);\r\n\r\n  public setAuthorized(canRedirect: boolean) {\r\n    if(this.disabled) {\r\n      return;\r\n    }\r\n\r\n    return sessionStorage.get('tgme_sync').then((curValue) => {\r\n      const ts = tsNow(true);\r\n      if(\r\n        canRedirect &&\r\n        curValue?.canRedirect === canRedirect &&\r\n        (curValue.ts + 86400) > ts\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      sessionStorage.set({\r\n        tgme_sync: {\r\n          canRedirect, \r\n          ts\r\n        }\r\n      });\r\n\r\n      const path = `_websync_?authed=${canRedirect ? '1' : '0'}&version=${encodeURIComponent(App.version + ' ' + App.suffix)}`;\r\n      const urls = [\r\n        '//telegram.me/' + path,\r\n        '//t.me/' + path\r\n      ];\r\n\r\n      const promises = urls.map((url) => {\r\n        const script = document.createElement('script');\r\n        const promise = new Promise<void>((resolve) => {\r\n          script.onload = script.onerror = () => {\r\n            script.remove();\r\n            resolve();\r\n          };\r\n        });\r\n        script.src = url;\r\n        document.body.appendChild(script);\r\n        return promise;\r\n      });\r\n\r\n      return Promise.all(promises);\r\n    });\r\n  }\r\n}\r\n\r\nconst telegramMeWebManager = new TelegramMeWebManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.telegramMeWebManager = telegramMeWebManager);\r\nexport default telegramMeWebManager;\r\n","export default function splitStringByLength(str: string, maxLength: number) {\n  if(str.length < maxLength) return [str];\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\n  const delimiter = ' ';//'\\n';\n  const out: string[] = [];\n\n  const cut = (end?: number) => {\n    let part = str.slice(lastSliceStartIndex, end);\n    const _arrayIndex = arrayIndex++;\n    if(part.length > maxLength) {\n      let overflowPart = part.slice(maxLength);\n      const splitted = splitStringByLength(overflowPart, maxLength);\n      splitted.forEach((part) => {\n        out[arrayIndex++] = part;\n      });\n\n      part = part.slice(0, maxLength);\n    }\n\n    lastSliceStartIndex = end;\n    length = 0;\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\n  };\n\n  let lastIndex = 0;\n  do {\n    let index = str.indexOf(delimiter, lastIndex);\n    if(index === -1) {\n      if(lastIndex !== (str.length - 1)) {\n        cut();\n      }\n\n      break;\n    }\n\n    index += delimiter.length;\n\n    const partLength = index - lastIndex;\n    if((length + partLength) > maxLength) {\n      cut(length);\n    }\n    \n    lastIndex = index;\n    length += partLength;\n  } while(true);\n\n  return out;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { TabState } from \"../mtproto/mtprotoworker\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport MTProtoMessagePort from \"../mtproto/mtprotoMessagePort\";\n\ntype Tab = {\n  source: MessageEventSource,\n  state: TabState\n};\n\nexport class AppTabsManager {\n  private tabs: Map<Tab['source'], Tab>;\n\n  constructor() {\n    this.tabs = new Map();\n  }\n\n  public start() {\n    const port = MTProtoMessagePort.getInstance<false>();\n\n    port.addEventListener('tabState', (state, source) => {\n      const tab = this.tabs.get(source);\n      tab.state = state;\n    });\n  }\n\n  public getTabs() {\n    return [...this.tabs.values()].filter((tab) => !!tab.state);\n  }\n\n  public addTab(source: MessageEventSource) {\n    const tab: Tab = {\n      source,\n      state: undefined\n    };\n  \n    this.tabs.set(source, tab);\n  }\n\n  public deleteTab(source: MessageEventSource) {\n    this.tabs.delete(source);\n  }\n}\n\nconst appTabsManager = new AppTabsManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appTabsManager = appTabsManager);\nexport default appTabsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LazyLoadQueueBase from \"../../components/lazyLoadQueueBase\";\nimport deferredPromise, { CancellablePromise } from \"../../helpers/cancellablePromise\";\nimport tsNow from \"../../helpers/tsNow\";\nimport { randomLong } from \"../../helpers/random\";\nimport { Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer, ReactionCount, MessagePeerReaction, MessagesSearchCounter, Peer, MessageReactions, Document, InputFile } from \"../../layer\";\nimport { ArgumentTypes, InvokeApiOptions } from \"../../types\";\nimport { logger, LogTypes } from \"../logger\";\nimport type { ApiFileManager } from '../mtproto/apiFileManager';\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport { GLOBAL_FOLDER_ID, LOCAL_FOLDER_ID } from \"../storages/dialogs\";\nimport { ChatRights } from \"./appChatsManager\";\nimport { MyDocument } from \"./appDocsManager\";\nimport { MyPhoto } from \"./appPhotosManager\";\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\nimport DEBUG from \"../../config/debug\";\nimport SlicedArray, { Slice, SliceEnd } from \"../../helpers/slicedArray\";\nimport { MUTE_UNTIL, NULL_PEER_ID, REPLIES_HIDDEN_CHANNEL_ID, REPLIES_PEER_ID, SERVICE_PEER_ID } from \"../mtproto/mtproto_config\";\nimport telegramMeWebManager from \"../mtproto/telegramMeWebManager\";\nimport { getMiddleware } from \"../../helpers/middleware\";\nimport assumeType from \"../../helpers/assumeType\";\nimport copy from \"../../helpers/object/copy\";\nimport getObjectKeysAndSort from \"../../helpers/object/getObjectKeysAndSort\";\nimport forEachReverse from \"../../helpers/array/forEachReverse\";\nimport deepEqual from \"../../helpers/object/deepEqual\";\nimport splitStringByLength from \"../../helpers/string/splitStringByLength\";\nimport debounce from \"../../helpers/schedulers/debounce\";\nimport { AppManager } from \"./manager\";\nimport type { MediaSize } from \"../../helpers/mediaSize\";\nimport getPhotoMediaInput from \"./utils/photos/getPhotoMediaInput\";\nimport getPhotoDownloadOptions from \"./utils/photos/getPhotoDownloadOptions\";\nimport fixEmoji from \"../richTextProcessor/fixEmoji\";\nimport mergeEntities from \"../richTextProcessor/mergeEntities\";\nimport parseEntities from \"../richTextProcessor/parseEntities\";\nimport parseMarkdown from \"../richTextProcessor/parseMarkdown\";\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\nimport generateMessageId from \"./utils/messageId/generateMessageId\";\nimport getPeerId from \"./utils/peers/getPeerId\";\nimport filterMessagesByInputFilter from \"./utils/messages/filterMessagesByInputFilter\";\nimport ctx from \"../../environment/ctx\";\nimport { getEnvironment } from \"../../environment/utils\";\nimport getDialogIndex from \"./utils/dialogs/getDialogIndex\";\nimport defineNotNumerableProperties from \"../../helpers/object/defineNotNumerableProperties\";\nimport getDocumentMediaInput from \"./utils/docs/getDocumentMediaInput\";\nimport getDocumentInputFileName from \"./utils/docs/getDocumentInputFileName\";\nimport getFileNameForUpload from \"../../helpers/getFileNameForUpload\";\nimport type { Progress } from \"./appDownloadManager\";\nimport noop from \"../../helpers/noop\";\nimport appTabsManager from \"./appTabsManager\";\nimport MTProtoMessagePort from \"../mtproto/mtprotoMessagePort\";\n\n//console.trace('include');\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\n\nconst APITIMEOUT = 0;\nconst DO_NOT_READ_HISTORY = false;\n\nexport type HistoryStorage = {\n  count: number | null,\n  history: SlicedArray<number>,\n\n  maxId?: number,\n  readPromise?: Promise<void>,\n  readMaxId?: number,\n  readOutboxMaxId?: number,\n  triedToReadMaxId?: number,\n\n  maxOutId?: number,\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>\n};\n\nexport type HistoryResult = {\n  count: number,\n  history: number[],\n  isEnd: ReturnType<Slice<number>['getEnds']>,\n  offsetIdOffset?: number,\n};\n\nexport type Dialog = MTDialog.dialog;\n\nexport type MyMessage = Message.message | Message.messageService;\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty' \n  | 'inputMessagesFilterPhotos' \n  | 'inputMessagesFilterPhotoVideo' \n  | 'inputMessagesFilterVideo' \n  | 'inputMessagesFilterDocument' \n  | 'inputMessagesFilterVoice' \n  | 'inputMessagesFilterRoundVoice' \n  | 'inputMessagesFilterRoundVideo' \n  | 'inputMessagesFilterMusic' \n  | 'inputMessagesFilterUrl' \n  | 'inputMessagesFilterMyMentions'\n  | 'inputMessagesFilterChatPhotos'\n  | 'inputMessagesFilterPinned';\n\nexport type PinnedStorage = Partial<{\n  promise: Promise<PinnedStorage>,\n  count: number,\n  maxId: number\n}>;\nexport type MessagesStorage = Map<number, Message.message | Message.messageService> & {peerId: PeerId, type: MessagesStorageType, key: MessagesStorageKey};\nexport type MessagesStorageType = 'scheduled' | 'history' | 'grouped';\nexport type MessagesStorageKey = `${PeerId}_${MessagesStorageType}`;\n\nexport type MyMessageActionType = Message.messageService['action']['_'];\n\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\n  afterMessageId: string,\n  messageId: string\n}>;\n\ntype MapValueType<A> = A extends Map<any, infer V> ? V : never;\n\nexport type BatchUpdates = {\n  'messages_reactions': AppMessagesManager['batchUpdateReactions'],\n  'messages_views': AppMessagesManager['batchUpdateViews']\n};\n\ntype PendingMessageDetails = {\n  peerId: PeerId,\n  tempId: number,\n  threadId: number,\n  storage: MessagesStorage,\n  sequential?: boolean\n};\n\nexport class AppMessagesManager extends AppManager {\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\n  private groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\n  private historiesStorage: {\n    [peerId: PeerId]: HistoryStorage\n  };\n  private threadsStorage: {\n    [peerId: PeerId]: {\n      [threadId: string]: HistoryStorage\n    }\n  };\n  private searchesStorage: {\n    [peerId: PeerId]: Partial<{\n      [inputFilter in MyInputMessagesFilter]: {\n        count?: number,\n        history: number[]\n      }\n    }>\n  };\n  private pinnedMessages: {[peerId: PeerId]: PinnedStorage};\n\n  private threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\n  private threadsToReplies: {\n    [peerId_threadId: string]: string;\n  };\n\n  private pendingByRandomId: {\n    [randomId: string]: PendingMessageDetails\n  } = {};\n  private pendingByMessageId: {[mid: string]: Long} = {};\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\n  public pendingTopMsgs: {[peerId: PeerId]: number} = {};\n  private tempFinalizeCallbacks: {\n    [tempId: string]: {\n      [callbackName: string]: Partial<{\n        deferred: CancellablePromise<void>, \n        callback: (message: MyMessage) => Promise<any>\n      }>\n    }\n  } = {};\n  \n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\n\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message.message | Message.messageService>>> = new Map();\n  private fetchSingleMessagesPromise: Promise<void> = null;\n\n  private maxSeenId = 0;\n\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\n\n  private newMessagesHandleTimeout = 0;\n  private newMessagesToHandle: {[peerId: PeerId]: Set<number>} = {};\n  private newDialogsHandlePromise: Promise<any>;\n  private newDialogsToHandle: {[peerId: PeerId]: Dialog} = {};\n  public newUpdatesAfterReloadToHandle: {[peerId: PeerId]: Set<Update>} = {};\n\n  private notificationsHandlePromise = 0;\n  private notificationsToHandle: {[peerId: PeerId]: {\n    fwdCount: number,\n    fromId: PeerId,\n    topMessage?: MyMessage\n  }} = {};\n\n  private reloadConversationsPromise: Promise<void>;\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>}> = new Map();\n\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\n\n  private groupedTempId = 0;\n\n  private typings: {[peerId: PeerId]: {action: SendMessageAction, timeout?: number}} = {};\n\n  private middleware: ReturnType<typeof getMiddleware>;\n\n  private unreadMentions: {[peerId: PeerId]: SlicedArray<number>} = {};\n  private goToNextMentionPromises: {[peerId: PeerId]: Promise<number>} = {};\n  \n  private batchUpdates: {\n    [k in keyof BatchUpdates]?: {\n      callback: BatchUpdates[k],\n      batch: ArgumentTypes<BatchUpdates[k]>[0]\n    }\n  } = {};\n  private batchUpdatesDebounced: () => Promise<void>;\n\n  private uploadFilePromises: {[fileName: string]: CancellablePromise<any>};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateMessageID: this.onUpdateMessageId,\n\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\n      updateNewMessage: this.onUpdateNewMessage,\n      updateNewChannelMessage: this.onUpdateNewMessage,\n\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\n\n      updateEditMessage: this.onUpdateEditMessage,\n      updateEditChannelMessage: this.onUpdateEditMessage,\n\n      updateMessageReactions: this.onUpdateMessageReactions,\n\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\n      updateReadHistoryInbox: this.onUpdateReadHistory,\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\n      updateReadChannelInbox: this.onUpdateReadHistory,\n      updateReadChannelOutbox: this.onUpdateReadHistory,\n\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\n\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\n\n      updateDeleteMessages: this.onUpdateDeleteMessages,\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\n\n      updateChannel: this.onUpdateChannel,\n\n      updateChannelReload: this.onUpdateChannelReload,\n\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\n\n      updateServiceNotification: this.onUpdateServiceNotification,\n\n      updatePinnedMessages: this.onUpdatePinnedMessages,\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\n\n      updateNotifySettings: this.onUpdateNotifySettings,\n\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\n\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages\n    });\n\n    // ! Invalidate notify settings, can optimize though\n    this.rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1));\n      let filterFunc: (dialog: Dialog) => boolean;\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => this.appPeersManager.isBroadcast(dialog.peerId);\n      else filterFunc = (dialog) => this.appPeersManager.isAnyGroup(dialog.peerId);\n\n      dialogs\n      .filter(filterFunc)\n      .forEach((dialog) => {\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n      });\n    });\n\n    this.rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\n      msgs.forEach(({peerId, mid, isScheduled}) => {\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\n        if(!message) return;\n        message.media = {\n          _: 'messageMediaWebPage', \n          webpage: this.appWebPagesManager.getCachedWebPage(id)\n        };\n\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: storage.key,\n          peerId,\n          mid,\n          message\n        });\n      });\n    });\n\n    this.rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\n      if(threadId) return;\n\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        if(!threadId) {\n          dialog.draft = draft;\n\n          let drop = false;\n          if(!draft && !getServerMessageId(dialog.top_message)) {\n            this.dialogsStorage.dropDialog(peerId);\n            drop = true;\n          } else {\n            this.dialogsStorage.generateIndexForDialog(dialog);\n            this.dialogsStorage.pushDialog(dialog);\n          }\n\n          this.rootScope.dispatchEvent('dialog_draft', {\n            peerId,\n            dialog,\n            drop,\n            draft\n          });\n        }\n      } else {\n        this.reloadConversation(peerId);\n      }\n    });\n\n    this.rootScope.addEventListener('poll_update', ({poll}) => {\n      const set = this.appPollsManager.pollToMessages[poll.id];\n      if(set) {\n        for(const key of set) {\n          const [peerId, mid] = key.split('_');\n\n          const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\n          this.setDialogToStateIfMessageIsTop(message);\n        }\n      }\n    });\n    \n    this.batchUpdatesDebounced = debounce(() => {\n      for(const event in this.batchUpdates) {\n        const details = this.batchUpdates[event as keyof BatchUpdates];\n        delete this.batchUpdates[event as keyof BatchUpdates];\n\n        // @ts-ignore\n        const result = details.callback(details.batch);\n        if(result && (!(result instanceof Array) || result.length)) {\n          // @ts-ignore\n          rootScope.dispatchEvent(event as keyof BatchUpdates, result);\n        }\n      }\n    }, 33, false, true);\n\n    return this.appStateManager.getState().then((state) => {\n      if(state.maxSeenMsgId) {\n        this.maxSeenId = state.maxSeenMsgId;\n      }\n    });\n  }\n\n  public clear = (init?: boolean) => {\n    if(this.middleware) {\n      this.middleware.clean();\n    } else {\n      this.middleware = getMiddleware();\n      this.uploadFilePromises = {};\n    }\n\n    this.messagesStorageByPeerId = {};\n    this.groupedMessagesStorage = {};\n    this.scheduledMessagesStorage = {};\n    this.historiesStorage = {};\n    this.threadsStorage = {};\n    this.searchesStorage = {};\n    this.pinnedMessages = {};\n    this.threadsServiceMessagesIdsStorage = {};\n    this.threadsToReplies = {};\n\n    this.dialogsStorage && this.dialogsStorage.clear(init);\n    this.filtersStorage && this.filtersStorage.clear(init);\n  };\n\n  public getInputEntities(entities: MessageEntity[]) {\n    const sendEntites = copy(entities);\n    sendEntites.forEach((entity) => {\n      if(entity._ === 'messageEntityMentionName') {\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = this.appUsersManager.getUserInput(entity.user_id);\n      }\n    });\n    return sendEntites;\n  }\n\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: MyMessage) => Promise<any>) {\n    const finalize = this.tempFinalizeCallbacks[tempId] ?? (this.tempFinalizeCallbacks[tempId] = {});\n    const obj = finalize[callbackName] ?? (finalize[callbackName] = {deferred: deferredPromise<void>()});\n\n    obj.callback = callback;\n\n    return obj.deferred;\n  }\n\n  public editMessage(message: any, text: string, options: Partial<{\n    noWebPage: true,\n    newMedia: any,\n    scheduleDate: number,\n    entities: MessageEntity[]\n  }> = {}): Promise<void> {\n    /* if(!this.canEditMessage(messageId)) {\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\n    } */\n\n    const {mid, peerId} = message;\n\n    if(message.pFlags.is_outgoing) {\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\n        //this.log('invoke editMessage callback', message);\n        return this.editMessage(message, text, options);\n      });\n    }\n\n    let entities = options.entities || [];\n    if(text) {\n      text = parseMarkdown(text, entities);\n    }\n\n    const schedule_date = options.scheduleDate || (message.pFlags.is_scheduled ? message.date : undefined);\n    return this.apiManager.invokeApi('messages.editMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: message.id,\n      message: text,\n      media: options.newMedia,\n      entities: entities.length ? this.getInputEntities(entities) : undefined,\n      no_webpage: options.noWebPage,\n      schedule_date\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error) => {\n      this.log.error('editMessage error:', error);\n      \n      if(error && error.type === 'MESSAGE_NOT_MODIFIED') {\n        error.handled = true;\n        return;\n      }\n      if(error && error.type === 'MESSAGE_EMPTY') {\n        error.handled = true;\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  public async sendText(peerId: PeerId, text: string, options: Partial<{\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    queryId: string,\n    resultId: string,\n    noWebPage: true,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    webPage: WebPage,\n    scheduleDate: number,\n    silent: true,\n    sendAsPeerId: PeerId,\n  }> = {}) {\n    if(!text.trim()) {\n      return;\n    }\n\n    //this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    const config = await this.apiManager.getConfig();\n    const MAX_LENGTH = config.message_length_max;\n    if(text.length > MAX_LENGTH) {\n      const splitted = splitStringByLength(text, MAX_LENGTH);\n      text = splitted[0];\n\n      if(splitted.length > 1) {\n        delete options.webPage;\n      }\n\n      for(let i = 1; i < splitted.length; ++i) {\n        setTimeout(() => {\n          this.sendText(peerId, splitted[i], options);\n        }, i);\n      }\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    let entities = options.entities || [];\n    if(!options.viaBotId) {\n      text = parseMarkdown(text, entities);\n      //entities = mergeEntities(entities, parseEntities(text));\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    message.entities = entities;\n    message.message = text;\n\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n    const isChannel = this.appPeersManager.isChannel(peerId);\n\n    if(options.webPage) {\n      message.media = {\n        _: 'messageMediaWebPage',\n        webpage: options.webPage\n      };\n    }\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      toggleError(false);\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n      let apiPromise: any;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMessage', {\n          no_webpage: options.noWebPage,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          message: text,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate || undefined,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      }\n\n      /* function is<T>(value: any, condition: boolean): value is T {\n        return condition;\n      } */\n\n      //this.log('sendText', message.mid);\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates: Updates) => {\n        //this.log('sendText sent', message.mid);\n        //if(is<Updates.updateShortSentMessage>(updates, updates._ === 'updateShortSentMessage')) {\n        if(updates._ === 'updateShortSentMessage') {\n          //assumeType<Updates.updateShortSentMessage>(updates);\n\n          // * fix copying object with promise\n          const promise = message.promise;\n          delete message.promise;\n          const newMessage = copy(message);\n          defineNotNumerableProperties(message, ['promise']);\n          message.promise = promise;\n\n          newMessage.date = updates.date;\n          newMessage.id = updates.id;\n          newMessage.media = updates.media;\n          newMessage.entities = updates.entities;\n          this.wrapMessageEntities(newMessage);\n          if(updates.pFlags.out) {\n            newMessage.pFlags.out = true;\n          }\n\n          // * override with new updates\n          updates = {\n            _: 'updates',\n            users: [],\n            chats: [],\n            seq: 0,\n            date: undefined,\n            updates: [{\n              _: 'updateMessageID',\n              random_id: message.random_id,\n              id: newMessage.id\n            }, {\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\n              message: newMessage,\n              pts: updates.pts,\n              pts_count: updates.pts_count\n            }]\n          };\n        } else if((updates as Updates.updates).updates) {\n          (updates as Updates.updates).updates.forEach((update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n        // Testing bad situations\n        // var upd = angular.copy(updates)\n        // updates.updates.splice(0, 1)\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // $timeout(function () {\n        // ApiUpdatesManager.processUpdateMessage(upd)\n        // }, 5000)\n        message.promise.resolve();\n      }, (error: any) => {\n        toggleError(true);\n        message.promise.reject(error);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    return message.promise;\n  }\n\n  public sendFile(peerId: PeerId, file: File | Blob | MyDocument, options: Partial<{\n    isRoundMessage: true,\n    isVoiceMessage: true,\n    isGroupedItem: true,\n    isMedia: true,\n\n    replyToMsgId: number,\n    sendAsPeerId: PeerId,\n    threadId: number,\n    groupId: string,\n    caption: string,\n    entities: MessageEntity[],\n    width: number,\n    height: number,\n    objectURL: string,\n    thumb: {\n      blob: Blob,\n      url: string,\n      size: MediaSize\n    },\n    duration: number,\n    background: true,\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number,\n    noSound: boolean,\n\n    waveform: Uint8Array,\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    //this.checkSendOptions(options);\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\n\n    const fileType = 'mime_type' in file ? file.mime_type : file.type;\n    const fileName = file instanceof File ? file.name : '';\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\n    let caption = options.caption || '';\n\n    this.log('sendFile', file, fileType);\n\n    const entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    const attributes: DocumentAttribute[] = [];\n\n    const isPhoto = getEnvironment().IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\n\n    let photo: MyPhoto, document: MyDocument;\n\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\n    if(isDocument) { // maybe it's a sticker or gif\n      attachType = 'document';\n      apiFileName = '';\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\n      attachType = 'audio';\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\n      actionName = 'sendMessageUploadAudioAction';\n\n      if(options.isVoiceMessage) {\n        attachType = 'voice';\n        message.pFlags.media_unread = true;\n      }\n\n      let attribute: DocumentAttribute.documentAttributeAudio = {\n        _: 'documentAttributeAudio',\n        pFlags: {\n          voice: options.isVoiceMessage\n        },\n        waveform: options.waveform,\n        duration: options.duration || 0\n      };\n\n      attributes.push(attribute);\n    } else if(!options.isMedia) {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    } else if(isPhoto) {\n      attachType = 'photo';\n      apiFileName = 'photo.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadPhotoAction';\n\n      const photoSize = {\n        _: 'photoSize',\n        w: options.width,\n        h: options.height,\n        type: 'full',\n        location: null,\n        size: file.size\n      } as PhotoSize.photoSize;\n\n      photo = {\n        _: 'photo',\n        id: '' + message.id,\n        sizes: [photoSize],\n        w: options.width,\n        h: options.height\n      } as any;\n\n      const cacheContext = this.thumbsStorage.getCacheContext(photo, photoSize.type);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n      \n      photo = this.appPhotosManager.savePhoto(photo);\n    } else if(getEnvironment().VIDEO_MIME_TYPES_SUPPORTED.has(fileType)) {\n      attachType = 'video';\n      apiFileName = 'video.mp4';\n      actionName = 'sendMessageUploadVideoAction';\n\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\n        _: 'documentAttributeVideo',\n        pFlags: {\n          round_message: options.isRoundMessage,\n          supports_streaming: true\n        }, \n        duration: options.duration,\n        w: options.width,\n        h: options.height\n      };\n\n      attributes.push(videoAttribute);\n\n      // * must follow after video attribute\n      if(options.noSound && \n        file.size > (10 * 1024) && \n        file.size < (10 * 1024 * 1024)) {\n        attributes.push({\n          _: 'documentAttributeAnimated'\n        });\n      }\n    } else {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    }\n\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\n\n    if((['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).indexOf(attachType) !== -1 && !isDocument) {\n      const thumbs: PhotoSize[] = [];\n      document = {\n        _: 'document',\n        id: '' + message.id,\n        duration: options.duration,\n        attributes,\n        w: options.width,\n        h: options.height,\n        thumbs,\n        mime_type: fileType,\n        size: file.size\n      } as any;\n\n      if(options.objectURL) {\n        const cacheContext = this.thumbsStorage.getCacheContext(document);\n        cacheContext.downloaded = file.size;\n        cacheContext.url = options.objectURL;\n      }\n\n      let thumb: PhotoSize.photoSize;\n      if(isPhoto) {\n        attributes.push({\n          _: 'documentAttributeImageSize',\n          w: options.width,\n          h: options.height\n        });\n\n        thumb = {\n          _: 'photoSize',\n          w: options.width,\n          h: options.height,\n          type: 'full',\n          size: file.size\n        };\n      } else if(attachType === 'video') {\n        if(options.thumb) {\n          thumb = {\n            _: 'photoSize',\n            w: options.thumb.size.width,\n            h: options.thumb.size.height,\n            type: 'local-thumb',\n            size: options.thumb.blob.size\n          };\n\n          const thumbCacheContext = this.thumbsStorage.getCacheContext(document, thumb.type);\n          thumbCacheContext.downloaded = thumb.size;\n          thumbCacheContext.url = options.thumb.url;\n        }\n      }\n\n      if(thumb) {\n        thumbs.push(thumb);\n      }\n\n      /* if(thumbs.length) {\n        const thumb = thumbs[0] as PhotoSize.photoSize;\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\n        docThumb.downloaded = thumb.size;\n        docThumb.url = thumb.url;\n      } */\n      \n      document = this.appDocsManager.saveDoc(document);\n    }\n\n    this.log('sendFile', attachType, apiFileName, file.type, options);\n\n    const sentDeferred = deferredPromise<InputMedia>();\n    // sentDeferred.cancel = () => {\n    //   const error = new Error('Download canceled');\n    //   error.name = 'AbortError';\n    //   sentDeferred.reject(error);\n\n    //   if(uploadPromise?.cancel) {\n    //     uploadPromise.cancel();\n    //   }\n    // };\n\n    const media: MessageMedia = isDocument ? undefined : {\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\n      pFlags: {},\n      // preloader,\n      photo,\n      document\n    };\n    \n    if(media) {\n      defineNotNumerableProperties(media as any, ['promise']);\n      (media as any).promise = sentDeferred;\n    }\n    \n    message.entities = entities;\n    message.message = caption;\n    message.media = isDocument ? {\n      _: 'messageMediaDocument',\n      pFlags: {},\n      document: file \n    } as MessageMedia.messageMediaDocument : media;\n    \n    const uploadingFileName = !isDocument ? getFileNameForUpload(file) : undefined;\n    message.uploadingFileName = uploadingFileName;\n\n    if(uploadingFileName) {\n      this.uploadFilePromises[uploadingFileName] = sentDeferred;\n    }\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    let uploaded = false,\n      uploadPromise: ReturnType<ApiFileManager['upload']> = null;\n\n    message.send = () => {\n      if(isDocument) {\n        const {id, access_hash, file_reference} = file as MyDocument;\n\n        const inputMedia: InputMedia = {\n          _: 'inputMediaDocument',\n          id: {\n            _: 'inputDocument',\n            id,\n            access_hash,\n            file_reference\n          }\n        };\n        \n        sentDeferred.resolve(inputMedia);\n      } else if(file instanceof File || file instanceof Blob) {\n        const load = () => {\n          if(!uploaded || message.error) {\n            uploaded = false;\n\n            uploadPromise = this.apiFileManager.upload({file, fileName: uploadingFileName});\n            uploadPromise.catch((err) => {\n              if(!uploaded) {\n                this.log('cancelling upload', media);\n      \n                this.cancelPendingMessage(message.random_id);\n                this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n                sentDeferred.reject(err);\n              }\n            });\n\n            uploadPromise.addNotifyListener((progress: Progress) => {\n              /* if(DEBUG) {\n                this.log('upload progress', progress);\n              } */\n  \n              const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\n              if(actionName) {\n                this.setTyping(peerId, {_: actionName, progress: percents | 0});\n              }\n              sentDeferred.notifyAll(progress);\n            });\n\n            sentDeferred.notifyAll({done: 0, total: file.size});\n          }\n\n          let thumbUploadPromise: typeof uploadPromise;\n          if(attachType === 'video' && options.objectURL && options.thumb?.blob) {\n            thumbUploadPromise = this.apiFileManager.upload({file: options.thumb.blob});\n          }\n  \n          uploadPromise && uploadPromise.then(async(inputFile) => {\n            /* if(DEBUG) {\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\n            } */\n\n            inputFile.name = apiFileName;\n            uploaded = true;\n            let inputMedia: InputMedia;\n            switch(attachType) {\n              case 'photo':\n                inputMedia = {\n                  _: 'inputMediaUploadedPhoto', \n                  file: inputFile,\n                };\n                break;\n\n              default:\n                inputMedia = {\n                  _: 'inputMediaUploadedDocument', \n                  file: inputFile, \n                  mime_type: fileType, \n                  pFlags: {\n                    force_file: actionName === 'sendMessageUploadDocumentAction' ? true : undefined,\n                    // nosound_video: options.noSound ? true : undefined\n                  },\n                  attributes\n                };\n            }\n\n            if(thumbUploadPromise) {\n              try {\n                const inputFile = await thumbUploadPromise;\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\n              } catch(err) {\n                this.log.error('sendFile thumb upload error:', err);\n              }\n            }\n            \n            sentDeferred.resolve(inputMedia);\n          }, (/* error */) => {\n            toggleError(true);\n          });\n  \n          return sentDeferred;\n        };\n\n        if(options.isGroupedItem) {\n          load();\n        } else {\n          this.sendSmthLazyLoadQueue.push({\n            load\n          });\n        }\n      }\n\n      return sentDeferred;\n    };\n\n    this.beforeMessageSending(message, {\n      isGroupedItem: options.isGroupedItem, \n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft\n    });\n\n    if(!options.isGroupedItem) {\n      sentDeferred.then((inputMedia) => {\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n        return this.apiManager.invokeApi('messages.sendMedia', {\n          background: options.background,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          message: caption,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          entities,\n          clear_draft: options.clearDraft,\n          send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n        }).then((updates) => {\n          this.apiUpdatesManager.processUpdateMessage(updates);\n        }, (error) => {\n          if(attachType === 'photo' &&\n            error.code === 400 &&\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\n            error.handled = true;\n            attachType = 'document';\n            message.send();\n            return;\n          }\n\n          toggleError(true);\n          throw error;\n        });\n      });\n\n      sentDeferred.then(message.promise.resolve, message.promise.reject);\n    }\n\n    const ret: {\n      message: typeof message,\n      promise: typeof sentDeferred\n    } = {\n      message\n    } as any;\n\n    defineNotNumerableProperties(ret, ['promise']);\n    ret.promise = sentDeferred;\n\n    return ret;\n  }\n\n  public async sendAlbum(peerId: PeerId, files: File[], options: Partial<{\n    isMedia: true,\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    sendAsPeerId: PeerId,\n    threadId: number,\n    caption: string,\n    sendFileDetails: Partial<{\n      duration: number,\n      width: number,\n      height: number,\n      objectURL: string,\n      thumbBlob: Blob,\n      thumbURL: string\n    }>[],\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number\n  }> = {}) {\n    //this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    if(files.length === 1) {\n      return this.sendFile(peerId, files[0], {...options, ...options.sendFileDetails[0]});\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let caption = options.caption || '';\n    let entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    this.log('sendAlbum', files, options);\n\n    const groupId = '' + ++this.groupedTempId;\n\n    const messages = files.map((file, idx) => {\n      const details = options.sendFileDetails[idx];\n      const o: Parameters<AppMessagesManager['sendFile']>[2] = {\n        isGroupedItem: true,\n        isMedia: options.isMedia,\n        scheduleDate: options.scheduleDate,\n        silent: options.silent,\n        replyToMsgId,\n        threadId: options.threadId,\n        sendAsPeerId: options.sendAsPeerId,\n        groupId,\n        ...details\n      };\n\n      if(idx === 0) {\n        o.caption = caption;\n        o.entities = entities;\n        //o.replyToMsgId = replyToMsgId;\n      }\n\n      return this.sendFile(peerId, file, o).message;\n    });\n\n    if(options.clearDraft) {\n      setTimeout(() => {\n        this.appDraftsManager.clearDraft(peerId, options.threadId);\n      }, 0);\n    }\n    \n    // * test pending\n    //return;\n\n    const toggleError = (message: any, on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n    const invoke = (multiMedia: InputSingleMedia[]) => {\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n      const deferred = deferredPromise<void>();\n      this.sendSmthLazyLoadQueue.push({\n        load: () => {\n          return this.apiManager.invokeApi('messages.sendMultiMedia', {\n            peer: inputPeer,\n            multi_media: multiMedia,\n            reply_to_msg_id: replyToMsgId,\n            schedule_date: options.scheduleDate,\n            silent: options.silent,\n            clear_draft: options.clearDraft,\n            send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n          }).then((updates) => {\n            this.apiUpdatesManager.processUpdateMessage(updates);\n            deferred.resolve();\n          }, (error) => {\n            messages.forEach((message) => toggleError(message, true));\n            deferred.reject(error);\n          });\n        }\n      });\n\n      return deferred;\n    };\n\n    const promises: Promise<InputSingleMedia>[] = messages.map((message) => {\n      return (message.send() as Promise<InputMedia>).then((inputMedia) => {\n        return this.apiManager.invokeApi('messages.uploadMedia', {\n          peer: inputPeer,\n          media: inputMedia\n        });\n      })\n      .then((messageMedia) => {\n        let inputMedia: InputMedia;\n        if(messageMedia._ === 'messageMediaPhoto') {\n          const photo = this.appPhotosManager.savePhoto(messageMedia.photo);\n          inputMedia = getPhotoMediaInput(photo);\n        } else if(messageMedia._ === 'messageMediaDocument') {\n          const doc = this.appDocsManager.saveDoc(messageMedia.document);\n          inputMedia = getDocumentMediaInput(doc);\n        }\n\n        const inputSingleMedia: InputSingleMedia = {\n          _: 'inputSingleMedia',\n          media: inputMedia,\n          random_id: message.random_id,\n          message: caption,\n          entities\n        };\n\n        // * only 1 caption for all inputs\n        if(caption) {\n          caption = '';\n          entities = [];\n        }\n\n        return inputSingleMedia;\n      }).catch((err: any) => {\n        if(err.name === 'AbortError') {\n          return null;\n        }\n\n        this.log.error('sendAlbum upload item error:', err, message);\n        toggleError(message, true);\n        throw err;\n      });\n    });\n\n    return Promise.all(promises).then((inputs) => {\n      return invoke(inputs.filter(Boolean));\n    });\n  }\n\n  public sendContact(peerId: PeerId, contactPeerId: PeerId) {\n    return this.sendOther(peerId, this.appUsersManager.getContactMediaInput(contactPeerId));\n  }\n\n  public sendOther(peerId: PeerId, inputMedia: InputMedia, options: Partial<{\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    queryId: string\n    resultId: string,\n    scheduleDate: number,\n    silent: true,\n    geoPoint: GeoPoint,\n    sendAsPeerId: PeerId,\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    //this.checkSendOptions(options);\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let media: MessageMedia;\n    switch(inputMedia._) {\n      case 'inputMediaPoll': {\n        const pollId = '' + message.id;\n        inputMedia.poll.id = pollId;\n        this.appPollsManager.savePoll(inputMedia.poll, {\n          _: 'pollResults',\n          flags: 4,\n          total_voters: 0,\n          pFlags: {},\n          recent_voters: []\n        });\n\n        const {poll, results} = this.appPollsManager.getPoll(pollId);\n        media = {\n          _: 'messageMediaPoll',\n          poll,\n          results\n        };\n\n        break;\n      }\n\n      case 'inputMediaPhoto': {\n        media = {\n          _: 'messageMediaPhoto',\n          photo: this.appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id)\n        };\n        break;\n      }\n\n      case 'inputMediaDocument': {\n        const doc = this.appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\n        /* if(doc.sticker && doc.stickerSetInput) {\n          appStickersManager.pushPopularSticker(doc.id);\n        } */\n        media = {\n          _: 'messageMediaDocument',\n          document: doc\n        };\n        break;\n      }\n\n      case 'inputMediaContact': {\n        media = {\n          _: 'messageMediaContact',\n          phone_number: inputMedia.phone_number,\n          first_name: inputMedia.first_name,\n          last_name: inputMedia.last_name,\n          user_id: inputMedia.user_id ?? '0',\n          vcard: inputMedia.vcard\n        };\n        break;\n      }\n\n      case 'inputMediaGeoPoint': {\n        media = {\n          _: 'messageMediaGeo',\n          geo: options.geoPoint\n        };\n        break;\n      }\n\n      case 'inputMediaVenue': {\n        media = {\n          _: 'messageMediaVenue',\n          geo: options.geoPoint,\n          title: inputMedia.title,\n          address: inputMedia.address,\n          provider: inputMedia.provider,\n          venue_id: inputMedia.venue_id,\n          venue_type: inputMedia.venue_type\n        };\n        break;\n      }\n      \n      // @ts-ignore\n      case 'messageMediaPending': {\n        media = inputMedia;\n        break;\n      }\n    }\n\n    message.media = media;\n\n    let toggleError = (on: boolean) => {\n      /* const historyMessage = this.messagesForHistory[messageId];\n      if (on) {\n        message.error = true\n        if (historyMessage) {\n          historyMessage.error = true\n        }\n      } else {\n        delete message.error\n        if (historyMessage) {\n          delete historyMessage.error\n        }\n      } */\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined;\n      let apiPromise: Promise<any>;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMedia', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          message: '',\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      }\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates) => {\n        if(updates.updates) {\n          updates.updates.forEach((update: Update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }, (error) => {\n        toggleError(true);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    return message.promise;\n  }\n\n  /* private checkSendOptions(options: Partial<{\n    scheduleDate: number\n  }>) {\n    if(options.scheduleDate) {\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\n      if(options.scheduleDate <= minTimestamp) {\n        delete options.scheduleDate;\n      }\n    }\n  } */\n\n  private beforeMessageSending(message: Message.message, options: Partial<{\n    isGroupedItem: true, \n    isScheduled: true, \n    threadId: number, \n    clearDraft: true,\n    sequential: boolean\n  }> = {}) {\n    const messageId = message.id;\n    const peerId = this.getMessagePeer(message);\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n\n    if(options.isScheduled) {\n      //if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\n      setTimeout(() => {\n        this.rootScope.dispatchEvent('scheduled_new', {peerId, mid: messageId});\n      }, 0);\n    } else {\n      /* if(options.threadId && this.threadsStorage[peerId]) {\n        delete this.threadsStorage[peerId][options.threadId];\n      } */\n      const storages: HistoryStorage[] = [\n        this.getHistoryStorage(peerId),\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\n      ];\n\n      for(const storage of storages) {\n        if(storage) {\n          storage.history.unshift(messageId);\n        }\n      }\n\n      //if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isOutgoing: true});\n      this.setDialogTopMessage(message);\n      setTimeout(() => {\n        this.rootScope.dispatchEvent('history_append', {storageKey: storage.key, peerId, mid: messageId});\n      }, 0);\n    }\n\n    const pending: PendingMessageDetails = this.pendingByRandomId[message.random_id] = {\n      peerId, \n      tempId: messageId, \n      threadId: options.threadId, \n      storage,\n      sequential: options.sequential\n    };\n\n    if(!options.isGroupedItem && message.send) {\n      setTimeout(() => {\n        if(options.clearDraft) {\n          this.appDraftsManager.clearDraft(peerId, options.threadId);\n        }\n\n        message.send();\n      }, 0/* 3000 */);\n    }\n\n    return pending;\n  }\n\n  private generateOutgoingMessage(peerId: PeerId, options: Partial<{\n    scheduleDate: number,\n    replyToMsgId: number,\n    sendAsPeerId: PeerId, \n    threadId: number,\n    viaBotId: BotId,\n    groupId: string,\n    replyMarkup: ReplyMarkup,\n  }>) {\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    let postAuthor: string;\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\n    if(isBroadcast) {\n      const chat = this.appPeersManager.getPeer(peerId) as Chat.channel;\n      if(chat.pFlags.signatures) {\n        const user = this.appUsersManager.getSelf();\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n        postAuthor = fullName;\n      }\n    }\n\n    const message: Message.message = {\n      _: 'message',\n      id: this.generateTempMessageId(peerId),\n      from_id: options.sendAsPeerId ? this.appPeersManager.getOutputPeer(options.sendAsPeerId) : this.generateFromId(peerId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      post_author: postAuthor, \n      pFlags: this.generateFlags(peerId),\n      date: options.scheduleDate || (tsNow(true) + this.timeManager.getServerTimeOffset()),\n      message: '',\n      grouped_id: options.groupId,\n      random_id: randomLong(),\n      reply_to: this.generateReplyHeader(options.replyToMsgId, options.threadId),\n      via_bot_id: options.viaBotId,\n      reply_markup: options.replyMarkup,\n      replies: this.generateReplies(peerId),\n      views: isBroadcast && 1,\n      pending: true\n    };\n\n    defineNotNumerableProperties(message, ['send', 'promise']);\n    if(options.groupId === undefined) {\n      message.promise = deferredPromise();\n    }\n\n    return message;\n  }\n\n  private generateReplyHeader(replyToMsgId: number, replyToTopId?: number) {\n    const header = {\n      _: 'messageReplyHeader',\n      reply_to_msg_id: replyToMsgId || replyToTopId,\n    } as MessageReplyHeader;\n\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\n      header.reply_to_top_id = replyToTopId;\n    }\n\n    return header;\n  }\n\n  private generateReplies(peerId: PeerId) {\n    let replies: MessageReplies.messageReplies;\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n      if(channelFull?.linked_chat_id) {\n        replies = {\n          _: 'messageReplies',\n          flags: 1,\n          pFlags: {\n            comments: true\n          },\n          channel_id: channelFull.linked_chat_id,\n          replies: 0,\n          replies_pts: 0\n        };\n      }\n    }\n\n    return replies;\n  }\n\n  /**\n   * Generate correct from_id according to anonymous or broadcast\n   */\n  private generateFromId(peerId: PeerId) {\n    if(this.appPeersManager.isAnyChat(peerId) && (this.appPeersManager.isBroadcast(peerId) || this.isAnonymousSending(peerId))) {\n      return undefined;\n    } else {\n      return this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId());\n    }\n  }\n\n  private generateFlags(peerId: PeerId) {\n    const pFlags: Message.message['pFlags'] = {};\n    const fromId = this.appUsersManager.getSelf().id;\n    if(peerId !== fromId) {\n      pFlags.out = true;\n\n      if(!this.appPeersManager.isChannel(peerId) && !this.appUsersManager.isBot(peerId)) {\n        pFlags.unread = true;\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      pFlags.post = true;\n    }\n\n    return pFlags;\n  }\n\n  private generateForwardHeader(peerId: PeerId, originalMessage: Message.message) {\n    const myId = this.appUsersManager.getSelf().id.toPeerId();\n    const fromId = originalMessage.fromId;\n    if(fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from) {\n      return;\n    }\n\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\n      _: 'messageFwdHeader',\n      flags: 0,\n      date: originalMessage.date\n    };\n\n    let isUserHidden = false;\n    if(originalMessage.fwd_from) {\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\n    } else {\n      fwdHeader.post_author = originalMessage.post_author;\n      \n      if(fromId.isUser()) {\n        const userFull = this.appProfileManager.getCachedFullUser(fromId.toUserId());\n        if(userFull?.private_forward_name) {\n          fwdHeader.from_name = userFull.private_forward_name;\n          isUserHidden = true;\n        }\n      }\n\n      if(!isUserHidden) {\n        fwdHeader.from_id = this.appPeersManager.getOutputPeer(fromId);\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(originalMessage.peerId)) {\n      if(originalMessage.post_author) {\n        fwdHeader.post_author = originalMessage.post_author;\n      }\n\n      fwdHeader.channel_post = originalMessage.id;\n    }\n    \n    if(peerId === myId && !isUserHidden) {\n      fwdHeader.saved_from_msg_id = originalMessage.id;\n      fwdHeader.saved_from_peer = this.appPeersManager.getOutputPeer(originalMessage.peerId);\n    }\n\n    return fwdHeader;\n  }\n\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\n    const maxId = Number.MAX_SAFE_INTEGER;\n    const message: Message.messageService = {\n      _: 'messageService',\n      pFlags: {},\n      action: {\n        _: 'messageActionChannelEditPhoto',\n        photo\n      },\n      id: maxId,\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      mid: maxId,\n      peerId,\n      date: (photo as Photo.photo).date,\n      fromId: peerId\n    };\n\n    this.getHistoryMessagesStorage(peerId).set(maxId, message);\n    return message;\n  }\n\n  public getUploadPromise(uploadFileName: string) {\n    return this.uploadFilePromises[uploadFileName];\n  }\n\n  public isAnonymousSending(peerId: PeerId): boolean {\n    return peerId.isAnyChat() && this.appPeersManager.getPeer(peerId).admin_rights?.pFlags?.anonymous;\n  }\n\n  public setDialogTopMessage(message: MyMessage, dialog: MTDialog.dialog = this.getDialogOnly(message.peerId)) {\n    if(dialog) {\n      dialog.top_message = message.mid;\n      \n      const historyStorage = this.getHistoryStorage(message.peerId);\n      historyStorage.maxId = message.mid;\n\n      this.dialogsStorage.generateIndexForDialog(dialog, false, message);\n\n      this.scheduleHandleNewDialogs(message.peerId, dialog);\n    }\n  }\n\n  public cancelPendingMessage(randomId: string) {\n    const pendingData = this.pendingByRandomId[randomId];\n\n    /* if(DEBUG) {\n      this.log('cancelPendingMessage', randomId, pendingData);\n    } */\n\n    if(pendingData) {\n      const {peerId, tempId, storage} = pendingData;\n      const historyStorage = this.getHistoryStorage(peerId);\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateDeleteMessages',\n        messages: [tempId],\n        pts: undefined,\n        pts_count: undefined\n      });\n\n      historyStorage.history.delete(tempId);\n\n      delete this.pendingByRandomId[randomId];\n      storage.delete(tempId);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /* public async refreshConversations() {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(let folderId = 0; folderId < 2; ++folderId) {\n      let offsetDate = 0;\n      for(;;) {\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\n  \n        if(dialogs.length) {\n          outDialogs.push(...dialogs as Dialog[]);\n          const dialog = dialogs[dialogs.length - 1];\n\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\n          const peerId = getPeerId(dialog.peer);\n          const mid = generateMessageId(dialog.top_message);\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\n\n          if(!offsetDate) {\n            console.error('refreshConversations: got no offsetDate', dialog);\n            break;\n          }\n        }\n        \n        if(isEnd) {\n          break;\n        }\n      }\n    }\n\n    let obj: {[peerId: string]: Dialog} = {};\n    outDialogs.forEach((dialog) => {\n      obj[dialog.peerId] = dialog;\n    });\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n\n    return outDialogs;\n  } */\n\n  public async fillConversations(): Promise<void> {\n    const middleware = this.middleware.get();\n    while(!this.dialogsStorage.isDialogsLoaded(GLOBAL_FOLDER_ID)) {\n      const result = await this.getTopMessages(100, GLOBAL_FOLDER_ID);\n      if(!middleware() || result.isEnd) {\n        break;\n      }\n    }\n  }\n\n  /* public async getConversationsAll(query = '', folderId = 0) {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(; folderId < 2; ++folderId) {\n      let offsetIndex = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\n  \n        if(dialogs.length) {\n          outDialogs.push(...dialogs);\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return outDialogs;\n  } */\n\n  public getConversations(query = '', offsetIndex?: number, limit?: number, folderId = 0, skipMigrated?: boolean) {\n    return this.dialogsStorage.getDialogs(query, offsetIndex, limit, folderId, skipMigrated);\n  }\n\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(threadId) {\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    } else {\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\n      const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    }\n  }\n\n  // public lolSet = new Set();\n  public getTopMessages(limit: number, folderId: LOCAL_FOLDER_ID, offsetDate?: number) {\n    //const dialogs = this.dialogsStorage.getFolder(folderId);\n    let offsetId = 0;\n    let offsetPeerId: PeerId;\n    let offsetIndex = 0;\n\n    if(offsetDate === undefined) {\n      offsetDate = this.dialogsStorage.getOffsetDate(folderId);\n    }\n\n    if(offsetDate) {\n      offsetIndex = offsetDate * 0x10000;\n      offsetDate += this.timeManager.getServerTimeOffset();\n    }\n\n    const useLimit = 100;\n    const middleware = this.middleware.get();\n\n    // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\n    // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\n    // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\n    const params: MessagesGetDialogs = {\n      folder_id: folderId,\n      offset_date: offsetDate,\n      offset_id: offsetId,\n      offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n      limit: useLimit,\n      hash: '0'\n    };\n\n    return this.apiManager.invokeApiSingle('messages.getDialogs', params, {\n      //timeout: APITIMEOUT,\n      noErrorBox: true\n    }).then((dialogsResult) => {\n      if(!middleware() || dialogsResult._ === 'messages.dialogsNotModified') return null;\n\n      if(DEBUG) {\n        this.log('messages.getDialogs result:', dialogsResult.dialogs, {...dialogsResult.dialogs[0]});\n      }\n\n      /* if(!offsetDate) {\n        telegramMeWebService.setAuthorized(true);\n      } */\n\n      // can reset pinned order here\n      if(!offsetId && !offsetDate && !offsetPeerId && folderId !== GLOBAL_FOLDER_ID) {\n        this.dialogsStorage.resetPinnedOrder(folderId);\n      }\n\n      if(!offsetDate) {\n        telegramMeWebManager.setAuthorized(true);\n        this.appDraftsManager.addMissedDialogs();\n      }\n\n      this.appUsersManager.saveApiUsers(dialogsResult.users);\n      this.appChatsManager.saveApiChats(dialogsResult.chats);\n      this.saveMessages(dialogsResult.messages);\n\n      let maxSeenIdIncremented = offsetDate ? true : false;\n      let hasPrepend = false;\n      const noIdsDialogs: {[peerId: PeerId]: Dialog} = {};\n      const setFolderId: LOCAL_FOLDER_ID = folderId === GLOBAL_FOLDER_ID ? 0 : folderId;\n      const saveGlobalOffset = folderId === GLOBAL_FOLDER_ID;\n      forEachReverse((dialogsResult.dialogs as Dialog[]), (dialog) => {\n        //const d = Object.assign({}, dialog);\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\n        if(dialog.folder_id === undefined) {\n          dialog.folder_id = setFolderId;\n        }\n\n        this.dialogsStorage.saveDialog(dialog, undefined, true, saveGlobalOffset);\n\n        if(!maxSeenIdIncremented &&\n          !this.appPeersManager.isChannel(dialog.peerId || getPeerId(dialog.peer))) {\n          this.incrementMaxSeenId(dialog.top_message);\n          maxSeenIdIncremented = true;\n        }\n\n        if(dialog.peerId === undefined) {\n          return;\n        }\n\n        // if(!folderId && !dialog.folder_id) {\n        //   this.lolSet.add(dialog.peerId);\n        // }\n\n        if(offsetIndex && getDialogIndex(dialog) > offsetIndex) {\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\n          hasPrepend = true;\n        }\n\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\n        if(!getServerMessageId(dialog.read_inbox_max_id) && !getServerMessageId(dialog.read_outbox_max_id)) {\n          noIdsDialogs[dialog.peerId] = dialog;\n\n          this.log.error('noIdsDialogs', dialog, params);\n        }\n      });\n\n      const keys = Object.keys(noIdsDialogs);\n      if(keys.length) {\n        //setTimeout(() => { // test bad situation\n          const peerIds = keys.map((key) => key.toPeerId());\n          const promises = peerIds.map((peerId) => this.reloadConversation(peerId));\n          Promise.all(promises).then(() => {\n            this.rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\n  \n            for(let i = 0; i < peerIds.length; ++i) {\n              const peerId = peerIds[i];\n              this.rootScope.dispatchEvent('dialog_unread', {\n                peerId, \n                dialog: this.getDialogOnly(peerId)\n              });\n            }\n          });\n        //}, 10e3);\n      }\n\n      const count = (dialogsResult as MessagesDialogs.messagesDialogsSlice).count;\n\n      // exclude empty draft dialogs\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\n      let dialogsLength = 0;\n      for(let i = 0, length = folderDialogs.length; i < length; ++i) {\n        if(getServerMessageId(folderDialogs[i].top_message)) {\n          ++dialogsLength;\n        }\n      }\n\n      const isEnd = /* limit > dialogsResult.dialogs.length || */ \n        !count || \n        dialogsLength >= count ||\n        !dialogsResult.dialogs.length;\n      if(isEnd) {\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\n      }\n\n      if(hasPrepend) {\n        this.scheduleHandleNewDialogs();\n      } else {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', {});\n      }\n\n      const dialogs = (dialogsResult as MessagesDialogs.messagesDialogsSlice).dialogs;\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\n      return {\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1], \n        count, \n        dialogs: slicedDialogs\n      };\n    });\n  }\n\n  public async forwardMessages(peerId: PeerId, fromPeerId: PeerId, mids: number[], options: Partial<{\n    withMyScore: true,\n    silent: true,\n    scheduleDate: number,\n    dropAuthor: boolean,\n    dropCaptions: boolean,\n    sendAsPeerId: PeerId,\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    mids = mids.slice().sort((a, b) => a - b);\n\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\n        this.sendText(peerId, originalMessage.message, {\n          entities: originalMessage.entities,\n          scheduleDate: options.scheduleDate,\n          silent: options.silent\n        });\n\n        mids.splice(i--, 1);\n        --length;\n      }\n    }\n\n    if(!mids.length) {\n      return Promise.resolve();\n    }\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    if(options.dropCaptions) {\n      options.dropAuthor = true;\n    }\n\n    const groups: {\n      [groupId: string]: {\n        tempId: string,\n        messages: Message.message[]\n      }\n    } = {};\n\n    const newMids: number[] = [];\n    const newMessages = mids.map((mid) => {\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\n      newMids.push(message.id);\n\n      const keys: Array<keyof Message.message> = [\n        'entities', \n        'media', \n        // 'reply_markup'\n      ];\n\n      if(!options.dropAuthor) {\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\n        keys.push('views', 'forwards');\n\n        if(message.fwd_from?.from_name && peerId === this.appPeersManager.peerId) {\n          delete message.from_id;\n        }\n      }\n\n      if(!options.dropCaptions || !originalMessage.media) {\n        keys.push('message');\n      }\n\n      const replyToMid = originalMessage.reply_to?.reply_to_msg_id;\n      const replyToMessageIdx = mids.indexOf(replyToMid);\n      if(replyToMid && replyToMessageIdx !== -1) {\n        const newReplyToMid = newMids[replyToMessageIdx];\n        message.reply_to = {\n          _: 'messageReplyHeader',\n          reply_to_msg_id: newReplyToMid\n        };\n\n        /* this.invokeAfterMessageIsSent(newReplyToMid, 'reply', async(originalMessage) => {\n          message.reply_to.reply_to_msg_id = originalMessage.mid;\n        }); */\n      }\n\n      keys.forEach((key) => {\n        // @ts-ignore\n        message[key] = originalMessage[key];\n      });\n\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n      if(document) {\n        const types: MyDocument['type'][] = ['round', 'voice'];\n        if(types.includes(document.type)) {\n          (message as MyMessage).pFlags.media_unread = true;\n        }\n      }\n\n      if(originalMessage.grouped_id) {\n        const group = groups[originalMessage.grouped_id] ?? (groups[originalMessage.grouped_id] = {tempId: '' + ++this.groupedTempId, messages: []});\n        group.messages.push(message);\n      }\n\n      return message;\n    });\n\n    for(const groupId in groups) {\n      const group = groups[groupId];\n      if(group.messages.length > 1) {\n        group.messages.forEach((message) => {\n          message.grouped_id = group.tempId;\n        });\n      }\n    }\n\n    newMessages.forEach((message) => {\n      this.beforeMessageSending(message, {\n        isScheduled: !!options.scheduleDate || undefined,\n        sequential: true\n      });\n    });\n\n    const sentRequestOptions: PendingAfterMsg = {};\n    if(this.pendingAfterMsgs[peerId]) {\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n    }\n\n    const promise = /* true ? Promise.resolve() :  */this.apiManager.invokeApiAfter('messages.forwardMessages', {\n      from_peer: this.appPeersManager.getInputPeerById(fromPeerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      random_id: newMessages.map((message) => message.random_id),\n      to_peer: this.appPeersManager.getInputPeerById(peerId),\n      with_my_score: options.withMyScore,\n      silent: options.silent,\n      schedule_date: options.scheduleDate,\n      drop_author: options.dropAuthor,\n      drop_media_captions: options.dropCaptions,\n      send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n    }, sentRequestOptions).then((updates) => {\n      this.log('forwardMessages updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }).finally(() => {\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n        delete this.pendingAfterMsgs[peerId];\n      }\n    });\n\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.forwardMessages(peerId, fromPeerId, overflowMids, options));\n    }\n    \n    return Promise.all(promises).then(noop);\n  }\n\n  public generateEmptyMessage(mid: number): Message.message | Message.messageService {\n    return undefined;\n    // return {\n    //   _: 'messageEmpty',\n    //   id: getServerMessageId(mid),\n    //   mid,\n    //   deleted: true,\n    //   pFlags: {}\n    // };\n  }\n  \n  public getMessagesStorageByKey(key: MessagesStorageKey) {\n    const s = key.split('_');\n    const peerId: PeerId = +s[0];\n    const type: MessagesStorageType = s[1] as any;\n    return type === 'scheduled' ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n  }\n\n  public getMessageFromStorage(storage: MessagesStorage | MessagesStorageKey, mid: number) {\n    if(typeof(storage) === 'string') {\n      storage = this.getMessagesStorageByKey(storage);\n    }\n    \n    return storage && storage.get(mid)/*  || this.generateEmptyMessage(mid) */;\n  }\n\n  private createMessageStorage(peerId: PeerId, type: MessagesStorageType) {\n    const storage: MessagesStorage = new Map() as any;\n    storage.peerId = peerId;\n    storage.type = type;\n    storage.key = `${peerId}_${type}`;\n    \n    /* let num = 0;\n    Object.defineProperty(storage, 'num', {\n      get: () => ++num,\n      set: (_num: number) => num = _num, \n      enumerable: false\n    });\n\n    Object.defineProperty(storage, 'generateIndex', {\n      value: (message: any) => {\n        if(message.index === undefined) {\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\n        }\n      },\n      enumerable: false\n    }); */\n\n    return storage;\n  }\n\n  public getHistoryMessagesStorage(peerId: PeerId) {\n    return this.messagesStorageByPeerId[peerId] ?? (this.messagesStorageByPeerId[peerId] = this.createMessageStorage(peerId, 'history'));\n  }\n\n  public getMessagesStorage(key: MessagesStorageKey | MessagesStorage): MessagesStorage {\n    if(typeof(key) === 'object') {\n      return key;\n    } else {\n      return this.getMessagesStorageByKey(key);\n    }\n  }\n\n  public getMessageById(messageId: number) {\n    for(const peerId in this.messagesStorageByPeerId) {\n      if(this.appPeersManager.isChannel(peerId.toPeerId())) {\n        continue;\n      }\n\n      const message = this.messagesStorageByPeerId[peerId].get(messageId);\n      if(message) {\n        return message;\n      }\n    }\n\n    return this.getMessageFromStorage(null, messageId);\n  }\n\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\n    if(!peerId) {\n      return this.getMessageById(messageId);\n    }\n\n    return this.getMessageFromStorage(this.getHistoryMessagesStorage(peerId), messageId);\n  }\n\n  public getMessagePeer(message: any): PeerId {\n    const toId = message.peer_id && getPeerId(message.peer_id) || NULL_PEER_ID;\n\n    return toId;\n  }\n\n  public getDialogByPeerId(peerId: PeerId): [Dialog, number] | [] {\n    return this.dialogsStorage.getDialog(peerId);\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogsStorage.getDialogOnly(peerId);\n  }\n\n  public cantForwardDeleteMids(storageKey: MessagesStorageKey, mids: number[]) {\n    const storage = this.getMessagesStorage(storageKey);\n    let cantForward = !mids.length, cantDelete = !mids.length;\n    for(const mid of mids) {\n      const message = this.getMessageFromStorage(storage, mid);\n      if(!cantForward) {\n        cantForward = !this.canForward(message);\n      }\n      \n      if(!cantDelete) {\n        cantDelete = !this.canDeleteMessage(message);\n      }\n\n      if(cantForward && cantDelete) break;\n    }\n\n    return {cantForward, cantDelete};\n  }\n\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\n  public reloadConversation(inputPeer: PeerId | InputPeer) {\n    let promise: CancellablePromise<Dialog>;\n    if(inputPeer !== undefined) {\n      const peerId = getPeerId(inputPeer);\n      let obj = this.reloadConversationsPeers.get(peerId);\n      if(obj) {\n        promise = obj.promise;\n      }\n\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      this.reloadConversationsPeers.set(peerId, obj = {\n        inputDialogPeer: this.appPeersManager.getInputDialogPeerById(inputPeer),\n        promise\n      });\n    }\n\n    if(this.reloadConversationsPromise) {\n      return promise || this.reloadConversationsPromise;\n    }\n\n    this.reloadConversationsPromise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const inputDialogPeers: InputDialogPeer[] = [];\n        const promises: {[peerId: string]: typeof promise} = {};\n        for(const [peerId, {inputDialogPeer, promise}] of this.reloadConversationsPeers) {\n          inputDialogPeers.push(inputDialogPeer);\n          promises[peerId] = promise;\n        }\n\n        this.reloadConversationsPeers.clear();\n\n        const fullfillLeft = () => {\n          for(const peerId in promises) {\n            promises[peerId].resolve(undefined);\n          }\n        };\n\n        this.apiManager.invokeApi('messages.getPeerDialogs', {peers: inputDialogPeers}).then((result) => {\n          this.dialogsStorage.applyDialogs(result);\n\n          result.dialogs.forEach((dialog) => {\n            const peerId = dialog.peerId;\n            if(peerId) {\n              promises[peerId].resolve(dialog as Dialog);\n              delete promises[peerId];\n            }\n          });\n\n          // fullfillLeft();\n          // resolve();\n        }, (err) => {\n          // fullfillLeft();\n          // resolve();\n          // reject(err);\n        }).finally(() => {\n          fullfillLeft();\n          resolve();\n          \n          this.reloadConversationsPromise = null;\n\n          if(this.reloadConversationsPeers.size) {\n            this.reloadConversation();\n          }\n        });\n      }, 0);\n    });\n\n    return promise || this.reloadConversationsPromise;\n  }\n\n  private doFlushHistory(peer: InputPeer, just_clear?: boolean, revoke?: boolean): Promise<true> {\n    return this.apiManager.invokeApiSingle('messages.deleteHistory', {\n      just_clear,\n      revoke,\n      peer,\n      max_id: 0\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        return true;\n      }\n\n      return this.doFlushHistory(peer, just_clear, revoke);\n    });\n  }\n\n  public async flushHistory(peerId: PeerId, justClear?: boolean, revoke?: boolean) {\n    if(this.appPeersManager.isChannel(peerId)) {\n      const promise = this.getHistory(peerId, 0, 1);\n\n      const historyResult = await promise;\n\n      const channelId = peerId.toChatId();\n      const maxId = historyResult.history[0] || 0;\n      return this.apiManager.invokeApiSingle('channels.deleteHistory', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        max_id: getServerMessageId(maxId)\n      }).then((bool) => {\n        if(bool) {\n          this.apiUpdatesManager.processLocalUpdate({\n            _: 'updateChannelAvailableMessages',\n            channel_id: channelId,\n            available_min_id: maxId\n          });\n        }\n\n        return bool;\n      });\n    }\n\n    return this.doFlushHistory(this.appPeersManager.getInputPeerById(peerId), justClear, revoke).then(() => {\n      [\n        this.historiesStorage, \n        this.threadsStorage, \n        this.searchesStorage, \n        this.pinnedMessages,\n        this.pendingAfterMsgs,\n        this.pendingTopMsgs\n      ].forEach((s) => {\n        delete s[peerId];\n      });\n\n      const m = this.needSingleMessages.get(peerId);\n      if(m) {\n        m.clear();\n      }\n\n      [\n        this.messagesStorageByPeerId,\n        this.scheduledMessagesStorage\n      ].forEach((s) => {\n        const ss = s[peerId];\n        if(ss) {\n          ss.clear();\n        }\n      });\n      \n      if(justClear) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog: this.getDialogOnly(peerId)});\n      } else {\n        delete this.notificationsToHandle[peerId];\n        delete this.typings[peerId];\n        \n        const c = this.reloadConversationsPeers.get(peerId);\n        if(c) {\n          this.reloadConversationsPeers.delete(peerId);\n          c.promise.resolve(undefined);\n        }\n\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    });\n  }\n\n  public hidePinnedMessages(peerId: PeerId) {\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.getPinnedMessage(peerId)\n    ])\n    .then(([state, pinned]) => {\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\n      this.rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\n    });\n  }\n\n  public getPinnedMessage(peerId: PeerId) {\n    const p = this.pinnedMessages[peerId] ?? (this.pinnedMessages[peerId] = {});\n    if(p.promise) return p.promise;\n    else if(p.maxId) return Promise.resolve(p);\n\n    return p.promise = this.getSearch({\n      peerId, \n      inputFilter: {_: 'inputMessagesFilterPinned'},\n      maxId: 0,\n      limit: 1\n    }).then((result) => {\n      p.count = result.count;\n      p.maxId = result.history[0]?.mid;\n      return p;\n    }).finally(() => {\n      delete p.promise;\n    });\n  }\n\n  public getPinnedMessagesCount(peerId: PeerId) {\n    return this.pinnedMessages[peerId]?.count;\n  }\n\n  public getPinnedMessagesMaxId(peerId: PeerId) {\n    return this.pinnedMessages[peerId]?.maxId;\n  }\n\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\n    return this.apiManager.invokeApi('messages.updatePinnedMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      unpin,\n      silent,\n      pm_oneside,\n      id: getServerMessageId(mid)\n    }).then((updates) => {\n      //this.log('pinned updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\n    return this.apiManager.invokeApiSingle('messages.unpinAllMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        const storage = this.getHistoryMessagesStorage(peerId);\n        storage.forEach((message) => {\n          if((message as Message.message).pFlags.pinned) {\n            delete (message as Message.message).pFlags.pinned;\n          }\n        });\n\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\n        delete this.pinnedMessages[peerId];\n\n        return true;\n      }\n\n      return this.unpinAllMessages(peerId);\n    });\n  }\n\n  public getAlbumText(grouped_id: string) {\n    const group = this.groupedMessagesStorage[grouped_id];\n    let foundMessages = 0, message: string, totalEntities: MessageEntity[], entities: MessageEntity[];\n    for(const [mid, m] of group) {\n      assumeType<Message.message>(m);\n      if(m.message) {\n        if(++foundMessages > 1) break;\n        message = m.message;\n        totalEntities = m.totalEntities;\n        entities = m.entities;\n      }\n    }\n\n    if(foundMessages > 1) {\n      message = undefined;\n      totalEntities = undefined;\n      entities = undefined;\n    }\n\n    return {message, entities, totalEntities};\n  }\n\n  public getGroupsFirstMessage(message: Message.message) {\n    if(!message?.grouped_id) return message;\n\n    const storage = this.groupedMessagesStorage[message.grouped_id];\n    let minMid = Number.MAX_SAFE_INTEGER;\n    for(const [mid, message] of storage) {\n      if(message.mid < minMid) {\n        minMid = message.mid;\n      }\n    }\n\n    return storage.get(minMid) as Message.message;\n  }\n\n  public getMidsByAlbum(grouped_id: string, sort: 'asc' | 'desc' = 'asc') {\n    return getObjectKeysAndSort(this.groupedMessagesStorage[grouped_id], sort);\n  }\n\n  public getMidsByMessage(message: Message) {\n    if(!message) return [];\n    else if((message as Message.message).grouped_id) return this.getMidsByAlbum((message as Message.message).grouped_id);\n    else return [message.mid];\n  }\n\n  public filterMessages(message: MyMessage, verify: (message: MyMessage) => boolean) {\n    const out: MyMessage[] = [];\n    if((message as Message.message).grouped_id) {\n      const storage = this.groupedMessagesStorage[(message as Message.message).grouped_id];\n      for(const [mid, message] of storage) {\n        if(verify(message)) {\n          out.push(message);\n        }\n      }\n    } else {\n      if(verify(message)) {\n        out.push(message);\n      }\n    }\n\n    return out;\n  }\n\n  public generateTempMessageId(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    return this.appMessagesIdsManager.generateTempMessageId(dialog?.top_message || 0);\n  }\n\n  public saveMessage(message: Message, options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    //isNew: boolean, // * new - from update\n  }> = {}) {\n    if(!message || message._ === 'messageEmpty') {\n      return;\n    }\n\n    if(message.pFlags === undefined) {\n      message.pFlags = {};\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\n\n    const peerId = this.getMessagePeer(message);\n    const storage = options.storage || this.getHistoryMessagesStorage(peerId);\n    const isChannel = message.peer_id._ === 'peerChannel';\n    const isBroadcast = isChannel && this.appChatsManager.isBroadcast(peerId.toChatId());\n    const isMessage = message._ === 'message';\n\n    if(options.isOutgoing) {\n      message.pFlags.is_outgoing = true;\n    }\n    \n    const mid = generateMessageId(message.id);\n    message.mid = mid;\n\n    if(isMessage) {\n      if(options.isScheduled) {\n        message.pFlags.is_scheduled = true;\n      }\n\n      if(message.grouped_id) {\n        const storage = this.groupedMessagesStorage[message.grouped_id] ?? (this.groupedMessagesStorage[message.grouped_id] = this.createMessageStorage(peerId, 'grouped'));\n        storage.set(mid, message);\n      }\n\n      if(message.via_bot_id) {\n        // ! WARNING\n        message.viaBotId = message.via_bot_id as any;\n      }\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog && mid) {\n      if(mid > dialog[message.pFlags.out\n        ? 'read_outbox_max_id'\n        : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n      }\n    }\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n    if(message.reply_to) {\n      if(message.reply_to.reply_to_msg_id) {\n        message.reply_to.reply_to_msg_id = message.reply_to_mid = generateMessageId(message.reply_to.reply_to_msg_id);\n      } \n\n      if(message.reply_to.reply_to_top_id) {\n        message.reply_to.reply_to_top_id = generateMessageId(message.reply_to.reply_to_top_id);\n      }\n    }\n\n    const replies = isMessage && message.replies;\n    if(replies) {\n      if(replies.max_id) replies.max_id = generateMessageId(replies.max_id);\n      if(replies.read_max_id) replies.read_max_id = generateMessageId(replies.read_max_id);\n    }\n\n    const overwriting = !!peerId;\n    if(!overwriting) {\n      message.date -= this.timeManager.getServerTimeOffset();\n    }\n    \n    //storage.generateIndex(message);\n    const myId = this.appPeersManager.peerId;\n\n    const fwdHeader = isMessage && (message as Message.message).fwd_from;\n\n    message.peerId = peerId;\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\n      message.fromId = fwdHeader ? (fwdHeader.from_id ? getPeerId(fwdHeader.from_id) : NULL_PEER_ID) : myId;\n    } else {\n      //message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\n      message.fromId = message.pFlags.post || !message.from_id ? peerId : getPeerId(message.from_id);\n    }\n\n    if(fwdHeader) {\n      //if(peerId === myID) {\n        if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = generateMessageId(fwdHeader.saved_from_msg_id);\n        if(fwdHeader.channel_post) fwdHeader.channel_post = generateMessageId(fwdHeader.channel_post);\n\n        const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\n        const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\n        if(peer && msgId) {\n          const savedFromPeerId = getPeerId(peer);\n          const savedFromMid = generateMessageId(msgId);\n          message.savedFrom = savedFromPeerId + '_' + savedFromMid;\n        }\n\n        /* if(peerId.isAnyChat() || peerId === myID) {\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\n        } */\n      /* } else {\n        apiMessage.fwdPostID = fwdHeader.channel_post;\n      } */\n\n      message.fwdFromId = getPeerId(fwdHeader.from_id);\n\n      if(!overwriting) {\n        fwdHeader.date -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    const mediaContext: ReferenceContext = {\n      type: 'message',\n      peerId,\n      messageId: mid\n    };\n\n    /* if(isMessage) {\n      const entities = message.entities;\n      if(entities && entities.find((entity) => entity._ === 'messageEntitySpoiler')) {\n        message.media = {_: 'messageMediaUnsupported'};\n      }\n    } */\n\n    if(isMessage && message.media) {\n      let unsupported = false;\n      switch(message.media._) {\n        case 'messageMediaEmpty': {\n          delete message.media;\n          break;\n        }\n\n        case 'messageMediaPhoto': {\n          if(message.media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            message.media.photo = this.appPhotosManager.savePhoto(message.media.photo, mediaContext);\n          }\n\n          if(!(message.media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\n            delete message.media;\n          }\n          \n          break;\n        }\n          \n        case 'messageMediaPoll': {\n          const result = this.appPollsManager.savePoll(message.media.poll, message.media.results, message);\n          message.media.poll = result.poll;\n          message.media.results = result.results;\n          break;\n        }\n          \n        case 'messageMediaDocument': {\n          if(message.media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            const originalDoc = message.media.document;\n            message.media.document = this.appDocsManager.saveDoc(originalDoc, mediaContext); // 11.04.2020 warning\n\n            if(!message.media.document && originalDoc._ !== 'documentEmpty') {\n              unsupported = true;\n            }\n          }\n\n          break;\n        }\n          \n        case 'messageMediaWebPage': {\n          const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(peerId, mid, options.isScheduled);\n          message.media.webpage = this.appWebPagesManager.saveWebPage(message.media.webpage, messageKey, mediaContext);\n          break;\n        }\n          \n        /*case 'messageMediaGame':\n          AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\n          apiMessage.media.handleMessage = true;\n          break; */\n\n        case 'messageMediaInvoice': {\n          unsupported = true;\n          message.media = {_: 'messageMediaUnsupported'};\n          break;\n        }\n\n        case 'messageMediaUnsupported': {\n          unsupported = true;\n          break;\n        }\n      }\n\n      if(unsupported) {\n        message.media = {_: 'messageMediaUnsupported'};\n        message.message = '';\n        delete message.entities;\n        delete message.totalEntities;\n      }\n    }\n\n    if(!isMessage && message.action) {\n      const action = message.action as MessageAction;\n      let migrateFrom: PeerId;\n      let migrateTo: PeerId;\n      const suffix = message.fromId === this.appUsersManager.getSelf().id ? 'You' : '';\n\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\n        (action as MessageAction.messageActionChatEditPhoto).photo = this.appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\n      }\n\n      if((action as any).document) {\n        (action as any).document = this.appDocsManager.saveDoc((action as any).photo, mediaContext);\n      }\n\n      switch(action._) {\n        //case 'messageActionChannelEditPhoto':\n        case 'messageActionChatEditPhoto':\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\n          if((action.photo as Photo.photo)?.video_sizes) {\n            // @ts-ignore\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\n          } else {\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\n              // @ts-ignore\n              action._ = 'messageActionChannelEditPhoto';\n            }\n          }\n          break;\n        \n        case 'messageActionGroupCall': {\n          //assumeType<MessageAction.messageActionGroupCall>(action);\n\n          this.appGroupCallsManager.saveGroupCall(action.call);\n\n          let type: string;\n          if(action.duration === undefined) {\n            type = 'started';\n          } else {\n            type = 'ended'\n          }\n\n          if(!isBroadcast) {\n            type += '_by' + suffix;\n          }\n\n          // @ts-ignore\n          action.type = type;\n\n          break;\n        }\n\n        case 'messageActionChatEditTitle':\n          /* if(options.isNew) {\n            const chat = appChatsManager.getChat(peerId.toChatId());\n            chat.title = action.title;\n            appChatsManager.saveApiChat(chat, true);\n          } */\n          \n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelEditTitle';\n          }\n          break;\n\n        case 'messageActionChatDeletePhoto':\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelDeletePhoto';\n          }\n          break;\n\n        case 'messageActionChatAddUser':\n          if(action.users.length === 1) {\n            // @ts-ignore\n            action.user_id = action.users[0];\n            // @ts-ignore\n            if(message.fromId === action.user_id) {\n              if(isChannel) {\n                // @ts-ignore\n                action._ = 'messageActionChatJoined' + suffix;\n              } else {\n                // @ts-ignore\n                action._ = 'messageActionChatReturn' + suffix;\n              }\n            }\n          } else if(action.users.length > 1) {\n            // @ts-ignore\n            action._ = 'messageActionChatAddUsers';\n          }\n          break;\n\n        case 'messageActionChatDeleteUser':\n          if(message.fromId === action.user_id) {\n            // @ts-ignore\n            action._ = 'messageActionChatLeave' + suffix;\n          }\n          break;\n\n        case 'messageActionChannelMigrateFrom':\n          migrateFrom = action.chat_id.toPeerId(true);\n          migrateTo = peerId;\n          break\n\n        case 'messageActionChatMigrateTo':\n          migrateFrom = peerId;\n          migrateTo = action.channel_id.toPeerId(true);\n          break;\n\n        case 'messageActionHistoryClear':\n          //apiMessage.deleted = true;\n          message.clear_history = true;\n          delete message.pFlags.out;\n          delete message.pFlags.unread;\n          break;\n\n        case 'messageActionPhoneCall':\n          // @ts-ignore\n          action.type = \n            (action.pFlags.video ? 'video_' : '') +\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\n            (\n              action.duration !== undefined ? 'ok' : (\n                action.reason._ === 'phoneCallDiscardReasonMissed'\n                  ? 'missed'\n                  : 'cancelled'\n              )\n            );\n          break;\n      }\n      \n      if(migrateFrom &&\n          migrateTo &&\n          !this.migratedFromTo[migrateFrom] &&\n          !this.migratedToFrom[migrateTo]) {\n        this.migrateChecks(migrateFrom, migrateTo);\n      }\n    }\n\n    /* if(message.grouped_id) {\n      if(!groups) {\n        groups = new Set();\n      }\n\n      groups.add(message.grouped_id);\n    } else {\n      message.rReply = this.getRichReplyText(message);\n    } */\n\n    if(isMessage && message.message.length && !message.totalEntities) {\n      this.wrapMessageEntities(message);  \n    }\n\n    storage.set(mid, message);\n\n    return message;\n  }\n\n  public saveMessages(messages: any[], options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    //isNew: boolean, // * new - from update\n  }> = {}): (Message.message | Message.messageService)[] {\n    if((messages as any).saved) return messages;\n    (messages as any).saved = true;\n    messages.forEach((message, idx, arr) => {\n      arr[idx] = this.saveMessage(message, options);\n    });\n\n    return messages;\n  }\n\n  public async getFirstMessageToEdit(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n      let goodMessage: Message.message | Message.messageService;\n      const myPeerId = this.appPeersManager.peerId;\n      for(const mid of slice) {\n        const message = this.getMessageByPeer(peerId, mid);\n        const good = myPeerId === peerId ? message.fromId === myPeerId : message.pFlags.out;\n\n        if(good) {\n          if(await this.canEditMessage(message, 'text')) {\n            goodMessage = message;\n            break;\n          }\n\n          // * this check will allow editing only last message\n          //break;\n        }\n      }\n\n      return goodMessage;\n    }\n  }\n\n  private wrapMessageEntities(message: Message.message) {\n    const apiEntities = message.entities ? message.entities.slice() : [];\n    message.message = fixEmoji(message.message, apiEntities);\n\n    const myEntities = parseEntities(message.message);\n    message.totalEntities = mergeEntities(apiEntities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n  }\n\n  public reportMessages(peerId: PeerId, mids: number[], reason: ReportReason['_'], message?: string) {\n    return this.apiManager.invokeApiSingle('messages.report', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      reason: {\n        _: reason\n      },\n      message\n    });\n  }\n\n  public startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\n    if(startParam) {\n      const randomId = randomLong();\n\n      return this.apiManager.invokeApi('messages.startBot', {\n        bot: this.appUsersManager.getUserInput(botId),\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        random_id: randomId,\n        start_param: startParam\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      });\n    }\n\n    const str = '/start';\n    if(chatId) {\n      let promise: Promise<void>;\n      if(this.appChatsManager.isChannel(chatId)) {\n        promise = this.appChatsManager.inviteToChannel(chatId, [botId]);\n      } else {\n        promise = this.appChatsManager.addChatUser(chatId, botId, 0);\n      }\n\n      return promise.catch((error) => {\n        if(error && error.type == 'USER_ALREADY_PARTICIPANT') {\n          error.handled = true;\n          return;\n        }\n\n        throw error;\n      }).then(() => {\n        const bot = this.appUsersManager.getUser(botId);\n        return this.sendText(peerId, str + '@' + bot.username);\n      });\n    }\n\n    return this.sendText(peerId, str);\n  }\n\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\n    this.apiManager.invokeApi('folders.editPeerFolders', {\n      folder_peers: peerIds.map((peerId) => {\n        return {\n          _: 'inputFolderPeer',\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          folder_id: folderId\n        };\n      })\n    }).then((updates) => {\n      //this.log('editPeerFolders updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\n    });\n  }\n\n  public getFilter(filterId: number) {\n    return this.filtersStorage.getFilter(filterId);\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId?: number) {\n    if(filterId > 1) {\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\n\n    if(pinned) {\n      const appConfig = await this.apiManager.getAppConfig();\n      const max = filterId === 1 ? \n        (this.rootScope.premium ? appConfig.dialogs_folder_pinned_limit_premium : appConfig.dialogs_folder_pinned_limit_default) : \n        (this.rootScope.premium ? appConfig.dialogs_pinned_limit_premium : appConfig.dialogs_pinned_limit_default);\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\n        return Promise.reject({type: 'PINNED_DIALOGS_TOO_MUCH'});\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.toggleDialogPin', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      pinned\n    }).then((bool) => {\n      if(bool) {\n        const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\n        this.apiUpdatesManager.saveUpdate({\n          _: 'updateDialogPinned',\n          peer: this.appPeersManager.getDialogPeer(peerId),\n          folder_id: filterId,\n          pFlags\n        });\n      }\n    });\n  }\n\n  public markDialogUnread(peerId: PeerId, read?: true) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\n    return this.apiManager.invokeApi('messages.markDialogUnread', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      unread\n    }).then((bool) => {\n      if(bool) {\n        const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\n        this.onUpdateDialogUnreadMark({\n          _: 'updateDialogUnreadMark',\n          peer: this.appPeersManager.getDialogPeer(peerId),\n          pFlags\n        });\n      }\n    });\n  }\n\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\n    if(!this.migratedFromTo[migrateFrom] &&\n      !this.migratedToFrom[migrateTo] &&\n      this.appChatsManager.hasChat(migrateTo.toChatId())) {\n      const fromChat: Chat.chat = this.appChatsManager.getChat(migrateFrom.toChatId());\n      if(fromChat?.migrated_to && (fromChat.migrated_to as InputChannel.inputChannel).channel_id === migrateTo.toChatId()) {\n        this.migratedFromTo[migrateFrom] = migrateTo;\n        this.migratedToFrom[migrateTo] = migrateFrom;\n\n        this.rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\n\n        this.dialogsStorage.dropDialogWithEvent(migrateFrom);\n      }\n    }\n  }\n\n  private canMessageBeEdited(message: Message, kind: 'text' | 'poll') {\n    if((message as Message.message)?.pFlags?.is_outgoing) {\n      return false;\n    }\n\n    const goodMedias = [\n      'messageMediaPhoto',\n      'messageMediaDocument',\n      'messageMediaWebPage'\n    ];\n\n    if(kind === 'poll') {\n      goodMedias.push('messageMediaPoll');\n    }\n\n    if(!message || \n        message._ !== 'message' || \n        message.deleted ||\n        message.fwd_from ||\n        message.via_bot_id ||\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\n        message.fromId && this.appUsersManager.isBot(message.fromId)) {\n      return false;\n    }\n    \n    if(message.media?._ === 'messageMediaDocument' &&\n        ((message.media.document as Document.document).sticker || (message.media.document as Document.document).type === 'round')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async canEditMessage(message: Message.message | Message.messageService, kind: 'text' | 'poll' = 'text') {\n    if(!message || !this.canMessageBeEdited(message, kind)) {\n      return false;\n    }\n\n    // * second rule for saved messages, because there is no 'out' flag\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === this.appUsersManager.getSelf().id) {\n      return true;\n    }\n\n    if(!message.pFlags.out || (\n        message.peer_id._ !== 'peerChannel' &&  \n        message.date < (tsNow(true) - (await this.apiManager.getConfig()).edit_time_limit) && \n        (message as Message.message).media?._ !== 'messageMediaPoll'\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canDeleteMessage(message: MyMessage) {\n    return message && (\n      message.peerId.isUser() \n      || message.pFlags.out \n      || this.appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' \n      || this.appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\n    ) && !message.pFlags.is_outgoing;\n  }\n\n  public getReplyKeyboard(peerId: PeerId) {\n    return this.getHistoryStorage(peerId).replyMarkup;\n  }\n\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n    if(!message) {\n      return false;\n    }\n\n    let messageReplyMarkup = (message as Message.message).reply_markup;\n    if(!messageReplyMarkup &&\n      !message.pFlags?.out &&\n      !(message as Message.messageService).action) {\n      return false;\n    }\n\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\n      return false;\n    }\n\n    const lastReplyMarkup = historyStorage.replyMarkup;\n    if(messageReplyMarkup) {\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n        return false;\n      }\n\n      if(messageReplyMarkup.pFlags.selective) {\n        return false;\n      }\n\n      if(historyStorage.maxOutId &&\n        message.mid < historyStorage.maxOutId &&\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\n      }\n\n      messageReplyMarkup.mid = message.mid;\n      /* messageReplyMarkup = Object.assign({\n        mid: message.mid\n      }, messageReplyMarkup); */\n\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\n        messageReplyMarkup.fromId = getPeerId(message.from_id);\n      }\n\n      historyStorage.replyMarkup = messageReplyMarkup;\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    if(message.pFlags.out) {\n      if(lastReplyMarkup) {\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\n        if(lastReplyMarkup.pFlags.single_use &&\n          !lastReplyMarkup.pFlags.hidden &&\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\n          (message as Message.message).message) {\n          lastReplyMarkup.pFlags.hidden = true;\n          // this.log('set', historyStorage.reply_markup)\n          return true;\n        }\n      } else if(!historyStorage.maxOutId ||\n        message.mid > historyStorage.maxOutId) {\n        historyStorage.maxOutId = message.mid;\n      }\n    }\n\n    assumeType<Message.messageService>(message);\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\n      (lastReplyMarkup\n        ? message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId\n        : this.appUsersManager.isBot(message.action.user_id)\n      )\n    ) {\n      historyStorage.replyMarkup = {\n        _: 'replyKeyboardHide',\n        mid: message.mid,\n        pFlags: {}\n      };\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    return false;\n  }\n\n  public getSearchStorage(peerId: PeerId, inputFilter: MyInputMessagesFilter) {\n    if(!this.searchesStorage[peerId]) this.searchesStorage[peerId] = {};\n    if(!this.searchesStorage[peerId][inputFilter]) this.searchesStorage[peerId][inputFilter] = {history: []};\n    return this.searchesStorage[peerId][inputFilter];\n  }\n\n  public getSearchCounters(peerId: PeerId, filters: MessagesFilter[], canCache = true): Promise<MessagesSearchCounter[]> {\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return Promise.resolve(filters.map((filter) => {\n        return {\n          _: 'messages.searchCounter',\n          pFlags: {},\n          filter: filter,\n          count: 0\n        };\n      }));\n    }\n\n    const func = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n    return func('messages.getSearchCounters', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      filters\n    });\n  }\n\n  public filterMessagesByInputFilterFromStorage(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage | MessagesStorageKey, limit: number) {\n    const _storage = this.getMessagesStorage(storage);\n    return filterMessagesByInputFilter(inputFilter, history.map((mid) => _storage.get(mid)), limit);\n  }\n\n  public getSearch({peerId, query, inputFilter, maxId, limit, nextRate, backLimit, threadId, folderId, minDate, maxDate}: {\n    peerId?: PeerId,\n    maxId?: number,\n    limit?: number,\n    nextRate?: number,\n    backLimit?: number,\n    threadId?: number,\n    folderId?: number,\n    query?: string,\n    inputFilter?: {\n      _: MyInputMessagesFilter\n    },\n    minDate?: number,\n    maxDate?: number\n  }): Promise<{\n    count: number,\n    next_rate: number,\n    offset_id_offset: number,\n    history: MyMessage[]\n  }> {\n    if(this.appPeersManager.isRestricted(peerId)/*  || true */) {\n      return Promise.resolve({\n        count: 0,\n        offset_id_offset: 0,\n        next_rate: undefined,\n        history: []\n      });\n    }\n\n    if(!query) query = '';\n    if(!inputFilter) inputFilter = {_: 'inputMessagesFilterEmpty'};\n    if(limit === undefined) limit = 20;\n    if(!nextRate) nextRate = 0;\n    if(!backLimit) backLimit = 0;\n\n    minDate = minDate ? minDate / 1000 | 0 : 0;\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\n\n    let foundMsgs: MyMessage[] = [];\n\n    //this.log('search', maxId);\n\n    if(backLimit) {\n      limit += backLimit;\n    }\n\n    //const beta = inputFilter._ === 'inputMessagesFilterPinned' && !backLimit;\n    const beta = false;\n\n    let storage: {\n      count?: number;\n      history: SlicedArray<number>;\n    };\n\n    // * костыль для limit 1, если нужно и получить сообщение, и узнать количество сообщений\n    if(peerId && !backLimit && !maxId && !query && limit !== 1 && !threadId/*  && inputFilter._ !== 'inputMessagesFilterPinned' */) {\n      storage = beta ? \n        this.getSearchStorage(peerId, inputFilter._) as any : \n        this.getHistoryStorage(peerId);\n      foundMsgs = this.filterMessagesByInputFilterFromStorage(inputFilter._, storage.history.slice, this.getHistoryMessagesStorage(peerId), limit);\n    }\n\n    if(foundMsgs.length) {\n      if(foundMsgs.length < limit && (beta ? storage.count !== storage.history.length : true)) {\n        maxId = foundMsgs[foundMsgs.length - 1].mid;\n        limit = limit - foundMsgs.length;\n      } else {\n        return Promise.resolve({\n          count: beta ? storage.count : 0,\n          next_rate: 0,\n          offset_id_offset: 0,\n          history: foundMsgs\n        });\n      }\n    } else if(beta && storage?.count) {\n      return Promise.resolve({\n        count: storage.count,\n        next_rate: 0,\n        offset_id_offset: 0,\n        history: []\n      });\n    }\n\n    const canCache = false && (['inputMessagesFilterChatPhotos', 'inputMessagesFilterPinned'] as MyInputMessagesFilter[]).includes(inputFilter._);\n    const method = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n\n    let apiPromise: Promise<any>;\n    if(peerId && !nextRate && folderId === undefined/*  || !query */) {\n      apiPromise = method('messages.search', {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        limit,\n        offset_id: getServerMessageId(maxId) || 0,\n        add_offset: backLimit ? -backLimit : 0,\n        max_id: 0,\n        min_id: 0,\n        hash: '',\n        top_msg_id: getServerMessageId(threadId) || 0\n      }, {\n        //timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    } else {\n      //var offsetDate = 0;\n      let offsetPeerId: PeerId;\n      let offsetId = 0;\n      let offsetMessage = maxId && this.getMessageByPeer(peerId, maxId);\n\n      if(offsetMessage && offsetMessage.date) {\n        //offsetDate = offsetMessage.date + timeManager.getServerTimeOffset();\n        offsetId = offsetMessage.id;\n        offsetPeerId = this.getMessagePeer(offsetMessage);\n      }\n\n      apiPromise = method('messages.searchGlobal', {\n        q: query,\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        offset_rate: nextRate,\n        offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n        offset_id: offsetId,\n        limit,\n        folder_id: folderId\n      }, {\n        //timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    }\n\n    return apiPromise.then((searchResult: any) => {\n      this.appUsersManager.saveApiUsers(searchResult.users);\n      this.appChatsManager.saveApiChats(searchResult.chats);\n      this.saveMessages(searchResult.messages);\n\n      /* if(beta && storage && (!maxId || storage.history[storage.history.length - 1] === maxId)) {\n        const storage = this.getSearchStorage(peerId, inputFilter._);\n        const add = (searchResult.messages.map((m: any) => m.mid) as number[]).filter((mid) => storage.history.indexOf(mid) === -1);\n        storage.history.push(...add);\n        storage.history.sort((a, b) => b - a);\n        storage.count = searchResult.count;\n      } */\n\n      if(DEBUG) {\n        this.log('getSearch result:', inputFilter, searchResult);\n      }\n\n      const foundCount: number = searchResult.count || (foundMsgs.length + searchResult.messages.length);\n\n      searchResult.messages.forEach((message: MyMessage) => {\n        const peerId = this.getMessagePeer(message);\n        if(peerId.isAnyChat()) {\n          const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\n          if(chat.migrated_to) {\n            this.migrateChecks(peerId, (chat.migrated_to as InputChannel.inputChannel).channel_id.toPeerId(true));\n          }\n        }\n\n        foundMsgs.push(message);\n      });\n\n      return {\n        count: foundCount,\n        offset_id_offset: searchResult.offset_id_offset || 0,\n        next_rate: searchResult.next_rate,\n        history: foundMsgs\n      };\n    });\n  }\n\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\n    const repliesKey = peerId + '_' + mid;\n    for(const threadKey in this.threadsToReplies) {\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\n    }\n\n    this.getDiscussionMessage(peerId, mid);\n  }\n\n  public generateThreadServiceStartMessage(message: Message.message | Message.messageService) {\n    const threadKey = message.peerId + '_' + message.mid;\n    if(this.threadsServiceMessagesIdsStorage[threadKey]) return;\n\n    const maxMessageId = getServerMessageId(Math.max(...this.getMidsByMessage(message)));\n    const serviceStartMessage: Message.messageService = {\n      _: 'messageService',\n      pFlags: {\n        is_single: true\n      },\n      id: this.appMessagesIdsManager.generateTempMessageId(maxMessageId),\n      date: message.date,\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\n      peer_id: message.peer_id,\n      action: {\n        _: 'messageActionDiscussionStarted'\n      },\n      reply_to: this.generateReplyHeader(message.id)\n    };\n\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\n    this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\n  }\n\n  public getThreadServiceMessageId(peerId: PeerId, threadId: number) {\n    return this.threadsServiceMessagesIdsStorage[peerId + '_' + threadId];\n  }\n\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApiSingle('messages.getDiscussionMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((result) => {\n      this.appChatsManager.saveApiChats(result.chats);\n      this.appUsersManager.saveApiUsers(result.users);\n      this.saveMessages(result.messages);\n\n      const message = this.getMessageWithReplies(result.messages[0] as Message.message);\n      const threadKey = message.peerId + '_' + message.mid;\n\n      this.generateThreadServiceStartMessage(message);\n      \n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\n      result.max_id = historyStorage.maxId = generateMessageId(result.max_id) || 0;\n      result.read_inbox_max_id = historyStorage.readMaxId = generateMessageId(result.read_inbox_max_id ?? message.mid);\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = generateMessageId(result.read_outbox_max_id) || 0;\n\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\n\n      return message;\n    });\n  }\n\n  private handleNewMessage(peerId: PeerId, mid: number) {\n    (this.newMessagesToHandle[peerId] ??= new Set()).add(mid);\n    // if(!this.newMessagesHandleTimeout) {\n      // this.newMessagesHandleTimeout = ctx.setTimeout(this.handleNewMessages, 0);\n    // }\n    this.handleNewMessages();\n  }\n\n  private handleNewMessages = () => {\n    clearTimeout(this.newMessagesHandleTimeout);\n    this.newMessagesHandleTimeout = 0;\n\n    this.rootScope.dispatchEvent('history_multiappend', this.newMessagesToHandle);\n    this.newMessagesToHandle = {};\n  };\n\n  private handleNewDialogs = () => {\n    let newMaxSeenId = 0;\n    const obj = this.newDialogsToHandle;\n    for(const peerId in obj) {\n      const dialog = obj[peerId];\n      if(!dialog) {\n        this.reloadConversation(peerId.toPeerId());\n        delete obj[peerId];\n      } else {\n        this.dialogsStorage.pushDialog(dialog);\n        if(!this.appPeersManager.isChannel(peerId.toPeerId())) {\n          newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\n        }\n      }\n    }\n\n    //this.log('after order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    if(newMaxSeenId !== 0) {\n      this.incrementMaxSeenId(newMaxSeenId);\n    }\n\n    this.rootScope.dispatchEvent('dialogs_multiupdate', obj);\n    this.newDialogsToHandle = {};\n  };\n\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: Dialog) {\n    if(peerId !== undefined) {\n      this.newDialogsToHandle[peerId] = dialog;\n    }\n\n    if(this.newDialogsHandlePromise) return this.newDialogsHandlePromise;\n    return this.newDialogsHandlePromise = new Promise<void>((resolve) => {\n      setTimeout(() => {\n        resolve();\n        this.newDialogsHandlePromise = undefined;\n        this.handleNewDialogs();\n      }, 0);\n    });\n  }\n\n  public async deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\n    let promise: Promise<any>;\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    const localMessageIds = mids.map((mid) => getServerMessageId(mid));\n\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n      const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\n        mids = mids.filter((mid) => {\n          const message = this.getMessageByPeer(peerId, mid);\n          return !!message.pFlags.out;\n        });\n\n        if(!mids.length) {\n          return;\n        }\n      }\n\n      promise = this.apiManager.invokeApi('channels.deleteMessages', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: channelId,\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.deleteMessages', {\n        revoke,\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    }\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.deleteMessages(peerId, overflowMids, revoke));\n    }\n    \n    return Promise.all(promises).then(noop);\n  }\n\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    // console.trace('start read')\n    this.log('readHistory:', peerId, maxId, threadId);\n    if(!this.getReadMaxIdIfUnread(peerId, threadId)) {\n      if(!force && !threadId) {\n        const dialog = this.getDialogOnly(peerId);\n        if(dialog && this.isDialogUnread(dialog)) {\n          force = true;\n        }\n      }\n\n      if(!force) {\n        this.log('readHistory: isn\\'t unread');\n        return Promise.resolve();\n      }\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(historyStorage.triedToReadMaxId >= maxId) {\n      return Promise.resolve();\n    }\n\n    let apiPromise: Promise<any>;\n    if(threadId) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readDiscussion', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          msg_id: getServerMessageId(threadId),\n          read_max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelDiscussionInbox',\n        channel_id: peerId.toChatId(),\n        top_msg_id: threadId,\n        read_max_id: maxId\n      });\n    } else if(this.appPeersManager.isChannel(peerId)) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('channels.readHistory', {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelInbox',\n        max_id: maxId,\n        channel_id: peerId.toChatId(),\n        still_unread_count: undefined,\n        pts: undefined\n      });\n    } else {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readHistory', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          max_id: getServerMessageId(maxId)\n        }).then((affectedMessages) => {\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          });\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadHistoryInbox',\n        max_id: maxId,\n        peer: this.appPeersManager.getOutputPeer(peerId),\n        still_unread_count: undefined,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n\n    this.rootScope.dispatchEvent('notification_reset', this.appPeersManager.getPeerString(peerId));\n\n    if(historyStorage.readPromise) {\n      return historyStorage.readPromise;\n    }\n\n    historyStorage.triedToReadMaxId = maxId;\n\n    apiPromise.finally(() => {\n      delete historyStorage.readPromise;\n\n      const {readMaxId} = historyStorage;\n      this.log('readHistory: promise finally', maxId, readMaxId);\n\n      if(readMaxId > maxId) {\n        this.readHistory(peerId, readMaxId, threadId, true);\n      }\n    });\n\n    return historyStorage.readPromise = apiPromise;\n  }\n\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(historyStorage.maxId) {\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\n    }\n  }\n\n  public fixDialogUnreadMentionsIfNoMessage(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public modifyCachedMentions(peerId: PeerId, mid: number, add: boolean) {\n    const slicedArray = this.unreadMentions[peerId];\n    if(!slicedArray) return;\n\n    if(add) {\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\n        slicedArray.insertSlice([mid]);\n      }\n    } else {\n      slicedArray.delete(mid);\n    }\n  }\n\n  private fixUnreadMentionsCountIfNeeded(peerId: PeerId, slicedArray: SlicedArray<number>) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!slicedArray.length && dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public goToNextMention(peerId: PeerId) {\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then((messages) => {\n      console.log(messages);\n    }); */\n\n    const promise = this.goToNextMentionPromises[peerId];\n    if(promise) {\n      return promise;\n    }\n\n    const slicedArray = this.unreadMentions[peerId] ?? (this.unreadMentions[peerId] = new SlicedArray());\n    const length = slicedArray.length;\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\n    if(!length && isTopEnd) {\n      this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      return Promise.resolve();\n    }\n\n    let loadNextPromise = Promise.resolve();\n    if(!isTopEnd && length < 25) {\n      loadNextPromise = this.loadNextMentions(peerId);\n    }\n\n    return this.goToNextMentionPromises[peerId] = loadNextPromise.then(() => {\n      const last = slicedArray.last;\n      const mid = last && last[last.length - 1];\n      if(mid) {\n        slicedArray.delete(mid);\n        return mid;\n      } else {\n        this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      }\n    }).finally(() => {\n      delete this.goToNextMentionPromises[peerId];\n    });\n  }\n\n  public loadNextMentions(peerId: PeerId) {\n    const slicedArray = this.unreadMentions[peerId];\n    const maxId = slicedArray.first[0] || 1;\n\n    const backLimit = 50;\n    const add_offset = -backLimit;\n    const limit = backLimit;\n    return this.getUnreadMentions(peerId, maxId, add_offset, limit).then((messages) => {\n      this.mergeHistoryResult(slicedArray, messages, maxId === 1 ? 0 : maxId, limit, add_offset);\n    });\n  }\n\n  public getUnreadMentions(peerId: PeerId, offsetId: number, add_offset: number, limit: number, maxId = 0, minId = 0) {\n    return this.apiManager.invokeApiSingle('messages.getUnreadMentions', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: getServerMessageId(offsetId),\n      add_offset,\n      limit,\n      max_id: getServerMessageId(maxId),\n      min_id: getServerMessageId(minId)\n    }).then((messagesMessages) => {\n      assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\n      this.appUsersManager.saveApiUsers(messagesMessages.users);\n      this.appChatsManager.saveApiChats(messagesMessages.chats);\n      this.saveMessages(messagesMessages.messages);\n\n      return messagesMessages;\n    });\n  }\n\n  public readMessages(peerId: PeerId, msgIds: number[]) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    if(!msgIds.length) {\n      return Promise.resolve();\n    }\n\n    msgIds = msgIds.map((mid) => getServerMessageId(mid));\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n\n      update = {\n        _: 'updateChannelReadMessagesContents',\n        channel_id: channelId,\n        messages: msgIds\n      };\n\n      promise = this.apiManager.invokeApi('channels.readMessageContents', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: msgIds\n      });\n    } else {\n      update = {\n        _: 'updateReadMessagesContents',\n        messages: msgIds,\n        pts: undefined,\n        pts_count: undefined\n      };\n\n      promise = this.apiManager.invokeApi('messages.readMessageContents', {\n        id: msgIds\n      }).then((affectedMessages) => {\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\n        this.apiUpdatesManager.processLocalUpdate(update);\n      });\n    }\n\n    this.apiUpdatesManager.processLocalUpdate(update);\n\n    return promise;\n  }\n\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      //threadId = this.getLocalMessageId(threadId);\n      if(!this.threadsStorage[peerId]) this.threadsStorage[peerId] = {};\n      return this.threadsStorage[peerId][threadId] ?? (this.threadsStorage[peerId][threadId] = {count: null, history: new SlicedArray()});\n    }\n\n    return this.historiesStorage[peerId] ?? (this.historiesStorage[peerId] = {count: null, history: new SlicedArray()});\n  }\n\n  public getHistoryStorageTransferable(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const {\n      count,\n      history,\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    } = historyStorage;\n\n    return {\n      count,\n      history: undefined as HistoryStorage,\n      historySerialized: history.toJSON(),\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    };\n  }\n\n  private getNotifyPeerSettings(peerId: PeerId) {\n    return Promise.all([\n      this.appNotificationsManager.getNotifyPeerTypeSettings(),\n      this.appNotificationsManager.getNotifySettings(this.appPeersManager.getInputNotifyPeerById(peerId, true))\n    ]).then(([_, peerTypeNotifySettings]) => {\n      return {\n        muted: this.appNotificationsManager.isPeerLocalMuted(peerId, true),\n        peerTypeNotifySettings\n      };\n    });\n  }\n\n  private handleNotifications = () => {\n    ctx.clearTimeout(this.notificationsHandlePromise);\n    this.notificationsHandlePromise = 0;\n\n    //var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\n    //const timeout = 1000;\n\n    for(const _peerId in this.notificationsToHandle) {\n      const peerId = _peerId.toPeerId();\n      // if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\n        // continue;\n      // }\n\n      const notifyPeerToHandle = this.notificationsToHandle[peerId];\n      this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n        const topMessage = notifyPeerToHandle.topMessage;\n        if((muted && !topMessage.pFlags.mentioned) || !topMessage.pFlags.unread) {\n          return;\n        }\n\n        //setTimeout(() => {\n          if(topMessage.pFlags.unread) {\n            this.notifyAboutMessage(topMessage, {\n              fwdCount: notifyPeerToHandle.fwdCount,\n              peerTypeNotifySettings\n            });\n          }\n        //}, timeout);\n      });\n    }\n\n    this.notificationsToHandle = {};\n  };\n\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\n    const randomId = update.random_id;\n    const pendingData = this.pendingByRandomId[randomId];\n    //this.log('AMM updateMessageID:', update, pendingData);\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n      const mid = generateMessageId(update.id);\n      const message = this.getMessageFromStorage(storage, mid);\n      if(message) {\n        [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n        .filter(Boolean)\n        .forEach((storage) => {\n          storage.history.delete(tempId);\n        });\n\n        this.finalizePendingMessageCallbacks(storage, tempId, message);\n      } else {\n        this.pendingByMessageId[mid] = randomId;\n      }\n    }\n  };\n\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const dialog = this.getDialogOnly(peerId);\n\n    // * local update\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\n\n    // * temporary save the message for info (peerId, reply mids...)\n    this.saveMessages([message], {storage: this.createMessageStorage(peerId, 'history')});\n\n    const threadKey = this.getThreadKey(message);\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\n    if(threadId && !isLocalThreadUpdate && this.threadsStorage[peerId] && this.threadsStorage[peerId][threadId]) {\n      const update = {\n        _: 'updateNewDiscussionMessage',\n        message\n      } as Update.updateNewDiscussionMessage;\n\n      this.onUpdateNewMessage(update);\n    }\n\n    if(!dialog && !isLocalThreadUpdate) {\n      let good = true;\n      if(peerId.isAnyChat()) {\n        good = this.appChatsManager.isInChat(peerId.toChatId());\n      }\n\n      if(good) {\n        const set = this.newUpdatesAfterReloadToHandle[peerId] ?? (this.newUpdatesAfterReloadToHandle[peerId] = new Set());\n        if(set.has(update)) {\n          this.log.error('here we go again', peerId);\n          return;\n        }\n\n        (update as any).ignoreExisting = true;\n        set.add(update);\n        this.scheduleHandleNewDialogs(peerId);\n      }\n\n      return;\n    }\n\n    /* if(update._ === 'updateNewChannelMessage') {\n      const chat = appChatsManager.getChat(peerId.toChatId());\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n        return;\n      }\n    } */\n\n    this.saveMessages([message], {storage});\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n    /* if((message as Message.message).grouped_id) {\n      this.log('updateNewMessage', message);\n    } */\n\n    const pendingMessage = this.checkPendingMessage(message);\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if(!isLocalThreadUpdate) {\n      this.updateMessageRepliesIfNeeded(message);\n    }\n\n    // * so message can exist if reloadConversation came back earlier with mid\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\n    if(isExisting) {\n      if(!ignoreExisting) {\n        return false;\n      }\n    } else {\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\n      const firstSlice = historyStorage.history.first;\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\n        let i = 0;\n        for(const length = firstSlice.length; i < length; ++i) {\n          if(message.mid > firstSlice[i]) {\n            break;\n          }\n        }\n\n        firstSlice.splice(i, 0, message.mid);\n      } else {\n        historyStorage.history.unshift(message.mid);\n      }\n\n      if(historyStorage.count !== null) {\n        historyStorage.count++;\n      }\n    }\n\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\n      this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n    }\n\n    const fromId = message.fromId;\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\n      this.appUsersManager.forceUserOnline(fromId, message.date);\n\n      const action: SendMessageAction = {\n        _: 'sendMessageCancelAction'\n      };\n\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\n      if(peerId.isUser()) {\n        update = {\n          _: 'updateUserTyping',\n          action,\n          user_id: fromId\n        };\n      } else if(this.appPeersManager.isChannel(peerId)) {\n        update = {\n          _: 'updateChannelUserTyping',\n          action,\n          channel_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId),\n          top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n        };\n      } else {\n        update = {\n          _: 'updateChatUserTyping',\n          action,\n          chat_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId)\n        };\n      }\n\n      this.apiUpdatesManager.processLocalUpdate(update);\n    }\n\n    // commented to render the message if it's been sent faster than history_append came to main thread\n    // if(!pendingMessage) {\n      this.handleNewMessage(peerId, message.mid);\n    // }\n\n    if(isLocalThreadUpdate) {\n      return;\n    }\n    \n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\n    if(dialog) {\n      if(inboxUnread && message.mid > dialog.top_message) {\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n        ++dialog.unread_count;\n        if(message.pFlags.mentioned) {\n          ++dialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, true);\n        }\n\n        releaseUnreadCount();\n      }\n\n      if(message.mid >= dialog.top_message) {\n        this.setDialogTopMessage(message, dialog);\n      }\n    }\n\n    if(inboxUnread/*  && ($rootScope.selectedPeerID != peerID || $rootScope.idle.isIDLE) */) {\n      const notifyPeer = peerId;\n      let notifyPeerToHandle = this.notificationsToHandle[notifyPeer];\n      if(notifyPeerToHandle === undefined) {\n        notifyPeerToHandle = this.notificationsToHandle[notifyPeer] = {\n          fwdCount: 0,\n          fromId: NULL_PEER_ID\n        };\n      }\n\n      if(notifyPeerToHandle.fromId !== fromId) {\n        notifyPeerToHandle.fromId = fromId;\n        notifyPeerToHandle.fwdCount = 0;\n      }\n\n      if((message as Message.message).fwd_from) {\n        ++notifyPeerToHandle.fwdCount;\n      }\n\n      notifyPeerToHandle.topMessage = message;\n\n      if(!this.notificationsHandlePromise) {\n        this.notificationsHandlePromise = ctx.setTimeout(this.handleNotifications, 0);\n      }\n    }\n  };\n\n  private onUpdateMessageReactions = (update: Update.updateMessageReactions) => {\n    const {peer, msg_id, reactions} = update;\n    const mid = generateMessageId(msg_id);\n    const peerId = getPeerId(peer);\n    const message: MyMessage = this.getMessageByPeer(peerId, mid);\n\n    if(message?._ !== 'message') {\n      return;\n    }\n\n    const recentReactions = reactions?.recent_reactions;\n    if(recentReactions?.length && message.pFlags.out) {\n      const recentReaction = recentReactions[recentReactions.length - 1];\n      const previousReactions = message.reactions;\n      const previousRecentReactions = previousReactions?.recent_reactions;\n      if(\n        getPeerId(recentReaction.peer_id) !== this.appPeersManager.peerId && (\n          !previousRecentReactions ||\n          previousRecentReactions.length <= recentReactions.length\n        ) && (\n          !previousRecentReactions || \n          !deepEqual(recentReaction, previousRecentReactions[previousRecentReactions.length - 1])\n        )\n      ) {\n        this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n          if(/* muted ||  */!peerTypeNotifySettings.show_previews) return;\n          this.notifyAboutMessage(message, {\n            peerReaction: recentReaction,\n            peerTypeNotifySettings\n          });\n        });\n      }\n    }\n    \n    const key = message.peerId + '_' + message.mid;\n    this.pushBatchUpdate('messages_reactions', this.batchUpdateReactions, key, () => copy(message.reactions));\n\n    message.reactions = reactions;\n\n    if(!update.local) {\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\n    //this.log('updateDialogUnreadMark', update);\n    const peerId = getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    if(!dialog) {\n      this.scheduleHandleNewDialogs(peerId);\n    } else {\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(!update.pFlags.unread) {\n        delete dialog.pFlags.unread_mark;\n      } else {\n        dialog.pFlags.unread_mark = true;\n      }\n\n      releaseUnreadCount();\n      this.rootScope.dispatchEvent('dialogs_multiupdate', {[peerId]: dialog});\n      this.dialogsStorage.setDialogToState(dialog);\n    }\n  };\n\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const mid = generateMessageId(message.id);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    // console.trace(dT(), 'edit message', message)\n    \n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage});\n    const newMessage: Message = this.getMessageFromStorage(storage, mid);\n\n    this.handleEditedMessage(oldMessage, newMessage, storage);\n\n    const dialog = this.getDialogOnly(peerId);\n\n    // if sender erased mention\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\n      --dialog.unread_mentions_count;\n      this.modifyCachedMentions(peerId, mid, false);\n    } */\n\n    const isTopMessage = dialog && dialog.top_message === mid;\n    if((message as Message.messageService).clear_history) {\n      if(isTopMessage) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog});\n      }\n    } else {\n      // no sense in dispatching message_edit since only reactions have changed\n      if(oldMessage?._ === 'message' && !deepEqual(oldMessage.reactions, (newMessage as Message.message).reactions)) {\n        const newReactions = (newMessage as Message.message).reactions;\n        (newMessage as Message.message).reactions = oldMessage.reactions;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateMessageReactions',\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          msg_id: message.id,\n          reactions: newReactions\n        });\n\n        return;\n      }\n\n      this.rootScope.dispatchEvent('message_edit', {\n        storageKey: storage.key,\n        peerId,\n        mid,\n        message\n      });\n\n      if(isTopMessage || (message as Message.message).grouped_id) {\n        const updatedDialogs: {[peerId: PeerId]: Dialog} = {};\n        updatedDialogs[peerId] = dialog;\n        this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox \n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox \n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\n    const maxId = generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id);\n    const threadId = generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id);\n    const peerId = channelId ? channelId.toPeerId(true) : getPeerId((update as Update.updateReadHistoryInbox).peer);\n\n    const isOut = update._ === 'updateReadHistoryOutbox' || update._ === 'updateReadChannelOutbox' || update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const history = getObjectKeysAndSort(storage, 'desc');\n    const foundDialog = this.getDialogOnly(peerId);\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\n    let newUnreadCount = 0;\n    let newUnreadMentionsCount = 0;\n    let foundAffected = false;\n\n    //this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(peerId.isUser() && isOut) {\n      this.appUsersManager.forceUserOnline(peerId);\n    }\n\n    if(threadId) {\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\n      if(repliesKey) {\n        const [peerId, mid] = repliesKey.split('_');\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n      }\n    }\n\n    const releaseUnreadCount = !threadId && foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n\n    for(let i = 0, length = history.length; i < length; i++) {\n      const mid = history[i];\n      if(mid > maxId) {\n        continue;\n      }\n      \n      const message: MyMessage = storage.get(mid);\n\n      if(message.pFlags.out !== isOut) {\n        continue;\n      }\n\n      if(!message.pFlags.unread) {\n        break;\n      }\n\n      if(threadId) {\n        const replyTo = message.reply_to;\n        if(!replyTo || (replyTo.reply_to_top_id || replyTo.reply_to_msg_id) !== threadId) {\n          continue;\n        }\n      }\n      \n      // this.log.warn('read', messageId, message.pFlags.unread, message)\n      if(message.pFlags.unread) {\n        delete message.pFlags.unread;\n        if(!foundAffected) {\n          foundAffected = true;\n        }\n\n        if(!message.pFlags.out && !threadId && foundDialog) {\n          if(stillUnreadCount === undefined) {\n            newUnreadCount = --foundDialog.unread_count;\n          }\n\n          if(message.pFlags.mentioned) {\n            newUnreadMentionsCount = --foundDialog.unread_mentions_count;\n            this.modifyCachedMentions(peerId, message.mid, false);\n          }\n        }\n        \n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n      }\n    }\n\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\n    else historyStorage.readMaxId = maxId;\n\n    if(!threadId && foundDialog) {\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\n      else foundDialog.read_inbox_max_id = maxId;\n\n      if(!isOut) {\n        let setCount: number;\n        if(stillUnreadCount !== undefined) {\n          setCount = stillUnreadCount;\n        } else if(newUnreadCount < 0 || !this.getReadMaxIdIfUnread(peerId)) {\n          setCount = 0;\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\n          setCount = newUnreadCount;\n        }\n\n        if(setCount !== undefined) {\n          foundDialog.unread_count = setCount;\n        }\n\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\n          foundDialog.unread_mentions_count = 0;\n        }\n      }\n\n      if(releaseUnreadCount) {\n        releaseUnreadCount();\n      }\n\n      this.dialogsStorage.processDialogForFilters(foundDialog);\n      \n      this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      this.dialogsStorage.setDialogToState(foundDialog);\n    }\n\n    if(foundAffected) {\n      this.rootScope.dispatchEvent('messages_read');\n    }\n\n    if(!threadId && channelId) {\n      const threadKeyPart = peerId + '_';\n      for(const threadKey in this.threadsToReplies) {\n        if(threadKey.indexOf(threadKeyPart) === 0) {\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\n          this.rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid) as Message.message);\n        }\n      }\n    }\n  };\n\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\n    const mids = (update as Update.updateReadMessagesContents).messages.map((id) => generateMessageId(id));\n    const peerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(mids);\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\n      if(message) {\n        if(message.pFlags.media_unread) {\n          delete message.pFlags.media_unread;\n          this.setDialogToStateIfMessageIsTop(message);\n  \n          if(!message.pFlags.out && message.pFlags.mentioned) {\n            this.modifyCachedMentions(peerId, mid, false);\n          }\n        }\n      } else {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('messages_media_read', {peerId, mids});\n  };\n\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\n    const peerId = update.channel_id.toPeerId(true);\n    const history = this.getHistoryStorage(peerId).history.slice;\n    const availableMinId = generateMessageId(update.available_min_id);\n    const messages = history.filter((mid) => mid <= availableMinId);\n\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\n  };\n\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\n    //const messages = (update as any as Update.updateDeleteChannelMessages).messages;\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map((id) => generateMessageId(id));\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(messages);\n    \n    if(!peerId) {\n      return;\n    }\n\n    this.apiManager.clearCache('messages.getSearchCounters', (params) => {\n      return getPeerId(params.peer) === peerId;\n    });\n\n    const threadKeys: Set<string> = new Set();\n    for(const mid of messages) {\n      const message = this.getMessageByPeer(peerId, mid);\n      const threadKey = this.getThreadKey(message);\n      if(threadKey && this.threadsStorage[peerId] && this.threadsStorage[peerId][+threadKey.split('_')[1]]) {\n        threadKeys.add(threadKey);\n      }\n    }\n    \n    const historyUpdated = this.handleDeletedMessages(peerId, this.getHistoryMessagesStorage(peerId), messages);\n\n    const threadsStorages = Array.from(threadKeys).map((threadKey) => {\n      const [peerId, mid] = threadKey.split('_');\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\n    });\n\n    const historyStorage = this.getHistoryStorage(peerId);\n    [historyStorage].concat(threadsStorages).forEach((historyStorage) => {\n      for(const mid of historyUpdated.msgs) {\n        historyStorage.history.delete(mid);\n      }\n      \n      if(historyUpdated.count && historyStorage.count) {\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\n      }\n    });\n\n    this.rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\n\n    const foundDialog = this.getDialogOnly(peerId);\n    if(foundDialog) {\n      const affected = historyUpdated.unreadMentions || historyUpdated.unread;\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n      \n      if(historyUpdated.unread) {\n        foundDialog.unread_count = Math.max(0, foundDialog.unread_count - historyUpdated.unread);\n      }\n\n      if(historyUpdated.unreadMentions) {\n        foundDialog.unread_mentions_count = !foundDialog.unread_count ? 0 : Math.max(0, foundDialog.unread_mentions_count - historyUpdated.unreadMentions);\n      }\n\n      if(affected) {\n        releaseUnreadCount();\n        this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      }\n\n      if(historyUpdated.msgs.has(foundDialog.top_message)) {\n        const slice = historyStorage.history.first;\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n          const mid = slice[0];\n          const message = this.getMessageByPeer(peerId, mid);\n          this.setDialogTopMessage(message, foundDialog);\n        } else {\n          this.reloadConversation(peerId);\n        }\n      }\n    }\n  };\n\n  private onUpdateChannel = (update: Update.updateChannel) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n\n    const needDialog = this.appChatsManager.isInChat(channelId);\n    \n    const canViewHistory = !!channel.username || !channel.pFlags.left;\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\n    \n    if(canViewHistory !== hasHistory) {\n      delete this.historiesStorage[peerId];\n      this.rootScope.dispatchEvent('history_forbidden', peerId);\n    }\n    \n    const dialog = this.getDialogOnly(peerId);\n    if(!!dialog !== needDialog) {\n      if(needDialog) {\n        this.reloadConversation(peerId);\n      } else {\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('channel_update', channelId);\n  };\n\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\n    const peerId = update.channel_id.toPeerId(true);\n\n    this.dialogsStorage.dropDialog(peerId);\n\n    delete this.historiesStorage[peerId];\n    this.reloadConversation(peerId).then(() => {\n      this.rootScope.dispatchEvent('history_reload', peerId);\n    });\n  };\n  \n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\n    const views = update.views;\n    const peerId = update.channel_id.toPeerId(true);\n    const mid = generateMessageId(update.id);\n    const message = this.getMessageByPeer(peerId, mid) as Message.message;\n    if(message?.views !== undefined && message.views < views) {\n      message.views = views;\n      this.pushBatchUpdate('messages_views', this.batchUpdateViews, message.peerId + '_' + message.mid);\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\n    //this.log('updateServiceNotification', update);\n    if(update.pFlags?.popup) {\n      this.rootScope.dispatchEvent('service_notification', update);\n      return;\n    }\n    \n    const fromId = SERVICE_PEER_ID;\n    const peerId = fromId;\n    const messageId = this.generateTempMessageId(peerId);\n    const message: Message.message = {\n      _: 'message',\n      id: messageId,\n      from_id: this.appPeersManager.getOutputPeer(fromId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      pFlags: {unread: true},\n      date: (update.inbox_date || tsNow(true)) + this.timeManager.getServerTimeOffset(),\n      message: update.message,\n      media: update.media,\n      entities: update.entities\n    };\n    if(!this.appUsersManager.hasUser(fromId)) {\n      this.appUsersManager.saveApiUsers([{\n        _: 'user',\n        id: fromId,\n        pFlags: {verified: true},\n        access_hash: '0',\n        first_name: 'Telegram',\n        phone: '42777'\n      }]);\n    }\n    this.saveMessages([message], {isOutgoing: true});\n\n    if(update.inbox_date) {\n      this.pendingTopMsgs[peerId] = messageId;\n      this.onUpdateNewMessage({\n        _: 'updateNewMessage',\n        message,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n  };\n\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\n    const peerId = channelId ? channelId.toPeerId(true) : getPeerId((update as Update.updatePinnedMessages).peer);\n\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\n    if(storage.count !== storage.history.length) {\n      if(storage.count !== undefined) {\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];  \n      }\n\n      rootScope.broadcast('peer_pinned_messages', peerId);\n      break;\n    } */\n\n    const messages = update.messages.map((id) => generateMessageId(id)); \n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const missingMessages = messages.filter((mid) => !storage.has(mid));\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map((mid) => this.wrapSingleMessage(peerId, mid))) : Promise.resolve();\n    getMissingPromise.finally(() => {\n      const werePinned = update.pFlags?.pinned;\n      if(werePinned) {\n        for(const mid of messages) {\n          //storage.history.push(mid);\n          const message = storage.get(mid) as Message.message;\n          message.pFlags.pinned = true;\n        }\n\n        /* if(this.pinnedMessages[peerId]?.maxId) {\n          const maxMid = Math.max(...messages);\n          this.pinnedMessages\n        } */\n\n        //storage.history.sort((a, b) => b - a);\n      } else {\n        for(const mid of messages) {\n          //storage.history.findAndSplice((_mid) => _mid === mid);\n          const message = storage.get(mid) as Message.message;\n          delete message.pFlags.pinned;\n        }\n      }\n\n      /* const info = this.pinnedMessages[peerId];\n      if(info) {\n        info.count += messages.length * (werePinned ? 1 : -1);\n      } */\n  \n      delete this.pinnedMessages[peerId];\n      this.appStateManager.getState().then((state) => {\n        delete state.hiddenPinnedMessages[peerId];\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\n      });\n    });\n  };\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer, notify_settings} = update;\n    if(peer._ === 'notifyPeer') {\n      const peerId = getPeerId((peer as NotifyPeer.notifyPeer).peer);\n    \n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        dialog.notify_settings = notify_settings;\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(!storage) {\n      return;\n    }\n\n    const mid = generateMessageId(message.id);\n\n    const oldMessage = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage, isScheduled: true});\n    const newMessage = this.getMessageFromStorage(storage, mid);\n\n    if(oldMessage) {\n      this.handleEditedMessage(oldMessage, newMessage, storage);\n      this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId, mid: message.mid, message});\n    } else {\n      const pendingMessage = this.checkPendingMessage(message);\n      if(!pendingMessage) {\n        this.rootScope.dispatchEvent('scheduled_new', {peerId, mid: message.mid});\n      }\n    }\n  };\n\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\n    const peerId = getPeerId(update.peer);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mids = update.messages.map((id) => generateMessageId(id));\n      this.handleDeletedMessages(peerId, storage, mids);\n\n      this.rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\n    }\n  };\n\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\n    if(this.isMessageIsTopMessage(message)) {\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\n    }\n  }\n\n  public isMessageIsTopMessage(message: MyMessage) {\n    const dialog = this.getDialogOnly(message.peerId);\n    return dialog && dialog.top_message === message.mid;\n  }\n\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\n    try { // * на всякий случай, скорее всего это не понадобится\n      const threadKey = this.getThreadKey(threadMessage);\n      if(threadKey) {\n        const repliesKey = this.threadsToReplies[threadKey];\n        if(repliesKey) {\n          const [peerId, mid] = repliesKey.split('_');\n\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n        }\n      }\n    } catch(err) {\n      this.log.error('incrementMessageReplies err', err, threadMessage);\n    }\n  }\n\n  private getThreadKey(threadMessage: MyMessage) {\n    let threadKey = '';\n    if(threadMessage?.reply_to && threadMessage.peerId?.isAnyChat()) {\n      const threadId = threadMessage.reply_to.reply_to_top_id || threadMessage.reply_to.reply_to_msg_id;\n      threadKey = threadMessage.peerId + '_' + threadId;\n    }\n\n    return threadKey;\n  }\n\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\n    const promise: Promise<Message.message> = this.wrapSingleMessage(peerId, mid, true).then(() => {\n      const message = this.getMessageByPeer(peerId, mid) as Message.message;\n      if(!message) {\n        return;\n      }\n\n      if(broadcastEventName) {\n        this.rootScope.dispatchEvent(broadcastEventName, message);\n      }\n\n      return message;\n    });\n    \n    return promise;\n  }\n\n  private checkPendingMessage(message: MyMessage) {\n    const randomId = this.pendingByMessageId[message.mid];\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\n    if(randomId) {\n      const pendingData = this.pendingByRandomId[randomId];\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\n        this.rootScope.dispatchEvent('history_update', {storageKey: pendingData.storage.key, peerId: message.peerId, mid: message.mid, message, sequential: pendingData.sequential});\n      }\n\n      delete this.pendingByMessageId[message.mid];\n    }\n\n    return pendingMessage;\n  }\n\n  public mutePeer(peerId: PeerId, muteUntil: number) {\n    const settings: InputPeerNotifySettings = {\n      _: 'inputPeerNotifySettings'\n    };\n\n    settings.mute_until = muteUntil;\n\n    return this.appNotificationsManager.updateNotifySettings({\n      _: 'inputNotifyPeer',\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }, settings);\n  }\n\n  public togglePeerMute(peerId: PeerId, mute?: boolean) {\n    if(mute === undefined) {\n      mute = !this.appNotificationsManager.isPeerLocalMuted(peerId, false);\n    }\n\n    return this.mutePeer(peerId, mute ? MUTE_UNTIL : 0);\n  }\n\n  private findPeerIdByMids(mids: number[]) {\n    for(let length = mids.length, i = length - 1; i >= 0; --i) {\n      const mid = mids[i];\n      const message = this.getMessageById(mid);\n      if(message) {\n        return message.peerId;\n      }\n    }\n  }\n\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return false;\n    }\n    \n    if(peerId.isAnyChat()) {\n      //const isChannel = appPeersManager.isChannel(peerId);\n      const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\n      const hasRights = /* isChannel &&  */this.appChatsManager.hasRights(peerId.toChatId(), action, undefined, !!threadId); \n      return /* !isChannel ||  */hasRights && (!chat.pFlags.left || !!threadId);\n    } else {\n      return this.appUsersManager.canSendToUser(peerId);\n    }\n  }\n\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\n    const pendingData = this.pendingByRandomId[randomId];\n    // this.log('pdata', randomID, pendingData)\n\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n\n      [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n      .filter(Boolean)\n      .forEach((storage) => {\n        storage.history.delete(tempId);\n      });\n\n      // this.log('pending', randomID, historyStorage.pending)\n\n      const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\n      if(tempMessage) {\n        delete finalMessage.pFlags.is_outgoing;\n        delete finalMessage.pending;\n        delete finalMessage.error;\n        delete finalMessage.random_id;\n        delete finalMessage.send;\n      }\n\n      this.rootScope.dispatchEvent('messages_pending');\n      \n      delete this.pendingByRandomId[randomId];\n\n      this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\n\n      return tempMessage;\n    }\n  }\n\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\n    const callbacks = this.tempFinalizeCallbacks[tempId];\n    //this.log.warn(callbacks, tempId);\n    if(callbacks !== undefined) {\n      for(const name in callbacks) {\n        const {deferred, callback} = callbacks[name];\n        //this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\n        callback(message).then(deferred.resolve, deferred.reject);\n      }\n\n      delete this.tempFinalizeCallbacks[tempId];\n    }\n\n    // set cached url to media\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      const {photo: newPhoto, document: newDoc} = message.media as any;\n      if(newPhoto) {\n        const photo = this.appPhotosManager.getPhoto('' + tempId);\n        if(/* photo._ !== 'photoEmpty' */photo) {\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\n          const cacheContext = this.thumbsStorage.getCacheContext(newPhoto, newPhotoSize.type);\n          const oldCacheContext = this.thumbsStorage.getCacheContext(photo, 'full');\n          Object.assign(cacheContext, oldCacheContext);\n\n          const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\n\n          const downloadOptions = getPhotoDownloadOptions(newPhoto, photoSize);\n          const fileName = getFileNameByLocation(downloadOptions.location);\n          // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n        }\n      } else if(newDoc) {\n        const oldDoc = this.appDocsManager.getDoc('' + tempId);\n        if(oldDoc) {\n          const oldCacheContext = this.thumbsStorage.getCacheContext(oldDoc);\n          if(\n            /* doc._ !== 'documentEmpty' &&  */\n            oldDoc.type && \n            oldDoc.type !== 'sticker' && \n            oldDoc.mime_type !== 'image/gif' && \n            oldCacheContext.url\n          ) {\n            const cacheContext = this.thumbsStorage.getCacheContext(newDoc);\n            Object.assign(cacheContext, oldCacheContext);\n\n            const fileName = getDocumentInputFileName(newDoc);\n            // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n          }\n        }\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\n        delete this.appPollsManager.polls[tempId];\n        delete this.appPollsManager.results[tempId];\n      }\n    }\n\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\n    storage.delete(tempId);\n    \n    this.handleReleasingMessage(tempMessage, storage);\n\n    this.rootScope.dispatchEvent('message_sent', {storageKey: storage.key, tempId, tempMessage, mid: message.mid, message});\n  }\n\n  public incrementMaxSeenId(maxId: number) {\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\n      return false;\n    }\n\n    this.maxSeenId = maxId;\n    this.appStateManager.pushToState('maxSeenMsgId', maxId);\n\n    this.apiManager.invokeApi('messages.receivedMessages', {\n      max_id: getServerMessageId(maxId)\n    });\n  }\n\n  public async getMessageReactionsListAndReadParticipants(\n    message: Message.message, \n    limit?: number, \n    reaction?: string, \n    offset?: string,\n    skipReadParticipants?: boolean,\n    skipReactionsList?: boolean\n  ) {\n    const emptyMessageReactionsList = {\n      reactions: [] as MessagePeerReaction[],\n      count: 0,\n      next_offset: undefined as string\n    };\n\n    const canViewMessageReadParticipants = await this.canViewMessageReadParticipants(message);\n    if(canViewMessageReadParticipants && limit === undefined) {\n      limit = 100;\n    } else if(limit === undefined) {\n      limit = 50;\n    }\n\n    return Promise.all([\n      canViewMessageReadParticipants && !reaction && !skipReadParticipants ? this.getMessageReadParticipants(message.peerId, message.mid).catch(() => [] as UserId[]) : [] as UserId[],\n\n      message.reactions?.recent_reactions?.length && !skipReactionsList ? this.appReactionsManager.getMessageReactionsList(message.peerId, message.mid, limit, reaction, offset).catch((err) => emptyMessageReactionsList) : emptyMessageReactionsList\n    ]).then(([userIds, messageReactionsList]) => {\n      const readParticipantsPeerIds = userIds.map((userId) => userId.toPeerId());\n      \n      const filteredReadParticipants = readParticipantsPeerIds.slice();\n      forEachReverse(filteredReadParticipants, (peerId, idx, arr) => {\n        if(messageReactionsList.reactions.some((reaction) => getPeerId(reaction.peer_id) === peerId)) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      let combined: {peerId: PeerId, reaction?: string}[] = messageReactionsList.reactions.map((reaction) => ({peerId: getPeerId(reaction.peer_id), reaction: reaction.reaction}));\n      combined = combined.concat(filteredReadParticipants.map((readPeerId) => ({peerId: readPeerId})));\n      \n      return {\n        reactions: messageReactionsList.reactions,\n        reactionsCount: messageReactionsList.count,\n        readParticipants: readParticipantsPeerIds,\n        combined: combined,\n        nextOffset: messageReactionsList.next_offset\n      };\n    });\n  }\n\n  public getMessageReadParticipants(peerId: PeerId, mid: number): Promise<UserId[]> {\n    return this.apiManager.invokeApiSingle('messages.getMessageReadParticipants', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((userIds) => { // ! convert long to number\n      return userIds.map((userId) => userId.toUserId());\n    });\n  }\n\n  public async canViewMessageReadParticipants(message: Message) {\n    if(\n      message?._ !== 'message' || \n      message.pFlags.is_outgoing || \n      !message.pFlags.out || \n      !this.appPeersManager.isAnyGroup(message.peerId)\n    ) {\n      return false;\n    }\n\n    const chat: Chat.chat | Chat.channel = this.appChatsManager.getChat(message.peerId.toChatId());\n    const appConfig = await this.apiManager.getAppConfig(); \n    return chat.participants_count <= appConfig.chat_read_mark_size_threshold && \n      (tsNow(true) - message.date) < appConfig.chat_read_mark_expire_period;\n  }\n\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\n    if(!mids.length) {\n      return;\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getMessagesViews', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      increment: true\n    }).then((views) => {\n      const updates: Update[] = new Array(mids.length);\n      const channelId = peerId.toChatId();\n      for(let i = 0, length = mids.length; i < length; ++i) {\n        updates[i] = {\n          _: 'updateChannelMessageViews',\n          channel_id: channelId,\n          id: mids[i],\n          views: views.views[i].views\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updates',\n        updates,\n        chats: views.chats,\n        users: views.users\n      });\n    });\n  }\n\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\n    fwdCount: number,\n    peerReaction: MessagePeerReaction,\n    peerTypeNotifySettings: PeerNotifySettings\n  }> = {}) {\n    const peerId = this.getMessagePeer(message);\n\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return;\n    }\n\n    const tabs = appTabsManager.getTabs();\n    let tab = tabs.find((tab) => {\n      const {chatPeerIds} = tab.state;\n      return chatPeerIds[chatPeerIds.length - 1] === peerId;\n    });\n\n    if(!tab) {\n      tabs.sort((a, b) => a.state.idleStartTime - b.state.idleStartTime);\n      tab = !tabs[0].state.idleStartTime ? tabs[0] : tabs[tabs.length - 1];\n    }\n\n    const port = MTProtoMessagePort.getInstance<false>();\n    port.invokeVoid('notificationBuild', {\n      message,\n      ...options\n    }, tab.source);\n  }\n\n  public getScheduledMessagesStorage(peerId: PeerId) {\n    return this.scheduledMessagesStorage[peerId] ?? (this.scheduledMessagesStorage[peerId] = this.createMessageStorage(peerId, 'scheduled'));\n  }\n\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\n  }\n\n  public getScheduledMessages(peerId: PeerId) {\n    if(!this.canSendToPeer(peerId)) return;\n\n    const storage = this.getScheduledMessagesStorage(peerId);\n    if(storage.size) {\n      return [...storage.keys()];\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getScheduledHistory', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      hash: ''\n    }).then((historyResult) => {\n      if(historyResult._ !== 'messages.messagesNotModified') {\n        this.appUsersManager.saveApiUsers(historyResult.users);\n        this.appChatsManager.saveApiChats(historyResult.chats);\n        \n        const storage = this.getScheduledMessagesStorage(peerId);\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\n        return [...storage.keys()];\n      }\n      \n      return [];\n    });\n  }\n\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.sendScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.deleteScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getMessageWithReplies(message: Message.message) {\n    return this.filterMessages(message, message => !!(message as Message.message).replies)[0] as any;\n  }\n\n  public getMessageWithCommentReplies(message: Message.message) {\n    if(message.peerId !== REPLIES_PEER_ID) {\n      message = this.getMessageWithReplies(message);\n      const replies = message?.replies;\n      if(!(replies && replies.pFlags.comments && replies.channel_id.toChatId() !== REPLIES_HIDDEN_CHANNEL_ID)) {\n        return;\n      }\n    }\n\n    return message;\n  }\n\n  public isFetchIntervalNeeded(peerId: PeerId) {\n    return peerId.isAnyChat() && !this.appChatsManager.isInChat(peerId.toChatId());\n  }\n\n  public async getNewHistory(peerId: PeerId, threadId?: number) {\n    if(!this.isFetchIntervalNeeded(peerId)) {\n      return;\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(!slice.isEnd(SliceEnd.Bottom)) {\n      return;\n    }\n\n    delete historyStorage.maxId;\n    slice.unsetEnd(SliceEnd.Bottom);\n\n    // if there is no id - then request by first id because cannot request by id 0 with backLimit\n    const historyResult = await this.getHistory(peerId, slice[0] ?? 1, 0, 50, threadId);\n    for(let i = 0, length = historyResult.history.length; i < length; ++i) {\n      this.handleNewMessage(peerId, historyResult.history[i]);\n    }\n\n    return {isBottomEnd: historyStorage.history.slice.isEnd(SliceEnd.Bottom)};\n  }\n\n  /**\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\n   */\n  // public getHistory(peerId: PeerId, maxId?: number, limit?: number, backLimit?: number, threadId?: number, onlyCache?: false): Promise<HistoryResult> | HistoryResult;\n  // public getHistory(peerId: PeerId, maxId?: number, limit?: number, backLimit?: number, threadId?: number, onlyCache?: true): HistoryResult;\n  public getHistory(peerId: PeerId, maxId: number = 0, limit?: number, backLimit?: number, threadId?: number/* , onlyCache?: boolean */): Promise<HistoryResult> | HistoryResult {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(this.appPeersManager.isRestricted(peerId)) {\n      const first = historyStorage.history.first;\n      first.setEnd(SliceEnd.Both);\n\n      const slice = first.slice(0, 0);\n      slice.setEnd(SliceEnd.Both);\n      \n      return {\n        count: 0,\n        history: Array.from(slice),\n        isEnd: slice.getEnds(),\n        offsetIdOffset: 0\n      };\n    }\n\n    let offset = 0;\n    /* \n    let offsetFound = true;\n\n    if(maxId) {\n      offsetFound = false;\n      for(; offset < historyStorage.history.length; offset++) {\n        if(maxId > historyStorage.history.slice[offset]) {\n          offsetFound = true;\n          break;\n        }\n      }\n    }\n\n    if(offsetFound && (\n      historyStorage.count !== null && historyStorage.history.length === historyStorage.count ||\n      historyStorage.history.length >= offset + limit\n      )) {\n      if(backLimit) {\n        backLimit = Math.min(offset, backLimit);\n        offset = Math.max(0, offset - backLimit);\n        limit += backLimit;\n      } else {\n        limit = limit;\n      }\n\n      const history = historyStorage.history.slice.slice(offset, offset + limit);\n      return {\n        count: historyStorage.count,\n        history: history,\n        offsetIdOffset: offset\n      };\n    }\n\n    if(offsetFound) {\n      offset = 0;\n    } */\n\n    if(backLimit) {\n      offset = -backLimit;\n      limit += backLimit;\n\n      /* return this.requestHistory(reqPeerId, maxId, limit, offset, undefined, threadId).then((historyResult) => {\n        historyStorage.count = (historyResult as MessagesMessages.messagesMessagesSlice).count || historyResult.messages.length;\n\n        const history = (historyResult.messages as MyMessage[]).map((message) => message.mid);\n        return {\n          count: historyStorage.count,\n          history,\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0\n        };\n      }); */\n    }\n\n    const haveSlice = historyStorage.history.sliceMe(maxId, offset, limit);\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\n      return {\n        count: historyStorage.count,\n        history: Array.from(haveSlice.slice),\n        isEnd: haveSlice.slice.getEnds(),\n        offsetIdOffset: haveSlice.offsetIdOffset\n      }; \n    }\n\n    // if(onlyCache) {\n    //   return;\n    // }\n\n    return this.fillHistoryStorage(peerId, maxId, limit, offset, historyStorage, threadId).then(() => {\n      const slice = historyStorage.history.sliceMe(maxId, offset, limit);\n      const f = slice?.slice || historyStorage.history.constructSlice();\n      return {\n        count: historyStorage.count,\n        history: Array.from(f),\n        isEnd: f.getEnds(),\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\n      };\n    });\n  }\n\n  public isHistoryResultEnd(historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>, limit: number, add_offset: number) {\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\n    const offsetIdOffset = offset_id_offset || 0;\n\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\n\n    const isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\n    const isBottomEnd = !offsetIdOffset || (add_offset < 0 && (offsetIdOffset + add_offset) <= 0);\n\n    return {count, offsetIdOffset, isTopEnd, isBottomEnd};\n  }\n\n  public mergeHistoryResult(slicedArray: SlicedArray<number>, \n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0], \n    offset_id: number, \n    limit: number, \n    add_offset: number) {\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n    const isEnd = this.isHistoryResultEnd(historyResult, limit, add_offset);\n    const {count, offsetIdOffset, isTopEnd, isBottomEnd} = isEnd;\n    const mids = messages.map((message) => {\n      return (message as MyMessage).mid;\n    });\n\n    // * add bound manually. \n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\n    // * check that offset_id is not 0\n    if(offset_id && getServerMessageId(offset_id) && !mids.includes(offset_id) && offsetIdOffset < count) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offset_id > mids[i]) {\n          break;\n        }\n      }\n\n      mids.splice(i, 0, offset_id);\n    }\n\n    const slice = slicedArray.insertSlice(mids) || slicedArray.slice;\n    if(isTopEnd) {\n      slice.setEnd(SliceEnd.Top);\n    }\n  \n    if(isBottomEnd) {\n      slice.setEnd(SliceEnd.Bottom);\n    }\n\n    return {slice, mids, messages, ...isEnd};\n  }\n\n  public fillHistoryStorage(peerId: PeerId, offset_id: number, limit: number, add_offset: number, historyStorage: HistoryStorage, threadId?: number): Promise<void> {\n    const wasMaxId = historyStorage.maxId;\n    return this.requestHistory(peerId, offset_id, limit, add_offset, undefined, threadId).then((historyResult) => {\n      const {count, isBottomEnd, slice, messages} = this.mergeHistoryResult(historyStorage.history, historyResult, offset_id, limit, add_offset);\n\n      historyStorage.count = count;\n\n      /* if(!maxId && historyResult.messages.length) {\n        maxId = this.incrementMessageId((historyResult.messages[0] as MyMessage).mid, 1);\n      }\n\n      const wasTotalCount = historyStorage.history.length; */\n\n      for(let i = 0, length = messages.length; i < length; ++i) {\n        const message = messages[i] as MyMessage;\n        if(this.mergeReplyKeyboard(historyStorage, message)) {\n          this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n        }\n      }\n\n      if(isBottomEnd) {\n        const newMaxId = slice[0];\n\n        if(historyStorage.maxId === wasMaxId) {\n          const first = historyStorage.history.first;\n          if(first !== slice) {\n            historyStorage.history.deleteSlice(first);\n          }\n\n          if(historyStorage.maxId !== newMaxId) {\n            historyStorage.maxId = slice[0]; // ! WARNING\n\n            this.reloadConversation(peerId); // when top_message is deleted but cached\n          }\n        }\n      }\n      \n      /* const isBackLimit = offset < 0 && -offset !== fullLimit;\n      if(isBackLimit) {\n        return;\n      }\n\n      const totalCount = historyStorage.history.length;\n      fullLimit -= (totalCount - wasTotalCount);\n\n      const migratedNextPeer = this.migratedFromTo[peerId];\n      const migratedPrevPeer = this.migratedToFrom[peerId]\n      const isMigrated = migratedNextPeer !== undefined || migratedPrevPeer !== undefined;\n\n      if(isMigrated) {\n        historyStorage.count = Math.max(historyStorage.count, totalCount) + 1;\n      }\n\n      if(fullLimit > 0) {\n        maxId = historyStorage.history.slice[totalCount - 1];\n        if(isMigrated) {\n          if(!historyResult.messages.length) {\n            if(migratedPrevPeer) {\n              maxId = 0;\n              peerId = migratedPrevPeer;\n            } else {\n              historyStorage.count = totalCount;\n              return true;\n            }\n          }\n\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, historyStorage, threadId);\n        } else if(totalCount < historyStorage.count) {\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, offset, historyStorage, threadId);\n        }\n      } */\n    });\n  }\n\n  public requestHistory(peerId: PeerId, maxId: number, limit = 0, offset = 0, offsetDate = 0, threadId = 0): Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>> {\n    //console.trace('requestHistory', peerId, maxId, limit, offset);\n\n    //rootScope.broadcast('history_request');\n\n    const options: any = {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: getServerMessageId(maxId) || 0,\n      offset_date: offsetDate,\n      add_offset: offset,\n      limit,\n      max_id: 0,\n      min_id: 0,\n      hash: 0\n    };\n\n    if(threadId) {\n      options.msg_id = getServerMessageId(threadId) || 0;\n    }\n\n    const promise: ReturnType<AppMessagesManager['requestHistory']> = this.apiManager.invokeApiSingle(threadId ? 'messages.getReplies' : 'messages.getHistory', options, {\n      //timeout: APITIMEOUT,\n      noErrorBox: true\n    }) as any;\n\n    return promise.then((historyResult) => {\n      if(DEBUG) {\n        this.log('requestHistory result:', peerId, historyResult, maxId, limit, offset);\n      }\n\n      this.appUsersManager.saveApiUsers(historyResult.users);\n      this.appChatsManager.saveApiChats(historyResult.chats);\n      this.saveMessages(historyResult.messages);\n\n      if(this.appPeersManager.isChannel(peerId)) {\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), (historyResult as MessagesMessages.messagesChannelMessages).pts);\n      }\n\n      let length = historyResult.messages.length, count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\n      if(length && !historyResult.messages[length - 1]) {\n        historyResult.messages.splice(length - 1, 1);\n        length--;\n        count--;\n      }\n\n      // will load more history if last message is album grouped (because it can be not last item)\n      // historyResult.messages: desc sorted\n      const historyStorage = this.getHistoryStorage(peerId, threadId);\n      const oldestMessage: Message.message = historyResult.messages[length - 1] as any;\n      if(length && oldestMessage.grouped_id) {\n        const foundSlice = historyStorage.history.findSlice(oldestMessage.mid);\n        if(foundSlice && (foundSlice.slice.length + historyResult.messages.length) < count) {\n          return this.requestHistory(peerId, oldestMessage.mid, 10, 0, offsetDate, threadId).then((_historyResult) => {\n            return historyResult;\n          });\n        }\n      }\n\n      return historyResult;\n    }, (error) => {\n      switch (error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = this.appChatsManager.getChat(peerId.toChatId());\n          channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title};\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: peerId.toChatId()\n            }],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      throw error;\n    });\n  }\n\n  public fetchSingleMessages() {\n    if(this.fetchSingleMessagesPromise) {\n      return this.fetchSingleMessagesPromise;\n    }\n\n    return this.fetchSingleMessagesPromise = new Promise((resolve) => {\n      setTimeout(() => {\n        const requestPromises: Promise<void>[] = [];\n        \n        for(const [peerId, map] of this.needSingleMessages) {\n          const mids = [...map.keys()];\n          const msgIds: InputMessage[] = mids.map((mid) => {\n            return {\n              _: 'inputMessageID',\n              id: getServerMessageId(mid)\n            };\n          });\n    \n          let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\n          if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n            promise = this.apiManager.invokeApiSingle('channels.getMessages', {\n              channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n              id: msgIds\n            });\n          } else {\n            promise = this.apiManager.invokeApiSingle('messages.getMessages', {\n              id: msgIds\n            });\n          }\n\n          const after = promise.then((getMessagesResult) => {\n            assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\n\n            this.appUsersManager.saveApiUsers(getMessagesResult.users);\n            this.appChatsManager.saveApiChats(getMessagesResult.chats);\n            const messages = this.saveMessages(getMessagesResult.messages);\n\n            for(let i = 0; i < messages.length; ++i) {\n              const message = messages[i];\n              if(!message) {\n                continue;\n              }\n\n              const mid = generateMessageId(message.id);\n              const promise = map.get(mid);\n              promise.resolve(message);\n              map.delete(mid);\n            }\n\n            if(map.size) {\n              for(const [mid, promise] of map) {\n                promise.resolve(this.generateEmptyMessage(mid));\n              }\n            }\n          }).finally(() => {\n            this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\n          });\n    \n          requestPromises.push(after);\n        }\n\n        this.needSingleMessages.clear();\n\n        Promise.all(requestPromises).finally(() => {\n          this.fetchSingleMessagesPromise = null;\n          if(this.needSingleMessages.size) this.fetchSingleMessages();\n          resolve();\n        });\n      }, 0);\n    });\n  }\n\n  public wrapSingleMessage(peerId: PeerId, mid: number, overwrite = false) {\n    const message = this.getMessageByPeer(peerId, mid);\n    if(message && !overwrite) {\n      this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\n      return Promise.resolve(message);\n    } else {\n      let map = this.needSingleMessages.get(peerId);\n      if(!map) {\n        this.needSingleMessages.set(peerId, map = new Map());\n      }\n\n      let promise = map.get(mid);\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      map.set(mid, promise);\n      this.fetchSingleMessages();\n      return promise;\n    }\n  }\n\n  public fetchMessageReplyTo(message: MyMessage) {\n    if(!message.reply_to_mid) return Promise.resolve(this.generateEmptyMessage(0));\n    const replyToPeerId = message.reply_to.reply_to_peer_id ? getPeerId(message.reply_to.reply_to_peer_id) : message.peerId;\n    return this.wrapSingleMessage(replyToPeerId, message.reply_to_mid).then((originalMessage) => {\n      if(!originalMessage) { // ! break the infinite loop\n        message = this.getMessageByPeer(message.peerId, message.mid); // message can come from other thread\n        delete message.reply_to_mid; // ! WARNING!\n      }\n\n      return originalMessage;\n    });\n  }\n\n  public setTyping(peerId: PeerId, action: SendMessageAction, force?: boolean): Promise<boolean> {\n    let typing = this.typings[peerId];\n    if(\n      !peerId || \n      !this.canSendToPeer(peerId) || \n      peerId === this.appPeersManager.peerId ||\n      // (!force && deepEqual(typing?.action, action))\n      (!force && typing?.action?._ === action._)\n    ) {\n      return Promise.resolve(false);\n    }\n\n    if(typing?.timeout) {\n      clearTimeout(typing.timeout);\n    }\n\n    typing = this.typings[peerId] = {\n      action\n    };\n\n    return this.apiManager.invokeApi('messages.setTyping', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      action\n    }).finally(() => {\n      if(typing === this.typings[peerId]) {\n        typing.timeout = ctx.setTimeout(() => {\n          delete this.typings[peerId];\n        }, 6000);\n      }\n    });\n  }\n\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\n    const media = (message as Message.message).media;\n    if(media) {\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\n\n      if(smth?.file_reference) {\n        this.referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\n      }\n\n      if('webpage' in media && media.webpage) {\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\n        this.appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\n      }\n\n      if((media as MessageMedia.messageMediaPoll).poll) {\n        this.appPollsManager.updatePollToMessage(message as Message.message, false);\n      }\n    }\n  }\n\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\n    const history: {\n      count: number, \n      unread: number, \n      unreadMentions: number, \n      msgs: Set<number>,\n      albums?: {[groupId: string]: Set<number>},\n    } = {\n      count: 0, \n      unread: 0, \n      unreadMentions: 0, \n      msgs: new Set()\n    };\n\n    for(const mid of messages) {\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\n      if(!message) {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n        continue;\n      }\n\n      this.handleReleasingMessage(message, storage);\n\n      this.updateMessageRepliesIfNeeded(message);\n\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\n        ++history.unread;\n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n\n        if(message.pFlags.mentioned) {\n          ++history.unreadMentions;\n          this.modifyCachedMentions(peerId, mid, false);\n        }\n      }\n\n      ++history.count;\n      history.msgs.add(mid);\n\n      message.deleted = true;\n\n      const groupedId = (message as Message.message).grouped_id;\n      if(groupedId) {\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\n        if(groupedStorage) {\n          groupedStorage.delete(mid);\n\n          if(!history.albums) history.albums = {};\n          (history.albums[groupedId] || (history.albums[groupedId] = new Set())).add(mid);\n\n          if(!groupedStorage.size) {\n            delete history.albums;\n            delete this.groupedMessagesStorage[groupedId];\n          }\n        }\n      }\n\n      storage.delete(mid);\n\n      const peerMessagesToHandle = this.newMessagesToHandle[peerId];\n      if(peerMessagesToHandle && peerMessagesToHandle.has(mid)) {\n        peerMessagesToHandle.delete(mid);\n      }\n    }\n\n    if(history.albums) {\n      for(const groupedId in history.albums) {\n        this.dispatchAlbumEdit(groupedId, storage, [...history.albums[groupedId]]);\n        /* const mids = this.getMidsByAlbum(groupId);\n        if(mids.length) {\n          const mid = Math.max(...mids);\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\n        } */\n      }\n    }\n\n    return history;\n  }\n  \n  private handleEditedMessage(oldMessage: Message, newMessage: Message, storage: MessagesStorage) {\n    if(oldMessage._ === 'message') {\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\n        this.appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\n      }\n\n      const groupedId = oldMessage.grouped_id;\n      if(groupedId) {\n        this.dispatchAlbumEdit(groupedId, storage, []);\n      }\n    }\n  }\n\n  private dispatchAlbumEdit(groupedId: string, storage: MessagesStorage, deletedMids?: number[]) {\n    const mids = this.getMidsByAlbum(groupedId);\n    const messages = mids.map((mid) => this.getMessageFromStorage(storage, mid)) as Message.message[];\n    this.rootScope.dispatchEvent('album_edit', {peerId: messages[0].peerId, groupId: groupedId, deletedMids: deletedMids || [], messages});\n  }\n\n  public getDialogUnreadCount(dialog: Dialog) {\n    return dialog.unread_count || +!!dialog.pFlags.unread_mark;\n  }\n\n  public isDialogUnread(dialog: Dialog) {\n    return !!this.getDialogUnreadCount(dialog);\n  }\n\n  public canForward(message: Message.message | Message.messageService) {\n    return message?._ === 'message' && !(message as Message.message).pFlags.noforwards && !this.appPeersManager.noForwards(message.peerId);\n  }\n\n  private pushBatchUpdate<E extends keyof BatchUpdates, C extends BatchUpdates[E]>(\n    event: E, \n    callback: C, \n    key: string, \n    getElementCallback?: () => MapValueType<ArgumentTypes<C>[0]>\n  ) {\n    let details = this.batchUpdates[event];\n    if(!details) {\n      // @ts-ignore\n      details = this.batchUpdates[event] = {\n        callback,\n        batch: new Map()\n      };\n    }\n\n    if(!details.batch.has(key)) {\n      // @ts-ignore\n      details.batch.set(key, getElementCallback ? getElementCallback() : undefined);\n      this.batchUpdatesDebounced();\n    }\n  }\n\n  private getMessagesFromMap<T extends Map<any, any>>(map: T) {\n    const newMap: Map<Message.message, MapValueType<T>> = new Map();\n    for(const [key, value] of map) {\n      const [peerIdStr, mid] = key.split('_');\n      const message = this.getMessageByPeer(peerIdStr.toPeerId(), +mid) as Message.message;\n      if(!message) {\n        continue;\n      }\n\n      newMap.set(message, value);\n    }\n\n    return newMap;\n  }\n\n  private batchUpdateViews = (batch: Map<string, undefined>) => {\n    const toDispatch: {peerId: PeerId, mid: number, views: number}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message] of map) {\n      toDispatch.push({\n        peerId: message.peerId,\n        mid: message.mid,\n        views: message.views\n      })\n    }\n\n    return toDispatch;\n  };\n\n  private batchUpdateReactions = (batch: Map<string, MessageReactions>) => {\n    const toDispatch: {message: Message.message, changedResults: ReactionCount.reactionCount[]}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message, previousReactions] of map) {\n      const results = message.reactions?.results ?? [];\n      const previousResults = previousReactions?.results ?? [];\n      const changedResults = results.filter((reactionCount) => {\n        const previousReactionCount = previousResults.find((_reactionCount) => _reactionCount.reaction === reactionCount.reaction);\n        return (\n          message.pFlags.out && (\n            !previousReactionCount || \n            reactionCount.count > previousReactionCount.count\n          )\n        ) || (\n          reactionCount.pFlags.chosen && (\n            !previousReactionCount || \n            !previousReactionCount.pFlags.chosen\n          )\n        );\n      });\n\n      toDispatch.push({message, changedResults});\n    }\n\n    return toDispatch;\n  };\n\n  public saveDefaultSendAs(peerId: PeerId, sendAsPeerId: PeerId) {\n    const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n    channelFull.default_send_as = this.appPeersManager.getOutputPeer(sendAsPeerId);\n    return this.apiManager.invokeApi('messages.saveDefaultSendAs', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      send_as: this.appPeersManager.getInputPeerById(sendAsPeerId)\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { getFileNameByLocation } from \"../../../../helpers/fileName\";\r\nimport { Document } from \"../../../../layer\";\r\nimport getDocumentInput from \"./getDocumentInput\";\r\n\r\nexport default function getDocumentInputFileName(doc: Document.document, thumbSize?: string) {\r\n  return getFileNameByLocation(getDocumentInput(doc, thumbSize), {fileName: doc.file_name});\r\n}\r\n","export default function convertInputKeyToKey<T extends string>(inputKey: string) {\n  const str = inputKey.replace('input', '');\n  return (str[0].toLowerCase() + str.slice(1)) as T;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport tsNow from \"../../helpers/tsNow\";\r\nimport { InputNotifyPeer, InputPeerNotifySettings, NotifyPeer, PeerNotifySettings, Update } from \"../../layer\";\r\nimport { MUTE_UNTIL } from \"../mtproto/mtproto_config\";\r\nimport throttle from \"../../helpers/schedulers/throttle\";\r\nimport convertInputKeyToKey from \"../../helpers/string/convertInputKeyToKey\";\r\nimport { AppManager } from \"./manager\";\r\nimport getPeerId from \"./utils/peers/getPeerId\";\r\nimport ctx from \"../../environment/ctx\";\r\nimport assumeType from \"../../helpers/assumeType\";\r\n\r\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\r\nexport class AppNotificationsManager extends AppManager {\r\n  private peerSettings = {\r\n    notifyPeer: {} as {[peerId: PeerId]: ImSadAboutIt},\r\n    notifyUsers: null as ImSadAboutIt,\r\n    notifyChats: null as ImSadAboutIt,\r\n    notifyBroadcasts: null as ImSadAboutIt\r\n  };\r\n  //private exceptions: {[peerId: string]: PeerNotifySettings} = {};\r\n  \r\n  private getNotifyPeerTypePromise: Promise<any>;\r\n\r\n  private checkMuteUntilTimeout: number;\r\n  private checkMuteUntilThrottled: () => void;\r\n\r\n  private notifyContactsSignUp: Promise<boolean>;\r\n\r\n  protected after() {\r\n    this.checkMuteUntilThrottled = throttle(this.checkMuteUntil, 1000, false);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateNotifySettings: (update) => {\r\n        const peerId = update.peer._ === 'notifyPeer' && getPeerId(update.peer.peer);\r\n        const key = update.peer._ !== 'notifyPeer' ? update.peer._ : undefined;\r\n        this.savePeerSettings({\r\n          key,\r\n          peerId, \r\n          settings: update.notify_settings\r\n        });\r\n        this.rootScope.dispatchEvent('notify_settings', update);\r\n      }\r\n    });\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      if(state.notifySettings) {\r\n        for(const key in state.notifySettings) {\r\n          assumeType<Exclude<NotifyPeer['_'], 'notifyPeer'>>(key);\r\n          this.savePeerSettings({\r\n            key,\r\n            settings: state.notifySettings[key]\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\r\n    let key: any = convertInputKeyToKey(peer._);\r\n    let obj: any = this.peerSettings[key as NotifyPeer['_']];\r\n\r\n    let peerId: PeerId;\r\n    if(peer._ === 'inputNotifyPeer') {\r\n      peerId = key = getPeerId(peer.peer);\r\n      obj = obj[key];\r\n    }\r\n\r\n    if(obj) {\r\n      return obj;\r\n    }\r\n\r\n    return (obj || this.peerSettings)[key] = this.apiManager.invokeApi('account.getNotifySettings', {peer})\r\n    .then((settings) => {\r\n      this.savePeerSettings({\r\n        key,\r\n        peerId, \r\n        settings\r\n      });\r\n      \r\n      return settings;\r\n    });\r\n  }\r\n\r\n  public getNotifyPeerTypeSettings() {\r\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\r\n\r\n    const promises = (['inputNotifyBroadcasts', 'inputNotifyUsers', 'inputNotifyChats'] as Exclude<InputNotifyPeer['_'], 'inputNotifyPeer'>[])\r\n    .map((inputKey) => {\r\n      return this.getNotifySettings({_: inputKey});\r\n    });\r\n\r\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\r\n  }\r\n\r\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\r\n    //this.savePeerSettings(peerId, settings);\r\n\r\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\r\n    inputSettings._ = 'inputPeerNotifySettings'; */\r\n\r\n    return this.apiManager.invokeApi('account.updateNotifySettings', {\r\n      peer,\r\n      settings\r\n    }).then((value) => {\r\n      if(value) {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateNotifySettings', \r\n          peer: {\r\n            ...peer as any,\r\n            _: convertInputKeyToKey(peer._)\r\n          }, \r\n          notify_settings: { // ! WOW, IT WORKS !\r\n            ...settings,\r\n            _: 'peerNotifySettings',\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // public getNotifyExceptions() {\r\n  //   apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\r\n  //   .then((updates) => {\r\n  //     apiUpdatesManager.processUpdateMessage(updates);\r\n  //   });\r\n  // }\r\n\r\n  public getContactSignUpNotification() {\r\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\r\n    return this.notifyContactsSignUp = this.apiManager.invokeApi('account.getContactSignUpNotification');\r\n  }\r\n\r\n  public setContactSignUpNotification(silent: boolean) {\r\n    this.apiManager.invokeApi('account.setContactSignUpNotification', {silent})\r\n    .then((value) => {\r\n      this.notifyContactsSignUp = Promise.resolve(!silent);\r\n    });\r\n  }\r\n\r\n  private checkMuteUntil = () => {\r\n    if(this.checkMuteUntilTimeout !== undefined) {\r\n      clearTimeout(this.checkMuteUntilTimeout);\r\n      this.checkMuteUntilTimeout = undefined;\r\n    }\r\n\r\n    const timestamp = tsNow(true);\r\n    let closestMuteUntil = MUTE_UNTIL;\r\n    for(const peerId in this.peerSettings.notifyPeer) {\r\n      const peerNotifySettings = this.peerSettings.notifyPeer[peerId];\r\n      if(peerNotifySettings instanceof Promise) {\r\n        continue;\r\n      }\r\n\r\n      const muteUntil = peerNotifySettings.mute_until;\r\n      if(!muteUntil) {\r\n        continue;\r\n      }\r\n\r\n      if(muteUntil <= timestamp) {\r\n        // ! do not delete it because peer's unique settings will be overwritten in getPeerLocalSettings with type's settings\r\n        peerNotifySettings.mute_until = 0;\r\n\r\n        this.apiUpdatesManager.saveUpdate({\r\n          _: 'updateNotifySettings',\r\n          peer: {\r\n            _: 'notifyPeer',\r\n            peer: this.appPeersManager.getOutputPeer(peerId.toPeerId())\r\n          },\r\n          notify_settings: peerNotifySettings\r\n        });\r\n      } else if(muteUntil < closestMuteUntil) {\r\n        closestMuteUntil = muteUntil;\r\n      }\r\n    }\r\n\r\n    const timeout = Math.min(1800e3, (closestMuteUntil - timestamp) * 1000);\r\n    this.checkMuteUntilTimeout = ctx.setTimeout(this.checkMuteUntil, timeout);\r\n  };\r\n\r\n  public savePeerSettings({key, peerId, settings}: {\r\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\r\n    peerId?: PeerId, \r\n    settings: PeerNotifySettings\r\n  }) {\r\n    let obj: any;\r\n    if(peerId) {\r\n      key = peerId as any;\r\n      obj = this.peerSettings['notifyPeer'];\r\n    }\r\n    \r\n    (obj || this.peerSettings)[key] = settings;\r\n\r\n    if(!peerId) {\r\n      this.rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\r\n      this.appStateManager.getState().then((state) => {\r\n        const notifySettings = state.notifySettings;\r\n        notifySettings[key] = settings;\r\n        this.appStateManager.pushToState('notifySettings', notifySettings);\r\n      });\r\n    } else {\r\n      this.checkMuteUntilThrottled();\r\n    }\r\n\r\n    //rootScope.broadcast('notify_settings', {peerId: peerId});\r\n  }\r\n\r\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\r\n    return peerNotifySettings._ === 'peerNotifySettings' &&\r\n      (peerNotifySettings.silent || (peerNotifySettings.mute_until !== undefined && (peerNotifySettings.mute_until * 1000) > tsNow()));\r\n  }\r\n\r\n  private getPeerMuted(peerId: PeerId) {\r\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: this.appPeersManager.getInputPeerById(peerId)});\r\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\r\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\r\n  }\r\n\r\n  private getPeerLocalSettings(peerId: PeerId, respectType = true): PeerNotifySettings {\r\n    const n: PeerNotifySettings = {\r\n      _: 'peerNotifySettings'\r\n    };\r\n\r\n    const notifySettings = this.peerSettings['notifyPeer'][peerId];\r\n    //if(!notifySettings || (notifySettings instanceof Promise)) return false;\r\n    if(notifySettings && !(notifySettings instanceof Promise)) {\r\n      Object.assign(n, notifySettings);\r\n    }\r\n\r\n    if(respectType) {\r\n      const inputNotify = this.appPeersManager.getInputNotifyPeerById(peerId, true);\r\n      const key = convertInputKeyToKey(inputNotify._);\r\n      const typeNotifySettings = this.peerSettings[key as NotifyPeer['_']];\r\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\r\n        for(let i in typeNotifySettings) {\r\n          // @ts-ignore\r\n          if(n[i] === undefined) {\r\n            // @ts-ignore\r\n            n[i] = typeNotifySettings[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  public isPeerLocalMuted(peerId: PeerId, respectType = true) {\r\n    if(peerId === this.appPeersManager.peerId) return false;\r\n\r\n    const notifySettings = this.getPeerLocalSettings(peerId, respectType);\r\n    return this.isMuted(notifySettings);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto } from \"../../layer\";\r\nimport type { LangPackKey } from \"../langPack\";\r\nimport { getRestrictionReason } from \"../../helpers/restrictions\";\r\nimport isObject from \"../../helpers/object/isObject\";\r\nimport { AppManager } from \"./manager\";\r\nimport getPeerId from \"./utils/peers/getPeerId\";\r\nimport isUser from \"./utils/peers/isUser\";\r\nimport isAnyChat from \"./utils/peers/isAnyChat\";\r\n\r\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\r\nexport class AppPeersManager extends AppManager {\r\n  public get peerId() {\r\n    return this.appUsersManager.userId.toPeerId();\r\n  }\r\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\r\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\r\n    else appUsersManager.saveApiUser(instance);\r\n  } */\r\n\r\n  public canPinMessage(peerId: PeerId) {\r\n    return peerId.isUser() || this.appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\r\n  }\r\n\r\n  public getPeerPhoto(peerId: PeerId): UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto {\r\n    if(this.isRestricted(peerId)) {\r\n      return;\r\n    }\r\n\r\n    const photo = peerId.isUser() \r\n      ? this.appUsersManager.getUserPhoto(peerId.toUserId())\r\n      : this.appChatsManager.getChatPhoto(peerId.toChatId());\r\n\r\n    return photo._ !== 'chatPhotoEmpty' && photo._ !== 'userProfilePhotoEmpty' ? photo : undefined;\r\n  }\r\n\r\n  public getPeerMigratedTo(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return false;\r\n    }\r\n\r\n    const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\r\n    if(chat && chat.migrated_to && chat.pFlags.deactivated) {\r\n      return getPeerId(chat.migrated_to as InputChannel.inputChannel);\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  public getOutputPeer(peerId: PeerId): Peer {\r\n    if(peerId.isUser()) {\r\n      return {_: 'peerUser', user_id: peerId.toUserId()};\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    if(this.appChatsManager.isChannel(chatId)) {\r\n      return {_: 'peerChannel', channel_id: chatId};\r\n    }\r\n\r\n    return {_: 'peerChat', chat_id: chatId};\r\n  }\r\n\r\n  public getPeerString(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return this.appUsersManager.getUserString(peerId.toUserId());\r\n    }\r\n    return this.appChatsManager.getChatString(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerUsername(peerId: PeerId): string {\r\n    return this.getPeer(peerId).username || '';\r\n  }\r\n\r\n  public getPeer(peerId: PeerId) {\r\n    return peerId.isUser()\r\n      ? this.appUsersManager.getUser(peerId.toUserId())\r\n      : this.appChatsManager.getChat(peerId.toChatId());\r\n  }\r\n\r\n  public getDialogPeer(peerId: PeerId): DialogPeer {\r\n    return {\r\n      _: 'dialogPeer',\r\n      peer: this.getOutputPeer(peerId)\r\n    };\r\n  }\r\n\r\n  public isChannel(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && this.appChatsManager.isChannel(peerId.toChatId());\r\n  }\r\n\r\n  public isMegagroup(peerId: PeerId) {\r\n    return !peerId.isUser() && this.appChatsManager.isMegagroup(peerId.toChatId());\r\n  }\r\n\r\n  public isAnyGroup(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && !this.appChatsManager.isBroadcast(peerId.toChatId());\r\n  }\r\n\r\n  public isBroadcast(peerId: PeerId): boolean {\r\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\r\n  }\r\n\r\n  public isBot(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isBot(peerId.toUserId());\r\n  }\r\n\r\n  public isContact(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isContact(peerId.toUserId());\r\n  }\r\n\r\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\r\n    return isUser(peerId);\r\n  }\r\n  \r\n  public isAnyChat(peerId: PeerId) {\r\n    return isAnyChat(peerId);\r\n  }\r\n\r\n  public isRestricted(peerId: PeerId) {\r\n    return peerId.isUser() ? this.appUsersManager.isRestricted(peerId.toUserId()) : this.appChatsManager.isRestricted(peerId.toChatId());\r\n  }\r\n\r\n  public getRestrictionReasonText(peerId: PeerId) {\r\n    const peer: Chat.channel | User.user = this.getPeer(peerId);\r\n    const reason = peer.restriction_reason ? getRestrictionReason(peer.restriction_reason) : undefined;\r\n    if(reason) {\r\n      return reason.text;\r\n    } else {\r\n      return peerId.isUser() ? 'This user is restricted' : 'This chat is restricted';\r\n    }\r\n  }\r\n\r\n  /* public getInputPeer(peerString: string): InputPeer {\r\n    var firstChar = peerString.charAt(0);\r\n    var peerParams = peerString.substr(1).split('_');\r\n    let id = +peerParams[0];\r\n\r\n    if(firstChar === 'u') {\r\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\r\n\r\n      return {\r\n        _: 'inputPeerUser',\r\n        user_id: id,\r\n        access_hash: peerParams[1]\r\n      };\r\n    } else if(firstChar === 'c' || firstChar === 's') {\r\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\r\n      if(firstChar === 's') {\r\n        appChatsManager.saveIsMegagroup(id);\r\n      }\r\n\r\n      return {\r\n        _: 'inputPeerChannel',\r\n        channel_id: id,\r\n        access_hash: peerParams[1] || '0'\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputPeerChat',\r\n        chat_id: id\r\n      };\r\n    }\r\n  } */\r\n\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\r\n    if(ignorePeerId) {\r\n      if(peerId.isUser()) {\r\n        return {_: 'inputNotifyUsers'};\r\n      } else {\r\n        if(this.isBroadcast(peerId)) {\r\n          return {_: 'inputNotifyBroadcasts'};\r\n        } else {\r\n          return {_: 'inputNotifyChats'};\r\n        }\r\n      }\r\n    } else {\r\n      return {\r\n        _: 'inputNotifyPeer', \r\n        peer: this.getInputPeerById(peerId)\r\n      };\r\n    }\r\n  }\r\n\r\n  public getInputPeerById(peerId: PeerId): InputPeer {\r\n    if(!peerId) {\r\n      return {_: 'inputPeerEmpty'};\r\n    }\r\n\r\n    if(!peerId.isUser()) {\r\n      const chatId = peerId.toChatId();\r\n      return this.appChatsManager.getInputPeer(chatId);\r\n    }\r\n\r\n    const userId = peerId.toUserId();\r\n    return this.appUsersManager.getUserInputPeer(userId);\r\n  }\r\n\r\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\r\n    return {_: 'inputPeerSelf'};\r\n  }\r\n\r\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\r\n    return {\r\n      _: 'inputDialogPeer',\r\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\r\n    };\r\n  }\r\n\r\n  public getPeerSearchText(peerId: PeerId) {\r\n    let text: string;\r\n    if(this.isUser(peerId)) {\r\n      text = '%pu ' + this.appUsersManager.getUserSearchText(peerId.toUserId());\r\n    } else {\r\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\r\n      text = '%pg ' + (chat.title || '');\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  public getDialogType(peerId: PeerId): PeerType {\r\n    if(this.isMegagroup(peerId)) {\r\n      return 'megagroup';\r\n    } else if(this.isChannel(peerId)) {\r\n      return 'channel';\r\n    } else if(!this.isUser(peerId)) {\r\n      return 'group';\r\n    } else {\r\n      return peerId === this.peerId ? 'saved' : 'chat';\r\n    }\r\n  }\r\n\r\n  public getDeleteButtonText(peerId: PeerId): LangPackKey {\r\n    switch(this.getDialogType(peerId)) {\r\n      case 'channel':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\r\n\r\n      case 'megagroup':\r\n      case 'group':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\r\n      \r\n      default:\r\n        return 'ChatList.Context.DeleteChat';\r\n    }\r\n  }\r\n\r\n  public noForwards(peerId: PeerId) {\r\n    if(peerId.isUser()) return false;\r\n    else {\r\n      const chat = this.appChatsManager.getChatTyped(peerId.toChatId());\r\n      return !!(chat as Chat.chat).pFlags?.noforwards;\r\n    }\r\n  }\r\n}\r\n\r\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat';\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { Photo, PhotoSize, PhotosPhotos } from \"../../layer\";\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport isObject from \"../../helpers/object/isObject\";\nimport safeReplaceArrayInObject from \"../../helpers/object/safeReplaceArrayInObject\";\nimport { AppManager } from \"./manager\";\n\nexport type MyPhoto = Photo.photo;\n\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\n//let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\n\nexport class AppPhotosManager extends AppManager {\n  private photos: {\n    [id: string]: MyPhoto\n  } = {};\n\n  public savePhoto(photo: Photo, context?: ReferenceContext) {\n    if(photo._ === 'photoEmpty') return undefined;\n\n    /* if(photo.id === TEST_FILE_REFERENCE) {\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\n      //photo.file_reference = new Uint8Array(bytes);\n      photo.file_reference = bytes;\n      if(!--TEST_FILE_REFERENCE_TIMES) {\n        TEST_FILE_REFERENCE = '';\n      }\n    } */\n\n    const oldPhoto = this.photos[photo.id];\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\n      this.referenceDatabase.saveContext(photo.file_reference, context);\n    }\n\n    if(photo.sizes?.length) {\n      const size = photo.sizes[photo.sizes.length - 1];\n      if(size._ === 'photoSizeProgressive') {\n        size.size = size.sizes[size.sizes.length - 1];\n      }\n    }\n\n    if(oldPhoto) {\n      return Object.assign(oldPhoto, photo);\n    }\n\n    return this.photos[photo.id] = photo;\n  }\n  \n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\n    const inputUser = this.appUsersManager.getUserInput(userId);\n    return this.apiManager.invokeApiCacheable('photos.getUserPhotos', {\n      user_id: inputUser,\n      offset: 0,\n      limit,\n      max_id: maxId\n    }, {cacheSeconds: 60}).then((photosResult) => {\n      this.appUsersManager.saveApiUsers(photosResult.users);\n      const photoIds = photosResult.photos.map((photo, idx) => {\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\n        return photo.id;\n      });\n\n      // ! WARNING !\n      if(maxId !== '0' && maxId) {\n        const idx = photoIds.indexOf(maxId);\n        if(idx !== -1) {\n          photoIds.splice(idx, 1);\n        }\n      }\n      \n      return {\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\n        photos: photoIds\n      };\n    });\n  }\n\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\n\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\n  } */\n\n  /* public isDownloaded(media: any) {\n    const isPhoto = media._ === 'photo';\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\n    let isDownloaded: boolean;\n    if(photo) {\n      isDownloaded = photo.downloaded > 0;\n    } else {\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\n      isDownloaded = cachedThumb?.downloaded > 0;\n    }\n\n    return isDownloaded;\n  } */\n  \n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport copy from \"../../helpers/object/copy\";\r\nimport { InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults } from \"../../layer\";\r\nimport { logger, LogTypes } from \"../logger\";\r\nimport parseMarkdown from \"../richTextProcessor/parseMarkdown\";\r\nimport { AppManager } from \"./manager\";\r\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\r\n\r\nexport class AppPollsManager extends AppManager {\r\n  public polls: {[id: string]: Poll} = {};\r\n  public results: {[id: string]: PollResults} = {};\r\n  public pollToMessages: {[id: string]: Set<string>} = {};\r\n\r\n  private log = logger('POLLS', LogTypes.Error);\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateMessagePoll: (update) => {\r\n        this.log('updateMessagePoll:', update);\r\n\r\n        let poll: Poll = update.poll || this.polls[update.poll_id];\r\n        if(!poll) {\r\n          return;\r\n        }\r\n\r\n        let results = update.results;\r\n        const ret = this.savePoll(poll, results as any);\r\n        poll = ret.poll;\r\n        results = ret.results;\r\n        \r\n        this.rootScope.dispatchEvent('poll_update', {poll, results: results as any});\r\n      }\r\n    });\r\n  }\r\n\r\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\r\n    if(message) {\r\n      this.updatePollToMessage(message, true);\r\n    }\r\n\r\n    const id = poll.id;\r\n    if(this.polls[id]) {\r\n      poll = Object.assign(this.polls[id], poll);\r\n      results = this.saveResults(poll, results);\r\n    } else {\r\n      this.polls[id] = poll;\r\n\r\n      poll.chosenIndexes = [];\r\n      results = this.saveResults(poll, results);\r\n    }\r\n\r\n    return {poll, results};\r\n  }\r\n\r\n  public saveResults(poll: Poll, results: PollResults) {\r\n    if(this.results[poll.id]) {\r\n      results = Object.assign(this.results[poll.id], results);\r\n    } else {\r\n      this.results[poll.id] = results;\r\n    }\r\n\r\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\r\n      poll.chosenIndexes.length = 0;\r\n      if(results?.results?.length) {\r\n        results.results.forEach((answer, idx) => {\r\n          if(answer.pFlags?.chosen) {\r\n            poll.chosenIndexes.push(idx);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public getPoll(pollId: string): {poll: Poll, results: PollResults} {\r\n    return {\r\n      poll: this.polls[pollId], \r\n      results: this.results[pollId]\r\n    };\r\n  }\r\n\r\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\r\n    if(solution) {\r\n      if(!solutionEntities) {\r\n        solutionEntities = [];\r\n      }\r\n\r\n      solution = parseMarkdown(solution, solutionEntities);\r\n    } else {\r\n      solution = undefined; // can be string here\r\n    }\r\n\r\n    return {\r\n      _: 'inputMediaPoll',\r\n      poll,\r\n      correct_answers: correctAnswers,\r\n      solution,\r\n      solution_entities: solution ? solutionEntities : undefined\r\n    };\r\n  }\r\n\r\n  public updatePollToMessage(message: Message.message, add: boolean) {\r\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\r\n    let set = this.pollToMessages[id];\r\n    \r\n    if(!add && !set) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = this.pollToMessages[id] = new Set();\r\n    }\r\n\r\n    const key = message.peerId + '_' + message.mid;\r\n    if(add) set.add(key);\r\n    else set.delete(key);\r\n\r\n    if(!add && !set.size) {\r\n      delete this.polls[id];\r\n      delete this.results[id];\r\n      delete this.pollToMessages[id];\r\n    }\r\n  }\r\n\r\n  public sendVote(message: any, optionIds: number[]): Promise<void> {\r\n    const poll: Poll = message.media.poll;\r\n\r\n    const options: Uint8Array[] = optionIds.map((index) => {\r\n      return poll.answers[index].option;\r\n    });\r\n    \r\n    const messageId = message.mid;\r\n    const peerId = message.peerId;\r\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      return this.appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\r\n        this.log('invoke sendVote callback');\r\n        return this.sendVote(message, optionIds);\r\n      });\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.sendVote', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid),\r\n      options\r\n    }).then((updates) => {\r\n      this.log('sendVote updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getResults(message: any) {\r\n    const inputPeer = this.appPeersManager.getInputPeerById(message.peerId);\r\n\r\n    return this.apiManager.invokeApi('messages.getPollResults', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid)\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n      this.log('getResults updates:', updates);\r\n    });\r\n  }\r\n\r\n  public getVotes(message: any, option?: Uint8Array, offset?: string, limit = 20) {\r\n    return this.apiManager.invokeApi('messages.getPollVotes', {\r\n      peer: this.appPeersManager.getInputPeerById(message.peerId),\r\n      id: getServerMessageId(message.mid),\r\n      option,\r\n      offset,\r\n      limit\r\n    }).then((votesList) => {\r\n      this.log('getPollVotes messages:', votesList);\r\n\r\n      this.appUsersManager.saveApiUsers(votesList.users);\r\n\r\n      return votesList;\r\n    });\r\n  }\r\n\r\n  public stopPoll(message: any) {\r\n    const poll: Poll = message.media.poll;\r\n    \r\n    if(poll.pFlags.closed) return Promise.resolve();\r\n\r\n    const newPoll = copy(poll);\r\n    newPoll.pFlags.closed = true;\r\n    return this.appMessagesManager.editMessage(message, undefined, {\r\n      newMedia: this.getInputMediaPoll(newPoll)\r\n    }).then(() => {\r\n      //console.log('stopped poll');\r\n    }, err => {\r\n      this.log.error('stopPoll error:', err);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { InputPrivacyKey, InputPrivacyRule, PrivacyRule, PrivacyKey } from \"../../layer\";\r\nimport convertInputKeyToKey from \"../../helpers/string/convertInputKeyToKey\";\r\nimport { AppManager } from \"./manager\";\r\n\r\nexport class AppPrivacyManager extends AppManager {\r\n  private privacy: Partial<{\r\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\r\n  }> = {};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updatePrivacy: (update) => {\r\n        const key = update.key._;\r\n        this.privacy[key] = update.rules;\r\n        this.rootScope.dispatchEvent('privacy_update', update);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\r\n    return this.apiManager.invokeApi('account.setPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      },\r\n      rules\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePrivacy',\r\n        key: {\r\n          _: convertInputKeyToKey(inputKey)\r\n        },\r\n        rules: rules.map((inputRule) => {\r\n          const rule: PrivacyRule = {} as any;\r\n          Object.assign(rule, inputRule);\r\n          rule._ = convertInputKeyToKey(rule._) as any;\r\n          return rule;\r\n        })\r\n      });\r\n\r\n      //console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\r\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\r\n    const rules = this.privacy[privacyKey];\r\n    if(rules) {\r\n      return Promise.resolve(rules);\r\n    }\r\n    \r\n    return this.privacy[privacyKey] = this.apiManager.invokeApi('account.getPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      }\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      //console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return this.privacy[privacyKey] = privacyRules.rules;\r\n    });\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { MyTopPeer } from \"./appUsersManager\";\nimport tsNow from \"../../helpers/tsNow\";\nimport { ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull, Photo, PhotoSize, Updates } from \"../../layer\";\nimport SearchIndex from \"../searchIndex\";\nimport { AppManager } from \"./manager\";\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\nimport getPeerId from \"./utils/peers/getPeerId\";\nimport getPhotoInput from \"./utils/photos/getPhotoInput\";\nimport getParticipantPeerId from \"./utils/chats/getParticipantPeerId\";\nimport ctx from \"../../environment/ctx\";\n\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\n\nexport class AppProfileManager extends AppManager {\n  //private botInfos: any = {};\n  private usersFull: {[id: UserId]: UserFull.userFull} = {};\n  private chatsFull: {[id: ChatId]: ChatFull} = {};\n  private typingsInPeer: {[peerId: PeerId]: UserTyping[]};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateChatParticipants: (update) => {\n        const participants = update.participants;\n        if(participants._ === 'chatParticipants') {\n          const chatId = participants.chat_id;\n          const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\n          if(chatFull !== undefined) {\n            chatFull.participants = participants;\n            this.rootScope.dispatchEvent('chat_full_update', chatId);\n          }\n        }\n      },\n\n      updateChatParticipantAdd: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              return;\n            }\n          }\n\n          participants.push({\n            _: 'chatParticipant',\n            user_id: update.user_id,\n            inviter_id: update.inviter_id,\n            date: tsNow(true)\n          });\n\n          _participants.version = update.version;\n          this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n        }\n      },\n\n      updateChatParticipantDelete: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              participants.splice(i, 1);\n              _participants.version = update.version;\n              this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n              return;\n            }\n          }\n        }\n      },\n\n      updateUserTyping: this.onUpdateUserTyping,\n      updateChatUserTyping: this.onUpdateUserTyping,\n      updateChannelUserTyping: this.onUpdateUserTyping,\n\n      updatePeerBlocked: this.onUpdatePeerBlocked\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const fullChat = this.chatsFull[chatId];\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = this.appChatsManager.getChat(chatId);\n      if(!fullChat || !chat) {\n        return;\n      }\n\n      let updated = false;\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\n        updated = true;\n      }\n\n      const {photo} = chat as Chat.chat;\n      if(photo) {\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\n        const hasFullChatPhoto = !!(fullChat.chat_photo && fullChat.chat_photo._ !== 'photoEmpty'); // chat_photo can be missing\n        if(\n          hasChatPhoto !== hasFullChatPhoto || (\n            hasChatPhoto && \n            photo.photo_id !== fullChat.chat_photo?.id\n          )\n        ) {\n          updated = true;\n        }\n      }\n\n      if(updated) {\n        this.refreshFullPeer(chatId.toPeerId(true));\n      }\n    });\n\n    this.rootScope.addEventListener('channel_update', (chatId) => {\n      this.refreshFullPeer(chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('chat_full_update', (chatId) => {\n      this.rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\n    });\n    \n    // * genius\n    this.rootScope.addEventListener('user_full_update', (userId) => {\n      this.rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\n    });\n\n    this.rootScope.addEventListener('invalidate_participants', (chatId) => {\n      this.invalidateChannelParticipants(chatId);\n    });\n\n    this.typingsInPeer = {};\n  }\n\n  /* public saveBotInfo(botInfo: any) {\n    const botId = botInfo && botInfo.user_id;\n    if(!botId) {\n      return null;\n    }\n\n    const commands: any = {};\n    botInfo.commands.forEach((botCommand: any) => {\n      commands[botCommand.command] = botCommand.description;\n    });\n\n    return this.botInfos[botId] = {\n      id: botId,\n      version: botInfo.version,\n      shareText: botInfo.share_text,\n      description: botInfo.description,\n      commands: commands\n    };\n  } */\n\n  public getProfile(id: UserId, override?: true) {\n    if(this.usersFull[id] && !override) {\n      return this.usersFull[id];\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'users.getFullUser', \n      params: {\n        id: this.appUsersManager.getUserInput(id)\n      },\n      processResult: (usersUserFull) => {\n        this.appChatsManager.saveApiChats(usersUserFull.chats, true);\n        this.appUsersManager.saveApiUsers(usersUserFull.users);\n\n        const userFull = usersUserFull.full_user;\n        const peerId = id.toPeerId(false);\n        if(userFull.profile_photo) {\n          userFull.profile_photo = this.appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: userFull.notify_settings\n        });\n\n        this.usersFull[id] = userFull;\n\n        /* if(userFull.bot_info) {\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\n        } */\n\n        //appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\n\n        this.rootScope.dispatchEvent('user_full_update', id);\n        return userFull;\n      }\n    });\n  }\n\n  public getProfileByPeerId(peerId: PeerId, override?: true) {\n    if(this.appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\n    else return this.getProfile(peerId.toUserId(), override);\n  }\n\n  public getCachedFullChat(chatId: ChatId) {\n    return this.chatsFull[chatId];\n  }\n\n  public getCachedFullUser(userId: UserId) {\n    return this.usersFull[userId];\n  }\n\n  public getCachedProfileByPeerId(peerId: PeerId) {\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\n  }\n\n  public async getFullPhoto(peerId: PeerId) {\n    const profile = await this.getProfileByPeerId(peerId);\n    switch(profile._) {\n      case 'userFull':\n        return profile.profile_photo;\n      case 'channelFull':\n      case 'chatFull':\n        return profile.chat_photo;\n    }\n  }\n\n  /* public getPeerBots(peerId: PeerId) {\n    var peerBots: any[] = [];\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\n      return Promise.resolve(peerBots);\n    }\n    if(peerId >= 0) {\n      return this.getProfile(peerId).then((userFull: any) => {\n        var botInfo = userFull.bot_info;\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\n          peerBots.push(botInfo);\n        }\n        return peerBots;\n      });\n    }\n\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\n      chatFull.bot_info.forEach((botInfo: any) => {\n        peerBots.push(this.saveBotInfo(botInfo))\n      });\n      return peerBots;\n    });\n  } */\n\n  public getChatFull(id: ChatId, override?: true) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelFull(id, override);\n    }\n\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\n    if(fullChat && !override) {\n      const chat = this.appChatsManager.getChat(id);\n      if(chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version ||\n        chat.pFlags.left) {\n        return fullChat as ChatFull;\n      }\n    }\n    \n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getFullChat', \n      params: {\n        chat_id: id\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const chatFull = result.full_chat as ChatFull.chatFull;\n        const peerId = id.toPeerId(true);\n        if(chatFull && chatFull.chat_photo && chatFull.chat_photo.id) {\n          chatFull.chat_photo = this.appPhotosManager.savePhoto(chatFull.chat_photo, {type: 'profilePhoto', peerId});\n        }\n\n        if(chatFull.call) {\n          this.appGroupCallsManager.saveGroupCall(chatFull.call, id);\n        }\n\n        //appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\n        this.appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: chatFull.notify_settings\n        });\n        \n        this.chatsFull[id] = chatFull;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return chatFull;\n      }\n    });\n  }\n\n  public async getChatInviteLink(id: ChatId, force?: boolean) {\n    const chatFull = await this.getChatFull(id);\n    if(!force &&\n      chatFull.exported_invite &&\n      chatFull.exported_invite._ == 'chatInviteExported') {\n      return chatFull.exported_invite.link;\n    }\n    \n    return this.apiManager.invokeApi('messages.exportChatInvite', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true))\n    }).then((exportedInvite) => {\n      if(this.chatsFull[id] !== undefined) {\n        this.chatsFull[id].exported_invite = exportedInvite;\n      }\n\n      return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\n    });\n  }\n\n  public getChannelParticipants(id: ChatId, filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'}, limit = 200, offset = 0) {\n    if(filter._ === 'channelParticipantsRecent') {\n      const chat = this.appChatsManager.getChat(id);\n      if(chat &&\n          chat.pFlags && (\n            // chat.pFlags.kicked ||\n            chat.pFlags.broadcast && !chat.pFlags.creator && !chat.admin_rights\n          )) {\n        return Promise.reject();\n      }\n    }\n\n    return this.apiManager.invokeApiCacheable('channels.getParticipants', {\n      channel: this.appChatsManager.getChannelInput(id),\n      filter,\n      offset,\n      limit,\n      hash: '0'\n    }, {cacheSeconds: 60}).then((result) => {\n      this.appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\n    });\n    /* let maybeAddSelf = (participants: any[]) => {\n      let chat = appChatsManager.getChat(id);\n      let selfMustBeFirst = filter._ === 'channelParticipantsRecent' &&\n                            !offset &&\n                            !chat.pFlags.kicked &&\n                            !chat.pFlags.left;\n\n      if(selfMustBeFirst) {\n        participants = copy(participants);\n        let myID = appUsersManager.getSelf().id;\n        let myIndex = participants.findIndex((p) => p.user_id === myID);\n        let myParticipant;\n\n        if(myIndex !== -1) {\n          myParticipant = participants[myIndex];\n          participants.splice(myIndex, 1);\n        } else {\n          myParticipant = {_: 'channelParticipantSelf', user_id: myID};\n        }\n\n        participants.unshift(myParticipant);\n      }\n\n      return participants;\n    } */\n  }\n\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\n    return this.apiManager.invokeApiSingle('channels.getParticipant', {\n      channel: this.appChatsManager.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId),\n    }).then((channelParticipant) => {\n      this.appUsersManager.saveApiUsers(channelParticipant.users);\n      return channelParticipant.participant;\n    });\n  }\n\n  public getChannelFull(id: ChatId, override?: true) {\n    if(this.chatsFull[id] !== undefined && !override) {\n      return this.chatsFull[id] as ChatFull.channelFull;\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getFullChannel', \n      params: {\n        channel: this.appChatsManager.getChannelInput(id)\n      }, \n      processResult: (result) => {\n        const peerId = id.toPeerId(true);\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const fullChannel = result.full_chat as ChatFull.channelFull;\n        if(fullChannel && fullChannel.chat_photo.id) {\n          fullChannel.chat_photo = this.appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\n          //appPhotosManager.savePhoto(fullChannel.chat_photo);\n        }\n\n        if(fullChannel.call) {\n          this.appGroupCallsManager.saveGroupCall(fullChannel.call, id);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: fullChannel.notify_settings\n        });\n\n        this.chatsFull[id] = fullChannel;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChannel;\n      }, \n      processError: (error) => {\n        switch(error.type) {\n          case 'CHANNEL_PRIVATE':\n            const channel: Chat.channel | Chat.channelForbidden = this.appChatsManager.getChat(id);\n            this.apiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: [{\n                _: 'updateChannel',\n                channel_id: id\n              }],\n              chats: [{\n                _: 'channelForbidden',\n                id,\n                access_hash: channel.access_hash,\n                title: channel.title,\n                pFlags: channel.pFlags\n              }],\n              users: []\n            } as Updates.updates);\n            break;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public getMentions(chatId: ChatId, query: string, threadId?: number): Promise<PeerId[]> {\n    const processUserIds = (topPeers: MyTopPeer[]) => {\n      const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      /* const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      \n      const index = new SearchIndex<number>(!startsWithAt, !startsWithAt); */\n      const index = new SearchIndex<PeerId>({\n        ignoreCase: true\n      });\n\n      const ratingMap: Map<PeerId, number> = new Map();\n      topPeers.forEach((peer) => {\n        index.indexObject(peer.id, this.appUsersManager.getUserSearchText(peer.id));\n        ratingMap.set(peer.id, peer.rating);\n      });\n\n      const peerIds = Array.from(index.search(query));\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\n      return peerIds;\n    };\n\n    let promise: Promise<PeerId[]>;\n    if(this.appChatsManager.isChannel(chatId)) {\n      promise = this.getChannelParticipants(chatId, {\n        _: 'channelParticipantsMentions',\n        q: query,\n        top_msg_id: getServerMessageId(threadId)\n      }, 50, 0).then((cP) => {\n        return cP.participants.map((p) => getParticipantPeerId(p));\n      });\n    } else if(chatId) {\n      promise = Promise.resolve(this.getChatFull(chatId)).then((chatFull) => {\n        return ((chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants).participants.map((p) => p.user_id.toPeerId());\n      });\n    } else {\n      promise = Promise.resolve([]);\n    }\n\n    return Promise.all([\n      // [],\n      this.appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]), \n      promise\n    ]).then((results) => {\n      const peers = results[0].concat(results[1].map((peerId) => ({id: peerId, rating: 0})));\n\n      return processUserIds(peers);\n    });\n  }\n\n  private invalidateChannelParticipants(id: ChatId) {\n    this.apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\n    this.refreshFullPeer(id.toPeerId(true));\n  }\n\n  private refreshFullPeer(peerId: PeerId) {\n    if(peerId.isUser()) {\n      const userId = peerId.toUserId();\n      delete this.usersFull[userId];\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    } else {\n      const chatId = peerId.toChatId();\n      delete this.chatsFull[chatId];\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\n    }\n\n    // ! эта строчка будет создавать race condition:\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\n    // this.getProfileByPeerId(peerId, true);\n  }\n\n  public updateProfile(first_name?: string, last_name?: string, about?: string) {\n    return this.apiManager.invokeApi('account.updateProfile', {\n      first_name,\n      last_name,\n      about\n    }).then((user) => {\n      this.appUsersManager.saveApiUser(user);\n\n      if(about !== undefined) {\n        const peerId = user.id.toPeerId();\n        const userFull = this.usersFull[user.id];\n        if(userFull) {\n          userFull.about = about;\n        }\n  \n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n      \n      return this.getProfile(this.appPeersManager.peerId, true);\n    });\n  }\n\n  public uploadProfilePhoto(inputFile: InputFile) {\n    return this.apiManager.invokeApi('photos.uploadProfilePhoto', {\n      file: inputFile\n    }).then((updateResult) => {\n      // ! sometimes can have no user in users\n      const photo = updateResult.photo as Photo.photo;\n      if(!updateResult.users.length) {\n        const strippedThumb = photo.sizes.find((size) => size._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n        updateResult.users.push({\n          ...this.appUsersManager.getSelf(), \n          photo: {\n            _: 'userProfilePhoto',\n            dc_id: photo.dc_id,\n            photo_id: photo.id,\n            stripped_thumb: strippedThumb?.bytes,\n            pFlags: {\n\n            }\n          }\n        });\n      }\n      this.appUsersManager.saveApiUsers(updateResult.users);\n\n      const myId = this.appPeersManager.peerId;\n      this.appPhotosManager.savePhoto(updateResult.photo, {\n        type: 'profilePhoto',\n        peerId: myId\n      });\n\n      const userId = myId.toUserId();\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateUserPhoto',\n        user_id: userId,\n        date: tsNow(true),\n        photo: this.appUsersManager.getUser(userId).photo,\n        previous: true\n      });\n    });\n  }\n\n  public deletePhotos(photoIds: string[]) {\n    return this.apiManager.invokeApiSingle('photos.deletePhotos', {\n      id: photoIds.map((photoId) => {\n        const photo = this.appPhotosManager.getPhoto(photoId);\n        return getPhotoInput(photo);\n      })\n    }).then((deletedList) => {\n      \n    });\n  }\n\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\n    const user = this.appUsersManager.getUser(participant.user_id);\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\n  }\n\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\n    return participants.reduce((acc, participant) => {\n      return acc + +this.verifyParticipantForOnlineCount(participant);\n    }, 0);\n  }\n\n  public async getOnlines(id: ChatId): Promise<number> {\n    const minOnline = 1;\n    if(this.appChatsManager.isBroadcast(id)) {\n      return minOnline;\n    }\n    \n    const chatInfo = await this.getChatFull(id);\n    if(this.appChatsManager.isMegagroup(id)) {\n      if((chatInfo as ChatFull.channelFull).participants_count <= 100) {\n        const channelParticipants = await this.getChannelParticipants(id, {_: 'channelParticipantsRecent'}, 100);\n        return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\n      }\n\n      const res = await this.apiManager.invokeApiCacheable('messages.getOnlines', {\n        peer: this.appChatsManager.getChannelInputPeer(id)\n      }, {cacheSeconds: 60});\n\n      const onlines = res.onlines ?? minOnline;\n      return onlines;\n    }\n\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\n    if(_participants?.participants) {\n      return this.reduceParticipantsForOnlineCount(_participants.participants);\n    } else {\n      return minOnline;\n    }\n  }\n\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\n    const fromId = (update as Update.updateUserTyping).user_id ? \n      (update as Update.updateUserTyping).user_id.toPeerId() : \n      getPeerId((update as Update.updateChatUserTyping).from_id);\n    if(this.appPeersManager.peerId === fromId || update.action._ === 'speakingInGroupCallAction') {\n      return;\n    }\n    \n    const peerId = getPeerId(update);\n    const typings = this.typingsInPeer[peerId] ?? (this.typingsInPeer[peerId] = []);\n    let typing = typings.find((t) => t.userId === fromId);\n\n    const cancelAction = () => {\n      delete typing.timeout;\n      //typings.findAndSplice((t) => t === typing);\n      const idx = typings.indexOf(typing);\n      if(idx !== -1) {\n        typings.splice(idx, 1);\n      }\n\n      this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n\n      if(!typings.length) {\n        delete this.typingsInPeer[peerId];\n      }\n    };\n\n    if(typing && typing.timeout !== undefined) {\n      clearTimeout(typing.timeout);\n    }\n\n    if(update.action._ === 'sendMessageCancelAction') {\n      if(!typing) {\n        return;\n      }\n\n      cancelAction();\n      return;\n    }\n\n    if(!typing) {\n      typing = {\n        userId: fromId\n      };\n\n      typings.push(typing);\n    }\n\n    //console.log('updateChatUserTyping', update, typings);\n    \n    typing.action = update.action;\n    \n    const hasUser = this.appUsersManager.hasUser(fromId);\n    if(!hasUser) {\n      // let's load user here\n      if(update._ === 'updateChatUserTyping') {\n        if(update.chat_id && this.appChatsManager.hasChat(update.chat_id) && !this.appChatsManager.isChannel(update.chat_id)) {\n          Promise.resolve(this.getChatFull(update.chat_id)).then(() => {\n            if(typing.timeout !== undefined && this.appUsersManager.hasUser(fromId)) {\n              this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n            }\n          });\n        }\n      }\n      \n      //return;\n    } else {\n      this.appUsersManager.forceUserOnline(fromId);\n    }\n\n    typing.timeout = ctx.setTimeout(cancelAction, 6000);\n    if(hasUser) {\n      this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n    }\n  };\n\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\n    const peerId = getPeerId(update.peer_id);\n    if(this.appPeersManager.isUser(peerId)) {\n      const userId = peerId.toUserId();\n      const userFull = this.usersFull[userId];\n      if(userFull) {\n        if(update.blocked) userFull.pFlags.blocked = true;\n        else delete userFull.pFlags.blocked;\n      }\n\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    }\n\n    this.rootScope.dispatchEvent('peer_block', {peerId, blocked: update.blocked});\n  };\n\n  public getPeerTypings(peerId: PeerId) {\n    return this.typingsInPeer[peerId];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Awaited } from '../types';\n\nexport default function callbackifyAll<T extends readonly unknown[] | [], R extends any>(\n  values: T, \n  callback: (result: { -readonly [P in keyof T]: Awaited<T[P]> }) => R\n): PromiseLike<R> | R {\n  if(values.some((value) => value instanceof Promise)) {\n    return Promise.all(values).then(callback as any);\n  } else {\n    return callback(values as any);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport findAndSplice from \"../../helpers/array/findAndSplice\";\nimport assumeType from \"../../helpers/assumeType\";\nimport callbackify from \"../../helpers/callbackify\";\nimport callbackifyAll from \"../../helpers/callbackifyAll\";\nimport copy from \"../../helpers/object/copy\";\nimport { AvailableReaction, Message, MessagePeerReaction, MessagesAvailableReactions, Update, Updates } from \"../../layer\";\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport { AppManager } from \"./manager\";\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\nimport getPeerId from \"./utils/peers/getPeerId\";\n\nconst SAVE_DOC_KEYS = [\n  'static_icon' as const,\n  'appear_animation' as const,\n  'select_animation' as const,\n  'activate_animation' as const,\n  'effect_animation' as const,\n  'around_animation' as const,\n  'center_icon' as const\n];\n\nconst REFERENCE_CONTEXT: ReferenceContext = {\n  type: 'reactions'\n};\n\nexport class AppReactionsManager extends AppManager {\n  private availableReactions: AvailableReaction[];\n  private sendReactionPromises: Map<string, Promise<any>>;\n  private lastSendingTimes: Map<string, number>;\n\n  protected after() {\n    this.rootScope.addEventListener('language_change', () => {\n      this.availableReactions = undefined;\n      this.getAvailableReactions();\n    });\n\n    this.sendReactionPromises = new Map();\n    this.lastSendingTimes = new Map();\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        Promise.resolve(this.getAvailableReactions()).then(async(availableReactions) => {\n          for(const availableReaction of availableReactions) {\n            await Promise.all([\n              availableReaction.around_animation && this.apiFileManager.downloadMedia({media: availableReaction.around_animation}),\n              availableReaction.static_icon && this.apiFileManager.downloadMedia({media: availableReaction.static_icon}),\n              availableReaction.appear_animation && this.apiFileManager.downloadMedia({media: availableReaction.appear_animation}),\n              availableReaction.center_icon && this.apiFileManager.downloadMedia({media: availableReaction.center_icon})\n            ]);\n          }\n        });\n      }, 7.5e3);\n    });\n  }\n\n  public getAvailableReactions() {\n    if(this.availableReactions) return this.availableReactions;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAvailableReactions',\n      processResult: (messagesAvailableReactions) => {\n        assumeType<MessagesAvailableReactions.messagesAvailableReactions>(messagesAvailableReactions);\n\n        const availableReactions = this.availableReactions = messagesAvailableReactions.reactions;\n        for(const reaction of availableReactions) {\n          for(const key of SAVE_DOC_KEYS) {\n            if(!reaction[key]) {\n              continue;\n            }\n            \n            reaction[key] = this.appDocsManager.saveDoc(reaction[key], REFERENCE_CONTEXT);\n          }\n        }\n\n        return availableReactions;\n      },\n      params: {\n        hash: 0\n      }\n    });\n  }\n\n  public getActiveAvailableReactions() {\n    return callbackify(this.getAvailableReactions(), (availableReactions) => {\n      return availableReactions.filter((availableReaction) => !availableReaction.pFlags.inactive);\n    });\n  }\n\n  public getAvailableReactionsForPeer(peerId: PeerId) {\n    const activeAvailableReactions = this.getActiveAvailableReactions();\n    if(peerId.isUser()) {\n      return this.unshiftQuickReaction(activeAvailableReactions);\n    }\n\n    const chatFull = this.appProfileManager.getChatFull(peerId.toChatId());\n    return callbackifyAll([activeAvailableReactions, chatFull, this.getQuickReaction()], ([activeAvailableReactions, chatFull, quickReaction]) => {\n      const chatAvailableReactions = chatFull.available_reactions ?? [];\n\n      const filteredChatAvailableReactions = chatAvailableReactions.map((reaction) => {\n        return activeAvailableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n      }).filter(Boolean);\n\n      return this.unshiftQuickReactionInner(filteredChatAvailableReactions, quickReaction);\n    });\n  }\n\n  private unshiftQuickReactionInner(availableReactions: AvailableReaction.availableReaction[], quickReaction: AvailableReaction.availableReaction) {\n    const availableReaction = findAndSplice(availableReactions, availableReaction => availableReaction.reaction === quickReaction.reaction);\n    if(availableReaction) {\n      availableReactions.unshift(availableReaction);\n    }\n\n    return availableReactions;\n  }\n\n  private unshiftQuickReaction(\n    availableReactions: AvailableReaction.availableReaction[] | PromiseLike<AvailableReaction.availableReaction[]>, \n    quickReaction: ReturnType<AppReactionsManager['getQuickReaction']> = this.getQuickReaction()\n  ) {\n    return callbackifyAll([\n      availableReactions,\n      quickReaction\n    ], ([availableReactions, quickReaction]) => {\n      return this.unshiftQuickReactionInner(availableReactions, quickReaction);\n    });\n  }\n\n  public getAvailableReactionsByMessage(message: Message.message) {\n    if(!message) return [];\n    const peerId = (message.fwd_from?.channel_post && this.appPeersManager.isMegagroup(message.peerId) && message.fwdFromId) || message.peerId;\n    return this.getAvailableReactionsForPeer(peerId);\n  }\n\n  public isReactionActive(reaction: string) {\n    if(!this.availableReactions) return false;\n    return !!this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getQuickReaction() {\n    return callbackifyAll([\n      this.apiManager.getAppConfig(),\n      this.getAvailableReactions()\n    ], ([appConfig, availableReactions]) => {\n      return availableReactions.find((reaction) => reaction.reaction === appConfig.reactions_default);\n    });\n  }\n\n  public getReactionCached(reaction: string) {\n    return this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getReaction(reaction: string) {\n    return callbackify(this.getAvailableReactions(), () => {\n      return this.getReactionCached(reaction);\n    });\n  }\n\n  public getMessagesReactions(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessagesReactions',\n      params: {\n        id: mids.map((mid) => getServerMessageId(mid)),\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateMessageReactions') as Update.updateMessageReactions;\n        // return update.reactions;\n      }\n    });\n  }\n\n  public getMessageReactionsList(peerId: PeerId, mid: number, limit: number, reaction?: string, offset?: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessageReactionsList',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: getServerMessageId(mid),\n        limit,\n        reaction,\n        offset\n      },\n      processResult: (messageReactionsList) => {\n        this.appUsersManager.saveApiUsers(messageReactionsList.users);\n        return messageReactionsList;\n      }\n    });\n  }\n\n  public setDefaultReaction(reaction: string) {\n    return this.apiManager.invokeApi('messages.setDefaultReaction', {reaction}).then(async(value) => {\n      if(value) {\n        const appConfig = await this.apiManager.getAppConfig();\n        if(appConfig) {\n          appConfig.reactions_default = reaction;\n        }/*  else { // if no config or loading it - overwrite\n          this.apiManager.getAppConfig(true);\n        } */\n\n        this.rootScope.dispatchEvent('quick_reaction', reaction);\n      }\n\n      return value;\n    });\n  }\n\n  public sendReaction(message: Message.message, reaction?: string, onlyLocal?: boolean) {\n    const lastSendingTimeKey = message.peerId + '_' + message.mid;\n    const lastSendingTime = this.lastSendingTimes.get(lastSendingTimeKey);\n    if(lastSendingTime) {\n      return;\n    } else {\n      this.lastSendingTimes.set(lastSendingTimeKey, Date.now());\n      setTimeout(() => {\n        this.lastSendingTimes.delete(lastSendingTimeKey);\n      }, 333);\n    }\n\n    const {peerId, mid} = message;\n    const myPeerId = this.appPeersManager.peerId;\n\n    let reactions = onlyLocal ? message.reactions : copy(message.reactions);\n    let chosenReactionIdx = reactions ? reactions.results.findIndex((reactionCount) => reactionCount.pFlags.chosen) : -1;\n    let chosenReaction = chosenReactionIdx !== -1 && reactions.results[chosenReactionIdx];\n    if(chosenReaction) { // clear current reaction\n      --chosenReaction.count;\n      delete chosenReaction.pFlags.chosen;\n\n      if(reaction === chosenReaction.reaction) {\n        reaction = undefined;\n      }\n\n      if(!chosenReaction.count) {\n        reactions.results.splice(chosenReactionIdx, 1);\n      }/*  else {\n        insertInDescendSortedArray(reactions.results, chosenReaction, 'count', chosenReactionIdx);\n      } */\n\n      if(reactions.recent_reactions) {\n        findAndSplice(reactions.recent_reactions, (recentReaction) => getPeerId(recentReaction.peer_id) === myPeerId);\n      }\n\n      if(!reactions.results.length) {\n        reactions = undefined;\n      }\n    }\n\n    if(reaction) {\n      if(!reactions) {\n        reactions/*  = message.reactions */ = {\n          _: 'messageReactions',\n          results: [],\n          pFlags: {}\n        };\n\n        if(!this.appPeersManager.isBroadcast(message.peerId)) {\n          reactions.pFlags.can_see_list = true;\n        }\n      }\n\n      let reactionCountIdx = reactions.results.findIndex((reactionCount) => reactionCount.reaction === reaction);\n      let reactionCount = reactionCountIdx !== -1 && reactions.results[reactionCountIdx];\n      if(!reactionCount) {\n        reactionCount = {\n          _: 'reactionCount',\n          count: 0,\n          reaction,\n          pFlags: {}\n        };\n\n        reactionCountIdx = reactions.results.push(reactionCount) - 1;\n      }\n\n      ++reactionCount.count;\n      reactionCount.pFlags.chosen = true;\n\n      if(!reactions.recent_reactions && reactions.pFlags.can_see_list) {\n        reactions.recent_reactions = [];\n      }\n\n      if(reactions.recent_reactions) {\n        const userReaction: MessagePeerReaction = {\n          _: 'messagePeerReaction',\n          reaction,\n          peer_id: this.appPeersManager.getOutputPeer(myPeerId)\n        };\n\n        if(!this.appPeersManager.isMegagroup(peerId)) {\n          reactions.recent_reactions.push(userReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(-3);\n        } else {\n          reactions.recent_reactions.unshift(userReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(0, 3);\n        }\n      }\n\n      // insertInDescendSortedArray(reactions.results, reactionCount, 'count', reactionCountIdx);\n    }\n\n    const availableReactions = this.availableReactions;\n    if(reactions && availableReactions?.length) {\n      const indexes: Map<string, number> = new Map();\n      availableReactions.forEach((availableReaction, idx) => {\n        indexes.set(availableReaction.reaction, idx);\n      });\n\n      reactions.results.sort((a, b) => {\n        return (b.count - a.count) || (indexes.get(a.reaction) - indexes.get(b.reaction));\n      });\n    }\n\n    if(onlyLocal) {\n      message.reactions = reactions;\n      this.rootScope.dispatchEvent('messages_reactions', [{message, changedResults: []}]);\n      return Promise.resolve();\n    }\n\n    this.apiUpdatesManager.processLocalUpdate({\n      _: 'updateMessageReactions',\n      peer: message.peer_id,\n      msg_id: message.id,\n      reactions: reactions,\n      local: true\n    });\n\n    const promiseKey = [peerId, mid].join('-');\n    const msgId = getServerMessageId(mid);\n    const promise = this.apiManager.invokeApi('messages.sendReaction', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: msgId,\n      reaction\n    }).then((updates) => {\n      assumeType<Updates.updates>(updates);\n      \n      const editMessageUpdateIdx = updates.updates.findIndex((update) => update._ === 'updateEditMessage' || update._ === 'updateEditChannelMessage');\n      if(editMessageUpdateIdx !== -1) {\n        const editMessageUpdate = updates.updates[editMessageUpdateIdx] as Update.updateEditMessage | Update.updateEditChannelMessage;\n        updates.updates[editMessageUpdateIdx] = {\n          _: 'updateMessageReactions',\n          msg_id: msgId,\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          reactions: (editMessageUpdate.message as Message.message).reactions,\n          pts: editMessageUpdate.pts,\n          pts_count: editMessageUpdate.pts_count\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }).catch((err) => {\n      if(err.type === 'REACTION_INVALID' && this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReaction(message, chosenReaction?.reaction, true);\n      }\n    }).finally(() => {\n      if(this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReactionPromises.delete(promiseKey);\n      }\n    });\n    \n    this.sendReactionPromises.set(promiseKey, promise);\n    return promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { MyDocument } from './appDocsManager';\nimport { Document, InputFileLocation, InputStickerSet, MessagesAllStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered } from '../../layer';\nimport { Modify } from '../../types';\nimport AppStorage from '../storage';\nimport DATABASE_STATE from '../../config/databases/state';\nimport assumeType from '../../helpers/assumeType';\nimport fixBase64String from '../../helpers/fixBase64String';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport { AppManager } from './manager';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport ctx from '../../environment/ctx';\nimport { getEnvironment } from '../../environment/utils';\n\nconst CACHE_TIME = 3600e3;\n\nconst EMOJI_SET_LOCAL_ID = 'emoji';\nconst EMOJI_ANIMATIONS_SET_LOCAL_ID = 'emojiAnimations';\nconst LOCAL_IDS_SET = new Set([\n  EMOJI_SET_LOCAL_ID,\n  EMOJI_ANIMATIONS_SET_LOCAL_ID\n]);\n\n// let TEST_FILE_REFERENCE_REFRESH = true;\n\nexport type MyStickerSetInput = {\n  id: StickerSet.stickerSet['id'],\n  access_hash?: StickerSet.stickerSet['access_hash']\n};\n\nexport type MyMessagesStickerSet = MessagesStickerSet.messagesStickerSet;\n\nexport class AppStickersManager extends AppManager {\n  private storage = new AppStorage<Record<Long, MyMessagesStickerSet>, typeof DATABASE_STATE>(DATABASE_STATE, 'stickerSets');\n\n  private getStickerSetPromises: {[setId: Long]: Promise<MyMessagesStickerSet>};\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<Document[]>};\n\n  private greetingStickers: Document.document[];\n  private getGreetingStickersTimeout: number;\n  private getGreetingStickersPromise: Promise<void>;\n\n  private sounds: Record<string, MyDocument>;\n  private getAnimatedEmojiSoundsPromise: Promise<void>;\n  \n  protected after() {\n    this.getStickerSetPromises = {};\n    this.getStickersByEmoticonsPromises = {};\n    this.sounds = {};\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        this.getAnimatedEmojiStickerSet();\n      }, 1000);\n\n      if(!this.getGreetingStickersPromise && this.getGreetingStickersTimeout === undefined) {\n        this.getGreetingStickersTimeout = ctx.setTimeout(() => {\n          this.getGreetingStickersTimeout = undefined;\n          this.getGreetingSticker(true);\n        }, 5000);\n      }\n    });\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateNewStickerSet: (update) => {\n        const stickerSet = update.stickerset as MyMessagesStickerSet;\n        this.saveStickerSet(stickerSet, stickerSet.set.id);\n        this.rootScope.dispatchEvent('stickers_installed', stickerSet.set);\n      }\n    });\n  }\n\n  public getGreetingSticker(justPreload = false) {\n    if(this.getGreetingStickersTimeout) {\n      clearTimeout(this.getGreetingStickersTimeout);\n      this.getGreetingStickersTimeout = undefined;\n    }\n\n    if(!this.getGreetingStickersPromise) {\n      this.getGreetingStickersPromise = this.getStickersByEmoticon('👋⭐️', false).then((docs) => {\n        if(!docs.length) throw 'NO_STICKERS';\n        this.greetingStickers = docs.slice() as Document.document[];\n        this.greetingStickers.sort((a, b) => Math.random() - Math.random());\n      });\n    }\n    \n    return this.getGreetingStickersPromise.then(() => {\n      let doc: Document.document;\n      if(!justPreload) {\n        doc = this.greetingStickers.shift();\n        this.greetingStickers.push(doc);\n      }\n\n      this.apiFileManager.downloadMedia({media: this.greetingStickers[0]}); // preload next sticker\n\n      return doc;\n    });\n  }\n\n  public saveStickers(docs: Document[]) {\n    forEachReverse(docs, (doc, idx) => {\n      doc = this.appDocsManager.saveDoc(doc);\n\n      if(!doc) docs.splice(idx, 1);\n      else docs[idx] = doc;\n    });\n  }\n\n  public async getStickerSet(set: MyStickerSetInput, params: Partial<{\n    overwrite: boolean,\n    useCache: boolean,\n    saveById: boolean\n  }> = {}): Promise<MyMessagesStickerSet> {\n    const id = set.id;\n    if(this.getStickerSetPromises[id]) {\n      return this.getStickerSetPromises[id];\n    }\n\n    return this.getStickerSetPromises[id] = new Promise(async(resolve) => {\n      if(!params.overwrite) {\n        // const perf = performance.now();\n        const cachedSet = await this.storage.get(id);\n        if(cachedSet && cachedSet.documents?.length && ((Date.now() - cachedSet.refreshTime) < CACHE_TIME || params.useCache)) {\n          this.saveStickers(cachedSet.documents);\n          resolve(cachedSet);\n          delete this.getStickerSetPromises[id];\n          // console.log('get sticker set from cache time', id, performance.now() - perf);\n          return;\n        }\n      }\n\n      try {\n        const stickerSet = await this.apiManager.invokeApi('messages.getStickerSet', {\n          stickerset: this.getStickerSetInput(set),\n          hash: 0\n        }) as MyMessagesStickerSet;\n  \n        const saveById = params.saveById ? id : stickerSet.set.id;\n        this.saveStickerSet(stickerSet, saveById);\n  \n        resolve(stickerSet);\n      } catch(err) {\n        resolve(null);\n      }\n      \n      delete this.getStickerSetPromises[id];\n    });\n  }\n\n  public getAnimatedEmojiStickerSet() {\n    return Promise.all([\n      this.getStickerSet({id: EMOJI_SET_LOCAL_ID}, {saveById: true}),\n      this.getStickerSet({id: EMOJI_ANIMATIONS_SET_LOCAL_ID}, {saveById: true}),\n      this.getAnimatedEmojiSounds()\n    ]).then(([emoji, animations]) => {\n      return {emoji, animations};\n    });\n  }\n\n  public getAnimatedEmojiSounds(overwrite?: boolean) {\n    if(this.getAnimatedEmojiSoundsPromise && !overwrite) return this.getAnimatedEmojiSoundsPromise;\n    const promise = this.getAnimatedEmojiSoundsPromise = Promise.all([\n      this.apiManager.getAppConfig(overwrite),\n      this.apiManager.getConfig()\n    ]).then(([appConfig, config]) => {\n      if(this.getAnimatedEmojiSoundsPromise !== promise) {\n        return;\n      }\n\n      for(const emoji in appConfig.emojies_sounds) {\n        const sound = appConfig.emojies_sounds[emoji];\n        const bytesStr = atob(fixBase64String(sound.file_reference_base64, false));\n        const bytes = new Uint8Array(bytesStr.length);\n        for(let i = 0, length = bytes.length; i < length; ++i) {\n          bytes[i] = bytesStr[i].charCodeAt(0);\n        }\n\n        // if(TEST_FILE_REFERENCE_REFRESH) {\n        //   bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4] = 0;\n        //   sound.access_hash += '999';\n        // }\n        \n        const doc = this.appDocsManager.saveDoc({\n          _: 'document',\n          pFlags: {},\n          flags: 0,\n          id: sound.id,\n          access_hash: sound.access_hash,\n          attributes: [{\n            _: 'documentAttributeAudio',\n            duration: 1,\n            pFlags: {\n              voice: true\n            }\n          }],\n          date: 0,\n          dc_id: config.this_dc,\n          file_reference: bytes,\n          mime_type: 'audio/ogg',\n          // size: 101010 // test loading everytime\n        }, {\n          type: 'emojiesSounds'\n        });\n\n        this.sounds[emoji] = doc;\n      }\n\n      // if(TEST_FILE_REFERENCE_REFRESH) {\n      //   TEST_FILE_REFERENCE_REFRESH = false;\n      // }\n    });\n\n    return promise;\n  }\n\n  public async getRecentStickers(): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\n    stickers: Document[]\n  }>> {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getRecentStickers',\n      processResult: (res) => {\n        assumeType<MessagesRecentStickers.messagesRecentStickers>(res);\n\n        this.saveStickers(res.stickers);\n        return res;\n      }\n    });\n\n    return res;\n  }\n\n  private cleanEmoji(emoji: string) {\n    return emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\n  }\n\n  public getAnimatedEmojiSticker(emoji: string, isAnimation?: boolean) {\n    const id = isAnimation ? EMOJI_ANIMATIONS_SET_LOCAL_ID : EMOJI_SET_LOCAL_ID;\n    const stickerSet = this.storage.getFromCache(id);\n    // const stickerSet = await this.getStickerSet({id});\n    if(!stickerSet || !stickerSet.documents) return;\n\n    if(isAnimation) {\n      if(['🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎'].includes(emoji)) {\n        emoji = '❤️';\n      }\n    }\n\n    emoji = this.cleanEmoji(emoji);\n    const pack = stickerSet.packs.find((p) => p.emoticon === emoji);\n    return pack ? this.appDocsManager.getDoc(pack.documents[0]) : undefined;\n  }\n\n  public getAnimatedEmojiSoundDocument(emoji: string) {\n    return this.sounds[this.cleanEmoji(emoji)];\n  }\n\n  public preloadAnimatedEmojiSticker(emoji: string) {\n    const preloadEmojiPromise = this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji);\n    });\n    \n    return Promise.all([\n      preloadEmojiPromise,\n      this.preloadAnimatedEmojiStickerAnimation(emoji)\n    ]).then(([doc, a]) => {\n      return {\n        doc: doc,\n        animation: a?.doc,\n        sound: a?.sound\n      };\n    });\n  }\n\n  public preloadAnimatedEmojiStickerAnimation(emoji: string) {\n    return this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji, true);\n    }).then((doc) => {\n      if(!doc) {\n        return;\n      }\n      \n      const sound = this.getAnimatedEmojiSoundDocument(emoji);\n      return Promise.all([\n        this.apiFileManager.downloadMedia({media: doc}),\n        sound ? this.apiFileManager.downloadMedia({media: sound}) : undefined\n      ]).then(() => {\n        return {doc, sound};\n      });\n    });\n  }\n  \n  public saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: DocId) {\n    //console.log('stickers save set', res);w\n\n    const newSet: MessagesStickerSet = {\n      _: 'messages.stickerSet',\n      set: res.set,\n      packs: res.packs,\n      documents: res.documents as Document[]\n    };\n    \n    let stickerSet = this.storage.getFromCache(id);\n    if(stickerSet) {\n      Object.assign(stickerSet, newSet);\n    } else {\n      stickerSet = this.storage.setToCache(id, newSet);\n    }\n\n    this.saveStickers(res.documents);\n    \n    //console.log('stickers wrote', this.stickerSets);\n    const needSave = stickerSet.set.installed_date || LOCAL_IDS_SET.has(id as any);\n    stickerSet.refreshTime = Date.now();\n    this.storage.set({[id]: stickerSet}, !needSave);\n  }\n\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet) {\n    const thumb = stickerSet.thumbs.find((thumb) => thumb._ === 'photoSize') as PhotoSize.photoSize;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: InputFileLocation.inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      thumb_version: stickerSet.thumb_version\n    };\n\n    return {dcId, location: input, size: thumb.size, mimeType: isAnimated ? 'application/x-tgsticker' : 'image/webp'};\n  }\n\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\n    const thumb = stickerSet.thumb;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      volume_id: thumb.location.volume_id,\n      local_id: thumb.location.local_id\n    };\n\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\n    return url;\n\n    //return promise;\n  } */\n\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\n    if(set.id === EMOJI_SET_LOCAL_ID) {\n      return {\n        _: 'inputStickerSetAnimatedEmoji'\n      };\n    } else if(set.id === EMOJI_ANIMATIONS_SET_LOCAL_ID) {\n      return {\n        _: 'inputStickerSetAnimatedEmojiAnimations'\n      };\n    } else if(!set.access_hash) {\n      return {\n        _: 'inputStickerSetShortName',\n        short_name: '' + set.id\n      };\n    } else {\n      return {\n        _: 'inputStickerSetID',\n        id: set.id,\n        access_hash: set.access_hash\n      };\n    }\n  }\n\n  public async getFeaturedStickers() {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getFeaturedStickers',\n      processResult: (res) => {\n        assumeType<MessagesFeaturedStickers.messagesFeaturedStickers>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    return res.sets;\n  }\n\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\n    if(set.installed_date) {\n      const res = await this.apiManager.invokeApi('messages.uninstallStickerSet', {\n        stickerset: this.getStickerSetInput(set)\n      });\n\n      if(res) {\n        delete set.installed_date;\n        this.rootScope.dispatchEvent('stickers_deleted', set);\n        this.storage.delete(set.id, true);\n        return true;\n      }\n    } else {\n      const res = await this.apiManager.invokeApi('messages.installStickerSet', {\n        stickerset: this.getStickerSetInput(set),\n        archived: false\n      });\n\n      if(res) {\n        set.installed_date = Date.now() / 1000 | 0;\n        this.rootScope.dispatchEvent('stickers_installed', set);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public async searchStickerSets(query: string, excludeFeatured = true) {\n    const flags = excludeFeatured ? 1 : 0;\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.searchStickerSets', \n      params: {\n        flags,\n        exclude_featured: excludeFeatured || undefined,\n        q: query\n      },\n      processResult: (res) => {\n        assumeType<MessagesFoundStickerSets.messagesFoundStickerSets>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    const foundSaved: StickerSetCovered[] = [];\n    const cache = this.storage.getCache();\n    for(let id in cache) {\n      const {set} = cache[id];\n\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find((c) => c.set.id === set.id)) {\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\n      }\n    }\n\n    return res.sets.concat(foundSaved);\n  }\n\n  public getAllStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getAllStickers', \n      processResult: (allStickers) => {\n        assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\n\n        forEachReverse(allStickers.sets, (stickerSet, idx, arr) => {\n          if(stickerSet.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        return allStickers;\n      }\n    });\n  }\n\n  public preloadStickerSets() {\n    return this.getAllStickers().then((allStickers) => {\n      return Promise.all((allStickers as MessagesAllStickers.messagesAllStickers).sets.map((set) => this.getStickerSet(set, {useCache: true})));\n    });\n  }\n\n  // TODO: detect \"🤷\" by \"🤷‍♂️\"\n  public getStickersByEmoticon(emoticon: string, includeOurStickers = true) {\n    emoticon = fixEmoji(emoticon);\n    if(this.getStickersByEmoticonsPromises[emoticon]) return this.getStickersByEmoticonsPromises[emoticon];\n\n    return this.getStickersByEmoticonsPromises[emoticon] = Promise.all([\n      this.apiManager.invokeApiHashable({\n        method: 'messages.getStickers', \n        params: {\n          emoticon\n        },\n        processResult: (stickers) => stickers\n      }),\n      includeOurStickers ? this.preloadStickerSets() : [],\n      includeOurStickers ? this.getRecentStickers() : undefined\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\n      const foundStickers = (messagesStickers as MessagesStickers.messagesStickers).stickers.map((sticker) => this.appDocsManager.saveDoc(sticker));\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\n\n      //console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\n\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\n        for(const pack of packs) {\n          const packEmoticon = fixEmoji(pack.emoticon);\n          if(packEmoticon.includes(emoticon)) {\n            for(const docId of pack.documents) {\n              const doc = this.appDocsManager.getDoc(docId);\n              (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\n            }\n          }\n        }\n      };\n\n      if(recentStickers) {\n        iteratePacks(recentStickers.packs);\n        const stickers = recentStickers.stickers;\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          s.sort((a, b) => stickers.indexOf(a) - stickers.indexOf(b));\n        });\n      }\n\n      for(const set of installedSets) {\n        iteratePacks(set.packs);\n      }\n\n      /* const entities = parseEntities(emoticon);\n      if(entities.length === 1) {\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          forEachReverse(s, (doc, idx) => {\n            const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n            if(docEmoticon !== emoticon) {\n              s.splice(idx, 1);\n            }\n          });\n        });\n      } */\n\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter((doc) => !doc.animated) */;\n\n      forEachReverse(stickers, (sticker, idx, arr) => {\n        if(sticker.sticker === 3 && !getEnvironment().IS_WEBM_SUPPORTED) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      return stickers;\n    });\n  }\n\n  public pushRecentSticker(doc: MyDocument) {\n    const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n    for(const emoticon in this.getStickersByEmoticonsPromises) {\n      const promise = this.getStickersByEmoticonsPromises[emoticon];\n      promise.then((stickers) => {\n        const _doc = findAndSplice(stickers, _doc => _doc.id === doc.id);\n        if(_doc) {\n          stickers.unshift(_doc);\n        } else if(emoticon.includes(docEmoticon)) {\n          stickers.unshift(doc);\n        }\n      });\n    }\n  }\n}\n","export default function fixBase64String(str: string, toUrl: boolean) {\n  if(toUrl) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n  } else {\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function cleanUsername(username: string) {\r\n  return username && username.toLowerCase() || '';\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport filterUnique from \"../../helpers/array/filterUnique\";\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\nimport deferredPromise, { CancellablePromise } from \"../../helpers/cancellablePromise\";\nimport cleanSearchText from \"../../helpers/cleanSearchText\";\nimport cleanUsername from \"../../helpers/cleanUsername\";\nimport tsNow from \"../../helpers/tsNow\";\nimport isObject from \"../../helpers/object/isObject\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport { isRestricted } from \"../../helpers/restrictions\";\nimport { Chat, ContactsResolvedPeer, InputContact, InputGeoPoint, InputMedia, InputPeer, InputUser, User as MTUser, UserProfilePhoto, UserStatus } from \"../../layer\";\nimport parseEntities from \"../richTextProcessor/parseEntities\";\nimport wrapUrl from \"../richTextProcessor/wrapUrl\";\nimport SearchIndex from \"../searchIndex\";\nimport { AppManager } from \"./manager\";\nimport getPeerId from \"./utils/peers/getPeerId\";\nimport canSendToUser from \"./utils/users/canSendToUser\";\nimport { AppStoragesManager } from \"./appStoragesManager\";\n\nexport type User = MTUser.user;\nexport type TopPeerType = 'correspondents' | 'bots_inline';\nexport type MyTopPeer = {id: PeerId, rating: number};\n\nexport class AppUsersManager extends AppManager {\n  private storage: AppStoragesManager['storages']['users'];\n  \n  private users: {[userId: UserId]: User};\n  private usernames: {[username: string]: UserId};\n  private contactsIndex: SearchIndex<UserId>;\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\n  private contactsList: Set<UserId>;\n  private updatedContactsList: boolean;\n  \n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\n\n  protected after() {\n    this.clear(true);\n\n    setInterval(this.updateUsersStatuses, 60000);\n\n    this.rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateUserStatus: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          user.status = update.status;\n          if(user.status) {\n            if('expires' in user.status) {\n              user.status.expires -= this.timeManager.getServerTimeOffset();\n            }\n\n            if('was_online' in user.status) {\n              user.status.was_online -= this.timeManager.getServerTimeOffset();\n            }\n          }\n\n          //user.sortStatus = this.getUserStatusForSort(user.status);\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.setUserToStateIfNeeded(user);\n        } //////else console.warn('No user by id:', userId);\n      },\n\n      updateUserPhoto: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto)?.photo_id) {\n            return;\n          }\n\n          this.forceUserOnline(userId, update.date);\n\n          if(update.photo._ === 'userProfilePhotoEmpty') {\n            delete user.photo;\n          } else {\n            user.photo = safeReplaceObject(user.photo, update.photo);\n          }\n\n          this.setUserToStateIfNeeded(user);\n\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.rootScope.dispatchEvent('avatar_update', userId.toPeerId());\n        } else console.warn('No user by id:', userId);\n      },\n\n      updateUserName: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n          \n          this.saveApiUser({\n            ...user, \n            first_name: update.first_name,\n            last_name: update.last_name,\n            username: update.username\n          }, true);\n        }\n      }\n    });\n\n    /* case 'updateContactLink':\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\n    break; */\n\n    this.rootScope.addEventListener('language_change', (e) => {\n      const userId = this.getSelf().id;\n      this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('users')\n    ]).then(([state, {results: users, storage}]) => {\n      this.storage = storage;\n      \n      if(users.length) {\n        for(let i = 0, length = users.length; i < length; ++i) {\n          const user = users[i];\n          if(user) {\n            this.users[user.id] = user;\n            this.setUserNameToCache(user);\n\n            if(state.contactsListCachedTime && (user.pFlags.contact || user.pFlags.mutual_contact)) {\n              this.pushContact(user.id);\n\n              if(!this.contactsFillPromise) {\n                this.contactsFillPromise = deferredPromise();\n                this.contactsFillPromise.resolve(this.contactsList);\n              }\n            }\n          }\n        }\n      }\n\n      // const contactsList = state.contactsList;\n      // if(Array.isArray(contactsList)) {\n      //   contactsList.forEach((userId) => {\n      //     this.pushContact(userId);\n      //   });\n\n      //   if(contactsList.length) {\n      //     this.contactsFillPromise = deferredPromise();\n      //     this.contactsFillPromise.resolve(this.contactsList);\n      //   }\n      // }\n\n      const recentSearch = state.recentSearch || [];\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\n        this.peersStorage.requestPeer(recentSearch[i], 'recentSearch');\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n        \n        const userId = peerId.toUserId();\n        if(!this.storage.getFromCache(userId)) {\n          this.storage.set({\n            [userId]: this.getUser(userId)\n          });\n        }\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(this.storage.getFromCache(userId)) {\n          this.storage.delete(userId);\n        }\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const userId in this.users) {\n        // const userId = +userId;\n        if(!userId) continue;\n        const peerId = userId.toPeerId();\n        if(!this.peersStorage.isPeerNeeded(peerId)) {\n          const user = this.users[userId];\n          if(user.username) {\n            delete this.usernames[cleanUsername(user.username)];\n          }\n\n          this.storage.delete(userId);\n          delete this.users[userId];\n        }\n      }\n    } else {\n      this.users = {};\n      this.usernames = {};\n    }\n    \n    this.getTopPeersPromises = {};\n    this.contactsIndex = this.createSearchIndex();\n    this.contactsFillPromise = undefined;\n    this.contactsList = new Set();\n    this.updatedContactsList = false;\n  };\n\n  public get userId() {\n    return this.rootScope.myId.toUserId();\n  }\n\n  private onContactsModified(fromServer?: boolean) {\n    // const contactsList = [...this.contactsList];\n    // this.appStateManager.pushToState('contactsList', contactsList);\n\n    if(fromServer) {\n      this.appStateManager.pushToState('contactsListCachedTime', tsNow(true));\n    }\n  }\n\n  public pushRecentSearch(peerId: PeerId) {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      if(recentSearch[0] !== peerId) {\n        indexOfAndSplice(recentSearch, peerId);\n        recentSearch.unshift(peerId);\n        if(recentSearch.length > 20) {\n          recentSearch.length = 20;\n        }\n\n        this.appStateManager.pushToState('recentSearch', recentSearch);\n        for(const peerId of recentSearch) {\n          this.peersStorage.requestPeer(peerId, 'recentSearch');\n        }\n      }\n    });\n  }\n\n  public clearRecentSearch() {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      for(const peerId of recentSearch) {\n        this.peersStorage.releasePeer(peerId, 'recentSearch');\n      }\n\n      recentSearch.length = 0;\n      this.appStateManager.pushToState('recentSearch', recentSearch);\n    });\n  }\n\n  public fillContacts() {\n    if(this.contactsFillPromise && this.updatedContactsList) {\n      return {\n        cached: this.contactsFillPromise.isFulfilled,\n        promise: this.contactsFillPromise\n      };\n    }\n\n    this.updatedContactsList = true;\n\n    const promise = deferredPromise<Set<UserId>>();\n    this.apiManager.invokeApi('contacts.getContacts').then((result) => {\n      if(result._ === 'contacts.contacts') {\n        this.contactsList.clear();\n      \n        this.saveApiUsers(result.users);\n\n        result.contacts.forEach((contact) => {\n          this.pushContact(contact.user_id);\n        });\n\n        this.onContactsModified(true);\n\n        this.contactsFillPromise = promise;\n      }\n\n      promise.resolve(this.contactsList);\n    }, () => {\n      this.updatedContactsList = false;\n    });\n\n    return {\n      cached: this.contactsFillPromise?.isFulfilled,\n      promise: this.contactsFillPromise || (this.contactsFillPromise = promise)\n    };\n  }\n\n  public resolveUsername(username: string): Promise<Chat | User> | Chat | User {\n    if(username[0] === '@') {\n      username = username.slice(1);\n    }\n\n    username = username.toLowerCase();\n    const userId = this.usernames[username];\n    if(userId) {\n      return this.users[userId];\n    }\n\n    return this.apiManager.invokeApi('contacts.resolveUsername', {username}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer);\n    });\n  }\n\n  private processResolvedPeer(resolvedPeer: ContactsResolvedPeer.contactsResolvedPeer) {\n    this.saveApiUsers(resolvedPeer.users);\n    this.appChatsManager.saveApiChats(resolvedPeer.chats);\n\n    return this.appPeersManager.getPeer(getPeerId(resolvedPeer.peer)) as Chat | User;\n  }\n\n  public resolvePhone(phone: string) {\n    return this.apiManager.invokeApi('contacts.resolvePhone', {phone}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer) as User;\n    });\n  }\n\n  private pushContact(id: UserId) {\n    this.contactsList.add(id);\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\n    this.peersStorage.requestPeer(id.toPeerId(), 'contact');\n  }\n\n  private popContact(id: UserId) {\n    this.contactsList.delete(id);\n    this.contactsIndex.indexObject(id, ''); // delete search index\n    this.peersStorage.releasePeer(id.toPeerId(), 'contact');\n  }\n\n  public getUserSearchText(id: UserId) {\n    const user = this.users[id];\n    if(!user) {\n      return '';\n    }\n\n    const arr: string[] = [\n      user.first_name,\n      user.last_name,\n      user.phone,\n      user.username,\n      // user.pFlags.self ? I18n.format('SavedMessages', true) : '',\n      user.pFlags.self ? 'Saved Messages' : ''\n    ];\n\n    return arr.filter(Boolean).join(' ');\n  }\n\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' = 'name') {\n    return this.fillContacts().promise.then((_contactsList) => {\n      let contactsList = [..._contactsList];\n      if(query) {\n        const results = this.contactsIndex.search(query);\n        const filteredContactsList = [...contactsList].filter((id) => results.has(id));\n\n        contactsList = filteredContactsList;\n      }\n\n      if(sortBy === 'name') {\n        contactsList.sort((userId1, userId2) => {\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\n          return sortName1.localeCompare(sortName2);\n        });\n      } else if(sortBy === 'online') {\n        contactsList.sort((userId1, userId2) => {\n          const status1 = this.getUserStatusForSort(this.getUser(userId1).status);\n          const status2 = this.getUserStatusForSort(this.getUser(userId2).status);\n          return status2 - status1;\n        });\n      }\n\n      const myUserId = this.userId;\n      indexOfAndSplice(contactsList, myUserId);\n      if(includeSaved) {\n        if(this.testSelfSearch(query)) {\n          contactsList.unshift(myUserId);\n        }\n      }\n\n      return contactsList;\n    });\n  }\n\n  public getContactsPeerIds(\n    query?: Parameters<AppUsersManager['getContacts']>[0], \n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1], \n    sortBy?: Parameters<AppUsersManager['getContacts']>[2]\n  ) {\n    return this.getContacts(query, includeSaved, sortBy).then((userIds) => {\n      return userIds.map((userId) => userId.toPeerId(false));\n    });\n  }\n\n  public toggleBlock(peerId: PeerId, block: boolean) {\n    return this.apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\n      id: this.appPeersManager.getInputPeerById(peerId)\n    }).then((value) => {\n      if(value) {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updatePeerBlocked',\n          peer_id: this.appPeersManager.getOutputPeer(peerId),\n          blocked: block\n        });\n      }\n\n      return value;\n    });\n  }\n\n  public testSelfSearch(query: string) {\n    const user = this.getSelf();\n    const index = this.createSearchIndex();\n    index.indexObject(user.id, this.getUserSearchText(user.id));\n    return index.search(query).has(user.id);\n  }\n\n  private createSearchIndex() {\n    return new SearchIndex<UserId>({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n  }\n\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\n    if((apiUsers as any).saved) return;\n    (apiUsers as any).saved = true;\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\n  }\n\n  private setUserNameToCache(user: MTUser.user, oldUser?: MTUser.user) {\n    if(!oldUser || oldUser.username !== user.username) {\n      if(oldUser?.username) {\n        const oldSearchUsername = cleanUsername(oldUser.username);\n        delete this.usernames[oldSearchUsername];\n      }\n\n      if(user.username) {\n        const searchUsername = cleanUsername(user.username);\n        this.usernames[searchUsername] = user.id;\n      }\n    }\n  }\n\n  public saveApiUser(user: MTUser, override?: boolean) {\n    if(user._ === 'userEmpty') return;\n\n    const userId = user.id;\n    const oldUser = this.users[userId];\n\n    // ! commented block can affect performance !\n    // if(oldUser && !override) {\n    //   console.log('saveApiUser same');\n    //   return;\n    // }\n\n    if(user.pFlags === undefined) {\n      user.pFlags = {};\n    }\n\n    if(user.pFlags.min && oldUser !== undefined) {\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\n\n    this.setUserNameToCache(user, oldUser);\n\n    if(!oldUser \n      || oldUser.sortName === undefined \n      || oldUser.first_name !== user.first_name \n      || oldUser.last_name !== user.last_name) {\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);\n    } else {\n      user.sortName = oldUser.sortName;\n    }\n\n    if(user.status) {\n      if((user.status as UserStatus.userStatusOnline).expires) {\n        (user.status as UserStatus.userStatusOnline).expires -= this.timeManager.getServerTimeOffset();\n      }\n\n      if((user.status as UserStatus.userStatusOffline).was_online) {\n        (user.status as UserStatus.userStatusOffline).was_online -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    //user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\n\n    let changedPhoto = false, changedTitle = false;\n    if(oldUser === undefined) {\n      this.users[userId] = user;\n    } else {\n      if(user.first_name !== oldUser.first_name \n        || user.last_name !== oldUser.last_name \n        || user.username !== oldUser.username) {\n        changedTitle = true;\n      }\n\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      if(oldPhotoId !== newPhotoId) {\n        changedPhoto = true;\n      }\n\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\n        \n      } */\n\n      const wasContact = !!oldUser.pFlags.contact;\n      const newContact = !!user.pFlags.contact;\n\n      safeReplaceObject(oldUser, user);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      if(wasContact !== newContact) {\n        this.onContactUpdated(userId, newContact, wasContact);\n      }\n    }\n\n    if(changedPhoto) {\n      this.rootScope.dispatchEvent('avatar_update', user.id.toPeerId());\n    }\n\n    if(changedTitle) {\n      this.rootScope.dispatchEvent('peer_title_edit', user.id.toPeerId());\n    }\n\n    this.setUserToStateIfNeeded(user);\n  }\n\n  private setUserToStateIfNeeded(user: User) {\n    if(this.peersStorage.isPeerNeeded(user.id.toPeerId())) {\n      this.storage.set({\n        [user.id]: user\n      });\n    }\n  }\n\n  public isUserOnlineVisible(id: UserId) {\n    return this.getUserStatusForSort(id) > 3;\n  }\n\n  public getUserStatusForSort(status: User['status'] | UserId) {\n    if(typeof(status) !== 'object') {\n      status = this.getUser(status).status;\n    }\n\n    if(status) {\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\n      if(expires) {\n        return expires;\n      }\n\n      /* const timeNow = tsNow(true);\n      switch(status._) {\n        case 'userStatusRecently':\n          return timeNow - 86400 * 3;\n        case 'userStatusLastWeek':\n          return timeNow - 86400 * 7;\n        case 'userStatusLastMonth':\n          return timeNow - 86400 * 30;\n      } */\n      switch(status._) {\n        case 'userStatusRecently':\n          return 3;\n        case 'userStatusLastWeek':\n          return 2;\n        case 'userStatusLastMonth':\n          return 1;\n      }\n    }\n\n    return 0;\n  }\n\n  public getUser(id: User | UserId) {\n    if(isObject<User>(id)) {\n      return id;\n    }\n\n    return this.users[id] || {_: 'userEmpty', id, pFlags: {deleted: true}, access_hash: ''} as any as User;\n  }\n\n  public getSelf() {\n    return this.getUser(this.userId);\n  }\n\n  public isBot(id: UserId) {\n    return this.users[id] && !!this.users[id].pFlags.bot;\n  }\n\n  public isContact(id: UserId) {\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\n  }\n  \n  public isRegularUser(id: UserId) {\n    const user = this.users[id];\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\n  }\n\n  public isNonContactUser(id: UserId) {\n    return this.isRegularUser(id) && !this.isContact(id) && id !== this.userId;\n  }\n\n  public hasUser(id: UserId, allowMin?: boolean) {\n    const user = this.users[id];\n    return isObject(user) && (allowMin || !user.pFlags.min);\n  }\n\n  public getUserPhoto(id: UserId) {\n    const user = this.getUser(id);\n\n    return user && user.photo || {\n      _: 'userProfilePhotoEmpty'\n    };\n  }\n\n  public getUserString(id: UserId) {\n    const user = this.getUser(id);\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\n  }\n\n  public getUserInput(id: UserId): InputUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputUserSelf'};\n    }\n\n    return {\n      _: 'inputUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputPeerSelf'};\n    }\n\n    return {\n      _: 'inputPeerUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\n    const user = this.getUser(id);\n\n    return {\n      _: 'inputMediaContact',\n      first_name: user.first_name,\n      last_name: user.last_name,\n      phone_number: user.phone,\n      vcard: '',\n      user_id: id\n    };\n  }\n\n  private updateUsersStatuses = () => {\n    const timestampNow = tsNow(true);\n    for(const i in this.users) {\n      const user = this.users[i];\n      this.updateUserStatus(user, timestampNow);\n    }\n  };\n\n  private updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\n    if(user.status &&\n      user.status._ === 'userStatusOnline' &&\n      user.status.expires < timestampNow) {\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\n      this.rootScope.dispatchEvent('user_update', user.id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\n    if(this.isBot(id)) {\n      return;\n    }\n\n    const timestamp = tsNow(true);\n    const onlineTimeFor = 60;\n    if(eventTimestamp) {\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\n        return;\n      }\n    } else if(this.apiUpdatesManager.updatesState.syncLoading) {\n      return;\n    }\n\n    const user = this.getUser(id);\n    if(user?.status &&\n      user.status._ !== 'userStatusOnline' &&\n      user.status._ !== 'userStatusEmpty' &&\n      !user.pFlags.support &&\n      !user.pFlags.deleted) {\n\n      user.status = {\n        _: 'userStatusOnline',\n        expires: timestamp + onlineTimeFor\n      };\n      \n      //user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public importContact(first_name: string, last_name: string, phone: string) {\n    return this.importContacts([{\n      first_name,\n      last_name,\n      phones: [phone]\n    }]).then((userIds) => {\n      if(!userIds.length) {\n        const error = new Error();\n        (error as any).type = 'NO_USER';\n        throw error;\n      }\n\n      return userIds[0];\n    });\n  }\n\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\n    const inputContacts: InputContact[] = [];\n\n    for(let i = 0; i < contacts.length; ++i) {\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\n        inputContacts.push({\n          _: 'inputPhoneContact',\n          client_id: (i << 16 | j).toString(10),\n          phone: contacts[i].phones[j],\n          first_name: contacts[i].first_name,\n          last_name: contacts[i].last_name\n        });\n      }\n    }\n\n    return this.apiManager.invokeApi('contacts.importContacts', {\n      contacts: inputContacts\n    }).then((importedContactsResult) => {\n      this.saveApiUsers(importedContactsResult.users);\n\n      const userIds = importedContactsResult.imported.map((importedContact) => {\n        this.onContactUpdated(importedContact.user_id, true);\n        return importedContact.user_id;\n      });\n\n      return userIds;\n    });\n  }\n\n  public getTopPeers(type: TopPeerType) {\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\n\n    return this.getTopPeersPromises[type] = this.appStateManager.getState().then((state) => {\n      const cached = state.topPeersCache[type];\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) {\n        return cached.peers;\n      }\n\n      return this.apiManager.invokeApi('contacts.getTopPeers', {\n        [type]: true,\n        offset: 0,\n        limit: 15,\n        hash: '0'\n      }).then((result) => {\n        let topPeers: MyTopPeer[] = [];\n        if(result._ === 'contacts.topPeers') {\n          //console.log(result);\n          this.saveApiUsers(result.users);\n          this.appChatsManager.saveApiChats(result.chats);\n\n          if(result.categories.length) {\n            topPeers = result.categories[0].peers.map((topPeer) => {\n              const peerId = getPeerId(topPeer.peer);\n              this.peersStorage.requestPeer(peerId, 'topPeer');\n              return {id: peerId, rating: topPeer.rating};\n            });\n          }\n        }\n  \n        state.topPeersCache[type] = {\n          peers: topPeers,\n          cachedTime: Date.now()\n        };\n        this.appStateManager.pushToState('topPeersCache', state.topPeersCache);\n  \n        return topPeers;\n      });\n    });\n  }\n\n  public getBlocked(offset = 0, limit = 0) {\n    return this.apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then((contactsBlocked) => {\n      this.saveApiUsers(contactsBlocked.users);\n      this.appChatsManager.saveApiChats(contactsBlocked.chats);\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\n\n      const peerIds: PeerId[] = contactsBlocked.users.map((u) => u.id.toPeerId()).concat(contactsBlocked.chats.map((c) => c.id.toPeerId(true)));\n\n      return {count, peerIds};\n    });\n  }\n\n  public getLocated(\n    lat: number, \n    long: number,\n    accuracy_radius: number,\n    background: boolean = false,\n    self_expires: number = 0\n  ) {\n    const geo_point: InputGeoPoint = {\n      _: 'inputGeoPoint',\n      lat,\n      long,\n      accuracy_radius\n    };\n\n    return this.apiManager.invokeApi('contacts.getLocated', {\n      geo_point, \n      background\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      return updates;\n    });\n  }\n\n  /* public searchContacts(query: string, limit = 20) {\n    return Promise.all([\n      this.getContacts(query),\n      apiManager.invokeApi('contacts.search', {\n        q: query,\n        limit\n      })\n    ]).then((results) => {\n      const [myContacts, peers] = results;\n\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      // * contacts.search returns duplicates in my_results\n      const myResults = new Set(myContacts.concat(peers.my_results.map((p) => appPeersManager.getPeerID(p))));\n\n      const out = {\n        my_results: [...myResults].slice(0, limit),\n        results: peers.results.map((p) => appPeersManager.getPeerID(p))\n      };\n\n      return out;\n    });\n  } */\n  public searchContacts(query: string, limit = 20) {\n    // handle 't.me/username' as 'username'\n    const entities = parseEntities(query);\n    if(entities.length && entities[0].length === query.trim().length && entities[0]._ === 'messageEntityUrl') {\n      try {\n        const url = new URL(wrapUrl(query).url);\n        const path = url.pathname.slice(1);\n        if(path) {\n          query = path;\n        }\n      } catch(err) {}\n    }\n\n    return this.apiManager.invokeApiCacheable('contacts.search', {\n      q: query,\n      limit\n    }, {cacheSeconds: 60}).then((peers) => {\n      this.saveApiUsers(peers.users);\n      this.appChatsManager.saveApiChats(peers.chats);\n\n      const out = {\n        my_results: filterUnique(peers.my_results.map((p) => getPeerId(p))), // ! contacts.search returns duplicates in my_results\n        results: peers.results.map((p) => getPeerId(p))\n      };\n\n      return out;\n    });\n  }\n\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\n    if(isContact !== curIsContact) {\n      if(isContact) {\n        this.pushContact(userId);\n      } else {\n        this.popContact(userId);\n      }\n\n      this.onContactsModified();\n\n      this.rootScope.dispatchEvent('contacts_update', userId);\n    }\n  }\n\n  public updateUsername(username: string) {\n    return this.apiManager.invokeApi('account.updateUsername', {\n      username\n    }).then((user) => {\n      this.saveApiUser(user);\n    });\n  }\n\n  public setUserStatus(userId: UserId, offline: boolean) {\n    if(this.isBot(userId)) {\n      return;\n    }\n\n    const user = this.users[userId];\n    if(user) {\n      const status: UserStatus = offline ? {\n        _: 'userStatusOffline',\n        was_online: tsNow(true)\n      } : {\n        _: 'userStatusOnline',\n        expires: tsNow(true) + 50\n      };\n\n      user.status = status;\n      //user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public updateMyOnlineStatus(offline: boolean) {\n    this.setUserStatus(this.getSelf().id, offline);\n    return this.apiManager.invokeApiSingle('account.updateStatus', {offline});\n  }\n\n  public addContact(userId: UserId, first_name: string, last_name: string, phone: string, showPhone?: true) {\n    /* if(!userId) {\n      return this.importContacts([{\n        first_name,\n        last_name,\n        phones: [phone]\n      }]);\n    } */\n\n    return this.apiManager.invokeApi('contacts.addContact', {\n      id: this.getUserInput(userId),\n      first_name,\n      last_name,\n      phone,\n      add_phone_privacy_exception: showPhone\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      this.onContactUpdated(userId, true);\n    });\n  }\n\n  public deleteContacts(userIds: UserId[]) {\n    return this.apiManager.invokeApi('contacts.deleteContacts', {\n      id: userIds.map((userId) => this.getUserInput(userId))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      userIds.forEach((userId) => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  }\n\n  public isRestricted(userId: UserId) {\n    const user: MTUser.user = this.getUser(userId);\n    const restrictionReasons = user.restriction_reason;\n\n    return !!(user.pFlags.restricted && restrictionReasons && isRestricted(restrictionReasons));\n  }\n\n  public checkUsername(username: string) {\n    return this.apiManager.invokeApi('account.checkUsername', {username});\n  }\n\n  public canSendToUser(userId: UserId) {\n    return canSendToUser(this.getUser(userId));\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\r\nimport { WebPage } from \"../../layer\";\r\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\r\nimport { AppManager } from \"./manager\";\r\n\r\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\r\n\r\ntype WebPageMessageKey = `${PeerId}_${number}`;\r\n\r\nexport class AppWebPagesManager extends AppManager {\r\n  private webpages: {\r\n    [webPageId: string]: WebPage\r\n  } = {};\r\n  private pendingWebPages: {\r\n    [webPageId: string]: Set<WebPageMessageKey>\r\n  } = {};\r\n  \r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateWebPage: (update) => {\r\n        this.saveWebPage(update.webpage);\r\n      }\r\n    });\r\n  }\r\n  \r\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\r\n    if(apiWebPage._ === 'webPageNotModified') return;\r\n    const {id} = apiWebPage;\r\n\r\n    const oldWebPage = this.webpages[id];\r\n    const isUpdated = oldWebPage && \r\n      oldWebPage._ === apiWebPage._ && \r\n      (oldWebPage as WebPage.webPage).hash === (oldWebPage as WebPage.webPage).hash;\r\n\r\n    if(apiWebPage._ === 'webPage') {\r\n      if(apiWebPage.photo?._ === 'photo') {\r\n        apiWebPage.photo = this.appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\r\n      } else {\r\n        delete apiWebPage.photo;\r\n      }\r\n  \r\n      if(apiWebPage.document?._ === 'document') {\r\n        apiWebPage.document = this.appDocsManager.saveDoc(apiWebPage.document, mediaContext);\r\n      } else {\r\n        if(apiWebPage.type === 'document') {\r\n          delete apiWebPage.type;\r\n        }\r\n  \r\n        delete apiWebPage.document;\r\n      }\r\n\r\n      const siteName = apiWebPage.site_name;\r\n      let shortTitle = apiWebPage.title || apiWebPage.author || siteName || '';\r\n      if(siteName && shortTitle === siteName) {\r\n        delete apiWebPage.site_name;\r\n      }\r\n\r\n      // delete apiWebPage.description\r\n\r\n      if(!photoTypeSet.has(apiWebPage.type) &&\r\n        !apiWebPage.description &&\r\n        apiWebPage.photo) {\r\n        apiWebPage.type = 'photo';\r\n      }\r\n    }\r\n    \r\n    let pendingSet = this.pendingWebPages[id];\r\n    if(messageKey) {\r\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\r\n      pendingSet.add(messageKey);\r\n    }\r\n    \r\n    if(oldWebPage === undefined) {\r\n      this.webpages[id] = apiWebPage;\r\n    } else {\r\n      safeReplaceObject(oldWebPage, apiWebPage);\r\n    }\r\n    \r\n    if(!messageKey && pendingSet !== undefined && isUpdated) {\r\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\r\n      pendingSet.forEach((value) => {\r\n        const [peerId, mid, isScheduled] = value.split('_');\r\n        msgs.push({\r\n          peerId: peerId.toPeerId(), \r\n          mid: +mid, \r\n          isScheduled: !!isScheduled\r\n        });\r\n      });\r\n\r\n      this.rootScope.dispatchEvent('webpage_updated', {\r\n        id,\r\n        msgs\r\n      });\r\n    }\r\n\r\n    return apiWebPage;\r\n  }\r\n\r\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\r\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\r\n  }\r\n\r\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\r\n    const id = (webPage as WebPage.webPage).id;\r\n    if(!id) return;\r\n\r\n    const set = this.pendingWebPages[id];\r\n    if(set && set.has(messageKey)) {\r\n      set.delete(messageKey);\r\n\r\n      if(!set.size) {\r\n        delete this.pendingWebPages[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  public getCachedWebPage(id: WebPage.webPage['id']) {\r\n    return this.webpages[id];\r\n  }\r\n\r\n  public getWebPage(url: string) {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getWebPage',\r\n      processResult: (webPage) => {\r\n        return this.saveWebPage(webPage);\r\n      },\r\n      params: {\r\n        url\r\n      },\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ReferenceBytes } from \"./referenceDatabase\";\r\nimport Modes from \"../../config/modes\";\r\nimport deferredPromise, { CancellablePromise } from \"../../helpers/cancellablePromise\";\r\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\r\nimport { randomLong } from \"../../helpers/random\";\r\nimport { Document, InputFile, InputFileLocation, InputWebFileLocation, Photo, PhotoSize, UploadFile, UploadWebFile } from \"../../layer\";\r\nimport { DcId } from \"../../types\";\r\nimport CacheStorageController from \"../cacheStorage\";\r\nimport fileManager from \"../fileManager\";\r\nimport { logger, LogTypes } from \"../logger\";\r\nimport assumeType from \"../../helpers/assumeType\";\r\nimport ctx from \"../../environment/ctx\";\r\nimport noop from \"../../helpers/noop\";\r\nimport readBlobAsArrayBuffer from \"../../helpers/blob/readBlobAsArrayBuffer\";\r\nimport bytesToHex from \"../../helpers/bytes/bytesToHex\";\r\nimport findAndSplice from \"../../helpers/array/findAndSplice\";\r\nimport fixFirefoxSvg from \"../../helpers/fixFirefoxSvg\";\r\nimport { AppManager } from \"../appManagers/manager\";\r\nimport { getEnvironment } from \"../../environment/utils\";\r\nimport MTProtoMessagePort from \"./mtprotoMessagePort\";\r\nimport getFileNameForUpload from \"../../helpers/getFileNameForUpload\";\r\nimport type { Progress } from \"../appManagers/appDownloadManager\";\r\nimport getDownloadMediaDetails from \"../appManagers/utils/download/getDownloadMediaDetails\";\r\nimport networkStats from \"./networkStats\";\r\nimport pause from \"../../helpers/schedulers/pause\";\r\n\r\ntype Delayed = {\r\n  offset: number, \r\n  writeFilePromise: CancellablePromise<void>, \r\n  writeFileDeferred: CancellablePromise<void>\r\n};\r\n\r\nexport type DownloadOptions = {\r\n  dcId: DcId, \r\n  location: InputFileLocation | InputWebFileLocation, \r\n  size?: number,\r\n  fileName?: string,\r\n  mimeType?: string,\r\n  limitPart?: number,\r\n  queueId?: number,\r\n  onlyCache?: boolean,\r\n  // getFileMethod: Parameters<CacheStorageController['getFile']>[1]\r\n};\r\n\r\nexport type DownloadMediaOptions = {\r\n  media: Photo | Document.document,\r\n  thumb?: PhotoSize,\r\n  queueId?: number,\r\n  onlyCache?: boolean\r\n};\r\n\r\ntype DownloadPromise = CancellablePromise<Blob>;\r\n\r\nexport type MyUploadFile = UploadFile.uploadFile | UploadWebFile.uploadWebFile;\r\n\r\n// export interface RefreshReferenceTask extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n// };\r\n\r\n// export interface RefreshReferenceTaskResponse extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n//   originalPayload: ReferenceBytes\r\n// };\r\n\r\nconst MAX_FILE_SAVE_SIZE = 20 * 1024 * 1024;\r\n\r\nconst REGULAR_DOWNLOAD_DELTA = 36;\r\nconst PREMIUM_DOWNLOAD_DELTA = 72;\r\n\r\nexport class ApiFileManager extends AppManager {\r\n  private cacheStorage = new CacheStorageController('cachedFiles');\r\n\r\n  private downloadPromises: {\r\n    [fileName: string]: DownloadPromise\r\n  } = {};\r\n\r\n  private uploadPromises: {\r\n    [fileName: string]: CancellablePromise<InputFile>\r\n  } = {};\r\n\r\n  private downloadPulls: {\r\n    [dcId: string]: Array<{\r\n      id: number,\r\n      queueId: number,\r\n      cb: () => Promise<MyUploadFile | void>,\r\n      deferred: {\r\n        resolve: (...args: any[]) => void,\r\n        reject: (...args: any[]) => void\r\n      },\r\n      activeDelta: number\r\n    }>\r\n  } = {};\r\n  private downloadActives: {[dcId: string]: number} = {};\r\n\r\n  public refreshReferencePromises: {\r\n    [referenceHex: string]: {\r\n      deferred: CancellablePromise<ReferenceBytes>,\r\n      timeout: number\r\n    }\r\n  } = {};\r\n\r\n  private log: ReturnType<typeof logger> = logger('AFM', LogTypes.Error | LogTypes.Log);\r\n  private tempId = 0;\r\n  private queueId = 0;\r\n  private debug = Modes.debug;\r\n\r\n  protected after() {\r\n    setInterval(() => { // clear old promises\r\n      for(const hex in this.refreshReferencePromises) {\r\n        const {deferred} = this.refreshReferencePromises[hex];\r\n        if(deferred.isFulfilled || deferred.isRejected) {\r\n          delete this.refreshReferencePromises[hex];\r\n        }\r\n      }\r\n    }, 1800e3);\r\n  }\r\n\r\n  private downloadRequest(dcId: 'upload', id: number, cb: () => Promise<void>, activeDelta: number, queueId?: number): Promise<void>;\r\n  private downloadRequest(dcId: number, id: number, cb: () => Promise<MyUploadFile>, activeDelta: number, queueId?: number): Promise<MyUploadFile>;\r\n  private downloadRequest(dcId: number | string, id: number, cb: () => Promise<MyUploadFile | void>, activeDelta: number, queueId: number = 0) {\r\n    if(this.downloadPulls[dcId] === undefined) {\r\n      this.downloadPulls[dcId] = [];\r\n      this.downloadActives[dcId] = 0;\r\n    }\r\n\r\n    const downloadPull = this.downloadPulls[dcId];\r\n\r\n    const promise = new Promise<MyUploadFile | void>((resolve, reject) => {\r\n      downloadPull.push({id, queueId, cb, deferred: {resolve, reject}, activeDelta});\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.downloadCheck(dcId);\r\n    }, 0);\r\n\r\n    return promise;\r\n  }\r\n\r\n  private downloadCheck(dcId: string | number) {\r\n    const downloadPull = this.downloadPulls[dcId];\r\n    const downloadLimit = dcId === 'upload' ? 24 : (this.rootScope.premium ? PREMIUM_DOWNLOAD_DELTA : REGULAR_DOWNLOAD_DELTA);\r\n    //const downloadLimit = Infinity;\r\n\r\n    if(this.downloadActives[dcId] >= downloadLimit || !downloadPull || !downloadPull.length) {\r\n      return false;\r\n    }\r\n\r\n    //const data = downloadPull.shift();\r\n    const data = findAndSplice(downloadPull, d => d.queueId === 0) || findAndSplice(downloadPull, d => d.queueId === this.queueId) || downloadPull.shift();\r\n    const activeDelta = data.activeDelta || 1;\r\n\r\n    this.downloadActives[dcId] += activeDelta;\r\n\r\n    const promise = data.cb();\r\n    const networkPromise = networkStats.waitForChunk(dcId as DcId, activeDelta * 1024 * 128);\r\n    Promise.race([\r\n      promise,\r\n      networkPromise\r\n    ]).then(() => {\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n\r\n      networkPromise.resolve();\r\n    }, (error: Error) => {\r\n      // @ts-ignore\r\n      if(!error || !error.type || (error.type !== 'DOWNLOAD_CANCELED' && error.type !== 'UPLOAD_CANCELED')) {\r\n        this.log.error('downloadCheck error:', error);\r\n      }\r\n\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n      \r\n      networkPromise.reject(error);\r\n    }).finally(() => {\r\n      promise.then(data.deferred.resolve, data.deferred.reject);\r\n    });\r\n  }\r\n\r\n  public setQueueId(queueId: number) {\r\n    //this.log.error('setQueueId', queueId);\r\n    this.queueId = queueId;\r\n  }\r\n\r\n  private getFileStorage() {\r\n    return this.cacheStorage;\r\n  }\r\n\r\n  public cancelDownload(fileName: string) {\r\n    const promises = [this.downloadPromises[fileName], this.uploadPromises[fileName]].filter(Boolean);\r\n    let canceled = false;\r\n    for(let i = 0, length = promises.length; i < length; ++i) {\r\n      const promise = promises[i];\r\n      if(promise && !promise.isRejected && !promise.isFulfilled) {\r\n        promise.cancel();\r\n        canceled = true;\r\n      }\r\n    }\r\n\r\n    return canceled;\r\n  }\r\n\r\n  public requestWebFilePart(dcId: DcId, location: InputWebFileLocation, offset: number, limit: number, id = 0, queueId = 0, checkCancel?: () => void) {\r\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\r\n      checkCancel && checkCancel();\r\n\r\n      return this.apiManager.invokeApi('upload.getWebFile', {\r\n        location,\r\n        offset,\r\n        limit\r\n      }, {\r\n        dcId,\r\n        fileDownload: true\r\n      });\r\n    }, this.getDelta(limit), queueId);\r\n  }\r\n\r\n  public requestFilePart(dcId: DcId, location: InputFileLocation, offset: number, limit: number, id = 0, queueId = 0, checkCancel?: () => void) {\r\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\r\n      checkCancel && checkCancel();\r\n\r\n      const invoke = async(): Promise<MyUploadFile> => {\r\n        checkCancel && checkCancel(); // do not remove async, because checkCancel will throw an error\r\n\r\n        const promise = this.apiManager.invokeApi('upload.getFile', {\r\n          location,\r\n          offset,\r\n          limit\r\n        }, {\r\n          dcId,\r\n          fileDownload: true\r\n        }) as Promise<MyUploadFile>;\r\n\r\n        return promise.catch((err) => {\r\n          if(err.type === 'FILE_REFERENCE_EXPIRED') {\r\n            return this.refreshReference(location).then(invoke);\r\n          }\r\n\r\n          throw err;\r\n        });\r\n      };\r\n\r\n      assumeType<InputFileLocation.inputDocumentFileLocation>(location);\r\n      const reference = location.file_reference;\r\n      if(reference && !location.checkedReference) { // check stream's location because it's new every call\r\n        location.checkedReference = true;\r\n        const hex = bytesToHex(reference);\r\n        if(this.refreshReferencePromises[hex]) {\r\n          return this.refreshReference(location).then(invoke);\r\n        }\r\n      }\r\n\r\n      return invoke();\r\n    }, this.getDelta(limit), queueId);\r\n  }\r\n\r\n  /* private convertBlobToBytes(blob: Blob) {\r\n    return blob.arrayBuffer().then((buffer) => new Uint8Array(buffer));\r\n  } */\r\n\r\n  private getDelta(bytes: number) {\r\n    return bytes / 1024 / 128;\r\n  }\r\n\r\n  private getLimitPart(size: number): number {\r\n    let bytes = 128 * 1024;\r\n\r\n    while((size / bytes) > 2000) {\r\n      bytes *= 2;\r\n    }\r\n    /* if(size < 1e6 || !size) bytes = 512;\r\n    else if(size < 3e6) bytes = 256;\r\n    else bytes = 128; */\r\n\r\n    return bytes;\r\n  }\r\n\r\n  private uncompressTGS = (bytes: Uint8Array, fileName: string) => {\r\n    //this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', bytes.slice().buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private uncompressTGV = (bytes: Uint8Array, fileName: string) => {\r\n    //this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    const buffer = bytes.slice().buffer;\r\n    if(getEnvironment().IS_FIREFOX) {\r\n      return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, true).then((text) => {\r\n        return fixFirefoxSvg(text as string);\r\n      }).then((text) => {\r\n        const textEncoder = new TextEncoder();\r\n        return textEncoder.encode(text);\r\n      });\r\n    }\r\n\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private convertWebp = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertWebp', {fileName, bytes});\r\n  };\r\n\r\n  private convertOpus = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertOpus', {fileName, bytes});\r\n  };\r\n\r\n  private refreshReference(inputFileLocation: InputFileLocation) {\r\n    const reference = (inputFileLocation as InputFileLocation.inputDocumentFileLocation).file_reference;\r\n    const hex = bytesToHex(reference);\r\n\r\n    let r = this.refreshReferencePromises[hex];\r\n    if(!r) {\r\n      const deferred = deferredPromise<ReferenceBytes>();\r\n\r\n      r = this.refreshReferencePromises[hex] = {\r\n        deferred,\r\n        timeout: ctx.setTimeout(() => {\r\n          this.log.error('Didn\\'t refresh the reference:', inputFileLocation);\r\n          deferred.reject('REFERENCE_IS_NOT_REFRESHED');\r\n        }, 60000)\r\n      };\r\n\r\n      deferred.catch(noop).finally(() => {\r\n        clearTimeout(r.timeout);\r\n      });\r\n\r\n      this.referenceDatabase.refreshReference(reference).then(deferred.resolve, deferred.reject);\r\n      // const task = {type: 'refreshReference', payload: reference};\r\n      // notifySomeone(task);\r\n    }\r\n\r\n    // have to replace file_reference in any way, because location can be different everytime if it's stream\r\n    return r.deferred.then((reference) => {\r\n      if(hex === bytesToHex(reference)) {\r\n        throw 'REFERENCE_IS_NOT_REFRESHED';\r\n      }\r\n\r\n      (inputFileLocation as InputFileLocation.inputDocumentFileLocation).file_reference = reference;\r\n    });\r\n  }\r\n\r\n  public isDownloading(fileName: string) {\r\n    return !!this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getDownload(fileName: string) {\r\n    return this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getUpload(fileName: string) {\r\n    return this.uploadPromises[fileName];\r\n  }\r\n\r\n  public download(options: DownloadOptions): DownloadPromise {\r\n    if(!fileManager.isAvailable()) {\r\n      return Promise.reject({type: 'BROWSER_BLOB_NOT_SUPPORTED'});\r\n    }\r\n\r\n    const size = options.size ?? 0;\r\n    const {dcId, location} = options;\r\n\r\n    let process: ApiFileManager['uncompressTGS'] | ApiFileManager['convertWebp'];\r\n\r\n    if(options.mimeType === 'application/x-tgwallpattern') {\r\n      process = this.uncompressTGV;\r\n      options.mimeType = 'image/svg+xml';\r\n    } else if(options.mimeType === 'image/webp' && !getEnvironment().IS_WEBP_SUPPORTED) {\r\n      process = this.convertWebp;\r\n      options.mimeType = 'image/png';\r\n    } else if(options.mimeType === 'application/x-tgsticker') {\r\n      process = this.uncompressTGS;\r\n      options.mimeType = 'application/json';\r\n    } else if(options.mimeType === 'audio/ogg' && !getEnvironment().IS_OPUS_SUPPORTED) {\r\n      process = this.convertOpus;\r\n      options.mimeType = 'audio/wav';\r\n    }\r\n\r\n    const fileName = getFileNameByLocation(location, {fileName: options.fileName});\r\n    const cachedPromise = this.downloadPromises[fileName];\r\n    const fileStorage = this.getFileStorage();\r\n\r\n    this.debug && this.log('downloadFile', fileName, size, location, options.mimeType);\r\n\r\n    /* if(options.queueId) {\r\n      this.log.error('downloadFile queueId:', fileName, options.queueId);\r\n    } */\r\n\r\n    if(cachedPromise) {\r\n      //this.log('downloadFile cachedPromise');\r\n\r\n      if(size) {\r\n        return cachedPromise.then((blob) => {\r\n          if(blob instanceof Blob && blob.size < size) {\r\n            this.debug && this.log('downloadFile need to deleteFile, wrong size:', blob.size, size);\r\n\r\n            return this.delete(fileName).then(() => {\r\n              return this.download(options);\r\n            }).catch(() => {\r\n              return this.download(options);\r\n            });\r\n          } else {\r\n            return blob;\r\n          }\r\n        });\r\n      } else {\r\n        return cachedPromise;\r\n      }\r\n    }\r\n\r\n    const deferred: DownloadPromise = deferredPromise();\r\n    const mimeType = options.mimeType || 'image/jpeg';\r\n\r\n    let error: Error;\r\n    let resolved = false;\r\n    let cacheFileWriter: ReturnType<typeof fileManager['getFakeFileWriter']>;\r\n    let errorHandler = (_error: Error) => {\r\n      error = _error;\r\n      delete this.downloadPromises[fileName];\r\n      deferred.reject(error);\r\n      errorHandler = () => {};\r\n\r\n      if(cacheFileWriter && (!error || error.type !== 'DOWNLOAD_CANCELED')) {\r\n        cacheFileWriter.truncate();\r\n      }\r\n    };\r\n\r\n    const id = this.tempId++;\r\n\r\n    fileStorage.getFile(fileName).then(async(blob: Blob) => {\r\n      //this.log('maybe cached', fileName);\r\n      //throw '';\r\n\r\n      if(blob.size < size) {\r\n        //this.log('downloadFile need to deleteFile 2, wrong size:', blob.size, size);\r\n        if(!options.onlyCache) {\r\n          await this.delete(fileName);\r\n        }\r\n\r\n        throw false;\r\n      }\r\n\r\n      deferred.resolve(blob);\r\n    }).catch((err) => {\r\n      if(options.onlyCache) {\r\n        errorHandler(err);\r\n        return;\r\n      }\r\n\r\n      //this.log('not cached', fileName);\r\n      const limit = options.limitPart || this.getLimitPart(size);\r\n      const fileWriterPromise = fileStorage.getFileWriter(fileName, size || limit, mimeType);\r\n\r\n      fileWriterPromise.then((fileWriter) => {\r\n        cacheFileWriter = fileWriter;\r\n        let offset: number;\r\n        let startOffset = 0;\r\n        let writeFilePromise: CancellablePromise<void> = Promise.resolve(),\r\n          writeFileDeferred: CancellablePromise<void>;\r\n        //const maxRequests = 13107200 / limit; // * 100 Mb speed\r\n        const maxRequests = Infinity;\r\n\r\n        //console.error('maxRequests', maxRequests);\r\n\r\n        const processDownloaded = async(bytes: Uint8Array) => {\r\n          if(process) {\r\n            //const perf = performance.now();\r\n            const processed = await process(bytes, fileName);\r\n            //this.log('downloadFile process downloaded time', performance.now() - perf, mimeType, process);\r\n            return processed;\r\n          }\r\n  \r\n          return bytes;\r\n        };\r\n\r\n        const r = location._ === 'inputWebFileLocation' ? this.requestWebFilePart.bind(this) : this.requestFilePart.bind(this);\r\n\r\n        const delayed: Delayed[] = [];\r\n        offset = startOffset;\r\n        do {\r\n          ////this.log('offset:', startOffset);\r\n          writeFileDeferred = deferredPromise<void>();\r\n          delayed.push({offset, writeFilePromise, writeFileDeferred});\r\n          writeFilePromise = writeFileDeferred;\r\n          offset += limit;\r\n        } while(offset < size);\r\n\r\n        let done = 0;\r\n        const superpuper = async() => {\r\n          //if(!delayed.length) return;\r\n\r\n          const {offset, writeFilePromise, writeFileDeferred} = delayed.shift();\r\n          try {\r\n            checkCancel();\r\n\r\n            // @ts-ignore\r\n            const result = await r(dcId, location as any, offset, limit, id, options.queueId, checkCancel);\r\n\r\n            const bytes = result.bytes;\r\n\r\n            if(delayed.length) {\r\n              superpuper();\r\n            }\r\n\r\n            this.debug && this.log('downloadFile requestFilePart result:', fileName, result);\r\n            const isFinal = (offset + limit) >= size || !bytes.byteLength;\r\n            if(bytes.byteLength) {\r\n              //done += limit;\r\n              done += bytes.byteLength;\r\n\r\n              //if(!isFinal) {\r\n                ////this.log('deferred notify 2:', {done: offset + limit, total: size}, deferred);\r\n                const progress: Progress = {done, offset, total: size, fileName};\r\n                deferred.notify(progress);\r\n              //}\r\n\r\n              await writeFilePromise;\r\n              checkCancel();\r\n\r\n              await fileWriter.write(bytes, offset);\r\n            }\r\n\r\n            if(isFinal && process) {\r\n              const bytes = fileWriter.getParts();\r\n              const processedResult = await processDownloaded(bytes);\r\n              checkCancel();\r\n\r\n              fileWriter.replaceParts(processedResult);\r\n            }\r\n\r\n            writeFileDeferred.resolve();\r\n\r\n            if(isFinal) {\r\n              resolved = true;\r\n\r\n              const realSize = size || bytes.byteLength;\r\n              if(!size) {\r\n                fileWriter.trim(realSize);\r\n              }\r\n\r\n              deferred.resolve(fileWriter.finalize(realSize < MAX_FILE_SAVE_SIZE));\r\n            }\r\n          } catch(err) {\r\n            errorHandler(err as Error);\r\n          }\r\n        };\r\n\r\n        for(let i = 0, length = Math.min(maxRequests, delayed.length); i < length; ++i) {\r\n          superpuper();\r\n        }\r\n      }).catch((err) => {\r\n        if(!['STORAGE_OFFLINE'].includes(err)) {\r\n          this.log.error('saveFile error:', err);\r\n        }\r\n      });\r\n    });\r\n\r\n    const checkCancel = () => {\r\n      if(error) {\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    deferred.cancel = () => {\r\n      if(!error && !resolved) {\r\n        const error = new Error('Canceled');\r\n        error.type = 'DOWNLOAD_CANCELED';\r\n        errorHandler(error);\r\n      }\r\n    };\r\n\r\n    deferred.notify = (progress: Progress) => {\r\n      this.rootScope.dispatchEvent('download_progress', progress);\r\n    };\r\n\r\n    this.downloadPromises[fileName] = deferred;\r\n\r\n    deferred.catch(noop).finally(() => {\r\n      delete this.downloadPromises[fileName];\r\n    });\r\n\r\n    return deferred;\r\n  }\r\n\r\n  public downloadMedia(options: DownloadMediaOptions): DownloadPromise {\r\n    let {media, thumb} = options;\r\n    const isPhoto = media._ === 'photo';\r\n    if(media._ === 'photoEmpty' || (isPhoto && !thumb)) {\r\n      return Promise.reject('preloadPhoto photoEmpty!');\r\n    }\r\n\r\n    // get original instance with correct file_reference instead of using copies\r\n    const isDocument = media._ === 'document';\r\n    if(isDocument) media = this.appDocsManager.getDoc(media.id);\r\n    else if(isPhoto) media = this.appPhotosManager.getPhoto(media.id);\r\n\r\n    const {fileName, downloadOptions} = getDownloadMediaDetails(options);\r\n\r\n    let promise = this.getDownload(fileName);\r\n    if(!promise) {\r\n      promise = this.download(downloadOptions);\r\n      \r\n      if(isDocument && !thumb) {\r\n        this.rootScope.dispatchEvent('document_downloading', media.id);\r\n        promise.catch(noop).finally(() => {\r\n          this.rootScope.dispatchEvent('document_downloaded', media.id);\r\n        });\r\n      }\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public downloadMediaURL(options: DownloadMediaOptions): Promise<string> {\r\n    const {media, thumb} = options;\r\n\r\n    let cacheContext = this.thumbsStorage.getCacheContext(media as any, thumb?.type);\r\n    if((thumb ? (cacheContext.downloaded >= ('size' in thumb ? thumb.size : 0)) : true) && cacheContext.url) {\r\n      return Promise.resolve(cacheContext.url);\r\n    }\r\n\r\n    return this.downloadMedia(options).then((blob) => {\r\n      if(!cacheContext.downloaded || cacheContext.downloaded < blob.size) {\r\n        const url = URL.createObjectURL(blob);\r\n        cacheContext = this.thumbsStorage.setCacheContextURL(media as any, cacheContext.type, url, blob.size);\r\n      }\r\n\r\n      return cacheContext.url;\r\n    });\r\n  }\r\n\r\n  public downloadMediaVoid(options: DownloadMediaOptions) {\r\n    return this.downloadMedia(options).then(noop);\r\n  }\r\n\r\n  private delete(fileName: string) {\r\n    //this.log('will delete file:', fileName);\r\n    delete this.downloadPromises[fileName];\r\n    return this.getFileStorage().delete(fileName);\r\n  }\r\n\r\n  public upload({file, fileName}: {file: Blob | File, fileName?: string}) {\r\n    const fileSize = file.size, \r\n      isBigFile = fileSize >= 10485760;\r\n\r\n    let canceled = false,\r\n      resolved = false,\r\n      doneParts = 0,\r\n      partSize = 262144; // 256 Kb\r\n\r\n    /* if(fileSize > (524288 * 3000)) {\r\n      partSize = 1024 * 1024;\r\n      activeDelta = 8;\r\n    } else  */if(fileSize > 67108864) {\r\n      partSize = 524288;\r\n    } else if(fileSize < 102400) {\r\n      partSize = 32768;\r\n    }\r\n\r\n    fileName ||= getFileNameForUpload(file);\r\n\r\n    const activeDelta = this.getDelta(partSize);\r\n\r\n    const totalParts = Math.ceil(fileSize / partSize);\r\n    const fileId = randomLong();\r\n\r\n    let _part = 0;\r\n\r\n    const resultInputFile: InputFile = {\r\n      _: isBigFile ? 'inputFileBig' : 'inputFile',\r\n      id: fileId as any,\r\n      parts: totalParts,\r\n      name: fileName,\r\n      md5_checksum: ''\r\n    };\r\n\r\n    const deferred = deferredPromise<typeof resultInputFile>();\r\n    if(totalParts > 4000) {\r\n      deferred.reject({type: 'FILE_TOO_BIG'});\r\n      return deferred;\r\n    }\r\n    \r\n    let errorHandler = (error: any) => {\r\n      if(error?.type !== 'UPLOAD_CANCELED') {\r\n        this.log.error('Up Error', error);\r\n      }\r\n\r\n      deferred.reject(error);\r\n      canceled = true;\r\n      errorHandler = () => {};\r\n    };\r\n\r\n    const method = isBigFile ? 'upload.saveBigFilePart' : 'upload.saveFilePart';\r\n\r\n    const id = this.tempId++;\r\n\r\n    /* setInterval(() => {\r\n      console.log(file);\r\n    }, 1e3); */\r\n\r\n    const self = this;\r\n    function* generator() {\r\n      for(let offset = 0; offset < fileSize; offset += partSize) {\r\n        const part = _part++; // 0, 1\r\n        yield self.downloadRequest('upload', id, () => {\r\n          const blob = file.slice(offset, offset + partSize);\r\n\r\n          return readBlobAsArrayBuffer(blob).then((buffer) => {\r\n            if(canceled) {\r\n              throw {type: 'UPLOAD_CANCELED'};\r\n            }\r\n\r\n            self.debug && self.log('Upload file part, isBig:', isBigFile, part, buffer.byteLength, new Uint8Array(buffer).length, new Uint8Array(buffer).slice().length);\r\n\r\n            /* const u = new Uint8Array(buffer.byteLength);\r\n            for(let i = 0; i < u.length; ++i) {\r\n              //u[i] = Math.random() * 255 | 0;\r\n              u[i] = 0;\r\n            }\r\n            buffer = u.buffer; */\r\n  \r\n            /* setTimeout(() => {\r\n              doneParts++;\r\n              uploadResolve();\r\n  \r\n              //////this.log('Progress', doneParts * partSize / fileSize);\r\n\r\n              self.log('done part', part, doneParts);\r\n  \r\n              deferred.notify({done: doneParts * partSize, total: fileSize});\r\n  \r\n              if(doneParts >= totalParts) {\r\n                deferred.resolve(resultInputFile);\r\n                resolved = true;\r\n              }\r\n            }, 1250);\r\n            return; */\r\n\r\n            return self.apiManager.invokeApi(method, {\r\n              file_id: fileId,\r\n              file_part: part,\r\n              file_total_parts: totalParts,\r\n              bytes: buffer/* new Uint8Array(buffer) */\r\n            } as any, {\r\n              //startMaxLength: partSize + 256,\r\n              fileUpload: true\r\n            }).then(() => {\r\n              if(canceled) {\r\n                return;\r\n              }\r\n\r\n              ++doneParts;\r\n              const progress: Progress = {done: doneParts * partSize, offset, total: fileSize, fileName};\r\n              deferred.notify(progress);\r\n  \r\n              if(doneParts >= totalParts) {\r\n                deferred.resolve(resultInputFile);\r\n                resolved = true;\r\n              }\r\n            }, errorHandler);\r\n          });\r\n        }, activeDelta).catch(errorHandler);\r\n      }\r\n    }\r\n\r\n    const it = generator();\r\n    const process = () => {\r\n      if(canceled) return;\r\n      const r = it.next();\r\n      if(r.done || canceled) return;\r\n      (r.value as Promise<void>).then(process);\r\n    };\r\n\r\n    const maxRequests = Infinity;\r\n    //const maxRequests = 10;\r\n    /* for(let i = 0; i < 10; ++i) {\r\n      process();\r\n    } */\r\n    for(let i = 0, length = Math.min(maxRequests, totalParts); i < length; ++i) {\r\n      process();\r\n    }\r\n\r\n    deferred.cancel = () => {\r\n      //this.log('cancel upload', canceled, resolved);\r\n      if(!canceled && !resolved) {\r\n        canceled = true;\r\n        errorHandler({type: 'UPLOAD_CANCELED'});\r\n      }\r\n    };\r\n\r\n    deferred.notify = (progress: Progress) => {\r\n      this.rootScope.dispatchEvent('download_progress', progress);\r\n    };\r\n\r\n    deferred.finally(() => {\r\n      delete this.uploadPromises[fileName];\r\n    });\r\n\r\n    return this.uploadPromises[fileName] = deferred;\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function fixFirefoxSvg(text: string) {\n  const svgIndex = text.indexOf('<svg');\n  if(svgIndex !== 0) {\n    text = text.slice(svgIndex);\n  }\n\n  const [_, __, width, height] = text.match(/viewBox=\"(.+?)\"/)[1].split(' ');\n  text = text.replace(/>/, ` width=\"${width}\" height=\"${height}\">`).replace(/[^\\x00-\\x7F]/g, '');\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAs from \"./readBlobAs\";\n\nexport default function readBlobAsArrayBuffer(blob: Blob) {\n  return readBlobAs(blob, 'readAsArrayBuffer');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { IS_WEB_WORKER } from \"../context\";\n\n// const id = IS_WEB_WORKER ? Math.random() * 0x1000 | 0 : 0;\nexport default function readBlobAs(blob: Blob, method: 'readAsText'): Promise<string>;\nexport default function readBlobAs(blob: Blob, method: 'readAsDataURL'): Promise<string>;\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer'): Promise<ArrayBuffer>;\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer' | 'readAsText' | 'readAsDataURL'): Promise<any> {\n  // const perf = performance.now();\n  return new Promise<any>((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (e) => {\n      // console.log(`readBlobAs [${id}] ${method} time ${performance.now() - perf}`);\n      resolve(e.target.result);\n    });\n    reader[method](blob);\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from \"../../environment/ctx\";\nimport { ignoreRestrictionReasons } from \"../../helpers/restrictions\";\nimport { MethodDeclMap, User } from \"../../layer\";\nimport { InvokeApiOptions } from \"../../types\";\nimport { AppManager } from \"../appManagers/manager\";\nimport { ApiError } from \"./apiManager\";\nimport { MTAppConfig } from \"./appConfig\";\nimport { UserAuth } from \"./mtproto_config\";\nimport { MTMessage } from \"./networker\";\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport default abstract class ApiManagerMethods extends AppManager {\n  private afterMessageIdTemp: number;\n  private hashes: {[method: string]: HashOptions} = {};\n  private apiPromisesSingleProcess: {\n    [q: string]: Map<any, Promise<any>>\n  } = {};\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  private appConfig: MTAppConfig;\n  private getAppConfigPromise: Promise<MTAppConfig>;\n\n  constructor() {\n    super();\n    this.afterMessageIdTemp = 0;\n  }\n\n  abstract setUserAuth(userAuth: UserAuth | UserId): Promise<void>;\n\n  public setUser(user: User) {\n    // appUsersManager.saveApiUser(user);\n    return this.setUserAuth(user.id);\n  }\n\n  abstract invokeApi<T extends keyof MethodDeclMap>(method: T, params?: MethodDeclMap[T]['req'], options?: InvokeApiOptions): Promise<MethodDeclMap[T]['res']>;\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n    \n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    //console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap, R>(o: {\n    method: T, \n    processResult?: (response: MethodDeclMap[T]['res']) => R, \n    processError?: (error: ApiError) => any,\n    params?: Omit<MethodDeclMap[T]['req'], 'hash'>, \n    options?: InvokeApiOptions & {cacheKey?: string}\n  }) {\n    // @ts-ignore\n    o.params ??= {};\n    o.options ??= {};\n    //console.log('will invokeApi:', method, params, options);\n\n    const {params, options, method} = o;\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        (params as any).hash = cached.hash;\n      }\n    }\n\n    return this.invokeApiSingleProcess<T, R>({\n      method,\n      processResult: (result) => {\n        if(result._.includes('NotModified')) {\n          // this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n          return cached.result;\n        }\n        \n        if(result.hash/*  || result.messages */) {\n          const hash = result.hash/*  || this.computeHash(result.messages) */;\n          \n          if(!this.hashes[method]) this.hashes[method] = {};\n          this.hashes[method][queryJSON] = {\n            hash,\n            result\n          };\n        }\n\n        if(o.processResult) {\n          return o.processResult(result);\n        }\n  \n        return result;\n      },\n      params,\n      options\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    const cache = this.apiPromisesSingle;\n    if(cache[q]) {\n      return cache[q];\n    }\n\n    return cache[q] = this.invokeApi(method, params, options).finally(() => {\n      delete cache[q];\n    });\n  }\n\n  public invokeApiSingleProcess<T extends keyof MethodDeclMap, R>(o: {\n    method: T, \n    processResult: (response: MethodDeclMap[T]['res']) => R, \n    processError?: (error: ApiError) => any,\n    params?: MethodDeclMap[T]['req'], \n    options?: InvokeApiOptions & {cacheKey?: string}\n  }): Promise<Awaited<R>> {\n    o.params ??= {};\n    o.options ??= {};\n\n    const {method, processResult, processError, params, options} = o;\n    const cache = this.apiPromisesSingleProcess;\n    const cacheKey = options.cacheKey || JSON.stringify(params);\n    const map = cache[method] ?? (cache[method] = new Map());\n    const oldPromise = map.get(cacheKey);\n    if(oldPromise) {\n      return oldPromise;\n    }\n    \n    const originalPromise = this.invokeApi(method, params, options);\n    const newPromise: Promise<Awaited<R>> = originalPromise.then(processResult, processError);\n\n    const p = newPromise.finally(() => {\n      map.delete(cacheKey);\n      if(!map.size) {\n        delete cache[method];\n      }\n    });\n\n    map.set(cacheKey, p);\n    return p;\n  }\n\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\n    const queryJSON = JSON.stringify(params);\n    const item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item && item.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = ctx.setTimeout(() => {\n        delete cache[queryJSON];\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        try {\n          if(verify(item.params)) {\n            if(item.timeout) {\n              clearTimeout(item.timeout);\n            }\n  \n            delete cache[queryJSON];\n          }\n        } catch(err) {\n          // this.log.error('clearCache error:', err, queryJSON, item);\n        }\n      }\n    }\n  }\n\n  public getConfig() {\n    return this.invokeApiCacheable('help.getConfig');\n  }\n\n  public getAppConfig(overwrite?: boolean) {\n    if(this.appConfig && !overwrite) return this.appConfig;\n    if(this.getAppConfigPromise && !overwrite) return this.getAppConfigPromise;\n    const promise: Promise<MTAppConfig> = this.getAppConfigPromise = this.invokeApi('help.getAppConfig').then((config: MTAppConfig) => {\n      if(this.getAppConfigPromise !== promise) {\n        return this.getAppConfigPromise;\n      }\n      \n      this.appConfig = config;\n      ignoreRestrictionReasons(config.ignore_restriction_reasons ?? []);\n      return config;\n    });\n\n    return promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                       \n                                     \n          \n\n                    \nimport transportController from './transports/controller';\nimport MTTransport from './transports/transport';\n          \n\nimport type { UserAuth } from './mtproto_config';\nimport sessionStorage from '../sessionStorage';\nimport MTPNetworker, { MTMessage } from './networker';\n//import { telegramMeWebService } from './mtproto';\nimport { ConnectionType, DcConfigurator, TransportType } from './dcConfigurator';\nimport { logger } from '../logger';\nimport type { DcAuthKey, DcId, DcServerSalt, InvokeApiOptions } from '../../types';\nimport type { MethodDeclMap } from '../../layer';\nimport deferredPromise, { CancellablePromise } from '../../helpers/cancellablePromise';\n//import { clamp } from '../../helpers/number';\nimport App from '../../config/app';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport IDBStorage, { IDB } from '../idb';\nimport CryptoWorker from \"../crypto/cryptoMessagePort\";\nimport ctx from '../../environment/ctx';\nimport noop from '../../helpers/noop';\nimport Modes from '../../config/modes';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport pause from '../../helpers/schedulers/pause';\nimport ApiManagerMethods from './api_methods';\nimport { getEnvironment } from '../../environment/utils';\nimport AppStorage from '../storage';\nimport toggleStorages from '../../helpers/toggleStorages';\n\n/* var networker = apiManager.cachedNetworkers.websocket.upload[2];\nnetworker.wrapMtpMessage({\n  _: 'msgs_state_req',\n  msg_ids: [\"6888292542796810828\"]\n}, {\n  notContentRelated: true\n}).then((res) => {\n  console.log('status', res);\n}); */\n\n//console.error('apiManager included!');\n// TODO: если запрос словил флуд, нужно сохранять его параметры и возвращать тот же промис на новый такой же запрос, например - загрузка истории\n\nexport type ApiError = Partial<{\n  code: number,\n  type: string,\n  description: string,\n  originalError: any,\n  stack: string,\n  handled: boolean,\n  input: string,\n  message: ApiError\n}>;\n\n/* class RotatableArray<T> {\n  public array: Array<T> = [];\n  private lastIndex = -1;\n\n  public get() {\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\n    return this.array[this.lastIndex];\n  }\n} */\n\nconst PREMIUM_FILE_NETWORKERS_COUNT = 6;\nconst REGULAR_FILE_NETWORKERS_COUNT = 3;\n\nexport class ApiManager extends ApiManagerMethods {\n  private cachedNetworkers: {\n    [transportType in TransportType]: {\n      [connectionType in ConnectionType]: {\n        [dcId: DcId]: MTPNetworker[]\n      }\n    }\n  };\n  \n  private cachedExportPromise: {[x: number]: Promise<unknown>};\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\n  private baseDcId: DcId;\n  \n  //public telegramMeNotified = false;\n\n  private log: ReturnType<typeof logger>;\n\n  private afterMessageTempIds: {\n    [tempId: string]: {\n      messageId: string,\n      promise: Promise<any>\n    }\n  };\n\n  private transportType: TransportType;\n\n  private updatesProcessor: (obj: any) => void;\n\n  private loggingOut: boolean;\n\n  constructor() {\n    super();\n    this.log = logger('API');\n\n    this.cachedNetworkers = {} as any;\n    this.cachedExportPromise = {};\n    this.gettingNetworkers = {};\n    this.baseDcId = 0;\n    this.afterMessageTempIds = {};\n\n    this.transportType = Modes.transport;\n\n                        \n    transportController.addEventListener('transport', (transportType) => {\n      this.changeTransportType(transportType);\n    });\n              \n  }\n\n  //private lol = false;\n  \n  // constructor() {\n    //MtpSingleInstanceService.start();\n    \n    /* AppStorage.get<number>('dc').then((dcId) => {\n      if(dcId) {\n        this.baseDcId = dcId;\n      }\n    }); */\n  // }\n  \n  /* public telegramMeNotify(newValue: boolean) {\n    if(this.telegramMeNotified !== newValue) {\n      this.telegramMeNotified = newValue;\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\n    }\n  } */\n\n  private getTransportType(connectionType: ConnectionType) {\n                               \n                 \n                                                                                                                           \n                                                                                               \n             \n    // @ts-ignore\n    const transportType: TransportType = this.transportType;\n              \n\n    return transportType;\n  }\n\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\n    for(const transportType in this.cachedNetworkers) {\n      const connections = this.cachedNetworkers[transportType as TransportType];\n      for(const connectionType in connections) {\n        const dcs = connections[connectionType as ConnectionType];\n        for(const dcId in dcs) {\n          const networkers = dcs[dcId as any as DcId];\n          networkers.forEach((networker, idx, arr) => {\n            callback({\n              networker,\n              dcId: +dcId as DcId,\n              connectionType: connectionType as ConnectionType,\n              transportType: transportType as TransportType,\n              index: idx,\n              array: arr\n            });\n          });\n        }\n      }\n    }\n  }\n\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\n    return this.dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client', this.rootScope.premium);\n  }\n\n  public changeTransportType(transportType: TransportType) {\n    const oldTransportType = this.transportType;\n    if(oldTransportType === transportType) {\n      return;\n    }\n\n    this.log('changing transport from', oldTransportType, 'to', transportType);\n\n    const oldObject = this.cachedNetworkers[oldTransportType];\n    const newObject = this.cachedNetworkers[transportType];\n    this.cachedNetworkers[transportType] = oldObject;\n    this.cachedNetworkers[oldTransportType] = newObject;\n\n    this.transportType = transportType;\n\n    for(const oldGetKey in this.gettingNetworkers) {\n      const promise = this.gettingNetworkers[oldGetKey];\n      delete this.gettingNetworkers[oldGetKey];\n\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\n      this.gettingNetworkers[newGetKey] = promise;\n\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\n    }\n\n    this.iterateNetworkers((info) => {\n      const transportType = this.getTransportType(info.connectionType);\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\n      this.changeNetworkerTransport(info.networker, transport);\n    });\n  }\n\n  public async getBaseDcId() {\n    if(this.baseDcId) {\n      return this.baseDcId;\n    }\n\n    const baseDcId = await sessionStorage.get('dc');\n    if(!this.baseDcId) {\n      if(!baseDcId) {\n        this.setBaseDcId(App.baseDcId);\n      } else {\n        this.baseDcId = baseDcId;\n      }\n    }\n\n    return this.baseDcId;\n  }\n  \n  public async setUserAuth(userAuth: UserAuth | UserId) {\n    if(typeof(userAuth) === 'string' || typeof(userAuth) === 'number') {\n      userAuth = {dcID: 0, date: Date.now() / 1000 | 0, id: userAuth.toPeerId(false)};\n    }\n\n    this.rootScope.dispatchEvent('user_auth', userAuth);\n\n    if(!userAuth.dcID) {\n      const baseDcId = await this.getBaseDcId();\n      userAuth.dcID = baseDcId;\n    }\n\n    sessionStorage.set({\n      user_auth: userAuth\n    });\n    \n    //this.telegramMeNotify(true);\n  }\n\n  public setBaseDcId(dcId: DcId) {\n    const wasDcId = this.baseDcId;\n    if(wasDcId) { // if migrated set ondrain\n      this.getNetworker(wasDcId).then((networker) => {\n        this.setOnDrainIfNeeded(networker);\n      });\n    }\n\n    this.baseDcId = dcId;\n\n    sessionStorage.set({\n      dc: this.baseDcId\n    });\n  }\n  \n  public async logOut() {\n    if(this.loggingOut) {\n      return;\n    }\n\n    this.loggingOut = true;\n    const storageKeys: Array<DcAuthKey> = [];\n    \n    const prefix = 'dc';\n    for(let dcId = 1; dcId <= 5; dcId++) {\n      storageKeys.push(prefix + dcId + '_auth_key' as any);\n    }\n    \n    // WebPushApiManager.forceUnsubscribe(); // WARNING // moved to worker's master\n    const storageResult = await Promise.all(storageKeys.map((key) => sessionStorage.get(key)));\n    \n    const logoutPromises: Promise<any>[] = [];\n    for(let i = 0; i < storageResult.length; i++) {\n      if(storageResult[i]) {\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId: (i + 1) as DcId, ignoreErrors: true}));\n      }\n    }\n\n    const clear = async() => {\n      this.baseDcId = undefined;\n      //this.telegramMeNotify(false);\n      await toggleStorages(false, true);\n      IDB.closeDatabases();\n      this.rootScope.dispatchEvent('logging_out');\n    };\n\n    setTimeout(clear, 1e3);\n\n    //return;\n    \n    return Promise.all(logoutPromises).catch((error) => {\n      error.handled = true;\n    }).finally(clear)/* .then(() => {\n      location.pathname = '/';\n    }) */;\n  }\n\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\n    return [dcId, transportType, connectionType].join('-');\n  }\n  \n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\n    //const connectionType: ConnectionType = 'client';\n\n    const transportType = this.getTransportType(connectionType);\n    if(!this.cachedNetworkers[transportType]) {\n      this.cachedNetworkers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const cache = this.cachedNetworkers[transportType][connectionType];\n    if(!(dcId in cache)) {\n      cache[dcId] = [];\n    }\n    \n    const networkers = cache[dcId];\n    // @ts-ignore\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (this.rootScope.premium ? PREMIUM_FILE_NETWORKERS_COUNT : REGULAR_FILE_NETWORKERS_COUNT);\n    if(networkers.length >= maxNetworkers) {\n      let i = networkers.length - 1, found = false;\n      for(; i >= 0; --i) {\n        if(networkers[i].isOnline) {\n          found = true;\n          break;\n        }\n      }\n      \n      const networker = found ? networkers.splice(i, 1)[0] : networkers.pop();\n      networkers.unshift(networker);\n      return Promise.resolve(networker);\n    }\n    \n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\n    if(this.gettingNetworkers[getKey]) {\n      return this.gettingNetworkers[getKey];\n    }\n\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\n    \n    let transport = this.chooseServer(dcId, connectionType, transportType);\n    return this.gettingNetworkers[getKey] = Promise.all([ak, ss].map((key) => sessionStorage.get(key)))\n    .then(async([authKeyHex, serverSaltHex]) => {\n      let networker: MTPNetworker, error: any;\n      if(authKeyHex && authKeyHex.length === 512) {\n        if(!serverSaltHex || serverSaltHex.length !== 16) {\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\n        }\n        \n        const authKey = bytesFromHex(authKeyHex);\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1', authKey)).slice(-8);\n        const serverSalt = bytesFromHex(serverSaltHex);\n        \n        networker = this.networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\n      } else {\n        try { // if no saved state\n          const auth = await this.authorizer.auth(dcId);\n  \n          sessionStorage.set({\n            [ak]: bytesToHex(auth.authKey),\n            [ss]: bytesToHex(auth.serverSalt)\n          });\n          \n          networker = this.networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\n        } catch(_error) {\n          error = _error;\n        }\n      }\n\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\n      const newTransportType = this.getTransportType(connectionType);\n      if(newTransportType !== transportType) {\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\n        transport.destroy();\n        DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, transport);\n\n        if(networker) {\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\n        }\n\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\n      }\n\n      /* networker.onConnectionStatusChange = (online) => {\n        console.log('status:', online);\n      }; */\n      \n      delete this.gettingNetworkers[getKey];\n\n      if(error) {\n        this.log('get networker error', error, (error as Error).stack);\n        throw error;\n      }\n\n      this.changeNetworkerTransport(networker, transport);\n      networkers.unshift(networker);\n      this.setOnDrainIfNeeded(networker);\n      return networker;\n    });\n  }\n\n  public getNetworkerVoid(dcId: DcId) {\n    return this.getNetworker(dcId).then(noop, noop);\n  }\n\n  private changeNetworkerTransport(networker: MTPNetworker, transport?: MTTransport) {\n    const oldTransport = networker.transport;\n    if(oldTransport) {\n      DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, oldTransport);\n    }\n\n    networker.changeTransport(transport);\n  }\n\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\n    if(networker.onDrain) {\n      return;\n    }\n    \n    const checkPromise: Promise<boolean> = networker.isFileNetworker ? \n      Promise.resolve(true) : \n      this.getBaseDcId().then((baseDcId) => networker.dcId !== baseDcId);\n    checkPromise.then((canRelease) => {\n      if(networker.onDrain) {\n        return;\n      }\n      \n      if(canRelease) {\n        networker.onDrain = () => {\n          this.log('networker drain', networker.dcId);\n\n          networker.onDrain = undefined;\n          this.changeNetworkerTransport(networker);\n          networker.destroy();\n          this.networkerFactory.removeNetworker(networker);\n          DcConfigurator.removeTransport(this.cachedNetworkers, networker);\n        };\n\n        networker.setDrainTimeout();\n      }\n    });\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n    this.networkerFactory.setUpdatesProcessor(callback);\n  }\n  \n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T][\"res\"]> {\n    ///////this.log('Invoke api', method, params, options);\n\n    /* if(!this.lol) {\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\n      this.lol = true;\n    } */\n\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\n\n    let {afterMessageId, prepareTempMessageId} = options;\n    if(prepareTempMessageId) {\n      deferred.then(() => {\n        delete this.afterMessageTempIds[prepareTempMessageId];\n      });\n    }\n\n    if(MOUNT_CLASS_TO) {\n      const startTime = Date.now();\n      const interval = ctx.setInterval(() => {\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\n        }\n        //this.cachedUploadNetworkers[2].requestMessageStatus();\n      }, 5e3);\n\n      deferred.catch(noop).finally(() => {\n        clearInterval(interval);\n      });\n    }\n\n    const rejectPromise = async(error: ApiError) => {\n      if(!error) {\n        error = {type: 'ERROR_EMPTY'};\n      } else if(!isObject(error)) {\n        error = {message: error};\n      }\n\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') || \n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\n        this.logOut();\n      }\n\n      if(options.ignoreErrors) {\n        throw error;\n      }\n      \n      if(error.code === 406) {\n        error.handled = true;\n      }\n      \n      if(!options.noErrorBox) {\n        error.input = method;\n        error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\n        setTimeout(() => {\n          if(!error.handled) {\n            if(error.code === 401) {\n              this.logOut();\n            } else {\n              // ErrorService.show({error: error}); // WARNING\n            }\n            \n            error.handled = true;\n          }\n        }, 100);\n      }\n\n      throw error;\n    };\n    \n    let dcId: DcId;\n    \n    let cachedNetworker: MTPNetworker;\n    let stack = (new Error()).stack || 'empty stack';\n    const performRequest = (): Promise<any> => {\n      if(afterMessageId) {\n        const after = this.afterMessageTempIds[afterMessageId];\n        if(after) {\n          options.afterMessageId = after.messageId;\n        }\n      }\n\n      const promise = cachedNetworker.wrapApiCall(method, params, options);\n\n      if(prepareTempMessageId) {\n        this.afterMessageTempIds[prepareTempMessageId] = {\n          messageId: (options as MTMessage).messageId,\n          promise: deferred\n        };\n      }\n\n      return promise.catch((error: ApiError) => {\n        //if(!options.ignoreErrors) {\n        if(error.type !== 'FILE_REFERENCE_EXPIRED'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\n        }\n        \n        if(error.code === 401 && this.baseDcId === dcId) {\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\n            sessionStorage.delete('dc')\n            sessionStorage.delete('user_auth'); // ! возможно тут вообще не нужно это делать, но нужно проверить случай с USER_DEACTIVATED (https://core.telegram.org/api/errors)\n            //this.telegramMeNotify(false);\n          }\n          \n          throw error;\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\n          if(this.cachedExportPromise[dcId] === undefined) {\n            const promise = new Promise((exportResolve, exportReject) => {\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\n                this.invokeApi('auth.importAuthorization', {\n                  id: exportedAuth.id,\n                  bytes: exportedAuth.bytes\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\n              }, exportReject);\n            });\n            \n            this.cachedExportPromise[dcId] = promise;\n          }\n          \n          return this.cachedExportPromise[dcId].then(() => performRequest());\n        } else if(error.code === 303) {\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            if(options.dcId) {\n              options.dcId = newDcId;\n            } else {\n              this.setBaseDcId(newDcId);\n            }\n            \n            return this.invokeApi(method, params, options);\n          }\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            options.dcId = newDcId;\n            return this.invokeApi(method, params, options);\n          } else {\n            throw error;\n          }\n        } else if(error.code === 400 && error.type === 'CONNECTION_NOT_INITED') {\n          this.networkerFactory.unsetConnectionInited();\n          return performRequest();\n        } else if(!options.rawError && error.code === 420) {\n          const waitTime = +error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 1;\n          \n          if(waitTime > (options.floodMaxTimeout !== undefined ? options.floodMaxTimeout : 60) && !options.prepareTempMessageId) {\n            throw error;\n          }\n          \n          return pause(waitTime/* (waitTime + 5) */ * 1000).then(() => performRequest());\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\n          const after = this.afterMessageTempIds[afterMessageId];\n\n          afterMessageId = undefined;\n          delete options.afterMessageId;\n\n          if(after) return after.promise.then(() => performRequest());\n          else return performRequest();\n        } else if(!options.rawError && error.code === 500) {\n          const now = Date.now();\n          if(options.stopTime) {\n            if(now >= options.stopTime) {\n              throw error;\n            }\n          }\n          \n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\n          return pause(options.waitTime * 1000).then(() => performRequest());\n        } else if(error.type === 'UNKNOWN') {\n          return pause(1000).then(() => performRequest());\n        } else {\n          throw error;\n        }\n      });\n    }\n    \n    let p: Promise<MTPNetworker>;\n    if(dcId = (options.dcId || this.baseDcId)) {\n      p = this.getNetworker(dcId, options);\n    } else {\n      p = this.getBaseDcId().then((baseDcId) => this.getNetworker(dcId = baseDcId, options));\n    }\n\n    p.then((networker) => {\n      cachedNetworker = networker;\n      const promise = performRequest();\n      cachedNetworker.attachPromise(deferred, options as MTMessage);\n      return promise;\n    })\n    .then(deferred.resolve)\n    .catch(rejectPromise)\n    .catch(deferred.reject);\n\n    return deferred;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport applyMixins from \"../../helpers/applyMixins\";\nimport EventListenerBase from \"../../helpers/eventListenerBase\";\nimport { AppManager } from \"../appManagers/manager\";\n\nexport type StatePeerType = 'recentSearch' | 'topPeer' | 'dialog' | 'contact' | 'topMessage' | 'self';\n\ntype PeersStorageKey = `${StatePeerType}_${string | PeerId}` | StatePeerType;\n\nclass PeersStorage {\n  private neededPeers: Map<PeerId, Set<PeersStorageKey>> = new Map();\n  private singlePeerMap: Map<PeersStorageKey, Set<PeerId>> = new Map();\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  protected after() {\n    this.rootScope.addEventListener('user_auth', () => {\n      this.requestPeer(this.appPeersManager.peerId, 'self');\n    });\n  }\n\n  public requestPeer(peerId: PeerId, key: PeersStorageKey) {\n    let set = this.neededPeers.get(peerId);\n    if(set && set.has(key)) {\n      return;\n    }\n\n    if(!set) {\n      set = new Set();\n      this.neededPeers.set(peerId, set);\n    }\n\n    set.add(key);\n\n    this.dispatchEvent('peerNeeded', peerId);\n  }\n\n  public releasePeer(peerId: PeerId, key: PeersStorageKey) {\n    const set = this.neededPeers.get(peerId);\n    if(!set) {\n      return;\n    }\n\n    set.delete(key);\n\n    if(!set.size) {\n      this.neededPeers.delete(peerId);\n      this.dispatchEvent('peerUnneeded', peerId);\n    }\n  }\n\n  public requestPeersForKey(peerIds: Set<PeerId> | number[], key: PeersStorageKey) {\n    if(Array.isArray(peerIds)) {\n      peerIds = new Set(peerIds);\n    }\n\n    let set = this.singlePeerMap.get(key);\n    if(set) {\n      for(const peerId of set) {\n        if(peerIds.has(peerId)) {\n          continue;\n        }\n        \n        this.releasePeer(peerId, key);\n        set.delete(peerId);\n      }\n\n      if(!set.size && !peerIds.size) {\n        this.singlePeerMap.delete(key);\n        return;\n      }\n    }\n\n    if(peerIds.size) {\n      if(!set) {\n        set = new Set();\n        this.singlePeerMap.set(key, set);\n      }\n\n      for(const peerId of peerIds) {\n        if(set.has(peerId)) {\n          continue;\n        }\n\n        this.requestPeer(peerId, key);\n        set.add(peerId);\n      }\n    }\n  }\n\n  public isPeerNeeded(peerId: PeerId) {\n    return this.neededPeers.has(peerId);\n  }\n}\n\ninterface PeersStorage extends EventListenerBase<{\n  peerNeeded: (peerId: PeerId) => void,\n  peerUnneeded: (peerId: PeerId) => void,\n}>, AppManager {}\napplyMixins(PeersStorage, [EventListenerBase, AppManager]);\n\nexport default PeersStorage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { MyDocument } from \"../appManagers/appDocsManager\";\nimport type { MyPhoto } from \"../appManagers/appPhotosManager\";\n\nexport type ThumbCache = {\n  downloaded: number, \n  url: string,\n  type: string\n};\n\nexport type ThumbsCache = {\n  [key: string]: {\n    [size: string]: ThumbCache\n  }\n};\n\nconst thumbFullSize = 'full';\n\nexport default class ThumbsStorage {\n  private thumbsCache: ThumbsCache = {};\n\n  public getCacheContext(media: MyPhoto | MyDocument, thumbSize: string = thumbFullSize): ThumbCache {\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\n      thumbSize = thumbFullSize;\n    } */\n\n    const key = media._ + media.id;\n    const cache = this.thumbsCache[key] ??= {};\n    return cache[thumbSize] ??= {downloaded: 0, url: '', type: thumbSize};\n  }\n\n  public setCacheContextURL(media: MyPhoto | MyDocument, thumbSize: string = thumbFullSize, url: string, downloaded: number = 0) {\n    const cacheContext = this.getCacheContext(media, thumbSize);\n    cacheContext.url = url;\n    cacheContext.downloaded = downloaded;\n    return cacheContext;\n  }\n\n  public deleteCacheContext(media: MyPhoto | MyDocument, thumbSize: string = thumbFullSize) {\n    const key = media._ + media.id;\n    const cache = this.thumbsCache[key];\n    if(cache) {\n      delete cache[thumbSize];\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type MTProtoConstructor = {\r\n  id: number,\r\n  predicate: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport type MTProtoMethod = {\r\n  id: number,\r\n  method: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport default {\"MTProto\":{\"constructors\":[{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":85337187,\"predicate\":\"resPQ\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"server_public_key_fingerprints\",\"type\":\"Vector<long>\"}],\"type\":\"ResPQ\"},{\"id\":-1443537003,\"predicate\":\"p_q_inner_data_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":1459478408,\"predicate\":\"p_q_inner_data_temp_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"},{\"name\":\"expires_in\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":-790100132,\"predicate\":\"server_DH_params_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_answer\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-1249309254,\"predicate\":\"server_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"dh_prime\",\"type\":\"bytes\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"server_time\",\"type\":\"int\"}],\"type\":\"Server_DH_inner_data\"},{\"id\":1715713620,\"predicate\":\"client_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"retry_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"}],\"type\":\"Client_DH_Inner_Data\"},{\"id\":1003222836,\"predicate\":\"dh_gen_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash1\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1188831161,\"predicate\":\"dh_gen_retry\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash2\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":-1499615742,\"predicate\":\"dh_gen_fail\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash3\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1973679973,\"predicate\":\"bind_auth_key_inner\",\"params\":[{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"temp_auth_key_id\",\"type\":\"long\"},{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"temp_session_id\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"}],\"type\":\"BindAuthKeyInner\"},{\"id\":-212046591,\"predicate\":\"rpc_result\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"Object\"}],\"type\":\"RpcResult\"},{\"id\":558156313,\"predicate\":\"rpc_error\",\"params\":[{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"error_message\",\"type\":\"string\"}],\"type\":\"RpcError\"},{\"id\":1579864942,\"predicate\":\"rpc_answer_unknown\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-847714938,\"predicate\":\"rpc_answer_dropped_running\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-1539647305,\"predicate\":\"rpc_answer_dropped\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seq_no\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"}],\"type\":\"RpcDropAnswer\"},{\"id\":155834844,\"predicate\":\"future_salt\",\"params\":[{\"name\":\"valid_since\",\"type\":\"int\"},{\"name\":\"valid_until\",\"type\":\"int\"},{\"name\":\"salt\",\"type\":\"long\"}],\"type\":\"FutureSalt\"},{\"id\":-1370486635,\"predicate\":\"future_salts\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"now\",\"type\":\"int\"},{\"name\":\"salts\",\"type\":\"vector<future_salt>\"}],\"type\":\"FutureSalts\"},{\"id\":880243653,\"predicate\":\"pong\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-501201412,\"predicate\":\"destroy_session_ok\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":1658015945,\"predicate\":\"destroy_session_none\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1631450872,\"predicate\":\"new_session_created\",\"params\":[{\"name\":\"first_msg_id\",\"type\":\"long\"},{\"name\":\"unique_id\",\"type\":\"long\"},{\"name\":\"server_salt\",\"type\":\"long\"}],\"type\":\"NewSession\"},{\"id\":1945237724,\"predicate\":\"msg_container\",\"params\":[{\"name\":\"messages\",\"type\":\"vector<%Message>\"}],\"type\":\"MessageContainer\"},{\"id\":1538843921,\"predicate\":\"message\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seqno\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"body\",\"type\":\"Object\"}],\"type\":\"Message\"},{\"id\":-530561358,\"predicate\":\"msg_copy\",\"params\":[{\"name\":\"orig_message\",\"type\":\"Message\"}],\"type\":\"MessageCopy\"},{\"id\":812830625,\"predicate\":\"gzip_packed\",\"params\":[{\"name\":\"packed_data\",\"type\":\"bytes\"}],\"type\":\"Object\"},{\"id\":1658238041,\"predicate\":\"msgs_ack\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsAck\"},{\"id\":-1477445615,\"predicate\":\"bad_msg_notification\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"}],\"type\":\"BadMsgNotification\"},{\"id\":-307542917,\"predicate\":\"bad_server_salt\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"new_server_salt\",\"type\":\"long\"}],\"type\":\"BadMsgNotification\"},{\"id\":2105940488,\"predicate\":\"msg_resend_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgResendReq\"},{\"id\":-630588590,\"predicate\":\"msgs_state_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsStateReq\"},{\"id\":81704317,\"predicate\":\"msgs_state_info\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsStateInfo\"},{\"id\":-1933520591,\"predicate\":\"msgs_all_info\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsAllInfo\"},{\"id\":661470918,\"predicate\":\"msg_detailed_info\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-2137147681,\"predicate\":\"msg_new_detailed_info\",\"params\":[{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-161422892,\"predicate\":\"destroy_auth_key_ok\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":178201177,\"predicate\":\"destroy_auth_key_none\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":-368010477,\"predicate\":\"destroy_auth_key_fail\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}],\"methods\":[{\"id\":-1099002127,\"method\":\"req_pq_multi\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"}],\"type\":\"ResPQ\"},{\"id\":-686627650,\"method\":\"req_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"public_key_fingerprint\",\"type\":\"long\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-184262881,\"method\":\"set_client_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1491380032,\"method\":\"rpc_drop_answer\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"}],\"type\":\"RpcDropAnswer\"},{\"id\":-1188971260,\"method\":\"get_future_salts\",\"params\":[{\"name\":\"num\",\"type\":\"int\"}],\"type\":\"FutureSalts\"},{\"id\":2059302892,\"method\":\"ping\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-213746804,\"method\":\"ping_delay_disconnect\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"},{\"name\":\"disconnect_delay\",\"type\":\"int\"}],\"type\":\"Pong\"},{\"id\":-414113498,\"method\":\"destroy_session\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1835453025,\"method\":\"http_wait\",\"params\":[{\"name\":\"max_delay\",\"type\":\"int\"},{\"name\":\"wait_after\",\"type\":\"int\"},{\"name\":\"max_wait\",\"type\":\"int\"}],\"type\":\"HttpWait\"},{\"id\":-784117408,\"method\":\"destroy_auth_key\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}]},\"API\":{\"constructors\":[{\"id\":-1132882121,\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1720552011,\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":1072550713,\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":-994444869,\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":1450380236,\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":2134579434,\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":2107670217,\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":900291769,\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1182234929,\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-138301121,\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-208488460,\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":-181407105,\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-1771768449,\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":505969924,\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1279654347,\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-104578748,\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":-122978821,\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":480546647,\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":-968723890,\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"InputChatPhoto\"},{\"id\":-1991004873,\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":-457104426,\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":1210199983,\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"InputGeoPoint\"},{\"id\":483901197,\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":1001634122,\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":-539317279,\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":1498486562,\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":918946202,\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1432995067,\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1086091090,\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":8322574,\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-891180321,\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":172975040,\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1373745011,\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1384777335,\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1258941372,\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1278304028,\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":276907596,\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-742634630,\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"User\"},{\"id\":1326562017,\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":-2100168954,\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":164646985,\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-306628279,\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":9203775,\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":693512293,\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Chat\"},{\"id\":1103884886,\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.25?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":1704108455,\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":-779165146,\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.13?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"call\",\"type\":\"flags.12?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.15?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.16?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.17?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.17?Vector<long>\"},{\"name\":\"available_reactions\",\"type\":\"flags.18?Vector<string>\"}],\"type\":\"ChatFull\"},{\"id\":-1070776313,\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-2023500831,\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":1018991608,\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":935395612,\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":476978193,\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":-1868117372,\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"peer_id\",\"type\":\"flags.0?Peer\"}],\"type\":\"Message\"},{\"id\":940666592,\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"pinned\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"forwards\",\"type\":\"flags.10?int\"},{\"name\":\"replies\",\"type\":\"flags.23?MessageReplies\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":721967202,\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":1038967584,\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":1766936791,\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1457575028,\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":1882335561,\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageMedia\"},{\"id\":-1618676578,\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":-1230047312,\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1119368275,\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1247687078,\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":2144015272,\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-1780220945,\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":365886720,\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1539362612,\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1460809483,\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"}],\"type\":\"Dialog\"},{\"id\":590459437,\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":-82216347,\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"video_sizes\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":236446268,\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":1976012384,\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":35527382,\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":286776671,\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":-1297942941,\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"GeoPoint\"},{\"id\":1577067778,\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":872119224,\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"setup_password_required\",\"type\":\"flags.1?true\"},{\"name\":\"otherwise_relogin_days\",\"type\":\"flags.1?int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":-1271602504,\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1195615476,\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":423314455,\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":1251338318,\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-551616469,\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?NotificationSound\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":-1472527322,\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"ios_sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"android_sound\",\"type\":\"flags.4?NotificationSound\"},{\"name\":\"other_sound\",\"type\":\"flags.5?NotificationSound\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-1525149427,\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"},{\"name\":\"autoarchived\",\"type\":\"flags.7?true\"},{\"name\":\"invite_members\",\"type\":\"flags.8?true\"},{\"name\":\"request_chat_broadcast\",\"type\":\"flags.10?true\"},{\"name\":\"geo_distance\",\"type\":\"flags.6?int\"},{\"name\":\"request_chat_title\",\"type\":\"flags.9?string\"},{\"name\":\"request_chat_date\",\"type\":\"flags.9?int\"}],\"type\":\"PeerSettings\"},{\"id\":-1539849235,\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1490799288,\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":505595789,\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":777640226,\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1376497949,\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1041980751,\"predicate\":\"inputReportReasonOther\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1938625919,\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"video_calls_available\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.15?string\"},{\"name\":\"private_forward_name\",\"type\":\"flags.16?string\"},{\"name\":\"bot_group_admin_rights\",\"type\":\"flags.17?ChatAdminRights\"},{\"name\":\"bot_broadcast_admin_rights\",\"type\":\"flags.18?ChatAdminRights\"}],\"type\":\"UserFull\"},{\"id\":341499403,\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":-1052885936,\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":383348795,\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":-1219778094,\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":-353862078,\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":2010127419,\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":182326673,\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":-513392236,\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":364538944,\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":1910543603,\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1938715001,\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":978610270,\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1694474197,\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-438840932,\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1269012015,\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1474492012,\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1777752804,\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1614803355,\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1458172132,\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1629621880,\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2129714567,\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-3644025,\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":522914557,\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1318109142,\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1576161051,\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1071741569,\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-2092401936,\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":125178264,\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":-440534818,\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":-1007549728,\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-232290676,\"predicate\":\"updateUserPhoto\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"photo\",\"type\":\"UserProfilePhoto\"},{\"name\":\"previous\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-1519637954,\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":1567990072,\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":16030880,\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-1459938943,\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-484987010,\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":826001400,\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":1299050149,\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":2027216577,\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1918567619,\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1957577280,\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1916114267,\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":352657236,\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":539045032,\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":157948117,\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":414687501,\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":856375399,\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phonecalls_enabled\",\"type\":\"flags.1?true\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"ignore_phone_entities\",\"type\":\"flags.5?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"pfs_enabled\",\"type\":\"flags.13?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"saved_gifs_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"stickers_faved_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"pinned_dialogs_count_max\",\"type\":\"int\"},{\"name\":\"pinned_infolder_count_max\",\"type\":\"int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"}],\"type\":\"Config\"},{\"id\":-1910892683,\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":-860107216,\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"sticker\",\"type\":\"flags.3?Document\"}],\"type\":\"help.AppUpdate\"},{\"id\":-1000708810,\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":415997816,\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":314359194,\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":386986326,\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1264392051,\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":956179895,\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1417756512,\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":1722964307,\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":1223809356,\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1643173063,\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":505183301,\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"history_deleted\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":-247351839,\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":-1038136962,\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":1248893260,\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":406307684,\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":1690108678,\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1511503333,\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":-182231723,\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-317144808,\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":594758406,\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":-1058912715,\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":740433629,\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":1443858741,\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-1802240206,\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-95482955,\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":767652808,\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1037718609,\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-483443337,\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1906403213,\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":1530447553,\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"force_file\",\"type\":\"flags.4?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":860303448,\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"query\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-1666158377,\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1928391342,\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":448771445,\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":-1160743548,\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":922273905,\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":512177195,\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"video_thumbs\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":398898678,\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":-1613493288,\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":-1261946036,\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1073230141,\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1094555409,\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":381645902,\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-44119819,\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1584933265,\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-378127636,\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-718310409,\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-212740181,\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-774682074,\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1441998364,\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":393186209,\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1653390447,\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1290580579,\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":-337352679,\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":-496024847,\"predicate\":\"userStatusRecently\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":129960444,\"predicate\":\"userStatusLastWeek\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":2011940674,\"predicate\":\"userStatusLastMonth\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-298113238,\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":1335282456,\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1137792208,\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":218751099,\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":407582158,\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":320652927,\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":195371015,\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-697604407,\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-1877932953,\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-123988,\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1698855810,\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1198497870,\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-125240806,\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1955338397,\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-463335103,\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1352683077,\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1194283041,\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":88680979,\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1815593308,\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":297109817,\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1662637586,\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":250621158,\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1739392570,\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":358154344,\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-244016606,\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":816245886,\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":313694676,\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":-395967805,\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":-843329861,\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":-1667805217,\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":791617983,\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-2066640507,\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":2139689491,\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-350980120,\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"WebPage\"},{\"id\":-981018084,\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-392411726,\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":-1557277184,\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":-1392388579,\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.3?true\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.4?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":1275039392,\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"},{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":408623183,\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"},{\"name\":\"pending_reset_date\",\"type\":\"flags.5?int\"}],\"type\":\"account.Password\"},{\"id\":-1705233435,\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1036572727,\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":326715557,\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":-1052959727,\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":784356159,\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1551583367,\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":179611673,\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"permanent\",\"type\":\"flags.5?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"start_date\",\"type\":\"flags.4?int\"},{\"name\":\"expire_date\",\"type\":\"flags.1?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.2?int\"},{\"name\":\"usage\",\"type\":\"flags.3?int\"},{\"name\":\"requested\",\"type\":\"flags.7?int\"},{\"name\":\"title\",\"type\":\"flags.8?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1516793212,\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":806110401,\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"flags.5?string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"}],\"type\":\"ChatInvite\"},{\"id\":51520707,\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":1757493555,\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-4838507,\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1645763991,\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":-2044933984,\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":-673242758,\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"animated\",\"type\":\"flags.5?true\"},{\"name\":\"videos\",\"type\":\"flags.6?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumbs\",\"type\":\"flags.4?Vector<PhotoSize>\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_version\",\"type\":\"flags.4?int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":-1240849242,\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":1073147056,\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"apply_min_photo\",\"type\":\"flags.25?true\"},{\"name\":\"fake\",\"type\":\"flags.26?true\"},{\"name\":\"bot_attach_menu\",\"type\":\"flags.27?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"}],\"type\":\"User\"},{\"id\":-1032140601,\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":-468280483,\"predicate\":\"botInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"},{\"name\":\"menu_button\",\"type\":\"BotMenuButton\"}],\"type\":\"BotInfo\"},{\"id\":-1560655744,\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":2002815875,\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":-1606526075,\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2035021048,\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2049074735,\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-571955892,\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-233744186,\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":-1148011883,\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-100378723,\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1868782349,\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1827637959,\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1859134776,\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1692693954,\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1117713463,\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-2106619040,\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":681706865,\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1938967520,\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":1990644519,\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":-1877614335,\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":-292807034,\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":-212145112,\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1566230754,\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":666680316,\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-2107528095,\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"fake\",\"type\":\"flags.25?true\"},{\"name\":\"gigagroup\",\"type\":\"flags.26?true\"},{\"name\":\"noforwards\",\"type\":\"flags.27?true\"},{\"name\":\"join_to_send\",\"type\":\"flags.28?true\"},{\"name\":\"join_request\",\"type\":\"flags.29?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"}],\"type\":\"Chat\"},{\"id\":399807445,\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":2131196633,\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-362240487,\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.20?true\"},{\"name\":\"blocked\",\"type\":\"flags.22?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"can_delete_channel\",\"type\":\"flags2.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.23?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?long\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?long\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"call\",\"type\":\"flags.21?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.24?int\"},{\"name\":\"pending_suggestions\",\"type\":\"flags.25?Vector<string>\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.26?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.27?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.28?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.28?Vector<long>\"},{\"name\":\"default_send_as\",\"type\":\"flags.29?Peer\"},{\"name\":\"available_reactions\",\"type\":\"flags.30?Vector<string>\"}],\"type\":\"ChatFull\"},{\"id\":182649427,\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":1682413576,\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":-1781355374,\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":277713951,\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1666927625,\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1656358105,\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1842450928,\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1020437742,\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-232346616,\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1041346555,\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1531132162,\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":543450958,\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1798033689,\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":-847783593,\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":-1072953408,\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":900251559,\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_request\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":803602899,\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":-566281095,\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1268741783,\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1548400251,\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1699676497,\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-541588713,\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":-462696732,\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"ChatParticipant\"},{\"id\":-1600962725,\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-674602590,\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-519864430,\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-365344535,\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1328445861,\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":2013922064,\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":1753886890,\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":196268545,\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":1135492588,\"predicate\":\"updateStickerSets\",\"params\":[],\"type\":\"Update\"},{\"id\":-402498398,\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":-2069878259,\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":-1821035490,\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":864077702,\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1036876423,\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2000710887,\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1984755728,\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1937807902,\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":295067450,\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1803769784,\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":1232025500,\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"peer_type\",\"type\":\"flags.1?InlineQueryPeerType\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":317794823,\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":1358283666,\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":928101534,\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1107622874,\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1343122938,\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1571494644,\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1601666510,\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"imported\",\"type\":\"flags.7?true\"},{\"name\":\"from_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"psa_type\",\"type\":\"flags.6?string\"}],\"type\":\"MessageFwdHeader\"},{\"id\":457133559,\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1799538451,\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1923290508,\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1948046307,\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":577556219,\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1035688326,\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1073693790,\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1398007207,\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1425815847,\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":629866245,\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":901503851,\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requires_password\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":-1318425559,\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-59151553,\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":90744648,\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1218642516,\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":911761060,\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-1177566067,\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":649453030,\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-469536605,\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1768777083,\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1098628881,\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1494368259,\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":85477117,\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1970903652,\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":416402882,\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1462213465,\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-459324,\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":400266251,\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1995686519,\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":1763610706,\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":1008755359,\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":863093588,\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-305282981,\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":-1419371685,\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":344356834,\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":104314861,\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1122524854,\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":371037736,\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-75283823,\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":-567906571,\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":1891070632,\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":-595914432,\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":546203849,\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":975236280,\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1218471511,\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-299124375,\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":453805082,\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":-40996577,\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"DraftMessage\"},{\"id\":-1615153660,\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-958657434,\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-2067782896,\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1461528386,\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":186120336,\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":-1999405994,\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":-1706939360,\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1338747336,\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":946083368,\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":904138920,\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":1678812626,\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1574314746,\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":861169551,\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":-440664550,\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-78455655,\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":872932635,\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1361650766,\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":-1744710921,\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1251549527,\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":70813275,\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":-1107729093,\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":1336154098,\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1262639204,\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-38694904,\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":-750828557,\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":53231223,\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":-1020139510,\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":1358175439,\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1834538890,\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1940093419,\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":-1707344487,\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":1258196845,\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":791390623,\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1663561404,\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-599948721,\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":1950782688,\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":1730456516,\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-653089380,\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1054465340,\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1678197867,\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1816074681,\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1009288385,\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":-564523562,\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":2120376535,\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":324435594,\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":1890305021,\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1879401953,\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1162877472,\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":-1076861716,\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-248793375,\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1182402406,\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1066346178,\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":1216809369,\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-618614392,\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":-837994576,\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":-454524911,\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":641563686,\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1329878739,\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":391759200,\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":2089805750,\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":972174080,\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":-1468953147,\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-229005301,\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1705048653,\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":52401552,\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1930545681,\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":-88417185,\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1030105979,\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-580219064,\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-2048646399,\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-527056480,\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1471006352,\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-84416311,\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1852826908,\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-99664734,\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":2104790276,\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":-2095595325,\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-1684914010,\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-886477832,\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":215516896,\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"},{\"name\":\"max_tip_amount\",\"type\":\"flags.8?long\"},{\"name\":\"suggested_tip_amounts\",\"type\":\"flags.8?Vector<long>\"}],\"type\":\"Invoice\"},{\"id\":-646342540,\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-368917890,\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":-1892568281,\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":-2074799289,\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":512535275,\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":-1868808300,\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":-1344716869,\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1080663248,\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-842892769,\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":475467473,\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-1678949555,\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":-1036396922,\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":568808380,\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":378828315,\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?PaymentSavedCredentials\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-784000893,\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":1314881805,\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1891958275,\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"tip_amount\",\"type\":\"flags.3?long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-74456004,\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":-1056001329,\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":873977640,\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-614138572,\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":-1239335713,\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":-1246823043,\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":-1934976362,\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-6249322,\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"InputStickerSetItem\"},{\"id\":-1425052898,\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":506920429,\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":1399245077,\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":-987599081,\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"}],\"type\":\"PhoneCall\"},{\"id\":347139340,\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":912311057,\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":-1770029977,\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"}],\"type\":\"PhoneCall\"},{\"id\":1355435489,\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"PhoneCall\"},{\"id\":-1655957568,\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":-58224696,\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":-326966976,\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":-2134272152,\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":-2132731265,\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":2054952868,\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1253451181,\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1997373508,\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":608050278,\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-242427324,\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":-290921362,\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1449145777,\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-914167110,\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":1462101002,\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":-283684427,\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":-892239370,\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":1816636575,\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":695856818,\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":-209337866,\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":-288727837,\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":1180041828,\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1442983757,\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":885242707,\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?long\"},{\"name\":\"promoted_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":1844969806,\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"kicked_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":338142689,\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":106343499,\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-421545947,\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1427671598,\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1783299128,\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1129042607,\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":460916654,\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":648939889,\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-370660328,\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1889215493,\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1121994683,\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":405815507,\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-124291086,\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-484690728,\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-422036098,\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-714643696,\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":531458253,\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":-309659827,\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-368018716,\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"},{\"name\":\"group_call\",\"type\":\"flags.14?true\"},{\"name\":\"invites\",\"type\":\"flags.15?true\"},{\"name\":\"send\",\"type\":\"flags.16?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":511092620,\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-2143067670,\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1558266229,\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":1200788123,\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1634752813,\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":750063767,\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-451831443,\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1153291573,\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-1040652646,\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1887741886,\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":-1312568665,\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-85549226,\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":178373535,\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-419271411,\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-530392189,\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1304443240,\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1599903217,\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1759532989,\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.2?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":-1186937242,\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.1?int\"}],\"type\":\"MessageMedia\"},{\"id\":1189204285,\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1188296222,\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1294306862,\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-347535331,\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1140172836,\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":235081943,\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-266911767,\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":1951620897,\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":482797855,\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":-1493633966,\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":-313079300,\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":-1502174430,\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-1160215659,\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-2037963464,\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":-1687559349,\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1280209983,\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1410748418,\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-55902537,\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":-445792507,\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":223655517,\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1963942446,\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":1648543603,\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":-104284986,\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":1968737087,\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":-483352705,\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":686618977,\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":859091184,\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":1399317950,\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":-876089816,\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":1679398724,\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":-534283678,\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":-1964327229,\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":2103482845,\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":569137759,\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":-1658158621,\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":1034709504,\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":115615172,\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1596951477,\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1717268701,\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-874308058,\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-63531698,\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1995211763,\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1954007928,\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1713143702,\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-368907213,\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1289704741,\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1908627474,\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":411017418,\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":-618540889,\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":-316748368,\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":-391902247,\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":12467706,\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2037765467,\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-449327402,\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":2054162547,\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":1717706985,\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":871426631,\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":-1389486888,\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-2128640689,\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":455635795,\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":-648257196,\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":1722786150,\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":1783556146,\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":289586518,\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":1304052993,\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":700340377,\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":-513517117,\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-253500010,\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1625153079,\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":-1255369827,\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":-1685456582,\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-732254058,\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":4883767,\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-1141711456,\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-2042159726,\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":354925740,\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":982592842,\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":-1736378792,\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-763367294,\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-2036501105,\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-1592506512,\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":878931416,\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2103600678,\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":41187252,\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":-1078332329,\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":-1600596305,\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":488313413,\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":-1059185703,\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":1064139624,\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":-952869270,\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":736157604,\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":-1222740358,\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":-146520221,\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1715350371,\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1311015810,\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-703403793,\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-311786236,\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-939827711,\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":55281185,\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":483104362,\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":136105807,\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":504660880,\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":878078826,\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":-524237339,\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":-1085412734,\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":1869903447,\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":-1188055347,\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":635466748,\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":1577484359,\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1730311882,\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1702174239,\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":1987480557,\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1282352120,\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":370236054,\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":-1538310410,\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-1738178803,\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":-610373422,\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":961092808,\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":894777186,\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":-1945767479,\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":-206688531,\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":32192344,\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":-202219658,\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1398708869,\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":1823064809,\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":-2032041631,\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"string\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":997055186,\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":-591909213,\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<long>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":261416433,\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":1272375192,\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":-264117680,\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":1202287072,\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":-525288402,\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":1605510357,\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"},{\"name\":\"anonymous\",\"type\":\"flags.10?true\"},{\"name\":\"manage_call\",\"type\":\"flags.11?true\"},{\"name\":\"other\",\"type\":\"flags.12?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":-1626209256,\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":1421875280,\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-433014407,\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":1913199744,\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":-1150621555,\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":771095562,\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1895328189,\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":471437699,\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":-842824308,\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":-1973130814,\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"},{\"name\":\"allow_missed_call\",\"type\":\"flags.5?true\"},{\"name\":\"logout_tokens\",\"type\":\"flags.6?Vector<bytes>\"}],\"type\":\"CodeSettings\"},{\"id\":499236004,\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"third_background_color\",\"type\":\"flags.5?int\"},{\"name\":\"fourth_background_color\",\"type\":\"flags.6?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"}],\"type\":\"WallPaperSettings\"},{\"id\":-532532493,\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"int\"},{\"name\":\"file_size_max\",\"type\":\"int\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":1674235686,\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":-709641735,\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":594408994,\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":1556570557,\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":-1519029347,\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":-1275374751,\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":-1529000952,\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1777096355,\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1461304012,\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1777000467,\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1075322878,\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-667654413,\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":925204121,\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1652231205,\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb_version\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":-11252123,\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":1908216652,\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":1684014375,\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":1363483106,\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":-70073706,\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":-373643672,\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":422972864,\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":497305826,\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":1536380829,\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1468331492,\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1121318848,\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":55761658,\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-778378131,\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1472172887,\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-68239120,\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":84703944,\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-398136321,\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":280464681,\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":-802258988,\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":-1831650802,\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1886646706,\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1445536993,\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":-2079962673,\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-380694650,\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":1796427406,\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1103656293,\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-1672577397,\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1090087980,\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":34469328,\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1786671974,\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":-1078612597,\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":547062491,\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":-901375139,\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-1263546448,\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":241923758,\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-606798099,\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":1401984889,\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1148485274,\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":-666824391,\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":42402760,\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":967122427,\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":-1870238482,\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-797791052,\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":1012306921,\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":-175567375,\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":-1609668650,\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"for_chat\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<ThemeSettings>\"},{\"name\":\"emoticon\",\"type\":\"flags.6?string\"},{\"name\":\"installs_count\",\"type\":\"flags.4?int\"}],\"type\":\"Theme\"},{\"id\":-199313886,\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":-1707242387,\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":-2112423005,\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":-786326563,\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1124062251,\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-2027964103,\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1448076945,\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":1654593920,\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":110008598,\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":957176926,\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":1474462241,\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":-1456996667,\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":-1012849566,\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-69724536,\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1212997976,\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1834973166,\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1527845466,\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1770371538,\"predicate\":\"inputWallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":-528465642,\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":-1881255857,\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":-94849324,\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":1421174295,\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":274961865,\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":886196148,\"predicate\":\"messageUserVote\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":1017491692,\"predicate\":\"messageUserVoteInputOption\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":-1973033641,\"predicate\":\"messageUserVoteMultiple\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":136574537,\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessageUserVote>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":-1144565411,\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1981704948,\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-177732982,\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":1042605427,\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":-118740917,\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":1949890536,\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":2004110666,\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":654302845,\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":-1512627963,\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":889491791,\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":-1237848657,\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":-884757282,\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":-875679776,\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":1244130093,\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1092839390,\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1901828938,\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":-1387279939,\"predicate\":\"messageInteractionCounters\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"MessageInteractionCounters\"},{\"id\":-1107852396,\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_message_interactions\",\"type\":\"Vector<MessageInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":-428884101,\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":1065280907,\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-427863538,\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":-1728664459,\"predicate\":\"help.promoDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.PromoData\"},{\"id\":-1942390465,\"predicate\":\"help.promoData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"proxy\",\"type\":\"flags.0?true\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"psa_type\",\"type\":\"flags.1?string\"},{\"name\":\"psa_message\",\"type\":\"flags.2?string\"}],\"type\":\"help.PromoData\"},{\"id\":-567037804,\"predicate\":\"videoSize\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.0?double\"}],\"type\":\"VideoSize\"},{\"id\":643940105,\"predicate\":\"updatePhoneCallSignalingData\",\"params\":[{\"name\":\"phone_call_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Update\"},{\"id\":1634294960,\"predicate\":\"chatInvitePeek\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":-1660637285,\"predicate\":\"statsGroupTopPoster\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"int\"},{\"name\":\"avg_chars\",\"type\":\"int\"}],\"type\":\"StatsGroupTopPoster\"},{\"id\":-682079097,\"predicate\":\"statsGroupTopAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"deleted\",\"type\":\"int\"},{\"name\":\"kicked\",\"type\":\"int\"},{\"name\":\"banned\",\"type\":\"int\"}],\"type\":\"StatsGroupTopAdmin\"},{\"id\":1398765469,\"predicate\":\"statsGroupTopInviter\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"invitations\",\"type\":\"int\"}],\"type\":\"StatsGroupTopInviter\"},{\"id\":-276825834,\"predicate\":\"stats.megagroupStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"members\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"messages\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"viewers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"posters\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"members_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_members_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"messages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"actions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"weekdays_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_posters\",\"type\":\"Vector<StatsGroupTopPoster>\"},{\"name\":\"top_admins\",\"type\":\"Vector<StatsGroupTopAdmin>\"},{\"name\":\"top_inviters\",\"type\":\"Vector<StatsGroupTopInviter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-1096616924,\"predicate\":\"globalPrivacySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archive_and_mute_new_noncontact_peers\",\"type\":\"flags.0?Bool\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":1667228533,\"predicate\":\"phoneConnectionWebrtc\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"turn\",\"type\":\"flags.0?true\"},{\"name\":\"stun\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"type\":\"PhoneConnection\"},{\"id\":1107543535,\"predicate\":\"help.countryCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_code\",\"type\":\"string\"},{\"name\":\"prefixes\",\"type\":\"flags.0?Vector<string>\"},{\"name\":\"patterns\",\"type\":\"flags.1?Vector<string>\"}],\"type\":\"help.CountryCode\"},{\"id\":-1014526429,\"predicate\":\"help.country\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"iso2\",\"type\":\"string\"},{\"name\":\"default_name\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.1?string\"},{\"name\":\"country_codes\",\"type\":\"Vector<help.CountryCode>\"}],\"type\":\"help.Country\"},{\"id\":-1815339214,\"predicate\":\"help.countriesListNotModified\",\"params\":[],\"type\":\"help.CountriesList\"},{\"id\":-2016381538,\"predicate\":\"help.countriesList\",\"params\":[{\"name\":\"countries\",\"type\":\"Vector<help.Country>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":1163625789,\"predicate\":\"messageViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"views\",\"type\":\"flags.0?int\"},{\"name\":\"forwards\",\"type\":\"flags.1?int\"},{\"name\":\"replies\",\"type\":\"flags.2?MessageReplies\"}],\"type\":\"MessageViews\"},{\"id\":-761649164,\"predicate\":\"updateChannelMessageForwards\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-96535659,\"predicate\":\"photoSizeProgressive\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<int>\"}],\"type\":\"PhotoSize\"},{\"id\":-1228606141,\"predicate\":\"messages.messageViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<MessageViews>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.MessageViews\"},{\"id\":-693004986,\"predicate\":\"updateReadChannelDiscussionInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"},{\"name\":\"broadcast_id\",\"type\":\"flags.0?long\"},{\"name\":\"broadcast_post\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1767677564,\"predicate\":\"updateReadChannelDiscussionOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1506535550,\"predicate\":\"messages.discussionMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"max_id\",\"type\":\"flags.0?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"flags.1?int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"flags.2?int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-1495959709,\"predicate\":\"messageReplyHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_scheduled\",\"type\":\"flags.2?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"reply_to_top_id\",\"type\":\"flags.1?int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":-2083123262,\"predicate\":\"messageReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"comments\",\"type\":\"flags.0?true\"},{\"name\":\"replies\",\"type\":\"int\"},{\"name\":\"replies_pts\",\"type\":\"int\"},{\"name\":\"recent_repliers\",\"type\":\"flags.1?Vector<Peer>\"},{\"name\":\"channel_id\",\"type\":\"flags.0?long\"},{\"name\":\"max_id\",\"type\":\"flags.2?int\"},{\"name\":\"read_max_id\",\"type\":\"flags.3?int\"}],\"type\":\"MessageReplies\"},{\"id\":610945826,\"predicate\":\"updatePeerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"blocked\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-386039788,\"predicate\":\"peerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PeerBlocked\"},{\"id\":-1937192669,\"predicate\":\"updateChannelUserTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-1392895362,\"predicate\":\"inputMessageCallbackQuery\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"InputMessage\"},{\"id\":453242886,\"predicate\":\"channelParticipantLeft\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"ChannelParticipant\"},{\"id\":-531931925,\"predicate\":\"channelParticipantsMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-309990731,\"predicate\":\"updatePinnedMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1538885128,\"predicate\":\"updatePinnedChannelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":464520273,\"predicate\":\"inputMessagesFilterPinned\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1986399595,\"predicate\":\"stats.messageStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.MessageStats\"},{\"id\":-1730095465,\"predicate\":\"messageActionGeoProximityReached\",\"params\":[{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-668906175,\"predicate\":\"photoPathSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-651419003,\"predicate\":\"speakingInGroupCallAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":2004925620,\"predicate\":\"groupCallDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-711498484,\"predicate\":\"groupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join_muted\",\"type\":\"flags.1?true\"},{\"name\":\"can_change_join_muted\",\"type\":\"flags.2?true\"},{\"name\":\"join_date_asc\",\"type\":\"flags.6?true\"},{\"name\":\"schedule_start_subscribed\",\"type\":\"flags.8?true\"},{\"name\":\"can_start_video\",\"type\":\"flags.9?true\"},{\"name\":\"record_video_active\",\"type\":\"flags.11?true\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.12?true\"},{\"name\":\"listeners_hidden\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.3?string\"},{\"name\":\"stream_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"record_start_date\",\"type\":\"flags.5?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.7?int\"},{\"name\":\"unmuted_video_count\",\"type\":\"flags.10?int\"},{\"name\":\"unmuted_video_limit\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-659913713,\"predicate\":\"inputGroupCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGroupCall\"},{\"id\":2047704898,\"predicate\":\"messageActionGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"duration\",\"type\":\"flags.0?int\"}],\"type\":\"MessageAction\"},{\"id\":1345295095,\"predicate\":\"messageActionInviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-341428482,\"predicate\":\"groupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.1?true\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.2?true\"},{\"name\":\"just_joined\",\"type\":\"flags.4?true\"},{\"name\":\"versioned\",\"type\":\"flags.5?true\"},{\"name\":\"min\",\"type\":\"flags.8?true\"},{\"name\":\"muted_by_you\",\"type\":\"flags.9?true\"},{\"name\":\"volume_by_admin\",\"type\":\"flags.10?true\"},{\"name\":\"self\",\"type\":\"flags.12?true\"},{\"name\":\"video_joined\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"active_date\",\"type\":\"flags.3?int\"},{\"name\":\"source\",\"type\":\"int\"},{\"name\":\"volume\",\"type\":\"flags.7?int\"},{\"name\":\"about\",\"type\":\"flags.11?string\"},{\"name\":\"raise_hand_rating\",\"type\":\"flags.13?long\"},{\"name\":\"video\",\"type\":\"flags.6?GroupCallParticipantVideo\"},{\"name\":\"presentation\",\"type\":\"flags.14?GroupCallParticipantVideo\"}],\"type\":\"GroupCallParticipant\"},{\"id\":-124097970,\"predicate\":\"updateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-219423922,\"predicate\":\"updateGroupCallParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":347227392,\"predicate\":\"updateGroupCall\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"call\",\"type\":\"GroupCall\"}],\"type\":\"Update\"},{\"id\":-1636664659,\"predicate\":\"phone.groupCall\",\"params\":[{\"name\":\"call\",\"type\":\"GroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"participants_next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.GroupCall\"},{\"id\":-193506890,\"predicate\":\"phone.groupParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":813821341,\"predicate\":\"inlineQueryPeerTypeSameBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-2093215828,\"predicate\":\"inlineQueryPeerTypePM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-681130742,\"predicate\":\"inlineQueryPeerTypeChat\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1589952067,\"predicate\":\"inlineQueryPeerTypeMegagroup\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1664413338,\"predicate\":\"inlineQueryPeerTypeBroadcast\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":589338437,\"predicate\":\"channelAdminLogEventActionStartGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-610299584,\"predicate\":\"channelAdminLogEventActionDiscardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-115071790,\"predicate\":\"channelAdminLogEventActionParticipantMute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-431740480,\"predicate\":\"channelAdminLogEventActionParticipantUnmute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1456906823,\"predicate\":\"channelAdminLogEventActionToggleGroupCallSetting\",\"params\":[{\"name\":\"join_muted\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1966921727,\"predicate\":\"inputPaymentCredentialsGooglePay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":375566091,\"predicate\":\"messages.historyImport\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"messages.HistoryImport\"},{\"id\":-606432698,\"predicate\":\"sendMessageHistoryImportAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":1578088377,\"predicate\":\"messages.historyImportParsed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pm\",\"type\":\"flags.0?true\"},{\"name\":\"group\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"flags.2?string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":-170010905,\"predicate\":\"inputReportReasonFake\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-275956116,\"predicate\":\"messages.affectedFoundMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":-1441072131,\"predicate\":\"messageActionSetMessagesTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1147422299,\"predicate\":\"updatePeerHistoryTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-796432838,\"predicate\":\"updateChatParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChatParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChatParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1738720581,\"predicate\":\"updateChannelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChannelParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-997782967,\"predicate\":\"updateBotStopped\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"stopped\",\"type\":\"Bool\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1940201511,\"predicate\":\"chatInviteImporter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"flags.2?string\"},{\"name\":\"approved_by\",\"type\":\"flags.1?long\"}],\"type\":\"ChatInviteImporter\"},{\"id\":-1111085620,\"predicate\":\"messages.exportedChatInvites\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"invites\",\"type\":\"Vector<ExportedChatInvite>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":410107472,\"predicate\":\"messages.exportedChatInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":572915951,\"predicate\":\"messages.exportedChatInviteReplaced\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-2118733814,\"predicate\":\"messages.chatInviteImporters\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"importers\",\"type\":\"Vector<ChatInviteImporter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-219353309,\"predicate\":\"chatAdminWithInvites\",\"params\":[{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"invites_count\",\"type\":\"int\"},{\"name\":\"revoked_invites_count\",\"type\":\"int\"}],\"type\":\"ChatAdminWithInvites\"},{\"id\":-1231326505,\"predicate\":\"messages.chatAdminsWithInvites\",\"params\":[{\"name\":\"admins\",\"type\":\"Vector<ChatAdminWithInvites>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":1557846647,\"predicate\":\"channelAdminLogEventActionParticipantJoinByInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1515256996,\"predicate\":\"channelAdminLogEventActionExportedInviteDelete\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1091179342,\"predicate\":\"channelAdminLogEventActionExportedInviteRevoke\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-384910503,\"predicate\":\"channelAdminLogEventActionExportedInviteEdit\",\"params\":[{\"name\":\"prev_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1048537159,\"predicate\":\"channelAdminLogEventActionParticipantVolume\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1855199800,\"predicate\":\"channelAdminLogEventActionChangeHistoryTTL\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1571952873,\"predicate\":\"messages.checkedHistoryImportPeer\",\"params\":[{\"name\":\"confirm_text\",\"type\":\"string\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":93890858,\"predicate\":\"inputGroupCallStream\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"time_ms\",\"type\":\"long\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"video_channel\",\"type\":\"flags.0?int\"},{\"name\":\"video_quality\",\"type\":\"flags.0?int\"}],\"type\":\"InputFileLocation\"},{\"id\":-1343921601,\"predicate\":\"phone.joinAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":541839704,\"predicate\":\"phone.exportedGroupCallInvite\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":-672693723,\"predicate\":\"inputBotInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":894081801,\"predicate\":\"botInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1281329567,\"predicate\":\"messageActionGroupCallScheduled\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"schedule_date\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-592373577,\"predicate\":\"groupCallParticipantVideoSourceGroup\",\"params\":[{\"name\":\"semantics\",\"type\":\"string\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"GroupCallParticipantVideoSourceGroup\"},{\"id\":1735736008,\"predicate\":\"groupCallParticipantVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"paused\",\"type\":\"flags.0?true\"},{\"name\":\"endpoint\",\"type\":\"string\"},{\"name\":\"source_groups\",\"type\":\"Vector<GroupCallParticipantVideoSourceGroup>\"},{\"name\":\"audio_source\",\"type\":\"flags.1?int\"}],\"type\":\"GroupCallParticipantVideo\"},{\"id\":192428418,\"predicate\":\"updateGroupCallConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"presentation\",\"type\":\"flags.0?true\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-2046910401,\"predicate\":\"stickers.suggestedShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":795652779,\"predicate\":\"botCommandScopeDefault\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1011811544,\"predicate\":\"botCommandScopeUsers\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1877059713,\"predicate\":\"botCommandScopeChats\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-1180016534,\"predicate\":\"botCommandScopeChatAdmins\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-610432643,\"predicate\":\"botCommandScopePeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":1071145937,\"predicate\":\"botCommandScopePeerAdmins\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":169026035,\"predicate\":\"botCommandScopePeerUser\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotCommandScope\"},{\"id\":-478701471,\"predicate\":\"account.resetPasswordFailedWait\",\"params\":[{\"name\":\"retry_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-370148227,\"predicate\":\"account.resetPasswordRequestedWait\",\"params\":[{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-383330754,\"predicate\":\"account.resetPasswordOk\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1299263278,\"predicate\":\"updateBotCommands\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Update\"},{\"id\":-1434950843,\"predicate\":\"messageActionSetChatTheme\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1336228175,\"predicate\":\"sendMessageChooseStickerAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":981691896,\"predicate\":\"sponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"from_id\",\"type\":\"flags.3?Peer\"},{\"name\":\"chat_invite\",\"type\":\"flags.4?ChatInvite\"},{\"name\":\"chat_invite_hash\",\"type\":\"flags.4?string\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"start_param\",\"type\":\"flags.0?string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"SponsoredMessage\"},{\"id\":1705297877,\"predicate\":\"messages.sponsoredMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<SponsoredMessage>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":215889721,\"predicate\":\"inputStickerSetAnimatedEmojiAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":630664139,\"predicate\":\"sendMessageEmojiInteraction\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"interaction\",\"type\":\"DataJSON\"}],\"type\":\"SendMessageAction\"},{\"id\":-1234857938,\"predicate\":\"sendMessageEmojiInteractionSeen\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"SendMessageAction\"},{\"id\":-1227287081,\"predicate\":\"inputBotInlineMessageID64\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":-911191137,\"predicate\":\"searchResultsCalendarPeriod\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"max_msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SearchResultsCalendarPeriod\"},{\"id\":343859772,\"predicate\":\"messages.searchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.1?int\"},{\"name\":\"periods\",\"type\":\"Vector<SearchResultsCalendarPeriod>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":2137295719,\"predicate\":\"searchResultPosition\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"SearchResultsPosition\"},{\"id\":1404185519,\"predicate\":\"messages.searchResultsPositions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"positions\",\"type\":\"Vector<SearchResultsPosition>\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":-339958837,\"predicate\":\"messageActionChatJoinedByRequest\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1885586395,\"predicate\":\"updatePendingJoinRequests\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"requests_pending\",\"type\":\"int\"},{\"name\":\"recent_requesters\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":299870598,\"predicate\":\"updateBotChatInviteRequester\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1347021750,\"predicate\":\"channelAdminLogEventActionParticipantJoinByRequest\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"approved_by\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-376962181,\"predicate\":\"inputKeyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":814112961,\"predicate\":\"keyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"KeyboardButton\"},{\"id\":-2091463255,\"predicate\":\"channels.sendAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-886388890,\"predicate\":\"channelAdminLogEventActionToggleNoForwards\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-738646805,\"predicate\":\"messages.stickerSetNotModified\",\"params\":[],\"type\":\"messages.StickerSet\"},{\"id\":997004590,\"predicate\":\"users.userFull\",\"params\":[{\"name\":\"full_user\",\"type\":\"UserFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.UserFull\"},{\"id\":1753266509,\"predicate\":\"messages.peerSettings\",\"params\":[{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PeerSettings\"},{\"id\":663693416,\"predicate\":\"channelAdminLogEventActionSendMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-702884114,\"predicate\":\"auth.codeTypeMissedCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-2113903484,\"predicate\":\"auth.sentCodeTypeMissedCall\",\"params\":[{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1012759713,\"predicate\":\"auth.loggedOut\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"future_auth_token\",\"type\":\"flags.0?bytes\"}],\"type\":\"auth.LoggedOut\"},{\"id\":357013699,\"predicate\":\"updateMessageReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"MessageReactions\"}],\"type\":\"Update\"},{\"id\":1873957073,\"predicate\":\"reactionCount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"ReactionCount\"},{\"id\":1328256121,\"predicate\":\"messageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"can_see_list\",\"type\":\"flags.2?true\"},{\"name\":\"results\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"recent_reactions\",\"type\":\"flags.1?Vector<MessagePeerReaction>\"}],\"type\":\"MessageReactions\"},{\"id\":834488621,\"predicate\":\"messages.messageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<MessagePeerReaction>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-1065882623,\"predicate\":\"availableReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"static_icon\",\"type\":\"Document\"},{\"name\":\"appear_animation\",\"type\":\"Document\"},{\"name\":\"select_animation\",\"type\":\"Document\"},{\"name\":\"activate_animation\",\"type\":\"Document\"},{\"name\":\"effect_animation\",\"type\":\"Document\"},{\"name\":\"around_animation\",\"type\":\"flags.1?Document\"},{\"name\":\"center_icon\",\"type\":\"flags.1?Document\"}],\"type\":\"AvailableReaction\"},{\"id\":-1626924713,\"predicate\":\"messages.availableReactionsNotModified\",\"params\":[],\"type\":\"messages.AvailableReactions\"},{\"id\":1989032621,\"predicate\":\"messages.availableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<AvailableReaction>\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":852137487,\"predicate\":\"messageEntitySpoiler\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1661470870,\"predicate\":\"channelAdminLogEventActionChangeAvailableReactions\",\"params\":[{\"name\":\"prev_value\",\"type\":\"Vector<string>\"},{\"name\":\"new_value\",\"type\":\"Vector<string>\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1741309751,\"predicate\":\"messages.translateNoResult\",\"params\":[],\"type\":\"messages.TranslatedText\"},{\"id\":-1575684144,\"predicate\":\"messages.translateResultText\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":1370914559,\"predicate\":\"messagePeerReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"unread\",\"type\":\"flags.1?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reaction\",\"type\":\"string\"}],\"type\":\"MessagePeerReaction\"},{\"id\":-2132064081,\"predicate\":\"groupCallStreamChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"last_timestamp_ms\",\"type\":\"long\"}],\"type\":\"GroupCallStreamChannel\"},{\"id\":-790330702,\"predicate\":\"phone.groupCallStreamChannels\",\"params\":[{\"name\":\"channels\",\"type\":\"Vector<GroupCallStreamChannel>\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":177124030,\"predicate\":\"inputReportReasonIllegalDrugs\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1631091139,\"predicate\":\"inputReportReasonPersonalDetails\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":767505458,\"predicate\":\"phone.groupCallStreamRtmpUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":1165423600,\"predicate\":\"attachMenuBotIconColor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"AttachMenuBotIconColor\"},{\"id\":-1297663893,\"predicate\":\"attachMenuBotIcon\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"icon\",\"type\":\"Document\"},{\"name\":\"colors\",\"type\":\"flags.0?Vector<AttachMenuBotIconColor>\"}],\"type\":\"AttachMenuBotIcon\"},{\"id\":-381896846,\"predicate\":\"attachMenuBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"icons\",\"type\":\"Vector<AttachMenuBotIcon>\"}],\"type\":\"AttachMenuBot\"},{\"id\":-237467044,\"predicate\":\"attachMenuBotsNotModified\",\"params\":[],\"type\":\"AttachMenuBots\"},{\"id\":1011024320,\"predicate\":\"attachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bots\",\"type\":\"Vector<AttachMenuBot>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBots\"},{\"id\":-1816172929,\"predicate\":\"attachMenuBotsBot\",\"params\":[{\"name\":\"bot\",\"type\":\"AttachMenuBot\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":397910539,\"predicate\":\"updateAttachMenuBots\",\"params\":[],\"type\":\"Update\"},{\"id\":202659196,\"predicate\":\"webViewResultUrl\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":-2010155333,\"predicate\":\"simpleWebViewResultUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":211046684,\"predicate\":\"webViewMessageSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"msg_id\",\"type\":\"flags.0?InputBotInlineMessageID\"}],\"type\":\"WebViewMessageSent\"},{\"id\":361936797,\"predicate\":\"updateWebViewResultSent\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":326529584,\"predicate\":\"keyboardButtonWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1598009252,\"predicate\":\"keyboardButtonSimpleWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1205698681,\"predicate\":\"messageActionWebViewDataSentMe\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1262252875,\"predicate\":\"messageActionWebViewDataSent\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":347625491,\"predicate\":\"updateBotMenuButton\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Update\"},{\"id\":1966318984,\"predicate\":\"botMenuButtonDefault\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":1113113093,\"predicate\":\"botMenuButtonCommands\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":-944407322,\"predicate\":\"botMenuButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"BotMenuButton\"},{\"id\":-67704655,\"predicate\":\"account.savedRingtonesNotModified\",\"params\":[],\"type\":\"account.SavedRingtones\"},{\"id\":-1041683259,\"predicate\":\"account.savedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"ringtones\",\"type\":\"Vector<Document>\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1960361625,\"predicate\":\"updateSavedRingtones\",\"params\":[],\"type\":\"Update\"},{\"id\":-1746354498,\"predicate\":\"notificationSoundDefault\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":1863070943,\"predicate\":\"notificationSoundNone\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":-2096391452,\"predicate\":\"notificationSoundLocal\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"NotificationSound\"},{\"id\":-9666487,\"predicate\":\"notificationSoundRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"NotificationSound\"},{\"id\":-1222230163,\"predicate\":\"account.savedRingtone\",\"params\":[],\"type\":\"account.SavedRingtone\"},{\"id\":523271863,\"predicate\":\"account.savedRingtoneConverted\",\"params\":[{\"name\":\"document\",\"type\":\"Document\"}],\"type\":\"account.SavedRingtone\"}],\"methods\":[{\"id\":-878758099,\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1036301552,\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1502141361,\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":-2131827673,\"method\":\"auth.signUp\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1126886015,\"method\":\"auth.signIn\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":1047706137,\"method\":\"auth.logOut\",\"params\":[],\"type\":\"auth.LoggedOut\"},{\"id\":-1616179942,\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-440401971,\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1518699091,\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":-841733627,\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-326762118,\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":1779249670,\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-2067899501,\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":313765169,\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-612493497,\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":2018596725,\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":1713919532,\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":127302966,\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.WallPapers\"},{\"id\":-977650298,\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":227648840,\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":-1240508136,\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"users.UserFull\"},{\"id\":2061264541,\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Vector<int>\"},{\"id\":-995929106,\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":1574346258,\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.Contacts\"},{\"id\":746589157,\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":157945344,\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":269745566,\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1758204945,\"method\":\"contacts.block\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1096393392,\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-176409329,\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":1673946374,\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":-1594569905,\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Dialogs\"},{\"id\":1143203525,\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1593989278,\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":238054714,\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-1332768214,\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-443640366,\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":94983360,\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":1486110434,\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":228423076,\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-497026848,\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-869258997,\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"drop_author\",\"type\":\"flags.11?true\"},{\"name\":\"drop_media_captions\",\"type\":\"flags.12?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-820669733,\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-270948702,\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1991005362,\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1240027791,\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-1364194508,\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"messages.ChatFull\"},{\"id\":1937260541,\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":903730804,\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":-230206493,\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1575461717,\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":164303470,\"method\":\"messages.createChat\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-304838614,\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":630429265,\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":1926525996,\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"photos.Photo\"},{\"id\":-1980559511,\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"photos.Photo\"},{\"id\":-2016444625,\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":-1291540959,\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1319462148,\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":-990308245,\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":531836966,\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":1378703997,\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":1295590211,\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":-1848823128,\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":651135312,\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":-162681021,\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1035731989,\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":-208425312,\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2031374829,\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2135648522,\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1157265941,\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1431914525,\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":852769188,\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1436924774,\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1259113487,\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":-562337987,\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1043505495,\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1663104819,\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":916930423,\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":655677548,\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1040964988,\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":301470424,\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":-623130288,\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-906486552,\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":1099779595,\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"reason\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":150761757,\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":608323678,\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":-627372787,\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-113456221,\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-2108208411,\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1891839707,\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-710552671,\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Stickers\"},{\"id\":-1197432408,\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":954152242,\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1738800940,\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1956073268,\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"MessageMedia\"},{\"id\":-484392616,\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":-545786948,\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1418342645,\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":-1663767815,\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1516564433,\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":-779399914,\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":-661144474,\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":923364464,\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"new_settings\",\"type\":\"flags.0?account.PasswordInputSettings\"}],\"type\":\"auth.Authorization\"},{\"id\":-1080796745,\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1607670315,\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"legacy_revoke_permanent\",\"type\":\"flags.2?true\"},{\"name\":\"request_needed\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1051570619,\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":1817183516,\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-928977804,\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-946871200,\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":-110209570,\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-421563528,\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1877938321,\"method\":\"help.getAppChangelog\",\"params\":[{\"name\":\"prev_app_version\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1468322785,\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"messages.MessageViews\"},{\"id\":-871347913,\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-2067661490,\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-196443371,\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1383294429,\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":2010044880,\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-1599378234,\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":176122811,\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":141781513,\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":1029681423,\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"for_import\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"}],\"type\":\"Updates\"},{\"id\":-751007486,\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1450044624,\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-248621111,\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":283557164,\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":890549214,\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":615851205,\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-130635115,\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":429865580,\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":-1072619549,\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":51854712,\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1470377534,\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1568189671,\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1271290010,\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":2016638777,\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":864953444,\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1559270965,\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedGifs\"},{\"id\":846868683,\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1364105629,\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":-346119674,\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"}],\"type\":\"Bool\"},{\"id\":2057376407,\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-432034325,\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"grouped\",\"type\":\"flags.0?true\"},{\"name\":\"thread\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedMessageLink\"},{\"id\":527021574,\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1056025023,\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":520357240,\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-39416522,\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":1224152952,\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"}],\"type\":\"Updates\"},{\"id\":-2091549254,\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":-1824339449,\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"password\",\"type\":\"flags.2?InputCheckPasswordSRP\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-712043766,\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1758168906,\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.TopPeers\"},{\"id\":451113900,\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-462373635,\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1137057461,\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":1782549861,\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":1685588756,\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1527873830,\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1649852357,\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.RecentStickers\"},{\"id\":958863608,\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1986437075,\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":1475442322,\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":457157256,\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1596029123,\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-122669393,\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"}],\"type\":\"messages.Chats\"},{\"id\":1678738104,\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-866424884,\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":-1907842680,\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1896289088,\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":363700068,\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-400399203,\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":258170395,\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":-468934396,\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-2023787330,\"method\":\"messages.getAllChats\",\"params\":[{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-333262899,\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":852135825,\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-1489903017,\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":991616823,\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":-692498958,\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1440257555,\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":-434028723,\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":619086221,\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":-1976353651,\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"payments.PaymentForm\"},{\"id\":611897804,\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-619695760,\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":818134173,\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"},{\"name\":\"tip_amount\",\"type\":\"flags.2?long\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1151208273,\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":578650699,\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":-667062079,\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":-436833542,\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":163765653,\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":-1876841625,\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"animated\",\"type\":\"flags.1?true\"},{\"name\":\"videos\",\"type\":\"flags.4?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"},{\"name\":\"software\",\"type\":\"flags.3?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-143257775,\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":-4795190,\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2041315650,\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":1369162417,\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":1430593449,\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":1124046573,\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1003664544,\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":788404002,\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":399855457,\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":-1295269440,\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1508562471,\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":662363518,\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":536919235,\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1691921240,\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":1375900482,\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":-219008246,\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":-269862909,\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":-845657435,\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":1120311183,\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":-1763259007,\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":870184064,\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":1302676017,\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-914493408,\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":-359881479,\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":82946729,\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-1174420133,\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-357180360,\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-2020263951,\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":1180140658,\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1683319225,\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_everyone\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1036054804,\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-356796084,\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":251759059,\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1881817312,\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-134016113,\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1347929239,\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":405695855,\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":755087855,\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1747789204,\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":896555914,\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-956147407,\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"Vector<FileHash>\"},{\"id\":749019089,\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":-294455398,\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":-1299661699,\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":1936088002,\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":-1986010339,\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":-1199522741,\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":-1865902923,\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":-1456907910,\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-202552205,\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":-1516022023,\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1305716726,\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1880182943,\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":-323339813,\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1072547679,\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":-2098076769,\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":-2092831552,\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-262453244,\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?int\"}],\"type\":\"account.Takeout\"},{\"id\":489050862,\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":486505992,\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":911373810,\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1398145746,\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1031349873,\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":585256482,\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":-2062238246,\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2119757468,\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1735311088,\"method\":\"help.getAppConfig\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":1862465352,\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":-966677240,\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":1784243458,\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":-760547348,\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"unpin\",\"type\":\"flags.1?true\"},{\"name\":\"pm_oneside\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1881204448,\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":2055154197,\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1043606090,\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-748624084,\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":59377875,\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":1723407216,\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":-1626880216,\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":-806076575,\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1398240377,\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":283795844,\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":1941660731,\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1848369232,\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":-554301545,\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1517917375,\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":-57811990,\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":-578472351,\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1817860919,\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-18000023,\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-1153722364,\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":1457130303,\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":1995661875,\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":899735650,\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":352892591,\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":1318675378,\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":-709817306,\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":1749536939,\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":472471681,\"method\":\"folders.deleteFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1932455680,\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":-170208392,\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":1079520178,\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":428848198,\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1322487515,\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":1336717624,\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-386636848,\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-130964977,\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-1892102881,\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":-750207932,\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":1491484525,\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304832784,\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-183077365,\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1111817116,\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":-1120369398,\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1504586518,\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":473805619,\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1697530880,\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":737414348,\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":-229175188,\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-953697477,\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"},{\"name\":\"format\",\"type\":\"flags.2?string\"},{\"name\":\"base_theme\",\"type\":\"flags.3?BaseTheme\"}],\"type\":\"Bool\"},{\"id\":-1919060949,\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Theme\"},{\"id\":1913054296,\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1210022402,\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"auth.LoginToken\"},{\"id\":-1783866140,\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":-392909491,\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":-1250643605,\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1952756306,\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":300429806,\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":1705865692,\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":-1200736242,\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":-1257951254,\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":779736953,\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":-241247891,\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilter>\"},{\"id\":-1566780372,\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":450142282,\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":-983318044,\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1421720550,\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":1646092192,\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":-1707717072,\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":85399130,\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":2127598753,\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1063816159,\"method\":\"help.getPromoData\",\"params\":[],\"type\":\"help.PromoData\"},{\"id\":505748629,\"method\":\"help.hidePromoData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-8744061,\"method\":\"phone.sendSignalingData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-589330937,\"method\":\"stats.getMegagroupStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-349483786,\"method\":\"account.getGlobalPrivacySettings\",\"params\":[],\"type\":\"GlobalPrivacySettings\"},{\"id\":517647042,\"method\":\"account.setGlobalPrivacySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"GlobalPrivacySettings\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":-183649631,\"method\":\"help.dismissSuggestion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"suggestion\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1935116200,\"method\":\"help.getCountriesList\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":584962828,\"method\":\"messages.getReplies\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1147761405,\"method\":\"messages.getDiscussionMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-147740172,\"method\":\"messages.readDiscussion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":698914348,\"method\":\"contacts.blockFromReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_message\",\"type\":\"flags.0?true\"},{\"name\":\"delete_history\",\"type\":\"flags.1?true\"},{\"name\":\"report_spam\",\"type\":\"flags.2?true\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1445996571,\"method\":\"stats.getMessagePublicForwards\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1226791947,\"method\":\"stats.getMessageStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"stats.MessageStats\"},{\"id\":-265962357,\"method\":\"messages.unpinAllMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1221445336,\"method\":\"phone.createGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"schedule_date\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-1322057861,\"method\":\"phone.joinGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"video_stopped\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"},{\"name\":\"invite_hash\",\"type\":\"flags.1?string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":1342404601,\"method\":\"phone.leaveGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"source\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":2067345760,\"method\":\"phone.inviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":2054648117,\"method\":\"phone.discardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1958458429,\"method\":\"phone.toggleGroupCallSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reset_invite_hash\",\"type\":\"flags.1?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_muted\",\"type\":\"flags.0?Bool\"}],\"type\":\"Updates\"},{\"id\":68699611,\"method\":\"phone.getGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupCall\"},{\"id\":-984033109,\"method\":\"phone.getGroupParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"ids\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":-1248003721,\"method\":\"phone.checkGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":1540419152,\"method\":\"messages.deleteChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-104078327,\"method\":\"messages.deletePhoneCallHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1140726259,\"method\":\"messages.checkHistoryImport\",\"params\":[{\"name\":\"import_head\",\"type\":\"string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":873008187,\"method\":\"messages.initHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"media_count\",\"type\":\"int\"}],\"type\":\"messages.HistoryImport\"},{\"id\":713433234,\"method\":\"messages.uploadImportedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-1271008444,\"method\":\"messages.startHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-1565154314,\"method\":\"messages.getExportedChatInvites\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":1937010524,\"method\":\"messages.getExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-1110823051,\"method\":\"messages.editExportedChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"request_needed\",\"type\":\"flags.3?Bool\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":1452833749,\"method\":\"messages.deleteRevokedExportedChatInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-731601877,\"method\":\"messages.deleteExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":958457583,\"method\":\"messages.getAdminsWithInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-553329330,\"method\":\"messages.getChatInviteImporters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"},{\"name\":\"q\",\"type\":\"flags.2?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_user\",\"type\":\"InputUser\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-1207017500,\"method\":\"messages.setHistoryTTL\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-91437323,\"method\":\"account.reportProfilePhoto\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"InputPhoto\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":187239529,\"method\":\"channels.convertToGigagroup\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":1573261059,\"method\":\"messages.checkHistoryImportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-248985848,\"method\":\"phone.toggleGroupCallRecord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"start\",\"type\":\"flags.0?true\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"video_portrait\",\"type\":\"flags.2?Bool\"}],\"type\":\"Updates\"},{\"id\":-1524155713,\"method\":\"phone.editGroupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"muted\",\"type\":\"flags.0?Bool\"},{\"name\":\"volume\",\"type\":\"flags.1?int\"},{\"name\":\"raise_hand\",\"type\":\"flags.2?Bool\"},{\"name\":\"video_stopped\",\"type\":\"flags.3?Bool\"},{\"name\":\"video_paused\",\"type\":\"flags.4?Bool\"},{\"name\":\"presentation_paused\",\"type\":\"flags.5?Bool\"}],\"type\":\"Updates\"},{\"id\":480685066,\"method\":\"phone.editGroupCallTitle\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-277077702,\"method\":\"phone.getGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":-425040769,\"method\":\"phone.exportGroupCallInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.0?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":563885286,\"method\":\"phone.toggleGroupCallStartSubscription\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"subscribed\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1451287362,\"method\":\"phone.startScheduledGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1465786252,\"method\":\"phone.saveDefaultGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-873829436,\"method\":\"phone.joinGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":475058500,\"method\":\"phone.leaveGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":676017721,\"method\":\"stickers.checkShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1303364867,\"method\":\"stickers.suggestShortName\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":1032708345,\"method\":\"bots.resetBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-481554986,\"method\":\"bots.getBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Vector<BotCommand>\"},{\"id\":-1828139493,\"method\":\"account.resetPassword\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1284770294,\"method\":\"account.declinePasswordReset\",\"params\":[],\"type\":\"Bool\"},{\"id\":221691769,\"method\":\"auth.checkRecoveryPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-700916087,\"method\":\"account.getChatThemes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-432283329,\"method\":\"messages.setChatTheme\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1095836780,\"method\":\"channels.viewSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-333377601,\"method\":\"channels.getSponsoredMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":745510839,\"method\":\"messages.getMessageReadParticipants\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1240514025,\"method\":\"messages.getSearchResultsCalendar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":1855292323,\"method\":\"messages.getSearchResultsPositions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":2145904661,\"method\":\"messages.hideChatJoinRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-528091926,\"method\":\"messages.hideAllChatJoinRequests\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"}],\"type\":\"Updates\"},{\"id\":-1323389022,\"method\":\"messages.toggleNoForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-855777386,\"method\":\"messages.saveDefaultSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"send_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":231174382,\"method\":\"channels.getSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-1081501024,\"method\":\"account.setAuthorizationTTL\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1089766498,\"method\":\"account.changeAuthorizationSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.0?Bool\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Bool\"},{\"id\":913655003,\"method\":\"channels.deleteParticipantHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":627641572,\"method\":\"messages.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?string\"}],\"type\":\"Updates\"},{\"id\":-1950707482,\"method\":\"messages.getMessagesReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":-521245833,\"method\":\"messages.getMessageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?string\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":335875750,\"method\":\"messages.setChatAvailableReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"available_reactions\",\"type\":\"Vector<string>\"}],\"type\":\"Updates\"},{\"id\":417243308,\"method\":\"messages.getAvailableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":-647969580,\"method\":\"messages.setDefaultReaction\",\"params\":[{\"name\":\"reaction\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":617508334,\"method\":\"messages.translateText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"text\",\"type\":\"flags.1?string\"},{\"name\":\"from_lang\",\"type\":\"flags.2?string\"},{\"name\":\"to_lang\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":-396644838,\"method\":\"messages.getUnreadReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-2099097129,\"method\":\"messages.readReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-1963375804,\"method\":\"contacts.resolvePhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":447879488,\"method\":\"phone.getGroupCallStreamChannels\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":-558650433,\"method\":\"phone.getGroupCallStreamRtmpUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"revoke\",\"type\":\"Bool\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":276705696,\"method\":\"messages.searchSentMedia\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":385663691,\"method\":\"messages.getAttachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"AttachMenuBots\"},{\"id\":1998676370,\"method\":\"messages.getAttachMenuBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":451818415,\"method\":\"messages.toggleBotInAttachMenu\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":262163967,\"method\":\"messages.requestWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_bot_menu\",\"type\":\"flags.4?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"start_param\",\"type\":\"flags.3?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"WebViewResult\"},{\"id\":-768945848,\"method\":\"messages.prolongWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"Bool\"},{\"id\":1790652275,\"method\":\"messages.requestSimpleWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":172168437,\"method\":\"messages.sendWebViewResultMessage\",\"params\":[{\"name\":\"bot_query_id\",\"type\":\"string\"},{\"name\":\"result\",\"type\":\"InputBotInlineResult\"}],\"type\":\"WebViewMessageSent\"},{\"id\":-603831608,\"method\":\"messages.sendWebViewData\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"button_text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1157944655,\"method\":\"bots.setBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Bool\"},{\"id\":-1671369944,\"method\":\"bots.getBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotMenuButton\"},{\"id\":-510647672,\"method\":\"account.getSavedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1038768899,\"method\":\"account.saveRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"account.SavedRingtone\"},{\"id\":-2095414366,\"method\":\"account.uploadRingtone\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":2021942497,\"method\":\"bots.setBotBroadcastDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":-1839281686,\"method\":\"bots.setBotGroupDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"}]},\"layer\":140} as {\r\n  MTProto: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  API: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  layer: number,\r\n};","export default function intToUint(val: number) {\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\n}\n","import bigInt from \"big-integer\";\nimport intToUint from \"../number/intToUint\";\n\nexport default function longFromInts(high: number, low: number): string {\n  high = intToUint(high), low = intToUint(low);\n  return bigInt(high).shiftLeft(32).add(bigInt(low)).toString(10);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Schema, { MTProtoConstructor } from './schema';\nimport { JSONValue } from '../../layer';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport gzipUncompress from '../../helpers/gzipUncompress';\nimport bigInt from 'big-integer';\nimport longFromInts from '../../helpers/long/longFromInts';\n\n// @ts-ignore\n/* import {BigInteger} from 'jsbn';\n\nexport function bigint(num: number) {\n  return new BigInteger(num.toString(16), 16);\n}\n\nfunction bigStringInt(strNum: string) {\n  return new BigInteger(strNum, 10)\n} */\n\nconst boolFalse = +Schema.API.constructors.find((c) => c.predicate === 'boolFalse').id;\nconst boolTrue = +Schema.API.constructors.find((c) => c.predicate === 'boolTrue').id;\nconst vector = +Schema.API.constructors.find((c) => c.predicate === 'vector').id;\nconst gzipPacked = +Schema.MTProto.constructors.find((c) => c.predicate === 'gzip_packed').id;\n\n//console.log('boolFalse', boolFalse === 0xbc799737);\n\nclass TLSerialization {\n  private maxLength = 2048; // 2Kb\n  private offset = 0; // in bytes\n  private mtproto = false;\n  private debug = false;//Modes.debug;\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\n    this.mtproto = options.mtproto || false;\n    this.createBuffer();\n  }\n\n  public createBuffer() {\n    this.buffer = new ArrayBuffer(this.maxLength);\n    this.intView = new Int32Array(this.buffer);\n    this.byteView = new Uint8Array(this.buffer);\n  }\n\n  public getArray() {\n    const resultBuffer = new ArrayBuffer(this.offset);\n\n    //let perf = performance.now();\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\n    //console.log('perf uint8', performance.now() - perf);\n\n    //perf = performance.now();\n    const resultInt32 = new Int32Array(resultBuffer);\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\n    //console.log('perf int32', performance.now() - perf);\n\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\n      console.error(resultUint8, resultInt32);\n    } */\n  \n    return resultInt32;\n  }\n\n  public getBuffer() {\n    return this.getArray().buffer;\n  }\n\n  public getBytes(typed: true): Uint8Array;\n  public getBytes(typed?: false): number[];\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\n    if(typed) {\n      const resultBuffer = new ArrayBuffer(this.offset);\n      const resultArray = new Uint8Array(resultBuffer);\n  \n      resultArray.set(this.byteView.subarray(0, this.offset));\n  \n      return resultArray;\n    }\n  \n    const bytes: number[] = new Array(this.offset);\n    for(let i = 0; i < this.offset; i++) {\n      bytes[i] = this.byteView[i];\n    }\n    return bytes;\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public checkLength(needBytes: number) {\n    if(this.offset + needBytes < this.maxLength) {\n      return;\n    }\n  \n    //console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\n    const previousBuffer = this.buffer;\n    //const previousByteView = this.byteView;\n    const previousArray = new Int32Array(previousBuffer);\n    \n    this.createBuffer();\n    \n    new Int32Array(this.buffer).set(previousArray);\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32), \n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\n  }\n\n  public writeInt(i: number, field: string) {\n    this.debug && console.log('>>>', i.toString(16), i, field);\n  \n    const offset = this.offset / 4;\n    this.checkLength(4);\n    this.intView[offset] = i;\n    this.offset += 4;\n\n    return offset;\n  }\n  \n  public storeInt(i: number, field?: string) {\n    return this.writeInt(i, (field || '') + ':int');\n  }\n  \n  public storeBool(i: boolean, field?: string) {\n    if(i) {\n      this.writeInt(boolTrue, (field || '') + ':bool');\n    } else {\n      this.writeInt(boolFalse, (field || '') + ':bool');\n    }\n  }\n  \n  public storeLongP(iHigh: number, iLow: number, field?: string) {\n    this.writeInt(iLow, (field || '') + ':long[low]');\n    this.writeInt(iHigh, (field || '') + ':long[high]');\n  }\n\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\n    if(Array.isArray(sLong)) {\n      if(sLong.length === 2) {\n        return this.storeLongP(sLong[0], sLong[1], field);\n      } else {\n        return this.storeIntBytes(sLong, 64, field);\n      }\n    }\n  \n    if(typeof sLong !== 'string') {\n      sLong = sLong ? sLong.toString() : '0';\n    }\n\n    const {quotient, remainder} = bigInt(sLong).divmod(0x100000000);\n    const high = quotient.toJSNumber();\n    const low = remainder.toJSNumber();\n\n    this.writeInt(low, (field || '') + ':long[low]');\n    this.writeInt(high, (field || '') + ':long[high]');\n  }\n  \n  public storeDouble(f: any, field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n  \n    doubleView[0] = f;\n  \n    this.writeInt(intView[0], (field || '') + ':double[low]');\n    this.writeInt(intView[1], (field || '') + ':double[high]');\n  }\n  \n  public storeString(s: string, field?: string) {\n    this.debug && console.log('>>>', s, (field || '') + ':string');\n  \n    if(s === undefined) {\n      s = '';\n    }\n    const sUTF8 = unescape(encodeURIComponent(s));\n  \n    this.checkLength(sUTF8.length + 8);\n  \n    const len = sUTF8.length;\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n    for(let i = 0; i < len; i++) {\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\n    }\n  \n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n  \n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    } else if(bytes === undefined) {\n      bytes = [];\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\n  \n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\n    const len = (bytes as Uint8Array).length;\n    this.checkLength(len + 8);\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n  \n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  \n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n  \n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = (bytes as Uint8Array).length;\n    if((bits % 32) || (len * 8) !== bits) {\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\n      console.error(error, bytes, field);\n      throw error;\n    }\n  \n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\n    this.checkLength(len);\n  \n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  }\n  \n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = bytes.length;\n  \n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\n    this.checkLength(len);\n  \n    this.byteView.set(bytes, this.offset);\n    this.offset += len;\n  }\n  \n  public storeMethod(methodName: string, params: any) {\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const methodData = schema.methods.find((m) => m.method === methodName);\n\n    if(!methodData) {\n      throw new Error('No method ' + methodName + ' found');\n    }\n  \n    this.storeInt(methodData.id, methodName + '[id]');\n\n    const pFlags = params.pFlags || params; // * support pFlags, though am not expecting it to be there\n    const flagsOffsets: {[paramName: string]: number} = {};\n    //console.log('storeMethod', len, methodData);\n    for(const param of methodData.params) {\n      let type = param.type;\n\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        if(!(params[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags[param.name] : params[param.name] !== undefined) {\n            //console.log('storeMethod autocompleting', methodName, param.name, params[param.name], type);\n            params[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n        \n        //console.log('storeMethod', methodName, fieldBit, params[fieldBit[0]], params, param, condType, !!(params[fieldBit[0]] & (1 << +fieldBit[1])));\n        type = condType[1];\n      }\n      \n      //console.log('storeMethod', methodName, param.name, params[param.name], type);\n      const result = this.storeObject(params[param.name], type, methodName + '[' + param.name + ']');\n\n      if(type === '#') {\n        params[param.name] = params[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(let paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = params[paramName];\n    }\n\n    return methodData.type;\n  }\n  \n  public storeObject(obj: any, type: string, field?: string) {\n    //console.log('storeObject', obj, type, field, this.offset, this.getBytes(true).hex);\n    switch(type) {\n      case '#':\n        obj = obj || 0;\n      case 'int':\n        return this.storeInt(obj, field);\n      case 'long':\n        return this.storeLong(obj, field);\n      case 'int128':\n        return this.storeIntBytes(obj, 128, field);\n      case 'int256':\n        return this.storeIntBytes(obj, 256, field);\n      case 'int512':\n        return this.storeIntBytes(obj, 512, field);\n      case 'string':\n        return this.storeString(obj, field);\n      case 'bytes':\n        return this.storeBytes(obj, field);\n      case 'double':\n        return this.storeDouble(obj, field);\n      case 'Bool':\n        return this.storeBool(obj, field);\n      case 'true':\n        return\n    }\n  \n    if(Array.isArray(obj)) {\n      if(type.substr(0, 6) === 'Vector') {\n        this.writeInt(vector, field + '[id]');\n      } else if (type.substr(0, 6) !== 'vector') {\n        throw new Error('Invalid vector type ' + type);\n      }\n\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      this.writeInt(obj.length, field + '[count]');\n      for(let i = 0; i < obj.length; i++) {\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\n      }\n\n      return true;\n    } else if (type.substr(0, 6).toLowerCase() === 'vector') {\n      throw new Error('Invalid vector object');\n    }\n    \n    if(!isObject(obj)) {\n      throw new Error('Invalid object for type ' + type);\n    }\n  \n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const predicate = obj['_'];\n    let isBare = false;\n    const constructorData: MTProtoConstructor = schema.constructors.find((c) => c.predicate === predicate);\n  \n    if(isBare = (type.charAt(0) === '%')) {\n      type = type.substr(1);\n    }\n\n    if(!constructorData) {\n      throw new Error('No predicate ' + predicate + ' found');\n    }\n  \n    if(predicate === type) {\n      isBare = true;\n    }\n  \n    if(!isBare) {\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\n    }\n\n    const pFlags = obj.pFlags;\n    const flagsOffsets: {[paramName: string]: number} = {};\n    //console.log('storeObject', len, constructorData);\n    for(const param of constructorData.params) {\n      let type = param.type;\n\n      //console.log('storeObject', param, type);\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        //console.log('storeObject fieldBit', fieldBit, obj[fieldBit[0]]);\n\n        if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags && pFlags[param.name] : obj[param.name] !== undefined) {\n            //console.log('storeObject autocompleting', param.name, obj[param.name], type);\n            obj[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n\n        type = condType[1];\n      }\n      //console.log('storeObject', param, type);\n  \n      const result = this.storeObject(obj[param.name], type, field + '[' + predicate + '][' + param.name + ']');\n\n      if(type === '#') {\n        obj[param.name] = obj[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(let paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = obj[paramName];\n    }\n  \n    return constructorData.type;\n  }\n}\n\nclass TLDeserialization<FetchLongAs extends Long> {\n  private offset = 0; // in bytes\n  private override: {[key: string]: (result: any, field: string) => void};\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  // this.debug = \n  private mtproto: boolean = false;\n  private debug: boolean;\n\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\n    //buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\n    if(buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.intView = new Int32Array(buffer);\n      this.byteView = new Uint8Array(this.buffer);\n    } else {\n      this.buffer = buffer.buffer;\n      this.intView = new Int32Array(buffer.buffer);\n      this.byteView = buffer;\n    }\n\n    //console.log(this.intView);\n\n    this.override = options.override || {};\n    this.mtproto = !!options.mtproto;\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\n  }\n\n  /* public setMtproto(mtproto: boolean) {\n    this.mtproto = mtproto;\n  } */\n\n  private readInt(field: string) {\n    //if(this.offset >= this.intView.length * 4) {\n    if((this.byteView.length - this.offset) < 4) {\n      console.error(this.byteView, this.offset);\n      throw new Error('Nothing to fetch: ' + field);\n    }\n  \n    const i = this.intView[this.offset / 4];\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\n  \n    this.debug/*  || field.includes('[dialog][read_outbox_max_id]') */ \n      && console.log('<<<', i.toString(16), i, field, \n      this.byteView.slice(this.offset - 16, this.offset + 16), \n      bytesToHex(this.byteView.slice(this.offset - 16, this.offset + 16)));\n  \n    this.offset += 4;\n  \n    return i;\n  }\n  \n  public fetchInt(field?: string) {\n    return this.readInt((field || '') + ':int');\n  }\n  \n  public fetchDouble(field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n  \n    intView[0] = this.readInt((field || '') + ':double[low]'),\n    intView[1] = this.readInt((field || '') + ':double[high]');\n  \n    return doubleView[0];\n  }\n  \n  public fetchLong(field?: string): FetchLongAs {\n    const iLow = this.readInt((field || '') + ':long[low]');\n    const iHigh = this.readInt((field || '') + ':long[high]');\n  \n    //const longDec = bigint(iHigh).shiftLeft(32).add(bigint(iLow)).toString();\n    const longDec = longFromInts(iHigh, iLow);\n\n    if(!this.mtproto) {\n      const num = +longDec;\n      if(Number.isSafeInteger(num)) {\n        // @ts-ignore\n        return num;\n      }\n    }\n  \n    // @ts-ignore\n    return longDec;\n  }\n  \n  public fetchBool(field?: string): boolean {\n    const i = this.readInt((field || '') + ':bool');\n    if(i === boolTrue) {\n      return true;\n    } else if(i === boolFalse) {\n      return false;\n    }\n\n    this.offset -= 4;\n    return this.fetchObject('Object', field);\n  }\n  \n  public fetchString(field?: string): string {\n    let len = this.byteView[this.offset++];\n  \n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n  \n    let sUTF8 = '';\n    for(let i = 0; i < len; i++) {\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\n    }\n  \n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n  \n    let s: string;\n    try {\n      s = decodeURIComponent(escape(sUTF8));\n    } catch (e) {\n      s = sUTF8;\n    }\n  \n    this.debug && console.log('<<<', s, (field || '') + ':string');\n  \n    return s;\n  }\n  \n  public fetchBytes(field?: string) {\n    let len = this.byteView[this.offset++];\n  \n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n  \n    const bytes = this.byteView.subarray(this.offset, this.offset + len);\n    this.offset += len;\n  \n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\n  \n    return bytes;\n  }\n  \n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\n    if(bits % 32) {\n      throw new Error('Invalid bits: ' + bits);\n    }\n  \n    const len = bits / 8;\n    if(typed) {\n      const result = this.byteView.subarray(this.offset, this.offset + len);\n      this.offset += len;\n      return result;\n    }\n  \n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\n  \n    return bytes;\n  }\n  \n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\n    if(len === false) {\n      len = this.readInt((field || '') + '_length');\n      if(len > this.byteView.byteLength) {\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\n      }\n    }\n  \n    if(typed) {\n      const bytes = new Uint8Array(len);\n      bytes.set(this.byteView.subarray(this.offset, this.offset + len));\n      this.offset += len;\n      return bytes;\n    }\n  \n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\n  \n    return bytes;\n  }\n\n  private fetchVector(type: string, field?: string) {\n    const len = this.readInt(field + '[count]');\n    const result: any[] = new Array(len);\n    if(len > 0) {\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      for(let i = 0; i < len; ++i) {\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\n      }\n    }\n  \n    return result;\n  }\n  \n  public fetchObject(type: string, field?: string): any {\n    switch(type) {\n      case '#':\n      case 'int':\n        return this.fetchInt(field);\n      case 'long':\n        return this.fetchLong(field);\n      case 'int128':\n        return this.fetchIntBytes(128, true, field);\n      case 'int256':\n        return this.fetchIntBytes(256, true, field);\n      case 'int512':\n        return this.fetchIntBytes(512, true, field);\n      case 'string':\n        return this.fetchString(field);\n      case 'bytes':\n        return this.fetchBytes(field);\n      case 'double':\n        return this.fetchDouble(field);\n      case 'Bool':\n        return this.fetchBool(field);\n      case 'true':\n        return true;\n    }\n  \n    field = field || type || 'Object';\n  \n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\n      return this.fetchVector(type, field);\n    }\n  \n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    let constructorData: MTProtoConstructor = null;\n    let fallback = false;\n  \n    if(type.charAt(0) === '%') {\n      const checkType = type.substr(1);\n      constructorData = schema.constructors.find((c) => c.type === checkType);\n      if(!constructorData) {\n        throw new Error('Constructor not found for type: ' + type);\n      }\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\n      constructorData = schema.constructors.find((c) => c.predicate === type);\n      if(!constructorData) {\n        throw new Error('Constructor not found for predicate: ' + type);\n      }\n    } */ else {\n      const constructorCmp = this.readInt(field + '[id]');\n  \n      if(constructorCmp === gzipPacked) { // Gzip packed\n        const compressed = this.fetchBytes(field + '[packed_string]');\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\n  \n        return newDeserializer.fetchObject(type, field);\n      }\n\n      if(constructorCmp === vector) {\n        return this.fetchVector(type, field);\n      }\n  \n      let index = schema.constructorsIndex;\n      if(!index) {\n        schema.constructorsIndex = index = {};\n        for(let i = 0, len = schema.constructors.length; i < len; i++) {\n          index[schema.constructors[i].id] = i;\n        }\n      }\n\n      const i = index[constructorCmp];\n      if(i !== undefined) {\n        constructorData = schema.constructors[i];\n      }\n  \n      if(!constructorData && this.mtproto) {\n        const schemaFallback = Schema.API;\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; i++) {\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\n            constructorData = schemaFallback.constructors[i];\n  \n            delete this.mtproto;\n            fallback = true;\n            break;\n          }\n        }\n      }\n\n      if(!constructorData) {\n        console.error('Constructor not found:', constructorCmp);\n        \n        let int1: number, int2: number;\n        try {\n          int1 = this.fetchInt(field);\n          int2 = this.fetchInt(field);\n        } catch(err) {\n\n        }\n\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\n      }\n    }\n  \n    const predicate = constructorData.predicate;\n  \n    const result: any = {'_': predicate};\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\n    if(this.override[overrideKey]) {\n      this.override[overrideKey](result, field + '[' + predicate + ']');\n    } else {\n      for(let i = 0, len = constructorData.params.length; i < len; i++) {\n        const param = constructorData.params[i];\n        let type = param.type;\n\n        if(type === '#' && result.pFlags === undefined) {\n          result.pFlags = {};\n        }\n\n        const isCond = (type.indexOf('?') !== -1);\n        if(isCond) {\n          const condType = type.split('?');\n          const fieldBit = condType[0].split('.');\n\n          if(!(result[fieldBit[0]] & (1 << +fieldBit[1]))) {\n            //console.log('fetchObject bad', constructorData, result[fieldBit[0]], fieldBit);\n            continue;\n          }\n\n          //console.log('fetchObject good', constructorData, result[fieldBit[0]], fieldBit);\n\n          type = condType[1];\n        }\n  \n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\n  \n        if(isCond && type === 'true') {\n          result.pFlags[param.name] = value;\n        } else {\n          /* if(param.name === 'read_outbox_max_id') {\n            console.log(result, param.name, value, field + '[' + predicate + '][' + param.name + ']');\n          } */\n            \n          result[param.name] = value;\n        }\n      }\n    }\n  \n    if(fallback) {\n      this.mtproto = true;\n    }\n\n    if(type === 'JSONValue') {\n      return this.formatJSONValue(result);\n    }\n  \n    return result;\n  }\n\n  private formatJSONValue(jsonValue: JSONValue): any {\n    if(!jsonValue._) return jsonValue;\n    switch(jsonValue._) {\n      case 'jsonNull':\n        return null;\n      case 'jsonObject': {\n        const out: any = {};\n        const objectValues = jsonValue.value;\n        for(let i = 0, length = objectValues.length; i < length; ++i) {\n          const objectValue = objectValues[i];\n          out[objectValue.key] = this.formatJSONValue(objectValue.value);\n        }\n        return out;\n      }\n      default:\n        return jsonValue.value;\n    }\n  }\n  \n  public getOffset() {\n    return this.offset;\n  }\n\n  public setOffset(offset: number) {\n    this.offset = offset;\n  }\n  \n  /* public fetchEnd() {\n    if(this.offset !== this.byteView.length) {\n      throw new Error('Fetch end with non-empty buffer');\n    }\n\n    return true;\n  } */\n}\n\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\nexport { TLDeserialization, TLSerialization };\n","//export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\n\n// @ts-ignore\nimport pako from 'pako/dist/pako_inflate.min.js';\n// import dT from './dT';\n\n//export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\nexport default function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\n  // console.log(dT(), 'Gzip uncompress start');\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\n  // console.log(dT(), 'Gzip uncompress finish'/* , result */);\n  return result;\n}\n","import randomize from \"../array/randomize\";\nimport bufferConcats from \"./bufferConcats\";\n\nexport default function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\n  bytes: T, \n  blockSize: number = 16, \n  zeroes?: boolean, \n  blockSizeAsTotalLength = false, \n  prepend = false\n): T {\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\n  if(needPadding > 0 && needPadding < blockSize) {\n    ////console.log('addPadding()', len, blockSize, needPadding);\n    const padding = new Uint8Array(needPadding);\n    if(zeroes) {\n      for(let i = 0; i < needPadding; ++i) {\n        padding[i] = 0;\n      }\n    } else {\n      randomize(padding);\n    }\n\n    if(bytes instanceof ArrayBuffer) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\n    } else if(bytes instanceof Uint8Array) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\n    } else {\n      // @ts-ignore\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\n    }\n  }\n\n  return bytes;\n}\n","import bigInt from 'big-integer';\n\nexport function bigIntFromBytes(bytes: Uint8Array | number[], base = 256) {\n  return bigInt.fromArray(bytes instanceof Uint8Array ? [...bytes] : bytes, base);\n}\n\nexport function bigIntToBytes(bigInt: bigInt.BigInteger) {\n  return new Uint8Array(bigInt.toArray(256).value);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { TLDeserialization, TLSerialization } from './tl_utils';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport sessionStorage from '../sessionStorage';\nimport Schema from './schema';\nimport { NetworkerFactory } from './networkerFactory';\nimport { logger, LogTypes } from '../logger';\nimport { InvokeApiOptions } from '../../types';\nimport longToBytes from '../../helpers/long/longToBytes';\nimport MTTransport from './transports/transport';\nimport { nextRandomUint, randomLong } from '../../helpers/random';\nimport App from '../../config/app';\nimport DEBUG from '../../config/debug';\nimport Modes from '../../config/modes';\nimport noop from '../../helpers/noop';\n\n                        \nimport HTTP from './transports/http';\n          \n\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport bigInt from 'big-integer';\nimport { ConnectionStatus } from './connectionStatus';\nimport ctx from '../../environment/ctx';\nimport bufferConcats from '../../helpers/bytes/bufferConcats';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport convertToUint8Array from '../../helpers/bytes/convertToUint8Array';\nimport isObject from '../../helpers/object/isObject';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport sortLongsArray from '../../helpers/long/sortLongsArray';\nimport randomize from '../../helpers/array/randomize';\nimport deferredPromise, { CancellablePromise } from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\nimport { getEnvironment } from '../../environment/utils';\nimport { TimeManager } from './timeManager';\n\n//console.error('networker included!', new Error().stack);\n\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\n  noResponse: true, // http_wait\n  longPoll: true,\n  \n  notContentRelated: true, // ACK\n  noSchedule: true,\n  // withResult: true,\n  messageId: MTLong,\n}>;\n\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\n  msg_id: MTLong,\n  seq_no: number,\n  body?: Uint8Array | number[],\n  isAPI?: boolean,\n  // only these four are important\n\n  acked?: boolean,\n\n  deferred?: CancellablePromise<void>,\n\n  container?: boolean,\n  inner?: MTLong[],\n\n  // below - options\n\n  notContentRelated?: true,\n  noSchedule?: true,\n\n  resultType?: string,\n\n  longPoll?: true,\n  noResponse?: true, // only with http (http_wait for longPoll)\n};\n\nconst DRAIN_TIMEOUT = 10000;\nconst delays: {\n  [k in 'client' | 'file']: {\n    disconnectDelayMin: number,\n    disconnectDelayMax: number,\n    pingInterval: number,\n    pingMaxTime: number,\n    connectionTimeout: number\n  }\n} = {\n  client: {\n    disconnectDelayMin: 7,\n    disconnectDelayMax: 20,\n    pingInterval: 2000,\n    pingMaxTime: 5,\n    connectionTimeout: 5000\n  },\n  file: {\n    disconnectDelayMin: 10,\n    disconnectDelayMax: 24,\n    pingInterval: 3000,\n    pingMaxTime: 7,\n    connectionTimeout: 7500\n  }\n};\nconst RESEND_OPTIONS: MTMessageOptions = {\n  noSchedule: true,\n  notContentRelated: true\n};\nlet invokeAfterMsgConstructor: number;\n\nexport default class MTPNetworker {\n  private authKeyUint8: Uint8Array;\n\n  public isFileNetworker: boolean;\n  private isFileUpload: boolean;\n  private isFileDownload: boolean;\n\n  private lastServerMessages: Array<MTLong> = [];\n\n  private sentMessages: {\n    [msgId: MTLong]: MTMessage\n  } = {};\n\n  private pendingMessages: {[msgId: MTLong]: number} = {};\n  private pendingAcks: Array<MTLong> = [];\n  private pendingResendReq: MTLong[] = [];\n  // private pendingResendAnsReq: MTLong[] = [];\n  public connectionInited: boolean;\n\n  private nextReqTimeout: number;\n  private nextReq: number = 0;\n  \n                          \n  private longPollInterval: number;\n  private longPollPending: number;\n  private checkConnectionRetryAt: number;\n  private checkConnectionTimeout: number;\n  private checkConnectionPeriod = 0;\n  private sleepAfter: number;\n  private offline = false;\n  private sendingLongPoll: boolean;\n            \n\n  private seqNo: number;\n  private prevSessionId: Uint8Array;\n  private sessionId: Uint8Array;\n  private serverSalt: Uint8Array;\n\n  private lastResendReq: {\n    reqMsgId: MTLong,\n    msgIds: MTPNetworker['pendingResendReq']\n  };\n  // private lastResendAnsReq: MTPNetworker['lastResendReq'];\n\n  private name: string;\n  private log: ReturnType<typeof logger>;\n  \n  public isOnline = false;\n  private status: ConnectionStatus = ConnectionStatus.Closed;\n  private lastResponseTime = 0;\n\n  private debug = DEBUG /* && false */ || Modes.debug;\n\n  public activeRequests = 0;\n\n  public onDrain: () => void;\n  private onDrainTimeout: number;\n\n  public transport: MTTransport;\n\n                        \n  private pingDelayDisconnectDeferred: CancellablePromise<string>;\n  private pingPromise: Promise<void>;\n  // private pingInterval: number;\n  private lastPingTime: number;\n  private lastPingDelayDisconnectId: string;\n            \n  //public onConnectionStatusChange: (online: boolean) => void;\n\n  //private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\n\n  private delays: typeof delays[keyof typeof delays];\n  // private getNewTimeOffset: boolean;\n\n  constructor(\n    private networkerFactory: NetworkerFactory,\n    private timeManager: TimeManager,\n    public dcId: number, \n    private authKey: Uint8Array, \n    private authKeyId: Uint8Array,\n    serverSalt: Uint8Array, \n    options: InvokeApiOptions = {}\n  ) {\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\n    this.serverSalt = convertToUint8Array(serverSalt);\n\n    this.isFileUpload = !!options.fileUpload;\n    this.isFileDownload = !!options.fileDownload;\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\n    this.delays = this.isFileNetworker ? delays.file : delays.client;\n\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\n    this.name = 'NET-' + dcId + suffix;\n    //this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\n    this.log = logger(this.name, LogTypes.Log | LogTypes.Debug | LogTypes.Error | LogTypes.Warn, undefined);\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\n\n    // Test resend after bad_server_salt\n    /* if(this.dcId === 2 && this.upload) {\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\n      this.serverSalt[0] = 0;\n    } */\n\n    this.updateSession();\n\n    // if(!NetworkerFactory.offlineInited) {\n    //   NetworkerFactory.offlineInited = true;\n    //   /* rootScope.offline = true\n    //   rootScope.offlineConnecting = true */\n    // }\n  }\n\n  private updateSession() {\n    this.seqNo = 0;\n    this.prevSessionId = this.sessionId;\n    this.sessionId = randomize(new Uint8Array(8));\n  }\n\n  /* private clearContainers() {\n    for(const messageId in this.sentMessages) {\n      const message = this.sentMessages[messageId];\n      if(message.container) {\n        delete this.sentMessages[messageId];\n      }\n    }\n  } */\n\n  private updateSentMessage(sentMessageId: string) {\n    const sentMessage = this.sentMessages[sentMessageId];\n    if(!sentMessage) {\n      return false;\n    }\n\n    if(sentMessage.container) {\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\n        if(!innerSentMessage) {\n          sentMessage.inner.splice(idx, 1);\n        } else {\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\n        }\n      });\n    }\n  \n    sentMessage.msg_id = this.timeManager.generateId();\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated || sentMessage.container);\n\n    if(this.debug) {\n      this.log(`updateSentMessage, old=${sentMessageId}, new=${sentMessage.msg_id}`);\n    }\n\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\n    delete this.sentMessages[sentMessageId];\n  \n    return sentMessage;\n  }\n\n  private generateSeqNo(notContentRelated?: boolean) {\n    let seqNo = this.seqNo * 2;\n  \n    if(!notContentRelated) {\n      seqNo++;\n      this.seqNo++;\n    }\n  \n    return seqNo;\n  }\n\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n  \n    serializer.storeMethod(method, params);\n  \n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n  \n    if(Modes.debug) {\n      this.log('MT call', method, params, messageId, seqNo);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n  \n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n    serializer.storeObject(object, 'Object');\n  \n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo(options.notContentRelated);\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n  \n    if(Modes.debug) {\n      this.log('MT message', object, messageId, seqNo);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\n    const serializer = new TLSerialization(options);\n  \n    if(!this.connectionInited) { // this will call once for each new session\n      ///////this.log('Wrap api call !this.connectionInited');\n\n      const invokeWithLayer = Schema.API.methods.find((m) => m.method === 'invokeWithLayer');\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\n\n      // @ts-ignore\n      serializer.storeInt(Schema.layer, 'layer');\n  \n      const initConnection = Schema.API.methods.find((m) => m.method === 'initConnection');\n      if(!initConnection) throw new Error('no initConnection!');\n  \n      serializer.storeInt(+initConnection.id, 'initConnection');\n      serializer.storeInt(0x0, 'flags');\n      serializer.storeInt(App.id, 'api_id');\n      serializer.storeString(getEnvironment().USER_AGENT || 'Unknown UserAgent', 'device_model');\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\n      serializer.storeString(App.langPack, 'lang_pack');\n      serializer.storeString(this.networkerFactory.language, 'lang_code');\n      //serializer.storeInt(0x0, 'proxy');\n      /* serializer.storeMethod('initConnection', {\n        'flags': 0,\n        'api_id': App.id,\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\n        'system_version': navigator.platform || 'Unknown Platform',\n        'app_version': App.version,\n        'system_lang_code': navigator.language || 'en',\n        'lang_pack': '',\n        'lang_code': navigator.language || 'en'\n      }); */\n    }\n  \n    if(options.afterMessageId) {\n      if(invokeAfterMsgConstructor === undefined) {\n        const m = Schema.API.methods.find((m) => m.method === 'invokeAfterMsg');\n        invokeAfterMsgConstructor = m ? +m.id : 0;\n      }\n      \n      if(invokeAfterMsgConstructor) {\n        // if(this.debug) {\n        //   this.log('invokeApi: store invokeAfterMsg');\n        // }\n    \n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\n        serializer.storeLong(options.afterMessageId, 'msg_id');\n      } else {\n        this.log.error('no invokeAfterMsg!');\n      }\n    }\n  \n    options.resultType = serializer.storeMethod(method, params);\n\n    /* if(method === 'account.updateNotifySettings') {\n      this.log('api call body:', serializer.getBytes(true));\n    } */\n  \n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true),\n      isAPI: true\n    };\n  \n    if(Modes.debug/*  || true */) {\n      this.log('Api call', method, message, params, options);\n    } else if(this.debug) {\n      this.log('Api call', method, params, options);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n\n  public changeTransport(transport?: MTTransport) {\n    const oldTransport = this.transport;\n    if(oldTransport) {\n      oldTransport.destroy();\n\n      if(this.nextReqTimeout) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n      }\n\n      this.connectionInited = false;\n\n                              \n      if(this.longPollInterval !== undefined) {\n        clearInterval(this.longPollInterval);\n        this.longPollInterval = undefined;\n      }\n\n      this.clearCheckConnectionTimeout();\n                \n    }\n\n    this.log('change transport', transport, oldTransport);\n\n                          \n    this.clearPingDelayDisconnect();\n\n    // if(this.pingInterval !== undefined) {\n    //   clearInterval(this.pingInterval);\n    //   this.pingInterval = undefined;\n    // }\n\n    // this.clearPing();\n              \n\n    this.transport = transport;\n    if(!transport) {\n      return;\n    }\n\n    transport.networker = this;\n\n                            \n                          \n    if(transport instanceof HTTP) {\n              \n      this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\n      this.checkLongPoll();\n      this.checkConnection('changed transport');\n                          \n    }\n              \n              \n\n                          \n    // * handle outcoming dead socket, server will close the connection\n    if((transport as TcpObfuscated).connection) {\n      // this.sendPingDelayDisconnect();\n\n      if(transport.connected) {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n      }\n\n      // this.pingInterval = ctx.setInterval(this.sendPing, PING_INTERVAL);\n      // this.sendPing();\n    }\n              \n\n    this.resend();\n  }\n\n  public destroy() {\n    this.log('destroy');\n  }\n\n  public forceReconnectTimeout() {\n    if((this.transport as TcpObfuscated).reconnect) {\n      (this.transport as TcpObfuscated).reconnect();\n    } else {\n      this.resend();\n    }\n  }\n\n  public forceReconnect() {\n    if((this.transport as TcpObfuscated).forceReconnect) {\n      (this.transport as TcpObfuscated).forceReconnect();\n    } else {\n      this.checkConnection('force reconnect');\n    }\n  }\n\n  /* private clearPing() {\n    if(this.pingPromise) {\n      this.pingPromise = undefined;\n    }\n\n    this.lastPingTime = undefined;\n  }\n  \n  private sendPing = () => {\n    // return;\n    \n    // if(!(this.transport as TcpObfuscated).connected) {\n    //   this.clearPing();\n    //   return;\n    // }\n\n    if(this.pingPromise) {\n      return;\n    }\n\n    const startTime = Date.now();\n    this.log('sendPing: ping', startTime);\n    const promise = this.pingPromise = this.wrapMtpCall('ping', {\n      ping_id: randomLong()\n    }, {\n      notContentRelated: true\n    }).then(() => {\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.log('sendPing: pong', elapsedTime);\n      \n      setTimeout(() => {\n        if(this.pingPromise !== promise) {\n          return;\n        }\n        \n        this.pingPromise = undefined;\n        this.sendPing();\n      }, Math.max(0, PING_INTERVAL - elapsedTime));\n    });\n  }; */\n\n  private clearPingDelayDisconnect() {\n    const deferred = this.pingDelayDisconnectDeferred;\n    this.pingDelayDisconnectDeferred = undefined;\n    this.lastPingDelayDisconnectId = undefined;\n\n    if(deferred) {\n      deferred.reject();\n    }\n  }\n\n  private sendPingDelayDisconnect = () => {\n    // return;\n\n    if(this.pingDelayDisconnectDeferred || !this.transport || !this.transport.connected) return;\n\n    /* if(!this.isOnline) {\n      if((this.transport as TcpObfuscated).connected) {\n        (this.transport as TcpObfuscated).connection.close();\n      }\n\n      return;\n    } */\n\n    const deferred = this.pingDelayDisconnectDeferred = deferredPromise();\n    const delays = this.delays;\n    const pingMaxTime = this.delays.pingMaxTime;\n    const lastPingTime = Math.min(this.lastPingTime ?? 0, pingMaxTime);\n    const disconnectDelay = Math.round(delays.disconnectDelayMin + lastPingTime / pingMaxTime * (delays.disconnectDelayMax - delays.disconnectDelayMin));\n    const timeoutTime = disconnectDelay * 1000;\n    const startTime = Date.now();\n    const pingId = this.lastPingDelayDisconnectId = randomLong();\n    const options: MTMessageOptions = {notContentRelated: true};\n    this.wrapMtpCall('ping_delay_disconnect', {\n      ping_id: pingId,\n      disconnect_delay: disconnectDelay\n    }, options);\n    \n    this.debug && this.log.debug(`sendPingDelayDisconnect: ping, timeout=${timeoutTime}, lastPingTime=${this.lastPingTime}, msgId=${options.messageId}`);\n    const rejectTimeout = ctx.setTimeout(deferred.reject, timeoutTime);\n\n    const onResolved = (reason: string) => {\n      clearTimeout(rejectTimeout);\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.debug && this.log.debug(`sendPingDelayDisconnect: pong, reason='${reason}', time=${lastPingTime}, msgId=${options.messageId}`);\n      if(elapsedTime > timeoutTime) {\n        throw undefined;\n      } else {\n        return pause(Math.max(0, this.delays.pingInterval - elapsedTime/* timeoutTime - elapsedTime - PING_INTERVAL */));\n      }\n    };\n    \n    const onTimeout = () => {\n      clearTimeout(rejectTimeout);\n      const transport = this.transport as TcpObfuscated;\n      if(this.pingDelayDisconnectDeferred !== deferred || !transport?.connection) {\n        return;\n      }\n\n      this.log.error('sendPingDelayDisconnect: catch, closing connection', this.lastPingTime, options.messageId);\n      transport.connection.close();\n    };\n\n    const onFinally = () => {\n      if(this.pingDelayDisconnectDeferred !== deferred) {\n        return;\n      }\n\n      this.pingDelayDisconnectDeferred = undefined;\n      this.sendPingDelayDisconnect();\n    };\n\n    deferred\n    .then(onResolved)\n    .catch(onTimeout)\n    .finally(onFinally);\n  };\n\n                          \n  private checkLongPoll = () => {\n    const isClean = this.cleanupSent();\n    //this.log.error('Check lp', this.longPollPending, this.dcId, isClean, this);\n    if((this.longPollPending && Date.now() < this.longPollPending) ||\n      this.offline ||\n      this.isStopped() ||\n      this.isFileNetworker) {\n      //this.log('No lp this time');\n      return false;\n    }\n\n    sessionStorage.get('dc').then((baseDcId) => {\n      if(isClean && (\n          baseDcId !== this.dcId ||\n          (this.sleepAfter && Date.now() > this.sleepAfter)\n        )) {\n        //console.warn(dT(), 'Send long-poll for DC is delayed', this.dcId, this.sleepAfter);\n        return;\n      }\n\n      this.sendLongPoll();\n    });\n  };\n\n  private sendLongPoll() {\n    if(this.sendingLongPoll) return;\n    this.sendingLongPoll = true;\n    const maxWait = 25000;\n\n    this.longPollPending = Date.now() + maxWait;\n    this.debug && this.log.debug('sendLongPoll', this.longPollPending);\n  \n    this.wrapMtpCall('http_wait', {\n      max_delay: 500,\n      wait_after: 150,\n      max_wait: maxWait\n    }, {\n      noResponse: true,\n      // notContentRelated: true,\n      longPoll: true\n    }).then(() => {\n      this.longPollPending = undefined;\n      setTimeout(this.checkLongPoll, 0);\n    }, (error: ErrorEvent) => {\n      this.log('Long-poll failed', error);\n    }).finally(() => {\n      this.sendingLongPoll = undefined;\n    });\n  }\n\n  private checkConnection = (event: Event | string) => {\n    this.debug && this.log('Check connection', event);\n    this.clearCheckConnectionTimeout();\n\n    if(!this.transport) {\n      this.log.warn('No transport for checkConnection');\n      return;\n    }\n  \n    const serializer = new TLSerialization({mtproto: true});\n    const pingId = randomLong();\n  \n    serializer.storeMethod('ping', {\n      ping_id: pingId\n    });\n  \n    const pingMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      body: serializer.getBytes(true)\n    };\n\n    if(this.offline) {\n      this.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.sendEncryptedRequest(pingMessage).then(() => {\n      this.toggleOffline(false);\n    }, () => {\n      this.debug && this.log('Delay', this.checkConnectionPeriod * 1000);\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\n      this.checkConnectionPeriod = Math.min(60, this.checkConnectionPeriod * 1.5);\n    });\n  };\n\n  private clearCheckConnectionTimeout() {\n    if(this.checkConnectionTimeout !== undefined) {\n      clearTimeout(this.checkConnectionTimeout);\n      this.checkConnectionTimeout = undefined;\n    }\n  }\n\n  private toggleOffline(offline: boolean) {\n    if(this.offline !== offline) {\n      this.offline = offline;\n\n      this.clearCheckConnectionTimeout();\n      if(offline) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n        \n        if(this.checkConnectionPeriod < 1.5) {\n          this.checkConnectionPeriod = 0;\n        }\n        \n        const delay = this.checkConnectionPeriod * 1000 | 0;\n        this.checkConnectionRetryAt = Date.now() + delay;\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOfline'), delay);\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5);\n    \n                               \n                                                                              \n                                                                             \n                  \n      } else {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n        this.checkLongPoll();\n\n        this.scheduleRequest();\n    \n                               \n                                                                          \n                                                                         \n                  \n      }\n    }\n\n    this.setConnectionStatus(offline ? ConnectionStatus.Closed : ConnectionStatus.Connected, offline ? this.checkConnectionRetryAt : undefined);\n  }\n\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\n    // let timeout = setTimeout(() => {\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\n    // }, 5e3);\n\n    promise.then((result) => {\n      this.toggleOffline(false);\n      // this.log('parse for', message);\n      return this.parseResponse(result).then((response) => {\n        this.debug && this.log.debug('Server response', response);\n  \n        this.processMessage(response.response, response.messageId, response.sessionId);\n\n        this.checkLongPoll();\n        this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\n\n        return true;\n      });\n    }, (error) => {\n      this.log.error('Encrypted request failed', error, message);\n  \n      this.pushResend(message.msg_id);\n      this.toggleOffline(true);\n\n      return false;\n    }).then((shouldResolve) => {\n      // clearTimeout(timeout);\n      const sentMessages = this.sentMessages;\n      noResponseMsgs.forEach((msgId) => {\n        const sentMessage = sentMessages[msgId];\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          delete sentMessages[msgId];\n          delete this.pendingMessages[msgId];\n          shouldResolve ? deferred.resolve() : deferred.reject();\n        }\n      });\n    });\n  }\n            \n\n  // тут можно сделать таймаут и выводить дисконнект\n  private pushMessage(message: {\n    msg_id: string,\n    seq_no: number,\n    body: Uint8Array | number[],\n    isAPI?: boolean\n  }, options: MTMessageOptions) {\n    let promise: CancellablePromise<void>;\n    if(!options.notContentRelated || options.noResponse) {\n      promise = deferredPromise();\n    }\n    \n    this.sentMessages[message.msg_id] = Object.assign(\n      message, \n      options, \n      promise ? {deferred: promise} : undefined\n    );\n\n    //this.log.error('Networker pushMessage:', this.sentMessages[message.msg_id]);\n\n    this.pendingMessages[message.msg_id] = 0;\n  \n    if(!options.noSchedule) {\n      this.scheduleRequest();\n    }\n\n    if(isObject(options)) {\n      options.messageId = message.msg_id;\n    }\n\n    return promise;\n  }\n\n  public attachPromise(promise: Promise<any>, message: MTMessage) {\n    const canIncrement = true;\n    const timeout = setTimeout(() => {\n      if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < this.delays.connectionTimeout) {\n        return;\n      }\n\n      this.log.error('timeout', message);\n      if(this.isOnline) {\n        this.setConnectionStatus(ConnectionStatus.TimedOut);\n      }\n\n      /* this.getEncryptedOutput(message).then((bytes) => {\n        this.log.error('timeout encrypted', bytes);\n      }); */\n    }, this.delays.connectionTimeout);\n\n    promise.catch(noop).finally(() => {\n      clearTimeout(timeout);\n      this.setConnectionStatus(ConnectionStatus.Connected);\n\n      if(canIncrement) {\n        --this.activeRequests;\n        this.setDrainTimeout();\n      }\n    });\n    \n    if(canIncrement) {\n      ++this.activeRequests;\n      if(this.onDrainTimeout !== undefined) {\n        clearTimeout(this.onDrainTimeout);\n        this.onDrainTimeout = undefined;\n      }\n    }\n  }\n\n  public setDrainTimeout() {\n    if(!this.activeRequests && this.onDrain && this.onDrainTimeout === undefined) {\n      this.onDrainTimeout = ctx.setTimeout(() => {\n        this.onDrainTimeout = undefined;\n        this.log('drain');\n        this.onDrain();\n      }, DRAIN_TIMEOUT);\n    }\n  }\n\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number) {\n    const isOnline = status === ConnectionStatus.Connected;\n    const willChange = this.status !== status;\n    this.isOnline = isOnline;\n    this.status = status;\n\n    if(willChange) {\n      if(this.networkerFactory.onConnectionStatusChange) {\n        this.networkerFactory.onConnectionStatusChange({\n          _: 'networkerStatus',\n          status,\n          dcId: this.dcId,\n          name: this.name,\n          isFileNetworker: this.isFileNetworker,\n          isFileDownload: this.isFileDownload,\n          isFileUpload: this.isFileUpload,\n          retryAt\n        });\n      }\n\n      if(this.isOnline) {\n        this.scheduleRequest();\n      }\n\n      if((this.transport as TcpObfuscated)?.connection) {\n        this.clearPingDelayDisconnect();\n        this.sendPingDelayDisconnect();\n      }\n\n      // this.getNewTimeOffset = true;\n    }\n    /* if(this.onConnectionStatusChange) {\n      this.onConnectionStatusChange(this.isOnline);\n    } */\n  }\n\n  private pushResend(messageId: string, delay = 100) {\n    const value = delay ? Date.now() + delay : 0;\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage.container) {\n      for(const innerMsgId of sentMessage.inner) {\n        this.pendingMessages[innerMsgId] = value;\n      }\n    } else {\n      this.pendingMessages[messageId] = value;\n    }\n\n    if(sentMessage.acked) {\n      this.log.error('pushResend: acked message?', sentMessage);\n    }\n  \n    if(this.debug) {\n      this.log.debug('pushResend:', messageId, sentMessage, this.pendingMessages, delay);\n    }\n  \n    this.scheduleRequest(delay);\n  }\n\n  // * correct, fully checked\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\n    const x = isOut ? 0 : 8;\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\n\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256', msgKeyLargePlain);\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\n    return msgKey;\n  };\n\n  // * correct, fully checked\n  private getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\n    const x = isOut ? 0 : 8;\n    const sha2aText = new Uint8Array(52);\n    const sha2bText = new Uint8Array(52);\n    const promises: Array<Promise<Uint8Array>> = [];\n  \n    sha2aText.set(msgKey, 0);\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2aText));\n  \n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\n    sha2bText.set(msgKey, 36);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2bText));\n\n    return Promise.all(promises).then((results) => {\n      const aesKey = new Uint8Array(32);\n      const aesIv = new Uint8Array(32);\n      const sha2a = new Uint8Array(results[0]);\n      const sha2b = new Uint8Array(results[1]);\n  \n      aesKey.set(sha2a.subarray(0, 8));\n      aesKey.set(sha2b.subarray(8, 24), 8);\n      aesKey.set(sha2a.subarray(24, 32), 24);\n  \n      aesIv.set(sha2b.subarray(0, 8));\n      aesIv.set(sha2a.subarray(8, 24), 8);\n      aesIv.set(sha2b.subarray(24, 32), 24);\n  \n      return [aesKey, aesIv];\n    });\n  }\n\n  public isStopped() {\n    return this.networkerFactory.akStopped && !this.isFileNetworker;\n  }\n\n  private performScheduledRequest() {\n    if(this.isStopped()) {\n      return false;\n    }\n\n    if(this.pendingAcks.length) {\n      const ackMsgIds = this.pendingAcks.slice();\n\n      // this.log('acking messages', ackMsgIDs)\n      this.wrapMtpMessage({\n        _: 'msgs_ack',\n        msg_ids: ackMsgIds\n      }, {\n        notContentRelated: true,\n        noSchedule: true\n      });\n    }\n  \n    const pendingResendReqLength = this.pendingResendReq.length;\n    if(pendingResendReqLength) {\n      const options: MTMessageOptions = {...RESEND_OPTIONS};\n      const msgIds = this.pendingResendReq.splice(0, pendingResendReqLength);\n      this.wrapMtpMessage({\n        _: 'msg_resend_req',\n        msg_ids: msgIds\n      }, options);\n\n      this.log('resend: resending requests', options.messageId, msgIds);\n      /* this.lastResendReq = {\n        reqMsgId: options.messageId,\n        msgIds: msgIds\n      }; */\n\n      // this.pendingResendReq.length = 0;\n    }\n\n    // if(this.pendingResendAnsReq.length) {\n    //   const options: MTMessageOptions = {...RESEND_OPTIONS};\n    //   const msgIds = this.pendingResendAnsReq.slice();\n    //   this.wrapMtpMessage({\n    //     _: 'msg_resend_ans_req',\n    //     msg_ids: msgIds\n    //   }, options);\n\n    //   this.log('resend: requesting answers', options.messageId, msgIds);\n    //   this.lastResendAnsReq = {\n    //     reqMsgId: options.messageId,\n    //     msgIds: msgIds\n    //   };\n\n    //   // this.pendingResendAnsReq.length = 0;\n    // }\n  \n    let outMessage: MTMessage;\n    const messages: typeof outMessage[] = [];\n      \n    //const currentTime = Date.now();\n    let messagesByteLen = 0;\n\n                            \n    let hasApiCall = false;\n    let hasHttpWait = false;\n              \n\n    let lengthOverflow = false;\n\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\n    for(const messageId of keys) {\n      //const value = this.pendingMessages[messageId];\n\n      //if(!value || value <= currentTime) {\n        const message = this.sentMessages[messageId];\n        if(message && message.body) {\n          /* if(message.fileUpload) {\n            this.log('performScheduledRequest message:', message, message.body.length, (message.body as Uint8Array).byteLength, (message.body as Uint8Array).buffer.byteLength);\n          } */\n\n          const messageByteLength = message.body.length + 32;\n\n          if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\n            this.log.warn('lengthOverflow', message, messages);\n            lengthOverflow = true;\n\n            if(outMessage) { // if it's not a first message\n              break;\n            }\n          }\n\n          messages.push(message);\n          messagesByteLen += messageByteLength;\n\n                                  \n          if(message.isAPI) {\n            hasApiCall = true;\n          } else if(message.longPoll) {\n            hasHttpWait = true;\n          }\n                    \n\n          outMessage = message;\n        } else {\n          // this.log(message, messageId)\n        }\n\n        delete this.pendingMessages[messageId];\n      //}\n    }\n  \n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    if(hasApiCall && !hasHttpWait) {\n      const serializer = new TLSerialization({mtproto: true});\n      serializer.storeMethod('http_wait', {\n        max_delay: 500,\n        wait_after: 150,\n        max_wait: 3000\n      });\n\n      messages.push({\n        msg_id: this.timeManager.generateId(),\n        seq_no: this.generateSeqNo(),\n        body: serializer.getBytes(true)\n      });\n    }\n              \n  \n    if(!messages.length) {\n      // this.log('no scheduled messages')\n      return;\n    }\n  \n                            \n    const noResponseMsgs: Array<string> = messages.filter((message) => message.noResponse).map((message) => message.msg_id);\n              \n  \n    if(messages.length > 1) {\n      const container = this.generateContainerMessage(messagesByteLen, messages);\n      outMessage = container.messageWithBody;\n  \n      this.sentMessages[outMessage.msg_id] = container.message;\n    } else {\n      this.sentMessages[outMessage.msg_id] = outMessage;\n    }\n  \n    this.pendingAcks = [];\n\n    const promise = this.sendEncryptedRequest(outMessage);\n\n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\n              \n\n                          \n                            \n    if(!(this.transport instanceof HTTP))\n              \n    this.cleanupSent(); // ! WARNING\n              \n  \n    if(lengthOverflow) {\n      this.scheduleRequest();\n    }\n  }\n\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\n    const container = new TLSerialization({\n      mtproto: true,\n      startMaxLength: messagesByteLen + 64\n    });\n\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\n    container.storeInt(messages.length, 'CONTAINER[count]');\n\n    const innerMessages: string[] = [];\n    messages.forEach((message, i) => {\n      innerMessages.push(message.msg_id);\n      // this.log('Pushing to container:', message.msg_id);\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\n    });\n\n    const message: MTMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      container: true,\n      inner: innerMessages\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log.warn('Container', innerMessages, message.msg_id, message.seq_no);\n    }\n\n    return {\n      message,\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message),\n    };\n  }\n\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\n    const keyIv = await this.getAesKeyIv(msgKey, true);\n    // this.log('after msg key iv')\n\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\n    // this.log('Finish encrypt')\n\n    return {\n      bytes: encryptedBytes,\n      msgKey\n    };\n  }\n\n  private getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\n    // this.log('get decrypted start')\n    return this.getAesKeyIv(msgKey, false).then((keyIv) => {\n      // this.log('after msg key iv')\n      return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\n    });\n  }\n\n  private getEncryptedOutput(message: MTMessage) {\n    /* if(DEBUG) {\n      this.log.debug('Send encrypted', message, this.authKeyId);\n    } */\n    /* if(!this.isOnline) {\n      this.log('trying to send message when offline:', Object.assign({}, message));\n      //debugger;\n    } */\n\n    const data = new TLSerialization({\n      startMaxLength: message.body.length + 2048\n    });\n\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\n  \n    data.storeLong(message.msg_id, 'message_id');\n    data.storeInt(message.seq_no, 'seq_no');\n\n    data.storeInt(message.body.length, 'message_data_length');\n    data.storeRawBytes(message.body, 'message_data');\n\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\n    const desSalt = des.fetchLong();\n    const desSessionId = des.fetchLong();\n\n    if(!this.isOnline) {\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\n    } */\n\n    /* const messageDataLength = message.body.length;\n    let canBeLength = 0; // bytes\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 4;\n    canBeLength += 4;\n    canBeLength += message.body.length; */\n  \n    const dataBuffer = data.getBuffer();\n\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\n    } */\n\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\n    const padding = /* (message as any).padding ||  */randomize(new Uint8Array(paddingLength))/* .fill(0) */;\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157, \n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150, \n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157, \n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150, \n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\n\n    //(message as any).padding = padding;\n\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\n\n    /* if(dataWithPadding.byteLength % 16) {\n      this.log.error('aaa', dataWithPadding, paddingLength);\n    }\n\n    if(message.fileUpload) {\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\n    } */\n\n    // * full next block is correct\n    return this.getEncryptedMessage(dataWithPadding).then((encryptedResult) => {\n      /* if(DEBUG) {\n        this.log('Got encrypted out message', encryptedResult);\n      } */\n\n      const request = new TLSerialization({\n        startMaxLength: encryptedResult.bytes.length + 256\n      });\n      request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\n  \n      const requestData = request.getBytes(true);\n\n      // if(this.isFileNetworker) {\n      //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\n      //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\n      //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\n      //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\n      // }\n\n      return requestData;\n    });\n  }\n\n  private async sendEncryptedRequest(message: MTMessage) {\n    const requestData = await this.getEncryptedOutput(message);\n\n    if(!this.transport) {\n      this.log.error('trying to send something when offline', this.transport, this);\n    }\n\n    this.debug && this.log.debug('sending:', message, [message.msg_id].concat(message.inner || []), requestData.length);\n    const promise: Promise<Uint8Array> = this.transport ? this.transport.send(requestData) as any : Promise.reject({});\n    // this.debug && this.log.debug('sendEncryptedRequest: launched message into space:', message, promise);\n    \n                             \n                   \n             \n    \n                          \n    if(!(this.transport instanceof HTTP)) return promise;\n              \n    \n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE',\n      transport: this.transport\n    };\n    \n    return promise.then((result) => {\n      if(!result?.byteLength) {\n        throw baseError;\n      }\n      \n      // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\n      return result;\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          type: 'NETWORK_BAD_REQUEST',\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n              \n  }\n\n  public parseResponse(responseBuffer: Uint8Array) {\n    //const perf = performance.now();\n    /* if(this.debug) {\n      this.log.debug('Start parsing response', responseBuffer);\n    } */\n\n    this.lastResponseTime = Date.now();\n\n    const deserializer = new TLDeserialization(responseBuffer);\n  \n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\n      throw new Error('[MT] Invalid server auth_key_id: ' + bytesToHex(authKeyId));\n    }\n\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\n  \n    return this.getDecryptedMessage(msgKey, encryptedData).then((dataWithPadding) => {\n      // this.log('after decrypt')\n      return this.getMsgKey(dataWithPadding, false).then((calcMsgKey) => {\n        if(!bytesCmp(msgKey, calcMsgKey)) {\n          this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\n          this.updateSession(); // fix 28.01.2020\n          throw new Error('[MT] server msgKey mismatch, updating session');\n        }\n        // this.log('after msgKey check')\n  \n        let deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\n  \n        /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\n        const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\n        const messageId = deserializer.fetchLong('message_id');\n  \n        if(!bytesCmp(sessionId, this.sessionId) &&\n          (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\n          this.log.warn('Sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\n          //this.updateSession();\n          //this.sessionID = sessionID;\n          throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\n        }\n  \n        const seqNo = deserializer.fetchInt('seq_no');\n  \n        const totalLength = dataWithPadding.byteLength;\n  \n        const messageBodyLength = deserializer.fetchInt('message_data[length]');\n        let offset = deserializer.getOffset();\n  \n        if((messageBodyLength % 4) ||\n          messageBodyLength > totalLength - offset) {\n          throw new Error('[MT] Invalid body length: ' + messageBodyLength);\n        }\n        const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\n  \n        offset = deserializer.getOffset();\n        const paddingLength = totalLength - offset;\n        if(paddingLength < 12 || paddingLength > 1024) {\n          throw new Error('[MT] Invalid padding length: ' + paddingLength);\n        }\n  \n        //let buffer = bytesToArrayBuffer(messageBody);\n        deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\n          mtproto: true, \n          override: {\n            mt_message: (result: any, field: string) => {\n              result.msg_id = deserializer.fetchLong(field + '[msg_id]');\n              result.seqno = deserializer.fetchInt(field + '[seqno]');\n              result.bytes = deserializer.fetchInt(field + '[bytes]');\n  \n              const offset = deserializer.getOffset();\n  \n              //self.log('mt_message!!!!!', result, field);\n  \n              try {\n                result.body = deserializer.fetchObject('Object', field + '[body]');\n              } catch(e) {\n                this.log.error('parse error', (e as Error).message, (e as Error).stack);\n                result.body = {\n                  _: 'parse_error',\n                  error: e\n                };\n              }\n\n              if(deserializer.getOffset() !== offset + result.bytes) {\n                // console.warn(dT(), 'set offset', this.offset, offset, result.bytes)\n                // this.log(result)\n                deserializer.setOffset(offset + result.bytes);\n              }\n              // this.log('override message', result)\n            },\n            mt_rpc_result: (result: any, field: any) => {\n              result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\n  \n              const sentMessage = this.sentMessages[result.req_msg_id];\n              const type = sentMessage && sentMessage.resultType || 'Object';\n  \n              if(result.req_msg_id && !sentMessage) {\n                // console.warn(dT(), 'Result for unknown message', result);\n                return;\n              }\n  \n              // deserializer.setMtproto(false);\n              result.result = deserializer.fetchObject(type, field + '[result]');\n              // deserializer.setMtproto(true);\n              // self.log(dT(), 'override rpc_result', sentMessage, type, result);\n            }\n          }\n        });\n\n        const response = deserializer.fetchObject('', 'INPUT');\n        //this.log.error('Parse response time:', performance.now() - perf);\n        return {\n          response,\n          messageId,\n          sessionId,\n          seqNo\n        };\n      });\n    });\n  }\n\n  private applyServerSalt(newServerSalt: string) {\n    const serverSalt = longToBytes(newServerSalt);\n  \n    sessionStorage.set({\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\n    });\n  \n    this.serverSalt = new Uint8Array(serverSalt);\n  }\n\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой) \n  public scheduleRequest(delay?: number) {\n    /* if(!this.isOnline) {\n      return;\n    } */\n\n                            \n                          \n    if(this.transport instanceof HTTP) {\n              \n      if(this.offline) {\n        this.checkConnection('forced schedule');\n      }\n\n      delay ||= 0; // set zero timeout to pack other messages too\n                          \n    }\n              \n              \n\n    const nextReq = Date.now() + (delay || 0);\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\n      //this.debug && this.log('scheduleRequest: nextReq', this.nextReq, nextReq);\n      return;\n    }\n  \n    //this.debug && this.log('scheduleRequest: delay', delay);\n\n    /* if(this.nextReqTimeout) {\n      return;\n    } */\n    \n    //const perf = performance.now();\n    if(this.nextReqTimeout) {\n      clearTimeout(this.nextReqTimeout);\n    }\n\n    const cb = () => {\n      //this.debug && this.log('scheduleRequest: timeout delay was:', performance.now() - perf);\n\n      this.nextReqTimeout = 0;\n      this.nextReq = 0;\n\n                              \n                            \n      if(this.transport instanceof HTTP)\n                \n      if(this.offline) {\n        //this.log('Cancel scheduled');\n        return;\n      }\n                \n\n      this.performScheduledRequest();\n    };\n\n    this.nextReq = nextReq;\n\n    if(delay !== undefined) {\n      this.nextReqTimeout = ctx.setTimeout(cb, delay);\n    } else {\n      cb();\n    }\n  }\n\n  private ackMessage(msgId: MTLong) {\n    // this.log('ack message', msgID)\n    this.pendingAcks.push(msgId);\n\n    let delay: number;\n\n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    delay = 30000;\n              \n\n    this.scheduleRequest(delay);\n  }\n  \n  private reqResend(msgId: MTLong/* , isAnswer?: boolean */) {\n    if(this.debug) {\n      this.log.debug('Req resend', msgId/* , isAnswer */);\n    }\n\n    // (isAnswer ? this.pendingResendAnsReq : this.pendingResendReq).push(msgId);\n    this.pendingResendReq.push(msgId);\n    this.scheduleRequest(100);\n  }\n\n  public cleanupSent() {\n    let notEmpty = false;\n    const sentMessages = this.sentMessages;\n    // this.log('clean start', this.dcId/*, sentMessages*/)\n    Object.keys(sentMessages).forEach((msgId) => {\n      const message = sentMessages[msgId];\n    \n      // this.log('clean iter', msgID, message)\n      if(message.notContentRelated && this.pendingMessages[msgId] === undefined) {\n        // this.log('clean notContentRelated', msgID)\n        delete sentMessages[msgId];\n      } else if(message.container) {\n        for(const innerMsgId of message.inner) {\n          if(sentMessages[innerMsgId] !== undefined) {\n            // this.log('clean failed, found', msgID, message.inner[i], sentMessages[message.inner[i]].seq_no)\n            notEmpty = true;\n            return;\n          }\n        }\n        // this.log('clean container', msgID)\n        delete sentMessages[msgId];\n      } else {\n        notEmpty = true;\n      }\n    });\n  \n    return !notEmpty;\n  }\n\n  private processMessageAck(messageId: Long) {\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage && !sentMessage.acked) {\n      //delete sentMessage.body;\n      sentMessage.acked = true;\n    }\n  }\n\n  private processError(rawError: {error_message: string, error_code: number}) {\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\n    rawError.error_code = rawError.error_code;\n  \n    return {\n      code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\n      type: matches[1] || 'UNKNOWN',\n      description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\n      originalError: rawError\n    };\n  }\n\n  /**\n   * * только для сокета\n   * TODO: consider about containers resend\n   */\n  public resend() {\n    const sentMessages = this.sentMessages;\n    for(const id in sentMessages) {\n      const msg = sentMessages[id];\n      if(msg.body || msg.container) {\n        this.pushResend(id);\n      }\n    }\n\n    if((this.transport as TcpObfuscated).connection) {\n      this.clearPingDelayDisconnect();\n      this.sendPingDelayDisconnect();\n    }\n  }\n\n  /* public requestMessageStatus() {\n    const ids: string[] = [];\n    for(const id in this.sentMessages) {\n      const message = this.sentMessages[id];\n      if(message.isAPI && message.fileUpload) {\n        ids.push(message.msg_id);\n      }\n    }\n\n    this.wrapMtpMessage({\n      _: 'msgs_state_req',\n      msg_ids: ids\n    }, {\n      notContentRelated: true\n    }).then((res) => {\n      this.log('status', res);\n    });\n  } */\n\n  private applyServerTime(messageId: string) {\n    const serverTime = bigInt(messageId).shiftRight(32).toJSNumber();\n    this.log('applying server time', serverTime);\n    return this.timeManager.applyServerTime(serverTime);\n  }\n\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[]) {\n    if(message._ === 'messageEmpty') {\n      this.log.warn('processMessage: messageEmpty', message, messageId);\n      return;\n    }\n\n    // messageId = messageId.toString();\n\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\n    if(msgidInt % 2) {\n      this.log.warn('Server even message id: ', messageId, message);\n      return;\n    }\n\n    if(this.debug) {\n      this.log.debug('process message', message, messageId);\n    }\n\n    if(this.pingDelayDisconnectDeferred) {\n      this.pingDelayDisconnectDeferred.resolve('any message');\n    }\n\n    // let changedTimeOffset: boolean;\n    // if(this.getNewTimeOffset) {\n    //   changedTimeOffset = this.applyServerTime(messageId);\n    //   this.getNewTimeOffset = undefined;\n    // }\n\n    switch(message._) {\n      case 'msg_container': {\n        for(const innerMessage of message.messages) {\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\n        }\n\n        break;\n      }\n  \n      case 'bad_server_salt': {\n        this.log('Bad server salt', message);\n\n        this.applyServerSalt(message.new_server_salt);\n\n        if(this.sentMessages[message.bad_msg_id]) {\n          this.pushResend(message.bad_msg_id);\n        }\n        \n        this.ackMessage(messageId);\n        \n        // simulate disconnect\n        /* try {\n          this.log('networker state:', this);\n          // @ts-ignore\n          this.transport.ws.close(1000);\n        } catch(err) {\n          this.log.error('transport', this.transport, err);\n        } */\n\n        break;\n      }\n  \n      case 'bad_msg_notification': {\n        this.log.error('Bad msg notification', message);\n\n        switch(message.error_code) {\n          case 16:    // * msg_id too low\n          case 17:    // * msg_id too high\n          case 32:    // * msg_seqno too low\n          case 33:    // * msg_seqno too high\n          case 64: {  // * invalid container\n            // if(changedTimeOffset === undefined) {\n            //   changedTimeOffset = this.applyServerTime(messageId);\n            // }\n\n            const changedTimeOffset = this.applyServerTime(messageId);\n            if(message.error_code === 17 || changedTimeOffset) {\n              this.log('Update session');\n              this.updateSession();\n            }\n\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\n            if(badMessage) this.pushResend(badMessage.msg_id); // fix 23.01.2020\n            //this.ackMessage(messageId);\n          }\n\n          // * invalid container\n          /* case 64: {\n            const badMessage = this.sentMessages[message.bad_msg_id];\n            if(badMessage) {\n              for(const msgId of badMessage.inner) {\n                if(this.sentMessages[msgId] !== undefined) {\n                  this.updateSentMessage\n                }\n              }\n              const inner = badMessage.inner;\n            }\n          } */\n        }\n\n        break;\n      }\n  \n      case 'message': {\n        if(this.lastServerMessages.indexOf(messageId) !== -1) {\n          // console.warn('[MT] Server same messageId: ', messageId)\n          this.ackMessage(messageId);\n          return;\n        }\n\n        this.lastServerMessages.push(messageId);\n        if(this.lastServerMessages.length > 100) {\n          this.lastServerMessages.shift();\n        }\n\n        this.processMessage(message.body, message.msg_id, sessionId);\n        break;\n      }\n        \n      case 'new_session_created': {\n        this.ackMessage(messageId);\n\n        if(this.debug) {\n          this.log.debug('new_session_created', message);\n        }\n        //this.updateSession();\n  \n        this.processMessageAck(message.first_msg_id);\n        this.applyServerSalt(message.server_salt);\n  \n        sessionStorage.get('dc').then((baseDcId) => {\n          if(baseDcId === this.dcId && !this.isFileNetworker && this.networkerFactory.updatesProcessor) {\n            this.networkerFactory.updatesProcessor(message);\n          }\n        });\n        break;\n      }\n        \n      case 'msgs_ack': {\n        for(const msgId of message.msg_ids) {\n          this.processMessageAck(msgId);\n        }\n\n        break;\n      }\n  \n      case 'msg_detailed_info': {\n        const sentMessage = this.sentMessages[message.msg_id];\n        if(!sentMessage) {\n          this.ackMessage(message.answer_msg_id);\n          break;\n        }/*  else if(sentMessage.acked) {\n          this.reqResend(message.answer_msg_id, true);\n        }\n\n        break; */\n      }\n\n      case 'msg_new_detailed_info': {\n        if(this.pendingAcks.indexOf(message.answer_msg_id) !== -1) {\n          break;\n        }\n\n        this.reqResend(message.answer_msg_id);\n        break;\n      }\n  \n      case 'msgs_state_info': {\n        this.ackMessage(message.answer_msg_id);\n        const arr = [\n          [this.lastResendReq, this.pendingResendReq] as const\n          // [this.lastResendAnsReq, this.pendingResendAnsReq] as const\n        ];\n\n        for(const [lastResend, pendingResend] of arr) {\n          if(lastResend?.reqMsgId === message.req_msg_id && pendingResend.length) {\n            for(const badMsgId of lastResend.msgIds) {\n              const pos = pendingResend.indexOf(badMsgId);\n              if(pos !== -1) {\n                pendingResend.splice(pos, 1);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 'rpc_result': {\n        this.ackMessage(messageId);\n  \n        const sentMessageId = message.req_msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        // if(this.debug) {\n        //   this.log.debug('Rpc response', message.result, sentMessage);\n        // }\n\n        this.processMessageAck(sentMessageId);\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          if(message.result._ === 'rpc_error') {\n            const error = this.processError(message.result);\n            this.log('Rpc error', error);\n            if(deferred) {\n              deferred.reject(error);\n            }\n          } else {\n            if(deferred) {\n              deferred.resolve(message.result);\n            }\n\n            if(sentMessage.isAPI && !this.connectionInited) {\n              this.connectionInited = true;\n            }\n          }\n  \n          delete this.sentMessages[sentMessageId];\n        } else {\n          if(this.debug) {\n            this.log('Rpc result for unknown message:', sentMessageId, message);\n          }\n        }\n\n        break;\n      }\n\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\n        /* const sentMessageId = message.msg_id;\n        const sentMessage = this.sentMessages[sentMessageId]; \n\n        if(sentMessage) {\n          sentMessage.deferred.resolve(message);\n          delete this.sentMessages[sentMessageId];\n        } */\n        const pingId = message.ping_id;\n        if(this.lastPingDelayDisconnectId === pingId) {\n          this.pingDelayDisconnectDeferred.resolve('pong');\n        }\n\n        break;\n      }\n  \n      default:\n        this.ackMessage(messageId);\n\n        /* if(this.debug) {\n          this.log.debug('Update', message);\n        } */\n        \n        if(this.networkerFactory.updatesProcessor !== null) {\n          this.networkerFactory.updatesProcessor(message);\n        }\n        break;\n    }\n  }\n}\n","import bigInt from \"big-integer\";\n\nexport default function sortLongsArray(arr: string[]) {\n  return arr.map((long) => {\n    return bigInt(long);\n  }).sort((a, b) => {\n    return a.compare(b);\n  }).map((bigInt) => {\n    return bigInt.toString(10);\n  });\n}\n","import addPadding from '../bytes/addPadding';\nimport bigInt from 'big-integer';\nimport { bigIntToBytes } from '../bigInt/bigIntConversion';\n\nexport default function longToBytes(sLong: string) {\n  const bigIntBytes = bigIntToBytes(bigInt(sLong)).reverse();\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\n  // console.log('longToBytes', bytes, bigIntBytes);\n  \n  return bytes;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ConnectionStatusChange } from \"./connectionStatus\";\r\nimport MTPNetworker from \"./networker\";\r\nimport { InvokeApiOptions } from \"../../types\";\r\nimport App from \"../../config/app\";\r\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\r\nimport { AppManager } from \"../appManagers/manager\";\r\n\r\nexport class NetworkerFactory extends AppManager {\r\n  private networkers: MTPNetworker[] = [];\r\n  public language = navigator.language || App.langPackCode;\r\n  public updatesProcessor: (obj: any) => void = null;\r\n  // public onConnectionStatusChange: (status: ConnectionStatusChange) => void = null;\r\n  public akStopped = false;\r\n\r\n  public onConnectionStatusChange(status: ConnectionStatusChange) {\r\n    this.rootScope.dispatchEvent('connection_status_change', status);\r\n    //  ({type: 'connectionStatusChange', payload: status});\r\n  }\r\n\r\n  public removeNetworker(networker: MTPNetworker) {\r\n    indexOfAndSplice(this.networkers, networker);\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\r\n    //console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\r\n    const networker = new MTPNetworker(this, this.timeManager, dcId, authKey, authKeyId, serverSalt, options);\r\n    this.networkers.push(networker);\r\n    return networker;\r\n  }\r\n\r\n  public startAll() {\r\n    if(this.akStopped) {\r\n      const stoppedNetworkers = this.networkers.filter((networker) => networker.isStopped());\r\n\r\n      this.akStopped = false;\r\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\r\n      \r\n      for(const networker of stoppedNetworkers) {\r\n        networker.scheduleRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  public stopAll() {\r\n    this.akStopped = true;\r\n  }\r\n\r\n  public setLanguage(langCode: string) {\r\n    this.language = langCode;\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.connectionInited = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public unsetConnectionInited() {\r\n    for(const networker of this.networkers) {\r\n      networker.connectionInited = false;\r\n    }\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    for(const networker of this.networkers) {\r\n      networker.forceReconnectTimeout();\r\n    }\r\n  }\r\n\r\n  public forceReconnect() {\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.forceReconnect();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { TLSerialization } from \"./tl_utils\";\r\nimport cryptoWorker from '../crypto/cryptoMessagePort';\r\nimport Modes from \"../../config/modes\";\r\nimport bytesFromHex from \"../../helpers/bytes/bytesFromHex\";\r\nimport bytesToHex from \"../../helpers/bytes/bytesToHex\";\r\nimport bigInt from 'big-integer';\r\n\r\nexport type RSAPublicKeyHex = {\r\n  modulus: string,\r\n  exponent: string\r\n};\r\n\r\nexport class RSAKeysManager {\r\n\r\n  /**\r\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\r\n   * \r\n   * \r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\r\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\r\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\r\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\r\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\r\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\r\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\r\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\r\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\r\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\r\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   * Bytes can be got via \r\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\r\n   * $ openssl rsa -pubin -in pub.pem -text -noout\r\n   */\r\n\r\n  /* private publisKeysHex = [{\r\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\r\n    exponent: '010001'\r\n  }]; */\r\n\r\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\r\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publisKeysHex: RSAPublicKeyHex[] = [{\r\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publicKeysParsed: {\r\n    [hex: string]: RSAPublicKeyHex\r\n  } = {};\r\n  private prepared = false;\r\n  private preparePromise: Promise<void> = null;\r\n\r\n  constructor() {\r\n    if(Modes.test) {\r\n      this.publisKeysHex = this.testPublicKeysHex;\r\n    }\r\n  }\r\n\r\n  public prepare(): Promise<void> {\r\n    if(this.preparePromise) return this.preparePromise;\r\n    else if(this.prepared) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this.preparePromise = Promise.all(this.publisKeysHex.map((keyParsed) => {\r\n      const RSAPublicKey = new TLSerialization();\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\r\n\r\n      const buffer = RSAPublicKey.getBuffer();\r\n\r\n      return cryptoWorker.invokeCrypto('sha1', buffer).then((bytes) => {\r\n        const fingerprintBytes = bytes.slice(-8);\r\n        fingerprintBytes.reverse();\r\n  \r\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\r\n          modulus: keyParsed.modulus,\r\n          exponent: keyParsed.exponent\r\n        };\r\n      });\r\n    })).then(() => {\r\n      this.prepared = true;\r\n\r\n      //console.log('[MT] Prepared keys');\r\n      this.preparePromise = null;\r\n    });\r\n  }\r\n\r\n  public async select(fingerprints: Array<string>) {\r\n    await this.prepare();\r\n\r\n    for(let i = 0; i < fingerprints.length; ++i) {\r\n      let fingerprintHex = bigInt(fingerprints[i]).toString(16).toLowerCase();\r\n\r\n      if(fingerprintHex.length < 16) {\r\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\r\n      }\r\n\r\n      //console.log(fingerprintHex, this.publicKeysParsed);\r\n      const foundKey = this.publicKeysParsed[fingerprintHex];\r\n      if(foundKey) {\r\n        return Object.assign({\r\n          fingerprint: fingerprints[i]\r\n        }, foundKey);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RSAKeysManager();\r\n","export default function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\n  const len = bytes1.length;\n  const bytes = new Uint8Array(len);\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = bytes1[i] ^ bytes2[i];\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                    \nimport transportController from \"./transports/controller\";\n          \n\nimport { TLSerialization, TLDeserialization } from \"./tl_utils\";\nimport { TransportType } from \"./dcConfigurator\";\nimport rsaKeysManager from \"./rsaKeysManager\";\n\nimport CryptoWorker from \"../crypto/cryptoMessagePort\";\n\nimport { logger, LogTypes } from \"../logger\";\nimport DEBUG from \"../../config/debug\";\nimport { Awaited, DcId } from \"../../types\";\nimport { ApiError } from \"./apiManager\";\nimport addPadding from \"../../helpers/bytes/addPadding\";\nimport bytesCmp from \"../../helpers/bytes/bytesCmp\";\nimport bytesFromHex from \"../../helpers/bytes/bytesFromHex\";\nimport bytesToHex from \"../../helpers/bytes/bytesToHex\";\nimport bytesXor from \"../../helpers/bytes/bytesXor\";\nimport { bigIntFromBytes } from \"../../helpers/bigInt/bigIntConversion\";\nimport bigInt from \"big-integer\";\nimport randomize from \"../../helpers/array/randomize\";\nimport { AppManager } from \"../appManagers/manager\";\n\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\n\nfNewNonce = false;\nfNonce = false;\nfResult = false; */\n\ntype AuthOptions = {\n  dcId: number,\n  nonce: Uint8Array,\n  \n  serverNonce?: Uint8Array,\n  pq?: Uint8Array,\n  fingerprints?: string[],\n  publicKey?: {\n    modulus: string,\n    exponent: string,\n    fingerprint: string\n  },\n  \n  // good\n  p?: Uint8Array,\n  q?: Uint8Array,\n  \n  newNonce?: Uint8Array,\n  \n  retry?: number,\n  \n  b?: Uint8Array,\n  g?: number,\n  gA?: Uint8Array,\n  dhPrime?: Uint8Array,\n  \n  tmpAesKey?: Uint8Array,\n  tmpAesIv?: Uint8Array,\n  \n  authKeyId?: Uint8Array,\n  authKey?: Uint8Array,\n  serverSalt?: Uint8Array,\n\n  localTime?: number,\n  serverTime?: any,\n};\n\ntype ResPQ = {\n  _: 'resPQ';\n  nonce: Uint8Array;\n  pq: Uint8Array;\n  server_nonce: Uint8Array;\n  server_public_key_fingerprints: string[];\n};\n\ntype P_Q_inner_data = {\n  _: 'p_q_inner_data_dc';\n  pq: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  new_nonce: Uint8Array;\n  dc: number;\n};\n\ntype req_DH_params = {\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  public_key_fingerprint: string;\n  encrypted_data: Uint8Array;\n};\n\nexport class Authorizer extends AppManager {\n  private cached: {\n    [dcId: DcId]: Promise<AuthOptions>\n  };\n  \n  private log: ReturnType<typeof logger>;\n\n  private transportType: TransportType;\n\n                      \n  private getTransportTypePromise: Promise<void>;\n            \n  \n  protected after() {\n    this.cached = {};\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\n  }\n  \n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\n    const requestLength = requestArray.byteLength;\n    \n    const header = new TLSerialization();\n    header.storeLongP(0, 0, 'auth_key_id');\n    header.storeLong(this.timeManager.generateId(), 'msg_id');\n    header.storeInt(requestLength, 'request_length');\n    \n    const headerArray = header.getBytes(true) as Uint8Array;\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\n    resultArray.set(headerArray);\n    resultArray.set(requestArray, headerArray.length);\n\n    const transport = this.dcConfigurator.chooseServer(dcId, 'client', this.transportType);\n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE'\n    };\n    \n    if(DEBUG) {\n      this.log('mtpSendPlainRequest: creating requestPromise');\n    }\n    \n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\n    return promise.then((result) => {\n      if(DEBUG) {\n        this.log('mtpSendPlainRequest: in good sector', result);\n      }\n      \n      if(!result || !result.byteLength) {\n        throw baseError;\n      }\n      \n      try {\n        /* result = fResult ? fResult : result;\n        fResult = new Uint8Array(0); */\n        \n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\n\n        if(result.length === 4) {\n          const errorCode = deserializer.fetchInt();\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\n          throw errorCode;\n        }\n\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\n        \n        const msg_id = deserializer.fetchLong('msg_id');\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\n        \n        const msg_len = deserializer.fetchInt('msg_len');\n        if(!msg_len) this.log.error('no msg_len', msg_len);\n        \n        return deserializer;\n      } catch(e) {\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\n        const error = Object.assign(baseError, {originalError: e});\n        throw error;\n      }\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          originalError: error\n        });\n      }\n      \n      throw error;\n    });\n  }\n  \n  private async sendReqPQ(auth: AuthOptions) {\n    const request = new TLSerialization({mtproto: true});\n    \n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\n\n    if(DEBUG) {\n      this.log('Send req_pq', bytesToHex(auth.nonce));\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\n      rsaKeysManager.prepare();\n      deserializer = await promise;\n    } catch(error) {\n      this.log.error('req_pq error', (error as Error).message);\n      throw error;\n    }\n    \n    const response: ResPQ = deserializer.fetchObject('ResPQ');\n\n    if(response._ !== 'resPQ') {\n      throw new Error('[MT] resPQ response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      this.log.error(auth.nonce, response.nonce);\n      throw new Error('[MT] resPQ nonce mismatch');\n    }\n    \n    auth.serverNonce = response.server_nonce; // need\n    auth.pq = response.pq;\n    auth.fingerprints = response.server_public_key_fingerprints;\n    \n    if(DEBUG) {\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\n    }\n    \n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\n    if(!publicKey) {\n      throw new Error('[MT] No public key found');\n    }\n    \n    auth.publicKey = publicKey;\n    \n    if(DEBUG) {\n      this.log('PQ factorization start', auth.pq);\n    }\n    \n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\n    try {\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\n    } catch(error) {\n      this.log.error('worker error factorize', error);\n      throw error;\n    }\n    \n    auth.p = pAndQ[0];\n    auth.q = pAndQ[1];\n    \n    if(DEBUG) {\n      this.log('PQ factorization done', pAndQ);\n    }\n    \n    return this.sendReqDhParams(auth);\n  }\n  \n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    auth.newNonce = randomize(new Uint8Array(32));\n\n    const p_q_inner_data_dc: P_Q_inner_data = {\n      _: 'p_q_inner_data_dc',\n      pq: auth.pq,\n      p: auth.p,\n      q: auth.q,\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      new_nonce: auth.newNonce,\n      dc: 0\n    };\n    \n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\n\n    const data = pQInnerDataSerialization.getBytes(true);\n    if(data.length > 144) {\n      throw 'DH_params: data is more than 144 bytes!';\n    }\n\n    const dataWithPadding = addPadding(data, 192, false, true, false);\n    const dataPadReversed = dataWithPadding.slice().reverse();\n\n    const getKeyAesEncrypted = async() => {\n      for(;;) {\n        const tempKey = randomize(new Uint8Array(32));\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256', tempKey.concat(dataWithPadding)));\n        if(dataWithHash.length !== 224) {\n          throw 'DH_params: dataWithHash !== 224 bytes!';\n        }\n    \n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256', aesEncrypted));\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\n\n        const keyAesEncryptedBigInt = bigIntFromBytes(keyAesEncrypted);\n        const publicKeyModulusBigInt = bigInt(auth.publicKey.modulus, 16);\n\n        if(keyAesEncryptedBigInt.compare(publicKeyModulusBigInt) === -1) {\n          return keyAesEncrypted;\n        }\n      }\n    };\n    \n    const keyAesEncrypted = await getKeyAesEncrypted();\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\n\n    const req_DH_params: req_DH_params = {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      p: auth.p,\n      q: auth.q,\n      public_key_fingerprint: auth.publicKey.fingerprint,\n      encrypted_data: encryptedData\n    };\n    \n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('req_DH_params', req_DH_params);\n    \n    const requestBytes = request.getBytes(true);\n    \n    if(DEBUG) {\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\n    }\n    \n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\n    } catch(error) {\n      this.log.error('Send req_DH_params FAIL!', error);\n      throw error;\n    }\n    \n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\n    \n    if(DEBUG) {\n      this.log('Sent req_DH_params, response:', response);\n    }\n    \n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\n    }\n    \n    if(response._ === 'server_DH_params_fail') {\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce)).slice(-16);\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\n      }\n      \n      throw new Error('[MT] server_DH_params_fail');\n    }\n    \n    // fill auth object\n    try {\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\n    } catch(e) {\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\n      throw e;\n    }\n    \n    //console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\n    \n    return this.sendSetClientDhParams(auth);\n  }\n  \n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\n    auth.localTime = Date.now();\n    \n    // ! can't concat Array with Uint8Array!\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.serverNonce)))\n    .concat((await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\n    \n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(12)\n    .concat(await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\n    \n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\n    \n    const hash = answerWithHash.slice(0, 20);\n    const answerWithPadding = answerWithHash.slice(20);\n\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\n    const response = deserializer.fetchObject('Server_DH_inner_data');\n    \n    if(response._ !== 'server_DH_inner_data') {\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\n    }\n    \n    if(DEBUG) {\n      this.log('Done decrypting answer');\n    }\n    auth.g = response.g;\n    auth.dhPrime = response.dh_prime;\n    auth.gA = response.g_a;\n    auth.serverTime = response.server_time;\n    auth.retry = 0;\n    \n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\n    \n    const offset = deserializer.getOffset();\n    \n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1', answerWithPadding.slice(0, offset)))) {\n      throw new Error('[MT] server_DH_inner_data SHA1 mismatch');\n    }\n    \n    this.timeManager.applyServerTime(auth.serverTime, auth.localTime);\n  }\n  \n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\n    if(DEBUG) {\n      this.log('Verifying DH params', g, dhPrime, gA);\n    }\n\n    const dhPrimeHex = bytesToHex(dhPrime);\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\n    }\n\n    if(DEBUG) {\n      this.log('dhPrime cmp OK');\n    }\n    \n    const gABigInt = bigIntFromBytes(gA);\n    const dhPrimeBigInt = bigInt(dhPrimeHex, 16);\n\n    if(gABigInt.compare(bigInt.one) <= 0) {\n      throw new Error('[MT] DH params are not verified: gA <= 1');\n    }\n\n    if(gABigInt.compare(dhPrimeBigInt.subtract(bigInt.one)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\n    }\n\n    if(DEBUG) {\n      this.log('1 < gA < dhPrime-1 OK');\n    }\n    \n    const twoPow = bigInt(2).pow(2048 - 64);\n\n    if(gABigInt.compare(twoPow) < 0) {\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\n    }\n    if(gABigInt.compare(dhPrimeBigInt.subtract(twoPow)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\n    }\n\n    if(DEBUG) {\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\n    }\n    \n    return true;\n  }\n  \n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    const gBytes = bytesFromHex(auth.g.toString(16));\n    \n    auth.b = randomize(new Uint8Array(256));\n    //MTProto.secureRandom.nextBytes(auth.b);\n    \n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\n    try {\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\n    } catch(error) {\n      throw error;\n    }\n    \n    const data = new TLSerialization({mtproto: true});\n    data.storeObject({\n      _: 'client_DH_inner_data',\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      retry_id: [0, auth.retry++],\n      g_b: gB\n    }, 'Client_DH_Inner_Data');\n    \n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1', data.getBuffer())).concat(data.getBytes(true));\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\n    \n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('set_client_DH_params', {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      encrypted_data: encryptedData\n    });\n    \n    if(DEBUG) {\n      this.log('Send set_client_DH_params');\n    }\n    \n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\n    } catch(err) {\n      throw err;\n    }\n    \n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\n    \n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\n    }\n    \n    // let authKey: Uint8Array;\n    try {\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\n    } catch(err) {\n      throw authKey;\n    }\n    \n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1', authKey),\n    authKeyAux = authKeyHash.slice(0, 8),\n    authKeyId = authKeyHash.slice(-8);\n    \n    if(DEBUG) {\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\n    }\n    switch(response._) {\n      case 'dh_gen_ok': {\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([1], authKeyAux))).slice(-16);\n        \n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\n          throw new Error('new_nonce_hash1 mismatch');\n        }\n        \n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\n        if(DEBUG) {\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\n        }\n        \n        auth.authKeyId = authKeyId;\n        auth.authKey = authKey;\n        auth.serverSalt = serverSalt;\n        \n        return auth;\n      }\n      \n      case 'dh_gen_retry': {\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([2], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\n        }\n        \n        return this.sendSetClientDhParams(auth);\n      }\n      \n      case 'dh_gen_fail': {\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([3], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\n        }\n        \n        throw new Error('[MT] Set_client_DH_params_answer fail');\n      }\n    }\n  }\n\n                      \n  private getTransportType() {\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\n      this.transportType = websocket ? 'websocket' : 'https';\n      this.log('will use transport:', this.transportType);\n    });\n  }\n            \n  \n  public auth(dcId: DcId) {\n    let promise = this.cached[dcId];\n    if(promise) {\n      return promise;\n    }\n\n    promise = new Promise(async(resolve, reject) => {\n                          \n      await this.getTransportType();\n                \n\n      let error: ApiError;\n      let _try = 1;\n      while(_try++ <= 3) {\n        try {\n          const auth: AuthOptions = {\n            dcId, \n            nonce: randomize(new Uint8Array(16))\n          };\n          \n          const promise = this.sendReqPQ(auth);\n          resolve(await promise);\n          return;\n        } catch(err) {\n          error = err;\n        }\n      }\n\n      reject(error);\n    });\n\n    return this.cached[dcId] = promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport sessionStorage from '../sessionStorage';\nimport { nextRandomUint } from '../../helpers/random';\nimport { WorkerTaskVoidTemplate } from '../../types';\nimport longFromInts from '../../helpers/long/longFromInts';\nimport { AppManager } from '../appManagers/manager';\n\n/*\nlet lol: any = {};\nfor(var i = 0; i < 100; i++) {\n    timeManager.generateId();\n}\n*/\n\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\n  type: 'applyServerTimeOffset',\n  payload: TimeManager['timeOffset']\n};\n\nexport class TimeManager extends AppManager {\n  private lastMessageId: [number, number];\n  private timeOffset: number;\n\n  /* private midnightNoOffset: number;\n  private midnightOffseted: Date;\n\n  private midnightOffset: number; */\n\n  /* private timeParams: {\n    midnightOffset: number,\n    serverTimeOffset: number\n  }; */\n\n  protected after() {\n    this.lastMessageId = [0, 0];\n    this.timeOffset = 0;\n\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.timeOffset = to;\n      }\n    });\n\n\n\n    // * migrated from ServerTimeManager\n    /* const timestampNow = tsNow(true);\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\n    this.midnightOffseted = new Date();\n    this.midnightOffseted.setHours(0, 0, 0, 0);\n    \n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\n\n    /* this.timeParams = {\n      midnightOffset: this.midnightOffset,\n      serverTimeOffset: this.serverTimeOffset\n    }; */\n  }\n\n  public getServerTimeOffset() {\n    return this.timeOffset;\n  }\n\n  public generateId(): string {\n    const timeTicks = Date.now(),\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\n      timeMSec = timeTicks % 1000,\n      random = nextRandomUint(16);\n\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\n    if(this.lastMessageId[0] > messageId[0] ||\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\n    }\n\n    this.lastMessageId = messageId;\n\n    const ret = longFromInts(messageId[0], messageId[1]);\n\n    // if(lol[ret]) {\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\n    // }\n    // lol[ret] = true;\n\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\n\n    return ret\n  }\n\n  public applyServerTime(serverTime: number, localTime?: number) {\n    localTime = (localTime || Date.now()) / 1000 | 0;\n    const newTimeOffset = serverTime - localTime;\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\n    this.lastMessageId = [0, 0];\n\n    if(this.timeOffset !== newTimeOffset) {\n      sessionStorage.set({\n        server_time_offset: newTimeOffset\n      });\n\n      this.timeOffset = newTimeOffset;\n    }\n    \n    //console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\n\n    return changed;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport callbackify from \"../../helpers/callbackify\";\r\nimport deferredPromise, { CancellablePromise } from \"../../helpers/cancellablePromise\";\r\nimport cryptoMessagePort from \"../crypto/cryptoMessagePort\";\r\nimport MTProtoMessagePort from \"../mtproto/mtprotoMessagePort\";\r\nimport appStateManager from \"./appStateManager\";\r\nimport { AppStoragesManager } from \"./appStoragesManager\";\r\nimport createManagers from \"./createManagers\";\r\n\r\ntype Managers = Awaited<ReturnType<typeof createManagers>>;\r\n\r\nexport class AppManagersManager {\r\n  private managers: Managers | Promise<Managers>;\r\n  private cryptoPortAttached: boolean;\r\n  private cryptoPortPromise: CancellablePromise<void>;\r\n\r\n  constructor() {\r\n    this.cryptoPortPromise = deferredPromise();\r\n    this.cryptoPortPromise.then(() => {\r\n      this.cryptoPortPromise = undefined;\r\n    });\r\n  }\r\n\r\n  public start() {\r\n    const port = MTProtoMessagePort.getInstance<false>();\r\n\r\n    port.addEventListener('manager', ({name, method, args}) => {\r\n      return callbackify(this.getManagers(), (managers) => {\r\n        // @ts-ignore\r\n        const manager = managers[name];\r\n        return manager[method].apply(manager, args);\r\n      });\r\n    });\r\n\r\n    port.addEventListener('cryptoPort', (payload, source, event) => {\r\n      if(this.cryptoPortAttached) {\r\n        return;\r\n      }\r\n      \r\n      this.cryptoPortAttached = true;\r\n      const port = event.ports[0];\r\n      cryptoMessagePort.attachPort(port);\r\n      this.cryptoPortPromise.resolve();\r\n    });\r\n  }\r\n\r\n  public async createManagers() {\r\n    const appStoragesManager = new AppStoragesManager();\r\n    \r\n    await Promise.all([\r\n      // new Promise(() => {}),\r\n      appStoragesManager.loadStorages(),\r\n      this.cryptoPortPromise\r\n    ]);\r\n\r\n    const managers = await createManagers(appStoragesManager, appStateManager.userId);\r\n    return this.managers = managers;\r\n  }\r\n\r\n  public getManagers() {\r\n    return this.managers ??= this.createManagers();\r\n  }\r\n}\r\n\r\nconst appManagersManager = new AppManagersManager();\r\nexport default appManagersManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { PasswordManager } from \"../mtproto/passwordManager\";\nimport { ReferenceDatabase } from \"../mtproto/referenceDatabase\";\nimport DialogsStorage from \"../storages/dialogs\";\nimport FiltersStorage from \"../storages/filters\";\nimport { ApiUpdatesManager } from \"./apiUpdatesManager\";\nimport { AppAvatarsManager } from \"./appAvatarsManager\";\nimport { AppCallsManager } from \"./appCallsManager\";\nimport { AppChatsManager } from \"./appChatsManager\";\nimport { AppDocsManager } from \"./appDocsManager\";\nimport { AppDraftsManager } from \"./appDraftsManager\";\nimport { AppEmojiManager } from \"./appEmojiManager\";\nimport { AppGroupCallsManager } from \"./appGroupCallsManager\";\nimport { AppInlineBotsManager } from \"./appInlineBotsManager\";\nimport { AppMessagesIdsManager } from \"./appMessagesIdsManager\";\nimport { AppMessagesManager } from \"./appMessagesManager\";\nimport { AppNotificationsManager } from \"./appNotificationsManager\";\nimport { AppPeersManager } from \"./appPeersManager\";\nimport { AppPhotosManager } from \"./appPhotosManager\";\nimport { AppPollsManager } from \"./appPollsManager\";\nimport { AppPrivacyManager } from \"./appPrivacyManager\";\nimport { AppProfileManager } from \"./appProfileManager\";\nimport { AppReactionsManager } from \"./appReactionsManager\";\nimport { AppStickersManager } from \"./appStickersManager\";\nimport { AppUsersManager } from \"./appUsersManager\";\nimport { AppWebPagesManager } from \"./appWebPagesManager\";\nimport { ApiFileManager } from \"../mtproto/apiFileManager\";\nimport { ApiManager } from \"../mtproto/apiManager\";\nimport ctx from \"../../environment/ctx\";\nimport PeersStorage from \"../storages/peers\";\nimport ThumbsStorage from \"../storages/thumbs\";\nimport { NetworkerFactory } from \"../mtproto/networkerFactory\";\nimport { RootScope } from \"../rootScope\";\nimport { Authorizer } from \"../mtproto/authorizer\";\nimport { DcConfigurator } from \"../mtproto/dcConfigurator\";\nimport { TimeManager } from \"../mtproto/timeManager\";\nimport { AppStoragesManager } from \"./appStoragesManager\";\nimport cryptoMessagePort from \"../crypto/cryptoMessagePort\";\nimport appStateManager from \"./appStateManager\";\nimport filterUnique from \"../../helpers/array/filterUnique\";\n\nexport default function createManagers(appStoragesManager: AppStoragesManager, userId: UserId) {\n  const managers = {\n    appPeersManager: new AppPeersManager,\n    appChatsManager: new AppChatsManager,\n    appDocsManager: new AppDocsManager,\n    appPhotosManager: new AppPhotosManager,\n    appPollsManager: new AppPollsManager,\n    appUsersManager: new AppUsersManager,\n    appWebPagesManager: new AppWebPagesManager,\n    appDraftsManager: new AppDraftsManager,\n    appProfileManager: new AppProfileManager,\n    appNotificationsManager: new AppNotificationsManager,\n    apiUpdatesManager: new ApiUpdatesManager,\n    appAvatarsManager: new AppAvatarsManager,\n    appGroupCallsManager: new AppGroupCallsManager,\n    appCallsManager: new AppCallsManager,\n    appReactionsManager: new AppReactionsManager,\n    appMessagesManager: new AppMessagesManager,\n    appMessagesIdsManager: new AppMessagesIdsManager,\n    appPrivacyManager: new AppPrivacyManager,\n    appInlineBotsManager: new AppInlineBotsManager,\n    appStickersManager: new AppStickersManager,\n    referenceDatabase: new ReferenceDatabase,\n    appEmojiManager: new AppEmojiManager,\n    filtersStorage: new FiltersStorage,\n    dialogsStorage: new DialogsStorage,\n    apiManager: new ApiManager,\n    cryptoWorker: cryptoMessagePort,\n    passwordManager: new PasswordManager,\n    apiFileManager: new ApiFileManager,\n    peersStorage: new PeersStorage,\n    thumbsStorage: new ThumbsStorage,\n    networkerFactory: new NetworkerFactory,\n    rootScope: new RootScope,\n    authorizer: new Authorizer,\n    dcConfigurator: new DcConfigurator,\n    timeManager: new TimeManager,\n    appStoragesManager: appStoragesManager,\n    appStateManager: appStateManager\n  };\n\n  type T = typeof managers;\n\n  for(const name in managers) {\n    const manager = managers[name as keyof T];\n    if(!manager) {\n      continue;\n    }\n    \n    if((manager as AppMessagesManager).setManagers) {\n      (manager as AppMessagesManager).setManagers(managers as any);\n      delete (manager as AppMessagesManager).setManagers;\n    }\n\n    // @ts-ignore\n    ctx[name] = manager;\n  }\n\n  const promises: Array<Promise<(() => void) | void> | void>[] = [];\n  let names = Object.keys(managers) as (keyof T)[];\n  names.unshift('appUsersManager', 'appChatsManager', 'appNotificationsManager', 'appMessagesManager', 'dialogsStorage');\n  names = filterUnique(names);\n  for(const name of names) {\n    const manager = managers[name];\n    if((manager as any)?.after) {\n      // console.log('injecting after', name);\n      const result = (manager as any).after();\n      promises.push(result);\n\n      // if(result instanceof Promise) {\n      //   result.then(() => {\n      //     console.log('injected after', name);\n      //   });\n      // }\n    }\n  }\n\n  if(userId) {\n    managers.apiManager.setUserAuth(userId);\n  }\n\n  return Promise.all(promises).then(() => managers);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// just to include\nimport '../polyfill';\nimport '../../helpers/peerIdPolyfill';\n\nimport cryptoWorker from \"../crypto/cryptoMessagePort\";\nimport { setEnvironment } from '../../environment/utils';\nimport appStateManager from '../appManagers/appStateManager';\nimport transportController from './transports/controller';\nimport MTProtoMessagePort from './mtprotoMessagePort';\nimport RESET_STORAGES_PROMISE from '../appManagers/utils/storages/resetStoragesPromise';\nimport appManagersManager from '../appManagers/appManagersManager';\nimport listenMessagePort from '../../helpers/listenMessagePort';\nimport { logger } from '../logger';\nimport { State } from '../../config/state';\nimport toggleStorages from '../../helpers/toggleStorages';\nimport appTabsManager from '../appManagers/appTabsManager';\n\nlet _isServiceWorkerOnline = true;\nexport function isServiceWorkerOnline() {\n  return _isServiceWorkerOnline;\n}\n\nconst log = logger('MTPROTO');\n// let haveState = false;\n\nconst port = new MTProtoMessagePort<false>();\nport.addMultipleEventsListeners({\n  environment: (environment) => {\n    setEnvironment(environment);\n    \n    transportController.waitForWebSocket();\n  },\n\n  crypto: ({method, args}) => {\n    return cryptoWorker.invokeCrypto(method as any, ...args as any);\n  },\n\n  state: ({state, resetStorages, pushedKeys, newVersion, oldVersion, userId}) => {\n    // if(haveState) {\n    //   return;\n    // }\n\n    log('got state', state, pushedKeys);\n\n    appStateManager.userId = userId;\n    appStateManager.newVersion = newVersion;\n    appStateManager.oldVersion = oldVersion;\n    \n    (Object.keys(state) as any as (keyof State)[]).forEach((key) => {\n      appStateManager.pushToState(key, state[key], true, !pushedKeys.includes(key));\n    });\n\n    RESET_STORAGES_PROMISE.resolve(resetStorages);\n    // haveState = true;\n  },\n\n  toggleStorages: ({enabled, clearWrite}) => {\n    return toggleStorages(enabled, clearWrite);\n  },\n\n  event: (payload, source) => {\n    log('will redirect event', payload, source);\n    port.invokeExceptSource('event', payload, source);\n  },\n\n  serviceWorkerOnline: (online) => {\n    _isServiceWorkerOnline = online;\n  },\n\n  createObjectURL: (blob) => {\n    return URL.createObjectURL(blob);\n  },\n\n  // socketProxy: (task) => {\n  //   const socketTask = task.payload;\n  //   const id = socketTask.id;\n    \n  //   const socketProxied = socketsProxied.get(id);\n  //   if(socketTask.type === 'message') {\n  //     socketProxied.dispatchEvent('message', socketTask.payload);\n  //   } else if(socketTask.type === 'open') {\n  //     socketProxied.dispatchEvent('open');\n  //   } else if(socketTask.type === 'close') {\n  //     socketProxied.dispatchEvent('close');\n  //     socketsProxied.delete(id);\n  //   }\n  // },\n});\n\nlog('MTProto start');\n\nappManagersManager.start();\nappManagersManager.getManagers();\nappTabsManager.start();\n\nlistenMessagePort(port, (source) => {\n  appTabsManager.addTab(source);\n}, (source) => {\n  appTabsManager.deleteTab(source);\n});\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ctx from \"../environment/ctx\";\r\nimport SuperMessagePort from \"../lib/mtproto/superMessagePort\";\r\n\r\nexport default function listenMessagePort(\r\n  messagePort: SuperMessagePort<any, any, any>, \r\n  onConnect?: (source: MessageEventSource) => void,\r\n  onDisconnect?: (source: MessageEventSource) => void\r\n) {\r\n  const attachPort = (s: any) => {\r\n    messagePort.attachPort(s);\r\n    onConnect && onConnect(s);\r\n  };\r\n\r\n  onDisconnect && messagePort.setOnPortDisconnect(onDisconnect);\r\n\r\n  if(typeof(SharedWorkerGlobalScope) !== 'undefined') {\r\n    (ctx as any as SharedWorkerGlobalScope).addEventListener('connect', (e) => attachPort(e.source));\r\n  } else {\r\n    attachPort(ctx);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n\r\n/**\r\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\r\n */\r\nexport type UserAuth = {dcID: number | string, date: number, id: PeerId};\r\n\r\nexport const NULL_PEER_ID: PeerId = 0;\r\nexport const REPLIES_PEER_ID: PeerId = 1271266957;\r\nexport const REPLIES_HIDDEN_CHANNEL_ID: ChatId = 777;\r\nexport const SERVICE_PEER_ID: PeerId = 777000;\r\nexport const MUTE_UNTIL = 0x7FFFFFFF;\r\nexport const BOT_START_PARAM = '';\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MessageEntity } from \"../../layer\";\n\nconst CAN_COMBINE_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityBold',\n  'messageEntityItalic',\n  'messageEntityCode',\n  'messageEntityPre',\n  'messageEntityUnderline',\n  'messageEntityStrike',\n  'messageEntityBlockquote',\n  'messageEntitySpoiler'\n]);\nexport default function combineSameEntities(entities: MessageEntity[]) {\n  //entities = entities.slice();\n  for(let i = 0; i < entities.length; ++i) {\n    const entity = entities[i];\n\n    let nextEntityIdx = -1;\n    do {\n      nextEntityIdx = entities.findIndex((e, _i) => {\n        return CAN_COMBINE_ENTITIES.has(e._) && _i !== i && e._ === entity._ && (e.offset - entity.length) === entity.offset;\n      });\n\n      if(nextEntityIdx !== -1) {\n        const nextEntity = entities[nextEntityIdx];\n        entity.length += nextEntity.length;\n        entities.splice(nextEntityIdx, 1);\n      }\n    } while(nextEntityIdx !== -1);\n  }\n  //return entities;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { PASS_CONFLICTING_ENTITIES } from \".\";\nimport { MessageEntity } from \"../../layer\";\n\nconst SINGLE_ENTITIES: Set<MessageEntity['_']> = new Set(['messageEntityPre', 'messageEntityCode']);\n\nexport default function findConflictingEntity(currentEntities: MessageEntity[], newEntity: MessageEntity) {\n  let singleEnd = -1;\n  return currentEntities.find((currentEntity) => {\n    if(SINGLE_ENTITIES.has(currentEntity._)) {\n      singleEnd = currentEntity.offset + currentEntity.length;\n    }\n\n    if(newEntity.offset < singleEnd && !PASS_CONFLICTING_ENTITIES.has(newEntity._)) {\n      return true;\n    }\n    \n    const isConflictingTypes = newEntity._ === currentEntity._ || \n    (!PASS_CONFLICTING_ENTITIES.has(newEntity._) && !PASS_CONFLICTING_ENTITIES.has(currentEntity._));\n    \n    if(!isConflictingTypes) {\n      return false;\n    }\n\n    const isConflictingOffset = newEntity.offset >= currentEntity.offset && \n      (newEntity.length + newEntity.offset) <= (currentEntity.length + currentEntity.offset);\n\n    return isConflictingOffset;\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport emojiRegExp from '../../vendor/emoji/regex';\nimport { MessageEntity } from '../../layer';\n\nconst EmojiHelper = {\n  emojiMap: (code: string) => { return code; },\n  shortcuts: [] as any,\n  emojis: [] as any\n};\n\nexport const ALPHA_CHARS_REG_EXP = 'a-z' +\n  '\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u00ff' + // Latin-1\n  '\\\\u0100-\\\\u024f' + // Latin Extended A and B\n  '\\\\u0253\\\\u0254\\\\u0256\\\\u0257\\\\u0259\\\\u025b\\\\u0263\\\\u0268\\\\u026f\\\\u0272\\\\u0289\\\\u028b' + // IPA Extensions\n  '\\\\u02bb' + // Hawaiian\n  '\\\\u0300-\\\\u036f' + // Combining diacritics\n  '\\\\u1e00-\\\\u1eff' + // Latin Extended Additional (mostly for Vietnamese)\n  '\\\\u0400-\\\\u04ff\\\\u0500-\\\\u0527' + // Cyrillic\n  '\\\\u2de0-\\\\u2dff\\\\ua640-\\\\ua69f' + // Cyrillic Extended A/B\n  '\\\\u0591-\\\\u05bf\\\\u05c1-\\\\u05c2\\\\u05c4-\\\\u05c5\\\\u05c7' +\n  '\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f4' + // Hebrew\n  '\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41' +\n  '\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4f' + // Hebrew Pres. Forms\n  '\\\\u0610-\\\\u061a\\\\u0620-\\\\u065f\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc' +\n  '\\\\u06de-\\\\u06e8\\\\u06ea-\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff' + // Arabic\n  '\\\\u0750-\\\\u077f\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u08e4-\\\\u08fe' + // Arabic Supplement and Extended A\n  '\\\\ufb50-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb' + // Pres. Forms A\n  '\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc' + // Pres. Forms B\n  '\\\\u200c' + // Zero-Width Non-Joiner\n  '\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e' + // Thai\n  '\\\\u1100-\\\\u11ff\\\\u3130-\\\\u3185\\\\uA960-\\\\uA97F\\\\uAC00-\\\\uD7AF\\\\uD7B0-\\\\uD7FF' + // Hangul (Korean)\n  '\\\\u3003\\\\u3005\\\\u303b' + // Kanji/Han iteration marks\n  '\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a' + // full width Alphabet\n  '\\\\uff66-\\\\uff9f' + // half width Katakana\n  '\\\\uffa1-\\\\uffdc'; // half width Hangul (Korean)\nexport const ALPHA_NUMERIC_REG_EXP = '0-9\\_' + ALPHA_CHARS_REG_EXP;\nexport const DOMAIN_ADD_CHARS = '\\u00b7';\n// Based on Regular Expression for URL validation by Diego Perini\nexport const URL_ALPHANUMERIC_REG_EXP_PART = '[' + ALPHA_CHARS_REG_EXP + '0-9]';\nexport const URL_PROTOCOL_REG_EXP_PART = '((?:https?|ftp)://|mailto:)?';\nexport const URL_REG_EXP = URL_PROTOCOL_REG_EXP_PART +\n  // user:pass authentication\n  '(?:' + URL_ALPHANUMERIC_REG_EXP_PART + '{1,64}(?::' + URL_ALPHANUMERIC_REG_EXP_PART + '{0,64})?@)?' +\n  '(?:' +\n  // sindresorhus/ip-regexp\n  '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}' +\n  '|' +\n  // host name\n  URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}' +\n  // domain name\n  '(?:\\\\.' + URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}){0,10}' +\n  // TLD identifier\n  '(?:\\\\.(xn--[0-9a-z]{2,16}|[' + ALPHA_CHARS_REG_EXP + ']{2,24}))' +\n  ')' +\n  // port number\n  '(?::\\\\d{2,5})?' +\n  // resource path\n  '(?:/(?:\\\\S{0,255}[^\\\\s.;,(\\\\[\\\\]{}<>\"\\'])?)?';\nexport const URL_PROTOCOL_REG_EXP = new RegExp('^' + URL_PROTOCOL_REG_EXP_PART.slice(0, -1), 'i');\nexport const URL_ANY_PROTOCOL_REG_EXP = /^((?:[^\\/]+?):\\/\\/|mailto:)/;\nexport const USERNAME_REG_EXP = '[a-zA-Z\\\\d_]{5,32}';\nexport const BOT_COMMAND_REG_EXP = '\\\\/([a-zA-Z\\\\d_]{1,32})(?:@(' + USERNAME_REG_EXP + '))?(\\\\b|$)';\nexport const FULL_REG_EXP = new RegExp('(^| )(@)(' + USERNAME_REG_EXP + ')|(' + URL_REG_EXP + ')|(\\\\n)|(' + emojiRegExp + ')|(^|[\\\\s\\\\(\\\\]])(#[' + ALPHA_NUMERIC_REG_EXP + ']{2,64})|(^|\\\\s)' + BOT_COMMAND_REG_EXP, 'i');\nexport const EMAIL_REG_EXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//const markdownTestRegExp = /[`_*@~]/;\nexport const MARKDOWN_REG_EXP = /(^|\\s|\\n)(````?)([\\s\\S]+?)(````?)([\\s\\n\\.,:?!;]|$)|(^|\\s|\\x01)(`|~~|\\*\\*|__|_-_|\\|\\|)([^\\n]+?)\\7([\\x01\\s\\.,:?!;]|$)|@(\\d+)\\s*\\((.+?)\\)|(\\[(.+?)\\]\\((.+?)\\))/m;\nexport const SITE_HASHTAGS: {[siteName: string]: string} = {\n  Telegram: 'tg://search_hashtag?hashtag={1}',\n  Twitter: 'https://twitter.com/hashtag/{1}',\n  Instagram: 'https://instagram.com/explore/tags/{1}/',\n  'Google Plus': 'https://plus.google.com/explore/{1}'\n};\n\n// export const SITE_MENTIONS: {[siteName in 'Telegram' | 'Twitter' | 'Instagram' | 'GitHub']: string} = {\n//   Telegram: '#{1}',\n//   Twitter: 'https://twitter.com/{1}',\n//   Instagram: 'https://instagram.com/{1}/',\n//   GitHub: 'https://github.com/{1}'\n// };\n\nexport const MARKDOWN_ENTITIES: {[markdown: string]: MessageEntity['_']} = {\n  '`': 'messageEntityCode',\n  '``': 'messageEntityPre',\n  '**': 'messageEntityBold',\n  '__': 'messageEntityItalic',\n  '~~': 'messageEntityStrike',\n  '_-_': 'messageEntityUnderline',\n  '||': 'messageEntitySpoiler'\n};\n\nexport const PASS_CONFLICTING_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityEmoji',\n  'messageEntityLinebreak',\n  'messageEntityCaret'\n]);\nfor(let i in MARKDOWN_ENTITIES) {\n  PASS_CONFLICTING_ENTITIES.add(MARKDOWN_ENTITIES[i]);\n}\n\nexport const PHONE_NUMBER_REG_EXP = /^\\+\\d+$/;\n\n/* export function parseEmojis(text: string) {\n  return text.replace(/:([a-z0-9\\-\\+\\*_]+?):/gi, function (all, shortcut) {\n    var emojiCode = EmojiHelper.shortcuts[shortcut]\n    if (emojiCode !== undefined) {\n      return EmojiHelper.emojis[emojiCode][0]\n    }\n    return all\n  })\n} */\n\n\n\n/* export function replaceUrlEncodings(urlWithEncoded: string) {\n  return urlWithEncoded.replace(/(%[A-Z\\d]{2})+/g, (str) => {\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  });\n} */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MessageEntity } from \"../../layer\";\nimport findConflictingEntity from \"./findConflictingEntity\";\nimport sortEntities from \"./sortEntities\";\n\nexport default function mergeEntities(currentEntities: MessageEntity[], newEntities: MessageEntity[]) {\n  const filtered = newEntities.filter((e) => {\n    return !findConflictingEntity(currentEntities, e);\n  });\n\n  currentEntities.push(...filtered);\n  sortEntities(currentEntities);\n  // currentEntities.sort((a, b) => a.offset - b.offset);\n  // currentEntities.sort((a, b) => (a.offset - b.offset) || (a._ === 'messageEntityCaret' && -1));\n\n  // * fix splitted emoji. messageEntityTextUrl can split the emoji if starts before its end (e.g. on fe0f)\n  // * have to fix even if emoji supported since it's being wrapped in span\n  // if(!IS_EMOJI_SUPPORTED) {\n    for(let i = 0; i < currentEntities.length; ++i) {\n      const entity = currentEntities[i];\n      if(entity._ === 'messageEntityEmoji') {\n        const nextEntity = currentEntities[i + 1];\n        if(nextEntity /* && nextEntity._ !== 'messageEntityCaret' */ && nextEntity.offset < (entity.offset + entity.length)) {\n          entity.length = nextEntity.offset - entity.offset;\n        }\n      }\n    }\n  // }\n\n  return currentEntities;\n}\n","import { MessageEntity } from \"../../layer\";\n\nexport default function sortEntities(entities: MessageEntity[]) {\n  entities.sort((a, b) => {\n    return (a.offset - b.offset) || (b.length - a.length);\n  });\n}\n","// https://github.com/twitter/twemoji-parser/blob/master/src/lib/regex.js\r\n\r\nexport function encodeEmoji(emojiText: string) {\r\n  const codepoints = toCodePoints(removeVS16s(emojiText)).join('-');\r\n  return codepoints;\r\n}\r\n\r\nconst vs16RegExp = /\\uFE0F/g;\r\n// avoid using a string literal like '\\u200D' here because minifiers expand it inline\r\nconst zeroWidthJoiner = String.fromCharCode(0x200d);\r\n\r\nconst removeVS16s = (rawEmoji: string) => (rawEmoji.indexOf(zeroWidthJoiner) < 0 ? rawEmoji.replace(vs16RegExp, '') : rawEmoji);\r\n\r\nexport function toCodePoints(unicodeSurrogates: string): Array<string> {\r\n  const points = [];\r\n  let char = 0;\r\n  let previous = 0;\r\n  let i = 0;\r\n  while(i < unicodeSurrogates.length) {\r\n    char = unicodeSurrogates.charCodeAt(i++);\r\n    if(previous) {\r\n      points.push((0x10000 + ((previous - 0xd800) << 10) + (char - 0xdc00)).toString(16));\r\n      previous = 0;\r\n    } else if (char > 0xd800 && char <= 0xdbff) {\r\n      previous = char;\r\n    } else {\r\n      points.push(char.toString(16));\r\n    }\r\n  }\r\n\r\n  if(points.length && points[0].length === 2) {\r\n    points[0] = '00' + points[0];\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nexport function getEmojiToneIndex(input: string) {\r\n  let match = input.match(/[\\uDFFB-\\uDFFF]/);\r\n  return match ? 5 - (57343 - match[0].charCodeAt(0)) : 0;\r\n}\r\n\r\nexport function getCountryEmoji(iso2: string) {\r\n  return String.fromCharCode(55356, 56741 + iso2.charCodeAt(0), 55356, 56741 + iso2.charCodeAt(1));\r\n}\r\n\r\nexport function emojiFromCodePoints(codePoints: string) {\r\n  return codePoints.split('-').reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [699,211,216,960,434,339], () => (__webpack_require__(3821)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 960) return \"960.7ae964ab6031f51a0275.bundle.js\";\n\tif (chunkId === 434) return \"434.a31674cb2ec803d08ca1.bundle.js\";\n\t// return url for filenames based on template\n\treturn \"\" + ({\"211\":\"npm.big-integer\",\"699\":\"npm.pako\"}[chunkId] || chunkId) + \".\" + {\"8\":\"15a67f69d99bd6da42da\",\"104\":\"19c787168bced8f0f781\",\"211\":\"a7ea0f3283af2967a6ae\",\"216\":\"4397eec2983565f6f071\",\"301\":\"eb31c208f76e9dc623ec\",\"339\":\"702eead422c6af883b39\",\"642\":\"f2d4e67ea15d5329cd0b\",\"699\":\"f16d6f756c34f3914132\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t678: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = this[\"webpackChunktweb\"] = this[\"webpackChunktweb\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","oldGetScript","oldLoadScript","queryMap","countMap","next","EmojiVersions","Emoji","version","Object","assign","USER_AGENT","navigator","userAgent","IS_SAFARI","search","toLowerCase","indexOf","test","vendor","platform","maxTouchPoints","match","IS_FIREFOX","badCharsRe","trimRe","C2L","cleanSearchText","text","latinize","processSearchText","clearBadChars","ignoreCase","options","hasTag","includeTag","charAt","originalText","replace","clearBadCharsAndTrim","ch","latinizeCh","latinizeString","fixCyrillic","FILENAME_JOINER","getFileNameByLocation","location","ext","length","str","_","id","thumb_size","filter","Boolean","join","photo_id","pFlags","big","stickerset","short_name","emoticon","thumb_version","volume_id","local_id","url","console","error","getFileURL","type","encodeURIComponent","JSON","stringify","IDB","constructor","db","this","name","storageIsAvailable","log","openDatabase","INSTANCES","push","isAvailable","createNew","openDbPromise","createIndexes","os","store","indexNames","Array","from","indexName","deleteIndex","indexes","index","contains","createIndex","keyPath","objectParameters","request","indexedDB","open","Promise","reject","message","finished","setTimeout","onerror","resolve","onsuccess","event","result","calledNew","onclose","e","onabort","transaction","target","close","onversionchange","onupgradeneeded","warn","oldVersion","newVersion","stores","forEach","objectStoreNames","objectStore","createObjectStore","static","find","instance","preserve","storage","IDBStorage","storeName","idb","create","delete","entryName","isArray","concat","getObjectStore","map","clear","save","value","idx","put","get","mode","callback","perf","performance","now","then","onError","clearTimeout","timeout","onComplete","results","requests","r","waitForTransactionComplete","oncomplete","callbackResult","left","onRequestFinished","i","getAll","environment","getEnvironment","setEnvironment","env","RootScope","super","myId","connectionStatus","premium","addEventListener","toPeerId","status","dispatchEvent","args","invokeVoid","settings","getConnectionStatus","dispatchEventSingle","state","stateStorage","getState","setByKey","key","object","splitted","split","o","getDeepProperty","slice","pop","setDeepProperty","first","pushToState","direct","onlyLocal","setKeyValueToStorage","set","networkStats","sent","received","awaitingChunks","Map","addSent","dcId","addReceived","awaitingLength","awaiting","waitForChunk","catch","noop","finally","indexOfAndSplice","HTTP","logSuffix","pending","debug","logTypes","Log","logger","connected","_send","body","fetch","method","response","arrayBuffer","buffer","TextDecoder","decode","Uint8Array","setConnected","byteLength","err","destroyed","destroy","send","networker","promise","releasePending","releasing","splice","pause","Socket","handleOpen","handleError","handleClose","removeListeners","handleMessage","data","ws","connect","removeEventListener","undefined","WebSocket","binaryType","randomize","arr","crypto","Error","getRandomValues","Obfuscation","_process","operation","cryptoMessagePort","init","codec","idPromise","release","initPayload","val","val2","reversedPayload","reverse","encKey","encIv","decKey","decIv","process","obfuscateTag","encrypted","encode","payload","tag","encodePacket","len","header","readPacket","bytesToHex","bytes","toString","TcpObfuscated","Connection","retryTimeout","abridged","obfuscation","autoReconnect","onOpen","connection","setConnectionStatus","cleanupSent","resend","onMessage","parseResponse","processMessage","messageId","sessionId","shift","onClose","needTimeout","retryAt","time","Date","diff","lastCloseTime","isNaN","reconnectTimeout","ctx","reconnect","bodySent","forceReconnect","setAutoReconnect","once","enable","encodeBody","toEncode","encoded","releasingPending","socketId","SocketProxied","socketsProxied","task","TEST_SUFFIX","DcConfigurator","sslSubdomains","dcOptions","host","port","chosenServers","transportSocket","connectionType","suffix","path","chosenServer","oooohLetMeLive","transportHTTP","dcOption","chooseServer","transportType","reuse","hasOwnProperty","client","download","upload","servers","transports","transport","obj","MTTransportController","opened","waitForWebSocket","pingTransports","dcConfigurator","https","websocket","httpPromise","websocketPromise","socket","isFulfilled","isRejected","isHttpAvailable","isWebSocketAvailable","all","pinging","setTransportValue","setTransportOpened","setTransportClosed","AppManager","setManagers","managers","loadStorages","storages","recordPromise","storagesKeys","keys","storagesPromises","storagesResults","resetStorages","size","loadStoragesInner","AppStoragesManager","names","createStorages","loadStorage","PasswordManager","apiManager","invokeApi","updateSettings","currentHashPromise","newHashPromise","params","password","new_settings","hint","email","currentPassword","cryptoWorker","invokeCrypto","newAlgo","new_algo","salt1","newPassword","hashes","new_password_hash","check","inputCheckPassword","auth","setUser","user","confirmPasswordEmail","code","resendPasswordEmail","cancelPasswordEmail","ReferenceDatabase","contexts","links","saveContext","reference","context","getContexts","Set","_context","deepEqual","add","getReferenceByLink","getContext","values","deleteContext","refreshReference","c","appMessagesManager","wrapSingleMessage","peerId","refreshEmojiesSoundsPromise","appStickersManager","getAnimatedEmojiSounds","hex","newHex","newContext","safeReplaceObject","wasObject","newObject","getPeerIdsFromMessage","peerIds","fromId","viaBotId","fwdFromId","media","contactUserId","user_id","recentVoters","recent_voters","userId","recentReactions","recent_reactions","reaction","getPeerId","peer_id","action","userIds","users","inviter_id","chatIds","channel_id","chat_id","chatId","recentRepliers","recent_repliers","reply","defineNotNumerableProperties","props","writable","configurable","out","defineProperties","setDialogIndex","dialog","indexKey","GLOBAL_FOLDER_ID","DialogsStorage","folders","pinnedOrders","allDialogsLoaded","setDialogsLoaded","savePinnedOrders","dialogsOffsetDate","dialogsNum","dialogsIndex","cachedResults","query","count","dialogs","folderId","onUpdateFolderPeers","update","folder_peers","folderPeer","folder_id","peer","dropDialog","pinned","handleDialogUnpinning","generateIndexForDialog","pushDialog","scheduleHandleNewDialogs","onUpdateDialogPinned","getDialogOnly","onUpdatePinnedDialogs","handleOrder","order","newPinned","getFolderDialogs","dialogsResult","applyDialogs","d","after","rootScope","appUsersManager","getSelf","peerText","appPeersManager","getPeerSearchText","indexObject","onFilterUpdate","getCachedDialogs","processDialogForFilter","filterId","processDialogForFilters","getDialogIndexKeyByFilterId","prepareDialogUnreadCountModifying","chat","appChatsManager","getChat","dropDialogOnDeletion","apiUpdatesManager","addMultipleEventsListeners","updateFolderPeers","updateDialogPinned","updatePinnedDialogs","appStateManager","appStoragesManager","getCache","setDialogsFromState","bind","appDraftsManager","addMissedDialogs","top_message","getServerMessageId","topMessage","saveMessages","saveDialog","getMessageByPeer","reloadConversation","isDialogsLoaded","loaded","resetPinnedOrder","getPinnedOrders","getOffsetDate","offsetDate","Math","min","getFolder","folder","unreadMessagesCount","unreadPeerIds","unreadUnmutedPeerIds","skipMigrated","migratedTo","getNextDialog","currentPeerId","findIndex","getDialogIndexKey","filtersStorage","getFilter","orderIndex","isPeerUnmuted","appNotificationsManager","isPeerLocalMuted","getFolderUnreadCount","unreadUnmutedCount","unreadCount","setDialogIndexInFilter","testDialogForFilter","pinnedIndex","pinnedPeerIds","generateDialogIndex","generateDialogPinnedDateByIndex","pinned_peers","getDialogIndex","getDialog","skipped","isObject","date","isPinned","tsNow","timeManager","getServerTimeOffset","filters","getFilters","wasIndex","wasDialog","wasDialogIndex","newDialogIndex","prepareFolderUnreadCountModifyingByDialog","insertInDescendSortedArray","callbacks","toggle","wasUnreadCount","getDialogUnreadCount","wasUnmuted","newUnreadCount","newUnmuted","addMessagesCount","modifyFolderUnreadCount","toggleDialog","toggleUnmuted","max","dispatchUnreadTimeout","_folder","justReturn","topDate","generateDialogPinnedDate","channelId","isChannel","toChatId","channel","draft","foundIndex","setDialogToState","pts","historyStorage","getHistoryStorage","messagesStorage","getHistoryMessagesStorage","history","incomingMessage","mid","getMessageFromStorage","is_outgoing","peersStorage","requestPeersForKey","isAnyChat","newPts","getChannelState","requestPeer","ignoreOffsetDate","saveGlobalOffset","pos","getDialogOffsetDate","savedGlobalOffsetDate","savedOffsetDate","clearDialogFromState","foundDialog","wasPinned","keepLocal","releasePeer","dropDialogWithEvent","dropped","forEachReverse","saveApiUsers","saveApiChats","chats","messages","updatedDialogs","topPendingMessage","pendingTopMsgs","maxId","updates","newUpdatesAfterReloadToHandle","saveUpdate","wasDialogBefore","generateMessageId","wasTopMessage","generateTempMessageId","from_id","getOutputPeer","deleted","isOutgoing","migrated_to","deactivated","migratedToPeer","migratedFromTo","migratedToFrom","read_inbox_max_id","read_outbox_max_id","saveDraft","isOut","unread","unread_count","isEnd","insertSlice","setEnd","mergeReplyKeyboard","unshift","readMaxId","readOutboxMaxId","savePeerSettings","notify_settings","addChannelState","releaseUnreadCount","dialogsStorage","getDialogs","offsetIndex","limit","promises","fillContactsResult","fillContacts","cached","reloadMissingDialogsPromise","reloadMissingPeerIds","realFolderId","curDialogStorage","has","sort","d1","d2","offset","loadedAll","isEnoughDialogs","isTopEnd","getTopMessages","convertment","FiltersStorage","reloadedPeerIds","clearFilters","onUpdateDialogFilter","saveDialogFilter","onUpdateDialogFilterOrder","setOrderIndex","updateDialogFilter","updateDialogFilters","oldFilters","copy","getDialogFilters","_filterId","updateDialogFilterOrder","excludePeerIds","includes","includePeerIds","exclude_archived","exclude_read","isDialogUnread","exclude_muted","unread_mentions_count","broadcasts","isBroadcast","groups","isAnyGroup","toUserId","isBot","bots","non_contacts","isContact","contacts","testDialogForFilterId","toggleDialogPin","getConfig","pinned_infolder_count_max","getInputPeerById","createDialogFilter","prepend","remove","flags","getOutputDialogFilter","bool","f","a","b","filterIncludedPinnedPeers","include_peers","peers","reloadDialogs","inputPeer","isAlreadyReloaded","reloadPromises","missingPeerIds","overwrite","invokeApiSingle","getSuggestedDialogsFilters","assumeType","to","oldFilter","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","getOwnPropertyDescriptor","defineProperty","ApiUpdatesManager","updatesState","pendingPtsUpdates","pendingSeqUpdates","syncPending","syncLoading","channelStates","attached","processUpdateMessage","updateMessage","processOpts","seq","seqStart","seq_start","forceGetDifference","processUpdate","toId","fwd_from","reply_to","entities","pts_count","override","_constructor","setProxy","self","Proxy","saveUpdatesState","us","popPendingSeqUpdate","nextSeq","pendingUpdatesData","seqAwaiting","ptsAwaiting","popPendingPtsUpdate","curState","curPts","goodPts","goodIndex","getDifference","processLocalUpdate","wasSyncing","pts_total_limit","qts","differenceResult","other_updates","new_messages","apiMessage","nextState","intermediate_state","onDifferenceTooLong","justAName","getChannelDifference","channelState","getChannelInput","lastPtsUpdateTime","fwdHeader","reason","hasUser","post","hasChat","isUser","popPts","popSeq","attach","langCode","noErrorBox","stateResult","setUpdatesProcessor","strs","en","ru","getChangelog","lang","res","ok","langStr","parseMarkdown","inbox_date","languages","filterUnique","language","AppAvatarsManager","savedAvatarURLs","removeFromAvatarsCache","isAvatarCached","saved","loadAvatar","photo","peerPhotoFileLocation","downloadOptions","dc_id","limitPart","apiFileManager","blob","URL","createObjectURL","AppCallsManager","calls","IS_CALL_SUPPORTED","updatePhoneCall","saveCall","phone_call","updatePhoneCallSignalingData","callId","phone_call_id","computeKey","g_b","p","call","isDiscarded","oldCall","getCall","getCallInput","access_hash","savePhonePhoneCall","phonePhoneCall","generateDh","random_length","dhConfig","requestCall","protocol","g_a_hash","video","getUserInput","random_id","discardCall","duration","connection_id","platforms","ignore","getRestrictionReason","reasons","isRestricted","AppChatsManager","isPeerNeeded","onChatUpdated","updateChannelParticipant","clearCache","updateChatDefaultBannedRights","default_banned_rights","getFromCache","apiChats","saveApiChat","oldChat","participants_count","changedPhoto","changedTitle","title","getChatTyped","hasRights","rights","isThread","editChatDefaultBannedRights","banned_rights","until_date","isMegagroup","megagroup","isInChat","good","getInputPeer","getChannelInputPeer","getChatInputPeer","allowMin","getChatPhoto","getChatString","createChannel","inviteToChannel","input","usersInputs","u","createChat","leaveChannel","joinChannel","addChatUser","fwdLimit","fwd_limit","deleteChatUser","leaveChat","leave","deleteChannel","deleteChat","migrateChat","updateUsername","username","editPhoto","inputFile","inputChatPhoto","file","editTitle","editAbout","about","editBanned","participant","getParticipantPeerId","timestamp","actor_id","prev_participant","new_participant","kicked_by","clearChannelParticipantBannedRights","kickFromChannel","view_messages","kickFromChat","resolveChannel","messagesChats","togglePreHistoryHidden","enabled","toggleSignatures","toggleNoForwards","setChatAvailableReactions","reactions","available_reactions","restrictionReasons","restriction_reason","restricted","getSendAs","invokeApiSingleProcess","processResult","sendAsPeers","importChatInvite","hash","checkUsername","getSponsoredMessage","invokeApiCacheable","cacheSeconds","sponsoredMessages","sponsoredMessage","viewSponsoredMessage","randomId","checkChatInvite","chatInvite","I18n","pluralRules","cacheLangPackPromise","updateAmPm","timeFormat","dateTimeFormat","getDateTimeFormat","hour","minute","hour12","setHours","amText","format","amPmCache","am","pmText","pm","loadLocalLangPack","defaultCode","lastRequestedLangCode","langSign","countries","strings","formatLocalStrings","default","saveLangPack","from_version","lang_code","local","loadLangPack","requestedServerLanguage","lang_pack","polyfillPromise","pushTo","v","langPack","appVersion","applyLangPack","Intl","PluralRules","string","countriesList","country","langPackKey","default_name","lastAppliedLangCode","cachedDateTimeFormats","document","querySelectorAll","element","weakMap","superFormatter","indexHolder","lastIndex","p1","p2","p3","p4","createElement","append","lastIndexOf","matchUrlProtocol","wrappedUrl","wrapUrl","href","onclick","setAttribute","textContent","arg","pushNextArgument","plain","select","item","Node","getCacheLangPack","setTimeFormat","haveToUpdate","IntlDateElement","getStrings","getLangPack","langPack1","langPack2","localLangPack1","localLangPack2","l","_Intl","window","WeakMap","IntlElementBase","classList","property","IntlElement","safeAssign","formatted","dataset","compareAndUpdate","json","DateTimeFormat","hours","getHours","getMinutes","capitalizeFirstLetter","i18n","i18n_","_i18n","months","days","getWeekNumber","UTC","getFullYear","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","getTime","today","year","day","month","weekday","minYear","yearPattern","RegExp","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","createForMonthYear","dates","selectedYear","currentYear","setFullYear","minDate","setMonth","maxDate","formatterMonthYear","createForDayMonth","validDateForMonth","formatterDayMonth","formatterYearMax","formatWeekLong","getDay","q","safeReplaceArrayInObject","trim","dayOfWeek","setDate","getDayOfWeek","distance","setTime","matches","exec","g1","g2","k","g3","parseInt","k1","EXTENSION_MIME_TYPE_MAP","mov","gif","pdf","uploadWallPaperTempId","AppDocsManager","onServiceWorkerFail","docs","doc","supportsStreaming","thumbsStorage","deleteCacheContext","stickerCachedThumbs","uploadingWallPapers","online","saveDoc","oldDoc","file_reference","referenceDatabase","attributes","attribute","file_name","wrapPlainText","voice","mime_type","w","h","round_message","alt","stickerEmojiRaw","stickerSetInput","thumbs","IS_WEBP_SUPPORTED","sticker","IS_WEBM_SUPPORTED","animated","mappedMimeType","joiner","monthAsNumber","noSeconds","getSeconds","leadingZero","noTime","getFullDate","isServiceWorkerOnline","getCacheContext","setCacheContextURL","thumb","getDocumentDownloadOptions","getDocumentURL","getDoc","docId","downloadDoc","queueId","onlyCache","downloadMedia","getLottieCachedThumb","toneIndex","saveLottiePreview","width","height","saveWebPConvertedStrippedThumb","stickerThumbConverted","getWallPapers","invokeApiHashable","accountWallpapers","wallPapers","wallpapers","wallPaper","prepareWallPaperUpload","cacheContext","wallpaper","slug","uploadWallPaper","fileName","downloaded","getGifs","gifs","requestDocPart","requestFilePart","getDocumentInput","AppDraftsManager","drafts","getAllDraftPromise","updateDraftMessage","threadId","notify","getKey","getDraft","getAllDrafts","apiDraft","processApiDraft","force","draftsAreEqual","draft1","draft2","reply_to_msg_id","no_webpage","isEmptyDraft","syncDraft","localDraft","saveOnServer","serverDraft","draftObj","getInputEntities","saveLocalDraft","clearAllDrafts","combined","clearDraft","emptyDraft","setDraft","EMOJI_LANG_PACK","keywords","AppEmojiManager","keywordLangPacks","indexedLangPacks","getKeywordsPromises","getEmojiKeywords","storageKey","pack","validateInitObject","keywordsDifference","packKeywords","keyword","emoticons","getBothEmojiKeywords","recent","getRecentEmojis","indexEmojis","searchEmojis","emojis","reduce","acc","POPULAR_EMOJI","getRecentEmojisPromise","recentEmoji","pushRecentEmoji","emoji","fixEmoji","AppGroupCallsManager","groupCalls","participants","nextOffsets","updateGroupCall","saveGroupCall","updateGroupCallParticipants","groupCallId","saveApiParticipants","groupCall","getCachedParticipants","prepareToSavingNextOffset","nextOffsetsMap","nextOffset","setNextOffset","newNextOffset","saveApiParticipant","skipCounterUpdating","oldParticipant","hasLeft","muted","can_self_unmute","getGroupCall","modified","just_joined","apiParticipants","editParticipant","getGroupCallInput","getInputPeerSelf","volume","raise_hand","raiseHand","video_paused","videoPaused","video_stopped","videoStopped","presentation_paused","presentationPaused","getGroupCallFull","participants_next_offset","shouldUpdate","createGroupCall","scheduleDate","schedule_date","getGroupCallParticipants","ids","sources","groupCallParticipants","next_offset","hangUp","discard","groupCallInput","source","join_as","joinGroupCall","isMuted","joinVideo","leaveGroupCallPresentation","getPhotoInput","getPhotoMediaInput","ttl_seconds","getMediaInput","AppInlineBotsManager","inlineResults","setHash","getGeoInput","geo","lat","long","accuracy_radius","getInlineResults","botId","bot","geo_point","stopTime","botResults","queryId","query_id","appDocsManager","appPhotosManager","savePhoto","generateQId","pushPopularBot","getTopPeers","topPeers","botPeerId","topPeer","rating","switchToPM","fromPeerId","startParam","startBot","checkSwitchReturn","getUser","bot_inline_placeholder","peerData","switchInlineQuery","callbackButtonClick","button","msg_id","sendInlineResult","queryAndResultIds","inlineResult","queryID","resultID","resultId","send_message","reply_markup","replyMarkup","sendText","inputMedia","caption","sendMessage","geoPoint","address","provider","venue_id","venue_type","phone_number","first_name","last_name","vcard","content","progress","percent","total","sendOther","AppMessagesIdsManager","tempNum","num","telegramMeWebManager","disabled","hostname","setAuthorized","canRedirect","sessionStorage","curValue","ts","tgme_sync","script","onload","src","appendChild","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","partLength","appTabsManager","tabs","start","getTabs","tab","addTab","deleteTab","AppMessagesManager","pendingByRandomId","pendingByMessageId","pendingAfterMsgs","tempFinalizeCallbacks","sendSmthLazyLoadQueue","needSingleMessages","fetchSingleMessagesPromise","maxSeenId","newMessagesHandleTimeout","newMessagesToHandle","newDialogsToHandle","notificationsHandlePromise","notificationsToHandle","reloadConversationsPeers","groupedTempId","typings","unreadMentions","goToNextMentionPromises","batchUpdates","middleware","clean","uploadFilePromises","messagesStorageByPeerId","groupedMessagesStorage","scheduledMessagesStorage","historiesStorage","threadsStorage","searchesStorage","pinnedMessages","threadsServiceMessagesIdsStorage","threadsToReplies","handleNewMessages","handleNewDialogs","newMaxSeenId","incrementMaxSeenId","handleNotifications","_peerId","notifyPeerToHandle","getNotifyPeerSettings","peerTypeNotifySettings","mentioned","notifyAboutMessage","fwdCount","onUpdateMessageId","pendingData","tempId","finalizePendingMessageCallbacks","onUpdateNewMessage","getMessagePeer","isLocalThreadUpdate","createMessageStorage","threadKey","getThreadKey","ignoreExisting","checkPendingMessage","updateMessageRepliesIfNeeded","findSlice","firstSlice","forceUserOnline","top_msg_id","handleNewMessage","inboxUnread","modifyCachedMentions","setDialogTopMessage","notifyPeer","onUpdateMessageReactions","recentReaction","previousReactions","previousRecentReactions","show_previews","peerReaction","pushBatchUpdate","batchUpdateReactions","setDialogToStateIfMessageIsTop","onUpdateDialogUnreadMark","unread_mark","onUpdateEditMessage","oldMessage","newMessage","handleEditedMessage","isTopMessage","clear_history","newReactions","grouped_id","onUpdateReadHistory","max_id","read_max_id","getObjectKeysAndSort","stillUnreadCount","still_unread_count","newUnreadMentionsCount","foundAffected","repliesKey","replyTo","reply_to_top_id","setCount","getReadMaxIdIfUnread","threadKeyPart","onUpdateReadMessagesContents","mids","findPeerIdByMids","media_unread","fixDialogUnreadMentionsIfNoMessage","onUpdateChannelAvailableMessages","availableMinId","available_min_id","onUpdateDeleteMessages","threadKeys","historyUpdated","handleDeletedMessages","threadsStorages","msgs","affected","onUpdateChannel","needDialog","onUpdateChannelReload","onUpdateChannelMessageViews","views","batchUpdateViews","onUpdateServiceNotification","popup","verified","phone","onUpdatePinnedMessages","missingMessages","werePinned","hiddenPinnedMessages","onUpdateNotifySettings","onUpdateNewScheduledMessage","isScheduled","onUpdateDeleteScheduledMessages","batch","toDispatch","getMessagesFromMap","previousResults","changedResults","reactionCount","previousReactionCount","_reactionCount","chosen","updateMessageID","updateNewDiscussionMessage","updateNewMessage","updateNewChannelMessage","updateDialogUnreadMark","updateEditMessage","updateEditChannelMessage","updateMessageReactions","updateReadChannelDiscussionInbox","updateReadChannelDiscussionOutbox","updateReadHistoryInbox","updateReadHistoryOutbox","updateReadChannelInbox","updateReadChannelOutbox","updateChannelReadMessagesContents","updateReadMessagesContents","updateChannelAvailableMessages","updateDeleteMessages","updateDeleteChannelMessages","updateChannel","updateChannelReload","updateChannelMessageViews","updateServiceNotification","updatePinnedMessages","updatePinnedChannelMessages","updateNotifySettings","updateNewScheduledMessage","updateDeleteScheduledMessages","filterFunc","getScheduledMessagesStorage","webpage","appWebPagesManager","getCachedWebPage","drop","poll","appPollsManager","pollToMessages","batchUpdatesDebounced","debounce","details","maxSeenMsgId","sendEntites","entity","invokeAfterMessageIsSent","callbackName","finalize","editMessage","is_scheduled","newMedia","noWebPage","handled","replyToMsgId","MAX_LENGTH","message_length_max","webPage","getPeerMigratedTo","generateOutgoingMessage","toggleError","on","sentRequestOptions","afterMessageId","sendAs","sendAsPeerId","apiPromise","invokeApiAfter","clear_draft","send_as","silent","wrapMessageEntities","beforeMessageSending","sequential","sendFile","attachType","apiFileName","fileType","File","isDocument","Blob","isPhoto","IMAGE_MIME_TYPES_SUPPORTED","actionName","isVoiceMessage","waveform","isMedia","photoSize","sizes","objectURL","VIDEO_MIME_TYPES_SUPPORTED","videoAttribute","isRoundMessage","supports_streaming","noSound","thumbCacheContext","sentDeferred","uploadingFileName","getFileNameForUpload","uploaded","uploadPromise","load","thumbUploadPromise","cancelPendingMessage","setTyping","addNotifyListener","percents","floor","done","notifyAll","force_file","isGroupedItem","background","ret","sendAlbum","files","sendFileDetails","groupId","invoke","multiMedia","multi_media","messageMedia","inputSingleMedia","inputs","sendContact","contactPeerId","getContactMediaInput","pollId","savePoll","total_voters","getPoll","getPhoto","postAuthor","getPeer","signatures","generateFromId","post_author","generateFlags","generateReplyHeader","via_bot_id","replies","generateReplies","replyToTopId","channelFull","appProfileManager","getCachedFullChat","linked_chat_id","comments","replies_pts","isAnonymousSending","generateForwardHeader","originalMessage","isUserHidden","from_name","userFull","getCachedFullUser","private_forward_name","channel_post","saved_from_msg_id","saved_from_peer","generateFakeAvatarMessage","Number","MAX_SAFE_INTEGER","getUploadPromise","uploadFileName","admin_rights","anonymous","fillConversations","getConversations","chatHistoryStorage","offset_date","offset_id","offset_peer","offsetPeerId","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","folderDialogs","dialogsLength","slicedDialogs","forwardMessages","config","overflowMids","forwarded_count_max","dropCaptions","dropAuthor","newMids","newMessages","replyToMid","replyToMessageIdx","newReplyToMid","group","from_peer","to_peer","with_my_score","withMyScore","drop_author","drop_media_captions","generateEmptyMessage","getMessagesStorageByKey","s","getMessagesStorage","getMessageById","getDialogByPeerId","cantForwardDeleteMids","cantForward","cantDelete","canForward","canDeleteMessage","inputDialogPeer","getInputDialogPeerById","reloadConversationsPromise","inputDialogPeers","fullfillLeft","doFlushHistory","just_clear","revoke","affectedHistory","flushHistory","justClear","getHistory","historyResult","m","ss","hidePinnedMessages","getPinnedMessage","getSearch","inputFilter","getPinnedMessagesCount","getPinnedMessagesMaxId","updatePinnedMessage","unpin","pm_oneside","unpinAllMessages","unpinAll","getAlbumText","totalEntities","foundMessages","getGroupsFirstMessage","minMid","getMidsByAlbum","getMidsByMessage","filterMessages","verify","appMessagesIdsManager","saveMessage","isMessage","reply_to_mid","overwriting","msgId","savedFromPeerId","savedFromMid","savedFrom","mediaContext","unsupported","originalDoc","messageKey","getMessageKeyForPendingWebPage","saveWebPage","migrateFrom","migrateTo","video_sizes","appGroupCallsManager","migrateChecks","getFirstMessageToEdit","goodMessage","myPeerId","canEditMessage","apiEntities","myEntities","parseEntities","mergeEntities","reportMessages","start_param","editPeerFolders","appConfig","getAppConfig","dialogs_folder_pinned_limit_premium","dialogs_folder_pinned_limit_default","dialogs_pinned_limit_premium","dialogs_pinned_limit_default","getDialogPeer","markDialogUnread","read","fromChat","canMessageBeEdited","kind","goodMedias","edit_time_limit","getReplyKeyboard","messageReplyMarkup","lastReplyMarkup","selective","maxOutId","single_use","hidden","getSearchStorage","getSearchCounters","canCache","func","filterMessagesByInputFilterFromStorage","_storage","filterMessagesByInputFilter","nextRate","backLimit","offset_id_offset","next_rate","foundMsgs","min_date","max_date","add_offset","min_id","offsetId","offsetMessage","offset_rate","searchResult","foundCount","subscribeRepliesThread","getDiscussionMessage","generateThreadServiceStartMessage","maxMessageId","serviceStartMessage","is_single","getThreadServiceMessageId","getMessageWithReplies","newDialogsHandlePromise","deleteMessages","localMessageIds","creator","delete_messages","affectedMessages","readHistory","triedToReadMaxId","readPromise","getPeerString","readAllHistory","slicedArray","fixUnreadMentionsCountIfNeeded","goToNextMention","loadNextPromise","loadNextMentions","last","getUnreadMentions","mergeHistoryResult","minId","messagesMessages","readMessages","msgIds","getHistoryStorageTransferable","historySerialized","toJSON","getNotifyPeerTypeSettings","getNotifySettings","getInputNotifyPeerById","isMessageIsTopMessage","threadMessage","broadcastEventName","pendingMessage","finalizePendingMessage","mutePeer","muteUntil","mute_until","togglePeerMute","mute","canSendToPeer","canSendToUser","finalMessage","tempMessage","newPhoto","newDoc","newPhotoSize","oldCacheContext","getPhotoDownloadOptions","thumbSize","polls","handleReleasingMessage","getMessageReactionsListAndReadParticipants","skipReadParticipants","skipReactionsList","emptyMessageReactionsList","canViewMessageReadParticipants","getMessageReadParticipants","appReactionsManager","getMessageReactionsList","messageReactionsList","readParticipantsPeerIds","filteredReadParticipants","some","readPeerId","reactionsCount","readParticipants","chat_read_mark_size_threshold","chat_read_mark_expire_period","incrementMessageViews","increment","chatPeerIds","idleStartTime","getScheduledMessageByPeer","getScheduledMessages","sendScheduledMessages","deleteScheduledMessages","getMessageWithCommentReplies","isFetchIntervalNeeded","getNewHistory","unsetEnd","isBottomEnd","getEnds","offsetIdOffset","haveSlice","sliceMe","fulfilled","fillHistoryStorage","constructSlice","isHistoryResultEnd","topWasMeantToLoad","wasMaxId","requestHistory","newMaxId","deleteSlice","oldestMessage","foundSlice","_historyResult","fetchSingleMessages","requestPromises","getMessagesResult","fetchMessageReplyTo","replyToPeerId","reply_to_peer_id","typing","smth","deleteWebPageFromPending","updatePollToMessage","groupedId","groupedStorage","albums","peerMessagesToHandle","dispatchAlbumEdit","deletedMids","noforwards","noForwards","getElementCallback","newMap","peerIdStr","saveDefaultSendAs","default_send_as","convertInputKeyToKey","inputKey","AppNotificationsManager","peerSettings","notifyUsers","notifyChats","notifyBroadcasts","checkMuteUntil","checkMuteUntilTimeout","closestMuteUntil","peerNotifySettings","checkMuteUntilThrottled","throttle","notifySettings","getNotifyPeerTypePromise","getContactSignUpNotification","notifyContactsSignUp","setContactSignUpNotification","getPeerMuted","getPeerLocalSettings","respectType","n","typeNotifySettings","AppPeersManager","canPinMessage","getPeerPhoto","getUserPhoto","getUserString","getPeerUsername","getRestrictionReasonText","ignorePeerId","getUserInputPeer","getUserSearchText","getDialogType","getDeleteButtonText","AppPhotosManager","photos","oldPhoto","getUserPhotos","inputUser","photosResult","photoIds","photoId","AppPollsManager","updateMessagePoll","poll_id","saveResults","chosenIndexes","answer","getInputMediaPoll","correctAnswers","solution","solutionEntities","correct_answers","solution_entities","sendVote","optionIds","answers","option","getResults","getVotes","votesList","stopPoll","closed","newPoll","AppPrivacyManager","privacy","updatePrivacy","rules","setPrivacy","privacyRules","inputRule","rule","getPrivacy","privacyKey","AppProfileManager","usersFull","chatsFull","onUpdateUserTyping","typingsInPeer","t","cancelAction","getChatFull","onUpdatePeerBlocked","blocked","updateChatParticipants","chatFull","updateChatParticipantAdd","_participants","updateChatParticipantDelete","updateUserTyping","updateChatUserTyping","updateChannelUserTyping","updatePeerBlocked","fullChat","updated","call_active","hasChatPhoto","chat_photo","refreshFullPeer","invalidateChannelParticipants","getProfile","usersUserFull","full_user","profile_photo","getProfileByPeerId","getCachedProfileByPeerId","getFullPhoto","profile","getChannelFull","full_chat","getChatInviteLink","exported_invite","link","exportedInvite","getChannelParticipants","broadcast","getChannelParticipant","channelParticipant","fullChannel","processError","getMentions","processUserIds","ratingMap","cP","updateProfile","saveApiUser","uploadProfilePhoto","updateResult","strippedThumb","stripped_thumb","previous","deletePhotos","deletedList","verifyParticipantForOnlineCount","reduceParticipantsForOnlineCount","getOnlines","chatInfo","channelParticipants","onlines","getPeerTypings","callbackifyAll","SAVE_DOC_KEYS","REFERENCE_CONTEXT","AppReactionsManager","availableReactions","getAvailableReactions","sendReactionPromises","lastSendingTimes","availableReaction","around_animation","static_icon","appear_animation","center_icon","messagesAvailableReactions","getActiveAvailableReactions","callbackify","inactive","getAvailableReactionsForPeer","activeAvailableReactions","unshiftQuickReaction","getQuickReaction","quickReaction","filteredChatAvailableReactions","unshiftQuickReactionInner","findAndSplice","getAvailableReactionsByMessage","isReactionActive","reactions_default","getReactionCached","getReaction","getMessagesReactions","setDefaultReaction","sendReaction","lastSendingTimeKey","chosenReactionIdx","chosenReaction","can_see_list","reactionCountIdx","userReaction","promiseKey","editMessageUpdateIdx","editMessageUpdate","EMOJI_SET_LOCAL_ID","EMOJI_ANIMATIONS_SET_LOCAL_ID","LOCAL_IDS_SET","AppStickersManager","getStickerSetPromises","getStickersByEmoticonsPromises","sounds","getAnimatedEmojiStickerSet","getGreetingStickersPromise","getGreetingStickersTimeout","getGreetingSticker","updateNewStickerSet","stickerSet","saveStickerSet","justPreload","getStickersByEmoticon","greetingStickers","random","saveStickers","getStickerSet","cachedSet","documents","refreshTime","useCache","getStickerSetInput","saveById","animations","getAnimatedEmojiSoundsPromise","emojies_sounds","sound","bytesStr","atob","file_reference_base64","charCodeAt","this_dc","getRecentStickers","stickers","cleanEmoji","getAnimatedEmojiSticker","isAnimation","packs","getAnimatedEmojiSoundDocument","preloadAnimatedEmojiSticker","preloadEmojiPromise","preloadAnimatedEmojiStickerAnimation","animation","newSet","setToCache","needSave","installed_date","getStickerSetThumbDownloadOptions","thumb_dc_id","isAnimated","mimeType","getFeaturedStickers","sets","covered","videos","toggleStickerSet","archived","searchStickerSets","excludeFeatured","exclude_featured","foundSaved","cache","cover","getAllStickers","allStickers","preloadStickerSets","includeOurStickers","messagesStickers","installedSets","recentStickers","foundStickers","cachedStickersAnimated","cachedStickersStatic","iteratePacks","pushRecentSticker","docEmoticon","_doc","cleanUsername","AppUsersManager","usernames","getTopPeersPromises","contactsIndex","createSearchIndex","contactsFillPromise","contactsList","updatedContactsList","updateUsersStatuses","timestampNow","updateUserStatus","setInterval","expires","was_online","setUserToStateIfNeeded","updateUserPhoto","updateUserName","setUserNameToCache","contactsListCachedTime","contact","mutual_contact","pushContact","recentSearch","onContactsModified","fromServer","pushRecentSearch","clearRecentSearch","resolveUsername","resolvedPeer","processResolvedPeer","resolvePhone","popContact","getContacts","includeSaved","sortBy","_contactsList","userId1","userId2","sortName1","sortName","sortName2","localeCompare","status1","getUserStatusForSort","myUserId","testSelfSearch","getContactsPeerIds","toggleBlock","block","apiUsers","oldUser","oldSearchUsername","searchUsername","fullName","wasContact","newContact","onContactUpdated","isUserOnlineVisible","isRegularUser","support","isNonContactUser","eventTimestamp","importContact","importContacts","phones","inputContacts","j","client_id","importedContactsResult","imported","importedContact","topPeersCache","cachedTime","categories","getBlocked","contactsBlocked","getLocated","self_expires","searchContacts","pathname","my_results","curIsContact","setUserStatus","offline","updateMyOnlineStatus","addContact","showPhone","add_phone_privacy_exception","deleteContacts","photoTypeSet","AppWebPagesManager","webpages","pendingWebPages","updateWebPage","apiWebPage","oldWebPage","isUpdated","siteName","site_name","shortTitle","author","description","pendingSet","getWebPage","ApiFileManager","cacheStorage","downloadPromises","uploadPromises","downloadPulls","downloadActives","refreshReferencePromises","uncompressTGS","uncompressTGV","svgIndex","__","fixFirefoxSvg","TextEncoder","convertWebp","convertOpus","downloadRequest","cb","activeDelta","downloadPull","downloadCheck","downloadLimit","networkPromise","race","setQueueId","getFileStorage","cancelDownload","canceled","cancel","requestWebFilePart","checkCancel","fileDownload","getDelta","checkedReference","getLimitPart","inputFileLocation","isDownloading","getDownload","getUpload","fileManager","IS_OPUS_SUPPORTED","cachedPromise","fileStorage","cacheFileWriter","resolved","errorHandler","_error","truncate","getFile","getFileWriter","fileWriter","writeFileDeferred","writeFilePromise","processDownloaded","delayed","superpuper","isFinal","write","getParts","processedResult","replaceParts","realSize","Infinity","getDownloadMediaDetails","downloadMediaURL","downloadMediaVoid","fileSize","isBigFile","doneParts","partSize","totalParts","fileId","_part","resultInputFile","parts","md5_checksum","it","reader","FileReader","readBlobAs","file_id","file_part","file_total_parts","fileUpload","generator","ApiManagerMethods","apiPromisesSingleProcess","apiPromisesSingle","apiPromisesCacheable","afterMessageIdTemp","setUserAuth","prepareTempMessageId","queryJSON","cacheKey","oldPromise","getAppConfigPromise","ignore_restriction_reasons","ApiManager","cachedNetworkers","cachedExportPromise","gettingNetworkers","baseDcId","afterMessageTempIds","changeTransportType","getTransportType","iterateNetworkers","connections","dcs","array","oldTransportType","oldObject","oldGetKey","newGetKey","info","changeNetworkerTransport","getBaseDcId","setBaseDcId","userAuth","dcID","user_auth","wasDcId","getNetworker","setOnDrainIfNeeded","dc","logOut","loggingOut","storageKeys","storageResult","logoutPromises","ignoreErrors","toggleStorages","generateNetworkerGetKey","networkers","maxNetworkers","found","isOnline","ak","authKeyHex","serverSaltHex","authKey","bytesFromHex","authKeyId","serverSalt","networkerFactory","authorizer","newTransportType","removeTransport","stack","getNetworkerVoid","oldTransport","changeTransport","onDrain","isFileNetworker","canRelease","removeNetworker","setDrainTimeout","updatesProcessor","startTime","interval","cachedNetworker","isStopped","clearInterval","performRequest","wrapApiCall","exportResolve","exportReject","exportedAuth","newDcId","unsetConnectionInited","rawError","waitTime","floodMaxTimeout","attachPromise","originalError","PeersStorage","neededPeers","singlePeerMap","ThumbsStorage","thumbsCache","thumbFullSize","intToUint","longFromInts","high","low","shiftLeft","boolFalse","predicate","boolTrue","vector","gzipPacked","TLSerialization","mtproto","startMaxLength","createBuffer","ArrayBuffer","intView","Int32Array","byteView","getArray","resultBuffer","resultInt32","subarray","getBuffer","getBytes","typed","resultArray","getOffset","checkLength","needBytes","previousBuffer","previousArray","writeInt","field","storeInt","storeBool","storeLongP","iHigh","iLow","storeLong","sLong","storeIntBytes","quotient","remainder","divmod","toJSNumber","storeDouble","Float64Array","storeString","sUTF8","unescape","storeBytes","bits","storeRawBytes","storeMethod","methodName","methodData","methods","flagsOffsets","param","condType","fieldBit","storeObject","paramName","substr","itemType","schema","isBare","constructorData","TLDeserialization","readInt","fetchInt","fetchDouble","doubleView","fetchLong","longDec","isSafeInteger","fetchBool","fetchObject","fetchString","String","fromCharCode","decodeURIComponent","escape","fetchBytes","fetchIntBytes","fetchRawBytes","fetchVector","fallback","checkType","constructorCmp","uncompressed","constructorsIndex","schemaFallback","int1","int2","overrideKey","isCond","formatJSONValue","jsonValue","objectValues","objectValue","setOffset","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","bufferConcats","bigIntFromBytes","base","delays","disconnectDelayMin","disconnectDelayMax","pingInterval","pingMaxTime","connectionTimeout","RESEND_OPTIONS","noSchedule","notContentRelated","invokeAfterMsgConstructor","MTPNetworker","lastServerMessages","sentMessages","pendingMessages","pendingAcks","pendingResendReq","nextReq","checkConnectionPeriod","lastResponseTime","activeRequests","sendPingDelayDisconnect","pingDelayDisconnectDeferred","lastPingTime","disconnectDelay","round","timeoutTime","pingId","lastPingDelayDisconnectId","wrapMtpCall","ping_id","disconnect_delay","rejectTimeout","elapsedTime","checkLongPoll","isClean","longPollPending","sleepAfter","sendLongPoll","checkConnection","clearCheckConnectionTimeout","serializer","pingMessage","generateId","seq_no","generateSeqNo","sendEncryptedRequest","toggleOffline","checkConnectionTimeout","authKeyUint8","convertToUint8Array","isFileUpload","isFileDownload","updateSession","seqNo","prevSessionId","updateSentMessage","sentMessageId","sentMessage","container","inner","innerSentMessageId","innerSentMessage","pushMessage","wrapMtpMessage","connectionInited","invokeWithLayer","initConnection","resultType","isAPI","nextReqTimeout","longPollInterval","clearPingDelayDisconnect","forceReconnectTimeout","sendingLongPoll","max_delay","wait_after","max_wait","noResponse","longPoll","delay","checkConnectionRetryAt","scheduleRequest","handleSentEncryptedRequestHTTP","noResponseMsgs","sqrt","pushResend","shouldResolve","onDrainTimeout","willChange","onConnectionStatusChange","innerMsgId","acked","getMsgKey","dataWithPadding","x","msgKeyLargePlain","msgKeyLarge","getAesKeyIv","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","akStopped","performScheduledRequest","ackMsgIds","msg_ids","pendingResendReqLength","outMessage","messagesByteLen","hasApiCall","hasHttpWait","lengthOverflow","compare","bigInt","messageByteLength","generateContainerMessage","messageWithBody","innerMessages","getEncryptedMessage","keyIv","getDecryptedMessage","encryptedData","getEncryptedOutput","dataBuffer","paddingLength","encryptedResult","requestData","baseError","responseBuffer","deserializer","bytesCmp","calcMsgKey","totalLength","messageBodyLength","messageBody","mt_message","seqno","mt_rpc_result","req_msg_id","applyServerSalt","newServerSalt","toArray","ackMessage","reqResend","notEmpty","processMessageAck","error_message","error_code","msg","applyServerTime","serverTime","shiftRight","innerMessage","new_server_salt","bad_msg_id","changedTimeOffset","badMessage","first_msg_id","server_salt","answer_msg_id","lastResendReq","lastResend","pendingResend","reqMsgId","badMsgId","NetworkerFactory","startAll","stoppedNetworkers","stopAll","setLanguage","testPublicKeysHex","modulus","exponent","publisKeysHex","publicKeysParsed","prepared","preparePromise","prepare","keyParsed","RSAPublicKey","fingerprintBytes","fingerprints","fingerprintHex","fill","foundKey","fingerprint","bytesXor","bytes1","bytes2","Authorizer","sendPlainRequest","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","sendReqPQ","nonce","rsaKeysManager","serverNonce","server_nonce","pq","server_public_key_fingerprints","publicKey","pAndQ","sendReqDhParams","newNonce","p_q_inner_data_dc","new_nonce","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","getKeyAesEncrypted","req_DH_params","public_key_fingerprint","encrypted_data","requestBytes","newNonceHash","new_nonce_hash","decryptServerDhDataAnswer","encrypted_answer","sendSetClientDhParams","encryptedAnswer","localTime","tmpAesKey","tmpAesIv","answerWithHash","answerWithPadding","g","dhPrime","dh_prime","gA","g_a","server_time","retry","verifyDhParams","dhPrimeHex","gABigInt","dhPrimeBigInt","subtract","twoPow","pow","gBytes","gB","retry_id","authKeyHash","authKeyAux","newNonceHash1","new_nonce_hash1","newNonceHash2","new_nonce_hash2","newNonceHash3","new_nonce_hash3","getTransportTypePromise","_try","TimeManager","lastMessageId","timeOffset","timeTicks","newTimeOffset","changed","abs","server_time_offset","appManagersManager","cryptoPortPromise","getManagers","manager","apply","cryptoPortAttached","ports","createManagers","appAvatarsManager","appCallsManager","appPrivacyManager","appInlineBotsManager","appEmojiManager","passwordManager","_isServiceWorkerOnline","pushedKeys","clearWrite","invokeExceptSource","serviceWorkerOnline","messagePort","onConnect","onDisconnect","attachPort","setOnPortDisconnect","listenMessagePort","NULL_PEER_ID","REPLIES_PEER_ID","REPLIES_HIDDEN_CHANNEL_ID","SERVICE_PEER_ID","MUTE_UNTIL","CAN_COMBINE_ENTITIES","combineSameEntities","nextEntityIdx","_i","nextEntity","SINGLE_ENTITIES","findConflictingEntity","currentEntities","newEntity","singleEnd","currentEntity","ALPHA_CHARS_REG_EXP","URL_ALPHANUMERIC_REG_EXP_PART","URL_PROTOCOL_REG_EXP_PART","URL_REG_EXP","URL_ANY_PROTOCOL_REG_EXP","FULL_REG_EXP","EMAIL_REG_EXP","MARKDOWN_REG_EXP","MARKDOWN_ENTITIES","PASS_CONFLICTING_ENTITIES","PHONE_NUMBER_REG_EXP","newEntities","filtered","sortEntities","encodeEmoji","emojiText","unicodeSurrogates","points","char","toCodePoints","removeVS16s","vs16RegExp","zeroWidthJoiner","rawEmoji","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","every","getter","__esModule","definition","enumerable","chunkId","miniCssF","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","scriptUrl","importScripts","currentScript","scripts","getElementsByTagName","retries","realSrc","cacheBust","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","runtime"],"sourceRoot":""}
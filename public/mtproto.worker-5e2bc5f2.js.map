{"version":3,"file":"mtproto.worker-5e2bc5f2.js","sources":["src/helpers/bytes/bufferConcats.ts","src/lib/polyfill.ts","src/lib/appManagers/utils/peers/isAnyChat.ts","src/lib/appManagers/utils/peers/isUser.ts","src/helpers/peerIdPolyfill.ts","src/config/modes.ts","src/config/debug.ts","src/config/tabId.ts","src/environment/ctx.ts","src/helpers/array/indexOfAndSplice.ts","src/helpers/context.ts","src/helpers/array/findAndSplice.ts","src/helpers/eventListenerBase.ts","src/helpers/makeError.ts","src/environment/userAgent.ts","src/helpers/dT.ts","src/lib/logger.ts","src/lib/mtproto/superMessagePort.ts","src/lib/crypto/cryptoMessagePort.ts","src/environment/utils.ts","src/lib/mtproto/mtproto_config.ts","src/lib/mtproto/mtprotoMessagePort.ts","src/lib/rootScope.ts","src/helpers/noop.ts","src/helpers/cancellablePromise.ts","src/helpers/schedulers/throttle.ts","src/helpers/object/safeAssign.ts","src/lib/files/idb.ts","src/lib/storage.ts","src/config/databases/state.ts","src/lib/stateStorage.ts","src/helpers/object/setDeepProperty.ts","src/lib/appManagers/appStateManager.ts","src/config/app.ts","src/helpers/schedulers/pause.ts","src/lib/mtproto/transports/http.ts","src/lib/mtproto/transports/websocket.ts","src/helpers/array/randomize.ts","src/lib/mtproto/transports/obfuscation.ts","src/lib/mtproto/transports/abridged.ts","src/lib/mtproto/connectionStatus.ts","src/helpers/bytes/bytesToHex.ts","src/lib/mtproto/transports/tcpObfuscated.ts","src/lib/mtproto/dcConfigurator.ts","src/lib/mtproto/transports/controller.ts","src/lib/appManagers/utils/storages/resetStoragesPromise.ts","src/lib/serviceWorker/serviceMessagePort.ts","src/helpers/callbackify.ts","src/lib/appManagers/manager.ts","src/lib/appManagers/utils/storages/createStorages.ts","src/helpers/recordPromise.ts","src/lib/appManagers/utils/storages/loadStorages.ts","src/lib/appManagers/appStoragesManager.ts","src/lib/mtproto/passwordManager.ts","src/helpers/object/deepEqual.ts","src/lib/mtproto/referenceDatabase.ts","src/helpers/tsNow.ts","src/config/latinizeMap.ts","src/helpers/cleanSearchText.ts","src/helpers/array/flatten.ts","src/lib/searchIndex.ts","src/helpers/long/compareLong.ts","src/helpers/compareValue.ts","src/helpers/slicedArray.ts","src/helpers/array/forEachReverse.ts","src/helpers/array/insertInDescendSortedArray.ts","src/helpers/object/safeReplaceObject.ts","src/lib/appManagers/utils/messageId/clearMessageId.ts","src/lib/appManagers/utils/messageId/getServerMessageId.ts","src/lib/appManagers/utils/dialogs/getDialogIndexKey.ts","src/helpers/object/isObject.ts","src/lib/appManagers/utils/dialogs/getDialogIndex.ts","src/lib/appManagers/utils/peers/getPeerId.ts","src/lib/appManagers/utils/messages/getPeerIdsFromMessage.ts","src/helpers/object/defineNotNumerableProperties.ts","src/lib/appManagers/utils/dialogs/setDialogIndex.ts","src/lib/storages/dialogs.ts","src/helpers/object/copy.ts","src/lib/storages/filters.ts","src/helpers/array/filterUnique.ts","src/vendor/emoji/regex.ts","src/lib/richTextProcessor/index.ts","src/lib/richTextProcessor/combineSameEntities.ts","src/lib/richTextProcessor/findConflictingEntity.ts","src/lib/richTextProcessor/sortEntities.ts","src/lib/richTextProcessor/mergeEntities.ts","src/lib/richTextProcessor/parseMarkdown.ts","src/helpers/applyMixins.ts","src/lib/appManagers/apiUpdatesManager.ts","src/lib/appManagers/appAvatarsManager.ts","src/helpers/random.ts","src/lib/appManagers/appCallsManager.ts","src/lib/appManagers/utils/chats/hasRights.ts","src/lib/appManagers/utils/chats/getParticipantPeerId.ts","src/lib/appManagers/utils/peers/getPeerActiveUsernames.ts","src/lib/appManagers/appChatsManager.ts","src/helpers/string/capitalizeFirstLetter.ts","src/lib/richTextProcessor/matchUrlProtocol.ts","src/lib/richTextProcessor/wrapUrl.ts","src/helpers/dom/setInnerHTML.ts","src/lib/langPack.ts","src/helpers/date.ts","src/helpers/object/safeReplaceArrayInObject.ts","src/lib/richTextProcessor/spoiler.ts","src/lib/richTextProcessor/encodeSpoiler.ts","src/lib/richTextProcessor/wrapPlainText.ts","src/lib/appManagers/utils/docs/getDocumentInputFileLocation.ts","src/helpers/fileName.ts","src/lib/appManagers/utils/docs/getDocumentDownloadOptions.ts","src/lib/appManagers/utils/docs/getDocumentURL.ts","src/environment/mimeTypeMap.ts","src/lib/appManagers/appDocsManager.ts","src/lib/appManagers/utils/messages/repliesAreEqual.ts","src/lib/appManagers/utils/drafts/draftsAreEqual.ts","src/lib/appManagers/appDraftsManager.ts","src/helpers/object/validateInitObject.ts","src/lib/richTextProcessor/fixEmoji.ts","src/lib/appManagers/appEmojiManager.ts","src/lib/appManagers/appGroupCallsManager.ts","src/lib/appManagers/utils/photos/getPhotoInput.ts","src/lib/appManagers/utils/photos/getPhotoMediaInput.ts","src/lib/appManagers/utils/inlineBots/generateQId.ts","src/lib/appManagers/utils/docs/getDocumentMediaInput.ts","src/lib/appManagers/appInlineBotsManager.ts","src/lib/appManagers/utils/messageId/isLegacyMessageId.ts","src/lib/appManagers/appMessagesIdsManager.ts","src/components/lazyLoadQueueBase.ts","src/helpers/middleware.ts","src/helpers/object/getObjectKeysAndSort.ts","src/helpers/string/splitStringByLength.ts","src/helpers/schedulers/debounce.ts","src/lib/richTextProcessor/matchUrl.ts","src/lib/appManagers/utils/messages/filterMessagesByInputFilter.ts","src/helpers/getFileNameForUpload.ts","src/lib/appManagers/appTabsManager.ts","src/lib/appManagers/utils/messages/getAlbumText.ts","src/lib/appManagers/utils/stickers/getStickerEffectThumb.ts","src/lib/appManagers/utils/docs/getDocumentInput.ts","src/lib/appManagers/utils/reactions/availableReactionToReaction.ts","src/lib/appManagers/utils/reactions/reactionsEqual.ts","src/helpers/object/setBooleanFlag.ts","src/lib/appManagers/utils/messages/getMessageThreadId.ts","src/config/tld.ts","src/lib/richTextProcessor/checkBrackets.ts","src/config/emoji.ts","src/vendor/emoji/index.ts","src/lib/richTextProcessor/getEmojiUnified.ts","src/lib/richTextProcessor/parseEntities.ts","src/lib/richTextProcessor/wrapMessageEntities.ts","src/lib/appManagers/appMessagesManager.ts","src/helpers/string/convertInputKeyToKey.ts","src/lib/appManagers/appNotificationsManager.ts","src/helpers/restrictions.ts","src/lib/appManagers/utils/peers/isPeerRestricted.ts","src/lib/appManagers/utils/peers/getPeerPhoto.ts","src/lib/appManagers/appPeersManager.ts","src/lib/appManagers/appPhotosManager.ts","src/lib/appManagers/appPollsManager.ts","src/lib/appManagers/appPrivacyManager.ts","src/lib/appManagers/appProfileManager.ts","src/helpers/callbackifyAll.ts","src/lib/appManagers/appReactionsManager.ts","src/helpers/fixBase64String.ts","src/lib/appManagers/appStickersManager.ts","src/helpers/cleanUsername.ts","src/lib/appManagers/utils/users/canSendToUser.ts","src/lib/appManagers/appUsersManager.ts","src/lib/appManagers/appWebPagesManager.ts","src/helpers/blob/blobSafeMimeType.ts","src/helpers/blob/blobConstruct.ts","src/lib/files/memoryWriter.ts","src/lib/files/cacheStorage.ts","src/helpers/blob/readBlobAs.ts","src/helpers/blob/readBlobAsArrayBuffer.ts","src/helpers/fixFirefoxSvg.ts","src/lib/appManagers/utils/photos/getPhotoDownloadOptions.ts","src/lib/appManagers/utils/webFiles/getWebFileDownloadOptions.ts","src/lib/appManagers/utils/webDocs/getWebDocumentDownloadOptions.ts","src/lib/appManagers/utils/webDocs/isWebDocument.ts","src/lib/appManagers/utils/webFiles/isWebFileLocation.ts","src/lib/appManagers/utils/download/getDownloadFileNameFromOptions.ts","src/lib/appManagers/utils/download/getDownloadMediaDetails.ts","src/helpers/blob/readBlobAsUint8Array.ts","src/helpers/string/fileNameRFC.ts","src/lib/files/downloadWriter.ts","src/lib/files/downloadStorage.ts","src/lib/mtproto/apiFileManager.ts","src/lib/localStorage.ts","src/lib/sessionStorage.ts","src/helpers/bytes/bytesFromHex.ts","src/lib/mtproto/api_methods.ts","src/helpers/toggleStorages.ts","src/lib/mtproto/apiManager.ts","src/lib/storages/peers.ts","src/lib/storages/utils/thumbs/generateEmptyThumb.ts","src/lib/storages/utils/thumbs/getStickerThumbKey.ts","src/lib/storages/utils/thumbs/getThumbKey.ts","src/lib/storages/thumbs.ts","src/lib/mtproto/schema.ts","node_modules/.pnpm/pako@2.1.0/node_modules/pako/dist/pako_inflate.min.js","src/helpers/gzipUncompress.ts","node_modules/.pnpm/big-integer@1.6.51/node_modules/big-integer/BigInteger.js","src/helpers/number/intToUint.ts","src/helpers/long/ulongFromInts.ts","src/helpers/bigInt/bigIntConstants.ts","src/helpers/bigInt/bigIntConversion.ts","src/lib/mtproto/tl_utils.ts","src/helpers/bytes/addPadding.ts","src/helpers/long/longToBytes.ts","src/helpers/bytes/bytesCmp.ts","src/helpers/bytes/convertToUint8Array.ts","src/helpers/long/sortLongsArray.ts","src/lib/mtproto/networker.ts","src/lib/mtproto/networkerFactory.ts","src/lib/mtproto/rsaKeysManager.ts","src/helpers/bytes/bytesXor.ts","src/lib/mtproto/authorizer.ts","src/lib/mtproto/timeManager.ts","src/lib/appManagers/appWebDocsManager.ts","src/lib/appManagers/appPaymentsManager.ts","src/lib/appManagers/utils/attachMenuBots/getAttachMenuBotIcon.ts","src/lib/appManagers/appAttachMenuBotsManager.ts","src/lib/appManagers/appSeamlessLoginManager.ts","src/lib/appManagers/appThemesManager.ts","src/lib/appManagers/appUsernamesManager.ts","src/lib/appManagers/appChatInvitesManager.ts","src/lib/appManagers/utils/stories/cacheType.ts","src/lib/appManagers/utils/stories/insertStory.ts","src/lib/appManagers/appStoriesManager.ts","src/lib/appManagers/appBotsManager.ts","src/lib/appManagers/appBoostsManager.ts","src/lib/appManagers/appStatisticsManager.ts","src/lib/appManagers/createManagers.ts","src/lib/appManagers/appManagersManager.ts","src/helpers/listenMessagePort.ts","src/lib/mtproto/mtproto.worker.ts"],"sourcesContent":["export default function bufferConcats(...args: (ArrayBuffer | Uint8Array | number[])[]) {\r\n  const length = args.reduce((acc, v) => acc + ((v as ArrayBuffer).byteLength || (v as Uint8Array).length), 0);\r\n\r\n  const tmp = new Uint8Array(length);\r\n\r\n  let lastLength = 0;\r\n  args.forEach((b) => {\r\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\r\n    lastLength += (b as ArrayBuffer).byteLength || (b as Uint8Array).length;\r\n  });\r\n\r\n  return tmp/* .buffer */;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport bufferConcats from '../helpers/bytes/bufferConcats';\r\n\r\nUint8Array.prototype.concat = function(...args: Array<Uint8Array | ArrayBuffer | number[]>) {\r\n  return bufferConcats(this, ...args);\r\n};\r\n\r\n/* Uint8Array.prototype.toString = function() {\r\n  return String.fromCharCode.apply(null, [...this]);\r\n}; */\r\n\r\nUint8Array.prototype.toJSON = function() {\r\n  return [...this];\r\n  // return {type: 'bytes', value: [...this]};\r\n};\r\n\r\nPromise.prototype.finally = Promise.prototype.finally || function<T>(this: Promise<T>, fn: () => any) {\r\n  const onFinally = (callback: typeof fn) => Promise.resolve(fn()).then(callback);\r\n  return this.then(\r\n    result => onFinally(() => result),\r\n    reason => onFinally(() => Promise.reject(reason))\r\n  );\r\n};\r\n\r\ndeclare global {\r\n  interface Uint8Array {\r\n    concat: (...args: Array<Uint8Array | ArrayBuffer | number[]>) => Uint8Array,\r\n    // toString: () => string,\r\n    toJSON: () => number[],\r\n    // toJSON: () => {type: 'bytes', value: number[]},\r\n  }\r\n\r\n  interface Promise<T> {\r\n    finally: (onfinally?: () => void) => Promise<T>;\r\n  }\r\n}\r\n","export default function isAnyChat(peerId: PeerId) {\r\n  return +peerId < 0;\r\n}\r\n","export default function isUser(peerId: PeerId) {\r\n  return +peerId >= 0;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport isAnyChat from '../lib/appManagers/utils/peers/isAnyChat';\r\nimport isUser from '../lib/appManagers/utils/peers/isUser';\r\n\r\nString.prototype.toUserId = function() {\r\n  return (+this).toUserId();\r\n};\r\n\r\nString.prototype.toChatId = function() {\r\n  return (+this).toChatId();\r\n};\r\n\r\nString.prototype.toPeerId = function(isChat?: boolean) {\r\n  return (+this).toPeerId(isChat);\r\n};\r\n\r\nString.prototype.isPeerId = function() {\r\n  return /^[\\d-]/.test(this.toString());\r\n};\r\n\r\n// * don't return just 'this', because Firefox returns empty `Number` class\r\nNumber.prototype.toUserId = function() {\r\n  return +this;\r\n};\r\n\r\nNumber.prototype.toChatId = function() {\r\n  return Math.abs(this as any);\r\n};\r\n\r\n// * don't return just 'this', because Firefox returns empty `Number` class\r\nNumber.prototype.toPeerId = function(isChat?: boolean) {\r\n  return isChat === undefined ? +this : (isChat ? -Math.abs(this as number) : +this);\r\n};\r\n\r\nNumber.prototype.isPeerId = function() {\r\n  return true;\r\n};\r\n\r\n[\r\n  ['isUser' as const, isUser],\r\n  ['isAnyChat' as const, isAnyChat]\r\n].forEach((value) => {\r\n  const newMethod = Array.isArray(value) ? value[0] : value;\r\n  const originMethod = Array.isArray(value) ? value[1] : value;\r\n  // @ts-ignore\r\n  String.prototype[newMethod] = function() {\r\n    // @ts-ignore\r\n    // eslint-disable-next-line no-useless-call\r\n    return originMethod.call(null, this.toString());\r\n  };\r\n\r\n  // @ts-ignore\r\n  Number.prototype[newMethod] = function() {\r\n    // * don't use just 'this', because Firefox returns empty `Number` class\r\n    // @ts-ignore\r\n    // eslint-disable-next-line no-useless-call\r\n    return originMethod.call(null, +this);\r\n  };\r\n});\r\n\r\ndeclare global {\r\n  interface String {\r\n    toUserId(): UserId;\r\n    toChatId(): ChatId;\r\n    toPeerId(isChat?: boolean): PeerId;\r\n    isPeerId(): this is string;\r\n\r\n    isUser(): boolean;\r\n    isAnyChat(): boolean;\r\n  }\r\n\r\n  interface Number {\r\n    toUserId(): UserId;\r\n    toChatId(): ChatId;\r\n    toPeerId(isChat?: boolean): PeerId;\r\n    isPeerId(): this is PeerId;\r\n\r\n    isUser(): boolean;\r\n    isAnyChat(): boolean;\r\n  }\r\n}\r\n\r\nexport {};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {TransportType} from '../lib/mtproto/dcConfigurator';\r\n\r\nconst Modes = {\r\n  test: location.search.indexOf('test=1') > 0/*  || true */,\r\n  debug: location.search.indexOf('debug=1') > 0,\r\n  http: false,\r\n  ssl: true, // location.search.indexOf('ssl=1') > 0 || location.protocol === 'https:' && location.search.indexOf('ssl=0') === -1,\r\n  multipleConnections: true,\r\n  asServiceWorker: false,\r\n  transport: 'websocket' as TransportType,\r\n  noSharedWorker: location.search.indexOf('noSharedWorker=1') > 0\r\n};\r\n\r\nif(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n  Modes.http = location.search.indexOf('http=1') > 0;\r\n}\r\n\r\nif(import.meta.env.VITE_MTPROTO_HAS_HTTP || !import.meta.env.VITE_MTPROTO_HAS_WS) {\r\n  Modes.http = true;\r\n}\r\n\r\nif(Modes.http) {\r\n  Modes.transport = 'https';\r\n}\r\n\r\nif(import.meta.env.VITE_MTPROTO_SW) {\r\n  Modes.asServiceWorker = true;\r\n}\r\n\r\nexport default Modes;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from './modes';\r\n\r\nexport const IS_BETA = import.meta.env.DEV;\r\nexport const DEBUG = (IS_BETA || Modes.debug)/*  && false */;\r\nconst ctx: any = typeof(window) !== 'undefined' ? window : self;\r\nexport const MOUNT_CLASS_TO: any = DEBUG || true/*  && false */ ? ctx : {};\r\nexport default DEBUG;\r\n\r\n// let m = DEBUG;\r\n/* if(!DEBUG) {\r\n  ctx.sandpitTurtle = () => {\r\n    //if(!m) {\r\n      for(let i in MOUNT_CLASS_TO) {\r\n        ctx[i] = MOUNT_CLASS_TO[i];\r\n      }\r\n      //m = true;\r\n    //}\r\n\r\n    //DEBUG = !DEBUG;\r\n  };\r\n} */\r\n\r\n/* export const superDebug = (object: any, key: string) => {\r\n  var d = object[key];\r\n  var beforeStr = '', afterStr = '';\r\n  for(var r of d) {\r\n    beforeStr += r.before.hex + '\\n';\r\n    afterStr += r.after.hex + '\\n';\r\n  }\r\n\r\n  beforeStr = beforeStr.trim();\r\n  afterStr = afterStr.trim();\r\n  //var beforeStr = d.map((r) => r.before.hex).join('\\n');\r\n  //var afterStr = d.map((r) => r.after.hex).join('\\n');\r\n\r\n  var dada = (name: string, str: string) => {\r\n    var a = document.createElement('a');\r\n    a.target = '_blank';\r\n    a.download = name + '.txt';\r\n    a.href = URL.createObjectURL(new Blob([str], {\r\n      type: 'text/plain'\r\n    }));\r\n    document.body.append(a);\r\n    a.click();\r\n  };\r\n\r\n  dada(key + '_' + 'before', beforeStr);\r\n  dada(key + '_' + 'after', afterStr);\r\n}\r\n\r\nMOUNT_CLASS_TO.superDebug = superDebug; */\r\n","const tabId = Date.now() % Math.random() * 100000000 | 0;\r\nexport default tabId;\r\n","const ctx = typeof(window) !== 'undefined' ? window : self;\r\n\r\nexport default ctx;\r\n","export default function indexOfAndSplice<T>(array: Array<T>, item: T) {\r\n  const idx = array.indexOf(item);\r\n  const spliced = idx === -1 ? undefined : array.splice(idx, 1);\r\n  return spliced?.[0];\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// в SW может быть сразу две переменных TRUE\r\nexport const IS_SERVICE_WORKER = typeof ServiceWorkerGlobalScope !== 'undefined' && self instanceof ServiceWorkerGlobalScope;\r\nexport const IS_WEB_WORKER = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && !IS_SERVICE_WORKER;\r\nexport const IS_WORKER = IS_WEB_WORKER || IS_SERVICE_WORKER;\r\n\r\nexport const getWindowClients = () => {\r\n  return (self as any as ServiceWorkerGlobalScope)\r\n  .clients\r\n  .matchAll({includeUncontrolled: false, type: 'window'});\r\n};\r\n\r\nexport const getLastWindowClient = () => getWindowClients().then((windowClients) => windowClients.slice(-1)[0]);\r\n\r\nconst postMessage = (listener: WindowClient | DedicatedWorkerGlobalScope, ...args: any[]) => {\r\n  try {\r\n    // @ts-ignore\r\n    listener.postMessage(...args);\r\n  } catch(err) {\r\n    console.error('[worker] postMessage error:', err, args);\r\n  }\r\n};\r\n\r\nconst notifyServiceWorker = (all: boolean, ...args: any[]) => {\r\n  getWindowClients().then((listeners) => {\r\n    if(!listeners.length) {\r\n      // console.trace('no listeners?', self, listeners);\r\n      return;\r\n    }\r\n\r\n    listeners.slice(all ? 0 : -1).forEach((listener) => {\r\n      postMessage(listener, ...args);\r\n    });\r\n  });\r\n};\r\n\r\nconst notifyWorker = (...args: any[]) => {\r\n  postMessage(self as any as DedicatedWorkerGlobalScope, ...args);\r\n};\r\n\r\nconst noop = () => {};\r\n\r\nexport const notifySomeone = IS_SERVICE_WORKER ? notifyServiceWorker.bind(null, false) : (IS_WEB_WORKER ? notifyWorker : noop);\r\nexport const notifyAll = IS_SERVICE_WORKER ? notifyServiceWorker.bind(null, true) : (IS_WEB_WORKER ? notifyWorker : noop);\r\n","export default function findAndSplice<T>(array: Array<T>, verify: (value: T, index?: number, array?: Array<T>) => boolean) {\r\n  const index = array.findIndex(verify);\r\n  return index !== -1 ? array.splice(index, 1)[0] : undefined;\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport type {ArgumentTypes, SuperReturnType} from '../types';\r\nimport findAndSplice from './array/findAndSplice';\r\n\r\n// class EventSystem {\r\n//   wm: WeakMap<any, Record<any, Set<any>>> = new WeakMap();\r\n\r\n//   add(target: any, event: any, listener: any) {\r\n//     let listeners = this.wm.get(target);\r\n//     if (listeners === undefined) {\r\n//         listeners = {};\r\n//     }\r\n//     let listenersForEvent = listeners[event];\r\n//     if (listenersForEvent === undefined) {\r\n//         listenersForEvent = new Set();\r\n//     }\r\n//     listenersForEvent.add(listener);\r\n//     listeners[event] = listenersForEvent;\r\n//     //target.addEventListener(event, listener);\r\n//     this.wm.set(target, listeners);\r\n//   };\r\n\r\n//   remove(target: any, event: any, listener: any) {\r\n//     let listeners = this.wm.get(target);\r\n//     if (!listeners) return;\r\n//     let listenersForEvent = listeners[event];\r\n//     if (!listenersForEvent) return;\r\n//     listenersForEvent.delete(listener);\r\n//   };\r\n\r\n//   /* fire(target, event) {\r\n//      let listeners = this.wm.get(target);\r\n//      if (!listeners) return;\r\n//      let listenersForEvent = listeners[event];\r\n//      if (!listenersForEvent) return;\r\n//      for (let handler of handlers) {\r\n//          setTimeout(handler, 0, event, target); // we use a setTimeout here because we want event triggering to be asynchronous.\r\n//      }\r\n//   }; */\r\n// }\r\n\r\n// console.log = () => {};\r\n\r\n// const e = new EventSystem();\r\n// MOUNT_CLASS_TO.e = e;\r\n\r\nexport type EventListenerListeners = Record<string, Function>;\r\n// export type EventListenerListeners = Record<string, (...args: any[]) => any>;\r\n// export type EventListenerListeners = {[name in string]: Function};\r\n\r\n/**\r\n * Better not to remove listeners during setting\r\n * Should add listener callback only once\r\n */\r\n\r\ntype ListenerObject<T> = {callback: T, options: boolean | AddEventListenerOptions};\r\n\r\n// type EventLitenerCallback<T> = (data: T) =>\r\n// export default class EventListenerBase<Listeners extends {[name: string]: Function}> {\r\nexport default class EventListenerBase<Listeners extends EventListenerListeners> {\r\n  protected listeners: Partial<{\r\n    [k in keyof Listeners]: Array<ListenerObject<Listeners[k]>>\r\n  }>;\r\n  protected listenerResults: Partial<{\r\n    [k in keyof Listeners]: ArgumentTypes<Listeners[k]>\r\n  }>;\r\n\r\n  private reuseResults: boolean;\r\n\r\n  constructor(reuseResults?: boolean) {\r\n    this._constructor(reuseResults);\r\n  }\r\n\r\n  public _constructor(reuseResults?: boolean): any {\r\n    this.reuseResults = reuseResults;\r\n    this.listeners = {};\r\n    this.listenerResults = {};\r\n  }\r\n\r\n  public addEventListener<T extends keyof Listeners>(name: T, callback: Listeners[T], options?: boolean | AddEventListenerOptions) {\r\n    (this.listeners[name] ??= []).push({callback, options}); // ! add before because if you don't, you won't be able to delete it from callback\r\n\r\n    if(this.listenerResults.hasOwnProperty(name)) {\r\n      callback(...this.listenerResults[name]);\r\n\r\n      if((options as AddEventListenerOptions)?.once) {\r\n        this.listeners[name].pop();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // e.add(this, name, {callback, once});\r\n  }\r\n\r\n  public addMultipleEventsListeners(obj: {\r\n    [name in keyof Listeners]?: Listeners[name]\r\n  }) {\r\n    for(const i in obj) {\r\n      this.addEventListener(i, obj[i]);\r\n    }\r\n  }\r\n\r\n  public removeEventListener<T extends keyof Listeners>(\r\n    name: T,\r\n    callback: Listeners[T],\r\n    options?: boolean | AddEventListenerOptions\r\n  ) {\r\n    if(this.listeners[name]) {\r\n      findAndSplice(this.listeners[name], (l) => l.callback === callback);\r\n    }\r\n    // e.remove(this, name, callback);\r\n  }\r\n\r\n  protected invokeListenerCallback<T extends keyof Listeners, L extends ListenerObject<any>>(\r\n    name: T,\r\n    listener: L,\r\n    ...args: ArgumentTypes<L['callback']>\r\n  ) {\r\n    let result: any, error: any;\r\n    try {\r\n      result = listener.callback(...args);\r\n    } catch(err) {\r\n      error = err;\r\n      // console.error('listener callback error', err);\r\n    }\r\n\r\n    if((listener.options as AddEventListenerOptions)?.once) {\r\n      this.removeEventListener(name, listener.callback);\r\n    }\r\n\r\n    if(error) {\r\n      throw error;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private _dispatchEvent<T extends keyof Listeners>(\r\n    name: T,\r\n    collectResults: boolean,\r\n    ...args: ArgumentTypes<Listeners[T]>\r\n  ) {\r\n    if(this.reuseResults) {\r\n      this.listenerResults[name] = args;\r\n    }\r\n\r\n    const arr: Array<SuperReturnType<Listeners[typeof name]>> = collectResults && [];\r\n\r\n    const listeners = this.listeners[name];\r\n    if(listeners) {\r\n      // ! this one will guarantee execution even if delete another listener during setting\r\n      const left = listeners.slice();\r\n      left.forEach((listener) => {\r\n        const index = listeners.findIndex((l) => l.callback === listener.callback);\r\n        if(index === -1) {\r\n          return;\r\n        }\r\n\r\n        const result = this.invokeListenerCallback(name, listener, ...args);\r\n        if(arr) {\r\n          arr.push(result);\r\n        }\r\n      });\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  public dispatchResultableEvent<T extends keyof Listeners>(name: T, ...args: ArgumentTypes<Listeners[T]>) {\r\n    return this._dispatchEvent(name, true, ...args);\r\n  }\r\n\r\n  // * must be protected, but who cares\r\n  public dispatchEvent<L extends EventListenerListeners = Listeners, T extends keyof L = keyof L>(\r\n    name: T,\r\n    ...args: ArgumentTypes<L[T]>\r\n  ) {\r\n    // @ts-ignore\r\n    this._dispatchEvent(name, false, ...args);\r\n  }\r\n\r\n  public cleanup() {\r\n    this.listeners = {};\r\n    this.listenerResults = {};\r\n  }\r\n}\r\n","const CACHED_ERRORS: {[key in Error['type']]?: ApiError} = {};\r\nexport default function makeError(type: Error['type']) {\r\n  return CACHED_ERRORS[type] ??= {\r\n    type\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ctx from './ctx';\r\n\r\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\r\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\r\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\r\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\nexport const CHROMIUM_VERSION = (() => {\r\n  try {\r\n    return +navigator.userAgent.match(/Chrom(?:e|ium)\\/(.+?)(?:\\s|\\.)/)[1];\r\n  } catch(err) {\r\n  }\r\n})();\r\n\r\n// https://stackoverflow.com/a/58065241\r\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\r\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\r\n  !(ctx as any).MSStream;\r\n\r\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\r\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n\r\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\r\n\r\nexport const IS_MOBILE = (navigator.maxTouchPoints === undefined || navigator.maxTouchPoints > 0) && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\r\n","const _logTimer = Date.now();\r\nexport default function dT() {\r\n  return '[' + ((Date.now() - _logTimer) / 1000).toFixed(3) + ']';\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG from '../config/debug';\r\nimport {IS_FIREFOX, IS_SAFARI} from '../environment/userAgent';\r\nimport {IS_SERVICE_WORKER, IS_WEB_WORKER} from '../helpers/context';\r\nimport dT from '../helpers/dT';\r\n\r\nexport enum LogTypes {\r\n  None = 0,\r\n  Error = 1,\r\n  Warn = 2,\r\n  Log = 4,\r\n  Debug = 8\r\n};\r\n\r\nexport const LOG_LEVELS = [LogTypes.None, LogTypes.Error, LogTypes.Warn, LogTypes.Log, LogTypes.Debug];\r\n\r\nconst IS_WEBKIT = IS_SAFARI || IS_FIREFOX;\r\n\r\n// let getCallerFunctionNameFromLine: (line: string) => string;\r\n// if(IS_WEBKIT) {\r\n//   getCallerFunctionNameFromLine = (line) => {\r\n//     const splitted = line.split('@');\r\n//     return splitted[0];\r\n//   };\r\n// } else {\r\n//   getCallerFunctionNameFromLine = (line: string) => {\r\n//     const splitted = line.trim().split(' ');\r\n//     if(splitted.length === 3) {\r\n//       return splitted[1].slice(splitted[1].lastIndexOf('.') + 1);\r\n//     }\r\n//   };\r\n// }\r\n\r\nconst STYLES_SUPPORTED = !IS_WEBKIT;\r\n// const LINE_INDEX = IS_WEBKIT ? 2 : 3;\r\n\r\n// function getCallerFunctionName() {\r\n//   const stack = new Error().stack;\r\n//   const lines = stack.split('\\n');\r\n//   const line = lines[LINE_INDEX] || lines[lines.length - 1];\r\n//   // const match = line.match(/\\.([^\\.]+?)\\s/);\r\n//   // line = match ? match[1] : line.trim();\r\n//   const caller = getCallerFunctionNameFromLine(line) || '<anonymous>';\r\n//   return '[' + caller + ']';\r\n// }\r\n\r\nexport const LOGGER_STYLES = {\r\n  reset: '\\x1b[0m',\r\n  bright: '\\x1b[1m',\r\n  dim: '\\x1b[2m',\r\n  underscore: '\\x1b[4m',\r\n  blink: '\\x1b[5m',\r\n  reverse: '\\x1b[7m',\r\n  hidden: '\\x1b[8m',\r\n  // Foreground (text) colors\r\n  fg: {\r\n    black: '\\x1b[30m',\r\n    red: '\\x1b[31m',\r\n    green: '\\x1b[32m',\r\n    yellow: '\\x1b[33m',\r\n    blue: '\\x1b[34m',\r\n    magenta: '\\x1b[35m',\r\n    cyan: '\\x1b[36m',\r\n    white: '\\x1b[37m'\r\n  },\r\n  // Background colors\r\n  bg: {\r\n    black: '\\x1b[40m',\r\n    red: '\\x1b[41m',\r\n    green: '\\x1b[42m',\r\n    yellow: '\\x1b[43m',\r\n    blue: '\\x1b[44m',\r\n    magenta: '\\x1b[45m',\r\n    cyan: '\\x1b[46m',\r\n    white: '\\x1b[47m'\r\n  }\r\n};\r\n\r\nexport type Logger = {\r\n  (...args: any[]): void;\r\n  warn(...args: any[]): void;\r\n  info(...args: any[]): void;\r\n  error(...args: any[]): void;\r\n  trace(...args: any[]): void;\r\n  debug(...args: any[]): void;\r\n  assert(...args: any[]): void;\r\n  // log(...args: any[]): void;\r\n  group(...args: any[]): void;\r\n  groupCollapsed(...args: any[]): void;\r\n  groupEnd(...args: any[]): void;\r\n  setPrefix(newPrefix: string): void;\r\n  setLevel(level: 0 | 1 | 2 | 3 | 4): void;\r\n  bindPrefix(prefix: string, type?: LogTypes): Logger;\r\n};\r\n\r\nconst methods: ['debug' | 'info' | 'warn' | 'error' | 'assert' | 'trace'/*  | 'log' */ | 'group' | 'groupCollapsed' | 'groupEnd', LogTypes][] = [\r\n  ['debug', LogTypes.Debug],\r\n  ['info', LogTypes.Log],\r\n  ['warn', LogTypes.Warn],\r\n  ['error', LogTypes.Error],\r\n  ['assert', LogTypes.Error],\r\n  ['trace', LogTypes.Log],\r\n  ['group', LogTypes.Log],\r\n  ['groupCollapsed', LogTypes.Log],\r\n  ['groupEnd', LogTypes.Log]\r\n  // [\"log\", LogTypes.Log]\r\n];\r\n\r\nexport function logger(prefix: string, type: LogTypes = LogTypes.Log | LogTypes.Warn | LogTypes.Error, ignoreDebugReset = false, style = ''): Logger {\r\n  let originalPrefix: string;\r\n  if(!DEBUG && !ignoreDebugReset/*  || true */) {\r\n    type = LogTypes.Error;\r\n  }\r\n\r\n  if(!STYLES_SUPPORTED) {\r\n    style = '';\r\n  } else if(!style) {\r\n    if(IS_SERVICE_WORKER) style = LOGGER_STYLES.fg.yellow;\r\n    else if(IS_WEB_WORKER) style = LOGGER_STYLES.fg.cyan;\r\n  }\r\n\r\n  const originalStyle = style;\r\n  if(style) style = `%s ${style}%s`;\r\n  else style = '%s';\r\n\r\n  // level = LogLevels.log | LogLevels.warn | LogLevels.error | LogLevels.debug\r\n\r\n  const log: Logger = function(...args: any[]) {\r\n    return type & LogTypes.Log && console.log(style, dT(), prefix, /* getCallerFunctionName(), */ ...args);\r\n  } as any;\r\n\r\n  methods.forEach(([method, logType]) => {\r\n    log[method] = function(...args: any[]) {\r\n      return type & logType && console[method](style, dT(), prefix, /* getCallerFunctionName(), */ ...args);\r\n    };\r\n  });\r\n\r\n  log.setPrefix = function(newPrefix: string) {\r\n    originalPrefix = newPrefix;\r\n    prefix = '[' + newPrefix + ']';\r\n  };\r\n\r\n  log.setPrefix(prefix);\r\n\r\n  log.setLevel = function(level: 0 | 1 | 2 | 3 | 4) {\r\n    type = LOG_LEVELS.slice(0, level + 1).reduce((acc, v) => acc | v, 0) as any;\r\n  };\r\n\r\n  log.bindPrefix = function(prefix: string, _type = type) {\r\n    return logger(`${originalPrefix}] [${prefix}`, _type, ignoreDebugReset, originalStyle);\r\n  };\r\n\r\n  return log;\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG from '../../config/debug';\r\nimport tabId from '../../config/tabId';\r\nimport ctx from '../../environment/ctx';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport {IS_WORKER} from '../../helpers/context';\r\nimport EventListenerBase from '../../helpers/eventListenerBase';\r\nimport makeError from '../../helpers/makeError';\r\nimport {Awaited, WorkerTaskTemplate, WorkerTaskVoidTemplate} from '../../types';\r\nimport {logger} from '../logger';\r\n\r\ntype SuperMessagePortTask = WorkerTaskTemplate & {\r\n  transfer?: Transferable[]\r\n};\r\n\r\ninterface InvokeTask extends SuperMessagePortTask {\r\n  type: 'invoke',\r\n  payload: WorkerTaskVoidTemplate & {withAck?: boolean, void?: boolean}\r\n}\r\n\r\ninterface ResultTask extends SuperMessagePortTask {\r\n  type: 'result',\r\n  payload: {\r\n    taskId: number,\r\n    result?: any,\r\n    error?: any\r\n  }\r\n}\r\n\r\ninterface AckTask extends SuperMessagePortTask {\r\n  type: 'ack',\r\n  payload: {\r\n    cached: boolean,\r\n    taskId: number\r\n    result?: any,\r\n    error?: any,\r\n  }\r\n}\r\n\r\ninterface PingTask extends SuperMessagePortTask {\r\n  type: 'ping'\r\n}\r\n\r\ninterface PongTask extends SuperMessagePortTask {\r\n  type: 'pong'\r\n}\r\n\r\ninterface BatchTask extends SuperMessagePortTask {\r\n  type: 'batch',\r\n  payload: Task[]\r\n}\r\n\r\ninterface CloseTask extends SuperMessagePortTask {\r\n  type: 'close'\r\n}\r\n\r\n// interface OpenTask extends SuperMessagePortTask {\r\n//   type: 'open'\r\n// }\r\n\r\ninterface LockTask extends SuperMessagePortTask {\r\n  type: 'lock',\r\n  payload: string\r\n}\r\n\r\ntype Task = InvokeTask | ResultTask | AckTask | PingTask | PongTask | BatchTask | CloseTask/*  | OpenTask */ | LockTask;\r\ntype TaskMap = {\r\n  [type in Task as type['type']]?: (task: Extract<Task, type>, source: MessageEventSource, event: MessageEvent<any>) => void | Promise<any>\r\n};\r\n\r\nexport type AckedResult<T> = {\r\n  cached: boolean,\r\n  result: Promise<T>\r\n};\r\n// export type AckedResult<T> = {\r\n//   cached: true,\r\n//   result: T\r\n// } | {\r\n//   cached: false,\r\n//   result: Promise<T>\r\n// };\r\n\r\ntype ListenPort = WindowProxy | MessagePort | ServiceWorker | Worker | ServiceWorkerContainer;\r\ntype SendPort = Pick<MessageEventSource, 'postMessage'>/* WindowProxy | MessagePort | ServiceWorker | Worker */;\r\n\r\nexport type MessageListenPort = ListenPort;\r\nexport type MessageSendPort = SendPort;\r\n\r\ntype ListenerCallback = (payload: any, source: MessageEventSource, event: MessageEvent<any>) => any;\r\ntype Listeners = Record<string, ListenerCallback>;\r\n\r\nconst USE_LOCKS = true;\r\nconst USE_BATCHING = true;\r\n\r\n// const PING_INTERVAL = DEBUG && false ? 0x7FFFFFFF : 5000;\r\n// const PING_TIMEOUT = DEBUG && false ? 0x7FFFFFFF : 10000;\r\n\r\nexport default class SuperMessagePort<\r\n  Workers extends Listeners,\r\n  Masters extends Listeners,\r\n  IsMaster extends boolean,\r\n  Receive extends Listeners = IsMaster extends true ? Masters : Workers,\r\n  Send extends Listeners = IsMaster extends true ? Workers : Masters\r\n> extends EventListenerBase<Receive> {\r\n  protected listenPorts: Array<ListenPort>;\r\n  protected sendPorts: Array<SendPort>;\r\n  protected pingResolves: Map<SendPort, () => void>;\r\n\r\n  protected taskId: number;\r\n  protected awaiting: {\r\n    [id: number]: {\r\n      resolve: any,\r\n      reject: any,\r\n      taskType: string,\r\n      port?: SendPort\r\n    }\r\n  };\r\n  protected pending: Map<SendPort, Task[]>;\r\n\r\n  protected log: ReturnType<typeof logger>;\r\n  protected debug: boolean;\r\n  protected releasingPending: boolean;\r\n\r\n  protected processTaskMap: TaskMap;\r\n\r\n  protected onPortDisconnect: (source: MessageEventSource) => void;\r\n  // protected onPortConnect: (source: MessageEventSource) => void;\r\n\r\n  protected heldLocks: Map<SendPort, {resolve: () => void, id: string}>;\r\n  protected requestedLocks: Map<string, SendPort>;\r\n\r\n  constructor(protected logSuffix?: string) {\r\n    super(false);\r\n\r\n    this.listenPorts = [];\r\n    this.sendPorts = [];\r\n    this.pingResolves = new Map();\r\n    this.taskId = 0;\r\n    this.awaiting = {};\r\n    this.pending = new Map();\r\n    this.log = logger('MP' + (logSuffix ? '-' + logSuffix : ''));\r\n    this.debug = DEBUG;\r\n    this.heldLocks = new Map();\r\n    this.requestedLocks = new Map();\r\n\r\n    this.processTaskMap = {\r\n      result: this.processResultTask,\r\n      ack: this.processAckTask,\r\n      invoke: this.processInvokeTask,\r\n      ping: this.processPingTask,\r\n      pong: this.processPongTask,\r\n      close: this.processCloseTask,\r\n      // open: this.processOpenTask,\r\n      lock: this.processLockTask,\r\n      batch: this.processBatchTask\r\n    };\r\n  }\r\n\r\n  public setOnPortDisconnect(callback: (source: MessageEventSource) => void) {\r\n    this.onPortDisconnect = callback;\r\n  }\r\n\r\n  // public setOnPortConnect(callback: (source: MessageEventSource) => void) {\r\n  //   this.onPortConnect = callback;\r\n  // }\r\n\r\n  public attachPort(port: MessageEventSource) {\r\n    this.attachListenPort(port);\r\n    this.attachSendPort(port);\r\n  }\r\n\r\n  public attachListenPort(port: ListenPort) {\r\n    this.listenPorts.push(port);\r\n    port.addEventListener('message', this.onMessage as any);\r\n  }\r\n\r\n  public attachSendPort(port: SendPort) {\r\n    this.log.warn('attaching send port');\r\n\r\n    (port as MessagePort).start?.();\r\n\r\n    this.sendPorts.push(port);\r\n    // this.sendPing(port);\r\n\r\n    // const task = this.createTask('open', undefined);\r\n    // this.postMessage(port, task);\r\n\r\n    if(typeof(window) !== 'undefined' && USE_LOCKS) {\r\n      if('locks' in navigator) {\r\n        const id = ['lock', tabId, this.logSuffix || '', Math.random() * 0x7FFFFFFF | 0].join('-');\r\n        this.log.warn('created lock', id);\r\n        const promise = new Promise<void>((resolve) => this.heldLocks.set(port, {resolve, id}))\r\n        .then(() => this.heldLocks.delete(port));\r\n        navigator.locks.request(id, () => {\r\n          this.resendLockTask(port);\r\n          return promise;\r\n        });\r\n      } else {\r\n        window.addEventListener('beforeunload', () => {\r\n          const task = this.createTask('close', undefined);\r\n          this.postMessage(undefined, task);\r\n        });\r\n      }\r\n    }\r\n\r\n    this.releasePending();\r\n  }\r\n\r\n  public resendLockTask(port: SendPort) {\r\n    const lock = this.heldLocks.get(port);\r\n    if(!lock) {\r\n      return;\r\n    }\r\n\r\n    this.pushTask(this.createTask('lock', lock.id), port);\r\n  }\r\n\r\n  // ! Can't rely on ping because timers can be suspended\r\n  // protected sendPing(port: SendPort, loop = IS_WORKER) {\r\n  //   let timeout: number;\r\n  //   const promise = new Promise<void>((resolve, reject) => {\r\n  //     this.pingResolves.set(port, resolve);\r\n  //     this.pushTask(this.createTask('ping', undefined), port);\r\n\r\n  //     timeout = ctx.setTimeout(() => {\r\n  //       reject();\r\n  //     }, PING_TIMEOUT);\r\n  //   });\r\n\r\n  //   promise.then(() => {\r\n  //     // this.log('got pong');\r\n\r\n  //     clearTimeout(timeout);\r\n  //     this.pingResolves.delete(port);\r\n\r\n  //     if(loop) {\r\n  //       this.sendPingWithTimeout(port);\r\n  //     }\r\n  //   }, () => {\r\n  //     this.pingResolves.delete(port);\r\n  //     this.detachPort(port);\r\n  //   });\r\n  // }\r\n\r\n  // protected sendPingWithTimeout(port: SendPort, timeout = PING_INTERVAL) {\r\n  //   ctx.setTimeout(() => {\r\n  //     if(!this.sendPorts.includes(port)) {\r\n  //       return;\r\n  //     }\r\n\r\n  //     this.sendPing(port);\r\n  //   }, timeout);\r\n  // }\r\n\r\n  public detachPort(port: ListenPort) {\r\n    this.log.warn('disconnecting port');\r\n\r\n    indexOfAndSplice(this.listenPorts, port);\r\n    indexOfAndSplice(this.sendPorts, port as any);\r\n\r\n    port.removeEventListener?.('message', this.onMessage as any);\r\n    (port as MessagePort).close?.();\r\n\r\n    this.onPortDisconnect?.(port as any);\r\n\r\n    const heldLock = this.heldLocks.get(port as SendPort);\r\n    heldLock?.resolve();\r\n\r\n    const error = makeError('PORT_DISCONNECTED');\r\n    for(const id in this.awaiting) {\r\n      const task = this.awaiting[id];\r\n      if(task.port === port) {\r\n        task.reject(error);\r\n        delete this.awaiting[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  protected postMessage(port: SendPort | SendPort[], task: Task) {\r\n    const ports = Array.isArray(port) ? port : (port ? [port] : this.sendPorts);\r\n    ports.forEach((port) => {\r\n      if(import.meta.env.MODE === 'test') {\r\n        return;\r\n      }\r\n\r\n      port.postMessage(task, task.transfer as any);\r\n    });\r\n  }\r\n\r\n  protected onMessage = (event: MessageEvent) => {\r\n    const task: Task = event.data;\r\n    // this.log('got message', task);\r\n\r\n    const source: MessageEventSource = event.source || event.currentTarget as any; // can have no source\r\n\r\n    // @ts-ignore\r\n    this.processTaskMap[task.type](task, source, event);\r\n  };\r\n\r\n  protected async releasePending() {\r\n    // return;\r\n\r\n    if(/* !this.listenPorts.length || !this.sendPorts.length ||  */this.releasingPending) {\r\n      return;\r\n    }\r\n\r\n    this.releasingPending = true;\r\n    // const perf = performance.now();\r\n\r\n    if(USE_BATCHING) {\r\n      await Promise.resolve();\r\n    }\r\n    // await pause(0);\r\n\r\n    this.debug && this.log.debug('releasing tasks, length:', this.pending.size/* , performance.now() - perf */);\r\n\r\n    this.pending.forEach((portTasks, port) => {\r\n      let tasks: Task[] = portTasks;\r\n      if(USE_BATCHING) {\r\n        let batchTask: BatchTask;\r\n        tasks = [];\r\n        portTasks.forEach((task) => {\r\n          if(task.transfer) {\r\n            batchTask = undefined;\r\n            tasks.push(task);\r\n          } else {\r\n            if(!batchTask) {\r\n              batchTask = this.createTask('batch', []);\r\n              tasks.push(batchTask);\r\n            }\r\n\r\n            batchTask.payload.push(task);\r\n          }\r\n        });\r\n      }\r\n\r\n      const ports = port ? [port] : this.sendPorts;\r\n      if(!ports.length) {\r\n        return;\r\n      }\r\n\r\n      tasks.forEach((task) => {\r\n        // if(USE_BATCHING && task.type === 'batch') {\r\n        //   this.log(`batching ${task.payload.length} tasks`);\r\n        // }\r\n\r\n        try {\r\n          // if(IS_SERVICE_WORKER && !port) {\r\n          //   notifyAll(task);\r\n          // } else {\r\n          this.postMessage(ports, task);\r\n          // }\r\n        } catch(err) {\r\n          this.log.error('postMessage error:', err, task, ports);\r\n        }\r\n      });\r\n\r\n      this.pending.delete(port);\r\n    });\r\n\r\n    this.debug && this.log.debug('released tasks');\r\n\r\n    this.releasingPending = false;\r\n  }\r\n\r\n  protected processResultTask = (task: ResultTask) => {\r\n    const {taskId, result, error} = task.payload;\r\n    const deferred = this.awaiting[taskId];\r\n    if(!deferred) {\r\n      return;\r\n    }\r\n\r\n    this.debug && this.log.debug('done', deferred.taskType, result, error);\r\n    'error' in task.payload ? deferred.reject(error) : deferred.resolve(result);\r\n    delete this.awaiting[taskId];\r\n  };\r\n\r\n  protected processAckTask = (task: AckTask) => {\r\n    const payload = task.payload;\r\n    const deferred = this.awaiting[payload.taskId];\r\n    if(!deferred) {\r\n      return;\r\n    }\r\n\r\n    // * will finish the init promise with incoming result\r\n    const previousResolve: (acked: AckedResult<any>) => void = deferred.resolve;\r\n    // const previousReject = deferred.reject;\r\n\r\n    // if(payload.cached) {\r\n    //   if('result' in payload) {\r\n    //     previousResolve({\r\n    //       cached: true,\r\n    //       result: payload.result\r\n    //     });\r\n    //   } else {\r\n    //     previousReject(payload.error);\r\n    //   }\r\n    // } else {\r\n    //   const ret: AckedResult<any> = {\r\n    //     cached: false,\r\n    //     result: new Promise((resolve, reject) => {\r\n    //       deferred.resolve = resolve;\r\n    //       deferred.reject = reject;\r\n    //     })\r\n    //   };\r\n\r\n    //   previousResolve(ret);\r\n    // }\r\n\r\n    const ret: AckedResult<any> = {\r\n      cached: payload.cached,\r\n      result: payload.cached ? ('result' in payload ? Promise.resolve(payload.result) : Promise.reject(payload.error)) : new Promise((resolve, reject) => {\r\n        deferred.resolve = resolve;\r\n        deferred.reject = reject;\r\n      })\r\n    };\r\n\r\n    previousResolve(ret);\r\n\r\n    if(payload.cached) {\r\n      delete this.awaiting[payload.taskId];\r\n    }\r\n  };\r\n\r\n  protected processPingTask = (task: PingTask, source: MessageEventSource, event: MessageEvent) => {\r\n    this.pushTask(this.createTask('pong', undefined), event.source);\r\n  };\r\n\r\n  protected processPongTask = (task: PongTask, source: MessageEventSource, event: MessageEvent) => {\r\n    const pingResolve = this.pingResolves.get(source);\r\n    if(pingResolve) {\r\n      this.pingResolves.delete(source);\r\n      pingResolve();\r\n    }\r\n  };\r\n\r\n  protected processCloseTask = (task: CloseTask, source: MessageEventSource, event: MessageEvent) => {\r\n    this.detachPort(source);\r\n  };\r\n\r\n  protected processBatchTask = (task: BatchTask, source: MessageEventSource, event: MessageEvent) => {\r\n    if(!USE_BATCHING) {\r\n      return;\r\n    }\r\n\r\n    const newEvent: MessageEvent = {data: event.data, source: event.source, currentTarget: event.currentTarget} as any;\r\n    task.payload.forEach((task) => {\r\n      // @ts-ignore\r\n      newEvent.data = task;\r\n      this.onMessage(newEvent);\r\n    });\r\n  };\r\n\r\n  // * it's just an 'open' callback, DO NOT attach port from here\r\n  // protected processOpenTask = (task: OpenTask, source: MessageEventSource, event: MessageEvent) => {\r\n  //   this.onPortConnect?.(source);\r\n  // };\r\n\r\n  protected processLockTask = (task: LockTask, source: MessageEventSource, event: MessageEvent) => {\r\n    const id = task.payload;\r\n    if(this.requestedLocks.has(id)) {\r\n      return;\r\n    }\r\n\r\n    this.requestedLocks.set(id, source);\r\n    navigator.locks.request(id, () => {\r\n      this.processCloseTask(undefined, source, undefined);\r\n      this.requestedLocks.delete(id);\r\n    });\r\n  };\r\n\r\n  protected processInvokeTask = async(task: InvokeTask, source: MessageEventSource, event: MessageEvent) => {\r\n    const id = task.id;\r\n    const innerTask = task.payload;\r\n\r\n    let resultTaskPayload: ResultTask['payload'];\r\n    let resultTask: ResultTask, ackTask: AckTask;\r\n    if(!innerTask.void) {\r\n      resultTaskPayload = {taskId: id};\r\n      resultTask = this.createTask('result', resultTaskPayload);\r\n    }\r\n\r\n    if(innerTask.withAck) {\r\n      ackTask = this.createTask('ack', {\r\n        taskId: id,\r\n        cached: true\r\n      });\r\n    }\r\n\r\n    let isPromise: boolean;\r\n    try {\r\n      const listeners = this.listeners[innerTask.type];\r\n      if(!listeners?.length) {\r\n        throw new Error('no listener');\r\n      }\r\n\r\n      const listener = listeners[0];\r\n\r\n      // @ts-ignore\r\n      let result = this.invokeListenerCallback(innerTask.type, listener, innerTask.payload, source, event);\r\n      if(innerTask.void) {\r\n        return;\r\n      }\r\n\r\n      isPromise = result instanceof Promise;\r\n\r\n      if(ackTask) {\r\n        const cached = !isPromise;\r\n        ackTask.payload.cached = cached;\r\n        if(cached) ackTask.payload.result = result;\r\n        this.pushTask(ackTask, source);\r\n\r\n        if(cached) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if(isPromise) {\r\n        result = await result;\r\n      }\r\n\r\n      resultTaskPayload.result = result;\r\n    } catch(error) {\r\n      this.log.error('worker task error:', error, task);\r\n      if(innerTask.void) {\r\n        return;\r\n      }\r\n\r\n      if(ackTask && ackTask.payload.cached) {\r\n        ackTask.payload.error = error;\r\n        this.pushTask(ackTask, source);\r\n        return;\r\n      }\r\n\r\n      resultTaskPayload.error = error;\r\n    }\r\n\r\n    this.pushTask(resultTask, source);\r\n  };\r\n\r\n  protected createTask<T extends Task['type'], K extends Task = Parameters<TaskMap[T]>[0]>(type: T, payload: K['payload'], transfer?: Transferable[]): K {\r\n    return {\r\n      type,\r\n      payload,\r\n      id: this.taskId++,\r\n      transfer\r\n    } as K;\r\n  }\r\n\r\n  protected createInvokeTask(type: string, payload: any, withAck?: boolean, _void?: boolean, transfer?: Transferable[]): InvokeTask {\r\n    return this.createTask('invoke', {\r\n      type,\r\n      payload,\r\n      withAck,\r\n      void: _void\r\n    }, transfer);\r\n  }\r\n\r\n  protected pushTask(task: Task, port?: SendPort) {\r\n    let tasks = this.pending.get(port);\r\n    if(!tasks) {\r\n      this.pending.set(port, tasks = []);\r\n    }\r\n\r\n    tasks.push(task);\r\n    this.releasePending();\r\n  }\r\n\r\n  public invokeVoid<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], port?: SendPort, transfer?: Transferable[]) {\r\n    const task = this.createInvokeTask(type as string, payload, undefined, true, transfer);\r\n    this.pushTask(task, port);\r\n  }\r\n\r\n  public invoke<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], withAck?: false, port?: SendPort, transfer?: Transferable[]): Promise<Awaited<ReturnType<Send[T]>>>;\r\n  public invoke<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], withAck?: true, port?: SendPort, transfer?: Transferable[]): Promise<AckedResult<Awaited<ReturnType<Send[T]>>>>;\r\n  public invoke<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], withAck?: boolean, port?: SendPort, transfer?: Transferable[]) {\r\n    this.debug && this.log.debug('start', type, payload);\r\n\r\n    let task: InvokeTask;\r\n    const promise = new Promise<Awaited<ReturnType<Send[T]>>>((resolve, reject) => {\r\n      task = this.createInvokeTask(type as string, payload, withAck, undefined, transfer);\r\n      this.awaiting[task.id] = {resolve, reject, taskType: type as string, port};\r\n      this.pushTask(task, port);\r\n    });\r\n\r\n    if(IS_WORKER) {\r\n      promise.finally(() => {\r\n        clearInterval(interval);\r\n      });\r\n\r\n      const interval = ctx.setInterval(() => {\r\n        this.log.error('task still has no result', task, port);\r\n      }, 60e3);\r\n    } else if(false) {\r\n      // let timedOut = false;\r\n      const startTime = Date.now();\r\n      promise.finally(() => {\r\n        const elapsedTime = Date.now() - startTime;\r\n        if(elapsedTime >= TIMEOUT) {\r\n          this.log.error(`task was processing ${Date.now() - startTime}ms`, task.payload.payload, port);\r\n        }/*  else {\r\n          clearTimeout(timeout);\r\n        } */\r\n      });\r\n\r\n      const TIMEOUT = 10;\r\n      // const timeout = ctx.setTimeout(() => {\r\n      //   timedOut = true;\r\n      //   // this.log.error(`task is processing more than ${TIMEOUT} milliseconds`, task, port);\r\n      // }, TIMEOUT);\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public invokeExceptSource<T extends keyof Send>(type: T, payload: Parameters<Send[T]>[0], source?: SendPort) {\r\n    const ports = this.sendPorts.slice();\r\n    indexOfAndSplice(ports, source);\r\n\r\n    ports.forEach((target) => {\r\n      this.invokeVoid(type, payload, target);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {CryptoMethods} from './crypto_methods';\r\nimport SuperMessagePort from '../mtproto/superMessagePort';\r\nimport {Awaited} from '../../types';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport {IS_WORKER} from '../../helpers/context';\r\n\r\ntype CryptoEvent = {\r\n  invoke: <T extends keyof CryptoMethods>(payload: {method: T, args: Parameters<CryptoMethods[T]>}) => ReturnType<CryptoMethods[T]>,\r\n  port: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\r\n  terminate: () => void\r\n};\r\n\r\nexport class CryptoMessagePort<Master extends boolean = false> extends SuperMessagePort<CryptoEvent, CryptoEvent, Master> {\r\n  private lastIndex: number;\r\n\r\n  constructor() {\r\n    super('CRYPTO');\r\n    this.lastIndex = -1;\r\n  }\r\n\r\n  public invokeCryptoNew<T extends keyof CryptoMethods>({method, args, transfer}: {\r\n    method: T,\r\n    args: Parameters<CryptoMethods[T]>,\r\n    transfer?: Transferable[]\r\n  }): Promise<Awaited<ReturnType<CryptoMethods[T]>>> {\r\n    const payload = {method, args};\r\n    const listeners = this.listeners['invoke'];\r\n    if(listeners?.length) { // already in worker\r\n      // try {\r\n      // @ts-ignore\r\n      let result: any = listeners[0].callback(payload);\r\n      if(!IS_WORKER && !(result instanceof Promise)) {\r\n        result = Promise.resolve(result);\r\n      }\r\n\r\n      return result;\r\n      // } catch(err) {\r\n      //   return Promise.reject(err);\r\n      // }\r\n    }\r\n\r\n    const sendPortIndex = method === 'aes-encrypt' || method === 'aes-decrypt' ?\r\n      this.lastIndex = (this.lastIndex + 1) % this.sendPorts.length :\r\n      0;\r\n    // @ts-ignore\r\n    return this.invoke('invoke', payload, undefined, this.sendPorts[sendPortIndex], transfer);\r\n  }\r\n\r\n  public invokeCrypto<T extends keyof CryptoMethods>(method: T, ...args: Parameters<CryptoMethods[T]>): Promise<Awaited<ReturnType<CryptoMethods[T]>>> {\r\n    return this.invokeCryptoNew({method, args});\r\n  }\r\n}\r\n\r\nconst cryptoMessagePort = new CryptoMessagePort<false>();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.cryptoMessagePort = cryptoMessagePort);\r\nexport default cryptoMessagePort;\r\n","import type ENVIRONMENT from '.';\r\n\r\nlet environment: typeof ENVIRONMENT;\r\nexport function getEnvironment() {\r\n  return environment;\r\n}\r\n\r\nexport function setEnvironment(env: typeof environment) {\r\n  return environment = env;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {IS_MOBILE} from '../../environment/userAgent';\r\nimport type {MyDialogFilter} from '../storages/filters';\r\n\r\n/**\r\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\r\n */\r\nexport type UserAuth = {dcID: number | string, date: number, id: PeerId};\r\nexport type REAL_FOLDER_ID = 0 | 1;\r\n\r\nexport const NULL_PEER_ID: PeerId = 0;\r\nexport const REPLIES_PEER_ID: PeerId = 1271266957;\r\nexport const REPLIES_HIDDEN_CHANNEL_ID: ChatId = 777;\r\nexport const SERVICE_PEER_ID: PeerId = 777000;\r\nexport const MUTE_UNTIL = 0x7FFFFFFF;\r\nexport const BOT_START_PARAM = '';\r\nexport const MAX_FILE_SAVE_SIZE = 20 * 1024 * 1024;\r\nexport const THUMB_TYPE_FULL = '';\r\nexport const TOPIC_COLORS = [0x6FB9F0, 0xFFD67E, 0xCB86DB, 0x8EEE98, 0xFF93B2, 0xFB6F5F];\r\nexport const ATTACH_MENU_BOT_ICON_NAME = 'default_static';\r\nexport const MESSAGE_ID_OFFSET = 0x100000000;\r\nexport const GENERAL_TOPIC_ID = MESSAGE_ID_OFFSET + 1;\r\nexport const T_ME_PREFIXES = new Set(['web', 'k', 'z', 'a']);\r\nexport const SEND_WHEN_ONLINE_TIMESTAMP = 0x7FFFFFFE;\r\n\r\nexport const FOLDER_ID_ALL: REAL_FOLDER_ID = 0;\r\nexport const FOLDER_ID_ARCHIVE: REAL_FOLDER_ID = 1;\r\nexport const REAL_FOLDERS: Set<number> = new Set([FOLDER_ID_ALL, FOLDER_ID_ARCHIVE]);\r\nexport const START_LOCAL_ID = Math.max(...Array.from(REAL_FOLDERS)) + 1 as MyDialogFilter['localId'];\r\n\r\nexport const TEST_NO_STORIES = false;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport type {getEnvironment} from '../../environment/utils';\r\nimport type loadState from '../appManagers/utils/state/loadState';\r\nimport type {StoragesResults} from '../appManagers/utils/storages/loadStorages';\r\nimport type {LocalStorageProxyTask} from '../localStorage';\r\nimport type {Awaited} from '../../types';\r\nimport type {Mirrors, MirrorTaskPayload, NotificationBuildTaskPayload, TabState} from './mtprotoworker';\r\nimport type toggleStorages from '../../helpers/toggleStorages';\r\nimport SuperMessagePort from './superMessagePort';\r\n\r\nexport type MTProtoManagerTaskPayload = {name: string, method: string, args: any[]};\r\n\r\ntype MTProtoBroadcastEvent = {\r\n  event: (payload: {name: string, args: any[]}, source: MessageEventSource) => void\r\n};\r\n\r\nexport default class MTProtoMessagePort<Master extends boolean = true> extends SuperMessagePort<{\r\n  environment: (environment: ReturnType<typeof getEnvironment>) => void,\r\n  crypto: (payload: {method: string, args: any[]}) => Promise<any>,\r\n  state: (payload: {userId: UserId} & Awaited<ReturnType<typeof loadState>> & {storagesResults?: StoragesResults}) => void,\r\n  manager: (payload: MTProtoManagerTaskPayload) => any,\r\n  toggleStorages: (payload: {enabled: boolean, clearWrite: boolean}) => ReturnType<typeof toggleStorages>,\r\n  serviceWorkerOnline: (online: boolean) => void,\r\n  serviceWorkerPort: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\r\n  cryptoPort: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\r\n  createObjectURL: (blob: Blob) => string,\r\n  tabState: (payload: TabState, source: MessageEventSource) => void,\r\n  createProxyWorkerURLs: (payload: {originalUrl: string, blob: Blob}) => string[],\r\n} & MTProtoBroadcastEvent, {\r\n  convertWebp: (payload: {fileName: string, bytes: Uint8Array}) => Promise<Uint8Array>,\r\n  convertOpus: (payload: {fileName: string, bytes: Uint8Array}) => Promise<Uint8Array>,\r\n  localStorageProxy: (payload: LocalStorageProxyTask['payload']) => Promise<any>,\r\n  mirror: (payload: MirrorTaskPayload) => void,\r\n  notificationBuild: (payload: NotificationBuildTaskPayload) => void,\r\n  // hello: () => void\r\n} & MTProtoBroadcastEvent, Master> {\r\n  private static INSTANCE: MTProtoMessagePort;\r\n\r\n  constructor() {\r\n    super('MTPROTO');\r\n\r\n    MTProtoMessagePort.INSTANCE = this;\r\n\r\n    MOUNT_CLASS_TO && (MOUNT_CLASS_TO.mtprotoMessagePort = this);\r\n  }\r\n\r\n  public static getInstance<Master extends boolean>() {\r\n    return this.INSTANCE as MTProtoMessagePort<Master>;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, PollResults, Poll, WebPage, GroupCall, GroupCallParticipant, ReactionCount, MessagePeerReaction, PhoneCall, Config, Reaction, AttachMenuBot, PeerSettings, StoryItem, PeerStories} from '../layer';\r\nimport type {Dialog, ForumTopic, MessagesStorageKey, MyMessage} from './appManagers/appMessagesManager';\r\nimport type {MyDialogFilter} from './storages/filters';\r\nimport type {Folder} from './storages/dialogs';\r\nimport type {UserTyping} from './appManagers/appProfileManager';\r\nimport type {MyDraftMessage} from './appManagers/appDraftsManager';\r\nimport type {ConnectionStatusChange} from './mtproto/connectionStatus';\r\nimport type {GroupCallId} from './appManagers/appGroupCallsManager';\r\nimport type {AppManagers} from './appManagers/managers';\r\nimport type {State} from '../config/state';\r\nimport type {Progress} from './appManagers/appDownloadManager';\r\nimport type {CallId} from './appManagers/appCallsManager';\r\nimport type {MyDocument} from './appManagers/appDocsManager';\r\nimport type {MTAppConfig} from './mtproto/appConfig';\r\nimport type StoriesCacheType from './appManagers/utils/stories/cacheType';\r\nimport type {StoriesListPosition} from './appManagers/appStoriesManager';\r\nimport {NULL_PEER_ID, UserAuth} from './mtproto/mtproto_config';\r\nimport EventListenerBase from '../helpers/eventListenerBase';\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\r\nimport {IS_WORKER} from '../helpers/context';\r\n\r\nexport type BroadcastEvents = {\r\n  'chat_full_update': ChatId,\r\n  'chat_update': ChatId,\r\n  'chat_toggle_forum': {chatId: ChatId, enabled: boolean},\r\n  'chat_participant': Update.updateChannelParticipant,\r\n  'chat_participation': {chatId: ChatId, left: boolean},\r\n  'chat_requests': {requestsPending: number, recentRequesters: UserId[], chatId: ChatId}\r\n\r\n  'channel_update': ChatId,\r\n\r\n  'user_update': UserId,\r\n  'user_auth': UserAuth,\r\n  'user_full_update': UserId,\r\n\r\n  'attach_menu_bot': AttachMenuBot,\r\n\r\n  'emoji_status_change': void,\r\n\r\n  'peer_pinned_messages': {peerId: PeerId, mids?: number[], pinned?: boolean, unpinAll?: true},\r\n  'peer_pinned_hidden': {peerId: PeerId, maxId: number},\r\n  'peer_typings': {peerId: PeerId, threadId?: number, typings: UserTyping[]},\r\n  'peer_block': {peerId: PeerId, blocked?: boolean, blockedMyStoriesFrom?: boolean},\r\n  'peer_title_edit': {peerId: PeerId, threadId?: number},\r\n  'peer_bio_edit': PeerId,\r\n  'peer_deleted': PeerId, // left chat, deleted user dialog, left channel\r\n  'peer_full_update': PeerId,\r\n  'peer_settings': {peerId: PeerId, settings: PeerSettings},\r\n  'peer_stories': {peerId: PeerId, available: boolean},\r\n  'peer_stories_hidden': {peerId: PeerId, hidden: boolean},\r\n\r\n  'filter_delete': MyDialogFilter,\r\n  'filter_update': MyDialogFilter,\r\n  'filter_new': MyDialogFilter,\r\n  'filter_order': number[],\r\n  'filter_joined': MyDialogFilter,\r\n\r\n  'folder_unread': Omit<Folder, 'dialogs' | 'dispatchUnreadTimeout'>,\r\n\r\n  'dialog_draft': {peerId: PeerId, dialog: Dialog | ForumTopic, drop: boolean, draft: MyDraftMessage | undefined},\r\n  'dialog_unread': {peerId: PeerId, dialog: Dialog | ForumTopic},\r\n  'dialog_flush': {peerId: PeerId, dialog: Dialog},\r\n  'dialog_drop': Dialog | ForumTopic,\r\n  'dialog_migrate': {migrateFrom: PeerId, migrateTo: PeerId},\r\n  // 'dialog_top': Dialog,\r\n  'dialog_notify_settings': Dialog | ForumTopic,\r\n  // 'dialog_order': {dialog: Dialog, pos: number},\r\n  'dialogs_multiupdate': Map<PeerId, {dialog?: Dialog, topics?: Map<number, ForumTopic>}>,\r\n\r\n  'history_append': {storageKey: MessagesStorageKey, message: Message.message},\r\n  'history_update': {storageKey: MessagesStorageKey, message: MyMessage, sequential?: boolean},\r\n  'history_reply_markup': {peerId: PeerId},\r\n  'history_multiappend': MyMessage,\r\n  'history_delete': {peerId: PeerId, msgs: Set<number>},\r\n  'history_forbidden': PeerId,\r\n  'history_reload': PeerId,\r\n  // 'history_request': void,\r\n\r\n  'message_edit': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number, message: MyMessage},\r\n  'message_sent': {storageKey: MessagesStorageKey, tempId: number, tempMessage: any, mid: number, message: MyMessage},\r\n  'message_error': {storageKey: MessagesStorageKey, tempId: number, error: ApiError},\r\n  'message_transcribed': {peerId: PeerId, mid: number, text: string, pending?: boolean},\r\n  'messages_views': {peerId: PeerId, mid: number, views: number}[],\r\n  'messages_reactions': {message: Message.message, changedResults: ReactionCount[]}[],\r\n  'messages_pending': void,\r\n  'messages_read': void,\r\n  'messages_downloaded': {peerId: PeerId, mids: number[]},\r\n  'messages_media_read': {peerId: PeerId, mids: number[]},\r\n\r\n  'story_update': {peerId: PeerId, story: StoryItem, modifiedPinned?: boolean, modifiedArchive?: boolean},\r\n  'story_deleted': {peerId: PeerId, id: number},\r\n  'story_expired': {peerId: PeerId, id: number},\r\n  'story_new': {peerId: PeerId, story: StoryItem, cacheType: StoriesCacheType, maxReadId: number},\r\n  'stories_stories': PeerStories,\r\n  'stories_read': {peerId: PeerId, maxReadId: number},\r\n  'stories_downloaded': {peerId: PeerId, ids: number[]},\r\n  'stories_position': {peerId: PeerId, position: StoriesListPosition},\r\n\r\n  'replies_updated': Message.message,\r\n\r\n  'scheduled_new': Message.message,\r\n  'scheduled_delete': {peerId: PeerId, mids: number[]},\r\n\r\n  'album_edit': {peerId: PeerId, groupId: string, deletedMids: number[], messages: Message.message[]},\r\n\r\n  'stickers_installed': StickerSet.stickerSet,\r\n  'stickers_deleted': StickerSet.stickerSet,\r\n  'stickers_updated': {type: 'recent' | 'faved', stickers: MyDocument[]},\r\n  'stickers_top': Long,\r\n  'stickers_order': {type: 'masks' | 'emojis' | 'stickers', order: Long[]},\r\n  'sticker_updated': {type: 'recent' | 'faved', document: MyDocument, faved: boolean},\r\n\r\n  'state_cleared': void,\r\n  'state_synchronized': ChatId | void,\r\n  'state_synchronizing': ChatId | void,\r\n\r\n  'contacts_update': UserId,\r\n  'avatar_update': {peerId: PeerId, threadId?: number},\r\n  'poll_update': {poll: Poll, results: PollResults},\r\n  'invalidate_participants': ChatId,\r\n  // 'channel_settings': {channelId: number},\r\n  'webpage_updated': {id: WebPage.webPage['id'], msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[]},\r\n\r\n  'connection_status_change': ConnectionStatusChange,\r\n  'settings_updated': {key: string, value: any, settings: State['settings']},\r\n  'draft_updated': {peerId: PeerId, threadId: number, draft: MyDraftMessage | undefined, force?: boolean},\r\n\r\n  'background_change': void,\r\n\r\n  'privacy_update': Update.updatePrivacy,\r\n\r\n  'notify_settings': Update.updateNotifySettings,\r\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\r\n\r\n  'notification_reset': string,\r\n  'notification_cancel': string,\r\n\r\n  'language_change': string,\r\n\r\n  'theme_change': {x: number, y: number} | void,\r\n  'theme_changed': void,\r\n\r\n  'media_play': void,\r\n\r\n  'emoji_recent': AppEmoji,\r\n\r\n  'download_progress': Progress,\r\n  'document_downloading': DocId,\r\n  'document_downloaded': DocId,\r\n\r\n  'choosing_sticker': boolean\r\n\r\n  'group_call_update': GroupCall,\r\n  'group_call_participant': {groupCallId: GroupCallId, participant: GroupCallParticipant},\r\n  // 'group_call_video_track_added': {instance: GroupCallInstance}\r\n\r\n  'call_update': PhoneCall,\r\n  'call_signaling': {callId: CallId, data: Uint8Array},\r\n\r\n  'quick_reaction': Reaction,\r\n\r\n  'service_notification': Update.updateServiceNotification,\r\n\r\n  'logging_out': void,\r\n\r\n  'payment_sent': {peerId: PeerId, mid: number, receiptMessage: Message.messageService},\r\n\r\n  'web_view_result_sent': Long,\r\n\r\n  'premium_toggle': boolean,\r\n  'premium_toggle_private': {isNew: boolean, isPremium: boolean},\r\n\r\n  'config': Config,\r\n  'app_config': MTAppConfig\r\n};\r\n\r\nexport type BroadcastEventsListeners = {\r\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\r\n};\r\n\r\nexport class RootScope extends EventListenerBase<BroadcastEventsListeners> {\r\n  public myId: PeerId;\r\n  private connectionStatus: {[name: string]: ConnectionStatusChange};\r\n  public settings: State['settings'];\r\n  public managers: AppManagers;\r\n  public premium: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.myId = NULL_PEER_ID;\r\n    this.connectionStatus = {};\r\n    this.premium = false;\r\n\r\n    this.addEventListener('user_auth', ({id}) => {\r\n      this.myId = id.toPeerId();\r\n    });\r\n\r\n    this.addEventListener('premium_toggle_private', ({isNew, isPremium}) => {\r\n      this.premium = isPremium;\r\n      this.dispatchEventSingle('premium_toggle', isPremium);\r\n    });\r\n\r\n    this.addEventListener('connection_status_change', (status) => {\r\n      this.connectionStatus[status.name] = status;\r\n    });\r\n\r\n    this.dispatchEvent = (e, ...args) => {\r\n      super.dispatchEvent(e, ...args);\r\n      MTProtoMessagePort.getInstance().invokeVoid('event', {name: e as string, args});\r\n    };\r\n\r\n    if(!IS_WORKER) {\r\n      this.addEventListener('settings_updated', ({settings}) => {\r\n        this.settings = settings;\r\n      });\r\n    }\r\n  }\r\n\r\n  public getConnectionStatus() {\r\n    return this.connectionStatus;\r\n  }\r\n\r\n  public getPremium() {\r\n    return this.premium;\r\n  }\r\n\r\n  public dispatchEventSingle(...args: any[]) {\r\n    // @ts-ignore\r\n    super.dispatchEvent(...args);\r\n  }\r\n}\r\n\r\nconst rootScope = new RootScope();\r\nMOUNT_CLASS_TO.rootScope = rootScope;\r\nexport default rootScope;\r\n","export default function noop() {}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport noop from './noop';\r\n\r\nexport interface CancellablePromise<T> extends Promise<T> {\r\n  resolve?: (value: T) => void,\r\n  reject?: (...args: any[]) => void,\r\n  cancel?: (reason?: any) => void,\r\n\r\n  notify?: (...args: any[]) => void,\r\n  notifyAll?: (...args: any[]) => void,\r\n  lastNotify?: any,\r\n  listeners?: Array<(...args: any[]) => void>,\r\n  addNotifyListener?: (callback: (...args: any[]) => void) => void,\r\n\r\n  isFulfilled?: boolean,\r\n  isRejected?: boolean,\r\n\r\n  onFinish?: () => void,\r\n  _resolve?: (value: T) => void,\r\n  _reject?: (...args: any[]) => void\r\n}\r\n\r\nconst deferredHelper = {\r\n  isFulfilled: false,\r\n  isRejected: false,\r\n\r\n  notify: () => {},\r\n  notifyAll: function(...args: any[]) {\r\n    this.lastNotify = args;\r\n    this.listeners?.forEach((callback: any) => callback(...args));\r\n  },\r\n\r\n  addNotifyListener: function(callback: (...args: any[]) => void) {\r\n    if(this.lastNotify) {\r\n      callback(...this.lastNotify);\r\n    }\r\n\r\n    (this.listeners ??= []).push(callback);\r\n  },\r\n\r\n  resolve: function(value) {\r\n    if(this.isFulfilled || this.isRejected) return;\r\n\r\n    this.isFulfilled = true;\r\n    this._resolve(value);\r\n    this.onFinish();\r\n  },\r\n\r\n  reject: function(...args) {\r\n    if(this.isRejected || this.isFulfilled) return;\r\n\r\n    this.isRejected = true;\r\n    this._reject(...args);\r\n    this.onFinish();\r\n  },\r\n\r\n  onFinish: function() {\r\n    this.notify = this.notifyAll = this.lastNotify = null;\r\n    if(this.listeners) this.listeners.length = 0;\r\n\r\n    if(this.cancel) {\r\n      this.cancel = noop;\r\n    }\r\n  }\r\n} as CancellablePromise<any>;\r\n\r\nexport default function deferredPromise<T>() {\r\n  let resolve: (value: T) => void, reject: (...args: any[]) => void;\r\n  const deferred: CancellablePromise<T> = new Promise<T>((_resolve, _reject) => {\r\n    resolve = _resolve, reject = _reject;\r\n  });\r\n\r\n  Object.assign(deferred, deferredHelper);\r\n  deferred._resolve = resolve;\r\n  deferred._reject = reject;\r\n\r\n  return deferred;\r\n}\r\n\r\n(self as any).deferredPromise = deferredPromise;\r\n","// * Jolly Cobra's schedulers\r\n\r\nimport {AnyToVoidFunction} from '../../types';\r\n\r\nexport default function throttle<F extends AnyToVoidFunction>(\r\n  fn: F,\r\n  ms: number,\r\n  shouldRunFirst = true\r\n) {\r\n  let interval: number | null = null;\r\n  let isPending: boolean;\r\n  let args: Parameters<F>;\r\n\r\n  const clear = () => {\r\n    clearInterval(interval!);\r\n    interval = null;\r\n  };\r\n\r\n  const ret = (..._args: Parameters<F>) => {\r\n    isPending = true;\r\n    args = _args;\r\n\r\n    if(!interval) {\r\n      if(shouldRunFirst) {\r\n        isPending = false;\r\n        // @ts-ignore\r\n        fn(...args);\r\n      }\r\n\r\n      interval = setInterval(() => {\r\n        if(!isPending) {\r\n          clear();\r\n          return;\r\n        }\r\n\r\n        isPending = false;\r\n        // @ts-ignore\r\n        fn(...args);\r\n      }, ms) as any;\r\n    }\r\n  };\r\n\r\n  ret.clear = clear;\r\n\r\n  return ret;\r\n}\r\n","export default function safeAssign<T>(object: T, fromObject: any) {\r\n  if(fromObject) {\r\n    for(const i in fromObject) {\r\n      if(fromObject[i] !== undefined) {\r\n        // @ts-ignore\r\n        object[i] = fromObject[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  return object;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {Database} from '../../config/databases';\r\nimport Modes from '../../config/modes';\r\nimport makeError from '../../helpers/makeError';\r\nimport safeAssign from '../../helpers/object/safeAssign';\r\nimport {logger} from '../logger';\r\n\r\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/createIndex\r\n */\r\nexport type IDBIndex = {\r\n  indexName: string,\r\n  keyPath: string,\r\n  objectParameters: IDBIndexParameters\r\n};\r\n\r\nexport type IDBStore = {\r\n  name: string,\r\n  indexes?: IDBIndex[]\r\n};\r\n\r\nexport type IDBOptions = {\r\n  name?: string,\r\n  storeName: string,\r\n  stores?: IDBStore[],\r\n  version?: number\r\n};\r\n\r\nconst DEBUG = false;\r\n\r\nexport class IDB {\r\n  private static INSTANCES: IDB[] = [];\r\n  private openDbPromise: Promise<IDBDatabase>;\r\n  private db: IDBDatabase;\r\n  private storageIsAvailable: boolean;\r\n  private log: ReturnType<typeof logger>;\r\n  private name: string;\r\n  private version: number;\r\n  private stores: IDBStore[];\r\n\r\n  constructor(db: Database<any>) {\r\n    safeAssign(this, db);\r\n\r\n    if(Modes.test) {\r\n      this.name += '_test';\r\n    }\r\n\r\n    this.storageIsAvailable = true;\r\n    this.log = logger(['IDB', db.name].join('-'));\r\n    this.log('constructor');\r\n\r\n    this.openDatabase(true);\r\n\r\n    IDB.INSTANCES.push(this);\r\n  }\r\n\r\n  public isAvailable() {\r\n    return this.storageIsAvailable;\r\n  }\r\n\r\n  public openDatabase(createNew = false): Promise<IDBDatabase> {\r\n    if(this.openDbPromise && !createNew) {\r\n      return this.openDbPromise;\r\n    }\r\n\r\n    const createIndexes = (os: IDBObjectStore, store: IDBStore) => {\r\n      const indexNames = Array.from(os.indexNames);\r\n      for(const indexName of indexNames) {\r\n        os.deleteIndex(indexName);\r\n      }\r\n\r\n      if(!store.indexes?.length) {\r\n        return;\r\n      }\r\n\r\n      for(const index of store.indexes) {\r\n        if(os.indexNames.contains(index.indexName)) {\r\n          continue;\r\n        }\r\n\r\n        os.createIndex(index.indexName, index.keyPath, index.objectParameters);\r\n      }\r\n    };\r\n\r\n    const createObjectStore = (db: IDBDatabase, store: IDBStore) => {\r\n      const os = db.createObjectStore(store.name);\r\n      createIndexes(os, store);\r\n    };\r\n\r\n    try {\r\n      var request = indexedDB.open(this.name, this.version);\r\n\r\n      if(!request) {\r\n        return Promise.reject();\r\n      }\r\n    } catch(error) {\r\n      this.log.error('error opening db', (error as Error).message);\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    let finished = false;\r\n    setTimeout(() => {\r\n      if(!finished) {\r\n        request.onerror(makeError('IDB_CREATE_TIMEOUT') as Event);\r\n      }\r\n    }, 3000);\r\n\r\n    return this.openDbPromise = new Promise<IDBDatabase>((resolve, reject) => {\r\n      request.onsuccess = (event) => {\r\n        finished = true;\r\n        const db = request.result;\r\n        let calledNew = false;\r\n\r\n        this.log('Opened');\r\n\r\n        db.onerror = (error) => {\r\n          this.storageIsAvailable = false;\r\n          this.log.error('Error creating/accessing IndexedDB database', error);\r\n          reject(error);\r\n        };\r\n\r\n        db.onclose = (e) => {\r\n          this.log.error('closed:', e);\r\n          !calledNew && this.openDatabase();\r\n        };\r\n\r\n        db.onabort = (e) => {\r\n          this.log.error('abort:', e);\r\n          const transaction = e.target as IDBTransaction;\r\n\r\n          this.openDatabase(calledNew = true);\r\n\r\n          if(transaction.onerror) {\r\n            transaction.onerror(e);\r\n          }\r\n\r\n          db.close();\r\n        };\r\n\r\n        db.onversionchange = (e) => {\r\n          this.log.error('onversionchange, lol?');\r\n        };\r\n\r\n        resolve(this.db = db);\r\n      };\r\n\r\n      request.onerror = (event) => {\r\n        finished = true;\r\n        this.storageIsAvailable = false;\r\n        this.log.error('Error creating/accessing IndexedDB database', event);\r\n        reject(event);\r\n      };\r\n\r\n      request.onupgradeneeded = (event) => {\r\n        finished = true;\r\n        this.log.warn('performing idb upgrade from', event.oldVersion, 'to', event.newVersion);\r\n\r\n        const target = event.target as IDBOpenDBRequest;\r\n        const db = target.result;\r\n        this.stores.forEach((store) => {\r\n          /* if(db.objectStoreNames.contains(store.name)) {\r\n            //if(event.oldVersion === 1) {\r\n              db.deleteObjectStore(store.name);\r\n            //}\r\n          } */\r\n\r\n          if(!db.objectStoreNames.contains(store.name)) {\r\n            createObjectStore(db, store);\r\n          } else {\r\n            const txn = target.transaction;\r\n            const os = txn.objectStore(store.name);\r\n            createIndexes(os, store);\r\n          }\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  public static create<T extends Database<any>>(db: T) {\r\n    return this.INSTANCES.find((instance) => instance.name === db.name) ?? new IDB(db);\r\n  }\r\n\r\n  public static closeDatabases(preserve?: IDB) {\r\n    this.INSTANCES.forEach((storage) => {\r\n      if(preserve && preserve === storage) {\r\n        return;\r\n      }\r\n\r\n      const db = storage.db;\r\n      if(db) {\r\n        db.onclose = () => {};\r\n        db.close();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default class IDBStorage<T extends Database<any>, StoreName extends string = T['stores'][0]['name']> {\r\n  private log: ReturnType<typeof logger>;\r\n  private storeName: T['stores'][0]['name'];\r\n  private idb: IDB;\r\n\r\n  constructor(db: T, storeName: typeof db['stores'][0]['name']) {\r\n    this.storeName = storeName;\r\n    this.log = logger(['IDB', db.name, storeName].join('-'));\r\n    this.idb = IDB.create(db);\r\n  }\r\n\r\n  /**\r\n   * ! WARNING ! function requires at least one opened connection\r\n   */\r\n  /* public static clearObjectStores() {\r\n    const storage = this.STORAGES[0];\r\n    this.closeDatabases(storage);\r\n\r\n    const names = Array.from(storage.db.objectStoreNames);\r\n    const promises = names.map((name) => storage.clear(name));\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  /* public static deleteDatabase() {\r\n    this.closeDatabases();\r\n\r\n    const storages = this.STORAGES;\r\n    const dbNames = Array.from(new Set(storages.map((storage) => storage.name)));\r\n    const promises = dbNames.map((dbName) => {\r\n      return new Promise<void>((resolve, reject) => {\r\n        const deleteRequest = indexedDB.deleteDatabase(dbName);\r\n\r\n        deleteRequest.onerror = () => {\r\n          reject();\r\n        };\r\n\r\n        deleteRequest.onsuccess = () => {\r\n          resolve();\r\n        };\r\n      });\r\n    });\r\n\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  public delete(entryName: string | string[], storeName?: StoreName): Promise<void> {\r\n    // return Promise.resolve();\r\n    const isArray = Array.isArray(entryName);\r\n    if(!isArray) {\r\n      entryName = [].concat(entryName);\r\n    }\r\n\r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      const promises = (entryName as string[]).map((entryName) => objectStore.delete(entryName));\r\n      return isArray ? promises : promises[0];\r\n    }, DEBUG ? 'delete: ' + (entryName as string[]).join(', ') : '', storeName);\r\n  }\r\n\r\n  public clear(storeName?: StoreName): Promise<void> {\r\n    return this.getObjectStore('readwrite', (objectStore) => objectStore.clear(), DEBUG ? 'clear' : '', storeName);\r\n  }\r\n\r\n  public save(entryName: string | string[], value: any | any[], storeName?: StoreName) {\r\n    // const handleError = (error: Error) => {\r\n    //   this.log.error('save: transaction error:', entryName, value, db, error, error && error.name);\r\n    //   if((!error || error.name === 'InvalidStateError')/*  && false */) {\r\n    //     setTimeout(() => {\r\n    //       this.save(entryName, value);\r\n    //     }, 2e3);\r\n    //   } else {\r\n    //     //console.error('IndexedDB saveFile transaction error:', error, error && error.name);\r\n    //   }\r\n    // };\r\n\r\n    const isArray = Array.isArray(entryName);\r\n    if(!isArray) {\r\n      entryName = [].concat(entryName);\r\n      value = [].concat(value);\r\n    }\r\n\r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      const promises = (entryName as string[]).map((entryName, idx) => objectStore.put(value[idx], entryName));\r\n      return isArray ? promises : promises[0];\r\n    }, DEBUG ? 'save: ' + (entryName as string[]).join(', ') : '', storeName);\r\n  }\r\n\r\n  // public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n  //   //return Promise.resolve(blobConstruct([blob]));\r\n  //   if(!(blob instanceof Blob)) {\r\n  //     blob = blobConstruct(blob);\r\n  //   }\r\n\r\n  //   return this.save(fileName, blob);\r\n  // }\r\n\r\n  /* public saveFileBase64(db: IDBDatabase, fileName: string, blob: Blob | any): Promise<Blob> {\r\n    if(this.getBlobSize(blob) > 10 * 1024 * 1024) {\r\n      return Promise.reject();\r\n    }\r\n\r\n    if(!(blob instanceof Blob)) {\r\n      var safeMimeType = blobSafeMimeType(blob.type || 'image/jpeg');\r\n      var address = 'data:' + safeMimeType + ';base64,' + bytesToBase64(blob);\r\n      return this.storagePutB64String(db, fileName, address).then(() => {\r\n        return blob;\r\n      });\r\n    }\r\n\r\n    try {\r\n      var reader = new FileReader();\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    let promise = new Promise<Blob>((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        this.storagePutB64String(db, fileName, reader.result as string).then(() => {\r\n          resolve(blob);\r\n        }, reject);\r\n      }\r\n\r\n      reader.onerror = reject;\r\n    });\r\n\r\n\r\n    try {\r\n      reader.readAsDataURL(blob);\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public storagePutB64String(db: IDBDatabase, fileName: string, b64string: string) {\r\n    try {\r\n      var objectStore = db.transaction([this.storeName], 'readwrite')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.put(b64string, fileName);\r\n    } catch(error) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      request.onsuccess = function(event) {\r\n        resolve();\r\n      };\r\n\r\n      request.onerror = reject;\r\n    });\r\n  }\r\n\r\n  public getBlobSize(blob: any) {\r\n    return blob.size || blob.byteLength || blob.length;\r\n  } */\r\n\r\n  public get<T>(entryName: string[], storeName?: StoreName): Promise<T[]>;\r\n  public get<T>(entryName: string, storeName?: StoreName): Promise<T>;\r\n  public get<T>(entryName: string | string[], storeName?: StoreName): Promise<T> | Promise<T[]> {\r\n    // return Promise.reject();\r\n\r\n    const isArray = Array.isArray(entryName);\r\n    if(!isArray) {\r\n      if(!entryName) {\r\n        return undefined;\r\n      }\r\n\r\n      entryName = [].concat(entryName);\r\n    } else if(!entryName.length) {\r\n      return Promise.resolve([]) as any;\r\n    }\r\n\r\n    return this.getObjectStore<T>('readonly', (objectStore) => {\r\n      const promises = (entryName as string[]).map((entryName) => objectStore.get(entryName));\r\n      return isArray ? promises : promises[0];\r\n    }, DEBUG ? 'get: ' + (entryName as string[]).join(', ') : '', storeName);\r\n  }\r\n\r\n  private getObjectStore<T>(\r\n    mode: IDBTransactionMode,\r\n    callback: (objectStore: IDBObjectStore) => IDBRequest | IDBRequest[],\r\n    log?: string,\r\n    storeName = this.storeName\r\n  ) {\r\n    let perf: number;\r\n\r\n    if(log) {\r\n      perf = performance.now();\r\n      this.log(log + ': start');\r\n    }\r\n\r\n    return this.idb.openDatabase().then((db) => {\r\n      return new Promise<T>((resolve, reject) => {\r\n        /* if(mode === 'readwrite') {\r\n          return;\r\n        } */\r\n\r\n        const transaction = db.transaction([storeName], mode);\r\n\r\n        const onError = () => {\r\n          clearTimeout(timeout);\r\n          reject(transaction.error);\r\n        };\r\n\r\n        // let resolved = false;\r\n        const onComplete = (/* what: string */) => {\r\n          clearTimeout(timeout);\r\n\r\n          if(log) {\r\n            this.log(log + ': end', performance.now() - perf/* , what */);\r\n          }\r\n\r\n          // if(resolved) {\r\n          //   return;\r\n          // }\r\n\r\n          // resolved = true;\r\n          const results = requests.map((r) => r.result);\r\n          resolve(isArray ? results : results[0]);\r\n        };\r\n\r\n        transaction.onerror = onError;\r\n\r\n        // * have to wait while clearing or setting something\r\n        const waitForTransactionComplete = mode === 'readwrite';\r\n        if(waitForTransactionComplete) {\r\n          transaction.oncomplete = () => onComplete(/* 'transaction' */);\r\n        }\r\n\r\n        const timeout = setTimeout(() => {\r\n          this.log.error('transaction not finished', transaction, log);\r\n        }, 10000);\r\n\r\n        /* transaction.addEventListener('abort', (e) => {\r\n          //handleError();\r\n          this.log.error('IndexedDB: transaction abort!', transaction.error);\r\n        }); */\r\n\r\n        const callbackResult = callback(transaction.objectStore(storeName));\r\n\r\n        const isArray = Array.isArray(callbackResult);\r\n        const requests: IDBRequest[] = isArray ? callbackResult : [].concat(callbackResult) as any;\r\n\r\n        if(waitForTransactionComplete) {\r\n          return;\r\n        }\r\n\r\n        const length = requests.length;\r\n        let left = length;\r\n\r\n        const onRequestFinished = () => {\r\n          if(transaction.error) {\r\n            return;\r\n          }\r\n\r\n          if(!--left) {\r\n            onComplete(/* 'requests' */);\r\n          }\r\n        };\r\n\r\n        for(let i = 0; i < length; ++i) {\r\n          const request = requests[i];\r\n          request.onerror = onError;\r\n          request.onsuccess = onRequestFinished;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public getAll<T>(storeName?: StoreName): Promise<T[]> {\r\n    return this.getObjectStore<T[]>('readonly', (objectStore) => objectStore.getAll(), DEBUG ? 'getAll' : '', storeName);\r\n  }\r\n\r\n  /* public getAllKeys(): Promise<Array<string>> {\r\n    console.time('getAllEntries');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.getAllKeys();\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var result = event.target.result;\r\n          resolve(result);\r\n          console.timeEnd('getAllEntries');\r\n        }\r\n\r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public isFileExists(fileName: string): Promise<boolean> {\r\n    console.time('isFileExists');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.openCursor(fileName);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var cursor = event.target.result;\r\n          resolve(!!cursor);\r\n          console.timeEnd('isFileExists');\r\n        }\r\n\r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public getFileWriter(fileName: string, mimeType: string) {\r\n    var fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  } */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {Database} from '../config/databases';\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\n// import DATABASE_SESSION from \"../config/databases/session\";\r\nimport deferredPromise, {CancellablePromise} from '../helpers/cancellablePromise';\r\nimport {IS_WORKER} from '../helpers/context';\r\nimport throttle from '../helpers/schedulers/throttle';\r\n// import { WorkerTaskTemplate } from \"../types\";\r\nimport IDBStorage from './files/idb';\r\n\r\nfunction noop() {}\r\n\r\n/* export interface LocalStorageProxySetTask extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: {\r\n    type: 'set',\r\n    keys: string[],\r\n    values: any[]\r\n  }\r\n};\r\n\r\nexport interface LocalStorageProxyDeleteTask extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: {\r\n    type: 'delete',\r\n    keys: string[]\r\n  }\r\n}; */\r\n\r\nconst THROTTLE_TIME = 16;\r\n\r\n/* Storage extends {[name: string]: any} *//* Storage extends Record<string, any> */\r\nexport default class AppStorage<\r\n  Storage extends Record<string, any>,\r\n  T extends Database<any>\r\n> {\r\n  private static STORAGES: AppStorage<any, Database<any>>[] = [];\r\n  private storage: IDBStorage<T>;// new CacheStorageController('session');\r\n\r\n  // private cache: Partial<{[key: string]: Storage[typeof key]}> = {};\r\n  private cache: Partial<Storage> = {};\r\n  private useStorage: boolean;\r\n  private savingFreezed: boolean;\r\n\r\n  private getPromises: Map<keyof Storage, CancellablePromise<Storage[keyof Storage]>> = new Map();\r\n  private getThrottled: () => void;\r\n\r\n  private keysToSet: Set<keyof Storage> = new Set();\r\n  private saveThrottled: () => void;\r\n  private saveDeferred = deferredPromise<void>();\r\n\r\n  private keysToDelete: Set<keyof Storage> = new Set();\r\n  private deleteThrottled: () => void;\r\n  private deleteDeferred = deferredPromise<void>();\r\n\r\n  constructor(private db: T, private storeName: typeof db['stores'][number]['name']) {\r\n    this.storage = new IDBStorage<T>(db, storeName);\r\n\r\n    if(AppStorage.STORAGES.length) {\r\n      this.useStorage = AppStorage.STORAGES[0].useStorage;\r\n    } else {\r\n      this.useStorage = true;\r\n    }\r\n\r\n    this.savingFreezed = false;\r\n\r\n    AppStorage.STORAGES.push(this);\r\n\r\n    this.saveThrottled = throttle(async() => {\r\n      const deferred = this.saveDeferred;\r\n      this.saveDeferred = deferredPromise();\r\n\r\n      const set = this.keysToSet;\r\n      if(set.size) {\r\n        const keys = Array.from(set.values()) as string[];\r\n        set.clear();\r\n\r\n        const values = keys.map((key) => this.cache[key]);\r\n        try {\r\n          // console.log('setItem: will set', key/* , value */);\r\n          // await this.cacheStorage.delete(key); // * try to prevent memory leak in Chrome leading to 'Unexpected internal error.'\r\n          // await this.storage.save(key, new Response(value, {headers: {'Content-Type': 'application/json'}}));\r\n\r\n          /* if(db === DATABASE_SESSION && !('localStorage' in self)) { // * support legacy Webogram's localStorage\r\n            self.postMessage({\r\n              type: 'localStorageProxy',\r\n              payload: {\r\n                type: 'set',\r\n                keys,\r\n                values\r\n              }\r\n            } as LocalStorageProxySetTask);\r\n          } */\r\n\r\n          await this.storage.save(keys, values);\r\n          // console.log('setItem: have set', key/* , value */);\r\n        } catch(e) {\r\n          // this.useCS = false;\r\n          console.error('[AS]: set error:', e, keys, values);\r\n        }\r\n      }\r\n\r\n      deferred.resolve();\r\n\r\n      if(set.size) {\r\n        this.saveThrottled();\r\n      }\r\n    }, THROTTLE_TIME, false);\r\n\r\n    this.deleteThrottled = throttle(async() => {\r\n      const deferred = this.deleteDeferred;\r\n      this.deleteDeferred = deferredPromise();\r\n\r\n      const set = this.keysToDelete;\r\n      if(set.size) {\r\n        const keys = Array.from(set.values()) as string[];\r\n        set.clear();\r\n\r\n        try {\r\n          /* if(db === DATABASE_SESSION && !('localStorage' in self)) { // * support legacy Webogram's localStorage\r\n            self.postMessage({\r\n              type: 'localStorageProxy',\r\n              payload: {\r\n                type: 'delete',\r\n                keys\r\n              }\r\n            } as LocalStorageProxyDeleteTask);\r\n          } */\r\n\r\n          await this.storage.delete(keys);\r\n        } catch(e) {\r\n          console.error('[AS]: delete error:', e, keys);\r\n        }\r\n      }\r\n\r\n      deferred.resolve();\r\n\r\n      if(set.size) {\r\n        this.deleteThrottled();\r\n      }\r\n    }, THROTTLE_TIME, false);\r\n\r\n    this.getThrottled = throttle(async() => {\r\n      const keys = Array.from(this.getPromises.keys());\r\n\r\n      // const perf = performance.now();\r\n      this.storage.get(keys as string[]).then((values) => {\r\n        for(let i = 0, length = keys.length; i < length; ++i) {\r\n          const key = keys[i];\r\n          const deferred = this.getPromises.get(key);\r\n          if(deferred) {\r\n            // @ts-ignore\r\n            deferred.resolve(this.cache[key] = values[i]);\r\n            this.getPromises.delete(key);\r\n          }\r\n        }\r\n\r\n        // console.log('[AS]: get time', keys, performance.now() - perf);\r\n      }, (error: ApiError) => {\r\n        const ignoreErrors: Set<ErrorType> = new Set(['NO_ENTRY_FOUND', 'STORAGE_OFFLINE']);\r\n        if(!ignoreErrors.has(error.type)) {\r\n          this.useStorage = false;\r\n          console.error('[AS]: get error:', error, keys, storeName);\r\n        }\r\n\r\n        for(let i = 0, length = keys.length; i < length; ++i) {\r\n          const key = keys[i];\r\n          const deferred = this.getPromises.get(key);\r\n          if(deferred) {\r\n            // deferred.reject(error);\r\n            deferred.resolve(undefined);\r\n            this.getPromises.delete(key);\r\n          }\r\n        }\r\n      }).finally(() => {\r\n        if(this.getPromises.size) {\r\n          this.getThrottled();\r\n        }\r\n      });\r\n    }, THROTTLE_TIME, false);\r\n  }\r\n\r\n  public isAvailable() {\r\n    return this.useStorage;\r\n  }\r\n\r\n  public getCache() {\r\n    return this.cache;\r\n  }\r\n\r\n  public getFromCache<T extends keyof Storage>(key: T) {\r\n    return this.cache[key];\r\n  }\r\n\r\n  public setToCache(key: keyof Storage, value: Storage[typeof key]) {\r\n    return this.cache[key] = value;\r\n  }\r\n\r\n  public async get<T extends keyof Storage>(key: T, useCache = true): Promise<Storage[T]> {\r\n    if(this.cache.hasOwnProperty(key) && useCache) {\r\n      return this.getFromCache(key);\r\n    } else if(this.useStorage) {\r\n      const r = this.getPromises.get(key);\r\n      if(r) return r as any;\r\n\r\n      const p = deferredPromise<Storage[T]>();\r\n      this.getPromises.set(key, p as any);\r\n\r\n      this.getThrottled();\r\n\r\n      return p;\r\n    }/*  else {\r\n      throw 'something went wrong';\r\n    } */\r\n  }\r\n\r\n  public getAll() {\r\n    return this.storage.getAll().catch(() => []);\r\n  }\r\n\r\n  public set(obj: Partial<Storage>, onlyLocal = false) {\r\n    // console.log('storageSetValue', obj, callback, arguments);\r\n\r\n    const canUseStorage = this.useStorage && !onlyLocal && !this.savingFreezed;\r\n    for(const key in obj) {\r\n      if(obj.hasOwnProperty(key)) {\r\n        const value = obj[key];\r\n        this.setToCache(key, value);\r\n\r\n        // let perf = /* DEBUG */false ? performance.now() : 0;\r\n        // value = JSON.stringify(value);\r\n\r\n        // if(perf) {\r\n        //   let elapsedTime = performance.now() - perf;\r\n        //   if(elapsedTime > 10) {\r\n        //     console.warn('LocalStorage set: stringify time by JSON.stringify:', elapsedTime, key);\r\n        //   }\r\n        // }\r\n\r\n        /* perf = performance.now();\r\n        value = stringify(value);\r\n        console.log('LocalStorage set: stringify time by own stringify:', performance.now() - perf); */\r\n\r\n        if(canUseStorage) {\r\n          this.keysToSet.add(key);\r\n          this.keysToDelete.delete(key);\r\n          this.saveThrottled();\r\n        }\r\n      }\r\n    }\r\n\r\n    return canUseStorage ? this.saveDeferred : Promise.resolve();\r\n  }\r\n\r\n  public delete(key: keyof Storage, saveLocal = false) {\r\n    /* if(!this.cache.hasOwnProperty(key)) {\r\n      return;\r\n    } */\r\n\r\n    // ! it is needed here\r\n    key = '' + (key as string);\r\n\r\n    if(!saveLocal) {\r\n      delete this.cache[key];\r\n    }\r\n\r\n    if(this.useStorage) {\r\n      this.keysToSet.delete(key);\r\n      this.keysToDelete.add(key);\r\n      this.deleteThrottled();\r\n    }\r\n\r\n    return this.useStorage ? this.deleteDeferred : Promise.resolve();\r\n  }\r\n\r\n  public clear(saveLocal = false) {\r\n    if(!saveLocal) {\r\n      for(const i in this.cache) {\r\n        delete this.cache[i];\r\n      }\r\n    }\r\n\r\n    return this.storage.clear().catch(noop);\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    return Promise.all(this.STORAGES.map((storage) => {\r\n      storage.useStorage = enabled;\r\n\r\n      if(!IS_WORKER || !clearWrite) {\r\n        return;\r\n      }\r\n\r\n      if(!enabled) {\r\n        storage.keysToSet.clear();\r\n        storage.keysToDelete.clear();\r\n        storage.getPromises.forEach((deferred) => deferred.resolve(undefined));\r\n        storage.getPromises.clear();\r\n        return storage.clear(true);\r\n      } else {\r\n        return storage.set(storage.cache);\r\n      }\r\n    })).catch(noop);\r\n  }\r\n\r\n  public static freezeSaving<T extends Database<any>>(callback: () => any, names: T['stores'][number]['name'][]) {\r\n    this.STORAGES.forEach((storage) => storage.savingFreezed = true);\r\n    try {\r\n      callback();\r\n    } catch(err) {\r\n      console.error('freezeSaving callback error:', err);\r\n    }\r\n    this.STORAGES.forEach((storage) => storage.savingFreezed = false);\r\n  }\r\n\r\n  /* public deleteDatabase() {\r\n    return IDBStorage.deleteDatabase().catch(noop);\r\n  } */\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.AppStorage = AppStorage);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Database} from '.';\r\nimport type {IDBIndex} from '../../lib/files/idb';\r\n\r\nconst DATABASE_STATE: Database<'session' | 'stickerSets' | 'users' | 'chats' | 'messages' | 'dialogs'> = {\r\n  name: 'tweb',\r\n  version: 7,\r\n  stores: [{\r\n    name: 'session'\r\n  }, {\r\n    name: 'stickerSets'\r\n  }, {\r\n    name: 'users'\r\n  }, {\r\n    name: 'chats'\r\n  }, {\r\n    name: 'dialogs'\r\n    // indexes: [\r\n    //   ...(new Array(20 + 2).fill(0)).map((_, idx) => {\r\n    //     const name = `index_${idx}`;\r\n    //     const index: IDBIndex = {\r\n    //       indexName: name,\r\n    //       keyPath: name,\r\n    //       objectParameters: {}\r\n    //     };\r\n\r\n    //     return index\r\n    //   })\r\n    // ]\r\n  }, {\r\n    name: 'messages'\r\n  }]\r\n};\r\n\r\nexport default DATABASE_STATE;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {ChatSavedPosition} from './appManagers/appImManager';\r\nimport type {AppDraftsManager} from './appManagers/appDraftsManager';\r\nimport type {State} from '../config/state';\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport {LangPackDifference} from '../layer';\r\nimport AppStorage from './storage';\r\nimport DATABASE_STATE from '../config/databases/state';\r\n\r\nclass StateStorage extends AppStorage<{\r\n  chatPositions: {\r\n    [peerId_threadId: string]: ChatSavedPosition\r\n  },\r\n  langPack: LangPackDifference,\r\n  drafts: AppDraftsManager['drafts'],\r\n  user_auth: any, // support old webk format\r\n} & State, typeof DATABASE_STATE> {\r\n  constructor() {\r\n    super(DATABASE_STATE, 'session');\r\n  }\r\n}\r\n\r\nconst stateStorage = new StateStorage();\r\nMOUNT_CLASS_TO.stateStorage = stateStorage;\r\nexport default stateStorage;\r\n","export const DEEP_PATH_JOINER = '\\x01';\r\n\r\nexport function joinDeepPath(...args: any[]) {\r\n  return args.join(DEEP_PATH_JOINER);\r\n}\r\n\r\nexport default function setDeepProperty(\r\n  object: any,\r\n  key: string,\r\n  value?: any,\r\n  deleteIfUndefined?: boolean\r\n) {\r\n  const splitted = key.split(DEEP_PATH_JOINER);\r\n  const length = splitted.length;\r\n  let lastObject = object/* , fractalPart: string */; // fix fractal number key\r\n  for(let i = 0; i < length - 1; ++i) {\r\n    const part = splitted[i];\r\n    // if(fractalPart) {\r\n    //   part = fractalPart + '.' + part;\r\n    //   fractalPart = undefined;\r\n    // } else if(!Number.isNaN(+part)) {\r\n    //   fractalPart = part;\r\n    //   continue;\r\n    // }\r\n    lastObject = lastObject[part] ??= {};\r\n  }\r\n\r\n  const lastKey = /* (fractalPart ? fractalPart + '.' : '') +  */splitted[length - 1];\r\n  if(value === undefined && deleteIfUndefined/*  && arguments.length === 2 */) {\r\n    delete lastObject[lastKey];\r\n  } else {\r\n    lastObject[lastKey] = value;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {State} from '../../config/state';\r\nimport rootScope from '../rootScope';\r\nimport stateStorage from '../stateStorage';\r\nimport setDeepProperty, {DEEP_PATH_JOINER} from '../../helpers/object/setDeepProperty';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\n\r\nexport class AppStateManager {\r\n  private state: State = {} as any;\r\n  private storage = stateStorage;\r\n\r\n  // ! for mtproto worker use only\r\n  public newVersion: string;\r\n  public oldVersion: string;\r\n  public userId: UserId;\r\n\r\n  public getState() {\r\n    return Promise.resolve(this.state);\r\n  }\r\n\r\n  public setByKey(key: string, value: any) {\r\n    setDeepProperty(this.state, key, value);\r\n\r\n    const first = key.split(DEEP_PATH_JOINER)[0] as keyof State;\r\n    if(first === 'settings') {\r\n      rootScope.dispatchEvent('settings_updated', {key, value, settings: this.state.settings});\r\n    }\r\n\r\n    return this.pushToState(first, this.state[first]);\r\n  }\r\n\r\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true, onlyLocal?: boolean) {\r\n    if(direct) {\r\n      this.state[key] = value;\r\n    }\r\n\r\n    return this.setKeyValueToStorage(key, value, onlyLocal);\r\n  }\r\n\r\n  public setKeyValueToStorage<T extends keyof State>(key: T, value: State[T] = this.state[key], onlyLocal?: boolean) {\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {name: 'state', key, value});\r\n\r\n    return this.storage.set({\r\n      [key]: value\r\n    }, onlyLocal);\r\n  }\r\n\r\n  /* public resetState() {\r\n    for(let i in this.state) {\r\n      // @ts-ignore\r\n      this.state[i] = false;\r\n    }\r\n    sessionStorage.set(this.state).then(() => {\r\n      location.reload();\r\n    });\r\n  } */\r\n}\r\n\r\nconst appStateManager = new AppStateManager();\r\nexport default appStateManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {TrueDcId} from '../types';\r\n\r\nexport const MAIN_DOMAINS = ['web.telegram.org', 'webk.telegram.org'];\r\nexport const DEFAULT_BACKGROUND_SLUG = 'pattern';\r\n\r\nconst threads = Math.min(4, navigator.hardwareConcurrency ?? 4);\r\n\r\nconst App = {\r\n  id: +import.meta.env.VITE_API_ID,\r\n  hash: import.meta.env.VITE_API_HASH,\r\n  version: import.meta.env.VITE_VERSION,\r\n  versionFull: import.meta.env.VITE_VERSION_FULL,\r\n  build: +import.meta.env.VITE_BUILD,\r\n  langPackVersion: '3.9.0',\r\n  langPack: 'webk',\r\n  langPackCode: 'en',\r\n  domains: MAIN_DOMAINS,\r\n  baseDcId: 2 as TrueDcId,\r\n  isMainDomain: MAIN_DOMAINS.includes(location.hostname),\r\n  suffix: 'K',\r\n  threads,\r\n  cryptoWorkers: threads\r\n};\r\n\r\nif(App.isMainDomain) { // use Webogram credentials then\r\n  App.id = 2496;\r\n  App.hash = '8da85b0d5bfe62527e5b244c209159c3';\r\n}\r\n\r\nexport default App;\r\n","export default function pause(ms: number) {\r\n  return new Promise<void>((resolve) => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport pause from '../../../helpers/schedulers/pause';\r\nimport {DcId} from '../../../types';\r\nimport {logger, LogTypes} from '../../logger';\r\nimport type MTPNetworker from '../networker';\r\nimport MTTransport from './transport';\r\nimport Modes from '../../../config/modes';\r\nimport transportController from './controller';\r\n// import networkStats from '../networkStats';\r\n\r\nexport default class HTTP implements MTTransport {\r\n  public networker: MTPNetworker;\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private pending: Array<{\r\n    resolve: (body: Uint8Array) => void,\r\n    reject: any,\r\n    body: Uint8Array\r\n  }> = [];\r\n  private releasing: boolean;\r\n\r\n  public connected: boolean;\r\n  private destroyed: boolean;\r\n  private debug: boolean;\r\n\r\n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\r\n    this.debug = Modes.debug && false;\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n\r\n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n\r\n    this.connected = false;\r\n  }\r\n\r\n  public _send(body: Uint8Array, mode?: RequestMode) {\r\n    const length = body.length;\r\n    this.debug && this.log.debug('-> body length to send:', length);\r\n\r\n    // networkStats.addSent(this.dcId, length);\r\n    return fetch(this.url, {method: 'POST', body, mode}).then((response) => {\r\n      if(response.status !== 200 && !mode) {\r\n        response.arrayBuffer().then((buffer) => {\r\n          this.log.error('not 200',\r\n            new TextDecoder('utf-8').decode(new Uint8Array(buffer)));\r\n        });\r\n\r\n        throw response;\r\n      }\r\n\r\n      this.setConnected(true);\r\n\r\n      // * test resending by dropping random request\r\n      // if(Math.random() > .5) {\r\n      //   throw 'asd';\r\n      // }\r\n\r\n      return response.arrayBuffer().then((buffer) => {\r\n        // networkStats.addReceived(this.dcId, buffer.byteLength);\r\n        return new Uint8Array(buffer);\r\n      });\r\n    }, (err) => {\r\n      this.setConnected(false);\r\n      throw err;\r\n    });\r\n  }\r\n\r\n  private setConnected(connected: boolean) {\r\n    if(this.connected === connected || this.destroyed) {\r\n      return;\r\n    }\r\n\r\n    this.connected = connected;\r\n\r\n    if(import.meta.env.VITE_MTPROTO_AUTO) {\r\n      transportController.setTransportValue('https', connected);\r\n    }\r\n  }\r\n\r\n  public destroy() {\r\n    this.setConnected(false);\r\n    this.destroyed = true;\r\n    this.pending.forEach((pending) => pending.reject());\r\n    this.pending.length = 0;\r\n  }\r\n\r\n  public send(body: Uint8Array) {\r\n    if(this.networker) {\r\n      return this._send(body);\r\n    } else {\r\n      const promise = new Promise<typeof body>((resolve, reject) => {\r\n        this.pending.push({resolve, reject, body});\r\n      });\r\n\r\n      this.releasePending();\r\n\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  private async releasePending() {\r\n    if(this.releasing) return;\r\n\r\n    this.releasing = true;\r\n    // this.log('-> messages to send:', this.pending.length);\r\n    for(let i = 0; i < this.pending.length; ++i) {\r\n      const pending = this.pending[i];\r\n      const {body, resolve} = pending;\r\n\r\n      try {\r\n        const result = await this._send(body);\r\n        resolve(result);\r\n        this.pending.splice(i, 1);\r\n      } catch(err) {\r\n        this.log.error('Send plain request error:', err);\r\n        await pause(5000);\r\n      }\r\n\r\n      --i;\r\n    }\r\n\r\n    this.releasing = false;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {logger, LogTypes} from '../../logger';\r\nimport Modes from '../../../config/modes';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport {MTConnection} from './transport';\r\n\r\n// let closeSocketBefore = Date.now() + 30e3;\r\n// let closeSocketAfter = Date.now() + 10e3;\r\n\r\nexport default class Socket extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private ws: WebSocket;\r\n  private log: ReturnType<typeof logger>;\r\n  private debug = Modes.debug && false;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n    this.connect();\r\n\r\n    return this;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.ws.removeEventListener('open', this.handleOpen);\r\n    this.ws.removeEventListener('close', this.handleClose);\r\n    this.ws.removeEventListener('error', this.handleError);\r\n    this.ws.removeEventListener('message', this.handleMessage);\r\n    this.ws = undefined;\r\n  }\r\n\r\n  private connect() {\r\n    this.ws = new WebSocket(this.url, 'binary');\r\n    this.ws.binaryType = 'arraybuffer';\r\n    this.ws.addEventListener('open', this.handleOpen);\r\n    this.ws.addEventListener('close', this.handleClose);\r\n    this.ws.addEventListener('error', this.handleError);\r\n    this.ws.addEventListener('message', this.handleMessage);\r\n\r\n    // if(Date.now() < closeSocketBefore) {\r\n    // if(Date.now() >= closeSocketAfter) {\r\n    //   this.ws.close();\r\n    // }\r\n  }\r\n\r\n  public close() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.log('close execution');\r\n\r\n    try {\r\n      this.ws.close();\r\n    } catch(err) {\r\n\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  private handleOpen = () => {\r\n    this.log('opened');\r\n\r\n    this.debug && this.log.debug('sending init packet');\r\n    this.dispatchEvent('open');\r\n  };\r\n\r\n  private handleError = (e: Event) => {\r\n    this.log.error('handleError', e);\r\n    this.close();\r\n  };\r\n\r\n  private handleClose = (e?: CloseEvent) => {\r\n    this.log('closed', e/* , this.pending, this.ws.bufferedAmount */);\r\n\r\n    this.removeListeners();\r\n    this.dispatchEvent('close');\r\n  };\r\n\r\n  private handleMessage = (event: MessageEvent) => {\r\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\r\n\r\n    this.dispatchEvent('message', event.data as ArrayBuffer);\r\n  };\r\n\r\n  public send = (body: Uint8Array) => {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    this.ws.send(body);\r\n  };\r\n}\r\n","export default function randomize<T extends ArrayBufferView>(arr: T) {\r\n  if(crypto && 'getRandomValues' in crypto) {\r\n    crypto.getRandomValues(arr);\r\n  } else {\r\n    throw new Error('NO_SECURE_RANDOM');\r\n  }\r\n\r\n  return arr;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import aesjs from 'aes-js';\r\nimport randomize from '../../../helpers/array/randomize';\r\nimport cryptoMessagePort from '../../crypto/cryptoMessagePort';\r\nimport {Codec} from './codec';\r\n\r\n/*\r\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\r\n*/\r\nexport default class Obfuscation {\r\n  /* private enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\r\n  private dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\r\n\r\n  private id: number;\r\n  private idPromise: Promise<Obfuscation['id']>;\r\n  private process: (data: Uint8Array, operation: 'encrypt' | 'decrypt') => ReturnType<Obfuscation['_process']>;\r\n\r\n  // private cryptoEncKey: CryptoKey;\r\n  // private cryptoDecKey: CryptoKey;\r\n  // private cryptoKey: CryptoKey;\r\n\r\n  // private encIv: Uint8Array;\r\n  // private decIv: Uint8Array;\r\n\r\n  // private decIvCounter: Counter;\r\n\r\n  public async init(codec: Codec) {\r\n    if(this.idPromise !== undefined) {\r\n      this.release();\r\n    }\r\n\r\n    const initPayload = new Uint8Array(64);\r\n    randomize(initPayload);\r\n\r\n    while(true) {\r\n      const val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | initPayload[0];\r\n      const val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | initPayload[4];\r\n      if(initPayload[0] !== 0xef &&\r\n          val !== 0x44414548 &&\r\n          val !== 0x54534f50 &&\r\n          val !== 0x20544547 &&\r\n          val !== 0x4954504f &&\r\n          val !== 0xeeeeeeee &&\r\n          val !== 0xdddddddd &&\r\n          val2 !== 0x00000000) {\r\n        // initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\r\n        break;\r\n      }\r\n      randomize(initPayload);\r\n    }\r\n\r\n    // //////////////////////initPayload.subarray(60, 62).hex = dcId;\r\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\r\n    console.log('initPayload', initPayload); */\r\n\r\n    const reversedPayload = initPayload.slice().reverse();\r\n\r\n    const encKey = initPayload.slice(8, 40);\r\n    const encIv = /* this.encIv =  */initPayload.slice(40, 56);\r\n    const decKey = reversedPayload.slice(8, 40);\r\n    const decIv = /* this.decIv =  */reversedPayload.slice(40, 56);\r\n\r\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\r\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\r\n\r\n    // console.log('encKey', encKey.hex, encIv.hex);\r\n    // console.log('decKey', decKey.hex, decIv.hex);\r\n\r\n    const idPromise = this.idPromise = cryptoMessagePort.invokeCrypto('aes-ctr-prepare', {\r\n      encKey,\r\n      encIv,\r\n      decKey,\r\n      decIv\r\n    });\r\n\r\n    this.process = async(data, operation) => {\r\n      await idPromise;\r\n      return this._process(data, operation);\r\n    };\r\n\r\n    this.id = await idPromise;\r\n\r\n    this.process = this._process;\r\n\r\n    // this.decIvCounter = new Counter(this.decIv);\r\n    /* const key = this.cryptoEncKey = await subtle.importKey(\r\n      'raw',\r\n      encKey,\r\n      {name: 'AES-CTR'},\r\n      false,\r\n      ['encrypt']\r\n    ); */\r\n\r\n    // this.cryptoDecKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   decKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt']\r\n    // );\r\n\r\n    // this.cryptoKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   encKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt', 'decrypt']\r\n    // );\r\n\r\n    initPayload.set(codec.obfuscateTag, 56);\r\n    const encrypted = await this.encode(initPayload.slice());\r\n\r\n    // console.log('encrypted', encrypted);\r\n\r\n    initPayload.set(encrypted.slice(56, 64), 56);\r\n\r\n    return initPayload;\r\n  }\r\n\r\n  /* public encode(payload: Uint8Array) {\r\n    let startTime = performance.now();\r\n    let res = this.enc.encrypt(payload);\r\n    let time = performance.now() - startTime;\r\n\r\n    try {\r\n      startTime = performance.now();\r\n      let arr = this.encNew.encrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      let time2 = performance.now() - startTime;\r\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    let res = this.dec.encrypt(payload);\r\n\r\n    try {\r\n      let arr = this.decNew.decrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n\r\n    return res;\r\n  } */\r\n\r\n  private _process = (data: Uint8Array, operation: 'encrypt' | 'decrypt') => {\r\n    return cryptoMessagePort.invokeCryptoNew({\r\n      method: 'aes-ctr-process',\r\n      args: [{id: this.id, data, operation}],\r\n      transfer: [data.buffer]\r\n    }) as Promise<Uint8Array>;\r\n  };\r\n\r\n  public encode(payload: Uint8Array) {\r\n    /* return subtle.encrypt({\r\n        name: 'AES-CTR',\r\n        counter: this.encIv,\r\n        length: 64\r\n      },\r\n      this.cryptoEncKey,\r\n      payload\r\n    ); */\r\n    return this.process(payload, 'encrypt');\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    return this.process(payload, 'decrypt');\r\n  }\r\n\r\n  public async release() {\r\n    const idPromise = this.idPromise;\r\n    if(idPromise === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.id = undefined;\r\n    this.idPromise = undefined;\r\n\r\n    const id = await idPromise;\r\n    cryptoMessagePort.invokeCrypto('aes-ctr-destroy', id);\r\n  }\r\n\r\n  public destroy() {\r\n    this.release();\r\n  }\r\n\r\n  // public encode(payload: Uint8Array) {\r\n  //   let res = this.encNew.encrypt(payload);\r\n  //   let bytes = new Uint8Array(bytesFromWordss(res));\r\n\r\n  //   return bytes;\r\n  // }\r\n\r\n  // public async decode(payload: Uint8Array) {\r\n  //   const counter = this.decIvCounter.counter.slice();\r\n  //   this.decIvCounter.increment();\r\n\r\n  //   const n: ArrayBuffer = await subtle.encrypt({\r\n  //       name: 'AES-CTR',\r\n  //       counter: counter,\r\n  //       length: 64\r\n  //     },\r\n  //     this.cryptoDecKey,\r\n  //     payload\r\n  //   );\r\n\r\n  //   const decoded = this.decNew.update(payload);\r\n\r\n  //   console.log('decode', bytesToHex(decoded), 'new', n, bytesToHex(new Uint8Array(n)));\r\n\r\n  //   return decoded;\r\n  // }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { bytesFromHex, addPadding } from \"../../bin_utils\";\r\nimport {Codec} from './codec';\r\n\r\nclass AbridgedPacketCodec implements Codec {\r\n  public tag = 0xef;\r\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\r\n\r\n  public encodePacket(data: Uint8Array) {\r\n    const len = data.byteLength >> 2;\r\n    let header: Uint8Array;\r\n    if(len < 127) {\r\n      header = new Uint8Array([len]);\r\n    } else { // Length: payload length, divided by four, and encoded as 3 length bytes (little endian)\r\n      // header = new Uint8Array([0x7f, ...addPadding(bytesFromHex(len.toString(16)).reverse(), 3, true)/* .reverse() */]);\r\n      header = new Uint8Array([0x7f, len & 0xFF, (len >> 8) & 0xFF, (len >> 16) & 0xFF]);\r\n      // console.log('got nobody cause im braindead', header, len);\r\n    }\r\n\r\n    return header.concat(data);\r\n    // return new Uint8Array([...header, ...data]);\r\n  }\r\n\r\n  public readPacket(data: Uint8Array) {\r\n    let length = data[0];\r\n    if(length >= 127) { // 0x7f\r\n      length = data[1] | (data[2] << 8) | (data[3] << 16);\r\n\r\n      return data.slice(4, length << 2 + 1); // need +1\r\n    }\r\n\r\n    return data.slice(1, length << 2 + 1); // need +1\r\n  }\r\n}\r\n\r\nexport default new AbridgedPacketCodec();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport enum ConnectionStatus {\r\n  Connected,\r\n  Connecting,\r\n  Closed,\r\n  TimedOut\r\n};\r\n\r\nexport type ConnectionStatusChange = {\r\n  _: 'networkerStatus',\r\n  status: ConnectionStatus,\r\n  dcId: number,\r\n  name: string,\r\n  isFileNetworker: boolean,\r\n  isFileDownload: boolean,\r\n  isFileUpload: boolean,\r\n  retryAt?: number\r\n};\r\n","export default function bytesToHex(bytes: ArrayLike<number>) {\r\n  const length = bytes.length;\r\n  const arr: string[] = new Array(length);\r\n  for(let i = 0; i < length; ++i) {\r\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\r\n  }\r\n  return arr.join('');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../../../config/modes';\r\nimport {logger, LogTypes} from '../../logger';\r\nimport MTPNetworker from '../networker';\r\nimport Obfuscation from './obfuscation';\r\nimport MTTransport, {MTConnection, MTConnectionConstructable} from './transport';\r\n// import intermediatePacketCodec from './intermediate';\r\nimport abridgedPacketCodec from './abridged';\r\n// import paddedIntermediatePacketCodec from './padded';\r\nimport {ConnectionStatus} from '../connectionStatus';\r\nimport transportController from './controller';\r\nimport bytesToHex from '../../../helpers/bytes/bytesToHex';\r\n// import networkStats from '../networkStats';\r\nimport ctx from '../../../environment/ctx';\r\n\r\nexport default class TcpObfuscated implements MTTransport {\r\n  private codec = abridgedPacketCodec;\r\n  private obfuscation = new Obfuscation();\r\n  public networker: MTPNetworker;\r\n\r\n  private pending: Array<Partial<{\r\n    resolve: any,\r\n    reject: any,\r\n    body: Uint8Array,\r\n    encoded?: Uint8Array,\r\n    bodySent: boolean\r\n  }>> = [];\r\n\r\n  private debug = Modes.debug && false/* true */;\r\n  private log: ReturnType<typeof logger>;\r\n  public connected = false;\r\n  private lastCloseTime: number;\r\n  public connection: MTConnection;\r\n\r\n  private autoReconnect = true;\r\n  private reconnectTimeout: number;\r\n  private releasingPending: boolean;\r\n\r\n  // private debugPayloads: MTPNetworker['debugRequests'] = [];\r\n\r\n  constructor(\r\n    private Connection: MTConnectionConstructable,\r\n    private dcId: number,\r\n    private url: string,\r\n    private logSuffix: string,\r\n    private retryTimeout: number\r\n  ) {\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n\r\n    this.connect();\r\n  }\r\n\r\n  private onOpen = async() => {\r\n    this.connected = true;\r\n\r\n    if(import.meta.env.VITE_MTPROTO_AUTO) {\r\n      transportController.setTransportOpened('websocket');\r\n    }\r\n\r\n    const initPayload = await this.obfuscation.init(this.codec);\r\n    if(!this.connected) {\r\n      return;\r\n    }\r\n\r\n    this.connection.send(initPayload);\r\n\r\n    if(this.networker) {\r\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\r\n      this.networker.setConnectionStatus(ConnectionStatus.Connected);\r\n      this.networker.cleanupSent();\r\n      this.networker.resend();\r\n    }/*  else {\r\n      for(const pending of this.pending) {\r\n        if(pending.encoded && pending.body) {\r\n          pending.encoded = this.encodeBody(pending.body);\r\n        }\r\n      }\r\n    } */\r\n\r\n    setTimeout(() => {\r\n      this.releasePending();\r\n    }, 0);\r\n  };\r\n\r\n  private onMessage = async(buffer: ArrayBuffer) => {\r\n    // networkStats.addReceived(this.dcId, buffer.byteLength);\r\n\r\n    let data = await this.obfuscation.decode(new Uint8Array(buffer));\r\n    data = this.codec.readPacket(data);\r\n\r\n    if(this.networker) { // authenticated!\r\n      // this.pending = this.pending.filter((p) => p.body); // clear pending\r\n\r\n      this.debug && this.log.debug('redirecting to networker', data.length);\r\n      this.networker.parseResponse(data).then((response) => {\r\n        this.debug && this.log.debug('redirecting to networker response:', response);\r\n\r\n        try {\r\n          this.networker.processMessage(response.response, response.messageId, response.sessionId);\r\n        } catch(err) {\r\n          this.log.error('handleMessage networker processMessage error', err);\r\n        }\r\n\r\n        // this.releasePending();\r\n      }).catch((err) => {\r\n        this.log.error('handleMessage networker parseResponse error', err);\r\n      });\r\n\r\n      // this.dd();\r\n      return;\r\n    }\r\n\r\n    // console.log('got hex:', data.hex);\r\n    const pending = this.pending.shift();\r\n    if(!pending) {\r\n      this.debug && this.log.debug('no pending for res:', bytesToHex(data));\r\n      return;\r\n    }\r\n\r\n    pending.resolve(data);\r\n  };\r\n\r\n  private onClose = () => {\r\n    this.clear();\r\n\r\n    let needTimeout: number, retryAt: number;\r\n    if(this.autoReconnect) {\r\n      const time = Date.now();\r\n      const diff = time - this.lastCloseTime;\r\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\r\n      retryAt = time + needTimeout;\r\n    }\r\n\r\n    if(this.networker) {\r\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\r\n      this.pending.length = 0;\r\n    }\r\n\r\n    if(this.autoReconnect) {\r\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\r\n      this.reconnectTimeout = ctx.setTimeout(this.reconnect, needTimeout);\r\n    } else {\r\n      this.log('reconnect isn\\'t needed');\r\n    }\r\n  };\r\n\r\n  public clear() {\r\n    if(import.meta.env.VITE_MTPROTO_AUTO) {\r\n      if(this.connected) {\r\n        transportController.setTransportClosed('websocket');\r\n      }\r\n    }\r\n\r\n    this.connected = false;\r\n\r\n    if(this.connection) {\r\n      this.connection.removeEventListener('open', this.onOpen);\r\n      this.connection.removeEventListener('close', this.onClose);\r\n      this.connection.removeEventListener('message', this.onMessage);\r\n      this.connection = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * invoke only when closed\r\n   */\r\n  public reconnect = () => {\r\n    if(this.reconnectTimeout !== undefined) {\r\n      clearTimeout(this.reconnectTimeout);\r\n      this.reconnectTimeout = undefined;\r\n    }\r\n\r\n    if(this.connection) {\r\n      return;\r\n    }\r\n\r\n    this.log('trying to reconnect...');\r\n    this.lastCloseTime = Date.now();\r\n\r\n    if(!this.networker) {\r\n      for(const pending of this.pending) {\r\n        if(pending.bodySent) {\r\n          pending.bodySent = false;\r\n        }\r\n      }\r\n    } else {\r\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\r\n    }\r\n\r\n    this.connect();\r\n  }\r\n\r\n  public forceReconnect() {\r\n    this.close();\r\n    this.reconnect();\r\n  }\r\n\r\n  public destroy() {\r\n    this.setAutoReconnect(false);\r\n    this.close();\r\n\r\n    if(this.obfuscation) {\r\n      this.obfuscation.destroy();\r\n    }\r\n\r\n    this.pending.forEach((pending) => {\r\n      if(pending.reject) {\r\n        pending.reject();\r\n      }\r\n    });\r\n    this.pending.length = 0;\r\n  }\r\n\r\n  public close() {\r\n    const connection = this.connection;\r\n    if(connection) {\r\n      const connected = this.connected;\r\n      this.clear();\r\n      if(connected) { // wait for buffered messages if they are there\r\n        connection.addEventListener('message', this.onMessage);\r\n        connection.addEventListener('close', () => {\r\n          connection.removeEventListener('message', this.onMessage);\r\n        }, {once: true});\r\n        connection.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Will connect if enable and disconnected \\\r\n   * Will reset reconnection timeout if disable\r\n   */\r\n  public setAutoReconnect(enable: boolean) {\r\n    this.autoReconnect = enable;\r\n\r\n    if(!enable) {\r\n      if(this.reconnectTimeout !== undefined) {\r\n        clearTimeout(this.reconnectTimeout);\r\n        this.reconnectTimeout = undefined;\r\n      }\r\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\r\n      this.reconnect();\r\n    }\r\n  }\r\n\r\n  private connect() {\r\n    if(this.connection) {\r\n      this.close();\r\n    }\r\n\r\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\r\n    this.connection.addEventListener('open', this.onOpen);\r\n    this.connection.addEventListener('close', this.onClose);\r\n    this.connection.addEventListener('message', this.onMessage);\r\n  }\r\n\r\n  public changeUrl(url: string) {\r\n    if(this.url === url) {\r\n      return;\r\n    }\r\n\r\n    this.url = url;\r\n    this.forceReconnect();\r\n  }\r\n\r\n  private encodeBody(body: Uint8Array) {\r\n    const toEncode = this.codec.encodePacket(body);\r\n\r\n    // this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\r\n    const encoded = this.obfuscation.encode(toEncode);\r\n    // this.log('send after obf:', enc.hex);\r\n\r\n    return encoded;\r\n  }\r\n\r\n  public send(body: Uint8Array) {\r\n    this.debug && this.log.debug('-> body length to pending:', body.length);\r\n\r\n    const encoded: typeof body = /* this.connected ? this.encodeBody(body) :  */undefined;\r\n\r\n    // return;\r\n\r\n    if(this.networker) {\r\n      this.pending.push({body, encoded});\r\n      this.releasePending();\r\n    } else {\r\n      const promise = new Promise<typeof body>((resolve, reject) => {\r\n        this.pending.push({resolve, reject, body, encoded});\r\n      });\r\n\r\n      this.releasePending();\r\n\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  private async releasePending(/* tt = false */) {\r\n    if(!this.connected || this.releasingPending) {\r\n      // this.connect();\r\n      return;\r\n    }\r\n\r\n    this.releasingPending = true;\r\n\r\n    /* if(!tt) {\r\n      this.releasePendingDebounced();\r\n      return;\r\n    } */\r\n\r\n    // this.log('-> messages to send:', this.pending.length);\r\n    let length = this.pending.length;\r\n    let sent = false;\r\n    // for(let i = length - 1; i >= 0; --i) {\r\n    for(let i = 0; i < length; ++i) {\r\n      const pending = this.pending[i];\r\n      if(!pending) {\r\n        break;\r\n      }\r\n\r\n      const {body, bodySent} = pending;\r\n      if(body && !bodySent) {\r\n        // this.debugPayloads.push({before: body.slice(), after: enc});\r\n\r\n        this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n        // if(!encoded) {\r\n        //   encoded = pending.encoded = this.encodeBody(body);\r\n        // }\r\n\r\n        const encoded = pending.encoded ??= await this.encodeBody(body);\r\n        if(!this.connected) {\r\n          break;\r\n        }\r\n\r\n        // networkStats.addSent(this.dcId, encoded.byteLength);\r\n        this.connection.send(encoded);\r\n\r\n        if(!pending.resolve) { // remove if no response needed\r\n          this.pending.splice(i--, 1);\r\n          length--;\r\n        } else {\r\n          pending.bodySent = true;\r\n        }\r\n\r\n        sent = true;\r\n        // delete pending.body;\r\n      }\r\n    }\r\n\r\n    this.releasingPending = undefined;\r\n\r\n    if(this.pending.length && sent) {\r\n      this.releasePending();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport MTTransport, {MTConnectionConstructable} from './transports/transport';\r\nimport Modes from '../../config/modes';\r\nimport App from '../../config/app';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport HTTP from './transports/http';\r\nimport Socket from './transports/websocket';\r\nimport TcpObfuscated from './transports/tcpObfuscated';\r\nimport {IS_WEB_WORKER} from '../../helpers/context';\r\nimport {DcId} from '../../types';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport SocketProxied from './transports/socketProxied';\r\n\r\nexport type TransportType = 'websocket' | 'https' | 'http';\r\nexport type ConnectionType = 'client' | 'download' | 'upload';\r\ntype Servers = {\r\n  [transportType in TransportType]: {\r\n    [connectionType in ConnectionType]: {\r\n      [dcId: DcId]: MTTransport[]\r\n    }\r\n  }\r\n};\r\n\r\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\r\nconst PREMIUM_SUFFIX = '_premium';\r\nconst RETRY_TIMEOUT_CLIENT = 3000;\r\nconst RETRY_TIMEOUT_DOWNLOAD = 3000;\r\n\r\nexport function getTelegramConnectionSuffix(connectionType: ConnectionType) {\r\n  return connectionType === 'client' ? '' : '-1';\r\n}\r\n\r\nexport function constructTelegramWebSocketUrl(dcId: DcId, connectionType: ConnectionType, premium?: boolean) {\r\n  if(!import.meta.env.VITE_MTPROTO_HAS_WS) {\r\n    return;\r\n  }\r\n\r\n  const suffix = getTelegramConnectionSuffix(connectionType);\r\n  const path = connectionType !== 'client' ? 'apiws' + TEST_SUFFIX + (premium ? PREMIUM_SUFFIX : '') : ('apiws' + TEST_SUFFIX);\r\n  const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\r\n\r\n  return chosenServer;\r\n}\r\n\r\nexport class DcConfigurator {\r\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\r\n\r\n  private dcOptions = Modes.test ?\r\n    [\r\n      {id: 1, host: '149.154.175.10',  port: 80},\r\n      {id: 2, host: '149.154.167.40',  port: 80},\r\n      {id: 3, host: '149.154.175.117', port: 80}\r\n    ] :\r\n    [\r\n      {id: 1, host: '149.154.175.50',  port: 80},\r\n      {id: 2, host: '149.154.167.50',  port: 80},\r\n      {id: 3, host: '149.154.175.100', port: 80},\r\n      {id: 4, host: '149.154.167.91',  port: 80},\r\n      {id: 5, host: '149.154.171.5',   port: 80}\r\n    ];\r\n\r\n  public chosenServers: Servers = {} as any;\r\n\r\n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_WS) {\r\n      return;\r\n    }\r\n\r\n    const chosenServer = constructTelegramWebSocketUrl(dcId, connectionType, premium);\r\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\r\n\r\n    const retryTimeout = connectionType === 'client' ? RETRY_TIMEOUT_CLIENT : RETRY_TIMEOUT_DOWNLOAD;\r\n\r\n    let oooohLetMeLive: MTConnectionConstructable;\r\n    if(import.meta.env.VITE_MTPROTO_SW || !import.meta.env.VITE_SAFARI_PROXY_WEBSOCKET) {\r\n      oooohLetMeLive = Socket;\r\n    } else {\r\n      oooohLetMeLive = (getEnvironment().IS_SAFARI && IS_WEB_WORKER && typeof(SocketProxied) !== 'undefined') /* || true */ ? SocketProxied : Socket;\r\n    }\r\n\r\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\r\n  };\r\n\r\n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    let chosenServer: string;\r\n    if(Modes.ssl || !Modes.http) {\r\n      const suffix = getTelegramConnectionSuffix(connectionType);\r\n      const subdomain = this.sslSubdomains[dcId - 1] + suffix;\r\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\r\n      chosenServer = 'https://' + subdomain + '.web.telegram.org/' + path;\r\n    } else {\r\n      for(const dcOption of this.dcOptions) {\r\n        if(dcOption.id === dcId) {\r\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\r\n    return new HTTP(dcId, chosenServer, logSuffix);\r\n  };\r\n\r\n  public chooseServer(\r\n    dcId: DcId,\r\n    connectionType: ConnectionType = 'client',\r\n    transportType: TransportType = Modes.transport,\r\n    reuse = true,\r\n    premium?: boolean\r\n  ) {\r\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\r\n      connectionType = 'client';\r\n    } */\r\n\r\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\r\n      this.chosenServers[transportType] = {\r\n        client: {},\r\n        download: {},\r\n        upload: {}\r\n      };\r\n    }\r\n\r\n    const servers = this.chosenServers[transportType][connectionType];\r\n\r\n    if(!(dcId in servers)) {\r\n      servers[dcId] = [];\r\n    }\r\n\r\n    const transports = servers[dcId];\r\n\r\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\r\n      let transport: MTTransport;\r\n\r\n      if(import.meta.env.VITE_MTPROTO_HAS_WS && import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n        transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, premium);\r\n      } else if(!import.meta.env.VITE_MTPROTO_HTTP) {\r\n        transport = this.transportSocket(dcId, connectionType, premium);\r\n      } else {\r\n        transport = this.transportHTTP(dcId, connectionType, premium);\r\n      }\r\n\r\n      if(!transport) {\r\n        console.error('No chosenServer!', dcId);\r\n        return null;\r\n      }\r\n\r\n      if(reuse) {\r\n        transports.push(transport);\r\n      }\r\n\r\n      return transport;\r\n    }\r\n\r\n    return transports[0];\r\n  }\r\n\r\n  public static removeTransport<T>(obj: any, transport: T) {\r\n    for(const transportType in obj) {\r\n      // @ts-ignore\r\n      for(const connectionType in obj[transportType]) {\r\n        // @ts-ignore\r\n        for(const dcId in obj[transportType][connectionType]) {\r\n          // @ts-ignore\r\n          const transports: T[] = obj[transportType][connectionType][dcId];\r\n          indexOfAndSplice(transports, transport);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport App from '../../../config/app';\r\nimport deferredPromise from '../../../helpers/cancellablePromise';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport pause from '../../../helpers/schedulers/pause';\r\nimport {TransportType, DcConfigurator} from '../dcConfigurator';\r\nimport type HTTP from './http';\r\nimport type TcpObfuscated from './tcpObfuscated';\r\nimport MTTransport from './transport';\r\n\r\nexport class MTTransportController extends EventListenerBase<{\r\n  change: (opened: MTTransportController['opened']) => void,\r\n  transport: (type: TransportType) => void\r\n}> {\r\n  private opened: Map<TransportType, number>;\r\n  private transports: {[k in TransportType]?: MTTransport};\r\n  private pinging: boolean;\r\n  private dcConfigurator: DcConfigurator;\r\n\r\n  constructor() {\r\n    super(true);\r\n\r\n    this.opened = new Map();\r\n    /* this.addEventListener('change', (opened) => {\r\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\r\n    }); */\r\n\r\n    this.addEventListener('change', (opened) => {\r\n      if(!opened.get('websocket')) {\r\n        this.waitForWebSocket();\r\n      }\r\n    });\r\n\r\n    // setTimeout(() => {\r\n    // this.waitForWebSocket();\r\n    // }, 200); // wait for first transport so won't have delay for first WS\r\n  }\r\n\r\n  public async pingTransports() {\r\n    const dcConfigurator = this.dcConfigurator ??= new DcConfigurator();\r\n    const timeout = 2000;\r\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\r\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\r\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\r\n    };\r\n\r\n    const httpPromise = deferredPromise<boolean>();\r\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\r\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\r\n    setTimeout(() => httpPromise.resolve(false), timeout);\r\n\r\n    const websocketPromise = deferredPromise<boolean>();\r\n    const socket = transports.websocket as TcpObfuscated;\r\n    socket.setAutoReconnect(false);\r\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\r\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\r\n    setTimeout(() => {\r\n      if(websocketPromise.isFulfilled || websocketPromise.isRejected) {\r\n        return;\r\n      }\r\n\r\n      if(socket.connection) {\r\n        socket.connection.close();\r\n      }\r\n\r\n      websocketPromise.resolve(false);\r\n    }, timeout);\r\n\r\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\r\n\r\n    for(const transportType in transports) {\r\n      const transport = transports[transportType as TransportType];\r\n      transport.destroy();\r\n    }\r\n\r\n    const result = {\r\n      https: isHttpAvailable || this.opened.get('https') > 0,\r\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\r\n    };\r\n\r\n    // result.websocket = false;\r\n    return result;\r\n  }\r\n\r\n  public async waitForWebSocket() {\r\n    if(this.pinging) return;\r\n    this.pinging = true;\r\n\r\n    while(true) {\r\n      const {https, websocket} = await this.pingTransports();\r\n      if(https || websocket) {\r\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\r\n      }\r\n\r\n      if(websocket) {\r\n        break;\r\n      }\r\n\r\n      await pause(10000);\r\n    }\r\n\r\n    this.pinging = false;\r\n  }\r\n\r\n  public setTransportValue(type: TransportType, value: boolean) {\r\n    let length = this.opened.get(type) || 0;\r\n    length += value ? 1 : -1;\r\n\r\n    this.opened.set(type, length);\r\n    this.dispatchEvent('change', this.opened);\r\n  }\r\n\r\n  public setTransportOpened(type: TransportType) {\r\n    return this.setTransportValue(type, true);\r\n  }\r\n\r\n  public setTransportClosed(type: TransportType) {\r\n    return this.setTransportValue(type, false);\r\n  }\r\n}\r\n\r\nconst transportController = new MTTransportController();\r\nexport default transportController;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport deferredPromise, {CancellablePromise} from '../../../../helpers/cancellablePromise';\r\nimport type {StoragesResults} from './loadStorages';\r\n\r\nconst RESET_STORAGES_PROMISE: CancellablePromise<{\r\n  storages: Set<keyof StoragesResults>,\r\n  callback: () => void\r\n}> = deferredPromise();\r\nexport default RESET_STORAGES_PROMISE;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {WebPushApiManager} from '../mtproto/webPushApiManager';\r\nimport type {PushNotificationObject} from './push';\r\nimport type {MyUploadFile} from '../mtproto/apiFileManager';\r\nimport SuperMessagePort from '../mtproto/superMessagePort';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\n\r\nexport type ServicePushPingTaskPayload = {\r\n  localNotifications: boolean,\r\n  lang: {\r\n    push_action_mute1d: string\r\n    push_action_settings: string\r\n    push_message_nopreview: string\r\n  },\r\n  settings: WebPushApiManager['settings']\r\n};\r\n\r\nexport type ServiceRequestFilePartTaskPayload = {\r\n  docId: DocId,\r\n  dcId: number,\r\n  offset: number,\r\n  limit: number\r\n};\r\n\r\nexport type ServiceDownloadTaskPayload = {\r\n  headers: any,\r\n  id: string\r\n};\r\n\r\nexport type ServiceEvent = {\r\n  port: (payload: void, source: MessageEventSource, event: MessageEvent) => void\r\n};\r\n\r\nexport default class ServiceMessagePort<Master extends boolean = false> extends SuperMessagePort<{\r\n  // from main thread to service worker\r\n  notificationsClear: () => void,\r\n  toggleStorages: (payload: {enabled: boolean, clearWrite: boolean}) => void,\r\n  pushPing: (payload: ServicePushPingTaskPayload, source: MessageEventSource, event: MessageEvent) => void,\r\n  hello: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\r\n  shownNotification: (payload: string) => void,\r\n\r\n  // from mtproto worker\r\n  download: (payload: ServiceDownloadTaskPayload) => void,\r\n  downloadChunk: (payload: {id: ServiceDownloadTaskPayload['id'], chunk: Uint8Array}) => void\r\n  downloadFinalize: (payload: ServiceDownloadTaskPayload['id']) => void,\r\n  downloadCancel: (payload: ServiceDownloadTaskPayload['id']) => void\r\n}, {\r\n  // to main thread\r\n  pushClick: (payload: PushNotificationObject) => void,\r\n  hello: (payload: void, source: MessageEventSource) => void,\r\n  share: (payload: ShareData) => void,\r\n\r\n  // to mtproto worker\r\n  requestFilePart: (payload: ServiceRequestFilePartTaskPayload) => Promise<MyUploadFile> | MyUploadFile\r\n} & ServiceEvent, Master> {\r\n  constructor() {\r\n    super('SERVICE');\r\n\r\n    MOUNT_CLASS_TO && (MOUNT_CLASS_TO.serviceMessagePort = this);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Awaited} from '../types';\r\n\r\nexport default function callbackify<T extends Awaited<any>, R>(\r\n  smth: T,\r\n  callback: (result: Awaited<T>) => R\r\n): T extends Promise<any> ? Promise<Awaited<R>> : R {\r\n  if(smth instanceof Promise) {\r\n    // @ts-ignore\r\n    return smth.then(callback);\r\n  } else {\r\n    return callback(smth as any) as any;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {CryptoMessagePort} from '../crypto/cryptoMessagePort';\r\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\r\nimport type {ApiManager} from '../mtproto/apiManager';\r\nimport type {Authorizer} from '../mtproto/authorizer';\r\nimport type {DcConfigurator} from '../mtproto/dcConfigurator';\r\nimport type {NetworkerFactory} from '../mtproto/networkerFactory';\r\nimport type {PasswordManager} from '../mtproto/passwordManager';\r\nimport type {ReferenceDatabase} from '../mtproto/referenceDatabase';\r\nimport type {TimeManager} from '../mtproto/timeManager';\r\nimport type {RootScope} from '../rootScope';\r\nimport type DialogsStorage from '../storages/dialogs';\r\nimport type FiltersStorage from '../storages/filters';\r\nimport type PeersStorage from '../storages/peers';\r\nimport type ThumbsStorage from '../storages/thumbs';\r\nimport type {ApiUpdatesManager} from './apiUpdatesManager';\r\nimport type {AppAvatarsManager} from './appAvatarsManager';\r\nimport type {AppCallsManager} from './appCallsManager';\r\nimport type {AppChatsManager} from './appChatsManager';\r\nimport type {AppDocsManager} from './appDocsManager';\r\nimport type {AppDraftsManager} from './appDraftsManager';\r\nimport type {AppEmojiManager} from './appEmojiManager';\r\nimport type {AppGroupCallsManager} from './appGroupCallsManager';\r\nimport type {AppInlineBotsManager} from './appInlineBotsManager';\r\nimport type {AppMessagesIdsManager} from './appMessagesIdsManager';\r\nimport type {AppMessagesManager} from './appMessagesManager';\r\nimport type {AppNotificationsManager} from './appNotificationsManager';\r\nimport type AppPaymentsManager from './appPaymentsManager';\r\nimport type {AppPeersManager} from './appPeersManager';\r\nimport type {AppPhotosManager} from './appPhotosManager';\r\nimport type {AppPollsManager} from './appPollsManager';\r\nimport type {AppPrivacyManager} from './appPrivacyManager';\r\nimport type {AppProfileManager} from './appProfileManager';\r\nimport type {AppReactionsManager} from './appReactionsManager';\r\nimport type {AppStateManager} from './appStateManager';\r\nimport type {AppStickersManager} from './appStickersManager';\r\nimport type {AppStoragesManager} from './appStoragesManager';\r\nimport type {AppUsersManager} from './appUsersManager';\r\nimport type AppWebDocsManager from './appWebDocsManager';\r\nimport type {AppWebPagesManager} from './appWebPagesManager';\r\nimport type AppAttachMenuBotsManager from './appAttachMenuBotsManager';\r\nimport type AppSeamlessLoginManager from './appSeamlessLoginManager';\r\nimport type AppThemesManager from './appThemesManager';\r\nimport type AppUsernamesManager from './appThemesManager';\r\nimport type AppChatInvitesManager from './appChatInvitesManager';\r\nimport type AppStoriesManager from './appStoriesManager';\r\nimport type AppBotsManager from './appBotsManager';\r\nimport type AppBoostsManager from './appBoostsManager';\r\nimport type AppStatisticsManager from './appStatisticsManager';\r\nimport type {AppManagers} from './managers';\r\n\r\nexport class AppManager {\r\n  protected appPeersManager: AppPeersManager;\r\n  protected appChatsManager: AppChatsManager;\r\n  protected appDocsManager: AppDocsManager;\r\n  protected appPhotosManager: AppPhotosManager;\r\n  protected appPollsManager: AppPollsManager;\r\n  protected appUsersManager: AppUsersManager;\r\n  protected appWebPagesManager: AppWebPagesManager;\r\n  protected appDraftsManager: AppDraftsManager;\r\n  protected appProfileManager: AppProfileManager;\r\n  protected appNotificationsManager: AppNotificationsManager;\r\n  protected apiUpdatesManager: ApiUpdatesManager;\r\n  protected appAvatarsManager: AppAvatarsManager;\r\n  protected appGroupCallsManager: AppGroupCallsManager;\r\n  protected appCallsManager: AppCallsManager;\r\n  protected appReactionsManager: AppReactionsManager;\r\n  protected appMessagesManager: AppMessagesManager;\r\n  protected appMessagesIdsManager: AppMessagesIdsManager;\r\n  protected appPrivacyManager: AppPrivacyManager;\r\n  protected appInlineBotsManager: AppInlineBotsManager;\r\n  protected appStickersManager: AppStickersManager;\r\n  protected referenceDatabase: ReferenceDatabase;\r\n  protected appEmojiManager: AppEmojiManager;\r\n  protected dialogsStorage: DialogsStorage;\r\n  protected filtersStorage: FiltersStorage;\r\n  protected apiManager: ApiManager;\r\n  // protected apiManager: ApiManagerProxy;\r\n  protected passwordManager: PasswordManager;\r\n  protected cryptoWorker: CryptoMessagePort;\r\n  protected apiFileManager: ApiFileManager;\r\n  protected peersStorage: PeersStorage;\r\n  protected thumbsStorage: ThumbsStorage;\r\n  protected networkerFactory: NetworkerFactory;\r\n  protected rootScope: RootScope;\r\n  protected authorizer: Authorizer;\r\n  protected dcConfigurator: DcConfigurator;\r\n  protected timeManager: TimeManager;\r\n  protected appStoragesManager: AppStoragesManager;\r\n  protected appStateManager: AppStateManager;\r\n  protected appWebDocsManager: AppWebDocsManager;\r\n  protected appPaymentsManager: AppPaymentsManager;\r\n  protected appAttachMenuBotsManager: AppAttachMenuBotsManager;\r\n  protected appSeamlessLoginManager: AppSeamlessLoginManager;\r\n  protected appThemesManager: AppThemesManager;\r\n  protected appUsernamesManager: AppUsernamesManager;\r\n  protected appChatInvitesManager: AppChatInvitesManager;\r\n  protected appStoriesManager: AppStoriesManager;\r\n  protected appBotsManager: AppBotsManager;\r\n  protected appBoostsManager: AppBoostsManager;\r\n  protected appStatisticsManager: AppStatisticsManager;\r\n\r\n  public clear: (init?: boolean) => void;\r\n\r\n  public setManagers(managers: AppManagers) {\r\n    Object.assign(this, managers);\r\n    // this.after();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat} from '../../../../layer';\r\nimport type {Dialog} from '../../appMessagesManager';\r\nimport type {User} from '../../appUsersManager';\r\nimport DATABASE_STATE from '../../../../config/databases/state';\r\nimport AppStorage from '../../../storage';\r\n\r\nexport type StoragesStorages = {\r\n  users: AppStorage<Record<UserId, User>, typeof DATABASE_STATE>,\r\n  chats: AppStorage<Record<ChatId, Chat>, typeof DATABASE_STATE>,\r\n  dialogs: AppStorage<Record<PeerId, Dialog>, typeof DATABASE_STATE>\r\n};\r\n\r\nexport default function createStorages() {\r\n  const names: (keyof StoragesStorages)[] = ['users', 'chats', 'dialogs'];\r\n  const storages: StoragesStorages = {} as any;\r\n  for(const name of names) {\r\n    // @ts-ignore\r\n    storages[name] = new AppStorage(DATABASE_STATE, name);\r\n  }\r\n\r\n  return storages;\r\n}\r\n","import {logger} from '../lib/logger';\r\nimport dT from './dT';\r\n\r\nexport function recordPromise<T extends Promise<any>>(promise: T, description: string, log?: ReturnType<typeof logger> | Console) {\r\n  const perf = performance.now();\r\n  (log || console).warn(dT(), 'start', description);\r\n  promise.then(() => {\r\n    (log || console).warn(dT(), 'end', description, performance.now() - perf);\r\n  });\r\n  return promise;\r\n}\r\n\r\nexport function recordPromiseBound(log: ReturnType<typeof logger> | Console) {\r\n  return (...args: [Parameters<typeof recordPromise>[0], Parameters<typeof recordPromise>[1]]) => {\r\n    return recordPromise(...args, log);\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat} from '../../../../layer';\r\nimport type {Dialog} from '../../appMessagesManager';\r\nimport type {User} from '../../appUsersManager';\r\nimport type {StoragesStorages} from './createStorages';\r\nimport {recordPromiseBound} from '../../../../helpers/recordPromise';\r\nimport {Awaited} from '../../../../types';\r\nimport {logger} from '../../../logger';\r\nimport RESET_STORAGES_PROMISE from './resetStoragesPromise';\r\nimport noop from '../../../../helpers/noop';\r\n\r\nexport type StoragesResults = Awaited<ReturnType<typeof loadStoragesInner>>;\r\n\r\nasync function loadStoragesInner(storages: StoragesStorages) {\r\n  const recordPromise = recordPromiseBound(logger('STORAGES-LOADER'));\r\n  const storagesKeys = Object.keys(storages) as Array<keyof StoragesStorages>;\r\n  const storagesPromises: Promise<any>[] = storagesKeys.map((key) => {\r\n    const promise = storages[key].getAll();\r\n    return recordPromise(promise, 'storage ' + (key as any as string));\r\n  });\r\n\r\n  const storagesResults: {\r\n    users: User[],\r\n    chats: Chat[],\r\n    dialogs: Dialog[]\r\n  } = {} as any;\r\n  const arr = await Promise.all(storagesPromises);\r\n  for(let i = 0, length = storagesKeys.length; i < length; ++i) {\r\n    storagesResults[storagesKeys[i]] = arr[i] as any;\r\n  }\r\n\r\n  arr.splice(0, storagesKeys.length);\r\n\r\n  // * will reset storages before setting the new state\r\n  const {storages: resetStorages, callback} = await RESET_STORAGES_PROMISE;\r\n  if(resetStorages.size) {\r\n    const clearPromises: Promise<any>[] = [];\r\n    for(const key of resetStorages) {\r\n      storagesResults[key].length = 0;\r\n      clearPromises.push(storages[key].clear());\r\n    }\r\n\r\n    resetStorages.clear();\r\n    await Promise.all(clearPromises).catch(noop);\r\n  }\r\n\r\n  callback();\r\n\r\n  return storagesResults;\r\n}\r\n\r\nlet promise: ReturnType<typeof loadStoragesInner>;\r\nexport default function loadStorages(storages: StoragesStorages) {\r\n  return promise ??= loadStoragesInner(storages);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {logger} from '../logger';\r\nimport {AppManager} from './manager';\r\nimport createStorages from './utils/storages/createStorages';\r\nimport loadStorages from './utils/storages/loadStorages';\r\n\r\nexport class AppStoragesManager extends AppManager {\r\n  private storages: ReturnType<typeof createStorages>;\r\n\r\n  // private loadPromise: CancellablePromise<StoragesResults>;\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.log = logger('STORAGES');\r\n    this.storages = createStorages();\r\n    // this.loadPromise = deferredPromise();\r\n  }\r\n\r\n  public loadStorages() {\r\n    return loadStorages(this.storages);\r\n    // loadStorages(this.storages).then((storagesResults) => {\r\n    // this.loadPromise.resolve(storagesResults);\r\n    // });\r\n\r\n    // return this.loadPromise;\r\n  }\r\n\r\n  // public setStoragesResults(storagesResults: StoragesResults) {\r\n  //   this.loadPromise.resolve(storagesResults);\r\n  // }\r\n\r\n  public async loadStorage<T extends keyof AppStoragesManager['storages']>(name: T) {\r\n    return this.loadStorages().then((storagesResults) => {\r\n      return {\r\n        storage: this.storages[name],\r\n        results: storagesResults[name]\r\n      };\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo} from '../../layer';\r\nimport randomize from '../../helpers/array/randomize';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport class PasswordManager extends AppManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return this.apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    // state = Object.assign({}, state);\r\n    // state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then((state) => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n\r\n      if(settings.currentPassword) {\r\n        currentHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n\r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      randomize(salt1);\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n\r\n      if(settings.newPassword) {\r\n        newHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n\r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n\r\n        return this.apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public getInputCheckPassword(password: string, state: AccountPassword) {\r\n    return this.cryptoWorker.invokeCrypto('computeSRP', password, state, false) as Promise<InputCheckPasswordSRP.inputCheckPasswordSRP>;\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return this.getInputCheckPassword(password, state).then((inputCheckPassword) => {\r\n      // console.log('SRP', inputCheckPassword);\r\n      return this.apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then((auth) => {\r\n        if(auth._ === 'auth.authorization') {\r\n          this.apiManager.setUser(auth.user);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return this.apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n","/**\r\n * ignores `undefined` properties\r\n */\r\nexport default function deepEqual<T>(x: T, y: T, ignoreKeys?: (keyof T)[]): boolean {\r\n  const ignoreSet = ignoreKeys && new Set(ignoreKeys);\r\n  const okok = (obj: any) => Object.keys(obj).filter((key) => obj[key] !== undefined);\r\n  const ok = ignoreKeys ? (obj: any) => okok(obj).filter((key) => !ignoreSet.has(key as any)) : okok,\r\n    tx = typeof x,\r\n    ty = typeof y;\r\n  return x && y && tx === 'object' && tx === ty ? (\r\n    ok(x).length === ok(y).length &&\r\n      ok(x).every((key) => deepEqual((x as any)[key], (y as any)[key], ignoreKeys))\r\n  ) : (x === y);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Photo, StoryItem, WallPaper} from '../../layer';\r\nimport {logger} from '../logger';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport makeError from '../../helpers/makeError';\r\n\r\nexport type ReferenceContext =\r\n  ReferenceContext.referenceContextProfilePhoto |\r\n  ReferenceContext.referenceContextMessage |\r\n  ReferenceContext.referenceContextEmojiesSounds |\r\n  ReferenceContext.referenceContextReactions |\r\n  ReferenceContext.referenceContextUserFull |\r\n  ReferenceContext.referenceContextCustomEmoji |\r\n  ReferenceContext.referenceContextAttachMenuBotIcon |\r\n  ReferenceContext.referenceContextWallPaper |\r\n  ReferenceContext.referenceContextStoryItem |\r\n  ReferenceContext.referenceContextPremiumPromo |\r\n  ReferenceContext.referenceContextWebPage |\r\n  ReferenceContext.referenceContextBotApp |\r\n  ReferenceContext.referenceContextChatInvite;\r\n\r\nexport namespace ReferenceContext {\r\n  export type referenceContextProfilePhoto = {\r\n    type: 'profilePhoto',\r\n    peerId: PeerId\r\n  };\r\n\r\n  export type referenceContextMessage = {\r\n    type: 'message',\r\n    peerId: PeerId,\r\n    messageId: number\r\n  };\r\n\r\n  export type referenceContextEmojiesSounds = {\r\n    type: 'emojiesSounds'\r\n  };\r\n\r\n  export type referenceContextReactions = {\r\n    type: 'reactions'\r\n  };\r\n\r\n  export type referenceContextUserFull = {\r\n    type: 'userFull',\r\n    userId: UserId\r\n  };\r\n\r\n  export type referenceContextCustomEmoji = {\r\n    type: 'customEmoji',\r\n    docId: DocId\r\n  };\r\n\r\n  export type referenceContextAttachMenuBotIcon = {\r\n    type: 'attachMenuBotIcon',\r\n    botId: BotId\r\n  };\r\n\r\n  export type referenceContextWallPaper = {\r\n    type: 'wallPaper',\r\n    wallPaperId: WallPaper['id']\r\n  };\r\n\r\n  export type referenceContextStoryItem = {\r\n    type: 'storyItem',\r\n    peerId: PeerId,\r\n    storyId: StoryItem['id'],\r\n  };\r\n\r\n  export type referenceContextPremiumPromo = {\r\n    type: 'premiumPromo'\r\n  };\r\n\r\n  export type referenceContextWebPage = {\r\n    type: 'webPage',\r\n    url: string\r\n  };\r\n\r\n  export type referenceContextBotApp = {\r\n    type: 'botApp',\r\n    botId: BotId,\r\n    appName: string\r\n  };\r\n\r\n  export type referenceContextChatInvite = {\r\n    type: 'chatInvite',\r\n    hash: string\r\n  };\r\n}\r\n\r\nexport type ReferenceBytes = Photo.photo['file_reference'];\r\nexport type ReferenceContexts = Set<ReferenceContext>;\r\n\r\n// type ReferenceBytes = Uint8Array;\r\n\r\nexport class ReferenceDatabase extends AppManager {\r\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\r\n  // private references: Map<ReferenceBytes, number[]> = new Map();\r\n  private links: {[hex: string]: ReferenceBytes} = {};\r\n  private log = logger('RD', undefined, true);\r\n  private refreshEmojiesSoundsPromise: Promise<any>;\r\n\r\n  // constructor() {\r\n  //   super();\r\n\r\n  // apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\r\n  //   const originalPayload = task.payload;\r\n\r\n  //   assumeType<RefreshReferenceTaskResponse>(task);\r\n  //   task.originalPayload = originalPayload;\r\n\r\n  //   this.refreshReference(originalPayload).then((bytes) => {\r\n  //     task.payload = bytes;\r\n  //   }, (err) => {\r\n  //     task.error = err;\r\n  //   }).then(() => apiManager.postMessage(task));\r\n  // });\r\n  // }\r\n\r\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\r\n    [contexts, reference] = this.getContexts(reference);\r\n    if(!contexts) {\r\n      contexts = new Set();\r\n      this.contexts.set(reference, contexts);\r\n    }\r\n\r\n    this.links[bytesToHex(reference)] = reference;\r\n    for(const _context of contexts) {\r\n      if(deepEqual(_context, context)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    contexts.add(context);\r\n  }\r\n\r\n  public getReferenceByLink(reference: ReferenceBytes) {\r\n    return this.links[bytesToHex(reference)];\r\n  }\r\n\r\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\r\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\r\n    return [contexts, reference];\r\n  }\r\n\r\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\r\n    const contexts = this.getContexts(reference);\r\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\r\n  }\r\n\r\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\r\n    [contexts, reference] = this.getContexts(reference);\r\n    if(contexts) {\r\n      for(const _context of contexts) {\r\n        if(deepEqual(_context, context)) {\r\n          contexts.delete(_context);\r\n          if(!contexts.size) {\r\n            this.contexts.delete(reference);\r\n            delete this.links[bytesToHex(reference)];\r\n          }\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\r\n    this.log('refreshReference: start', reference.slice(), context);\r\n    if(!context) {\r\n      const c = this.getContext(reference);\r\n      if(!c) {\r\n        this.log('refreshReference: got no context for reference:', reference.slice());\r\n        return Promise.reject('NO_CONTEXT');\r\n      }\r\n\r\n      [context, reference] = c;\r\n    }\r\n\r\n    let promise: Promise<any>;\r\n    switch(context?.type) {\r\n      case 'message': {\r\n        promise = this.appMessagesManager.reloadMessages(context.peerId, context.messageId, true);\r\n        break;\r\n        // .then(() => {\r\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\r\n        // });\r\n      }\r\n\r\n      case 'emojiesSounds': {\r\n        promise = this.refreshEmojiesSoundsPromise || this.appStickersManager.getAnimatedEmojiSounds(true).then(() => {\r\n          this.refreshEmojiesSoundsPromise = undefined;\r\n        });\r\n        break;\r\n      }\r\n\r\n      case 'userFull': {\r\n        promise = Promise.resolve(this.appProfileManager.getProfile(context.userId, true));\r\n        break;\r\n      }\r\n\r\n      case 'customEmoji': {\r\n        promise = this.appEmojiManager.getCustomEmojiDocuments([context.docId]);\r\n        break;\r\n      }\r\n\r\n      case 'attachMenuBotIcon': {\r\n        promise = this.appAttachMenuBotsManager.getAttachMenuBot(context.botId, true) as any;\r\n        break;\r\n      }\r\n\r\n      case 'wallPaper': {\r\n        promise = this.appThemesManager.getWallPaperById(context.wallPaperId);\r\n        break;\r\n      }\r\n\r\n      case 'storyItem': {\r\n        promise = Promise.resolve(this.appStoriesManager.getStoryById(context.peerId, context.storyId, true));\r\n        break;\r\n      }\r\n\r\n      case 'premiumPromo': {\r\n        promise = Promise.resolve(this.appPaymentsManager.getPremiumPromo(true));\r\n        break;\r\n      }\r\n\r\n      case 'webPage': {\r\n        promise = Promise.resolve(this.appWebPagesManager.getWebPage(context.url));\r\n        break;\r\n      }\r\n\r\n      case 'botApp': {\r\n        promise = Promise.resolve(this.appAttachMenuBotsManager.getBotApp(context.botId, context.appName));\r\n        break;\r\n      }\r\n\r\n      case 'chatInvite': {\r\n        promise = Promise.resolve(this.appChatInvitesManager.checkChatInvite(context.hash));\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        this.log.warn('refreshReference: not implemented context', context);\r\n        return Promise.reject();\r\n      }\r\n    }\r\n\r\n    const hex = bytesToHex(reference);\r\n    this.log('refreshReference: refreshing reference:', hex);\r\n    return promise.then(() => {\r\n      const newHex = bytesToHex(reference);\r\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\r\n      if(hex !== newHex) {\r\n        return reference;\r\n      }\r\n\r\n      this.deleteContext(reference, context);\r\n\r\n      const newContext = this.getContext(reference);\r\n      if(newContext) {\r\n        return this.refreshReference(reference, newContext[0]);\r\n      }\r\n\r\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\r\n\r\n      throw makeError('NO_NEW_CONTEXT');\r\n    });\r\n  }\r\n\r\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\r\n    const contexts = this.contexts.get(oldReference);\r\n    if(contexts) {\r\n      this.contexts.delete(oldReference);\r\n      this.contexts.set(newReference, contexts);\r\n    }\r\n  } */\r\n}\r\n","export default function tsNow(seconds?: true) {\r\n  const t = Date.now();\r\n  return seconds ? t / 1000 | 0 : t;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n// From https://raw.githubusercontent.com/FGRibreau/latenize/master/latinize_map.js\r\nconst LatinizeMap: {[k: string]: string} = {'Á': 'A', 'Ă': 'A', 'Ắ': 'A', 'Ặ': 'A', 'Ằ': 'A', 'Ẳ': 'A', 'Ẵ': 'A', 'Ǎ': 'A', 'Â': 'A', 'Ấ': 'A', 'Ậ': 'A', 'Ầ': 'A', 'Ẩ': 'A', 'Ẫ': 'A', 'Ä': 'A', 'Ǟ': 'A', 'Ȧ': 'A', 'Ǡ': 'A', 'Ạ': 'A', 'Ȁ': 'A', 'À': 'A', 'Ả': 'A', 'Ȃ': 'A', 'Ā': 'A', 'Ą': 'A', 'Å': 'A', 'Ǻ': 'A', 'Ḁ': 'A', 'Ⱥ': 'A', 'Ã': 'A', 'Ꜳ': 'AA', 'Æ': 'AE', 'Ǽ': 'AE', 'Ǣ': 'AE', 'Ꜵ': 'AO', 'Ꜷ': 'AU', 'Ꜹ': 'AV', 'Ꜻ': 'AV', 'Ꜽ': 'AY', 'Ḃ': 'B', 'Ḅ': 'B', 'Ɓ': 'B', 'Ḇ': 'B', 'Ƀ': 'B', 'Ƃ': 'B', 'Ć': 'C', 'Č': 'C', 'Ç': 'C', 'Ḉ': 'C', 'Ĉ': 'C', 'Ċ': 'C', 'Ƈ': 'C', 'Ȼ': 'C', 'Ď': 'D', 'Ḑ': 'D', 'Ḓ': 'D', 'Ḋ': 'D', 'Ḍ': 'D', 'Ɗ': 'D', 'Ḏ': 'D', 'ǲ': 'D', 'ǅ': 'D', 'Đ': 'D', 'Ƌ': 'D', 'Ǳ': 'DZ', 'Ǆ': 'DZ', 'É': 'E', 'Ĕ': 'E', 'Ě': 'E', 'Ȩ': 'E', 'Ḝ': 'E', 'Ê': 'E', 'Ế': 'E', 'Ệ': 'E', 'Ề': 'E', 'Ể': 'E', 'Ễ': 'E', 'Ḙ': 'E', 'Ë': 'E', 'Ė': 'E', 'Ẹ': 'E', 'Ȅ': 'E', 'È': 'E', 'Ẻ': 'E', 'Ȇ': 'E', 'Ē': 'E', 'Ḗ': 'E', 'Ḕ': 'E', 'Ę': 'E', 'Ɇ': 'E', 'Ẽ': 'E', 'Ḛ': 'E', 'Ꝫ': 'ET', 'Ḟ': 'F', 'Ƒ': 'F', 'Ǵ': 'G', 'Ğ': 'G', 'Ǧ': 'G', 'Ģ': 'G', 'Ĝ': 'G', 'Ġ': 'G', 'Ɠ': 'G', 'Ḡ': 'G', 'Ǥ': 'G', 'Ḫ': 'H', 'Ȟ': 'H', 'Ḩ': 'H', 'Ĥ': 'H', 'Ⱨ': 'H', 'Ḧ': 'H', 'Ḣ': 'H', 'Ḥ': 'H', 'Ħ': 'H', 'Í': 'I', 'Ĭ': 'I', 'Ǐ': 'I', 'Î': 'I', 'Ï': 'I', 'Ḯ': 'I', 'İ': 'I', 'Ị': 'I', 'Ȉ': 'I', 'Ì': 'I', 'Ỉ': 'I', 'Ȋ': 'I', 'Ī': 'I', 'Į': 'I', 'Ɨ': 'I', 'Ĩ': 'I', 'Ḭ': 'I', 'Ꝺ': 'D', 'Ꝼ': 'F', 'Ᵹ': 'G', 'Ꞃ': 'R', 'Ꞅ': 'S', 'Ꞇ': 'T', 'Ꝭ': 'IS', 'Ĵ': 'J', 'Ɉ': 'J', 'Ḱ': 'K', 'Ǩ': 'K', 'Ķ': 'K', 'Ⱪ': 'K', 'Ꝃ': 'K', 'Ḳ': 'K', 'Ƙ': 'K', 'Ḵ': 'K', 'Ꝁ': 'K', 'Ꝅ': 'K', 'Ĺ': 'L', 'Ƚ': 'L', 'Ľ': 'L', 'Ļ': 'L', 'Ḽ': 'L', 'Ḷ': 'L', 'Ḹ': 'L', 'Ⱡ': 'L', 'Ꝉ': 'L', 'Ḻ': 'L', 'Ŀ': 'L', 'Ɫ': 'L', 'ǈ': 'L', 'Ł': 'L', 'Ǉ': 'LJ', 'Ḿ': 'M', 'Ṁ': 'M', 'Ṃ': 'M', 'Ɱ': 'M', 'Ń': 'N', 'Ň': 'N', 'Ņ': 'N', 'Ṋ': 'N', 'Ṅ': 'N', 'Ṇ': 'N', 'Ǹ': 'N', 'Ɲ': 'N', 'Ṉ': 'N', 'Ƞ': 'N', 'ǋ': 'N', 'Ñ': 'N', 'Ǌ': 'NJ', 'Ó': 'O', 'Ŏ': 'O', 'Ǒ': 'O', 'Ô': 'O', 'Ố': 'O', 'Ộ': 'O', 'Ồ': 'O', 'Ổ': 'O', 'Ỗ': 'O', 'Ö': 'O', 'Ȫ': 'O', 'Ȯ': 'O', 'Ȱ': 'O', 'Ọ': 'O', 'Ő': 'O', 'Ȍ': 'O', 'Ò': 'O', 'Ỏ': 'O', 'Ơ': 'O', 'Ớ': 'O', 'Ợ': 'O', 'Ờ': 'O', 'Ở': 'O', 'Ỡ': 'O', 'Ȏ': 'O', 'Ꝋ': 'O', 'Ꝍ': 'O', 'Ō': 'O', 'Ṓ': 'O', 'Ṑ': 'O', 'Ɵ': 'O', 'Ǫ': 'O', 'Ǭ': 'O', 'Ø': 'O', 'Ǿ': 'O', 'Õ': 'O', 'Ṍ': 'O', 'Ṏ': 'O', 'Ȭ': 'O', 'Ƣ': 'OI', 'Ꝏ': 'OO', 'Ɛ': 'E', 'Ɔ': 'O', 'Ȣ': 'OU', 'Ṕ': 'P', 'Ṗ': 'P', 'Ꝓ': 'P', 'Ƥ': 'P', 'Ꝕ': 'P', 'Ᵽ': 'P', 'Ꝑ': 'P', 'Ꝙ': 'Q', 'Ꝗ': 'Q', 'Ŕ': 'R', 'Ř': 'R', 'Ŗ': 'R', 'Ṙ': 'R', 'Ṛ': 'R', 'Ṝ': 'R', 'Ȑ': 'R', 'Ȓ': 'R', 'Ṟ': 'R', 'Ɍ': 'R', 'Ɽ': 'R', 'Ꜿ': 'C', 'Ǝ': 'E', 'Ś': 'S', 'Ṥ': 'S', 'Š': 'S', 'Ṧ': 'S', 'Ş': 'S', 'Ŝ': 'S', 'Ș': 'S', 'Ṡ': 'S', 'Ṣ': 'S', 'Ṩ': 'S', 'ẞ': 'SS', 'Ť': 'T', 'Ţ': 'T', 'Ṱ': 'T', 'Ț': 'T', 'Ⱦ': 'T', 'Ṫ': 'T', 'Ṭ': 'T', 'Ƭ': 'T', 'Ṯ': 'T', 'Ʈ': 'T', 'Ŧ': 'T', 'Ɐ': 'A', 'Ꞁ': 'L', 'Ɯ': 'M', 'Ʌ': 'V', 'Ꜩ': 'TZ', 'Ú': 'U', 'Ŭ': 'U', 'Ǔ': 'U', 'Û': 'U', 'Ṷ': 'U', 'Ü': 'U', 'Ǘ': 'U', 'Ǚ': 'U', 'Ǜ': 'U', 'Ǖ': 'U', 'Ṳ': 'U', 'Ụ': 'U', 'Ű': 'U', 'Ȕ': 'U', 'Ù': 'U', 'Ủ': 'U', 'Ư': 'U', 'Ứ': 'U', 'Ự': 'U', 'Ừ': 'U', 'Ử': 'U', 'Ữ': 'U', 'Ȗ': 'U', 'Ū': 'U', 'Ṻ': 'U', 'Ų': 'U', 'Ů': 'U', 'Ũ': 'U', 'Ṹ': 'U', 'Ṵ': 'U', 'Ꝟ': 'V', 'Ṿ': 'V', 'Ʋ': 'V', 'Ṽ': 'V', 'Ꝡ': 'VY', 'Ẃ': 'W', 'Ŵ': 'W', 'Ẅ': 'W', 'Ẇ': 'W', 'Ẉ': 'W', 'Ẁ': 'W', 'Ⱳ': 'W', 'Ẍ': 'X', 'Ẋ': 'X', 'Ý': 'Y', 'Ŷ': 'Y', 'Ÿ': 'Y', 'Ẏ': 'Y', 'Ỵ': 'Y', 'Ỳ': 'Y', 'Ƴ': 'Y', 'Ỷ': 'Y', 'Ỿ': 'Y', 'Ȳ': 'Y', 'Ɏ': 'Y', 'Ỹ': 'Y', 'Ź': 'Z', 'Ž': 'Z', 'Ẑ': 'Z', 'Ⱬ': 'Z', 'Ż': 'Z', 'Ẓ': 'Z', 'Ȥ': 'Z', 'Ẕ': 'Z', 'Ƶ': 'Z', 'Ĳ': 'IJ', 'Œ': 'OE', 'ᴀ': 'A', 'ᴁ': 'AE', 'ʙ': 'B', 'ᴃ': 'B', 'ᴄ': 'C', 'ᴅ': 'D', 'ᴇ': 'E', 'ꜰ': 'F', 'ɢ': 'G', 'ʛ': 'G', 'ʜ': 'H', 'ɪ': 'I', 'ʁ': 'R', 'ᴊ': 'J', 'ᴋ': 'K', 'ʟ': 'L', 'ᴌ': 'L', 'ᴍ': 'M', 'ɴ': 'N', 'ᴏ': 'O', 'ɶ': 'OE', 'ᴐ': 'O', 'ᴕ': 'OU', 'ᴘ': 'P', 'ʀ': 'R', 'ᴎ': 'N', 'ᴙ': 'R', 'ꜱ': 'S', 'ᴛ': 'T', 'ⱻ': 'E', 'ᴚ': 'R', 'ᴜ': 'U', 'ᴠ': 'V', 'ᴡ': 'W', 'ʏ': 'Y', 'ᴢ': 'Z', 'á': 'a', 'ă': 'a', 'ắ': 'a', 'ặ': 'a', 'ằ': 'a', 'ẳ': 'a', 'ẵ': 'a', 'ǎ': 'a', 'â': 'a', 'ấ': 'a', 'ậ': 'a', 'ầ': 'a', 'ẩ': 'a', 'ẫ': 'a', 'ä': 'a', 'ǟ': 'a', 'ȧ': 'a', 'ǡ': 'a', 'ạ': 'a', 'ȁ': 'a', 'à': 'a', 'ả': 'a', 'ȃ': 'a', 'ā': 'a', 'ą': 'a', 'ᶏ': 'a', 'ẚ': 'a', 'å': 'a', 'ǻ': 'a', 'ḁ': 'a', 'ⱥ': 'a', 'ã': 'a', 'ꜳ': 'aa', 'æ': 'ae', 'ǽ': 'ae', 'ǣ': 'ae', 'ꜵ': 'ao', 'ꜷ': 'au', 'ꜹ': 'av', 'ꜻ': 'av', 'ꜽ': 'ay', 'ḃ': 'b', 'ḅ': 'b', 'ɓ': 'b', 'ḇ': 'b', 'ᵬ': 'b', 'ᶀ': 'b', 'ƀ': 'b', 'ƃ': 'b', 'ɵ': 'o', 'ć': 'c', 'č': 'c', 'ç': 'c', 'ḉ': 'c', 'ĉ': 'c', 'ɕ': 'c', 'ċ': 'c', 'ƈ': 'c', 'ȼ': 'c', 'ď': 'd', 'ḑ': 'd', 'ḓ': 'd', 'ȡ': 'd', 'ḋ': 'd', 'ḍ': 'd', 'ɗ': 'd', 'ᶑ': 'd', 'ḏ': 'd', 'ᵭ': 'd', 'ᶁ': 'd', 'đ': 'd', 'ɖ': 'd', 'ƌ': 'd', 'ı': 'i', 'ȷ': 'j', 'ɟ': 'j', 'ʄ': 'j', 'ǳ': 'dz', 'ǆ': 'dz', 'é': 'e', 'ĕ': 'e', 'ě': 'e', 'ȩ': 'e', 'ḝ': 'e', 'ê': 'e', 'ế': 'e', 'ệ': 'e', 'ề': 'e', 'ể': 'e', 'ễ': 'e', 'ḙ': 'e', 'ë': 'e', 'ė': 'e', 'ẹ': 'e', 'ȅ': 'e', 'è': 'e', 'ẻ': 'e', 'ȇ': 'e', 'ē': 'e', 'ḗ': 'e', 'ḕ': 'e', 'ⱸ': 'e', 'ę': 'e', 'ᶒ': 'e', 'ɇ': 'e', 'ẽ': 'e', 'ḛ': 'e', 'ꝫ': 'et', 'ḟ': 'f', 'ƒ': 'f', 'ᵮ': 'f', 'ᶂ': 'f', 'ǵ': 'g', 'ğ': 'g', 'ǧ': 'g', 'ģ': 'g', 'ĝ': 'g', 'ġ': 'g', 'ɠ': 'g', 'ḡ': 'g', 'ᶃ': 'g', 'ǥ': 'g', 'ḫ': 'h', 'ȟ': 'h', 'ḩ': 'h', 'ĥ': 'h', 'ⱨ': 'h', 'ḧ': 'h', 'ḣ': 'h', 'ḥ': 'h', 'ɦ': 'h', 'ẖ': 'h', 'ħ': 'h', 'ƕ': 'hv', 'í': 'i', 'ĭ': 'i', 'ǐ': 'i', 'î': 'i', 'ï': 'i', 'ḯ': 'i', 'ị': 'i', 'ȉ': 'i', 'ì': 'i', 'ỉ': 'i', 'ȋ': 'i', 'ī': 'i', 'į': 'i', 'ᶖ': 'i', 'ɨ': 'i', 'ĩ': 'i', 'ḭ': 'i', 'ꝺ': 'd', 'ꝼ': 'f', 'ᵹ': 'g', 'ꞃ': 'r', 'ꞅ': 's', 'ꞇ': 't', 'ꝭ': 'is', 'ǰ': 'j', 'ĵ': 'j', 'ʝ': 'j', 'ɉ': 'j', 'ḱ': 'k', 'ǩ': 'k', 'ķ': 'k', 'ⱪ': 'k', 'ꝃ': 'k', 'ḳ': 'k', 'ƙ': 'k', 'ḵ': 'k', 'ᶄ': 'k', 'ꝁ': 'k', 'ꝅ': 'k', 'ĺ': 'l', 'ƚ': 'l', 'ɬ': 'l', 'ľ': 'l', 'ļ': 'l', 'ḽ': 'l', 'ȴ': 'l', 'ḷ': 'l', 'ḹ': 'l', 'ⱡ': 'l', 'ꝉ': 'l', 'ḻ': 'l', 'ŀ': 'l', 'ɫ': 'l', 'ᶅ': 'l', 'ɭ': 'l', 'ł': 'l', 'ǉ': 'lj', 'ſ': 's', 'ẜ': 's', 'ẛ': 's', 'ẝ': 's', 'ḿ': 'm', 'ṁ': 'm', 'ṃ': 'm', 'ɱ': 'm', 'ᵯ': 'm', 'ᶆ': 'm', 'ń': 'n', 'ň': 'n', 'ņ': 'n', 'ṋ': 'n', 'ȵ': 'n', 'ṅ': 'n', 'ṇ': 'n', 'ǹ': 'n', 'ɲ': 'n', 'ṉ': 'n', 'ƞ': 'n', 'ᵰ': 'n', 'ᶇ': 'n', 'ɳ': 'n', 'ñ': 'n', 'ǌ': 'nj', 'ó': 'o', 'ŏ': 'o', 'ǒ': 'o', 'ô': 'o', 'ố': 'o', 'ộ': 'o', 'ồ': 'o', 'ổ': 'o', 'ỗ': 'o', 'ö': 'o', 'ȫ': 'o', 'ȯ': 'o', 'ȱ': 'o', 'ọ': 'o', 'ő': 'o', 'ȍ': 'o', 'ò': 'o', 'ỏ': 'o', 'ơ': 'o', 'ớ': 'o', 'ợ': 'o', 'ờ': 'o', 'ở': 'o', 'ỡ': 'o', 'ȏ': 'o', 'ꝋ': 'o', 'ꝍ': 'o', 'ⱺ': 'o', 'ō': 'o', 'ṓ': 'o', 'ṑ': 'o', 'ǫ': 'o', 'ǭ': 'o', 'ø': 'o', 'ǿ': 'o', 'õ': 'o', 'ṍ': 'o', 'ṏ': 'o', 'ȭ': 'o', 'ƣ': 'oi', 'ꝏ': 'oo', 'ɛ': 'e', 'ᶓ': 'e', 'ɔ': 'o', 'ᶗ': 'o', 'ȣ': 'ou', 'ṕ': 'p', 'ṗ': 'p', 'ꝓ': 'p', 'ƥ': 'p', 'ᵱ': 'p', 'ᶈ': 'p', 'ꝕ': 'p', 'ᵽ': 'p', 'ꝑ': 'p', 'ꝙ': 'q', 'ʠ': 'q', 'ɋ': 'q', 'ꝗ': 'q', 'ŕ': 'r', 'ř': 'r', 'ŗ': 'r', 'ṙ': 'r', 'ṛ': 'r', 'ṝ': 'r', 'ȑ': 'r', 'ɾ': 'r', 'ᵳ': 'r', 'ȓ': 'r', 'ṟ': 'r', 'ɼ': 'r', 'ᵲ': 'r', 'ᶉ': 'r', 'ɍ': 'r', 'ɽ': 'r', 'ↄ': 'c', 'ꜿ': 'c', 'ɘ': 'e', 'ɿ': 'r', 'ś': 's', 'ṥ': 's', 'š': 's', 'ṧ': 's', 'ş': 's', 'ŝ': 's', 'ș': 's', 'ṡ': 's', 'ṣ': 's', 'ṩ': 's', 'ʂ': 's', 'ᵴ': 's', 'ᶊ': 's', 'ȿ': 's', 'ɡ': 'g', 'ß': 'ss', 'ᴑ': 'o', 'ᴓ': 'o', 'ᴝ': 'u', 'ť': 't', 'ţ': 't', 'ṱ': 't', 'ț': 't', 'ȶ': 't', 'ẗ': 't', 'ⱦ': 't', 'ṫ': 't', 'ṭ': 't', 'ƭ': 't', 'ṯ': 't', 'ᵵ': 't', 'ƫ': 't', 'ʈ': 't', 'ŧ': 't', 'ᵺ': 'th', 'ɐ': 'a', 'ᴂ': 'ae', 'ǝ': 'e', 'ᵷ': 'g', 'ɥ': 'h', 'ʮ': 'h', 'ʯ': 'h', 'ᴉ': 'i', 'ʞ': 'k', 'ꞁ': 'l', 'ɯ': 'm', 'ɰ': 'm', 'ᴔ': 'oe', 'ɹ': 'r', 'ɻ': 'r', 'ɺ': 'r', 'ⱹ': 'r', 'ʇ': 't', 'ʌ': 'v', 'ʍ': 'w', 'ʎ': 'y', 'ꜩ': 'tz', 'ú': 'u', 'ŭ': 'u', 'ǔ': 'u', 'û': 'u', 'ṷ': 'u', 'ü': 'u', 'ǘ': 'u', 'ǚ': 'u', 'ǜ': 'u', 'ǖ': 'u', 'ṳ': 'u', 'ụ': 'u', 'ű': 'u', 'ȕ': 'u', 'ù': 'u', 'ủ': 'u', 'ư': 'u', 'ứ': 'u', 'ự': 'u', 'ừ': 'u', 'ử': 'u', 'ữ': 'u', 'ȗ': 'u', 'ū': 'u', 'ṻ': 'u', 'ų': 'u', 'ᶙ': 'u', 'ů': 'u', 'ũ': 'u', 'ṹ': 'u', 'ṵ': 'u', 'ᵫ': 'ue', 'ꝸ': 'um', 'ⱴ': 'v', 'ꝟ': 'v', 'ṿ': 'v', 'ʋ': 'v', 'ᶌ': 'v', 'ⱱ': 'v', 'ṽ': 'v', 'ꝡ': 'vy', 'ẃ': 'w', 'ŵ': 'w', 'ẅ': 'w', 'ẇ': 'w', 'ẉ': 'w', 'ẁ': 'w', 'ⱳ': 'w', 'ẘ': 'w', 'ẍ': 'x', 'ẋ': 'x', 'ᶍ': 'x', 'ý': 'y', 'ŷ': 'y', 'ÿ': 'y', 'ẏ': 'y', 'ỵ': 'y', 'ỳ': 'y', 'ƴ': 'y', 'ỷ': 'y', 'ỿ': 'y', 'ȳ': 'y', 'ẙ': 'y', 'ɏ': 'y', 'ỹ': 'y', 'ź': 'z', 'ž': 'z', 'ẑ': 'z', 'ʑ': 'z', 'ⱬ': 'z', 'ż': 'z', 'ẓ': 'z', 'ȥ': 'z', 'ẕ': 'z', 'ᵶ': 'z', 'ᶎ': 'z', 'ʐ': 'z', 'ƶ': 'z', 'ɀ': 'z', 'ﬀ': 'ff', 'ﬃ': 'ffi', 'ﬄ': 'ffl', 'ﬁ': 'fi', 'ﬂ': 'fl', 'ĳ': 'ij', 'œ': 'oe', 'ﬆ': 'st', 'ₐ': 'a', 'ₑ': 'e', 'ᵢ': 'i', 'ⱼ': 'j', 'ₒ': 'o', 'ᵣ': 'r', 'ᵤ': 'u', 'ᵥ': 'v', 'ₓ': 'x', 'Ё': 'YO', 'Й': 'I', 'Ц': 'TS', 'У': 'U', 'К': 'K', 'Е': 'E', 'Н': 'N', 'Г': 'G', 'Ш': 'SH', 'Щ': 'SCH', 'З': 'Z', 'Х': 'H', 'Ъ': '', 'ё': 'yo', 'й': 'i', 'ц': 'ts', 'у': 'u', 'к': 'k', 'е': 'e', 'н': 'n', 'г': 'g', 'ш': 'sh', 'щ': 'sch', 'з': 'z', 'х': 'h', 'ъ': '', 'Ф': 'F', 'Ы': 'I', 'В': 'V', 'А': 'A', 'П': 'P', 'Р': 'R', 'О': 'O', 'Л': 'L', 'Д': 'D', 'Ж': 'ZH', 'Э': 'E', 'ф': 'f', 'ы': 'i', 'в': 'v', 'а': 'a', 'п': 'p', 'р': 'r', 'о': 'o', 'л': 'l', 'д': 'd', 'ж': 'zh', 'э': 'e', 'Я': 'Ya', 'Ч': 'CH', 'С': 'S', 'М': 'M', 'И': 'I', 'Т': 'T', 'Ь': '', 'Б': 'B', 'Ю': 'YU', 'я': 'ya', 'ч': 'ch', 'с': 's', 'м': 'm', 'и': 'i', 'т': 't', 'ь': '', 'б': 'b', 'ю': 'yu'};\r\n\r\nexport default LatinizeMap;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport LatinizeMap from '../config/latinizeMap';\r\n\r\nexport const badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\r\nconst trimRe = /^\\s+|\\s$/g;\r\n\r\nconst C2L: {[k: string]: string} = {\r\n  'й': 'q',\r\n  'ц': 'w',\r\n  'у': 'e',\r\n  'к': 'r',\r\n  'е': 't',\r\n  'н': 'y',\r\n  'г': 'u',\r\n  'ш': 'i',\r\n  'щ': 'o',\r\n  'з': 'p',\r\n  'х': '[',\r\n  'ъ': ']',\r\n  'ф': 'a',\r\n  'ы': 's',\r\n  'в': 'd',\r\n  'а': 'f',\r\n  'п': 'g',\r\n  'р': 'h',\r\n  'о': 'j',\r\n  'л': 'k',\r\n  'д': 'l',\r\n  'ж': ';',\r\n  'э': '\\'',\r\n  'я': 'z',\r\n  'ч': 'x',\r\n  'с': 'c',\r\n  'м': 'v',\r\n  'и': 'b',\r\n  'т': 'n',\r\n  'ь': 'm',\r\n  'б': ',',\r\n  'ю': '.',\r\n  '.': '/'\r\n};\r\n\r\nexport function clearBadCharsAndTrim(text: string) {\r\n  return text.replace(badCharsRe, '').replace(trimRe, '');\r\n}\r\n\r\nexport function fixCyrillic(text: string) {\r\n  return text.toLowerCase().replace(/[\\wа-я]/g, (ch) => {\r\n    const latinizeCh = C2L[ch];\r\n    return latinizeCh ?? ch;\r\n  });\r\n}\r\n\r\nexport function latinizeString(text: string) {\r\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\r\n    const latinizeCh = LatinizeMap[ch];\r\n    return latinizeCh ?? ch;\r\n  });\r\n}\r\n\r\nexport default function cleanSearchText(text: string, latinize = true) {\r\n  return processSearchText(text, {\r\n    clearBadChars: true,\r\n    latinize,\r\n    ignoreCase: true\r\n  });\r\n}\r\n\r\nexport type ProcessSearchTextOptions = Partial<{\r\n  clearBadChars: boolean,\r\n  latinize: boolean,\r\n  ignoreCase: boolean,\r\n  includeTag: boolean\r\n}>;\r\n\r\nexport function processSearchText(text = '', options: ProcessSearchTextOptions = {}) {\r\n  const hasTag = options.includeTag && text.charAt(0) === '%';\r\n  const originalText = text;\r\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\r\n  if(options.latinize) text = latinizeString(text);\r\n  if(options.ignoreCase) text = text.toLowerCase();\r\n  if(hasTag) text = '%' + text;\r\n  if(options.latinize) text += '\\x01' + fixCyrillic(originalText);\r\n  return text;\r\n}\r\n","export default function flatten<T>(arr: T[][]): T[] {\r\n  return arr.reduce((acc, val) => (acc.push(...val), acc), []);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {processSearchText, ProcessSearchTextOptions} from '../helpers/cleanSearchText';\r\nimport flatten from '../helpers/array/flatten';\r\n\r\ntype SearchIndexOptions = ProcessSearchTextOptions & {\r\n  minChars?: number,\r\n  fullWords?: boolean\r\n};\r\n\r\nexport default class SearchIndex<SearchWhat> {\r\n  private fullTexts: Map<SearchWhat, string> = new Map();\r\n\r\n  // minChars can be 0 because it requires at least one word (one symbol) to be found\r\n  constructor(private options: SearchIndexOptions = {}) {\r\n    options.minChars ??= 0;\r\n  }\r\n\r\n  public indexObject(id: SearchWhat, searchText: string) {\r\n    /* if(searchIndex.fullTexts.hasOwnProperty(id)) {\r\n      return false;\r\n    } */\r\n\r\n    if(searchText.trim()) {\r\n      searchText = this.processSearchText(searchText);\r\n    }\r\n\r\n    if(!searchText) {\r\n      this.fullTexts.delete(id);\r\n      return false;\r\n    }\r\n\r\n    this.fullTexts.set(id, searchText);\r\n\r\n    /* const shortIndexes = searchIndex.shortIndexes;\r\n    searchText.split(' ').forEach((searchWord) => {\r\n      let len = Math.min(searchWord.length, 3),\r\n        wordPart, i;\r\n      for(i = 1; i <= len; i++) {\r\n        wordPart = searchWord.substr(0, i);\r\n        if(shortIndexes[wordPart] === undefined) {\r\n          shortIndexes[wordPart] = [id];\r\n        } else {\r\n          shortIndexes[wordPart].push(id);\r\n        }\r\n      }\r\n    }); */\r\n  }\r\n\r\n  private _search(\r\n    query: string,\r\n    queryWords = query.split(' ').filter((word) => word.trim())\r\n  ) {\r\n    const newFoundObjs: Array<{fullText: string, fullTextLength: number, what: SearchWhat, foundChars: number}> = [];\r\n    const fullTexts = this.fullTexts;\r\n    const queryWordsLength = queryWords.length;\r\n    fullTexts.forEach((fullText, what) => {\r\n      let found = true;\r\n      let foundChars = 0;\r\n      for(let i = 0; i < queryWordsLength; ++i) { // * verify that all words are found\r\n        const word = queryWords[i];\r\n        const idx = fullText.indexOf(word);\r\n        const isLastWord = i === queryWordsLength - 1;\r\n        if(\r\n          idx === -1 ||\r\n          (this.options.fullWords && !isLastWord && fullText[idx + word.length] !== ' ') || // if not last word, then next char must be space\r\n          (idx !== 0 && fullText[idx - 1] !== ' '/*  && !badCharsRe.test(fullText[idx - 1]) */)) { // * search only from word beginning\r\n          found = false;\r\n          break;\r\n        }\r\n\r\n        foundChars += word.length;\r\n      }\r\n\r\n      if(found) {\r\n        foundChars += queryWordsLength - 1;\r\n        const fullTextLength = fullText.length;\r\n        if(this.options.minChars <= foundChars || fullTextLength <= foundChars) {\r\n          newFoundObjs.push({fullText, fullTextLength, what, foundChars});\r\n        }\r\n      }\r\n    });\r\n\r\n    return newFoundObjs;\r\n  }\r\n\r\n  public search(query: string) {\r\n    query = this.processSearchText(query);\r\n\r\n    const queries = query.split('\\x01');\r\n    const results = queries.map((query) => this._search(query));\r\n    const newFoundObjs = flatten(results);\r\n\r\n    newFoundObjs.sort((a, b) => a.fullTextLength - b.fullTextLength || b.foundChars - a.foundChars);\r\n\r\n    // newFoundObjs.sort((a, b) => a.fullText.localeCompare(b.fullText));\r\n    const newFoundObjs2: Set<SearchWhat> = new Set(newFoundObjs.map((o) => o.what));\r\n\r\n    return newFoundObjs2;\r\n  }\r\n\r\n  public processSearchText(query: string) {\r\n    return this.options ? processSearchText(query, this.options) : query;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function compareLong(str1: string, str2: string) {\r\n  const str1Length = str1.length;\r\n  if(str1Length !== str2.length) {\r\n    const diff = str1Length - str2.length;\r\n    return diff < 0 ? -1 : (diff > 0 ? 1 : 0);\r\n  }\r\n\r\n  const maxPartLength = 15;\r\n  for(let i = 0; i < str1Length; i += maxPartLength) {\r\n    const v1 = +str1.slice(i, i + maxPartLength);\r\n    const v2 = +str2.slice(i, i + maxPartLength);\r\n    const diff = v1 - v2;\r\n    if(diff) {\r\n      return diff;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n","import compareLong from './long/compareLong';\r\n\r\nexport default function compareValue(val1: string | number, val2: typeof val1) {\r\n  if((val1 as number).toExponential) {\r\n    const diff = (val1 as number) - (val2 as number);\r\n    return diff < 0 ? -1 : (diff > 0 ? 1 : 0);\r\n  }\r\n\r\n  return compareLong(val1 as string, val2 as string);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport indexOfAndSplice from './array/indexOfAndSplice';\r\nimport compareValue from './compareValue';\r\n\r\n/**\r\n * Descend sorted storage\r\n */\r\n\r\ntype ItemType = number | string;\r\n\r\nexport enum SliceEnd {\r\n  None = 0,\r\n  Top = 1,\r\n  Bottom = 2,\r\n  Both = SliceEnd.Top | SliceEnd.Bottom\r\n};\r\n\r\nexport interface Slice<T extends ItemType> extends Array<T> {\r\n  // slicedArray: SlicedArray;\r\n  end: SliceEnd;\r\n\r\n  isEnd: (side: SliceEnd) => boolean;\r\n  setEnd: (side: SliceEnd) => void;\r\n  unsetEnd: (side: SliceEnd) => void;\r\n  getEnds: () => {top: boolean, bottom: boolean, both: boolean};\r\n\r\n  slice: (from?: number, to?: number) => Slice<T>;\r\n  splice: (start: number, deleteCount: number, ...items: ItemType[]) => Slice<T>;\r\n}\r\n\r\nexport interface SliceConstructor<T extends ItemType> {\r\n  // new(...items: T[]): Slice<T>;\r\n  new(length: number): Slice<T>;\r\n}\r\n\r\nexport type SliceSerialized<T extends ItemType> = {\r\n  values: Slice<T>,\r\n  isEnd: {\r\n    top: boolean,\r\n    bottom: boolean,\r\n    both: boolean\r\n  }\r\n};\r\n\r\nexport type SlicedArraySerialized<T extends ItemType> = {\r\n  slices: SliceSerialized<T>[]\r\n};\r\n\r\nexport default class SlicedArray<T extends ItemType> {\r\n  public slices: Slice<T>[]/*  = [[7,6,5],[4,3,2],[1,0,-1]] */;\r\n  private sliceConstructor: SliceConstructor<T>;\r\n\r\n  constructor() {\r\n    // @ts-ignore\r\n    this.sliceConstructor = SlicedArray.getSliceConstructor(this);\r\n\r\n    const first = this.constructSlice();\r\n    // first.setEnd(SliceEnd.Bottom);\r\n    this.slices = [first];\r\n  }\r\n\r\n  private static getSliceConstructor(slicedArray: SlicedArray<ItemType>) {\r\n    return class Slice<T> extends Array<ItemType> implements Slice<T> {\r\n      // slicedArray: SlicedArray;\r\n      end: SliceEnd = SliceEnd.None;\r\n\r\n      /* constructor(...items: ItemType[]) {\r\n        super(...items);\r\n        //this.slicedArray = slicedArray;\r\n      } */\r\n\r\n      isEnd(side: SliceEnd): boolean {\r\n        if((this.end & side) === side) {\r\n          return true;\r\n        }/*  else if(!this.slicedArray) {\r\n          return false;\r\n        } */\r\n\r\n        let isEnd = false;\r\n        if(side === SliceEnd.Top) {\r\n          const slice = slicedArray.last;\r\n          isEnd = slice.end & side ? this.includes(slice[slice.length - 1])/*  || !slice.length */ : false;\r\n        } else if(side === SliceEnd.Bottom) {\r\n          const slice = slicedArray.first;\r\n          isEnd = slice.end & side ? this.includes(slice[0])/*  || !slice.length */ : false;\r\n        } else if(side === SliceEnd.Both) {\r\n          return this.isEnd(SliceEnd.Top) && this.isEnd(SliceEnd.Bottom);\r\n        }\r\n\r\n        if(isEnd) {\r\n          this.setEnd(side);\r\n        }\r\n\r\n        return isEnd;\r\n      }\r\n\r\n      getEnds() {\r\n        return {\r\n          top: this.isEnd(SliceEnd.Top),\r\n          bottom: this.isEnd(SliceEnd.Bottom),\r\n          both: this.isEnd(SliceEnd.Both)\r\n        };\r\n      }\r\n\r\n      setEnd(side: SliceEnd) {\r\n        this.end |= side;\r\n      }\r\n\r\n      unsetEnd(side: SliceEnd) {\r\n        this.end &= ~side;\r\n      }\r\n\r\n      splice(start: number, deleteCount: number, ...items: ItemType[]) {\r\n        const ret = super.splice(start, deleteCount, ...items);\r\n\r\n        if(!this.length) {\r\n          const slices = slicedArray.slices as ItemType[][];\r\n          const idx = slices.indexOf(this);\r\n          if(idx !== -1) {\r\n            if(slices.length === 1) { // left empty slice without ends\r\n              this.unsetEnd(SliceEnd.Both);\r\n            } else { // delete this slice\r\n              slices.splice(idx, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        return ret;\r\n      }\r\n    }\r\n  }\r\n\r\n  public constructSlice(...items: T[]) {\r\n    // const slice = new Slice(this, ...items);\r\n    // can't pass items directly to constructor because first argument is length\r\n    const slice = new this.sliceConstructor(items.length);\r\n    for(let i = 0, length = items.length; i < length; ++i) {\r\n      slice[i] = items[i];\r\n    }\r\n    return slice;\r\n\r\n    // ! code below will slow execution in 15 times\r\n    /* const self = this;\r\n    const p: Slice = new Proxy(slice, {\r\n      get: function(target, name: any) {\r\n        if(name === 'constructor') {\r\n          const p = new Proxy(Slice, {\r\n            construct: (target, args) => {\r\n              return self.constructSlice(...args);\r\n            }\r\n          });\r\n\r\n          return p;\r\n        }\r\n\r\n        return target[name];\r\n      }\r\n    });\r\n\r\n    return p; */\r\n\r\n    /*\r\n    var p = slicedArray.constructSlice();\r\n    p.length = 100000;\r\n    p.fill(255);\r\n\r\n    var a = new Array(100000);\r\n    a.fill(255);\r\n\r\n    var b = 0;\r\n    var perf = performance.now();\r\n    for(var i = 0; i < p.length; ++i) {\r\n        b += p[i];\r\n    }\r\n\r\n    console.log('perf 1', performance.now() - perf);\r\n\r\n    b = 0;\r\n    perf = performance.now();\r\n    for(var i = 0; i < a.length; ++i) {\r\n        b += a[i];\r\n    }\r\n\r\n    console.log('perf 2', performance.now() - perf);\r\n    */\r\n  }\r\n\r\n  public insertSlice(slice: T[], flatten = true) {\r\n    if(!slice.length) {\r\n      return;\r\n    }\r\n\r\n    const first = this.slices[0];\r\n    if(!first.length) {\r\n      first.push(...slice);\r\n      return first;\r\n    }\r\n\r\n    const lowerBound = slice[slice.length - 1];\r\n    const upperBound = slice[0];\r\n\r\n    let foundSlice: Slice<T>, lowerIndex = -1, upperIndex = -1, foundSliceIndex = 0;\r\n    for(; foundSliceIndex < this.slices.length; ++foundSliceIndex) {\r\n      foundSlice = this.slices[foundSliceIndex];\r\n      lowerIndex = foundSlice.indexOf(lowerBound);\r\n      upperIndex = foundSlice.indexOf(upperBound);\r\n\r\n      if(upperIndex !== -1 && -1 !== lowerIndex) {\r\n        break;\r\n      } else if(upperIndex !== -1 || -1 !== lowerIndex) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(upperIndex !== -1 && -1 !== lowerIndex) {\r\n\r\n    } else if(upperIndex !== -1) {  // ([1, 2, 3] | [1, 2, 3, 4, 5]) -> [1, 2, 3, 4, 5]\r\n      const sliced = slice.slice(foundSlice.length - upperIndex);\r\n      foundSlice.push(...sliced);\r\n    } else if(lowerIndex !== -1) {  // ([1, 2, 3] | [-1, 0, 1]) -> [-1, 0, 1, 2, 3]\r\n      const sliced = slice.slice(0, slice.length - lowerIndex - 1);\r\n      foundSlice.unshift(...sliced);\r\n    } else {\r\n      let insertIndex = 0;\r\n      for(const length = this.slices.length; insertIndex < length; ++insertIndex) { // * maybe should iterate from the end, could be faster ?\r\n        const s = this.slices[insertIndex];\r\n        if(compareValue(slice[0], s[0]) === 1) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.slices.splice(insertIndex, 0, this.constructSlice(...slice));\r\n      foundSliceIndex = insertIndex;\r\n    }\r\n\r\n    if(flatten) {\r\n      return this.flatten(foundSliceIndex);\r\n    }\r\n  }\r\n\r\n  private flatten(foundSliceIndex: number) {\r\n    if(this.slices.length >= 2) {\r\n      for(let i = 0, length = this.slices.length; i < (length - 1); ++i) {\r\n        const prevSlice = this.slices[i];\r\n        const nextSlice = this.slices[i + 1];\r\n\r\n        const upperIndex = prevSlice.indexOf(nextSlice[0]);\r\n        if(upperIndex !== -1) {\r\n          prevSlice.setEnd(nextSlice.end);\r\n          this.slices.splice(i + 1, 1);\r\n\r\n          if(i < foundSliceIndex) {\r\n            --foundSliceIndex;\r\n          }\r\n\r\n          --length; // respect array bounds\r\n          --i;      // repeat from the same place\r\n\r\n          this.insertSlice(nextSlice, false);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.slices[foundSliceIndex];\r\n  }\r\n\r\n  // *\r\n\r\n  get first() {\r\n    return this.slices[0];\r\n  }\r\n\r\n  get last() {\r\n    return this.slices[this.slices.length - 1];\r\n  }\r\n\r\n  get slice() {\r\n    return this.first;\r\n  }\r\n\r\n  get length() {\r\n    return this.slice.length;\r\n  }\r\n\r\n  public findSlice(item: T) {\r\n    for(let i = 0, length = this.slices.length; i < length; ++i) {\r\n      const slice = this.slices[i];\r\n      const index = slice.indexOf(item);\r\n      if(index !== -1) {\r\n        return {slice, index};\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  public findSliceOffset(maxId: T) {\r\n    let slice: Slice<T>;\r\n    for(let i = 0; i < this.slices.length; ++i) {\r\n      slice = this.slices[i];\r\n\r\n      for(let offset = 0; offset < slice.length; ++offset) {\r\n        if(compareValue(maxId, slice[offset]) >= 0) {\r\n          /* if(!offset) { // because can't find 3 in [[5,4], [2,1]]\r\n            return undefined;\r\n          } */\r\n\r\n          return {\r\n            slice,\r\n            offset: maxId === slice[offset] ? offset : offset - 1\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if(slice && slice.isEnd(SliceEnd.Top)) {\r\n      return {\r\n        slice,\r\n        offset: slice.length\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  // * https://core.telegram.org/api/offsets\r\n  public sliceMe(offsetId: T, addOffset: number, limit: number) {\r\n    let slice = this.slice;\r\n    let offset = 0;\r\n    let sliceOffset = 0;\r\n\r\n    if(offsetId) {\r\n      const pos = this.findSliceOffset(offsetId);\r\n      if(!pos) {\r\n        return undefined;\r\n      }\r\n\r\n      slice = pos.slice;\r\n      offset = sliceOffset = pos.offset;\r\n\r\n      if(slice.includes(offsetId)) {\r\n        sliceOffset += 1;\r\n      }\r\n\r\n      /* if(slice.includes(offsetId) && add_offset < 0) {\r\n        add_offset += 1;\r\n      } */\r\n    }\r\n\r\n    const sliceStart = Math.max(sliceOffset + addOffset, 0);\r\n    const sliceEnd = sliceOffset + addOffset + limit;\r\n    // const fixHalfBackLimit = add_offset && !(limit / add_offset % 2) && (sliceEnd % 2) ? 1 : 0;\r\n    // sliceEnd += fixHalfBackLimit;\r\n\r\n    const sliced = slice.slice(sliceStart, sliceEnd) as Slice<T>;\r\n\r\n    const topWasMeantToLoad = addOffset < 0 ? limit + addOffset : limit;\r\n    const bottomWasMeantToLoad = Math.abs(addOffset);\r\n\r\n    // can use 'slice' here to check because if it's end, then 'sliced' is out of 'slice'\r\n    // useful when there is only 1 message in chat on its reopening\r\n    const topFulfilled = (slice.length - sliceOffset) >= topWasMeantToLoad || (slice.isEnd(SliceEnd.Top) ? (sliced.setEnd(SliceEnd.Top), true) : false);\r\n    const bottomFulfilled = (sliceOffset - bottomWasMeantToLoad) >= 0 || (slice.isEnd(SliceEnd.Bottom) ? (sliced.setEnd(SliceEnd.Bottom), true) : false);\r\n\r\n    // if(topFulfilled) sliced.isEnd(SliceEnd.Top);\r\n    // if(bottomFulfilled) sliced.isEnd(SliceEnd.Bottom);\r\n\r\n    return {\r\n      slice: sliced,\r\n      offsetIdOffset: offset,\r\n      fulfilled: SliceEnd.None | (topFulfilled && bottomFulfilled ? SliceEnd.Both : ((topFulfilled ? SliceEnd.Top : SliceEnd.None) | (bottomFulfilled ? SliceEnd.Bottom : SliceEnd.None)))\r\n    };\r\n  }\r\n\r\n  public unshift(...items: T[]) {\r\n    let slice = this.first;\r\n    if(!slice.length) {\r\n      slice.setEnd(SliceEnd.Bottom);\r\n    } else if(!slice.isEnd(SliceEnd.Bottom)) {\r\n      slice = this.constructSlice();\r\n      slice.setEnd(SliceEnd.Bottom);\r\n      this.slices.unshift(slice);\r\n    }\r\n\r\n    this.insertSlice(items);\r\n  }\r\n\r\n  public push(...items: T[]) {\r\n    let slice = this.last;\r\n    if(!slice.length) {\r\n      slice.setEnd(SliceEnd.Top);\r\n    } else if(!slice.isEnd(SliceEnd.Top)) {\r\n      slice = this.constructSlice();\r\n      slice.setEnd(SliceEnd.Top);\r\n      this.slices.push(slice);\r\n    }\r\n\r\n    slice.push(...items);\r\n  }\r\n\r\n  public delete(item: T) {\r\n    const found = this.findSlice(item);\r\n    if(found) {\r\n      found.slice.splice(found.index, 1);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public deleteSlice(slice: Slice<T>) {\r\n    indexOfAndSplice(this.slices, slice);\r\n  }\r\n\r\n  public toJSON() {\r\n    const slices: SlicedArraySerialized<T>['slices'] = this.slices.map((slice) => {\r\n      return {\r\n        values: slice.slice(),\r\n        isEnd: slice.getEnds()\r\n      };\r\n    });\r\n\r\n    const serialized: SlicedArraySerialized<T> = {\r\n      slices\r\n    };\r\n\r\n    return JSON.stringify(serialized);\r\n  }\r\n\r\n  public static fromJSON<T extends ItemType>(json: string) {\r\n    const parsed: SlicedArraySerialized<T> = JSON.parse(json);\r\n    const sliced = new SlicedArray<T>();\r\n    parsed.slices.forEach((slice) => {\r\n      const inserted = sliced.insertSlice(slice.values) || sliced.first;\r\n      if(slice.isEnd.top) inserted.setEnd(SliceEnd.Top);\r\n      if(slice.isEnd.bottom) inserted.setEnd(SliceEnd.Bottom);\r\n    });\r\n\r\n    return sliced;\r\n  }\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.SlicedArray = SlicedArray);\r\n","export default function forEachReverse<T>(array: Array<T>, callback: (value: T, index?: number, array?: Array<T>) => void) {\r\n  for(let length = array.length, i = length - 1; i >= 0; --i) {\r\n    callback(array[i], i, array);\r\n  }\r\n};\r\n","export default function insertInDescendSortedArray<T extends {[smth in K]?: number}, K extends keyof T>(array: Array<T>, element: T, getProperty: K, pos?: number): number;\r\nexport default function insertInDescendSortedArray<T>(array: Array<T>, element: T, getProperty?: (element: T) => number, pos?: number): number;\r\nexport default function insertInDescendSortedArray<T extends {[smth in K]?: number}, K extends keyof T>(array: Array<T>, element: T, getProperty: K | ((element: T) => T[K]), pos?: number): number {\r\n  if(!getProperty) {\r\n    getProperty = (element) => element as any;\r\n  } else if(typeof(getProperty) !== 'function') {\r\n    const property = getProperty;\r\n    getProperty = (element) => element[property];\r\n  }\r\n\r\n  const sortProperty: number = getProperty(element);\r\n\r\n  pos ??= array.indexOf(element);\r\n  if(pos !== -1) {\r\n    const prev = array[pos - 1];\r\n    const next = array[pos + 1];\r\n    if((!prev || getProperty(prev) >= sortProperty) && (!next || getProperty(next) <= sortProperty)) {\r\n      // console.warn('same pos', pos, sortProperty, prev, next);\r\n      return pos;\r\n    }\r\n\r\n    array.splice(pos, 1);\r\n  }\r\n\r\n  const len = array.length;\r\n  if(!len || sortProperty <= getProperty(array[len - 1])) {\r\n    return array.push(element) - 1;\r\n  } else if(sortProperty >= getProperty(array[0])) {\r\n    array.unshift(element);\r\n    return 0;\r\n  } else {\r\n    for(let i = 0; i < len; i++) {\r\n      if(sortProperty > getProperty(array[i])) {\r\n        array.splice(i, 0, element);\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  console.error('wtf', array, element);\r\n  return array.indexOf(element);\r\n}\r\n","export default function safeReplaceObject(wasObject: any, newObject: any) {\r\n  if(!wasObject) {\r\n    return newObject;\r\n  }\r\n\r\n  for(var key in wasObject) {\r\n    if(!newObject.hasOwnProperty(key)) {\r\n      delete wasObject[key];\r\n    }\r\n  }\r\n\r\n  for(var key in newObject) {\r\n    // if (newObject.hasOwnProperty(key)) { // useless\r\n    wasObject[key] = newObject[key];\r\n    // }\r\n  }\r\n\r\n  return wasObject;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MESSAGE_ID_OFFSET} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function clearMessageId(messageId: number, toServer?: boolean) {\r\n  if(messageId === undefined) {\r\n    return;\r\n  }\r\n\r\n  messageId = +messageId.toFixed(0);\r\n  if(!toServer) {\r\n    return messageId;\r\n  }\r\n\r\n  return messageId < MESSAGE_ID_OFFSET ? messageId : messageId % MESSAGE_ID_OFFSET;\r\n  // const q = MESSAGE_ID_OFFSET;\r\n  // if(messageId < q) { // id 0 -> mid 0xFFFFFFFF, so 0xFFFFFFFF must convert to 0\r\n  //   return messageId;\r\n  // }\r\n\r\n  // const l = MESSAGE_ID_INCREMENT - 1;\r\n  // const used = messageId & l;\r\n  // if(used !== l) {\r\n  //   messageId -= used + 1;\r\n  // }\r\n\r\n  // return toServer ? (messageId - q) / MESSAGE_ID_INCREMENT : messageId;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport clearMessageId from './clearMessageId';\r\n\r\n/**\r\n * * will ignore outgoing offset\r\n */\r\nexport default function getServerMessageId(messageId: number) {\r\n  return clearMessageId(messageId, true);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {DialogFilter} from '../../../../layer';\r\n\r\nexport default function getDialogIndexKey(localId: DialogFilter.dialogFilter['localId'] = 0) {\r\n  return `index_${localId}` as const;\r\n  // return filterId !== undefined && filterId > 1 ? `filter_${filterId}` as const : 'main' as const;\r\n  // const indexStr = filterId > 1 ?\r\n  //   `index_${filterId}` as const :\r\n  //   'index' as const;\r\n\r\n  // return indexStr;\r\n}\r\n","export default function isObject<T extends Record<any, any>>(object: any): object is T {\r\n  return typeof(object) === 'object' && object !== null;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Dialog, ForumTopic} from '../../../../layer';\r\nimport type {REAL_FOLDER_ID} from '../../../mtproto/mtproto_config';\r\nimport getDialogIndexKey from './getDialogIndexKey';\r\n\r\nexport default function getDialogIndex(\r\n  dialog: Dialog.dialog | ForumTopic.forumTopic,\r\n  indexKey: ReturnType<typeof getDialogIndexKey> = getDialogIndexKey((dialog as Dialog).folder_id as REAL_FOLDER_ID)\r\n) {\r\n  return dialog?.[indexKey as 'index_0'];\r\n}\r\n","import isObject from '../../../../helpers/object/isObject';\r\nimport {InputChannel, InputPeer, InputUser, Peer} from '../../../../layer';\r\nimport {NULL_PEER_ID} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function getPeerId(peerId: {user_id: UserId} | {channel_id: ChatId} | {chat_id: ChatId} | InputUser | InputPeer | InputChannel | PeerId | string): PeerId {\r\n  if(peerId !== undefined && ((peerId as string).isPeerId ? (peerId as string).isPeerId() : false)) return peerId as PeerId;\r\n  // if(typeof(peerId) === 'string' && /^[uc]/.test(peerId)) return peerId as PeerId;\r\n  // if(typeof(peerId) === 'number') return peerId;\r\n  else if(isObject(peerId)) {\r\n    const userId = (peerId as Peer.peerUser).user_id;\r\n    if(userId !== undefined) {\r\n      return userId.toPeerId(false);\r\n    }\r\n\r\n    const chatId = (peerId as Peer.peerChannel).channel_id || (peerId as Peer.peerChat).chat_id;\r\n    if(chatId !== undefined) {\r\n      return chatId.toPeerId(true);\r\n    }\r\n\r\n    return NULL_PEER_ID; // maybe it is an inputPeerSelf\r\n  // } else if(!peerId) return 'u0';\r\n  } else if(!peerId) return NULL_PEER_ID;\r\n\r\n  const isUser = (peerId as string).charAt(0) === 'u';\r\n  const peerParams = (peerId as string).substr(1).split('_');\r\n\r\n  return isUser ? peerParams[0].toPeerId() : (peerParams[0] || '').toPeerId(true);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Message, MessageAction, MessageMedia, Peer, WebPage, WebPageAttribute} from '../../../../layer';\r\nimport getPeerId from '../peers/getPeerId';\r\n\r\nexport default function getPeerIdsFromMessage(message: Message.message | Message.messageService) {\r\n  const peerIds: number[] = [\r\n    message.fromId,\r\n    message.viaBotId,\r\n    (message as Message.message).fwdFromId\r\n  ];\r\n\r\n  const media = (message as Message.message).media;\r\n  if(media) {\r\n    const userIds: UserId[] = [\r\n      (media as MessageMedia.messageMediaContact).user_id,\r\n      ...((media as MessageMedia.messageMediaGiveawayResults).winners || [])\r\n    ];\r\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\r\n\r\n    const chatIds: ChatId[] = [\r\n      ...((media as MessageMedia.messageMediaGiveaway).channels || []),\r\n      (media as MessageMedia.messageMediaGiveawayResults).channel_id\r\n    ];\r\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\r\n\r\n    const peers: Peer[] = [\r\n      ...((media as MessageMedia.messageMediaPoll).results?.recent_voters || []),\r\n      (media as MessageMedia.messageMediaStory).peer\r\n    ];\r\n    const webPage = (media as MessageMedia.messageMediaWebPage)?.webpage as WebPage.webPage;\r\n    if(webPage) {\r\n      const storyAttribute = webPage.attributes?.find((attribute) => attribute._ === 'webPageAttributeStory') as WebPageAttribute.webPageAttributeStory;\r\n      peers.push(storyAttribute?.peer);\r\n    }\r\n    peerIds.push(...peers.filter(Boolean).map((peer) => getPeerId(peer)));\r\n  }\r\n\r\n  const recentReactions = ((message as Message.message).reactions)?.recent_reactions;\r\n  if(recentReactions?.length) {\r\n    peerIds.push(...recentReactions.map((reaction) => getPeerId(reaction.peer_id)));\r\n  }\r\n\r\n  const action = (message as Message.messageService).action;\r\n  if(action) {\r\n    const userIds: UserId[] = [\r\n      ...((action as MessageAction.messageActionChatAddUser).users || []),\r\n      (action as MessageAction.messageActionChatDeleteUser).user_id,\r\n      (action as MessageAction.messageActionChatJoinedByLink).inviter_id\r\n    ];\r\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\r\n\r\n    const chatIds: ChatId[] = [\r\n      (action as MessageAction.messageActionChatMigrateTo).channel_id,\r\n      (action as MessageAction.messageActionChannelMigrateFrom).chat_id\r\n    ];\r\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\r\n\r\n    const peers: Peer[] = [\r\n      (action as MessageAction.messageActionGiftCode).boost_peer,\r\n      ...(action as MessageAction.messageActionRequestedPeer).peers || [],\r\n      (action as MessageAction.messageActionGeoProximityReached).from_id,\r\n      (action as MessageAction.messageActionGeoProximityReached).to_id\r\n    ];\r\n    peerIds.push(...peers.filter(Boolean).map((peer) => getPeerId(peer)));\r\n  }\r\n\r\n  const recentRepliers = ((message as Message.message).replies)?.recent_repliers;\r\n  if(recentRepliers?.length) {\r\n    peerIds.push(...recentRepliers.map((reply) => getPeerId(reply)));\r\n  }\r\n\r\n  return new Set(peerIds.filter(Boolean));\r\n}\r\n","export default function defineNotNumerableProperties<T extends any>(obj: T, names: (keyof T)[]) {\r\n  // const perf = performance.now();\r\n  const props = {writable: true, configurable: true};\r\n  const out: {[name in keyof T]?: typeof props} = {};\r\n  names.forEach((name) => {\r\n    if(!obj.hasOwnProperty(name)) {\r\n      out[name] = props;\r\n    }\r\n  });\r\n  Object.defineProperties(obj, out);\r\n  // console.log('defineNotNumerableProperties time:', performance.now() - perf);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {ForumTopic} from '../../../../layer';\r\nimport type {Dialog} from '../../appMessagesManager';\r\nimport type getDialogIndexKey from './getDialogIndexKey';\r\n\r\nexport default function setDialogIndex(\r\n  dialog: Dialog | ForumTopic.forumTopic,\r\n  indexKey: ReturnType<typeof getDialogIndexKey>,\r\n  index: number\r\n) {\r\n  return (dialog as Dialog)[indexKey] = index;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat, ForumTopic as MTForumTopic, DialogPeer, Message, MessageAction, MessageMedia, MessagesForumTopics, MessagesPeerDialogs, Update, Peer} from '../../layer';\r\nimport type {Dialog, ForumTopic, MyMessage} from '../appManagers/appMessagesManager';\r\nimport type DATABASE_STATE from '../../config/databases/state';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport SearchIndex from '../searchIndex';\r\nimport {SliceEnd} from '../../helpers/slicedArray';\r\nimport {MyDialogFilter} from './filters';\r\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, NULL_PEER_ID, REAL_FOLDERS, REAL_FOLDER_ID} from '../mtproto/mtproto_config';\r\nimport {MaybePromise, NoneToVoidFunction} from '../../types';\r\nimport ctx from '../../environment/ctx';\r\nimport AppStorage from '../storage';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport getServerMessageId from '../appManagers/utils/messageId/getServerMessageId';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport getDialogIndexKey from '../appManagers/utils/dialogs/getDialogIndexKey';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport getDialogIndex from '../appManagers/utils/dialogs/getDialogIndex';\r\nimport getPeerIdsFromMessage from '../appManagers/utils/messages/getPeerIdsFromMessage';\r\nimport {AppStoragesManager} from '../appManagers/appStoragesManager';\r\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\r\nimport setDialogIndex from '../appManagers/utils/dialogs/setDialogIndex';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport {BroadcastEvents} from '../rootScope';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport makeError from '../../helpers/makeError';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport {logger} from '../logger';\r\n\r\nexport type FolderDialog = {\r\n  dialog: Dialog,\r\n  index: number\r\n};\r\n\r\nexport type Folder = {\r\n  dialogs: (Dialog | ForumTopic)[],\r\n  id: number,\r\n  unreadMessagesCount: number,\r\n  unreadPeerIds: Set<PeerId>,\r\n  unreadUnmutedPeerIds: Set<PeerId>,\r\n  dispatchUnreadTimeout?: number\r\n};\r\n\r\nexport const GLOBAL_FOLDER_ID: REAL_FOLDER_ID = undefined;\r\n\r\n// let spentTime = 0;\r\nexport default class DialogsStorage extends AppManager {\r\n  private storage: AppStoragesManager['storages']['dialogs'];\r\n\r\n  private dialogs: {[peerId: PeerId]: Dialog};\r\n\r\n  private folders: {[folderId: number]: Folder};\r\n\r\n  private allDialogsLoaded: {[folder_id: number]: boolean};\r\n  private dialogsOffsetDate: {[folder_id: number]: number};\r\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\r\n  private dialogsNum: number;\r\n\r\n  private dialogsIndex: SearchIndex<PeerId>;\r\n\r\n  private cachedResults: {\r\n    query: string,\r\n    count: number,\r\n    dialogs: (Dialog | ForumTopic)[],\r\n    folderId: number\r\n  };\r\n\r\n  private forumTopics: Map<PeerId, {\r\n    topics: Map<number, ForumTopic>,\r\n    deletedTopics: Set<number>,\r\n    getTopicPromises: Map<number, CancellablePromise<ForumTopic>>,\r\n    index: SearchIndex<ForumTopic['id']>,\r\n    getTopicsPromise?: Promise<any>\r\n  }>;\r\n\r\n  private log = logger('DIALOGS');\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    const onFilterUpdate = (filter: MyDialogFilter) => {\r\n      const dialogs = this.getCachedDialogs(false);\r\n      for(let i = 0; i < dialogs.length; ++i) {\r\n        this.processDialogForFilter(dialogs[i], filter);\r\n      }\r\n    };\r\n\r\n    this.rootScope.addEventListener('filter_order', () => {\r\n      const dialogs = this.getCachedDialogs(false);\r\n      // const indexKeys: ReturnType<DialogsStorage['getDialogIndexKey']>[] = [];\r\n      for(const filterId in this.folders) {\r\n        if(+filterId > 1) {\r\n          delete this.folders[filterId];\r\n        }\r\n\r\n        // indexKeys.push(this.getDialogIndexKey(+filterId));\r\n      }\r\n\r\n      for(let i = 0; i < dialogs.length; ++i) {\r\n        const dialog = dialogs[i];\r\n        // for(const indexKey of indexKeys) {\r\n        //   delete dialog[indexKey];\r\n        // }\r\n\r\n        this.processDialogForFilters(dialog);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('filter_update', onFilterUpdate);\r\n    this.rootScope.addEventListener('filter_new', onFilterUpdate);\r\n\r\n    this.rootScope.addEventListener('filter_delete', (filter) => {\r\n      const dialogs = this.getCachedDialogs(false);\r\n\r\n      const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\r\n      for(let i = 0; i < dialogs.length; ++i) {\r\n        const dialog = dialogs[i];\r\n        delete dialog[indexKey];\r\n      }\r\n\r\n      delete this.folders[filter.id];\r\n    });\r\n\r\n    this.rootScope.addEventListener('dialog_notify_settings', (dialog) => {\r\n      this.processChangedUnreadOrUnmuted(dialog.peerId);\r\n    });\r\n\r\n    this.rootScope.addEventListener('chat_update', (chatId) => {\r\n      const peerId = chatId.toPeerId(true);\r\n      const dialog = this.getDialogOnly(peerId);\r\n      if(dialog && !this.canSaveDialog(peerId, dialog)) {\r\n        this.dropDialogOnDeletion(peerId);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('chat_toggle_forum', ({chatId, enabled}) => {\r\n      const peerId = chatId.toPeerId(true);\r\n      if(!enabled) {\r\n        this.flushForumTopicsCache(peerId);\r\n      }\r\n\r\n      this.processChangedUnreadOrUnmuted(peerId);\r\n    });\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateFolderPeers: this.onUpdateFolderPeers,\r\n\r\n      updateDialogPinned: this.onUpdateDialogPinned,\r\n\r\n      updateChannelPinnedTopic: this.onUpdateChannelPinnedTopic,\r\n\r\n      updatePinnedDialogs: this.onUpdatePinnedDialogs,\r\n\r\n      updateChannelPinnedTopics: this.onUpdateChannelPinnedTopics,\r\n\r\n      updateChannelViewForumAsMessages: this.onUpdateChannelViewForumAsMessages\r\n    });\r\n\r\n    return Promise.all([\r\n      this.appStateManager.getState(),\r\n      this.appStoragesManager.loadStorage('dialogs')\r\n    ]).then(([state, {results: dialogs, storage}]) => {\r\n      this.storage = storage;\r\n      this.dialogs = this.storage.getCache();\r\n\r\n      for(const folderId of REAL_FOLDERS) {\r\n        const order = state.pinnedOrders[folderId];\r\n        if(!order) {\r\n          continue;\r\n        }\r\n\r\n        const _order = this.getPinnedOrders(folderId);\r\n        _order.splice(0, _order.length, ...order);\r\n      }\r\n\r\n      if(dialogs.length) {\r\n        AppStorage.freezeSaving<typeof DATABASE_STATE>(this.setDialogsFromState.bind(this, dialogs), ['chats', 'dialogs', 'messages', 'users']);\r\n      }\r\n\r\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\r\n\r\n      if(dialogs.length) {\r\n        this.appDraftsManager.addMissedDialogs();\r\n      }\r\n    });\r\n  }\r\n\r\n  public indexMyDialog() {\r\n    const peerId = this.appUsersManager.getSelf().id.toPeerId(false);\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(dialog) {\r\n      const peerText = this.appPeersManager.getPeerSearchText(peerId);\r\n      this.dialogsIndex.indexObject(peerId, peerText);\r\n    }\r\n  }\r\n\r\n  private setDialogsFromState(dialogs: Dialog[]) {\r\n    for(let i = 0, length = dialogs.length; i < length; ++i) {\r\n      const dialog = dialogs[i];\r\n      if(!dialog) {\r\n        continue;\r\n      }\r\n\r\n      // if(dialog.peerId !== SERVICE_PEER_ID) {\r\n      dialog.top_message = getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\r\n      // }\r\n\r\n      if(dialog.topMessage) {\r\n        this.appMessagesManager.saveMessages([dialog.topMessage]);\r\n      }\r\n\r\n      for(let i = 0; i <= 21; ++i) {\r\n        const indexKey: ReturnType<typeof getDialogIndexKey> = `index_${i}` as any;\r\n        delete dialog[indexKey];\r\n      }\r\n      // delete dialog.indexes;\r\n\r\n      this.saveDialog({\r\n        dialog,\r\n        ignoreOffsetDate: true\r\n      });\r\n\r\n      // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\r\n      const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\r\n      if(!message) {\r\n        this.appMessagesManager.reloadConversation(dialog.peerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public isDialogsLoaded(folderId: number) {\r\n    return !!this.allDialogsLoaded[folderId];\r\n  }\r\n\r\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\r\n    const isForum = this.isFilterIdForForum(folderId);\r\n\r\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\r\n      this.allDialogsLoaded[FOLDER_ID_ALL] = loaded;\r\n      this.allDialogsLoaded[FOLDER_ID_ARCHIVE] = loaded;\r\n    } else {\r\n      if(isForum) {\r\n        defineNotNumerableProperties(this.allDialogsLoaded, [folderId]);\r\n      }\r\n\r\n      this.allDialogsLoaded[folderId] = loaded;\r\n    }\r\n\r\n    if(isForum) {\r\n      return;\r\n    }\r\n\r\n    if(Array.from(REAL_FOLDERS).every((folderId) => this.allDialogsLoaded[folderId])) {\r\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\r\n    }\r\n\r\n    this.saveAllDialogsLoaded();\r\n  }\r\n\r\n  private saveAllDialogsLoaded() {\r\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\r\n  }\r\n\r\n  public clear = (init = false) => {\r\n    if(!init) {\r\n      this.storage.clear();\r\n\r\n      this.allDialogsLoaded = {};\r\n      this.saveAllDialogsLoaded();\r\n\r\n      // * clear not numerable properties\r\n      this.pinnedOrders = Object.assign({}, this.pinnedOrders);\r\n      for(const folderId of REAL_FOLDERS) {\r\n        this.resetPinnedOrder(folderId);\r\n      }\r\n      this.savePinnedOrders();\r\n    } else {\r\n      this.allDialogsLoaded = {};\r\n      this.pinnedOrders = {};\r\n      for(const folderId of REAL_FOLDERS) {\r\n        this.pinnedOrders[folderId] = [];\r\n      }\r\n    }\r\n\r\n    this.forumTopics = new Map();\r\n    this.folders = {};\r\n    this.dialogsOffsetDate = {};\r\n    this.dialogsNum = 0;\r\n    this.dialogsIndex = this.createSearchIndex();\r\n    this.cachedResults = {\r\n      query: '',\r\n      count: 0,\r\n      dialogs: [],\r\n      folderId: 0\r\n    };\r\n  };\r\n\r\n  private createSearchIndex<T>() {\r\n    return new SearchIndex<T>({\r\n      clearBadChars: true,\r\n      ignoreCase: true,\r\n      latinize: true,\r\n      includeTag: true\r\n    });\r\n  }\r\n\r\n  public handleDialogUnpinning(dialog: Dialog | ForumTopic, folderId: number) {\r\n    delete dialog.pFlags.pinned;\r\n    indexOfAndSplice(this.getPinnedOrders(folderId), this.isFilterIdForForum(folderId) ? (dialog as ForumTopic).id : dialog.peerId);\r\n    this.savePinnedOrders();\r\n  }\r\n\r\n  public savePinnedOrders() {\r\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\r\n  }\r\n\r\n  public resetPinnedOrder(folderId: number) {\r\n    this.getPinnedOrders(folderId).length = 0;\r\n  }\r\n\r\n  public getPinnedOrders(folderId: number) {\r\n    let orders = this.pinnedOrders[folderId];\r\n    if(!orders && this.isFilterIdForForum(folderId)) {\r\n      defineNotNumerableProperties(this.pinnedOrders, [folderId]);\r\n      orders = this.pinnedOrders[folderId] = [];\r\n    }\r\n\r\n    return orders;\r\n  }\r\n\r\n  public isDialogPinned(peerId: PeerId, folderId: number) {\r\n    const filter = this.filtersStorage.getFilter(folderId);\r\n    let isPinned: boolean;\r\n    if(filter) {\r\n      isPinned = filter.pinnedPeerIds.indexOf(peerId) !== -1;\r\n    } else {\r\n      isPinned = !!this.getDialogOnly(peerId).pFlags.pinned;\r\n    }\r\n\r\n    return isPinned;\r\n  }\r\n\r\n  public getOffsetDate(folderId: number): number {\r\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\r\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\r\n      return Math.min(...Array.from(REAL_FOLDERS).sort((a, b) => a - b));\r\n    }\r\n\r\n    return offsetDate;\r\n  }\r\n\r\n  private generateFolder(id: number) {\r\n    const folder: Folder = {\r\n      dialogs: [],\r\n      id,\r\n      unreadMessagesCount: 0,\r\n      unreadPeerIds: new Set(),\r\n      unreadUnmutedPeerIds: new Set()\r\n    };\r\n\r\n    defineNotNumerableProperties(folder, ['dispatchUnreadTimeout']);\r\n\r\n    return folder;\r\n  }\r\n\r\n  public getFolder(id: number) {\r\n    return this.folders[id] ??= this.generateFolder(id);\r\n  }\r\n\r\n  public isFilterIdForForum(filterId: number) {\r\n    return filterId && filterId < 0;\r\n  }\r\n\r\n  public getFilterIdForForum(forumTopic: ForumTopic) {\r\n    return forumTopic.peerId;\r\n  }\r\n\r\n  public getDialogKey(dialog: Dialog | ForumTopic) {\r\n    return this.isTopic(dialog) ? dialog.id : dialog.peerId;\r\n  }\r\n\r\n  public getFolderDialogs(id: number, skipMigrated = true): Folder['dialogs'] {\r\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\r\n      return this.getCachedDialogs(skipMigrated);\r\n    }\r\n\r\n    const folder = this.getFolder(id);\r\n    if(this.isFilterIdForForum(id)) {\r\n      return skipMigrated ? folder.dialogs.filter((forumTopic) => !(forumTopic as ForumTopic).pFlags.hidden) : folder.dialogs;\r\n    }\r\n\r\n    return skipMigrated ? folder.dialogs.filter((dialog) => (dialog as Dialog).migratedTo === undefined) : folder.dialogs;\r\n  }\r\n\r\n  public getNextDialog(currentPeerId: PeerId, next: boolean, filterId: number) {\r\n    const folder = this.getFolderDialogs(filterId, true);\r\n    let dialog: Folder['dialogs'][0];\r\n    if(!currentPeerId) {\r\n      if(next) {\r\n        dialog = folder[0];\r\n      }\r\n    } else {\r\n      const idx = folder.findIndex((dialog) => dialog.peerId === currentPeerId);\r\n      if(idx !== -1) {\r\n        const nextIndex = next ? idx + 1 : idx - 1;\r\n        dialog = folder[nextIndex];\r\n      }\r\n    }\r\n\r\n    return dialog;\r\n  }\r\n\r\n  public getDialogIndexKeyByFilterId(filterId: number) {\r\n    if(this.isFilterIdForForum(filterId)) return getDialogIndexKey();\r\n    if(REAL_FOLDERS.has(filterId)) return getDialogIndexKey(filterId as REAL_FOLDER_ID);\r\n    const filter = this.filtersStorage.getFilter(filterId);\r\n    return getDialogIndexKey(filter.localId);\r\n  }\r\n\r\n  private isDialogUnmuted(dialog: Dialog | ForumTopic) {\r\n    return !this.appNotificationsManager.isPeerLocalMuted({\r\n      peerId: dialog.peerId,\r\n      respectType: true,\r\n      threadId: this.isTopic(dialog) ? (dialog as ForumTopic).id : undefined\r\n    });\r\n  }\r\n\r\n  public getFolderUnreadCount(filterId: number) {\r\n    const folder = this.getFolder(filterId);\r\n    return {unreadUnmutedCount: folder.unreadUnmutedPeerIds.size, unreadCount: folder.unreadPeerIds.size};\r\n  }\r\n\r\n  public getCachedDialogs(skipMigrated?: boolean) {\r\n    const arrays = Array.from(REAL_FOLDERS).map((folderId) => this.getFolderDialogs(folderId, skipMigrated));\r\n    return [].concat(...arrays) as Dialog[];\r\n  }\r\n\r\n  private setDialogIndexInFilter(\r\n    dialog: Dialog | ForumTopic,\r\n    indexKey: ReturnType<typeof getDialogIndexKey>,\r\n    filter?: MyDialogFilter\r\n  ) {\r\n    // if(this.isTopic(dialog)) {\r\n    //   return dialog['index_0'];\r\n    // }\r\n\r\n    let index: number;\r\n\r\n    const isTopic = this.isTopic(dialog);\r\n    const isRealFolder = isTopic || REAL_FOLDERS.has(filter.id);\r\n    /* if(isRealFolder) {\r\n      // index = getDialogIndex(dialog, indexKey);\r\n      index = this.generateIndexForDialog(dialog, true);\r\n    } else  */if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\r\n      const pinnedIds = isTopic ?\r\n        this.getPinnedOrders(this.getFilterIdForForum(dialog)) :\r\n        filter.pinnedPeerIds;\r\n\r\n      const pinnedKey = this.getDialogKey(dialog);\r\n      const pinnedIndex = pinnedIds.indexOf(pinnedKey);\r\n\r\n      if(pinnedIndex !== -1) {\r\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(pinnedIds.length - 1 - pinnedIndex), true);\r\n      } else if(dialog.pFlags?.pinned || isRealFolder) {\r\n        index = this.generateIndexForDialog(dialog, true, undefined, !isRealFolder);\r\n      } else {\r\n        index = getDialogIndex(dialog) ?? this.generateIndexForDialog(dialog, true);\r\n      }\r\n    }\r\n\r\n    // if(!dialog.hasOwnProperty(indexKey)) {\r\n    //   defineNotNumerableProperties(dialog, [indexKey]);\r\n    // }\r\n\r\n    return setDialogIndex(dialog, indexKey, index);\r\n  }\r\n\r\n  public getDialog(peerId: PeerId, folderId?: number, topicId?: number, skipMigrated = true): [Folder['dialogs'][0], number] | [] {\r\n    const folders: Folder['dialogs'][] = [];\r\n\r\n    if(topicId) {\r\n      folderId = peerId;\r\n      // skipMigrated = false;\r\n    }\r\n\r\n    if(folderId === undefined) {\r\n      folders.push(...Array.from(REAL_FOLDERS).map((folderId) => this.getFolder(folderId).dialogs as Dialog[]));\r\n    } else {\r\n      folders.push(this.getFolderDialogs(folderId, false) as Dialog[]);\r\n    }\r\n\r\n    const verify: (d: Folder['dialogs'][0]) => boolean = topicId ?\r\n      (d) => (d as ForumTopic).id === topicId :\r\n      (d) => (d as Dialog).peerId === peerId;\r\n    for(const folder of folders) {\r\n      let i = 0, skipped = 0;\r\n      for(let length = folder.length; i < length; ++i) {\r\n        const dialog = folder[i];\r\n        if(verify(dialog)) {\r\n          return [dialog, i - skipped];\r\n        } else if(skipMigrated && ((dialog as ForumTopic).pFlags.hidden || (dialog as Dialog).migratedTo !== undefined)) {\r\n          ++skipped;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  public getDialogOnly(peerId: PeerId) {\r\n    return this.dialogs[peerId];\r\n  }\r\n\r\n  public getDialogOrTopic(peerId: PeerId, topicId?: number) {\r\n    return topicId ? this.getForumTopic(peerId, topicId) : this.dialogs[peerId];\r\n  }\r\n\r\n  public getDialogIndex(\r\n    peerId: PeerId | Parameters<typeof getDialogIndex>[0],\r\n    indexKey: ReturnType<typeof getDialogIndexKey>,\r\n    topicId?: number\r\n  ) {\r\n    const dialog = isObject(peerId) ? peerId : this.getDialogOrTopic(peerId, topicId);\r\n    return getDialogIndex(dialog, indexKey);\r\n  }\r\n\r\n  /*\r\n  var date = Date.now() / 1000 | 0;\r\n  var m = date * 0x10000;\r\n\r\n  var k = (date + 1) * 0x10000;\r\n  k - m;\r\n  65536\r\n  */\r\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\r\n    date ??= tsNow(true) + this.timeManager.getServerTimeOffset();\r\n    return (date * 0x10000) + (isPinned ? 0 : (++this.dialogsNum & 0xFFFF));\r\n  }\r\n\r\n  // public makeFilterForTopics(id: number): MyDialogFilter {\r\n  //   return {\r\n  //     _: 'dialogFilter',\r\n  //     id,\r\n\r\n  //   };\r\n  // }\r\n\r\n  public isTopic(dialog: Dialog | ForumTopic): dialog is ForumTopic {\r\n    return 'id' in dialog;\r\n  }\r\n\r\n  public processDialogForFilters(dialog: Dialog | ForumTopic, noIndex?: boolean) {\r\n    // let perf = performance.now();\r\n    if(this.isTopic(dialog)) {\r\n      this.processDialogForFilter(dialog, undefined, noIndex);\r\n      return;\r\n    }\r\n\r\n    const filters = this.filtersStorage.getFilters();\r\n    for(const id in filters) {\r\n      const filter = filters[id];\r\n      this.processDialogForFilter(dialog, filter, noIndex);\r\n    }\r\n    // spentTime += (performance.now() - perf);\r\n    // console.log('generate index time:', spentTime);\r\n  }\r\n\r\n  public processDialogForFilter(\r\n    dialog: Dialog | ForumTopic,\r\n    filter?: MyDialogFilter,\r\n    noIndex?: boolean\r\n  ) {\r\n    const isTopic = this.isTopic(dialog);\r\n    const folderId = isTopic ? this.getFilterIdForForum(dialog) : filter.id;\r\n\r\n    const indexKey = isTopic ? 'index_0' : this.getDialogIndexKeyByFilterId(folderId);\r\n    const folder = this.getFolder(folderId);\r\n    const dialogs = folder.dialogs;\r\n\r\n    const cmp: (d: typeof dialog) => boolean = isTopic ?\r\n      ((d: ForumTopic) => d.id === dialog.id) as any :\r\n      ((d: Dialog) => d.peerId === dialog.peerId) as any;\r\n    const wasIndex = dialogs.findIndex(cmp);\r\n    const wasDialog = dialogs[wasIndex];\r\n    const wasDialogIndex = this.getDialogIndex(wasDialog, indexKey);\r\n\r\n    if(noIndex && folderId > FOLDER_ID_ARCHIVE) {\r\n      noIndex = undefined;\r\n    }\r\n\r\n    const newDialogIndex = noIndex ? undefined : this.setDialogIndexInFilter(dialog, indexKey, filter);\r\n\r\n    if(wasDialogIndex === newDialogIndex) {\r\n      return false;\r\n    }\r\n\r\n    if(!!wasDialogIndex !== !!newDialogIndex) {\r\n      this.prepareFolderUnreadCountModifyingByDialog(folderId, dialog, !!newDialogIndex);\r\n    }\r\n\r\n    if(wasIndex !== -1) {\r\n      dialogs.splice(wasIndex, 1);\r\n    }\r\n\r\n    if(newDialogIndex) {\r\n      insertInDescendSortedArray(dialogs, dialog, (dialog) => this.getDialogIndex(dialog, indexKey), -1);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public prepareDialogUnreadCountModifying(dialog: Dialog | ForumTopic, toggle?: boolean) {\r\n    const isTopic = this.isTopic(dialog);\r\n    const callbacks: NoneToVoidFunction[] = [];\r\n\r\n    const folderId = isTopic ? this.getFilterIdForForum(dialog) : dialog.folder_id;\r\n    callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(folderId, dialog, toggle));\r\n\r\n    if(!isTopic) {\r\n      const filters = this.filtersStorage.getFilters();\r\n      for(const id in filters) {\r\n        const filter = filters[id];\r\n        if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\r\n          callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, toggle));\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => !toggle && callbacks.forEach((callback) => callback());\r\n  }\r\n\r\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: Dialog | ForumTopic, toggle?: boolean) {\r\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\r\n    const wasUnmuted = this.isDialogUnmuted(dialog);\r\n\r\n    if(toggle !== undefined) {\r\n      const addMessagesCount = toggle ? wasUnreadCount : -wasUnreadCount;\r\n      // this.modifyFolderUnreadCount(folderId, addMessagesCount, !!wasUnreadCount, wasUnreadCount && wasUnmuted, dialog);\r\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, toggle && !!wasUnreadCount, toggle && !!wasUnreadCount && wasUnmuted, dialog);\r\n      return;\r\n    }\r\n\r\n    return () => {\r\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\r\n      const newUnmuted = this.isDialogUnmuted(dialog);\r\n\r\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\r\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!newUnreadCount, newUnreadCount && newUnmuted, dialog);\r\n    };\r\n  }\r\n\r\n  public modifyFolderUnreadCount(\r\n    folderId: number,\r\n    addMessagesCount: number,\r\n    toggleDialog: boolean,\r\n    toggleUnmuted: boolean,\r\n    dialog: Dialog | ForumTopic\r\n  ) {\r\n    const {peerId} = dialog;\r\n    const isForum = this.appPeersManager.isForum(peerId);\r\n    const isTopic = this.isTopic(dialog);\r\n    if(isForum && !isTopic) {\r\n      const forumUnreadCount = this.getForumUnreadCount(peerId);\r\n      if(forumUnreadCount instanceof Promise) {\r\n        forumUnreadCount.then(({count, hasUnmuted}) => {\r\n          dialog = this.getDialogOnly(peerId);\r\n          const folder = this.getFolder(folderId);\r\n          if(\r\n            !dialog ||\r\n            !this.appPeersManager.isForum(peerId) ||\r\n            !folder ||\r\n            !folder.dialogs.some((dialog) => dialog.peerId === peerId)\r\n          ) {\r\n            return;\r\n          }\r\n\r\n          this.modifyFolderUnreadCount(folderId, 0, false, false, dialog);\r\n        });\r\n\r\n        return;\r\n      } else {\r\n        addMessagesCount = 0;\r\n        toggleDialog = forumUnreadCount.count > 0;\r\n        toggleUnmuted = forumUnreadCount.hasUnmuted;\r\n      }\r\n    }\r\n\r\n    const folder = this.getFolder(folderId);\r\n    if(addMessagesCount) {\r\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\r\n    }\r\n\r\n    const key = this.getDialogKey(dialog);\r\n    if(toggleDialog) {\r\n      folder.unreadPeerIds.add(key);\r\n    } else {\r\n      folder.unreadPeerIds.delete(key);\r\n    }\r\n\r\n    if(toggleUnmuted) {\r\n      folder.unreadUnmutedPeerIds.add(key);\r\n    } else {\r\n      folder.unreadUnmutedPeerIds.delete(key);\r\n    }\r\n\r\n    folder.dispatchUnreadTimeout ??= ctx.setTimeout(() => {\r\n      folder.dispatchUnreadTimeout = undefined;\r\n      const _folder = {...folder};\r\n      delete _folder.dialogs;\r\n      this.rootScope.dispatchEvent('folder_unread', _folder);\r\n\r\n      if(isTopic) { // * refresh forum dialog unread count\r\n        this.processChangedUnreadOrUnmuted(peerId);\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  public processChangedUnreadOrUnmuted(peerId: PeerId) {\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(!dialog) {\r\n      return;\r\n    }\r\n\r\n    this.processDialogForFilters(dialog);\r\n    this.prepareDialogUnreadCountModifying(dialog)(); // * because counter won't be changed if only changed muted status\r\n    this.rootScope.dispatchEvent('dialog_unread', {\r\n      peerId,\r\n      dialog\r\n    });\r\n  }\r\n\r\n  public generateIndexForDialog(\r\n    dialog: Dialog | ForumTopic,\r\n    justReturn?: boolean,\r\n    message?: MyMessage,\r\n    noPinnedOrderUpdate?: boolean\r\n  ) {\r\n    if(!justReturn/*  && !isTopic */) {\r\n      return;\r\n    }\r\n\r\n    const isTopic = this.isTopic(dialog);\r\n    let topDate = 0, isPinned: boolean;\r\n    if((dialog as ForumTopic).pFlags.hidden) { // general topic must be first\r\n      topDate = this.generateDialogPinnedDateByIndex(0xFFF);\r\n      isPinned = true;\r\n    } else if(dialog.pFlags.pinned && !noPinnedOrderUpdate) {\r\n      topDate = this.generateDialogPinnedDate(dialog);\r\n      isPinned = true;\r\n    } else {\r\n      const {peerId} = dialog;\r\n      message ||= this.appMessagesManager.getMessageByPeer(peerId, dialog.top_message);\r\n\r\n      topDate = (message as Message.message)?.date || topDate;\r\n\r\n      if(!isTopic) {\r\n        const channelId = this.appPeersManager.isChannel(peerId) && peerId.toChatId();\r\n        if(channelId) {\r\n          const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\r\n          if(!topDate || (channel.date && channel.date > topDate)) {\r\n            topDate = channel.date;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(\r\n        dialog.draft?._ === 'draftMessage' &&\r\n        dialog.draft.date > topDate\r\n      ) {\r\n        topDate = dialog.draft.date;\r\n      }\r\n    }\r\n\r\n    topDate ||= tsNow(true);\r\n\r\n    const index = this.generateDialogIndex(topDate, isPinned);\r\n    if(justReturn) {\r\n      return index;\r\n    }\r\n\r\n    const indexKey = getDialogIndexKey((dialog as Dialog).folder_id);\r\n    setDialogIndex(dialog, indexKey, index);\r\n  }\r\n\r\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\r\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\r\n  }\r\n\r\n  public generateDialogPinnedDate(dialog: Dialog | ForumTopic) {\r\n    const isTopic = this.isTopic(dialog);\r\n    const order = this.getPinnedOrders(isTopic ? this.getFilterIdForForum(dialog) : dialog.folder_id);\r\n\r\n    const dialogKey = this.getDialogKey(dialog);\r\n    let pinnedIndex = order.indexOf(dialogKey);\r\n    if(pinnedIndex === -1) {\r\n      order.unshift(dialogKey);\r\n      pinnedIndex = 0;\r\n\r\n      if(!isTopic) {\r\n        this.savePinnedOrders();\r\n      }\r\n    }\r\n\r\n    return this.generateDialogPinnedDateByIndex(order.length - 1 - pinnedIndex);\r\n  }\r\n\r\n  /* public generateDialog(peerId: PeerId) {\r\n    const dialog: Dialog = {\r\n      _: 'dialog',\r\n      pFlags: {},\r\n      peer: this.appPeersManager.getOutputPeer(peerId),\r\n      top_message: 0,\r\n      read_inbox_max_id: 0,\r\n      read_outbox_max_id: 0,\r\n      unread_count: 0,\r\n      unread_mentions_count: 0,\r\n      notify_settings: {\r\n        _: 'peerNotifySettings',\r\n      },\r\n    };\r\n\r\n    return dialog;\r\n  } */\r\n\r\n  public setDialogToState(dialog: Dialog | ForumTopic) {\r\n    if(this.isTopic(dialog)) {\r\n      return;\r\n    }\r\n\r\n    const {peerId, pts} = dialog;\r\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\r\n    const messagesStorage = this.appMessagesManager.getHistoryMessagesStorage(peerId);\r\n    const history = historyStorage.history.slice;\r\n    let incomingMessage: MyMessage;\r\n    for(let i = 0, length = history.length; i < length; ++i) {\r\n      const mid = history[i];\r\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\r\n      if(message && !message.pFlags.is_outgoing/*  || peerId === SERVICE_PEER_ID */) {\r\n        incomingMessage = message;\r\n\r\n        const peerIds = getPeerIdsFromMessage(message);\r\n        this.peersStorage.requestPeersForKey(peerIds, `topMessage_${peerId}`);\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    dialog.topMessage = incomingMessage;\r\n\r\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\r\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\r\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\r\n      dialog.unread_count = 0;\r\n    }\r\n\r\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\r\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\r\n    // CAN TOUCH NOW\r\n\r\n    if(peerId.isAnyChat() && pts) {\r\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\r\n      dialog.pts = newPts;\r\n    }\r\n\r\n    this.storage.set({\r\n      [peerId]: dialog\r\n    });\r\n\r\n    this.peersStorage.requestPeer(peerId, 'dialog');\r\n\r\n    /* for(let id in this.filtersStorage.filters) {\r\n      const filter = this.filtersStorage.filters[id];\r\n\r\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\r\n\r\n      }\r\n    } */\r\n  }\r\n\r\n  public pushDialog({dialog, offsetDate, ignoreOffsetDate, saveGlobalOffset}: {\r\n    dialog: Dialog | ForumTopic,\r\n    offsetDate?: number,\r\n    ignoreOffsetDate?: boolean,\r\n    saveGlobalOffset?: boolean\r\n  }) {\r\n    const isTopic = this.isTopic(dialog);\r\n    const {folder_id, peerId} = dialog as Dialog;\r\n\r\n    if(isTopic) {\r\n      const forumTopics = this.getForumTopicsCache(peerId);\r\n      forumTopics.topics.set(dialog.id, dialog);\r\n    } else {\r\n      this.dialogs[peerId] = dialog;\r\n    }\r\n\r\n    offsetDate ??= this.getDialogOffsetDate(dialog);\r\n\r\n    // if(!isTopic) {\r\n    this.processDialogForFilters(dialog);\r\n    // }\r\n\r\n    if(offsetDate && !dialog.pFlags.pinned) {\r\n      if(!isTopic && saveGlobalOffset) {\r\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\r\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\r\n          this.setDialogOffsetDate(GLOBAL_FOLDER_ID, offsetDate);\r\n        }\r\n      }\r\n\r\n      const folderId = isTopic ? this.getFilterIdForForum(dialog) : folder_id;\r\n      const savedOffsetDate = this.dialogsOffsetDate[folderId];\r\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\r\n        // if(pos !== -1) {\r\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folderId)) {\r\n          this.dropDialog(peerId, isTopic ? this.getDialogKey(dialog) : undefined, true);\r\n          return;\r\n        }\r\n\r\n        this.setDialogOffsetDate(folderId, offsetDate);\r\n      }\r\n    }\r\n\r\n    this.setDialogToState(dialog);\r\n\r\n    // if(pos === -1) {\r\n    // this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\r\n    // }\r\n\r\n    // const indexKey = getDialogIndexKey(folder_id);\r\n    // /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, (dialog) => getDialogIndex(dialog, indexKey), -1);\r\n    /* if(pos !== -1 && pos !== newPos) {\r\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\r\n    } */\r\n  }\r\n\r\n  public dropDialogFromFolders(peerId: PeerId, topicId?: number, keepLocal?: boolean) {\r\n    const foundDialog = this.getDialog(peerId, undefined, topicId, false);\r\n    const [dialog, index] = foundDialog;\r\n    if(dialog) {\r\n      const filterId = topicId ?\r\n        this.getFilterIdForForum(dialog as ForumTopic) :\r\n        (dialog as Dialog).folder_id;\r\n\r\n      // const folder = this.getFolder(filterId);\r\n      // folder.dialogs.splice(index, 1);\r\n      const wasPinned = indexOfAndSplice(this.getPinnedOrders(filterId), this.getDialogKey(dialog)) !== undefined;\r\n\r\n      this.processDialogForFilters(dialog, true);\r\n\r\n      if(!keepLocal) {\r\n        if(topicId) {\r\n          const cache = this.getForumTopicsCache(peerId);\r\n          cache.index.indexObject(topicId, '');\r\n        } else {\r\n          this.dialogsIndex.indexObject(peerId, '');\r\n        }\r\n      }\r\n\r\n      if(wasPinned) {\r\n        this.savePinnedOrders();\r\n      }\r\n    }\r\n\r\n    return foundDialog;\r\n  }\r\n\r\n  public dropDialog(peerId: PeerId, topicId?: number, keepLocal?: boolean) {\r\n    const dialog = this.getDialogOrTopic(peerId, topicId);\r\n    const foundDialog = this.dropDialogFromFolders(peerId, topicId, keepLocal);\r\n    if(dialog) {\r\n      if(!keepLocal) {\r\n        if(topicId) {\r\n          this.getForumTopicsCache(peerId).topics.delete(topicId);\r\n        } else {\r\n          delete this.dialogs[peerId];\r\n        }\r\n      }\r\n\r\n      this.clearDialogFromState(dialog, keepLocal);\r\n    }\r\n\r\n    return foundDialog;\r\n  }\r\n\r\n  public clearDialogFromState(dialog: Dialog | ForumTopic, keepLocal: boolean) {\r\n    if(dialog._ === 'forumTopic') {\r\n      return;\r\n    }\r\n\r\n    const {peerId} = dialog;\r\n    this.peersStorage.requestPeersForKey([], `topMessage_${peerId}`);\r\n    this.peersStorage.releasePeer(peerId, 'dialog');\r\n    this.storage.delete(peerId, keepLocal);\r\n  }\r\n\r\n  public dropDialogWithEvent(peerId: PeerId, topicId?: number) {\r\n    const dropped = this.dropDialog(peerId, topicId);\r\n    if(dropped.length) {\r\n      this.rootScope.dispatchEvent('dialog_drop', dropped[0]);\r\n    }\r\n\r\n    return dropped;\r\n  }\r\n\r\n  /**\r\n   * leaving chat, leaving channel, deleting private dialog\r\n   */\r\n  public dropDialogOnDeletion(peerId: PeerId, topicId?: number) {\r\n    this.dropDialogWithEvent(peerId, topicId);\r\n\r\n    // * drop 'you joined this channel' service message\r\n    if(this.appPeersManager.isBroadcast(peerId)) {\r\n      const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\r\n      const mid = historyStorage?.channelJoinedMid;\r\n      if(mid) {\r\n        historyStorage.channelJoinedMid = undefined;\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateDeleteChannelMessages',\r\n          channel_id: peerId.toChatId(),\r\n          messages: [mid],\r\n          pts: undefined,\r\n          pts_count: undefined\r\n        });\r\n      }\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('peer_deleted', peerId);\r\n  }\r\n\r\n  public applyDialogs(result: MessagesPeerDialogs | MessagesForumTopics, peerId?: PeerId) {\r\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\r\n\r\n    const isForum = result._ === 'messages.forumTopics';\r\n    const items = (result as MessagesPeerDialogs).dialogs || (result as MessagesForumTopics).topics;\r\n    if(!isForum) {\r\n      // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\r\n      forEachReverse(result.dialogs, (dialog, idx) => {\r\n        if(dialog._ === 'dialogFolder') {\r\n          result.dialogs.splice(idx, 1);\r\n        }\r\n      });\r\n    } else {\r\n      this.processTopics(peerId, result);\r\n    }\r\n\r\n    assumeType<Folder['dialogs']>(items);\r\n\r\n    this.appUsersManager.saveApiUsers(result.users);\r\n    this.appChatsManager.saveApiChats(result.chats);\r\n    this.appMessagesManager.saveMessages(result.messages);\r\n\r\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\r\n\r\n    const updatedDialogs: BroadcastEvents['dialogs_multiupdate'] = new Map();\r\n    const getUpdateCache = (peerId: PeerId) => {\r\n      let cache = updatedDialogs.get(peerId);\r\n      if(!cache) {\r\n        updatedDialogs.set(peerId, cache = {});\r\n      }\r\n\r\n      return cache;\r\n    };\r\n\r\n    items.forEach((dialog) => {\r\n      const peerId = this.appPeersManager.getPeerId(dialog.peer);\r\n      let topMid = dialog.top_message;\r\n\r\n      const topPendingMid = this.appMessagesManager.pendingTopMsgs[peerId];\r\n      if(topPendingMid) {\r\n        const topPendingMessage = this.appMessagesManager.getMessageByPeer(peerId, topPendingMid) as MyMessage;\r\n        const topMessage = this.appMessagesManager.getMessageByPeer(peerId, topMid) as MyMessage;\r\n        if(!topMid || (topPendingMessage && (!topMessage || topPendingMessage?.date > topMessage?.date))) {\r\n          dialog.top_message = topMid = topPendingMid;\r\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMid;\r\n        }\r\n      }\r\n\r\n      /* const d = Object.assign({}, dialog);\r\n      if(peerId === 239602833) {\r\n        this.log.error('applyConversation lun', dialog, d);\r\n      } */\r\n\r\n      if(topMid || dialog.draft?._ === 'draftMessage') {\r\n        if(this.saveDialog({dialog})) {\r\n          const cache = getUpdateCache(peerId);\r\n\r\n          if(isForum) {\r\n            (cache.topics ??= new Map()).set(\r\n              (dialog as ForumTopic).id,\r\n              dialog as ForumTopic\r\n            );\r\n          } else {\r\n            cache.dialog = dialog as Dialog;\r\n          }\r\n        }\r\n      } else {\r\n        this.dropDialogWithEvent(peerId, isForum ? this.getDialogKey(dialog) : undefined);\r\n      }\r\n\r\n      const key = this.appMessagesManager.getUpdateAfterReloadKey(peerId, isForum ? this.getDialogKey(dialog) : undefined);\r\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[key];\r\n      if(updates !== undefined) {\r\n        const slicedUpdates = [...updates]; // ! have to clone set, otherwise will have infinite loop if element is inserted again\r\n        for(const update of slicedUpdates) {\r\n          updates.delete(update);\r\n          this.apiUpdatesManager.saveUpdate(update);\r\n        }\r\n\r\n        if(!updates.size) {\r\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[key];\r\n        }\r\n      }\r\n    });\r\n\r\n    if(updatedDialogs.size) {\r\n      this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\r\n    }\r\n  }\r\n\r\n  // ! do not use draft here, empty dialogs with drafts are excluded from .getDialogs response\r\n  private getDialogOffsetDate(dialog: Dialog | ForumTopic) {\r\n    const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\r\n    return message?.date || 0;\r\n  }\r\n\r\n  private setDialogOffsetDate(folderId: number, offsetDate: number) {\r\n    this.log('setting offset date', folderId, offsetDate);\r\n    return this.dialogsOffsetDate[folderId] = offsetDate;\r\n  }\r\n\r\n  public canSaveDialog(peerId: PeerId, dialog: Dialog | ForumTopic) {\r\n    if(peerId.isAnyChat()) {\r\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\r\n      // ! chatForbidden stays for chat where you're kicked\r\n      if(\r\n        chat._ === 'channelForbidden' ||\r\n        (chat as Chat.chat).pFlags.deactivated ||\r\n        // || chat._ === 'chatForbidden'\r\n        (chat as Chat.chat).pFlags.left\r\n        // || (chat as any).pFlags.kicked\r\n      ) {\r\n        return false;\r\n      }\r\n    } else if(this.appUsersManager.isDeleted(peerId.toUserId()) && !getServerMessageId(dialog.top_message)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Won't save migrated from peer, forbidden peers, left and kicked\r\n   */\r\n  public saveDialog({\r\n    dialog,\r\n    folderId,\r\n    ignoreOffsetDate,\r\n    saveGlobalOffset\r\n  }: {\r\n    dialog: Dialog | ForumTopic,\r\n    folderId?: REAL_FOLDER_ID,\r\n    ignoreOffsetDate?: boolean,\r\n    saveGlobalOffset?: boolean\r\n  }) {\r\n    const isTopic = this.isTopic(dialog);\r\n    const isDialog = !isTopic;\r\n\r\n    const peerId = this.appPeersManager.getPeerId(dialog.peer);\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n\r\n    const topicId = isTopic ? dialog.id = this.appMessagesIdsManager.generateMessageId(dialog.id, channelId) : undefined;\r\n    if(!isTopic) {\r\n      folderId ??= dialog.folder_id ?? FOLDER_ID_ALL;\r\n    }\r\n\r\n    if(!peerId) {\r\n      this.log.error('saveConversation no peerId???', dialog, folderId);\r\n      return false;\r\n    }\r\n\r\n    if(!isTopic && dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\r\n      this.log.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\r\n    }\r\n\r\n    if(isDialog && !channelId && peerId.isAnyChat()) {\r\n      const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\r\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\r\n        const migratedToPeer = this.appPeersManager.getPeerId(chat.migrated_to);\r\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\r\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\r\n        dialog.migratedTo = migratedToPeer;\r\n        // return;\r\n      }\r\n    }\r\n\r\n    if(isDialog && !this.canSaveDialog(peerId, dialog)) {\r\n      return false;\r\n    }\r\n\r\n    if(isTopic) {\r\n      const cache = this.getForumTopicsCache(peerId);\r\n      cache.index.indexObject(topicId, dialog.title);\r\n    } else if(isDialog && !dialog.migratedTo) {\r\n      const peerText = this.appPeersManager.getPeerSearchText(peerId);\r\n      this.dialogsIndex.indexObject(peerId, peerText);\r\n    }\r\n\r\n    const wasDialogBefore = this.getDialogOrTopic(peerId, topicId);\r\n\r\n    let mid: number, message: MyMessage;\r\n    if(dialog.top_message || true) {\r\n      mid = this.appMessagesIdsManager.generateMessageId(dialog.top_message, channelId);// dialog.top_message;\r\n\r\n      // preserve outgoing message\r\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\r\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\r\n        mid = wasDialogBefore.top_message;\r\n      }\r\n\r\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\r\n    }/*  else {\r\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\r\n      message = {\r\n        _: 'message',\r\n        id: mid,\r\n        mid,\r\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\r\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n        pFlags: {out: true},\r\n        date: 0,\r\n        message: ''\r\n      };\r\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\r\n    } */\r\n\r\n    // if(!message?.pFlags) {\r\n    //   this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\r\n    // }\r\n\r\n    dialog.top_message = mid;\r\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\r\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id, channelId);\r\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id, channelId);\r\n\r\n    if(isDialog && dialog.folder_id === undefined) {\r\n      if(dialog._ === 'dialog') {\r\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\r\n        dialog.folder_id = wasDialogBefore ? (wasDialogBefore as typeof dialog).folder_id : folderId;\r\n      }/*  else if(dialog._ === 'dialogFolder') {\r\n        dialog.folder_id = dialog.folder.id;\r\n      } */\r\n    }\r\n\r\n    dialog.draft = this.appDraftsManager.saveDraft({\r\n      peerId,\r\n      threadId: topicId,\r\n      draft: dialog.draft\r\n    });\r\n    dialog.peerId = peerId;\r\n    // dialog.indexes ??= {} as any;\r\n\r\n    // * Because we saved message without dialog present\r\n    if(message && message.pFlags.is_outgoing) {\r\n      const isOut = message.pFlags.out;\r\n      if(mid > dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id']) {\r\n        message.pFlags.unread = true;\r\n\r\n        if(!dialog.unread_count && !isOut) {\r\n          ++dialog.unread_count;\r\n        }\r\n      } else {\r\n        delete message.pFlags.unread;\r\n      }\r\n    }\r\n\r\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId, topicId);\r\n    const slice = historyStorage.history.slice;\r\n    if(!mid) {} else\r\n    /* if(historyStorage === undefined) { // warning\r\n      historyStorage.history.push(mid);\r\n    } else  */if(!slice.length || !slice.isEnd(SliceEnd.Bottom)) {  // * second condition will probably never happen, however, if it does, then it will fix slice with top_message\r\n      historyStorage.history.unshift(mid);\r\n      historyStorage.count ||= historyStorage.history.length;\r\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\r\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\r\n      }\r\n    } else if(isDialog && !wasDialogBefore) {\r\n      this.appMessagesManager.insertChannelJoinedService(peerId, historyStorage);\r\n    }\r\n\r\n    // * if set channel joined message\r\n    if(isDialog && dialog.top_message < historyStorage.history.first[0]) {\r\n      mid = dialog.top_message = historyStorage.history.first[0];\r\n      dialog.topMessage = this.appMessagesManager.getMessageByPeer(peerId, dialog.top_message);\r\n    }\r\n\r\n    historyStorage.maxId = mid;\r\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\r\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\r\n\r\n    this.appNotificationsManager.savePeerSettings({\r\n      peerId,\r\n      threadId: isTopic ? dialog.id : undefined,\r\n      settings: dialog.notify_settings\r\n    });\r\n\r\n    if(isDialog && channelId && dialog.pts) {\r\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\r\n    }\r\n\r\n    this.generateIndexForDialog(dialog);\r\n\r\n    if(wasDialogBefore) {\r\n      // fix unread count\r\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(wasDialogBefore);\r\n      safeReplaceObject(wasDialogBefore, dialog);\r\n      releaseUnreadCount();\r\n    }\r\n\r\n    this.pushDialog({\r\n      dialog,\r\n      offsetDate: message?.date,\r\n      ignoreOffsetDate,\r\n      saveGlobalOffset\r\n    });\r\n\r\n    if(isTopic) {\r\n      this.processTopicUpdate(dialog, wasDialogBefore as ForumTopic);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public processTopicUpdate(topic: ForumTopic, oldTopic?: ForumTopic) {\r\n    if(!oldTopic) {\r\n      return;\r\n    }\r\n\r\n    const {peerId, id: threadId} = topic;\r\n    const isIconChanged = topic.icon_emoji_id !== (oldTopic as ForumTopic).icon_emoji_id;\r\n    const isTitleChanged = topic.title !== (oldTopic as ForumTopic).title;\r\n    const isChanged = isIconChanged || isTitleChanged;\r\n\r\n    if(isIconChanged) {\r\n      this.rootScope.dispatchEvent('avatar_update', {peerId, threadId});\r\n    }\r\n\r\n    if(isChanged) {\r\n      this.rootScope.dispatchEvent('peer_title_edit', {peerId, threadId});\r\n    }\r\n  }\r\n\r\n  public getDialogs(options: {\r\n    query?: string,\r\n    offsetIndex?: number,\r\n    limit?: number,\r\n    filterId?: number,\r\n    skipMigrated?: boolean,\r\n    forceLocal?: boolean,\r\n    recursion?: boolean\r\n  }): MaybePromise<{\r\n    dialogs: Folder['dialogs'],\r\n    count: number,\r\n    isTopEnd: boolean,\r\n    isEnd: boolean\r\n  }> {\r\n    const {\r\n      query = '',\r\n      offsetIndex,\r\n      limit = 20,\r\n      filterId = FOLDER_ID_ALL,\r\n      skipMigrated = this.isFilterIdForForum(filterId),\r\n      forceLocal,\r\n      recursion\r\n    } = options;\r\n\r\n    const isForum = this.isFilterIdForForum(filterId);\r\n    if(!isForum && !REAL_FOLDERS.has(filterId)) {\r\n      const promises: Promise<any>[] = [];\r\n\r\n      const fillContactsResult = this.appUsersManager.fillContacts();\r\n      if(!fillContactsResult.cached) {\r\n        promises.push(fillContactsResult.promise);\r\n      }\r\n\r\n      const reloadMissingDialogsPromise = this.filtersStorage.reloadMissingPeerIds(filterId);\r\n      if(reloadMissingDialogsPromise) {\r\n        promises.push(reloadMissingDialogsPromise);\r\n      }\r\n\r\n      if(promises.length) {\r\n        return Promise.all(promises).then(() => {\r\n          return this.getDialogs(options);\r\n        });\r\n      }\r\n    }\r\n\r\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\r\n    const realFolderId/* : REAL_FOLDER_ID */ =\r\n      (!REAL_FOLDERS.has(filterId) || this.getOffsetDate(filterId)) && !isForum ?\r\n        GLOBAL_FOLDER_ID :\r\n        filterId/*  as REAL_FOLDER_ID */;\r\n    let curDialogStorage = this.getFolderDialogs(filterId, skipMigrated);\r\n\r\n    const indexKey = this.getDialogIndexKeyByFilterId(filterId);\r\n\r\n    if(query) {\r\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== filterId || recursion) {\r\n        this.cachedResults.query = query;\r\n        this.cachedResults.folderId = filterId;\r\n\r\n        const index = isForum ? this.getForumTopicsCache(filterId).index : this.dialogsIndex;\r\n        const results = index.search(query);\r\n\r\n        const dialogs: DialogsStorage['cachedResults']['dialogs'] = [];\r\n        if(isForum) for(const topicId of results) {\r\n          const topic = this.getForumTopic(filterId, topicId);\r\n          if(topic) {\r\n            dialogs.push(topic);\r\n          }\r\n        } else for(const peerId of results) {\r\n          const dialog = this.dialogs[peerId];\r\n          if(dialog && dialog.folder_id === filterId) {\r\n            dialogs.push(dialog);\r\n          }\r\n        }\r\n\r\n        dialogs.sort((d1, d2) => this.getDialogIndex(d2, indexKey) - this.getDialogIndex(d1, indexKey));\r\n        this.cachedResults.dialogs = dialogs;\r\n        this.cachedResults.count = dialogs.length;\r\n      }\r\n\r\n      curDialogStorage = this.cachedResults.dialogs;\r\n    } else {\r\n      this.cachedResults.query = '';\r\n    }\r\n\r\n    let offset = 0;\r\n    if(offsetIndex > 0) {\r\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\r\n        if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const loadedAll = this.isDialogsLoaded(realFolderId);\r\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\r\n    if((isForum ? false : query) || loadedAll || isEnoughDialogs || forceLocal) {\r\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\r\n      return {\r\n        dialogs,\r\n        count: loadedAll ? curDialogStorage.length : null,\r\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\r\n        isEnd: ((isForum ? false : query) || loadedAll) && (offset + limit) >= curDialogStorage.length\r\n      };\r\n    }\r\n\r\n    return this.appMessagesManager.getTopMessages({\r\n      limit,\r\n      folderId: realFolderId,\r\n      query,\r\n      offsetTopicId: isForum && query ? (curDialogStorage[curDialogStorage.length - 1] as ForumTopic)?.id : undefined\r\n    }).then((result) => {\r\n      if(query) {\r\n        return this.getDialogs({\r\n          ...options,\r\n          forceLocal: true,\r\n          recursion: true\r\n        });\r\n      }\r\n\r\n      // const curDialogStorage = this[folderId];\r\n      if(skipMigrated) {\r\n        curDialogStorage = this.getFolderDialogs(filterId, skipMigrated);\r\n      }\r\n\r\n      offset = 0;\r\n      if(offsetIndex > 0) {\r\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\r\n          if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\r\n\r\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\r\n      return {\r\n        dialogs,\r\n        count: result.count ?? curDialogStorage.length,\r\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\r\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\r\n        isEnd: result.isEnd\r\n      };\r\n    });\r\n  }\r\n\r\n  public async markFolderAsRead(folderId: number) {\r\n    const folder = this.getFolder(folderId);\r\n    const peerIds = [...folder.unreadPeerIds];\r\n    for(const peerId of peerIds) {\r\n      await this.appMessagesManager.markDialogUnread(peerId, true);\r\n    }\r\n  }\r\n\r\n  // * FORUMS SECTION\r\n\r\n  public flushForumTopicsCache(peerId: PeerId) {\r\n    const cache = this.forumTopics.get(peerId);\r\n    if(!cache) {\r\n      return;\r\n    }\r\n\r\n    const folder = this.folders[peerId];\r\n    if(folder) {\r\n      if(folder.dispatchUnreadTimeout) {\r\n        clearTimeout(folder.dispatchUnreadTimeout);\r\n      }\r\n\r\n      delete this.allDialogsLoaded[peerId];\r\n      delete this.pinnedOrders[peerId];\r\n      delete this.dialogsOffsetDate[peerId];\r\n      delete this.folders[peerId];\r\n    }\r\n\r\n    cache.topics.clear();\r\n\r\n    // for permanent delete\r\n    // this.forumTopics.delete(peerId);\r\n  }\r\n\r\n  public getForumTopicsCache(peerId: PeerId) {\r\n    let forumTopics = this.forumTopics.get(peerId);\r\n    if(!forumTopics) {\r\n      forumTopics = {\r\n        topics: new Map(),\r\n        deletedTopics: new Set(),\r\n        getTopicPromises: new Map(),\r\n        index: this.createSearchIndex()\r\n      };\r\n\r\n      this.forumTopics.set(peerId, forumTopics);\r\n    }\r\n\r\n    return forumTopics;\r\n  }\r\n\r\n  public getForumTopicById(peerId: PeerId, topicId?: number): Promise<ForumTopic> {\r\n    if(!this.appPeersManager.isForum(peerId)) {\r\n      return Promise.reject(makeError('CHANNEL_FORUM_MISSING'));\r\n    }\r\n\r\n    const cache = this.getForumTopicsCache(peerId);\r\n    let promise: CancellablePromise<ForumTopic>;\r\n    if(topicId) {\r\n      promise = cache.getTopicPromises.get(topicId);\r\n      if(promise) {\r\n        return promise;\r\n      }\r\n\r\n      if(cache.deletedTopics.has(topicId)) {\r\n        return Promise.resolve(undefined);\r\n      }\r\n\r\n      cache.getTopicPromises.set(topicId, promise = deferredPromise());\r\n    }\r\n\r\n    cache.getTopicsPromise ??= pause(0).then(() => {\r\n      const promises: {[topicId: number]: typeof promise} = {};\r\n      const ids: number[] = [];\r\n      for(const [topicId, promise] of cache.getTopicPromises) {\r\n        promises[topicId] = promise;\r\n        ids.push(getServerMessageId(topicId));\r\n      }\r\n\r\n      cache.getTopicPromises.clear();\r\n\r\n      const fullfillLeft = () => {\r\n        for(const topicId in promises) {\r\n          promises[topicId].resolve(undefined);\r\n          cache.deletedTopics.add(+topicId);\r\n        }\r\n      };\r\n\r\n      if(this.getForumTopicsCache(peerId) !== cache) {\r\n        fullfillLeft();\r\n        return;\r\n      }\r\n\r\n      return this.apiManager.invokeApi('channels.getForumTopicsByID', {\r\n        channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n        topics: ids\r\n      }).then((messagesForumTopics) => {\r\n        if(this.getForumTopicsCache(peerId) !== cache) {\r\n          return;\r\n        }\r\n\r\n        this.applyDialogs(messagesForumTopics, peerId);\r\n\r\n        messagesForumTopics.topics.forEach((forumTopic) => {\r\n          if(forumTopic._ === 'forumTopic') {\r\n            promises[forumTopic.id].resolve(forumTopic);\r\n            delete promises[peerId];\r\n          }\r\n        });\r\n\r\n        return messagesForumTopics;\r\n      }, () => {}).then(() => {\r\n        fullfillLeft();\r\n\r\n        cache.getTopicsPromise = undefined;\r\n        if(cache.getTopicPromises.size) {\r\n          this.getForumTopicById(peerId);\r\n        }\r\n      });\r\n    });\r\n\r\n    return promise || cache.getTopicsPromise;\r\n  }\r\n\r\n  // public getForumTopicById(peerId: PeerId, topicId: number) {\r\n  //   return this.getForumTopicsByID(peerId, topicId).then((result) => result.topics[0]);\r\n  // }\r\n\r\n  public getForumTopic(peerId: PeerId, topicId: number) {\r\n    const forumTopics = this.forumTopics.get(peerId);\r\n    return forumTopics?.topics?.get(topicId);\r\n  }\r\n\r\n  public getForumTopicOrReload(peerId: PeerId, topicId: number) {\r\n    const forumTopic = this.getForumTopic(peerId, topicId);\r\n    if(forumTopic) {\r\n      return forumTopic;\r\n    }\r\n\r\n    const cache = this.getForumTopicsCache(peerId);\r\n    return cache?.deletedTopics?.has(topicId) ? undefined : this.getForumTopicById(peerId, topicId);\r\n  }\r\n\r\n  public processTopics<T extends MaybePromise<{topics: MTForumTopic[], pts?: number}>>(peerId: PeerId, result: T) {\r\n    return callbackify(result, (result) => {\r\n      if('pts' in result) {\r\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), result.pts);\r\n      }\r\n\r\n      const peer = this.appPeersManager.getOutputPeer(peerId);\r\n      result.topics = result.topics.map((topic) => {\r\n        if(topic._ === 'forumTopicDeleted') {\r\n          return;\r\n        }\r\n\r\n        (topic as ForumTopic).peer = peer;\r\n        topic.id = this.appMessagesIdsManager.generateMessageId(topic.id, (peer as Peer.peerChannel).channel_id);\r\n        return topic;\r\n      }).filter(Boolean);\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public processTopicsPromise<T extends Promise<Parameters<DialogsStorage['processTopics']>[1]>>(peerId: PeerId, promise: T): T {\r\n    return promise.then((result) => {\r\n      this.processTopics(peerId, result);\r\n      return result;\r\n    }) as any;\r\n  }\r\n\r\n  public getForumUnreadCount(peerId: PeerId) {\r\n    if(!this.appPeersManager.isForum(peerId)) {\r\n      return;\r\n    }\r\n\r\n    const folder = this.getFolder(peerId);\r\n\r\n    const f = folder.dialogs.length >= 20 || this.isDialogsLoaded(peerId) ?\r\n      folder.dialogs.slice(0, 20) :\r\n      callbackify(this.getDialogs({filterId: peerId, limit: 20}), (result) => {\r\n        return result.dialogs;\r\n      });\r\n\r\n    return callbackify(f, (dialogs) => {\r\n      return {\r\n        count: dialogs.reduce((acc, v) => acc + +!!v.unread_count, 0),\r\n        hasUnmuted: dialogs.some((dialog) => dialog.unread_count && this.isDialogUnmuted(dialog))\r\n      };\r\n    });\r\n  }\r\n\r\n  // * FORUMS SECTION END\r\n\r\n  private handleDialogTogglePinned(dialog: Dialog | ForumTopic, pinned: boolean, folderId: number) {\r\n    if(dialog) {\r\n      if(!pinned) {\r\n        this.handleDialogUnpinning(dialog, folderId);\r\n      } else { // means set\r\n        dialog.pFlags.pinned = true;\r\n      }\r\n\r\n      this.generateIndexForDialog(dialog);\r\n    }\r\n\r\n    this.appMessagesManager.scheduleHandleNewDialogs(dialog.peerId, dialog);\r\n  }\r\n\r\n  private handleDialogsPinned(folderId: number, order: (Dialog['peerId'] | ForumTopic['id'])[]) {\r\n    const isForum = this.isFilterIdForForum(folderId);\r\n    this.resetPinnedOrder(folderId);\r\n    this.getPinnedOrders(folderId).push(...order);\r\n    this.savePinnedOrders();\r\n    order.reverse(); // index must be higher\r\n    const newPinned: {[id: typeof order[0]]: true} = {};\r\n    order.forEach((id) => {\r\n      newPinned[id] = true;\r\n\r\n      const peerId = isForum ? folderId : id;\r\n      const topicId = isForum ? id : undefined;\r\n\r\n      const dialog = this.getDialogOrTopic(peerId, topicId);\r\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\r\n      if(!dialog) {\r\n        return;\r\n      }\r\n\r\n      dialog.pFlags.pinned = true;\r\n      this.generateIndexForDialog(dialog);\r\n    });\r\n\r\n    const dialogs = this.getFolderDialogs(folderId, false);\r\n    for(const dialog of dialogs) {\r\n      if(!dialog.pFlags.pinned) {\r\n        break;\r\n      }\r\n\r\n      if(!newPinned[this.getDialogKey(dialog)]) {\r\n        delete dialog.pFlags.pinned;\r\n        this.generateIndexForDialog(dialog);\r\n        this.appMessagesManager.scheduleHandleNewDialogs(dialog.peerId, dialog);\r\n      }\r\n    }\r\n  }\r\n\r\n  // only 0 and 1 folders\r\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\r\n    // this.log('updateFolderPeers', update);\r\n    const peers = update.folder_peers;\r\n\r\n    peers.forEach((folderPeer) => {\r\n      const {folder_id, peer} = folderPeer;\r\n\r\n      const peerId = this.appPeersManager.getPeerId(peer);\r\n      const dialog = this.dropDialog(peerId)[0];\r\n      if(dialog) {\r\n        if(dialog.pFlags?.pinned) {\r\n          this.handleDialogUnpinning(dialog, folder_id);\r\n        }\r\n\r\n        (dialog as Dialog).folder_id = folder_id as REAL_FOLDER_ID;\r\n        this.generateIndexForDialog(dialog);\r\n        this.pushDialog({dialog}); // need for simultaneously updatePinnedDialogs\r\n      }\r\n\r\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\r\n    });\r\n  };\r\n\r\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\r\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\r\n    // this.log('updateDialogPinned', update);\r\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\r\n    const dialog = this.getDialogOnly(peerId);\r\n\r\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\r\n    /* if(update.folder_id > 1) {\r\n      const filter = this.filtersStorage.filters[update.folder_id];\r\n      if(update.pFlags.pinned) {\r\n        filter.pinned_peers.unshift(peerId);\r\n      } else {\r\n        filter.pinned_peers.findAndSplice((p) => p === peerId);\r\n      }\r\n    } */\r\n\r\n    this.handleDialogTogglePinned(dialog, update.pFlags.pinned, folderId);\r\n  };\r\n\r\n  private onUpdateChannelPinnedTopic = (update: Update.updateChannelPinnedTopic) => {\r\n    const channelId = update.channel_id;\r\n    const peerId = channelId.toPeerId(true);\r\n    const topicId = this.appMessagesIdsManager.generateMessageId(update.topic_id, channelId);\r\n    const topic = this.getForumTopic(peerId, topicId);\r\n    if(!topic) {\r\n      return;\r\n    }\r\n\r\n    this.handleDialogTogglePinned(topic, update.pFlags.pinned, this.getFilterIdForForum(topic));\r\n  };\r\n\r\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\r\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\r\n\r\n    if(update.order) {\r\n      this.handleDialogsPinned(folderId, update.order.map((peer) => this.appPeersManager.getPeerId((peer as DialogPeer.dialogPeer).peer)));\r\n    } else {\r\n      this.apiManager.invokeApi('messages.getPinnedDialogs', {\r\n        folder_id: folderId\r\n      }).then((dialogsResult) => {\r\n        // * for test reordering and rendering\r\n        // dialogsResult.dialogs.reverse();\r\n\r\n        this.applyDialogs(dialogsResult);\r\n\r\n        this.handleDialogsPinned(folderId, dialogsResult.dialogs.map((d) => d.peerId));\r\n      });\r\n    }\r\n  };\r\n\r\n  private onUpdateChannelPinnedTopics = async(update: Update.updateChannelPinnedTopics) => {\r\n    const channelId = update.channel_id;\r\n    const peerId = channelId.toPeerId(true);\r\n    const forumTopics = this.forumTopics.get(peerId);\r\n    if(!forumTopics) {\r\n      return;\r\n    }\r\n\r\n    const filterId = peerId;\r\n    if(update.order) {\r\n      const order = update.order.map((topicId) => this.appMessagesIdsManager.generateMessageId(topicId, channelId));\r\n      this.handleDialogsPinned(filterId, order);\r\n    } else {\r\n      const limit = await this.apiManager.getLimit('topicPin', true);\r\n\r\n      const promise = this.apiManager.invokeApi('channels.getForumTopics', {\r\n        channel: this.appChatsManager.getChannelInput(channelId),\r\n        limit,\r\n        offset_date: 0,\r\n        offset_id: 0,\r\n        offset_topic: 0\r\n      });\r\n\r\n      const result = await this.processTopics(peerId, promise);\r\n\r\n      const topics = result.topics as ForumTopic[];\r\n      const pinned = topics.filter((topic) => topic.pFlags.pinned);\r\n      this.handleDialogsPinned(filterId, pinned.map((topic) => topic.id));\r\n    }\r\n  };\r\n\r\n  private onUpdateChannelViewForumAsMessages = (update: Update.updateChannelViewForumAsMessages) => {\r\n    const peerId = update.channel_id.toPeerId(true);\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(!dialog) {\r\n      return;\r\n    }\r\n\r\n    if(update.enabled) dialog.pFlags.view_forum_as_messages = true;\r\n    else delete dialog.pFlags.view_forum_as_messages;\r\n    this.setDialogToState(dialog);\r\n  };\r\n}\r\n","export default function copy<T>(obj: T): T {\r\n  // in case of premitives\r\n  if(obj === null || typeof(obj) !== 'object') {\r\n    return obj;\r\n  }\r\n\r\n  // date objects should be\r\n  if(obj instanceof Date) {\r\n    return new Date(obj.getTime()) as any;\r\n  }\r\n\r\n  // handle Array\r\n  if(Array.isArray(obj)) {\r\n    // @ts-ignore\r\n    const clonedArr: T = obj.map((el) => copy(el)) as any as T;\r\n    return clonedArr;\r\n  }\r\n\r\n  if(ArrayBuffer.isView(obj)) {\r\n    // @ts-ignore\r\n    return obj.slice();\r\n  }\r\n\r\n  // lastly, handle objects\r\n  // @ts-ignore\r\n  const clonedObj = new obj.constructor();\r\n  for(var prop in obj) {\r\n    if(obj.hasOwnProperty(prop)) {\r\n      clonedObj[prop] = copy(obj[prop]);\r\n    }\r\n  }\r\n  return clonedObj;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {ChatlistsChatlistUpdates, DialogFilter, ForumTopic, InputChatlist, InputPeer, Update, Updates} from '../../layer';\r\nimport type {Dialog} from '../appManagers/appMessagesManager';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport copy from '../../helpers/object/copy';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, REAL_FOLDERS, REAL_FOLDER_ID, START_LOCAL_ID} from '../mtproto/mtproto_config';\r\nimport makeError from '../../helpers/makeError';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\n\r\nexport type MyDialogFilter = Exclude<DialogFilter, DialogFilter.dialogFilterDefault>;\r\n\r\nconst convertment = [\r\n  ['pinned_peers', 'pinnedPeerIds'],\r\n  ['exclude_peers', 'excludePeerIds'],\r\n  ['include_peers', 'includePeerIds']\r\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\r\n\r\nconst PREPENDED_FILTERS = REAL_FOLDERS.size;\r\n\r\nconst LOCAL_FILTER: DialogFilter.dialogFilter = {\r\n  _: 'dialogFilter',\r\n  pFlags: {},\r\n  id: 0,\r\n  title: '',\r\n  exclude_peers: [],\r\n  include_peers: [],\r\n  pinned_peers: [],\r\n  excludePeerIds: [],\r\n  includePeerIds: [],\r\n  pinnedPeerIds: []\r\n};\r\n\r\nexport default class FiltersStorage extends AppManager {\r\n  private filters: {[filterId: string]: MyDialogFilter};\r\n  private filtersArr: Array<MyDialogFilter>;\r\n  private localFilters: {[filterId: string]: MyDialogFilter};\r\n  private localId: number;\r\n  private reloadedPeerIds: Set<PeerId>;\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateDialogFilter: this.onUpdateDialogFilter,\r\n\r\n      updateDialogFilters: this.onUpdateDialogFilters,\r\n\r\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\r\n    });\r\n\r\n    // delete peers when dialog is being dropped\r\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\r\n      for(const filterId in this.filters) {\r\n        const filter = this.filters[filterId];\r\n        let modified = false;\r\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach((arr) => {\r\n          forEachReverse(arr, (inputPeer, idx) => {\r\n            if(getPeerId(inputPeer) === peerId) {\r\n              arr.splice(idx, 1);\r\n              modified = true;\r\n            }\r\n          });\r\n        });\r\n\r\n        if(modified) {\r\n          this.saveDialogFilter(filter, true);\r\n        }\r\n      }\r\n    }); */\r\n\r\n    this.rootScope.addEventListener('premium_toggle', () => {\r\n      this.onUpdateDialogFilters({_: 'updateDialogFilters'});\r\n    });\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      const filtersArr = this.prependFilters(state.filtersArr);\r\n      filtersArr.map((filter) => {\r\n        this.saveDialogFilter(filter, false, true);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ! use it only with saving\r\n   */\r\n  private prependFilters(filters: DialogFilter[]) {\r\n    filters = filters.slice();\r\n\r\n    const allChatsFilter = this.localFilters[FOLDER_ID_ALL];\r\n    const archiveFilter = this.localFilters[FOLDER_ID_ARCHIVE];\r\n\r\n    const allChatsFilterIndex = filters.findIndex((filter) => filter._ === 'dialogFilterDefault' || filter.id === FOLDER_ID_ALL);\r\n    if(allChatsFilterIndex !== -1) filters[allChatsFilterIndex] = allChatsFilter;\r\n    else filters.unshift(allChatsFilter);\r\n\r\n    findAndSplice(filters, (filter) => (filter as MyDialogFilter).id === FOLDER_ID_ARCHIVE);\r\n    filters.splice(/* 1 */filters[0] === allChatsFilter ? 1 : 0, 0, archiveFilter);\r\n\r\n    this.localId = START_LOCAL_ID;\r\n    filters.forEach((filter) => {\r\n      delete filter.localId;\r\n    });\r\n\r\n    return filters;\r\n  }\r\n\r\n  private generateLocalFilter(id: REAL_FOLDER_ID) {\r\n    const filter: MyDialogFilter = {...copy(LOCAL_FILTER), id};\r\n    if(id === FOLDER_ID_ALL) {\r\n      filter.pFlags.exclude_archived = true;\r\n    } else if(id === FOLDER_ID_ARCHIVE) {\r\n      filter.pFlags.exclude_unarchived = true;\r\n    }\r\n\r\n    if(REAL_FOLDERS.has(id)) {\r\n      filter.pinnedPeerIds = this.dialogsStorage.getPinnedOrders(id);\r\n    }\r\n\r\n    return filter;\r\n  }\r\n\r\n  // private getLocalFilter(id: number) {\r\n  //   return this.filters[id] ??= this.generateLocalFilter(id);\r\n  // }\r\n\r\n  public clear = (init?: boolean) => {\r\n    if(!init) {\r\n      // safeReplaceObject(this.filters, {});\r\n      this.reloadedPeerIds.clear();\r\n      this.clearFilters();\r\n    } else {\r\n      this.filters = {};\r\n      this.filtersArr = [];\r\n      this.reloadedPeerIds = new Set();\r\n\r\n      this.localFilters = {};\r\n      for(const filterId of REAL_FOLDERS) {\r\n        this.localFilters[filterId] = this.generateLocalFilter(filterId as REAL_FOLDER_ID);\r\n      }\r\n    }\r\n\r\n    this.localId = START_LOCAL_ID;\r\n  };\r\n\r\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\r\n    if(update.filter) {\r\n      this.saveDialogFilter(update.filter as any);\r\n    } else if(this.filters[update.id]) { // Папка удалена\r\n      // this.getDialogFilters(true);\r\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\r\n      delete this.filters[update.id];\r\n      findAndSplice(this.filtersArr, (filter) => (filter as DialogFilter.dialogFilter).id === update.id);\r\n    }\r\n\r\n    this.pushToState();\r\n  };\r\n\r\n  private onUpdateDialogFilters = (update: Update.updateDialogFilters) => {\r\n    // console.warn('updateDialogFilters', update);\r\n\r\n    const oldFilters = copy(this.filters);\r\n\r\n    this.getDialogFilters(true).then((filters) => {\r\n      for(const _filterId in oldFilters) {\r\n        const filterId = +_filterId;\r\n        if(!filters.find((filter) => filter.id === filterId)) { // * deleted\r\n          this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\r\n        }\r\n      }\r\n\r\n      this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map((filter) => filter.id)});\r\n    });\r\n  };\r\n\r\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\r\n    // console.log('updateDialogFilterOrder', update);\r\n\r\n    const order = update.order.slice();\r\n    if(!order.includes(FOLDER_ID_ARCHIVE)) {\r\n      order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, FOLDER_ID_ARCHIVE);\r\n    }\r\n\r\n    this.localId = START_LOCAL_ID;\r\n    order.forEach((filterId) => {\r\n      const filter = this.filters[filterId];\r\n      delete filter.localId;\r\n      this.setLocalId(filter);\r\n    });\r\n\r\n    this.rootScope.dispatchEvent('filter_order', order);\r\n\r\n    this.pushToState();\r\n  };\r\n\r\n  private pushToState() {\r\n    this.appStateManager.pushToState('filtersArr', this.filtersArr);\r\n  }\r\n\r\n  public testDialogForFilter(dialog: Dialog | ForumTopic.forumTopic, filter?: MyDialogFilter) {\r\n    if(!filter) {\r\n      return true;\r\n    }\r\n\r\n    const {peerId} = dialog;\r\n\r\n    if(REAL_FOLDERS.has(filter.id)) {\r\n      return (dialog as Dialog).folder_id === filter.id && this.dialogsStorage.canSaveDialog(peerId, dialog);\r\n    }\r\n\r\n    // * check whether dialog exists\r\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\r\n      return false;\r\n    }\r\n\r\n    // exclude_peers\r\n    if((filter as DialogFilter.dialogFilter).excludePeerIds?.includes(peerId)) {\r\n      return false;\r\n    }\r\n\r\n    // include_peers\r\n    if((filter as DialogFilter.dialogFilter).includePeerIds?.includes(peerId)) {\r\n      return true;\r\n    }\r\n\r\n    const pFlags = (filter as DialogFilter.dialogFilter).pFlags;\r\n\r\n    if(!pFlags) {\r\n      return true;\r\n    }\r\n\r\n    // exclude_archived\r\n    if(pFlags.exclude_archived && (dialog as Dialog).folder_id === FOLDER_ID_ARCHIVE) {\r\n      return false;\r\n    }\r\n\r\n    // exclude_read\r\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\r\n      return false;\r\n    }\r\n\r\n    // exclude_muted\r\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted({peerId}) && !(dialog.unread_mentions_count && dialog.unread_count)) {\r\n      return false;\r\n    }\r\n\r\n    if(this.appPeersManager.isAnyChat(peerId)) {\r\n      // broadcasts\r\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\r\n        return true;\r\n      }\r\n\r\n      // groups\r\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\r\n        return true;\r\n      }\r\n    } else {\r\n      const userId = peerId.toUserId();\r\n\r\n      // bots\r\n      if(this.appUsersManager.isBot(userId)) {\r\n        return !!pFlags.bots;\r\n      }\r\n\r\n      // non_contacts\r\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\r\n        return true;\r\n      }\r\n\r\n      // contacts\r\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\r\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\r\n  }\r\n\r\n  public getFilter(filterId: number) {\r\n    return this.filters[filterId];\r\n  }\r\n\r\n  public getFilters() {\r\n    return this.filters;\r\n  }\r\n\r\n  public clearFilters() {\r\n    const filters = this.getFilters();\r\n    for(const filterId in filters) { // delete filters\r\n      if(REAL_FOLDERS.has(+filterId)) {\r\n        continue;\r\n      }\r\n\r\n      this.onUpdateDialogFilter({\r\n        _: 'updateDialogFilter',\r\n        id: +filterId\r\n      });\r\n    }\r\n  }\r\n\r\n  public async toggleDialogPin(peerId: PeerId, filterId: number) {\r\n    const filter = this.filters[filterId];\r\n\r\n    const index = filter.pinnedPeerIds.indexOf(peerId);\r\n    const wasPinned = index !== -1;\r\n\r\n    if(wasPinned) {\r\n      filter.pinned_peers.splice(index, 1);\r\n      filter.pinnedPeerIds.splice(index, 1);\r\n    }\r\n\r\n    if(!wasPinned) {\r\n      if(filter.pinned_peers.length >= (await this.apiManager.getLimit('folderPin'))) {\r\n        return Promise.reject(makeError('PINNED_DIALOGS_TOO_MUCH'));\r\n      }\r\n\r\n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\r\n      filter.pinnedPeerIds.unshift(peerId);\r\n    }\r\n\r\n    return this.updateDialogFilter(filter);\r\n  }\r\n\r\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\r\n    const maxId = Math.max(1, ...Object.keys(this.filters).map((i) => +i));\r\n    filter = copy(filter);\r\n    filter.id = maxId + 1;\r\n    return this.updateDialogFilter(filter, undefined, prepend);\r\n  }\r\n\r\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\r\n    return this.apiManager.invokeApi('messages.updateDialogFilter', {\r\n      id: filter.id,\r\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\r\n    }).then(() => {\r\n      this.onUpdateDialogFilter({\r\n        _: 'updateDialogFilter',\r\n        id: filter.id,\r\n        filter: remove ? undefined : filter as any\r\n      });\r\n\r\n      if(prepend) {\r\n        const f = Object.values(this.filters);\r\n        const order = f.sort((a, b) => a.localId - b.localId).map((filter) => filter.id);\r\n        indexOfAndSplice(order, filter.id);\r\n        indexOfAndSplice(order, FOLDER_ID_ARCHIVE);\r\n        order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, filter.id);\r\n        this.onUpdateDialogFilterOrder({\r\n          _: 'updateDialogFilterOrder',\r\n          order\r\n        });\r\n      }\r\n\r\n      return filter;\r\n    });\r\n  }\r\n\r\n  public updateDialogFiltersOrder(order: number[]) {\r\n    return this.apiManager.invokeApi('messages.updateDialogFiltersOrder', {\r\n      order\r\n    }).then(() => {\r\n      this.onUpdateDialogFilterOrder({\r\n        _: 'updateDialogFilterOrder',\r\n        order\r\n      });\r\n    });\r\n  }\r\n\r\n  public getOutputDialogFilter(filter: MyDialogFilter) {\r\n    const c = copy(filter);\r\n    /* convertment.forEach(([from, to]) => {\r\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\r\n    }); */\r\n\r\n    this.filterIncludedPinnedPeers(filter);\r\n\r\n    return c;\r\n  }\r\n\r\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\r\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\r\n      if(filter.pinnedPeerIds.includes(peerId)) {\r\n        filter.include_peers.splice(idx, 1);\r\n        filter.includePeerIds.splice(idx, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  // private spliceMissingPeerIds(filterId: number, type: ArgumentTypes<FiltersStorage['reloadMissingPeerIds']>[1], missingPeerIds: PeerId[]) {\r\n  //   const filter = this.getFilter(filterId);\r\n  //   const peers = filter && filter[type];\r\n  //   if(!peers?.length) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   let spliced = false;\r\n  //   missingPeerIds.forEach((peerId) => {\r\n  //     const inputPeer = findAndSplice(peers, (inputPeer) => getPeerId(inputPeer) === peerId);\r\n  //     if(inputPeer) {\r\n  //       spliced = true;\r\n  //     }\r\n  //   });\r\n\r\n  //   if(spliced) {\r\n  //     this.onUpdateDialogFilter({\r\n  //       _: 'updateDialogFilter',\r\n  //       id: filterId,\r\n  //       filter\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  public reloadMissingPeerIds(\r\n    filterId: number,\r\n    type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers'\r\n  ) {\r\n    const filter = this.getFilter(filterId);\r\n    const peers = (filter as DialogFilter.dialogFilter)?.[type];\r\n    if(!peers?.length) {\r\n      return;\r\n    }\r\n\r\n    // const missingPeerIds: PeerId[] = [];\r\n    const reloadDialogs = peers.filter((inputPeer) => {\r\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\r\n      const isAlreadyReloaded = this.reloadedPeerIds.has(peerId);\r\n      const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n      // if(isAlreadyReloaded && !dialog) {\r\n      //   missingPeerIds.push(peerId);\r\n      // }\r\n\r\n      const reload = !isAlreadyReloaded && !dialog;\r\n      return reload;\r\n    });\r\n\r\n    if(!reloadDialogs.length) {\r\n      // if(missingPeerIds.length) {\r\n      //   this.spliceMissingPeerIds(filterId, type, missingPeerIds);\r\n      // }\r\n\r\n      return;\r\n    }\r\n\r\n    const reloadPromises = reloadDialogs.map((inputPeer) => {\r\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\r\n      const promise = this.appMessagesManager.reloadConversation(inputPeer)\r\n      .then((dialog) => {\r\n        this.reloadedPeerIds.add(peerId);\r\n\r\n        return dialog ? undefined : peerId;\r\n      });\r\n\r\n      return promise;\r\n    });\r\n\r\n    const reloadPromise = Promise.all(reloadPromises).then((missingPeerIds) => {\r\n      missingPeerIds = missingPeerIds.filter(Boolean);\r\n      if(!missingPeerIds.length) {\r\n        return;\r\n      }\r\n\r\n      // this.spliceMissingPeerIds(filterId, type, missingPeerIds);\r\n    });\r\n\r\n    return reloadPromise;\r\n  }\r\n\r\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\r\n    const keys = Object.keys(this.filters);\r\n    if(keys.length > PREPENDED_FILTERS && !overwrite) {\r\n      return keys.map((filterId) => this.filters[filterId]).sort((a, b) => a.localId - b.localId);\r\n    }\r\n\r\n    const filters = await this.apiManager.invokeApiSingle('messages.getDialogFilters');\r\n    const prepended = this.prependFilters(filters);\r\n    return prepended.map((filter) => this.saveDialogFilter(filter, overwrite)).filter(Boolean);\r\n  }\r\n\r\n  public getSuggestedDialogsFilters() {\r\n    return this.apiManager.invokeApi('messages.getSuggestedDialogFilters');\r\n  }\r\n\r\n  public saveDialogFilter(filter: DialogFilter, update = true, silent?: boolean) {\r\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\r\n\r\n    if(filter._ === 'dialogFilterDefault') {\r\n      filter = this.localFilters[FOLDER_ID_ALL];\r\n    }\r\n\r\n    assumeType<MyDialogFilter>(filter);\r\n    if(!REAL_FOLDERS.has(filter.id)) {\r\n      convertment.forEach(([from, to]) => {\r\n        const arrayFrom = (filter as DialogFilter.dialogFilter)[from];\r\n        if(!arrayFrom) return;\r\n        (filter as DialogFilter.dialogFilter)[to] = arrayFrom.map((peer) => this.appPeersManager.getPeerId(peer));\r\n      });\r\n\r\n      this.filterIncludedPinnedPeers(filter);\r\n\r\n      filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\r\n      filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\r\n    }\r\n\r\n    const oldFilter = this.filters[filter.id];\r\n    if(oldFilter) {\r\n      filter = Object.assign(oldFilter, filter);\r\n    } else {\r\n      this.filters[filter.id] = filter;\r\n    }\r\n\r\n    this.setLocalId(filter);\r\n\r\n    if(!silent) {\r\n      if(update) {\r\n        this.rootScope.dispatchEvent('filter_update', filter);\r\n      } else if(!oldFilter) {\r\n        this.rootScope.dispatchEvent('filter_new', filter);\r\n      }\r\n    }\r\n\r\n    return filter;\r\n  }\r\n\r\n  private setLocalId(filter: MyDialogFilter) {\r\n    if(filter.localId !== undefined) {\r\n      if(filter.localId >= this.localId) {\r\n        this.localId = filter.localId + 1;\r\n      }\r\n    } else {\r\n      filter.localId = this.localId++ as MyDialogFilter['localId'];\r\n      findAndSplice(this.filtersArr, (_filter) => _filter.id === filter.id);\r\n      this.filtersArr.push(filter);\r\n      this.pushToState();\r\n    }\r\n  }\r\n\r\n  public async isFilterIdAvailable(filterId: number) {\r\n    if(REAL_FOLDERS.has(filterId)) {\r\n      return true;\r\n    }\r\n\r\n    const limit = await this.apiManager.getLimit('folders');\r\n    const isFolderAvailable = this.filtersArr.filter((filter) => !REAL_FOLDERS.has(filter.id)).slice(0, limit).some((filter) => filter.id === filterId);\r\n\r\n    return isFolderAvailable;\r\n  }\r\n\r\n  public getChatlistInput(id: number): InputChatlist {\r\n    return {\r\n      _: 'inputChatlistDialogFilter',\r\n      filter_id: id\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param filter should be client-generated\r\n   */\r\n  public exportChatlistInvite(filter: DialogFilter.dialogFilterChatlist) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.exportChatlistInvite',\r\n      params: {\r\n        chatlist: this.getChatlistInput(filter.id),\r\n        title: filter.title,\r\n        peers: filter.include_peers\r\n      },\r\n      processResult: (exportedChatlistInvite) => {\r\n        this.saveDialogFilter(exportedChatlistInvite.filter);\r\n        return exportedChatlistInvite;\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteExportedInvite(id: number, slug: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.deleteExportedInvite',\r\n      params: {\r\n        chatlist: this.getChatlistInput(id),\r\n        slug\r\n      }\r\n    });\r\n  }\r\n\r\n  public editExportedInvite(id: number, slug: string, peerIds: PeerId[], title: string) {\r\n    return this.apiManager.invokeApi('chatlists.editExportedInvite', {\r\n      chatlist: this.getChatlistInput(id),\r\n      slug,\r\n      title,\r\n      peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\r\n    });\r\n  }\r\n\r\n  public getExportedInvites(id: number) {\r\n    const filter = this.getFilter(id);\r\n    if(filter?._ === 'dialogFilter') {\r\n      return Promise.reject(makeError('FILTER_NOT_SUPPORTED'));\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.getExportedInvites',\r\n      params: {\r\n        chatlist: this.getChatlistInput(id)\r\n      },\r\n      processResult: (exportedInvites) => {\r\n        this.appUsersManager.saveApiUsers(exportedInvites.users);\r\n        this.appChatsManager.saveApiChats(exportedInvites.chats);\r\n        return exportedInvites.invites;\r\n      }\r\n    });\r\n  }\r\n\r\n  public checkChatlistInvite(slug: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.checkChatlistInvite',\r\n      params: {slug},\r\n      processResult: (chatlistInvite) => {\r\n        this.appUsersManager.saveApiUsers(chatlistInvite.users);\r\n        this.appChatsManager.saveApiChats(chatlistInvite.chats);\r\n        return chatlistInvite;\r\n      }\r\n    });\r\n  }\r\n\r\n  public joinChatlistInvite(slug: string, peerIds: PeerId[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.joinChatlistInvite',\r\n      params: {\r\n        slug,\r\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n        const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateDialogFilter') as Update.updateDialogFilter;\r\n        const filterId = update.id;\r\n        this.rootScope.dispatchEvent('filter_joined', this.getFilter(filterId));\r\n        return filterId;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getChatlistUpdates(id: number) {\r\n    const filter = this.getFilter(id);\r\n    if(filter?._ !== 'dialogFilterChatlist') {\r\n      return Promise.reject(makeError('FILTER_NOT_SUPPORTED'));\r\n    }\r\n\r\n    const time = Date.now();\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.getChatlistUpdates',\r\n      params: {\r\n        chatlist: this.getChatlistInput(id)\r\n      },\r\n      processResult: (chatlistUpdates) => {\r\n        this.appUsersManager.saveApiUsers(chatlistUpdates.users);\r\n        this.appChatsManager.saveApiChats(chatlistUpdates.chats);\r\n\r\n        const filter = this.getFilter(id);\r\n        if(filter?._ === 'dialogFilterChatlist') {\r\n          filter.updatedTime = time;\r\n          this.pushToState();\r\n        }\r\n\r\n        return chatlistUpdates;\r\n      }\r\n    });\r\n  }\r\n\r\n  public joinChatlistUpdates(id: number, peerIds: PeerId[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.joinChatlistUpdates',\r\n      params: {\r\n        chatlist: this.getChatlistInput(id),\r\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n\r\n  public hideChatlistUpdates(id: number) {\r\n    return this.apiManager.invokeApiSingle('chatlists.hideChatlistUpdates', {\r\n      chatlist: this.getChatlistInput(id)\r\n    });\r\n  }\r\n\r\n  public getLeaveChatlistSuggestions(id: number) {\r\n    return this.apiManager.invokeApiSingle('chatlists.getLeaveChatlistSuggestions', {\r\n      chatlist: this.getChatlistInput(id)\r\n    });\r\n  }\r\n\r\n  public leaveChatlist(id: number, peerIds: PeerId[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'chatlists.leaveChatlist',\r\n      params: {\r\n        chatlist: this.getChatlistInput(id),\r\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default function filterUnique<T extends Array<any>>(arr: T): T {\r\n  return [...new Set(arr)] as T;\r\n}\r\n","// Copyright Twitter Inc. Licensed under MIT\r\n// https://github.com/twitter/twemoji-parser/blob/master/LICENSE.md\r\n\r\nconst originalString = '((?:\\ud83d\\udc68\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffc-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc68\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udffe]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffc-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffe]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc69\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83e\\udef1\\ud83c\\udffb\\u200d\\ud83e\\udef2\\ud83c[\\udffc-\\udfff]|\\ud83e\\udef1\\ud83c\\udffc\\u200d\\ud83e\\udef2\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\udef1\\ud83c\\udffd\\u200d\\ud83e\\udef2\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\udef1\\ud83c\\udffe\\u200d\\ud83e\\udef2\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\udef1\\ud83c\\udfff\\u200d\\ud83e\\udef2\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68|\\ud83d\\udc69\\u200d\\u2764\\ufe0f?\\u200d\\ud83d[\\udc68\\udc69]|\\ud83e\\uddd1\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1|\\ud83d\\udc6b\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc6c\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc6d\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc8f\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc91\\ud83c[\\udffb-\\udfff]|\\ud83e\\udd1d\\ud83c[\\udffb-\\udfff]|\\ud83d[\\udc6b-\\udc6d\\udc8f\\udc91]|\\ud83e\\udd1d)|(?:\\ud83d[\\udc68\\udc69]|\\ud83e\\uddd1)(?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f?|\\u2696\\ufe0f?|\\u2708\\ufe0f?|\\ud83c[\\udf3e\\udf73\\udf7c\\udf84\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92]|\\ud83e[\\uddaf-\\uddb3\\uddbc\\uddbd])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75]|\\u26f9)(?:(?:\\ud83c[\\udffb-\\udfff]|\\ufe0f?)\\u200d[\\u2640\\u2642]\\ufe0f?)|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc70\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd35\\udd37-\\udd39\\udd3d\\udd3e\\uddb8\\uddb9\\uddcd-\\uddcf\\uddd4\\uddd6-\\udddd])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f?|(?:\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f?\\u200d\\u26a7\\ufe0f?|\\ud83c\\udff3\\ufe0f?\\u200d\\ud83c\\udf08|\\ud83d\\ude36\\u200d\\ud83c\\udf2b\\ufe0f?|\\u2764\\ufe0f?\\u200d\\ud83d\\udd25|\\u2764\\ufe0f?\\u200d\\ud83e\\ude79|\\ud83c\\udff4\\u200d\\u2620\\ufe0f?|\\ud83d\\udc15\\u200d\\ud83e\\uddba|\\ud83d\\udc3b\\u200d\\u2744\\ufe0f?|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f?|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f?|\\ud83d\\ude2e\\u200d\\ud83d\\udca8|\\ud83d\\ude35\\u200d\\ud83d\\udcab|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f?|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f?|\\ud83e\\uddde\\u200d\\u2640\\ufe0f?|\\ud83e\\uddde\\u200d\\u2642\\ufe0f?|\\ud83e\\udddf\\u200d\\u2640\\ufe0f?|\\ud83e\\udddf\\u200d\\u2642\\ufe0f?|\\ud83d\\udc08\\u200d\\u2b1b)|[#*0-9]\\ufe0f??\\u20e3|(?:[©®\\u2122\\u265f]\\ufe0f?)|(?:\\ud83c[\\udc04\\udd70\\udd71\\udd7e\\udd7f\\ude02\\ude1a\\ude2f\\ude37\\udf21\\udf24-\\udf2c\\udf36\\udf7d\\udf96\\udf97\\udf99-\\udf9b\\udf9e\\udf9f\\udfcd\\udfce\\udfd4-\\udfdf\\udff3\\udff5\\udff7]|\\ud83d[\\udc3f\\udc41\\udcfd\\udd49\\udd4a\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa\\udecb\\udecd-\\udecf\\udee0-\\udee5\\udee9\\udef0\\udef3]|[\\u203c\\u2049\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23ed-\\u23ef\\u23f1\\u23f2\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638-\\u263a\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26a7\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u2764\\u27a1\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299])(?:\\ufe0f?|(?!\\ufe0e))|(?:(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75\\udd90]|[\\u261d\\u26f7\\u26f9\\u270c\\u270d])(?:\\ufe0f?|(?!\\ufe0e))|(?:\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd7a\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd0c\\udd0f\\udd18-\\udd1c\\udd1e\\udd1f\\udd26\\udd30-\\udd39\\udd3d\\udd3e\\udd77\\uddb5\\uddb6\\uddb8\\uddb9\\uddbb\\uddcd-\\uddcf\\uddd1-\\udddd\\udec3-\\udec5\\udef0-\\udef6]|[\\u270a\\u270b]))(?:\\ud83c[\\udffb-\\udfff])?|(?:\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc65\\udb40\\udc6e\\udb40\\udc67\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc73\\udb40\\udc63\\udb40\\udc74\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc77\\udb40\\udc6c\\udb40\\udc73\\udb40\\udc7f|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\ud83c[\\udccf\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude32-\\ude36\\ude38-\\ude3a\\ude50\\ude51\\udf00-\\udf20\\udf2d-\\udf35\\udf37-\\udf7c\\udf7e-\\udf84\\udf86-\\udf93\\udfa0-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcf-\\udfd3\\udfe0-\\udff0\\udff4\\udff8-\\udfff]|\\ud83d[\\udc00-\\udc3e\\udc40\\udc44\\udc45\\udc51-\\udc65\\udc6a\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udc8e\\udc90\\udc92-\\udca9\\udcab-\\udcfc\\udcff-\\udd3d\\udd4b-\\udd4e\\udd50-\\udd67\\udda4\\uddfb-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\uded0-\\uded2\\uded5-\\uded7\\udedd-\\udedf\\udeeb\\udeec\\udef4-\\udefc\\udfe0-\\udfeb\\udff0]|\\ud83e[\\udd0d\\udd0e\\udd10-\\udd17\\udd20-\\udd25\\udd27-\\udd2f\\udd3a\\udd3c\\udd3f-\\udd45\\udd47-\\udd76\\udd78-\\uddb4\\uddb7\\uddba\\uddbc-\\uddcc\\uddd0\\uddde-\\uddff\\ude70-\\ude74\\ude78-\\ude7c\\ude80-\\ude86\\ude90-\\udeac\\udeb0-\\udeba\\udec0-\\udec2\\uded0-\\uded9\\udee0-\\udee7]|[\\u23e9-\\u23ec\\u23f0\\u23f3\\u267e\\u26ce\\u2705\\u2728\\u274c\\u274e\\u2753-\\u2755\\u2795-\\u2797\\u27b0\\u27bf\\ue50a])|\\ufe0f)';\r\nexport default originalString;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport emojiRegExp from '../../vendor/emoji/regex';\r\nimport {MessageEntity} from '../../layer';\r\n\r\nconst EmojiHelper = {\r\n  emojiMap: (code: string) => { return code; },\r\n  shortcuts: [] as any,\r\n  emojis: [] as any\r\n};\r\n\r\nexport const ALPHA_CHARS_REG_EXP = 'a-z' +\r\n  '\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u00ff' + // Latin-1\r\n  '\\\\u0100-\\\\u024f' + // Latin Extended A and B\r\n  '\\\\u0253\\\\u0254\\\\u0256\\\\u0257\\\\u0259\\\\u025b\\\\u0263\\\\u0268\\\\u026f\\\\u0272\\\\u0289\\\\u028b' + // IPA Extensions\r\n  '\\\\u02bb' + // Hawaiian\r\n  '\\\\u0300-\\\\u036f' + // Combining diacritics\r\n  '\\\\u1e00-\\\\u1eff' + // Latin Extended Additional (mostly for Vietnamese)\r\n  '\\\\u0400-\\\\u04ff\\\\u0500-\\\\u0527' + // Cyrillic\r\n  '\\\\u2de0-\\\\u2dff\\\\ua640-\\\\ua69f' + // Cyrillic Extended A/B\r\n  '\\\\u0591-\\\\u05bf\\\\u05c1-\\\\u05c2\\\\u05c4-\\\\u05c5\\\\u05c7' +\r\n  '\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f4' + // Hebrew\r\n  '\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41' +\r\n  '\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4f' + // Hebrew Pres. Forms\r\n  '\\\\u0610-\\\\u061a\\\\u0620-\\\\u065f\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc' +\r\n  '\\\\u06de-\\\\u06e8\\\\u06ea-\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff' + // Arabic\r\n  '\\\\u0750-\\\\u077f\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u08e4-\\\\u08fe' + // Arabic Supplement and Extended A\r\n  '\\\\ufb50-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb' + // Pres. Forms A\r\n  '\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc' + // Pres. Forms B\r\n  '\\\\u200c' + // Zero-Width Non-Joiner\r\n  '\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e' + // Thai\r\n  '\\\\u1100-\\\\u11ff\\\\u3130-\\\\u3185\\\\uA960-\\\\uA97F\\\\uAC00-\\\\uD7AF\\\\uD7B0-\\\\uD7FF' + // Hangul (Korean)\r\n  '\\\\u3003\\\\u3005\\\\u303b' + // Kanji/Han iteration marks\r\n  '\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a' + // full width Alphabet\r\n  '\\\\uff66-\\\\uff9f' + // half width Katakana\r\n  '\\\\uffa1-\\\\uffdc'; // half width Hangul (Korean)\r\nexport const ALPHA_NUMERIC_REG_EXP = '0-9\\_' + ALPHA_CHARS_REG_EXP;\r\nexport const DOMAIN_ADD_CHARS = '\\u00b7';\r\n// Based on Regular Expression for URL validation by Diego Perini\r\nexport const URL_ALPHANUMERIC_REG_EXP_PART = '[' + ALPHA_CHARS_REG_EXP + '0-9]';\r\nexport const URL_PROTOCOL_REG_EXP_PART = '((?:https?|ftp)://|mailto:)?';\r\nexport const URL_REG_EXP = URL_PROTOCOL_REG_EXP_PART +\r\n  // user:pass authentication\r\n  '(?:' + URL_ALPHANUMERIC_REG_EXP_PART + '{1,64}(?::' + URL_ALPHANUMERIC_REG_EXP_PART + '{0,64})?@)?' +\r\n  '(?:' +\r\n  // sindresorhus/ip-regexp\r\n  '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}' +\r\n  '|' +\r\n  // host name\r\n  URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}' +\r\n  // domain name\r\n  '(?:\\\\.' + URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}){0,10}' +\r\n  // TLD identifier\r\n  '(?:\\\\.(xn--[0-9a-z]{2,16}|[' + ALPHA_CHARS_REG_EXP + ']{2,24}))' +\r\n  ')' +\r\n  // port number\r\n  '(?::\\\\d{2,5})?' +\r\n  // resource path\r\n  '(?:/(?:\\\\S{0,255}[^\\\\s.;,(\\\\[\\\\]{}<>\"\\'])?)?';\r\nexport const URL_PROTOCOL_REG_EXP = new RegExp('^' + URL_PROTOCOL_REG_EXP_PART.slice(0, -1), 'i');\r\nexport const USERNAME_REG_EXP = '[a-zA-Z\\\\d_]{5,32}';\r\nexport const TIMESTAMP_REG_EXP = '(?:\\\\s|^)((?:\\\\d{1,2}:)?(?:[0-5]?[0-9]):(?:[0-5][0-9]))(?:\\\\s|$)';\r\nexport const BOT_COMMAND_REG_EXP = '\\\\/([a-zA-Z\\\\d_]{1,32})(?:@(' + USERNAME_REG_EXP + '))?(\\\\b|$)';\r\nexport const FULL_REG_EXP = new RegExp('(^| )(@)(' + USERNAME_REG_EXP + ')|(' + URL_REG_EXP + ')|(\\\\n)|(' + emojiRegExp + ')|(^|[\\\\s\\\\(\\\\]])(#[' + ALPHA_NUMERIC_REG_EXP + ']{2,64})|(^|\\\\s)' + BOT_COMMAND_REG_EXP + '|' + TIMESTAMP_REG_EXP + '', 'i');\r\nexport const EMAIL_REG_EXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n// const markdownTestRegExp = /[`_*@~]/;\r\nexport const MARKDOWN_REG_EXP = /(^|\\s|\\n)(````?)([\\s\\S]+?)(````?)([\\s\\n\\.,:?!;]|$)|(^|\\s|\\x01)(`|~~|\\*\\*|__|_-_|\\|\\|)([^\\n]+?)\\7([\\x01\\s\\.,:?!;]|$)|@(\\d+)\\s*\\((.+?)\\)|(\\[(.+?)\\]\\((.+?)\\))/m;\r\nexport const SITE_HASHTAGS: {[siteName: string]: string} = {\r\n  'Telegram': 'tg://search_hashtag?hashtag={1}',\r\n  'Twitter': 'https://twitter.com/hashtag/{1}',\r\n  'Instagram': 'https://instagram.com/explore/tags/{1}/',\r\n  'Google Plus': 'https://plus.google.com/explore/{1}'\r\n};\r\n\r\n// export const SITE_MENTIONS: {[siteName in 'Telegram' | 'Twitter' | 'Instagram' | 'GitHub']: string} = {\r\n//   Telegram: '#{1}',\r\n//   Twitter: 'https://twitter.com/{1}',\r\n//   Instagram: 'https://instagram.com/{1}/',\r\n//   GitHub: 'https://github.com/{1}'\r\n// };\r\n\r\nexport const MARKDOWN_ENTITIES: {[markdown: string]: MessageEntity['_']} = {\r\n  '`': 'messageEntityCode',\r\n  '``': 'messageEntityPre',\r\n  '**': 'messageEntityBold',\r\n  '__': 'messageEntityItalic',\r\n  '~~': 'messageEntityStrike',\r\n  '_-_': 'messageEntityUnderline',\r\n  '||': 'messageEntitySpoiler'\r\n};\r\n\r\nexport const MARKDOWN_ENTITIES_TYPES = new Set(Object.values(MARKDOWN_ENTITIES));\r\n\r\nexport const PASS_CONFLICTING_ENTITIES: Set<MessageEntity['_']> = new Set([\r\n  'messageEntityEmoji',\r\n  'messageEntityLinebreak',\r\n  'messageEntityCaret'\r\n]);\r\nexport const PASS_SINGLE_CONFLICTING_ENTITIES = new Set(PASS_CONFLICTING_ENTITIES);\r\nfor(const i in MARKDOWN_ENTITIES) {\r\n  PASS_CONFLICTING_ENTITIES.add(MARKDOWN_ENTITIES[i]);\r\n}\r\n\r\nexport const PHONE_NUMBER_REG_EXP = /^\\+\\d+$/;\r\n\r\nexport const LOCAL_ENTITIES = new Set<MessageEntity['_']>([\r\n  'messageEntityLinebreak',\r\n  'messageEntityCaret',\r\n  'messageEntityHighlight',\r\n  'messageEntityBotCommand',\r\n  'messageEntityTimestamp'\r\n]);\r\n\r\n/* export function parseEmojis(text: string) {\r\n  return text.replace(/:([a-z0-9\\-\\+\\*_]+?):/gi, function (all, shortcut) {\r\n    var emojiCode = EmojiHelper.shortcuts[shortcut]\r\n    if (emojiCode !== undefined) {\r\n      return EmojiHelper.emojis[emojiCode][0]\r\n    }\r\n    return all\r\n  })\r\n} */\r\n\r\n\r\n/* export function replaceUrlEncodings(urlWithEncoded: string) {\r\n  return urlWithEncoded.replace(/(%[A-Z\\d]{2})+/g, (str) => {\r\n    try {\r\n      return decodeURIComponent(str);\r\n    } catch (e) {\r\n      return str;\r\n    }\r\n  });\r\n} */\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity} from '../../layer';\r\n\r\nconst CAN_COMBINE_ENTITIES: Set<MessageEntity['_']> = new Set([\r\n  'messageEntityBold',\r\n  'messageEntityItalic',\r\n  'messageEntityCode',\r\n  'messageEntityPre',\r\n  'messageEntityUnderline',\r\n  'messageEntityStrike',\r\n  'messageEntityBlockquote',\r\n  'messageEntitySpoiler'\r\n]);\r\nexport default function combineSameEntities(entities: MessageEntity[]) {\r\n  // entities = entities.slice();\r\n  for(let i = 0; i < entities.length; ++i) {\r\n    const entity = entities[i];\r\n\r\n    let nextEntityIdx = -1;\r\n    do {\r\n      nextEntityIdx = entities.findIndex((e, _i) => {\r\n        return CAN_COMBINE_ENTITIES.has(e._) && _i !== i && e._ === entity._ && (e.offset - entity.length) === entity.offset;\r\n      });\r\n\r\n      if(nextEntityIdx !== -1) {\r\n        const nextEntity = entities[nextEntityIdx];\r\n        entity.length += nextEntity.length;\r\n        entities.splice(nextEntityIdx, 1);\r\n      }\r\n    } while(nextEntityIdx !== -1);\r\n  }\r\n  // return entities;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {PASS_CONFLICTING_ENTITIES, PASS_SINGLE_CONFLICTING_ENTITIES} from '.';\r\nimport {MessageEntity} from '../../layer';\r\n\r\nconst SINGLE_ENTITIES: Set<MessageEntity['_']> = new Set(['messageEntityPre', 'messageEntityCode']);\r\n\r\nexport default function findConflictingEntity(currentEntities: MessageEntity[], newEntity: MessageEntity) {\r\n  let singleEnd = -1;\r\n  return currentEntities.find((currentEntity) => {\r\n    if(SINGLE_ENTITIES.has(currentEntity._)) {\r\n      singleEnd = currentEntity.offset + currentEntity.length;\r\n    }\r\n\r\n    if(newEntity.offset < singleEnd && !PASS_SINGLE_CONFLICTING_ENTITIES.has(newEntity._)) {\r\n      return true;\r\n    }\r\n\r\n    const isConflictingTypes = newEntity._ === currentEntity._ ||\r\n      (!PASS_CONFLICTING_ENTITIES.has(newEntity._) && !PASS_CONFLICTING_ENTITIES.has(currentEntity._));\r\n\r\n    if(!isConflictingTypes) {\r\n      return false;\r\n    }\r\n\r\n    const isConflictingOffset = newEntity.offset >= currentEntity.offset &&\r\n      (newEntity.length + newEntity.offset) <= (currentEntity.length + currentEntity.offset);\r\n\r\n    return isConflictingOffset;\r\n  });\r\n}\r\n","import {MessageEntity} from '../../layer';\r\n\r\nexport default function sortEntities(entities: MessageEntity[]) {\r\n  entities.sort((a, b) => {\r\n    return (a.offset - b.offset) || (b.length - a.length);\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity} from '../../layer';\r\nimport findConflictingEntity from './findConflictingEntity';\r\nimport sortEntities from './sortEntities';\r\n\r\nexport default function mergeEntities(currentEntities: MessageEntity[], newEntities: MessageEntity[]) {\r\n  const filtered = newEntities.filter((e) => {\r\n    return !findConflictingEntity(currentEntities, e);\r\n  });\r\n\r\n  currentEntities.push(...filtered);\r\n  sortEntities(currentEntities);\r\n  // currentEntities.sort((a, b) => a.offset - b.offset);\r\n  // currentEntities.sort((a, b) => (a.offset - b.offset) || (a._ === 'messageEntityCaret' && -1));\r\n\r\n  // * fix splitted emoji. messageEntityTextUrl can split the emoji if starts before its end (e.g. on fe0f)\r\n  // * have to fix even if emoji supported since it's being wrapped in span\r\n  // if(!IS_EMOJI_SUPPORTED) {\r\n  for(let i = 0; i < currentEntities.length; ++i) {\r\n    const entity = currentEntities[i];\r\n    if(entity._ === 'messageEntityEmoji') {\r\n      const nextEntity = currentEntities[i + 1];\r\n      if(nextEntity /* && nextEntity._ !== 'messageEntityCaret' */ && nextEntity.offset < (entity.offset + entity.length)) {\r\n        entity.length = nextEntity.offset - entity.offset;\r\n      }\r\n    }\r\n  }\r\n  // }\r\n\r\n  return currentEntities;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {MARKDOWN_ENTITIES, MARKDOWN_REG_EXP} from '.';\r\nimport {MessageEntity} from '../../layer';\r\nimport combineSameEntities from './combineSameEntities';\r\nimport findConflictingEntity from './findConflictingEntity';\r\nimport mergeEntities from './mergeEntities';\r\n\r\nexport default function parseMarkdown(raw: string, currentEntities: MessageEntity[], noTrim?: boolean): string {\r\n  /* if(!markdownTestRegExp.test(text)) {\r\n    return noTrim ? text : text.trim();\r\n  } */\r\n\r\n  const entities: MessageEntity[] = [];\r\n  let pushedEntity = false;\r\n  const pushEntity = (entity: MessageEntity) => !findConflictingEntity(currentEntities, entity) ? (entities.push(entity), pushedEntity = true) : pushedEntity = false;\r\n\r\n  const newTextParts: string[] = [];\r\n  let rawOffset = 0, match;\r\n  while(match = raw.match(MARKDOWN_REG_EXP)) {\r\n    const matchIndex = rawOffset + match.index;\r\n    const beforeMatch = match.index > 0 && raw.slice(0, match.index);\r\n    beforeMatch && newTextParts.push(beforeMatch);\r\n    const text = match[3] || match[8] || match[11] || match[13];\r\n    // rawOffset -= text.length;\r\n    // text = text.replace(/^\\s+|\\s+$/g, '');\r\n    // rawOffset += text.length;\r\n\r\n    let entity: MessageEntity;\r\n    pushedEntity = false;\r\n    if(text.match(/^`*$/)) {\r\n      newTextParts.push(match[0]);\r\n    } else if(match[3]) { // pre\r\n      let languageMatch = match[3].match(/(.*?)\\n/);\r\n      if(!languageMatch?.[1]) {\r\n        languageMatch = undefined;\r\n      }\r\n\r\n      let code = languageMatch ? match[3].slice(languageMatch[1].length) : match[3];\r\n      const startIndex = code[0] === '\\n' ? 1 : 0;\r\n      const endIndex = code[code.length - 1] === '\\n' ? -1 : undefined;\r\n      code = code.slice(startIndex, endIndex);\r\n      entity = {\r\n        _: 'messageEntityPre',\r\n        language: languageMatch?.[1] || '',\r\n        offset: matchIndex + match[1].length,\r\n        length: code.length\r\n      };\r\n\r\n      if(pushEntity(entity)) {\r\n        if(endIndex) {\r\n          rawOffset -= 1;\r\n        }\r\n\r\n        if(languageMatch) {\r\n          rawOffset -= languageMatch[0].length;\r\n        }\r\n\r\n        let whitespace = '';\r\n        if(match[1]) {\r\n          whitespace = match[1];\r\n        } else {\r\n          const previousPart = newTextParts[newTextParts.length - 1];\r\n          if(previousPart && !/\\s/.test(previousPart[previousPart.length - 1])) {\r\n            whitespace = '\\n';\r\n          }\r\n        }\r\n\r\n        newTextParts.push(whitespace, code, match[5]);\r\n\r\n        rawOffset -= match[2].length + match[4].length;\r\n      }\r\n    } else if(match[7]) { // code|italic|bold\r\n      const isSOH = match[6] === '\\x01';\r\n\r\n      entity = {\r\n        _: MARKDOWN_ENTITIES[match[7]] as (MessageEntity.messageEntityBold | MessageEntity.messageEntityCode | MessageEntity.messageEntityItalic | MessageEntity.messageEntitySpoiler)['_'],\r\n        // offset: matchIndex + match[6].length,\r\n        offset: matchIndex + (isSOH ? 0 : match[6].length),\r\n        length: text.length\r\n      };\r\n\r\n      if(pushEntity(entity)) {\r\n        if(!isSOH) {\r\n          newTextParts.push(match[6] + text + match[9]);\r\n        } else {\r\n          newTextParts.push(text);\r\n        }\r\n\r\n        rawOffset -= match[7].length * 2 + (isSOH ? 2 : 0);\r\n      }\r\n    } else if(match[11]) { // custom mention\r\n      entity = {\r\n        _: 'messageEntityMentionName',\r\n        user_id: match[10].toUserId(),\r\n        offset: matchIndex,\r\n        length: text.length\r\n      };\r\n\r\n      if(pushEntity(entity)) {\r\n        newTextParts.push(text);\r\n\r\n        rawOffset -= match[0].length - text.length;\r\n      }\r\n    } else if(match[12]) { // text url\r\n      entity = {\r\n        _: 'messageEntityTextUrl',\r\n        url: match[14],\r\n        offset: matchIndex,\r\n        length: text.length\r\n      };\r\n\r\n      if(pushEntity(entity)) {\r\n        newTextParts.push(text);\r\n\r\n        rawOffset -= match[12].length - text.length;\r\n      }\r\n    }\r\n\r\n    if(!pushedEntity) {\r\n      newTextParts.push(match[0]);\r\n    }\r\n\r\n    raw = raw.substr(match.index + match[0].length);\r\n    rawOffset += match.index + match[0].length;\r\n  }\r\n\r\n  raw && newTextParts.push(raw);\r\n  let newText = newTextParts.join('');\r\n  if(!newText.replace(/\\s+/g, '').length) {\r\n    newText = raw;\r\n    entities.splice(0, entities.length);\r\n  }\r\n\r\n  // ! idk what it was here for\r\n  // if(!entities.length && !noTrim) {\r\n  //   newText = newText.trim();\r\n  // }\r\n\r\n  mergeEntities(currentEntities, entities);\r\n  combineSameEntities(currentEntities);\r\n\r\n  let length = newText.length;\r\n  if(!noTrim) {\r\n    // trim left\r\n    newText = newText.replace(/^\\s*/, '');\r\n\r\n    let diff = length - newText.length;\r\n    if(diff) {\r\n      currentEntities.forEach((entity) => {\r\n        entity.offset = Math.max(0, entity.offset - diff);\r\n      });\r\n    }\r\n\r\n    // trim right\r\n    newText = newText.replace(/\\s*$/, '');\r\n    diff = length - newText.length;\r\n    length = newText.length;\r\n    if(diff) {\r\n      currentEntities.forEach((entity) => {\r\n        if((entity.offset + entity.length) > length) {\r\n          entity.length = length - entity.offset;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return newText;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function applyMixins(derivedCtor: any, constructors: any[]) {\r\n  // const callbacks: Array<(...args: any[]) => any> = [];\r\n\r\n  constructors.forEach((baseCtor) => {\r\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n      const value: PropertyDescriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null);\r\n      /* if(name === '_constructor') {\r\n        callbacks.push(value.value);\r\n        return;\r\n      } else  */if(name === 'constructor') {\r\n        return;\r\n      }\r\n\r\n      Object.defineProperty(\r\n        derivedCtor.prototype,\r\n        name,\r\n        value\r\n      );\r\n    });\r\n  });\r\n\r\n  // if(callbacks.length) {\r\n  //   function c(...args: any[]): any {\r\n  //     callbacks.forEach((cb, idx) => {\r\n  //       // @ts-ignore\r\n  //       cb.apply(this, args[idx] || []);\r\n  //     });\r\n  //   };\r\n\r\n  //   Object.defineProperty(derivedCtor.prototype, 'superConstructor', {\r\n  //     configurable: true,\r\n  //     enumerable: true,\r\n  //     value: c,\r\n  //     writable: true\r\n  //   });\r\n  // }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG from '../../config/debug';\r\nimport {ConstructorDeclMap, Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates} from '../../layer';\r\nimport {logger, LogTypes} from '../logger';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport App from '../../config/app';\r\nimport filterUnique from '../../helpers/array/filterUnique';\r\nimport {AppManager} from './manager';\r\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\r\nimport ctx from '../../environment/ctx';\r\nimport EventListenerBase from '../../helpers/eventListenerBase';\r\nimport applyMixins from '../../helpers/applyMixins';\r\nimport tsNow from '../../helpers/tsNow';\r\n\r\ntype UpdatesState = {\r\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\r\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\r\n  syncPending: {\r\n    seqAwaiting?: number,\r\n    ptsAwaiting?: boolean,\r\n    timeout: number\r\n  },\r\n  syncLoading: Promise<void>,\r\n\r\n  seq?: number,\r\n  pts?: number,\r\n  date?: number,\r\n  lastPtsUpdateTime?: number,\r\n  lastDifferenceTime?: number\r\n};\r\n\r\nconst SYNC_DELAY = 6;\r\n\r\nclass ApiUpdatesManager {\r\n  public updatesState: UpdatesState = {\r\n    pendingPtsUpdates: [],\r\n    pendingSeqUpdates: {},\r\n    syncPending: null,\r\n    syncLoading: null\r\n  };\r\n\r\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\r\n  private attached = false;\r\n\r\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\r\n  private debug = DEBUG;\r\n\r\n  private subscriptions: {[channelId: ChatId]: {count: number, interval?: number}} = {};\r\n\r\n  constructor() {\r\n    this._constructor(false);\r\n  }\r\n\r\n  private setProxy() {\r\n    const self = this;\r\n    this.updatesState = new Proxy(this.updatesState, {\r\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\r\n        // @ts-ignore\r\n        target[key] = value;\r\n        self.saveUpdatesState();\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveUpdatesState() {\r\n    const us = this.updatesState;\r\n    this.appStateManager.pushToState('updates', {\r\n      seq: us.seq,\r\n      pts: us.pts,\r\n      date: us.date\r\n    });\r\n  }\r\n\r\n  private popPendingSeqUpdate() {\r\n    const state = this.updatesState;\r\n    const nextSeq = state.seq + 1;\r\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\r\n    if(!pendingUpdatesData) {\r\n      return false;\r\n    }\r\n\r\n    const updates = pendingUpdatesData.updates;\r\n    for(let i = 0, length = updates.length; i < length; ++i) {\r\n      this.saveUpdate(updates[i]);\r\n    }\r\n\r\n    state.seq = pendingUpdatesData.seq;\r\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\r\n      state.date = pendingUpdatesData.date;\r\n    }\r\n    delete state.pendingSeqUpdates[nextSeq];\r\n\r\n    if(!this.popPendingSeqUpdate() &&\r\n      state.syncPending?.seqAwaiting &&\r\n      state.seq >= state.syncPending.seqAwaiting) {\r\n      if(!state.syncPending.ptsAwaiting) {\r\n        this.clearStatePendingSync(state);\r\n      } else {\r\n        delete state.syncPending.seqAwaiting;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private popPendingPtsUpdate(channelId: ChatId) {\r\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\r\n    if(!curState.pendingPtsUpdates.length) {\r\n      return false;\r\n    }\r\n\r\n    curState.pendingPtsUpdates.sort((a, b) => {\r\n      return a.pts - b.pts;\r\n    });\r\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\r\n\r\n    let curPts = curState.pts;\r\n    let goodPts = 0;\r\n    let goodIndex = 0;\r\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\r\n      const update = curState.pendingPtsUpdates[i];\r\n      curPts += update.pts_count;\r\n      if(curPts >= update.pts) {\r\n        goodPts = update.pts;\r\n        goodIndex = i;\r\n      }\r\n    }\r\n\r\n    if(!goodPts) {\r\n      return false;\r\n    }\r\n\r\n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\r\n\r\n    curState.pts = goodPts;\r\n    for(let i = 0; i <= goodIndex; ++i) {\r\n      const update = curState.pendingPtsUpdates[i];\r\n\r\n      // @ts-ignore\r\n      this.saveUpdate(update);\r\n    }\r\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\r\n\r\n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\r\n      if(!curState.syncPending.seqAwaiting) {\r\n        this.clearStatePendingSync(curState);\r\n      } else {\r\n        delete curState.syncPending.ptsAwaiting;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public forceGetDifference() {\r\n    if(!this.updatesState.syncLoading) {\r\n      this.getDifference();\r\n    }\r\n  }\r\n\r\n  public processLocalUpdate(update: Update) {\r\n    this.processUpdateMessage({\r\n      _: 'updateShort',\r\n      update\r\n    } as Updates);\r\n  }\r\n\r\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\r\n    override: boolean\r\n  }> = {}) => {\r\n    // return forceGetDifference()\r\n    const processOpts = {\r\n      date: updateMessage.date,\r\n      seq: updateMessage.seq,\r\n      seqStart: updateMessage.seq_start\r\n      // ignoreSyncLoading: options.ignoreSyncLoading\r\n    };\r\n\r\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\r\n\r\n    switch(updateMessage._) {\r\n      case 'updatesTooLong':\r\n      case 'new_session_created':\r\n        this.forceGetDifference();\r\n        break;\r\n\r\n      case 'updateShort':\r\n        this.processUpdate(updateMessage.update, processOpts);\r\n        break;\r\n\r\n      case 'updateShortMessage':\r\n      case 'updateShortChatMessage': {\r\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\r\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\r\n        const isOut = updateMessage.pFlags.out;\r\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? this.appPeersManager.peerId : (updateMessage as Updates.updateShortMessage).user_id);\r\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id ?\r\n          (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true) :\r\n          ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || this.appPeersManager.peerId);\r\n\r\n        this.processUpdate({\r\n          _: 'updateNewMessage',\r\n          message: {\r\n            _: 'message',\r\n            pFlags: updateMessage.pFlags,\r\n            id: updateMessage.id,\r\n            from_id: this.appPeersManager.getOutputPeer(fromId.toPeerId()),\r\n            peer_id: this.appPeersManager.getOutputPeer(toId),\r\n            date: updateMessage.date,\r\n            message: updateMessage.message,\r\n            fwd_from: updateMessage.fwd_from,\r\n            reply_to: updateMessage.reply_to,\r\n            entities: updateMessage.entities,\r\n            ttl_period: updateMessage.ttl_period\r\n          },\r\n          pts: updateMessage.pts,\r\n          pts_count: updateMessage.pts_count\r\n        }, processOpts);\r\n        break;\r\n      }\r\n\r\n      case 'updatesCombined':\r\n      case 'updates':\r\n        this.appUsersManager.saveApiUsers(updateMessage.users, options.override);\r\n        this.appChatsManager.saveApiChats(updateMessage.chats, options.override);\r\n\r\n        updateMessage.updates.forEach((update: Update) => {\r\n          this.processUpdate(update, processOpts);\r\n        });\r\n        break;\r\n\r\n      default:\r\n        this.log.warn('Unknown update message', updateMessage);\r\n    }\r\n  };\r\n\r\n  private getDifference(first = false): Promise<void> {\r\n    // this.trace('Get full diff')\r\n    const updatesState = this.updatesState;\r\n    const wasSyncing = updatesState.syncLoading;\r\n    if(!wasSyncing) {\r\n      updatesState.pendingSeqUpdates = {};\r\n      updatesState.pendingPtsUpdates = [];\r\n    }\r\n\r\n    this.clearStatePendingSync(updatesState);\r\n\r\n    const promise = this.apiManager.invokeApi('updates.getDifference', {\r\n      pts: updatesState.pts,\r\n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\r\n      date: updatesState.date,\r\n      qts: -1\r\n    }, {\r\n      timeout: 0x7fffffff\r\n    }).then((differenceResult) => {\r\n      this.debug && this.log.debug('Get diff result', differenceResult);\r\n\r\n      if(differenceResult._ === 'updates.differenceEmpty') {\r\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\r\n        updatesState.date = differenceResult.date;\r\n        updatesState.seq = differenceResult.seq;\r\n        return;\r\n      }\r\n\r\n      // ! SORRY I'M SORRY I'M SORRY\r\n      if(first) {\r\n        this.rootScope.dispatchEvent('state_synchronizing');\r\n      }\r\n\r\n      if(differenceResult._ !== 'updates.differenceTooLong') {\r\n        this.appUsersManager.saveApiUsers(differenceResult.users);\r\n        this.appChatsManager.saveApiChats(differenceResult.chats);\r\n\r\n        // Should be first because of updateMessageID\r\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\r\n\r\n        differenceResult.other_updates.forEach((update) => {\r\n          switch(update._) {\r\n            case 'updateChannelTooLong':\r\n            case 'updateNewChannelMessage':\r\n            case 'updateEditChannelMessage':\r\n              this.processUpdate(update);\r\n              return;\r\n          }\r\n\r\n          this.saveUpdate(update);\r\n        });\r\n\r\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\r\n        differenceResult.new_messages.forEach((apiMessage) => {\r\n          this.saveUpdate({\r\n            _: 'updateNewMessage',\r\n            message: apiMessage,\r\n            pts: updatesState.pts,\r\n            pts_count: 0\r\n          });\r\n        });\r\n\r\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\r\n        updatesState.seq = nextState.seq;\r\n        updatesState.pts = nextState.pts;\r\n        updatesState.date = nextState.date;\r\n      } else {\r\n        updatesState.pts = differenceResult.pts;\r\n        updatesState.date = tsNow(true) + this.timeManager.getServerTimeOffset();\r\n        delete updatesState.seq;\r\n\r\n        this.channelStates = {};\r\n\r\n        this.log.warn('getDifference:', differenceResult._);\r\n        this.onDifferenceTooLong();\r\n      }\r\n\r\n      // this.log('apply diff', updatesState.seq, updatesState.pts)\r\n\r\n      if(differenceResult._ === 'updates.differenceSlice') {\r\n        return this.getDifference();\r\n      } else {\r\n        this.debug && this.log.debug('finished get diff');\r\n      }\r\n    });\r\n\r\n    if(!wasSyncing) {\r\n      this.justAName(updatesState, promise);\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private clearStatePendingSync(state: UpdatesState) {\r\n    if(state.syncPending) {\r\n      clearTimeout(state.syncPending.timeout);\r\n      state.syncPending = null;\r\n    }\r\n  }\r\n\r\n  private getChannelDifference(channelId: ChatId): Promise<void> {\r\n    const channelState = this.getChannelState(channelId);\r\n    const wasSyncing = channelState.syncLoading;\r\n    if(!wasSyncing) {\r\n      channelState.pendingPtsUpdates = [];\r\n    }\r\n\r\n    this.clearStatePendingSync(channelState);\r\n\r\n    const log = this.debug ? this.log.bindPrefix('getChannelDifference-' + channelId) : undefined;\r\n    // this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\r\n    const promise = this.apiManager.invokeApi('updates.getChannelDifference', {\r\n      channel: this.appChatsManager.getChannelInput(channelId),\r\n      filter: {_: 'channelMessagesFilterEmpty'},\r\n      pts: channelState.pts,\r\n      limit: 1000\r\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\r\n      log?.debug('diff result', differenceResult)\r\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\r\n      channelState.lastDifferenceTime = Date.now();\r\n\r\n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\r\n        // log?.debug('apply channel empty diff', differenceResult);\r\n        return;\r\n      }\r\n\r\n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\r\n        // log?.debug('channel diff too long', differenceResult);\r\n        delete this.channelStates[channelId];\r\n\r\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\r\n        return;\r\n      }\r\n\r\n      this.appUsersManager.saveApiUsers(differenceResult.users);\r\n      this.appChatsManager.saveApiChats(differenceResult.chats);\r\n\r\n      // Should be first because of updateMessageID\r\n      log?.debug('applying', differenceResult.other_updates.length, 'channel other updates');\r\n      differenceResult.other_updates.forEach((update) => {\r\n        this.saveUpdate(update);\r\n      });\r\n\r\n      log?.debug('applying', differenceResult.new_messages.length, 'channel new messages');\r\n      differenceResult.new_messages.forEach((apiMessage) => {\r\n        this.saveUpdate({\r\n          _: 'updateNewChannelMessage',\r\n          message: apiMessage,\r\n          pts: channelState.pts,\r\n          pts_count: 0\r\n        });\r\n      });\r\n\r\n      log?.debug('apply channel diff', channelState.pts);\r\n\r\n      if(differenceResult._ === 'updates.channelDifference' &&\r\n        !differenceResult.pFlags.final) {\r\n        return this.getChannelDifference(channelId);\r\n      } else {\r\n        log?.debug('finished channel get diff');\r\n      }\r\n    });\r\n\r\n    if(!wasSyncing) {\r\n      this.justAName(channelState, promise, channelId);\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private onDifferenceTooLong() {\r\n    for(const i in this) {\r\n      const value = this[i];\r\n      if(value instanceof AppManager) {\r\n        value.clear?.();\r\n      }\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('state_cleared');\r\n  }\r\n\r\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\r\n    state.syncLoading = promise;\r\n    this.rootScope.dispatchEvent('state_synchronizing', channelId);\r\n\r\n    promise.then(() => {\r\n      state.syncLoading = null;\r\n      this.rootScope.dispatchEvent('state_synchronized', channelId);\r\n    }, () => {\r\n      state.syncLoading = null;\r\n    });\r\n  }\r\n\r\n  public addChannelState(channelId: ChatId, pts: number) {\r\n    if(!pts) {\r\n      throw new Error('Add channel state without pts ' + channelId);\r\n    }\r\n\r\n    return this.channelStates[channelId] ??= {\r\n      pts,\r\n      pendingPtsUpdates: [],\r\n      syncPending: null,\r\n      syncLoading: null\r\n    };\r\n  }\r\n\r\n  public getChannelState(channelId: ChatId, pts?: number) {\r\n    if(this.channelStates[channelId] === undefined) {\r\n      this.addChannelState(channelId, pts);\r\n    }\r\n\r\n    return this.channelStates[channelId];\r\n  }\r\n\r\n  private processUpdate(update: Update, options: Partial<{\r\n    date: number,\r\n    seq: number,\r\n    seqStart: number/* ,\r\n    ignoreSyncLoading: boolean */\r\n  }> = {}) {\r\n    let channelId: ChatId;\r\n    switch(update._) {\r\n      case 'updateNewChannelMessage':\r\n      case 'updateEditChannelMessage':\r\n        channelId = this.appPeersManager.getPeerId(update.message.peer_id).toChatId();\r\n        break;\r\n      /* case 'updateDeleteChannelMessages':\r\n        channelId = update.channel_id;\r\n        break; */\r\n      case 'updateChannelTooLong':\r\n        channelId = update.channel_id;\r\n        if(!(channelId in this.channelStates)) {\r\n          return false;\r\n        }\r\n        break;\r\n      default:\r\n        if('channel_id' in update && 'pts' in update) {\r\n          channelId = update.channel_id;\r\n        }\r\n        break;\r\n    }\r\n\r\n    const {pts, pts_count} = update as Update.updateNewMessage;\r\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\r\n\r\n    // this.log.log('process', channelId, curState.pts, update)\r\n\r\n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\r\n      return false;\r\n    }\r\n\r\n    if(update._ === 'updateChannelTooLong') {\r\n      if(!curState.lastPtsUpdateTime ||\r\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\r\n        // this.log.trace('channel too long, get diff', channelId, update)\r\n        this.getChannelDifference(channelId);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if(update._ === 'updateNewMessage' ||\r\n        update._ === 'updateEditMessage' ||\r\n        update._ === 'updateNewChannelMessage' ||\r\n        update._ === 'updateEditChannelMessage') {\r\n      const message = update.message as Message.message;\r\n      const toPeerId = this.appPeersManager.getPeerId(message.peer_id);\r\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\r\n      let reason: string;\r\n      if(message.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\r\n          fwdHeader.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\r\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !this.appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\r\n          toPeerId.isUser() && !this.appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\r\n          toPeerId.isAnyChat() && !this.appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\r\n        this.log.warn('Not enough data for message update', toPeerId, reason, message);\r\n        if(channelId && this.appChatsManager.hasChat(channelId)) {\r\n          this.getChannelDifference(channelId);\r\n        } else {\r\n          this.forceGetDifference();\r\n        }\r\n        return false;\r\n      }\r\n    } else if(channelId && !this.appChatsManager.hasChat(channelId)) {\r\n      // this.log.log('skip update, missing channel', channelId, update)\r\n      return false;\r\n    }\r\n\r\n    let popPts: boolean;\r\n    let popSeq: boolean;\r\n\r\n    if(pts) {\r\n      const newPts = curState.pts + (pts_count || 0);\r\n      if(newPts < pts) {\r\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && this.appChatsManager.getChat(channelId));\r\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\r\n        if(!curState.syncPending && !curState.syncLoading) {\r\n          curState.syncPending = {\r\n            timeout: ctx.setTimeout(() => {\r\n              curState.syncPending = null;\r\n\r\n              if(curState.syncLoading) {\r\n                return;\r\n              }\r\n\r\n              if(channelId) {\r\n                this.getChannelDifference(channelId);\r\n              } else {\r\n                this.getDifference();\r\n              }\r\n            }, SYNC_DELAY)\r\n          };\r\n        }\r\n\r\n        curState.syncPending.ptsAwaiting = true;\r\n        return false;\r\n      }\r\n\r\n      if(pts > curState.pts) {\r\n        curState.pts = pts;\r\n        popPts = true;\r\n\r\n        curState.lastPtsUpdateTime = Date.now();\r\n      } else if(pts_count) {\r\n        // this.log.warn('Duplicate update', update)\r\n        return false;\r\n      }\r\n\r\n      if(channelId && options.date && this.updatesState.date < options.date) {\r\n        this.updatesState.date = options.date;\r\n      }\r\n    } else if(!channelId && options.seq > 0) {\r\n      const seq = options.seq;\r\n      const seqStart = options.seqStart || seq;\r\n\r\n      if(seqStart !== curState.seq + 1) {\r\n        if(seqStart > curState.seq) {\r\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending?.seqAwaiting);\r\n\r\n          curState.pendingSeqUpdates[seqStart] ??= {seq, date: options.date, updates: []};\r\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\r\n\r\n          if(!curState.syncPending) {\r\n            curState.syncPending = {\r\n              timeout: ctx.setTimeout(() => {\r\n                curState.syncPending = null;\r\n\r\n                if(curState.syncLoading) {\r\n                  return;\r\n                }\r\n\r\n                this.getDifference();\r\n              }, SYNC_DELAY)\r\n            };\r\n          }\r\n\r\n          if(!curState.syncPending.seqAwaiting ||\r\n            curState.syncPending.seqAwaiting < seqStart) {\r\n            curState.syncPending.seqAwaiting = seqStart;\r\n          }\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(curState.seq !== seq) {\r\n        curState.seq = seq;\r\n        if(options.date && curState.date < options.date) {\r\n          curState.date = options.date;\r\n        }\r\n\r\n        popSeq = true;\r\n      }\r\n    }\r\n\r\n    this.saveUpdate(update);\r\n\r\n    if(popPts) {\r\n      this.popPendingPtsUpdate(channelId);\r\n    } else if(popSeq) {\r\n      this.popPendingSeqUpdate();\r\n    }\r\n  }\r\n\r\n  public saveUpdate(update: Update) {\r\n    this.debug && this.log.debug('update', update);\r\n    this.dispatchEvent(update._, update as any);\r\n  }\r\n\r\n  public subscribeToChannelUpdates(channelId: ChatId) {\r\n    const subscription = this.subscriptions[channelId] ??= {count: 0};\r\n    ++subscription.count;\r\n\r\n    const cb = () => {\r\n      const state = this.getChannelState(channelId);\r\n      if(!state.syncLoading && (!state.lastDifferenceTime || (Date.now() - state.lastDifferenceTime) > 2500)) {\r\n        this.getChannelDifference(channelId);\r\n      }\r\n    };\r\n\r\n    subscription.interval ??= ctx.setInterval(cb, 3000);\r\n    cb();\r\n  }\r\n\r\n  public unsubscribeFromChannelUpdates(channelId: ChatId, force?: boolean) {\r\n    const subscription = this.subscriptions[channelId];\r\n    if(!subscription?.interval || (--subscription.count && !force)) {\r\n      return;\r\n    }\r\n\r\n    clearInterval(subscription.interval);\r\n    subscription.interval = undefined;\r\n    delete this.subscriptions[channelId];\r\n  }\r\n\r\n  public attach(langCode?: string) {\r\n    if(this.attached) return;\r\n\r\n    // return;\r\n\r\n    this.log('attach');\r\n\r\n    this.attached = true;\r\n\r\n    this.appStateManager.getState().then(({updates: state}) => {\r\n      const newVersion = this.appStateManager.newVersion/*  || '1.6.0' */;\r\n\r\n      // rootScope.broadcast('state_synchronizing');\r\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\r\n        this.log('will get new state');\r\n\r\n        this.updatesState.syncLoading = new Promise((resolve) => {\r\n          this.apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\r\n            this.updatesState.seq = stateResult.seq;\r\n            this.updatesState.pts = stateResult.pts;\r\n            this.updatesState.date = stateResult.date;\r\n            this.saveUpdatesState();\r\n            // setTimeout(() => {\r\n            this.updatesState.syncLoading = null;\r\n            resolve();\r\n            // rootScope.broadcast('state_synchronized');\r\n            // }, 1000);\r\n\r\n          // ! for testing\r\n          // updatesState.seq = 1\r\n          // updatesState.pts = stateResult.pts - 5000\r\n          // updatesState.date = 1\r\n          // getDifference()\r\n          });\r\n        });\r\n      } else {\r\n        // ! for testing\r\n        /* state.seq = 1;\r\n        state.pts = state.pts - 15;\r\n        state.date = 1; */\r\n        // state.pts -= 100;\r\n\r\n        // state.date = 1628623682;\r\n        // state.pts = 2007500;\r\n        // state.seq = 503;\r\n\r\n        Object.assign(this.updatesState, state);\r\n\r\n        this.log('will get difference', Object.assign({}, state));\r\n\r\n        this.getDifference(true)/* .finally(() => {\r\n          if(this.updatesState.syncLoading) {\r\n            rootScope.broadcast('state_synchronizing');\r\n          }\r\n        }) */;\r\n      }\r\n\r\n      this.apiManager.setUpdatesProcessor(this.processUpdateMessage);\r\n\r\n      // this.updatesState.syncLoading.then(() => {\r\n      this.setProxy();\r\n      // });\r\n\r\n      if(newVersion) {\r\n        this.updatesState.syncLoading.then(async() => {\r\n          const strs: Record<string, string> = {\r\n            en: 'was updated to version',\r\n            ru: 'обновлён до версии'\r\n          };\r\n\r\n          const getChangelog = (lang: string) => {\r\n            return fetch(`changelogs/${lang}_${newVersion.split(' ')[0]}.md`)\r\n            .then((res) => (res.status === 200 && res.ok && res.text()) || Promise.reject())\r\n            .then((text) => {\r\n              const langStr = strs[lang] || strs.en;\r\n              const pre = `**Telegram Web${App.suffix} ${langStr} ${newVersion}**\\n\\n`;\r\n\r\n              text = pre + text;\r\n\r\n              const entities: MessageEntity[] = [];\r\n              const message = parseMarkdown(text, entities);\r\n\r\n              const update: Update.updateServiceNotification = {\r\n                _: 'updateServiceNotification',\r\n                entities,\r\n                message,\r\n                type: 'local',\r\n                pFlags: {},\r\n                inbox_date: tsNow(true),\r\n                media: undefined\r\n              };\r\n\r\n              this.processLocalUpdate(update);\r\n            });\r\n          };\r\n\r\n          const languages = filterUnique([langCode, 'en']);\r\n          for(const language of languages) {\r\n            try {\r\n              await getChangelog(language);\r\n              break;\r\n            } catch(err) {\r\n\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ninterface ApiUpdatesManager extends EventListenerBase<{\r\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\r\n}>, AppManager {}\r\napplyMixins(ApiUpdatesManager, [EventListenerBase, AppManager]);\r\n\r\nexport {ApiUpdatesManager};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {joinDeepPath} from '../../helpers/object/setDeepProperty';\r\nimport {UserProfilePhoto, ChatPhoto, InputFileLocation} from '../../layer';\r\nimport {DownloadOptions} from '../mtproto/apiFileManager';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport {AppManager} from './manager';\r\n\r\nexport type PeerPhotoSize = 'photo_small' | 'photo_big';\r\n\r\nexport class AppAvatarsManager extends AppManager {\r\n  private savedAvatarURLs: {\r\n    [peerId: PeerId]: {\r\n      [size in PeerPhotoSize]?: string | Promise<string>\r\n    }\r\n  } = {};\r\n\r\n  protected after() {\r\n    this.rootScope.addEventListener('avatar_update', ({peerId, threadId}) => {\r\n      if(threadId) {\r\n        return;\r\n      }\r\n\r\n      this.removeFromAvatarsCache(peerId);\r\n    });\r\n  }\r\n\r\n  public isAvatarCached(peerId: PeerId, size?: PeerPhotoSize) {\r\n    const saved = this.savedAvatarURLs[peerId];\r\n    if(size === undefined) {\r\n      return !!saved;\r\n    }\r\n\r\n    return !!(saved && saved[size] && !(saved[size] instanceof Promise));\r\n  }\r\n\r\n  public removeFromAvatarsCache(peerId: PeerId) {\r\n    if(this.savedAvatarURLs[peerId]) {\r\n      delete this.savedAvatarURLs[peerId];\r\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n        name: 'avatars',\r\n        key: '' + peerId\r\n      });\r\n    }\r\n  }\r\n\r\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\r\n    const saved = this.savedAvatarURLs[peerId] ??= {};\r\n    if(saved[size]) {\r\n      return saved[size];\r\n    }\r\n\r\n    // console.warn('will invoke downloadSmallFile:', peerId);\r\n    const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\r\n      _: 'inputPeerPhotoFileLocation',\r\n      pFlags: {},\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      photo_id: photo.photo_id\r\n    };\r\n\r\n    const downloadOptions: DownloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\r\n    if(size === 'photo_big') {\r\n      peerPhotoFileLocation.pFlags.big = true;\r\n      downloadOptions.limitPart = 512 * 1024;\r\n    }\r\n\r\n    const promise = this.apiFileManager.download(downloadOptions);\r\n    return saved[size] = promise.then((blob) => {\r\n      const url = saved[size] = URL.createObjectURL(blob);\r\n\r\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n        name: 'avatars',\r\n        key: joinDeepPath(peerId, size),\r\n        value: url\r\n      });\r\n\r\n      return url;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nconst arrays = {\r\n  8: new Uint8Array(1),\r\n  16: new Uint16Array(1),\r\n  32: new Uint32Array(1)\r\n};\r\nexport function nextRandomUint(bits: 8 | 16 | 32) {\r\n  const array = arrays[bits];\r\n  crypto.getRandomValues(array);\r\n  return array[0];\r\n}\r\n\r\nexport function randomLong() {\r\n  return '' + nextRandomUint(32) + nextRandomUint(32) % 0xFFFFFF;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {nextRandomUint} from '../../helpers/random';\r\nimport {InputPhoneCall, MessagesDhConfig, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, PhonePhoneCall} from '../../layer';\r\nimport {AppManager} from './manager';\r\n\r\nexport type CallId = PhoneCall['id'];\r\n\r\nexport type MyPhoneCall = Exclude<PhoneCall, PhoneCall.phoneCallEmpty | PhoneCall.phoneCallDiscarded>;\r\n\r\nexport class AppCallsManager extends AppManager {\r\n  private calls: Map<CallId, MyPhoneCall>;\r\n\r\n  protected after() {\r\n    this.calls = new Map();\r\n\r\n    if(!getEnvironment().IS_CALL_SUPPORTED) {\r\n      return;\r\n    }\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updatePhoneCall: (update) => {\r\n        this.saveCall(update.phone_call);\r\n      },\r\n\r\n      updatePhoneCallSignalingData: (update) => {\r\n        this.rootScope.dispatchEvent('call_signaling', {callId: update.phone_call_id, data: update.data});\r\n      }\r\n    });\r\n  }\r\n\r\n  public computeKey(g_b: Uint8Array, a: Uint8Array, p: Uint8Array) {\r\n    return this.cryptoWorker.invokeCrypto('compute-dh-key', g_b, a, p);\r\n  }\r\n\r\n  public saveCall(call: PhoneCall) {\r\n    const isDiscarded = call._ === 'phoneCallDiscarded';\r\n    const oldCall = this.calls.get(call.id);\r\n    if(oldCall) {\r\n      // if(shouldUpdate) {\r\n      safeReplaceObject(oldCall, call);\r\n      // }\r\n\r\n      if(isDiscarded) {\r\n        this.calls.delete(call.id);\r\n      }\r\n\r\n      call = oldCall;\r\n    } else if(!isDiscarded) {\r\n      this.calls.set(call.id, call as any);\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('call_update', call);\r\n\r\n    return call;\r\n  }\r\n\r\n  public getCall(callId: CallId) {\r\n    return this.calls.get(callId);\r\n  }\r\n\r\n  public getCallInput(id: CallId): InputPhoneCall {\r\n    const call = this.getCall(id);\r\n    return {\r\n      _: 'inputPhoneCall',\r\n      id: call.id,\r\n      access_hash: call.access_hash\r\n    };\r\n  }\r\n\r\n  public savePhonePhoneCall(phonePhoneCall: PhonePhoneCall) {\r\n    this.appUsersManager.saveApiUsers(phonePhoneCall.users);\r\n    return this.saveCall(phonePhoneCall.phone_call);\r\n  }\r\n\r\n  public generateDh() {\r\n    return this.apiManager.invokeApi('messages.getDhConfig', {\r\n      version: 0,\r\n      random_length: 256\r\n    }).then((dhConfig) => {\r\n      return this.cryptoWorker.invokeCrypto('generate-dh', dhConfig as MessagesDhConfig.messagesDhConfig);\r\n    });\r\n  }\r\n\r\n  // private verifyProtocolCompatibility(protocol: PhoneCallProtocol) {\r\n  //   const my = getCallProtocol();\r\n  //   const myVersion = my.library_versions[0];\r\n  //   return !protocol.library_versions.find((version) => {\r\n  //     return compareVersion(myVersion, version) > 0;\r\n  //   });\r\n  // }\r\n\r\n  public async requestCall(userId: UserId, protocol: PhoneCallProtocol, g_a_hash: Uint8Array, video?: boolean) {\r\n    const phonePhoneCall = await this.apiManager.invokeApi('phone.requestCall', {\r\n      user_id: this.appUsersManager.getUserInput(userId),\r\n      protocol: protocol,\r\n      video: video,\r\n      random_id: nextRandomUint(32),\r\n      g_a_hash: g_a_hash\r\n    });\r\n\r\n    return this.savePhonePhoneCall(phonePhoneCall);\r\n  }\r\n\r\n  public async discardCall(callId: CallId, duration: number, reason: PhoneCallDiscardReason['_'], video?: boolean) {\r\n    if(!this.getCall(callId)) {\r\n      return;\r\n    }\r\n\r\n    const updates = await this.apiManager.invokeApi('phone.discardCall', {\r\n      video,\r\n      peer: this.getCallInput(callId),\r\n      duration,\r\n      reason: {\r\n        _: reason\r\n      },\r\n      connection_id: '0'\r\n    });\r\n\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Chat, ChatAdminRights, ChatBannedRights} from '../../../../layer';\r\nimport {ChatRights} from '../../appChatsManager';\r\n\r\n/**\r\n * Check the user's ability to do an action in chat\r\n * @param id\r\n * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\r\n * @param rights do not provide this parameter when checking rights for self\r\n * @param isThread\r\n * @returns\r\n */\r\nexport default function hasRights(\r\n  chat: Exclude<Chat, Chat.chatEmpty>,\r\n  action: ChatRights,\r\n  rights?: ChatAdminRights | ChatBannedRights,\r\n  isThread?: boolean\r\n) {\r\n  if(!chat) return false;\r\n\r\n  if((chat as Chat.chat).pFlags.deactivated && action !== 'view_messages') {\r\n    return false;\r\n  }\r\n\r\n  const isCheckingRightsForSelf = rights === undefined;\r\n  if((chat as Chat.chat).pFlags.creator && isCheckingRightsForSelf && action !== 'anonymous') {\r\n    return true;\r\n  }\r\n\r\n  if(chat._ === 'chatForbidden' ||\r\n      chat._ === 'channelForbidden' ||\r\n      // (chat as any).pFlags.kicked ||\r\n      (chat.pFlags.left && !(chat as Chat.channel).pFlags.megagroup)) {\r\n    return false;\r\n  }\r\n\r\n  // const adminRights = chat.admin_rights;\r\n  // const bannedRights = (chat as Chat.channel).banned_rights || chat.default_banned_rights;\r\n\r\n  if(!rights) {\r\n    rights = chat.admin_rights || (chat as Chat.channel).banned_rights || chat.default_banned_rights;\r\n\r\n    if(!rights) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  let myFlags: Partial<{[flag in keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags']]: true}> = {};\r\n  if(rights) {\r\n    myFlags = rights.pFlags as any;\r\n  }\r\n\r\n  // const adminFlags = adminRights?.pFlags || {};\r\n  // const bannedFlags = bannedRights?.pFlags || {};\r\n\r\n  const isAdmin = rights._ === 'chatAdminRights';\r\n\r\n  switch(action) {\r\n    case 'embed_links':\r\n    case 'send_games':\r\n    case 'send_gifs':\r\n    case 'send_inline':\r\n    case 'send_media':\r\n    case 'send_messages':\r\n    case 'send_polls':\r\n    case 'send_stickers':\r\n    case 'send_photos':\r\n    case 'send_videos':\r\n    case 'send_roundvideos':\r\n    case 'send_audios':\r\n    case 'send_voices':\r\n    case 'send_docs':\r\n    case 'send_plain': {\r\n      if(!isThread && chat.pFlags.left) {\r\n        return false;\r\n      }\r\n\r\n      if(!isAdmin && myFlags[action]) {\r\n        return false;\r\n      }\r\n\r\n      if(chat._ === 'channel') {\r\n        if(!chat.pFlags.megagroup && !myFlags.post_messages) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    // * revoke foreign messages\r\n    case 'delete_messages':\r\n    case 'manage_call': {\r\n      return !!myFlags[action];\r\n    }\r\n\r\n    case 'pin_messages': {\r\n      return isAdmin ? !!(myFlags[action] || (!(chat as Chat.channel).pFlags.megagroup && myFlags.post_messages)) : !myFlags[action];\r\n    }\r\n\r\n    // case 'change_info': {\r\n    // return adminRights || isCheckingRightsForSelf ? adminFlags[action] : !myFlags[action];\r\n    // }\r\n\r\n    case 'invite_links': {\r\n      if(chat._ === 'chat') {\r\n        return false;\r\n      }\r\n\r\n      return isAdmin && !!myFlags['invite_users'];\r\n    }\r\n\r\n    // * only creator can do that\r\n    case 'change_type':\r\n    case 'delete_chat': {\r\n      return false;\r\n    }\r\n\r\n    case 'change_info':\r\n    case 'invite_users': {\r\n      return isAdmin || (chat as Chat.channel).pFlags.broadcast ? !!myFlags[action] : !myFlags[action];\r\n    }\r\n\r\n    case 'delete_stories':\r\n    case 'edit_stories':\r\n    case 'post_stories':\r\n    case 'add_admins':\r\n    case 'anonymous':\r\n    case 'post_messages':\r\n    case 'edit_messages':\r\n    case 'manage_topics': {\r\n      return isAdmin && !!myFlags[action];\r\n    }\r\n\r\n    case 'ban_users':\r\n    case 'change_permissions': {\r\n      return isAdmin && !!myFlags['ban_users'];\r\n    }\r\n\r\n    case 'view_participants': {\r\n      return !!(chat._ === 'chat' || !chat.pFlags.broadcast || chat.pFlags.creator || chat.admin_rights);\r\n    }\r\n\r\n    case 'create_giveaway': {\r\n      return isAdmin && !!myFlags['post_messages'];\r\n    }\r\n\r\n    // case 'view_statistics': {\r\n    //   return isAdmin && !!myFlags['other'];\r\n    // }\r\n  }\r\n\r\n  return true;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {ChannelParticipant, ChatParticipant} from '../../../../layer';\r\nimport getPeerId from '../peers/getPeerId';\r\n\r\nexport default function getParticipantPeerId(participant: PeerId | ChannelParticipant | ChatParticipant): PeerId {\r\n  if(typeof(participant) !== 'object') {\r\n    return participant;\r\n  }\r\n\r\n  const peerId = (participant as ChannelParticipant.channelParticipantBanned).peer ?\r\n    getPeerId((participant as ChannelParticipant.channelParticipantBanned).peer) :\r\n    (participant as ChatParticipant.chatParticipant).user_id.toPeerId();\r\n  return peerId;\r\n}\r\n","import {Chat, User} from '../../../../layer';\r\n\r\nexport default function getPeerActiveUsernames(peer: User | Chat) {\r\n  if(!peer) {\r\n    return [];\r\n  }\r\n\r\n  const usernames = (peer as Chat.channel).usernames;\r\n  if(usernames) {\r\n    return usernames\r\n    .filter((username) => username.pFlags.active)\r\n    // .sort((a, b) => +!!b.pFlags.editable - +!!a.pFlags.editable)\r\n    .map((username) => username.username);\r\n  }\r\n\r\n  return (peer as Chat.channel).username ? [(peer as Chat.channel).username] : [];\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {ChannelParticipant, ChannelsCreateChannel, Chat, ChatAdminRights, ChatBannedRights, ChatFull, ChatInvite, ChatParticipant, ChatPhoto, ChatReactions, EmojiStatus, InputChannel, InputChatPhoto, InputFile, InputPeer, MessagesChats, MessagesSponsoredMessages, Peer, SponsoredMessage, Update, Updates} from '../../layer';\r\nimport {AppManager} from './manager';\r\nimport hasRights from './utils/chats/hasRights';\r\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\r\nimport {AppStoragesManager} from './appStoragesManager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport {randomLong} from '../../helpers/random';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport getPeerId from './utils/peers/getPeerId';\r\n\r\nexport type Channel = Chat.channel;\r\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] |\r\n  'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants' |\r\n  'invite_links' | 'create_giveaway'/*  | 'view_statistics' */;\r\n\r\nconst TEST_SPONSORED = false;\r\n\r\nexport class AppChatsManager extends AppManager {\r\n  private storage: AppStoragesManager['storages']['chats'];\r\n\r\n  private chats: {[id: ChatId]: Exclude<Chat, Chat.chatEmpty>};\r\n  // private usernames: any;\r\n  // private channelAccess: any;\r\n  // private megagroups: {[id: number]: true};\r\n\r\n  private recommendations: {[chatId: ChatId]: MaybePromise<MessagesChats>};\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateChannelParticipant: this.onUpdateChannelParticipant,\r\n\r\n      updateChatDefaultBannedRights: this.onUpdateChatDefaultBannedRights\r\n    });\r\n\r\n    return Promise.all([\r\n      this.appStateManager.getState(),\r\n      this.appStoragesManager.loadStorage('chats')\r\n    ]).then(([state, {results: chats, storage}]) => {\r\n      this.storage = storage;\r\n\r\n      this.saveApiChats(chats);\r\n\r\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\r\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\r\n          return;\r\n        }\r\n\r\n        this.storage.set({\r\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\r\n        });\r\n      });\r\n\r\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\r\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\r\n          return;\r\n        }\r\n\r\n        this.storage.delete(peerId.toChatId());\r\n      });\r\n\r\n      this.rootScope.addEventListener('premium_toggle', () => {\r\n        this.recommendations = {};\r\n      });\r\n    });\r\n  }\r\n\r\n  public clear = (init = false) => {\r\n    if(!init) {\r\n      for(const chatId in this.chats) {\r\n        if(!chatId) continue;\r\n        if(!this.peersStorage.isPeerNeeded(chatId.toPeerId(true))) {\r\n          const chat = this.chats[chatId];\r\n          this.appUsersManager.modifyUsernamesCache(chat, false);\r\n\r\n          this.storage.delete(chatId);\r\n          delete this.chats[chatId];\r\n        }\r\n      }\r\n    } else {\r\n      this.chats = {};\r\n    }\r\n\r\n    this.recommendations = {};\r\n  };\r\n\r\n  public saveApiChats(apiChats: any[], override?: boolean) {\r\n    if(!apiChats || (apiChats as any).saved) return;\r\n    (apiChats as any).saved = true;\r\n    apiChats.forEach((chat) => this.saveApiChat(chat, override));\r\n  }\r\n\r\n  public saveApiChat(chat: Chat, override?: boolean) {\r\n    if(!chat || chat._ === 'chatEmpty') return;\r\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\r\n      return;\r\n    } */\r\n\r\n    // * exclude from state\r\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\r\n\r\n    const oldChat = this.chats[chat.id];\r\n\r\n    /* if(oldChat && !override) {\r\n      return;\r\n    } */\r\n\r\n    (chat as Chat.chat).pFlags ??= {};\r\n\r\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\r\n      return;\r\n    }\r\n\r\n    if(chat._ === 'channel' &&\r\n        chat.participants_count === undefined &&\r\n        oldChat !== undefined &&\r\n        (oldChat as Chat.channel).participants_count) {\r\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\r\n    }\r\n\r\n    if((chat as Chat.channel).photo?._ === 'chatPhotoEmpty') {\r\n      delete (chat as Chat.channel).photo;\r\n    }\r\n\r\n    const changedUsername = this.appUsersManager.setUsernameToCache(chat, oldChat);\r\n\r\n    /* if(chat.username) {\r\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\r\n      this.usernames[searchUsername] = chat.id;\r\n    } */\r\n\r\n    if((chat as Chat.channel).emoji_status?._ === 'emojiStatusEmpty') {\r\n      delete (chat as Chat.channel).emoji_status;\r\n    }\r\n\r\n    const peerId = chat.id.toPeerId(true);\r\n    if(oldChat === undefined) {\r\n      this.chats[chat.id] = chat;\r\n      this.mirrorChat(chat);\r\n    } else {\r\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\r\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\r\n      const toggledForum = (oldChat as Chat.channel).pFlags.forum !== (chat as Chat.channel).pFlags.forum;\r\n      const changedPhoto = oldPhotoId !== newPhotoId || toggledForum;\r\n      const changedEmojiStatus = ((oldChat as Chat.channel).emoji_status as EmojiStatus.emojiStatus)?.document_id !==\r\n        ((chat as Chat.channel).emoji_status as EmojiStatus.emojiStatus)?.document_id;\r\n\r\n      const changedTitle = oldChat.title !== chat.title || changedUsername;\r\n\r\n      const changedAnyBadge = changedEmojiStatus ||\r\n        (oldChat as Chat.channel).pFlags.verified !== (chat as Chat.channel).pFlags.verified ||\r\n        (oldChat as Chat.channel).pFlags.scam !== (chat as Chat.channel).pFlags.scam ||\r\n        (oldChat as Chat.channel).pFlags.fake !== (chat as Chat.channel).pFlags.fake;\r\n\r\n      const changedParticipation = (oldChat as Chat.channel).pFlags.left !== (chat as Chat.channel).pFlags.left;\r\n\r\n      const storiesCallback = this.appStoriesManager.saveApiPeerStories(chat as Chat.channel, oldChat as Chat.channel);\r\n\r\n      safeReplaceObject(oldChat, chat);\r\n      this.mirrorChat(oldChat);\r\n      this.rootScope.dispatchEvent('chat_update', chat.id);\r\n\r\n      storiesCallback?.();\r\n\r\n      if(changedParticipation) {\r\n        this.rootScope.dispatchEvent('chat_participation', {chatId: chat.id, left: !!(chat as Chat.channel).pFlags.left});\r\n      }\r\n\r\n      if(changedPhoto) {\r\n        this.rootScope.dispatchEvent('avatar_update', {peerId});\r\n      }\r\n\r\n      if(changedTitle || changedAnyBadge) {\r\n        this.rootScope.dispatchEvent('peer_title_edit', {peerId});\r\n      }\r\n\r\n      if(toggledForum) {\r\n        this.rootScope.dispatchEvent('chat_toggle_forum', {chatId: chat.id, enabled: !!(chat as Chat.channel).pFlags.forum});\r\n      }\r\n    }\r\n\r\n    if(this.peersStorage.isPeerNeeded(peerId)) {\r\n      this.storage.set({\r\n        [chat.id]: chat\r\n      });\r\n    }\r\n  }\r\n\r\n  private mirrorChat(chat: Chat) {\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'peers',\r\n      key: '' + chat.id.toPeerId(true),\r\n      value: chat\r\n    });\r\n  }\r\n\r\n  public getChat(id: ChatId) {\r\n    return this.chats[id];\r\n  }\r\n\r\n  public getChats() {\r\n    return this.chats;\r\n  }\r\n\r\n  /**\r\n   * Check the user's ability to do an action in chat\r\n   * @param id\r\n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\r\n   * @param rights do not provide this parameter when checking rights for self\r\n   * @param isThread\r\n   * @returns\r\n   */\r\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\r\n    return hasRights(this.getChat(id), action, rights, isThread);\r\n  }\r\n\r\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\r\n    const chat = this.getChat(id) as Chat.chat;\r\n    if(chat.default_banned_rights) {\r\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\r\n        return Promise.resolve();\r\n      }\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.editChatDefaultBannedRights', {\r\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true)),\r\n      banned_rights\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  /* public resolveUsername(username: string) {\r\n    return this.usernames[username] || 0;\r\n  } */\r\n\r\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\r\n    this.channelAccess[id] = accessHash;\r\n  } */\r\n\r\n  /* public saveIsMegagroup(id: ChatId) {\r\n    this.megagroups[id] = true;\r\n  } */\r\n\r\n  public isChannel(id: ChatId) {\r\n    const chat = this.chats[id];\r\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\r\n  }\r\n\r\n  public isMegagroup(id: ChatId) {\r\n    /* if(this.megagroups[id]) {\r\n      return true;\r\n    } */\r\n\r\n    const chat: Chat = this.chats[id];\r\n    return !!(chat as Chat.channel)?.pFlags?.megagroup;\r\n  }\r\n\r\n  public isForum(id: ChatId) {\r\n    const chat = this.chats[id];\r\n    return !!(chat as Chat.channel)?.pFlags?.forum;\r\n  }\r\n\r\n  public isBroadcast(id: ChatId) {\r\n    return this.isChannel(id) && !this.isMegagroup(id);\r\n  }\r\n\r\n  public isInChat(id: ChatId) {\r\n    let good = true;\r\n    const chat: Chat = this.getChat(id);\r\n    if(!chat ||\r\n      chat._ === 'channelForbidden' ||\r\n      chat._ === 'chatForbidden' ||\r\n      (chat as any as Chat.chatEmpty)._ === 'chatEmpty' ||\r\n      (chat as Chat.chat).pFlags.left ||\r\n      // || (chat as any).pFlags.kicked\r\n      (chat as Chat.chat).pFlags.deactivated) {\r\n      good = false;\r\n    }\r\n\r\n    return good;\r\n  }\r\n\r\n  public isPublic(id: ChatId) {\r\n    const chat: Chat = this.getChat(id);\r\n    return !!getPeerActiveUsernames(chat)[0];\r\n  }\r\n\r\n  public getChannelInput(id: ChatId): InputChannel {\r\n    const chat: Chat = this.getChat(id);\r\n    if(!chat || !(chat as Chat.channel).access_hash) {\r\n      return {\r\n        _: 'inputChannelEmpty'\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputChannel',\r\n        channel_id: id,\r\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\r\n      };\r\n    }\r\n  }\r\n\r\n  public getInputPeer(id: ChatId) {\r\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\r\n  }\r\n\r\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\r\n    return {\r\n      _: 'inputPeerChat',\r\n      chat_id: id\r\n    };\r\n  }\r\n\r\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\r\n    return {\r\n      _: 'inputPeerChannel',\r\n      channel_id: id,\r\n      access_hash: (this.getChat(id) as Chat.channel).access_hash/*  || this.channelAccess[id] */ || 0\r\n    };\r\n  }\r\n\r\n  public hasChat(id: ChatId, allowMin?: true) {\r\n    const chat = this.chats[id];\r\n    return isObject(chat) && (allowMin || !(chat as Chat.channel).pFlags.min);\r\n  }\r\n\r\n  public getChatString(id: ChatId) {\r\n    const chat = this.getChat(id);\r\n    if(this.isChannel(id)) {\r\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + (chat as Chat.channel).access_hash;\r\n    }\r\n    return 'g' + id;\r\n  }\r\n\r\n  public getChatSearchText(id: ChatId) {\r\n    const chat = this.chats[id];\r\n    if(!chat) {\r\n      return '';\r\n    }\r\n\r\n    const arr: string[] = [\r\n      chat.title,\r\n      ...getPeerActiveUsernames(chat)\r\n    ];\r\n\r\n    return arr.filter(Boolean).join(' ');\r\n  }\r\n\r\n  public createChannel(options: ChannelsCreateChannel): Promise<ChatId> {\r\n    return this.apiManager.invokeApi('channels.createChannel', options).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n\r\n      const channelId = (updates as any).chats[0].id;\r\n      return channelId;\r\n    });\r\n  }\r\n\r\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\r\n    const input = this.getChannelInput(id);\r\n    const usersInputs = userIds.map((u) => this.appUsersManager.getUserInput(u));\r\n\r\n    return this.apiManager.invokeApi('channels.inviteToChannel', {\r\n      channel: input,\r\n      users: usersInputs\r\n    }).then((updates) => {\r\n      const timestamp = tsNow(true);\r\n      const participantUpdates: Update.updateChannelParticipant[] = userIds.map((userId) => {\r\n        return this.generateUpdateChannelParticipant({\r\n          chatId: id,\r\n          newParticipant: {\r\n            _: 'channelParticipant',\r\n            date: timestamp,\r\n            user_id: userId\r\n          }\r\n        });\r\n      });\r\n\r\n      participantUpdates.forEach((update) => {\r\n        this.apiUpdatesManager.processLocalUpdate(update);\r\n      });\r\n\r\n      return this.onChatUpdatedForce(id, updates);\r\n    });\r\n  }\r\n\r\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\r\n    return this.apiManager.invokeApi('messages.createChat', {\r\n      users: userIds.map((u) => this.appUsersManager.getUserInput(u)),\r\n      title\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n\r\n      const chatId = (updates as any as Updates.updates).chats[0].id;\r\n      return chatId;\r\n    });\r\n  }\r\n\r\n  private onChatUpdated = (chatId: ChatId, updates?: Updates, forceInvalidation?: boolean) => {\r\n    // console.log('onChatUpdated', chatId, updates);\r\n\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n    // * can have no updates on editAdmin\r\n    if((forceInvalidation || (updates as Updates.updates)?.updates?.length) && this.isChannel(chatId)) {\r\n      this.rootScope.dispatchEvent('invalidate_participants', chatId);\r\n    }\r\n  };\r\n\r\n  private onChatUpdatedForce = (chatId: ChatId, updates?: Updates) => {\r\n    return this.onChatUpdated(chatId, updates, true);\r\n  }\r\n\r\n  public leaveChannel(id: ChatId) {\r\n    return this.apiManager.invokeApi('channels.leaveChannel', {\r\n      channel: this.getChannelInput(id)\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public joinChannel(id: ChatId) {\r\n    return this.apiManager.invokeApi('channels.joinChannel', {\r\n      channel: this.getChannelInput(id)\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public addToChat(id: ChatId, userId: UserId) {\r\n    if(this.isChannel(id)) return this.inviteToChannel(id, [userId]);\r\n    else return this.addChatUser(id, userId);\r\n  }\r\n\r\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\r\n    return this.apiManager.invokeApi('messages.addChatUser', {\r\n      chat_id: id,\r\n      user_id: this.appUsersManager.getUserInput(userId),\r\n      fwd_limit: fwdLimit\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public deleteChatUser(id: ChatId, userId: UserId) {\r\n    return this.apiManager.invokeApi('messages.deleteChatUser', {\r\n      chat_id: id,\r\n      user_id: this.appUsersManager.getUserInput(userId)\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public leaveChat(id: ChatId) {\r\n    return this.deleteChatUser(id, this.appUsersManager.getSelf().id);\r\n  }\r\n\r\n  public leave(id: ChatId) {\r\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\r\n  }\r\n\r\n  public delete(id: ChatId) {\r\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\r\n  }\r\n\r\n  public deleteChannel(id: ChatId) {\r\n    return this.apiManager.invokeApi('channels.deleteChannel', {\r\n      channel: this.getChannelInput(id)\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public deleteChat(id: ChatId) {\r\n    // return this.leaveChat(id).then(() => {\r\n    return this.apiManager.invokeApi('messages.deleteChat', {\r\n      chat_id: id\r\n    });\r\n    // });\r\n  }\r\n\r\n  public migrateChat(id: ChatId): Promise<ChatId> {\r\n    const chat: Chat = this.getChat(id);\r\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\r\n    return this.apiManager.invokeApi('messages.migrateChat', {\r\n      chat_id: id\r\n    }).then((updates) => {\r\n      this.onChatUpdated(id, updates);\r\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find((u) => u._ === 'updateChannel') as any;\r\n      return update.channel_id;\r\n    });\r\n  }\r\n\r\n  public updateUsername(id: ChatId, username: string, doNotRefresh?: boolean) {\r\n    const promise = this.apiManager.invokeApi('channels.updateUsername', {\r\n      channel: this.getChannelInput(id),\r\n      username\r\n    });\r\n\r\n    return this.refreshChatAfterRequest(id, promise, doNotRefresh);\r\n  }\r\n\r\n  public async toggleParticipantsHidden(id: ChatId, hidden: boolean) {\r\n    id = await this.migrateChat(id);\r\n\r\n    const updates = await this.apiManager.invokeApi('channels.toggleParticipantsHidden', {\r\n      channel: this.getChannelInput(id),\r\n      enabled: hidden\r\n    });\r\n\r\n    return this.onChatUpdatedForce(id, updates);\r\n  }\r\n\r\n  public editAdmin(\r\n    id: ChatId,\r\n    participant: PeerId | ChannelParticipant | ChatParticipant,\r\n    rights: ChatAdminRights,\r\n    rank: string = ''\r\n  ) {\r\n    const wasChannel = this.isChannel(id);\r\n    const peerId = getParticipantPeerId(participant);\r\n    const userId = peerId.toUserId();\r\n    return this.migrateChat(id).then((id) => {\r\n      return this.apiManager.invokeApi('channels.editAdmin', {\r\n        channel: this.getChannelInput(id),\r\n        user_id: this.appUsersManager.getUserInput(userId),\r\n        admin_rights: rights,\r\n        rank\r\n      }).then((updates) => {\r\n        const timestamp = tsNow(true);\r\n        const update = this.generateUpdateChannelParticipant({\r\n          chatId: id,\r\n          newParticipant: Object.keys(rights.pFlags).length ? {\r\n            _: 'channelParticipantAdmin',\r\n            date: timestamp,\r\n            admin_rights: rights,\r\n            promoted_by: this.appUsersManager.getSelf().id,\r\n            user_id: userId,\r\n            rank,\r\n            pFlags: {}\r\n          } : {\r\n            _: 'channelParticipant',\r\n            date: timestamp,\r\n            user_id: userId\r\n          },\r\n          prevParticipant: participant,\r\n          wasChannel\r\n        });\r\n        this.apiUpdatesManager.processLocalUpdate(update);\r\n\r\n        this.onChatUpdatedForce(id, updates);\r\n      });\r\n    });\r\n  }\r\n\r\n  public editPhoto(id: ChatId, inputFile: InputFile) {\r\n    const inputChatPhoto: InputChatPhoto = {\r\n      _: 'inputChatUploadedPhoto',\r\n      file: inputFile\r\n    };\r\n\r\n    let promise: any;\r\n    if(this.isChannel(id)) {\r\n      promise = this.apiManager.invokeApi('channels.editPhoto', {\r\n        channel: this.getChannelInput(id),\r\n        photo: inputChatPhoto\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApi('messages.editChatPhoto', {\r\n        chat_id: id,\r\n        photo: inputChatPhoto\r\n      });\r\n    }\r\n\r\n    return promise.then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public editTitle(id: ChatId, title: string) {\r\n    let promise: any;\r\n\r\n    if(this.isChannel(id)) {\r\n      promise = this.apiManager.invokeApi('channels.editTitle', {\r\n        channel: this.getChannelInput(id),\r\n        title\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApi('messages.editChatTitle', {\r\n        chat_id: id,\r\n        title\r\n      });\r\n    }\r\n\r\n    return promise.then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public editAbout(id: ChatId, about: string) {\r\n    const peerId = id.toPeerId(true);\r\n    return this.apiManager.invokeApi('messages.editChatAbout', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      about\r\n    }).then((bool) => {\r\n      if(bool) {\r\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\r\n      }\r\n\r\n      return bool;\r\n    });\r\n  }\r\n\r\n  private generateUpdateChannelParticipant({\r\n    chatId: id,\r\n    prevParticipant: prevParticipant,\r\n    newParticipant,\r\n    wasChannel\r\n  }: {\r\n    chatId: ChatId,\r\n    prevParticipant?: PeerId | ChannelParticipant | ChatParticipant,\r\n    newParticipant: ChannelParticipant,\r\n    wasChannel?: boolean\r\n  }): Update.updateChannelParticipant {\r\n    const timestamp = tsNow(true);\r\n    const peerId = getParticipantPeerId(prevParticipant || newParticipant);\r\n    return {\r\n      _: 'updateChannelParticipant',\r\n      channel_id: id,\r\n      date: timestamp,\r\n      actor_id: undefined,\r\n      qts: undefined,\r\n      user_id: peerId,\r\n      prev_participant: wasChannel ? prevParticipant as ChannelParticipant : undefined,\r\n      new_participant: newParticipant,\r\n      pFlags: {}\r\n    };\r\n  }\r\n\r\n  public async editBanned(\r\n    id: ChatId,\r\n    participant: PeerId | ChannelParticipant | ChatParticipant,\r\n    bannedRights: ChatBannedRights\r\n  ) {\r\n    const peerId = getParticipantPeerId(participant);\r\n    const wasChannel = this.isChannel(id);\r\n    if(!wasChannel) {\r\n      const channelId = await this.migrateChat(id);\r\n      id = channelId;\r\n    }\r\n\r\n    return this.apiManager.invokeApi('channels.editBanned', {\r\n      channel: this.getChannelInput(id),\r\n      participant: this.appPeersManager.getInputPeerById(peerId),\r\n      banned_rights: bannedRights\r\n    }).then((updates) => {\r\n      const timestamp = tsNow(true);\r\n      const update = this.generateUpdateChannelParticipant({\r\n        chatId: id,\r\n        wasChannel,\r\n        prevParticipant: participant,\r\n        newParticipant: Object.keys(bannedRights.pFlags).length ? {\r\n          _: 'channelParticipantBanned',\r\n          date: timestamp,\r\n          banned_rights: bannedRights,\r\n          kicked_by: this.appUsersManager.getSelf().id,\r\n          peer: this.appPeersManager.getOutputPeer(peerId),\r\n          pFlags: bannedRights.pFlags.view_messages ? {left: true} : {}\r\n        } : undefined\r\n      });\r\n\r\n      this.apiUpdatesManager.processLocalUpdate(update);\r\n\r\n      this.onChatUpdated(id, updates);\r\n    });\r\n  }\r\n\r\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\r\n    return this.editBanned(id, participant, {\r\n      _: 'chatBannedRights',\r\n      until_date: 0,\r\n      pFlags: {}\r\n    });\r\n  }\r\n\r\n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\r\n    return this.editBanned(id, participant, {\r\n      _: 'chatBannedRights',\r\n      until_date: 0,\r\n      pFlags: {\r\n        view_messages: true\r\n      }\r\n    });\r\n  }\r\n\r\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant | ChatParticipant) {\r\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant as ChannelParticipant);\r\n    else return this.deleteChatUser(id, isObject(participant) ? getParticipantPeerId(participant) : (participant as PeerId).toUserId());\r\n  }\r\n\r\n  public resolveChannel(id: ChatId) {\r\n    return this.apiManager.invokeApiSingle('channels.getChannels', {\r\n      id: [{\r\n        _: 'inputChannel',\r\n        channel_id: id,\r\n        access_hash: '0'\r\n      }]\r\n    }).then((messagesChats) => {\r\n      this.saveApiChats(messagesChats.chats);\r\n    });\r\n  }\r\n\r\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\r\n    return this.migrateChat(id).then((channelId) => {\r\n      return this.apiManager.invokeApi('channels.togglePreHistoryHidden', {\r\n        channel: this.getChannelInput(channelId),\r\n        enabled\r\n      }).then(this.onChatUpdated.bind(this, channelId));\r\n    });\r\n  }\r\n\r\n  public toggleSignatures(id: ChatId, enabled: boolean) {\r\n    return this.apiManager.invokeApi('channels.toggleSignatures', {\r\n      channel: this.getChannelInput(id),\r\n      enabled\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\r\n    return this.apiManager.invokeApi('messages.toggleNoForwards', {\r\n      peer: this.getInputPeer(id),\r\n      enabled\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public setChatAvailableReactions(id: ChatId, reactions: ChatReactions) {\r\n    const chatFull = this.appProfileManager.getCachedFullChat(id);\r\n    if(chatFull) {\r\n      chatFull.available_reactions = reactions;\r\n      this.rootScope.dispatchEvent('chat_full_update', id);\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.setChatAvailableReactions', {\r\n      peer: this.getInputPeer(id),\r\n      available_reactions: reactions\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public getSendAs(channelId: ChatId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'channels.getSendAs',\r\n      params: {\r\n        peer: this.getChannelInputPeer(channelId)\r\n      },\r\n      processResult: (sendAsPeers) => {\r\n        this.appUsersManager.saveApiUsers(sendAsPeers.users);\r\n        this.saveApiChats(sendAsPeers.chats);\r\n\r\n        return sendAsPeers.peers;\r\n      }\r\n    });\r\n  }\r\n\r\n  public checkUsername(chatId: ChatId, username: string) {\r\n    return this.apiManager.invokeApi('channels.checkUsername', {\r\n      channel: this.getChannelInput(chatId),\r\n      username\r\n    });\r\n  }\r\n\r\n  public getSponsoredMessage(chatId: ChatId): Promise<MessagesSponsoredMessages> {\r\n    let promise: Promise<MessagesSponsoredMessages>;\r\n    if(TEST_SPONSORED) promise = Promise.resolve({\r\n      '_': 'messages.sponsoredMessages',\r\n      'messages': [\r\n        {\r\n          '_': 'sponsoredMessage',\r\n          'pFlags': {},\r\n          'flags': 9,\r\n          'random_id': new Uint8Array([80, 5, 249, 174, 44, 73, 173, 14, 246, 81, 187, 182, 223, 5, 4, 128]),\r\n          'from_id': {\r\n            '_': 'peerUser',\r\n            'user_id': 983000232\r\n          },\r\n          'start_param': 'GreatMinds',\r\n          'message': 'This is a long sponsored message. In fact, it has the maximum length allowed on the platform – 160 characters 😬😬. It\\'s promoting a bot with a start parameter.' + chatId\r\n        }\r\n      ],\r\n      'chats': [],\r\n      'users': [\r\n        {\r\n          '_': 'user',\r\n          'pFlags': {\r\n            'bot': true,\r\n            'verified': true,\r\n            'apply_min_photo': true\r\n          },\r\n          'flags': 34226219,\r\n          'id': 983000232,\r\n          'access_hash': '-294959558742535650',\r\n          'first_name': 'Quiz Bot',\r\n          'username': 'QuizBot',\r\n          'photo': {\r\n            '_': 'userProfilePhoto',\r\n            'pFlags': {},\r\n            'flags': 2,\r\n            'photo_id': '4221953848856651689',\r\n            'stripped_thumb': new Uint8Array([1, 8, 8, 155, 247, 95, 103, 255, 0, 110, 138, 40, 174, 132, 142, 6, 238, 127]),\r\n            'dc_id': 2\r\n          },\r\n          'bot_info_version': 11,\r\n          'bot_inline_placeholder': 'Search a quiz...',\r\n          'sortName': 'quiz bot'\r\n        }\r\n      ]\r\n    });\r\n\r\n    promise ||= this.apiManager.invokeApiCacheable('channels.getSponsoredMessages', {\r\n      channel: this.getChannelInput(chatId)\r\n    }, {cacheSeconds: 300});\r\n\r\n    return promise.then((sponsoredMessages) => {\r\n      if(sponsoredMessages._ !== 'messages.sponsoredMessages') {\r\n        return sponsoredMessages;\r\n      }\r\n\r\n      this.appPeersManager.saveApiPeers(sponsoredMessages);\r\n\r\n      const sponsoredMessage = sponsoredMessages.messages.shift();\r\n      sponsoredMessages.messages.push(sponsoredMessage);\r\n\r\n      sponsoredMessages.messages.forEach((sponsoredMessage) => {\r\n        const peerId = getPeerId(sponsoredMessage.from_id);\r\n        if(sponsoredMessage.channel_post) {\r\n          sponsoredMessage.channel_post = this.appMessagesIdsManager.generateMessageId(\r\n            sponsoredMessage.channel_post,\r\n            peerId.toChatId()\r\n          );\r\n        }\r\n\r\n        if(sponsoredMessage.webpage) {\r\n          sponsoredMessage.webpage.photo = this.appPhotosManager.savePhoto(sponsoredMessage.webpage.photo);\r\n        }\r\n\r\n        if(sponsoredMessage.app) {\r\n          sponsoredMessage.app = this.appAttachMenuBotsManager.saveBotApp(\r\n            peerId.toUserId(),\r\n            sponsoredMessage.app\r\n          );\r\n        }\r\n\r\n        if(sponsoredMessage.chat_invite) {\r\n          sponsoredMessage.chat_invite = this.appChatInvitesManager.saveChatInvite(\r\n            sponsoredMessage.chat_invite_hash,\r\n            sponsoredMessage.chat_invite\r\n          );\r\n        }\r\n      });\r\n\r\n      return sponsoredMessages;\r\n    });\r\n  }\r\n\r\n  public viewSponsoredMessage(chatId: ChatId, randomId: SponsoredMessage['random_id']) {\r\n    return this.apiManager.invokeApiSingle('channels.viewSponsoredMessage', {\r\n      channel: this.getChannelInput(chatId),\r\n      random_id: randomId\r\n    });\r\n  }\r\n\r\n  public clickSponsoredMessage(chatId: ChatId, randomId: SponsoredMessage['random_id']) {\r\n    return this.apiManager.invokeApiSingle('channels.clickSponsoredMessage', {\r\n      channel: this.getChannelInput(chatId),\r\n      random_id: randomId\r\n    });\r\n  }\r\n\r\n  public deactivateAllUsernames(chatId: ChatId, doNotRefresh?: boolean) {\r\n    const promise = this.apiManager.invokeApi('channels.deactivateAllUsernames', {\r\n      channel: this.getChannelInput(chatId)\r\n    });\r\n\r\n    return this.refreshChatAfterRequest(chatId, promise, doNotRefresh);\r\n  }\r\n\r\n  public makeChannelPrivate(chatId: ChatId) {\r\n    const promises: Promise<boolean>[] = [\r\n      this.updateUsername(chatId, '', true),\r\n      this.deactivateAllUsernames(chatId, true)\r\n    ];\r\n\r\n    const promise = Promise.all(promises).then(() => true);\r\n    return this.refreshChatAfterRequest(chatId, promise);\r\n  }\r\n\r\n  public refreshChatAfterRequest<T extends Promise<any>>(chatId: ChatId, promise: T, doNotRefresh?: boolean): T {\r\n    if(doNotRefresh) {\r\n      return promise;\r\n    }\r\n\r\n    return promise.then((value) => {\r\n      return this.getChannels([chatId]).then(() => value);\r\n    }) as T;\r\n  }\r\n\r\n  public getChannels(chatIds: ChatId[]) {\r\n    return this.apiManager.invokeApi('channels.getChannels', {\r\n      id: chatIds.map((chatId) => this.getChannelInput(chatId))\r\n    }).then((messagesChats) => {\r\n      this.saveApiChats(messagesChats.chats);\r\n    });\r\n  }\r\n\r\n  public toggleForum(chatId: ChatId, enabled: boolean) {\r\n    return this.migrateChat(chatId).then((channelId) => {\r\n      return this.apiManager.invokeApi('channels.toggleForum', {\r\n        channel: this.getChannelInput(channelId),\r\n        enabled\r\n      }).then(this.onChatUpdated.bind(this, channelId));\r\n    });\r\n  }\r\n\r\n  public editForumTopic(options: {\r\n    chatId: ChatId,\r\n    topicId: number,\r\n    title?: string,\r\n    iconEmojiId?: DocId,\r\n    closed?: boolean,\r\n    hidden?: boolean\r\n  }) {\r\n    const {chatId, topicId, title, iconEmojiId, closed, hidden} = options;\r\n    return this.apiManager.invokeApi('channels.editForumTopic', {\r\n      channel: this.getChannelInput(chatId),\r\n      topic_id: getServerMessageId(topicId),\r\n      title,\r\n      icon_emoji_id: iconEmojiId,\r\n      closed,\r\n      hidden\r\n    }).then(this.onChatUpdated.bind(this, chatId));\r\n  }\r\n\r\n  public async createForumTopic(options: {\r\n    chatId: ChatId,\r\n    title: string,\r\n    iconColor: number,\r\n    iconEmojiId: DocId\r\n  }) {\r\n    const {chatId, title, iconColor, iconEmojiId} = options;\r\n\r\n    const channelFull = await this.appProfileManager.getChannelFull(chatId);\r\n    const sendAsInputPeer = channelFull.default_send_as && this.appPeersManager.getInputPeerById(this.appPeersManager.getPeerId(channelFull.default_send_as));\r\n\r\n    return this.apiManager.invokeApi('channels.createForumTopic', {\r\n      channel: this.getChannelInput(chatId),\r\n      title,\r\n      icon_color: iconColor,\r\n      icon_emoji_id: iconEmojiId,\r\n      random_id: randomLong(),\r\n      send_as: sendAsInputPeer\r\n    }).then((updates) => {\r\n      this.onChatUpdated(chatId, updates);\r\n\r\n      const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateNewChannelMessage') as Update.updateNewChannelMessage;\r\n      return this.appMessagesIdsManager.generateMessageId(update.message.id, chatId);\r\n    });\r\n  }\r\n\r\n  public updatePinnedForumTopic(chatId: ChatId, topicId: number, pinned: boolean) {\r\n    return this.apiManager.invokeApi('channels.updatePinnedForumTopic', {\r\n      channel: this.getChannelInput(chatId),\r\n      topic_id: getServerMessageId(topicId),\r\n      pinned\r\n    }).then(this.onChatUpdated.bind(this, chatId));\r\n  }\r\n\r\n  public getGroupsForDiscussion() {\r\n    return this.apiManager.invokeApi('channels.getGroupsForDiscussion').then((messagesChats) => {\r\n      this.saveApiChats(messagesChats.chats);\r\n      return messagesChats.chats;\r\n    });\r\n  }\r\n\r\n  public async setDiscussionGroup(id: ChatId, groupId: ChatId) {\r\n    if(this.getChat(groupId) && !this.isChannel(groupId)) {\r\n      groupId = await this.migrateChat(groupId);\r\n    }\r\n\r\n    if(groupId) {\r\n      const channelFull = await this.appProfileManager.getChannelFull(groupId);\r\n      if(channelFull.pFlags.hidden_prehistory) {\r\n        await this.togglePreHistoryHidden(groupId, false);\r\n      }\r\n    }\r\n\r\n    return this.apiManager.invokeApi('channels.setDiscussionGroup', {\r\n      broadcast: this.getChannelInput(id),\r\n      group: this.getChannelInput(groupId)\r\n    }).then(() => {\r\n      const channelFull = this.appProfileManager.getCachedFullChat(id) as ChatFull.channelFull;\r\n      const newOrWasGroupId = groupId || channelFull.linked_chat_id;\r\n      const groupChannelFull = this.appProfileManager.getCachedFullChat(newOrWasGroupId) as ChatFull.channelFull;\r\n      if(channelFull) {\r\n        channelFull.linked_chat_id = groupId;\r\n      }\r\n\r\n      if(groupChannelFull) {\r\n        groupChannelFull.linked_chat_id = id;\r\n      }\r\n\r\n      if(channelFull) this.rootScope.dispatchEvent('chat_full_update', id);\r\n      if(groupChannelFull) this.rootScope.dispatchEvent('chat_full_update', newOrWasGroupId);\r\n    });\r\n  }\r\n\r\n  public async toggleAntiSpam(id: ChatId, enabled: boolean) {\r\n    if(!this.isChannel(id)) {\r\n      id = await this.migrateChat(id);\r\n    }\r\n\r\n    return this.apiManager.invokeApi('channels.toggleAntiSpam', {\r\n      channel: this.getChannelInput(id),\r\n      enabled\r\n    }).then(this.onChatUpdated.bind(this, id));\r\n  }\r\n\r\n  public hideChatJoinRequest(chatId: ChatId, userId: UserId, approved: boolean) {\r\n    return this.apiManager.invokeApi('messages.hideChatJoinRequest', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      user_id: this.appUsersManager.getUserInput(userId),\r\n      approved\r\n    }).then((updates) => {\r\n      return this.onChatUpdated(chatId, updates, true);\r\n    });\r\n  }\r\n\r\n  public toggleViewForumAsMessages(chatId: ChatId, enabled: boolean) {\r\n    this.apiUpdatesManager.processLocalUpdate({\r\n      _: 'updateChannelViewForumAsMessages',\r\n      channel_id: chatId,\r\n      enabled\r\n    });\r\n\r\n    this.apiManager.invokeApi('channels.toggleViewForumAsMessages', {\r\n      channel: this.getChannelInput(chatId),\r\n      enabled\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getChannelRecommendations(chatId: ChatId) {\r\n    const result = this.recommendations[chatId];\r\n    if(result) {\r\n      return result;\r\n    }\r\n\r\n    const promise = this.recommendations[chatId] = this.apiManager.invokeApiSingleProcess({\r\n      method: 'channels.getChannelRecommendations',\r\n      params: {\r\n        channel: this.getChannelInput(chatId)\r\n      },\r\n      processResult: (messagesChats) => {\r\n        this.saveApiChats(messagesChats.chats);\r\n\r\n        if(this.recommendations[chatId] === promise) {\r\n          this.recommendations[chatId] = messagesChats;\r\n        }\r\n\r\n        return messagesChats;\r\n      }\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  private onUpdateChannelParticipant = (update: Update.updateChannelParticipant) => {\r\n    this.appProfileManager.invalidateChannelParticipants(update.channel_id);\r\n    this.rootScope.dispatchEvent('chat_participant', update);\r\n  };\r\n\r\n  private onUpdateChatDefaultBannedRights = (update: Update.updateChatDefaultBannedRights) => {\r\n    const chatId = this.appPeersManager.getPeerId(update.peer).toChatId();\r\n    const chat = this.chats[chatId] as Chat.chat;\r\n    if(chat) {\r\n      chat.default_banned_rights = update.default_banned_rights;\r\n      this.rootScope.dispatchEvent('chat_update', chatId);\r\n    }\r\n  };\r\n}\r\n","export default function capitalizeFirstLetter(string: string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n","const SKIP_PROTOCOLS: Set<string> = new Set([\r\n  'javascript:'\r\n]);\r\nexport default function matchUrlProtocol(text: string) {\r\n  if(!text) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const protocol = new URL(text).protocol;\r\n    if(SKIP_PROTOCOLS.has(protocol)) {\r\n      return null;\r\n    }\r\n\r\n    return protocol;\r\n  } catch(err) {\r\n    return null;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type addAnchorListener from '../../helpers/addAnchorListener';\r\nimport {PHONE_NUMBER_REG_EXP} from '.';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport matchUrlProtocol from './matchUrlProtocol';\r\nimport {T_ME_PREFIXES} from '../mtproto/mtproto_config';\r\n\r\nexport default function wrapUrl(url: string, unsafe?: number | boolean) {\r\n  if(!matchUrlProtocol(url)) {\r\n    url = 'https://' + url;\r\n  }\r\n\r\n  const out: {url: string, onclick?: Parameters<typeof addAnchorListener>[0]['name']} = {url};\r\n  let tgMeMatch, telescoPeMatch, tgMatch;\r\n  let onclick: typeof out['onclick'];\r\n  /* if(unsafe === 2) {\r\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\r\n  } else  */if((tgMeMatch = url.match(/^(?:https?:\\/\\/)?(?:(.+?)\\.)?(?:(?:web|k|z|a)\\.)?t(?:elegram)?\\.me(?:\\/(.+))?/))) {\r\n    const u = new URL(url);\r\n    let prefix = tgMeMatch[1];\r\n    if(prefix && T_ME_PREFIXES.has(tgMeMatch[1])) {\r\n      prefix = undefined;\r\n    }\r\n\r\n    if(prefix) {\r\n      u.pathname = prefix + (u.pathname === '/' ? '' : u.pathname);\r\n    }\r\n\r\n    const fullPath = u.pathname.slice(1);\r\n    const path = fullPath.split('/');\r\n\r\n    if(path[0] && path[0][0] === '$' && path[0].length > 1) {\r\n      onclick = 'invoice';\r\n    } else if(/^\\+/.test(fullPath) && !PHONE_NUMBER_REG_EXP.test(fullPath)) { // second regexp is for phone numbers (t.me/+38050...)\r\n      onclick = 'joinchat';\r\n    } else if(path[0]) switch(path[0]) {\r\n      case 'addlist':\r\n      case 'joinchat':\r\n      case 'addstickers':\r\n      case 'addemoji':\r\n      case 'voicechat':\r\n      case 'invoice':\r\n      case 'boost':\r\n      case 'giftcode':\r\n        if(path.length !== 1 && !prefix) {\r\n          onclick = path[0];\r\n          break;\r\n        }\r\n\r\n      default:\r\n        if(path.length <= 2 || path[1]?.match(/^\\d+(?:\\?(?:comment|thread)=\\d+)?$/) || path[1] === 's') {\r\n          onclick = 'im';\r\n          break;\r\n        }\r\n\r\n        break;\r\n    }\r\n  } else if((telescoPeMatch = url.match(/^(?:https?:\\/\\/)?telesco\\.pe\\/([^/?]+)\\/(\\d+)/))) {\r\n    onclick = 'im';\r\n  } else if((tgMatch = url.match(/tg:(?:\\/\\/)?(.+?)(?:\\?|$)/))) {\r\n    onclick = 'tg_' + tgMatch[1] as any;\r\n  }/*  else if(unsafe) {\r\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\r\n  } */\r\n\r\n  if(!(window as any)[onclick]) {\r\n    onclick = undefined;\r\n  }\r\n\r\n  out.onclick = onclick;\r\n  return out;\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.wrapUrl = wrapUrl);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import I18n from '../../lib/langPack';\r\n\r\nexport default function setInnerHTML(elem: Element, html: string | DocumentFragment | Element) {\r\n  setDirection(elem);\r\n  if(html === undefined) {\r\n    elem.replaceChildren();\r\n  } else if(typeof(html) === 'string') {\r\n    if(!html) elem.replaceChildren();\r\n    else elem.textContent = html;\r\n  } else {\r\n    elem.replaceChildren(html);\r\n  }\r\n}\r\n\r\nexport function setDirection(elem: Element) {\r\n  // if(!I18n.isRTL) {\r\n  elem.setAttribute('dir', 'auto');\r\n  // }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type lang from '../lang';\r\nimport type langSign from '../langSign';\r\nimport type {State} from '../config/state';\r\nimport DEBUG, {MOUNT_CLASS_TO} from '../config/debug';\r\nimport {HelpCountriesList, HelpCountry, LangPackDifference, LangPackString} from '../layer';\r\nimport stateStorage from './stateStorage';\r\nimport App from '../config/app';\r\nimport rootScope from './rootScope';\r\nimport {IS_MOBILE} from '../environment/userAgent';\r\nimport deepEqual from '../helpers/object/deepEqual';\r\nimport safeAssign from '../helpers/object/safeAssign';\r\nimport capitalizeFirstLetter from '../helpers/string/capitalizeFirstLetter';\r\nimport matchUrlProtocol from './richTextProcessor/matchUrlProtocol';\r\nimport wrapUrl from './richTextProcessor/wrapUrl';\r\nimport {setDirection} from '../helpers/dom/setInnerHTML';\r\n\r\nexport const langPack: {[actionType: string]: LangPackKey} = {\r\n  'messageActionChatCreate': 'ActionCreateGroup',\r\n  'messageActionChatCreateYou': 'ActionYouCreateGroup',\r\n  'messageActionChatEditTitle': 'ActionChangedTitle',\r\n  'messageActionChatEditPhoto': 'ActionChangedPhoto',\r\n  'messageActionChatEditVideo': 'ActionChangedVideo',\r\n  'messageActionChatDeletePhoto': 'ActionRemovedPhoto',\r\n  'messageActionChatReturn': 'ActionAddUserSelf',\r\n  'messageActionChatReturnYou': 'ActionAddUserSelfYou',\r\n  'messageActionChatJoined': 'ActionAddUserSelfMega',\r\n  'messageActionChatJoinedYou': 'ChannelMegaJoined',\r\n  'messageActionChatAddUser': 'ActionAddUser',\r\n  'messageActionChatAddUsers': 'ActionAddUser',\r\n  'messageActionChatLeave': 'ActionLeftUser',\r\n  'messageActionChatLeaveYou': 'YouLeft',\r\n  'messageActionChatDeleteUser': 'ActionKickUser',\r\n  'messageActionChatJoinedByLink': 'ActionInviteUser',\r\n  'messageActionPinMessage': 'Chat.Service.Group.UpdatedPinnedMessage',\r\n  'messageActionContactSignUp': 'Chat.Service.PeerJoinedTelegram',\r\n  'messageActionChannelCreate': 'ActionCreateChannel',\r\n  'messageActionChannelEditTitle': 'Chat.Service.Channel.UpdatedTitle',\r\n  'messageActionChannelEditPhoto': 'Chat.Service.Channel.UpdatedPhoto',\r\n  'messageActionChannelEditVideo': 'Chat.Service.Channel.UpdatedVideo',\r\n  'messageActionChannelDeletePhoto': 'Chat.Service.Channel.RemovedPhoto',\r\n  'messageActionHistoryClear': 'HistoryCleared',\r\n  'messageActionDiscussionStarted': 'DiscussionStarted',\r\n  'messageActionGiveawayLaunch': 'BoostingGiveawayJustStarted',\r\n  'messageActionChannelJoined': 'ChannelJoined',\r\n\r\n  'messageActionChannelMigrateFrom': 'ActionMigrateFromGroup',\r\n\r\n  'messageActionPhoneCall.video_in_ok': 'ChatList.Service.VideoCall.incoming',\r\n  'messageActionPhoneCall.video_out_ok': 'ChatList.Service.VideoCall.outgoing',\r\n  'messageActionPhoneCall.video_missed': 'ChatList.Service.VideoCall.Missed',\r\n  'messageActionPhoneCall.video_cancelled': 'ChatList.Service.VideoCall.Cancelled',\r\n  'messageActionPhoneCall.in_ok': 'ChatList.Service.Call.incoming',\r\n  'messageActionPhoneCall.out_ok': 'ChatList.Service.Call.outgoing',\r\n  'messageActionPhoneCall.missed': 'ChatList.Service.Call.Missed',\r\n  'messageActionPhoneCall.cancelled': 'ChatList.Service.Call.Cancelled',\r\n\r\n  'messageActionGroupCall.started': 'Chat.Service.VoiceChatStarted.Channel',\r\n  'messageActionGroupCall.started_by': 'Chat.Service.VoiceChatStarted',\r\n  'messageActionGroupCall.started_byYou': 'Chat.Service.VoiceChatStartedYou',\r\n  'messageActionGroupCall.ended': 'Chat.Service.VoiceChatFinished.Channel',\r\n  'messageActionGroupCall.ended_by': 'Chat.Service.VoiceChatFinished',\r\n  'messageActionGroupCall.ended_byYou': 'Chat.Service.VoiceChatFinishedYou',\r\n\r\n  'messageActionBotAllowed': 'Chat.Service.BotPermissionAllowed'\r\n};\r\n\r\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\r\n\r\nexport type FormatterArgument = string | number | Node | FormatterArgument[];\r\nexport type FormatterArguments = FormatterArgument[];\r\n\r\nexport const UNSUPPORTED_LANG_PACK_KEY: LangPackKey = IS_MOBILE ? 'Message.Unsupported.Mobile' : 'Message.Unsupported.Desktop';\r\n\r\nnamespace I18n {\r\n  export const strings: Map<LangPackKey, LangPackString> = new Map();\r\n  export const countriesList: HelpCountry[] = [];\r\n  let pluralRules: Intl.PluralRules;\r\n\r\n  let cacheLangPackPromise: Promise<LangPackDifference>;\r\n  export let lastRequestedLangCode: string;\r\n  export let lastRequestedNormalizedLangCode: string;\r\n  export let lastAppliedLangCode: string;\r\n  export let requestedServerLanguage = false;\r\n  export let timeFormat: State['settings']['timeFormat'];\r\n  export let isRTL = false;\r\n\r\n  export function setRTL(rtl: boolean) {\r\n    isRTL = rtl;\r\n  }\r\n\r\n  function setLangCode(langCode: string) {\r\n    lastRequestedLangCode = langCode;\r\n    lastRequestedNormalizedLangCode = langCode.split('-')[0];\r\n  }\r\n\r\n  export function getCacheLangPack(): Promise<LangPackDifference> {\r\n    if(cacheLangPackPromise) return cacheLangPackPromise;\r\n    return cacheLangPackPromise = Promise.all([\r\n      stateStorage.get('langPack') as Promise<LangPackDifference>,\r\n      polyfillPromise\r\n    ]).then(([langPack]) => {\r\n      if(!langPack/*  || true */) {\r\n        return loadLocalLangPack();\r\n      } else if(DEBUG && false) {\r\n        return getLangPack(langPack.lang_code);\r\n      }/*  else if(langPack.appVersion !== App.langPackVersion) {\r\n        return getLangPack(langPack.lang_code);\r\n      } */\r\n\r\n      if(!lastRequestedLangCode) {\r\n        setLangCode(langPack.lang_code);\r\n      }\r\n\r\n      applyLangPack(langPack);\r\n      return langPack;\r\n    }).finally(() => {\r\n      cacheLangPackPromise = undefined;\r\n    });\r\n  }\r\n\r\n  function updateAmPm() {\r\n    if(timeFormat === 'h12') {\r\n      try {\r\n        const dateTimeFormat = getDateTimeFormat({hour: 'numeric', minute: 'numeric', hour12: true});\r\n        const date = new Date();\r\n        date.setHours(0);\r\n        const amText = dateTimeFormat.format(date);\r\n        amPmCache.am = amText.split(/\\s/)[1];\r\n        date.setHours(12);\r\n        const pmText = dateTimeFormat.format(date);\r\n        amPmCache.pm = pmText.split(/\\s/)[1];\r\n      } catch(err) {\r\n        console.error('cannot get am/pm', err);\r\n        amPmCache = {am: 'AM', pm: 'PM'};\r\n      }\r\n    }\r\n  }\r\n\r\n  export function setTimeFormat(\r\n    format: State['settings']['timeFormat'],\r\n    haveToUpdate = !!timeFormat && timeFormat !== format\r\n  ) {\r\n    timeFormat = format;\r\n\r\n    updateAmPm();\r\n\r\n    if(haveToUpdate) {\r\n      cachedDateTimeFormats.clear();\r\n      const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\r\n      elements.forEach((element) => {\r\n        const instance = weakMap.get(element);\r\n\r\n        if(instance instanceof IntlDateElement) {\r\n          instance.update();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  export function loadLocalLangPack() {\r\n    const defaultCode = App.langPackCode;\r\n    setLangCode(defaultCode);\r\n    return Promise.all([\r\n      import('../lang'),\r\n      import('../langSign'),\r\n      import('../countries')\r\n    ]).then(([lang, langSign, countries]) => {\r\n      const strings: LangPackString[] = [];\r\n      formatLocalStrings(lang.default, strings);\r\n      formatLocalStrings(langSign.default, strings);\r\n\r\n      const langPack: LangPackDifference = {\r\n        _: 'langPackDifference',\r\n        from_version: 0,\r\n        lang_code: defaultCode,\r\n        strings,\r\n        version: 0,\r\n        local: true,\r\n        countries: countries.default\r\n      };\r\n      return saveLangPack(langPack);\r\n    });\r\n  }\r\n\r\n  export function loadLangPack(langCode: string, web?: boolean) {\r\n    web = true;\r\n    requestedServerLanguage = true;\r\n    const managers = rootScope.managers;\r\n    return Promise.all([\r\n      managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\r\n        lang_code: langCode,\r\n        lang_pack: web ? 'web' : App.langPack\r\n      }),\r\n      !web && managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\r\n        lang_code: langCode,\r\n        lang_pack: 'android'\r\n      }),\r\n      import('../lang'),\r\n      import('../langSign'),\r\n      managers.apiManager.invokeApiCacheable('help.getCountriesList', {\r\n        lang_code: langCode,\r\n        hash: 0\r\n      }) as Promise<HelpCountriesList.helpCountriesList>,\r\n      polyfillPromise\r\n    ]);\r\n  }\r\n\r\n  export function getStrings(langCode: string, strings: string[]) {\r\n    return rootScope.managers.apiManager.invokeApi('langpack.getStrings', {\r\n      lang_pack: App.langPack,\r\n      lang_code: langCode,\r\n      keys: strings\r\n    });\r\n  }\r\n\r\n  export function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\r\n    for(const i in strings) {\r\n      // @ts-ignore\r\n      const v = strings[i];\r\n      if(typeof(v) === 'string') {\r\n        pushTo.push({\r\n          _: 'langPackString',\r\n          key: i,\r\n          value: v\r\n        });\r\n      } else {\r\n        pushTo.push({\r\n          _: 'langPackStringPluralized',\r\n          key: i,\r\n          ...v\r\n        });\r\n      }\r\n    }\r\n\r\n    return pushTo;\r\n  }\r\n\r\n  export function getLangPack(langCode: string, web?: boolean) {\r\n    setLangCode(langCode);\r\n    return loadLangPack(langCode, web).then(([langPack1, langPack2, localLangPack1, localLangPack2, countries, _]) => {\r\n      let strings: LangPackString[] = [];\r\n\r\n      [localLangPack1, localLangPack2].forEach((l) => {\r\n        formatLocalStrings(l.default as any, strings);\r\n      });\r\n\r\n      strings = strings.concat(...[langPack1.strings, langPack2.strings].filter(Boolean));\r\n\r\n      langPack1.strings = strings;\r\n      langPack1.countries = countries;\r\n      return saveLangPack(langPack1);\r\n    });\r\n  }\r\n\r\n  export function saveLangPack(langPack: LangPackDifference) {\r\n    langPack.appVersion = App.langPackVersion;\r\n\r\n    return stateStorage.set({langPack}).then(() => {\r\n      applyLangPack(langPack);\r\n      return langPack;\r\n    });\r\n  }\r\n\r\n  export const polyfillPromise = (function checkIfPolyfillNeeded() {\r\n    if(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\r\n      return Promise.resolve();\r\n    } else {\r\n      return import('./pluralPolyfill').then((_Intl) => {\r\n        (window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\r\n      });\r\n    }\r\n  })();\r\n\r\n  export function applyLangPack(langPack: LangPackDifference) {\r\n    const currentLangCode = lastRequestedLangCode;\r\n    if(langPack.lang_code !== currentLangCode) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode);\r\n    } catch(err) {\r\n      console.error('pluralRules error', err);\r\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode.split('-', 1)[0]);\r\n    }\r\n\r\n    try {\r\n      pluralRules = new Intl.PluralRules(langPack.lang_code);\r\n    } catch(err) {\r\n      console.error('pluralRules error', err);\r\n      pluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\r\n    }\r\n\r\n    strings.clear();\r\n\r\n    for(const string of langPack.strings) {\r\n      strings.set(string.key as LangPackKey, string);\r\n    }\r\n\r\n    if(langPack.countries) {\r\n      countriesList.length = 0;\r\n      countriesList.push(...langPack.countries.countries);\r\n\r\n      langPack.countries.countries.forEach((country) => {\r\n        if(country.name) {\r\n          const langPackKey: any = country.default_name;\r\n          strings.set(langPackKey, {\r\n            _: 'langPackString',\r\n            key: langPackKey,\r\n            value: country.name\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if(lastAppliedLangCode !== currentLangCode) {\r\n      if(lastAppliedLangCode && rootScope.myId) {\r\n        rootScope.managers.appReactionsManager.resetAvailableReactions();\r\n        rootScope.managers.appUsersManager.indexMyself();\r\n        rootScope.managers.dialogsStorage.indexMyDialog();\r\n      }\r\n\r\n      lastAppliedLangCode = currentLangCode;\r\n      cachedDateTimeFormats.clear();\r\n      updateAmPm();\r\n      rootScope.dispatchEvent('language_change', currentLangCode);\r\n    }\r\n\r\n    const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\r\n    elements.forEach((element) => {\r\n      const instance = weakMap.get(element);\r\n\r\n      if(instance) {\r\n        instance.update();\r\n      }\r\n    });\r\n  }\r\n\r\n  function pushNextArgument(out: ReturnType<typeof superFormatter>, args: FormatterArguments, indexHolder: {i: number}, i?: number) {\r\n    const arg = args[i === undefined ? indexHolder.i++ : i];\r\n    if(Array.isArray(arg)) {\r\n      out.push(...arg as any);\r\n    } else {\r\n      out.push(arg);\r\n    }\r\n  }\r\n\r\n  export function superFormatter(input: string, args?: FormatterArguments, indexHolder?: {i: number}): Exclude<FormatterArgument, FormatterArgument[]>[] {\r\n    if(!indexHolder) { // set starting index for arguments without order\r\n      indexHolder = {i: 0};\r\n      const indexes = input.match(/(%|un)\\d+/g);\r\n      if(indexes?.length) {\r\n        indexHolder.i = Math.max(...indexes.map((str) => +str.replace(/\\D/g, '')));\r\n      }\r\n    }\r\n\r\n    const out: ReturnType<typeof superFormatter> = [];\r\n    const regExp = /(\\*\\*|__)(.+?)\\1|(\\n)|(\\[.+?\\]\\(.*?\\))|un\\d|%\\d\\$.|%./g;\r\n\r\n    let lastIndex = 0;\r\n    input.replace(regExp, (match, p1: any, p2: any, p3: any, p4: string, offset: number, string: string) => {\r\n      // console.table({match, p1, p2, offset, string});\r\n\r\n      if(offset > lastIndex) {\r\n        out.push(string.slice(lastIndex, offset));\r\n      }\r\n\r\n      if(p1) {\r\n        // offset += p1.length;\r\n        let element: HTMLElement;\r\n        switch(p1) {\r\n          case '**': {\r\n            element = document.createElement('b');\r\n            break;\r\n          }\r\n\r\n          case '__': {\r\n            element = document.createElement('i');\r\n            break;\r\n          }\r\n        }\r\n\r\n        element.append(...superFormatter(p2, args, indexHolder) as any);\r\n        out.push(element);\r\n      } else if(p3) {\r\n        out.push(document.createElement('br'));\r\n      } else if(p4) {\r\n        const idx = p4.lastIndexOf(']');\r\n        const text = p4.slice(1, idx);\r\n\r\n        const url = p4.slice(idx + 2, p4.length - 1);\r\n        let a: HTMLAnchorElement;\r\n        if(url && matchUrlProtocol(url)) {\r\n          a = document.createElement('a');\r\n          const wrappedUrl = wrapUrl(url);\r\n          a.href = wrappedUrl.url;\r\n          if(wrappedUrl.onclick) a.setAttribute('onclick', wrappedUrl.onclick + '(this)');\r\n          a.target = '_blank';\r\n        } else {\r\n          a = args[indexHolder.i++] as HTMLAnchorElement;\r\n\r\n          if(a instanceof DocumentFragment) { // right after wrapRichText\r\n            a = a.firstChild as any;\r\n          }\r\n\r\n          if(typeof(a) !== 'string') {\r\n            a.textContent = ''; // reset content\r\n          }\r\n        }\r\n\r\n        const formatted = superFormatter(text, args, indexHolder) as any;\r\n        if(typeof(a) === 'string') {\r\n          out.push(...formatted);\r\n        } else {\r\n          a.append(...formatted);\r\n          out.push(a);\r\n        }\r\n      } else if(args) {\r\n        const index = match.replace(/\\D/g, '');\r\n        pushNextArgument(\r\n          out,\r\n          args,\r\n          indexHolder,\r\n          !index || Number.isNaN(+index) ? undefined : Math.min(args.length - 1, +index - 1)\r\n        );\r\n      }\r\n\r\n      lastIndex = offset + match.length;\r\n      return '';\r\n    });\r\n\r\n    if(lastIndex !== input.length) {\r\n      out.push(input.slice(lastIndex));\r\n    }\r\n\r\n    return out;\r\n  }\r\n\r\n  export function format(key: LangPackKey, plain: true, args?: FormatterArguments): string;\r\n  export function format(key: LangPackKey, plain?: false, args?: FormatterArguments): ReturnType<typeof superFormatter>;\r\n  export function format(key: LangPackKey, plain = false, args?: FormatterArguments): ReturnType<typeof superFormatter> | string {\r\n    const str = strings.get(key);\r\n    let input: string;\r\n    if(str) {\r\n      if(str._ === 'langPackStringPluralized' && args?.length) {\r\n        let v = args[0] as number | string;\r\n        if(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\r\n        const s = pluralRules.select(v);\r\n        // @ts-ignore\r\n        input = str[s + '_value'] || str['other_value'];\r\n      } else if(str._ === 'langPackString') {\r\n        input = str.value;\r\n      } else {\r\n        // input = '[' + key + ']';\r\n        input = key;\r\n      }\r\n    } else {\r\n      // input = '[' + key + ']';\r\n      input = key;\r\n    }\r\n\r\n    const result = superFormatter(input, args);\r\n    if(plain) { // * let's try a hack now... (don't want to replace []() entity)\r\n      return result.map((item) => item instanceof Node ? item.textContent : item).join('');\r\n    } else {\r\n      return result;\r\n    }\r\n\r\n    /* if(plain) {\r\n      if(args?.length) {\r\n        const regExp = /un\\d|%\\d\\$.|%./g;\r\n        let i = 0;\r\n        input = input.replace(regExp, (match, offset, string) => {\r\n          return '' + args[i++];\r\n        });\r\n      }\r\n\r\n      return input;\r\n    } else {\r\n      return superFormatter(input, args);\r\n    } */\r\n  }\r\n\r\n  export const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\r\n\r\n  export type IntlElementBaseOptions = {\r\n    element?: HTMLElement,\r\n    property?: 'innerText' | 'innerHTML' | 'placeholder' | 'textContent',\r\n  };\r\n\r\n  abstract class IntlElementBase<Options extends IntlElementBaseOptions> {\r\n    public element: IntlElementBaseOptions['element'];\r\n    public property: IntlElementBaseOptions['property'];\r\n\r\n    constructor(options?: Options) {\r\n      this.element = options?.element || document.createElement('span');\r\n      this.element.classList.add('i18n');\r\n\r\n      this.property = options?.property;\r\n\r\n      weakMap.set(this.element, this);\r\n    }\r\n\r\n    abstract update(options?: Options): void;\r\n  }\r\n\r\n  export type IntlElementOptions = IntlElementBaseOptions & {\r\n    key?: LangPackKey,\r\n    args?: FormatterArguments\r\n  };\r\n  export class IntlElement extends IntlElementBase<IntlElementOptions> {\r\n    public key: IntlElementOptions['key'];\r\n    public args: IntlElementOptions['args'];\r\n\r\n    constructor(options: IntlElementOptions = {}) {\r\n      super({...options, property: options.property ?? 'innerHTML'});\r\n\r\n      if(options?.key) {\r\n        this.update(options);\r\n      }\r\n    }\r\n\r\n    public update(options?: IntlElementOptions) {\r\n      safeAssign(this, options);\r\n\r\n      if(this.property === 'innerHTML') {\r\n        this.element.replaceChildren(...format(this.key, false, this.args) as any);\r\n        if(this.args?.length) {\r\n          this.element.normalize();\r\n        }\r\n      } else {\r\n        // @ts-ignore\r\n        const v = this.element[this.property];\r\n        const formatted = format(this.key, true, this.args);\r\n\r\n        // * hasOwnProperty won't work here\r\n        if(v === undefined) this.element.dataset[this.property] = formatted;\r\n        else (this.element as HTMLInputElement)[this.property] = formatted;\r\n      }\r\n    }\r\n\r\n    public compareAndUpdate(options?: IntlElementOptions) {\r\n      if(this.key === options.key && deepEqual(this.args, options.args)) {\r\n        return;\r\n      }\r\n\r\n      return this.update(options);\r\n    }\r\n  }\r\n\r\n  const cachedDateTimeFormats: Map<string, Intl.DateTimeFormat> = new Map();\r\n  export function getDateTimeFormat(options: Intl.DateTimeFormatOptions = {}) {\r\n    const json = JSON.stringify(options);\r\n    let dateTimeFormat = cachedDateTimeFormats.get(json);\r\n    if(!dateTimeFormat) {\r\n      dateTimeFormat = new Intl.DateTimeFormat(lastRequestedNormalizedLangCode + '-u-hc-' + timeFormat, options);\r\n      cachedDateTimeFormats.set(json, dateTimeFormat);\r\n    }\r\n\r\n    return dateTimeFormat;\r\n  }\r\n\r\n  export let amPmCache = {am: 'AM', pm: 'PM'};\r\n  export type IntlDateElementOptions = IntlElementBaseOptions & {\r\n    date?: Date,\r\n    options: Intl.DateTimeFormatOptions\r\n  };\r\n  export class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\r\n    public date: IntlDateElementOptions['date'];\r\n    public options: IntlDateElementOptions['options'];\r\n\r\n    constructor(options: IntlDateElementOptions) {\r\n      super({...options, property: options.property ?? 'textContent'});\r\n      setDirection(this.element);\r\n\r\n      if(options?.date) {\r\n        this.update(options);\r\n      }\r\n    }\r\n\r\n    public update(options?: IntlDateElementOptions) {\r\n      safeAssign(this, options);\r\n\r\n      let text: string;\r\n      if(this.options.hour && this.options.minute && Object.keys(this.options).length === 2/*  && false */) {\r\n        const hours = this.date.getHours();\r\n        text = ('0' + (timeFormat === 'h12' ? (hours % 12) || 12 : hours)).slice(-2) + ':' + ('0' + this.date.getMinutes()).slice(-2);\r\n        // if(this.options.second) {\r\n        //   text += ':' + ('0' + this.date.getSeconds()).slice(-2);\r\n        // }\r\n\r\n        if(timeFormat === 'h12') {\r\n          text += ' ' + (hours < 12 ? amPmCache.am : amPmCache.pm);\r\n        }\r\n      } else {\r\n        // * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\r\n        const dateTimeFormat = getDateTimeFormat(this.options);\r\n        text = capitalizeFirstLetter(dateTimeFormat.format(this.date));\r\n      }\r\n\r\n      (this.element as any)[this.property] = text;\r\n    }\r\n  }\r\n\r\n  export function i18n(key: LangPackKey, args?: FormatterArguments) {\r\n    return new IntlElement({key, args}).element;\r\n  }\r\n\r\n  export function i18n_(options: IntlElementOptions) {\r\n    return new IntlElement(options).element;\r\n  }\r\n\r\n  export function _i18n(element: HTMLElement, key: LangPackKey, args?: FormatterArguments, property?: IntlElementOptions['property']) {\r\n    return new IntlElement({element, key, args, property}).element;\r\n  }\r\n}\r\n\r\nexport {I18n};\r\nexport default I18n;\r\n\r\nconst i18n = I18n.i18n;\r\nexport {i18n};\r\n\r\nconst i18n_ = I18n.i18n_;\r\nexport {i18n_};\r\n\r\nconst _i18n = I18n._i18n;\r\nexport {_i18n};\r\n\r\nexport function joinElementsWith<T extends Node | string | Array<Node | string>>(\r\n  elements: T[],\r\n  joiner: T | string | ((isLast: boolean) => T)\r\n): T[] {\r\n  const arr = elements.slice(0, 1) as T[];\r\n  for(let i = 1; i < elements.length; ++i) {\r\n    const isLast = (elements.length - 1) === i;\r\n    arr.push(typeof(joiner) === 'function' ? (joiner as any)(isLast) : joiner);\r\n    arr.push(elements[i]);\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\n\r\nexport function join(elements: (Node | string)[], useLast: boolean, plain: true): string;\r\nexport function join(elements: (Node | string)[], useLast?: boolean, plain?: false): (string | Node)[];\r\nexport function join(elements: (Node | string)[], useLast: boolean, plain: boolean): string | (string | Node)[];\r\nexport function join(elements: (Node | string)[], useLast = true, plain?: boolean): string | (string | Node)[] {\r\n  const joined = joinElementsWith(elements, (isLast) => {\r\n    const langPackKey: LangPackKey = isLast && useLast ? 'AutoDownloadSettings.LastDelimeter' : 'AutoDownloadSettings.Delimeter';\r\n    return plain ? I18n.format(langPackKey, true) : i18n(langPackKey);\r\n  });\r\n\r\n  return plain ? joined.join('') : joined;\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.I18n = I18n);\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport I18n, {i18n} from '../lib/langPack';\r\nimport capitalizeFirstLetter from './string/capitalizeFirstLetter';\r\n\r\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\nexport const monthsLocalized = months.slice();\r\nexport const daysLocalized = days.slice();\r\n\r\nexport const ONE_DAY = 86400;\r\n\r\nexport function getWeekDays() {\r\n  const dateTimeFormat = I18n.getDateTimeFormat({weekday: 'long'});\r\n  const date = new Date(Date.UTC(2017, 0, 2));\r\n  const out: string[] = [];\r\n  for(let i = 0; i < 7; ++i) {\r\n    out.push(capitalizeFirstLetter(dateTimeFormat.format(date)));\r\n    date.setDate(date.getDate() + 1);\r\n  }\r\n  return out;\r\n}\r\n\r\nexport function getMonths() {\r\n  const dateTimeFormat = I18n.getDateTimeFormat({month: 'long'});\r\n  const date = new Date(Date.UTC(2017, 0, 1));\r\n  const out: string[] = [];\r\n  for(let i = 0; i < 12; ++i) {\r\n    out.push(capitalizeFirstLetter(dateTimeFormat.format(date)));\r\n    date.setMonth(date.getMonth() + 1);\r\n  }\r\n  return out;\r\n}\r\n\r\nexport function fillLocalizedDates() {\r\n  monthsLocalized.splice(0, monthsLocalized.length, ...getMonths());\r\n  daysLocalized.splice(0, daysLocalized.length, ...getWeekDays());\r\n}\r\n\r\n// https://stackoverflow.com/a/6117889\r\nexport const getWeekNumber = (date: Date) => {\r\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n  const dayNum = d.getUTCDay() || 7;\r\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\r\n};\r\n\r\nexport function formatDate(date: Date, today?: Date) {\r\n  if(!today) {\r\n    today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n  }\r\n\r\n  const options: Intl.DateTimeFormatOptions = {\r\n    day: 'numeric',\r\n    month: 'long'\r\n  };\r\n\r\n  if(date.getFullYear() !== today.getFullYear()) {\r\n    options.year = 'numeric';\r\n  }\r\n\r\n  return new I18n.IntlDateElement({\r\n    date,\r\n    options\r\n  }).element;\r\n}\r\n\r\nexport function formatDateAccordingToTodayNew(time: Date) {\r\n  const today = new Date();\r\n  const now = today.getTime() / 1000 | 0;\r\n  const timestamp = time.getTime() / 1000 | 0;\r\n\r\n  const options: Intl.DateTimeFormatOptions = {};\r\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\r\n    options.hour = options.minute = '2-digit';\r\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\r\n    options.year = options.day = 'numeric';\r\n    options.month = '2-digit';\r\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\r\n    options.weekday = 'short';\r\n  } else { // same year\r\n    options.month = 'short';\r\n    options.day = 'numeric';\r\n  }\r\n\r\n  return new I18n.IntlDateElement({\r\n    date: time,\r\n    options\r\n  }).element;\r\n}\r\n\r\nexport function formatFullSentTimeRaw(timestamp: number, options: {\r\n  capitalize?: boolean\r\n  noToday?: boolean\r\n} = {}) {\r\n  const date = new Date();\r\n  const time = new Date(timestamp * 1000);\r\n  const now = date.getTime() / 1000;\r\n\r\n  const timeEl = formatTime(time);\r\n\r\n  let dateEl: Node | string;\r\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate() && !options.noToday) { // if the same day\r\n    dateEl = i18n(options.capitalize ? 'Date.Today' : 'Peer.Status.Today');\r\n  } else if((now - timestamp) < (ONE_DAY * 2) && (date.getDate() - 1) === time.getDate() && !options.noToday) { // yesterday\r\n    dateEl = i18n(options.capitalize ? 'Yesterday' : 'Peer.Status.Yesterday');\r\n\r\n    if(options.capitalize) {\r\n      (dateEl as HTMLElement).style.textTransform = 'capitalize';\r\n    }\r\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\r\n    dateEl = new I18n.IntlDateElement({\r\n      date: time,\r\n      options: {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      }\r\n    }).element;\r\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate() + ', ' + time.getFullYear();\r\n  } else {\r\n    dateEl = new I18n.IntlDateElement({\r\n      date: time,\r\n      options: {\r\n        month: 'short',\r\n        day: 'numeric'\r\n      }\r\n    }).element;\r\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate();\r\n  }\r\n\r\n  return {dateEl, timeEl};\r\n}\r\n\r\nexport function formatFullSentTime(timestamp: number, capitalize = true, noToday = false) {\r\n  const {dateEl, timeEl} = formatFullSentTimeRaw(timestamp, {\r\n    capitalize,\r\n    noToday\r\n  });\r\n\r\n  const fragment = document.createDocumentFragment();\r\n  fragment.append(dateEl, ' ', i18n('ScheduleController.at'), ' ', timeEl);\r\n  return fragment;\r\n}\r\n\r\nexport function formatTime(date: Date) {\r\n  return new I18n.IntlDateElement({\r\n    date,\r\n    options: {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }\r\n  }).element;\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\r\n\r\nexport const getFullDate = (date: Date, options: Partial<{\r\n  noTime: true,\r\n  noSeconds: true,\r\n  monthAsNumber: true,\r\n  leadingZero: true,\r\n  shortYear: boolean\r\n}> = {}) => {\r\n  const joiner = options.monthAsNumber ? '.' : ' ';\r\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\r\n  const fullYear = date.getFullYear();\r\n\r\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) +\r\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) +\r\n    joiner + (('' + fullYear).slice(options.shortYear ? 2 : 0)) +\r\n    (options.noTime ? '' : ', ' + time);\r\n};\r\n\r\nexport function formatMonthsDuration(months: number, bold?: boolean) {\r\n  const isYears = months >= 12 && !(months % 12);\r\n  return i18n(\r\n    bold ? (isYears ? 'BoldYears' : 'BoldMonths') : (isYears ? 'Years' : 'Months'),\r\n    [isYears ? months / 12 : months]\r\n  );\r\n}\r\n\r\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\r\nconst minYear = 2013;\r\nconst yearPattern = new RegExp('20[0-9]{1,2}');\r\nconst anyLetterRegExp = `\\\\p{L}`;\r\nconst monthPattern = new RegExp(`(${anyLetterRegExp}{3,})`, 'iu');\r\nconst monthYearOrDayPattern = new RegExp(`(${anyLetterRegExp}{3,}) ([0-9]{0,4})`, 'iu');\r\nconst yearOrDayAndMonthPattern = new RegExp(`([0-9]{0,4}) (${anyLetterRegExp}{2,})`, 'iu');\r\nconst shortDate = new RegExp('^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\r\nconst longDate = new RegExp('^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\r\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nexport type DateData = {\r\n  title: string,\r\n  minDate: number,\r\n  maxDate: number,\r\n};\r\nexport function fillTipDates(query: string, dates: DateData[]) {\r\n  const q = query.trim().toLowerCase();\r\n\r\n  if(q.length < 3) {\r\n    return;\r\n  }\r\n\r\n  if(['today', I18n.format('Peer.Status.Today', true)].some((haystack) => haystack.indexOf(q) === 0)) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: I18n.format('Date.Today', true),\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  if(['yesterday', I18n.format('Peer.Status.Yesterday', true)].some((haystack) => haystack.indexOf(q) === 0)) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime() - 86400000;\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 86400001;\r\n    dates.push({\r\n      title: capitalizeFirstLetter(I18n.format('Yesterday', true)),\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  const dayOfWeek = getDayOfWeek(q);\r\n  if(dayOfWeek >= 0) {\r\n    const date = new Date();\r\n    const now = date.getTime();\r\n    const currentDay = date.getDay();\r\n    const distance = dayOfWeek - currentDay;\r\n    date.setDate(date.getDate() + distance);\r\n    if(date.getTime() > now) {\r\n      date.setTime(date.getTime() - 604800000);\r\n    }\r\n    const year = date.getFullYear()\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: formatWeekLong(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  let matches: any[];\r\n  if((matches = shortDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const k = parseInt(g1);\r\n    const k1 = parseInt(g2);\r\n    if(k > 0 && k <= 31) {\r\n      if(k1 >= minYear && k <= 12) {\r\n        const selectedYear = k1;\r\n        const month = k - 1;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      } else if(k1 <= 12) {\r\n        const day = k - 1;\r\n        const month = k1 - 1;\r\n        createForDayMonth(dates, day, month);\r\n      }\r\n    } else if(k >= minYear && k1 <= 12) {\r\n      const selectedYear = k;\r\n      const month = k1 - 1;\r\n      createForMonthYear(dates, month, selectedYear);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = longDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const g3 = matches[5];\r\n    if(!matches[2] === matches[4]) {\r\n      return;\r\n    }\r\n\r\n    const day = parseInt(g1);\r\n    const month = parseInt(g2) - 1;\r\n    let year = parseInt(g3);\r\n    if(year >= 10 && year <= 99) {\r\n      year += 2000;\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(year, month, day);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      date.setFullYear(year, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: formatterYearMax(minDate),\r\n        minDate,\r\n        maxDate\r\n      });\r\n      return;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g1);\r\n    if(month >= 0) {\r\n      const k = +g2 || new Date().getUTCFullYear();\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if(k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g2);\r\n    if(month >= 0) {\r\n      const k = +g1;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if(k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n      }\r\n    }\r\n  }\r\n\r\n  if((matches = monthPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const month = getMonth(g1);\r\n    if(month >= 0) {\r\n      const currentYear = new Date().getFullYear();\r\n      for(let i = currentYear; i >= minYear; --i) {\r\n        createForMonthYear(dates, month, i);\r\n      }\r\n    }\r\n  }\r\n\r\n  if((matches = yearPattern.exec(q)) !== null) {\r\n    let selectedYear = +matches[0];\r\n    const currentYear = new Date().getFullYear();\r\n    if(selectedYear < minYear) {\r\n      selectedYear = minYear;\r\n      for(let i = currentYear; i >= selectedYear; i--) {\r\n        const date = new Date();\r\n        date.setFullYear(i, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const minDate = date.getTime();\r\n        date.setFullYear(i + 1, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const maxDate = date.getTime() - 1;\r\n        dates.push({\r\n          title: '' + i,\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    } else if(selectedYear <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(selectedYear, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      date.setFullYear(selectedYear + 1, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: '' + selectedYear,\r\n        minDate,\r\n        maxDate\r\n      });\r\n    }\r\n\r\n    return;\r\n  }\r\n}\r\n\r\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\r\n  const currentYear = new Date().getFullYear();\r\n  const today = Date.now();\r\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\r\n    const date = new Date();\r\n    date.setFullYear(selectedYear, month, 1);\r\n    date.setHours(0, 0, 0);\r\n    const minDate = date.getTime();\r\n    if(minDate > today) {\r\n      return;\r\n    }\r\n    date.setMonth(date.getMonth() + 1);\r\n    const maxDate = date.getTime() - 1;\r\n\r\n    dates.push({\r\n      title: formatterMonthYear(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n  }\r\n}\r\n\r\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\r\n  if(validDateForMonth(day, month)) {\r\n    const currentYear = new Date().getFullYear();\r\n    const today = Date.now();\r\n\r\n    for(let i = currentYear; i >= minYear; i--) {\r\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\r\n        continue;\r\n      }\r\n\r\n      const date = new Date();\r\n      date.setFullYear(i, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      if(minDate > today) {\r\n        continue;\r\n      }\r\n\r\n      date.setFullYear(i, month, day + 2);\r\n      date.setHours(0, 0, 0);\r\n      const maxDate = date.getTime() - 1;\r\n      if(i === currentYear) {\r\n        dates.push({\r\n          title: formatterDayMonth(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      } else {\r\n        dates.push({\r\n          title: formatterYearMax(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatterMonthYear(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return monthsLocalized[date.getMonth()]/* .slice(0, 3) */ + ' ' + date.getFullYear();\r\n}\r\n\r\nfunction formatterDayMonth(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return monthsLocalized[date.getMonth()]/* .slice(0, 3) */ + ' ' + date.getDate();\r\n}\r\n\r\nfunction formatterYearMax(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\r\n}\r\n\r\nfunction formatWeekLong(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return daysLocalized[date.getDay()];\r\n}\r\n\r\nfunction validDateForMonth(day: number, month: number) {\r\n  if(month >= 0 && month < 12) {\r\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isLeapYear(year: number) {\r\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n}\r\n\r\nfunction getMonth(q: string) {\r\n  q = q.toLowerCase();\r\n  for(let i = 0; i < 12; i++) {\r\n    if([months[i], monthsLocalized[i]].some((month) => month.toLowerCase().indexOf(q) === 0)) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction getDayOfWeek(q: string) {\r\n  const c = new Date();\r\n  if(q.length <= 3) {\r\n    return -1;\r\n  }\r\n\r\n  for(let i = 0; i < 7; i++) {\r\n    c.setDate(c.getDate() + 1);\r\n\r\n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\r\n      return c.getDay();\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\r\n","/**\r\n * Will be used for FILE_REFERENCE_EXPIRED\r\n * @param key\r\n * @param wasObject\r\n * @param newObject\r\n */\r\nexport default function safeReplaceArrayInObject<K>(key: K, wasObject: any, newObject: any) {\r\n  if('byteLength' in newObject[key]) { // Uint8Array\r\n    newObject[key] = [...newObject[key]];\r\n  }\r\n\r\n  if(wasObject && wasObject[key] !== newObject[key]) {\r\n    wasObject[key].length = newObject[key].length;\r\n    (newObject[key] as any[]).forEach((v, i) => {\r\n      wasObject[key][i] = v;\r\n    });\r\n\r\n    /* wasObject[key].set(newObject[key]); */\r\n    newObject[key] = wasObject[key];\r\n  }\r\n}\r\n","export default function spoiler(text: string): string {\r\n  const chars = '⠁⠂⠄⠈⠐⠠⡀⢀⠃⠅⠆⠉⠊⠌⠑⠒⠔⠘⠡⠢⠤⠨⠰⡁⡂⡄⡈⡐⡠⢁⢂⢄⢈⢐⢠⣀⠇⠋⠍⠎⠓⠕⠖⠙⠚⠜⠣⠥⠦⠩⠪⠬⠱⠲⠴⠸⡃⡅⡆⡉⡊⡌⡑⡒⡔⡘⡡⡢⡤⡨⡰⢃⢅⢆⢉⢊⢌⢑⢒⢔⢘⢡⢢⢤⢨⢰⣁⣂⣄⣈⣐⣠⠏⠗⠛⠝⠞⠧⠫⠭⠮⠳⠵⠶⠹⠺⠼⡇⡋⡍⡎⡓⡕⡖⡙⡚⡜⡣⡥⡦⡩⡪⡬⡱⡲⡴⡸⢇⢋⢍⢎⢓⢕⢖⢙⢚⢜⢣⢥⢦⢩⢪⢬⢱⢲⢴⢸⣃⣅⣆⣉⣊⣌⣑⣒⣔⣘⣡⣢⣤⣨⣰⠟⠯⠷⠻⠽⠾⡏⡗⡛⡝⡞⡧⡫⡭⡮⡳⡵⡶⡹⡺⡼⢏⢗⢛⢝⢞⢧⢫⢭⢮⢳⢵⢶⢹⢺⢼⣇⣋⣍⣎⣓⣕⣖⣙⣚⣜⣣⣥⣦⣩⣪⣬⣱⣲⣴⣸⠿⡟⡯⡷⡻⡽⡾⢟⢯⢷⢻⢽⢾⣏⣗⣛⣝⣞⣧⣫⣭⣮⣳⣵⣶⣹⣺⣼⡿⢿⣟⣯⣷⣻⣽⣾⣿';\r\n  const charsLength = chars.length;\r\n\r\n  const out: string[] = [];\r\n  for(let i = 0; i < text.length; ++i) {\r\n    const char = text.charCodeAt(i);\r\n    out.push(chars[char % charsLength]);\r\n  }\r\n\r\n  return out.join('');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity} from '../../layer';\r\nimport spoiler from './spoiler';\r\n\r\nexport default function encodeSpoiler(text: string, entity: MessageEntity.messageEntitySpoiler) {\r\n  const before = text.slice(0, entity.offset);\r\n  const spoilerBefore = text.slice(entity.offset, entity.offset + entity.length);\r\n  const spoilerAfter = spoiler(spoilerBefore)/*  '▚'.repeat(entity.length) */;\r\n  const after = text.slice(entity.offset + entity.length);\r\n  text = before + spoilerAfter + after;\r\n  return {text, entityText: spoilerAfter};\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity} from '../../layer';\r\nimport encodeSpoiler from './encodeSpoiler';\r\n\r\n/**\r\n * ! This function is still unsafe to use with .innerHTML\r\n */\r\nexport default function wrapPlainText(text: string, entities: MessageEntity[] = []) {\r\n  entities.forEach((entity) => {\r\n    if(entity._ === 'messageEntitySpoiler') {\r\n      text = encodeSpoiler(text, entity).text;\r\n    }\r\n  });\r\n\r\n  return text;\r\n  // if(entities?.length) {\r\n  //   entities = entities.filter((entity) => entity._ === 'messageEntitySpoiler');\r\n  // }\r\n\r\n  // return wrapRichText(text, {\r\n  //   entities,\r\n  //   noEncoding: true,\r\n  //   noTextFormat: true,\r\n  //   noLinebreaks: true,\r\n  //   noLinks: true\r\n  // }).textContent;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Document, InputFileLocation} from '../../../../layer';\r\n\r\nexport default function getDocumentInputFileLocation(doc: Document.document, thumbSize?: string): InputFileLocation.inputDocumentFileLocation {\r\n  return {\r\n    _: 'inputDocumentFileLocation',\r\n    id: doc.id,\r\n    access_hash: doc.access_hash,\r\n    file_reference: doc.file_reference,\r\n    thumb_size: thumbSize\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {InputFileLocation, InputGeoPoint, InputStickerSet, InputWebFileLocation} from '../layer';\r\nimport type {DownloadOptions} from '../lib/mtproto/apiFileManager';\r\n\r\nconst FILENAME_JOINER = '_';\r\n\r\nexport function getFileNameByLocation(location: InputFileLocation | InputWebFileLocation, options?: Partial<{\r\n  fileName: string,\r\n  downloadId: string\r\n}>) {\r\n  const fileName = '';// (options?.fileName || '').split('.');\r\n  const ext = fileName[fileName.length - 1] || '';\r\n\r\n  let str: string;\r\n  switch(location._) {\r\n    case 'inputPhotoFileLocation': {\r\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputDocumentFileLocation': {\r\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputPeerPhotoFileLocation':\r\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\r\n      break;\r\n\r\n    case 'inputStickerSetThumb': {\r\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id ||\r\n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name ||\r\n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon ||\r\n        location.stickerset._;\r\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputFileLocation': {\r\n      str = [location.volume_id, location.local_id].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputWebFileLocation': {\r\n      str = ['webFile', location.url].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputWebFileGeoPointLocation': {\r\n      const geoPoint = location.geo_point as InputGeoPoint.inputGeoPoint;\r\n      str = ['geoPoint', geoPoint.lat, geoPoint.long, location.w, location.h, location.zoom, location.scale].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      console.error('Unrecognized location:', location);\r\n      str = '';\r\n      break;\r\n    }\r\n  }\r\n\r\n  return str + (options?.downloadId ? '_download' : '') + (ext ? '.' + ext : ext);\r\n}\r\n\r\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download';\r\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\r\n  // console.log('getFileURL', location);\r\n  // const perf = performance.now();\r\n  const encoded = encodeURIComponent(JSON.stringify(options));\r\n  // console.log('getFileURL encode:', performance.now() - perf, encoded);\r\n\r\n  return /* '/' +  */type + '/' + encoded;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Document, PhotoSize, VideoSize} from '../../../../layer';\r\nimport type {DownloadOptions} from '../../../mtproto/apiFileManager';\r\nimport getDocumentInputFileLocation from './getDocumentInputFileLocation';\r\n\r\nexport default function getDocumentDownloadOptions(\r\n  doc: Document.document,\r\n  thumb?: PhotoSize.photoSize | Extract<VideoSize, VideoSize.videoSize>,\r\n  queueId?: number,\r\n  onlyCache?: boolean\r\n): DownloadOptions {\r\n  const inputFileLocation = getDocumentInputFileLocation(doc, thumb?.type);\r\n\r\n  let mimeType: MTMimeType;\r\n  if(thumb?._ === 'photoSize') {\r\n    mimeType = doc.sticker ? 'image/webp' : (doc.mime_type.startsWith('image/') ? doc.mime_type : 'image/jpeg');\r\n  } else {\r\n    mimeType = doc.mime_type || 'application/octet-stream';\r\n  }\r\n\r\n  return {\r\n    dcId: doc.dc_id,\r\n    location: inputFileLocation,\r\n    size: thumb ? thumb.size : doc.size,\r\n    mimeType,\r\n    fileName: doc.file_name,\r\n    queueId,\r\n    onlyCache\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {FileURLType, getFileURL} from '../../../../helpers/fileName';\r\nimport {Document, PhotoSize} from '../../../../layer';\r\nimport getDocumentDownloadOptions from './getDocumentDownloadOptions';\r\n\r\nexport default function getDocumentURL(doc: Document.document, download = false, thumb?: PhotoSize.photoSize) {\r\n  let type: FileURLType;\r\n  if(download) {\r\n    type = 'download';\r\n  } else if(thumb) {\r\n    type = 'thumb';\r\n  } else if(doc.supportsStreaming) {\r\n    type = 'stream';\r\n  } else {\r\n    type = 'document';\r\n  }\r\n\r\n  return getFileURL(type, getDocumentDownloadOptions(doc, thumb));\r\n}\r\n","export const EXTENSION_MIME_TYPE_MAP: {[ext in MTFileExtension]: MTMimeType} = {\r\n  pdf: 'application/pdf',\r\n  tgv: 'application/x-tgwallpattern',\r\n  tgs: 'application/x-tgsticker',\r\n  json: 'application/json',\r\n  wav: 'audio/wav',\r\n  mp3: 'audio/mpeg',\r\n  ogg: 'audio/ogg',\r\n  jpeg: 'image/jpeg',\r\n  jpg: 'image/jpeg',\r\n  png: 'image/png',\r\n  gif: 'image/gif',\r\n  webp: 'image/webp',\r\n  mp4: 'video/mp4',\r\n  webm: 'video/webm',\r\n  mov: 'video/quicktime',\r\n  svg: 'image/svg+xml'\r\n};\r\n\r\nexport const MIME_TYPE_EXTENSION_MAP: {[mimeType in MTMimeType]?: MTFileExtension} = {};\r\n\r\nfor(const ext in EXTENSION_MIME_TYPE_MAP) {\r\n  MIME_TYPE_EXTENSION_MAP[EXTENSION_MIME_TYPE_MAP[ext as MTFileExtension]] = ext as MTFileExtension;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ThumbCache} from '../storages/thumbs';\r\nimport {Document, DocumentAttribute, MessagesSavedGifs, PhotoSize, WallPaper} from '../../layer';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {getFullDate} from '../../helpers/date';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\r\nimport {AppManager} from './manager';\r\nimport wrapPlainText from '../richTextProcessor/wrapPlainText';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport getDocumentInputFileLocation from './utils/docs/getDocumentInputFileLocation';\r\nimport getDocumentURL from './utils/docs/getDocumentURL';\r\nimport makeError from '../../helpers/makeError';\r\nimport {EXTENSION_MIME_TYPE_MAP} from '../../environment/mimeTypeMap';\r\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport appManagersManager from './appManagersManager';\r\n\r\nexport type MyDocument = Document.document;\r\n\r\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\r\n\r\ntype WallPaperId = WallPaper.wallPaper['id'];\r\n\r\nlet uploadWallPaperTempId = 0;\r\n\r\nexport class AppDocsManager extends AppManager {\r\n  private docs: {\r\n    [docId: DocId]: MyDocument\r\n  };\r\n\r\n  private uploadingWallPapers: {\r\n    [id: WallPaperId]: {\r\n      cacheContext: ThumbCache,\r\n      file: File\r\n    }\r\n  };\r\n\r\n  protected after() {\r\n    this.docs = {};\r\n    this.uploadingWallPapers = {};\r\n\r\n    MTProtoMessagePort.getInstance<false>().addEventListener('serviceWorkerOnline', (online) => {\r\n      if(!online) {\r\n        this.onServiceWorkerFail();\r\n      }\r\n    });\r\n  }\r\n\r\n  private onServiceWorkerFail = () => {\r\n    for(const id in this.docs) {\r\n      const doc = this.docs[id];\r\n\r\n      if(doc.supportsStreaming) {\r\n        delete doc.supportsStreaming;\r\n        this.thumbsStorage.deleteCacheContext(doc);\r\n      }\r\n    }\r\n  };\r\n\r\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\r\n    if(!doc || doc._ === 'documentEmpty') {\r\n      return;\r\n    }\r\n\r\n    const oldDoc = this.docs[doc.id];\r\n\r\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\r\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\r\n      this.referenceDatabase.saveContext(doc.file_reference, context);\r\n    }\r\n\r\n    // console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\r\n    // if(oldDoc) {\r\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\r\n    //     if(doc.thumbs) {\r\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\r\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\r\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\r\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\r\n    //         apiDoc.thumbs[0] = d.thumbs[0];\r\n    //       } */\r\n    //     }\r\n\r\n    //   //}\r\n\r\n    //   return oldDoc;\r\n\r\n    //   //return Object.assign(d, apiDoc, context);\r\n    //   //return context ? Object.assign(d, context) : d;\r\n    // }\r\n\r\n    if(!oldDoc) {\r\n      this.docs[doc.id] = doc;\r\n    }\r\n\r\n    // * exclude from state\r\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name',\r\n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle',\r\n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw',\r\n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\r\n\r\n    for(let i = 0, length = doc.attributes.length; i < length; ++i) {\r\n      const attribute = doc.attributes[i];\r\n      switch(attribute._) {\r\n        case 'documentAttributeFilename': {\r\n          doc.file_name = wrapPlainText(attribute.file_name);\r\n          break;\r\n        }\r\n\r\n        case 'documentAttributeAudio': {\r\n          if(doc.type === 'round') {\r\n            break;\r\n          }\r\n\r\n          doc.duration = attribute.duration;\r\n          doc.type = attribute.pFlags.voice && doc.mime_type === EXTENSION_MIME_TYPE_MAP.ogg ? 'voice' : 'audio';\r\n          break;\r\n        }\r\n\r\n        case 'documentAttributeVideo': {\r\n          doc.duration = attribute.duration;\r\n          doc.w = attribute.w;\r\n          doc.h = attribute.h;\r\n          // apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\r\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\r\n            doc.type = 'round';\r\n          } else /* if(apiDoc.thumbs) */ {\r\n            doc.type = 'video';\r\n          }\r\n          break;\r\n        }\r\n\r\n        case 'documentAttributeCustomEmoji':\r\n        case 'documentAttributeSticker': {\r\n          if(attribute.alt !== undefined) {\r\n            doc.stickerEmojiRaw = attribute.alt;\r\n          }\r\n\r\n          if(attribute.stickerset) {\r\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\r\n              delete attribute.stickerset;\r\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\r\n              doc.stickerSetInput = attribute.stickerset;\r\n            }\r\n          }\r\n\r\n          // * there can be no thumbs, then it is a document\r\n          if(/* apiDoc.thumbs &&  */doc.mime_type === EXTENSION_MIME_TYPE_MAP.webp && (doc.thumbs || getEnvironment().IS_WEBP_SUPPORTED)) {\r\n            doc.type = 'sticker';\r\n            doc.sticker = 1;\r\n          } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.webm) {\r\n            if(!getEnvironment().IS_WEBM_SUPPORTED) {\r\n              break;\r\n            }\r\n\r\n            doc.type = 'sticker';\r\n            doc.sticker = 3;\r\n            doc.animated = true;\r\n          }\r\n          break;\r\n        }\r\n\r\n        case 'documentAttributeImageSize': {\r\n          doc.type = 'photo';\r\n          doc.w = attribute.w;\r\n          doc.h = attribute.h;\r\n          break;\r\n        }\r\n\r\n        case 'documentAttributeAnimated': {\r\n          if((doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif || doc.mime_type === EXTENSION_MIME_TYPE_MAP.mp4)/*  && apiDoc.thumbs */) {\r\n            doc.type = 'gif';\r\n          }\r\n\r\n          doc.animated = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!doc.mime_type) {\r\n      const ext = (doc.file_name || '').split('.').pop();\r\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase() as any as MTFileExtension];\r\n      if(mappedMimeType) {\r\n        doc.mime_type = mappedMimeType;\r\n      } else {\r\n        switch(doc.type) {\r\n          case 'gif':\r\n          case 'video':\r\n          case 'round':\r\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.mp4;\r\n            break;\r\n          case 'sticker':\r\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.webp;\r\n            break;\r\n          case 'audio':\r\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.mp3;\r\n            break;\r\n          case 'voice':\r\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.ogg;\r\n            break;\r\n          default:\r\n            doc.mime_type = 'application/octet-stream';\r\n            break;\r\n        }\r\n      }\r\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\r\n      doc.type = 'pdf';\r\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\r\n      doc.type = 'gif';\r\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.tgs && doc.file_name === 'AnimatedSticker.tgs') {\r\n      doc.type = 'sticker';\r\n      doc.animated = true;\r\n      doc.sticker = 2;\r\n    }\r\n\r\n    if(doc.type === 'voice' || doc.type === 'round') {\r\n      // browser will identify extension\r\n      const attribute = doc.attributes.find((attribute) => attribute._ === 'documentAttributeFilename') as DocumentAttribute.documentAttributeFilename;\r\n      const ext = attribute && attribute.file_name.split('.').pop();\r\n      const date = getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\r\n      doc.file_name = `${doc.type}_${date}${ext ? '.' + ext : ''}`;\r\n    }\r\n\r\n    if(appManagersManager.isServiceWorkerOnline && ((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video')/*  || doc.mime_type.indexOf('video/') === 0 */) {\r\n      doc.supportsStreaming = true;\r\n\r\n      const cacheContext = this.thumbsStorage.getCacheContext(doc);\r\n      if(!cacheContext.url) {\r\n        this.thumbsStorage.setCacheContextURL(doc, undefined, getDocumentURL(doc), 0);\r\n      }\r\n    } else {\r\n      doc.supportsStreaming = false;\r\n    }\r\n\r\n    // for testing purposes\r\n    // doc.supportsStreaming = false;\r\n    // doc.url = ''; // * this will break upload urls\r\n\r\n    doc.file_name ||= '';\r\n\r\n    /* if(!doc.url) {\r\n      doc.url = this.getFileURL(doc);\r\n    } */\r\n\r\n    if(oldDoc) {\r\n      return Object.assign(oldDoc, doc);\r\n    }\r\n\r\n    return doc;\r\n  }\r\n\r\n  public getDoc(docId: DocId | MyDocument): MyDocument {\r\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\r\n  }\r\n\r\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean) {\r\n    return this.apiFileManager.downloadMedia({\r\n      media: doc,\r\n      queueId,\r\n      onlyCache\r\n    });\r\n  }\r\n\r\n  public saveWebPConvertedStrippedThumb(docId: DocId, bytes: Uint8Array) {\r\n    const doc = this.getDoc(docId);\r\n    if(!doc) {\r\n      return;\r\n    }\r\n\r\n    const thumb = doc.thumbs && doc.thumbs.find((thumb) => thumb._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\r\n    if(!thumb) {\r\n      return;\r\n    }\r\n\r\n    doc.pFlags.stickerThumbConverted = true;\r\n    thumb.bytes = bytes;\r\n  }\r\n\r\n  public prepareWallPaperUpload(file: File) {\r\n    const id = 'wallpaper-upload-' + ++uploadWallPaperTempId;\r\n\r\n    const thumb = {\r\n      _: 'photoSize',\r\n      h: 0,\r\n      w: 0,\r\n      location: {} as any,\r\n      size: file.size,\r\n      type: THUMB_TYPE_FULL\r\n    } as PhotoSize.photoSize;\r\n    let document: MyDocument = {\r\n      _: 'document',\r\n      access_hash: '',\r\n      attributes: [],\r\n      dc_id: 0,\r\n      file_reference: [],\r\n      id,\r\n      mime_type: file.type as MTMimeType,\r\n      size: file.size,\r\n      date: tsNow(true),\r\n      pFlags: {},\r\n      thumbs: [thumb],\r\n      file_name: file.name\r\n    };\r\n\r\n    document = this.saveDoc(document);\r\n\r\n    const cacheContext = this.thumbsStorage.setCacheContextURL(document, undefined, URL.createObjectURL(file), file.size);\r\n\r\n    const wallpaper: WallPaper.wallPaper = {\r\n      _: 'wallPaper',\r\n      access_hash: '',\r\n      document: document,\r\n      id,\r\n      slug: id,\r\n      pFlags: {}\r\n    };\r\n\r\n    this.uploadingWallPapers[id] = {\r\n      cacheContext,\r\n      file\r\n    };\r\n\r\n    return wallpaper;\r\n  }\r\n\r\n  public uploadWallPaper(id: WallPaperId) {\r\n    const {cacheContext, file} = this.uploadingWallPapers[id];\r\n    delete this.uploadingWallPapers[id];\r\n\r\n    const upload = this.apiFileManager.upload({file, fileName: file.name});\r\n    return upload.then((inputFile) => {\r\n      return this.apiManager.invokeApi('account.uploadWallPaper', {\r\n        file: inputFile,\r\n        mime_type: file.type,\r\n        settings: {\r\n          _: 'wallPaperSettings',\r\n          pFlags: {}\r\n        }\r\n      }).then((wallPaper) => {\r\n        assumeType<WallPaper.wallPaper>(wallPaper);\r\n        wallPaper.document = this.saveDoc(wallPaper.document);\r\n        this.thumbsStorage.setCacheContextURL(wallPaper.document, undefined, cacheContext.url, cacheContext.downloaded);\r\n\r\n        return wallPaper;\r\n      });\r\n    });\r\n  }\r\n\r\n  public getGifs() {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getSavedGifs',\r\n      processResult: (res) => {\r\n        assumeType<MessagesSavedGifs.messagesSavedGifs>(res);\r\n        return res.gifs.map((doc) => this.saveDoc(doc));\r\n      }\r\n    });\r\n  }\r\n\r\n  public requestDocPart(docId: DocId, dcId: number, offset: number, limit: number) {\r\n    const doc = this.getDoc(docId);\r\n    if(!doc) return Promise.reject(makeError('NO_DOC'));\r\n    return this.apiFileManager.requestFilePart(dcId, getDocumentInputFileLocation(doc), offset, limit);\r\n  }\r\n}\r\n","import deepEqual from '../../../../helpers/object/deepEqual';\r\nimport {InputReplyTo, MessageReplyHeader} from '../../../../layer';\r\n\r\nexport default function repliesAreEqual(reply1: MessageReplyHeader | InputReplyTo, reply2: MessageReplyHeader | InputReplyTo) {\r\n  return deepEqual(reply1, reply2);\r\n}\r\n","import deepEqual from '../../../../helpers/object/deepEqual';\r\nimport {DraftMessage} from '../../../../layer';\r\nimport repliesAreEqual from '../messages/repliesAreEqual';\r\n\r\nexport default function draftsAreEqual(draft1: DraftMessage, draft2: DraftMessage) {\r\n  return deepEqual(draft1 as DraftMessage.draftMessage, draft2 as DraftMessage.draftMessage, ['date', 'reply_to']) &&\r\n    repliesAreEqual((draft1 as DraftMessage.draftMessage)?.reply_to, (draft2 as DraftMessage.draftMessage)?.reply_to);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity, DraftMessage, MessagesSaveDraft, MessageReplyHeader, InputReplyTo, MessageMedia, WebPage, InputMedia} from '../../layer';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport stateStorage from '../stateStorage';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport draftsAreEqual from './utils/drafts/draftsAreEqual';\r\nimport isObject from '../../helpers/object/isObject';\r\n\r\nexport type MyDraftMessage = DraftMessage.draftMessage;\r\n\r\nexport class AppDraftsManager extends AppManager {\r\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage};\r\n  private getAllDraftPromise: Promise<void>;\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateDraftMessage: (update) => {\r\n        const peerId = this.appPeersManager.getPeerId(update.peer);\r\n        this.saveDraft({\r\n          peerId,\r\n          threadId: update.threadId,\r\n          draft: update.draft,\r\n          notify: true,\r\n          force: true\r\n        });\r\n      }\r\n    });\r\n\r\n    /* return  */stateStorage.get('drafts').then((drafts) => {\r\n      this.drafts = drafts || {};\r\n    });\r\n  }\r\n\r\n  public clear = (init?: boolean) => {\r\n    if(!init) {\r\n      this.getAllDraftPromise = undefined;\r\n    }\r\n\r\n    this.drafts = {};\r\n  };\r\n\r\n  private getKey(peerId: PeerId, threadId?: number) {\r\n    return '' + peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public getDraft(peerId: PeerId, threadId?: number) {\r\n    return this.drafts[this.getKey(peerId, threadId)];\r\n  }\r\n\r\n  // private generateDialog(peerId: PeerId) {\r\n  //   const dialog = this.dialogsStorage.generateDialog(peerId);\r\n  //   dialog.draft = this.drafts[peerId];\r\n  //   this.dialogsStorage.saveDialog(dialog);\r\n  //   this.appMessagesManager.newDialogsToHandle[peerId] = dialog;\r\n  //   this.appMessagesManager.scheduleHandleNewDialogs();\r\n  // }\r\n\r\n  public addMissedDialogs() {\r\n    return this.getAllDrafts().then(() => {\r\n      for(const key in this.drafts) {\r\n        if(key.indexOf('_') !== -1) { // exclude threads\r\n          continue;\r\n        }\r\n\r\n        const peerId = key.toPeerId();\r\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n        if(!dialog) {\r\n          this.appMessagesManager.reloadConversation(peerId);\r\n          // this.generateDialog(peerId);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private getAllDrafts() {\r\n    return this.getAllDraftPromise ??= this.apiManager.invokeApi('messages.getAllDrafts')\r\n    .then((updates) => {\r\n      const p = this.apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\r\n      return p.then(() => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDraft({\r\n    peerId,\r\n    threadId,\r\n    draft: apiDraft,\r\n    notify,\r\n    force\r\n  }: {\r\n    peerId: PeerId,\r\n    threadId?: number,\r\n    draft: DraftMessage,\r\n    notify?: boolean,\r\n    force?: boolean\r\n  }) {\r\n    const draft = this.processApiDraft(apiDraft, peerId);\r\n\r\n    const key = this.getKey(peerId, threadId);\r\n    if(draft) {\r\n      this.drafts[key] = draft;\r\n    } else {\r\n      delete this.drafts[key];\r\n    }\r\n\r\n    stateStorage.set({\r\n      drafts: this.drafts\r\n    });\r\n\r\n    if(notify) {\r\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\r\n      this.rootScope.dispatchEvent('draft_updated', {\r\n        peerId,\r\n        threadId,\r\n        draft,\r\n        force\r\n      });\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  private isEmptyDraft(draft: DraftMessage) {\r\n    if(draft?._ !== 'draftMessage') {\r\n      return true;\r\n    }\r\n\r\n    if(draft.reply_to !== undefined && (draft.reply_to as InputReplyTo.inputReplyToMessage).reply_to_msg_id > 0) {\r\n      return false;\r\n    }\r\n\r\n    if(!draft.message.length) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private processApiDraft(draft: DraftMessage, peerId: PeerId): MyDraftMessage {\r\n    if(draft?._ !== 'draftMessage') {\r\n      return undefined;\r\n    }\r\n\r\n    const replyTo = draft.reply_to as InputReplyTo.inputReplyToMessage;\r\n    if(replyTo?.reply_to_msg_id) {\r\n      const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n      replyTo.reply_to_msg_id = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_msg_id, channelId);\r\n      replyTo.top_msg_id &&= this.appMessagesIdsManager.generateMessageId(replyTo.top_msg_id, channelId);\r\n      replyTo.reply_to_peer_id &&= this.appPeersManager.getPeerId(replyTo.reply_to_peer_id);\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  public syncDraft(peerId: PeerId, threadId: number, localDraft?: DraftMessage, saveOnServer = true, force = false) {\r\n    // console.warn(dT(), 'sync draft', peerID)\r\n    const serverDraft = this.getDraft(peerId, threadId);\r\n    if(draftsAreEqual(serverDraft, localDraft)) {\r\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\r\n      return true;\r\n    }\r\n\r\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\r\n    const params: MessagesSaveDraft = {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      message: ''\r\n    };\r\n\r\n    let draftObj: DraftMessage;\r\n    if(this.isEmptyDraft(localDraft)) {\r\n      draftObj = {_: 'draftMessageEmpty'};\r\n    } else {\r\n      assumeType<DraftMessage.draftMessage>(localDraft);\r\n      const message = localDraft.message;\r\n      const entities: MessageEntity[] = localDraft.entities;\r\n\r\n      const replyTo = localDraft.reply_to as InputReplyTo.inputReplyToMessage;\r\n      if(replyTo) {\r\n        params.reply_to = {\r\n          _: 'inputReplyToMessage',\r\n          reply_to_msg_id: getServerMessageId(replyTo.reply_to_msg_id)\r\n        };\r\n\r\n        if(replyTo.reply_to_peer_id && !isObject(replyTo.reply_to_peer_id)) {\r\n          params.reply_to.reply_to_peer_id = this.appPeersManager.getInputPeerById(replyTo.reply_to_peer_id);\r\n        }\r\n      }\r\n\r\n      if(entities?.length) {\r\n        params.entities = this.appMessagesManager.getInputEntities(entities);\r\n      }\r\n\r\n      if(localDraft.pFlags.no_webpage) {\r\n        params.no_webpage = localDraft.pFlags.no_webpage;\r\n      }\r\n\r\n      if(localDraft.pFlags.invert_media) {\r\n        params.invert_media = localDraft.pFlags.invert_media;\r\n      }\r\n\r\n      if(localDraft.media) {\r\n        params.media = localDraft.media;\r\n      }\r\n\r\n      params.message = message;\r\n    }\r\n\r\n    if(threadId) {\r\n      const inputReplyTo: InputReplyTo.inputReplyToMessage = params.reply_to ??= {_: 'inputReplyToMessage'} as any;\r\n      if(!inputReplyTo.reply_to_msg_id) {\r\n        inputReplyTo.reply_to_msg_id = getServerMessageId(threadId);\r\n      } else {\r\n        inputReplyTo.top_msg_id = getServerMessageId(threadId);\r\n      }\r\n    }\r\n\r\n    const saveLocalDraft = draftObj || localDraft;\r\n    saveLocalDraft.date = tsNow(true) + this.timeManager.getServerTimeOffset();\r\n\r\n    this.saveDraft({\r\n      peerId,\r\n      threadId,\r\n      draft: saveLocalDraft,\r\n      notify: true,\r\n      force\r\n    });\r\n\r\n    if(saveOnServer) {\r\n      const promise = this.apiManager.invokeApi('messages.saveDraft', params);\r\n      const dialog = this.dialogsStorage.getDialogOnly(peerId); // * create or delete dialog when draft changes\r\n      if(!dialog || !getServerMessageId(dialog.top_message)) {\r\n        return promise.then(() => {\r\n          return this.appMessagesManager.reloadConversation(peerId);\r\n        });\r\n      }\r\n\r\n      return promise;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public clearAllDrafts() {\r\n    return this.apiManager.invokeApi('messages.clearAllDrafts').then((bool) => {\r\n      if(!bool) {\r\n        return;\r\n      }\r\n\r\n      for(const combined in this.drafts) {\r\n        const [peerId, threadId] = combined.split('_');\r\n        this.rootScope.dispatchEvent('draft_updated', {\r\n          peerId: peerId.toPeerId(),\r\n          threadId: threadId ? +threadId : undefined,\r\n          draft: undefined\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearDraft(peerId: PeerId, threadId: number) {\r\n    const emptyDraft: DraftMessage.draftMessageEmpty = {\r\n      _: 'draftMessageEmpty'\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, emptyDraft as any, false, true);\r\n    } else {\r\n      this.saveDraft({\r\n        peerId,\r\n        threadId,\r\n        draft: emptyDraft,\r\n        notify: true,\r\n        force: true\r\n      });\r\n    }\r\n  }\r\n\r\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\r\n    const draft: DraftMessage.draftMessage = {\r\n      _: 'draftMessage',\r\n      date: tsNow(true),\r\n      message,\r\n      pFlags: {},\r\n      entities\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, draft, false, true);\r\n    } else {\r\n      this.saveDraft({\r\n        peerId,\r\n        threadId,\r\n        draft,\r\n        notify: true,\r\n        force: true\r\n      });\r\n    }\r\n  }\r\n}\r\n","import copy from './copy';\r\nimport isObject from './isObject';\r\n\r\nexport default function validateInitObject(\r\n  initObject: any,\r\n  currentObject: any,\r\n  onReplace?: (key: string) => void,\r\n  previousKey?: string,\r\n  ignorePaths?: Set<string>,\r\n  path?: string\r\n) {\r\n  for(const key in initObject) {\r\n    const _path = path ? `${path}.${key}` : key;\r\n    if(ignorePaths?.has(_path)) {\r\n      continue;\r\n    }\r\n\r\n    if(typeof(currentObject[key]) !== typeof(initObject[key])) {\r\n      currentObject[key] = copy(initObject[key]);\r\n      onReplace?.(previousKey || key);\r\n    } else if(isObject(initObject[key])) {\r\n      validateInitObject(initObject[key], currentObject[key], onReplace, previousKey || key, ignorePaths, _path);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity} from '../../layer';\r\n\r\nexport default function fixEmoji(text: string, entities?: MessageEntity[]) {\r\n  /* if(!IS_EMOJI_SUPPORTED) {\r\n    return text;\r\n  } */\r\n  // '$`\\ufe0f'\r\n\r\n  text = text.replace(/[\\u2640\\u2642\\u2764](?!\\ufe0f)/g, (match, offset, string) => {\r\n    if(entities) {\r\n      const length = match.length;\r\n\r\n      offset += length;\r\n      entities.forEach((entity) => {\r\n        const end = entity.offset + entity.length;\r\n        if(end === offset) { // current entity\r\n          entity.length += length;\r\n        } else if(end > offset) {\r\n          entity.offset += length;\r\n        }\r\n      });\r\n    }\r\n\r\n    // console.log([match, offset, string]);\r\n    return match + '\\ufe0f';\r\n  });\r\n\r\n  return text;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDocument} from './appDocsManager';\r\nimport App from '../../config/app';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport validateInitObject from '../../helpers/object/validateInitObject';\r\nimport fixEmoji from '../richTextProcessor/fixEmoji';\r\nimport SearchIndex from '../searchIndex';\r\nimport stateStorage from '../stateStorage';\r\nimport {AppManager} from './manager';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport pause from '../../helpers/schedulers/pause';\r\n\r\ntype EmojiLangPack = {\r\n  keywords: {\r\n    [keyword: string]: string[],\r\n  },\r\n  version: number,\r\n  langCode: string\r\n};\r\n\r\nconst EMOJI_LANG_PACK: EmojiLangPack = {\r\n  keywords: {},\r\n  version: 0,\r\n  langCode: App.langPackCode\r\n};\r\n\r\nconst RECENT_MAX_LENGTH = 32;\r\n\r\ntype EmojiType = 'native' | 'custom';\r\n\r\nexport class AppEmojiManager extends AppManager {\r\n  private static POPULAR_EMOJI = ['😂', '😘', '❤️', '😍', '😊', '😁', '👍', '☺️', '😔', '😄', '😭', '💋', '😒', '😳', '😜', '🙈', '😉', '😃', '😢', '😝', '😱', '😡', '😏', '😞', '😅', '😚', '🙊', '😌', '😀', '😋', '😆', '👌', '😐', '😕'];\r\n  private keywordLangPacks: {\r\n    [langCode: string]: EmojiLangPack\r\n  } = {};\r\n\r\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\r\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\r\n\r\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\r\n\r\n  private recent: {native?: string[], custom?: DocId[]} = {};\r\n  private getRecentEmojisPromises: {native?: Promise<string[]>, custom?: Promise<DocId[]>} = {};\r\n\r\n  private getCustomEmojiDocumentsPromise: Promise<any>;\r\n  private getCustomEmojiDocumentPromises: Map<DocId, CancellablePromise<MyDocument>> = new Map();\r\n\r\n  /* public getPopularEmoji() {\r\n    return stateStorage.get('emojis_popular').then((popEmojis) => {\r\n      var result = []\r\n      if (popEmojis && popEmojis.length) {\r\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\r\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\r\n        }\r\n        callback(result)\r\n        return\r\n      }\r\n\r\n      return stateStorage.get('emojis_recent').then((recentEmojis) => {\r\n        recentEmojis = recentEmojis || popular || []\r\n        var shortcut\r\n        var code\r\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\r\n          shortcut = recentEmojis[i]\r\n          if (Array.isArray(shortcut)) {\r\n            shortcut = shortcut[0]\r\n          }\r\n          if (shortcut && typeof shortcut === 'string') {\r\n            if (shortcut.charAt(0) == ':') {\r\n              shortcut = shortcut.substr(1, shortcut.length - 2)\r\n            }\r\n            if (code = shortcuts[shortcut]) {\r\n              result.push({code: code, rate: 1})\r\n            }\r\n          }\r\n        }\r\n        callback(result)\r\n      });\r\n    });\r\n  }\r\n\r\n  function pushPopularEmoji (code) {\r\n    getPopularEmoji(function (popularEmoji) {\r\n      var exists = false\r\n      var count = popularEmoji.length\r\n      var result = []\r\n      for (var i = 0; i < count; i++) {\r\n        if (popularEmoji[i].code == code) {\r\n          exists = true\r\n          popularEmoji[i].rate++\r\n        }\r\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\r\n      }\r\n      if (exists) {\r\n        result.sort(function (a, b) {\r\n          return b[1] - a[1]\r\n        })\r\n      } else {\r\n        if (result.length > 41) {\r\n          result = result.slice(0, 41)\r\n        }\r\n        result.push([code, 1])\r\n      }\r\n      ConfigStorage.set({emojis_popular: result})\r\n    })\r\n  } */\r\n\r\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\r\n    const promise = this.getKeywordsPromises[langCode];\r\n    if(promise) {\r\n      return promise;\r\n    }\r\n\r\n    const storageKey: any = 'emojiKeywords_' + langCode;\r\n    return this.getKeywordsPromises[langCode] = stateStorage.get(storageKey).then((pack: EmojiLangPack) => {\r\n      if(!isObject(pack)) {\r\n        pack = {} as any;\r\n      }\r\n\r\n      validateInitObject(EMOJI_LANG_PACK, pack);\r\n\r\n      // important\r\n      pack.langCode = langCode;\r\n      this.keywordLangPacks[langCode] = pack;\r\n\r\n      return this.apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\r\n        lang_code: pack.langCode,\r\n        from_version: pack.version\r\n      }).then((keywordsDifference) => {\r\n        pack.version = keywordsDifference.version;\r\n\r\n        const packKeywords = pack.keywords;\r\n        const keywords = keywordsDifference.keywords;\r\n        for(let i = 0, length = keywords.length; i < length; ++i) {\r\n          const {keyword, emoticons} = keywords[i];\r\n          packKeywords[keyword] = emoticons;\r\n        }\r\n\r\n        stateStorage.set({\r\n          [storageKey]: pack\r\n        });\r\n\r\n        return pack;\r\n      }, () => {\r\n        return pack;\r\n      });\r\n    });\r\n  }\r\n\r\n  public getBothEmojiKeywords() {\r\n    const promises: Promise<any>[] = [\r\n      this.getEmojiKeywords()\r\n    ];\r\n\r\n    if(this.networkerFactory.language !== App.langPackCode) {\r\n      promises.push(this.getEmojiKeywords(this.networkerFactory.language));\r\n    }\r\n\r\n    if(!this.recent.native) {\r\n      promises.push(this.getRecentEmojis('native'));\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  private indexEmojis() {\r\n    if(!this.index) {\r\n      this.index = new SearchIndex({minChars: 2, fullWords: true});\r\n    }\r\n\r\n    for(const langCode in this.keywordLangPacks) {\r\n      if(this.indexedLangPacks[langCode]) {\r\n        continue;\r\n      }\r\n\r\n      const pack = this.keywordLangPacks[langCode];\r\n      const keywords = pack.keywords;\r\n\r\n      for(const keyword in keywords) {\r\n        const emoticons = keywords[keyword];\r\n        this.index.indexObject(emoticons, keyword);\r\n      }\r\n\r\n      this.indexedLangPacks[langCode] = true;\r\n    }\r\n  }\r\n\r\n  public searchEmojis(q: string) {\r\n    this.indexEmojis();\r\n\r\n    q = q.toLowerCase().replace(/_/g, ' ');\r\n\r\n    // const perf = performance.now();\r\n    let emojis: Array<string>;\r\n    if(q.trim()) {\r\n      const set = this.index.search(q);\r\n      emojis = Array.from(set).reduce((acc, v) => acc.concat(v), []);\r\n    } else {\r\n      emojis = this.recent.native.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\r\n    }\r\n\r\n    emojis = Array.from(new Set(emojis));\r\n    // console.log('searchEmojis', q, 'time', performance.now() - perf);\r\n\r\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\r\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\r\n        emojis[i] += '\\ufe0f';\r\n      }\r\n    } */\r\n\r\n    return emojis;\r\n  }\r\n\r\n  public getRecentEmojis<T extends EmojiType>(type: 'custom'): Promise<DocId[]>;\r\n  public getRecentEmojis<T extends EmojiType>(type: 'native'): Promise<string[]>;\r\n  public getRecentEmojis<T extends EmojiType>(type: T): Promise<string[] | DocId[]> {\r\n    const promises = this.getRecentEmojisPromises;\r\n    return promises[type] ??= this.appStateManager.getState().then((state) => {\r\n      let recent: string[] | DocId[] = [];\r\n      if(type === 'native') {\r\n        const {recentEmoji} = state;\r\n        recent = Array.isArray(recentEmoji) && recentEmoji.length ? recentEmoji : AppEmojiManager.POPULAR_EMOJI;\r\n      } else {\r\n        const {recentCustomEmoji} = state;\r\n        recent = Array.isArray(recentCustomEmoji) && recentCustomEmoji.length ? recentCustomEmoji : [];\r\n      }\r\n\r\n      return this.recent[type] = recent as any;\r\n    }) as any;\r\n  }\r\n\r\n  public pushRecentEmoji(emoji: AppEmoji) {\r\n    const type: EmojiType = emoji.docId ? 'custom' : 'native';\r\n    emoji.emoji = fixEmoji(emoji.emoji);\r\n    // @ts-ignore\r\n    this.getRecentEmojis(type).then((recent) => {\r\n      const i = emoji.docId || emoji.emoji;\r\n      indexOfAndSplice(recent, i);\r\n      recent.unshift(i);\r\n      recent.splice(RECENT_MAX_LENGTH, recent.length - RECENT_MAX_LENGTH);\r\n\r\n      this.appStateManager.pushToState(type === 'custom' ? 'recentCustomEmoji' : 'recentEmoji', recent);\r\n      this.rootScope.dispatchEvent('emoji_recent', emoji);\r\n    });\r\n  }\r\n\r\n  public getCustomEmojiDocuments(docIds: DocId[]) {\r\n    if(!docIds.length) return Promise.resolve([] as MyDocument[]);\r\n    return this.apiManager.invokeApi('messages.getCustomEmojiDocuments', {document_id: docIds}).then((documents) => {\r\n      return documents.map((doc) => {\r\n        return this.appDocsManager.saveDoc(doc, {\r\n          type: 'customEmoji',\r\n          docId: doc.id\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  public getCachedCustomEmojiDocuments(docIds: DocId[]) {\r\n    return docIds.map((docId) => this.appDocsManager.getDoc(docId));\r\n  }\r\n\r\n  private setDebouncedGetCustomEmojiDocuments() {\r\n    if(this.getCustomEmojiDocumentsPromise || !this.getCustomEmojiDocumentPromises.size) {\r\n      return;\r\n    }\r\n\r\n    this.getCustomEmojiDocumentsPromise = pause(0).then(() => {\r\n      const allIds = [...this.getCustomEmojiDocumentPromises.keys()];\r\n      const promises: Promise<any>[] = [];\r\n      do {\r\n        const ids = allIds.splice(0, 100);\r\n        const promise = this.getCustomEmojiDocuments(ids).then((docs) => {\r\n          docs.forEach((doc, idx) => {\r\n            const docId = ids[idx];\r\n            const deferred = this.getCustomEmojiDocumentPromises.get(docId);\r\n            this.getCustomEmojiDocumentPromises.delete(docId);\r\n            deferred.resolve(doc);\r\n          });\r\n        });\r\n\r\n        promises.push(promise);\r\n      } while(allIds.length);\r\n\r\n      return Promise.all(promises);\r\n    }).finally(() => {\r\n      this.getCustomEmojiDocumentsPromise = undefined;\r\n      this.setDebouncedGetCustomEmojiDocuments();\r\n    });\r\n  }\r\n\r\n  public getCustomEmojiDocument(id: DocId) {\r\n    let promise = this.getCustomEmojiDocumentPromises.get(id);\r\n    if(promise) {\r\n      return promise;\r\n    }\r\n\r\n    const doc = this.appDocsManager.getDoc(id);\r\n    if(doc) {\r\n      return doc;\r\n    }\r\n\r\n    promise = deferredPromise();\r\n    this.getCustomEmojiDocumentPromises.set(id, promise);\r\n\r\n    this.setDebouncedGetCustomEmojiDocuments();\r\n\r\n    return promise;\r\n  }\r\n\r\n  public getCustomEmojis() {\r\n    return this.appStickersManager.getEmojiStickers();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/evgeny-nadymov/telegram-react\r\n * Copyright (C) 2018 Evgeny Nadymov\r\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\r\n */\r\n\r\nimport type GroupCallConnectionInstance from '../calls/groupCallConnectionInstance';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {nextRandomUint} from '../../helpers/random';\r\nimport {DataJSON, GroupCall, GroupCallParticipant, GroupCallParticipantVideoSourceGroup, InputGroupCall, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates} from '../../layer';\r\nimport {logger} from '../logger';\r\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\n\r\nexport type GroupCallId = GroupCall['id'];\r\nexport type MyGroupCall = GroupCall | InputGroupCall;\r\n\r\nexport type GroupCallConnectionType = 'main' | 'presentation';\r\n\r\nexport type JoinGroupCallJsonPayload = {\r\n  fingerprints: {\r\n    fingerprint: string;\r\n    setup: string;\r\n    hash: string;\r\n  }[];\r\n  pwd: string;\r\n  ssrc: number;\r\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\r\n  ufrag: string;\r\n};\r\n\r\nconst GET_PARTICIPANTS_LIMIT = 100;\r\n\r\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\r\n\r\nexport class AppGroupCallsManager extends AppManager {\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private groupCalls: Map<GroupCallId, MyGroupCall>;\r\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\r\n  private nextOffsets: Map<GroupCallId, string>;\r\n\r\n  // private doNotDispatchParticipantUpdate: PeerId;\r\n\r\n  protected after() {\r\n    this.log = logger('GROUP-CALLS');\r\n\r\n    this.groupCalls = new Map();\r\n    this.participants = new Map();\r\n    this.nextOffsets = new Map();\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateGroupCall: (update) => {\r\n        this.saveGroupCall(update.call, update.chat_id);\r\n      },\r\n\r\n      updateGroupCallParticipants: (update) => {\r\n        this.saveGroupCall(update.call);\r\n\r\n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\r\n\r\n        const groupCallId = update.call.id;\r\n        this.saveApiParticipants(groupCallId, update.participants);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('group_call_update', (groupCall) => {\r\n      if(groupCall._ === 'groupCallDiscarded') {\r\n        this.participants.delete(groupCall.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCachedParticipants(groupCallId: GroupCallId) {\r\n    let participants = this.participants.get(groupCallId);\r\n    if(!participants) {\r\n      this.participants.set(groupCallId, participants = new Map());\r\n    }\r\n\r\n    return participants;\r\n  }\r\n\r\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\r\n    const nextOffsetsMap = this.nextOffsets;\r\n\r\n    const setNextOffset = (newNextOffset: string) => {\r\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\r\n        nextOffsetsMap.set(groupCallId, newNextOffset);\r\n      }\r\n    };\r\n\r\n    const nextOffset = nextOffsetsMap.get(groupCallId);\r\n    return {\r\n      nextOffset,\r\n      setNextOffset\r\n    };\r\n  }\r\n\r\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\r\n    const participants = this.getCachedParticipants(groupCallId);\r\n\r\n    const peerId = getPeerId(participant.peer);\r\n\r\n    const oldParticipant = participants.get(peerId);\r\n    const hasLeft = participant.pFlags.left;\r\n    if(!oldParticipant && hasLeft) {\r\n      return;\r\n    }\r\n\r\n    // * fix missing flag\r\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\r\n      participant.pFlags.can_self_unmute = true;\r\n    }\r\n\r\n    if(oldParticipant) {\r\n      safeReplaceObject(oldParticipant, participant);\r\n      participant = oldParticipant;\r\n    } else {\r\n      participants.set(peerId, participant);\r\n    }\r\n\r\n    // if(!skipCounterUpdating) {\r\n    const groupCall = this.getGroupCall(groupCallId);\r\n    if(groupCall?._ === 'groupCall') {\r\n      let modified = false;\r\n      if(hasLeft) {\r\n        --groupCall.participants_count;\r\n        modified = true;\r\n      } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\r\n        ++groupCall.participants_count;\r\n        modified = true;\r\n      }\r\n\r\n      if(modified) {\r\n        this.rootScope.dispatchEvent('group_call_update', groupCall);\r\n      }\r\n    }\r\n    // }\r\n\r\n    if(hasLeft) {\r\n      participants.delete(peerId);\r\n    }\r\n\r\n    if(oldParticipant || true/*  && this.doNotDispatchParticipantUpdate !== peerId */) {\r\n      this.rootScope.dispatchEvent('group_call_participant', {\r\n        groupCallId,\r\n        participant\r\n      });\r\n    }\r\n  }\r\n\r\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\r\n    if((apiParticipants as any).saved) return;\r\n    (apiParticipants as any).saved = true;\r\n    apiParticipants.forEach((p) => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\r\n  }\r\n\r\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\r\n    muted: boolean,\r\n    volume: number,\r\n    raiseHand: boolean,\r\n    videoStopped: boolean,\r\n    videoPaused: boolean,\r\n    presentationPaused: boolean\r\n  }>) {\r\n    this.saveApiParticipant(groupCallId, participant);\r\n\r\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : getPeerId(participant.peer);\r\n    const updates = await this.apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\r\n      call: this.getGroupCallInput(groupCallId),\r\n      participant: peerId === NULL_PEER_ID ? this.appPeersManager.getInputPeerSelf() : this.appPeersManager.getInputPeerById(peerId),\r\n      muted: options.muted,\r\n      volume: options.volume,\r\n      raise_hand: options.raiseHand,\r\n      video_paused: options.videoPaused,\r\n      video_stopped: options.videoStopped,\r\n      presentation_paused: options.presentationPaused\r\n    });\r\n\r\n    // do not replace with peerId because it can be null\r\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = getPeerId(participant.peer);\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\r\n  }\r\n\r\n  public getGroupCall(id: GroupCallId) {\r\n    return this.groupCalls.get(id);\r\n  }\r\n\r\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\r\n    const call = this.getGroupCall(id);\r\n    if(call && call._ !== 'inputGroupCall' && !override) {\r\n      return call;\r\n    }\r\n\r\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'phone.getGroupCall',\r\n      params: {\r\n        call: this.getGroupCallInput(id),\r\n        limit\r\n      },\r\n      processResult: (groupCall) => {\r\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\r\n        this.appUsersManager.saveApiUsers(groupCall.users);\r\n        this.appChatsManager.saveApiChats(groupCall.chats);\r\n        this.saveApiParticipants(id, groupCall.participants, true);\r\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\r\n\r\n        if(limit && this.nextOffsets.get(id) === undefined) {\r\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\r\n        }\r\n\r\n        return call;\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\r\n    const oldCall = this.groupCalls.get(call.id);\r\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\r\n    if(oldCall) {\r\n      if(shouldUpdate) {\r\n        safeReplaceObject(oldCall, call);\r\n      }\r\n\r\n      call = oldCall;\r\n    } else {\r\n      this.groupCalls.set(call.id, call);\r\n    }\r\n\r\n    if(shouldUpdate) {\r\n      this.rootScope.dispatchEvent('group_call_update', call as any);\r\n    }\r\n\r\n    return call;\r\n  }\r\n\r\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string) {\r\n    const updates = await this.apiManager.invokeApi('phone.createGroupCall', {\r\n      peer: this.appPeersManager.getInputPeerById(chatId.toPeerId(true)),\r\n      random_id: nextRandomUint(32),\r\n      schedule_date: scheduleDate,\r\n      title\r\n    });\r\n\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n\r\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCall') as Update.updateGroupCall;\r\n    return update.call;\r\n  }\r\n\r\n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\r\n    const groupCall = this.getGroupCall(id);\r\n    return {\r\n      _: 'inputGroupCall',\r\n      id: groupCall.id,\r\n      access_hash: groupCall.access_hash\r\n    };\r\n  }\r\n\r\n  // public generateSelfParticipant(): GroupCallParticipant {\r\n  //   const mainSources = this.currentGroupCall.connections.main.sources;\r\n  //   const presentationSources = this.currentGroupCall.connections.presentation?.sources;\r\n  //   return {\r\n  //     _: 'groupCallParticipant',\r\n  //     pFlags: {\r\n  //       can_self_unmute: true,\r\n  //       self: true\r\n  //     },\r\n  //     source: mainSources.audio.source,\r\n  //     video: this.generateSelfVideo(mainSources.video),\r\n  //     presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\r\n  //     date: tsNow(true),\r\n  //     peer: this.appPeersManager.getOutputPeer(rootScope.myId)\r\n  //   };\r\n  // }\r\n\r\n  public async getGroupCallParticipants(id: GroupCallId) {\r\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\r\n\r\n    if(nextOffset !== '') {\r\n      await this.apiManager.invokeApiSingleProcess({\r\n        method: 'phone.getGroupParticipants',\r\n        params: {\r\n          call: this.getGroupCallInput(id),\r\n          ids: [],\r\n          sources: [],\r\n          offset: nextOffset || '',\r\n          limit: GET_PARTICIPANTS_LIMIT\r\n        },\r\n        processResult: (groupCallParticipants) => {\r\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\r\n\r\n          this.appChatsManager.saveApiChats(groupCallParticipants.chats);\r\n          this.appUsersManager.saveApiUsers(groupCallParticipants.users);\r\n          this.saveApiParticipants(id, groupCallParticipants.participants);\r\n\r\n          setNextOffset(newNextOffset);\r\n        }\r\n      });\r\n    }\r\n\r\n    return {\r\n      participants: this.getCachedParticipants(id),\r\n      isEnd: this.nextOffsets.get(id) === ''\r\n    };\r\n  }\r\n\r\n  public hangUp(id: GroupCallId, discard?: boolean | number) {\r\n    const groupCallInput = this.getGroupCallInput(id);\r\n    let promise: Promise<Updates>;\r\n    if(typeof(discard) === 'boolean' && discard) {\r\n      promise = this.apiManager.invokeApi('phone.discardGroupCall', {\r\n        call: groupCallInput\r\n      });\r\n    } else if(typeof(discard) === 'number') {\r\n      promise = this.apiManager.invokeApi('phone.leaveGroupCall', {\r\n        call: groupCallInput,\r\n        source: discard\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', {\r\n        call: groupCallInput,\r\n        join_as: this.appPeersManager.getInputPeerSelf(),\r\n        muted: true,\r\n        video_stopped: true,\r\n        params: {\r\n          _: 'dataJSON',\r\n          data: ''\r\n        }\r\n      });\r\n    }\r\n\r\n    return promise.then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public async joinGroupCall(groupCallId: GroupCallId, params: DataJSON, options: GroupCallConnectionInstance['options']) {\r\n    const groupCallInput = this.getGroupCallInput(groupCallId);\r\n    let promise: Promise<Updates>;\r\n    if(options.type === 'main') {\r\n      const request: PhoneJoinGroupCall = {\r\n        call: groupCallInput,\r\n        join_as: this.appPeersManager.getInputPeerSelf(),\r\n        params,\r\n        muted: options.isMuted,\r\n        video_stopped: !options.joinVideo\r\n      };\r\n\r\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', request);\r\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\r\n    } else {\r\n      const request: PhoneJoinGroupCallPresentation = {\r\n        call: groupCallInput,\r\n        params\r\n      };\r\n\r\n      promise = this.apiManager.invokeApi('phone.joinGroupCallPresentation', request);\r\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\r\n    }\r\n\r\n    const updates = await promise;\r\n    this.apiUpdatesManager.processUpdateMessage(updates);\r\n\r\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\r\n    return update;\r\n  }\r\n\r\n  public leaveGroupCallPresentation(groupCallId: GroupCallId) {\r\n    return this.apiManager.invokeApi('phone.leaveGroupCallPresentation', {\r\n      call: this.getGroupCallInput(groupCallId)\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {InputPhoto} from '../../../../layer';\r\nimport {MyPhoto} from '../../appPhotosManager';\r\n\r\nexport default function getPhotoInput(photo: MyPhoto): InputPhoto.inputPhoto {\r\n  return {\r\n    _: 'inputPhoto',\r\n    id: photo.id,\r\n    access_hash: photo.access_hash,\r\n    file_reference: photo.file_reference\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {InputMedia} from '../../../../layer';\r\nimport {MyPhoto} from '../../appPhotosManager';\r\nimport getPhotoInput from './getPhotoInput';\r\n\r\nexport default function getPhotoMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\r\n  return {\r\n    _: 'inputMediaPhoto',\r\n    id: getPhotoInput(photo),\r\n    ttl_seconds: 0,\r\n    pFlags: {}\r\n  };\r\n}\r\n","import {MessagesBotResults} from '../../../../layer';\r\n\r\nexport default function generateQId(queryId: MessagesBotResults.messagesBotResults['query_id'], resultId: string) {\r\n  return queryId + '_' + resultId;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Document, InputMedia} from '../../../../layer';\r\n\r\nexport default function getMediaInput(doc: Document.document): InputMedia.inputMediaDocument {\r\n  return {\r\n    _: 'inputMediaDocument',\r\n    id: {\r\n      _: 'inputDocument',\r\n      id: doc.id,\r\n      access_hash: doc.access_hash,\r\n      file_reference: doc.file_reference\r\n    },\r\n    ttl_seconds: 0,\r\n    pFlags: {}\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDocument} from './appDocsManager';\r\nimport type {MyPhoto} from './appPhotosManager';\r\nimport type {MyTopPeer} from './appUsersManager';\r\nimport type {AppMessagesManager} from './appMessagesManager';\r\nimport {BotInlineResult, GeoPoint, InputGeoPoint, MessageMedia} from '../../layer';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport {AppManager} from './manager';\r\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport generateQId from './utils/inlineBots/generateQId';\r\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\r\n\r\nexport class AppInlineBotsManager extends AppManager {\r\n  private inlineResults: {[queryAndResultIds: string]: BotInlineResult} = {};\r\n  private setHash: {\r\n    [botId: UserId]: {\r\n      peerId: PeerId,\r\n      time: number\r\n    }\r\n  } = {};\r\n\r\n  public getGeoInput(geo: GeoPoint): InputGeoPoint {\r\n    return geo._ === 'geoPoint' ? {\r\n      _: 'inputGeoPoint',\r\n      lat: geo.lat,\r\n      long: geo.long,\r\n      accuracy_radius: geo.accuracy_radius\r\n    } : {\r\n      _: 'inputGeoPointEmpty'\r\n    };\r\n  }\r\n\r\n  public getInlineResults(peerId: PeerId, botId: BotId, query = '', offset = '', geo?: GeoPoint) {\r\n    return this.apiManager.invokeApi('messages.getInlineBotResults', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      query,\r\n      geo_point: geo ? this.getGeoInput(geo) : undefined,\r\n      offset\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then((botResults) => {\r\n      const queryId = botResults.query_id;\r\n\r\n      /* if(botResults.switch_pm) {\r\n        botResults.switch_pm.rText = wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\r\n      } */\r\n\r\n      botResults.results.forEach((result) => {\r\n        if(result._ === 'botInlineMediaResult') {\r\n          result.document = this.appDocsManager.saveDoc(result.document);\r\n          result.photo = this.appPhotosManager.savePhoto(result.photo);\r\n        } else {\r\n          result.content = this.appWebDocsManager.saveWebDocument(result.content);\r\n          result.thumb = this.appWebDocsManager.saveWebDocument(result.thumb);\r\n        }\r\n\r\n        this.inlineResults[generateQId(queryId, result.id)] = result;\r\n      });\r\n\r\n      return botResults;\r\n    });\r\n  }\r\n\r\n  private pushPopularBot(botId: BotId) {\r\n    this.appUsersManager.getTopPeers('bots_inline').then((topPeers) => {\r\n      const botPeerId = botId.toPeerId();\r\n      const index = topPeers.findIndex((topPeer) => topPeer.id === botPeerId);\r\n      let topPeer: MyTopPeer;\r\n      if(index !== -1) {\r\n        topPeer = topPeers[index];\r\n      } else {\r\n        topPeer = {\r\n          id: botPeerId,\r\n          rating: 0\r\n        };\r\n      }\r\n\r\n      ++topPeer.rating;\r\n      insertInDescendSortedArray(topPeers, topPeer, 'rating');\r\n\r\n      this.appStateManager.setKeyValueToStorage('topPeersCache');\r\n\r\n      // rootScope.$broadcast('inline_bots_popular')\r\n    });\r\n  }\r\n\r\n  public switchToPM(fromPeerId: PeerId, botId: BotId, startParam: string) {\r\n    this.setHash[botId] = {peerId: fromPeerId, time: Date.now()};\r\n    return this.appMessagesManager.startBot(botId, undefined, startParam);\r\n  }\r\n\r\n  /*\r\n  function resolveInlineMention (username) {\r\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\r\n      if (peerId.isUser()) {\r\n        var bot = AppUsersManager.getUser(peerId)\r\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\r\n          var resolvedBot = {\r\n            username: username,\r\n            id: peerId,\r\n            placeholder: bot.bot_inline_placeholder\r\n          }\r\n          if (bot.pFlags.bot_inline_geo &&\r\n            GeoLocationManager.isAvailable()) {\r\n              return checkGeoLocationAccess(peerId).then(function () {\r\n                return GeoLocationManager.getPosition().then(function (coords) {\r\n                  resolvedBot.geo = coords\r\n                  return qSync.when(resolvedBot)\r\n                })\r\n              })['catch'](function () {\r\n                return qSync.when(resolvedBot)\r\n              })\r\n            }\r\n            return qSync.when(resolvedBot)\r\n          }\r\n        }\r\n        return $q.reject()\r\n      }, function (error) {\r\n        error.handled = true\r\n        return $q.reject(error)\r\n      })\r\n    }\r\n\r\n    function regroupWrappedResults (results, rowW, rowH) {\r\n      if (!results ||\r\n        !results[0] ||\r\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\r\n          return\r\n        }\r\n        var ratios = []\r\n        angular.forEach(results, function (result) {\r\n          var w\r\n          var h, doc\r\n          var photo\r\n          if (result._ === 'botInlineMediaResult') {\r\n            if (doc = result.document) {\r\n              w = result.document.w\r\n              h = result.document.h\r\n            }\r\n            else if (photo = result.photo) {\r\n              var photoSize = (photo.sizes || [])[0]\r\n              w = photoSize && photoSize.w\r\n              h = photoSize && photoSize.h\r\n            }\r\n          }else {\r\n            w = result.w\r\n            h = result.h\r\n          }\r\n          if (!w || !h) {\r\n            w = h = 1\r\n          }\r\n          ratios.push(w / h)\r\n        })\r\n\r\n        var rows = []\r\n        var curCnt = 0\r\n        var curW = 0\r\n        angular.forEach(ratios, function (ratio) {\r\n          var w = ratio * rowH\r\n          curW += w\r\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\r\n            curCnt++\r\n          } else {\r\n            rows.push(curCnt)\r\n            curCnt = 1\r\n            curW = w\r\n          }\r\n        })\r\n        if (curCnt) {\r\n          rows.push(curCnt)\r\n        }\r\n\r\n        var i = 0\r\n        var thumbs = []\r\n        var lastRowI = rows.length - 1\r\n        angular.forEach(rows, function (rowCnt, rowI) {\r\n          var lastRow = rowI === lastRowI\r\n          var curRatios = ratios.slice(i, i + rowCnt)\r\n          var sumRatios = 0\r\n          angular.forEach(curRatios, function (ratio) {\r\n            sumRatios += ratio\r\n          })\r\n          angular.forEach(curRatios, function (ratio, j) {\r\n            var thumbH = rowH\r\n            var thumbW = rowW * ratio / sumRatios\r\n            var realW = thumbH * ratio\r\n            if (lastRow && thumbW > realW) {\r\n              thumbW = realW\r\n            }\r\n            var result = results[i + j]\r\n            result.thumbW = Math.floor(thumbW) - 2\r\n            result.thumbH = Math.floor(thumbH) - 2\r\n          })\r\n\r\n          i += rowCnt\r\n        })\r\n      } */\r\n\r\n  public async checkSwitchReturn(botId: BotId) {\r\n    const bot = this.appUsersManager.getUser(botId);\r\n    if(!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\r\n      return;\r\n    }\r\n\r\n    const peerData = this.setHash[botId];\r\n    if(peerData) {\r\n      delete this.setHash[botId];\r\n      if((Date.now() - peerData.time) < 3600e3) {\r\n        return peerData.peerId;\r\n      }\r\n    }\r\n  }\r\n\r\n  public switchInlineQuery(peerId: PeerId, threadId: number, botId: BotId, query: string) {\r\n    const message = '@' + this.appPeersManager.getPeerUsername(botId.toPeerId()) + ' ' + query;\r\n    this.appDraftsManager.setDraft(peerId, threadId, message);\r\n  }\r\n\r\n  public callbackButtonClick(peerId: PeerId, mid: number, button: any) {\r\n    return this.apiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid),\r\n      data: button.data\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true});\r\n  }\r\n\r\n  /* function gameButtonClick (id) {\r\n    var message = AppMessagesManager.getMessage(id)\r\n    var peerId = AppMessagesManager.getMessagePeer(message)\r\n\r\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: AppPeersManager.getInputPeerByID(peerId),\r\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\r\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\r\n      if (typeof callbackAnswer.message === 'string' &&\r\n      callbackAnswer.message.length) {\r\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\r\n      }\r\n      else if (typeof callbackAnswer.url === 'string') {\r\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\r\n      }\r\n    })\r\n  } */\r\n\r\n  public sendInlineResult(\r\n    peerId: PeerId,\r\n    botId: BotId,\r\n    queryAndResultIds: string,\r\n    options: Parameters<AppMessagesManager['sendOther']>[0] = {}\r\n  ) {\r\n    const inlineResult = this.inlineResults[queryAndResultIds];\r\n    if(!inlineResult) {\r\n      return;\r\n    }\r\n\r\n    this.pushPopularBot(botId);\r\n    const splitted = queryAndResultIds.split('_');\r\n    const queryId = splitted.shift();\r\n    const resultId = splitted.join('_');\r\n    options.viaBotId = botId;\r\n    options.queryId = queryId;\r\n    options.resultId = resultId;\r\n    if(inlineResult.send_message.reply_markup) {\r\n      options.replyMarkup = inlineResult.send_message.reply_markup;\r\n    }\r\n\r\n    if(inlineResult.send_message._ === 'botInlineMessageText') {\r\n      this.appMessagesManager.sendText({\r\n        ...options,\r\n        peerId,\r\n        text: inlineResult.send_message.message,\r\n        entities: inlineResult.send_message.entities\r\n      });\r\n    } else {\r\n      let caption = '';\r\n      let inputMedia: Parameters<AppMessagesManager['sendOther']>[0]['inputMedia'], messageMedia: MessageMedia;\r\n      const sendMessage = inlineResult.send_message;\r\n      switch(sendMessage._) {\r\n        case 'botInlineMessageMediaAuto': {\r\n          caption = sendMessage.message;\r\n\r\n          if(inlineResult._ === 'botInlineMediaResult') {\r\n            const {document, photo} = inlineResult;\r\n            if(document) {\r\n              inputMedia = getDocumentMediaInput(document as MyDocument);\r\n            } else {\r\n              inputMedia = getPhotoMediaInput(photo as MyPhoto);\r\n            }\r\n          } else {\r\n            const webDocument = inlineResult.content || inlineResult.thumb;\r\n\r\n            if(webDocument) {\r\n              if(inlineResult.type === 'photo') {\r\n                inputMedia = {\r\n                  _: 'inputMediaPhotoExternal',\r\n                  pFlags: {},\r\n                  url: webDocument.url\r\n                };\r\n              } else {\r\n                inputMedia = {\r\n                  _: 'inputMediaDocumentExternal',\r\n                  pFlags: {},\r\n                  url: webDocument.url\r\n                };\r\n              }\r\n\r\n              options.webDocument = webDocument;\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaGeo': {\r\n          inputMedia = {\r\n            _: 'inputMediaGeoPoint',\r\n            geo_point: this.getGeoInput(sendMessage.geo)\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaVenue': {\r\n          inputMedia = {\r\n            _: 'inputMediaVenue',\r\n            geo_point: this.getGeoInput(sendMessage.geo),\r\n            title: sendMessage.title,\r\n            address: sendMessage.address,\r\n            provider: sendMessage.provider,\r\n            venue_id: sendMessage.venue_id,\r\n            venue_type: sendMessage.venue_type\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaContact': {\r\n          inputMedia = {\r\n            _: 'inputMediaContact',\r\n            phone_number: sendMessage.phone_number,\r\n            first_name: sendMessage.first_name,\r\n            last_name: sendMessage.last_name,\r\n            vcard: sendMessage.vcard\r\n          };\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaInvoice': {\r\n          // const photo = sendMessage.photo;\r\n          // inputMedia = {\r\n          //   _: 'inputMediaInvoice',\r\n          //   description: sendMessage.description,\r\n          //   title: sendMessage.title,\r\n          //   photo: photo && {\r\n          //     _: 'inputWebDocument',\r\n          //     attributes: photo.attributes,\r\n          //     mime_type: photo.mime_type,\r\n          //     size: photo.size,\r\n          //     url: photo.url\r\n          //   },\r\n          //   invoice: undefined,\r\n          //   payload: undefined,\r\n          //   provider: undefined,\r\n          //   provider_data: undefined,\r\n          //   start_param: undefined\r\n          // };\r\n\r\n          messageMedia = {\r\n            _: 'messageMediaInvoice',\r\n            title: sendMessage.title,\r\n            description: sendMessage.description,\r\n            photo: sendMessage.photo,\r\n            currency: sendMessage.currency,\r\n            total_amount: sendMessage.total_amount,\r\n            pFlags: {\r\n              shipping_address_requested: sendMessage.pFlags.shipping_address_requested,\r\n              test: sendMessage.pFlags.test\r\n            },\r\n            start_param: undefined\r\n          };\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      if(!inputMedia && messageMedia) {\r\n        inputMedia = {\r\n          _: 'messageMediaPending',\r\n          messageMedia\r\n        };\r\n      }\r\n\r\n      this.appMessagesManager.sendOther({...options, peerId, inputMedia});\r\n    }\r\n  }\r\n\r\n  /* function checkGeoLocationAccess (botID) {\r\n    var key = 'bot_access_geo' + botID\r\n    return Storage.get(key).then(function (geoAccess) {\r\n      if (geoAccess && geoAccess.granted) {\r\n        return true\r\n      }\r\n      return ErrorService.confirm({\r\n        type: 'BOT_ACCESS_GEO_INLINE'\r\n      }).then(function () {\r\n        var setHash = {}\r\n        setHash[key] = {granted: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return true\r\n      }, function () {\r\n        var setHash = {}\r\n        setHash[key] = {denied: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return $q.reject()\r\n      })\r\n    })\r\n  } */\r\n}\r\n","import {MESSAGE_ID_OFFSET} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function isLegacyMessageId(messageId: number) {\r\n  return typeof(messageId) === 'number' && messageId < MESSAGE_ID_OFFSET;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MESSAGE_ID_OFFSET} from '../mtproto/mtproto_config';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport isLegacyMessageId from './utils/messageId/isLegacyMessageId';\r\n\r\nexport class AppMessagesIdsManager {\r\n  // private channelLocals: {[channelId: ChatId]: number} = {};\r\n  // private channelsByLocals: {[local: number]: ChatId} = {};\r\n  // private channelCurLocal = 0;\r\n\r\n  public generateTempMessageId(messageId: number, channelId: ChatId) {\r\n    return +(this.generateMessageId(messageId, channelId) + 0.0001).toFixed(4);\r\n  }\r\n\r\n  public generateMessageId(messageId: number, channelId?: ChatId) {\r\n    if(\r\n      !channelId ||\r\n      !Number.isInteger(messageId) ||\r\n      messageId <= 0\r\n    ) {\r\n      return messageId;\r\n    }\r\n\r\n    messageId = getServerMessageId(messageId);\r\n    // let localStart = this.channelLocals[channelId];\r\n    const localStart = MESSAGE_ID_OFFSET;\r\n    // if(!localStart) {\r\n    //   localStart = ++this.channelCurLocal * MESSAGE_ID_OFFSET;\r\n    //   this.channelsByLocals[localStart] = channelId;\r\n    //   this.channelLocals[channelId] = localStart;\r\n    // }\r\n\r\n    return localStart + messageId;\r\n  }\r\n\r\n  public incrementMessageId(messageId: number, increment: number) {\r\n    return this.generateMessageId(getServerMessageId(messageId) + increment, isLegacyMessageId(messageId) ? 1 : 0);\r\n  }\r\n\r\n  public getMessageIdInfo(mid: number, channelId?: ChatId) {\r\n    const messageId = getServerMessageId(mid);\r\n    return {messageId, channelId: mid === messageId ? undefined : channelId};\r\n    // if(mid === messageId) {\r\n    //   return {messageId, channelId: undefined as number};\r\n    // }\r\n\r\n    // const channelId = this.channelsByLocals[mid - messageId];\r\n    // return {messageId, channelId};\r\n  }\r\n\r\n  public splitMessageIdsByChannels(mids: number[], _channelId?: ChatId) {\r\n    const out: Array<[ChatId, {mids: number[], messageIds: number[]}]> = [];\r\n    let prevItem: typeof out[0];\r\n    for(let i = 0, length = mids.length; i < length; ++i) {\r\n      const mid = mids[i];\r\n      const {messageId, channelId} = this.getMessageIdInfo(mid, _channelId);\r\n      if(!prevItem || prevItem[0] !== channelId) {\r\n        prevItem = [channelId, {mids: [], messageIds: []}];\r\n        out.push(prevItem);\r\n      }\r\n\r\n      prevItem[1].mids.push(mid);\r\n      prevItem[1].messageIds.push(messageId);\r\n    }\r\n\r\n    return out;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport indexOfAndSplice from '../helpers/array/indexOfAndSplice';\r\nimport {Middleware} from '../helpers/middleware';\r\nimport throttle from '../helpers/schedulers/throttle';\r\nimport {logger, LogTypes} from '../lib/logger';\r\n\r\nconst PARALLEL_LIMIT = 8;\r\nconst IGNORE_ERRORS: Set<ErrorType> = new Set(['NO_ENTRY_FOUND', 'STORAGE_OFFLINE', 'MIDDLEWARE', 'NO_AUTO_DOWNLOAD']);\r\n\r\nexport type LazyLoadElementBase = {\r\n  load: () => Promise<any>,\r\n  middleware?: Middleware\r\n};\r\n\r\nexport default class LazyLoadQueueBase {\r\n  public queueId = 0;\r\n  protected queue: Array<LazyLoadElementBase> = [];\r\n  protected inProcess: Set<LazyLoadElementBase> = new Set();\r\n\r\n  protected lockPromise: Promise<void> = null;\r\n  protected unlockResolve: () => void = null;\r\n\r\n  protected log = logger('LL', LogTypes.Error);\r\n  protected processQueue: () => void;\r\n\r\n  constructor(protected parallelLimit = PARALLEL_LIMIT) {\r\n    this.processQueue = throttle(() => this._processQueue(), 8, false);\r\n  }\r\n\r\n  public clear() {\r\n    this.inProcess.clear(); // ацтеки забьются, будет плохо\r\n\r\n    this.queue.length = 0;\r\n    // unreachable code\r\n    /* for(let item of this.inProcess) {\r\n      this.lazyLoadMedia.push(item);\r\n    } */\r\n  }\r\n\r\n  public lock() {\r\n    if(this.lockPromise) return;\r\n\r\n    // const perf = performance.now();\r\n    this.lockPromise = new Promise((resolve, reject) => {\r\n      this.unlockResolve = resolve;\r\n    });\r\n\r\n    /* if(DEBUG) {\r\n      this.lockPromise.then(() => {\r\n        this.log('was locked for:', performance.now() - perf);\r\n      });\r\n    } */\r\n  }\r\n\r\n  public unlock() {\r\n    if(!this.unlockResolve) return;\r\n\r\n    this.unlockResolve();\r\n    this.unlockResolve = this.lockPromise = null;\r\n\r\n    this.processQueue();\r\n  }\r\n\r\n  protected async processItem(item: LazyLoadElementBase) {\r\n    if(this.lockPromise) {\r\n      return;\r\n    }\r\n\r\n    this.inProcess.add(item);\r\n\r\n    /* if(DEBUG) {\r\n      this.log('will load media', this.lockPromise, item);\r\n    } */\r\n\r\n    try {\r\n      // await new Promise((resolve) => setTimeout(resolve, 2e3));\r\n      // await new Promise((resolve, reject) => window.requestAnimationFrame(() => window.requestAnimationFrame(resolve)));\r\n      // await item.load(item.div);\r\n      await this.loadItem(item);\r\n    } catch(err) {\r\n      if(!IGNORE_ERRORS.has((err as ApiError)?.type)) {\r\n        this.log.error('loadMediaQueue error:', err/* , item */);\r\n      }\r\n    }\r\n\r\n    this.inProcess.delete(item);\r\n\r\n    /* if(DEBUG) {\r\n      this.log('loaded media', item);\r\n    } */\r\n\r\n    this.processQueue();\r\n  }\r\n\r\n  protected loadItem(item: LazyLoadElementBase) {\r\n    return item.load();\r\n  }\r\n\r\n  protected getItem() {\r\n    return this.queue.shift();\r\n  }\r\n\r\n  protected addElement(method: 'push' | 'unshift', el: LazyLoadElementBase) {\r\n    this.queue[method](el);\r\n    this.processQueue();\r\n  }\r\n\r\n  protected _processQueue(item?: LazyLoadElementBase) {\r\n    if(!this.queue.length || this.lockPromise || (this.parallelLimit > 0 && this.inProcess.size >= this.parallelLimit)) return;\r\n\r\n    // console.log('_processQueue start');\r\n    // let added = 0;\r\n    do {\r\n      if(item) {\r\n        indexOfAndSplice(this.queue, item);\r\n      } else {\r\n        item = this.getItem();\r\n      }\r\n\r\n      if(item) {\r\n        this.processItem(item);\r\n      } else {\r\n        break;\r\n      }\r\n\r\n      item = null;\r\n      // ++added;\r\n    } while(this.inProcess.size < this.parallelLimit && this.queue.length);\r\n    // console.log('_processQueue end, added', added, this.queue.length);\r\n  }\r\n\r\n  public push(el: LazyLoadElementBase) {\r\n    this.addElement('push', el);\r\n  }\r\n\r\n  public unshift(el: LazyLoadElementBase) {\r\n    this.addElement('unshift', el);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport indexOfAndSplice from './array/indexOfAndSplice';\r\nimport makeError from './makeError';\r\n\r\nexport type Middleware = {\r\n  (): boolean;\r\n  create(): MiddlewareHelper;\r\n  onClean: (callback: VoidFunction) => void;\r\n  onDestroy: (callback: VoidFunction) => void;\r\n};\r\n\r\nconst createDetails = (): {\r\n  cleaned?: boolean,\r\n  inner: MiddlewareHelper[],\r\n  onCleanCallbacks: VoidFunction[],\r\n  middleware?: Middleware\r\n} => ({\r\n  cleaned: false,\r\n  inner: [],\r\n  onCleanCallbacks: []\r\n});\r\n\r\nconst MIDDLEWARE_ERROR = makeError('MIDDLEWARE');\r\n\r\n// * onClean == cancel promises, etc\r\n// * onDestroy == destructor\r\nexport class MiddlewareHelper {\r\n  private details = createDetails();\r\n  private onDestroyCallbacks: VoidFunction[] = [];\r\n  private parent: MiddlewareHelper;\r\n  private destroyed: boolean;\r\n\r\n  public clean() {\r\n    const details = this.details;\r\n    details.cleaned = true;\r\n    details.inner.splice(0, details.inner.length).forEach((helper) => helper.destroy());\r\n    details.onCleanCallbacks.splice(0, details.onCleanCallbacks.length).forEach((callback) => callback());\r\n    details.middleware = undefined;\r\n    this.details = createDetails();\r\n  }\r\n\r\n  public destroy() {\r\n    this.destroyed = true;\r\n    this.clean();\r\n    this.onDestroyCallbacks.splice(0, this.onDestroyCallbacks.length).forEach((callback) => callback());\r\n\r\n    if(this.parent) {\r\n      indexOfAndSplice(this.parent.details.inner, this);\r\n      this.parent = undefined;\r\n    }\r\n  }\r\n\r\n  private createMiddlewareForDetails(details: ReturnType<typeof createDetails>, additionalCallback?: () => boolean) {\r\n    const middleware: Middleware = () => {\r\n      return !details.cleaned && (!additionalCallback || additionalCallback());\r\n    };\r\n\r\n    middleware.create = () => {\r\n      if(!middleware()) throw MIDDLEWARE_ERROR;\r\n      const helper = getMiddleware();\r\n      helper.parent = this;\r\n      details.inner.push(helper);\r\n      return helper;\r\n    };\r\n\r\n    middleware.onClean = (callback) => {\r\n      if(!middleware()) return callback();\r\n      details.onCleanCallbacks.push(callback);\r\n    };\r\n\r\n    middleware.onDestroy = this.onDestroy;\r\n\r\n    return middleware;\r\n  }\r\n\r\n  public get(additionalCallback?: () => boolean) {\r\n    const details = this.details;\r\n    if(details.cleaned) {\r\n      return this.createMiddlewareForDetails(details);\r\n    }\r\n\r\n    if(additionalCallback) {\r\n      return this.createMiddlewareForDetails(details, additionalCallback);\r\n    }\r\n\r\n    return details.middleware ??= this.createMiddlewareForDetails(details);\r\n  }\r\n\r\n  public onDestroy = (callback: VoidFunction) => {\r\n    if(this.destroyed) return callback();\r\n    this.onDestroyCallbacks.push(callback);\r\n  };\r\n}\r\n\r\n// * will change .cleaned and new instance will be created\r\nexport function getMiddleware() {\r\n  return new MiddlewareHelper();\r\n}\r\n","export default function getObjectKeysAndSort(object: {[key: string]: any} | Map<number, any>, sort: 'asc' | 'desc' = 'asc') {\r\n  if(!object) return [];\r\n  const ids = object instanceof Map ? [...object.keys()] : Object.keys(object).map((i) => +i);\r\n  if(sort === 'asc') return ids.sort((a, b) => a - b);\r\n  else return ids.sort((a, b) => b - a);\r\n}\r\n","export default function splitStringByLength(str: string, maxLength: number) {\r\n  if(str.length < maxLength) return [str];\r\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\r\n  const delimiter = ' ';// '\\n';\r\n  const out: string[] = [];\r\n\r\n  const cut = (end?: number) => {\r\n    let part = str.slice(lastSliceStartIndex, end);\r\n    const _arrayIndex = arrayIndex++;\r\n    if(part.length > maxLength) {\r\n      const overflowPart = part.slice(maxLength);\r\n      const splitted = splitStringByLength(overflowPart, maxLength);\r\n      splitted.forEach((part) => {\r\n        out[arrayIndex++] = part;\r\n      });\r\n\r\n      part = part.slice(0, maxLength);\r\n    }\r\n\r\n    lastSliceStartIndex = end;\r\n    length = 0;\r\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\r\n  };\r\n\r\n  let lastIndex = 0;\r\n  do {\r\n    let index = str.indexOf(delimiter, lastIndex);\r\n    if(index === -1) {\r\n      if(lastIndex !== (str.length - 1)) {\r\n        cut();\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    index += delimiter.length;\r\n\r\n    const partLength = index - lastIndex;\r\n    if((length + partLength) > maxLength) {\r\n      cut(length);\r\n    }\r\n\r\n    lastIndex = index;\r\n    length += partLength;\r\n  } while(true);\r\n\r\n  return out;\r\n}\r\n","// * Jolly Cobra's schedulers\r\n\r\nimport ctx from '../../environment/ctx';\r\nimport {AnyFunction, Awaited} from '../../types';\r\nimport noop from '../noop';\r\n\r\nexport type DebounceReturnType<F extends AnyFunction> = {\r\n  (...args: Parameters<F>): Promise<Awaited<ReturnType<F>>>;\r\n  clearTimeout(): void;\r\n  isDebounced(): boolean;\r\n};\r\n\r\nexport default function debounce<F extends AnyFunction>(\r\n  fn: F,\r\n  ms: number,\r\n  shouldRunFirst = true,\r\n  shouldRunLast = true\r\n): DebounceReturnType<F> {\r\n  let waitingTimeout: number;\r\n  let waitingPromise: Promise<Awaited<ReturnType<F>>>, resolve: (result: any) => void, reject: () => void;\r\n  let hadNewCall = false;\r\n\r\n  const invoke = (args: Parameters<F>) => {\r\n    const _resolve = resolve, _reject = reject;\r\n    try {\r\n      const result = fn.apply(null, args);\r\n      _resolve(result);\r\n    } catch(err) {\r\n      console.error('debounce error', err);\r\n      // @ts-ignore\r\n      _reject(err);\r\n    }\r\n  };\r\n\r\n  const debounce = (...args: Parameters<F>) => {\r\n    if(!waitingPromise) waitingPromise = new Promise((_resolve, _reject) => (resolve = _resolve, reject = _reject));\r\n\r\n    if(waitingTimeout) {\r\n      clearTimeout(waitingTimeout);\r\n      hadNewCall = true;\r\n      reject();\r\n      waitingPromise = new Promise((_resolve, _reject) => (resolve = _resolve, reject = _reject));\r\n    } else if(shouldRunFirst) {\r\n      invoke(args);\r\n      hadNewCall = false;\r\n    }\r\n\r\n    const _waitingTimeout = ctx.setTimeout(() => {\r\n      // will run if should run last or first but with new call\r\n      if(shouldRunLast && (!shouldRunFirst || hadNewCall)) {\r\n        invoke(args);\r\n      }\r\n\r\n      // if debounce was called during invoking\r\n      if(waitingTimeout === _waitingTimeout) {\r\n        waitingTimeout = waitingPromise = resolve = reject = undefined;\r\n        hadNewCall = false;\r\n      }\r\n    }, ms);\r\n\r\n    waitingTimeout = _waitingTimeout;\r\n    waitingPromise.catch(noop);\r\n    return waitingPromise;\r\n  };\r\n\r\n  debounce.clearTimeout = () => {\r\n    if(waitingTimeout) {\r\n      ctx.clearTimeout(waitingTimeout);\r\n      reject();\r\n      waitingTimeout = waitingPromise = resolve = reject = undefined;\r\n      hadNewCall = false;\r\n    }\r\n  };\r\n\r\n  debounce.isDebounced = () => !!waitingTimeout;\r\n\r\n  return debounce;\r\n}\r\n","import {URL_REG_EXP} from '.';\r\n\r\nexport default function matchUrl(text: string) {\r\n  return !text ? null : text.match(URL_REG_EXP);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Message, MessageMedia, MessageEntity, MessageAction} from '../../../../layer';\r\nimport matchUrl from '../../../richTextProcessor/matchUrl';\r\nimport type {MyDocument} from '../../appDocsManager';\r\nimport type {MyInputMessagesFilter, MyMessage} from '../../appMessagesManager';\r\n\r\nexport default function filterMessagesByInputFilter(\r\n  inputFilter: MyInputMessagesFilter,\r\n  history: Array<Message.message | Message.messageService>,\r\n  limit: number\r\n) {\r\n  if(inputFilter === 'inputMessagesFilterEmpty') {\r\n    return history;\r\n  }\r\n\r\n  const foundMsgs: MyMessage[] = [];\r\n  if(!history.length) {\r\n    return foundMsgs;\r\n  }\r\n\r\n  let filtering = true;\r\n  const neededContents: Partial<{\r\n    [messageMediaType in MessageMedia['_']]: boolean\r\n  }> & Partial<{\r\n    avatar: boolean,\r\n    url: boolean\r\n  }> = {},\r\n    neededDocTypes: MyDocument['type'][] = [],\r\n    excludeDocTypes: MyDocument['type'][] = []/* ,\r\n    neededFlags: string[] = [] */;\r\n\r\n  switch(inputFilter) {\r\n    case 'inputMessagesFilterPhotos':\r\n      neededContents['messageMediaPhoto'] = true;\r\n      break;\r\n\r\n    case 'inputMessagesFilterPhotoVideo':\r\n      neededContents['messageMediaPhoto'] = true;\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('video');\r\n      break;\r\n\r\n    case 'inputMessagesFilterVideo':\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('video');\r\n      break;\r\n\r\n    case 'inputMessagesFilterDocument':\r\n      neededContents['messageMediaDocument'] = true;\r\n      // excludeDocTypes.push('video');\r\n      neededDocTypes.push(undefined, 'photo', 'pdf');\r\n      break;\r\n\r\n    case 'inputMessagesFilterVoice':\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('voice');\r\n      break;\r\n\r\n    case 'inputMessagesFilterRoundVoice':\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('round', 'voice');\r\n      break;\r\n\r\n    case 'inputMessagesFilterRoundVideo':\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('round');\r\n      break;\r\n\r\n    case 'inputMessagesFilterMusic':\r\n      neededContents['messageMediaDocument'] = true;\r\n      neededDocTypes.push('audio');\r\n      break;\r\n\r\n    case 'inputMessagesFilterUrl':\r\n      neededContents['url'] = true;\r\n      break;\r\n\r\n    case 'inputMessagesFilterChatPhotos':\r\n      neededContents['avatar'] = true;\r\n      break;\r\n\r\n      /* case 'inputMessagesFilterPinned':\r\n      neededFlags.push('pinned');\r\n      break; */\r\n\r\n      /* case 'inputMessagesFilterMyMentions':\r\n      neededContents['mentioned'] = true;\r\n      break; */\r\n\r\n    default:\r\n      filtering = false;\r\n      break;\r\n      /* return Promise.resolve({\r\n        count: 0,\r\n        next_rate: 0,\r\n        history: [] as number[]\r\n      }); */\r\n  }\r\n\r\n  if(!filtering) {\r\n    return foundMsgs;\r\n  }\r\n\r\n  for(let i = 0, length = history.length; i < length; ++i) {\r\n    const message: Message.message | Message.messageService = history[i];\r\n    if(!message) continue;\r\n\r\n    // || (neededContents['mentioned'] && message.totalEntities.find((e: any) => e._ === 'messageEntityMention'));\r\n\r\n    let found = false;\r\n    if(message._ === 'message') {\r\n      if(message.media && neededContents[message.media._]/*  && !message.fwd_from */) {\r\n        const doc = (message.media as MessageMedia.messageMediaDocument).document as MyDocument;\r\n        if(doc &&\r\n          (\r\n            (neededDocTypes.length && !neededDocTypes.includes(doc.type)) ||\r\n            excludeDocTypes.includes(doc.type)\r\n          )\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        found = true;\r\n      } else if(neededContents['url'] && message.message) {\r\n        const goodEntities = ['messageEntityTextUrl', 'messageEntityUrl'];\r\n        if((message.totalEntities as MessageEntity[]).find((e) => goodEntities.includes(e._)) || matchUrl(message.message)) {\r\n          found = true;\r\n        }\r\n      }\r\n    } else if(neededContents['avatar'] &&\r\n      message.action &&\r\n      ([\r\n        'messageActionChannelEditPhoto' as const,\r\n        'messageActionChatEditPhoto' as const,\r\n        'messageActionChannelEditVideo' as const,\r\n        'messageActionChatEditVideo' as const\r\n      ] as MessageAction['_'][]).includes(message.action._)) {\r\n      found = true;\r\n    }/*  else if(neededFlags.find((flag) => message.pFlags[flag])) {\r\n      found = true;\r\n    } */\r\n\r\n    if(found) {\r\n      foundMsgs.push(message);\r\n      if(foundMsgs.length >= limit) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return foundMsgs;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport tabId from '../config/tabId';\r\n\r\nlet uploadId = 0;\r\nexport default function getFileNameForUpload(file: File | Blob) {\r\n  let fileName: string;\r\n  const mimeType = file?.type;\r\n  if(mimeType) { // the same like apiFileName in appMessagesManager for upload!\r\n    const ext = `${tabId}_${uploadId++}.${mimeType.split('/')[1]}`;\r\n\r\n    if(['image/jpeg', 'image/png', 'image/bmp'].indexOf(mimeType) >= 0) {\r\n      fileName = 'photo' + ext;\r\n    } else if(mimeType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(mimeType) >= 0) {\r\n      fileName = 'audio' + ext;\r\n    } else if(mimeType.indexOf('video/') === 0) {\r\n      fileName = 'video' + ext;\r\n    } else {\r\n      fileName = 'document' + ext;\r\n    }\r\n  } else {\r\n    fileName = `upload-${tabId}_${uploadId++}`;\r\n  }\r\n\r\n  return fileName;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {TabState} from '../mtproto/mtprotoworker';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\n\r\ntype Tab = {\r\n  source: MessageEventSource,\r\n  state: TabState\r\n};\r\n\r\nexport class AppTabsManager {\r\n  private tabs: Map<Tab['source'], Tab>;\r\n\r\n  constructor() {\r\n    this.tabs = new Map();\r\n  }\r\n\r\n  public start() {\r\n    const port = MTProtoMessagePort.getInstance<false>();\r\n\r\n    port.addEventListener('tabState', (state, source) => {\r\n      const tab = this.tabs.get(source);\r\n      tab.state = state;\r\n    });\r\n  }\r\n\r\n  public getTabs() {\r\n    return [...this.tabs.values()].filter((tab) => !!tab.state);\r\n  }\r\n\r\n  public addTab(source: MessageEventSource) {\r\n    const tab: Tab = {\r\n      source,\r\n      state: undefined\r\n    };\r\n\r\n    this.tabs.set(source, tab);\r\n  }\r\n\r\n  public deleteTab(source: MessageEventSource) {\r\n    this.tabs.delete(source);\r\n  }\r\n}\r\n\r\nconst appTabsManager = new AppTabsManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appTabsManager = appTabsManager);\r\nexport default appTabsManager;\r\n","import assumeType from '../../../../helpers/assumeType';\r\nimport {Message} from '../../../../layer';\r\n\r\nexport default function getAlbumText(messages: Message.message[]) {\r\n  let foundMessages = 0, message: Message.message;\r\n  for(const m of messages) {\r\n    assumeType<Message.message>(m);\r\n    if(m.message) {\r\n      if(++foundMessages > 1) break;\r\n      message = m;\r\n    }\r\n  }\r\n\r\n  if(foundMessages > 1) {\r\n    message = undefined;\r\n  }\r\n\r\n  return message;\r\n}\r\n","import {MyDocument} from '../../appDocsManager';\r\nimport {VideoSize} from '../../../../layer';\r\n\r\nexport default function getStickerEffectThumb(doc: MyDocument) {\r\n  return doc.video_thumbs?.[0] as Extract<VideoSize, VideoSize.videoSize>;\r\n}\r\n","import {InputDocument} from '../../../../layer';\r\nimport type {MyDocument} from '../../appDocsManager';\r\n\r\nexport default function getDocumentInput(doc: MyDocument): InputDocument {\r\n  return {\r\n    _: 'inputDocument',\r\n    id: doc.id,\r\n    access_hash: doc.access_hash,\r\n    file_reference: doc.file_reference\r\n  };\r\n}\r\n","import {AvailableReaction, Reaction} from '../../../../layer';\r\n\r\nexport default function availableReactionToReaction(availableReaction: AvailableReaction): Reaction.reactionEmoji {\r\n  return {\r\n    _: 'reactionEmoji',\r\n    emoticon: availableReaction.reaction\r\n  };\r\n}\r\n","import deepEqual from '../../../../helpers/object/deepEqual';\r\nimport {AvailableReaction, Reaction} from '../../../../layer';\r\nimport availableReactionToReaction from './availableReactionToReaction';\r\n\r\nexport default function reactionsEqual(r1: Reaction | AvailableReaction, r2: Reaction | AvailableReaction) {\r\n  if(typeof(r1) !== typeof(r2)) {\r\n    return false;\r\n  }\r\n\r\n  [r1, r2] = [r1, r2].map((r) => {\r\n    return r._ === 'availableReaction' ? availableReactionToReaction(r) : r;\r\n  });\r\n\r\n  return deepEqual(r1, r2);\r\n}\r\n","export default function setBooleanFlag<T extends any>(obj: T, key: keyof T, value: boolean) {\r\n  // @ts-ignore\r\n  if(value) obj[key] = true;\r\n  else delete obj[key];\r\n}\r\n","import {Message} from '../../../../layer';\r\nimport {GENERAL_TOPIC_ID} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function getMessageThreadId(message: Message.message | Message.messageService, isForum?: boolean) {\r\n  let threadId: number;\r\n  const replyTo = message.reply_to;\r\n  if(replyTo?._ === 'messageReplyHeader' && (!isForum || replyTo.pFlags.forum_topic)) {\r\n    threadId = replyTo.reply_to_top_id || replyTo.reply_to_msg_id;\r\n  } else if(isForum) {\r\n    if(message._ === 'messageService' && message.action?._ === 'messageActionTopicCreate') {\r\n      threadId = message.mid;\r\n    } else {\r\n      threadId = GENERAL_TOPIC_ID;\r\n    }\r\n  }\r\n\r\n  return threadId;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n// From https://github.com/stephenmathieson/node-tlds/blob/master/index.js\r\nconst TLD = ['abogado', 'ac', 'academy', 'accountants', 'active', 'actor', 'ad', 'adult', 'ae', 'aero', 'af', 'ag', 'agency', 'ai', 'airforce', 'al', 'allfinanz', 'alsace', 'am', 'amsterdam', 'an', 'android', 'ao', 'apartments', 'aq', 'aquarelle', 'ar', 'archi', 'army', 'arpa', 'as', 'asia', 'associates', 'at', 'attorney', 'au', 'auction', 'audio', 'autos', 'aw', 'ax', 'axa', 'az', 'ba', 'band', 'bank', 'bar', 'barclaycard', 'barclays', 'bargains', 'bayern', 'bb', 'bd', 'be', 'beer', 'berlin', 'best', 'bf', 'bg', 'bh', 'bi', 'bid', 'bike', 'bingo', 'bio', 'biz', 'bj', 'black', 'blackfriday', 'bloomberg', 'blue', 'bm', 'bmw', 'bn', 'bnpparibas', 'bo', 'boo', 'boutique', 'br', 'brussels', 'bs', 'bt', 'budapest', 'build', 'builders', 'business', 'buzz', 'bv', 'bw', 'by', 'bz', 'bzh', 'ca', 'cab', 'cal', 'camera', 'camp', 'cancerresearch', 'canon', 'capetown', 'capital', 'caravan', 'cards', 'care', 'career', 'careers', 'cartier', 'casa', 'cash', 'cat', 'catering', 'cc', 'cd', 'center', 'ceo', 'cern', 'cf', 'cg', 'ch', 'channel', 'chat', 'cheap', 'christmas', 'chrome', 'church', 'ci', 'citic', 'city', 'ck', 'cl', 'claims', 'cleaning', 'click', 'clinic', 'clothing', 'club', 'cm', 'cn', 'co', 'coach', 'codes', 'coffee', 'college', 'cologne', 'com', 'community', 'company', 'computer', 'condos', 'construction', 'consulting', 'contractors', 'cooking', 'cool', 'coop', 'country', 'cr', 'credit', 'creditcard', 'cricket', 'crs', 'cruises', 'cu', 'cuisinella', 'cv', 'cw', 'cx', 'cy', 'cymru', 'cz', 'dabur', 'dad', 'dance', 'dating', 'day', 'dclk', 'de', 'deals', 'degree', 'delivery', 'democrat', 'dental', 'dentist', 'desi', 'design', 'dev', 'diamonds', 'diet', 'digital', 'direct', 'directory', 'discount', 'dj', 'dk', 'dm', 'dnp', 'do', 'docs', 'domains', 'doosan', 'durban', 'dvag', 'dz', 'eat', 'ec', 'edu', 'education', 'ee', 'eg', 'email', 'emerck', 'energy', 'engineer', 'engineering', 'enterprises', 'equipment', 'er', 'es', 'esq', 'estate', 'et', 'eu', 'eurovision', 'eus', 'events', 'everbank', 'exchange', 'expert', 'exposed', 'fail', 'farm', 'fashion', 'feedback', 'fi', 'finance', 'financial', 'firmdale', 'fish', 'fishing', 'fit', 'fitness', 'fj', 'fk', 'flights', 'florist', 'flowers', 'flsmidth', 'fly', 'fm', 'fo', 'foo', 'forsale', 'foundation', 'fr', 'frl', 'frogans', 'fund', 'furniture', 'futbol', 'ga', 'gal', 'gallery', 'garden', 'gb', 'gbiz', 'gd', 'ge', 'gent', 'gf', 'gg', 'ggee', 'gh', 'gi', 'gift', 'gifts', 'gives', 'gl', 'glass', 'gle', 'global', 'globo', 'gm', 'gmail', 'gmo', 'gmx', 'gn', 'goog', 'google', 'gop', 'gov', 'gp', 'gq', 'gr', 'graphics', 'gratis', 'green', 'gripe', 'gs', 'gt', 'gu', 'guide', 'guitars', 'guru', 'gw', 'gy', 'hamburg', 'hangout', 'haus', 'healthcare', 'help', 'here', 'hermes', 'hiphop', 'hiv', 'hk', 'hm', 'hn', 'holdings', 'holiday', 'homes', 'horse', 'host', 'hosting', 'house', 'how', 'hr', 'ht', 'hu', 'ibm', 'id', 'ie', 'ifm', 'il', 'im', 'immo', 'immobilien', 'in', 'industries', 'info', 'ing', 'ink', 'institute', 'insure', 'int', 'international', 'investments', 'io', 'iq', 'ir', 'irish', 'is', 'it', 'iwc', 'jcb', 'je', 'jetzt', 'jm', 'jo', 'jobs', 'joburg', 'jp', 'juegos', 'kaufen', 'kddi', 'ke', 'kg', 'kh', 'ki', 'kim', 'kitchen', 'kiwi', 'km', 'kn', 'koeln', 'kp', 'kr', 'krd', 'kred', 'kw', 'ky', 'kyoto', 'kz', 'la', 'lacaixa', 'land', 'lat', 'latrobe', 'lawyer', 'lb', 'lc', 'lds', 'lease', 'legal', 'lgbt', 'li', 'lidl', 'life', 'lighting', 'limited', 'limo', 'link', 'lk', 'loans', 'london', 'lotte', 'lotto', 'lr', 'ls', 'lt', 'ltda', 'lu', 'luxe', 'luxury', 'lv', 'ly', 'ma', 'madrid', 'maison', 'management', 'mango', 'market', 'marketing', 'marriott', 'mc', 'md', 'me', 'media', 'meet', 'melbourne', 'meme', 'memorial', 'menu', 'mg', 'mh', 'miami', 'mil', 'mini', 'mk', 'ml', 'mm', 'mn', 'mo', 'mobi', 'moda', 'moe', 'monash', 'money', 'mormon', 'mortgage', 'moscow', 'motorcycles', 'mov', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'museum', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nagoya', 'name', 'navy', 'nc', 'ne', 'net', 'network', 'neustar', 'new', 'nexus', 'nf', 'ng', 'ngo', 'nhk', 'ni', 'nico', 'ninja', 'nl', 'no', 'np', 'nr', 'nra', 'nrw', 'ntt', 'nu', 'nyc', 'nz', 'okinawa', 'om', 'one', 'ong', 'onl', 'ooo', 'org', 'organic', 'osaka', 'otsuka', 'ovh', 'pa', 'paris', 'partners', 'parts', 'party', 'pe', 'pf', 'pg', 'ph', 'pharmacy', 'photo', 'photography', 'photos', 'physio', 'pics', 'pictures', 'pink', 'pizza', 'pk', 'pl', 'place', 'plumbing', 'pm', 'pn', 'pohl', 'poker', 'porn', 'post', 'pr', 'praxi', 'press', 'pro', 'prod', 'productions', 'prof', 'properties', 'property', 'ps', 'pt', 'pub', 'pw', 'py', 'qa', 'qpon', 'quebec', 're', 'realtor', 'recipes', 'red', 'rehab', 'reise', 'reisen', 'reit', 'ren', 'rentals', 'repair', 'report', 'republican', 'rest', 'restaurant', 'reviews', 'rich', 'rio', 'rip', 'ro', 'rocks', 'rodeo', 'rs', 'rsvp', 'ru', 'ruhr', 'rw', 'ryukyu', 'sa', 'saarland', 'sale', 'samsung', 'sarl', 'saxo', 'sb', 'sc', 'sca', 'scb', 'schmidt', 'schule', 'schwarz', 'science', 'scot', 'sd', 'se', 'services', 'sew', 'sexy', 'sg', 'sh', 'shiksha', 'shoes', 'shriram', 'si', 'singles', 'sj', 'sk', 'sky', 'sl', 'sm', 'sn', 'so', 'social', 'software', 'sohu', 'solar', 'solutions', 'soy', 'space', 'spiegel', 'sr', 'st', 'style', 'su', 'supplies', 'supply', 'support', 'surf', 'surgery', 'suzuki', 'sv', 'sx', 'sy', 'sydney', 'systems', 'sz', 'taipei', 'tatar', 'tattoo', 'tax', 'tc', 'td', 'technology', 'tel', 'temasek', 'tennis', 'tf', 'tg', 'th', 'tienda', 'tips', 'tires', 'tirol', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'today', 'tokyo', 'tools', 'top', 'toshiba', 'town', 'toys', 'tp', 'tr', 'trade', 'training', 'travel', 'trust', 'tt', 'tui', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'university', 'uno', 'uol', 'us', 'uy', 'uz', 'va', 'vacations', 'vc', 've', 'vegas', 'ventures', 'versicherung', 'vet', 'vg', 'vi', 'viajes', 'video', 'villas', 'vision', 'vlaanderen', 'vn', 'vodka', 'vote', 'voting', 'voto', 'voyage', 'vu', 'wales', 'wang', 'watch', 'webcam', 'website', 'wed', 'wedding', 'wf', 'whoswho', 'wien', 'wiki', 'williamhill', 'wme', 'work', 'works', 'world', 'ws', 'wtc', 'wtf', '佛山', '集团', '在线', '한국', 'ভারত', '八卦', 'موقع', '公益', '公司', '移动', '我爱你', 'москва', 'қаз', 'онлайн', 'сайт', 'срб', '淡马锡', 'орг', '삼성', 'சிங்கப்பூர்', '商标', '商店', '商城', 'дети', 'мкд', '中文网', '中信', '中国', '中國', '谷歌', 'భారత్', 'ලංකා', 'ભારત', 'भारत', '网店', 'संगठन', '网络', 'укр', '香港', '台湾', '台灣', '手机', 'мон', 'الجزائر', 'عمان', 'ایران', 'امارات', 'بازار', 'الاردن', 'بھارت', 'المغرب', 'السعودية', 'مليسيا', 'شبكة', 'გე', '机构', '组织机构', 'ไทย', 'سورية', 'рус', 'рф', 'تونس', 'みんな', 'グーグル', '世界', 'ਭਾਰਤ', '网址', '游戏', 'vermögensberater', 'vermögensberatung', '企业', 'مصر', 'قطر', '广东', 'இலங்கை', 'இந்தியா', '新加坡', 'فلسطين', '政务', 'xxx', 'xyz', 'yachts', 'yandex', 'ye', 'yoga', 'yokohama', 'youtube', 'yt', 'za', 'zip', 'zm', 'zone', 'zuerich', 'zw'];\r\n\r\nexport default TLD;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function checkBrackets(url: string) {\r\n  var urlLength = url.length;\r\n  var urlOpenBrackets = url.split('(').length - 1;\r\n  var urlCloseBrackets = url.split(')').length - 1;\r\n  while(urlCloseBrackets > urlOpenBrackets &&\r\n    url.charAt(urlLength - 1) === ')') {\r\n    url = url.substr(0, urlLength - 1)\r\n    urlCloseBrackets--;\r\n    urlLength--;\r\n  }\r\n  if(urlOpenBrackets > urlCloseBrackets) {\r\n    url = url.replace(/\\)+$/, '');\r\n  }\r\n  return url;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {EMOJI_VERSION} from '../environment/emojiVersionsSupport';\r\n\r\nexport const EmojiVersions: {[version in EMOJI_VERSION]: {[emoji: string]: number}} = {'14':{'1f6dd':4867, '1f6de':4916, '1f6df':4923, '1f7f0':62832, '1f979':183, '1f9cc':1557, '1fa7b':61332, '1fa7c':61330, '1faa9':51093, '1faaa':61364, '1faab':61189, '1faac':51085, '1fab7':2651, '1fab8':2631, '1fab9':2672, '1faba':2673, '1fac3':1520, '1fac4':1521, '1fac5':1505, '1fad7':3793, '1fad8':3707, '1fad9':3804, '1fae0':111, '1fae1':136, '1fae2':132, '1fae3':133, '1fae4':174, '1fae5':142, '1fae6':1385, '1fae7':61353, '1faf0':1341, '1faf1':1332, '1faf2':1333, '1faf3':1334, '1faf4':1335, '1faf5':1351, '1faf6':1360, '1faf1-1f3fb-200d-1faf2-1f3fc':0, '1faf1-1f3fb-200d-1faf2-1f3fd':0, '1faf1-1f3fb-200d-1faf2-1f3fe':0, '1faf1-1f3fb-200d-1faf2-1f3ff':0, '1faf1-1f3fc-200d-1faf2-1f3fb':0, '1faf1-1f3fc-200d-1faf2-1f3fd':0, '1faf1-1f3fc-200d-1faf2-1f3fe':0, '1faf1-1f3fc-200d-1faf2-1f3ff':0, '1faf1-1f3fd-200d-1faf2-1f3fb':0, '1faf1-1f3fd-200d-1faf2-1f3fc':0, '1faf1-1f3fd-200d-1faf2-1f3fe':0, '1faf1-1f3fd-200d-1faf2-1f3ff':0, '1faf1-1f3fe-200d-1faf2-1f3fb':0, '1faf1-1f3fe-200d-1faf2-1f3fc':0, '1faf1-1f3fe-200d-1faf2-1f3fd':0, '1faf1-1f3fe-200d-1faf2-1f3ff':0, '1faf1-1f3ff-200d-1faf2-1f3fb':0, '1faf1-1f3ff-200d-1faf2-1f3fc':0, '1faf1-1f3ff-200d-1faf2-1f3fd':0, '1faf1-1f3ff-200d-1faf2-1f3fe':0, '1fac3-1f3fb':0, '1fac3-1f3fc':0, '1fac3-1f3fd':0, '1fac3-1f3fe':0, '1fac3-1f3ff':0, '1fac4-1f3fb':0, '1fac4-1f3fc':0, '1fac4-1f3fd':0, '1fac4-1f3fe':0, '1fac4-1f3ff':0, '1fac5-1f3fb':0, '1fac5-1f3fc':0, '1fac5-1f3fd':0, '1fac5-1f3fe':0, '1fac5-1f3ff':0, '1faf0-1f3fb':0, '1faf0-1f3fc':0, '1faf0-1f3fd':0, '1faf0-1f3fe':0, '1faf0-1f3ff':0, '1faf1-1f3fb':0, '1faf1-1f3fc':0, '1faf1-1f3fd':0, '1faf1-1f3fe':0, '1faf1-1f3ff':0, '1faf2-1f3fb':0, '1faf2-1f3fc':0, '1faf2-1f3fd':0, '1faf2-1f3fe':0, '1faf2-1f3ff':0, '1faf3-1f3fb':0, '1faf3-1f3fc':0, '1faf3-1f3fd':0, '1faf3-1f3fe':0, '1faf3-1f3ff':0, '1faf4-1f3fb':0, '1faf4-1f3fc':0, '1faf4-1f3fd':0, '1faf4-1f3fe':0, '1faf4-1f3ff':0, '1faf5-1f3fb':0, '1faf5-1f3fc':0, '1faf5-1f3fd':0, '1faf5-1f3fe':0, '1faf5-1f3ff':0, '1faf6-1f3fb':0, '1faf6-1f3fc':0, '1faf6-1f3fd':0, '1faf6-1f3fe':0, '1faf6-1f3ff':0}, '':{'2049':62835, '2122':62863, '2139':62888, '2194':62764, '2195':62763, '2196':62762, '2197':62756, '2198':62758, '2199':62760, '2328':61194, '2600':4990, '2601':4998, '2602':41013, '2603':41018, '2604':41020, '2611':62851, '2614':41014, '2615':3781, '2618':2667, '2620':1106, '2622':62753, '2623':62754, '2626':62783, '2638':62780, '2639':177, '2648':62788, '2649':62789, '2650':62796, '2651':62797, '2652':62798, '2653':62799, '2660':51095, '2663':51098, '2665':51096, '2666':51097, '2668':4865, '2692':61297, '2693':4922, '2694':61300, '2696':61311, '2697':61319, '2699':61309, '2702':61284, '2705':62850, '2708':4931, '2709':61245, '2712':61259, '2714':62852, '2716':62828, '2721':62779, '2728':51029, '2733':62858, '2734':62859, '2744':41017, '2747':62860, '2753':62836, '2754':62837, '2755':62838, '2757':62839, '2763':1137, '2764':1141, '2795':62829, '2796':62830, '2797':62831, '2934':62767, '2935':62768, '3030':62840, '3297':62912, '3299':62913, '0023-20e3':62864, '002a-20e3':62865, '0030-20e3':62866, '0031-20e3':62867, '0032-20e3':62868, '0033-20e3':62869, '0034-20e3':62870, '0035-20e3':62871, '0036-20e3':62872, '0037-20e3':62873, '0038-20e3':62874, '0039-20e3':62875, '00a9':62861, '00ae':62862, '1f004':51101, '1f0cf':51100, '1f170':62882, '1f171':62884, '1f17e':62893, '1f17f':62895, '1f18e':62883, '1f191':62885, '1f192':62886, '1f193':62887, '1f194':62889, '1f195':62891, '1f196':62892, '1f197':62894, '1f198':62896, '1f199':62897, '1f19a':62898, '1f1e6-1f1e8':71594, '1f1e6-1f1e9':71595, '1f1e6-1f1ea':71596, '1f1e6-1f1eb':71597, '1f1e6-1f1ec':71598, '1f1e6-1f1ee':71599, '1f1e6-1f1f1':71600, '1f1e6-1f1f2':71601, '1f1e6-1f1f4':71602, '1f1e6-1f1f6':71603, '1f1e6-1f1f7':71604, '1f1e6-1f1f8':71605, '1f1e6-1f1f9':71606, '1f1e6-1f1fa':71607, '1f1e6-1f1fc':71608, '1f1e6-1f1fd':71609, '1f1e6-1f1ff':71610, '1f1e7-1f1e6':71611, '1f1e7-1f1e7':71612, '1f1e7-1f1e9':71613, '1f1e7-1f1ea':71614, '1f1e7-1f1eb':71615, '1f1e7-1f1ec':71616, '1f1e7-1f1ed':71617, '1f1e7-1f1ee':71618, '1f1e7-1f1ef':71619, '1f1e7-1f1f1':71620, '1f1e7-1f1f2':71621, '1f1e7-1f1f3':71622, '1f1e7-1f1f4':71623, '1f1e7-1f1f6':71624, '1f1e7-1f1f7':71625, '1f1e7-1f1f8':71626, '1f1e7-1f1f9':71627, '1f1e7-1f1fb':71628, '1f1e7-1f1fc':71629, '1f1e7-1f1fe':71630, '1f1e7-1f1ff':71631, '1f1e8-1f1e6':71632, '1f1e8-1f1e8':71633, '1f1e8-1f1e9':71634, '1f1e8-1f1eb':71635, '1f1e8-1f1ec':71636, '1f1e8-1f1ed':71637, '1f1e8-1f1ee':71638, '1f1e8-1f1f0':71639, '1f1e8-1f1f1':71640, '1f1e8-1f1f2':71641, '1f1e8-1f1f3':71642, '1f1e8-1f1f4':71643, '1f1e8-1f1f5':71644, '1f1e8-1f1f7':71645, '1f1e8-1f1fa':71646, '1f1e8-1f1fb':71647, '1f1e8-1f1fc':71648, '1f1e8-1f1fd':71649, '1f1e8-1f1fe':71650, '1f1e8-1f1ff':71651, '1f1e9-1f1ea':71652, '1f1e9-1f1ec':71653, '1f1e9-1f1ef':71654, '1f1e9-1f1f0':71655, '1f1e9-1f1f2':71656, '1f1e9-1f1f4':71657, '1f1e9-1f1ff':71658, '1f1ea-1f1e6':71659, '1f1ea-1f1e8':71660, '1f1ea-1f1ea':71661, '1f1ea-1f1ec':71662, '1f1ea-1f1ed':71663, '1f1ea-1f1f7':71664, '1f1ea-1f1f8':71665, '1f1ea-1f1f9':71666, '1f1ea-1f1fa':71667, '1f1eb-1f1ee':71668, '1f1eb-1f1ef':71669, '1f1eb-1f1f0':71670, '1f1eb-1f1f2':71671, '1f1eb-1f1f4':71672, '1f1eb-1f1f7':71673, '1f1ec-1f1e6':71674, '1f1ec-1f1e7':71675, '1f1ec-1f1e9':71676, '1f1ec-1f1ea':71677, '1f1ec-1f1eb':71678, '1f1ec-1f1ec':71679, '1f1ec-1f1ed':71680, '1f1ec-1f1ee':71681, '1f1ec-1f1f1':71682, '1f1ec-1f1f2':71683, '1f1ec-1f1f3':71684, '1f1ec-1f1f5':71685, '1f1ec-1f1f6':71686, '1f1ec-1f1f7':71687, '1f1ec-1f1f8':71688, '1f1ec-1f1f9':71689, '1f1ec-1f1fa':71690, '1f1ec-1f1fc':71691, '1f1ec-1f1fe':71692, '1f1ed-1f1f0':71693, '1f1ed-1f1f2':71694, '1f1ed-1f1f3':71695, '1f1ed-1f1f7':71696, '1f1ed-1f1f9':71697, '1f1ed-1f1fa':71698, '1f1ee-1f1e8':71699, '1f1ee-1f1e9':71700, '1f1ee-1f1ea':71701, '1f1ee-1f1f1':71702, '1f1ee-1f1f2':71703, '1f1ee-1f1f3':71704, '1f1ee-1f1f4':71705, '1f1ee-1f1f6':71706, '1f1ee-1f1f7':71707, '1f1ee-1f1f8':71708, '1f1ee-1f1f9':71709, '1f1ef-1f1ea':71710, '1f1ef-1f1f2':71711, '1f1ef-1f1f4':71712, '1f1ef-1f1f5':71713, '1f1f0-1f1ea':71714, '1f1f0-1f1ec':71715, '1f1f0-1f1ed':71716, '1f1f0-1f1ee':71717, '1f1f0-1f1f2':71718, '1f1f0-1f1f3':71719, '1f1f0-1f1f5':71720, '1f1f0-1f1f7':71721, '1f1f0-1f1fc':71722, '1f1f0-1f1fe':71723, '1f1f0-1f1ff':71724, '1f1f1-1f1e6':71725, '1f1f1-1f1e7':71726, '1f1f1-1f1e8':71727, '1f1f1-1f1ee':71728, '1f1f1-1f1f0':71729, '1f1f1-1f1f7':71730, '1f1f1-1f1f8':71731, '1f1f1-1f1f9':71732, '1f1f1-1f1fa':71733, '1f1f1-1f1fb':71734, '1f1f1-1f1fe':71735, '1f1f2-1f1e6':71736, '1f1f2-1f1e8':71737, '1f1f2-1f1e9':71738, '1f1f2-1f1ea':71739, '1f1f2-1f1eb':71740, '1f1f2-1f1ec':71741, '1f1f2-1f1ed':71742, '1f1f2-1f1f0':71743, '1f1f2-1f1f1':71744, '1f1f2-1f1f2':71745, '1f1f2-1f1f3':71746, '1f1f2-1f1f4':71747, '1f1f2-1f1f5':71748, '1f1f2-1f1f6':71749, '1f1f2-1f1f7':71750, '1f1f2-1f1f8':71751, '1f1f2-1f1f9':71752, '1f1f2-1f1fa':71753, '1f1f2-1f1fb':71754, '1f1f2-1f1fc':71755, '1f1f2-1f1fd':71756, '1f1f2-1f1fe':71757, '1f1f2-1f1ff':71758, '1f1f3-1f1e6':71759, '1f1f3-1f1e8':71760, '1f1f3-1f1ea':71761, '1f1f3-1f1eb':71762, '1f1f3-1f1ec':71763, '1f1f3-1f1ee':71764, '1f1f3-1f1f1':71765, '1f1f3-1f1f4':71766, '1f1f3-1f1f5':71767, '1f1f3-1f1f7':71768, '1f1f3-1f1fa':71769, '1f1f3-1f1ff':71770, '1f1f4-1f1f2':71771, '1f1f5-1f1e6':71772, '1f1f5-1f1ea':71773, '1f1f5-1f1eb':71774, '1f1f5-1f1ec':71775, '1f1f5-1f1ed':71776, '1f1f5-1f1f0':71777, '1f1f5-1f1f1':71778, '1f1f5-1f1f2':71779, '1f1f5-1f1f3':71780, '1f1f5-1f1f7':71781, '1f1f5-1f1f8':71782, '1f1f5-1f1f9':71783, '1f1f5-1f1fc':71784, '1f1f5-1f1fe':71785, '1f1f6-1f1e6':71786, '1f1f7-1f1ea':71787, '1f1f7-1f1f4':71788, '1f1f7-1f1f8':71789, '1f1f7-1f1fa':71790, '1f1f7-1f1fc':71791, '1f1f8-1f1e6':71792, '1f1f8-1f1e7':71793, '1f1f8-1f1e8':71794, '1f1f8-1f1e9':71795, '1f1f8-1f1ea':71796, '1f1f8-1f1ec':71797, '1f1f8-1f1ed':71798, '1f1f8-1f1ee':71799, '1f1f8-1f1ef':71800, '1f1f8-1f1f0':71801, '1f1f8-1f1f1':71802, '1f1f8-1f1f2':71803, '1f1f8-1f1f3':71804, '1f1f8-1f1f4':71805, '1f1f8-1f1f7':71806, '1f1f8-1f1f8':71807, '1f1f8-1f1f9':71808, '1f1f8-1f1fb':71809, '1f1f8-1f1fd':71810, '1f1f8-1f1fe':71811, '1f1f8-1f1ff':71812, '1f1f9-1f1e6':71813, '1f1f9-1f1e8':71814, '1f1f9-1f1e9':71815, '1f1f9-1f1eb':71816, '1f1f9-1f1ec':71817, '1f1f9-1f1ed':71818, '1f1f9-1f1ef':71819, '1f1f9-1f1f0':71820, '1f1f9-1f1f1':71821, '1f1f9-1f1f2':71822, '1f1f9-1f1f3':71823, '1f1f9-1f1f4':71824, '1f1f9-1f1f7':71825, '1f1f9-1f1f9':71826, '1f1f9-1f1fb':71827, '1f1f9-1f1fc':71828, '1f1f9-1f1ff':71829, '1f1fa-1f1e6':71830, '1f1fa-1f1ec':71831, '1f1fa-1f1f2':71832, '1f1fa-1f1f3':71833, '1f1fa-1f1f8':71834, '1f1fa-1f1fe':71835, '1f1fa-1f1ff':71836, '1f1fb-1f1e6':71837, '1f1fb-1f1e8':71838, '1f1fb-1f1ea':71839, '1f1fb-1f1ec':71840, '1f1fb-1f1ee':71841, '1f1fb-1f1f3':71842, '1f1fb-1f1fa':71843, '1f1fc-1f1eb':71844, '1f1fc-1f1f8':71845, '1f1fd-1f1f0':71846, '1f1fe-1f1ea':71847, '1f1fe-1f1f9':71848, '1f1ff-1f1e6':71849, '1f1ff-1f1f2':71850, '1f1ff-1f1fc':71851, '1f201':62899, '1f202':62900, '1f21a':62906, '1f22f':62903, '1f232':62907, '1f233':62911, '1f234':62910, '1f235':62915, '1f236':62902, '1f237':62901, '1f238':62909, '1f239':62905, '1f23a':62914, '1f250':62904, '1f251':62908, '1f300':41010, '1f301':4857, '1f302':41012, '1f303':4858, '1f304':4860, '1f305':4861, '1f306':4862, '1f307':4863, '1f308':41011, '1f309':4864, '1f30a':41023, '1f30b':4815, '1f30c':4997, '1f30d':4806, '1f30e':4807, '1f30f':4808, '1f310':4809, '1f311':4977, '1f312':4978, '1f313':4979, '1f314':4980, '1f315':4981, '1f316':4982, '1f317':4983, '1f318':4984, '1f319':4985, '1f31a':4986, '1f31b':4987, '1f31c':4988, '1f31d':4991, '1f31e':4992, '1f31f':4995, '1f320':4996, '1f321':4989, '1f324':41001, '1f325':41002, '1f326':41003, '1f327':41004, '1f328':41005, '1f329':41006, '1f32a':41007, '1f32b':41008, '1f32c':41009, '1f32d':3725, '1f32e':3727, '1f32f':3728, '1f330':3708, '1f331':2659, '1f332':2661, '1f333':2662, '1f334':2663, '1f335':2664, '1f336':3698, '1f337':2658, '1f338':2649, '1f339':2653, '1f33a':2655, '1f33b':2656, '1f33c':2657, '1f33d':3697, '1f33e':2665, '1f33f':2666, '1f340':2668, '1f341':2669, '1f342':2670, '1f343':2671, '1f344':3705, '1f345':3690, '1f346':3694, '1f347':3674, '1f348':3675, '1f349':3676, '1f34a':3677, '1f34b':3678, '1f34c':3679, '1f34d':3680, '1f34e':3682, '1f34f':3683, '1f350':3684, '1f351':3685, '1f352':3686, '1f353':3687, '1f354':3722, '1f355':3724, '1f356':3718, '1f357':3719, '1f358':3744, '1f359':3745, '1f35a':3746, '1f35b':3747, '1f35c':3748, '1f35d':3749, '1f35e':3709, '1f35f':3723, '1f360':3750, '1f361':3756, '1f362':3751, '1f363':3752, '1f364':3753, '1f365':3754, '1f366':3765, '1f367':3766, '1f368':3767, '1f369':3768, '1f36a':3769, '1f36b':3774, '1f36c':3775, '1f36d':3776, '1f36e':3777, '1f36f':3778, '1f370':3771, '1f371':3743, '1f372':3735, '1f373':3733, '1f374':3801, '1f375':3783, '1f376':3784, '1f377':3786, '1f378':3787, '1f379':3788, '1f37a':3789, '1f37b':3790, '1f37c':3779, '1f37d':3800, '1f37e':3785, '1f37f':3739, '1f380':51040, '1f381':51041, '1f382':3770, '1f383':51024, '1f384':51025, '1f385':1527, '1f386':51026, '1f387':51027, '1f388':51030, '1f389':51031, '1f38a':51032, '1f38b':51033, '1f38c':71588, '1f38d':51034, '1f38e':51035, '1f38f':51036, '1f390':51037, '1f391':51038, '1f392':61134, '1f393':61147, '1f396':51045, '1f397':51042, '1f399':61167, '1f39a':61168, '1f39b':61169, '1f39e':61203, '1f39f':51043, '1f3a0':4866, '1f3a1':4868, '1f3a2':4869, '1f3a3':51072, '1f3a4':61170, '1f3a5':61202, '1f3a6':62819, '1f3a7':61171, '1f3a8':51105, '1f3a9':61146, '1f3aa':4871, '1f3ab':51044, '1f3ac':61205, '1f3ad':51103, '1f3ae':51086, '1f3af':51078, '1f3b0':51088, '1f3b1':51081, '1f3b2':51089, '1f3b3':51060, '1f3b4':51102, '1f3b5':61165, '1f3b6':61166, '1f3b7':61173, '1f3b8':61175, '1f3b9':61176, '1f3ba':61177, '1f3bb':61178, '1f3bc':61164, '1f3bd':51074, '1f3be':51058, '1f3bf':51075, '1f3c0':51054, '1f3c1':71586, '1f3c2':1600, '1f3c3-200d-2640':1584, '1f3c3-200d-2642':1583, '1f3c3':1582, '1f3c4-200d-2640':1606, '1f3c4-200d-2642':1605, '1f3c4':1604, '1f3c5':51047, '1f3c6':51046, '1f3c7':1598, '1f3c8':51056, '1f3c9':51057, '1f3ca-200d-2640':1612, '1f3ca-200d-2642':1611, '1f3ca':1610, '1f3cb-200d-2640':1618, '1f3cb-200d-2642':1617, '1f3cb':1616, '1f3cc-200d-2640':1603, '1f3cc-200d-2642':1602, '1f3cc':1601, '1f3cd':4902, '1f3ce':4901, '1f3cf':51061, '1f3d0':51055, '1f3d1':51062, '1f3d2':51063, '1f3d3':51065, '1f3d4':4813, '1f3d5':4817, '1f3d6':4818, '1f3d7':4824, '1f3d8':4829, '1f3d9':4859, '1f3da':4830, '1f3db':4823, '1f3dc':4819, '1f3dd':4820, '1f3de':4821, '1f3df':4822, '1f3e0':4831, '1f3e1':4832, '1f3e2':4833, '1f3e3':4834, '1f3e4':4835, '1f3e5':4836, '1f3e6':4837, '1f3e7':62729, '1f3e8':4838, '1f3e9':4839, '1f3ea':4840, '1f3eb':4841, '1f3ec':4842, '1f3ed':4843, '1f3ee':61216, '1f3ef':4844, '1f3f0':4845, '1f3f3-200d-1f308':71591, '1f3f3-200d-26a7':71592, '1f3f3':71590, '1f3f4-200d-2620':71593, '1f3f4-e0067-e0062-e0065-e006e-e0067-e007f':71852, '1f3f4-e0067-e0062-e0073-e0063-e0074-e007f':71853, '1f3f4-e0067-e0062-e0077-e006c-e0073-e007f':71854, '1f3f4':71589, '1f3f5':2652, '1f3f7':61234, '1f3f8':51066, '1f3f9':61303, '1f3fa':3805, '1f3fb':9525, '1f3fc':9526, '1f3fd':9527, '1f3fe':9528, '1f3ff':9529, '1f400':2576, '1f401':2575, '1f402':2556, '1f403':2557, '1f404':2558, '1f405':2547, '1f406':2548, '1f407':2579, '1f408-200d-2b1b':2544, '1f408':2543, '1f409':2618, '1f40a':2613, '1f40b':2622, '1f40c':2632, '1f40d':2616, '1f40e':2550, '1f40f':2563, '1f410':2565, '1f411':2564, '1f412':2531, '1f413':2596, '1f414':2595, '1f415-200d-1f9ba':2537, '1f415':2535, '1f416':2560, '1f417':2561, '1f418':2570, '1f419':2629, '1f41a':2630, '1f41b':2634, '1f41c':2635, '1f41d':2636, '1f41e':2638, '1f41f':2625, '1f420':2626, '1f421':2627, '1f422':2614, '1f423':2597, '1f424':2598, '1f425':2599, '1f426':2600, '1f427':2601, '1f428':2586, '1f429':2538, '1f42a':2566, '1f42b':2567, '1f42c':2623, '1f42d':2574, '1f42e':2555, '1f42f':2546, '1f430':2578, '1f431':2542, '1f432':2617, '1f433':2621, '1f434':2549, '1f435':2530, '1f436':2534, '1f437':2559, '1f438':2612, '1f439':2577, '1f43a':2539, '1f43b-200d-2744':2585, '1f43b':2584, '1f43c':2587, '1f43d':2562, '1f43e':2593, '1f43f':2580, '1f440':1381, '1f441-200d-1f5e8':1159, '1f441':1382, '1f442':1373, '1f443':1375, '1f444':1384, '1f445':1383, '1f446':1347, '1f447':1349, '1f448':1345, '1f449':1346, '1f44a':1355, '1f44b':1327, '1f44c':1336, '1f44d':1352, '1f44e':1353, '1f44f':1358, '1f450':1361, '1f451':61144, '1f452':61145, '1f453':61110, '1f454':61115, '1f455':61116, '1f456':61117, '1f457':61122, '1f458':61123, '1f459':61128, '1f45a':61129, '1f45b':61130, '1f45c':61131, '1f45d':61132, '1f45e':61136, '1f45f':61137, '1f460':61140, '1f461':61141, '1f462':61143, '1f463':1687, '1f464':1684, '1f465':1685, '1f466':1388, '1f467':1389, '1f468-200d-1f33e':1457, '1f468-200d-1f373':1460, '1f468-200d-1f37c':1524, '1f468-200d-1f393':1448, '1f468-200d-1f3a4':1478, '1f468-200d-1f3a8':1481, '1f468-200d-1f3eb':1451, '1f468-200d-1f3ed':1466, '1f468-200d-1f466-200d-1f466':1674, '1f468-200d-1f466':1673, '1f468-200d-1f467-200d-1f466':1676, '1f468-200d-1f467-200d-1f467':1677, '1f468-200d-1f467':1675, '1f468-200d-1f468-200d-1f466':1663, '1f468-200d-1f468-200d-1f466-200d-1f466':1666, '1f468-200d-1f468-200d-1f467':1664, '1f468-200d-1f468-200d-1f467-200d-1f466':1665, '1f468-200d-1f468-200d-1f467-200d-1f467':1667, '1f468-200d-1f469-200d-1f466':1658, '1f468-200d-1f469-200d-1f466-200d-1f466':1661, '1f468-200d-1f469-200d-1f467':1659, '1f468-200d-1f469-200d-1f467-200d-1f466':1660, '1f468-200d-1f469-200d-1f467-200d-1f467':1662, '1f468-200d-1f4bb':1475, '1f468-200d-1f4bc':1469, '1f468-200d-1f527':1463, '1f468-200d-1f52c':1472, '1f468-200d-1f680':1487, '1f468-200d-1f692':1490, '1f468-200d-1f9af':1574, '1f468-200d-1f9b0':1396, '1f468-200d-1f9b1':1397, '1f468-200d-1f9b2':1399, '1f468-200d-1f9b3':1398, '1f468-200d-1f9bc':1577, '1f468-200d-1f9bd':1580, '1f468-200d-2695':1445, '1f468-200d-2696':1454, '1f468-200d-2708':1484, '1f468-200d-2764-200d-1f468':1655, '1f468-200d-2764-200d-1f48b-200d-1f468':1651, '1f468':1392, '1f469-200d-1f33e':1458, '1f469-200d-1f373':1461, '1f469-200d-1f37c':1523, '1f469-200d-1f393':1449, '1f469-200d-1f3a4':1479, '1f469-200d-1f3a8':1482, '1f469-200d-1f3eb':1452, '1f469-200d-1f3ed':1467, '1f469-200d-1f466-200d-1f466':1679, '1f469-200d-1f466':1678, '1f469-200d-1f467-200d-1f466':1681, '1f469-200d-1f467-200d-1f467':1682, '1f469-200d-1f467':1680, '1f469-200d-1f469-200d-1f466':1668, '1f469-200d-1f469-200d-1f466-200d-1f466':1671, '1f469-200d-1f469-200d-1f467':1669, '1f469-200d-1f469-200d-1f467-200d-1f466':1670, '1f469-200d-1f469-200d-1f467-200d-1f467':1672, '1f469-200d-1f4bb':1476, '1f469-200d-1f4bc':1470, '1f469-200d-1f527':1464, '1f469-200d-1f52c':1473, '1f469-200d-1f680':1488, '1f469-200d-1f692':1491, '1f469-200d-1f9af':1575, '1f469-200d-1f9b0':1401, '1f469-200d-1f9b1':1403, '1f469-200d-1f9b2':1407, '1f469-200d-1f9b3':1405, '1f469-200d-1f9bc':1578, '1f469-200d-1f9bd':1581, '1f469-200d-2695':1446, '1f469-200d-2696':1455, '1f469-200d-2708':1485, '1f469-200d-2764-200d-1f468':1654, '1f469-200d-2764-200d-1f469':1656, '1f469-200d-2764-200d-1f48b-200d-1f468':1650, '1f469-200d-2764-200d-1f48b-200d-1f469':1652, '1f469':1400, '1f46a':1657, '1f46b':1647, '1f46c':1648, '1f46d':1646, '1f46e-200d-2640':1494, '1f46e-200d-2642':1493, '1f46e':1492, '1f46f-200d-2640':1590, '1f46f-200d-2642':1589, '1f46f':1588, '1f470-200d-2640':1518, '1f470-200d-2642':1517, '1f470':1516, '1f471-200d-2640':1409, '1f471-200d-2642':1410, '1f471':1391, '1f472':1511, '1f473-200d-2640':1510, '1f473-200d-2642':1509, '1f473':1508, '1f474':1412, '1f475':1413, '1f476':1386, '1f477-200d-2640':1504, '1f477-200d-2642':1503, '1f477':1502, '1f478':1507, '1f479':1109, '1f47a':1110, '1f47b':1111, '1f47c':1526, '1f47d':1112, '1f47e':1113, '1f47f':1104, '1f480':1105, '1f481-200d-2640':1428, '1f481-200d-2642':1427, '1f481':1426, '1f482-200d-2640':1500, '1f482-200d-2642':1499, '1f482':1498, '1f483':1585, '1f484':61152, '1f485':1366, '1f486-200d-2640':1560, '1f486-200d-2642':1559, '1f486':1558, '1f487-200d-2640':1563, '1f487-200d-2642':1562, '1f487':1561, '1f488':4870, '1f489':61326, '1f48a':61328, '1f48b':1127, '1f48c':1128, '1f48d':61153, '1f48e':61154, '1f48f':1649, '1f490':2648, '1f491':1653, '1f492':4846, '1f493':1133, '1f494':1138, '1f495':1135, '1f496':1131, '1f497':1132, '1f498':1129, '1f499':1145, '1f49a':1144, '1f49b':1143, '1f49c':1146, '1f49d':1130, '1f49e':1134, '1f49f':1136, '1f4a0':62946, '1f4a1':61214, '1f4a2':1151, '1f4a3':1157, '1f4a4':1163, '1f4a5':1152, '1f4a6':1154, '1f4a7':41022, '1f4a8':1155, '1f4a9':1107, '1f4aa':1368, '1f4ab':1153, '1f4ac':1158, '1f4ad':1162, '1f4ae':2650, '1f4af':1150, '1f4b0':61235, '1f4b1':62841, '1f4b2':62842, '1f4b3':61242, '1f4b4':61237, '1f4b5':61238, '1f4b6':61239, '1f4b7':61240, '1f4b8':61241, '1f4b9':61244, '1f4ba':4936, '1f4bb':61191, '1f4bc':61265, '1f4bd':61197, '1f4be':61198, '1f4bf':61199, '1f4c0':61200, '1f4c1':61266, '1f4c2':61267, '1f4c3':61227, '1f4c4':61229, '1f4c5':61269, '1f4c6':61270, '1f4c7':61273, '1f4c8':61274, '1f4c9':61275, '1f4ca':61276, '1f4cb':61277, '1f4cc':61278, '1f4cd':61279, '1f4ce':61280, '1f4cf':61282, '1f4d0':61283, '1f4d1':61232, '1f4d2':61226, '1f4d3':61225, '1f4d4':61218, '1f4d5':61219, '1f4d6':61220, '1f4d7':61221, '1f4d8':61222, '1f4d9':61223, '1f4da':61224, '1f4db':62847, '1f4dc':61228, '1f4dd':61264, '1f4de':61185, '1f4df':61186, '1f4e0':61187, '1f4e1':61325, '1f4e2':61159, '1f4e3':61160, '1f4e4':61249, '1f4e5':61250, '1f4e6':61251, '1f4e7':61246, '1f4e8':61247, '1f4e9':61248, '1f4ea':61253, '1f4eb':61252, '1f4ec':61254, '1f4ed':61255, '1f4ee':61256, '1f4ef':61161, '1f4f0':61230, '1f4f1':61182, '1f4f2':61183, '1f4f3':62823, '1f4f4':62824, '1f4f5':62751, '1f4f6':62822, '1f4f7':61207, '1f4f8':61208, '1f4f9':61209, '1f4fa':61206, '1f4fb':61172, '1f4fc':61210, '1f4fd':61204, '1f4ff':61151, '1f500':62801, '1f501':62802, '1f502':62803, '1f503':62769, '1f504':62770, '1f505':62820, '1f506':62821, '1f507':61155, '1f508':61156, '1f509':61157, '1f50a':61158, '1f50b':61188, '1f50c':61190, '1f50d':61211, '1f50e':61212, '1f50f':61290, '1f510':61291, '1f511':61292, '1f512':61288, '1f513':61289, '1f514':61162, '1f515':61163, '1f516':61233, '1f517':61313, '1f518':62947, '1f519':62771, '1f51a':62772, '1f51b':62773, '1f51c':62774, '1f51d':62775, '1f51e':62752, '1f51f':62876, '1f520':62877, '1f521':62878, '1f522':62879, '1f523':62880, '1f524':62881, '1f525':41021, '1f526':61215, '1f527':61306, '1f528':61294, '1f529':61308, '1f52a':3803, '1f52b':61301, '1f52c':61323, '1f52d':61324, '1f52e':51082, '1f52f':62787, '1f530':62848, '1f531':62846, '1f532':62949, '1f533':62948, '1f534':62916, '1f535':62920, '1f536':62940, '1f537':62941, '1f538':62942, '1f539':62943, '1f53a':62944, '1f53b':62945, '1f53c':62811, '1f53d':62813, '1f549':62778, '1f54a':2602, '1f54b':4854, '1f54c':4850, '1f54d':4852, '1f54e':62786, '1f550':4955, '1f551':4957, '1f552':4959, '1f553':4961, '1f554':4963, '1f555':4965, '1f556':4967, '1f557':4969, '1f558':4971, '1f559':4973, '1f55a':4975, '1f55b':4953, '1f55c':4956, '1f55d':4958, '1f55e':4960, '1f55f':4962, '1f560':4964, '1f561':4966, '1f562':4968, '1f563':4970, '1f564':4972, '1f565':4974, '1f566':4976, '1f567':4954, '1f56f':61213, '1f570':4952, '1f573':1156, '1f574':1587, '1f575-200d-2640':1497, '1f575-200d-2642':1496, '1f575':1495, '1f576':61111, '1f577':2641, '1f578':2642, '1f579':51087, '1f57a':1586, '1f587':61281, '1f58a':61261, '1f58b':61260, '1f58c':61262, '1f58d':61263, '1f590':1329, '1f595':1348, '1f596':1331, '1f5a4':1148, '1f5a5':61192, '1f5a8':61193, '1f5b1':61195, '1f5b2':61196, '1f5bc':51104, '1f5c2':61268, '1f5c3':61285, '1f5c4':61286, '1f5d1':61287, '1f5d2':61271, '1f5d3':61272, '1f5dc':61310, '1f5dd':61293, '1f5de':61231, '1f5e1':61299, '1f5e3':1683, '1f5e8':1160, '1f5ef':1161, '1f5f3':61257, '1f5fa':4810, '1f5fb':4816, '1f5fc':4847, '1f5fd':4848, '1f5fe':4811, '1f5ff':61362, '1f600':11, '1f601':14, '1f602':18, '1f603':12, '1f604':13, '1f605':16, '1f606':15, '1f607':114, '1f608':1103, '1f609':112, '1f60a':113, '1f60b':124, '1f60c':150, '1f60d':116, '1f60e':170, '1f60f':144, '1f610':139, '1f611':140, '1f612':145, '1f613':195, '1f614':151, '1f615':173, '1f616':192, '1f617':119, '1f618':118, '1f619':122, '1f61a':121, '1f61b':125, '1f61c':126, '1f61d':128, '1f61e':194, '1f61f':175, '1f620':1101, '1f621':1100, '1f622':189, '1f623':193, '1f624':199, '1f625':188, '1f626':184, '1f627':185, '1f628':186, '1f629':196, '1f62a':152, '1f62b':197, '1f62c':147, '1f62d':190, '1f62e-200d-1f4a8':148, '1f62e':178, '1f62f':179, '1f630':187, '1f631':191, '1f632':180, '1f633':181, '1f634':154, '1f635-200d-1f4ab':165, '1f635':164, '1f636-200d-1f32b':143, '1f636':141, '1f637':155, '1f638':1116, '1f639':1117, '1f63a':1115, '1f63b':1118, '1f63c':1119, '1f63d':1120, '1f63e':1123, '1f63f':1122, '1f640':1121, '1f641':176, '1f642':19, '1f643':110, '1f644':146, '1f645-200d-2640':1422, '1f645-200d-2642':1421, '1f645':1420, '1f646-200d-2640':1425, '1f646-200d-2642':1424, '1f646':1423, '1f647-200d-2640':1437, '1f647-200d-2642':1436, '1f647':1435, '1f648':1124, '1f649':1125, '1f64a':1126, '1f64b-200d-2640':1431, '1f64b-200d-2642':1430, '1f64b':1429, '1f64c':1359, '1f64d-200d-2640':1416, '1f64d-200d-2642':1415, '1f64d':1414, '1f64e-200d-2640':1419, '1f64e-200d-2642':1418, '1f64e':1417, '1f64f':1364, '1f680':4942, '1f681':4937, '1f682':4872, '1f683':4873, '1f684':4874, '1f685':4875, '1f686':4876, '1f687':4877, '1f688':4878, '1f689':4879, '1f68a':4880, '1f68b':4883, '1f68c':4884, '1f68d':4885, '1f68e':4886, '1f68f':4911, '1f690':4887, '1f691':4888, '1f692':4889, '1f693':4890, '1f694':4891, '1f695':4892, '1f696':4893, '1f697':4894, '1f698':4895, '1f699':4896, '1f69a':4898, '1f69b':4899, '1f69c':4900, '1f69d':4881, '1f69e':4882, '1f69f':4938, '1f6a0':4939, '1f6a1':4940, '1f6a2':4930, '1f6a3-200d-2640':1609, '1f6a3-200d-2642':1608, '1f6a3':1607, '1f6a4':4926, '1f6a5':4918, '1f6a6':4919, '1f6a7':4921, '1f6a8':4917, '1f6a9':71587, '1f6aa':61333, '1f6ab':62745, '1f6ac':61358, '1f6ad':62747, '1f6ae':62730, '1f6af':62748, '1f6b0':62731, '1f6b1':62749, '1f6b2':4907, '1f6b3':62746, '1f6b4-200d-2640':1621, '1f6b4-200d-2642':1620, '1f6b4':1619, '1f6b5-200d-2640':1624, '1f6b5-200d-2642':1623, '1f6b5':1622, '1f6b6-200d-2640':1566, '1f6b6-200d-2642':1565, '1f6b6':1564, '1f6b7':62750, '1f6b8':62743, '1f6b9':62733, '1f6ba':62734, '1f6bb':62735, '1f6bc':62736, '1f6bd':61340, '1f6be':62737, '1f6bf':61342, '1f6c0':1643, '1f6c1':61343, '1f6c2':62738, '1f6c3':62739, '1f6c4':62740, '1f6c5':62741, '1f6cb':61338, '1f6cc':1644, '1f6cd':61133, '1f6ce':4944, '1f6cf':61337, '1f6d0':62776, '1f6d1':4920, '1f6d2':61357, '1f6d5':4851, '1f6d6':4828, '1f6d7':61334, '1f6e0':61298, '1f6e1':61304, '1f6e2':4914, '1f6e3':4912, '1f6e4':4913, '1f6e5':4929, '1f6e9':4932, '1f6eb':4933, '1f6ec':4934, '1f6f0':4941, '1f6f3':4927, '1f6f4':4908, '1f6f5':4903, '1f6f6':4925, '1f6f7':51076, '1f6f8':4943, '1f6f9':4909, '1f6fa':4906, '1f6fb':4897, '1f6fc':4910, '1f7e0':62917, '1f7e1':62918, '1f7e2':62919, '1f7e3':62921, '1f7e4':62922, '1f7e5':62925, '1f7e6':62929, '1f7e7':62926, '1f7e8':62927, '1f7e9':62928, '1f7ea':62930, '1f7eb':62931, '1f90c':1337, '1f90d':1149, '1f90e':1147, '1f90f':1338, '1f910':137, '1f911':129, '1f912':156, '1f913':171, '1f914':135, '1f915':157, '1f916':1114, '1f917':130, '1f918':1343, '1f919':1344, '1f91a':1328, '1f91b':1356, '1f91c':1357, '1f91d':1363, '1f91e':1340, '1f91f':1342, '1f920':167, '1f921':1108, '1f922':158, '1f923':17, '1f924':153, '1f925':149, '1f926-200d-2640':1440, '1f926-200d-2642':1439, '1f926':1438, '1f927':160, '1f928':138, '1f929':117, '1f92a':127, '1f92b':134, '1f92c':1102, '1f92d':131, '1f92e':159, '1f92f':166, '1f930':1519, '1f931':1522, '1f932':1362, '1f933':1367, '1f934':1506, '1f935-200d-2640':1515, '1f935-200d-2642':1514, '1f935':1513, '1f936':1528, '1f937-200d-2640':1443, '1f937-200d-2642':1442, '1f937':1441, '1f938-200d-2640':1627, '1f938-200d-2642':1626, '1f938':1625, '1f939-200d-2640':1639, '1f939-200d-2642':1638, '1f939':1637, '1f93a':1597, '1f93c-200d-2640':1630, '1f93c-200d-2642':1629, '1f93c':1628, '1f93d-200d-2640':1633, '1f93d-200d-2642':1632, '1f93d':1631, '1f93e-200d-2640':1636, '1f93e-200d-2642':1635, '1f93e':1634, '1f93f':51073, '1f940':2654, '1f941':61180, '1f942':3791, '1f943':3792, '1f944':3802, '1f945':51069, '1f947':51048, '1f948':51049, '1f949':51050, '1f94a':51067, '1f94b':51068, '1f94c':51077, '1f94d':51064, '1f94e':51053, '1f94f':51059, '1f950':3710, '1f951':3693, '1f952':3700, '1f953':3721, '1f954':3695, '1f955':3696, '1f956':3711, '1f957':3738, '1f958':3734, '1f959':3730, '1f95a':3732, '1f95b':3780, '1f95c':3706, '1f95d':3689, '1f95e':3715, '1f95f':3757, '1f960':3758, '1f961':3759, '1f962':3799, '1f963':3737, '1f964':3794, '1f965':3692, '1f966':3702, '1f967':3773, '1f968':3713, '1f969':3720, '1f96a':3726, '1f96b':3742, '1f96c':3701, '1f96d':3681, '1f96e':3755, '1f96f':3714, '1f970':115, '1f971':198, '1f972':123, '1f973':168, '1f974':163, '1f975':161, '1f976':162, '1f977':1501, '1f978':169, '1f97a':182, '1f97b':61124, '1f97c':61113, '1f97d':61112, '1f97e':61138, '1f97f':61139, '1f980':3760, '1f981':2545, '1f982':2643, '1f983':2594, '1f984':2551, '1f985':2603, '1f986':2604, '1f987':2583, '1f988':2628, '1f989':2606, '1f98a':2540, '1f98b':2633, '1f98c':2553, '1f98d':2532, '1f98e':2615, '1f98f':2572, '1f990':3762, '1f991':3763, '1f992':2569, '1f993':2552, '1f994':2582, '1f995':2619, '1f996':2620, '1f997':2639, '1f998':2591, '1f999':2568, '1f99a':2610, '1f99b':2573, '1f99c':2611, '1f99d':2541, '1f99e':3761, '1f99f':2644, '1f9a0':2647, '1f9a1':2592, '1f9a2':2605, '1f9a3':2571, '1f9a4':2607, '1f9a5':2588, '1f9a6':2589, '1f9a7':2533, '1f9a8':2590, '1f9a9':2609, '1f9aa':3764, '1f9ab':2581, '1f9ac':2554, '1f9ad':2624, '1f9ae':2536, '1f9af':61312, '1f9b4':1380, '1f9b5':1371, '1f9b6':1372, '1f9b7':1379, '1f9b8-200d-2640':1532, '1f9b8-200d-2642':1531, '1f9b8':1530, '1f9b9-200d-2640':1535, '1f9b9-200d-2642':1534, '1f9b9':1533, '1f9ba':61114, '1f9bb':1374, '1f9bc':4905, '1f9bd':4904, '1f9be':1369, '1f9bf':1370, '1f9c0':3717, '1f9c1':3772, '1f9c2':3741, '1f9c3':3796, '1f9c4':3703, '1f9c5':3704, '1f9c6':3731, '1f9c7':3716, '1f9c8':3740, '1f9c9':3797, '1f9ca':3798, '1f9cb':3795, '1f9cd-200d-2640':1569, '1f9cd-200d-2642':1568, '1f9cd':1567, '1f9ce-200d-2640':1572, '1f9ce-200d-2642':1571, '1f9ce':1570, '1f9cf-200d-2640':1434, '1f9cf-200d-2642':1433, '1f9cf':1432, '1f9d0':172, '1f9d1-200d-1f33e':1456, '1f9d1-200d-1f373':1459, '1f9d1-200d-1f37c':1525, '1f9d1-200d-1f384':1529, '1f9d1-200d-1f393':1447, '1f9d1-200d-1f3a4':1477, '1f9d1-200d-1f3a8':1480, '1f9d1-200d-1f3eb':1450, '1f9d1-200d-1f3ed':1465, '1f9d1-200d-1f4bb':1474, '1f9d1-200d-1f4bc':1468, '1f9d1-200d-1f527':1462, '1f9d1-200d-1f52c':1471, '1f9d1-200d-1f680':1486, '1f9d1-200d-1f692':1489, '1f9d1-200d-1f91d-200d-1f9d1':1645, '1f9d1-200d-1f9af':1573, '1f9d1-200d-1f9b0':1402, '1f9d1-200d-1f9b1':1404, '1f9d1-200d-1f9b2':1408, '1f9d1-200d-1f9b3':1406, '1f9d1-200d-1f9bc':1576, '1f9d1-200d-1f9bd':1579, '1f9d1-200d-2695':1444, '1f9d1-200d-2696':1453, '1f9d1-200d-2708':1483, '1f9d1':1390, '1f9d2':1387, '1f9d3':1411, '1f9d4-200d-2640':1395, '1f9d4-200d-2642':1394, '1f9d4':1393, '1f9d5':1512, '1f9d6-200d-2640':1593, '1f9d6-200d-2642':1592, '1f9d6':1591, '1f9d7-200d-2640':1596, '1f9d7-200d-2642':1595, '1f9d7':1594, '1f9d8-200d-2640':1642, '1f9d8-200d-2642':1641, '1f9d8':1640, '1f9d9-200d-2640':1538, '1f9d9-200d-2642':1537, '1f9d9':1536, '1f9da-200d-2640':1541, '1f9da-200d-2642':1540, '1f9da':1539, '1f9db-200d-2640':1544, '1f9db-200d-2642':1543, '1f9db':1542, '1f9dc-200d-2640':1547, '1f9dc-200d-2642':1546, '1f9dc':1545, '1f9dd-200d-2640':1550, '1f9dd-200d-2642':1549, '1f9dd':1548, '1f9de-200d-2640':1553, '1f9de-200d-2642':1552, '1f9de':1551, '1f9df-200d-2640':1556, '1f9df-200d-2642':1555, '1f9df':1554, '1f9e0':1376, '1f9e1':1142, '1f9e2':61148, '1f9e3':61118, '1f9e4':61119, '1f9e5':61120, '1f9e6':61121, '1f9e7':51039, '1f9e8':51028, '1f9e9':51090, '1f9ea':61320, '1f9eb':61321, '1f9ec':61322, '1f9ed':4812, '1f9ee':61201, '1f9ef':61356, '1f9f0':61316, '1f9f1':4825, '1f9f2':61317, '1f9f3':4945, '1f9f4':61346, '1f9f5':51106, '1f9f6':51108, '1f9f7':61347, '1f9f8':51091, '1f9f9':61348, '1f9fa':61349, '1f9fb':61350, '1f9fc':61352, '1f9fd':61355, '1f9fe':61243, '1f9ff':51084, '1fa70':61142, '1fa71':61125, '1fa72':61126, '1fa73':61127, '1fa74':61135, '1fa78':61327, '1fa79':61329, '1fa7a':61331, '1fa80':51079, '1fa81':51080, '1fa82':4935, '1fa83':61302, '1fa84':51083, '1fa85':51092, '1fa86':51094, '1fa90':4993, '1fa91':61339, '1fa92':61345, '1fa93':61295, '1fa94':61217, '1fa95':61179, '1fa96':61149, '1fa97':61174, '1fa98':61181, '1fa99':61236, '1fa9a':61305, '1fa9b':61307, '1fa9c':61318, '1fa9d':61315, '1fa9e':61335, '1fa9f':61336, '1faa0':61341, '1faa1':51107, '1faa2':51109, '1faa3':61351, '1faa4':61344, '1faa5':61354, '1faa6':61360, '1faa7':61363, '1faa8':4826, '1fab0':2645, '1fab1':2646, '1fab2':2637, '1fab3':2640, '1fab4':2660, '1fab5':4827, '1fab6':2608, '1fac0':1377, '1fac1':1378, '1fac2':1686, '1fad0':3688, '1fad1':3699, '1fad2':3691, '1fad3':3712, '1fad4':3729, '1fad5':3736, '1fad6':3782, '203c':62834, '21a9':62765, '21aa':62766, '231a':4948, '231b':4946, '23cf':62818, '23e9':62805, '23ea':62809, '23eb':62812, '23ec':62814, '23ed':62806, '23ee':62810, '23ef':62807, '23f0':4949, '23f1':4950, '23f2':4951, '23f3':4947, '23f8':62815, '23f9':62816, '23fa':62817, '24c2':62890, '25aa':62938, '25ab':62939, '25b6':62804, '25c0':62808, '25fb':62935, '25fc':62934, '25fd':62937, '25fe':62936, '260e':61184, '261d':1350, '262a':62784, '262e':62785, '262f':62781, '263a':120, '264a':62790, '264b':62791, '264c':62792, '264d':62793, '264e':62794, '264f':62795, '265f':51099, '267b':62844, '267e':62833, '267f':62732, '269b':62777, '269c':62845, '26a0':62742, '26a1':41016, '26a7':62827, '26aa':62924, '26ab':62923, '26b0':61359, '26b1':61361, '26bd':51051, '26be':51052, '26c4':41019, '26c5':4999, '26c8':41000, '26ce':62800, '26cf':61296, '26d1':61150, '26d3':61314, '26d4':62744, '26e9':4853, '26ea':4849, '26f0':4814, '26f1':41015, '26f2':4855, '26f3':51070, '26f4':4928, '26f5':4924, '26f7':1599, '26f8':51071, '26f9-200d-2640':1615, '26f9-200d-2642':1614, '26f9':1613, '26fa':4856, '26fd':4915, '270a':1354, '270b':1330, '270c':1339, '270d':1365, '270f':61258, '271d':62782, '274c':62853, '274e':62854, '2764-200d-1f525':1139, '2764-200d-1fa79':1140, '27a1':62757, '27b0':62855, '27bf':62856, '2b05':62761, '2b06':62755, '2b07':62759, '2b1b':62932, '2b1c':62933, '2b50':4994, '2b55':62849, '303d':62857, '1f385-1f3fb':0, '1f385-1f3fc':0, '1f385-1f3fd':0, '1f385-1f3fe':0, '1f385-1f3ff':0, '1f3c2-1f3fb':0, '1f3c2-1f3fc':0, '1f3c2-1f3fd':0, '1f3c2-1f3fe':0, '1f3c2-1f3ff':0, '1f3c3-1f3fb-200d-2640':0, '1f3c3-1f3fc-200d-2640':0, '1f3c3-1f3fd-200d-2640':0, '1f3c3-1f3fe-200d-2640':0, '1f3c3-1f3ff-200d-2640':0, '1f3c3-1f3fb-200d-2642':0, '1f3c3-1f3fc-200d-2642':0, '1f3c3-1f3fd-200d-2642':0, '1f3c3-1f3fe-200d-2642':0, '1f3c3-1f3ff-200d-2642':0, '1f3c3-1f3fb':0, '1f3c3-1f3fc':0, '1f3c3-1f3fd':0, '1f3c3-1f3fe':0, '1f3c3-1f3ff':0, '1f3c4-1f3fb-200d-2640':0, '1f3c4-1f3fc-200d-2640':0, '1f3c4-1f3fd-200d-2640':0, '1f3c4-1f3fe-200d-2640':0, '1f3c4-1f3ff-200d-2640':0, '1f3c4-1f3fb-200d-2642':0, '1f3c4-1f3fc-200d-2642':0, '1f3c4-1f3fd-200d-2642':0, '1f3c4-1f3fe-200d-2642':0, '1f3c4-1f3ff-200d-2642':0, '1f3c4-1f3fb':0, '1f3c4-1f3fc':0, '1f3c4-1f3fd':0, '1f3c4-1f3fe':0, '1f3c4-1f3ff':0, '1f3c7-1f3fb':0, '1f3c7-1f3fc':0, '1f3c7-1f3fd':0, '1f3c7-1f3fe':0, '1f3c7-1f3ff':0, '1f3ca-1f3fb-200d-2640':0, '1f3ca-1f3fc-200d-2640':0, '1f3ca-1f3fd-200d-2640':0, '1f3ca-1f3fe-200d-2640':0, '1f3ca-1f3ff-200d-2640':0, '1f3ca-1f3fb-200d-2642':0, '1f3ca-1f3fc-200d-2642':0, '1f3ca-1f3fd-200d-2642':0, '1f3ca-1f3fe-200d-2642':0, '1f3ca-1f3ff-200d-2642':0, '1f3ca-1f3fb':0, '1f3ca-1f3fc':0, '1f3ca-1f3fd':0, '1f3ca-1f3fe':0, '1f3ca-1f3ff':0, '1f3cb-1f3fb-200d-2640':0, '1f3cb-1f3fc-200d-2640':0, '1f3cb-1f3fd-200d-2640':0, '1f3cb-1f3fe-200d-2640':0, '1f3cb-1f3ff-200d-2640':0, '1f3cb-1f3fb-200d-2642':0, '1f3cb-1f3fc-200d-2642':0, '1f3cb-1f3fd-200d-2642':0, '1f3cb-1f3fe-200d-2642':0, '1f3cb-1f3ff-200d-2642':0, '1f3cb-1f3fb':0, '1f3cb-1f3fc':0, '1f3cb-1f3fd':0, '1f3cb-1f3fe':0, '1f3cb-1f3ff':0, '1f3cc-1f3fb-200d-2640':0, '1f3cc-1f3fc-200d-2640':0, '1f3cc-1f3fd-200d-2640':0, '1f3cc-1f3fe-200d-2640':0, '1f3cc-1f3ff-200d-2640':0, '1f3cc-1f3fb-200d-2642':0, '1f3cc-1f3fc-200d-2642':0, '1f3cc-1f3fd-200d-2642':0, '1f3cc-1f3fe-200d-2642':0, '1f3cc-1f3ff-200d-2642':0, '1f3cc-1f3fb':0, '1f3cc-1f3fc':0, '1f3cc-1f3fd':0, '1f3cc-1f3fe':0, '1f3cc-1f3ff':0, '1f442-1f3fb':0, '1f442-1f3fc':0, '1f442-1f3fd':0, '1f442-1f3fe':0, '1f442-1f3ff':0, '1f443-1f3fb':0, '1f443-1f3fc':0, '1f443-1f3fd':0, '1f443-1f3fe':0, '1f443-1f3ff':0, '1f446-1f3fb':0, '1f446-1f3fc':0, '1f446-1f3fd':0, '1f446-1f3fe':0, '1f446-1f3ff':0, '1f447-1f3fb':0, '1f447-1f3fc':0, '1f447-1f3fd':0, '1f447-1f3fe':0, '1f447-1f3ff':0, '1f448-1f3fb':0, '1f448-1f3fc':0, '1f448-1f3fd':0, '1f448-1f3fe':0, '1f448-1f3ff':0, '1f449-1f3fb':0, '1f449-1f3fc':0, '1f449-1f3fd':0, '1f449-1f3fe':0, '1f449-1f3ff':0, '1f44a-1f3fb':0, '1f44a-1f3fc':0, '1f44a-1f3fd':0, '1f44a-1f3fe':0, '1f44a-1f3ff':0, '1f44b-1f3fb':0, '1f44b-1f3fc':0, '1f44b-1f3fd':0, '1f44b-1f3fe':0, '1f44b-1f3ff':0, '1f44c-1f3fb':0, '1f44c-1f3fc':0, '1f44c-1f3fd':0, '1f44c-1f3fe':0, '1f44c-1f3ff':0, '1f44d-1f3fb':0, '1f44d-1f3fc':0, '1f44d-1f3fd':0, '1f44d-1f3fe':0, '1f44d-1f3ff':0, '1f44e-1f3fb':0, '1f44e-1f3fc':0, '1f44e-1f3fd':0, '1f44e-1f3fe':0, '1f44e-1f3ff':0, '1f44f-1f3fb':0, '1f44f-1f3fc':0, '1f44f-1f3fd':0, '1f44f-1f3fe':0, '1f44f-1f3ff':0, '1f450-1f3fb':0, '1f450-1f3fc':0, '1f450-1f3fd':0, '1f450-1f3fe':0, '1f450-1f3ff':0, '1f466-1f3fb':0, '1f466-1f3fc':0, '1f466-1f3fd':0, '1f466-1f3fe':0, '1f466-1f3ff':0, '1f467-1f3fb':0, '1f467-1f3fc':0, '1f467-1f3fd':0, '1f467-1f3fe':0, '1f467-1f3ff':0, '1f468-1f3fb-200d-1f33e':0, '1f468-1f3fc-200d-1f33e':0, '1f468-1f3fd-200d-1f33e':0, '1f468-1f3fe-200d-1f33e':0, '1f468-1f3ff-200d-1f33e':0, '1f468-1f3fb-200d-1f373':0, '1f468-1f3fc-200d-1f373':0, '1f468-1f3fd-200d-1f373':0, '1f468-1f3fe-200d-1f373':0, '1f468-1f3ff-200d-1f373':0, '1f468-1f3fb-200d-1f37c':0, '1f468-1f3fc-200d-1f37c':0, '1f468-1f3fd-200d-1f37c':0, '1f468-1f3fe-200d-1f37c':0, '1f468-1f3ff-200d-1f37c':0, '1f468-1f3fb-200d-1f393':0, '1f468-1f3fc-200d-1f393':0, '1f468-1f3fd-200d-1f393':0, '1f468-1f3fe-200d-1f393':0, '1f468-1f3ff-200d-1f393':0, '1f468-1f3fb-200d-1f3a4':0, '1f468-1f3fc-200d-1f3a4':0, '1f468-1f3fd-200d-1f3a4':0, '1f468-1f3fe-200d-1f3a4':0, '1f468-1f3ff-200d-1f3a4':0, '1f468-1f3fb-200d-1f3a8':0, '1f468-1f3fc-200d-1f3a8':0, '1f468-1f3fd-200d-1f3a8':0, '1f468-1f3fe-200d-1f3a8':0, '1f468-1f3ff-200d-1f3a8':0, '1f468-1f3fb-200d-1f3eb':0, '1f468-1f3fc-200d-1f3eb':0, '1f468-1f3fd-200d-1f3eb':0, '1f468-1f3fe-200d-1f3eb':0, '1f468-1f3ff-200d-1f3eb':0, '1f468-1f3fb-200d-1f3ed':0, '1f468-1f3fc-200d-1f3ed':0, '1f468-1f3fd-200d-1f3ed':0, '1f468-1f3fe-200d-1f3ed':0, '1f468-1f3ff-200d-1f3ed':0, '1f468-1f3fb-200d-1f4bb':0, '1f468-1f3fc-200d-1f4bb':0, '1f468-1f3fd-200d-1f4bb':0, '1f468-1f3fe-200d-1f4bb':0, '1f468-1f3ff-200d-1f4bb':0, '1f468-1f3fb-200d-1f4bc':0, '1f468-1f3fc-200d-1f4bc':0, '1f468-1f3fd-200d-1f4bc':0, '1f468-1f3fe-200d-1f4bc':0, '1f468-1f3ff-200d-1f4bc':0, '1f468-1f3fb-200d-1f527':0, '1f468-1f3fc-200d-1f527':0, '1f468-1f3fd-200d-1f527':0, '1f468-1f3fe-200d-1f527':0, '1f468-1f3ff-200d-1f527':0, '1f468-1f3fb-200d-1f52c':0, '1f468-1f3fc-200d-1f52c':0, '1f468-1f3fd-200d-1f52c':0, '1f468-1f3fe-200d-1f52c':0, '1f468-1f3ff-200d-1f52c':0, '1f468-1f3fb-200d-1f680':0, '1f468-1f3fc-200d-1f680':0, '1f468-1f3fd-200d-1f680':0, '1f468-1f3fe-200d-1f680':0, '1f468-1f3ff-200d-1f680':0, '1f468-1f3fb-200d-1f692':0, '1f468-1f3fc-200d-1f692':0, '1f468-1f3fd-200d-1f692':0, '1f468-1f3fe-200d-1f692':0, '1f468-1f3ff-200d-1f692':0, '1f468-1f3fb-200d-1f9af':0, '1f468-1f3fc-200d-1f9af':0, '1f468-1f3fd-200d-1f9af':0, '1f468-1f3fe-200d-1f9af':0, '1f468-1f3ff-200d-1f9af':0, '1f468-1f3fb-200d-1f9b0':0, '1f468-1f3fc-200d-1f9b0':0, '1f468-1f3fd-200d-1f9b0':0, '1f468-1f3fe-200d-1f9b0':0, '1f468-1f3ff-200d-1f9b0':0, '1f468-1f3fb-200d-1f9b1':0, '1f468-1f3fc-200d-1f9b1':0, '1f468-1f3fd-200d-1f9b1':0, '1f468-1f3fe-200d-1f9b1':0, '1f468-1f3ff-200d-1f9b1':0, '1f468-1f3fb-200d-1f9b2':0, '1f468-1f3fc-200d-1f9b2':0, '1f468-1f3fd-200d-1f9b2':0, '1f468-1f3fe-200d-1f9b2':0, '1f468-1f3ff-200d-1f9b2':0, '1f468-1f3fb-200d-1f9b3':0, '1f468-1f3fc-200d-1f9b3':0, '1f468-1f3fd-200d-1f9b3':0, '1f468-1f3fe-200d-1f9b3':0, '1f468-1f3ff-200d-1f9b3':0, '1f468-1f3fb-200d-1f9bc':0, '1f468-1f3fc-200d-1f9bc':0, '1f468-1f3fd-200d-1f9bc':0, '1f468-1f3fe-200d-1f9bc':0, '1f468-1f3ff-200d-1f9bc':0, '1f468-1f3fb-200d-1f9bd':0, '1f468-1f3fc-200d-1f9bd':0, '1f468-1f3fd-200d-1f9bd':0, '1f468-1f3fe-200d-1f9bd':0, '1f468-1f3ff-200d-1f9bd':0, '1f468-1f3fb-200d-2695':0, '1f468-1f3fc-200d-2695':0, '1f468-1f3fd-200d-2695':0, '1f468-1f3fe-200d-2695':0, '1f468-1f3ff-200d-2695':0, '1f468-1f3fb-200d-2696':0, '1f468-1f3fc-200d-2696':0, '1f468-1f3fd-200d-2696':0, '1f468-1f3fe-200d-2696':0, '1f468-1f3ff-200d-2696':0, '1f468-1f3fb-200d-2708':0, '1f468-1f3fc-200d-2708':0, '1f468-1f3fd-200d-2708':0, '1f468-1f3fe-200d-2708':0, '1f468-1f3ff-200d-2708':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fb':0, '1f468-1f3fc':0, '1f468-1f3fd':0, '1f468-1f3fe':0, '1f468-1f3ff':0, '1f469-1f3fb-200d-1f33e':0, '1f469-1f3fc-200d-1f33e':0, '1f469-1f3fd-200d-1f33e':0, '1f469-1f3fe-200d-1f33e':0, '1f469-1f3ff-200d-1f33e':0, '1f469-1f3fb-200d-1f373':0, '1f469-1f3fc-200d-1f373':0, '1f469-1f3fd-200d-1f373':0, '1f469-1f3fe-200d-1f373':0, '1f469-1f3ff-200d-1f373':0, '1f469-1f3fb-200d-1f37c':0, '1f469-1f3fc-200d-1f37c':0, '1f469-1f3fd-200d-1f37c':0, '1f469-1f3fe-200d-1f37c':0, '1f469-1f3ff-200d-1f37c':0, '1f469-1f3fb-200d-1f393':0, '1f469-1f3fc-200d-1f393':0, '1f469-1f3fd-200d-1f393':0, '1f469-1f3fe-200d-1f393':0, '1f469-1f3ff-200d-1f393':0, '1f469-1f3fb-200d-1f3a4':0, '1f469-1f3fc-200d-1f3a4':0, '1f469-1f3fd-200d-1f3a4':0, '1f469-1f3fe-200d-1f3a4':0, '1f469-1f3ff-200d-1f3a4':0, '1f469-1f3fb-200d-1f3a8':0, '1f469-1f3fc-200d-1f3a8':0, '1f469-1f3fd-200d-1f3a8':0, '1f469-1f3fe-200d-1f3a8':0, '1f469-1f3ff-200d-1f3a8':0, '1f469-1f3fb-200d-1f3eb':0, '1f469-1f3fc-200d-1f3eb':0, '1f469-1f3fd-200d-1f3eb':0, '1f469-1f3fe-200d-1f3eb':0, '1f469-1f3ff-200d-1f3eb':0, '1f469-1f3fb-200d-1f3ed':0, '1f469-1f3fc-200d-1f3ed':0, '1f469-1f3fd-200d-1f3ed':0, '1f469-1f3fe-200d-1f3ed':0, '1f469-1f3ff-200d-1f3ed':0, '1f469-1f3fb-200d-1f4bb':0, '1f469-1f3fc-200d-1f4bb':0, '1f469-1f3fd-200d-1f4bb':0, '1f469-1f3fe-200d-1f4bb':0, '1f469-1f3ff-200d-1f4bb':0, '1f469-1f3fb-200d-1f4bc':0, '1f469-1f3fc-200d-1f4bc':0, '1f469-1f3fd-200d-1f4bc':0, '1f469-1f3fe-200d-1f4bc':0, '1f469-1f3ff-200d-1f4bc':0, '1f469-1f3fb-200d-1f527':0, '1f469-1f3fc-200d-1f527':0, '1f469-1f3fd-200d-1f527':0, '1f469-1f3fe-200d-1f527':0, '1f469-1f3ff-200d-1f527':0, '1f469-1f3fb-200d-1f52c':0, '1f469-1f3fc-200d-1f52c':0, '1f469-1f3fd-200d-1f52c':0, '1f469-1f3fe-200d-1f52c':0, '1f469-1f3ff-200d-1f52c':0, '1f469-1f3fb-200d-1f680':0, '1f469-1f3fc-200d-1f680':0, '1f469-1f3fd-200d-1f680':0, '1f469-1f3fe-200d-1f680':0, '1f469-1f3ff-200d-1f680':0, '1f469-1f3fb-200d-1f692':0, '1f469-1f3fc-200d-1f692':0, '1f469-1f3fd-200d-1f692':0, '1f469-1f3fe-200d-1f692':0, '1f469-1f3ff-200d-1f692':0, '1f469-1f3fb-200d-1f9af':0, '1f469-1f3fc-200d-1f9af':0, '1f469-1f3fd-200d-1f9af':0, '1f469-1f3fe-200d-1f9af':0, '1f469-1f3ff-200d-1f9af':0, '1f469-1f3fb-200d-1f9b0':0, '1f469-1f3fc-200d-1f9b0':0, '1f469-1f3fd-200d-1f9b0':0, '1f469-1f3fe-200d-1f9b0':0, '1f469-1f3ff-200d-1f9b0':0, '1f469-1f3fb-200d-1f9b1':0, '1f469-1f3fc-200d-1f9b1':0, '1f469-1f3fd-200d-1f9b1':0, '1f469-1f3fe-200d-1f9b1':0, '1f469-1f3ff-200d-1f9b1':0, '1f469-1f3fb-200d-1f9b2':0, '1f469-1f3fc-200d-1f9b2':0, '1f469-1f3fd-200d-1f9b2':0, '1f469-1f3fe-200d-1f9b2':0, '1f469-1f3ff-200d-1f9b2':0, '1f469-1f3fb-200d-1f9b3':0, '1f469-1f3fc-200d-1f9b3':0, '1f469-1f3fd-200d-1f9b3':0, '1f469-1f3fe-200d-1f9b3':0, '1f469-1f3ff-200d-1f9b3':0, '1f469-1f3fb-200d-1f9bc':0, '1f469-1f3fc-200d-1f9bc':0, '1f469-1f3fd-200d-1f9bc':0, '1f469-1f3fe-200d-1f9bc':0, '1f469-1f3ff-200d-1f9bc':0, '1f469-1f3fb-200d-1f9bd':0, '1f469-1f3fc-200d-1f9bd':0, '1f469-1f3fd-200d-1f9bd':0, '1f469-1f3fe-200d-1f9bd':0, '1f469-1f3ff-200d-1f9bd':0, '1f469-1f3fb-200d-2695':0, '1f469-1f3fc-200d-2695':0, '1f469-1f3fd-200d-2695':0, '1f469-1f3fe-200d-2695':0, '1f469-1f3ff-200d-2695':0, '1f469-1f3fb-200d-2696':0, '1f469-1f3fc-200d-2696':0, '1f469-1f3fd-200d-2696':0, '1f469-1f3fe-200d-2696':0, '1f469-1f3ff-200d-2696':0, '1f469-1f3fb-200d-2708':0, '1f469-1f3fc-200d-2708':0, '1f469-1f3fd-200d-2708':0, '1f469-1f3fe-200d-2708':0, '1f469-1f3ff-200d-2708':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fb':0, '1f469-1f3fc':0, '1f469-1f3fd':0, '1f469-1f3fe':0, '1f469-1f3ff':0, '1f46b-1f3fb':0, '1f46b-1f3fc':0, '1f46b-1f3fd':0, '1f46b-1f3fe':0, '1f46b-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46c-1f3fb':0, '1f46c-1f3fc':0, '1f46c-1f3fd':0, '1f46c-1f3fe':0, '1f46c-1f3ff':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46d-1f3fb':0, '1f46d-1f3fc':0, '1f46d-1f3fd':0, '1f46d-1f3fe':0, '1f46d-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe':0, '1f46e-1f3fb-200d-2640':0, '1f46e-1f3fc-200d-2640':0, '1f46e-1f3fd-200d-2640':0, '1f46e-1f3fe-200d-2640':0, '1f46e-1f3ff-200d-2640':0, '1f46e-1f3fb-200d-2642':0, '1f46e-1f3fc-200d-2642':0, '1f46e-1f3fd-200d-2642':0, '1f46e-1f3fe-200d-2642':0, '1f46e-1f3ff-200d-2642':0, '1f46e-1f3fb':0, '1f46e-1f3fc':0, '1f46e-1f3fd':0, '1f46e-1f3fe':0, '1f46e-1f3ff':0, '1f470-1f3fb-200d-2640':0, '1f470-1f3fc-200d-2640':0, '1f470-1f3fd-200d-2640':0, '1f470-1f3fe-200d-2640':0, '1f470-1f3ff-200d-2640':0, '1f470-1f3fb-200d-2642':0, '1f470-1f3fc-200d-2642':0, '1f470-1f3fd-200d-2642':0, '1f470-1f3fe-200d-2642':0, '1f470-1f3ff-200d-2642':0, '1f470-1f3fb':0, '1f470-1f3fc':0, '1f470-1f3fd':0, '1f470-1f3fe':0, '1f470-1f3ff':0, '1f471-1f3fb-200d-2640':0, '1f471-1f3fc-200d-2640':0, '1f471-1f3fd-200d-2640':0, '1f471-1f3fe-200d-2640':0, '1f471-1f3ff-200d-2640':0, '1f471-1f3fb-200d-2642':0, '1f471-1f3fc-200d-2642':0, '1f471-1f3fd-200d-2642':0, '1f471-1f3fe-200d-2642':0, '1f471-1f3ff-200d-2642':0, '1f471-1f3fb':0, '1f471-1f3fc':0, '1f471-1f3fd':0, '1f471-1f3fe':0, '1f471-1f3ff':0, '1f472-1f3fb':0, '1f472-1f3fc':0, '1f472-1f3fd':0, '1f472-1f3fe':0, '1f472-1f3ff':0, '1f473-1f3fb-200d-2640':0, '1f473-1f3fc-200d-2640':0, '1f473-1f3fd-200d-2640':0, '1f473-1f3fe-200d-2640':0, '1f473-1f3ff-200d-2640':0, '1f473-1f3fb-200d-2642':0, '1f473-1f3fc-200d-2642':0, '1f473-1f3fd-200d-2642':0, '1f473-1f3fe-200d-2642':0, '1f473-1f3ff-200d-2642':0, '1f473-1f3fb':0, '1f473-1f3fc':0, '1f473-1f3fd':0, '1f473-1f3fe':0, '1f473-1f3ff':0, '1f474-1f3fb':0, '1f474-1f3fc':0, '1f474-1f3fd':0, '1f474-1f3fe':0, '1f474-1f3ff':0, '1f475-1f3fb':0, '1f475-1f3fc':0, '1f475-1f3fd':0, '1f475-1f3fe':0, '1f475-1f3ff':0, '1f476-1f3fb':0, '1f476-1f3fc':0, '1f476-1f3fd':0, '1f476-1f3fe':0, '1f476-1f3ff':0, '1f477-1f3fb-200d-2640':0, '1f477-1f3fc-200d-2640':0, '1f477-1f3fd-200d-2640':0, '1f477-1f3fe-200d-2640':0, '1f477-1f3ff-200d-2640':0, '1f477-1f3fb-200d-2642':0, '1f477-1f3fc-200d-2642':0, '1f477-1f3fd-200d-2642':0, '1f477-1f3fe-200d-2642':0, '1f477-1f3ff-200d-2642':0, '1f477-1f3fb':0, '1f477-1f3fc':0, '1f477-1f3fd':0, '1f477-1f3fe':0, '1f477-1f3ff':0, '1f478-1f3fb':0, '1f478-1f3fc':0, '1f478-1f3fd':0, '1f478-1f3fe':0, '1f478-1f3ff':0, '1f47c-1f3fb':0, '1f47c-1f3fc':0, '1f47c-1f3fd':0, '1f47c-1f3fe':0, '1f47c-1f3ff':0, '1f481-1f3fb-200d-2640':0, '1f481-1f3fc-200d-2640':0, '1f481-1f3fd-200d-2640':0, '1f481-1f3fe-200d-2640':0, '1f481-1f3ff-200d-2640':0, '1f481-1f3fb-200d-2642':0, '1f481-1f3fc-200d-2642':0, '1f481-1f3fd-200d-2642':0, '1f481-1f3fe-200d-2642':0, '1f481-1f3ff-200d-2642':0, '1f481-1f3fb':0, '1f481-1f3fc':0, '1f481-1f3fd':0, '1f481-1f3fe':0, '1f481-1f3ff':0, '1f482-1f3fb-200d-2640':0, '1f482-1f3fc-200d-2640':0, '1f482-1f3fd-200d-2640':0, '1f482-1f3fe-200d-2640':0, '1f482-1f3ff-200d-2640':0, '1f482-1f3fb-200d-2642':0, '1f482-1f3fc-200d-2642':0, '1f482-1f3fd-200d-2642':0, '1f482-1f3fe-200d-2642':0, '1f482-1f3ff-200d-2642':0, '1f482-1f3fb':0, '1f482-1f3fc':0, '1f482-1f3fd':0, '1f482-1f3fe':0, '1f482-1f3ff':0, '1f483-1f3fb':0, '1f483-1f3fc':0, '1f483-1f3fd':0, '1f483-1f3fe':0, '1f483-1f3ff':0, '1f485-1f3fb':0, '1f485-1f3fc':0, '1f485-1f3fd':0, '1f485-1f3fe':0, '1f485-1f3ff':0, '1f486-1f3fb-200d-2640':0, '1f486-1f3fc-200d-2640':0, '1f486-1f3fd-200d-2640':0, '1f486-1f3fe-200d-2640':0, '1f486-1f3ff-200d-2640':0, '1f486-1f3fb-200d-2642':0, '1f486-1f3fc-200d-2642':0, '1f486-1f3fd-200d-2642':0, '1f486-1f3fe-200d-2642':0, '1f486-1f3ff-200d-2642':0, '1f486-1f3fb':0, '1f486-1f3fc':0, '1f486-1f3fd':0, '1f486-1f3fe':0, '1f486-1f3ff':0, '1f487-1f3fb-200d-2640':0, '1f487-1f3fc-200d-2640':0, '1f487-1f3fd-200d-2640':0, '1f487-1f3fe-200d-2640':0, '1f487-1f3ff-200d-2640':0, '1f487-1f3fb-200d-2642':0, '1f487-1f3fc-200d-2642':0, '1f487-1f3fd-200d-2642':0, '1f487-1f3fe-200d-2642':0, '1f487-1f3ff-200d-2642':0, '1f487-1f3fb':0, '1f487-1f3fc':0, '1f487-1f3fd':0, '1f487-1f3fe':0, '1f487-1f3ff':0, '1f48f-1f3fb':0, '1f48f-1f3fc':0, '1f48f-1f3fd':0, '1f48f-1f3fe':0, '1f48f-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f491-1f3fb':0, '1f491-1f3fc':0, '1f491-1f3fd':0, '1f491-1f3fe':0, '1f491-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fe':0, '1f4aa-1f3fb':0, '1f4aa-1f3fc':0, '1f4aa-1f3fd':0, '1f4aa-1f3fe':0, '1f4aa-1f3ff':0, '1f574-1f3fb':0, '1f574-1f3fc':0, '1f574-1f3fd':0, '1f574-1f3fe':0, '1f574-1f3ff':0, '1f575-1f3fb-200d-2640':0, '1f575-1f3fc-200d-2640':0, '1f575-1f3fd-200d-2640':0, '1f575-1f3fe-200d-2640':0, '1f575-1f3ff-200d-2640':0, '1f575-1f3fb-200d-2642':0, '1f575-1f3fc-200d-2642':0, '1f575-1f3fd-200d-2642':0, '1f575-1f3fe-200d-2642':0, '1f575-1f3ff-200d-2642':0, '1f575-1f3fb':0, '1f575-1f3fc':0, '1f575-1f3fd':0, '1f575-1f3fe':0, '1f575-1f3ff':0, '1f57a-1f3fb':0, '1f57a-1f3fc':0, '1f57a-1f3fd':0, '1f57a-1f3fe':0, '1f57a-1f3ff':0, '1f590-1f3fb':0, '1f590-1f3fc':0, '1f590-1f3fd':0, '1f590-1f3fe':0, '1f590-1f3ff':0, '1f595-1f3fb':0, '1f595-1f3fc':0, '1f595-1f3fd':0, '1f595-1f3fe':0, '1f595-1f3ff':0, '1f596-1f3fb':0, '1f596-1f3fc':0, '1f596-1f3fd':0, '1f596-1f3fe':0, '1f596-1f3ff':0, '1f645-1f3fb-200d-2640':0, '1f645-1f3fc-200d-2640':0, '1f645-1f3fd-200d-2640':0, '1f645-1f3fe-200d-2640':0, '1f645-1f3ff-200d-2640':0, '1f645-1f3fb-200d-2642':0, '1f645-1f3fc-200d-2642':0, '1f645-1f3fd-200d-2642':0, '1f645-1f3fe-200d-2642':0, '1f645-1f3ff-200d-2642':0, '1f645-1f3fb':0, '1f645-1f3fc':0, '1f645-1f3fd':0, '1f645-1f3fe':0, '1f645-1f3ff':0, '1f646-1f3fb-200d-2640':0, '1f646-1f3fc-200d-2640':0, '1f646-1f3fd-200d-2640':0, '1f646-1f3fe-200d-2640':0, '1f646-1f3ff-200d-2640':0, '1f646-1f3fb-200d-2642':0, '1f646-1f3fc-200d-2642':0, '1f646-1f3fd-200d-2642':0, '1f646-1f3fe-200d-2642':0, '1f646-1f3ff-200d-2642':0, '1f646-1f3fb':0, '1f646-1f3fc':0, '1f646-1f3fd':0, '1f646-1f3fe':0, '1f646-1f3ff':0, '1f647-1f3fb-200d-2640':0, '1f647-1f3fc-200d-2640':0, '1f647-1f3fd-200d-2640':0, '1f647-1f3fe-200d-2640':0, '1f647-1f3ff-200d-2640':0, '1f647-1f3fb-200d-2642':0, '1f647-1f3fc-200d-2642':0, '1f647-1f3fd-200d-2642':0, '1f647-1f3fe-200d-2642':0, '1f647-1f3ff-200d-2642':0, '1f647-1f3fb':0, '1f647-1f3fc':0, '1f647-1f3fd':0, '1f647-1f3fe':0, '1f647-1f3ff':0, '1f64b-1f3fb-200d-2640':0, '1f64b-1f3fc-200d-2640':0, '1f64b-1f3fd-200d-2640':0, '1f64b-1f3fe-200d-2640':0, '1f64b-1f3ff-200d-2640':0, '1f64b-1f3fb-200d-2642':0, '1f64b-1f3fc-200d-2642':0, '1f64b-1f3fd-200d-2642':0, '1f64b-1f3fe-200d-2642':0, '1f64b-1f3ff-200d-2642':0, '1f64b-1f3fb':0, '1f64b-1f3fc':0, '1f64b-1f3fd':0, '1f64b-1f3fe':0, '1f64b-1f3ff':0, '1f64c-1f3fb':0, '1f64c-1f3fc':0, '1f64c-1f3fd':0, '1f64c-1f3fe':0, '1f64c-1f3ff':0, '1f64d-1f3fb-200d-2640':0, '1f64d-1f3fc-200d-2640':0, '1f64d-1f3fd-200d-2640':0, '1f64d-1f3fe-200d-2640':0, '1f64d-1f3ff-200d-2640':0, '1f64d-1f3fb-200d-2642':0, '1f64d-1f3fc-200d-2642':0, '1f64d-1f3fd-200d-2642':0, '1f64d-1f3fe-200d-2642':0, '1f64d-1f3ff-200d-2642':0, '1f64d-1f3fb':0, '1f64d-1f3fc':0, '1f64d-1f3fd':0, '1f64d-1f3fe':0, '1f64d-1f3ff':0, '1f64e-1f3fb-200d-2640':0, '1f64e-1f3fc-200d-2640':0, '1f64e-1f3fd-200d-2640':0, '1f64e-1f3fe-200d-2640':0, '1f64e-1f3ff-200d-2640':0, '1f64e-1f3fb-200d-2642':0, '1f64e-1f3fc-200d-2642':0, '1f64e-1f3fd-200d-2642':0, '1f64e-1f3fe-200d-2642':0, '1f64e-1f3ff-200d-2642':0, '1f64e-1f3fb':0, '1f64e-1f3fc':0, '1f64e-1f3fd':0, '1f64e-1f3fe':0, '1f64e-1f3ff':0, '1f64f-1f3fb':0, '1f64f-1f3fc':0, '1f64f-1f3fd':0, '1f64f-1f3fe':0, '1f64f-1f3ff':0, '1f6a3-1f3fb-200d-2640':0, '1f6a3-1f3fc-200d-2640':0, '1f6a3-1f3fd-200d-2640':0, '1f6a3-1f3fe-200d-2640':0, '1f6a3-1f3ff-200d-2640':0, '1f6a3-1f3fb-200d-2642':0, '1f6a3-1f3fc-200d-2642':0, '1f6a3-1f3fd-200d-2642':0, '1f6a3-1f3fe-200d-2642':0, '1f6a3-1f3ff-200d-2642':0, '1f6a3-1f3fb':0, '1f6a3-1f3fc':0, '1f6a3-1f3fd':0, '1f6a3-1f3fe':0, '1f6a3-1f3ff':0, '1f6b4-1f3fb-200d-2640':0, '1f6b4-1f3fc-200d-2640':0, '1f6b4-1f3fd-200d-2640':0, '1f6b4-1f3fe-200d-2640':0, '1f6b4-1f3ff-200d-2640':0, '1f6b4-1f3fb-200d-2642':0, '1f6b4-1f3fc-200d-2642':0, '1f6b4-1f3fd-200d-2642':0, '1f6b4-1f3fe-200d-2642':0, '1f6b4-1f3ff-200d-2642':0, '1f6b4-1f3fb':0, '1f6b4-1f3fc':0, '1f6b4-1f3fd':0, '1f6b4-1f3fe':0, '1f6b4-1f3ff':0, '1f6b5-1f3fb-200d-2640':0, '1f6b5-1f3fc-200d-2640':0, '1f6b5-1f3fd-200d-2640':0, '1f6b5-1f3fe-200d-2640':0, '1f6b5-1f3ff-200d-2640':0, '1f6b5-1f3fb-200d-2642':0, '1f6b5-1f3fc-200d-2642':0, '1f6b5-1f3fd-200d-2642':0, '1f6b5-1f3fe-200d-2642':0, '1f6b5-1f3ff-200d-2642':0, '1f6b5-1f3fb':0, '1f6b5-1f3fc':0, '1f6b5-1f3fd':0, '1f6b5-1f3fe':0, '1f6b5-1f3ff':0, '1f6b6-1f3fb-200d-2640':0, '1f6b6-1f3fc-200d-2640':0, '1f6b6-1f3fd-200d-2640':0, '1f6b6-1f3fe-200d-2640':0, '1f6b6-1f3ff-200d-2640':0, '1f6b6-1f3fb-200d-2642':0, '1f6b6-1f3fc-200d-2642':0, '1f6b6-1f3fd-200d-2642':0, '1f6b6-1f3fe-200d-2642':0, '1f6b6-1f3ff-200d-2642':0, '1f6b6-1f3fb':0, '1f6b6-1f3fc':0, '1f6b6-1f3fd':0, '1f6b6-1f3fe':0, '1f6b6-1f3ff':0, '1f6c0-1f3fb':0, '1f6c0-1f3fc':0, '1f6c0-1f3fd':0, '1f6c0-1f3fe':0, '1f6c0-1f3ff':0, '1f6cc-1f3fb':0, '1f6cc-1f3fc':0, '1f6cc-1f3fd':0, '1f6cc-1f3fe':0, '1f6cc-1f3ff':0, '1f90c-1f3fb':0, '1f90c-1f3fc':0, '1f90c-1f3fd':0, '1f90c-1f3fe':0, '1f90c-1f3ff':0, '1f90f-1f3fb':0, '1f90f-1f3fc':0, '1f90f-1f3fd':0, '1f90f-1f3fe':0, '1f90f-1f3ff':0, '1f918-1f3fb':0, '1f918-1f3fc':0, '1f918-1f3fd':0, '1f918-1f3fe':0, '1f918-1f3ff':0, '1f919-1f3fb':0, '1f919-1f3fc':0, '1f919-1f3fd':0, '1f919-1f3fe':0, '1f919-1f3ff':0, '1f91a-1f3fb':0, '1f91a-1f3fc':0, '1f91a-1f3fd':0, '1f91a-1f3fe':0, '1f91a-1f3ff':0, '1f91b-1f3fb':0, '1f91b-1f3fc':0, '1f91b-1f3fd':0, '1f91b-1f3fe':0, '1f91b-1f3ff':0, '1f91c-1f3fb':0, '1f91c-1f3fc':0, '1f91c-1f3fd':0, '1f91c-1f3fe':0, '1f91c-1f3ff':0, '1f91d-1f3fb':0, '1f91d-1f3fc':0, '1f91d-1f3fd':0, '1f91d-1f3fe':0, '1f91d-1f3ff':0, '1f91e-1f3fb':0, '1f91e-1f3fc':0, '1f91e-1f3fd':0, '1f91e-1f3fe':0, '1f91e-1f3ff':0, '1f91f-1f3fb':0, '1f91f-1f3fc':0, '1f91f-1f3fd':0, '1f91f-1f3fe':0, '1f91f-1f3ff':0, '1f926-1f3fb-200d-2640':0, '1f926-1f3fc-200d-2640':0, '1f926-1f3fd-200d-2640':0, '1f926-1f3fe-200d-2640':0, '1f926-1f3ff-200d-2640':0, '1f926-1f3fb-200d-2642':0, '1f926-1f3fc-200d-2642':0, '1f926-1f3fd-200d-2642':0, '1f926-1f3fe-200d-2642':0, '1f926-1f3ff-200d-2642':0, '1f926-1f3fb':0, '1f926-1f3fc':0, '1f926-1f3fd':0, '1f926-1f3fe':0, '1f926-1f3ff':0, '1f930-1f3fb':0, '1f930-1f3fc':0, '1f930-1f3fd':0, '1f930-1f3fe':0, '1f930-1f3ff':0, '1f931-1f3fb':0, '1f931-1f3fc':0, '1f931-1f3fd':0, '1f931-1f3fe':0, '1f931-1f3ff':0, '1f932-1f3fb':0, '1f932-1f3fc':0, '1f932-1f3fd':0, '1f932-1f3fe':0, '1f932-1f3ff':0, '1f933-1f3fb':0, '1f933-1f3fc':0, '1f933-1f3fd':0, '1f933-1f3fe':0, '1f933-1f3ff':0, '1f934-1f3fb':0, '1f934-1f3fc':0, '1f934-1f3fd':0, '1f934-1f3fe':0, '1f934-1f3ff':0, '1f935-1f3fb-200d-2640':0, '1f935-1f3fc-200d-2640':0, '1f935-1f3fd-200d-2640':0, '1f935-1f3fe-200d-2640':0, '1f935-1f3ff-200d-2640':0, '1f935-1f3fb-200d-2642':0, '1f935-1f3fc-200d-2642':0, '1f935-1f3fd-200d-2642':0, '1f935-1f3fe-200d-2642':0, '1f935-1f3ff-200d-2642':0, '1f935-1f3fb':0, '1f935-1f3fc':0, '1f935-1f3fd':0, '1f935-1f3fe':0, '1f935-1f3ff':0, '1f936-1f3fb':0, '1f936-1f3fc':0, '1f936-1f3fd':0, '1f936-1f3fe':0, '1f936-1f3ff':0, '1f937-1f3fb-200d-2640':0, '1f937-1f3fc-200d-2640':0, '1f937-1f3fd-200d-2640':0, '1f937-1f3fe-200d-2640':0, '1f937-1f3ff-200d-2640':0, '1f937-1f3fb-200d-2642':0, '1f937-1f3fc-200d-2642':0, '1f937-1f3fd-200d-2642':0, '1f937-1f3fe-200d-2642':0, '1f937-1f3ff-200d-2642':0, '1f937-1f3fb':0, '1f937-1f3fc':0, '1f937-1f3fd':0, '1f937-1f3fe':0, '1f937-1f3ff':0, '1f938-1f3fb-200d-2640':0, '1f938-1f3fc-200d-2640':0, '1f938-1f3fd-200d-2640':0, '1f938-1f3fe-200d-2640':0, '1f938-1f3ff-200d-2640':0, '1f938-1f3fb-200d-2642':0, '1f938-1f3fc-200d-2642':0, '1f938-1f3fd-200d-2642':0, '1f938-1f3fe-200d-2642':0, '1f938-1f3ff-200d-2642':0, '1f938-1f3fb':0, '1f938-1f3fc':0, '1f938-1f3fd':0, '1f938-1f3fe':0, '1f938-1f3ff':0, '1f939-1f3fb-200d-2640':0, '1f939-1f3fc-200d-2640':0, '1f939-1f3fd-200d-2640':0, '1f939-1f3fe-200d-2640':0, '1f939-1f3ff-200d-2640':0, '1f939-1f3fb-200d-2642':0, '1f939-1f3fc-200d-2642':0, '1f939-1f3fd-200d-2642':0, '1f939-1f3fe-200d-2642':0, '1f939-1f3ff-200d-2642':0, '1f939-1f3fb':0, '1f939-1f3fc':0, '1f939-1f3fd':0, '1f939-1f3fe':0, '1f939-1f3ff':0, '1f93d-1f3fb-200d-2640':0, '1f93d-1f3fc-200d-2640':0, '1f93d-1f3fd-200d-2640':0, '1f93d-1f3fe-200d-2640':0, '1f93d-1f3ff-200d-2640':0, '1f93d-1f3fb-200d-2642':0, '1f93d-1f3fc-200d-2642':0, '1f93d-1f3fd-200d-2642':0, '1f93d-1f3fe-200d-2642':0, '1f93d-1f3ff-200d-2642':0, '1f93d-1f3fb':0, '1f93d-1f3fc':0, '1f93d-1f3fd':0, '1f93d-1f3fe':0, '1f93d-1f3ff':0, '1f93e-1f3fb-200d-2640':0, '1f93e-1f3fc-200d-2640':0, '1f93e-1f3fd-200d-2640':0, '1f93e-1f3fe-200d-2640':0, '1f93e-1f3ff-200d-2640':0, '1f93e-1f3fb-200d-2642':0, '1f93e-1f3fc-200d-2642':0, '1f93e-1f3fd-200d-2642':0, '1f93e-1f3fe-200d-2642':0, '1f93e-1f3ff-200d-2642':0, '1f93e-1f3fb':0, '1f93e-1f3fc':0, '1f93e-1f3fd':0, '1f93e-1f3fe':0, '1f93e-1f3ff':0, '1f977-1f3fb':0, '1f977-1f3fc':0, '1f977-1f3fd':0, '1f977-1f3fe':0, '1f977-1f3ff':0, '1f9b5-1f3fb':0, '1f9b5-1f3fc':0, '1f9b5-1f3fd':0, '1f9b5-1f3fe':0, '1f9b5-1f3ff':0, '1f9b6-1f3fb':0, '1f9b6-1f3fc':0, '1f9b6-1f3fd':0, '1f9b6-1f3fe':0, '1f9b6-1f3ff':0, '1f9b8-1f3fb-200d-2640':0, '1f9b8-1f3fc-200d-2640':0, '1f9b8-1f3fd-200d-2640':0, '1f9b8-1f3fe-200d-2640':0, '1f9b8-1f3ff-200d-2640':0, '1f9b8-1f3fb-200d-2642':0, '1f9b8-1f3fc-200d-2642':0, '1f9b8-1f3fd-200d-2642':0, '1f9b8-1f3fe-200d-2642':0, '1f9b8-1f3ff-200d-2642':0, '1f9b8-1f3fb':0, '1f9b8-1f3fc':0, '1f9b8-1f3fd':0, '1f9b8-1f3fe':0, '1f9b8-1f3ff':0, '1f9b9-1f3fb-200d-2640':0, '1f9b9-1f3fc-200d-2640':0, '1f9b9-1f3fd-200d-2640':0, '1f9b9-1f3fe-200d-2640':0, '1f9b9-1f3ff-200d-2640':0, '1f9b9-1f3fb-200d-2642':0, '1f9b9-1f3fc-200d-2642':0, '1f9b9-1f3fd-200d-2642':0, '1f9b9-1f3fe-200d-2642':0, '1f9b9-1f3ff-200d-2642':0, '1f9b9-1f3fb':0, '1f9b9-1f3fc':0, '1f9b9-1f3fd':0, '1f9b9-1f3fe':0, '1f9b9-1f3ff':0, '1f9bb-1f3fb':0, '1f9bb-1f3fc':0, '1f9bb-1f3fd':0, '1f9bb-1f3fe':0, '1f9bb-1f3ff':0, '1f9cd-1f3fb-200d-2640':0, '1f9cd-1f3fc-200d-2640':0, '1f9cd-1f3fd-200d-2640':0, '1f9cd-1f3fe-200d-2640':0, '1f9cd-1f3ff-200d-2640':0, '1f9cd-1f3fb-200d-2642':0, '1f9cd-1f3fc-200d-2642':0, '1f9cd-1f3fd-200d-2642':0, '1f9cd-1f3fe-200d-2642':0, '1f9cd-1f3ff-200d-2642':0, '1f9cd-1f3fb':0, '1f9cd-1f3fc':0, '1f9cd-1f3fd':0, '1f9cd-1f3fe':0, '1f9cd-1f3ff':0, '1f9ce-1f3fb-200d-2640':0, '1f9ce-1f3fc-200d-2640':0, '1f9ce-1f3fd-200d-2640':0, '1f9ce-1f3fe-200d-2640':0, '1f9ce-1f3ff-200d-2640':0, '1f9ce-1f3fb-200d-2642':0, '1f9ce-1f3fc-200d-2642':0, '1f9ce-1f3fd-200d-2642':0, '1f9ce-1f3fe-200d-2642':0, '1f9ce-1f3ff-200d-2642':0, '1f9ce-1f3fb':0, '1f9ce-1f3fc':0, '1f9ce-1f3fd':0, '1f9ce-1f3fe':0, '1f9ce-1f3ff':0, '1f9cf-1f3fb-200d-2640':0, '1f9cf-1f3fc-200d-2640':0, '1f9cf-1f3fd-200d-2640':0, '1f9cf-1f3fe-200d-2640':0, '1f9cf-1f3ff-200d-2640':0, '1f9cf-1f3fb-200d-2642':0, '1f9cf-1f3fc-200d-2642':0, '1f9cf-1f3fd-200d-2642':0, '1f9cf-1f3fe-200d-2642':0, '1f9cf-1f3ff-200d-2642':0, '1f9cf-1f3fb':0, '1f9cf-1f3fc':0, '1f9cf-1f3fd':0, '1f9cf-1f3fe':0, '1f9cf-1f3ff':0, '1f9d1-1f3fb-200d-1f33e':0, '1f9d1-1f3fc-200d-1f33e':0, '1f9d1-1f3fd-200d-1f33e':0, '1f9d1-1f3fe-200d-1f33e':0, '1f9d1-1f3ff-200d-1f33e':0, '1f9d1-1f3fb-200d-1f373':0, '1f9d1-1f3fc-200d-1f373':0, '1f9d1-1f3fd-200d-1f373':0, '1f9d1-1f3fe-200d-1f373':0, '1f9d1-1f3ff-200d-1f373':0, '1f9d1-1f3fb-200d-1f37c':0, '1f9d1-1f3fc-200d-1f37c':0, '1f9d1-1f3fd-200d-1f37c':0, '1f9d1-1f3fe-200d-1f37c':0, '1f9d1-1f3ff-200d-1f37c':0, '1f9d1-1f3fb-200d-1f384':0, '1f9d1-1f3fc-200d-1f384':0, '1f9d1-1f3fd-200d-1f384':0, '1f9d1-1f3fe-200d-1f384':0, '1f9d1-1f3ff-200d-1f384':0, '1f9d1-1f3fb-200d-1f393':0, '1f9d1-1f3fc-200d-1f393':0, '1f9d1-1f3fd-200d-1f393':0, '1f9d1-1f3fe-200d-1f393':0, '1f9d1-1f3ff-200d-1f393':0, '1f9d1-1f3fb-200d-1f3a4':0, '1f9d1-1f3fc-200d-1f3a4':0, '1f9d1-1f3fd-200d-1f3a4':0, '1f9d1-1f3fe-200d-1f3a4':0, '1f9d1-1f3ff-200d-1f3a4':0, '1f9d1-1f3fb-200d-1f3a8':0, '1f9d1-1f3fc-200d-1f3a8':0, '1f9d1-1f3fd-200d-1f3a8':0, '1f9d1-1f3fe-200d-1f3a8':0, '1f9d1-1f3ff-200d-1f3a8':0, '1f9d1-1f3fb-200d-1f3eb':0, '1f9d1-1f3fc-200d-1f3eb':0, '1f9d1-1f3fd-200d-1f3eb':0, '1f9d1-1f3fe-200d-1f3eb':0, '1f9d1-1f3ff-200d-1f3eb':0, '1f9d1-1f3fb-200d-1f3ed':0, '1f9d1-1f3fc-200d-1f3ed':0, '1f9d1-1f3fd-200d-1f3ed':0, '1f9d1-1f3fe-200d-1f3ed':0, '1f9d1-1f3ff-200d-1f3ed':0, '1f9d1-1f3fb-200d-1f4bb':0, '1f9d1-1f3fc-200d-1f4bb':0, '1f9d1-1f3fd-200d-1f4bb':0, '1f9d1-1f3fe-200d-1f4bb':0, '1f9d1-1f3ff-200d-1f4bb':0, '1f9d1-1f3fb-200d-1f4bc':0, '1f9d1-1f3fc-200d-1f4bc':0, '1f9d1-1f3fd-200d-1f4bc':0, '1f9d1-1f3fe-200d-1f4bc':0, '1f9d1-1f3ff-200d-1f4bc':0, '1f9d1-1f3fb-200d-1f527':0, '1f9d1-1f3fc-200d-1f527':0, '1f9d1-1f3fd-200d-1f527':0, '1f9d1-1f3fe-200d-1f527':0, '1f9d1-1f3ff-200d-1f527':0, '1f9d1-1f3fb-200d-1f52c':0, '1f9d1-1f3fc-200d-1f52c':0, '1f9d1-1f3fd-200d-1f52c':0, '1f9d1-1f3fe-200d-1f52c':0, '1f9d1-1f3ff-200d-1f52c':0, '1f9d1-1f3fb-200d-1f680':0, '1f9d1-1f3fc-200d-1f680':0, '1f9d1-1f3fd-200d-1f680':0, '1f9d1-1f3fe-200d-1f680':0, '1f9d1-1f3ff-200d-1f680':0, '1f9d1-1f3fb-200d-1f692':0, '1f9d1-1f3fc-200d-1f692':0, '1f9d1-1f3fd-200d-1f692':0, '1f9d1-1f3fe-200d-1f692':0, '1f9d1-1f3ff-200d-1f692':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fb-200d-1f9af':0, '1f9d1-1f3fc-200d-1f9af':0, '1f9d1-1f3fd-200d-1f9af':0, '1f9d1-1f3fe-200d-1f9af':0, '1f9d1-1f3ff-200d-1f9af':0, '1f9d1-1f3fb-200d-1f9b0':0, '1f9d1-1f3fc-200d-1f9b0':0, '1f9d1-1f3fd-200d-1f9b0':0, '1f9d1-1f3fe-200d-1f9b0':0, '1f9d1-1f3ff-200d-1f9b0':0, '1f9d1-1f3fb-200d-1f9b1':0, '1f9d1-1f3fc-200d-1f9b1':0, '1f9d1-1f3fd-200d-1f9b1':0, '1f9d1-1f3fe-200d-1f9b1':0, '1f9d1-1f3ff-200d-1f9b1':0, '1f9d1-1f3fb-200d-1f9b2':0, '1f9d1-1f3fc-200d-1f9b2':0, '1f9d1-1f3fd-200d-1f9b2':0, '1f9d1-1f3fe-200d-1f9b2':0, '1f9d1-1f3ff-200d-1f9b2':0, '1f9d1-1f3fb-200d-1f9b3':0, '1f9d1-1f3fc-200d-1f9b3':0, '1f9d1-1f3fd-200d-1f9b3':0, '1f9d1-1f3fe-200d-1f9b3':0, '1f9d1-1f3ff-200d-1f9b3':0, '1f9d1-1f3fb-200d-1f9bc':0, '1f9d1-1f3fc-200d-1f9bc':0, '1f9d1-1f3fd-200d-1f9bc':0, '1f9d1-1f3fe-200d-1f9bc':0, '1f9d1-1f3ff-200d-1f9bc':0, '1f9d1-1f3fb-200d-1f9bd':0, '1f9d1-1f3fc-200d-1f9bd':0, '1f9d1-1f3fd-200d-1f9bd':0, '1f9d1-1f3fe-200d-1f9bd':0, '1f9d1-1f3ff-200d-1f9bd':0, '1f9d1-1f3fb-200d-2695':0, '1f9d1-1f3fc-200d-2695':0, '1f9d1-1f3fd-200d-2695':0, '1f9d1-1f3fe-200d-2695':0, '1f9d1-1f3ff-200d-2695':0, '1f9d1-1f3fb-200d-2696':0, '1f9d1-1f3fc-200d-2696':0, '1f9d1-1f3fd-200d-2696':0, '1f9d1-1f3fe-200d-2696':0, '1f9d1-1f3ff-200d-2696':0, '1f9d1-1f3fb-200d-2708':0, '1f9d1-1f3fc-200d-2708':0, '1f9d1-1f3fd-200d-2708':0, '1f9d1-1f3fe-200d-2708':0, '1f9d1-1f3ff-200d-2708':0, '1f9d1-1f3fb':0, '1f9d1-1f3fc':0, '1f9d1-1f3fd':0, '1f9d1-1f3fe':0, '1f9d1-1f3ff':0, '1f9d2-1f3fb':0, '1f9d2-1f3fc':0, '1f9d2-1f3fd':0, '1f9d2-1f3fe':0, '1f9d2-1f3ff':0, '1f9d3-1f3fb':0, '1f9d3-1f3fc':0, '1f9d3-1f3fd':0, '1f9d3-1f3fe':0, '1f9d3-1f3ff':0, '1f9d4-1f3fb-200d-2640':0, '1f9d4-1f3fc-200d-2640':0, '1f9d4-1f3fd-200d-2640':0, '1f9d4-1f3fe-200d-2640':0, '1f9d4-1f3ff-200d-2640':0, '1f9d4-1f3fb-200d-2642':0, '1f9d4-1f3fc-200d-2642':0, '1f9d4-1f3fd-200d-2642':0, '1f9d4-1f3fe-200d-2642':0, '1f9d4-1f3ff-200d-2642':0, '1f9d4-1f3fb':0, '1f9d4-1f3fc':0, '1f9d4-1f3fd':0, '1f9d4-1f3fe':0, '1f9d4-1f3ff':0, '1f9d5-1f3fb':0, '1f9d5-1f3fc':0, '1f9d5-1f3fd':0, '1f9d5-1f3fe':0, '1f9d5-1f3ff':0, '1f9d6-1f3fb-200d-2640':0, '1f9d6-1f3fc-200d-2640':0, '1f9d6-1f3fd-200d-2640':0, '1f9d6-1f3fe-200d-2640':0, '1f9d6-1f3ff-200d-2640':0, '1f9d6-1f3fb-200d-2642':0, '1f9d6-1f3fc-200d-2642':0, '1f9d6-1f3fd-200d-2642':0, '1f9d6-1f3fe-200d-2642':0, '1f9d6-1f3ff-200d-2642':0, '1f9d6-1f3fb':0, '1f9d6-1f3fc':0, '1f9d6-1f3fd':0, '1f9d6-1f3fe':0, '1f9d6-1f3ff':0, '1f9d7-1f3fb-200d-2640':0, '1f9d7-1f3fc-200d-2640':0, '1f9d7-1f3fd-200d-2640':0, '1f9d7-1f3fe-200d-2640':0, '1f9d7-1f3ff-200d-2640':0, '1f9d7-1f3fb-200d-2642':0, '1f9d7-1f3fc-200d-2642':0, '1f9d7-1f3fd-200d-2642':0, '1f9d7-1f3fe-200d-2642':0, '1f9d7-1f3ff-200d-2642':0, '1f9d7-1f3fb':0, '1f9d7-1f3fc':0, '1f9d7-1f3fd':0, '1f9d7-1f3fe':0, '1f9d7-1f3ff':0, '1f9d8-1f3fb-200d-2640':0, '1f9d8-1f3fc-200d-2640':0, '1f9d8-1f3fd-200d-2640':0, '1f9d8-1f3fe-200d-2640':0, '1f9d8-1f3ff-200d-2640':0, '1f9d8-1f3fb-200d-2642':0, '1f9d8-1f3fc-200d-2642':0, '1f9d8-1f3fd-200d-2642':0, '1f9d8-1f3fe-200d-2642':0, '1f9d8-1f3ff-200d-2642':0, '1f9d8-1f3fb':0, '1f9d8-1f3fc':0, '1f9d8-1f3fd':0, '1f9d8-1f3fe':0, '1f9d8-1f3ff':0, '1f9d9-1f3fb-200d-2640':0, '1f9d9-1f3fc-200d-2640':0, '1f9d9-1f3fd-200d-2640':0, '1f9d9-1f3fe-200d-2640':0, '1f9d9-1f3ff-200d-2640':0, '1f9d9-1f3fb-200d-2642':0, '1f9d9-1f3fc-200d-2642':0, '1f9d9-1f3fd-200d-2642':0, '1f9d9-1f3fe-200d-2642':0, '1f9d9-1f3ff-200d-2642':0, '1f9d9-1f3fb':0, '1f9d9-1f3fc':0, '1f9d9-1f3fd':0, '1f9d9-1f3fe':0, '1f9d9-1f3ff':0, '1f9da-1f3fb-200d-2640':0, '1f9da-1f3fc-200d-2640':0, '1f9da-1f3fd-200d-2640':0, '1f9da-1f3fe-200d-2640':0, '1f9da-1f3ff-200d-2640':0, '1f9da-1f3fb-200d-2642':0, '1f9da-1f3fc-200d-2642':0, '1f9da-1f3fd-200d-2642':0, '1f9da-1f3fe-200d-2642':0, '1f9da-1f3ff-200d-2642':0, '1f9da-1f3fb':0, '1f9da-1f3fc':0, '1f9da-1f3fd':0, '1f9da-1f3fe':0, '1f9da-1f3ff':0, '1f9db-1f3fb-200d-2640':0, '1f9db-1f3fc-200d-2640':0, '1f9db-1f3fd-200d-2640':0, '1f9db-1f3fe-200d-2640':0, '1f9db-1f3ff-200d-2640':0, '1f9db-1f3fb-200d-2642':0, '1f9db-1f3fc-200d-2642':0, '1f9db-1f3fd-200d-2642':0, '1f9db-1f3fe-200d-2642':0, '1f9db-1f3ff-200d-2642':0, '1f9db-1f3fb':0, '1f9db-1f3fc':0, '1f9db-1f3fd':0, '1f9db-1f3fe':0, '1f9db-1f3ff':0, '1f9dc-1f3fb-200d-2640':0, '1f9dc-1f3fc-200d-2640':0, '1f9dc-1f3fd-200d-2640':0, '1f9dc-1f3fe-200d-2640':0, '1f9dc-1f3ff-200d-2640':0, '1f9dc-1f3fb-200d-2642':0, '1f9dc-1f3fc-200d-2642':0, '1f9dc-1f3fd-200d-2642':0, '1f9dc-1f3fe-200d-2642':0, '1f9dc-1f3ff-200d-2642':0, '1f9dc-1f3fb':0, '1f9dc-1f3fc':0, '1f9dc-1f3fd':0, '1f9dc-1f3fe':0, '1f9dc-1f3ff':0, '1f9dd-1f3fb-200d-2640':0, '1f9dd-1f3fc-200d-2640':0, '1f9dd-1f3fd-200d-2640':0, '1f9dd-1f3fe-200d-2640':0, '1f9dd-1f3ff-200d-2640':0, '1f9dd-1f3fb-200d-2642':0, '1f9dd-1f3fc-200d-2642':0, '1f9dd-1f3fd-200d-2642':0, '1f9dd-1f3fe-200d-2642':0, '1f9dd-1f3ff-200d-2642':0, '1f9dd-1f3fb':0, '1f9dd-1f3fc':0, '1f9dd-1f3fd':0, '1f9dd-1f3fe':0, '1f9dd-1f3ff':0, '261d-1f3fb':0, '261d-1f3fc':0, '261d-1f3fd':0, '261d-1f3fe':0, '261d-1f3ff':0, '26f9-1f3fb-200d-2640':0, '26f9-1f3fc-200d-2640':0, '26f9-1f3fd-200d-2640':0, '26f9-1f3fe-200d-2640':0, '26f9-1f3ff-200d-2640':0, '26f9-1f3fb-200d-2642':0, '26f9-1f3fc-200d-2642':0, '26f9-1f3fd-200d-2642':0, '26f9-1f3fe-200d-2642':0, '26f9-1f3ff-200d-2642':0, '26f9-1f3fb':0, '26f9-1f3fc':0, '26f9-1f3fd':0, '26f9-1f3fe':0, '26f9-1f3ff':0, '270a-1f3fb':0, '270a-1f3fc':0, '270a-1f3fd':0, '270a-1f3fe':0, '270a-1f3ff':0, '270b-1f3fb':0, '270b-1f3fc':0, '270b-1f3fd':0, '270b-1f3fe':0, '270b-1f3ff':0, '270c-1f3fb':0, '270c-1f3fc':0, '270c-1f3fd':0, '270c-1f3fe':0, '270c-1f3ff':0, '270d-1f3fb':0, '270d-1f3fc':0, '270d-1f3fd':0, '270d-1f3fe':0, '270d-1f3ff':0}};\r\n\r\nconst Emoji: {[emoji: string]: number} = EmojiVersions[''];\r\nfor(const version in EmojiVersions) {\r\n  if(version) {\r\n    Object.assign(Emoji, EmojiVersions[version as EMOJI_VERSION]);\r\n  }\r\n}\r\n\r\nexport default Emoji;\r\n\r\n/* Emoji[\"00a9-fe0f\"] = 6362;\r\nEmoji[\"00ae-fe0f\"] = 6363;\r\nEmoji[\"2122-fe0f\"] = 6364; */\r\n","// https://github.com/twitter/twemoji-parser/blob/master/src/lib/regex.js\r\n\r\nexport function encodeEmoji(emojiText: string) {\r\n  const codepoints = toCodePoints(removeVS16s(emojiText)).join('-');\r\n  return codepoints;\r\n}\r\n\r\nconst vs16RegExp = /\\uFE0F/g;\r\n// avoid using a string literal like '\\u200D' here because minifiers expand it inline\r\nconst zeroWidthJoiner = String.fromCharCode(0x200d);\r\n\r\nconst removeVS16s = (rawEmoji: string) => (rawEmoji.indexOf(zeroWidthJoiner) < 0 ? rawEmoji.replace(vs16RegExp, '') : rawEmoji);\r\n\r\nexport function toCodePoints(unicodeSurrogates: string): Array<string> {\r\n  const points = [];\r\n  let char = 0;\r\n  let previous = 0;\r\n  let i = 0;\r\n  while(i < unicodeSurrogates.length) {\r\n    char = unicodeSurrogates.charCodeAt(i++);\r\n    if(previous) {\r\n      points.push((0x10000 + ((previous - 0xd800) << 10) + (char - 0xdc00)).toString(16));\r\n      previous = 0;\r\n    } else if(char > 0xd800 && char <= 0xdbff) {\r\n      previous = char;\r\n    } else {\r\n      points.push(char.toString(16));\r\n    }\r\n  }\r\n\r\n  if(points.length && points[0].length === 2) {\r\n    points[0] = '00' + points[0];\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nexport function getEmojiToneIndex(input: string) {\r\n  const match = input.match(/[\\uDFFB-\\uDFFF]/);\r\n  return match ? 5 - (57343 - match[0].charCodeAt(0)) : 0;\r\n}\r\n\r\nconst VIRTUAL_COUNTRIES_EMOJIS: Map<string, string> = new Map([\r\n  ['FT', '🏴‍☠']\r\n]);\r\n\r\nexport function getCountryEmoji(iso2: string) {\r\n  return VIRTUAL_COUNTRIES_EMOJIS.get(iso2) ??\r\n    String.fromCharCode(55356, 56741 + iso2.charCodeAt(0), 55356, 56741 + iso2.charCodeAt(1));\r\n}\r\n\r\nexport function emojiFromCodePoints(codePoints: string) {\r\n  return codePoints.split('-').reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\r\n}\r\n","import Emoji from '../../config/emoji';\r\nimport {encodeEmoji} from '../../vendor/emoji';\r\n\r\nexport default function getEmojiUnified(emojiCode: string) {\r\n  const unified = encodeEmoji(emojiCode).replace(/-?fe0f/g, '');\r\n\r\n  /* if(unified === '1f441-200d-1f5e8') {\r\n    //unified = '1f441-fe0f-200d-1f5e8-fe0f';\r\n    unified = '1f441-fe0f-200d-1f5e8';\r\n  } */\r\n\r\n  if(!Emoji.hasOwnProperty(unified)\r\n  // && !emojiData.hasOwnProperty(unified.replace(/-?fe0f$/, ''))\r\n  ) {\r\n    // console.error('lol', unified);\r\n    return;\r\n  }\r\n\r\n  return unified;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {EMAIL_REG_EXP, FULL_REG_EXP} from '.';\r\nimport TLD from '../../config/tld';\r\nimport {MessageEntity} from '../../layer';\r\nimport checkBrackets from './checkBrackets';\r\nimport getEmojiUnified from './getEmojiUnified';\r\n\r\nexport default function parseEntities(text: string) {\r\n  let match: RegExpMatchArray;\r\n  let raw = text;\r\n  const entities: MessageEntity[] = [];\r\n  let matchIndex;\r\n  let rawOffset = 0;\r\n  // var start = tsNow()\r\n  FULL_REG_EXP.lastIndex = 0;\r\n  while(match = raw.match(FULL_REG_EXP)) {\r\n    matchIndex = rawOffset + match.index;\r\n\r\n    // console.log('parseEntities match:', match);\r\n\r\n    if(match[3]) { // mentions\r\n      entities.push({\r\n        _: 'messageEntityMention',\r\n        offset: matchIndex + match[1].length,\r\n        length: match[2].length + match[3].length\r\n      });\r\n    } else if(match[4]) {\r\n      if(EMAIL_REG_EXP.test(match[4])) { // email\r\n        entities.push({\r\n          _: 'messageEntityEmail',\r\n          offset: matchIndex,\r\n          length: match[4].length\r\n        });\r\n      } else {\r\n        let url: string;\r\n        let protocol = match[5];\r\n        const tld = match[6];\r\n        // let excluded = '';\r\n        if(tld) { // URL\r\n          if(!protocol && (tld.substr(0, 4) === 'xn--' || TLD.indexOf(tld.toLowerCase()) !== -1)) {\r\n            protocol = 'http://';\r\n          }\r\n\r\n          if(protocol) {\r\n            const balanced = checkBrackets(match[4]);\r\n            if(balanced.length !== match[4].length) {\r\n              // excluded = match[4].substring(balanced.length);\r\n              match[4] = balanced;\r\n            }\r\n\r\n            url = (match[5] ? '' : protocol) + match[4];\r\n          }\r\n        } else { // IP address\r\n          url = (match[5] ? '' : 'http://') + match[4];\r\n        }\r\n\r\n        if(url) {\r\n          entities.push({\r\n            _: 'messageEntityUrl',\r\n            offset: matchIndex,\r\n            length: match[4].length\r\n          });\r\n        }\r\n      }\r\n    } else if(match[7]) { // New line\r\n      entities.push({\r\n        _: 'messageEntityLinebreak',\r\n        offset: matchIndex,\r\n        length: 1\r\n      });\r\n    } else if(match[8]) { // Emoji\r\n      const unified = getEmojiUnified(match[8]);\r\n      if(unified) {\r\n        entities.push({\r\n          _: 'messageEntityEmoji',\r\n          offset: matchIndex,\r\n          length: match[8].length,\r\n          unicode: unified\r\n        });\r\n      }\r\n    } else if(match[11]) { // Hashtag\r\n      entities.push({\r\n        _: 'messageEntityHashtag',\r\n        offset: matchIndex + (match[10] ? match[10].length : 0),\r\n        length: match[11].length\r\n      });\r\n    } else if(match[13]) { // Bot command\r\n      entities.push({\r\n        _: 'messageEntityBotCommand',\r\n        offset: matchIndex + (match[11] ? match[11].length : 0) + (match[12] ? match[12].length : 0),\r\n        length: 1 + match[13].length + (match[14] ? 1 + match[14].length : 0),\r\n        unsafe: true\r\n      });\r\n    } else if(match[16]) { // Media timestamp\r\n      const timestamp = match[16];\r\n      const splitted: string[] = timestamp.split(':');\r\n      const splittedLength = splitted.length;\r\n      const hours = splittedLength === 3 ? +splitted[0] : 0;\r\n      const minutes = +splitted[splittedLength === 3 ? 1 : 0];\r\n      const seconds = +splitted[splittedLength - 1];\r\n      entities.push({\r\n        _: 'messageEntityTimestamp',\r\n        offset: matchIndex + (/\\D/.test(match[0][0]) ? 1 : 0),\r\n        length: timestamp.length,\r\n        raw: timestamp,\r\n        time: hours * 3600 + minutes * 60 + seconds\r\n      });\r\n    }\r\n\r\n    raw = raw.substr(match.index + match[0].length);\r\n    rawOffset += match.index + match[0].length;\r\n  }\r\n\r\n  // if (entities.length) {\r\n  //   console.log('parse entities', text, entities.slice())\r\n  // }\r\n  return entities;\r\n}\r\n","import {MessageEntity} from '../../layer';\r\nimport fixEmoji from './fixEmoji';\r\nimport mergeEntities from './mergeEntities';\r\nimport parseEntities from './parseEntities';\r\n\r\nexport default function wrapMessageEntities(message: string, entities: MessageEntity[] = []) {\r\n  message = fixEmoji(message, entities);\r\n\r\n  const myEntities = parseEntities(message);\r\n  const totalEntities = mergeEntities(entities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\r\n  return {\r\n    message,\r\n    myEntities,\r\n    totalEntities\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\r\nimport type {MediaSize} from '../../helpers/mediaSize';\r\nimport type {Progress} from './appDownloadManager';\r\nimport type {VIDEO_MIME_TYPE} from '../../environment/videoMimeTypesSupport';\r\nimport type {Mirrors} from '../mtproto/mtprotoworker';\r\nimport LazyLoadQueueBase from '../../components/lazyLoadQueueBase';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {randomLong} from '../../helpers/random';\r\nimport {Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer, ReactionCount, MessagePeerReaction, MessagesSearchCounter, Peer, MessageReactions, Document, InputFile, Reaction, ForumTopic as MTForumTopic, MessagesForumTopics, MessagesGetReplies, MessagesGetHistory, MessagesAffectedHistory, UrlAuthResult, MessagesTranscribedAudio, ReadParticipantDate, WebDocument, MessagesSearch, MessagesSearchGlobal, InputReplyTo, InputUser, MessagesSendMessage, MessagesSendMedia} from '../../layer';\r\nimport {ArgumentTypes, InvokeApiOptions, Modify} from '../../types';\r\nimport {logger, LogTypes} from '../logger';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {GLOBAL_FOLDER_ID} from '../storages/dialogs';\r\nimport {ChatRights} from './appChatsManager';\r\nimport {MyDocument} from './appDocsManager';\r\nimport {MyPhoto} from './appPhotosManager';\r\nimport DEBUG from '../../config/debug';\r\nimport SlicedArray, {Slice, SliceEnd} from '../../helpers/slicedArray';\r\nimport {FOLDER_ID_ALL, GENERAL_TOPIC_ID, MUTE_UNTIL, NULL_PEER_ID, REAL_FOLDER_ID, REPLIES_HIDDEN_CHANNEL_ID, REPLIES_PEER_ID, SERVICE_PEER_ID, THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\r\nimport {getMiddleware} from '../../helpers/middleware';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport copy from '../../helpers/object/copy';\r\nimport getObjectKeysAndSort from '../../helpers/object/getObjectKeysAndSort';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport splitStringByLength from '../../helpers/string/splitStringByLength';\r\nimport debounce from '../../helpers/schedulers/debounce';\r\nimport {AppManager} from './manager';\r\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\r\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport filterMessagesByInputFilter from './utils/messages/filterMessagesByInputFilter';\r\nimport ctx from '../../environment/ctx';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport getDialogIndex from './utils/dialogs/getDialogIndex';\r\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\r\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\r\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\r\nimport noop from '../../helpers/noop';\r\nimport appTabsManager from './appTabsManager';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport getAlbumText from './utils/messages/getAlbumText';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport makeError from '../../helpers/makeError';\r\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\r\nimport getDocumentInput from './utils/docs/getDocumentInput';\r\nimport reactionsEqual from './utils/reactions/reactionsEqual';\r\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\r\nimport {BroadcastEvents} from '../rootScope';\r\nimport setBooleanFlag from '../../helpers/object/setBooleanFlag';\r\nimport getMessageThreadId from './utils/messages/getMessageThreadId';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport wrapMessageEntities from '../richTextProcessor/wrapMessageEntities';\r\nimport isLegacyMessageId from './utils/messageId/isLegacyMessageId';\r\nimport {joinDeepPath} from '../../helpers/object/setDeepProperty';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport {LOCAL_ENTITIES} from '../richTextProcessor';\r\n\r\n// console.trace('include');\r\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\r\n\r\nconst APITIMEOUT = 0;\r\nconst DO_NOT_READ_HISTORY = false;\r\nconst DO_NOT_SEND_MESSAGES = false;\r\nconst DO_NOT_DELETE_MESSAGES = false;\r\nconst GLOBAL_HISTORY_PEER_ID = NULL_PEER_ID;\r\n\r\nexport type SendFileDetails = {\r\n  file: File | Blob | MyDocument,\r\n} & Partial<{\r\n  duration: number,\r\n  width: number,\r\n  height: number,\r\n  objectURL: string,\r\n  thumb: {\r\n    blob: Blob,\r\n    url: string,\r\n    size: MediaSize\r\n  },\r\n  strippedBytes: PhotoSize.photoStrippedSize['bytes'],\r\n  spoiler: boolean\r\n}>;\r\n\r\nexport type HistoryStorage = {\r\n  count: number | null,\r\n  history: SlicedArray<number>,\r\n\r\n  maxId?: number,\r\n  readPromise?: Promise<void>,\r\n  readMaxId?: number,\r\n  readOutboxMaxId?: number,\r\n  triedToReadMaxId?: number,\r\n\r\n  maxOutId?: number,\r\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>,\r\n\r\n  type: 'history' | 'replies' | 'search',\r\n\r\n  channelJoinedMid?: number,\r\n  originalInsertSlice?: SlicedArray<number>['insertSlice']\r\n};\r\n\r\nexport type HistoryResult = {\r\n  count: number,\r\n  history: number[],\r\n  isEnd: ReturnType<Slice<number>['getEnds']>,\r\n  offsetIdOffset?: number,\r\n  nextRate?: number,\r\n  messages?: MyMessage[]\r\n};\r\n\r\nexport type Dialog = MTDialog.dialog;\r\nexport type ForumTopic = MTForumTopic.forumTopic;\r\n\r\nexport type MyMessage = Message.message | Message.messageService;\r\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty'\r\n  | 'inputMessagesFilterPhotos'\r\n  | 'inputMessagesFilterPhotoVideo'\r\n  | 'inputMessagesFilterVideo'\r\n  | 'inputMessagesFilterDocument'\r\n  | 'inputMessagesFilterVoice'\r\n  | 'inputMessagesFilterRoundVoice'\r\n  | 'inputMessagesFilterRoundVideo'\r\n  | 'inputMessagesFilterMusic'\r\n  | 'inputMessagesFilterUrl'\r\n  | 'inputMessagesFilterMyMentions'\r\n  | 'inputMessagesFilterChatPhotos'\r\n  | 'inputMessagesFilterPinned';\r\n\r\nexport type PinnedStorage = Partial<{\r\n  promise: Promise<PinnedStorage>,\r\n  count: number,\r\n  maxId: number\r\n}>;\r\nexport type MessagesStorage = Map<number, Message.message | Message.messageService> & {peerId: PeerId, type: MessagesStorageType, key: MessagesStorageKey};\r\nexport type MessagesStorageType = 'scheduled' | 'history' | 'grouped';\r\nexport type MessagesStorageKey = `${PeerId}_${MessagesStorageType}`;\r\n\r\nexport type MyMessageActionType = Message.messageService['action']['_'];\r\n\r\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\r\n  afterMessageId: string,\r\n  messageId: string\r\n}>;\r\n\r\ntype MapValueType<A> = A extends Map<any, infer V> ? V : never;\r\n\r\nexport type BatchUpdates = {\r\n  'messages_reactions': AppMessagesManager['batchUpdateReactions'],\r\n  'messages_views': AppMessagesManager['batchUpdateViews']\r\n};\r\n\r\ntype PendingMessageDetails = {\r\n  peerId: PeerId,\r\n  tempId: number,\r\n  threadId: number,\r\n  storage: MessagesStorage,\r\n  sequential?: boolean\r\n};\r\n\r\nconst processAfter = (cb: () => void) => {\r\n  // setTimeout(cb, 0);\r\n  cb();\r\n};\r\n\r\nexport type MessageSendingParams = {\r\n  peerId?: PeerId,\r\n  threadId?: number,\r\n  replyToMsgId?: number,\r\n  replyToStoryId?: number,\r\n  replyToQuote?: {text: string, entities?: MessageEntity[], offset?: number},\r\n  replyToPeerId?: PeerId,\r\n  replyTo?: InputReplyTo,\r\n  scheduleDate?: number,\r\n  silent?: boolean,\r\n  sendAsPeerId?: number,\r\n  updateStickersetOrder?: boolean\r\n};\r\n\r\nexport type MessageForwardParams = MessageSendingParams & {\r\n  fromPeerId: PeerId,\r\n  mids: number[]\r\n} & Partial<{\r\n  withMyScore: true,\r\n  dropAuthor: boolean,\r\n  dropCaptions: boolean\r\n}>;\r\n\r\ntype RequestHistoryOptions = {\r\n  peerId?: PeerId;\r\n  offsetId?: number;\r\n  offsetPeerId?: PeerId; // to get the offset message\r\n  limit?: number;\r\n  addOffset?: number;\r\n  offsetDate?: number;\r\n  threadId?: number;\r\n  // search\r\n  nextRate?: number;\r\n  folderId?: number;\r\n  query?: string;\r\n  inputFilter?: {\r\n    _: MyInputMessagesFilter;\r\n  };\r\n  minDate?: number;\r\n  maxDate?: number;\r\n  recursion?: boolean; // ! FOR INNER USE ONLY\r\n};\r\n\r\nexport class AppMessagesManager extends AppManager {\r\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\r\n  private groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\r\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\r\n  private historiesStorage: {\r\n    [peerId: PeerId]: HistoryStorage\r\n  };\r\n  private threadsStorage: {\r\n    [peerId: PeerId]: {\r\n      [threadId: string]: HistoryStorage\r\n    }\r\n  };\r\n  private searchesStorage: {\r\n    [peerId: PeerId]: {\r\n      [inputFilter in MyInputMessagesFilter]?: HistoryStorage\r\n    }\r\n  };\r\n  private pinnedMessages: {[key: string]: PinnedStorage};\r\n\r\n  private threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\r\n  private threadsToReplies: {\r\n    [peerId_threadId: string]: string;\r\n  };\r\n\r\n  private pendingByRandomId: {\r\n    [randomId: string]: PendingMessageDetails\r\n  } = {};\r\n  private pendingByMessageId: {[mid: string]: Long} = {};\r\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\r\n  public pendingTopMsgs: {[peerId: PeerId]: number} = {};\r\n  private tempFinalizeCallbacks: {\r\n    [tempId: string]: {\r\n      [callbackName: string]: Partial<{\r\n        deferred: CancellablePromise<void>,\r\n        callback: (message: MyMessage) => Promise<any>\r\n      }>\r\n    }\r\n  } = {};\r\n\r\n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\r\n\r\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message.message | Message.messageService>>> = new Map();\r\n  private fetchSingleMessagesPromise: Promise<void>;\r\n  private extendedMedia: Map<PeerId, Map<number, CancellablePromise<void>>> = new Map();\r\n\r\n  private maxSeenId = 0;\r\n\r\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\r\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\r\n\r\n  private newDialogsHandlePromise: Promise<any>;\r\n  public newDialogsToHandle: Map<PeerId, {dialog?: Dialog, topics?: Map<number, ForumTopic>}> = new Map();\r\n  public newUpdatesAfterReloadToHandle: {[key: string]: Set<Update>} = {};\r\n\r\n  private notificationsHandlePromise: number;\r\n  private notificationsToHandle: {[key: string]: {\r\n    fwdCount: number,\r\n    fromId: PeerId,\r\n    topMessage?: MyMessage\r\n  }} = {};\r\n\r\n  private reloadConversationsPromise: Promise<void>;\r\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>, sentRequest?: boolean}> = new Map();\r\n\r\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\r\n\r\n  private groupedTempId = 0;\r\n\r\n  private typings: {[key: string]: {action: SendMessageAction, timeout?: number}} = {};\r\n\r\n  private middleware: ReturnType<typeof getMiddleware>;\r\n\r\n  private unreadMentions: {[key: string]: SlicedArray<number>} = {};\r\n  private goToNextMentionPromises: {[key: string]: Promise<number>} = {};\r\n\r\n  private batchUpdates: {\r\n    [k in keyof BatchUpdates]?: {\r\n      callback: BatchUpdates[k],\r\n      batch: ArgumentTypes<BatchUpdates[k]>[0]\r\n    }\r\n  } = {};\r\n  private batchUpdatesDebounced: () => Promise<void>;\r\n\r\n  private uploadFilePromises: {[fileName: string]: CancellablePromise<any>};\r\n\r\n  private tempMids: {[peerId: PeerId]: number} = {};\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateMessageID: this.onUpdateMessageId,\r\n\r\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\r\n      updateNewMessage: this.onUpdateNewMessage,\r\n      updateNewChannelMessage: this.onUpdateNewMessage,\r\n\r\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\r\n\r\n      updateEditMessage: this.onUpdateEditMessage,\r\n      updateEditChannelMessage: this.onUpdateEditMessage,\r\n\r\n      updateMessageReactions: this.onUpdateMessageReactions,\r\n\r\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\r\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\r\n      updateReadHistoryInbox: this.onUpdateReadHistory,\r\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\r\n      updateReadChannelInbox: this.onUpdateReadHistory,\r\n      updateReadChannelOutbox: this.onUpdateReadHistory,\r\n\r\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\r\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\r\n\r\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\r\n\r\n      updateDeleteMessages: this.onUpdateDeleteMessages,\r\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\r\n\r\n      updateChannel: this.onUpdateChannel,\r\n\r\n      updateChannelReload: this.onUpdateChannelReload,\r\n\r\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\r\n\r\n      updateServiceNotification: this.onUpdateServiceNotification,\r\n\r\n      updatePinnedMessages: this.onUpdatePinnedMessages,\r\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\r\n\r\n      updateNotifySettings: this.onUpdateNotifySettings,\r\n\r\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\r\n\r\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages,\r\n\r\n      updateMessageExtendedMedia: this.onUpdateMessageExtendedMedia,\r\n\r\n      updateTranscribedAudio: this.onUpdateTranscribedAudio\r\n    });\r\n\r\n    // ! Invalidate notify settings, can optimize though\r\n    this.rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\r\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1));\r\n      let filterFunc: (dialog: typeof dialogs[0]) => boolean;\r\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\r\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => this.appPeersManager.isBroadcast(dialog.peerId);\r\n      else filterFunc = (dialog) => this.appPeersManager.isAnyGroup(dialog.peerId);\r\n\r\n      dialogs\r\n      .filter(filterFunc)\r\n      .forEach((dialog) => {\r\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\r\n      });\r\n    });\r\n\r\n    this.rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\r\n      msgs.forEach(({peerId, mid, isScheduled}) => {\r\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\r\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\r\n        if(!message) {\r\n          return;\r\n        }\r\n\r\n        message.media = {\r\n          _: 'messageMediaWebPage',\r\n          pFlags: {},\r\n          ...(message.media as MessageMedia.messageMediaWebPage || {}),\r\n          webpage: this.appWebPagesManager.getCachedWebPage(id)\r\n        };\r\n\r\n        this.onMessageModification(message, storage); // * mirror it\r\n        this.rootScope.dispatchEvent('message_edit', {\r\n          storageKey: storage.key,\r\n          peerId,\r\n          mid,\r\n          message\r\n        });\r\n      });\r\n    });\r\n\r\n    this.rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\r\n      const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\r\n      if(dialog) {\r\n        dialog.draft = draft;\r\n\r\n        let drop = false;\r\n        if(!draft && !getServerMessageId(dialog.top_message)) {\r\n          this.dialogsStorage.dropDialog(peerId);\r\n          drop = true;\r\n        } else {\r\n          this.dialogsStorage.generateIndexForDialog(dialog);\r\n          this.dialogsStorage.pushDialog({dialog});\r\n        }\r\n\r\n        this.rootScope.dispatchEvent('dialog_draft', {\r\n          peerId,\r\n          dialog,\r\n          drop,\r\n          draft\r\n        });\r\n      } else if(threadId) {\r\n        const chat = this.appChatsManager.getChat(peerId.toChatId());\r\n        if(!chat) {\r\n          this.reloadConversation(peerId);\r\n        } else if((chat as Chat.channel).pFlags.forum) {\r\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\r\n        }\r\n      } else {\r\n        this.reloadConversation(peerId);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('poll_update', ({poll}) => {\r\n      const set = this.appPollsManager.pollToMessages[poll.id];\r\n      if(!set) {\r\n        return;\r\n      }\r\n\r\n      for(const key of set) {\r\n        const [peerId, mid] = key.split('_');\r\n\r\n        const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\r\n        if(message) {\r\n          this.onMessageModification(message);\r\n          this.setDialogToStateIfMessageIsTop(message);\r\n        }\r\n      }\r\n    });\r\n\r\n    // * clear forum cache\r\n    this.rootScope.addEventListener('chat_toggle_forum', ({chatId, enabled}) => {\r\n      const peerId = chatId.toPeerId(true);\r\n      if(!enabled) {\r\n        delete this.threadsStorage[peerId];\r\n\r\n        for(const key in this.pinnedMessages) {\r\n          if(+key === peerId && key.startsWith(peerId + '_')) {\r\n            delete this.pinnedMessages[key];\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.batchUpdatesDebounced = debounce(() => {\r\n      for(const event in this.batchUpdates) {\r\n        const details = this.batchUpdates[event as keyof BatchUpdates];\r\n        delete this.batchUpdates[event as keyof BatchUpdates];\r\n\r\n        // @ts-ignore\r\n        const result = details.callback(details.batch);\r\n        if(result && (!(result instanceof Array) || result.length)) {\r\n          // @ts-ignore\r\n          rootScope.dispatchEvent(event as keyof BatchUpdates, result);\r\n        }\r\n      }\r\n    }, 33, false, true);\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      if(state.maxSeenMsgId) {\r\n        this.maxSeenId = state.maxSeenMsgId;\r\n      }\r\n    });\r\n  }\r\n\r\n  public clear = (init?: boolean) => {\r\n    if(this.middleware) {\r\n      this.middleware.clean();\r\n    } else {\r\n      this.middleware = getMiddleware();\r\n      this.uploadFilePromises = {};\r\n    }\r\n\r\n    this.messagesStorageByPeerId = {};\r\n    this.groupedMessagesStorage = {};\r\n    this.scheduledMessagesStorage = {};\r\n    this.historiesStorage = {};\r\n    this.threadsStorage = {};\r\n    this.searchesStorage = {};\r\n    this.pinnedMessages = {};\r\n    this.threadsServiceMessagesIdsStorage = {};\r\n    this.threadsToReplies = {};\r\n\r\n    this.dialogsStorage && this.dialogsStorage.clear(init);\r\n    this.filtersStorage && this.filtersStorage.clear(init);\r\n  };\r\n\r\n  public getInputEntities(entities: MessageEntity[]) {\r\n    const sendEntites = copy(entities);\r\n    forEachReverse(sendEntites, (entity, idx, arr) => {\r\n      if(LOCAL_ENTITIES.has(entity._)) {\r\n        arr.splice(idx, 1);\r\n      } else if(entity._ === 'messageEntityMentionName') {\r\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\r\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = this.appUsersManager.getUserInput(entity.user_id);\r\n      }\r\n    });\r\n    return sendEntites;\r\n  }\r\n\r\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: MyMessage) => Promise<any>) {\r\n    const finalize = this.tempFinalizeCallbacks[tempId] ??= {};\r\n    const obj = finalize[callbackName] ??= {deferred: deferredPromise<void>()};\r\n\r\n    obj.callback = callback;\r\n\r\n    return obj.deferred;\r\n  }\r\n\r\n  public editMessage(\r\n    message: MyMessage,\r\n    text: string,\r\n    options: Partial<{\r\n      newMedia: InputMedia,\r\n      scheduleDate: number,\r\n      entities: MessageEntity[]\r\n    }> & Partial<Pick<Parameters<AppMessagesManager['sendText']>[0], 'webPage' | 'webPageOptions' | 'noWebPage'>> = {}\r\n  ): Promise<void> {\r\n    /* if(!this.canEditMessage(messageId)) {\r\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\r\n    } */\r\n\r\n    const {mid, peerId} = message;\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\r\n        // this.log('invoke editMessage callback', message);\r\n        return this.editMessage(message, text, options);\r\n      });\r\n    }\r\n\r\n    const entities = options.entities || [];\r\n    text &&= parseMarkdown(text, entities);\r\n\r\n    let sendEntites = this.getInputEntities(entities);\r\n    if(!sendEntites.length) {\r\n      sendEntites = undefined;\r\n    }\r\n\r\n    const webPageSend = this.processMessageWebPageOptions(message as Message.message, options);\r\n\r\n    const schedule_date = options.scheduleDate || ((message as Message.message).pFlags.is_scheduled ? message.date : undefined);\r\n    return this.apiManager.invokeApi('messages.editMessage', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: message.id,\r\n      message: text,\r\n      media: options.newMedia,\r\n      entities: sendEntites,\r\n      no_webpage: options.noWebPage,\r\n      schedule_date,\r\n      ...webPageSend\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    }, (error: ApiError) => {\r\n      this.log.error('editMessage error:', error);\r\n\r\n      if(error?.type === 'MESSAGE_NOT_MODIFIED') {\r\n        error.handled = true;\r\n        return;\r\n      }\r\n\r\n      if(error?.type === 'MESSAGE_EMPTY') {\r\n        error.handled = true;\r\n      }\r\n\r\n      throw error;\r\n    });\r\n  }\r\n\r\n  public async transcribeAudio(message: Message.message): Promise<MessagesTranscribedAudio> {\r\n    const {id, peerId} = message;\r\n\r\n    const process = (result: MessagesTranscribedAudio) => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateTranscribedAudio',\r\n        msg_id: message.id,\r\n        peer: this.appPeersManager.getOutputPeer(peerId),\r\n        pFlags: result.pFlags,\r\n        text: result.text,\r\n        transcription_id: result.transcription_id\r\n      });\r\n    };\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.transcribeAudio',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        msg_id: id\r\n      },\r\n      processResult: (result) => {\r\n        process(result);\r\n        return result;\r\n      },\r\n      processError: (error) => {\r\n        if(error.type === 'TRANSCRIPTION_FAILED' || error.type === 'MSG_VOICE_MISSING') {\r\n          process({\r\n            _: 'messages.transcribedAudio',\r\n            transcription_id: 0,\r\n            text: '',\r\n            pFlags: {}\r\n          });\r\n        }\r\n\r\n        throw error;\r\n      }\r\n    });\r\n  }\r\n\r\n  public async sendText(\r\n    options: MessageSendingParams & Partial<{\r\n      text: string,\r\n      entities: MessageEntity[],\r\n      viaBotId: BotId,\r\n      queryId: string,\r\n      resultId: string,\r\n      noWebPage: true,\r\n      replyMarkup: ReplyMarkup,\r\n      clearDraft: true,\r\n      webPage: WebPage,\r\n      webPageOptions: Partial<{\r\n        largeMedia: boolean,\r\n        smallMedia: boolean,\r\n        optional: boolean,\r\n        invertMedia: boolean\r\n      }>\r\n    }>\r\n  ): Promise<void> {\r\n    let {peerId, text} = options;\r\n    if(!text.trim()) {\r\n      return;\r\n    }\r\n\r\n    options.entities ??= [];\r\n    options.webPageOptions ??= {};\r\n\r\n    this.checkSendOptions(options);\r\n\r\n    const config = await this.apiManager.getConfig();\r\n    const MAX_LENGTH = config.message_length_max;\r\n    const splitted = splitStringByLength(text, MAX_LENGTH);\r\n    text = splitted[0];\r\n    if(splitted.length > 1) {\r\n      if(options.webPage?._ === 'webPage' && !text.includes(options.webPage.url)) {\r\n        delete options.webPage;\r\n      }\r\n    }\r\n\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n\r\n    const entities = options.entities;\r\n    if(!options.viaBotId) {\r\n      text = parseMarkdown(text, entities);\r\n      // entities = mergeEntities(entities, parseEntities(text));\r\n    }\r\n\r\n    let sendEntites = this.getInputEntities(entities);\r\n    if(!sendEntites.length) {\r\n      sendEntites = undefined;\r\n    }\r\n\r\n    const message = this.generateOutgoingMessage(peerId, options);\r\n    message.entities = entities;\r\n    message.message = text;\r\n\r\n    const isChannel = this.appPeersManager.isChannel(peerId);\r\n\r\n    const webPageSend = this.processMessageWebPageOptions(message, options);\r\n\r\n    const toggleError = (error?: ApiError) => {\r\n      this.onMessagesSendError([message], error);\r\n      this.rootScope.dispatchEvent('messages_pending');\r\n    };\r\n\r\n    message.send = () => {\r\n      toggleError();\r\n      const sentRequestOptions: PendingAfterMsg = {};\r\n      if(this.pendingAfterMsgs[peerId]) {\r\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\r\n      }\r\n\r\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\r\n      const inputPeer = this.appPeersManager.getInputPeerById(peerId);\r\n      const replyTo = options.replyTo;\r\n      let apiPromise: any;\r\n      if(options.viaBotId) {\r\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\r\n          peer: inputPeer,\r\n          random_id: message.random_id,\r\n          reply_to: replyTo,\r\n          query_id: options.queryId,\r\n          id: options.resultId,\r\n          clear_draft: options.clearDraft,\r\n          send_as: sendAs\r\n        }, sentRequestOptions);\r\n      } else {\r\n        const commonOptions: Partial<MessagesSendMessage | MessagesSendMedia> = {\r\n          peer: inputPeer,\r\n          message: text,\r\n          random_id: message.random_id,\r\n          reply_to: replyTo,\r\n          entities: sendEntites,\r\n          clear_draft: options.clearDraft,\r\n          schedule_date: options.scheduleDate || undefined,\r\n          silent: options.silent,\r\n          send_as: sendAs,\r\n          update_stickersets_order: options.updateStickersetOrder\r\n        };\r\n\r\n        apiPromise = this.apiManager.invokeApiAfter(\r\n          options.webPage ? 'messages.sendMedia' : 'messages.sendMessage',\r\n          {\r\n            ...commonOptions as any,\r\n            ...webPageSend\r\n          },\r\n          sentRequestOptions\r\n        );\r\n      }\r\n\r\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\r\n\r\n      return apiPromise.then((updates: Updates) => {\r\n        if(updates._ === 'updateShortSentMessage') {\r\n          // * fix copying object with promise\r\n          const promise = message.promise;\r\n          delete message.promise;\r\n          const newMessage = copy(message);\r\n          defineNotNumerableProperties(message, ['promise']);\r\n          message.promise = promise;\r\n\r\n          newMessage.date = updates.date;\r\n          newMessage.id = updates.id;\r\n          newMessage.media = updates.media;\r\n          newMessage.entities = updates.entities;\r\n          newMessage.ttl_period = updates.ttl_period;\r\n          this.wrapMessageEntities(newMessage);\r\n          if(updates.pFlags.out) {\r\n            newMessage.pFlags.out = true;\r\n          }\r\n\r\n          // * override with new updates\r\n          updates = {\r\n            _: 'updates',\r\n            users: [],\r\n            chats: [],\r\n            seq: 0,\r\n            date: undefined,\r\n            updates: [{\r\n              _: 'updateMessageID',\r\n              random_id: message.random_id,\r\n              id: newMessage.id\r\n            }, {\r\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\r\n              message: newMessage,\r\n              pts: updates.pts,\r\n              pts_count: updates.pts_count\r\n            }]\r\n          };\r\n        } else if((updates as Updates.updates).updates) {\r\n          (updates as Updates.updates).updates.forEach((update) => {\r\n            if(update._ === 'updateDraftMessage') {\r\n              update.local = true;\r\n            }\r\n          });\r\n        }\r\n\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n        message.promise.resolve();\r\n      }, (error: ApiError) => {\r\n        toggleError(error);\r\n        message.promise.reject(error);\r\n        throw error;\r\n      }).finally(() => {\r\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\r\n          delete this.pendingAfterMsgs[peerId];\r\n        }\r\n      });\r\n    };\r\n\r\n    this.beforeMessageSending(message, {\r\n      isScheduled: !!options.scheduleDate || undefined,\r\n      threadId: options.threadId,\r\n      clearDraft: options.clearDraft,\r\n      sequential: true\r\n    });\r\n\r\n    const promises: ReturnType<AppMessagesManager['sendText']>[] = [message.promise];\r\n    for(let i = 1; i < splitted.length; ++i) {\r\n      promises.push(this.sendText({\r\n        ...options,\r\n        peerId,\r\n        text: splitted[i]\r\n      }));\r\n    }\r\n\r\n    return Promise.all(promises).then(noop);\r\n  }\r\n\r\n  public sendFile(options: MessageSendingParams & SendFileDetails & Partial<{\r\n    isRoundMessage: boolean,\r\n    isVoiceMessage: boolean,\r\n    isGroupedItem: boolean,\r\n    isMedia: boolean,\r\n\r\n    groupId: string,\r\n    caption: string,\r\n    entities: MessageEntity[],\r\n    background: boolean,\r\n    clearDraft: boolean,\r\n    noSound: boolean,\r\n\r\n    waveform: Uint8Array,\r\n\r\n    // ! only for internal use\r\n    processAfter?: typeof processAfter\r\n  }>) {\r\n    const file = options.file;\r\n    let {peerId} = options;\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n\r\n    this.checkSendOptions(options);\r\n\r\n    const message = this.generateOutgoingMessage(peerId, options);\r\n\r\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\r\n\r\n    const fileType = (file as Document.document).mime_type || file.type;\r\n    const fileName = file instanceof File ? file.name : '';\r\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\r\n    let caption = options.caption || '';\r\n\r\n    this.log('sendFile', file, fileType);\r\n\r\n    const entities = options.entities || [];\r\n    if(caption) {\r\n      caption = parseMarkdown(caption, entities);\r\n    }\r\n\r\n    const attributes: DocumentAttribute[] = [];\r\n\r\n    const isPhoto = getEnvironment().IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\r\n\r\n    const strippedPhotoSize: PhotoSize.photoStrippedSize = options.strippedBytes && {\r\n      _: 'photoStrippedSize',\r\n      bytes: options.strippedBytes,\r\n      type: 'i'\r\n    };\r\n\r\n    let photo: MyPhoto, document: MyDocument;\r\n\r\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\r\n    if(isDocument) { // maybe it's a sticker or gif\r\n      attachType = 'document';\r\n      apiFileName = '';\r\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\r\n      attachType = 'audio';\r\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\r\n      actionName = 'sendMessageUploadAudioAction';\r\n\r\n      if(options.isVoiceMessage) {\r\n        attachType = 'voice';\r\n        message.pFlags.media_unread = true;\r\n      }\r\n\r\n      const attribute: DocumentAttribute.documentAttributeAudio = {\r\n        _: 'documentAttributeAudio',\r\n        pFlags: {\r\n          voice: options.isVoiceMessage || undefined\r\n        },\r\n        waveform: options.waveform,\r\n        duration: options.duration || undefined\r\n      };\r\n\r\n      attributes.push(attribute);\r\n    } else if(!options.isMedia) {\r\n      attachType = 'document';\r\n      apiFileName = 'document.' + fileType.split('/')[1];\r\n      actionName = 'sendMessageUploadDocumentAction';\r\n    } else if(isPhoto) {\r\n      attachType = 'photo';\r\n      apiFileName = 'photo.' + fileType.split('/')[1];\r\n      actionName = 'sendMessageUploadPhotoAction';\r\n\r\n      const photoSize = {\r\n        _: 'photoSize',\r\n        w: options.width,\r\n        h: options.height,\r\n        type: THUMB_TYPE_FULL,\r\n        location: null,\r\n        size: file.size\r\n      } as PhotoSize.photoSize;\r\n\r\n      photo = {\r\n        _: 'photo',\r\n        id: '' + message.id,\r\n        sizes: [photoSize],\r\n        w: options.width,\r\n        h: options.height\r\n      } as any;\r\n\r\n      if(strippedPhotoSize) {\r\n        photo.sizes.unshift(strippedPhotoSize);\r\n      }\r\n\r\n      this.thumbsStorage.setCacheContextURL(\r\n        photo,\r\n        photoSize.type,\r\n        options.objectURL || '',\r\n        file.size\r\n      );\r\n\r\n      photo = this.appPhotosManager.savePhoto(photo);\r\n    } else if(getEnvironment().VIDEO_MIME_TYPES_SUPPORTED.has(fileType as VIDEO_MIME_TYPE)) {\r\n      attachType = 'video';\r\n      apiFileName = 'video.mp4';\r\n      actionName = 'sendMessageUploadVideoAction';\r\n\r\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\r\n        _: 'documentAttributeVideo',\r\n        pFlags: {\r\n          round_message: options.isRoundMessage || undefined,\r\n          supports_streaming: true\r\n        },\r\n        duration: options.duration,\r\n        w: options.width,\r\n        h: options.height\r\n      };\r\n\r\n      attributes.push(videoAttribute);\r\n\r\n      // * must follow after video attribute\r\n      if(options.noSound &&\r\n        file.size > (10 * 1024) &&\r\n        file.size < (10 * 1024 * 1024)) {\r\n        attributes.push({\r\n          _: 'documentAttributeAnimated'\r\n        });\r\n      }\r\n    } else {\r\n      attachType = 'document';\r\n      apiFileName = 'document.' + fileType.split('/')[1];\r\n      actionName = 'sendMessageUploadDocumentAction';\r\n    }\r\n\r\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\r\n\r\n    if((['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).indexOf(attachType) !== -1 && !isDocument) {\r\n      const thumbs: PhotoSize[] = [];\r\n      document = {\r\n        _: 'document',\r\n        id: '' + message.id,\r\n        duration: options.duration,\r\n        attributes,\r\n        w: options.width,\r\n        h: options.height,\r\n        thumbs,\r\n        mime_type: fileType,\r\n        size: file.size\r\n      } as any;\r\n\r\n      if(options.objectURL) {\r\n        this.thumbsStorage.setCacheContextURL(\r\n          document,\r\n          undefined,\r\n          options.objectURL,\r\n          file.size\r\n        );\r\n      }\r\n\r\n      let thumb: PhotoSize.photoSize;\r\n      if(isPhoto) {\r\n        attributes.push({\r\n          _: 'documentAttributeImageSize',\r\n          w: options.width,\r\n          h: options.height\r\n        });\r\n\r\n        thumb = {\r\n          _: 'photoSize',\r\n          w: options.width,\r\n          h: options.height,\r\n          type: THUMB_TYPE_FULL,\r\n          size: file.size\r\n        };\r\n      } else if(attachType === 'video') {\r\n        if(options.thumb) {\r\n          thumb = {\r\n            _: 'photoSize',\r\n            w: options.thumb.size.width,\r\n            h: options.thumb.size.height,\r\n            type: 'local-thumb',\r\n            size: options.thumb.blob.size\r\n          };\r\n\r\n          this.thumbsStorage.setCacheContextURL(\r\n            document,\r\n            thumb.type,\r\n            options.thumb.url,\r\n            thumb.size\r\n          );\r\n        }\r\n      }\r\n\r\n      if(thumb) {\r\n        thumbs.push(thumb);\r\n      }\r\n\r\n      if(strippedPhotoSize) {\r\n        thumbs.unshift(strippedPhotoSize);\r\n      }\r\n\r\n      /* if(thumbs.length) {\r\n        const thumb = thumbs[0] as PhotoSize.photoSize;\r\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\r\n        docThumb.downloaded = thumb.size;\r\n        docThumb.url = thumb.url;\r\n      } */\r\n\r\n      document = this.appDocsManager.saveDoc(document);\r\n    }\r\n\r\n    this.log('sendFile', attachType, apiFileName, file.type, options);\r\n\r\n    const sentDeferred = deferredPromise<InputMedia>();\r\n    // sentDeferred.cancel = () => {\r\n    //   const error = new Error('Download canceled');\r\n    //   error.name = 'AbortError';\r\n    //   sentDeferred.reject(error);\r\n\r\n    //   if(uploadPromise?.cancel) {\r\n    //     uploadPromise.cancel();\r\n    //   }\r\n    // };\r\n\r\n    const media: MessageMedia = isDocument ? undefined : {\r\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\r\n      pFlags: {},\r\n      // preloader,\r\n      photo,\r\n      document\r\n    };\r\n\r\n    if(media) {\r\n      defineNotNumerableProperties(media as any, ['promise']);\r\n      (media as any).promise = sentDeferred;\r\n\r\n      if(options.spoiler) {\r\n        (media as MessageMedia.messageMediaPhoto).pFlags.spoiler = true;\r\n      }\r\n    }\r\n\r\n    let sendEntites = this.getInputEntities(entities);\r\n    if(!sendEntites.length) {\r\n      sendEntites = undefined;\r\n    }\r\n\r\n    message.entities = entities;\r\n    message.message = caption;\r\n    message.media = isDocument ? {\r\n      _: 'messageMediaDocument',\r\n      pFlags: {},\r\n      document: file\r\n    } as MessageMedia.messageMediaDocument : media;\r\n\r\n    const uploadingFileName = !isDocument ? getFileNameForUpload(file) : undefined;\r\n    message.uploadingFileName = uploadingFileName;\r\n\r\n    if(uploadingFileName) {\r\n      this.uploadFilePromises[uploadingFileName] = sentDeferred;\r\n    }\r\n\r\n    const toggleError = (error?: ApiError) => {\r\n      this.onMessagesSendError([message], error);\r\n      this.rootScope.dispatchEvent('messages_pending');\r\n    };\r\n\r\n    let uploaded = false,\r\n      uploadPromise: ReturnType<ApiFileManager['upload']> = null;\r\n\r\n    message.send = () => {\r\n      if(isDocument) {\r\n        const inputMedia: InputMedia = {\r\n          _: 'inputMediaDocument',\r\n          id: getDocumentInput(file),\r\n          pFlags: {}\r\n        };\r\n\r\n        sentDeferred.resolve(inputMedia);\r\n      } else if(file instanceof File || file instanceof Blob) {\r\n        const load = () => {\r\n          if(!uploaded || message.error) {\r\n            uploaded = false;\r\n\r\n            uploadPromise = this.apiFileManager.upload({file, fileName: uploadingFileName});\r\n            uploadPromise.catch((err) => {\r\n              if(uploaded) {\r\n                return;\r\n              }\r\n\r\n              this.log('cancelling upload', media);\r\n\r\n              this.cancelPendingMessage(message.random_id);\r\n              this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\r\n              sentDeferred.reject(err);\r\n            });\r\n\r\n            uploadPromise.addNotifyListener((progress: Progress) => {\r\n              /* if(DEBUG) {\r\n                this.log('upload progress', progress);\r\n              } */\r\n\r\n              const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\r\n              if(actionName) {\r\n                this.setTyping(peerId, {_: actionName, progress: percents | 0}, undefined, options.threadId);\r\n              }\r\n              sentDeferred.notifyAll(progress);\r\n            });\r\n\r\n            sentDeferred.notifyAll({done: 0, total: file.size});\r\n          }\r\n\r\n          let thumbUploadPromise: typeof uploadPromise;\r\n          if(attachType === 'video' && options.objectURL && options.thumb?.blob) {\r\n            thumbUploadPromise = this.apiFileManager.upload({file: options.thumb.blob});\r\n          }\r\n\r\n          uploadPromise && uploadPromise.then(async(inputFile) => {\r\n            /* if(DEBUG) {\r\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\r\n            } */\r\n\r\n            inputFile.name = apiFileName;\r\n            uploaded = true;\r\n            let inputMedia: InputMedia;\r\n            switch(attachType) {\r\n              case 'photo':\r\n                inputMedia = {\r\n                  _: 'inputMediaUploadedPhoto',\r\n                  file: inputFile,\r\n                  pFlags: {\r\n                    spoiler: options.spoiler || undefined\r\n                  }\r\n                };\r\n                break;\r\n\r\n              default:\r\n                inputMedia = {\r\n                  _: 'inputMediaUploadedDocument',\r\n                  file: inputFile,\r\n                  mime_type: fileType,\r\n                  pFlags: {\r\n                    force_file: actionName === 'sendMessageUploadDocumentAction' || undefined,\r\n                    spoiler: options.spoiler || undefined\r\n                    // nosound_video: options.noSound ? true : undefined\r\n                  },\r\n                  attributes\r\n                };\r\n            }\r\n\r\n            if(thumbUploadPromise) {\r\n              try {\r\n                const inputFile = await thumbUploadPromise;\r\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\r\n              } catch(err) {\r\n                this.log.error('sendFile thumb upload error:', err);\r\n              }\r\n            }\r\n\r\n            sentDeferred.resolve(inputMedia);\r\n          }, (error: ApiError) => {\r\n            toggleError(error);\r\n            throw error;\r\n          });\r\n\r\n          return sentDeferred;\r\n        };\r\n\r\n        if(options.isGroupedItem) {\r\n          load();\r\n        } else {\r\n          this.sendSmthLazyLoadQueue.push({\r\n            load\r\n          });\r\n        }\r\n      }\r\n\r\n      return sentDeferred;\r\n    };\r\n\r\n    this.beforeMessageSending(message, {\r\n      isGroupedItem: options.isGroupedItem,\r\n      isScheduled: !!options.scheduleDate || undefined,\r\n      threadId: options.threadId,\r\n      clearDraft: options.clearDraft,\r\n      processAfter: options.processAfter\r\n    });\r\n\r\n    if(!options.isGroupedItem) {\r\n      sentDeferred.then((inputMedia) => {\r\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\r\n\r\n        return this.apiManager.invokeApi('messages.sendMedia', {\r\n          background: options.background,\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          media: inputMedia,\r\n          message: caption,\r\n          random_id: message.random_id,\r\n          reply_to: options.replyTo,\r\n          schedule_date: options.scheduleDate,\r\n          silent: options.silent,\r\n          entities: sendEntites,\r\n          clear_draft: options.clearDraft,\r\n          send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\r\n          update_stickersets_order: options.updateStickersetOrder\r\n        }).then((updates) => {\r\n          this.apiUpdatesManager.processUpdateMessage(updates);\r\n        }, (error: ApiError) => {\r\n          if(attachType === 'photo' &&\r\n            error.code === 400 &&\r\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\r\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\r\n            error.handled = true;\r\n            attachType = 'document';\r\n            message.send();\r\n            return;\r\n          }\r\n\r\n          toggleError(error);\r\n          throw error;\r\n        });\r\n      });\r\n\r\n      const messagePromise = message.promise as CancellablePromise<void>;\r\n      sentDeferred.then(\r\n        () => messagePromise.resolve(),\r\n        (err) => messagePromise.reject(err)\r\n      );\r\n    }\r\n\r\n    const ret: {\r\n      message: typeof message,\r\n      promise: typeof sentDeferred\r\n    } = {\r\n      message\r\n    } as any;\r\n\r\n    defineNotNumerableProperties(ret, ['promise']);\r\n    ret.promise = sentDeferred;\r\n\r\n    return ret;\r\n  }\r\n\r\n  public async sendAlbum(options: MessageSendingParams & {\r\n    isMedia?: boolean,\r\n    entities?: MessageEntity[],\r\n    caption?: string,\r\n    sendFileDetails: SendFileDetails[],\r\n    clearDraft?: boolean\r\n  }) {\r\n    this.checkSendOptions(options);\r\n\r\n    if(options.sendFileDetails.length === 1) {\r\n      return this.sendFile({...options, ...options.sendFileDetails[0]});\r\n    }\r\n\r\n    let {peerId} = options;\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n\r\n    let caption = options.caption || '';\r\n    const entities = options.entities || [];\r\n    if(caption) {\r\n      caption = parseMarkdown(caption, entities);\r\n    }\r\n\r\n    let sendEntities = this.getInputEntities(entities);\r\n    if(!sendEntities.length) {\r\n      sendEntities = undefined;\r\n    }\r\n\r\n    const log = this.log.bindPrefix('sendAlbum');\r\n    log(options);\r\n\r\n    const groupId = '' + ++this.groupedTempId;\r\n\r\n    const callbacks: Array<() => void> = [];\r\n    const processAfter = (cb: () => void) => {\r\n      callbacks.push(cb);\r\n    };\r\n\r\n    const messages = options.sendFileDetails.map((details, idx) => {\r\n      const o: Parameters<AppMessagesManager['sendFile']>[0] = {\r\n        peerId,\r\n        isGroupedItem: true,\r\n        isMedia: options.isMedia,\r\n        scheduleDate: options.scheduleDate,\r\n        silent: options.silent,\r\n        replyToMsgId: options.replyToMsgId,\r\n        replyToStoryId: options.replyToStoryId,\r\n        replyToQuote: options.replyToQuote,\r\n        threadId: options.threadId,\r\n        sendAsPeerId: options.sendAsPeerId,\r\n        groupId,\r\n        processAfter,\r\n        ...details\r\n      };\r\n\r\n      if(idx === 0) {\r\n        o.caption = caption;\r\n        o.entities = entities;\r\n      }\r\n\r\n      return this.sendFile(o).message;\r\n    });\r\n\r\n    if(options.clearDraft) {\r\n      callbacks.push(() => {\r\n        this.appDraftsManager.clearDraft(peerId, options.threadId);\r\n      });\r\n    }\r\n\r\n    callbacks.forEach((callback) => {\r\n      callback();\r\n    });\r\n\r\n    // * test pending\r\n    if(DO_NOT_SEND_MESSAGES) {\r\n      return;\r\n    }\r\n\r\n    const toggleError = (message: Message.message, error?: ApiError) => {\r\n      this.onMessagesSendError([message], error);\r\n      this.rootScope.dispatchEvent('messages_pending');\r\n    };\r\n\r\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\r\n    const invoke = (multiMedia: InputSingleMedia[]) => {\r\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\r\n\r\n      const deferred = deferredPromise<void>();\r\n      this.sendSmthLazyLoadQueue.push({\r\n        load: () => {\r\n          return this.apiManager.invokeApi('messages.sendMultiMedia', {\r\n            peer: inputPeer,\r\n            multi_media: multiMedia,\r\n            reply_to: options.replyTo,\r\n            schedule_date: options.scheduleDate,\r\n            silent: options.silent,\r\n            clear_draft: options.clearDraft,\r\n            send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\r\n            update_stickersets_order: options.updateStickersetOrder\r\n          }).then((updates) => {\r\n            this.apiUpdatesManager.processUpdateMessage(updates);\r\n            deferred.resolve();\r\n          }, (error: ApiError) => {\r\n            messages.forEach((message) => toggleError(message, error));\r\n            deferred.reject(error);\r\n          });\r\n        }\r\n      });\r\n\r\n      return deferred;\r\n    };\r\n\r\n    const promises: Promise<InputSingleMedia>[] = messages.map(async(message) => {\r\n      let inputMedia: InputMedia;\r\n      try {\r\n        inputMedia = await message.send() as InputMedia;\r\n      } catch(err) {\r\n        if((err as ApiError).type === 'UPLOAD_CANCELED') {\r\n          return undefined;\r\n        }\r\n\r\n        log.error('upload item error:', err, message);\r\n        toggleError(message, err);\r\n        throw err;\r\n      }\r\n\r\n      let messageMedia: MessageMedia;\r\n      try {\r\n        messageMedia = await this.apiManager.invokeApi('messages.uploadMedia', {\r\n          peer: inputPeer,\r\n          media: inputMedia\r\n        });\r\n      } catch(err) {\r\n        log.error('uploadMedia error:', err, message);\r\n        toggleError(message, err);\r\n        throw err;\r\n      }\r\n\r\n      const originalInputMedia = inputMedia;\r\n      if(messageMedia._ === 'messageMediaPhoto') {\r\n        const photo = this.appPhotosManager.savePhoto(messageMedia.photo);\r\n        inputMedia = getPhotoMediaInput(photo);\r\n      } else if(messageMedia._ === 'messageMediaDocument') {\r\n        const doc = this.appDocsManager.saveDoc(messageMedia.document);\r\n        inputMedia = getDocumentMediaInput(doc);\r\n      }\r\n\r\n      // copy original flags\r\n      const copyProperties: (keyof InputMedia.inputMediaPhoto)[] = [\r\n        'pFlags',\r\n        'ttl_seconds'\r\n      ];\r\n\r\n      copyProperties.forEach((property) => {\r\n        // @ts-ignore\r\n        inputMedia[property] = originalInputMedia[property] ?? inputMedia[property];\r\n      });\r\n\r\n      const inputSingleMedia: InputSingleMedia = {\r\n        _: 'inputSingleMedia',\r\n        media: inputMedia,\r\n        random_id: message.random_id,\r\n        message: caption,\r\n        entities: sendEntities\r\n      };\r\n\r\n      // * only 1 caption for all inputs\r\n      if(caption) {\r\n        caption = '';\r\n        sendEntities = undefined;\r\n      }\r\n\r\n      return inputSingleMedia;\r\n    });\r\n\r\n    return Promise.all(promises).then((inputs) => {\r\n      return invoke(inputs.filter(Boolean));\r\n    });\r\n  }\r\n\r\n  public sendContact(peerId: PeerId, contactPeerId: PeerId) {\r\n    return this.sendOther({peerId, inputMedia: this.appUsersManager.getContactMediaInput(contactPeerId)});\r\n  }\r\n\r\n  public sendOther(\r\n    options: MessageSendingParams & Partial<{\r\n      inputMedia: InputMedia | {_: 'messageMediaPending', messageMedia: MessageMedia},\r\n      viaBotId: BotId,\r\n      replyMarkup: ReplyMarkup,\r\n      clearDraft: true,\r\n      queryId: string\r\n      resultId: string,\r\n      geoPoint: GeoPoint,\r\n      webDocument?: WebDocument\r\n    }>\r\n  ) {\r\n    let {peerId, inputMedia} = options;\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n\r\n    const noOutgoingMessage = /* inputMedia?._ === 'inputMediaPhotoExternal' ||  */inputMedia?._ === 'inputMediaDocumentExternal';\r\n    this.checkSendOptions(options);\r\n    const message = this.generateOutgoingMessage(peerId, options);\r\n\r\n    let media: MessageMedia;\r\n    switch(inputMedia._) {\r\n      case 'inputMediaPoll': {\r\n        // const pollId = '' + message.id;\r\n        const pollId = randomLong();\r\n        inputMedia.poll.id = pollId;\r\n        this.appPollsManager.savePoll(inputMedia.poll, {\r\n          _: 'pollResults',\r\n          total_voters: 0,\r\n          pFlags: {},\r\n          recent_voters: []\r\n        });\r\n\r\n        const {poll, results} = this.appPollsManager.getPoll(pollId);\r\n        media = {\r\n          _: 'messageMediaPoll',\r\n          poll,\r\n          results\r\n        };\r\n\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaPhoto': {\r\n        media = {\r\n          _: 'messageMediaPhoto',\r\n          photo: this.appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id),\r\n          pFlags: {}\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaDocument': {\r\n        const doc = this.appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\r\n        /* if(doc.sticker && doc.stickerSetInput) {\r\n          appStickersManager.pushPopularSticker(doc.id);\r\n        } */\r\n        media = {\r\n          _: 'messageMediaDocument',\r\n          document: doc,\r\n          pFlags: {}\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaContact': {\r\n        media = {\r\n          _: 'messageMediaContact',\r\n          phone_number: inputMedia.phone_number,\r\n          first_name: inputMedia.first_name,\r\n          last_name: inputMedia.last_name,\r\n          user_id: inputMedia.user_id ?? '0',\r\n          vcard: inputMedia.vcard\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaGeoPoint': {\r\n        media = {\r\n          _: 'messageMediaGeo',\r\n          geo: options.geoPoint\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaVenue': {\r\n        media = {\r\n          _: 'messageMediaVenue',\r\n          geo: options.geoPoint,\r\n          title: inputMedia.title,\r\n          address: inputMedia.address,\r\n          provider: inputMedia.provider,\r\n          venue_id: inputMedia.venue_id,\r\n          venue_type: inputMedia.venue_type\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaPhotoExternal': {\r\n        if(noOutgoingMessage) {\r\n          break;\r\n        }\r\n\r\n        media = {\r\n          _: 'messageMediaPhotoExternal',\r\n          photo: options.webDocument\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaDocumentExternal': {\r\n        if(noOutgoingMessage) {\r\n          break;\r\n        }\r\n\r\n        media = {\r\n          _: 'messageMediaDocumentExternal',\r\n          document: options.webDocument\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'inputMediaStory': {\r\n        media = {\r\n          _: 'messageMediaStory',\r\n          id: inputMedia.id,\r\n          pFlags: {},\r\n          peer: this.appPeersManager.getOutputPeer(this.appPeersManager.getPeerId(inputMedia.peer))\r\n        };\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaPending': {\r\n        media = (inputMedia as any).messageMedia;\r\n        break;\r\n      }\r\n    }\r\n\r\n    message.media = media;\r\n\r\n    const toggleError = (error?: ApiError) => {\r\n      this.onMessagesSendError([message], error);\r\n      this.rootScope.dispatchEvent('messages_pending');\r\n    };\r\n\r\n    message.send = () => {\r\n      const sentRequestOptions: PendingAfterMsg = {};\r\n      if(this.pendingAfterMsgs[peerId]) {\r\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\r\n      }\r\n\r\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined;\r\n      let apiPromise: Promise<any>;\r\n      if(options.viaBotId) {\r\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          random_id: message.random_id,\r\n          reply_to: options.replyTo,\r\n          query_id: options.queryId,\r\n          id: options.resultId,\r\n          clear_draft: options.clearDraft,\r\n          schedule_date: options.scheduleDate,\r\n          silent: options.silent,\r\n          send_as: sendAs\r\n        }, sentRequestOptions);\r\n      } else {\r\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMedia', {\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          media: inputMedia as InputMedia,\r\n          random_id: message.random_id,\r\n          reply_to: options.replyTo,\r\n          message: '',\r\n          clear_draft: options.clearDraft,\r\n          schedule_date: options.scheduleDate,\r\n          silent: options.silent,\r\n          send_as: sendAs,\r\n          update_stickersets_order: options.updateStickersetOrder\r\n        }, sentRequestOptions);\r\n      }\r\n\r\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\r\n\r\n      return apiPromise.then((updates) => {\r\n        if(updates.updates) {\r\n          updates.updates.forEach((update: Update) => {\r\n            if(update._ === 'updateDraftMessage') {\r\n              update.local = true;\r\n            }\r\n          });\r\n        }\r\n\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n        promise.resolve();\r\n      }, (error: ApiError) => {\r\n        toggleError(error);\r\n        promise.reject(error);\r\n        throw error;\r\n      }).finally(() => {\r\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\r\n          delete this.pendingAfterMsgs[peerId];\r\n        }\r\n      });\r\n    };\r\n\r\n    this.beforeMessageSending(message, {\r\n      isScheduled: !!options.scheduleDate || undefined,\r\n      threadId: options.threadId,\r\n      clearDraft: options.clearDraft,\r\n      sequential: true,\r\n      noOutgoingMessage\r\n    });\r\n\r\n    const promise = message.promise;\r\n    return promise;\r\n  }\r\n\r\n  public getInputReplyTo(options: MessageSendingParams): InputReplyTo {\r\n    if(options.replyToStoryId) {\r\n      return {\r\n        _: 'inputReplyToStory',\r\n        story_id: options.replyToStoryId,\r\n        user_id: this.appUsersManager.getUserInput(options.peerId.toUserId())\r\n      };\r\n    } else if(options.replyToMsgId) {\r\n      return {\r\n        _: 'inputReplyToMessage',\r\n        reply_to_msg_id: getServerMessageId(options.replyToMsgId),\r\n        reply_to_peer_id: options.replyToPeerId && this.appPeersManager.getInputPeerById(options.replyToPeerId),\r\n        top_msg_id: options.threadId ? getServerMessageId(options.threadId) : undefined,\r\n        ...(options.replyToQuote && {\r\n          quote_text: options.replyToQuote.text,\r\n          quote_entities: options.replyToQuote.entities,\r\n          quote_offset: options.replyToQuote.offset\r\n        })\r\n      };\r\n    }\r\n  }\r\n\r\n  private checkSendOptions(options: MessageSendingParams) {\r\n    if(options.threadId && !options.replyToMsgId) {\r\n      options.replyToMsgId = options.threadId;\r\n    }\r\n\r\n    options.replyTo ??= this.getInputReplyTo(options);\r\n    // if(options.scheduleDate) {\r\n    //   const minTimestamp = (Date.now() / 1000 | 0) + 10;\r\n    //   if(options.scheduleDate <= minTimestamp) {\r\n    //     delete options.scheduleDate;\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  private beforeMessageSending(message: Message.message, options: Pick<MessageSendingParams, 'threadId'> & Partial<{\r\n    isGroupedItem: boolean,\r\n    isScheduled: boolean,\r\n    clearDraft: boolean,\r\n    sequential: boolean,\r\n    processAfter?: (cb: () => void) => void,\r\n    noOutgoingMessage?: boolean\r\n  }> = {}) {\r\n    const messageId = message.id;\r\n    const peerId = this.getMessagePeer(message);\r\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\r\n    message.storageKey = storage.key;\r\n    const callbacks: Array<() => void> = [];\r\n    if(options.isScheduled && !options.noOutgoingMessage) {\r\n      // if(!options.isGroupedItem) {\r\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\r\n      callbacks.push(() => {\r\n        this.rootScope.dispatchEvent('scheduled_new', message);\r\n      });\r\n    } else if(!options.noOutgoingMessage) {\r\n      /* if(options.threadId && this.threadsStorage[peerId]) {\r\n        delete this.threadsStorage[peerId][options.threadId];\r\n      } */\r\n      const storages: HistoryStorage[] = [\r\n        this.getHistoryStorage(peerId),\r\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\r\n      ];\r\n\r\n      for(const storage of storages) {\r\n        if(storage) {\r\n          storage.history.unshift(messageId);\r\n        }\r\n      }\r\n\r\n      this.saveMessages([message], {storage, isOutgoing: true});\r\n      this.setDialogTopMessage(message);\r\n\r\n      if(options.threadId) {\r\n        const forumTopic = this.dialogsStorage.getForumTopic(peerId, options.threadId);\r\n        if(forumTopic) {\r\n          this.setDialogTopMessage(message, forumTopic);\r\n        }\r\n      }\r\n\r\n      callbacks.push(() => {\r\n        this.rootScope.dispatchEvent('history_append', {storageKey: storage.key, message});\r\n      });\r\n    }\r\n\r\n    let pending: PendingMessageDetails;\r\n    if(!options.noOutgoingMessage) {\r\n      pending = this.pendingByRandomId[message.random_id] = {\r\n        peerId,\r\n        tempId: messageId,\r\n        threadId: options.threadId,\r\n        storage,\r\n        sequential: options.sequential\r\n      };\r\n\r\n      this.pendingTopMsgs[peerId] = messageId;\r\n    }\r\n\r\n    if(!options.isGroupedItem && message.send) {\r\n      callbacks.push(() => {\r\n        if(options.clearDraft) {\r\n          this.appDraftsManager.clearDraft(peerId, options.threadId);\r\n        }\r\n\r\n        if(!DO_NOT_SEND_MESSAGES) {\r\n          message.send();\r\n        }\r\n      });\r\n    }\r\n\r\n    if(callbacks.length) {\r\n      (options.processAfter || processAfter)(() => {\r\n        for(const callback of callbacks) {\r\n          callback();\r\n        }\r\n      });\r\n    }\r\n\r\n    return pending;\r\n  }\r\n\r\n  private generateOutgoingMessage(\r\n    peerId: PeerId,\r\n    options: MessageSendingParams & Partial<{\r\n      viaBotId: BotId,\r\n      groupId: string,\r\n      replyMarkup: ReplyMarkup,\r\n    }>\r\n  ) {\r\n    let postAuthor: string;\r\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\r\n    if(isBroadcast) {\r\n      const chat = this.appPeersManager.getPeer(peerId) as Chat.channel;\r\n      if(chat.pFlags.signatures) {\r\n        const user = this.appUsersManager.getSelf();\r\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\r\n        postAuthor = fullName;\r\n      }\r\n    }\r\n\r\n    let topMessage: number;\r\n    if(options.threadId && !this.appPeersManager.isForum(peerId)) {\r\n      const historyStorage = this.getHistoryStorage(peerId, options.threadId);\r\n      topMessage = historyStorage.history.first[0];\r\n    }\r\n\r\n    const message: Message.message = {\r\n      _: 'message',\r\n      id: this.generateTempMessageId(peerId, topMessage),\r\n      from_id: options.sendAsPeerId ? this.appPeersManager.getOutputPeer(options.sendAsPeerId) : this.generateFromId(peerId),\r\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n      post_author: postAuthor,\r\n      pFlags: this.generateFlags(peerId),\r\n      date: options.scheduleDate || (tsNow(true) + this.timeManager.getServerTimeOffset()),\r\n      message: '',\r\n      grouped_id: options.groupId,\r\n      random_id: randomLong(),\r\n      reply_to: this.generateReplyHeader(peerId, options.replyTo),\r\n      via_bot_id: options.viaBotId,\r\n      reply_markup: options.replyMarkup,\r\n      replies: this.generateReplies(peerId),\r\n      views: isBroadcast && 1,\r\n      pending: true\r\n    };\r\n\r\n    defineNotNumerableProperties(message, ['send', 'promise']);\r\n    if(options.groupId === undefined) {\r\n      message.promise = deferredPromise();\r\n    }\r\n\r\n    return message;\r\n  }\r\n\r\n  private generateReplyHeader(peerId: PeerId, replyTo: InputReplyTo): MessageReplyHeader {\r\n    if(!replyTo) {\r\n      return;\r\n    }\r\n\r\n    if(replyTo._ === 'inputReplyToStory') {\r\n      return {\r\n        _: 'messageReplyStoryHeader',\r\n        story_id: replyTo.story_id,\r\n        user_id: this.appUsersManager.getUserId(replyTo.user_id)\r\n      };\r\n    }\r\n\r\n    const replyWillBeInPeerId = peerId;\r\n    const replyToPeerId = this.appPeersManager.getPeerId(replyTo.reply_to_peer_id);\r\n    if(replyToPeerId) {\r\n      peerId = replyToPeerId;\r\n    }\r\n\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const isForum = this.appPeersManager.isForum(peerId);\r\n    const replyToMsgId = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_msg_id, channelId);\r\n    let replyToTopId = replyTo.top_msg_id ? this.appMessagesIdsManager.generateMessageId(replyTo.top_msg_id, channelId) : undefined;\r\n    const originalMessage = this.getMessageByPeer(peerId, replyToMsgId);\r\n\r\n    if(isForum && !replyToTopId && originalMessage) {\r\n      replyToTopId = getMessageThreadId(originalMessage, true);\r\n    }\r\n\r\n    const header: MessageReplyHeader = {\r\n      _: 'messageReplyHeader',\r\n      pFlags: {},\r\n      reply_to_msg_id: replyToMsgId || replyToTopId\r\n    };\r\n\r\n    if(replyToTopId && isForum && GENERAL_TOPIC_ID !== replyToTopId) {\r\n      header.pFlags.forum_topic = true;\r\n    }\r\n\r\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\r\n      header.reply_to_top_id = replyToTopId;\r\n    }\r\n\r\n    if(replyTo.quote_text) {\r\n      header.quote_text = replyTo.quote_text;\r\n      header.quote_entities = replyTo.quote_entities;\r\n      header.quote_offset = replyTo.quote_offset;\r\n      header.pFlags.quote = true;\r\n    }\r\n\r\n    if(replyToPeerId) {\r\n      if(replyToPeerId.isUser() || !this.appPeersManager.isPeerPublic(replyToPeerId)) {\r\n        delete header.reply_to_msg_id;\r\n        header.quote_text ??= (originalMessage as Message.message).message;\r\n      } else {\r\n        header.reply_to_peer_id = this.appPeersManager.getOutputPeer(replyToPeerId);\r\n      }\r\n    }\r\n\r\n    header.reply_media = (originalMessage as Message.message)?.media;\r\n\r\n    if(originalMessage && replyWillBeInPeerId !== originalMessage.peerId) {\r\n      header.reply_from = this.generateForwardHeader(peerId, originalMessage as Message.message, true);\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  private generateReplies(peerId: PeerId) {\r\n    let replies: MessageReplies.messageReplies;\r\n    if(this.appPeersManager.isBroadcast(peerId)) {\r\n      const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\r\n      if(channelFull?.linked_chat_id) {\r\n        replies = {\r\n          _: 'messageReplies',\r\n          pFlags: {\r\n            comments: true\r\n          },\r\n          channel_id: channelFull.linked_chat_id,\r\n          replies: 0,\r\n          replies_pts: 0\r\n        };\r\n      }\r\n    }\r\n\r\n    return replies;\r\n  }\r\n\r\n  /**\r\n   * Generate correct from_id according to anonymous or broadcast\r\n   * Won't return peer if message is sent by the peer\r\n   */\r\n  public generateFromId(peerId: PeerId) {\r\n    if(this.appPeersManager.isAnyChat(peerId) && (this.appPeersManager.isBroadcast(peerId) || this.isAnonymousSending(peerId))) {\r\n      return undefined;\r\n    } else {\r\n      return this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId());\r\n    }\r\n  }\r\n\r\n  private generateFlags(peerId: PeerId) {\r\n    const pFlags: Message.message['pFlags'] = {};\r\n    const fromId = this.appUsersManager.getSelf().id;\r\n    if(peerId !== fromId) {\r\n      pFlags.out = true;\r\n\r\n      if(!this.appPeersManager.isChannel(peerId) && !this.appUsersManager.isBot(peerId)) {\r\n        pFlags.unread = true;\r\n      }\r\n    }\r\n\r\n    if(this.appPeersManager.isBroadcast(peerId)) {\r\n      pFlags.post = true;\r\n    }\r\n\r\n    return pFlags;\r\n  }\r\n\r\n  private generateForwardHeader(peerId: PeerId, originalMessage: Message.message, isReply?: boolean) {\r\n    if(!originalMessage) {\r\n      return;\r\n    }\r\n\r\n    const myId = this.appUsersManager.getSelf().id.toPeerId();\r\n    const fromId = originalMessage.fromId;\r\n    if(fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from && !isReply) {\r\n      return;\r\n    }\r\n\r\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\r\n      _: 'messageFwdHeader',\r\n      date: originalMessage.date,\r\n      pFlags: {}\r\n    };\r\n\r\n    let isUserHidden = false;\r\n    if(originalMessage.fwd_from) {\r\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\r\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\r\n      fwdHeader.channel_post = originalMessage.fwd_from.channel_post;\r\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\r\n    } else {\r\n      fwdHeader.post_author = originalMessage.post_author;\r\n\r\n      if(fromId.isUser()) {\r\n        const userFull = this.appProfileManager.getCachedFullUser(fromId.toUserId());\r\n        if(userFull?.private_forward_name) {\r\n          fwdHeader.from_name = userFull.private_forward_name;\r\n          isUserHidden = true;\r\n        }\r\n      }\r\n\r\n      if(!isUserHidden) {\r\n        fwdHeader.from_id = this.appPeersManager.getOutputPeer(fromId);\r\n      }\r\n\r\n      if(this.appPeersManager.isBroadcast(originalMessage.peerId)) {\r\n        fwdHeader.channel_post = originalMessage.id;\r\n      }\r\n    }\r\n\r\n    if(peerId === myId && !isUserHidden && !isReply) {\r\n      fwdHeader.saved_from_msg_id = originalMessage.id;\r\n      fwdHeader.saved_from_peer = this.appPeersManager.getOutputPeer(originalMessage.peerId);\r\n    }\r\n\r\n    return fwdHeader;\r\n  }\r\n\r\n  private processMessageWebPageOptions(\r\n    message: Message.message,\r\n    options: Parameters<AppMessagesManager['sendText']>[0]\r\n  ): {media: InputMedia.inputMediaWebPage, invert_media: boolean} | {no_webpage: boolean} | {} {\r\n    if(message._ !== 'message') {\r\n      return {};\r\n    }\r\n\r\n    if(!options.webPage) {\r\n      return {no_webpage: options.noWebPage};\r\n    }\r\n\r\n    message.media = {\r\n      _: 'messageMediaWebPage',\r\n      pFlags: {\r\n        force_large_media: options.webPageOptions.largeMedia || undefined,\r\n        force_small_media: options.webPageOptions.smallMedia || undefined\r\n      },\r\n      webpage: options.webPage\r\n    };\r\n\r\n    if(options.webPageOptions.invertMedia) {\r\n      message.pFlags.invert_media = true;\r\n    }\r\n\r\n    return {\r\n      media: {\r\n        _: 'inputMediaWebPage',\r\n        url: (options.webPage as WebPage.webPage).url,\r\n        pFlags: {\r\n          force_large_media: options.webPageOptions.largeMedia || undefined,\r\n          force_small_media: options.webPageOptions.smallMedia || undefined,\r\n          optional: options.webPageOptions.optional || undefined\r\n        }\r\n      },\r\n      invert_media: options.webPageOptions.invertMedia\r\n    };\r\n  }\r\n\r\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\r\n    const maxId = Number.MAX_SAFE_INTEGER;\r\n    const message: Message.messageService = {\r\n      _: 'messageService',\r\n      pFlags: {},\r\n      action: {\r\n        _: 'messageActionChannelEditPhoto',\r\n        photo\r\n      },\r\n      id: maxId,\r\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n      mid: maxId,\r\n      peerId,\r\n      date: (photo as Photo.photo).date,\r\n      fromId: peerId\r\n    };\r\n\r\n    this.getHistoryMessagesStorage(peerId).set(maxId, message);\r\n    return message;\r\n  }\r\n\r\n  public getUploadPromise(uploadFileName: string) {\r\n    return this.uploadFilePromises[uploadFileName];\r\n  }\r\n\r\n  public isAnonymousSending(peerId: PeerId): boolean {\r\n    if(!peerId.isAnyChat()) {\r\n      return false;\r\n    }\r\n\r\n    const chat = this.appPeersManager.getPeer(peerId);\r\n    return (chat as Chat.channel).admin_rights?.pFlags?.anonymous;\r\n  }\r\n\r\n  public setDialogTopMessage(\r\n    message: MyMessage,\r\n    dialog: MTDialog.dialog | ForumTopic = this.getDialogOnly(message.peerId)\r\n  ) {\r\n    if(!dialog) {\r\n      return;\r\n    }\r\n\r\n    dialog.top_message = message.mid;\r\n\r\n    const historyStorage = this.getHistoryStorage(message.peerId, dialog._ === 'forumTopic' ? dialog.id : undefined);\r\n    historyStorage.maxId = message.mid;\r\n\r\n    this.dialogsStorage.generateIndexForDialog(dialog, false, message);\r\n\r\n    this.scheduleHandleNewDialogs(message.peerId, dialog);\r\n  }\r\n\r\n  public cancelPendingMessage(randomId: string) {\r\n    const pendingData = this.pendingByRandomId[randomId];\r\n\r\n    /* if(DEBUG) {\r\n      this.log('cancelPendingMessage', randomId, pendingData);\r\n    } */\r\n\r\n    if(pendingData) {\r\n      const {peerId, tempId, storage} = pendingData;\r\n      const historyStorage = this.getHistoryStorage(peerId);\r\n\r\n      if(this.appPeersManager.isChannel(peerId)) {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateDeleteChannelMessages',\r\n          channel_id: peerId.toChatId(),\r\n          messages: [tempId],\r\n          pts: undefined,\r\n          pts_count: undefined\r\n        });\r\n      } else {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateDeleteMessages',\r\n          messages: [tempId],\r\n          pts: undefined,\r\n          pts_count: undefined\r\n        });\r\n      }\r\n\r\n      historyStorage.history.delete(tempId);\r\n\r\n      delete this.pendingByRandomId[randomId];\r\n      this.deleteMessageFromStorage(storage, tempId);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /* public async refreshConversations() {\r\n    const limit = 200, outDialogs: Dialog[] = [];\r\n    for(let folderId = 0; folderId < 2; ++folderId) {\r\n      let offsetDate = 0;\r\n      for(;;) {\r\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\r\n\r\n        if(dialogs.length) {\r\n          outDialogs.push(...dialogs as Dialog[]);\r\n          const dialog = dialogs[dialogs.length - 1];\r\n\r\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\r\n          const peerId = getPeerId(dialog.peer);\r\n          const mid = this.appMessagesIdsManager.generateMessageId(dialog.top_message);\r\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\r\n\r\n          if(!offsetDate) {\r\n            console.error('refreshConversations: got no offsetDate', dialog);\r\n            break;\r\n          }\r\n        }\r\n\r\n        if(isEnd) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    let obj: {[peerId: string]: Dialog} = {};\r\n    outDialogs.forEach((dialog) => {\r\n      obj[dialog.peerId] = dialog;\r\n    });\r\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\r\n\r\n    return outDialogs;\r\n  } */\r\n\r\n  public async fillConversations(folderId = GLOBAL_FOLDER_ID): Promise<void> {\r\n    const middleware = this.middleware.get();\r\n    while(!this.dialogsStorage.isDialogsLoaded(folderId)) {\r\n      const result = await this.getTopMessages({limit: 100, folderId});\r\n      if(!middleware() || !result || result.isEnd) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* public async getConversationsAll(query = '', folderId = 0) {\r\n    const limit = 200, outDialogs: Dialog[] = [];\r\n    for(; folderId < 2; ++folderId) {\r\n      let offsetIndex = 0;\r\n      for(;;) {\r\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\r\n\r\n        if(dialogs.length) {\r\n          outDialogs.push(...dialogs);\r\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return outDialogs;\r\n  } */\r\n\r\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n    if(threadId && !this.appChatsManager.isForum(peerId.toChatId())) {\r\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\r\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\r\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\r\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\r\n    } else {\r\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\r\n      const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\r\n      // readMaxId can be 4294967295 (0)\r\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId && getServerMessageId(readMaxId) ? readMaxId : 0;\r\n    }\r\n  }\r\n\r\n  // public lolSet = new Set();\r\n  public getTopMessages({limit, folderId, query, offsetTopicId}: {\r\n    limit: number,\r\n    folderId: number,\r\n    query?: string,\r\n    offsetTopicId?: ForumTopic['id']\r\n  }) {\r\n    // const dialogs = this.dialogsStorage.getFolder(folderId);\r\n    const offsetId = 0;\r\n    let offsetPeerId: PeerId;\r\n    let offsetIndex = 0;\r\n    query ||= undefined;\r\n\r\n    let offsetDate = this.dialogsStorage.getOffsetDate(folderId);\r\n    if(offsetDate) {\r\n      offsetIndex = offsetDate * 0x10000;\r\n      offsetDate += this.timeManager.getServerTimeOffset();\r\n    }\r\n\r\n    const useLimit = 100;\r\n    const middleware = this.middleware.get();\r\n    const isForum = this.dialogsStorage.isFilterIdForForum(folderId);\r\n    const isSearch = !!query;\r\n    const peerId = isForum ? folderId : undefined;\r\n\r\n    const processResult = (result: MessagesDialogs | MessagesForumTopics) => {\r\n      if(!middleware() || result._ === 'messages.dialogsNotModified') return null;\r\n\r\n      if(DEBUG) {\r\n        this.log('messages.getDialogs result:', result);\r\n      }\r\n\r\n      // can reset pinned order here\r\n      if(!peerId && !offsetId && !offsetDate && !offsetPeerId && folderId !== GLOBAL_FOLDER_ID) {\r\n        this.dialogsStorage.resetPinnedOrder(folderId);\r\n      }\r\n\r\n      if(!peerId && !offsetDate) {\r\n        // telegramMeWebManager.setAuthorized(true);\r\n        this.appDraftsManager.addMissedDialogs();\r\n      }\r\n\r\n      this.appUsersManager.saveApiUsers(result.users);\r\n      this.appChatsManager.saveApiChats(result.chats);\r\n      this.saveMessages(result.messages);\r\n\r\n      let maxSeenIdIncremented = offsetDate ? true : false;\r\n      let hasPrepend = false;\r\n      const noIdsDialogs: BroadcastEvents['dialogs_multiupdate'] = new Map();\r\n      const setFolderId: REAL_FOLDER_ID = folderId === GLOBAL_FOLDER_ID ? FOLDER_ID_ALL : folderId as REAL_FOLDER_ID;\r\n      const saveGlobalOffset = (!!peerId && !isSearch) || folderId === GLOBAL_FOLDER_ID;\r\n      const items: Array<Dialog | ForumTopic> =\r\n        (result as MessagesDialogs.messagesDialogsSlice).dialogs as Dialog[] ||\r\n        (result as MessagesForumTopics).topics as ForumTopic[];\r\n      forEachReverse(items, (dialog) => {\r\n        if(!dialog) {\r\n          return;\r\n        }\r\n\r\n        // const d = Object.assign({}, dialog);\r\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\r\n        if(!peerId) {\r\n          (dialog as Dialog).folder_id ??= setFolderId;\r\n        }\r\n\r\n        this.dialogsStorage.saveDialog({\r\n          dialog,\r\n          ignoreOffsetDate: !isSearch,\r\n          saveGlobalOffset\r\n        });\r\n\r\n        if(dialog.peerId === undefined) {\r\n          this.log.error('bugged dialog?', dialog);\r\n          debugger;\r\n          return;\r\n        }\r\n\r\n        if(!maxSeenIdIncremented &&\r\n          !this.appPeersManager.isChannel(dialog.peerId || this.appPeersManager.getPeerId(dialog.peer))) {\r\n          this.incrementMaxSeenId(dialog.top_message);\r\n          maxSeenIdIncremented = true;\r\n        }\r\n\r\n        // if(!folderId && !dialog.folder_id) {\r\n        //   this.lolSet.add(dialog.peerId);\r\n        // }\r\n\r\n        if(offsetIndex && getDialogIndex(dialog) > offsetIndex) {\r\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\r\n          hasPrepend = true;\r\n        }\r\n\r\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\r\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\r\n        if(\r\n          !peerId &&\r\n          !getServerMessageId(dialog.read_inbox_max_id) &&\r\n          !getServerMessageId(dialog.read_outbox_max_id) &&\r\n          !dialog.unread_count &&\r\n          getServerMessageId(dialog.top_message)\r\n        ) {\r\n          noIdsDialogs.set(dialog.peerId, {dialog: dialog as Dialog});\r\n\r\n          this.log.error('noIdsDialogs', dialog, params);\r\n        } else if(dialog.top_message) { // * fix sending status\r\n          const topMessage = this.getMessageByPeer(dialog.peerId, dialog.top_message);\r\n          if(topMessage) {\r\n            this.setMessageUnreadByDialog(topMessage, dialog);\r\n            this.dialogsStorage.setDialogToState(dialog);\r\n          }\r\n        }\r\n      });\r\n\r\n      if(noIdsDialogs.size) {\r\n        // setTimeout(() => { // test bad situation\r\n        const peerIds = [...noIdsDialogs.keys()];\r\n        const promises = peerIds.map((peerId) => this.reloadConversation(peerId));\r\n        Promise.all(promises).then(() => {\r\n          this.rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\r\n\r\n          for(let i = 0; i < peerIds.length; ++i) {\r\n            const peerId = peerIds[i];\r\n            this.rootScope.dispatchEvent('dialog_unread', {\r\n              peerId,\r\n              dialog: this.getDialogOnly(peerId)\r\n            });\r\n          }\r\n        });\r\n        // }, 10e3);\r\n      }\r\n\r\n      const count = (result as MessagesDialogs.messagesDialogsSlice).count;\r\n\r\n      // exclude empty draft dialogs\r\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\r\n      let dialogsLength = 0;\r\n      if(!isSearch) for(let i = 0, length = folderDialogs.length; i < length; ++i) {\r\n        const dialog = folderDialogs[i];\r\n        if(getServerMessageId(dialog.top_message)) {\r\n          ++dialogsLength;\r\n        } else {\r\n          this.log.error('something strange with dialog', dialog);\r\n        }\r\n      }\r\n\r\n      let isEnd: boolean;\r\n      if(isSearch) {\r\n        isEnd = !count || items.length === count;\r\n      } else {\r\n        isEnd = /* limit > dialogsResult.dialogs.length || */\r\n          !count ||\r\n          dialogsLength >= count ||\r\n          !items.length;\r\n      }\r\n\r\n      if(isEnd && !isSearch) {\r\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\r\n      }\r\n\r\n      if(hasPrepend) {\r\n        this.scheduleHandleNewDialogs();\r\n      } else {\r\n        this.rootScope.dispatchEvent('dialogs_multiupdate', new Map());\r\n      }\r\n\r\n      const dialogs = items;\r\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\r\n      return {\r\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1],\r\n        count,\r\n        dialogs: slicedDialogs\r\n      };\r\n    };\r\n\r\n    let promise: Promise<ReturnType<typeof processResult>>, params: any;\r\n    if(peerId) {\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: 'channels.getForumTopics',\r\n        params: params = {\r\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n          limit: useLimit,\r\n          offset_date: offsetTopicId ? undefined : offsetDate,\r\n          offset_id: offsetId,\r\n          offset_topic: offsetTopicId,\r\n          q: query\r\n        },\r\n        options: {\r\n          // timeout: APITIMEOUT,\r\n          noErrorBox: true\r\n        },\r\n        processResult: (result) => {\r\n          result = this.dialogsStorage.processTopics(peerId, result);\r\n          return processResult(result);\r\n        }\r\n      });\r\n    } else {\r\n      // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\r\n      // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\r\n      // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: 'messages.getDialogs',\r\n        params: params = {\r\n          folder_id: folderId,\r\n          offset_date: offsetDate,\r\n          offset_id: offsetId,\r\n          offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\r\n          limit: useLimit,\r\n          hash: '0'\r\n        },\r\n        options: {\r\n          // timeout: APITIMEOUT,\r\n          noErrorBox: true\r\n        },\r\n        processResult\r\n      });\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public async forwardMessagesInner(options: MessageForwardParams) {\r\n    let {peerId, fromPeerId, mids} = options;\r\n    // delete options.replyToMsgId;\r\n    // delete options.threadId;\r\n\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n    mids = mids.slice().sort((a, b) => a - b);\r\n\r\n    for(let i = 0, length = mids.length; i < length; ++i) {\r\n      const mid = mids[i];\r\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\r\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\r\n        this.sendText({\r\n          peerId,\r\n          threadId: options.threadId,\r\n          sendAsPeerId: options.sendAsPeerId,\r\n          text: originalMessage.message,\r\n          entities: originalMessage.entities,\r\n          scheduleDate: options.scheduleDate,\r\n          silent: options.silent\r\n        });\r\n\r\n        mids.splice(i--, 1);\r\n        --length;\r\n      }\r\n    }\r\n\r\n    if(!mids.length) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    const config = await this.apiManager.getConfig();\r\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\r\n\r\n    if(options.dropCaptions) {\r\n      options.dropAuthor = true;\r\n    }\r\n\r\n    const groups: {\r\n      [groupId: string]: {\r\n        tempId: string,\r\n        messages: Message.message[]\r\n      }\r\n    } = {};\r\n\r\n    const newMids: number[] = [];\r\n    const newMessages = mids.map((mid) => {\r\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\r\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\r\n      newMids.push(message.id);\r\n\r\n      const keys: Array<keyof Message.message> = [\r\n        'entities',\r\n        'media'\r\n        // 'reply_markup'\r\n      ];\r\n\r\n      const flags: Array<keyof Message.message['pFlags']> = [\r\n        'invert_media'\r\n      ];\r\n\r\n      if(!options.dropAuthor) {\r\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\r\n        keys.push('views', 'forwards');\r\n\r\n        if(message.fwd_from?.from_name && peerId === this.appPeersManager.peerId) {\r\n          delete message.from_id;\r\n        }\r\n      }\r\n\r\n      if(!options.dropCaptions || !originalMessage.media) {\r\n        keys.push('message');\r\n      }\r\n\r\n      const replyToMid = (originalMessage.reply_to as MessageReplyHeader.messageReplyHeader)?.reply_to_msg_id;\r\n      const replyToMessageIdx = mids.indexOf(replyToMid);\r\n      if(replyToMid && replyToMessageIdx !== -1) {\r\n        const newReplyToMid = newMids[replyToMessageIdx];\r\n        message.reply_to = {\r\n          _: 'messageReplyHeader',\r\n          reply_to_msg_id: newReplyToMid,\r\n          pFlags: {}\r\n        };\r\n\r\n        /* this.invokeAfterMessageIsSent(newReplyToMid, 'reply', async(originalMessage) => {\r\n          message.reply_to.reply_to_msg_id = originalMessage.mid;\r\n        }); */\r\n      }\r\n\r\n      keys.forEach((key) => {\r\n        // @ts-ignore\r\n        message[key] = copy(originalMessage[key]);\r\n      });\r\n\r\n      flags.forEach((key) => {\r\n        // @ts-ignore\r\n        message.pFlags[key] = originalMessage.pFlags[key];\r\n      });\r\n\r\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\r\n      if(document) {\r\n        const types: MyDocument['type'][] = ['round', 'voice'];\r\n        if(types.includes(document.type)) {\r\n          (message as MyMessage).pFlags.media_unread = true;\r\n        }\r\n\r\n        if(document.sticker && !this.rootScope.premium) {\r\n          const effectThumb = getStickerEffectThumb(document);\r\n          if(effectThumb) {\r\n            (message.media as MessageMedia.messageMediaDocument).pFlags.nopremium = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(originalMessage.grouped_id) {\r\n        const group = groups[originalMessage.grouped_id] ??= {tempId: '' + ++this.groupedTempId, messages: []};\r\n        group.messages.push(message);\r\n      }\r\n\r\n      return message;\r\n    });\r\n\r\n    for(const groupId in groups) {\r\n      const group = groups[groupId];\r\n      if(group.messages.length > 1) {\r\n        group.messages.forEach((message) => {\r\n          message.grouped_id = group.tempId;\r\n        });\r\n      }\r\n    }\r\n\r\n    newMessages.forEach((message) => {\r\n      this.beforeMessageSending(message, {\r\n        isScheduled: !!options.scheduleDate || undefined,\r\n        sequential: true\r\n      });\r\n    });\r\n\r\n    const sentRequestOptions: PendingAfterMsg = {};\r\n    if(this.pendingAfterMsgs[peerId]) {\r\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\r\n    }\r\n\r\n    const promise = /* true ? Promise.resolve() :  */this.apiManager.invokeApiAfter('messages.forwardMessages', {\r\n      from_peer: this.appPeersManager.getInputPeerById(fromPeerId),\r\n      id: mids.map((mid) => getServerMessageId(mid)),\r\n      random_id: newMessages.map((message) => message.random_id),\r\n      to_peer: this.appPeersManager.getInputPeerById(peerId),\r\n      with_my_score: options.withMyScore,\r\n      silent: options.silent,\r\n      schedule_date: options.scheduleDate,\r\n      drop_author: options.dropAuthor,\r\n      drop_media_captions: options.dropCaptions,\r\n      send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\r\n      top_msg_id: options.threadId ? this.appMessagesIdsManager.generateMessageId(options.threadId) : undefined\r\n    }, sentRequestOptions).then((updates) => {\r\n      this.log('forwardMessages updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    }, (error: ApiError) => {\r\n      this.onMessagesSendError(newMessages, error);\r\n      throw error;\r\n    }).finally(() => {\r\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\r\n        delete this.pendingAfterMsgs[peerId];\r\n      }\r\n    });\r\n\r\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\r\n\r\n    const promises: (typeof promise)[] = [promise];\r\n    if(overflowMids.length) {\r\n      promises.push(this.forwardMessages({\r\n        ...options,\r\n        peerId,\r\n        fromPeerId,\r\n        mids: overflowMids\r\n      }));\r\n    }\r\n\r\n    return Promise.all(promises).then(noop);\r\n  }\r\n\r\n  public forwardMessages(options: MessageForwardParams) {\r\n    this.checkSendOptions(options);\r\n\r\n    const {peerId, fromPeerId, mids} = options;\r\n    const channelId = this.appPeersManager.isChannel(fromPeerId) ? fromPeerId.toChatId() : undefined;\r\n    const splitted = this.appMessagesIdsManager.splitMessageIdsByChannels(mids, channelId);\r\n    const promises = splitted.map(([_channelId, {mids}]) => {\r\n      return this.forwardMessagesInner({\r\n        ...options,\r\n        peerId,\r\n        fromPeerId: _channelId ? channelId.toPeerId(true) : this.getMessageByPeer(fromPeerId, mids[0]).peerId,\r\n        mids\r\n      });\r\n    });\r\n\r\n    return Promise.all(promises).then(noop);\r\n  }\r\n\r\n  public generateEmptyMessage(mid: number): Message.message | Message.messageService {\r\n    return undefined;\r\n    // return {\r\n    //   _: 'messageEmpty',\r\n    //   id: getServerMessageId(mid),\r\n    //   mid,\r\n    //   deleted: true,\r\n    //   pFlags: {}\r\n    // };\r\n  }\r\n\r\n  private onMessagesSendError(messages: Message.message[], error?: ApiError) {\r\n    messages.forEach((message) => {\r\n      if(message.error === error) {\r\n        return;\r\n      }\r\n\r\n      if(error) {\r\n        message.error = error;\r\n        this.onMessageModification(message);\r\n        this.rootScope.dispatchEvent('message_error', {storageKey: message.storageKey, tempId: message.mid, error});\r\n\r\n        const dialog = this.getDialogOnly(message.peerId);\r\n        if(dialog) {\r\n          this.rootScope.dispatchEvent('dialog_unread', {peerId: message.peerId, dialog});\r\n        }\r\n      } else {\r\n        delete message.error;\r\n        this.onMessageModification(message);\r\n      }\r\n    });\r\n  }\r\n\r\n  private onMessageModification(message: MyMessage, storage?: MessagesStorage | MessagesStorageKey) {\r\n    this.setMessageToStorage(storage ?? this.getHistoryMessagesStorage(message.peerId), message);\r\n  }\r\n\r\n  public mirrorAllMessages(port?: MessageEventSource) {\r\n    const mirror: Mirrors['messages'] = {};\r\n    [\r\n      this.messagesStorageByPeerId,\r\n      this.scheduledMessagesStorage\r\n    ].forEach((storages) => {\r\n      for(const key in storages) {\r\n        const storage = storages[key];\r\n        mirror[storage.key] = Object.fromEntries(storage.entries());\r\n      }\r\n    });\r\n\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'messages',\r\n      value: mirror\r\n    }, port);\r\n  }\r\n\r\n  public getMessagesStorageByKey(key: MessagesStorageKey) {\r\n    const s = key.split('_');\r\n    const peerId: PeerId = +s[0];\r\n    const type: MessagesStorageType = s[1] as any;\r\n    return type === 'scheduled' ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\r\n  }\r\n\r\n  public getMessageFromStorage(storage: MessagesStorage | MessagesStorageKey, mid: number) {\r\n    storage = this.getMessagesStorage(storage);\r\n\r\n    // * use global storage instead\r\n    if(storage?.type === 'history' && isLegacyMessageId(mid)) {\r\n      storage = this.getGlobalHistoryMessagesStorage();\r\n    }\r\n\r\n    return storage?.get(mid)/*  || this.generateEmptyMessage(mid) */;\r\n  }\r\n\r\n  public setMessageToStorage(storage: MessagesStorage | MessagesStorageKey, message: MyMessage) {\r\n    storage = this.getMessagesStorage(storage);\r\n\r\n    const {mid} = message;\r\n    // * global storage mirror\r\n    if(\r\n      storage?.type === 'history' &&\r\n      isLegacyMessageId(mid) &&\r\n      storage.peerId !== GLOBAL_HISTORY_PEER_ID\r\n    ) {\r\n      const globalStorage = this.getGlobalHistoryMessagesStorage();\r\n      this.setMessageToStorage(globalStorage, message);\r\n    }\r\n\r\n    if(storage.type !== 'grouped') {\r\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n        name: 'messages',\r\n        key: joinDeepPath(storage.key, mid),\r\n        value: message\r\n      });\r\n    }\r\n\r\n    return storage?.set(mid, message);\r\n  }\r\n\r\n  public deleteMessageFromStorage(storage: MessagesStorage, mid: number) {\r\n    if(\r\n      storage?.type === 'history' &&\r\n      isLegacyMessageId(mid) &&\r\n      storage.peerId !== GLOBAL_HISTORY_PEER_ID\r\n    ) {\r\n      const globalStorage = this.getGlobalHistoryMessagesStorage();\r\n      this.deleteMessageFromStorage(globalStorage, mid);\r\n    }\r\n\r\n    if(storage.type !== 'grouped') {\r\n      MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n        name: 'messages',\r\n        key: joinDeepPath(storage.key, mid)\r\n      });\r\n    }\r\n\r\n    return storage?.delete(mid);\r\n  }\r\n\r\n  private createMessageStorage(peerId: PeerId, type: MessagesStorageType) {\r\n    const storage: MessagesStorage = new Map() as any;\r\n    storage.peerId = peerId;\r\n    storage.type = type;\r\n    storage.key = `${peerId}_${type}`;\r\n\r\n    /* let num = 0;\r\n    Object.defineProperty(storage, 'num', {\r\n      get: () => ++num,\r\n      set: (_num: number) => num = _num,\r\n      enumerable: false\r\n    });\r\n\r\n    Object.defineProperty(storage, 'generateIndex', {\r\n      value: (message: any) => {\r\n        if(message.index === undefined) {\r\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\r\n        }\r\n      },\r\n      enumerable: false\r\n    }); */\r\n\r\n    return storage;\r\n  }\r\n\r\n  public getHistoryMessagesStorage(peerId: PeerId) {\r\n    return this.messagesStorageByPeerId[peerId] ??= this.createMessageStorage(peerId, 'history');\r\n  }\r\n\r\n  public getGlobalHistoryMessagesStorage() {\r\n    return this.getHistoryMessagesStorage(GLOBAL_HISTORY_PEER_ID);\r\n  }\r\n\r\n  public getMessagesStorage(key: MessagesStorageKey | MessagesStorage): MessagesStorage {\r\n    if(typeof(key) === 'object') {\r\n      return key;\r\n    } else {\r\n      return this.getMessagesStorageByKey(key);\r\n    }\r\n  }\r\n\r\n  public getMessageById(messageId: number) {\r\n    if(isLegacyMessageId(messageId)) {\r\n      return this.getMessageFromStorage(this.getGlobalHistoryMessagesStorage(), messageId);\r\n    }\r\n\r\n    return this.generateEmptyMessage(messageId);\r\n\r\n    // for(const peerId in this.messagesStorageByPeerId) {\r\n    //   if(this.appPeersManager.isChannel(peerId.toPeerId())) {\r\n    //     continue;\r\n    //   }\r\n\r\n    //   const message = this.messagesStorageByPeerId[peerId].get(messageId);\r\n    //   if(message) {\r\n    //     return message;\r\n    //   }\r\n    // }\r\n\r\n    // return this.getMessageFromStorage(null, messageId);\r\n  }\r\n\r\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\r\n    if(!peerId) {\r\n      return this.getMessageById(messageId);\r\n    }\r\n\r\n    return this.getMessageFromStorage(this.getHistoryMessagesStorage(peerId), messageId);\r\n  }\r\n\r\n  public getMessagePeer(message: any): PeerId {\r\n    const toId = message?.peer_id && this.appPeersManager.getPeerId(message.peer_id) || NULL_PEER_ID;\r\n\r\n    return toId;\r\n  }\r\n\r\n  public getDialogOnly(peerId: PeerId) {\r\n    return this.dialogsStorage.getDialogOnly(peerId);\r\n  }\r\n\r\n  public cantForwardDeleteMids(storageKey: MessagesStorageKey, mids: number[]) {\r\n    const storage = this.getMessagesStorage(storageKey);\r\n    let cantForward = !mids.length, cantDelete = !mids.length;\r\n    for(const mid of mids) {\r\n      const message = this.getMessageFromStorage(storage, mid);\r\n      if(!cantForward) {\r\n        cantForward = !this.canForward(message);\r\n      }\r\n\r\n      if(!cantDelete) {\r\n        cantDelete = !this.canDeleteMessage(message);\r\n      }\r\n\r\n      if(cantForward && cantDelete) break;\r\n    }\r\n\r\n    return {cantForward, cantDelete};\r\n  }\r\n\r\n  public reloadConversationOrTopic(peerId: PeerId, threadId?: number) {\r\n    if(threadId) {\r\n      this.dialogsStorage.getForumTopicById(peerId, threadId);\r\n    } else {\r\n      this.reloadConversation(peerId);\r\n    }\r\n  }\r\n\r\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\r\n  public reloadConversation(inputPeer: PeerId | InputPeer, useThrottled?: boolean) {\r\n    const log = this.log.bindPrefix('reloadConversation');\r\n    let promise: CancellablePromise<Dialog>;\r\n    if(inputPeer !== undefined) {\r\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\r\n\r\n      let obj = this.reloadConversationsPeers.get(peerId);\r\n      if(obj && (useThrottled || !obj.sentRequest)) {\r\n        promise = obj.promise;\r\n      }\r\n\r\n      log.warn({peerId, throttled: !!promise, sentRequest: obj?.sentRequest});\r\n\r\n      if(promise) {\r\n        return promise;\r\n      }\r\n\r\n      promise = deferredPromise();\r\n      this.reloadConversationsPeers.set(peerId, obj = {\r\n        inputDialogPeer: this.appPeersManager.getInputDialogPeerById(inputPeer),\r\n        promise\r\n      });\r\n    }\r\n\r\n    if(this.reloadConversationsPromise) {\r\n      return promise || this.reloadConversationsPromise;\r\n    }\r\n\r\n    log('creating throttled promise');\r\n    this.reloadConversationsPromise = pause(0).then(() => {\r\n      const reloadConversationsPeers = new Map(this.reloadConversationsPeers);\r\n      const inputDialogPeers = [...reloadConversationsPeers.values()].map((obj) => {\r\n        obj.sentRequest = true;\r\n        return obj.inputDialogPeer;\r\n      });\r\n\r\n      const fullfillLeft = () => {\r\n        log('fullfilling left', reloadConversationsPeers);\r\n        for(const [peerId, obj] of reloadConversationsPeers) {\r\n          if(this.reloadConversationsPeers.get(peerId) === obj) {\r\n            this.reloadConversationsPeers.delete(peerId);\r\n          }\r\n\r\n          obj.promise.resolve(undefined);\r\n        }\r\n      };\r\n\r\n      const invoke = async() => {\r\n        for(;;) {\r\n          const result = await this.apiManager.invokeApi(\r\n            'messages.getPeerDialogs',\r\n            {peers: inputDialogPeers},\r\n            {floodMaxTimeout: Infinity}\r\n          );\r\n          const currentState = this.apiUpdatesManager.updatesState;\r\n          const {state} = result;\r\n          if(currentState.pts && currentState.pts !== state.pts) {\r\n            this.log.warn('current pts is different, will try again', currentState.pts, state.pts);\r\n            await pause(500);\r\n            continue;\r\n          }\r\n\r\n          return result;\r\n        }\r\n      };\r\n\r\n      return invoke().then((result) => {\r\n        log('result', result);\r\n\r\n        for(const [peerId, obj] of reloadConversationsPeers) {\r\n          if(this.reloadConversationsPeers.get(peerId) === obj) {\r\n            this.reloadConversationsPeers.delete(peerId);\r\n          }\r\n        }\r\n\r\n        this.dialogsStorage.applyDialogs(result);\r\n\r\n        result.dialogs.forEach((dialog) => {\r\n          const peerId = dialog.peerId;\r\n          if(!peerId) {\r\n            return;\r\n          }\r\n\r\n          const obj = reloadConversationsPeers.get(peerId);\r\n          obj.promise.resolve(dialog as Dialog);\r\n          reloadConversationsPeers.delete(peerId);\r\n        });\r\n      }, (err) => {\r\n        log.error(err);\r\n      }).then(() => {\r\n        fullfillLeft();\r\n\r\n        this.reloadConversationsPromise = null;\r\n        if(this.reloadConversationsPeers.size) {\r\n          this.reloadConversation();\r\n        }\r\n      });\r\n    });\r\n\r\n    return promise || this.reloadConversationsPromise;\r\n  }\r\n\r\n  public doFlushHistory(\r\n    peerId: PeerId,\r\n    just_clear?: boolean,\r\n    revoke?: boolean,\r\n    threadId?: number,\r\n    participantPeerId?: PeerId\r\n  ): Promise<true> {\r\n    let promise: Promise<true>;\r\n    const processResult = (affectedHistory: MessagesAffectedHistory) => {\r\n      this.apiUpdatesManager.processUpdateMessage({\r\n        _: 'updateShort',\r\n        update: {\r\n          _: 'updatePts',\r\n          pts: affectedHistory.pts,\r\n          pts_count: affectedHistory.pts_count\r\n        }\r\n      });\r\n\r\n      if(!affectedHistory.offset) {\r\n        if(participantPeerId) {\r\n          const historyStorage = this.getHistoryMessagesStorage(peerId);\r\n          const deletedMids: number[] = [];\r\n          for(const [mid, message] of historyStorage) {\r\n            if(message.fromId === participantPeerId) {\r\n              deletedMids.push(mid);\r\n            }\r\n          }\r\n\r\n          this.apiUpdatesManager.processLocalUpdate({\r\n            _: 'updateDeleteChannelMessages',\r\n            channel_id: peerId.toChatId(),\r\n            messages: deletedMids,\r\n            pts: undefined,\r\n            pts_count: undefined\r\n          });\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      return this.doFlushHistory(peerId, just_clear, revoke, threadId);\r\n    };\r\n\r\n    if(participantPeerId) {\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: 'channels.deleteParticipantHistory',\r\n        params: {\r\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n          participant: this.appPeersManager.getInputPeerById(participantPeerId)\r\n        },\r\n        processResult\r\n      });\r\n    } else if(!threadId) {\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: 'messages.deleteHistory',\r\n        params: {\r\n          just_clear,\r\n          revoke,\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          max_id: 0\r\n        },\r\n        processResult\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApiSingleProcess({\r\n        method: 'channels.deleteTopicHistory',\r\n        params: {\r\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n          top_msg_id: getServerMessageId(threadId)\r\n        },\r\n        processResult\r\n      });\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public async flushHistory(\r\n    peerId: PeerId,\r\n    justClear?: boolean,\r\n    revoke?: boolean,\r\n    threadId?: number\r\n  ) {\r\n    if(this.appPeersManager.isChannel(peerId) && !threadId) {\r\n      const promise = this.getHistory({\r\n        peerId,\r\n        offsetId: 0,\r\n        limit: 1\r\n      });\r\n\r\n      const historyResult = await promise;\r\n\r\n      const channelId = peerId.toChatId();\r\n      const maxId = historyResult.history[0] || 0;\r\n      return this.apiManager.invokeApiSingle('channels.deleteHistory', {\r\n        channel: this.appChatsManager.getChannelInput(channelId),\r\n        max_id: getServerMessageId(maxId)\r\n      }).then((bool) => {\r\n        if(bool) {\r\n          this.apiUpdatesManager.processLocalUpdate({\r\n            _: 'updateChannelAvailableMessages',\r\n            channel_id: channelId,\r\n            available_min_id: maxId\r\n          });\r\n        }\r\n\r\n        return bool;\r\n      });\r\n    }\r\n\r\n    return this.doFlushHistory(peerId, justClear, revoke, threadId).then(() => {\r\n      if(!threadId) {\r\n        this.flushStoragesByPeerId(peerId);\r\n      }\r\n\r\n      if(justClear) {\r\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog: this.getDialogOnly(peerId)});\r\n      } else {\r\n        const key = this.getTypingKey(peerId, threadId);\r\n        delete this.notificationsToHandle[key];\r\n        delete this.typings[key];\r\n\r\n        if(!threadId) {\r\n          const c = this.reloadConversationsPeers.get(peerId);\r\n          if(c) {\r\n            this.reloadConversationsPeers.delete(peerId);\r\n            c.promise.resolve(undefined);\r\n          }\r\n        }\r\n\r\n        this.dialogsStorage.dropDialogOnDeletion(peerId, threadId);\r\n      }\r\n    });\r\n  }\r\n\r\n  private flushStoragesByPeerId(peerId: PeerId) {\r\n    [\r\n      this.historiesStorage,\r\n      this.threadsStorage,\r\n      this.searchesStorage,\r\n      this.pendingAfterMsgs,\r\n      this.pendingTopMsgs\r\n    ].forEach((s) => {\r\n      delete s[peerId];\r\n    });\r\n\r\n    for(const key in this.pinnedMessages) {\r\n      if(+key === peerId || key.startsWith(peerId + '_')) {\r\n        delete this.pinnedMessages[key];\r\n      }\r\n    }\r\n\r\n    const needSingleMessages = this.needSingleMessages.get(peerId);\r\n    if(needSingleMessages) {\r\n      for(const [mid, promise] of needSingleMessages) {\r\n        promise.resolve(this.generateEmptyMessage(mid));\r\n      }\r\n\r\n      needSingleMessages.clear();\r\n    }\r\n\r\n    [\r\n      this.messagesStorageByPeerId,\r\n      this.scheduledMessagesStorage\r\n    ].forEach((s) => {\r\n      const ss = s[peerId];\r\n      if(!ss) {\r\n        return;\r\n      }\r\n\r\n      if(ss.type === 'history' && !this.appPeersManager.isChannel(peerId)) {\r\n        const globalStorage = this.getGlobalHistoryMessagesStorage();\r\n        ss.forEach((message, mid) => {\r\n          this.deleteMessageFromStorage(globalStorage, mid);\r\n        });\r\n      }\r\n\r\n      ss.clear();\r\n      delete s[peerId];\r\n    });\r\n\r\n    this.dialogsStorage.flushForumTopicsCache(peerId);\r\n  }\r\n\r\n  public hidePinnedMessages(peerId: PeerId) {\r\n    return Promise.all([\r\n      this.appStateManager.getState(),\r\n      this.getPinnedMessage(peerId)\r\n    ])\r\n    .then(([state, pinned]) => {\r\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\r\n      this.rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\r\n    });\r\n  }\r\n\r\n  public getPinnedMessagesKey(peerId: PeerId, threadId?: number) {\r\n    return peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public getPinnedMessage(peerId: PeerId, threadId?: number) {\r\n    const p = this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)] ??= {};\r\n    if(p.promise) return p.promise;\r\n    else if(p.maxId) return Promise.resolve(p);\r\n\r\n    return p.promise = Promise.resolve(this.getHistory({\r\n      peerId,\r\n      inputFilter: {_: 'inputMessagesFilterPinned'},\r\n      offsetId: 0,\r\n      limit: 1,\r\n      threadId\r\n    })).then((result) => {\r\n      p.count = result.count;\r\n      p.maxId = result.history[0];\r\n      return p;\r\n    }).finally(() => {\r\n      delete p.promise;\r\n    });\r\n  }\r\n\r\n  public getPinnedMessagesCount(peerId: PeerId, threadId?: number) {\r\n    return this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)]?.count;\r\n  }\r\n\r\n  public getPinnedMessagesMaxId(peerId: PeerId, threadId?: number) {\r\n    return this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)]?.maxId;\r\n  }\r\n\r\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\r\n    return this.apiManager.invokeApi('messages.updatePinnedMessage', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      unpin,\r\n      silent,\r\n      pm_oneside,\r\n      id: getServerMessageId(mid)\r\n    }).then((updates) => {\r\n      // this.log('pinned updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\r\n    return this.apiManager.invokeApiSingle('messages.unpinAllMessages', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId)\r\n    }).then((affectedHistory) => {\r\n      this.apiUpdatesManager.processUpdateMessage({\r\n        _: 'updateShort',\r\n        update: {\r\n          _: 'updatePts',\r\n          pts: affectedHistory.pts,\r\n          pts_count: affectedHistory.pts_count\r\n        }\r\n      });\r\n\r\n      if(!affectedHistory.offset) {\r\n        const storage = this.getHistoryMessagesStorage(peerId);\r\n        storage.forEach((message) => {\r\n          if((message as Message.message).pFlags.pinned) {\r\n            delete (message as Message.message).pFlags.pinned;\r\n          }\r\n        });\r\n\r\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\r\n        delete this.pinnedMessages[this.getPinnedMessagesKey(peerId)];\r\n\r\n        return true;\r\n      }\r\n\r\n      return this.unpinAllMessages(peerId);\r\n    });\r\n  }\r\n\r\n  public getAlbumText(grouped_id: string) {\r\n    const group = this.groupedMessagesStorage[grouped_id];\r\n    return getAlbumText(Array.from(group.values()) as Message.message[]);\r\n  }\r\n\r\n  public getGroupsFirstMessage(message: Message.message) {\r\n    if(!message?.grouped_id) return message;\r\n\r\n    const storage = this.groupedMessagesStorage[message.grouped_id];\r\n    let minMid = Number.MAX_SAFE_INTEGER;\r\n    for(const [mid, message] of storage) {\r\n      if(message.mid < minMid) {\r\n        minMid = message.mid;\r\n      }\r\n    }\r\n\r\n    return this.getMessageFromStorage(storage, minMid) as Message.message;\r\n  }\r\n\r\n  public getMidsByAlbum(groupedId: string, sort: 'asc' | 'desc' = 'asc') {\r\n    return getObjectKeysAndSort(this.groupedMessagesStorage[groupedId], sort);\r\n  }\r\n\r\n  public getMessagesByAlbum(groupedId: string) {\r\n    const mids = this.getMidsByAlbum(groupedId, 'asc');\r\n    const storage = this.groupedMessagesStorage[groupedId];\r\n    return mids.map((mid) => this.getMessageFromStorage(storage, mid) as Message.message);\r\n  }\r\n\r\n  public getMidsByMessage(message: Message) {\r\n    if(!message) return [];\r\n    else if((message as Message.message).grouped_id) return this.getMidsByAlbum((message as Message.message).grouped_id);\r\n    else return [message.mid];\r\n  }\r\n\r\n  public filterMessages(message: MyMessage, verify: (message: MyMessage) => boolean) {\r\n    const out: MyMessage[] = [];\r\n    if((message as Message.message).grouped_id) {\r\n      const storage = this.groupedMessagesStorage[(message as Message.message).grouped_id];\r\n      for(const [mid, message] of storage) {\r\n        if(verify(message)) {\r\n          out.push(message);\r\n        }\r\n      }\r\n    } else {\r\n      if(verify(message)) {\r\n        out.push(message);\r\n      }\r\n    }\r\n\r\n    return out;\r\n  }\r\n\r\n  public generateTempMessageId(peerId: PeerId, topMessage?: number) {\r\n    const dialog = topMessage ? undefined : this.getDialogOnly(peerId);\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n\r\n    topMessage ??= dialog?.top_message || 0;\r\n    const tempMid = this.tempMids[peerId];\r\n    if(tempMid && tempMid > topMessage) {\r\n      topMessage = tempMid;\r\n    }\r\n\r\n    const newMid = this.appMessagesIdsManager.generateTempMessageId(topMessage, channelId);\r\n    if(!tempMid || newMid > tempMid) {\r\n      this.tempMids[peerId] = newMid;\r\n    }\r\n\r\n    return newMid;\r\n  }\r\n\r\n  public setMessageUnreadByDialog(\r\n    message: MyMessage,\r\n    dialog: Dialog | ForumTopic = this.getDialogOnly(message.peerId)\r\n  ) {\r\n    if(dialog && message.mid) {\r\n      if(message.mid > dialog[message.pFlags.out ?\r\n        'read_outbox_max_id' :\r\n        'read_inbox_max_id']) {\r\n        message.pFlags.unread = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public saveMessage(message: Message, options: Partial<{\r\n    storage: MessagesStorage,\r\n    isScheduled: true,\r\n    isOutgoing: true,\r\n    // isNew: boolean, // * new - from update\r\n  }> = {}) {\r\n    if(!message || message._ === 'messageEmpty') {\r\n      return;\r\n    }\r\n\r\n    message.pFlags ??= {};\r\n\r\n    // * exclude from state\r\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\r\n\r\n    const peerId = this.getMessagePeer(message);\r\n    const storage = options.storage || this.getHistoryMessagesStorage(peerId);\r\n    const isChannel = message.peer_id._ === 'peerChannel';\r\n    const isBroadcast = isChannel && this.appChatsManager.isBroadcast(peerId.toChatId());\r\n    const isMessage = message._ === 'message';\r\n    const channelId = isChannel ? peerId.toChatId() : undefined;\r\n\r\n    if(options.isOutgoing) {\r\n      message.pFlags.is_outgoing = true;\r\n    }\r\n\r\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\r\n    message.mid = mid;\r\n\r\n    if(isMessage) {\r\n      if(options.isScheduled) {\r\n        message.pFlags.is_scheduled = true;\r\n      }\r\n\r\n      if(message.grouped_id) {\r\n        const storage = this.groupedMessagesStorage[message.grouped_id] ??= this.createMessageStorage(peerId, 'grouped');\r\n        this.setMessageToStorage(storage, message);\r\n      }\r\n\r\n      if(message.via_bot_id) {\r\n        // ! WARNING\r\n        message.viaBotId = message.via_bot_id as any;\r\n      }\r\n    }\r\n\r\n    const mediaContext: ReferenceContext = {\r\n      type: 'message',\r\n      peerId,\r\n      messageId: mid\r\n    };\r\n\r\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\r\n\r\n    const replyTo = message.reply_to;\r\n    if(replyTo) {\r\n      if(replyTo._ === 'messageReplyHeader') {\r\n        const replyToChannelId = (replyTo.reply_to_peer_id as Peer.peerChannel)?.channel_id || channelId;\r\n\r\n        if(replyTo.reply_to_msg_id) {\r\n          replyTo.reply_to_msg_id = message.reply_to_mid = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_msg_id, replyToChannelId);\r\n        }\r\n\r\n        if(replyTo.reply_to_top_id) {\r\n          replyTo.reply_to_top_id = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_top_id, replyToChannelId);\r\n        }\r\n\r\n        this.saveMessageMedia(replyTo, mediaContext, options.isScheduled);\r\n      }\r\n    }\r\n\r\n    const replies = isMessage && message.replies;\r\n    if(replies) {\r\n      if(replies.max_id) replies.max_id = this.appMessagesIdsManager.generateMessageId(replies.max_id, replies.channel_id);\r\n      if(replies.read_max_id) replies.read_max_id = this.appMessagesIdsManager.generateMessageId(replies.read_max_id, replies.channel_id);\r\n    }\r\n\r\n    const overwriting = !!peerId;\r\n    if(!overwriting) {\r\n      message.date -= this.timeManager.getServerTimeOffset();\r\n    }\r\n\r\n    // storage.generateIndex(message);\r\n    const myId = this.appPeersManager.peerId;\r\n\r\n    const fwdHeader = isMessage && (message as Message.message).fwd_from;\r\n\r\n    message.peerId = peerId;\r\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\r\n      message.fromId = fwdHeader ? (fwdHeader.from_id ? this.appPeersManager.getPeerId(fwdHeader.from_id) : NULL_PEER_ID) : myId;\r\n    } else {\r\n      // message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\r\n      message.fromId = message.pFlags.post || !message.from_id ? peerId : this.appPeersManager.getPeerId(message.from_id);\r\n    }\r\n\r\n    this.setMessageUnreadByDialog(message);\r\n\r\n    if(fwdHeader) {\r\n      // if(peerId === myID) {\r\n      if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = this.appMessagesIdsManager.generateMessageId(fwdHeader.saved_from_msg_id, (fwdHeader.saved_from_peer as Peer.peerChannel).channel_id);\r\n      if(fwdHeader.channel_post) fwdHeader.channel_post = this.appMessagesIdsManager.generateMessageId(fwdHeader.channel_post, (fwdHeader.from_id as Peer.peerChannel).channel_id);\r\n\r\n      const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\r\n      const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\r\n      if(peer && msgId) {\r\n        const savedFromPeerId = this.appPeersManager.getPeerId(peer);\r\n        const savedFromMid = this.appMessagesIdsManager.generateMessageId(msgId, (peer as Peer.peerChannel).channel_id);\r\n        message.savedFrom = savedFromPeerId + '_' + savedFromMid;\r\n      }\r\n\r\n      /* if(peerId.isAnyChat() || peerId === myID) {\r\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\r\n        } */\r\n      /* } else {\r\n        apiMessage.fwdPostID = fwdHeader.channel_post;\r\n      } */\r\n\r\n      message.fwdFromId = this.appPeersManager.getPeerId(fwdHeader.from_id);\r\n\r\n      if(!overwriting) {\r\n        fwdHeader.date -= this.timeManager.getServerTimeOffset();\r\n      }\r\n    }\r\n\r\n    /* if(isMessage) {\r\n      const entities = message.entities;\r\n      if(entities && entities.find((entity) => entity._ === 'messageEntitySpoiler')) {\r\n        message.media = {_: 'messageMediaUnsupported'};\r\n      }\r\n    } */\r\n\r\n    const unsupported = this.saveMessageMedia(message, mediaContext, options.isScheduled);\r\n\r\n    // if(isMessage && !unsupported && message.entities) {\r\n    //   unsupported = message.entities.some((entity) => entity._ === 'messageEntityCustomEmoji');\r\n    // }\r\n\r\n    if(isMessage && unsupported) {\r\n      message.media = {_: 'messageMediaUnsupported'};\r\n      message.message = '';\r\n      delete message.entities;\r\n      delete message.totalEntities;\r\n    }\r\n\r\n    if(!isMessage && message.action) {\r\n      const action = message.action as MessageAction;\r\n      const suffix = message.fromId === this.appUsersManager.getSelf().id ? 'You' : '';\r\n      let migrateFrom: PeerId, migrateTo: PeerId;\r\n\r\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\r\n        (action as MessageAction.messageActionChatEditPhoto).photo = this.appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\r\n      }\r\n\r\n      if((action as any).document) {\r\n        (action as any).document = this.appDocsManager.saveDoc((action as any).photo, mediaContext);\r\n      }\r\n\r\n      switch(action._) {\r\n        // case 'messageActionChannelEditPhoto':\r\n        case 'messageActionChatEditPhoto':\r\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\r\n          if((action.photo as Photo.photo)?.video_sizes) {\r\n            // @ts-ignore\r\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\r\n          } else {\r\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\r\n              // @ts-ignore\r\n              action._ = 'messageActionChannelEditPhoto';\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'messageActionGroupCall': {\r\n          // assumeType<MessageAction.messageActionGroupCall>(action);\r\n\r\n          this.appGroupCallsManager.saveGroupCall(action.call);\r\n\r\n          let type: string;\r\n          if(action.duration === undefined) {\r\n            type = 'started';\r\n          } else {\r\n            type = 'ended'\r\n          }\r\n\r\n          if(!isBroadcast) {\r\n            type += '_by' + suffix;\r\n          }\r\n\r\n          // @ts-ignore\r\n          action.type = type;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'messageActionChatEditTitle':\r\n          /* if(options.isNew) {\r\n            const chat = appChatsManager.getChat(peerId.toChatId());\r\n            chat.title = action.title;\r\n            appChatsManager.saveApiChat(chat, true);\r\n          } */\r\n\r\n          if(isBroadcast) {\r\n            // @ts-ignore\r\n            action._ = 'messageActionChannelEditTitle';\r\n          }\r\n          break;\r\n\r\n        case 'messageActionChatDeletePhoto':\r\n          if(isBroadcast) {\r\n            // @ts-ignore\r\n            action._ = 'messageActionChannelDeletePhoto';\r\n          }\r\n          break;\r\n\r\n        case 'messageActionChatAddUser':\r\n          if(action.users.length === 1) {\r\n            // @ts-ignore\r\n            action.user_id = action.users[0];\r\n            // @ts-ignore\r\n            if(message.fromId === action.user_id) {\r\n              if(isChannel) {\r\n                // @ts-ignore\r\n                action._ = 'messageActionChatJoined' + suffix;\r\n              } else {\r\n                // @ts-ignore\r\n                action._ = 'messageActionChatReturn' + suffix;\r\n              }\r\n            }\r\n          } else if(action.users.length > 1) {\r\n            // @ts-ignore\r\n            action._ = 'messageActionChatAddUsers';\r\n          }\r\n          break;\r\n\r\n        case 'messageActionChatDeleteUser':\r\n          if(message.fromId === action.user_id) {\r\n            // @ts-ignore\r\n            action._ = 'messageActionChatLeave' + suffix;\r\n          }\r\n          break;\r\n\r\n        case 'messageActionChannelMigrateFrom':\r\n          migrateFrom = action.chat_id.toPeerId(true);\r\n          migrateTo = peerId;\r\n          break\r\n\r\n        case 'messageActionChatMigrateTo':\r\n          migrateFrom = peerId;\r\n          migrateTo = action.channel_id.toPeerId(true);\r\n          break;\r\n\r\n        case 'messageActionHistoryClear':\r\n          // apiMessage.deleted = true;\r\n          message.clear_history = true;\r\n          delete message.pFlags.out;\r\n          delete message.pFlags.unread;\r\n          break;\r\n\r\n        case 'messageActionPhoneCall':\r\n          // @ts-ignore\r\n          action.type =\r\n            (action.pFlags.video ? 'video_' : '') +\r\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\r\n            (\r\n              action.duration !== undefined ? 'ok' : (\r\n                action.reason._ === 'phoneCallDiscardReasonMissed' ?\r\n                  'missed' :\r\n                  'cancelled'\r\n              )\r\n            );\r\n          break;\r\n      }\r\n\r\n      if(migrateFrom &&\r\n          migrateTo &&\r\n          !this.getMigration(migrateFrom)) {\r\n        this.migrateChecks(migrateFrom, migrateTo);\r\n      }\r\n    }\r\n\r\n    if(isMessage && message.message.length && !message.totalEntities) {\r\n      this.wrapMessageEntities(message);\r\n    }\r\n\r\n    this.setMessageToStorage(storage, message);\r\n\r\n    return message;\r\n  }\r\n\r\n  public saveMessages(messages: any[], options: Partial<{\r\n    storage: MessagesStorage,\r\n    isScheduled: true,\r\n    isOutgoing: true,\r\n    // isNew: boolean, // * new - from update\r\n  }> = {}): (Message.message | Message.messageService)[] {\r\n    if((messages as any).saved) return messages;\r\n    (messages as any).saved = true;\r\n    messages.forEach((message, idx, arr) => {\r\n      arr[idx] = this.saveMessage(message, options);\r\n    });\r\n\r\n    return messages;\r\n  }\r\n\r\n  public saveMessageMedia(message: {\r\n    media?: MessageMedia,\r\n    reply_media?: MessageMedia,\r\n    peerId?: PeerId,\r\n    mid?: number\r\n  }, mediaContext: ReferenceContext, isScheduled?: boolean) {\r\n    const key = 'media' in message ? 'media' : 'reply_media';\r\n    const media = message[key];\r\n    if(!media) {\r\n      return;\r\n    }\r\n\r\n    let unsupported = false;\r\n\r\n    switch(media._) {\r\n      case 'messageMediaEmpty': {\r\n        delete message[key];\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaPhoto': {\r\n        if(media.ttl_seconds) {\r\n          unsupported = true;\r\n        } else {\r\n          media.photo = this.appPhotosManager.savePhoto(media.photo, mediaContext);\r\n        }\r\n\r\n        if(!(media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\r\n          delete message[key];\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaPoll': {\r\n        const result = this.appPollsManager.savePoll(media.poll, media.results, message.peerId && message as Message.message);\r\n        media.poll = result.poll;\r\n        media.results = result.results;\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaDocument': {\r\n        if(media.ttl_seconds) {\r\n          unsupported = true;\r\n        } else {\r\n          const originalDoc = media.document;\r\n          media.document = this.appDocsManager.saveDoc(originalDoc, mediaContext); // 11.04.2020 warning\r\n          media.alt_document &&= this.appDocsManager.saveDoc(media.alt_document, mediaContext); // 11.04.2020 warning\r\n\r\n          if(!media.document && originalDoc._ !== 'documentEmpty') {\r\n            unsupported = true;\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaWebPage': {\r\n        const messageKey = message.peerId ? this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled) : undefined;\r\n        media.webpage = this.appWebPagesManager.saveWebPage(media.webpage, messageKey, mediaContext);\r\n\r\n        if(!media.webpage) {\r\n          delete message[key];\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      /* case 'messageMediaGame':\r\n        AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\r\n        apiMessage.media.handleMessage = true;\r\n        break; */\r\n\r\n      case 'messageMediaInvoice': {\r\n        media.photo = this.appWebDocsManager.saveWebDocument(media.photo);\r\n        const extendedMedia = media.extended_media;\r\n        if(extendedMedia?._ === 'messageExtendedMedia') {\r\n          const extendedMediaMedia = extendedMedia.media;\r\n          (extendedMediaMedia as MessageMedia.messageMediaPhoto).photo = this.appPhotosManager.savePhoto((extendedMediaMedia as MessageMedia.messageMediaPhoto).photo, mediaContext);\r\n          (extendedMediaMedia as MessageMedia.messageMediaDocument).document = this.appDocsManager.saveDoc((extendedMediaMedia as MessageMedia.messageMediaDocument).document, mediaContext);\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaStory': {\r\n        const cache = this.appStoriesManager.getPeerStoriesCache(this.appPeersManager.getPeerId(media.peer));\r\n        media.story = this.appStoriesManager.saveStoryItems([media.story], cache)[0];\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaGiveawayResults': {\r\n        media.launch_msg_id = this.appMessagesIdsManager.generateMessageId(media.launch_msg_id, media.channel_id);\r\n        break;\r\n      }\r\n\r\n      case 'messageMediaUnsupported': {\r\n        unsupported = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return unsupported;\r\n  }\r\n\r\n  public async getFirstMessageToEdit(peerId: PeerId, threadId?: number) {\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n    const slice = historyStorage.history.slice;\r\n    if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\r\n      let goodMessage: Message.message | Message.messageService;\r\n      const myPeerId = this.appPeersManager.peerId;\r\n      for(const mid of slice) {\r\n        const message = this.getMessageByPeer(peerId, mid);\r\n        const good = myPeerId === peerId ? message.fromId === myPeerId : message.pFlags.out;\r\n\r\n        if(good) {\r\n          if(await this.canEditMessage(message, 'text')) {\r\n            goodMessage = message;\r\n            break;\r\n          }\r\n\r\n          // * this check will allow editing only last message\r\n          // break;\r\n        }\r\n      }\r\n\r\n      return goodMessage;\r\n    }\r\n  }\r\n\r\n  private wrapMessageEntities(_message: Message.message) {\r\n    const {message, totalEntities} = wrapMessageEntities(_message.message, _message.entities);\r\n    _message.message = message;\r\n    _message.totalEntities = totalEntities;\r\n  }\r\n\r\n  public reportMessages(peerId: PeerId, mids: number[], reason: ReportReason['_'], message?: string) {\r\n    return this.apiManager.invokeApiSingle('messages.report', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: mids.map((mid) => getServerMessageId(mid)),\r\n      reason: {\r\n        _: reason\r\n      },\r\n      message\r\n    });\r\n  }\r\n\r\n  public async unblockBot(botId: BotId) {\r\n    if(await this.appProfileManager.isUserBlocked(botId)) {\r\n      await this.appUsersManager.toggleBlock(botId.toPeerId(false), false);\r\n    }\r\n  }\r\n\r\n  public async startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\r\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\r\n    if(!chatId) {\r\n      await this.unblockBot(botId);\r\n    }\r\n\r\n    if(startParam) {\r\n      const randomId = randomLong();\r\n\r\n      return this.apiManager.invokeApi('messages.startBot', {\r\n        bot: this.appUsersManager.getUserInput(botId),\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        random_id: randomId,\r\n        start_param: startParam\r\n      }).then((updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      });\r\n    }\r\n\r\n    const str = '/start';\r\n    if(chatId) {\r\n      let promise: Promise<void>;\r\n      if(this.appChatsManager.isChannel(chatId)) {\r\n        promise = this.appChatsManager.inviteToChannel(chatId, [botId]);\r\n      } else {\r\n        promise = this.appChatsManager.addChatUser(chatId, botId, 0);\r\n      }\r\n\r\n      return promise.catch((error: ApiError) => {\r\n        if(error?.type == 'USER_ALREADY_PARTICIPANT') {\r\n          error.handled = true;\r\n          return;\r\n        }\r\n\r\n        throw error;\r\n      }).then(() => {\r\n        return this.sendText({\r\n          peerId,\r\n          text: str + '@' + this.appPeersManager.getPeerUsername(botId.toPeerId())\r\n        });\r\n      });\r\n    }\r\n\r\n    return this.sendText({\r\n      peerId,\r\n      text: str\r\n    });\r\n  }\r\n\r\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\r\n    this.apiManager.invokeApi('folders.editPeerFolders', {\r\n      folder_peers: peerIds.map((peerId) => {\r\n        return {\r\n          _: 'inputFolderPeer',\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          folder_id: folderId\r\n        };\r\n      })\r\n    }).then((updates) => {\r\n      const peerId = peerIds[0];\r\n      if(peerIds.length === 1 && folderId === FOLDER_ID_ALL) {\r\n        this.appProfileManager.refreshPeerSettingsIfNeeded(peerId);\r\n      }\r\n\r\n      // this.log('editPeerFolders updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\r\n    });\r\n  }\r\n\r\n  public getFilter(filterId: number) {\r\n    return this.filtersStorage.getFilter(filterId);\r\n  }\r\n\r\n  public async toggleDialogPin(options: {\r\n    peerId: PeerId,\r\n    filterId?: number,\r\n    topicId?: number\r\n  }) {\r\n    const {peerId, topicId, filterId = topicId ? peerId : undefined} = options;\r\n    if(filterId === undefined) {\r\n      throw new Error('No filterId');\r\n    }\r\n\r\n    if(filterId > 1) {\r\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\r\n    }\r\n\r\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, topicId);\r\n    if(!dialog) throw undefined;\r\n\r\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\r\n\r\n    if(pinned) {\r\n      const max = await this.apiManager.getLimit(topicId ? 'topicPin' : (filterId === 1 ? 'folderPin' : 'pin'));\r\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\r\n        throw makeError(topicId ? 'PINNED_TOO_MUCH' : 'PINNED_DIALOGS_TOO_MUCH');\r\n      }\r\n    }\r\n\r\n    if(topicId) {\r\n      return this.appChatsManager.updatePinnedForumTopic(peerId.toChatId(), topicId, pinned);\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.toggleDialogPin', {\r\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\r\n      pinned\r\n    }).then((bool) => {\r\n      const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\r\n      this.apiUpdatesManager.saveUpdate({\r\n        _: 'updateDialogPinned',\r\n        peer: this.appPeersManager.getDialogPeer(peerId),\r\n        folder_id: filterId,\r\n        pFlags\r\n      });\r\n    });\r\n  }\r\n\r\n  public markDialogUnread(peerId: PeerId, read?: true) {\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(!dialog) return Promise.reject();\r\n\r\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\r\n\r\n    if(!unread && dialog.unread_count) {\r\n      const promise = this.readHistory(peerId, dialog.top_message);\r\n      if(!dialog.pFlags.unread_mark) {\r\n        return promise;\r\n      }\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.markDialogUnread', {\r\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\r\n      unread\r\n    }).then(() => {\r\n      const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\r\n      this.onUpdateDialogUnreadMark({\r\n        _: 'updateDialogUnreadMark',\r\n        peer: this.appPeersManager.getDialogPeer(peerId),\r\n        pFlags\r\n      });\r\n    });\r\n  }\r\n\r\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\r\n    if(!this.getMigration(migrateFrom) && this.appChatsManager.hasChat(migrateTo.toChatId())) {\r\n      const fromChat = this.appChatsManager.getChat(migrateFrom.toChatId()) as Chat.chat;\r\n      if(fromChat?.migrated_to && (fromChat.migrated_to as InputChannel.inputChannel).channel_id === migrateTo.toChatId()) {\r\n        this.migratedFromTo[migrateFrom] = migrateTo;\r\n        this.migratedToFrom[migrateTo] = migrateFrom;\r\n\r\n        this.rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\r\n\r\n        this.dialogsStorage.dropDialogWithEvent(migrateFrom);\r\n      }\r\n    }\r\n  }\r\n\r\n  private canMessageBeEdited(message: Message, kind: 'text' | 'poll') {\r\n    if((message as Message.message)?.pFlags?.is_outgoing) {\r\n      return false;\r\n    }\r\n\r\n    const goodMedias = [\r\n      'messageMediaPhoto',\r\n      'messageMediaDocument',\r\n      'messageMediaWebPage'\r\n    ];\r\n\r\n    if(kind === 'poll') {\r\n      goodMedias.push('messageMediaPoll');\r\n    }\r\n\r\n    if(!message ||\r\n        message._ !== 'message' ||\r\n        message.fwd_from ||\r\n        message.via_bot_id ||\r\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\r\n        message.fromId && this.appUsersManager.isBot(message.fromId)) {\r\n      return false;\r\n    }\r\n\r\n    if(message.media?._ === 'messageMediaDocument' &&\r\n        ((message.media.document as Document.document).sticker || (message.media.document as Document.document).type === 'round')) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public async canEditMessage(message: Message.message | Message.messageService, kind: 'text' | 'poll' = 'text') {\r\n    if(!message || !this.canMessageBeEdited(message, kind)) {\r\n      return false;\r\n    }\r\n\r\n    // * second rule for saved messages, because there is no 'out' flag\r\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === this.appUsersManager.getSelf().id) {\r\n      return true;\r\n    }\r\n\r\n    const {peerId} = message;\r\n\r\n    const canEditMessageInPeer = this.appPeersManager.isBroadcast(peerId) ?\r\n      this.appChatsManager.hasRights(peerId.toChatId(), 'edit_messages') :\r\n      (\r\n        peerId.isAnyChat() && kind === 'text' ?\r\n          !this.getMigration(message.peerId)?.next && (this.appChatsManager.hasRights(peerId.toChatId(), 'send_plain') || this.appChatsManager.hasRights(peerId.toChatId(), 'send_media')) :\r\n          true\r\n      ) && message.pFlags.out;\r\n\r\n    if(\r\n      !canEditMessageInPeer || (\r\n        message.peer_id._ !== 'peerChannel' &&\r\n        message.date < (tsNow(true) - (await this.apiManager.getConfig()).edit_time_limit) &&\r\n        (message as Message.message).media?._ !== 'messageMediaPoll'\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public canDeleteMessage(message: MyMessage) {\r\n    return message && (\r\n      message.peerId.isUser() ||\r\n      message.pFlags.out ||\r\n      this.appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' ||\r\n      this.appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\r\n    ) && (!message.pFlags.is_outgoing || !!message.error);\r\n  }\r\n\r\n  public getReplyKeyboard(peerId: PeerId) {\r\n    return this.getHistoryStorage(peerId).replyMarkup;\r\n  }\r\n\r\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\r\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\r\n    if(!message) {\r\n      return false;\r\n    }\r\n\r\n    const messageReplyMarkup = (message as Message.message).reply_markup;\r\n    if(!messageReplyMarkup &&\r\n      !message.pFlags?.out &&\r\n      !(message as Message.messageService).action) {\r\n      return false;\r\n    }\r\n\r\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\r\n      return false;\r\n    }\r\n\r\n    const lastReplyMarkup = historyStorage.replyMarkup;\r\n    if(messageReplyMarkup) {\r\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\r\n        return false;\r\n      }\r\n\r\n      if(messageReplyMarkup.pFlags.selective) {\r\n        return false;\r\n      }\r\n\r\n      if(historyStorage.maxOutId &&\r\n        message.mid < historyStorage.maxOutId &&\r\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\r\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\r\n      }\r\n\r\n      messageReplyMarkup.mid = message.mid;\r\n      /* messageReplyMarkup = Object.assign({\r\n        mid: message.mid\r\n      }, messageReplyMarkup); */\r\n\r\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\r\n        messageReplyMarkup.fromId = this.appPeersManager.getPeerId(message.from_id || message.peer_id);\r\n      }\r\n\r\n      historyStorage.replyMarkup = messageReplyMarkup;\r\n      // this.log('set', historyStorage.reply_markup)\r\n      return true;\r\n    }\r\n\r\n    if(message.pFlags.out) {\r\n      if(lastReplyMarkup) {\r\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\r\n        if(lastReplyMarkup.pFlags.single_use &&\r\n          !lastReplyMarkup.pFlags.hidden &&\r\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\r\n          (message as Message.message).message) {\r\n          lastReplyMarkup.pFlags.hidden = true;\r\n          // this.log('set', historyStorage.reply_markup)\r\n          return true;\r\n        }\r\n      } else if(!historyStorage.maxOutId ||\r\n        message.mid > historyStorage.maxOutId) {\r\n        historyStorage.maxOutId = message.mid;\r\n      }\r\n    }\r\n\r\n    assumeType<Message.messageService>(message);\r\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\r\n      (lastReplyMarkup ?\r\n        message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId :\r\n        this.appUsersManager.isBot(message.action.user_id)\r\n      )\r\n    ) {\r\n      historyStorage.replyMarkup = {\r\n        _: 'replyKeyboardHide',\r\n        mid: message.mid,\r\n        pFlags: {}\r\n      };\r\n      // this.log('set', historyStorage.reply_markup)\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public getSearchStorage(peerId: PeerId, inputFilter: MyInputMessagesFilter) {\r\n    return (this.searchesStorage[peerId] ??= {})[inputFilter] ??= this.createHistoryStorage('search');\r\n  }\r\n\r\n  public getSearchCounters(\r\n    peerId: PeerId,\r\n    filters: MessagesFilter[],\r\n    canCache = true,\r\n    threadId?: number\r\n  ): Promise<MessagesSearchCounter[]> {\r\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\r\n      return Promise.resolve(filters.map((filter) => {\r\n        return {\r\n          _: 'messages.searchCounter',\r\n          pFlags: {},\r\n          filter: filter,\r\n          count: 0\r\n        };\r\n      }));\r\n    }\r\n\r\n    const migration = this.getMigration(peerId);\r\n\r\n    const method = 'messages.getSearchCounters';\r\n    const func = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\r\n    const result = func(method, {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      filters,\r\n      top_msg_id: threadId ? getServerMessageId(threadId) : undefined\r\n    }, {cacheSeconds: 60e3});\r\n\r\n    if(migration) {\r\n      const legacyResult = func(method, {\r\n        peer: this.appPeersManager.getInputPeerById(migration.prev),\r\n        filters\r\n      });\r\n\r\n      return Promise.all([result, legacyResult]).then(([searchCounters, legacySearchCounters]) => {\r\n        const out: MessagesSearchCounter[] = searchCounters.map((searchCounter, idx) => {\r\n          return {\r\n            ...searchCounter,\r\n            count: searchCounter.count + legacySearchCounters[idx].count\r\n          };\r\n        });\r\n\r\n        return out;\r\n      });\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public filterMessagesByInputFilterFromStorage(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage | MessagesStorageKey, limit: number) {\r\n    const _storage = this.getMessagesStorage(storage);\r\n    return filterMessagesByInputFilter(inputFilter, history.map((mid) => _storage.get(mid)), limit);\r\n  }\r\n\r\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\r\n    const repliesKey = peerId + '_' + mid;\r\n    for(const threadKey in this.threadsToReplies) {\r\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\r\n    }\r\n\r\n    this.getDiscussionMessage(peerId, mid);\r\n  }\r\n\r\n  public generateThreadServiceStartMessage(message: Message.message | Message.messageService) {\r\n    const threadKey = message.peerId + '_' + message.mid;\r\n    const serviceStartMid = this.threadsServiceMessagesIdsStorage[threadKey];\r\n    if(serviceStartMid) return serviceStartMid;\r\n\r\n    const maxMessageId = getServerMessageId(Math.max(...this.getMidsByMessage(message)));\r\n    const serviceStartMessage: Message.messageService = {\r\n      _: 'messageService',\r\n      pFlags: {\r\n        is_single: true\r\n      },\r\n      id: this.generateTempMessageId(message.peerId, maxMessageId),\r\n      date: message.date,\r\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\r\n      peer_id: message.peer_id,\r\n      action: {\r\n        _: 'messageActionDiscussionStarted'\r\n      },\r\n      reply_to: this.generateReplyHeader(\r\n        message.peerId,\r\n        this.getInputReplyTo({replyToMsgId: message.id, threadId: message.id})\r\n      )\r\n    };\r\n\r\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\r\n    return this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\r\n  }\r\n\r\n  public getThreadServiceMessageId(peerId: PeerId, threadId: number) {\r\n    return this.threadsServiceMessagesIdsStorage[peerId + '_' + threadId];\r\n  }\r\n\r\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\r\n    return this.apiManager.invokeApiSingle('messages.getDiscussionMessage', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid)\r\n    }).then((result) => {\r\n      this.appPeersManager.saveApiPeers(result);\r\n      this.saveMessages(result.messages);\r\n\r\n      const message = this.getMessageWithReplies(result.messages[0] as Message.message);\r\n      const threadKey = message.peerId + '_' + message.mid;\r\n      const channelId = message.peerId.toChatId();\r\n\r\n      // this.generateThreadServiceStartMessage(message);\r\n\r\n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\r\n      const newMaxId = result.max_id = this.appMessagesIdsManager.generateMessageId(result.max_id, channelId) || 0;\r\n      result.read_inbox_max_id = historyStorage.readMaxId = this.appMessagesIdsManager.generateMessageId(result.read_inbox_max_id ?? message.mid, channelId);\r\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = this.appMessagesIdsManager.generateMessageId(result.read_outbox_max_id, channelId) || 0;\r\n\r\n      const first = historyStorage.history.first;\r\n      if(historyStorage.maxId && historyStorage.maxId < newMaxId && first.isEnd(SliceEnd.Bottom)) {\r\n        first.unsetEnd(SliceEnd.Bottom);\r\n      }\r\n      historyStorage.maxId = newMaxId;\r\n\r\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\r\n\r\n      return message;\r\n    });\r\n  }\r\n\r\n  private handleNewMessage(message: MyMessage) {\r\n    this.rootScope.dispatchEvent('history_multiappend', message);\r\n  }\r\n\r\n  private handleNewDialogs = () => {\r\n    let newMaxSeenId = 0;\r\n    const updateMap: BroadcastEvents['dialogs_multiupdate']= new Map();\r\n\r\n    const processDialog = (dialog: MTDialog.dialog | ForumTopic) => {\r\n      const {peerId} = dialog;\r\n      this.dialogsStorage.pushDialog({dialog});\r\n      if(!this.appPeersManager.isChannel(peerId)) {\r\n        newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\r\n      }\r\n\r\n      let cache = updateMap.get(peerId);\r\n      if(!cache) {\r\n        updateMap.set(peerId, cache = {});\r\n      }\r\n\r\n      if(dialog._ === 'forumTopic') {\r\n        (cache.topics ??= new Map()).set(dialog.id, dialog);\r\n      } else {\r\n        cache.dialog = dialog;\r\n      }\r\n    };\r\n\r\n    for(const [peerId, obj] of this.newDialogsToHandle) {\r\n      const isDialogDefined = 'dialog' in obj;\r\n      const {dialog, topics} = obj;\r\n\r\n      if(isDialogDefined) {\r\n        if(!dialog) {\r\n          this.reloadConversation(peerId.toPeerId());\r\n        } else if(this.dialogsStorage.getDialogOnly(peerId)) { // * can be already dropped\r\n          processDialog(dialog);\r\n        }\r\n      }\r\n\r\n      if(topics) {\r\n        topics?.forEach((topic, id) => {\r\n          if(!topic) {\r\n            this.dialogsStorage.getForumTopicById(peerId, id);\r\n          } else if(this.dialogsStorage.getForumTopic(peerId, id)) { // * can be already dropped\r\n            processDialog(topic);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // this.log('after order:', this.dialogsStorage[0].map((d) => d.peerId));\r\n\r\n    if(newMaxSeenId !== 0) {\r\n      this.incrementMaxSeenId(newMaxSeenId);\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('dialogs_multiupdate', updateMap);\r\n    this.newDialogsToHandle.clear();\r\n  };\r\n\r\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: Dialog | ForumTopic | ForumTopic['id']) {\r\n    if(peerId !== undefined) {\r\n      let obj = this.newDialogsToHandle.get(peerId);\r\n      if(!obj) {\r\n        this.newDialogsToHandle.set(peerId, obj = {});\r\n      }\r\n\r\n      const isObject = typeof(dialog) === 'object';\r\n      if(!dialog || (isObject && dialog._ === 'dialog')) {\r\n        obj.dialog = dialog as Dialog;\r\n      } else {\r\n        obj.topics ??= new Map();\r\n        if(isObject) {\r\n          obj.topics.set((dialog as ForumTopic).id, dialog as ForumTopic);\r\n        } else {\r\n          obj.topics.set(dialog as number, undefined);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.newDialogsHandlePromise ??= pause(0).then(() => {\r\n      this.newDialogsHandlePromise = undefined;\r\n      this.handleNewDialogs();\r\n    });\r\n  }\r\n\r\n  private async deleteMessagesInner(channelId: ChatId, mids: number[], revoke?: boolean, isRecursion?: boolean) {\r\n    let promise: Promise<any>;\r\n\r\n    if(channelId && !isRecursion) {\r\n      const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\r\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\r\n        mids = mids.filter((mid) => {\r\n          const message = this.getMessageByPeer(channelId.toPeerId(true), mid);\r\n          return !!message.pFlags.out;\r\n        });\r\n\r\n        if(!mids.length) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    const config = await this.apiManager.getConfig();\r\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\r\n\r\n    const serverMessageIds = mids.map((mid) => {\r\n      const messageId = getServerMessageId(mid);\r\n      // filter outgoing messages\r\n      return this.appMessagesIdsManager.generateMessageId(messageId, channelId) === mid && messageId;\r\n    }).filter(Boolean);\r\n\r\n    if(DO_NOT_DELETE_MESSAGES) {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateDeleteMessages',\r\n        messages: mids,\r\n        pts: 0,\r\n        pts_count: 0\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if(channelId) {\r\n      promise = this.apiManager.invokeApi('channels.deleteMessages', {\r\n        channel: this.appChatsManager.getChannelInput(channelId),\r\n        id: serverMessageIds\r\n      }).then((affectedMessages) => {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateDeleteChannelMessages',\r\n          channel_id: channelId,\r\n          messages: mids,\r\n          pts: affectedMessages.pts,\r\n          pts_count: affectedMessages.pts_count\r\n        });\r\n      });\r\n    } else {\r\n      promise = this.apiManager.invokeApi('messages.deleteMessages', {\r\n        revoke,\r\n        id: serverMessageIds\r\n      }).then((affectedMessages) => {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateDeleteMessages',\r\n          messages: mids,\r\n          pts: affectedMessages.pts,\r\n          pts_count: affectedMessages.pts_count\r\n        });\r\n      });\r\n    }\r\n\r\n    const promises: (typeof promise)[] = [promise];\r\n    if(overflowMids.length) {\r\n      promises.push(this.deleteMessagesInner(channelId, overflowMids, revoke, true));\r\n    }\r\n\r\n    return Promise.all(promises).then(noop);\r\n  }\r\n\r\n  public deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const splitted = this.appMessagesIdsManager.splitMessageIdsByChannels(mids, channelId);\r\n    const promises = splitted.map(([channelId, {mids}]) => {\r\n      return this.deleteMessagesInner(channelId, mids, revoke);\r\n    });\r\n\r\n    return Promise.all(promises).then(noop);\r\n  }\r\n\r\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\r\n    if(DO_NOT_READ_HISTORY) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    // console.trace('start read')\r\n    this.log('readHistory:', peerId, maxId, threadId);\r\n    const readMaxId = this.getReadMaxIdIfUnread(peerId, threadId);\r\n    if(!readMaxId) {\r\n      if(threadId && !force) {\r\n        const forumTopic = this.dialogsStorage.getForumTopic(peerId, threadId);\r\n        if(forumTopic && !getServerMessageId(forumTopic.read_inbox_max_id)) {\r\n          force = true;\r\n        }\r\n      }\r\n\r\n      if(!force) {\r\n        const dialog = this.appChatsManager.isForum(peerId.toChatId()) && threadId ?\r\n          this.dialogsStorage.getForumTopic(peerId, threadId) :\r\n          this.getDialogOnly(peerId);\r\n        if(dialog && this.isDialogUnread(dialog)) {\r\n          force = true;\r\n        }\r\n      }\r\n\r\n      if(!force) {\r\n        this.log('readHistory: isn\\'t unread');\r\n        return Promise.resolve();\r\n      }\r\n    }\r\n\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n\r\n    if(historyStorage.triedToReadMaxId >= maxId) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    let apiPromise: Promise<any>;\r\n    if(threadId) {\r\n      if(!historyStorage.readPromise) {\r\n        apiPromise = this.apiManager.invokeApi('messages.readDiscussion', {\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          msg_id: getServerMessageId(threadId),\r\n          read_max_id: getServerMessageId(maxId)\r\n        });\r\n        // apiPromise = new Promise<void>((resolve) => resolve());\r\n      }\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateReadChannelDiscussionInbox',\r\n        channel_id: peerId.toChatId(),\r\n        top_msg_id: threadId,\r\n        read_max_id: maxId\r\n      });\r\n    } else if(this.appPeersManager.isChannel(peerId)) {\r\n      if(!historyStorage.readPromise) {\r\n        apiPromise = this.apiManager.invokeApi('channels.readHistory', {\r\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\r\n          max_id: getServerMessageId(maxId)\r\n        });\r\n      }\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateReadChannelInbox',\r\n        max_id: maxId,\r\n        channel_id: peerId.toChatId(),\r\n        still_unread_count: undefined,\r\n        pts: undefined\r\n      });\r\n    } else {\r\n      if(!historyStorage.readPromise) {\r\n        apiPromise = this.apiManager.invokeApi('messages.readHistory', {\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          max_id: getServerMessageId(maxId)\r\n        }).then((affectedMessages) => {\r\n          this.apiUpdatesManager.processUpdateMessage({\r\n            _: 'updateShort',\r\n            update: {\r\n              _: 'updatePts',\r\n              pts: affectedMessages.pts,\r\n              pts_count: affectedMessages.pts_count\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateReadHistoryInbox',\r\n        max_id: maxId,\r\n        peer: this.appPeersManager.getOutputPeer(peerId),\r\n        still_unread_count: undefined,\r\n        pts: undefined,\r\n        pts_count: undefined\r\n      });\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('notification_reset', this.appPeersManager.getPeerString(peerId));\r\n\r\n    if(historyStorage.readPromise) {\r\n      return historyStorage.readPromise;\r\n    }\r\n\r\n    historyStorage.triedToReadMaxId = maxId;\r\n\r\n    apiPromise.finally(() => {\r\n      delete historyStorage.readPromise;\r\n\r\n      const {readMaxId} = historyStorage;\r\n      this.log('readHistory: promise finally', maxId, readMaxId);\r\n\r\n      if(readMaxId > maxId) {\r\n        this.readHistory(peerId, readMaxId, threadId, true);\r\n      }\r\n    });\r\n\r\n    return historyStorage.readPromise = apiPromise;\r\n  }\r\n\r\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n    if(historyStorage.maxId) {\r\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\r\n    }\r\n  }\r\n\r\n  private getUnreadMentionsKey(peerId: PeerId, threadId?: number) {\r\n    return peerId + (threadId ? `_${threadId}` : '');\r\n  }\r\n\r\n  private fixDialogUnreadMentionsIfNoMessage(peerId: PeerId, threadId?: number) {\r\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\r\n    if(dialog?.unread_mentions_count) {\r\n      this.reloadConversationOrTopic(peerId);\r\n    }\r\n  }\r\n\r\n  private modifyCachedMentions(peerId: PeerId, mid: number, add: boolean, threadId?: number) {\r\n    const slicedArray = this.unreadMentions[this.getUnreadMentionsKey(peerId, threadId)];\r\n    if(!slicedArray) return;\r\n\r\n    if(add) {\r\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\r\n        slicedArray.insertSlice([mid]);\r\n      }\r\n    } else {\r\n      slicedArray.delete(mid);\r\n    }\r\n  }\r\n\r\n  private fixUnreadMentionsCountIfNeeded(peerId: PeerId, slicedArray: SlicedArray<number>, threadId?: number) {\r\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\r\n    if(!slicedArray.length && dialog?.unread_mentions_count) {\r\n      this.reloadConversationOrTopic(peerId);\r\n    }\r\n  }\r\n\r\n  public goToNextMention(peerId: PeerId, threadId?: number) {\r\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then((messages) => {\r\n      console.log(messages);\r\n    }); */\r\n\r\n    const key = this.getUnreadMentionsKey(peerId, threadId);\r\n    const promise = this.goToNextMentionPromises[key];\r\n    if(promise) {\r\n      return promise;\r\n    }\r\n\r\n    const slicedArray = this.unreadMentions[peerId] ??= new SlicedArray();\r\n    const length = slicedArray.length;\r\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\r\n    if(!length && isTopEnd) {\r\n      this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray, threadId);\r\n      return Promise.resolve();\r\n    }\r\n\r\n    let loadNextPromise = Promise.resolve();\r\n    if(!isTopEnd && length < 25) {\r\n      loadNextPromise = this.loadNextMentions(peerId, threadId);\r\n    }\r\n\r\n    return this.goToNextMentionPromises[key] = loadNextPromise.then(() => {\r\n      const last = slicedArray.last;\r\n      const mid = last && last[last.length - 1];\r\n      if(mid) {\r\n        slicedArray.delete(mid);\r\n        return mid;\r\n      } else {\r\n        this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray, threadId);\r\n      }\r\n    }).finally(() => {\r\n      delete this.goToNextMentionPromises[key];\r\n    });\r\n  }\r\n\r\n  private loadNextMentions(peerId: PeerId, threadId?: number) {\r\n    const slicedArray = this.unreadMentions[peerId];\r\n    const maxId = slicedArray.first[0] || 1;\r\n\r\n    const backLimit = 50;\r\n    const addOffset = -backLimit;\r\n    const limit = backLimit;\r\n    return this.getUnreadMentions(peerId, maxId, addOffset, limit, undefined, undefined, threadId)\r\n    .then((messages) => {\r\n      this.mergeHistoryResult({\r\n        slicedArray,\r\n        historyResult: messages,\r\n        offsetId: maxId === 1 ? 0 : maxId,\r\n        limit,\r\n        addOffset,\r\n        peerId\r\n      });\r\n    });\r\n  }\r\n\r\n  private getUnreadMentions(\r\n    peerId: PeerId,\r\n    offsetId: number,\r\n    add_offset: number,\r\n    limit: number,\r\n    maxId = 0,\r\n    minId = 0,\r\n    threadId?: number\r\n  ) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getUnreadMentions',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        offset_id: getServerMessageId(offsetId),\r\n        add_offset,\r\n        limit,\r\n        max_id: getServerMessageId(maxId),\r\n        min_id: getServerMessageId(minId),\r\n        top_msg_id: threadId ? getServerMessageId(threadId) : undefined\r\n      },\r\n      processResult: (messagesMessages) => {\r\n        assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\r\n        this.appUsersManager.saveApiUsers(messagesMessages.users);\r\n        this.appChatsManager.saveApiChats(messagesMessages.chats);\r\n        this.saveMessages(messagesMessages.messages);\r\n\r\n        return messagesMessages;\r\n      }\r\n    });\r\n  }\r\n\r\n  public readMessages(peerId: PeerId, msgIds: number[]) {\r\n    if(DO_NOT_READ_HISTORY) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    if(!msgIds.length) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    msgIds = msgIds.map((mid) => getServerMessageId(mid));\r\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\r\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\r\n      const channelId = peerId.toChatId();\r\n\r\n      update = {\r\n        _: 'updateChannelReadMessagesContents',\r\n        channel_id: channelId,\r\n        messages: msgIds\r\n      };\r\n\r\n      promise = this.apiManager.invokeApi('channels.readMessageContents', {\r\n        channel: this.appChatsManager.getChannelInput(channelId),\r\n        id: msgIds\r\n      });\r\n    } else {\r\n      update = {\r\n        _: 'updateReadMessagesContents',\r\n        messages: msgIds,\r\n        pts: undefined,\r\n        pts_count: undefined\r\n      };\r\n\r\n      promise = this.apiManager.invokeApi('messages.readMessageContents', {\r\n        id: msgIds\r\n      }).then((affectedMessages) => {\r\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\r\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\r\n        this.apiUpdatesManager.processLocalUpdate(update);\r\n      });\r\n    }\r\n\r\n    this.apiUpdatesManager.processLocalUpdate(update);\r\n\r\n    return promise;\r\n  }\r\n\r\n  public getDetailsForChannelJoinedService(peerId: PeerId, historyStorage: HistoryStorage, slice?: SlicedArray<number>['slice']) {\r\n    if(historyStorage.channelJoinedMid) {\r\n      return;\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    const chat = this.appChatsManager.getChat(chatId);\r\n    const date = (chat as Chat.channel)?.date;\r\n    if(!date) {\r\n      return;\r\n    }\r\n\r\n    const slices = slice ? [slice] : historyStorage.history.slices;\r\n    for(const slice of slices) {\r\n      let newerMessage: Message, olderMessage: Message;\r\n\r\n      for(const mid of slice) {\r\n        const message = this.getMessageByPeer(peerId, mid);\r\n        if(!message) {\r\n          this.log.error('no message from historyStorage?', peerId, historyStorage, slice, mid);\r\n          debugger;\r\n          continue;\r\n        }\r\n\r\n        if(message.date >= date) {\r\n          newerMessage = message;\r\n        } else {\r\n          olderMessage = message;\r\n          break;\r\n        }\r\n      }\r\n\r\n      const isNewerGood = newerMessage || slice.isEnd(SliceEnd.Bottom);\r\n      const isOlderGood = olderMessage || slice.isEnd(SliceEnd.Top);\r\n      if(isNewerGood && isOlderGood) {\r\n        return {\r\n          date,\r\n          slice,\r\n          newerMessage,\r\n          olderMessage\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  public insertChannelJoinedService(peerId: PeerId, historyStorage: HistoryStorage, _slice?: SlicedArray<number>['slice']) {\r\n    const details = this.getDetailsForChannelJoinedService(peerId, historyStorage, _slice);\r\n    if(!details) {\r\n      return false;\r\n    }\r\n\r\n    const {date, slice, newerMessage, olderMessage} = details;\r\n\r\n    const mid = this.generateTempMessageId(peerId, olderMessage?.mid || newerMessage.mid - 1);\r\n    this.log('will insert channel joined', peerId, mid, newerMessage?.mid, olderMessage?.mid, slice);\r\n\r\n    const message: Message.messageService = {\r\n      _: 'messageService',\r\n      pFlags: {\r\n        is_single: true\r\n      },\r\n      id: mid,\r\n      date,\r\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID},\r\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n      action: {\r\n        _: 'messageActionChannelJoined'\r\n      }\r\n    };\r\n    this.saveMessages([message], {isOutgoing: true});\r\n\r\n    // const insertSlice = historyStorage.originalInsertSlice || historyStorage.history.insertSlice.bind(historyStorage.history);\r\n    // insertSlice([newerMessage?.mid, message.mid, olderMessage?.mid].filter(Boolean));\r\n    insertInDescendSortedArray(slice, mid);\r\n\r\n    historyStorage.maxId = Math.max(historyStorage.maxId, message.mid);\r\n    historyStorage.channelJoinedMid = message.mid;\r\n    if(historyStorage.originalInsertSlice) {\r\n      historyStorage.history.insertSlice = historyStorage.originalInsertSlice;\r\n      delete historyStorage.originalInsertSlice;\r\n    }\r\n\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(dialog && dialog.top_message < message.mid) {\r\n      this.setDialogTopMessage(message, dialog);\r\n    }\r\n\r\n    this.handleNewMessage(message);\r\n\r\n    return true;\r\n  }\r\n\r\n  private processNewHistoryStorage(peerId: PeerId, historyStorage: HistoryStorage) {\r\n    if(this.appPeersManager.isBroadcast(peerId) && !historyStorage.originalInsertSlice) {\r\n      historyStorage.originalInsertSlice = historyStorage.history.insertSlice.bind(historyStorage.history);\r\n      historyStorage.history.insertSlice = (...args) => {\r\n        const slice = historyStorage.originalInsertSlice(...args);\r\n        if(slice) {\r\n          this.insertChannelJoinedService(peerId, historyStorage, slice);\r\n        }\r\n\r\n        return slice;\r\n      };\r\n    }\r\n\r\n    return historyStorage;\r\n  }\r\n\r\n  public createHistoryStorage(type: HistoryStorage['type']): HistoryStorage {\r\n    return {count: null, history: new SlicedArray(), type};\r\n  }\r\n\r\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\r\n    if(threadId) {\r\n      // threadId = this.getLocalMessageId(threadId);\r\n      return (this.threadsStorage[peerId] ??= {})[threadId] ??= this.createHistoryStorage('replies');\r\n    }\r\n\r\n    return this.historiesStorage[peerId] ??= this.processNewHistoryStorage(peerId, this.createHistoryStorage('history'));\r\n  }\r\n\r\n  public getHistoryStorageTransferable(peerId: PeerId, threadId?: number) {\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n    const {\r\n      count,\r\n      history,\r\n      maxId,\r\n      readMaxId,\r\n      readOutboxMaxId,\r\n      maxOutId,\r\n      replyMarkup\r\n    } = historyStorage;\r\n\r\n    return {\r\n      count,\r\n      history: undefined as HistoryStorage,\r\n      historySerialized: history.toJSON(),\r\n      maxId,\r\n      readMaxId,\r\n      readOutboxMaxId,\r\n      maxOutId,\r\n      replyMarkup\r\n    };\r\n  }\r\n\r\n  private getNotifyPeerSettings(peerId: PeerId, threadId?: number) {\r\n    const inputNotifyPeer = this.appPeersManager.getInputNotifyPeerById({peerId, ignorePeerId: true, threadId});\r\n    return Promise.all([\r\n      this.appNotificationsManager.getNotifyPeerTypeSettings(),\r\n      this.appNotificationsManager.getNotifySettings(inputNotifyPeer)\r\n    ]).then(([_, peerTypeNotifySettings]) => {\r\n      return {\r\n        muted: this.appNotificationsManager.isPeerLocalMuted({peerId, respectType: true, threadId}),\r\n        peerTypeNotifySettings\r\n      };\r\n    });\r\n  }\r\n\r\n  private handleNotifications = () => {\r\n    ctx.clearTimeout(this.notificationsHandlePromise);\r\n    this.notificationsHandlePromise = undefined;\r\n\r\n    // var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\r\n    // const timeout = 1000;\r\n\r\n    for(const key in this.notificationsToHandle) {\r\n      const [peerId, threadId] = key.split('_');\r\n      // if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\r\n      // continue;\r\n      // }\r\n\r\n      const notifyPeerToHandle = this.notificationsToHandle[key];\r\n      this.getNotifyPeerSettings(peerId.toPeerId(), threadId ? +threadId : undefined)\r\n      .then(({muted, peerTypeNotifySettings}) => {\r\n        const topMessage = notifyPeerToHandle.topMessage;\r\n        if((muted && !topMessage.pFlags.mentioned) || !topMessage.pFlags.unread) {\r\n          return;\r\n        }\r\n\r\n        // setTimeout(() => {\r\n        if(topMessage.pFlags.unread) {\r\n          this.notifyAboutMessage(topMessage, {\r\n            fwdCount: notifyPeerToHandle.fwdCount,\r\n            peerTypeNotifySettings\r\n          });\r\n        }\r\n        // }, timeout);\r\n      });\r\n    }\r\n\r\n    this.notificationsToHandle = {};\r\n  };\r\n\r\n  public getUpdateAfterReloadKey(peerId: PeerId, threadId?: number) {\r\n    return peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  private handleNewUpdateAfterReload(peerId: PeerId, update: Update, threadId?: number) {\r\n    const set = this.newUpdatesAfterReloadToHandle[this.getUpdateAfterReloadKey(peerId, threadId)] ??= new Set();\r\n    if(set.has(update)) {\r\n      this.log.error('here we go again', peerId);\r\n      return;\r\n    }\r\n\r\n    (update as any).ignoreExisting = true;\r\n    set.add(update);\r\n    this.scheduleHandleNewDialogs(peerId, threadId);\r\n  }\r\n\r\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\r\n    const randomId = update.random_id;\r\n    const pendingData = this.pendingByRandomId[randomId];\r\n    if(!pendingData) {\r\n      return;\r\n    }\r\n\r\n    const {peerId} = pendingData;\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const mid = this.appMessagesIdsManager.generateMessageId(update.id, channelId);\r\n    this.pendingByMessageId[mid] = randomId;\r\n    // const {storage} = pendingData;\r\n    // const message = this.getMessageFromStorage(storage, mid);\r\n    // if(message) { // if message somehow already exists\r\n    //   this.checkPendingMessage(message);\r\n    // }\r\n  };\r\n\r\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\r\n    const message = update.message as MyMessage;\r\n    const peerId = this.getMessagePeer(message);\r\n    const storage = this.getHistoryMessagesStorage(peerId);\r\n\r\n    // * local update\r\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\r\n\r\n    // * temporary save the message for info (peerId, reply mids...)\r\n    this.saveMessages([message], {storage: this.createMessageStorage(peerId, 'history')});\r\n\r\n    // * check if sent message is already in storage\r\n    // const oldMessage = this.getMessageFromStorage(storage, message.mid);\r\n    // if(\r\n    //   (message as Message.message).pFlags.is_outgoing &&\r\n    //   oldMessage &&\r\n    //   !(oldMessage as Message.message).pFlags.is_outgoing\r\n    // ) {\r\n    //   this.checkPendingMessage(message);\r\n    //   return;\r\n    // }\r\n\r\n    const isForum = this.appPeersManager.isForum(peerId);\r\n    const threadKey = this.getThreadKey(message);\r\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\r\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, isLocalThreadUpdate ? threadId : undefined);\r\n\r\n    if((!dialog || this.reloadConversationsPeers.has(peerId)) && !isLocalThreadUpdate) {\r\n      let good = true;\r\n      if(peerId.isAnyChat()) {\r\n        good = this.appChatsManager.isInChat(peerId.toChatId());\r\n      }\r\n\r\n      if(good) {\r\n        this.handleNewUpdateAfterReload(peerId, update);\r\n        return;\r\n      }\r\n\r\n      // return;\r\n    }\r\n\r\n    if(threadId && !isLocalThreadUpdate) {\r\n      const threadStorage = this.threadsStorage[peerId]?.[threadId];\r\n      const update = {\r\n        _: 'updateNewDiscussionMessage',\r\n        message\r\n      } as Update.updateNewDiscussionMessage;\r\n\r\n      if(this.appChatsManager.isForum(peerId.toChatId()) && !this.dialogsStorage.getForumTopic(peerId, threadId)) {\r\n        // this.dialogsStorage.getForumTopicById(peerId, threadId);\r\n        this.handleNewUpdateAfterReload(peerId, update, threadId);\r\n      } else if(threadStorage) {\r\n        this.onUpdateNewMessage(update);\r\n      }\r\n    }\r\n\r\n    if(message._ === 'messageService') {\r\n      const {action} = message;\r\n      if(action._ === 'messageActionPaymentSent' && message.reply_to) {\r\n        const replyTo = message.reply_to as MessageReplyHeader.messageReplyHeader;\r\n        this.rootScope.dispatchEvent('payment_sent', {\r\n          peerId: replyTo.reply_to_peer_id ?\r\n            this.appPeersManager.getPeerId(replyTo.reply_to_peer_id) :\r\n            message.peerId,\r\n          mid: message.reply_to_mid,\r\n          receiptMessage: message\r\n        });\r\n      }\r\n\r\n      if(action._ === 'messageActionTopicEdit' && !isLocalThreadUpdate) {\r\n        const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\r\n        if(!topic) {\r\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\r\n        } else {\r\n          const oldTopic = copy(topic);\r\n\r\n          if(action.title !== undefined) {\r\n            topic.title = action.title;\r\n          }\r\n\r\n          if(action.closed !== undefined) {\r\n            setBooleanFlag(topic.pFlags, 'closed', action.closed);\r\n          }\r\n\r\n          if(action.hidden !== undefined) {\r\n            setBooleanFlag(topic.pFlags, 'hidden', action.hidden);\r\n          }\r\n\r\n          if(action.icon_emoji_id !== undefined) {\r\n            topic.icon_emoji_id = action.icon_emoji_id;\r\n          }\r\n\r\n          this.scheduleHandleNewDialogs(peerId, topic);\r\n\r\n          this.dialogsStorage.processTopicUpdate(topic, oldTopic);\r\n        }\r\n      }\r\n    }\r\n\r\n    /* if(update._ === 'updateNewChannelMessage') {\r\n      const chat = appChatsManager.getChat(peerId.toChatId());\r\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\r\n        return;\r\n      }\r\n    } */\r\n\r\n    this.saveMessages([message], {storage});\r\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\r\n\r\n    /* if((message as Message.message).grouped_id) {\r\n      this.log('updateNewMessage', message);\r\n    } */\r\n\r\n    this.checkPendingMessage(message);\r\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\r\n\r\n    if(!isLocalThreadUpdate) {\r\n      this.updateMessageRepliesIfNeeded(message);\r\n    }\r\n\r\n    // * so message can exist if reloadConversation came back earlier with mid\r\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\r\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\r\n    if(isExisting) {\r\n      if(!ignoreExisting) {\r\n        return false;\r\n      }\r\n    } else {\r\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\r\n      const firstSlice = historyStorage.history.first;\r\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\r\n        let i = 0;\r\n        for(const length = firstSlice.length; i < length; ++i) {\r\n          if(message.mid > firstSlice[i]) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        firstSlice.splice(i, 0, message.mid);\r\n      } else {\r\n        historyStorage.history.unshift(message.mid);\r\n      }\r\n\r\n      if(historyStorage.count !== null) {\r\n        ++historyStorage.count;\r\n      }\r\n    }\r\n\r\n    if(!historyStorage.maxId || message.mid > historyStorage.maxId) {\r\n      historyStorage.maxId = message.mid;\r\n    }\r\n\r\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\r\n      this.rootScope.dispatchEvent('history_reply_markup', {peerId});\r\n    }\r\n\r\n    const fromId = message.fromId;\r\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\r\n      this.appUsersManager.forceUserOnline(fromId, message.date);\r\n\r\n      const action: SendMessageAction = {\r\n        _: 'sendMessageCancelAction'\r\n      };\r\n\r\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\r\n      if(peerId.isUser()) {\r\n        update = {\r\n          _: 'updateUserTyping',\r\n          action,\r\n          user_id: fromId\r\n        };\r\n      } else if(this.appPeersManager.isChannel(peerId)) {\r\n        update = {\r\n          _: 'updateChannelUserTyping',\r\n          action,\r\n          channel_id: peerId.toChatId(),\r\n          from_id: this.appPeersManager.getOutputPeer(fromId),\r\n          top_msg_id: threadId ? getServerMessageId(threadId) : undefined\r\n        };\r\n      } else {\r\n        update = {\r\n          _: 'updateChatUserTyping',\r\n          action,\r\n          chat_id: peerId.toChatId(),\r\n          from_id: this.appPeersManager.getOutputPeer(fromId)\r\n        };\r\n      }\r\n\r\n      this.apiUpdatesManager.processLocalUpdate(update);\r\n    }\r\n\r\n    // commented to render the message if it's been sent faster than history_append came to main thread\r\n    // if(!pendingMessage) {\r\n    this.handleNewMessage(message);\r\n    // }\r\n\r\n    const isTopic = dialog?._ === 'forumTopic';\r\n    if((isLocalThreadUpdate && !isTopic) || !dialog) {\r\n      return;\r\n    }\r\n\r\n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\r\n\r\n    {\r\n      if(inboxUnread && message.mid > dialog.top_message) {\r\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\r\n\r\n        ++dialog.unread_count;\r\n        if(message.pFlags.mentioned) {\r\n          ++dialog.unread_mentions_count;\r\n          this.modifyCachedMentions(peerId, message.mid, true, isTopic ? threadId : undefined);\r\n        }\r\n\r\n        releaseUnreadCount();\r\n      }\r\n\r\n      if(message.mid >= dialog.top_message) {\r\n        this.setDialogTopMessage(message, dialog);\r\n      }\r\n    }\r\n\r\n    if(((!isLocalThreadUpdate && !isForum) || isTopic) && inboxUnread) {\r\n      const notifyPeer = threadKey || peerId;\r\n      const notifyPeerToHandle = this.notificationsToHandle[notifyPeer] ??= {\r\n        fwdCount: 0,\r\n        fromId: NULL_PEER_ID\r\n      };\r\n\r\n      if(notifyPeerToHandle.fromId !== fromId) {\r\n        notifyPeerToHandle.fromId = fromId;\r\n        notifyPeerToHandle.fwdCount = 0;\r\n      }\r\n\r\n      if((message as Message.message).fwd_from) {\r\n        ++notifyPeerToHandle.fwdCount;\r\n      }\r\n\r\n      notifyPeerToHandle.topMessage = message;\r\n\r\n      this.notificationsHandlePromise ??= ctx.setTimeout(this.handleNotifications, 0);\r\n    }\r\n  };\r\n\r\n  private onUpdateMessageReactions = (update: Update.updateMessageReactions) => {\r\n    const {peer, msg_id, reactions} = update;\r\n    const channelId = (peer as Peer.peerChannel).channel_id;\r\n    const mid = this.appMessagesIdsManager.generateMessageId(msg_id, channelId);\r\n    const peerId = this.appPeersManager.getPeerId(peer);\r\n    const message: MyMessage = this.getMessageByPeer(peerId, mid);\r\n\r\n    if(message?._ !== 'message') {\r\n      return;\r\n    }\r\n\r\n    const recentReactions = reactions?.recent_reactions;\r\n    if(recentReactions?.length && message.pFlags.out) {\r\n      const recentReaction = recentReactions[recentReactions.length - 1];\r\n      const previousReactions = message.reactions;\r\n      const previousRecentReactions = previousReactions?.recent_reactions;\r\n      if(\r\n        this.appPeersManager.getPeerId(recentReaction.peer_id) !== this.appPeersManager.peerId && (\r\n          !previousRecentReactions ||\r\n          previousRecentReactions.length <= recentReactions.length\r\n        ) && (\r\n          !previousRecentReactions ||\r\n          !deepEqual(recentReaction, previousRecentReactions[previousRecentReactions.length - 1])\r\n        )\r\n      ) {\r\n        this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\r\n          if(/* muted ||  */!peerTypeNotifySettings.show_previews) return;\r\n          this.notifyAboutMessage(message, {\r\n            peerReaction: recentReaction,\r\n            peerTypeNotifySettings\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    const key = message.peerId + '_' + message.mid;\r\n    this.pushBatchUpdate('messages_reactions', this.batchUpdateReactions, key, () => copy(message.reactions));\r\n\r\n    message.reactions = reactions;\r\n    this.onMessageModification(message);\r\n\r\n    if(!update.local) {\r\n      this.setDialogToStateIfMessageIsTop(message);\r\n    }\r\n  };\r\n\r\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\r\n    // this.log('updateDialogUnreadMark', update);\r\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\r\n    const dialog = this.getDialogOnly(peerId);\r\n\r\n    if(!dialog) {\r\n      this.scheduleHandleNewDialogs(peerId);\r\n    } else {\r\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\r\n\r\n      if(!update.pFlags.unread) {\r\n        delete dialog.pFlags.unread_mark;\r\n      } else {\r\n        dialog.pFlags.unread_mark = true;\r\n      }\r\n\r\n      releaseUnreadCount();\r\n      this.dialogsStorage.setDialogToState(dialog);\r\n      this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, {dialog}]]));\r\n    }\r\n  };\r\n\r\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\r\n    const message = update.message as MyMessage;\r\n    const peerId = this.getMessagePeer(message);\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\r\n    const storage = this.getHistoryMessagesStorage(peerId);\r\n    if(!storage.has(mid)) {\r\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\r\n      return;\r\n    }\r\n\r\n    // console.trace(dT(), 'edit message', message)\r\n\r\n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\r\n    this.saveMessages([message], {storage});\r\n    const newMessage: Message = this.getMessageFromStorage(storage, mid);\r\n\r\n    this.handleEditedMessage(oldMessage, newMessage, storage);\r\n\r\n    const dialog = this.getDialogOnly(peerId);\r\n\r\n    // if sender erased mention\r\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\r\n      --dialog.unread_mentions_count;\r\n      this.modifyCachedMentions(peerId, mid, false);\r\n    } */\r\n\r\n    const isTopMessage = dialog?.top_message === mid;\r\n    if((message as Message.messageService).clear_history) {\r\n      if(isTopMessage) {\r\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog});\r\n      }\r\n    } else {\r\n      let dispatchEditEvent = true;\r\n      // no sense in dispatching message_edit since only reactions have changed\r\n      if(oldMessage?._ === 'message' && !deepEqual(oldMessage.reactions, (newMessage as Message.message).reactions)) {\r\n        const newReactions = (newMessage as Message.message).reactions;\r\n        (newMessage as Message.message).reactions = oldMessage.reactions;\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateMessageReactions',\r\n          peer: this.appPeersManager.getOutputPeer(peerId),\r\n          msg_id: message.id,\r\n          reactions: newReactions\r\n        });\r\n\r\n        dispatchEditEvent = false;\r\n      }\r\n\r\n      dispatchEditEvent && this.rootScope.dispatchEvent('message_edit', {\r\n        storageKey: storage.key,\r\n        peerId,\r\n        mid,\r\n        message\r\n      });\r\n\r\n      if(isTopMessage) {\r\n        this.dialogsStorage.setDialogToState(dialog);\r\n      }\r\n\r\n      const map: BroadcastEvents['dialogs_multiupdate'] = new Map();\r\n      const getUpdateCache = () => {\r\n        let cache = map.get(peerId);\r\n        if(!cache) {\r\n          map.set(peerId, cache = {});\r\n        }\r\n\r\n        return cache;\r\n      };\r\n\r\n      if((isTopMessage || (message as Message.message).grouped_id) && dialog) {\r\n        getUpdateCache().dialog = dialog;\r\n      }\r\n\r\n      const threadKey = this.getThreadKey(message);\r\n      if(threadKey) {\r\n        const topicId = +threadKey.split('_')[1];\r\n        const topic = this.dialogsStorage.getForumTopic(peerId, topicId);\r\n        if(topic) {\r\n          (getUpdateCache().topics ??= new Map()).set(topicId, topic);\r\n        }\r\n      }\r\n\r\n      if(map.size) {\r\n        this.rootScope.dispatchEvent('dialogs_multiupdate', map);\r\n      }\r\n    }\r\n  };\r\n\r\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox\r\n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox\r\n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\r\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\r\n    const maxId = this.appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id, channelId);\r\n    const threadId = this.appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id, channelId);\r\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updateReadHistoryInbox).peer);\r\n\r\n    const isOut = update._ === 'updateReadHistoryOutbox' ||\r\n      update._ === 'updateReadChannelOutbox' ||\r\n      update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\r\n\r\n    const isForum = channelId ? this.appChatsManager.isForum(channelId) : false;\r\n    const storage = this.getHistoryMessagesStorage(peerId);\r\n    const history = getObjectKeysAndSort(storage, 'desc');\r\n    const foundDialog = threadId && isForum ?\r\n      this.dialogsStorage.getForumTopic(peerId, threadId) :\r\n      this.getDialogOnly(peerId);\r\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\r\n    let newUnreadCount = 0;\r\n    let newUnreadMentionsCount = 0;\r\n    let foundAffected = false;\r\n\r\n    // this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\r\n\r\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n\r\n    if(peerId.isUser() && isOut) {\r\n      this.appUsersManager.forceUserOnline(peerId.toUserId());\r\n    }\r\n\r\n    if(threadId) {\r\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\r\n      if(repliesKey) {\r\n        const [peerId, mid] = repliesKey.split('_');\r\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\r\n      }\r\n    }\r\n\r\n    const releaseUnreadCount = foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\r\n    const readMaxId = this.getReadMaxIdIfUnread(peerId, threadId);\r\n\r\n    for(let i = 0, length = history.length; i < length; i++) {\r\n      const mid = history[i];\r\n      if(mid > maxId) {\r\n        continue;\r\n      }\r\n\r\n      const message: MyMessage = storage.get(mid);\r\n\r\n      if(message.pFlags.out !== isOut) {\r\n        continue;\r\n      }\r\n\r\n      const messageThreadId = getMessageThreadId(message, isForum);\r\n      if(threadId && messageThreadId !== threadId) {\r\n        continue;\r\n      }\r\n\r\n      const isUnread = message.pFlags.unread || (readMaxId && readMaxId < mid);\r\n\r\n      if(!isUnread) {\r\n        break;\r\n      }\r\n\r\n      // this.log.warn('read', messageId, isUnread, message)\r\n      delete message.pFlags.unread;\r\n      this.onMessageModification(message, storage); // * mirror it\r\n      foundAffected ||= true;\r\n\r\n      if(!message.pFlags.out && foundDialog) {\r\n        if(stillUnreadCount === undefined) {\r\n          newUnreadCount = --foundDialog.unread_count;\r\n        }\r\n\r\n        if(message.pFlags.mentioned) {\r\n          newUnreadMentionsCount = --foundDialog.unread_mentions_count;\r\n          this.modifyCachedMentions(peerId, message.mid, false);\r\n        }\r\n      }\r\n\r\n      this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\r\n    }\r\n\r\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\r\n    else historyStorage.readMaxId = maxId;\r\n\r\n    if(foundDialog) {\r\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\r\n      else foundDialog.read_inbox_max_id = maxId;\r\n\r\n      if(!isOut) {\r\n        let setCount: number;\r\n        if(stillUnreadCount !== undefined) {\r\n          setCount = stillUnreadCount;\r\n        } else if(\r\n          newUnreadCount < 0 ||\r\n          maxId >= foundDialog.top_message ||\r\n          !readMaxId\r\n        ) {\r\n          setCount = 0;\r\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\r\n          setCount = newUnreadCount;\r\n        }\r\n\r\n        if(setCount !== undefined) {\r\n          foundDialog.unread_count = setCount;\r\n        }\r\n\r\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\r\n          foundDialog.unread_mentions_count = 0;\r\n        }\r\n      }\r\n\r\n      releaseUnreadCount?.();\r\n\r\n      this.dialogsStorage.processDialogForFilters(foundDialog);\r\n\r\n      this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\r\n      this.dialogsStorage.setDialogToState(foundDialog);\r\n\r\n      if(!foundAffected && stillUnreadCount === undefined && !isOut && foundDialog.unread_count) {\r\n        if(foundDialog._ === 'forumTopic') {\r\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\r\n        } else  {\r\n          this.reloadConversation(peerId);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(foundAffected) {\r\n      this.rootScope.dispatchEvent('messages_read');\r\n    }\r\n\r\n    if(!threadId && channelId) {\r\n      const threadKeyPart = peerId + '_';\r\n      for(const threadKey in this.threadsToReplies) {\r\n        if(threadKey.indexOf(threadKeyPart) === 0) {\r\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\r\n          this.rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid) as Message.message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\r\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\r\n    const topMsgId = (update as Update.updateChannelReadMessagesContents).top_msg_id;\r\n    const threadId = topMsgId ? this.appMessagesIdsManager.generateMessageId(topMsgId, channelId) : undefined;\r\n    const mids = (update as Update.updateReadMessagesContents).messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\r\n    const peerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(mids);\r\n    for(let i = 0, length = mids.length; i < length; ++i) {\r\n      const mid = mids[i];\r\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\r\n      if(message) {\r\n        if(message.pFlags.media_unread) {\r\n          delete message.pFlags.media_unread;\r\n          this.onMessageModification(message);\r\n          this.setDialogToStateIfMessageIsTop(message);\r\n\r\n          if(!message.pFlags.out && message.pFlags.mentioned) {\r\n            this.modifyCachedMentions(peerId, mid, false, threadId);\r\n          }\r\n        }\r\n      } else {\r\n        this.fixDialogUnreadMentionsIfNoMessage(peerId, threadId);\r\n      }\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('messages_media_read', {peerId, mids});\r\n  };\r\n\r\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\r\n    const channelId = update.channel_id;\r\n    const peerId = channelId.toPeerId(true);\r\n    const history = this.getHistoryStorage(peerId).history.slice;\r\n    const availableMinId = this.appMessagesIdsManager.generateMessageId(update.available_min_id, channelId);\r\n    const messages = history.filter((mid) => mid <= availableMinId);\r\n\r\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\r\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\r\n  };\r\n\r\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\r\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\r\n    // const messages = (update as any as Update.updateDeleteChannelMessages).messages;\r\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\r\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(messages);\r\n\r\n    if(!peerId) {\r\n      return;\r\n    }\r\n\r\n    this.apiManager.clearCache('messages.getSearchCounters', (params) => {\r\n      return this.appPeersManager.getPeerId(params.peer) === peerId;\r\n    });\r\n\r\n    const threadKeys: Set<string> = new Set(), topics: Map<number, ForumTopic> = new Map();\r\n    for(const mid of messages) {\r\n      const message = this.getMessageByPeer(peerId, mid);\r\n      const threadKey = this.getThreadKey(message);\r\n      if(!threadKey) {\r\n        continue;\r\n      }\r\n\r\n      const threadId = +threadKey.split('_')[1];\r\n      if(this.threadsStorage[peerId]?.[threadId]) {\r\n        threadKeys.add(threadKey);\r\n\r\n        if(!topics.has(threadId)) {\r\n          const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\r\n          if(topic) {\r\n            topics.set(threadId, topic);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const historyUpdated = this.handleDeletedMessages(\r\n      peerId,\r\n      this.getHistoryMessagesStorage(peerId),\r\n      messages\r\n    );\r\n\r\n    const threadsStorages = Array.from(threadKeys).map((threadKey) => {\r\n      const [peerId, mid] = threadKey.split('_');\r\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\r\n    });\r\n\r\n    const historyStorages = [\r\n      this.getHistoryStorage(peerId),\r\n      ...threadsStorages\r\n    ];\r\n    historyStorages.forEach((historyStorage) => {\r\n      for(const mid of historyUpdated.msgs) {\r\n        historyStorage.history.delete(mid);\r\n      }\r\n\r\n      if(historyUpdated.count && historyStorage.count) {\r\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\r\n      }\r\n    });\r\n\r\n    this.rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\r\n\r\n    const dialogs: (MTDialog.dialog | ForumTopic)[] = [\r\n      ...topics.values()\r\n    ];\r\n\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(dialog) {\r\n      dialogs.unshift(dialog);\r\n    }\r\n\r\n    dialogs.forEach((dialog) => {\r\n      const isTopic = dialog._ === 'forumTopic';\r\n      const affected = historyUpdated.unreadMentions || historyUpdated.unread;\r\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\r\n\r\n      if(historyUpdated.unread) {\r\n        dialog.unread_count = Math.max(0, dialog.unread_count - historyUpdated.unread);\r\n      }\r\n\r\n      if(historyUpdated.unreadMentions) {\r\n        dialog.unread_mentions_count = !dialog.unread_count ? 0 : Math.max(0, dialog.unread_mentions_count - historyUpdated.unreadMentions);\r\n      }\r\n\r\n      if(affected) {\r\n        releaseUnreadCount();\r\n\r\n        if(!isTopic) {\r\n          this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog});\r\n        }\r\n      }\r\n\r\n      if(historyUpdated.msgs.has(dialog.top_message)) {\r\n        const historyStorage = this.getHistoryStorage(dialog.peerId, isTopic ? dialog.id : undefined);\r\n        const slice = historyStorage.history.first;\r\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\r\n          const mid = slice[0];\r\n          const message = this.getMessageByPeer(peerId, mid);\r\n          this.setDialogTopMessage(message, dialog);\r\n        } else if(isTopic) {\r\n          this.dialogsStorage.getForumTopicById(peerId, dialog.id);\r\n        } else {\r\n          this.reloadConversation(peerId);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  private onUpdateChannel = (update: Update.updateChannel) => {\r\n    const channelId = update.channel_id;\r\n    const peerId = channelId.toPeerId(true);\r\n    const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\r\n\r\n    const needDialog = this.appChatsManager.isInChat(channelId);\r\n\r\n    const canViewHistory = !!getPeerActiveUsernames(channel)[0] || !channel.pFlags.left;\r\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\r\n\r\n    if(canViewHistory !== hasHistory) {\r\n      delete this.historiesStorage[peerId];\r\n      this.rootScope.dispatchEvent('history_forbidden', peerId);\r\n    }\r\n\r\n    const dialog = this.getDialogOnly(peerId);\r\n    if(!!dialog !== needDialog) {\r\n      if(needDialog) {\r\n        this.reloadConversation(peerId);\r\n      } else {\r\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\r\n      }\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('channel_update', channelId);\r\n  };\r\n\r\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\r\n    const peerId = update.channel_id.toPeerId(true);\r\n\r\n    // if(this.appPeersManager.isForum(peerId)) {\r\n    //   const cache = this.dialogsStorage.getForumTopicsCache(peerId);\r\n    //   if(cache.topics.size) {\r\n\r\n    //   }\r\n    // }\r\n\r\n    this.flushStoragesByPeerId(peerId);\r\n    Promise.all([\r\n      this.reloadConversation(peerId)\r\n    ]).then(() => {\r\n      this.rootScope.dispatchEvent('history_reload', peerId);\r\n    });\r\n  };\r\n\r\n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\r\n    const views = update.views;\r\n    const peerId = update.channel_id.toPeerId(true);\r\n    const mid = this.appMessagesIdsManager.generateMessageId(update.id, update.channel_id);\r\n    const message = this.getMessageByPeer(peerId, mid) as Message.message;\r\n    if(message?.views !== undefined && message.views < views) {\r\n      message.views = views;\r\n      this.onMessageModification(message);\r\n      this.pushBatchUpdate('messages_views', this.batchUpdateViews, message.peerId + '_' + message.mid);\r\n      this.setDialogToStateIfMessageIsTop(message);\r\n    }\r\n  };\r\n\r\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\r\n    // this.log('updateServiceNotification', update);\r\n    if(update.pFlags?.popup) {\r\n      this.rootScope.dispatchEvent('service_notification', update);\r\n      return;\r\n    }\r\n\r\n    const fromId = SERVICE_PEER_ID;\r\n    const peerId = fromId;\r\n    const messageId = this.generateTempMessageId(peerId);\r\n    const message: Message.message = {\r\n      _: 'message',\r\n      id: messageId,\r\n      from_id: this.appPeersManager.getOutputPeer(fromId),\r\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n      pFlags: {unread: true},\r\n      date: (update.inbox_date || tsNow(true)) + this.timeManager.getServerTimeOffset(),\r\n      message: update.message,\r\n      media: update.media,\r\n      entities: update.entities\r\n    };\r\n    if(!this.appUsersManager.hasUser(fromId)) {\r\n      this.appUsersManager.saveApiUsers([{\r\n        _: 'user',\r\n        id: fromId,\r\n        pFlags: {verified: true},\r\n        access_hash: '0',\r\n        first_name: 'Telegram',\r\n        phone: '42777'\r\n      }]);\r\n    }\r\n    this.saveMessages([message], {isOutgoing: true});\r\n\r\n    if(update.inbox_date) {\r\n      this.pendingTopMsgs[peerId] = messageId;\r\n      this.onUpdateNewMessage({\r\n        _: 'updateNewMessage',\r\n        message,\r\n        pts: undefined,\r\n        pts_count: undefined\r\n      });\r\n    }\r\n  };\r\n\r\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\r\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\r\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updatePinnedMessages).peer);\r\n\r\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\r\n    if(storage.count !== storage.history.length) {\r\n      if(storage.count !== undefined) {\r\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];\r\n      }\r\n\r\n      rootScope.broadcast('peer_pinned_messages', peerId);\r\n      break;\r\n    } */\r\n\r\n    const messages = update.messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\r\n\r\n    const storage = this.getHistoryMessagesStorage(peerId);\r\n    const missingMessages = messages.filter((mid) => !storage.has(mid));\r\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map((mid) => this.reloadMessages(peerId, mid))) : Promise.resolve();\r\n    getMissingPromise.finally(() => {\r\n      const werePinned = update.pFlags?.pinned;\r\n      if(werePinned) {\r\n        for(const mid of messages) {\r\n          // storage.history.push(mid);\r\n          const message = storage.get(mid) as Message.message;\r\n          message.pFlags.pinned = true;\r\n          this.onMessageModification(message, storage);\r\n          this.setDialogToStateIfMessageIsTop(message);\r\n        }\r\n\r\n        /* if(this.pinnedMessages[peerId]?.maxId) {\r\n          const maxMid = Math.max(...messages);\r\n          this.pinnedMessages\r\n        } */\r\n\r\n        // storage.history.sort((a, b) => b - a);\r\n      } else {\r\n        for(const mid of messages) {\r\n          // storage.history.findAndSplice((_mid) => _mid === mid);\r\n          const message = storage.get(mid) as Message.message;\r\n          delete message.pFlags.pinned;\r\n          this.onMessageModification(message, storage);\r\n          this.setDialogToStateIfMessageIsTop(message);\r\n        }\r\n      }\r\n\r\n      /* const info = this.pinnedMessages[peerId];\r\n      if(info) {\r\n        info.count += messages.length * (werePinned ? 1 : -1);\r\n      } */\r\n\r\n      delete this.pinnedMessages[this.getPinnedMessagesKey(peerId)];\r\n      this.appStateManager.getState().then((state) => {\r\n        delete state.hiddenPinnedMessages[peerId];\r\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\r\n      });\r\n    });\r\n  };\r\n\r\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\r\n    const {peer, notify_settings} = update;\r\n    const isTopic = peer._ === 'notifyForumTopic';\r\n    const isPeerType = peer._ === 'notifyPeer' || isTopic;\r\n    if(!isPeerType) {\r\n      return;\r\n    }\r\n\r\n    const peerId = this.appPeersManager.getPeerId(peer.peer);\r\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, isTopic ? this.appMessagesIdsManager.generateMessageId(peer.top_msg_id, (peer.peer as Peer.peerChannel).channel_id) : undefined);\r\n    if(!dialog) {\r\n      return;\r\n    }\r\n\r\n    dialog.notify_settings = notify_settings;\r\n    this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\r\n    this.dialogsStorage.setDialogToState(dialog);\r\n  };\r\n\r\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\r\n    const message = update.message as MyMessage;\r\n    const peerId = this.getMessagePeer(message);\r\n\r\n    const storage = this.scheduledMessagesStorage[peerId];\r\n    if(!storage) {\r\n      return;\r\n    }\r\n\r\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\r\n\r\n    const oldMessage = this.getMessageFromStorage(storage, mid);\r\n    this.saveMessages([message], {storage, isScheduled: true});\r\n    const newMessage = this.getMessageFromStorage(storage, mid);\r\n\r\n    if(oldMessage) {\r\n      this.handleEditedMessage(oldMessage, newMessage, storage);\r\n      this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId, mid: message.mid, message});\r\n    } else {\r\n      const pendingMessage = this.checkPendingMessage(message);\r\n      if(!pendingMessage) {\r\n        this.rootScope.dispatchEvent('scheduled_new', message as Message.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\r\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n\r\n    const storage = this.scheduledMessagesStorage[peerId];\r\n    if(storage) {\r\n      const mids = update.messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\r\n      this.handleDeletedMessages(peerId, storage, mids);\r\n\r\n      this.rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\r\n    }\r\n  };\r\n\r\n  private onUpdateMessageExtendedMedia = (update: Update.updateMessageExtendedMedia) => {\r\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n    const mid = this.appMessagesIdsManager.generateMessageId(update.msg_id, channelId);\r\n    const storage = this.getHistoryMessagesStorage(peerId);\r\n    if(!storage.has(mid)) {\r\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\r\n      return;\r\n    }\r\n\r\n    const message = this.getMessageFromStorage(storage, mid) as Message.message;\r\n    const messageMedia = message.media as MessageMedia.messageMediaInvoice;\r\n    if(messageMedia.extended_media?._ === 'messageExtendedMedia') {\r\n      return;\r\n    }\r\n\r\n    messageMedia.extended_media = update.extended_media;\r\n    this.onUpdateEditMessage({\r\n      _: 'updateEditMessage',\r\n      message,\r\n      pts: 0,\r\n      pts_count: 0\r\n    });\r\n  };\r\n\r\n  private onUpdateTranscribedAudio = (update: Update.updateTranscribedAudio) => {\r\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n    const text = update.text;\r\n    const mid = this.appMessagesIdsManager.generateMessageId(update.msg_id, channelId);\r\n\r\n    this.rootScope.dispatchEvent('message_transcribed', {peerId, mid, text, pending: update.pFlags.pending});\r\n  };\r\n\r\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\r\n    if(this.isMessageIsTopMessage(message)) {\r\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\r\n    }\r\n  }\r\n\r\n  public isMessageIsTopMessage(message: MyMessage) {\r\n    const dialog = this.getDialogOnly(message.peerId);\r\n    return dialog && dialog.top_message === message.mid;\r\n  }\r\n\r\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\r\n    try { // * на всякий случай, скорее всего это не понадобится\r\n      const threadKey = this.getThreadKey(threadMessage);\r\n      if(threadKey) {\r\n        const repliesKey = this.threadsToReplies[threadKey];\r\n        if(repliesKey) {\r\n          const [peerId, mid] = repliesKey.split('_');\r\n\r\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\r\n        }\r\n      }\r\n    } catch(err) {\r\n      this.log.error('incrementMessageReplies err', err, threadMessage);\r\n    }\r\n  }\r\n\r\n  private getThreadKey(threadMessage: MyMessage) {\r\n    let threadKey = '';\r\n    if(threadMessage?.peerId?.isAnyChat()) {\r\n      const threadId = getMessageThreadId(threadMessage, this.appChatsManager.isForum(threadMessage.peerId.toChatId()));\r\n      if(threadId) {\r\n        threadKey = threadMessage.peerId + '_' + threadId;\r\n      }\r\n    }\r\n\r\n    return threadKey;\r\n  }\r\n\r\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\r\n    const promise: Promise<Message.message> = this.reloadMessages(peerId, mid, true).then(() => {\r\n      const message = this.getMessageByPeer(peerId, mid) as Message.message;\r\n      if(!message) {\r\n        return;\r\n      }\r\n\r\n      if(broadcastEventName) {\r\n        this.rootScope.dispatchEvent(broadcastEventName, message);\r\n      }\r\n\r\n      return message;\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  private checkPendingMessage(message: MyMessage) {\r\n    const randomId = this.pendingByMessageId[message.mid];\r\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\r\n    if(randomId) {\r\n      const pendingData = this.pendingByRandomId[randomId];\r\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\r\n        this.rootScope.dispatchEvent('history_update', {\r\n          storageKey: pendingData.storage.key,\r\n          message,\r\n          sequential: pendingData.sequential\r\n        });\r\n      }\r\n\r\n      delete this.pendingByMessageId[message.mid];\r\n    }\r\n\r\n    return pendingMessage;\r\n  }\r\n\r\n  public mutePeer(options: {peerId: PeerId, muteUntil: number, threadId?: number}) {\r\n    if(!(options = this.appNotificationsManager.validatePeerSettings(options))) {\r\n      return;\r\n    }\r\n\r\n    const {peerId, muteUntil, threadId} = options;\r\n    const settings: InputPeerNotifySettings = {\r\n      _: 'inputPeerNotifySettings'\r\n    };\r\n\r\n    settings.mute_until = muteUntil;\r\n\r\n    const peer = this.appPeersManager.getInputPeerById(peerId);\r\n    return this.appNotificationsManager.updateNotifySettings(threadId ? {\r\n      _: 'inputNotifyForumTopic',\r\n      peer,\r\n      top_msg_id: getServerMessageId(threadId)\r\n    } : {\r\n      _: 'inputNotifyPeer',\r\n      peer\r\n    }, settings);\r\n  }\r\n\r\n  public togglePeerMute({peerId, mute, threadId}: {peerId: PeerId, mute?: boolean, threadId?: number}) {\r\n    if(mute === undefined) {\r\n      mute = !this.appNotificationsManager.isPeerLocalMuted({peerId, respectType: false, threadId});\r\n    }\r\n\r\n    return this.mutePeer({peerId, muteUntil: mute ? MUTE_UNTIL : 0, threadId});\r\n  }\r\n\r\n  private findPeerIdByMids(mids: number[]) {\r\n    for(let length = mids.length, i = length - 1; i >= 0; --i) {\r\n      const mid = mids[i];\r\n      const message = this.getMessageById(mid);\r\n      if(message) {\r\n        return message.peerId;\r\n      }\r\n    }\r\n  }\r\n\r\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\r\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\r\n      return false;\r\n    }\r\n\r\n    if(peerId.isAnyChat()) {\r\n      const chatId = peerId.toChatId();\r\n      if(threadId) {\r\n        const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\r\n        if(topic?.pFlags?.closed && !this.appChatsManager.hasRights(chatId, 'manage_topics')) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // const isChannel = appPeersManager.isChannel(peerId);\r\n      const chat = this.appChatsManager.getChat(chatId) as Chat.chat;\r\n      const hasRights = /* isChannel &&  */this.appChatsManager.hasRights(chatId, action, undefined, !!threadId);\r\n      return /* !isChannel ||  */hasRights && (!chat.pFlags.left || !!threadId);\r\n    } else {\r\n      return this.appUsersManager.canSendToUser(peerId);\r\n    }\r\n  }\r\n\r\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\r\n    const pendingData = this.pendingByRandomId[randomId];\r\n    if(!pendingData) {\r\n      return;\r\n    }\r\n\r\n    const {peerId, tempId, threadId, storage} = pendingData;\r\n\r\n    [\r\n      this.getHistoryStorage(peerId),\r\n      threadId ? this.getHistoryStorage(peerId, threadId) : undefined\r\n    ]\r\n    .filter(Boolean)\r\n    .forEach((storage) => {\r\n      storage.history.delete(tempId);\r\n    });\r\n\r\n    // this.log('pending', randomID, historyStorage.pending)\r\n\r\n    const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\r\n    if(tempMessage) {\r\n      delete finalMessage.pFlags.is_outgoing;\r\n      delete finalMessage.pending;\r\n      delete finalMessage.error;\r\n      delete finalMessage.random_id;\r\n      delete finalMessage.send;\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('messages_pending');\r\n\r\n    delete this.pendingByRandomId[randomId];\r\n\r\n    this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\r\n\r\n    return tempMessage;\r\n  }\r\n\r\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\r\n    const callbacks = this.tempFinalizeCallbacks[tempId];\r\n    // this.log.warn(callbacks, tempId);\r\n    if(callbacks !== undefined) {\r\n      for(const name in callbacks) {\r\n        const {deferred, callback} = callbacks[name];\r\n        // this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\r\n        callback(message).then(deferred.resolve.bind(deferred), deferred.reject.bind(deferred));\r\n      }\r\n\r\n      delete this.tempFinalizeCallbacks[tempId];\r\n    }\r\n\r\n    // set cached url to media\r\n    if((message as Message.message).media) {\r\n      assumeType<Message.message>(message);\r\n      const {photo: newPhoto, document: newDoc} = message.media as any;\r\n      if(newPhoto) {\r\n        const photo = this.appPhotosManager.getPhoto('' + tempId);\r\n        if(/* photo._ !== 'photoEmpty' */photo) {\r\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\r\n          const oldCacheContext = this.thumbsStorage.getCacheContext(photo, THUMB_TYPE_FULL);\r\n          this.thumbsStorage.setCacheContextURL(newPhoto, newPhotoSize.type, oldCacheContext.url, oldCacheContext.downloaded);\r\n\r\n          // const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\r\n          // const downloadOptions = getPhotoDownloadOptions(newPhoto, photoSize);\r\n          // const fileName = getFileNameByLocation(downloadOptions.location);\r\n          // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\r\n        }\r\n      } else if(newDoc) {\r\n        const oldDoc = this.appDocsManager.getDoc('' + tempId);\r\n        if(oldDoc) {\r\n          const oldCacheContext = this.thumbsStorage.getCacheContext(oldDoc);\r\n          if(\r\n            /* doc._ !== 'documentEmpty' &&  */\r\n            oldDoc.type &&\r\n            oldDoc.type !== 'sticker' &&\r\n            oldDoc.mime_type !== 'image/gif' &&\r\n            oldCacheContext.url\r\n          ) {\r\n            this.thumbsStorage.setCacheContextURL(newDoc, undefined, oldCacheContext.url, oldCacheContext.downloaded);\r\n\r\n            // const fileName = getDocumentInputFileName(newDoc);\r\n            // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\r\n          }\r\n        }\r\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\r\n        delete this.appPollsManager.polls[tempId];\r\n        delete this.appPollsManager.results[tempId];\r\n      }\r\n    }\r\n\r\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\r\n    this.deleteMessageFromStorage(storage, tempId);\r\n\r\n    if(!(tempMessage as Message.message).reply_markup && (message as Message.message).reply_markup) {\r\n      setTimeout(() => { // TODO: refactor it to normal buttons adding\r\n        if(!this.getMessageFromStorage(storage, message.mid)) {\r\n          return;\r\n        }\r\n\r\n        this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId: message.peerId, mid: message.mid, message});\r\n      }, 0);\r\n    }\r\n\r\n    this.handleReleasingMessage(tempMessage, storage);\r\n    this.onMessageModification(message, storage); // * mirror it\r\n\r\n    this.rootScope.dispatchEvent('message_sent', {storageKey: storage.key, tempId, tempMessage, mid: message.mid, message});\r\n  }\r\n\r\n  public incrementMaxSeenId(maxId: number) {\r\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\r\n      return false;\r\n    }\r\n\r\n    this.maxSeenId = maxId;\r\n    this.appStateManager.pushToState('maxSeenMsgId', maxId);\r\n\r\n    this.apiManager.invokeApi('messages.receivedMessages', {\r\n      max_id: getServerMessageId(maxId)\r\n    });\r\n  }\r\n\r\n  public async getMessageReactionsListAndReadParticipants(\r\n    message: Message.message,\r\n    limit?: number,\r\n    reaction?: Reaction,\r\n    offset?: string,\r\n    skipReadParticipants?: boolean,\r\n    skipReactionsList?: boolean\r\n  ) {\r\n    const emptyMessageReactionsList = {\r\n      reactions: [] as MessagePeerReaction[],\r\n      count: 0,\r\n      next_offset: undefined as string\r\n    };\r\n\r\n    const canViewMessageReadParticipants = await this.canViewMessageReadParticipants(message);\r\n    limit ??= canViewMessageReadParticipants ? 100 : 50;\r\n\r\n    return Promise.all([\r\n      canViewMessageReadParticipants && !reaction && !skipReadParticipants ? this.getMessageReadParticipants(message.peerId, message.mid).catch(() => [] as ReadParticipantDate[]) : [] as ReadParticipantDate[],\r\n\r\n      message.reactions?.recent_reactions?.length && !skipReactionsList ? this.appReactionsManager.getMessageReactionsList(message.peerId, message.mid, limit, reaction, offset).catch((err) => emptyMessageReactionsList) : emptyMessageReactionsList\r\n    ]).then(([readParticipantDates, messageReactionsList]) => {\r\n      const filteredReadParticipants = readParticipantDates.slice();\r\n      forEachReverse(filteredReadParticipants, ({user_id}, idx, arr) => {\r\n        if(messageReactionsList.reactions.some((reaction) => this.appPeersManager.getPeerId(reaction.peer_id) === user_id.toPeerId())) {\r\n          arr.splice(idx, 1);\r\n        }\r\n      });\r\n\r\n      let combined: {\r\n        peerId: PeerId,\r\n        date?: number,\r\n        reaction?: Reaction\r\n      }[] = messageReactionsList.reactions.map((reaction) => {\r\n        return {\r\n          peerId: this.appPeersManager.getPeerId(reaction.peer_id),\r\n          reaction: reaction.reaction,\r\n          date: reaction.date\r\n        };\r\n      });\r\n\r\n      combined = combined.concat(filteredReadParticipants.map(({user_id, date}) => ({date, peerId: user_id.toPeerId()})));\r\n\r\n      return {\r\n        reactions: messageReactionsList.reactions,\r\n        reactionsCount: messageReactionsList.count,\r\n        readParticipantDates: readParticipantDates,\r\n        combined: combined,\r\n        nextOffset: messageReactionsList.next_offset\r\n      };\r\n    });\r\n  }\r\n\r\n  public getMessageReadParticipants(peerId: PeerId, mid: number) {\r\n    return this.apiManager.invokeApiSingle('messages.getMessageReadParticipants', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid)\r\n    }).then((readParticipantDates) => { // ! convert long to number\r\n      readParticipantDates.forEach((readParticipantDate) => readParticipantDate.user_id = readParticipantDate.user_id.toUserId());\r\n      return readParticipantDates;\r\n    });\r\n  }\r\n\r\n  public async canViewMessageReadParticipants(message: Message) {\r\n    if(\r\n      message?._ !== 'message' ||\r\n      message.pFlags.is_outgoing ||\r\n      !message.pFlags.out ||\r\n      !this.appPeersManager.isAnyGroup(message.peerId)\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    const chat = this.appChatsManager.getChat(message.peerId.toChatId()) as Chat.chat | Chat.channel;\r\n    const appConfig = await this.apiManager.getAppConfig();\r\n    return chat.participants_count <= appConfig.chat_read_mark_size_threshold &&\r\n      (tsNow(true) - message.date) < appConfig.chat_read_mark_expire_period;\r\n  }\r\n\r\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\r\n    if(!mids.length) {\r\n      return;\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingle('messages.getMessagesViews', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: mids.map((mid) => getServerMessageId(mid)),\r\n      increment: true\r\n    }).then((views) => {\r\n      const updates: Update[] = new Array(mids.length);\r\n      for(let i = 0, length = mids.length; i < length; ++i) {\r\n        updates[i] = {\r\n          _: 'updateChannelMessageViews',\r\n          channel_id: peerId.toChatId(),\r\n          id: mids[i],\r\n          views: views.views[i].views\r\n        };\r\n      }\r\n\r\n      this.apiUpdatesManager.processUpdateMessage({\r\n        _: 'updates',\r\n        updates,\r\n        chats: views.chats,\r\n        users: views.users\r\n      });\r\n    });\r\n  }\r\n\r\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\r\n    fwdCount: number,\r\n    peerReaction: MessagePeerReaction,\r\n    peerTypeNotifySettings: PeerNotifySettings\r\n  }> = {}) {\r\n    const peerId = this.getMessagePeer(message);\r\n\r\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\r\n      return;\r\n    }\r\n\r\n    const tabs = appTabsManager.getTabs();\r\n    let tab = tabs.find((tab) => {\r\n      const {chatPeerIds} = tab.state;\r\n      return chatPeerIds[chatPeerIds.length - 1] === peerId;\r\n    });\r\n\r\n    if(!tab && tabs.length) {\r\n      tabs.sort((a, b) => a.state.idleStartTime - b.state.idleStartTime);\r\n      tab = !tabs[0].state.idleStartTime ? tabs[0] : tabs[tabs.length - 1];\r\n    }\r\n\r\n    const port = MTProtoMessagePort.getInstance<false>();\r\n    port.invokeVoid('notificationBuild', {\r\n      message,\r\n      ...options\r\n    }, tab?.source);\r\n  }\r\n\r\n  public getScheduledMessagesStorage(peerId: PeerId) {\r\n    return this.scheduledMessagesStorage[peerId] ??= this.createMessageStorage(peerId, 'scheduled');\r\n  }\r\n\r\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\r\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\r\n  }\r\n\r\n  public getScheduledMessages(peerId: PeerId) {\r\n    if(!this.canSendToPeer(peerId)) return;\r\n\r\n    const storage = this.getScheduledMessagesStorage(peerId);\r\n    if(storage.size) {\r\n      return [...storage.keys()];\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingle('messages.getScheduledHistory', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      hash: ''\r\n    }).then((historyResult) => {\r\n      if(historyResult._ !== 'messages.messagesNotModified') {\r\n        this.appUsersManager.saveApiUsers(historyResult.users);\r\n        this.appChatsManager.saveApiChats(historyResult.chats);\r\n\r\n        const storage = this.getScheduledMessagesStorage(peerId);\r\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\r\n        return [...storage.keys()];\r\n      }\r\n\r\n      return [];\r\n    });\r\n  }\r\n\r\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\r\n    return this.apiManager.invokeApi('messages.sendScheduledMessages', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: mids.map((mid) => getServerMessageId(mid))\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\r\n    return this.apiManager.invokeApi('messages.deleteScheduledMessages', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      id: mids.map((mid) => getServerMessageId(mid))\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getMessageWithReplies(message: Message.message) {\r\n    return this.filterMessages(message, (message) => !!(message as Message.message).replies)[0] as any;\r\n  }\r\n\r\n  public getMessageWithCommentReplies(message: Message.message) {\r\n    if(message.peerId !== REPLIES_PEER_ID) {\r\n      message = this.getMessageWithReplies(message);\r\n      const replies = message?.replies;\r\n      if(!(replies && replies.pFlags.comments && replies.channel_id.toChatId() !== REPLIES_HIDDEN_CHANNEL_ID)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    return message;\r\n  }\r\n\r\n  public isFetchIntervalNeeded(peerId: PeerId) {\r\n    return peerId.isAnyChat() && (\r\n      !this.appChatsManager.isInChat(peerId.toChatId()) ||\r\n      this.appChatsManager.isForum(peerId.toChatId())\r\n    );\r\n  }\r\n\r\n  // public async getNewHistory(peerId: PeerId, threadId?: number) {\r\n  //   if(!this.isFetchIntervalNeeded(peerId)) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   const historyStorage = this.getHistoryStorage(peerId, threadId);\r\n  //   const slice = historyStorage.history.slice;\r\n  //   if(!slice.isEnd(SliceEnd.Bottom)) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   delete historyStorage.maxId;\r\n  //   slice.unsetEnd(SliceEnd.Bottom);\r\n\r\n  //   // if there is no id - then request by first id because cannot request by id 0 with backLimit\r\n  //   const historyResult = await this.getHistory({peerId, offsetId: slice[0] ?? 1, limit: 0, backLimit: 50, threadId});\r\n  //   for(let i = 0, length = historyResult.history.length; i < length; ++i) {\r\n  //     this.handleNewMessage(this.getMessageByPeer(peerId, historyResult.history[i]));\r\n  //   }\r\n\r\n  //   return {isBottomEnd: historyStorage.history.slice.isEnd(SliceEnd.Bottom)};\r\n  // }\r\n\r\n  public getMigration(peerId: PeerId) {\r\n    const next = this.migratedFromTo[peerId];\r\n    const prev = this.migratedToFrom[peerId];\r\n    return next || prev ? {next, prev} : undefined;\r\n  }\r\n\r\n  /**\r\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\r\n   */\r\n  public getHistory(options: RequestHistoryOptions & {\r\n    backLimit?: number,\r\n    historyStorage?: HistoryStorage\r\n  }): Promise<HistoryResult> | HistoryResult {\r\n    options.offsetId ??= 0;\r\n\r\n    if(options.addOffset === undefined) {\r\n      options.addOffset = 0;\r\n\r\n      if(options.backLimit) {\r\n        options.addOffset = -options.backLimit;\r\n        options.limit += options.backLimit;\r\n      }\r\n    }\r\n\r\n    options.historyStorage ??= options.inputFilter ? this.createHistoryStorage('search') : this.getHistoryStorage(options.peerId, options.threadId);\r\n\r\n    const {historyStorage, limit, addOffset, offsetId} = options;\r\n\r\n    if(this.appPeersManager.isPeerRestricted(options.peerId)) {\r\n      const first = historyStorage.history.first;\r\n      first.setEnd(SliceEnd.Both);\r\n\r\n      const slice = first.slice(0, 0);\r\n      slice.setEnd(SliceEnd.Both);\r\n\r\n      return {\r\n        count: 0,\r\n        history: Array.from(slice),\r\n        isEnd: slice.getEnds(),\r\n        offsetIdOffset: 0\r\n      };\r\n    }\r\n\r\n    const haveSlice = historyStorage.history.sliceMe(offsetId, addOffset, limit);\r\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\r\n      return {\r\n        count: historyStorage.count,\r\n        history: Array.from(haveSlice.slice),\r\n        isEnd: haveSlice.slice.getEnds(),\r\n        offsetIdOffset: haveSlice.offsetIdOffset\r\n      };\r\n    }\r\n\r\n    return this.fillHistoryStorage(\r\n      options as Modify<typeof options, {historyStorage: HistoryStorage}>\r\n    ).then((historyResult) => {\r\n      if(options.inputFilter) {\r\n        // const migration = this.getMigration(options.peerId);\r\n        // if(migration) {\r\n        //   const excludeMid = this.appMessagesIdsManager.generateMessageId(1, migration.next || options.peerId);\r\n        //   const idx = f.indexOf(excludeMid);\r\n        //   if(idx !== -1) {\r\n        //     f.splice(idx, 1);\r\n        //   }\r\n        // }\r\n\r\n        const mids = historyResult.messages.map((message) => message.mid);\r\n\r\n        return {\r\n          count: (historyResult as MessagesMessages.messagesMessagesSlice).count ?? historyStorage.count,\r\n          history: mids,\r\n          isEnd: historyStorage.history.slice.getEnds(),\r\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice)?.offset_id_offset || 0,\r\n          nextRate: (historyResult as MessagesMessages.messagesMessagesSlice)?.next_rate,\r\n          messages: historyResult.messages as MyMessage[]\r\n        };\r\n      }\r\n\r\n      const slice = historyStorage.history.sliceMe(offsetId, addOffset, limit);\r\n      const f = slice?.slice || historyStorage.history.constructSlice();\r\n      return {\r\n        count: historyStorage.count,\r\n        history: Array.from(f),\r\n        isEnd: f.getEnds(),\r\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\r\n      };\r\n    });\r\n  }\r\n\r\n  public isHistoryResultEnd({\r\n    historyResult,\r\n    limit,\r\n    addOffset,\r\n    offsetId,\r\n    offsetPeerId,\r\n    inputFilter,\r\n    peerId\r\n  }: {\r\n    historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>,\r\n  } & Pick<RequestHistoryOptions, 'limit' | 'addOffset' | 'offsetId' | 'offsetPeerId' | 'peerId' | 'inputFilter'>) {\r\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\r\n\r\n    const mids = messages.map(({mid}) => mid);\r\n\r\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\r\n\r\n    const topWasMeantToLoad = addOffset < 0 ? limit + addOffset : limit;\r\n    const bottomWasMeantToLoad = Math.abs(addOffset);\r\n\r\n    // * means global search\r\n    // * have to reset offsetId, because messages aren't sorted and can be loaded only from the top\r\n    if(!peerId && inputFilter) {\r\n      offsetId = 0;\r\n    }\r\n\r\n    let offsetIdOffset = offset_id_offset;\r\n    let isTopEnd = false, isBottomEnd = !offsetId;\r\n    let topLoaded = messages.length, bottomLoaded = 0;\r\n    let isOffsetIncluded = false;\r\n\r\n    const serverOffsetId = offsetId && getServerMessageId(offsetId);\r\n    if(serverOffsetId) {\r\n      let i = 0;\r\n      for(const length = mids.length; i < length; ++i) {\r\n        if(offsetId > mids[i]) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      isOffsetIncluded = mids.includes(offsetId);\r\n      topLoaded = messages.length - i;\r\n      bottomLoaded = i;\r\n    }\r\n\r\n    // offsetIdOffset = undefined;\r\n\r\n    // if(offsetIdOffset === undefined && !bottomWasMeantToLoad) {\r\n    //   offsetIdOffset = 0;\r\n    // }\r\n\r\n    if(offsetIdOffset !== undefined) {\r\n      isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\r\n      isBottomEnd = !offsetIdOffset || (addOffset < 0 && (offsetIdOffset + addOffset) <= 0);\r\n    } else if(serverOffsetId) {\r\n      if(topWasMeantToLoad) isTopEnd = topLoaded < topWasMeantToLoad;\r\n      if(bottomWasMeantToLoad) isBottomEnd = bottomLoaded < bottomWasMeantToLoad;\r\n\r\n      if(isTopEnd || isBottomEnd) {\r\n        offsetIdOffset = isTopEnd ? count - topLoaded : bottomLoaded - +isOffsetIncluded;\r\n      }\r\n    } else if(messages.length >= count) {\r\n      isTopEnd = true;\r\n      isBottomEnd = true;\r\n    }\r\n\r\n    offsetIdOffset ??= 0;\r\n\r\n    return {\r\n      count,\r\n      offsetIdOffset,\r\n      isTopEnd,\r\n      isBottomEnd,\r\n      mids,\r\n      topWasMeantToLoad,\r\n      bottomWasMeantToLoad,\r\n      topLoaded,\r\n      bottomLoaded\r\n    };\r\n  }\r\n\r\n  public mergeHistoryResult(options: RequestHistoryOptions & {\r\n    slicedArray: SlicedArray<number>,\r\n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0]['historyResult'],\r\n    historyStorage?: HistoryStorage\r\n  }) {\r\n    const {\r\n      slicedArray,\r\n      historyResult,\r\n      offsetId,\r\n      peerId,\r\n      historyStorage\r\n    } = options;\r\n\r\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\r\n    const isEnd = this.isHistoryResultEnd(options);\r\n    const {count, offsetIdOffset, mids} = isEnd;\r\n    const migration = this.getMigration(peerId);\r\n\r\n    if(migration && historyStorage && historyStorage.type !== 'replies') {\r\n      if(migration.prev) {\r\n        isEnd.isTopEnd = false;\r\n      } else if(migration.next) {\r\n        if(isEnd.isBottomEnd) {\r\n          mids.unshift(this.appMessagesIdsManager.generateMessageId(1, migration.next.toChatId()));\r\n          isEnd.isBottomEnd = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    // * add bound manually.\r\n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\r\n    // * check that offset_id is not 0\r\n    if(offsetId && getServerMessageId(offsetId) && !mids.includes(offsetId) && offsetIdOffset < count) {\r\n      let i = 0;\r\n      for(const length = mids.length; i < length; ++i) {\r\n        if(offsetId > mids[i]) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      mids.splice(i, 0, offsetId);\r\n    }\r\n\r\n    const slice = slicedArray.insertSlice(mids) || slicedArray.slice;\r\n    if(isEnd.isTopEnd) {\r\n      slice.setEnd(SliceEnd.Top);\r\n    }\r\n\r\n    if(isEnd.isBottomEnd) {\r\n      slice.setEnd(SliceEnd.Bottom);\r\n    }\r\n\r\n    return {slice, mids, messages, ...isEnd};\r\n  }\r\n\r\n  private async fillHistoryStorage(options: RequestHistoryOptions & {\r\n    historyStorage: HistoryStorage,\r\n    recursion?: boolean\r\n  }) {\r\n    const {\r\n      offsetId,\r\n      historyStorage,\r\n      inputFilter,\r\n      recursion       // save before setting\r\n    } = options;\r\n\r\n    options.recursion = true;\r\n\r\n    let {peerId} = options;\r\n\r\n    const wasMaxId = historyStorage.maxId;\r\n    const middleware = this.middleware.get();\r\n    let migration = this.getMigration(peerId);\r\n\r\n    let requestPeerId = peerId;\r\n    if(offsetId && migration?.prev && getServerMessageId(offsetId) === offsetId) {\r\n      requestPeerId = migration.prev;\r\n    }\r\n\r\n    peerId = options.peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\r\n\r\n    const isRequestingLegacy = requestPeerId !== peerId;\r\n\r\n    const historyResult = await this.requestHistory({\r\n      ...options,\r\n      peerId: requestPeerId\r\n    });\r\n\r\n    if(!middleware()) {\r\n      return;\r\n    }\r\n\r\n    const mergedResult = this.mergeHistoryResult({\r\n      ...options,\r\n      slicedArray: historyStorage.history,\r\n      historyResult,\r\n      peerId: requestPeerId\r\n    });\r\n\r\n    const {\r\n      count,\r\n      isBottomEnd,\r\n      isTopEnd,\r\n      slice,\r\n      messages,\r\n      topWasMeantToLoad,\r\n      bottomWasMeantToLoad,\r\n      topLoaded,\r\n      bottomLoaded\r\n    } = mergedResult;\r\n\r\n    if(!isRequestingLegacy) {\r\n      historyStorage.count = count;\r\n    }\r\n\r\n    if(!inputFilter) for(let i = 0, length = messages.length; i < length; ++i) {\r\n      const message = messages[i] as MyMessage;\r\n      if(this.mergeReplyKeyboard(historyStorage, message)) {\r\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\r\n      }\r\n    }\r\n\r\n    if(!inputFilter && isBottomEnd) {\r\n      const newMaxId = slice[0];\r\n\r\n      if(historyStorage.maxId === wasMaxId) {\r\n        const first = historyStorage.history.first;\r\n        if(first !== slice) {\r\n          historyStorage.history.deleteSlice(first);\r\n        }\r\n\r\n        if(historyStorage.maxId !== newMaxId) {\r\n          historyStorage.maxId = slice[0]; // ! WARNING\r\n\r\n          this.reloadConversation(peerId); // when top_message is deleted but cached\r\n        }\r\n      }\r\n    }\r\n\r\n    // * load album missing messages\r\n    const firstMessage = messages[0] as Message.message;\r\n    const lastMessage = messages[messages.length - 1] as Message.message;\r\n\r\n    if(!inputFilter && !isBottomEnd && firstMessage?.grouped_id) {\r\n      await this.getHistory({\r\n        ...options,\r\n        offsetId: firstMessage.mid,\r\n        limit: 20,\r\n        addOffset: -10\r\n      });\r\n\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if(!inputFilter && !isTopEnd && lastMessage?.grouped_id && lastMessage.grouped_id !== firstMessage?.grouped_id) {\r\n      await this.getHistory({\r\n        ...options,\r\n        offsetId: lastMessage.mid,\r\n        limit: 20,\r\n        addOffset: -10\r\n      });\r\n\r\n      if(!middleware()) {\r\n        return;\r\n      }\r\n    }\r\n    // * album end\r\n\r\n    if(options.threadId) {\r\n      if(isTopEnd && !this.appPeersManager.isForum(peerId)) {\r\n        const last = historyStorage.history.last;\r\n        const firstMessage = this.getMessageByPeer(peerId, options.threadId/* last[last.length - 1] */) as Message.message;\r\n        const message = this.getMessageWithReplies(firstMessage);\r\n        const threadServiceMid = this.generateThreadServiceStartMessage(message);\r\n        const mids = this.getMidsByMessage(message);\r\n        const addSlice = [\r\n          threadServiceMid,\r\n          ...mids.sort((a, b) => b - a)\r\n        ];\r\n\r\n        // * shouldn't happen, but just in case\r\n        forEachReverse(addSlice, (mid, idx, arr) => {\r\n          if(last.includes(mid)) {\r\n            arr.splice(idx, 1);\r\n          }\r\n        });\r\n\r\n        const lastLength = last.length;\r\n        if(last.isEnd(SliceEnd.Top) && lastLength) {\r\n          addSlice.unshift(last[lastLength - 1]);\r\n        }\r\n\r\n        historyStorage.history.insertSlice(addSlice);\r\n      }\r\n\r\n      return historyResult;\r\n    }\r\n\r\n    // * support migrated chats\r\n    // * if found migrated chat during the load\r\n    migration ??= this.getMigration(peerId);\r\n\r\n    if(migration?.prev && topWasMeantToLoad !== topLoaded && !isTopEnd) {\r\n      const toLoad = topWasMeantToLoad - topLoaded;\r\n      const migratedResult = await this.fillHistoryStorage({\r\n        ...options,\r\n        peerId: migration.prev,\r\n        offsetId: 0,\r\n        limit: toLoad,\r\n        addOffset: 0\r\n      });\r\n\r\n      historyResult.messages.push(...migratedResult.messages);\r\n\r\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\r\n    }/*  else if(migration?.prev && inputFilter) {\r\n      const migratedResult = await this.requestHistory({\r\n        ...options,\r\n        peerId: migration.prev,\r\n        offsetId: 0,\r\n        limit: 1\r\n      });\r\n\r\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\r\n\r\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\r\n    } */ else if((migration?.next || isRequestingLegacy) && bottomWasMeantToLoad !== bottomLoaded && !isBottomEnd) {\r\n      const toLoad = bottomWasMeantToLoad - bottomLoaded;\r\n      const migratedResult = await this.fillHistoryStorage({\r\n        ...options,\r\n        offsetId: this.appMessagesIdsManager.generateMessageId(1, peerId.toChatId()),\r\n        limit: toLoad,\r\n        addOffset: -toLoad\r\n      });\r\n\r\n      historyResult.messages.unshift(...migratedResult.messages);\r\n\r\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\r\n\r\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\r\n    } else if(migration && inputFilter && !recursion) {\r\n      const migratedResult = await this.requestHistory({\r\n        ...options,\r\n        peerId: isRequestingLegacy ? peerId : migration.prev,\r\n        offsetId: 0,\r\n        limit: 1\r\n      });\r\n\r\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\r\n\r\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\r\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\r\n    }\r\n\r\n    if(!middleware()) {\r\n      return;\r\n    }\r\n    // * migration end\r\n\r\n    return historyResult;\r\n  }\r\n\r\n  public requestHistory({\r\n    peerId,\r\n    offsetId = 0,\r\n    limit = 50,\r\n    addOffset = 0,\r\n    offsetDate = 0,\r\n    threadId = 0,\r\n\r\n    offsetPeerId,\r\n    nextRate,\r\n    folderId,\r\n    query,\r\n    inputFilter,\r\n    minDate,\r\n    maxDate\r\n  }: RequestHistoryOptions) {\r\n    const offsetMessage = offsetId && this.getMessageByPeer(offsetPeerId || peerId, offsetId);\r\n    offsetPeerId ??= offsetMessage?.peerId;\r\n\r\n    offsetId = getServerMessageId(offsetId) || 0;\r\n    threadId = getServerMessageId(threadId) || 0;\r\n\r\n    minDate = minDate ? minDate / 1000 | 0 : 0;\r\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\r\n\r\n    let options: MessagesGetReplies | MessagesGetHistory | MessagesSearch | MessagesSearchGlobal;\r\n    let method: 'messages.getReplies' | 'messages.getHistory' | 'messages.search' | 'messages.searchGlobal';\r\n    const commonOptions = {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      offset_id: offsetId,\r\n      offset_date: offsetDate,\r\n      add_offset: addOffset,\r\n      limit,\r\n      max_id: 0,\r\n      min_id: 0,\r\n      hash: 0\r\n    };\r\n\r\n    if(inputFilter && peerId && !nextRate && folderId === undefined/*  || !query */) {\r\n      const searchOptions: MessagesSearch = {\r\n        ...commonOptions,\r\n        q: query || '',\r\n        filter: inputFilter as any as MessagesFilter,\r\n        min_date: minDate,\r\n        max_date: maxDate,\r\n        top_msg_id: threadId\r\n      };\r\n\r\n      method = 'messages.search';\r\n      options = searchOptions;\r\n    } else if(inputFilter) {\r\n      const searchGlobalOptions: MessagesSearchGlobal = {\r\n        ...commonOptions,\r\n        q: query || '',\r\n        filter: inputFilter as any as MessagesFilter,\r\n        min_date: minDate,\r\n        max_date: maxDate,\r\n        offset_rate: nextRate,\r\n        offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\r\n        folder_id: folderId\r\n      };\r\n\r\n      method = 'messages.searchGlobal';\r\n      options = searchGlobalOptions;\r\n    } else if(threadId) {\r\n      const getRepliesOptions: MessagesGetReplies = {\r\n        ...commonOptions,\r\n        msg_id: threadId\r\n      };\r\n\r\n      method = 'messages.getReplies';\r\n      options = getRepliesOptions;\r\n    } else {\r\n      const getHistoryOptions: MessagesGetHistory = {\r\n        ...commonOptions\r\n      };\r\n\r\n      method = 'messages.getHistory';\r\n      options = getHistoryOptions;\r\n    }\r\n\r\n    const promise = this.apiManager.invokeApiSingle(\r\n      method,\r\n      options,\r\n      {\r\n        // timeout: APITIMEOUT,\r\n        noErrorBox: true\r\n      }\r\n    ) as Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>;\r\n\r\n    return promise.then((historyResult) => {\r\n      if(DEBUG) {\r\n        this.log('requestHistory result:', peerId, historyResult, offsetId, limit, addOffset);\r\n      }\r\n\r\n      const {messages} = historyResult;\r\n\r\n      this.appUsersManager.saveApiUsers(historyResult.users);\r\n      this.appChatsManager.saveApiChats(historyResult.chats);\r\n      this.saveMessages(messages);\r\n\r\n      if('pts' in historyResult) {\r\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), historyResult.pts);\r\n      }\r\n\r\n      let length = messages.length,\r\n        count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\r\n      if(length && !messages[length - 1]) {\r\n        messages.splice(length - 1, 1);\r\n        length--;\r\n        count--;\r\n      }\r\n\r\n      return historyResult;\r\n    }, (error: ApiError) => {\r\n      switch(error.type) {\r\n        case 'CHANNEL_PRIVATE':\r\n          let channel = this.appChatsManager.getChat(peerId.toChatId());\r\n          if(channel._ === 'channel') {\r\n            channel = {\r\n              _: 'channelForbidden',\r\n              id: channel.id,\r\n              access_hash: channel.access_hash,\r\n              title: channel.title,\r\n              pFlags: channel.pFlags\r\n            };\r\n          }\r\n\r\n          this.apiUpdatesManager.processUpdateMessage({\r\n            _: 'updates',\r\n            updates: [{\r\n              _: 'updateChannel',\r\n              channel_id: channel.id\r\n            }],\r\n            chats: [channel],\r\n            users: []\r\n          });\r\n          break;\r\n      }\r\n\r\n      throw error;\r\n    });\r\n  }\r\n\r\n  public fetchSingleMessages() {\r\n    return this.fetchSingleMessagesPromise ??= pause(0).then(() => {\r\n      const requestPromises: Promise<void>[] = [];\r\n\r\n      for(const [peerId, map] of this.needSingleMessages) {\r\n        const mids = [...map.keys()];\r\n        const msgIds: InputMessage[] = mids.map((mid) => {\r\n          return {\r\n            _: 'inputMessageID',\r\n            id: getServerMessageId(mid)\r\n          };\r\n        });\r\n\r\n        let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\r\n        const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\r\n        if(channelId) {\r\n          promise = this.apiManager.invokeApiSingle('channels.getMessages', {\r\n            channel: this.appChatsManager.getChannelInput(channelId),\r\n            id: msgIds\r\n          });\r\n        } else {\r\n          promise = this.apiManager.invokeApiSingle('messages.getMessages', {\r\n            id: msgIds\r\n          });\r\n        }\r\n\r\n        const after = promise.then((getMessagesResult) => {\r\n          assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\r\n\r\n          this.appUsersManager.saveApiUsers(getMessagesResult.users);\r\n          this.appChatsManager.saveApiChats(getMessagesResult.chats);\r\n          const messages = this.saveMessages(getMessagesResult.messages);\r\n\r\n          for(let i = 0; i < messages.length; ++i) {\r\n            const message = messages[i];\r\n            if(!message) {\r\n              continue;\r\n            }\r\n\r\n            const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\r\n            const promise = map.get(mid);\r\n            promise.resolve(message);\r\n            map.delete(mid);\r\n          }\r\n\r\n          if(map.size) {\r\n            for(const [mid, promise] of map) {\r\n              promise.resolve(this.generateEmptyMessage(mid));\r\n            }\r\n          }\r\n        }).finally(() => {\r\n          this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\r\n        });\r\n\r\n        requestPromises.push(after);\r\n      }\r\n\r\n      this.needSingleMessages.clear();\r\n\r\n      return Promise.all(requestPromises).then(noop, noop).then(() => {\r\n        this.fetchSingleMessagesPromise = undefined;\r\n        if(this.needSingleMessages.size) this.fetchSingleMessages();\r\n      });\r\n    });\r\n  }\r\n\r\n  public reloadMessages(peerId: PeerId, mid: number, overwrite?: boolean): Promise<MyMessage>;\r\n  public reloadMessages(peerId: PeerId, mid: number[], overwrite?: boolean): Promise<MyMessage[]>;\r\n  public reloadMessages(peerId: PeerId, mid: number | number[], overwrite?: boolean): Promise<MyMessage | MyMessage[]> {\r\n    if(Array.isArray(mid)) {\r\n      return Promise.all(mid.map((mid) => {\r\n        return this.reloadMessages(peerId, mid, overwrite);\r\n      }));\r\n    }\r\n\r\n    if(peerId.isAnyChat() && isLegacyMessageId(mid)) {\r\n      peerId = GLOBAL_HISTORY_PEER_ID;\r\n    }\r\n\r\n    const message = this.getMessageByPeer(peerId, mid);\r\n    if(message && !overwrite) {\r\n      this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\r\n      return Promise.resolve(message);\r\n    } else {\r\n      let map = this.needSingleMessages.get(peerId);\r\n      if(!map) {\r\n        this.needSingleMessages.set(peerId, map = new Map());\r\n      }\r\n\r\n      let promise = map.get(mid);\r\n      if(promise) {\r\n        return promise;\r\n      }\r\n\r\n      promise = deferredPromise();\r\n      map.set(mid, promise);\r\n      this.fetchSingleMessages();\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  public getExtendedMedia(peerId: PeerId, mids: number[]) {\r\n    let map = this.extendedMedia.get(peerId);\r\n    if(!map) {\r\n      this.extendedMedia.set(peerId, map = new Map());\r\n    }\r\n\r\n    const deferred = deferredPromise<void>();\r\n    const toRequest: number[] = [];\r\n    const promises = mids.map((mid) => {\r\n      let promise = map.get(mid);\r\n      if(!promise) {\r\n        map.set(mid, promise = deferred);\r\n        toRequest.push(mid);\r\n\r\n        promise.then(() => {\r\n          map.delete(mid);\r\n          if(!map.size && this.extendedMedia.get(peerId) === map) {\r\n            this.extendedMedia.delete(peerId);\r\n          }\r\n        });\r\n      }\r\n\r\n      return promise;\r\n    });\r\n\r\n    if(!toRequest.length) {\r\n      deferred.resolve();\r\n    } else {\r\n      this.apiManager.invokeApi('messages.getExtendedMedia', {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: toRequest.map((mid) => getServerMessageId(mid))\r\n      }).then((updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n        deferred.resolve();\r\n      });\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  private clearMessageReplyTo(message: MyMessage) {\r\n    message = this.getMessageByPeer(message.peerId, message.mid); // message can come from other thread\r\n    delete message.reply_to_mid; // ! WARNING!\r\n    delete message.reply_to; // ! WARNING!\r\n    this.onMessageModification(message, this.getHistoryMessagesStorage(message.peerId)); // * mirror it\r\n  }\r\n\r\n  public fetchMessageReplyTo(message: MyMessage) {\r\n    if(!message.reply_to) return Promise.resolve(this.generateEmptyMessage(0));\r\n    const replyTo = message.reply_to;\r\n    if(replyTo._ === 'messageReplyStoryHeader') {\r\n      const result = this.appStoriesManager.getStoryById(replyTo.user_id.toPeerId(false), replyTo.story_id);\r\n      return callbackify(result, (story) => {\r\n        // if(!story) {\r\n        //   this.clearMessageReplyTo(message);\r\n        // }\r\n\r\n        return story;\r\n      });\r\n    }\r\n\r\n    const replyToPeerId = replyTo.reply_to_peer_id ? this.appPeersManager.getPeerId(replyTo.reply_to_peer_id) : message.peerId;\r\n    return this.reloadMessages(replyToPeerId, message.reply_to_mid).then((originalMessage) => {\r\n      if(!originalMessage) { // ! break the infinite loop\r\n        this.clearMessageReplyTo(message);\r\n      }\r\n\r\n      if(message._ === 'messageService') {\r\n        const peerId = message.peerId;\r\n        this.rootScope.dispatchEvent('message_edit', {\r\n          storageKey: `${peerId}_history`,\r\n          peerId: peerId,\r\n          mid: message.mid,\r\n          message\r\n        });\r\n\r\n        if(this.isMessageIsTopMessage(message)) {\r\n          this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, {dialog: this.getDialogOnly(peerId)}]]));\r\n        }\r\n      }\r\n\r\n      return originalMessage;\r\n    });\r\n  }\r\n\r\n  private getTypingKey(peerId: PeerId, threadId?: number) {\r\n    return threadId ? `${peerId}_${threadId}` : peerId;\r\n  }\r\n\r\n  public setTyping(\r\n    peerId: PeerId,\r\n    action: SendMessageAction,\r\n    force?: boolean,\r\n    threadId?: number\r\n  ): Promise<boolean> {\r\n    if(threadId && !this.appPeersManager.isForum(peerId)) {\r\n      threadId = undefined;\r\n    }\r\n\r\n    const key = this.getTypingKey(peerId, threadId);\r\n    let typing = this.typings[key];\r\n    if(\r\n      !peerId ||\r\n      !this.canSendToPeer(peerId) ||\r\n      peerId === this.appPeersManager.peerId ||\r\n      // (!force && deepEqual(typing?.action, action))\r\n      (!force && typing?.action?._ === action._)\r\n    ) {\r\n      return Promise.resolve(false);\r\n    }\r\n\r\n    if(typing?.timeout) {\r\n      clearTimeout(typing.timeout);\r\n    }\r\n\r\n    typing = this.typings[key] = {\r\n      action\r\n    };\r\n\r\n    return this.apiManager.invokeApi('messages.setTyping', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      action,\r\n      top_msg_id: threadId ? getServerMessageId(threadId) : undefined\r\n    }).finally(() => {\r\n      if(typing === this.typings[key]) {\r\n        typing.timeout = ctx.setTimeout(() => {\r\n          delete this.typings[key];\r\n        }, 6000);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\r\n    const media = (message as Message.message).media;\r\n    if(media) {\r\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\r\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\r\n\r\n      if(smth?.file_reference) {\r\n        this.referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\r\n      }\r\n\r\n      if('webpage' in media && media.webpage) {\r\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\r\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\r\n        this.appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\r\n      }\r\n\r\n      if((media as MessageMedia.messageMediaPoll).poll) {\r\n        this.appPollsManager.updatePollToMessage(message as Message.message, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\r\n    const history: {\r\n      count: number,\r\n      unread: number,\r\n      unreadMentions: number,\r\n      msgs: Set<number>,\r\n      albums?: {[groupId: string]: Set<number>},\r\n    } = {\r\n      count: 0,\r\n      unread: 0,\r\n      unreadMentions: 0,\r\n      msgs: new Set()\r\n    };\r\n\r\n    for(const mid of messages) {\r\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\r\n      if(!message) {\r\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\r\n        continue;\r\n      }\r\n\r\n      this.handleReleasingMessage(message, storage);\r\n\r\n      this.updateMessageRepliesIfNeeded(message);\r\n\r\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\r\n        ++history.unread;\r\n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\r\n\r\n        if(message.pFlags.mentioned) {\r\n          ++history.unreadMentions;\r\n          this.modifyCachedMentions(peerId, mid, false);\r\n        }\r\n      }\r\n\r\n      ++history.count;\r\n      history.msgs.add(mid);\r\n\r\n      const groupedId = (message as Message.message).grouped_id;\r\n      if(groupedId) {\r\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\r\n        if(groupedStorage) {\r\n          this.deleteMessageFromStorage(groupedStorage, mid);\r\n\r\n          if(!history.albums) history.albums = {};\r\n          (history.albums[groupedId] || (history.albums[groupedId] = new Set())).add(mid);\r\n\r\n          if(!groupedStorage.size) {\r\n            delete history.albums;\r\n            delete this.groupedMessagesStorage[groupedId];\r\n          }\r\n        }\r\n      }\r\n\r\n      this.deleteMessageFromStorage(storage, mid);\r\n    }\r\n\r\n    if(history.albums) {\r\n      for(const groupedId in history.albums) {\r\n        this.dispatchAlbumEdit(groupedId, storage, [...history.albums[groupedId]]);\r\n        /* const mids = this.getMidsByAlbum(groupId);\r\n        if(mids.length) {\r\n          const mid = Math.max(...mids);\r\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\r\n        } */\r\n      }\r\n    }\r\n\r\n    return history;\r\n  }\r\n\r\n  private handleEditedMessage(oldMessage: Message, newMessage: Message, storage: MessagesStorage) {\r\n    if(oldMessage._ === 'message') {\r\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\r\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\r\n        this.appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\r\n      }\r\n\r\n      const groupedId = oldMessage.grouped_id;\r\n      if(groupedId) {\r\n        this.dispatchAlbumEdit(groupedId, storage, []);\r\n      }\r\n    }\r\n  }\r\n\r\n  private dispatchAlbumEdit(groupedId: string, storage: MessagesStorage, deletedMids?: number[]) {\r\n    const mids = this.getMidsByAlbum(groupedId);\r\n    const messages = mids.map((mid) => this.getMessageFromStorage(storage, mid)) as Message.message[];\r\n    this.rootScope.dispatchEvent('album_edit', {peerId: messages[0].peerId, groupId: groupedId, deletedMids: deletedMids || [], messages});\r\n  }\r\n\r\n  public getDialogUnreadCount(dialog: Dialog | ForumTopic) {\r\n    let unreadCount = dialog.unread_count;\r\n    if(!this.dialogsStorage.isTopic(dialog) && this.appPeersManager.isForum(dialog.peerId)) {\r\n      const forumUnreadCount = this.dialogsStorage.getForumUnreadCount(dialog.peerId);\r\n      if(forumUnreadCount instanceof Promise) {\r\n        unreadCount = 0;\r\n      } else {\r\n        unreadCount = forumUnreadCount.count;\r\n      }\r\n    }\r\n\r\n    return unreadCount || +!!(dialog as Dialog).pFlags?.unread_mark;\r\n  }\r\n\r\n  public isDialogUnread(dialog: Dialog | ForumTopic) {\r\n    return !!this.getDialogUnreadCount(dialog);\r\n  }\r\n\r\n  public canForward(message: Message.message | Message.messageService) {\r\n    return message?._ === 'message' && !(message as Message.message).pFlags.noforwards && !this.appPeersManager.noForwards(message.peerId);\r\n  }\r\n\r\n  private pushBatchUpdate<E extends keyof BatchUpdates, C extends BatchUpdates[E]>(\r\n    event: E,\r\n    callback: C,\r\n    key: string,\r\n    getElementCallback?: () => MapValueType<ArgumentTypes<C>[0]>\r\n  ) {\r\n    let details = this.batchUpdates[event];\r\n    if(!details) {\r\n      // @ts-ignore\r\n      details = this.batchUpdates[event] = {\r\n        callback,\r\n        batch: new Map()\r\n      };\r\n    }\r\n\r\n    if(!details.batch.has(key)) {\r\n      // @ts-ignore\r\n      details.batch.set(key, getElementCallback ? getElementCallback() : undefined);\r\n      this.batchUpdatesDebounced();\r\n    }\r\n  }\r\n\r\n  private getMessagesFromMap<T extends Map<any, any>>(map: T) {\r\n    const newMap: Map<Message.message, MapValueType<T>> = new Map();\r\n    for(const [key, value] of map) {\r\n      const [peerIdStr, mid] = key.split('_');\r\n      const message = this.getMessageByPeer(peerIdStr.toPeerId(), +mid) as Message.message;\r\n      if(!message) {\r\n        continue;\r\n      }\r\n\r\n      newMap.set(message, value);\r\n    }\r\n\r\n    return newMap;\r\n  }\r\n\r\n  private batchUpdateViews = (batch: Map<string, undefined>) => {\r\n    const toDispatch: {peerId: PeerId, mid: number, views: number}[] = [];\r\n\r\n    const map = this.getMessagesFromMap(batch);\r\n    for(const [message] of map) {\r\n      toDispatch.push({\r\n        peerId: message.peerId,\r\n        mid: message.mid,\r\n        views: message.views\r\n      })\r\n    }\r\n\r\n    return toDispatch;\r\n  };\r\n\r\n  private batchUpdateReactions = (batch: Map<string, MessageReactions>) => {\r\n    const toDispatch: {message: Message.message, changedResults: ReactionCount.reactionCount[]}[] = [];\r\n\r\n    const map = this.getMessagesFromMap(batch);\r\n    for(const [message, previousReactions] of map) {\r\n      const results = message.reactions?.results ?? [];\r\n      const previousResults = previousReactions?.results ?? [];\r\n      const changedResults = results.filter((reactionCount) => {\r\n        const previousReactionCount = previousResults.find((_reactionCount) => reactionsEqual(_reactionCount.reaction, reactionCount.reaction));\r\n        return (\r\n          message.pFlags.out && (\r\n            !previousReactionCount ||\r\n            reactionCount.count > previousReactionCount.count\r\n          )\r\n        ) || (\r\n          reactionCount.chosen_order !== undefined && (\r\n            !previousReactionCount ||\r\n            previousReactionCount.chosen_order === undefined\r\n          )\r\n        );\r\n      });\r\n\r\n      toDispatch.push({message, changedResults});\r\n    }\r\n\r\n    return toDispatch;\r\n  };\r\n\r\n  public saveDefaultSendAs(peerId: PeerId, sendAsPeerId: PeerId) {\r\n    const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\r\n    channelFull.default_send_as = this.appPeersManager.getOutputPeer(sendAsPeerId);\r\n    return this.apiManager.invokeApi('messages.saveDefaultSendAs', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      send_as: this.appPeersManager.getInputPeerById(sendAsPeerId)\r\n    });\r\n  }\r\n\r\n  public sendBotRequestedPeer(peerId: PeerId, mid: number, buttonId: number, requestedPeerIds: PeerId[]) {\r\n    return this.apiManager.invokeApi('messages.sendBotRequestedPeer', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid),\r\n      button_id: buttonId,\r\n      requested_peers: requestedPeerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public reportSpam(peerId: PeerId) {\r\n    return this.apiManager.invokeApi('messages.reportSpam', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId)\r\n    });\r\n  }\r\n}\r\n","export default function convertInputKeyToKey<T extends string>(inputKey: string) {\r\n  const str = inputKey.replace('input', '');\r\n  return (str[0].toLowerCase() + str.slice(1)) as T;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {InputNotifyPeer, InputPeer, InputPeerNotifySettings, NotifyPeer, Peer, PeerNotifySettings, Update} from '../../layer';\r\nimport {MUTE_UNTIL} from '../mtproto/mtproto_config';\r\nimport throttle from '../../helpers/schedulers/throttle';\r\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\r\nimport {AppManager} from './manager';\r\nimport ctx from '../../environment/ctx';\r\nimport assumeType from '../../helpers/assumeType';\r\n\r\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\r\ntype MyNotifyPeer = Exclude<NotifyPeer['_'], 'notifyPeer' | 'notifyForumTopic'>;\r\ntype MyInputNotifyPeer = Exclude<InputNotifyPeer['_'], 'inputNotifyPeer' | 'inputNotifyForumTopic'>;\r\nexport class AppNotificationsManager extends AppManager {\r\n  private peerSettings = {\r\n    notifyPeer: {} as {[peerId: string]: ImSadAboutIt},\r\n    notifyUsers: null as ImSadAboutIt,\r\n    notifyChats: null as ImSadAboutIt,\r\n    notifyBroadcasts: null as ImSadAboutIt,\r\n    notifyForumTopic: {} as {[peerId_threadId: string]: ImSadAboutIt}\r\n  };\r\n  // private exceptions: {[peerId: string]: PeerNotifySettings} = {};\r\n\r\n  private getNotifyPeerTypePromise: Promise<any>;\r\n\r\n  private checkMuteUntilTimeout: number;\r\n  private checkMuteUntilThrottled: () => void;\r\n\r\n  private notifyContactsSignUp: Promise<boolean>;\r\n\r\n  protected after() {\r\n    this.checkMuteUntilThrottled = throttle(this.checkMuteUntil, 1000, false);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateNotifySettings: this.onUpdateNotifySettings\r\n    });\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      if(state.notifySettings) {\r\n        for(const key in state.notifySettings) {\r\n          assumeType<MyNotifyPeer>(key);\r\n          this.savePeerSettings({\r\n            key,\r\n            settings: state.notifySettings[key]\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\r\n    let key: any = convertInputKeyToKey(peer._);\r\n    let obj: any = this.peerSettings[key as MyNotifyPeer];\r\n\r\n    let peerId: PeerId;\r\n    if(peer._ === 'inputNotifyPeer') {\r\n      peerId = key = this.appPeersManager.getPeerId(peer.peer);\r\n      obj = obj[key];\r\n    }\r\n\r\n    if(obj) {\r\n      return obj;\r\n    }\r\n\r\n    return (obj || this.peerSettings)[key] = this.apiManager.invokeApi('account.getNotifySettings', {peer})\r\n    .then((settings) => {\r\n      this.savePeerSettings({\r\n        key,\r\n        peerId,\r\n        settings\r\n      });\r\n\r\n      return settings;\r\n    });\r\n  }\r\n\r\n  public getNotifyPeerTypeSettings() {\r\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\r\n\r\n    const promises = ([\r\n      'inputNotifyBroadcasts',\r\n      'inputNotifyUsers',\r\n      'inputNotifyChats'\r\n    ] as MyInputNotifyPeer[])\r\n    .map((inputKey) => {\r\n      return this.getNotifySettings({_: inputKey});\r\n    });\r\n\r\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\r\n  }\r\n\r\n  public generateLocalNotifySettingsUpdate(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\r\n    this.apiUpdatesManager.processLocalUpdate({\r\n      _: 'updateNotifySettings',\r\n      peer: {\r\n        ...peer as any,\r\n        _: convertInputKeyToKey(peer._)\r\n      },\r\n      notify_settings: {\r\n        ...settings,\r\n        _: 'peerNotifySettings'\r\n      }\r\n    });\r\n  }\r\n\r\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\r\n    // this.savePeerSettings(peerId, settings);\r\n\r\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\r\n    inputSettings._ = 'inputPeerNotifySettings'; */\r\n\r\n    return this.apiManager.invokeApi('account.updateNotifySettings', {\r\n      peer,\r\n      settings\r\n    }).then(() => {\r\n      this.generateLocalNotifySettingsUpdate(peer, settings);\r\n    });\r\n  }\r\n\r\n  // public getNotifyExceptions() {\r\n  //   apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\r\n  //   .then((updates) => {\r\n  //     apiUpdatesManager.processUpdateMessage(updates);\r\n  //   });\r\n  // }\r\n\r\n  public getContactSignUpNotification() {\r\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\r\n    return this.notifyContactsSignUp = this.apiManager.invokeApi('account.getContactSignUpNotification');\r\n  }\r\n\r\n  public setContactSignUpNotification(silent: boolean) {\r\n    this.apiManager.invokeApi('account.setContactSignUpNotification', {silent})\r\n    .then((value) => {\r\n      this.notifyContactsSignUp = Promise.resolve(!silent);\r\n    });\r\n  }\r\n\r\n  private checkMuteUntil = () => {\r\n    if(this.checkMuteUntilTimeout !== undefined) {\r\n      clearTimeout(this.checkMuteUntilTimeout);\r\n      this.checkMuteUntilTimeout = undefined;\r\n    }\r\n\r\n    const timestamp = tsNow(true);\r\n    let closestMuteUntil = MUTE_UNTIL;\r\n\r\n    const p = (peerNotifySettings: ImSadAboutIt): peerNotifySettings is PeerNotifySettings => {\r\n      if(peerNotifySettings instanceof Promise) {\r\n        return false;\r\n      }\r\n\r\n      const muteUntil = peerNotifySettings.mute_until;\r\n      if(!muteUntil) {\r\n        return false;\r\n      }\r\n\r\n      if(muteUntil <= timestamp) {\r\n        // ! do not delete it because peer's unique settings will be overwritten in getPeerLocalSettings with type's settings\r\n        peerNotifySettings.mute_until = 0;\r\n        return true;\r\n      } else if(muteUntil < closestMuteUntil) {\r\n        closestMuteUntil = muteUntil;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    [\r\n      'notifyPeer' as const,\r\n      'notifyForumTopic' as const\r\n    ].forEach((typeKey) => {\r\n      for(const key in this.peerSettings[typeKey]) {\r\n        const peerNotifySettings = this.peerSettings[typeKey][key];\r\n        if(p(peerNotifySettings)) {\r\n          const [peerId, topicId] = key.split('_');\r\n          const peer = this.appPeersManager.getOutputPeer(peerId.toPeerId());\r\n          this.apiUpdatesManager.saveUpdate({\r\n            _: 'updateNotifySettings',\r\n            peer: topicId ? {\r\n              _: 'notifyForumTopic',\r\n              peer,\r\n              top_msg_id: +topicId\r\n            } : {\r\n              _: 'notifyPeer',\r\n              peer\r\n            },\r\n            notify_settings: peerNotifySettings\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    const timeout = Math.min(1800e3, (closestMuteUntil - timestamp) * 1000);\r\n    this.checkMuteUntilTimeout = ctx.setTimeout(this.checkMuteUntil, timeout);\r\n  };\r\n\r\n  public getPeerKey(peerId: PeerId, threadId?: number) {\r\n    return peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public savePeerSettings({key, peerId, threadId, settings}: {\r\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\r\n    peerId?: PeerId,\r\n    threadId?: number,\r\n    settings: PeerNotifySettings\r\n  }) {\r\n    let obj: any;\r\n    if(peerId) {\r\n      key = this.getPeerKey(peerId, threadId) as any;\r\n      obj = this.peerSettings[threadId ? 'notifyForumTopic' : 'notifyPeer'];\r\n    }\r\n\r\n    (obj || this.peerSettings)[key] = settings;\r\n\r\n    if(!peerId) {\r\n      this.rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\r\n      this.appStateManager.getState().then((state) => {\r\n        const notifySettings = state.notifySettings;\r\n        notifySettings[key] = settings;\r\n        this.appStateManager.pushToState('notifySettings', notifySettings);\r\n      });\r\n    } else {\r\n      this.checkMuteUntilThrottled();\r\n    }\r\n\r\n    // rootScope.broadcast('notify_settings', {peerId: peerId});\r\n  }\r\n\r\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\r\n    return peerNotifySettings._ === 'peerNotifySettings' &&\r\n      (peerNotifySettings.silent || (peerNotifySettings.mute_until !== undefined && (peerNotifySettings.mute_until * 1000) > tsNow()));\r\n  }\r\n\r\n  private getPeerMuted(peerId: PeerId) {\r\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: this.appPeersManager.getInputPeerById(peerId)});\r\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\r\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\r\n  }\r\n\r\n  private getPeerLocalSettings({\r\n    peerId,\r\n    respectType = true,\r\n    threadId\r\n  }: {\r\n    peerId: PeerId,\r\n    respectType?: boolean,\r\n    threadId?: number\r\n  }): PeerNotifySettings {\r\n    const n: PeerNotifySettings = {\r\n      _: 'peerNotifySettings'\r\n    };\r\n\r\n    const peerKey = this.getPeerKey(peerId, threadId);\r\n    const notifySettings = this.peerSettings[threadId ? 'notifyForumTopic' : 'notifyPeer'][peerKey];\r\n    // if(!notifySettings || (notifySettings instanceof Promise)) return false;\r\n    if(notifySettings && !(notifySettings instanceof Promise)) {\r\n      Object.assign(n, notifySettings);\r\n    }\r\n\r\n    if(respectType) {\r\n      const inputNotify = this.appPeersManager.getInputNotifyPeerById({peerId, ignorePeerId: true, threadId});\r\n      const key = convertInputKeyToKey(inputNotify._);\r\n      const typeNotifySettings = this.peerSettings[key as MyNotifyPeer];\r\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\r\n        for(const i in typeNotifySettings) {\r\n          // @ts-ignore\r\n          if(n[i] === undefined) {\r\n            // @ts-ignore\r\n            n[i] = typeNotifySettings[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  public validatePeerSettings<T extends Parameters<AppNotificationsManager['getPeerLocalSettings']>[0]>(options: T): T {\r\n    if(options.peerId === this.appPeersManager.peerId) return;\r\n    if(options.threadId && !this.appPeersManager.isForum(options.peerId)) options.threadId = undefined;\r\n    return options;\r\n  }\r\n\r\n  public isPeerLocalMuted(options: Parameters<AppNotificationsManager['getPeerLocalSettings']>[0]): boolean {\r\n    if(!(options = this.validatePeerSettings(options))) return false;\r\n\r\n    if(options.threadId) {\r\n      const notifySettings = this.getPeerLocalSettings({...options, respectType: false});\r\n      if(notifySettings.silent !== undefined || notifySettings.mute_until !== undefined) {\r\n        return this.isMuted(notifySettings);\r\n      } else {\r\n        return this.isPeerLocalMuted({...options, threadId: undefined});\r\n      }\r\n    }\r\n\r\n    const notifySettings = this.getPeerLocalSettings(options);\r\n    const isMuted = this.isMuted(notifySettings);\r\n    return isMuted;\r\n  }\r\n\r\n  public isPeerStoriesMuted(peerId: PeerId) {\r\n    const notifySettings = this.getPeerLocalSettings({peerId});\r\n    return !!notifySettings?.stories_muted;\r\n  }\r\n\r\n  public toggleStoriesMute(peerId: PeerId, mute: boolean, local?: boolean) {\r\n    const notifySettings = this.getPeerLocalSettings({peerId});\r\n    const inputNotifyPeer: InputNotifyPeer = {\r\n      _: 'inputNotifyPeer',\r\n      peer: this.appPeersManager.getInputPeerById(peerId)\r\n    };\r\n\r\n    const inputPeerNotifySettings: InputPeerNotifySettings = {\r\n      ...notifySettings,\r\n      _: 'inputPeerNotifySettings'\r\n    };\r\n\r\n    if(mute) inputPeerNotifySettings.stories_muted = true;\r\n    else delete inputPeerNotifySettings.stories_muted;\r\n\r\n    if(!local) this.updateNotifySettings(inputNotifyPeer, inputPeerNotifySettings);\r\n    else this.generateLocalNotifySettingsUpdate(inputNotifyPeer, inputPeerNotifySettings);\r\n  }\r\n\r\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\r\n    const {peer} = update;\r\n    const isTopic = peer._ === 'notifyForumTopic';\r\n    const isPeerType = peer._ === 'notifyPeer' || isTopic;\r\n    const peerId = isPeerType && this.appPeersManager.getPeerId(peer.peer);\r\n    const key = !isPeerType ? peer._ : undefined;\r\n    const threadId = isTopic ? this.appMessagesIdsManager.generateMessageId(peer.top_msg_id, (peer.peer as Peer.peerChannel).channel_id) : undefined;\r\n    this.savePeerSettings({\r\n      key,\r\n      peerId,\r\n      threadId,\r\n      settings: update.notify_settings\r\n    });\r\n    this.rootScope.dispatchEvent('notify_settings', update);\r\n  };\r\n}\r\n","import {RestrictionReason} from '../layer';\r\n\r\nconst platforms = new Set([\r\n  'all',\r\n  'web',\r\n  'webk'\r\n]);\r\n\r\nconst ignore = new Set();\r\n\r\nexport function getRestrictionReason(reasons: RestrictionReason[]) {\r\n  // return reasons[0];\r\n  return reasons.find((reason) => platforms.has(reason.platform) && !ignore.has(reason.reason));\r\n}\r\n\r\nexport function isRestricted(reasons: RestrictionReason[]) {\r\n  return !!getRestrictionReason(reasons);\r\n}\r\n\r\nexport function ignoreRestrictionReasons(reasons: string[]) {\r\n  ignore.clear();\r\n  reasons.forEach((reason) => {\r\n    ignore.add(reason);\r\n  });\r\n}\r\n","import {isRestricted} from '../../../../helpers/restrictions';\r\nimport {Chat, User} from '../../../../layer';\r\n\r\nexport default function isPeerRestricted(peer: Chat | User) {\r\n  const restrictionReasons = (peer as Chat.channel)?.restriction_reason;\r\n  return !!(restrictionReasons && (peer as Chat.channel).pFlags.restricted && isRestricted(restrictionReasons));\r\n}\r\n","import {Chat, ChatPhoto, User, UserProfilePhoto} from '../../../../layer';\r\nimport isPeerRestricted from './isPeerRestricted';\r\n\r\nexport default function getPeerPhoto(peer: User | Chat) {\r\n  if(!peer || isPeerRestricted(peer)) {\r\n    return;\r\n  }\r\n\r\n  return (peer as User.user | Chat.channel)?.photo as UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto} from '../../layer';\r\nimport type {LangPackKey} from '../langPack';\r\nimport {getRestrictionReason} from '../../helpers/restrictions';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\nimport isUser from './utils/peers/isUser';\r\nimport isAnyChat from './utils/peers/isAnyChat';\r\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\r\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\r\nimport isPeerRestricted from './utils/peers/isPeerRestricted';\r\nimport getPeerPhoto from './utils/peers/getPeerPhoto';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\n\r\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\r\nexport class AppPeersManager extends AppManager {\r\n  public get peerId() {\r\n    return this.appUsersManager.userId.toPeerId();\r\n  }\r\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\r\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\r\n    else appUsersManager.saveApiUser(instance);\r\n  } */\r\n\r\n  public saveApiPeers(object: {chats?: Chat[], users?: User[]}) {\r\n    this.appChatsManager.saveApiChats(object.chats);\r\n    this.appUsersManager.saveApiUsers(object.users);\r\n  }\r\n\r\n  public canPinMessage(peerId: PeerId) {\r\n    return peerId.isUser() || this.appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\r\n  }\r\n\r\n  public getPeerPhoto(peerId: PeerId) {\r\n    const peer = this.getPeer(peerId) as User.user | Chat.channel;\r\n    return getPeerPhoto(peer);\r\n  }\r\n\r\n  public getPeerMigratedTo(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return;\r\n    }\r\n\r\n    const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\r\n    const migratedTo = chat?.migrated_to;\r\n    if(migratedTo && chat.pFlags.deactivated) {\r\n      return getPeerId(migratedTo);\r\n    }\r\n  }\r\n\r\n  public getOutputPeer(peerId: PeerId): Peer {\r\n    if(peerId.isUser()) {\r\n      return {_: 'peerUser', user_id: peerId.toUserId()};\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    if(this.appChatsManager.isChannel(chatId)) {\r\n      return {_: 'peerChannel', channel_id: chatId};\r\n    }\r\n\r\n    return {_: 'peerChat', chat_id: chatId};\r\n  }\r\n\r\n  public getPeerString(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return this.appUsersManager.getUserString(peerId.toUserId());\r\n    }\r\n    return this.appChatsManager.getChatString(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerUsername(peerId: PeerId) {\r\n    return this.getPeerActiveUsernames(peerId)[0] || '';\r\n  }\r\n\r\n  public getPeerActiveUsernames(peerId: PeerId) {\r\n    const peer = this.getPeer(peerId);\r\n    return getPeerActiveUsernames(peer);\r\n  }\r\n\r\n  public getPeer(peerId: PeerId) {\r\n    return peerId.isUser() ?\r\n      this.appUsersManager.getUser(peerId.toUserId()) :\r\n      this.appChatsManager.getChat(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerId(peerId: Parameters<typeof getPeerId>[0]) {\r\n    return getPeerId(peerId) || (isObject<InputPeer>(peerId) && peerId._ === 'inputPeerSelf' && this.peerId) || NULL_PEER_ID;\r\n  }\r\n\r\n  public getDialogPeer(peerId: PeerId): DialogPeer {\r\n    return {\r\n      _: 'dialogPeer',\r\n      peer: this.getOutputPeer(peerId)\r\n    };\r\n  }\r\n\r\n  public isChannel(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && this.appChatsManager.isChannel(peerId.toChatId());\r\n  }\r\n\r\n  public isMegagroup(peerId: PeerId) {\r\n    return !peerId.isUser() && this.appChatsManager.isMegagroup(peerId.toChatId());\r\n  }\r\n\r\n  public isForum(peerId: PeerId) {\r\n    return !peerId.isUser() && this.appChatsManager.isForum(peerId.toChatId());\r\n  }\r\n\r\n  public isAnyGroup(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && !this.appChatsManager.isBroadcast(peerId.toChatId());\r\n  }\r\n\r\n  public isBroadcast(peerId: PeerId): boolean {\r\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\r\n  }\r\n\r\n  public isBot(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isBot(peerId.toUserId());\r\n  }\r\n\r\n  public isContact(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isContact(peerId.toUserId());\r\n  }\r\n\r\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\r\n    return isUser(peerId);\r\n  }\r\n\r\n  public isRegularUser(peerId: PeerId) {\r\n    return this.isUser(peerId) && this.appUsersManager.isRegularUser(peerId);\r\n  }\r\n\r\n  public isAnyChat(peerId: PeerId) {\r\n    return isAnyChat(peerId);\r\n  }\r\n\r\n  public isPeerRestricted(peerId: PeerId) {\r\n    return isPeerRestricted(this.getPeer(peerId));\r\n  }\r\n\r\n  public isPeerPublic(peerId: PeerId) {\r\n    return !!getPeerActiveUsernames(this.getPeer(peerId))[0];\r\n  }\r\n\r\n  public getRestrictionReasonText(peerId: PeerId) {\r\n    const peer = this.getPeer(peerId) as Chat.channel | User.user;\r\n    const reason = peer.restriction_reason ? getRestrictionReason(peer.restriction_reason) : undefined;\r\n    if(reason) {\r\n      return reason.text;\r\n    } else {\r\n      return peerId.isUser() ? 'This user is restricted' : 'This chat is restricted';\r\n    }\r\n  }\r\n\r\n  /* public getInputPeer(peerString: string): InputPeer {\r\n    var firstChar = peerString.charAt(0);\r\n    var peerParams = peerString.substr(1).split('_');\r\n    let id = +peerParams[0];\r\n\r\n    if(firstChar === 'u') {\r\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\r\n\r\n      return {\r\n        _: 'inputPeerUser',\r\n        user_id: id,\r\n        access_hash: peerParams[1]\r\n      };\r\n    } else if(firstChar === 'c' || firstChar === 's') {\r\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\r\n      if(firstChar === 's') {\r\n        appChatsManager.saveIsMegagroup(id);\r\n      }\r\n\r\n      return {\r\n        _: 'inputPeerChannel',\r\n        channel_id: id,\r\n        access_hash: peerParams[1] || '0'\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputPeerChat',\r\n        chat_id: id\r\n      };\r\n    }\r\n  } */\r\n\r\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\r\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\r\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\r\n  public getInputNotifyPeerById<T extends {\r\n    peerId: PeerId,\r\n    ignorePeerId?: boolean,\r\n    threadId?: number\r\n  }>({\r\n    peerId,\r\n    ignorePeerId,\r\n    threadId\r\n  }: T): T['ignorePeerId'] extends true ? Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer | InputNotifyPeer.inputNotifyForumTopic> : (T['threadId'] extends number ? InputNotifyPeer.inputNotifyForumTopic : InputNotifyPeer.inputNotifyPeer) {\r\n    if(ignorePeerId) {\r\n      if(peerId.isUser()) {\r\n        return {_: 'inputNotifyUsers'} as any;\r\n      } else {\r\n        if(this.isBroadcast(peerId)) {\r\n          return {_: 'inputNotifyBroadcasts'} as any;\r\n        } else {\r\n          return {_: 'inputNotifyChats'} as any;\r\n        }\r\n      }\r\n    } else if(threadId) {\r\n      return {\r\n        _: 'inputNotifyForumTopic',\r\n        peer: this.getInputPeerById(peerId),\r\n        top_msg_id: getServerMessageId(threadId)\r\n      } as any;\r\n    } else {\r\n      return {\r\n        _: 'inputNotifyPeer',\r\n        peer: this.getInputPeerById(peerId)\r\n      } as any;\r\n    }\r\n  }\r\n\r\n  public getInputPeerById(peerId: PeerId): InputPeer {\r\n    if(!peerId) {\r\n      return {_: 'inputPeerEmpty'};\r\n    }\r\n\r\n    if(!peerId.isUser()) {\r\n      const chatId = peerId.toChatId();\r\n      return this.appChatsManager.getInputPeer(chatId);\r\n    }\r\n\r\n    const userId = peerId.toUserId();\r\n    return this.appUsersManager.getUserInputPeer(userId);\r\n  }\r\n\r\n  /**\r\n   * ! use it only in safe places like requests\r\n   */\r\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\r\n    return {_: 'inputPeerSelf'};\r\n  }\r\n\r\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\r\n    return {\r\n      _: 'inputDialogPeer',\r\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\r\n    };\r\n  }\r\n\r\n  public getPeerSearchText(peerId: PeerId) {\r\n    let text: string;\r\n    if(this.isUser(peerId)) {\r\n      text = '%pu ' + this.appUsersManager.getUserSearchText(peerId.toUserId());\r\n    } else {\r\n      text = '%pg ' + this.appChatsManager.getChatSearchText(peerId.toChatId());\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  public getDialogType(peerId: PeerId): PeerType {\r\n    if(this.isMegagroup(peerId)) {\r\n      return 'megagroup';\r\n    } else if(this.isChannel(peerId)) {\r\n      return 'channel';\r\n    } else if(!this.isUser(peerId)) {\r\n      return 'group';\r\n    } else {\r\n      return peerId === this.peerId ? 'saved' : 'chat';\r\n    }\r\n  }\r\n\r\n  public getDeleteButtonText(peerId: PeerId): Extract<LangPackKey, 'ChannelDelete' | 'ChatList.Context.LeaveChannel' | 'DeleteMega' | 'ChatList.Context.LeaveGroup' | 'ChatList.Context.DeleteChat'> {\r\n    switch(this.getDialogType(peerId)) {\r\n      case 'channel':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\r\n\r\n      case 'megagroup':\r\n      case 'group':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\r\n\r\n      default:\r\n        return 'ChatList.Context.DeleteChat';\r\n    }\r\n  }\r\n\r\n  public noForwards(peerId: PeerId) {\r\n    if(peerId.isUser()) return false;\r\n    else {\r\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\r\n      return !!(chat as Chat.chat).pFlags?.noforwards;\r\n    }\r\n  }\r\n\r\n  public mirrorAllPeers(port?: MessageEventSource) {\r\n    const peers: any = {\r\n      ...this.appUsersManager.getUsers()\r\n    };\r\n\r\n    const chats = this.appChatsManager.getChats();\r\n    for(const chatId in chats) {\r\n      peers[chatId.toPeerId(true)] = chats[chatId];\r\n    }\r\n\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'peers',\r\n      value: peers\r\n    }, port);\r\n  }\r\n}\r\n\r\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat' | 'isRegularUser';\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {Photo, PhotoSize, PhotosPhotos} from '../../layer';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\r\nimport {AppManager} from './manager';\r\n\r\nexport type MyPhoto = Photo.photo;\r\n\r\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\r\n// let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\r\n\r\nexport class AppPhotosManager extends AppManager {\r\n  private photos: {\r\n    [id: string]: MyPhoto\r\n  } = {};\r\n\r\n  public savePhoto(photo: Photo, context?: ReferenceContext) {\r\n    if(!photo || photo._ === 'photoEmpty') return;\r\n\r\n    /* if(photo.id === TEST_FILE_REFERENCE) {\r\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\r\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\r\n      //photo.file_reference = new Uint8Array(bytes);\r\n      photo.file_reference = bytes;\r\n      if(!--TEST_FILE_REFERENCE_TIMES) {\r\n        TEST_FILE_REFERENCE = '';\r\n      }\r\n    } */\r\n\r\n    const oldPhoto = this.photos[photo.id];\r\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\r\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\r\n      this.referenceDatabase.saveContext(photo.file_reference, context);\r\n    }\r\n\r\n    if(photo.sizes?.length) {\r\n      // * sometimes photoStrippedSize can be the last item\r\n      photo.sizes.sort((a, b) => {\r\n        return ((a as PhotoSize.photoSize).size || ((a as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0)) - ((b as PhotoSize.photoSize).size || ((b as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0));\r\n      });\r\n\r\n      const size = photo.sizes[photo.sizes.length - 1];\r\n      if(size._ === 'photoSizeProgressive') {\r\n        size.size = size.sizes[size.sizes.length - 1];\r\n      }\r\n    }\r\n\r\n    if(oldPhoto) {\r\n      return Object.assign(oldPhoto, photo);\r\n    }\r\n\r\n    return this.photos[photo.id] = photo;\r\n  }\r\n\r\n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\r\n    const inputUser = this.appUsersManager.getUserInput(userId);\r\n    return this.apiManager.invokeApiCacheable('photos.getUserPhotos', {\r\n      user_id: inputUser,\r\n      offset: 0,\r\n      limit,\r\n      max_id: maxId\r\n    }, {cacheSeconds: 60}).then((photosResult) => {\r\n      this.appUsersManager.saveApiUsers(photosResult.users);\r\n      const photoIds = photosResult.photos.map((photo, idx) => {\r\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\r\n        return photo.id;\r\n      });\r\n\r\n      // ! WARNING !\r\n      if(maxId !== '0' && maxId) {\r\n        const idx = photoIds.indexOf(maxId);\r\n        if(idx !== -1) {\r\n          photoIds.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      return {\r\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\r\n        photos: photoIds\r\n      };\r\n    });\r\n  }\r\n\r\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\r\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\r\n\r\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\r\n  } */\r\n\r\n  /* public isDownloaded(media: any) {\r\n    const isPhoto = media._ === 'photo';\r\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\r\n    let isDownloaded: boolean;\r\n    if(photo) {\r\n      isDownloaded = photo.downloaded > 0;\r\n    } else {\r\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\r\n      isDownloaded = cachedThumb?.downloaded > 0;\r\n    }\r\n\r\n    return isDownloaded;\r\n  } */\r\n\r\n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\r\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport copy from '../../helpers/object/copy';\r\nimport {InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults} from '../../layer';\r\nimport {logger, LogTypes} from '../logger';\r\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\ntype PollId = Poll['id'];\r\n\r\nexport class AppPollsManager extends AppManager {\r\n  public polls: {[id: PollId]: Poll} = {};\r\n  public results: {[id: PollId]: PollResults} = {};\r\n  public pollToMessages: {[id: PollId]: Set<string>} = {};\r\n\r\n  private log = logger('POLLS', LogTypes.Error);\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateMessagePoll: (update) => {\r\n        this.log('updateMessagePoll:', update);\r\n\r\n        let poll: Poll = update.poll || this.polls[update.poll_id];\r\n        if(!poll) {\r\n          return;\r\n        }\r\n\r\n        let results = update.results;\r\n        const ret = this.savePoll(poll, results as any);\r\n        poll = ret.poll;\r\n        results = ret.results;\r\n\r\n        this.rootScope.dispatchEvent('poll_update', {poll, results: results as any});\r\n      }\r\n    });\r\n  }\r\n\r\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\r\n    if(message) {\r\n      this.updatePollToMessage(message, true);\r\n    }\r\n\r\n    const id = poll.id;\r\n    if(this.polls[id]) {\r\n      poll = Object.assign(this.polls[id], poll);\r\n      results = this.saveResults(poll, results);\r\n    } else {\r\n      this.polls[id] = poll;\r\n\r\n      poll.chosenIndexes = [];\r\n      results = this.saveResults(poll, results);\r\n    }\r\n\r\n    return {poll, results};\r\n  }\r\n\r\n  public saveResults(poll: Poll, results: PollResults) {\r\n    if(this.results[poll.id]) {\r\n      results = Object.assign(this.results[poll.id], results);\r\n    } else {\r\n      this.results[poll.id] = results;\r\n    }\r\n\r\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\r\n      poll.chosenIndexes.length = 0;\r\n      if(results?.results?.length) {\r\n        results.results.forEach((answer, idx) => {\r\n          if(answer.pFlags?.chosen) {\r\n            poll.chosenIndexes.push(idx);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public getPoll(pollId: PollId): {poll: Poll, results: PollResults} {\r\n    return {\r\n      poll: this.polls[pollId],\r\n      results: this.results[pollId]\r\n    };\r\n  }\r\n\r\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\r\n    if(solution) {\r\n      if(!solutionEntities) {\r\n        solutionEntities = [];\r\n      }\r\n\r\n      solution = parseMarkdown(solution, solutionEntities);\r\n    } else {\r\n      solution = undefined; // can be string here\r\n    }\r\n\r\n    return {\r\n      _: 'inputMediaPoll',\r\n      poll,\r\n      correct_answers: correctAnswers,\r\n      solution,\r\n      solution_entities: solution ? solutionEntities : undefined\r\n    };\r\n  }\r\n\r\n  public updatePollToMessage(message: Message.message, add: boolean) {\r\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\r\n    let set = this.pollToMessages[id];\r\n\r\n    if(!add && !set) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = this.pollToMessages[id] = new Set();\r\n    }\r\n\r\n    const key = message.peerId + '_' + message.mid;\r\n    if(add) set.add(key);\r\n    else set.delete(key);\r\n\r\n    if(!add && !set.size) {\r\n      delete this.polls[id];\r\n      delete this.results[id];\r\n      delete this.pollToMessages[id];\r\n    }\r\n  }\r\n\r\n  public sendVote(message: Message.message, optionIds: number[]): Promise<void> {\r\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\r\n\r\n    const options: Uint8Array[] = optionIds.map((index) => {\r\n      return poll.answers[index].option;\r\n    });\r\n\r\n    const messageId = message.mid;\r\n    const peerId = message.peerId;\r\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      return this.appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\r\n        this.log('invoke sendVote callback');\r\n        return this.sendVote(message as Message.message, optionIds);\r\n      });\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.sendVote', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid),\r\n      options\r\n    }).then((updates) => {\r\n      this.log('sendVote updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getResults(message: Message.message) {\r\n    const inputPeer = this.appPeersManager.getInputPeerById(message.peerId);\r\n\r\n    return this.apiManager.invokeApi('messages.getPollResults', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid)\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n      this.log('getResults updates:', updates);\r\n    });\r\n  }\r\n\r\n  public getVotes(message: Message.message, option?: Uint8Array, offset?: string, limit = 20) {\r\n    return this.apiManager.invokeApi('messages.getPollVotes', {\r\n      peer: this.appPeersManager.getInputPeerById(message.peerId),\r\n      id: getServerMessageId(message.mid),\r\n      option,\r\n      offset,\r\n      limit\r\n    }).then((votesList) => {\r\n      this.log('getPollVotes messages:', votesList);\r\n\r\n      this.appUsersManager.saveApiUsers(votesList.users);\r\n      this.appChatsManager.saveApiChats(votesList.chats);\r\n\r\n      return votesList;\r\n    });\r\n  }\r\n\r\n  public stopPoll(message: Message.message) {\r\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\r\n\r\n    if(poll.pFlags.closed) return Promise.resolve();\r\n\r\n    const newPoll = copy(poll);\r\n    newPoll.pFlags.closed = true;\r\n    return this.appMessagesManager.editMessage(message, undefined, {\r\n      newMedia: this.getInputMediaPoll(newPoll)\r\n    }).then(() => {\r\n      // console.log('stopped poll');\r\n    }, err => {\r\n      this.log.error('stopPoll error:', err);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {InputPrivacyKey, InputPrivacyRule, PrivacyRule, PrivacyKey, GlobalPrivacySettings} from '../../layer';\r\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\r\nimport {AppManager} from './manager';\r\n\r\nexport class AppPrivacyManager extends AppManager {\r\n  private privacy: Partial<{\r\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\r\n  }> = {};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updatePrivacy: (update) => {\r\n        const key = update.key._;\r\n        this.privacy[key] = update.rules;\r\n        this.rootScope.dispatchEvent('privacy_update', update);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\r\n    return this.apiManager.invokeApi('account.setPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      },\r\n      rules\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePrivacy',\r\n        key: {\r\n          _: convertInputKeyToKey(inputKey)\r\n        },\r\n        rules: rules.map((inputRule) => {\r\n          const rule: PrivacyRule = {} as any;\r\n          Object.assign(rule, inputRule);\r\n          rule._ = convertInputKeyToKey(rule._) as any;\r\n          return rule;\r\n        })\r\n      });\r\n\r\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\r\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\r\n    const rules = this.privacy[privacyKey];\r\n    if(rules) {\r\n      return Promise.resolve(rules);\r\n    }\r\n\r\n    return this.privacy[privacyKey] = this.apiManager.invokeApi('account.getPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      }\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return this.privacy[privacyKey] = privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getGlobalPrivacySettings() {\r\n    return this.apiManager.invokeApi('account.getGlobalPrivacySettings');\r\n  }\r\n\r\n  public setGlobalPrivacySettings(settings: GlobalPrivacySettings) {\r\n    return this.apiManager.invokeApi('account.setGlobalPrivacySettings', {settings});\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyTopPeer} from './appUsersManager';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull, Photo, PhotoSize, Updates, ChatParticipant, PeerSettings} from '../../layer';\r\nimport SearchIndex from '../searchIndex';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport getPhotoInput from './utils/photos/getPhotoInput';\r\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\r\nimport ctx from '../../environment/ctx';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport makeError from '../../helpers/makeError';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\r\n\r\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\r\n\r\nconst PEER_FULL_TTL = 3 * 60e3;\r\n\r\nexport class AppProfileManager extends AppManager {\r\n  // private botInfos: any = {};\r\n  private usersFull: {[id: UserId]: UserFull.userFull} = {};\r\n  private chatsFull: {[id: ChatId]: ChatFull} = {};\r\n  private fullExpiration: {[peerId: PeerId]: number} = {};\r\n  private typingsInPeer: {[key: string]: UserTyping[]};\r\n  private peerSettings: {[peerId: PeerId]: PeerSettings};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateChatParticipants: this.onUpdateChatParticipants,\r\n\r\n      updateChatParticipantAdd: this.onUpdateChatParticipantAdd,\r\n\r\n      updateChatParticipantDelete: this.onUpdateChatParticipantDelete,\r\n\r\n      updateUserTyping: this.onUpdateUserTyping,\r\n      updateChatUserTyping: this.onUpdateUserTyping,\r\n      updateChannelUserTyping: this.onUpdateUserTyping,\r\n\r\n      updatePeerBlocked: this.onUpdatePeerBlocked,\r\n\r\n      updatePeerSettings: this.onUpdatePeerSettings\r\n    });\r\n\r\n    this.rootScope.addEventListener('chat_update', (chatId) => {\r\n      const fullChat = this.chatsFull[chatId];\r\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = this.appChatsManager.getChat(chatId);\r\n      if(!fullChat || !chat) {\r\n        return;\r\n      }\r\n\r\n      let updated = false;\r\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\r\n        updated = true;\r\n      }\r\n\r\n      const {photo} = chat as Chat.chat;\r\n      if(photo) {\r\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\r\n        const hasFullChatPhoto = !!(fullChat.chat_photo && fullChat.chat_photo._ !== 'photoEmpty'); // chat_photo can be missing\r\n        if(\r\n          hasChatPhoto !== hasFullChatPhoto || (\r\n            hasChatPhoto &&\r\n            photo.photo_id !== fullChat.chat_photo?.id\r\n          )\r\n        ) {\r\n          updated = true;\r\n        }\r\n      }\r\n\r\n      if(updated) {\r\n        this.refreshFullPeer(chatId.toPeerId(true));\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('channel_update', (chatId) => {\r\n      this.refreshFullPeer(chatId.toPeerId(true));\r\n    });\r\n\r\n    // * genius\r\n    this.rootScope.addEventListener('chat_full_update', (chatId) => {\r\n      this.rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\r\n    });\r\n\r\n    // * genius\r\n    this.rootScope.addEventListener('user_full_update', (userId) => {\r\n      this.rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\r\n    });\r\n\r\n    this.rootScope.addEventListener('invalidate_participants', (chatId) => {\r\n      this.invalidateChannelParticipants(chatId);\r\n    });\r\n\r\n    this.typingsInPeer = {};\r\n    this.peerSettings = {};\r\n  }\r\n\r\n  /* public saveBotInfo(botInfo: any) {\r\n    const botId = botInfo && botInfo.user_id;\r\n    if(!botId) {\r\n      return null;\r\n    }\r\n\r\n    const commands: any = {};\r\n    botInfo.commands.forEach((botCommand: any) => {\r\n      commands[botCommand.command] = botCommand.description;\r\n    });\r\n\r\n    return this.botInfos[botId] = {\r\n      id: botId,\r\n      version: botInfo.version,\r\n      shareText: botInfo.share_text,\r\n      description: botInfo.description,\r\n      commands: commands\r\n    };\r\n  } */\r\n\r\n  public getProfile(id: UserId, override?: true) {\r\n    if(this.usersFull[id] && !override && Date.now() < this.fullExpiration[id.toPeerId()]) {\r\n      return this.usersFull[id];\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'users.getFullUser',\r\n      params: {\r\n        id: this.appUsersManager.getUserInput(id)\r\n      },\r\n      processResult: (usersUserFull) => {\r\n        this.appChatsManager.saveApiChats(usersUserFull.chats, true);\r\n        this.appUsersManager.saveApiUsers(usersUserFull.users);\r\n\r\n        const userFull = usersUserFull.full_user;\r\n        const peerId = id.toPeerId(false);\r\n        if(userFull.profile_photo) {\r\n          userFull.profile_photo = this.appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\r\n        }\r\n\r\n        const botInfo = userFull.bot_info;\r\n        if(botInfo) {\r\n          const referenceContext: ReferenceContext = {type: 'userFull', userId: id};\r\n          botInfo.description_document = this.appDocsManager.saveDoc(botInfo.description_document, referenceContext);\r\n          botInfo.description_photo = this.appPhotosManager.savePhoto(botInfo.description_photo, referenceContext);\r\n        }\r\n\r\n        this.appNotificationsManager.savePeerSettings({\r\n          peerId,\r\n          settings: userFull.notify_settings\r\n        });\r\n\r\n        this.usersFull[id] = userFull;\r\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\r\n\r\n        /* if(userFull.bot_info) {\r\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\r\n        } */\r\n\r\n        // appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\r\n\r\n        this.rootScope.dispatchEvent('user_full_update', id);\r\n        return userFull;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getProfileByPeerId(peerId: PeerId, override?: true) {\r\n    if(this.appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\r\n    else return this.getProfile(peerId.toUserId(), override);\r\n  }\r\n\r\n  public getCachedFullChat(chatId: ChatId) {\r\n    return this.chatsFull[chatId];\r\n  }\r\n\r\n  public getCachedFullUser(userId: UserId) {\r\n    return this.usersFull[userId];\r\n  }\r\n\r\n  public getCachedProfileByPeerId(peerId: PeerId) {\r\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\r\n  }\r\n\r\n  public isUserBlocked(userId: UserId) {\r\n    return callbackify(this.getProfile(userId), (userFull) => {\r\n      return !!userFull.pFlags.blocked;\r\n    });\r\n  }\r\n\r\n  public isCachedUserBlocked(userId: UserId) {\r\n    const result = this.isUserBlocked(userId);\r\n    return result instanceof Promise ? undefined : result;\r\n  }\r\n\r\n  public async getFullPhoto(peerId: PeerId) {\r\n    const profile = await this.getProfileByPeerId(peerId);\r\n    switch(profile._) {\r\n      case 'userFull':\r\n        return profile.profile_photo;\r\n      case 'channelFull':\r\n      case 'chatFull':\r\n        return profile.chat_photo;\r\n    }\r\n  }\r\n\r\n  /* public getPeerBots(peerId: PeerId) {\r\n    var peerBots: any[] = [];\r\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\r\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\r\n      return Promise.resolve(peerBots);\r\n    }\r\n    if(peerId >= 0) {\r\n      return this.getProfile(peerId).then((userFull: any) => {\r\n        var botInfo = userFull.bot_info;\r\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\r\n          peerBots.push(botInfo);\r\n        }\r\n        return peerBots;\r\n      });\r\n    }\r\n\r\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\r\n      chatFull.bot_info.forEach((botInfo: any) => {\r\n        peerBots.push(this.saveBotInfo(botInfo))\r\n      });\r\n      return peerBots;\r\n    });\r\n  } */\r\n\r\n  public getChatFull(id: ChatId, override?: true) {\r\n    if(this.appChatsManager.isChannel(id)) {\r\n      return this.getChannelFull(id, override);\r\n    }\r\n\r\n    const peerId = id.toPeerId(true);\r\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\r\n    if(fullChat && !override && Date.now() < this.fullExpiration[peerId]) {\r\n      const chat = this.appChatsManager.getChat(id) as Chat.chat;\r\n      if(\r\n        chat.pFlags.left ||\r\n        chat.pFlags.deactivated ||\r\n        chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version\r\n      ) {\r\n        return fullChat as ChatFull;\r\n      }\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getFullChat',\r\n      params: {\r\n        chat_id: id\r\n      },\r\n      processResult: (result) => {\r\n        this.appChatsManager.saveApiChats(result.chats, true);\r\n        this.appUsersManager.saveApiUsers(result.users);\r\n        const chatFull = result.full_chat as ChatFull.chatFull;\r\n        if(chatFull && chatFull.chat_photo && chatFull.chat_photo.id) {\r\n          chatFull.chat_photo = this.appPhotosManager.savePhoto(chatFull.chat_photo, {type: 'profilePhoto', peerId});\r\n        }\r\n\r\n        if(chatFull.call) {\r\n          this.appGroupCallsManager.saveGroupCall(chatFull.call, id);\r\n        }\r\n\r\n        // appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\r\n        this.appNotificationsManager.savePeerSettings({\r\n          peerId,\r\n          settings: chatFull.notify_settings\r\n        });\r\n\r\n        this.chatsFull[id] = chatFull;\r\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\r\n        this.rootScope.dispatchEvent('chat_full_update', id);\r\n\r\n        return chatFull;\r\n      }\r\n    });\r\n  }\r\n\r\n  public async getChatInviteLink(id: ChatId, force?: boolean) {\r\n    const chatFull = await this.getChatFull(id);\r\n    if(!force &&\r\n      chatFull.exported_invite &&\r\n      chatFull.exported_invite._ == 'chatInviteExported') {\r\n      return chatFull.exported_invite.link;\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.exportChatInvite', {\r\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true))\r\n    }).then((exportedInvite) => {\r\n      if(this.chatsFull[id] !== undefined) {\r\n        this.chatsFull[id].exported_invite = exportedInvite;\r\n      }\r\n\r\n      return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\r\n    });\r\n  }\r\n\r\n  private filterParticipantsByQuery(participants: (ChannelParticipant | ChatParticipant)[], q: string) {\r\n    const index = this.appUsersManager.createSearchIndex();\r\n    participants.forEach((chatParticipant) => {\r\n      const peerId = getParticipantPeerId(chatParticipant);\r\n      index.indexObject(peerId, this.appUsersManager.getUserSearchText(peerId));\r\n    });\r\n\r\n    const found = index.search(q);\r\n    const filteredParticipants = participants.filter((chatParticipant) => {\r\n      const peerId = getParticipantPeerId(chatParticipant);\r\n      return found.has(peerId);\r\n    });\r\n\r\n    return filteredParticipants;\r\n  }\r\n\r\n  public getParticipants(\r\n    id: ChatId,\r\n    filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'},\r\n    limit = 200,\r\n    offset = 0\r\n  ) {\r\n    if(this.appChatsManager.isChannel(id)) {\r\n      return this.getChannelParticipants(id, filter, limit, offset);\r\n    }\r\n\r\n    return callbackify(this.getChatFull(id), (chatFull) => {\r\n      const chatParticipants = (chatFull as ChatFull.chatFull).participants;\r\n      if(chatParticipants._ !== 'chatParticipants') {\r\n        throw makeError('CHAT_PRIVATE');\r\n      }\r\n\r\n      if(filter._ === 'channelParticipantsSearch' && filter.q.trim()) {\r\n        return {\r\n          ...chatParticipants,\r\n          participants: this.filterParticipantsByQuery(chatParticipants.participants, filter.q)\r\n        };\r\n      }\r\n\r\n      return chatParticipants;\r\n    });\r\n  }\r\n\r\n  public getParticipant(id: ChatId, peerId: PeerId) {\r\n    if(this.appChatsManager.isChannel(id)) {\r\n      return this.getChannelParticipant(id, peerId);\r\n    }\r\n\r\n    return Promise.resolve(this.getParticipants(id)).then((chatParticipants) => {\r\n      assumeType<ChatParticipants.chatParticipants>(chatParticipants);\r\n      const found = chatParticipants.participants.find((chatParticipant) => {\r\n        if(getParticipantPeerId(chatParticipant) === peerId) {\r\n          return chatParticipant;\r\n        }\r\n      });\r\n\r\n      if(!found) {\r\n        throw makeError('USER_NOT_PARTICIPANT');\r\n      }\r\n\r\n      return found;\r\n    });\r\n  }\r\n\r\n  public getChannelParticipants(\r\n    id: ChatId,\r\n    filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'},\r\n    limit = 200,\r\n    offset = 0\r\n  ) {\r\n    if(!this.appChatsManager.hasRights(id, 'view_participants')) {\r\n      throw makeError('CHAT_ADMIN_REQUIRED');\r\n    }\r\n\r\n    const MANUALLY_FILTER: Set<ChannelParticipantsFilter['_']> = new Set([\r\n      'channelParticipantsAdmins'\r\n    ]);\r\n\r\n    const result = this.apiManager.invokeApiCacheable('channels.getParticipants', {\r\n      channel: this.appChatsManager.getChannelInput(id),\r\n      filter,\r\n      offset,\r\n      limit,\r\n      hash: '0'\r\n    }, {cacheSeconds: 60, syncIfHasResult: true});\r\n\r\n    return callbackify(result, (result) => {\r\n      this.appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\r\n      this.appChatsManager.saveApiChats((result as ChannelsChannelParticipants.channelsChannelParticipants).chats);\r\n\r\n      const q = (filter as ChannelParticipantsFilter.channelParticipantsAdmins).q;\r\n      if(MANUALLY_FILTER.has(filter._) && q?.trim()) {\r\n        return {\r\n          ...result,\r\n          participants: this.filterParticipantsByQuery((result as ChannelsChannelParticipants.channelsChannelParticipants).participants, q)\r\n        } as ChannelsChannelParticipants.channelsChannelParticipants;\r\n      }\r\n\r\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\r\n    });\r\n  }\r\n\r\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\r\n    return this.apiManager.invokeApiSingle('channels.getParticipant', {\r\n      channel: this.appChatsManager.getChannelInput(id),\r\n      participant: this.appPeersManager.getInputPeerById(peerId)\r\n    }).then((channelParticipant) => {\r\n      this.appUsersManager.saveApiUsers(channelParticipant.users);\r\n      return channelParticipant.participant;\r\n    });\r\n  }\r\n\r\n  public getChannelFull(id: ChatId, override?: true) {\r\n    const peerId = id.toPeerId(true);\r\n    if(this.chatsFull[id] !== undefined && !override && Date.now() < this.fullExpiration[peerId]) {\r\n      return this.chatsFull[id] as ChatFull.channelFull;\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'channels.getFullChannel',\r\n      params: {\r\n        channel: this.appChatsManager.getChannelInput(id)\r\n      },\r\n      processResult: (result) => {\r\n        this.appChatsManager.saveApiChats(result.chats, true);\r\n        this.appUsersManager.saveApiUsers(result.users);\r\n        const fullChannel = result.full_chat as ChatFull.channelFull;\r\n        if(fullChannel && fullChannel.chat_photo.id) {\r\n          fullChannel.chat_photo = this.appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\r\n          // appPhotosManager.savePhoto(fullChannel.chat_photo);\r\n        }\r\n\r\n        if(fullChannel.call) {\r\n          this.appGroupCallsManager.saveGroupCall(fullChannel.call, id);\r\n        }\r\n\r\n        this.appNotificationsManager.savePeerSettings({\r\n          peerId,\r\n          settings: fullChannel.notify_settings\r\n        });\r\n\r\n        this.chatsFull[id] = fullChannel;\r\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\r\n        this.rootScope.dispatchEvent('chat_full_update', id);\r\n\r\n        return fullChannel;\r\n      },\r\n      processError: (error) => {\r\n        switch(error.type) {\r\n          case 'CHANNEL_PRIVATE':\r\n            const channel = this.appChatsManager.getChat(id) as Chat.channel | Chat.channelForbidden;\r\n            this.apiUpdatesManager.processUpdateMessage({\r\n              _: 'updates',\r\n              updates: [{\r\n                _: 'updateChannel',\r\n                channel_id: id\r\n              }],\r\n              chats: [channel._ === 'channelForbidden' ? channel : {\r\n                _: 'channelForbidden',\r\n                id,\r\n                access_hash: channel.access_hash,\r\n                title: channel.title,\r\n                pFlags: channel.pFlags\r\n              }],\r\n              users: []\r\n            } as Updates.updates);\r\n            break;\r\n        }\r\n\r\n        throw error;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getMentions(\r\n    chatId: ChatId,\r\n    query: string,\r\n    threadId?: number,\r\n    global?: boolean\r\n  ): Promise<PeerId[]> {\r\n    const processUserIds = (topPeers: MyTopPeer[]) => {\r\n      const startsWithAt = query.charAt(0) === '@';\r\n      if(startsWithAt) query = query.slice(1);\r\n\r\n      const hasQuery = !!query.trim();\r\n      if(!hasQuery) {\r\n        return topPeers.map((peer) => peer.id);\r\n      }\r\n\r\n      const index = new SearchIndex<PeerId>({\r\n        ignoreCase: true\r\n      });\r\n\r\n      const ratingMap: Map<PeerId, number> = new Map();\r\n      topPeers.forEach((peer) => {\r\n        index.indexObject(peer.id, this.appUsersManager.getUserSearchText(peer.id));\r\n        ratingMap.set(peer.id, peer.rating);\r\n      });\r\n\r\n      const peerIds = Array.from(index.search(query));\r\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\r\n      return peerIds;\r\n    };\r\n\r\n    let promise: Promise<PeerId[]>;\r\n    if(this.appChatsManager.isChannel(chatId)) {\r\n      promise = Promise.resolve(this.getChannelParticipants(chatId, {\r\n        _: 'channelParticipantsMentions',\r\n        q: query,\r\n        top_msg_id: getServerMessageId(threadId)\r\n      }, 50, 0)).then((cP) => {\r\n        return cP.participants.map((p) => getParticipantPeerId(p));\r\n      });\r\n    } else if(chatId) {\r\n      promise = Promise.resolve(this.getChatFull(chatId)).then((chatFull) => {\r\n        return ((chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants).participants.map((p) => p.user_id.toPeerId());\r\n      });\r\n    }\r\n\r\n    return Promise.all([\r\n      // [],\r\n      global ? [] as MyTopPeer[] : this.appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]),\r\n      promise,\r\n      global && this.appUsersManager.getContactsPeerIds(query, false, 'rating', 30)\r\n    ]).then(([botsInlineTopPeers, chatMembers, searchResults]) => {\r\n      if(searchResults) {\r\n        searchResults = searchResults.filter((peerId) => {\r\n          const peer = this.appPeersManager.getPeer(peerId);\r\n          return !!getPeerActiveUsernames(peer)[0];\r\n        });\r\n      }\r\n\r\n      const convertPeerIds = (peerIds: PeerId[]) => peerIds ? peerIds.map((peerId) => ({id: peerId, rating: 0})) : [];\r\n      const peers = botsInlineTopPeers.concat(\r\n        convertPeerIds(chatMembers),\r\n        convertPeerIds(searchResults)\r\n      );\r\n\r\n      return processUserIds(peers);\r\n    });\r\n  }\r\n\r\n  public invalidateChannelParticipants(id: ChatId) {\r\n    this.apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\r\n\r\n    if(!this.getCachedFullChat(id)) {\r\n      return;\r\n    }\r\n\r\n    this.refreshFullPeer(id.toPeerId(true));\r\n  }\r\n\r\n  private refreshFullPeer(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      const userId = peerId.toUserId();\r\n      delete this.usersFull[userId];\r\n      this.rootScope.dispatchEvent('user_full_update', userId);\r\n    } else {\r\n      const chatId = peerId.toChatId();\r\n      delete this.chatsFull[chatId];\r\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\r\n    }\r\n\r\n    // ! эта строчка будет создавать race condition:\r\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\r\n    // this.getProfileByPeerId(peerId, true);\r\n  }\r\n\r\n  public refreshFullPeerIfNeeded(peerId: PeerId) {\r\n    const full = peerId.isUser() ? this.usersFull[peerId.toUserId()] : this.chatsFull[peerId.toChatId()];\r\n    if(full) {\r\n      this.refreshFullPeer(peerId);\r\n    }\r\n  }\r\n\r\n  public updateProfile(first_name?: string, last_name?: string, about?: string) {\r\n    return this.apiManager.invokeApi('account.updateProfile', {\r\n      first_name,\r\n      last_name,\r\n      about\r\n    }).then((user) => {\r\n      this.appUsersManager.saveApiUser(user);\r\n\r\n      if(about !== undefined) {\r\n        const peerId = user.id.toPeerId();\r\n        const userFull = this.usersFull[user.id];\r\n        if(userFull) {\r\n          userFull.about = about;\r\n        }\r\n\r\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\r\n      }\r\n\r\n      return this.getProfile(user.id, true);\r\n    });\r\n  }\r\n\r\n  public setBotInfo(botId: BotId, name?: string, about?: string) {\r\n    return this.apiManager.invokeApi('bots.setBotInfo', {\r\n      lang_code: '',\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      name,\r\n      about\r\n    }).then(() => {\r\n      const user = this.appUsersManager.getUser(botId);\r\n      if(name !== undefined) {\r\n        this.appUsersManager.saveApiUser({\r\n          ...user,\r\n          first_name: name\r\n        });\r\n      }\r\n\r\n      const userFull = this.getCachedFullUser(botId);\r\n      if(about !== undefined) {\r\n        if(userFull) {\r\n          userFull.about = about;\r\n        }\r\n\r\n        this.rootScope.dispatchEvent('peer_bio_edit', botId.toPeerId());\r\n      }\r\n\r\n      return this.getProfile(botId, true);\r\n    });\r\n  }\r\n\r\n  public getBotInfo(botId: BotId) {\r\n    return this.apiManager.invokeApiSingle('bots.getBotInfo', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      lang_code: ''\r\n    });\r\n  }\r\n\r\n  public uploadProfilePhoto(inputFile: InputFile, botId?: BotId) {\r\n    return this.apiManager.invokeApi('photos.uploadProfilePhoto', {\r\n      file: inputFile,\r\n      bot: botId ? this.appUsersManager.getUserInput(botId) : undefined\r\n    }).then((updateResult) => {\r\n      // ! sometimes can have no user in users\r\n      const photo = updateResult.photo as Photo.photo;\r\n      if(!updateResult.users.length) {\r\n        const strippedThumb = photo.sizes.find((size) => size._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\r\n        updateResult.users.push({\r\n          ...(botId ? this.appUsersManager.getUser(botId) : this.appUsersManager.getSelf()),\r\n          photo: {\r\n            _: 'userProfilePhoto',\r\n            dc_id: photo.dc_id,\r\n            photo_id: photo.id,\r\n            stripped_thumb: strippedThumb?.bytes,\r\n            pFlags: {\r\n\r\n            }\r\n          }\r\n        });\r\n      }\r\n      this.appUsersManager.saveApiUsers(updateResult.users);\r\n\r\n      const peerId = botId ? botId.toPeerId() : this.appPeersManager.peerId;\r\n      this.appPhotosManager.savePhoto(updateResult.photo, {\r\n        type: 'profilePhoto',\r\n        peerId\r\n      });\r\n\r\n      const userId = peerId.toUserId();\r\n      // this.apiUpdatesManager.processLocalUpdate({\r\n      //   _: 'updateUserPhoto',\r\n      //   user_id: userId,\r\n      //   date: tsNow(true),\r\n      //   photo: this.appUsersManager.getUser(userId).photo,\r\n      //   previous: true\r\n      // });\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateUser',\r\n        user_id: userId\r\n      });\r\n    });\r\n  }\r\n\r\n  public deletePhotos(photoIds: string[]) {\r\n    return this.apiManager.invokeApiSingle('photos.deletePhotos', {\r\n      id: photoIds.map((photoId) => {\r\n        const photo = this.appPhotosManager.getPhoto(photoId);\r\n        return getPhotoInput(photo);\r\n      })\r\n    }).then((deletedList) => {\r\n\r\n    });\r\n  }\r\n\r\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\r\n    const user = this.appUsersManager.getUser(participant.user_id);\r\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\r\n  }\r\n\r\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\r\n    return participants.reduce((acc, participant) => {\r\n      return acc + +this.verifyParticipantForOnlineCount(participant);\r\n    }, 0);\r\n  }\r\n\r\n  public async getOnlines(id: ChatId): Promise<number> {\r\n    const minOnline = 1;\r\n    if(this.appChatsManager.isBroadcast(id)) {\r\n      return minOnline;\r\n    }\r\n\r\n    const chatInfo = await this.getChatFull(id);\r\n    if(this.appChatsManager.isMegagroup(id)) {\r\n      if((chatInfo as ChatFull.channelFull).participants_count <= 100) {\r\n        const channelParticipants = await this.getChannelParticipants(id, {_: 'channelParticipantsRecent'}, 100);\r\n        return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\r\n      }\r\n\r\n      const res = await this.apiManager.invokeApiCacheable('messages.getOnlines', {\r\n        peer: this.appChatsManager.getChannelInputPeer(id)\r\n      }, {cacheSeconds: 60});\r\n\r\n      const onlines = res.onlines ?? minOnline;\r\n      return onlines;\r\n    }\r\n\r\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\r\n    if(_participants?.participants) {\r\n      return this.reduceParticipantsForOnlineCount(_participants.participants);\r\n    } else {\r\n      return minOnline;\r\n    }\r\n  }\r\n\r\n  private getTypingsKey(peerId: PeerId, threadId?: number) {\r\n    return peerId + (threadId ? `_${threadId}` : '');\r\n  }\r\n\r\n  public getPeerTypings(peerId: PeerId, threadId?: number) {\r\n    return this.typingsInPeer[this.getTypingsKey(peerId, threadId)];\r\n  }\r\n\r\n  public canGiftPremium(userId: UserId) {\r\n    const user = this.appUsersManager.getUser(userId);\r\n    if(user?.pFlags?.premium) {\r\n      return false;\r\n    }\r\n\r\n    return callbackify(this.getProfile(userId), (userFull) => {\r\n      const user = this.appUsersManager.getUser(userId);\r\n      return !!userFull.premium_gifts && !user?.pFlags?.premium;\r\n    });\r\n  }\r\n\r\n  public canViewStatistics(peerId: PeerId) {\r\n    if(peerId.isUser()) return false;\r\n\r\n    const chatId = peerId.toChatId();\r\n    const chatFull = this.getCachedFullChat(chatId);\r\n    if(!chatFull) return false;\r\n\r\n    return !!(\r\n      (chatFull as ChatFull.channelFull).stats_dc &&\r\n      (chatFull as ChatFull.channelFull).pFlags.can_view_stats\r\n      /*  && this.appChatsManager.hasRights(chatId, 'view_statistics') */\r\n    );\r\n  }\r\n\r\n  public refreshPeerSettingsIfNeeded(peerId: PeerId) {\r\n    if(this.peerSettings[peerId]) {\r\n      delete this.peerSettings[peerId];\r\n      callbackify(this.getPeerSettings(peerId), (peerSettings) => {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updatePeerSettings',\r\n          peer: this.appPeersManager.getOutputPeer(peerId),\r\n          settings: peerSettings\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public getPeerSettings(peerId: PeerId) {\r\n    if(this.peerSettings[peerId]) return this.peerSettings[peerId];\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getPeerSettings',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      },\r\n      processResult: (messagesPeerSettings) => {\r\n        this.appChatsManager.saveApiChats(messagesPeerSettings.chats, true);\r\n        this.appUsersManager.saveApiUsers(messagesPeerSettings.users);\r\n\r\n        return this.peerSettings[peerId] = messagesPeerSettings.settings;\r\n      }\r\n    });\r\n  }\r\n\r\n  public hidePeerSettingsBar(peerId: PeerId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.hidePeerSettingsBar',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      },\r\n      processResult: () => {\r\n        this.refreshPeerSettingsIfNeeded(peerId);\r\n      }\r\n    });\r\n  }\r\n\r\n  private onUpdateChatParticipants = (update: Update.updateChatParticipants) => {\r\n    const participants = update.participants;\r\n    if(participants._ !== 'chatParticipants') {\r\n      return;\r\n    }\r\n\r\n    const chatId = participants.chat_id;\r\n    const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\r\n    if(chatFull !== undefined) {\r\n      chatFull.participants = participants;\r\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\r\n    }\r\n  };\r\n\r\n  private onUpdateChatParticipantAdd = (update: Update.updateChatParticipantAdd) => {\r\n    const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\r\n    if(chatFull === undefined) {\r\n      return;\r\n    }\r\n\r\n    const _participants = chatFull.participants as ChatParticipants.chatParticipants;\r\n    const participants = _participants.participants || [];\r\n    for(let i = 0, length = participants.length; i < length; i++) {\r\n      if(participants[i].user_id === update.user_id) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    participants.push({\r\n      _: 'chatParticipant',\r\n      user_id: update.user_id,\r\n      inviter_id: update.inviter_id,\r\n      date: tsNow(true)\r\n    });\r\n\r\n    _participants.version = update.version;\r\n    this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\r\n  };\r\n\r\n  private onUpdateChatParticipantDelete = (update: Update.updateChatParticipantDelete) => {\r\n    const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\r\n    if(chatFull === undefined) {\r\n      return;\r\n    }\r\n\r\n    const _participants = chatFull.participants as ChatParticipants.chatParticipants;\r\n    const participants = _participants.participants || [];\r\n    for(let i = 0, length = participants.length; i < length; i++) {\r\n      if(participants[i].user_id === update.user_id) {\r\n        participants.splice(i, 1);\r\n        _participants.version = update.version;\r\n        this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\r\n    const fromId = (update as Update.updateUserTyping).user_id ?\r\n      (update as Update.updateUserTyping).user_id.toPeerId() :\r\n      this.appPeersManager.getPeerId((update as Update.updateChatUserTyping).from_id);\r\n    if(this.appPeersManager.peerId === fromId || update.action._ === 'speakingInGroupCallAction') {\r\n      return;\r\n    }\r\n\r\n    const topMsgId = (update as Update.updateChannelUserTyping).top_msg_id;\r\n    const threadId = topMsgId ? this.appMessagesIdsManager.generateMessageId(topMsgId, (update as Update.updateChannelUserTyping).channel_id) : undefined;\r\n    const peerId = this.appPeersManager.getPeerId(update);\r\n    const key = this.getTypingsKey(peerId, threadId);\r\n    const typings = this.typingsInPeer[key] ??= [];\r\n    const action = update.action;\r\n    let typing = typings.find((t) => t.userId === fromId);\r\n\r\n    if((action as SendMessageAction.sendMessageEmojiInteraction).msg_id) {\r\n      (action as SendMessageAction.sendMessageEmojiInteraction).msg_id = this.appMessagesIdsManager.generateMessageId((action as SendMessageAction.sendMessageEmojiInteraction).msg_id, (update as Update.updateChannelUserTyping).channel_id);\r\n    }\r\n\r\n    const cancelAction = () => {\r\n      delete typing.timeout;\r\n      // typings.findAndSplice((t) => t === typing);\r\n      const idx = typings.indexOf(typing);\r\n      if(idx !== -1) {\r\n        typings.splice(idx, 1);\r\n      }\r\n\r\n      this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\r\n\r\n      if(!typings.length) {\r\n        delete this.typingsInPeer[key];\r\n      }\r\n    };\r\n\r\n    if(typing?.timeout !== undefined) {\r\n      clearTimeout(typing.timeout);\r\n    }\r\n\r\n    if(action._ === 'sendMessageCancelAction') {\r\n      if(!typing) {\r\n        return;\r\n      }\r\n\r\n      cancelAction();\r\n      return;\r\n    }\r\n\r\n    if(!typing) {\r\n      typing = {\r\n        userId: fromId\r\n      };\r\n\r\n      typings.push(typing);\r\n    }\r\n\r\n    // console.log('updateChatUserTyping', update, typings);\r\n\r\n    typing.action = action;\r\n\r\n    const hasUser = this.appUsersManager.hasUser(fromId);\r\n    if(!hasUser) {\r\n      // let's load user here\r\n      if(update._ === 'updateChatUserTyping') {\r\n        if(update.chat_id && this.appChatsManager.hasChat(update.chat_id) && !this.appChatsManager.isChannel(update.chat_id)) {\r\n          Promise.resolve(this.getChatFull(update.chat_id)).then(() => {\r\n            if(typing.timeout !== undefined && this.appUsersManager.hasUser(fromId)) {\r\n              this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      // return;\r\n    } else {\r\n      this.appUsersManager.forceUserOnline(fromId);\r\n    }\r\n\r\n    typing.timeout = ctx.setTimeout(cancelAction, 6000);\r\n    if(hasUser) {\r\n      this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\r\n    }\r\n  };\r\n\r\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\r\n    const peerId = this.appPeersManager.getPeerId(update.peer_id);\r\n    if(this.appPeersManager.isUser(peerId)) {\r\n      const userId = peerId.toUserId();\r\n      const userFull = this.usersFull[userId];\r\n      if(userFull) {\r\n        if(update.pFlags.blocked) {\r\n          userFull.pFlags.blocked = true;\r\n        } else {\r\n          delete userFull.pFlags.blocked;\r\n        }\r\n\r\n        if(update.pFlags.blocked_my_stories_from) {\r\n          userFull.pFlags.blocked_my_stories_from = true;\r\n        } else {\r\n          delete userFull.pFlags.blocked_my_stories_from;\r\n        }\r\n      }\r\n\r\n      this.rootScope.dispatchEvent('user_full_update', userId);\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('peer_block', {\r\n      peerId,\r\n      blocked: update.pFlags.blocked,\r\n      blockedMyStoriesFrom: update.pFlags.blocked_my_stories_from\r\n    });\r\n  };\r\n\r\n  private onUpdatePeerSettings = (update: Update.updatePeerSettings) => {\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n    this.rootScope.dispatchEvent('peer_settings', {peerId, settings: update.settings});\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Awaited} from '../types';\r\n\r\nexport default function callbackifyAll<T extends readonly unknown[] | [], R extends any>(\r\n  values: T,\r\n  callback: (result: { -readonly [P in keyof T]: Awaited<T[P]> }) => R\r\n): Promise<Awaited<R>> | R {\r\n  if(values.some((value) => value instanceof Promise)) {\r\n    return Promise.all(values).then(callback as any);\r\n  } else {\r\n    return callback(values as any);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MessagesReactions, type AvailableReaction, type Message, type MessagePeerReaction, type MessagesAvailableReactions, type Reaction, type ReactionCount, type Update, type Updates, ChatReactions, Peer, Document} from '../../layer';\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport callbackifyAll from '../../helpers/callbackifyAll';\r\nimport copy from '../../helpers/object/copy';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport reactionsEqual from './utils/reactions/reactionsEqual';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport availableReactionToReaction from './utils/reactions/availableReactionToReaction';\r\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\r\n\r\nconst SAVE_DOC_KEYS = [\r\n  'static_icon' as const,\r\n  'appear_animation' as const,\r\n  'select_animation' as const,\r\n  'activate_animation' as const,\r\n  'effect_animation' as const,\r\n  'around_animation' as const,\r\n  'center_icon' as const\r\n];\r\n\r\nconst REFERENCE_CONTEXT: ReferenceContext = {\r\n  type: 'reactions'\r\n};\r\n\r\nexport type PeerAvailableReactions = {\r\n  type: ChatReactions['_'],\r\n  reactions: Reaction[]\r\n};\r\n\r\nexport class AppReactionsManager extends AppManager {\r\n  private availableReactions: AvailableReaction[];\r\n  private sendReactionPromises: Map<string, Promise<any>>;\r\n  private lastSendingTimes: Map<string, number>;\r\n  private reactions: {[key in 'recent' | 'top']?: Reaction[]};\r\n\r\n  protected after() {\r\n    this.sendReactionPromises = new Map();\r\n    this.lastSendingTimes = new Map();\r\n    this.reactions = {};\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      setTimeout(() => {\r\n        Promise.resolve(this.getAvailableReactions()).then(async(availableReactions) => {\r\n          const toLoad: (Extract<keyof AvailableReaction, 'around_animation' | 'static_icon' | 'appear_animation' | 'center_icon'>)[] = [\r\n            'around_animation',\r\n            'static_icon',\r\n            'appear_animation',\r\n            'center_icon'\r\n          ];\r\n\r\n          for(let i = 0, length = Math.min(7, availableReactions.length); i < length; ++i) {\r\n            const availableReaction = availableReactions[i];\r\n            const promises = toLoad.map((key) => {\r\n              return availableReaction[key] && this.apiFileManager.downloadMedia({media: availableReaction[key]});\r\n            });\r\n            await Promise.all(promises);\r\n            await pause(1000);\r\n          }\r\n        });\r\n\r\n        this.getTopReactions();\r\n      }, 7.5e3);\r\n    });\r\n  }\r\n\r\n  public resetAvailableReactions() {\r\n    this.availableReactions = undefined;\r\n    this.getAvailableReactions();\r\n  }\r\n\r\n  public getAvailableReactions() {\r\n    if(this.availableReactions) return this.availableReactions;\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getAvailableReactions',\r\n      processResult: (messagesAvailableReactions) => {\r\n        assumeType<MessagesAvailableReactions.messagesAvailableReactions>(messagesAvailableReactions);\r\n\r\n        const availableReactions = this.availableReactions = messagesAvailableReactions.reactions;\r\n        for(const reaction of availableReactions) {\r\n          for(const key of SAVE_DOC_KEYS) {\r\n            if(!reaction[key]) {\r\n              continue;\r\n            }\r\n\r\n            reaction[key] = this.appDocsManager.saveDoc(reaction[key], REFERENCE_CONTEXT);\r\n          }\r\n        }\r\n\r\n        MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n          name: 'availableReactions',\r\n          value: availableReactions\r\n        });\r\n\r\n        return availableReactions;\r\n      },\r\n      params: {\r\n        hash: 0\r\n      }\r\n    });\r\n  }\r\n\r\n  public getActiveAvailableReactions() {\r\n    return callbackify(this.getAvailableReactions(), (availableReactions) => {\r\n      return availableReactions.filter((availableReaction) => !availableReaction.pFlags.inactive);\r\n    });\r\n  }\r\n\r\n  public getAvailableReactionsForPeer(\r\n    peerId: PeerId,\r\n    unshiftQuickReaction?: boolean\r\n  ): PeerAvailableReactions | Promise<PeerAvailableReactions> {\r\n    const activeAvailableReactions = this.getActiveAvailableReactions();\r\n    const topReactions = this.getTopReactions();\r\n    const quickReaction = this.getQuickReaction();\r\n    if(peerId.isUser()) {\r\n      return callbackifyAll([\r\n        topReactions,\r\n        quickReaction\r\n      ], ([topReactions, quickReaction]) => {\r\n        const p: PeerAvailableReactions = {type: 'chatReactionsAll', reactions: topReactions};\r\n        if(unshiftQuickReaction) {\r\n          this.unshiftQuickReactionInner(p, quickReaction);\r\n        }\r\n        return p;\r\n      });\r\n    }\r\n\r\n    const chatFull = this.appProfileManager.getChatFull(peerId.toChatId());\r\n    return callbackifyAll([\r\n      activeAvailableReactions,\r\n      chatFull,\r\n      quickReaction,\r\n      topReactions\r\n    ], ([\r\n      activeAvailableReactions,\r\n      chatFull,\r\n      quickReaction,\r\n      topReactions\r\n    ]) => {\r\n      let chatAvailableReactions = chatFull.available_reactions ?? {_: 'chatReactionsNone'};\r\n\r\n      if(chatAvailableReactions._ === 'chatReactionsAll' && !chatAvailableReactions.pFlags.allow_custom) {\r\n        chatAvailableReactions = {\r\n          _: 'chatReactionsSome',\r\n          reactions: activeAvailableReactions.map(availableReactionToReaction)\r\n        };\r\n      }\r\n\r\n      let filteredChatReactions: Reaction[] = [];\r\n      if(chatAvailableReactions._ === 'chatReactionsAll') {\r\n        filteredChatReactions = topReactions;\r\n      } else if(chatAvailableReactions._ === 'chatReactionsSome') {\r\n        const filteredChatAvailableReactions = chatAvailableReactions.reactions.map((reaction) => {\r\n          return activeAvailableReactions.find((availableReaction) => availableReaction.reaction === (reaction as Reaction.reactionEmoji).emoticon) || reaction;\r\n        }).filter(Boolean);\r\n        const indexes = new Map(activeAvailableReactions.map((availableReaction, idx) => [availableReaction.reaction, idx]));\r\n        filteredChatAvailableReactions.sort((a, b) => (indexes.get((a as AvailableReaction.availableReaction).reaction) || 0) - (indexes.get((b as AvailableReaction.availableReaction).reaction) || 0));\r\n        filteredChatReactions = filteredChatAvailableReactions.map((reaction) => {\r\n          return reaction._ === 'availableReaction' ? availableReactionToReaction(reaction) : reaction;\r\n        });\r\n      }\r\n\r\n      const p: PeerAvailableReactions = {\r\n        type: chatAvailableReactions._,\r\n        reactions: filteredChatReactions\r\n      };\r\n\r\n      if(chatAvailableReactions._ === 'chatReactionsAll' && unshiftQuickReaction) {\r\n        this.unshiftQuickReactionInner(p, quickReaction);\r\n      }\r\n\r\n      return p;\r\n    });\r\n  }\r\n\r\n  public getReactions(type: 'recent' | 'top') {\r\n    if(this.reactions[type]) {\r\n      return this.reactions[type];\r\n    }\r\n\r\n    return this.apiManager.invokeApiHashable({\r\n      method: type === 'recent' ? 'messages.getRecentReactions' : 'messages.getTopReactions',\r\n      params: {\r\n        limit: 75\r\n      },\r\n      processResult: (messagesReactions) => {\r\n        assumeType<MessagesReactions.messagesReactions>(messagesReactions);\r\n        return this.reactions[type] = messagesReactions.reactions;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getTopReactions() {\r\n    return this.getReactions('top');\r\n  }\r\n\r\n  public getRecentReactions() {\r\n    return this.getReactions('recent');\r\n  }\r\n\r\n  private unshiftQuickReactionInner(peerAvailableReactions: PeerAvailableReactions, quickReaction: Reaction | AvailableReaction) {\r\n    if(quickReaction._ === 'availableReaction') {\r\n      quickReaction = availableReactionToReaction(quickReaction);\r\n    }\r\n\r\n    peerAvailableReactions.reactions = peerAvailableReactions.reactions.slice();\r\n    findAndSplice(peerAvailableReactions.reactions, (reaction) => reactionsEqual(reaction, quickReaction));\r\n    peerAvailableReactions.reactions.unshift(quickReaction);\r\n\r\n    return peerAvailableReactions;\r\n  }\r\n\r\n  // private unshiftQuickReaction(\r\n  //   availableReactions: AvailableReaction[] | PromiseLike<AvailableReaction.availableReaction[]>,\r\n  //   quickReaction: ReturnType<AppReactionsManager['getQuickReaction']> = this.getQuickReaction()\r\n  // ) {\r\n  //   return callbackifyAll([\r\n  //     availableReactions,\r\n  //     quickReaction\r\n  //   ], ([availableReactions, quickReaction]) => {\r\n  //     return this.unshiftQuickReactionInner(availableReactions, quickReaction);\r\n  //   });\r\n  // }\r\n\r\n  public getAvailableReactionsByMessage(\r\n    message: Message.message,\r\n    unshiftQuickReaction?: boolean\r\n  ): ReturnType<AppReactionsManager['getAvailableReactionsForPeer']> {\r\n    // if(!message) return {type: 'chatReactionsNone', reactions: []};\r\n    let peerId: PeerId;\r\n    if(!message) {\r\n      peerId = NULL_PEER_ID;\r\n    } else {\r\n      peerId = (\r\n        message.fwd_from?.channel_post &&\r\n        this.appPeersManager.isMegagroup(message.peerId) &&\r\n        message.fromId === message.fwdFromId &&\r\n        message.fromId\r\n      ) || message.peerId;\r\n    }\r\n\r\n    return this.getAvailableReactionsForPeer(peerId, unshiftQuickReaction);\r\n  }\r\n\r\n  // public isReactionActive(reaction: string) {\r\n  //   if(!this.availableReactions) return false;\r\n  //   return this.availableReactions.some((availableReaction) => availableReaction.reaction === reaction);\r\n  // }\r\n\r\n  public getQuickReaction() {\r\n    return callbackifyAll([\r\n      this.apiManager.getConfig(),\r\n      this.getAvailableReactions()\r\n    ], ([config, availableReactions]) => {\r\n      const reaction = config.reactions_default;\r\n      if(reaction?._ === 'reactionEmoji') {\r\n        return availableReactions.find((availableReaction) => availableReaction.reaction === reaction.emoticon);\r\n      }\r\n\r\n      return reaction as Reaction.reactionCustomEmoji;\r\n    });\r\n  }\r\n\r\n  public getReactionCached(reaction: string) {\r\n    return this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\r\n  }\r\n\r\n  public getReaction(reaction: string) {\r\n    return callbackify(this.getAvailableReactions(), () => {\r\n      return this.getReactionCached(reaction);\r\n    });\r\n  }\r\n\r\n  public getMessagesReactions(peerId: PeerId, mids: number[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getMessagesReactions',\r\n      params: {\r\n        id: mids.map((mid) => getServerMessageId(mid)),\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n\r\n        // const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateMessageReactions') as Update.updateMessageReactions;\r\n        // return update.reactions;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getMessageReactionsList(peerId: PeerId, mid: number, limit: number, reaction?: Reaction, offset?: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getMessageReactionsList',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: getServerMessageId(mid),\r\n        limit,\r\n        reaction,\r\n        offset\r\n      },\r\n      processResult: (messageReactionsList) => {\r\n        this.appUsersManager.saveApiUsers(messageReactionsList.users);\r\n        return messageReactionsList;\r\n      }\r\n    });\r\n  }\r\n\r\n  public setDefaultReaction(reaction: Reaction) {\r\n    return this.apiManager.invokeApi('messages.setDefaultReaction', {reaction}).then(async(value) => {\r\n      if(value) {\r\n        const appConfig = await this.apiManager.getConfig();\r\n        if(appConfig) {\r\n          appConfig.reactions_default = reaction;\r\n        }/*  else { // if no config or loading it - overwrite\r\n          this.apiManager.getAppConfig(true);\r\n        } */\r\n\r\n        this.rootScope.dispatchEvent('quick_reaction', reaction);\r\n      }\r\n\r\n      return value;\r\n    });\r\n  }\r\n\r\n  public async sendReaction(message: Message.message, reaction?: Reaction | AvailableReaction, onlyLocal?: boolean) {\r\n    message = this.appMessagesManager.getMessageByPeer(message.peerId, message.mid) as typeof message;\r\n\r\n    if(reaction._ === 'availableReaction') {\r\n      reaction = {\r\n        _: 'reactionEmoji',\r\n        emoticon: reaction.reaction\r\n      };\r\n    }\r\n\r\n    const limit = await this.apiManager.getLimit('reactions');\r\n\r\n    const lastSendingTimeKey = message.peerId + '_' + message.mid;\r\n    const lastSendingTime = this.lastSendingTimes.get(lastSendingTimeKey);\r\n    if(lastSendingTime) {\r\n      return;\r\n    } else {\r\n      this.lastSendingTimes.set(lastSendingTimeKey, Date.now());\r\n      setTimeout(() => {\r\n        this.lastSendingTimes.delete(lastSendingTimeKey);\r\n      }, 333);\r\n    }\r\n\r\n    const {peerId, mid} = message;\r\n    const myPeer = this.appMessagesManager.generateFromId(peerId) ?? this.appPeersManager.getOutputPeer(peerId);\r\n    const myPeerId = this.appPeersManager.getPeerId(myPeer);\r\n\r\n    const unsetReactionCount = (reactionCount: ReactionCount) => {\r\n      --reactionCount.count;\r\n      delete reactionCount.chosen_order;\r\n\r\n      if(reactionsEqual(reaction as Reaction, reactionCount.reaction)) {\r\n        reaction = undefined as Reaction;\r\n      }\r\n\r\n      if(!reactionCount.count) {\r\n        indexOfAndSplice(reactions.results, reactionCount);\r\n      }/*  else {\r\n        insertInDescendSortedArray(reactions.results, chosenReaction, 'count', chosenReactionIdx);\r\n      } */\r\n\r\n      if(reactions.recent_reactions) {\r\n        findAndSplice(reactions.recent_reactions, (recentReaction) => reactionsEqual(recentReaction.reaction, reactionCount.reaction) && this.appPeersManager.getPeerId(recentReaction.peer_id) === myPeerId);\r\n      }\r\n\r\n      if(!reactions.results.length) {\r\n        reactions = undefined;\r\n      }\r\n    };\r\n\r\n    const canSeeList = message.reactions?.pFlags?.can_see_list || !this.appPeersManager.isBroadcast(message.peerId) || message.peerId.isUser();\r\n    if(!message.reactions) {\r\n      message.reactions = {\r\n        _: 'messageReactions',\r\n        results: [],\r\n        recent_reactions: canSeeList ? [] : undefined,\r\n        pFlags: {\r\n          can_see_list: canSeeList || undefined\r\n        }\r\n      };\r\n    }\r\n\r\n    let reactions = onlyLocal ? message.reactions : copy(message.reactions);\r\n    const chosenReactions = reactions.results.filter((reactionCount) => reactionCount.chosen_order !== undefined);\r\n    chosenReactions.sort((a, b) => b.chosen_order - a.chosen_order);\r\n    const unsetReactions: ReactionCount[] = [];\r\n    const chosenReactionIdx = chosenReactions.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\r\n    if(chosenReactionIdx !== -1) unsetReactions.push(...chosenReactions.splice(chosenReactionIdx, 1));\r\n    unsetReactions.push(...chosenReactions.splice(limit - +(chosenReactionIdx === -1)));\r\n    unsetReactions.forEach((reactionCount) => {\r\n      chosenReactions.forEach((chosenReactionCount) => {\r\n        if(chosenReactionCount.chosen_order > reactionCount.chosen_order) {\r\n          --chosenReactionCount.chosen_order;\r\n        }\r\n      });\r\n\r\n      unsetReactionCount(reactionCount);\r\n    });\r\n\r\n    const chosenReactionsLength = chosenReactions.length;\r\n    chosenReactions.forEach((reactionCount, idx) => {\r\n      reactionCount.chosen_order = chosenReactionsLength - 1 - idx;\r\n    });\r\n\r\n    if(reaction) {\r\n      if(!reactions) {\r\n        reactions/*  = message.reactions */ = {\r\n          _: 'messageReactions',\r\n          results: [],\r\n          pFlags: {}\r\n        };\r\n\r\n        if(canSeeList) {\r\n          reactions.pFlags.can_see_list = true;\r\n        }\r\n      }\r\n\r\n      let reactionCountIdx = reactions.results.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\r\n      let reactionCount = reactionCountIdx !== -1 && reactions.results[reactionCountIdx];\r\n      if(!reactionCount) {\r\n        reactionCount = {\r\n          _: 'reactionCount',\r\n          count: 0,\r\n          reaction\r\n        };\r\n\r\n        reactionCountIdx = reactions.results.push(reactionCount) - 1;\r\n      }\r\n\r\n      ++reactionCount.count;\r\n      reactionCount.chosen_order = chosenReactions.length ? chosenReactions[0].chosen_order + 1 : 0;\r\n      chosenReactions.unshift(reactionCount);\r\n\r\n      if(!reactions.recent_reactions && canSeeList) {\r\n        reactions.recent_reactions = [];\r\n      }\r\n\r\n      if(reactions.recent_reactions) {\r\n        const peerReaction: MessagePeerReaction = {\r\n          _: 'messagePeerReaction',\r\n          reaction,\r\n          peer_id: myPeer,\r\n          pFlags: {},\r\n          date: tsNow(true)\r\n        };\r\n\r\n        if(!this.appPeersManager.isMegagroup(peerId) && false) {\r\n          reactions.recent_reactions.push(peerReaction);\r\n          reactions.recent_reactions = reactions.recent_reactions.slice(-3);\r\n        } else {\r\n          reactions.recent_reactions.unshift(peerReaction);\r\n          reactions.recent_reactions = reactions.recent_reactions.slice(0, 3);\r\n        }\r\n      }\r\n\r\n      // insertInDescendSortedArray(reactions.results, reactionCount, 'count', reactionCountIdx);\r\n    }\r\n\r\n    const availableReactions = this.availableReactions;\r\n    if(reactions && availableReactions?.length) {\r\n      const indexes: Map<DocId | string, number> = new Map();\r\n      availableReactions.forEach((availableReaction, idx) => {\r\n        indexes.set(availableReaction.reaction, idx);\r\n      });\r\n\r\n      reactions.results.sort((a, b) => {\r\n        const id1 = (a.reaction as Reaction.reactionCustomEmoji).document_id || (a.reaction as Reaction.reactionEmoji).emoticon;\r\n        const id2 = (b.reaction as Reaction.reactionCustomEmoji).document_id || (b.reaction as Reaction.reactionEmoji).emoticon;\r\n        return (b.count - a.count) || ((indexes.get(id1) ?? 0) - (indexes.get(id2) ?? 0));\r\n      });\r\n    }\r\n\r\n    if(onlyLocal) {\r\n      message.reactions = reactions;\r\n      this.rootScope.dispatchEvent('messages_reactions', [{message, changedResults: []}]);\r\n      return Promise.resolve();\r\n    }\r\n\r\n    this.apiUpdatesManager.processLocalUpdate({\r\n      _: 'updateMessageReactions',\r\n      peer: message.peer_id,\r\n      msg_id: message.id,\r\n      reactions: reactions,\r\n      local: true\r\n    });\r\n\r\n    const promiseKey = [peerId, mid].join('-');\r\n    const msgId = getServerMessageId(mid);\r\n    const promise = this.apiManager.invokeApi('messages.sendReaction', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: msgId,\r\n      reaction: chosenReactions.map((reactionCount) => reactionCount.reaction).reverse()\r\n    }).then((updates) => {\r\n      assumeType<Updates.updates>(updates);\r\n\r\n      const editMessageUpdateIdx = updates.updates.findIndex((update) => update._ === 'updateEditMessage' || update._ === 'updateEditChannelMessage');\r\n      if(editMessageUpdateIdx !== -1) {\r\n        const editMessageUpdate = updates.updates[editMessageUpdateIdx] as Update.updateEditMessage | Update.updateEditChannelMessage;\r\n        updates.updates[editMessageUpdateIdx] = {\r\n          _: 'updateMessageReactions',\r\n          msg_id: msgId,\r\n          peer: this.appPeersManager.getOutputPeer(peerId),\r\n          reactions: (editMessageUpdate.message as Message.message).reactions,\r\n          pts: editMessageUpdate.pts,\r\n          pts_count: editMessageUpdate.pts_count\r\n        };\r\n      }\r\n\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    }).catch((err: ApiError) => {\r\n      if(err.type === 'REACTION_INVALID' && this.sendReactionPromises.get(promiseKey) === promise) {\r\n        this.sendReaction(message, chosenReactions[0]?.reaction, true);\r\n      }\r\n    }).finally(() => {\r\n      if(this.sendReactionPromises.get(promiseKey) === promise) {\r\n        this.sendReactionPromises.delete(promiseKey);\r\n      }\r\n    });\r\n\r\n    this.sendReactionPromises.set(promiseKey, promise);\r\n    return promise;\r\n  }\r\n\r\n  public getRandomGenericAnimation() {\r\n    return callbackify(this.appStickersManager.getLocalStickerSet('inputStickerSetEmojiGenericAnimations'), (messagesStickerSet) => {\r\n      const length = messagesStickerSet.documents.length;\r\n      if(!length) {\r\n        return;\r\n      }\r\n\r\n      const document = messagesStickerSet.documents[Math.floor(Math.random() * length)];\r\n      return document as Document.document;\r\n    });\r\n  }\r\n}\r\n","export default function fixBase64String(str: string, toUrl: boolean) {\r\n  if(toUrl) {\r\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\r\n  } else {\r\n    return str.replace(/-/g, '+').replace(/_/g, '/');\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDocument} from './appDocsManager';\r\nimport type {DownloadOptions} from '../mtproto/apiFileManager';\r\nimport {Document, InputFileLocation, InputStickerSet, MessagesAllStickers, MessagesFavedStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered, Update, VideoSize} from '../../layer';\r\nimport {Modify} from '../../types';\r\nimport AppStorage from '../storage';\r\nimport DATABASE_STATE from '../../config/databases/state';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport fixBase64String from '../../helpers/fixBase64String';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport {AppManager} from './manager';\r\nimport fixEmoji from '../richTextProcessor/fixEmoji';\r\nimport ctx from '../../environment/ctx';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport getDocumentInput from './utils/docs/getDocumentInput';\r\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\r\nimport tsNow from '../../helpers/tsNow';\r\n\r\nconst CACHE_TIME = 3600e3;\r\n\r\ntype LOCAL_STICKER_SET_ID = Extract<\r\n  InputStickerSet['_'],\r\n  'inputStickerSetAnimatedEmoji' | 'inputStickerSetAnimatedEmojiAnimations' |\r\n  'inputStickerSetPremiumGifts' | 'inputStickerSetEmojiGenericAnimations' |\r\n  'inputStickerSetEmojiDefaultStatuses' | 'inputStickerSetEmojiDefaultTopicIcons'\r\n>;\r\n\r\ntype LOCAL_ID = 'EMOJI' | 'EMOJI_ANIMATIONS' | 'PREMIUM_GIFTS' | 'GENERIC_ANIMATIONS' | 'DEFAULT_STATUSES' | 'DEFAULT_TOPIC_ICONS';\r\n\r\nconst LOCAL_IDS: {[key in LOCAL_ID]: LOCAL_STICKER_SET_ID} = {\r\n  EMOJI: 'inputStickerSetAnimatedEmoji',\r\n  EMOJI_ANIMATIONS: 'inputStickerSetAnimatedEmojiAnimations',\r\n  PREMIUM_GIFTS: 'inputStickerSetPremiumGifts',\r\n  GENERIC_ANIMATIONS: 'inputStickerSetEmojiGenericAnimations',\r\n  DEFAULT_STATUSES: 'inputStickerSetEmojiDefaultStatuses',\r\n  DEFAULT_TOPIC_ICONS: 'inputStickerSetEmojiDefaultTopicIcons'\r\n};\r\n\r\nconst LOCAL_IDS_SET: Set<LOCAL_STICKER_SET_ID> = new Set(Object.values(LOCAL_IDS) as any);\r\n\r\n// let TEST_FILE_REFERENCE_REFRESH = true;\r\n\r\nexport type MyStickerSetInput = {\r\n  id: StickerSet.stickerSet['id'],\r\n  access_hash?: StickerSet.stickerSet['access_hash']\r\n};\r\n\r\nexport type MyMessagesStickerSet = MessagesStickerSet.messagesStickerSet;\r\n\r\nexport class AppStickersManager extends AppManager {\r\n  private storage = new AppStorage<Record<Long, MyMessagesStickerSet>, typeof DATABASE_STATE>(DATABASE_STATE, 'stickerSets');\r\n\r\n  private getStickerSetPromises: {[setId: Long]: Promise<MyMessagesStickerSet>};\r\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<MyDocument[]>};\r\n\r\n  private greetingStickers: MyDocument[];\r\n  private getGreetingStickersTimeout: number;\r\n  private getGreetingStickersPromise: Promise<void>;\r\n\r\n  private sounds: Record<string, MyDocument>;\r\n  private getAnimatedEmojiSoundsPromise: Promise<void>;\r\n\r\n  private favedStickers: MyDocument[];\r\n  private recentStickers: MyDocument[];\r\n\r\n  private names: Record<string, InputStickerSet.inputStickerSetID>;\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      setTimeout(() => {\r\n        this.getAnimatedEmojiStickerSet();\r\n\r\n        Promise.resolve(this.getLocalStickerSet(LOCAL_IDS.GENERIC_ANIMATIONS)).then(async(messagesStickerSet) => {\r\n          for(const doc of messagesStickerSet.documents) {\r\n            await this.apiFileManager.downloadMedia({media: doc as Document.document});\r\n          }\r\n        });\r\n        // this.getFavedStickersStickers();\r\n      }, 1000);\r\n\r\n      if(!this.getGreetingStickersPromise) {\r\n        this.getGreetingStickersTimeout ??= ctx.setTimeout(() => {\r\n          this.getGreetingStickersTimeout = undefined;\r\n          this.getGreetingSticker(true);\r\n        }, 5000);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('app_config', () => this.onStickersUpdated('faved', true));\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateNewStickerSet: (update) => {\r\n        const stickerSet = update.stickerset as MyMessagesStickerSet;\r\n        this.saveStickerSet(stickerSet, stickerSet.set.id);\r\n        this.rootScope.dispatchEvent('stickers_installed', stickerSet.set);\r\n      },\r\n\r\n      updateRecentStickers: () => this.onStickersUpdated('recent', true),\r\n\r\n      updateFavedStickers: () => this.onStickersUpdated('faved', true),\r\n\r\n      updateMoveStickerSetToTop: (update) => {\r\n        this.rootScope.dispatchEvent('stickers_top', update.stickerset);\r\n      },\r\n\r\n      updateStickerSetsOrder: (update) => {\r\n        this.rootScope.dispatchEvent('stickers_order', {\r\n          type: update.pFlags.emojis ? 'emojis' : (update.pFlags.masks ? 'masks' : 'stickers'),\r\n          order: update.order\r\n        });\r\n      }\r\n\r\n      // updateStickerSets: (update) => {\r\n      //   if(update.pFlags.masks) {\r\n      //     return;\r\n      //   }\r\n\r\n      //   this.storage.clear(false);\r\n\r\n      //   if(update.pFlags.emojis) {\r\n\r\n      //   } else {\r\n      //     this.favedStickers = undefined;\r\n      //     this.recentStickers = undefined;\r\n      //     this.onStickersUpdated('recent', true);\r\n      //     this.onStickersUpdated('faved', true);\r\n      //   }\r\n      // }\r\n    });\r\n  }\r\n\r\n  public clear = (init?: boolean) => {\r\n    this.getStickerSetPromises = {};\r\n    this.getStickersByEmoticonsPromises = {};\r\n    this.sounds = {};\r\n    this.names = {};\r\n  };\r\n\r\n  private async onStickersUpdated(type: 'faved' | 'recent', overwrite: boolean) {\r\n    const stickers = await (type === 'faved' ? this.getFavedStickersStickers(overwrite) : this.getRecentStickersStickers(overwrite));\r\n    this.rootScope.dispatchEvent('stickers_updated', {\r\n      type,\r\n      stickers\r\n    });\r\n  }\r\n\r\n  public getGreetingSticker(justPreload = false) {\r\n    if(this.getGreetingStickersTimeout) {\r\n      clearTimeout(this.getGreetingStickersTimeout);\r\n      this.getGreetingStickersTimeout = undefined;\r\n    }\r\n\r\n    if(!this.getGreetingStickersPromise) {\r\n      this.getGreetingStickersPromise = this.getStickersByEmoticon({\r\n        emoticon: '👋⭐️',\r\n        includeServerStickers: true\r\n      }).then((docs) => {\r\n        if(!docs.length) throw 'NO_STICKERS';\r\n        this.greetingStickers = docs.slice() as Document.document[];\r\n        this.greetingStickers.sort((a, b) => Math.random() - Math.random());\r\n      });\r\n    }\r\n\r\n    return this.getGreetingStickersPromise.then(() => {\r\n      let doc: Document.document;\r\n      if(!justPreload) {\r\n        doc = this.greetingStickers.shift();\r\n        this.greetingStickers.push(doc);\r\n      }\r\n\r\n      this.apiFileManager.downloadMedia({media: this.greetingStickers[0]}); // preload next sticker\r\n\r\n      return doc;\r\n    });\r\n  }\r\n\r\n  private saveStickers(docs: Document[]) {\r\n    forEachReverse(docs, (doc, idx) => {\r\n      doc = this.appDocsManager.saveDoc(doc);\r\n\r\n      if(!doc) docs.splice(idx, 1);\r\n      else docs[idx] = doc;\r\n    });\r\n  }\r\n\r\n  private canUseStickerSetCache(set: MyMessagesStickerSet, useCache?: boolean) {\r\n    return set && set.documents?.length && ((Date.now() - set.refreshTime) < CACHE_TIME || useCache);\r\n  }\r\n\r\n  public getStickerSet(set: MyStickerSetInput, params: Partial<{\r\n    overwrite: boolean,\r\n    useCache: boolean,\r\n    saveById: boolean\r\n  }> = {}): Promise<MyMessagesStickerSet> | MyMessagesStickerSet {\r\n    let {id} = set;\r\n    if(!set.access_hash) {\r\n      set = this.names[id] || set;\r\n      id = set.id;\r\n    }\r\n\r\n    if(this.getStickerSetPromises[id]) {\r\n      return this.getStickerSetPromises[id];\r\n    }\r\n\r\n    if(!params.overwrite) {\r\n      const cachedSet = this.storage.getFromCache(id);\r\n      if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\r\n        return cachedSet;\r\n      }\r\n    }\r\n\r\n    const promise = this.getStickerSetPromises[id] = new Promise(async(resolve) => {\r\n      if(!params.overwrite) {\r\n        const cachedSet = await this.storage.get(id);\r\n        if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\r\n          this.saveStickers(cachedSet.documents);\r\n          resolve(cachedSet);\r\n\r\n          if(this.getStickerSetPromises[id] === promise) {\r\n            delete this.getStickerSetPromises[id];\r\n          }\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      try {\r\n        const stickerSet = await this.apiManager.invokeApi('messages.getStickerSet', {\r\n          stickerset: this.getStickerSetInput(set),\r\n          hash: 0\r\n        }) as MyMessagesStickerSet;\r\n\r\n        const saveById = params.saveById ? id : stickerSet.set.id;\r\n        this.saveStickerSet(stickerSet, saveById);\r\n\r\n        resolve(stickerSet);\r\n      } catch(err) {\r\n        resolve(null);\r\n      }\r\n\r\n      if(this.getStickerSetPromises[id] === promise) {\r\n        delete this.getStickerSetPromises[id];\r\n      }\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  public getLocalStickerSet(id: LOCAL_STICKER_SET_ID) {\r\n    return this.getStickerSet({id}, {saveById: true});\r\n  }\r\n\r\n  public getAnimatedEmojiStickerSet() {\r\n    return Promise.all([\r\n      this.getLocalStickerSet(LOCAL_IDS.EMOJI),\r\n      this.getLocalStickerSet(LOCAL_IDS.EMOJI_ANIMATIONS),\r\n      this.getAnimatedEmojiSounds(),\r\n      this.getLocalStickerSet(LOCAL_IDS.GENERIC_ANIMATIONS)\r\n    ]).then(([emoji, animations]) => {\r\n      return {emoji, animations};\r\n    });\r\n  }\r\n\r\n  public getAnimatedEmojiSounds(overwrite?: boolean) {\r\n    if(this.getAnimatedEmojiSoundsPromise && !overwrite) return this.getAnimatedEmojiSoundsPromise;\r\n    const promise = this.getAnimatedEmojiSoundsPromise = Promise.all([\r\n      this.apiManager.getAppConfig(overwrite),\r\n      this.apiManager.getConfig()\r\n    ]).then(([appConfig, config]) => {\r\n      if(this.getAnimatedEmojiSoundsPromise !== promise) {\r\n        return;\r\n      }\r\n\r\n      for(const emoji in appConfig.emojies_sounds) {\r\n        const sound = appConfig.emojies_sounds[emoji];\r\n        const bytesStr = atob(fixBase64String(sound.file_reference_base64, false));\r\n        const bytes = new Uint8Array(bytesStr.length);\r\n        for(let i = 0, length = bytes.length; i < length; ++i) {\r\n          bytes[i] = bytesStr[i].charCodeAt(0);\r\n        }\r\n\r\n        // if(TEST_FILE_REFERENCE_REFRESH) {\r\n        //   bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4] = 0;\r\n        //   sound.access_hash += '999';\r\n        // }\r\n\r\n        const doc = this.appDocsManager.saveDoc({\r\n          _: 'document',\r\n          pFlags: {},\r\n          id: sound.id,\r\n          access_hash: sound.access_hash,\r\n          attributes: [{\r\n            _: 'documentAttributeAudio',\r\n            duration: 1,\r\n            pFlags: {\r\n              voice: true\r\n            }\r\n          }],\r\n          date: 0,\r\n          dc_id: config.this_dc,\r\n          file_reference: bytes,\r\n          mime_type: 'audio/ogg'\r\n          // size: 101010 // test loading everytime\r\n        }, {\r\n          type: 'emojiesSounds'\r\n        });\r\n\r\n        this.sounds[emoji] = doc;\r\n      }\r\n\r\n      // if(TEST_FILE_REFERENCE_REFRESH) {\r\n      //   TEST_FILE_REFERENCE_REFRESH = false;\r\n      // }\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  public async getRecentStickers(overwrite?: boolean): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\r\n    stickers: Document[]\r\n  }>> {\r\n    const res = await this.apiManager.invokeApiHashable({\r\n      method: 'messages.getRecentStickers',\r\n      processResult: (res) => {\r\n        assumeType<MessagesRecentStickers.messagesRecentStickers>(res);\r\n\r\n        this.recentStickers = res.stickers as MyDocument[];\r\n        this.saveStickers(res.stickers);\r\n        return res;\r\n      },\r\n      overwrite\r\n    });\r\n\r\n    return res;\r\n  }\r\n\r\n  public getRecentStickersStickers(overwrite?: boolean) {\r\n    if(overwrite) this.recentStickers = undefined;\r\n    else if(this.recentStickers) return this.recentStickers;\r\n    return this.getRecentStickers(overwrite).then(() => this.recentStickers);\r\n  }\r\n\r\n  public async saveRecentSticker(docId: DocId, unsave?: boolean, attached?: boolean) {\r\n    await this.getRecentStickersStickers();\r\n\r\n    const doc = this.appDocsManager.getDoc(docId);\r\n\r\n    findAndSplice(this.recentStickers, (_doc) => _doc.id === docId);\r\n    if(!unsave) {\r\n      this.recentStickers.unshift(doc);\r\n\r\n      const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\r\n      for(const emoticon in this.getStickersByEmoticonsPromises) {\r\n        const promise = this.getStickersByEmoticonsPromises[emoticon];\r\n        promise.then((stickers) => {\r\n          const _doc = findAndSplice(stickers, (_doc) => _doc.id === doc.id);\r\n          if(_doc) {\r\n            stickers.unshift(_doc);\r\n          } else if(emoticon.includes(docEmoticon)) {\r\n            stickers.unshift(doc);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'recent', faved: !unsave, document: doc});\r\n\r\n    if(unsave) {\r\n      this.onStickersUpdated('recent', false);\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.saveRecentSticker', {\r\n      id: getDocumentInput(doc),\r\n      unsave,\r\n      attached\r\n    });\r\n  }\r\n\r\n  private cleanEmoji(emoji: string) {\r\n    return emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\r\n  }\r\n\r\n  public getAnimatedEmojiSticker(emoji: string, isAnimation?: boolean) {\r\n    const id = isAnimation ? LOCAL_IDS.EMOJI_ANIMATIONS : LOCAL_IDS.EMOJI;\r\n    const stickerSet = this.storage.getFromCache(id);\r\n    // const stickerSet = await this.getStickerSet({id});\r\n    if(!stickerSet?.documents) return;\r\n\r\n    if(isAnimation) {\r\n      if(['🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎'].includes(emoji)) {\r\n        emoji = '❤️';\r\n      }\r\n    }\r\n\r\n    emoji = this.cleanEmoji(emoji);\r\n    const pack = stickerSet.packs.find((p) => p.emoticon === emoji);\r\n    return pack ? this.appDocsManager.getDoc(pack.documents[0]) : undefined;\r\n  }\r\n\r\n  public getAnimatedEmojiSoundDocument(emoji: string) {\r\n    return this.sounds[this.cleanEmoji(emoji)];\r\n  }\r\n\r\n  public preloadAnimatedEmojiSticker(emoji: string) {\r\n    const preloadEmojiPromise = this.getAnimatedEmojiStickerSet().then(() => {\r\n      return this.getAnimatedEmojiSticker(emoji);\r\n    });\r\n\r\n    return Promise.all([\r\n      preloadEmojiPromise,\r\n      this.preloadAnimatedEmojiStickerAnimation(emoji)\r\n    ]).then(([doc, a]) => {\r\n      return {\r\n        doc: doc,\r\n        animation: a?.doc,\r\n        sound: a?.sound\r\n      };\r\n    });\r\n  }\r\n\r\n  public preloadAnimatedEmojiStickerAnimation(emoji: string) {\r\n    return this.getAnimatedEmojiStickerSet().then(() => {\r\n      return this.getAnimatedEmojiSticker(emoji, true);\r\n    }).then((doc) => {\r\n      if(!doc) {\r\n        return;\r\n      }\r\n\r\n      const sound = this.getAnimatedEmojiSoundDocument(emoji);\r\n      return Promise.all([\r\n        this.preloadSticker(doc.id),\r\n        sound ? this.preloadSticker(sound.id) : undefined\r\n      ]).then(() => {\r\n        return {doc, sound};\r\n      });\r\n    });\r\n  }\r\n\r\n  public preloadSticker(docId: DocId, isPremiumEffect?: boolean) {\r\n    const doc = this.appDocsManager.getDoc(docId);\r\n    return this.apiFileManager.downloadMedia({media: doc, thumb: isPremiumEffect ? doc.video_thumbs?.[0] as Extract<VideoSize, VideoSize.videoSize> : undefined});\r\n  }\r\n\r\n  private saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: DocId) {\r\n    const newSet: MessagesStickerSet = {\r\n      _: 'messages.stickerSet',\r\n      set: res.set,\r\n      packs: res.packs,\r\n      documents: res.documents as Document[],\r\n      keywords: res.keywords\r\n    };\r\n\r\n    let stickerSet = this.storage.getFromCache(id);\r\n    if(stickerSet) {\r\n      Object.assign(stickerSet, newSet);\r\n    } else {\r\n      stickerSet = this.storage.setToCache(id, newSet);\r\n    }\r\n\r\n    if(stickerSet.set.short_name) {\r\n      this.names[stickerSet.set.short_name] = this.getStickerSetInput(newSet.set) as any;\r\n    }\r\n\r\n    this.saveStickers(res.documents);\r\n\r\n    // console.log('stickers wrote', this.stickerSets);\r\n    const needSave = stickerSet.set.installed_date || LOCAL_IDS_SET.has(id as any);\r\n    stickerSet.refreshTime = Date.now();\r\n    this.storage.set({[id]: stickerSet}, !needSave);\r\n  }\r\n\r\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet): DownloadOptions {\r\n    const thumb = stickerSet.thumbs.find((thumb) => thumb._ === 'photoSize') as PhotoSize.photoSize;\r\n    const dcId = stickerSet.thumb_dc_id;\r\n\r\n    const isAnimated = stickerSet.pFlags?.animated;\r\n\r\n    const input: InputFileLocation.inputStickerSetThumb = {\r\n      _: 'inputStickerSetThumb',\r\n      stickerset: this.getStickerSetInput(stickerSet),\r\n      thumb_version: stickerSet.thumb_version\r\n    };\r\n\r\n    return {dcId, location: input, size: thumb.size, mimeType: isAnimated ? 'application/x-tgsticker' : 'image/webp'};\r\n  }\r\n\r\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\r\n    const thumb = stickerSet.thumb;\r\n    const dcId = stickerSet.thumb_dc_id;\r\n\r\n    const isAnimated = stickerSet.pFlags?.animated;\r\n\r\n    const input: inputStickerSetThumb = {\r\n      _: 'inputStickerSetThumb',\r\n      stickerset: this.getStickerSetInput(stickerSet),\r\n      volume_id: thumb.location.volume_id,\r\n      local_id: thumb.location.local_id\r\n    };\r\n\r\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\r\n    return url;\r\n\r\n    //return promise;\r\n  } */\r\n\r\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\r\n    if(LOCAL_IDS_SET.has(set.id as any)) {\r\n      return {\r\n        _: set.id as any\r\n      };\r\n    } else if(!set.access_hash) {\r\n      return {\r\n        _: 'inputStickerSetShortName',\r\n        short_name: '' + set.id\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputStickerSetID',\r\n        id: set.id,\r\n        access_hash: set.access_hash\r\n      };\r\n    }\r\n  }\r\n\r\n  public async getFeaturedStickers() {\r\n    const res = await this.apiManager.invokeApiHashable({\r\n      method: 'messages.getFeaturedStickers',\r\n      processResult: (res) => {\r\n        assumeType<MessagesFeaturedStickers.messagesFeaturedStickers>(res);\r\n\r\n        forEachReverse(res.sets, (covered, idx, arr) => {\r\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\r\n            arr.splice(idx, 1);\r\n          }\r\n        });\r\n\r\n        res.sets.forEach((covered) => {\r\n          this.saveStickerSet({set: covered.set, documents: [], packs: [], keywords: []}, covered.set.id);\r\n        });\r\n\r\n        return res;\r\n      }\r\n    });\r\n\r\n    return res.sets;\r\n  }\r\n\r\n  public getPromoPremiumStickers() {\r\n    return this.getStickersByEmoticon({\r\n      emoticon: '⭐️⭐️',\r\n      includeServerStickers: true\r\n    });\r\n  }\r\n\r\n  public getPremiumStickers() {\r\n    return this.getStickersByEmoticon({\r\n      emoticon: '📂⭐️',\r\n      includeServerStickers: true,\r\n      excludePremiumEffectStickers: true\r\n    });\r\n  }\r\n\r\n  public getFavedStickers(overwrite?: boolean) {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getFavedStickers',\r\n      processResult: (favedStickers) => {\r\n        assumeType<MessagesFavedStickers.messagesFavedStickers>(favedStickers);\r\n        this.saveStickers(favedStickers.stickers);\r\n        this.favedStickers = favedStickers.stickers as MyDocument[];\r\n        return favedStickers;\r\n      },\r\n      overwrite\r\n    });\r\n  }\r\n\r\n  public getFavedStickersStickers(overwrite?: boolean) {\r\n    if(overwrite) this.favedStickers = undefined;\r\n    else if(this.favedStickers) return this.favedStickers;\r\n    return this.getFavedStickers(overwrite).then(() => this.favedStickers);\r\n  }\r\n\r\n  public getFavedStickersLimit() {\r\n    return this.apiManager.getLimit('favedStickers');\r\n  }\r\n\r\n  public async faveSticker(docId: DocId, unfave?: boolean) {\r\n    if(!this.favedStickers) {\r\n      await this.getFavedStickersStickers();\r\n    }\r\n\r\n    const limit = await this.getFavedStickersLimit();\r\n\r\n    const doc = this.appDocsManager.getDoc(docId);\r\n    findAndSplice(this.favedStickers, (_doc) => _doc.id === doc.id);\r\n\r\n    if(!unfave) {\r\n      this.favedStickers.unshift(doc);\r\n      const spliced = this.favedStickers.splice(limit, this.favedStickers.length - limit);\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'faved', faved: !unfave, document: doc});\r\n\r\n    return this.apiManager.invokeApi('messages.faveSticker', {\r\n      id: getDocumentInput(doc),\r\n      unfave\r\n    }).then(() => {\r\n      if(unfave) {\r\n        this.onStickersUpdated('faved', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\r\n    set = this.storage.getFromCache(set.id).set;\r\n\r\n    if(set.installed_date) {\r\n      const res = await this.apiManager.invokeApi('messages.uninstallStickerSet', {\r\n        stickerset: this.getStickerSetInput(set)\r\n      });\r\n\r\n      if(res) {\r\n        delete set.installed_date;\r\n        this.rootScope.dispatchEvent('stickers_deleted', set);\r\n        this.storage.delete(set.id, true);\r\n        return true;\r\n      }\r\n    } else {\r\n      const res = await this.apiManager.invokeApi('messages.installStickerSet', {\r\n        stickerset: this.getStickerSetInput(set),\r\n        archived: false\r\n      });\r\n\r\n      if(res) {\r\n        set.installed_date = tsNow(true);\r\n        this.rootScope.dispatchEvent('stickers_installed', set);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public toggleStickerSets(sets: StickerSet.stickerSet[]) {\r\n    return Promise.all(sets.map((set) => this.toggleStickerSet(set)));\r\n  }\r\n\r\n  public async searchStickerSets(query: string, excludeFeatured = true) {\r\n    const flags = excludeFeatured ? 1 : 0;\r\n    const res = await this.apiManager.invokeApiHashable({\r\n      method: 'messages.searchStickerSets',\r\n      params: {\r\n        flags,\r\n        exclude_featured: excludeFeatured || undefined,\r\n        q: query\r\n      },\r\n      processResult: (res) => {\r\n        assumeType<MessagesFoundStickerSets.messagesFoundStickerSets>(res);\r\n\r\n        forEachReverse(res.sets, (covered, idx, arr) => {\r\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\r\n            arr.splice(idx, 1);\r\n          }\r\n        });\r\n\r\n        res.sets.forEach((covered) => {\r\n          this.saveStickerSet({set: covered.set, documents: [], packs: [], keywords: []}, covered.set.id);\r\n        });\r\n\r\n        return res;\r\n      }\r\n    });\r\n\r\n    const foundSaved: StickerSetCovered[] = [];\r\n    const cache = this.storage.getCache();\r\n    for(const id in cache) {\r\n      const {set} = cache[id];\r\n\r\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find((c) => c.set.id === set.id)) {\r\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\r\n      }\r\n    }\r\n\r\n    return res.sets.concat(foundSaved);\r\n  }\r\n\r\n  private processAllStickersResult = (allStickers: MessagesAllStickers) => {\r\n    assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\r\n\r\n    forEachReverse(allStickers.sets, (stickerSet, idx, arr) => {\r\n      if(stickerSet.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\r\n        arr.splice(idx, 1);\r\n      }\r\n    });\r\n\r\n    return allStickers;\r\n  };\r\n\r\n  public getAllStickers() {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getAllStickers',\r\n      processResult: this.processAllStickersResult\r\n    });\r\n  }\r\n\r\n  public getEmojiStickers() {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getEmojiStickers',\r\n      processResult: this.processAllStickersResult\r\n    });\r\n  }\r\n\r\n  public preloadStickerSets() {\r\n    return this.getAllStickers().then((allStickers) => {\r\n      const sets = (allStickers as MessagesAllStickers.messagesAllStickers).sets;\r\n      return Promise.all(sets.map((set) => this.getStickerSet(set, {useCache: true})));\r\n    });\r\n  }\r\n\r\n  // TODO: detect \"🤷\" by \"🤷‍♂️\"\r\n  public getStickersByEmoticon({\r\n    emoticon,\r\n    includeOurStickers,\r\n    includeServerStickers,\r\n    excludePremiumEffectStickers\r\n  }: {\r\n    emoticon: string,\r\n    includeOurStickers?: boolean,\r\n    includeServerStickers?: boolean,\r\n    excludePremiumEffectStickers?: boolean\r\n  }) {\r\n    emoticon = fixEmoji(emoticon);\r\n    const cacheKey = emoticon + (includeOurStickers ? '1' : '0') + (includeServerStickers ? '1' : '0');\r\n    if(this.getStickersByEmoticonsPromises[cacheKey]) return this.getStickersByEmoticonsPromises[cacheKey];\r\n\r\n    return this.getStickersByEmoticonsPromises[cacheKey] = Promise.all([\r\n      includeServerStickers ? this.apiManager.invokeApiHashable({\r\n        method: 'messages.getStickers',\r\n        params: {\r\n          emoticon\r\n        },\r\n        processResult: (stickers) => stickers\r\n      }) : undefined,\r\n      includeOurStickers ? this.preloadStickerSets() : [],\r\n      includeOurStickers ? this.getRecentStickers() : undefined\r\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\r\n      const foundStickers = messagesStickers ? (messagesStickers as MessagesStickers.messagesStickers).stickers.map((sticker) => this.appDocsManager.saveDoc(sticker)) : [];\r\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\r\n\r\n      // console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\r\n\r\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\r\n        for(const pack of packs) {\r\n          const packEmoticon = fixEmoji(pack.emoticon);\r\n          if(packEmoticon.includes(emoticon)) {\r\n            for(const docId of pack.documents) {\r\n              const doc = this.appDocsManager.getDoc(docId);\r\n              (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      if(recentStickers) {\r\n        iteratePacks(recentStickers.packs);\r\n        const stickers = recentStickers.stickers;\r\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\r\n          s.sort((a, b) => stickers.indexOf(a) - stickers.indexOf(b));\r\n        });\r\n      }\r\n\r\n      for(const set of installedSets) {\r\n        iteratePacks(set.packs);\r\n      }\r\n\r\n      /* const entities = parseEntities(emoticon);\r\n      if(entities.length === 1) {\r\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\r\n          forEachReverse(s, (doc, idx) => {\r\n            const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\r\n            if(docEmoticon !== emoticon) {\r\n              s.splice(idx, 1);\r\n            }\r\n          });\r\n        });\r\n      } */\r\n\r\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter((doc) => !doc.animated) */;\r\n\r\n      forEachReverse(stickers, (sticker, idx, arr) => {\r\n        if((sticker.sticker === 3 && !getEnvironment().IS_WEBM_SUPPORTED) ||\r\n          (excludePremiumEffectStickers && !this.rootScope.premium && getStickerEffectThumb(sticker))) {\r\n          arr.splice(idx, 1);\r\n        }\r\n      });\r\n\r\n      return stickers;\r\n    });\r\n  }\r\n\r\n  public clearRecentStickers() {\r\n    if(this.recentStickers) {\r\n      this.recentStickers.length = 0;\r\n      this.onStickersUpdated('recent', false);\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.clearRecentStickers');\r\n  }\r\n\r\n  public reorderStickerSets(order: StickerSet.stickerSet['id'][], emojis?: boolean, masks?: boolean) {\r\n    return this.apiManager.invokeApi('messages.reorderStickerSets', {\r\n      emojis,\r\n      masks,\r\n      order\r\n    }).then(() => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateStickerSetsOrder',\r\n        order,\r\n        pFlags: {\r\n          emojis: emojis || undefined,\r\n          masks: masks || undefined\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function cleanUsername(username: string) {\r\n  return username && username.toLowerCase() || '';\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {User} from '../../../../layer';\r\nimport {REPLIES_PEER_ID} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function canSendToUser(user: User.user) {\r\n  return !!(user && !user.pFlags.deleted && user.id.toPeerId() !== REPLIES_PEER_ID);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport filterUnique from '../../helpers/array/filterUnique';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport cleanSearchText, {ProcessSearchTextOptions, processSearchText} from '../../helpers/cleanSearchText';\r\nimport cleanUsername from '../../helpers/cleanUsername';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {AccountEmojiStatuses, Chat, ContactsResolvedPeer, EmojiStatus, InputContact, InputGeoPoint, InputMedia, InputPeer, InputUser, User as MTUser, UserProfilePhoto, UserStatus} from '../../layer';\r\nimport parseEntities from '../richTextProcessor/parseEntities';\r\nimport wrapUrl from '../richTextProcessor/wrapUrl';\r\nimport SearchIndex from '../searchIndex';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\nimport canSendToUser from './utils/users/canSendToUser';\r\nimport {AppStoragesManager} from './appStoragesManager';\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport {NULL_PEER_ID, TEST_NO_STORIES} from '../mtproto/mtproto_config';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\n\r\nexport type User = MTUser.user;\r\nexport type TopPeerType = 'correspondents' | 'bots_inline';\r\nexport type MyTopPeer = {id: PeerId, rating: number};\r\n\r\nconst SEARCH_OPTIONS: ProcessSearchTextOptions = {\r\n  clearBadChars: true,\r\n  ignoreCase: true,\r\n  latinize: true,\r\n  includeTag: true\r\n};\r\n\r\nexport class AppUsersManager extends AppManager {\r\n  private storage: AppStoragesManager['storages']['users'];\r\n\r\n  private users: {[userId: UserId]: User};\r\n  private usernames: {[username: string]: PeerId};\r\n  private contactsIndex: SearchIndex<UserId>;\r\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\r\n  private contactsList: Set<UserId>;\r\n  private updatedContactsList: boolean;\r\n\r\n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\r\n\r\n  private defaultEmojiStatuses: MaybePromise<AccountEmojiStatuses>;\r\n  private recentEmojiStatuses: MaybePromise<AccountEmojiStatuses>;\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    setInterval(this.updateUsersStatuses, 60000);\r\n\r\n    this.rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateUserStatus: (update) => {\r\n        const userId = update.user_id;\r\n        const user = this.users[userId];\r\n        if(!user) {\r\n          return;\r\n        }\r\n\r\n        user.status = update.status;\r\n        if(user.status) {\r\n          if('expires' in user.status) {\r\n            user.status.expires -= this.timeManager.getServerTimeOffset();\r\n          }\r\n\r\n          if('was_online' in user.status) {\r\n            user.status.was_online -= this.timeManager.getServerTimeOffset();\r\n          }\r\n        }\r\n\r\n        // user.sortStatus = this.getUserStatusForSort(user.status);\r\n        this.rootScope.dispatchEvent('user_update', userId);\r\n        this.setUserToStateIfNeeded(user);\r\n      },\r\n\r\n      // updateUserPhoto: (update) => {\r\n      //   const userId = update.user_id;\r\n      //   const user = this.users[userId];\r\n      //   if(user) {\r\n      //     if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto)?.photo_id) {\r\n      //       return;\r\n      //     }\r\n\r\n      //     this.forceUserOnline(userId, update.date);\r\n\r\n      //     if(update.photo._ === 'userProfilePhotoEmpty') {\r\n      //       delete user.photo;\r\n      //     } else {\r\n      //       user.photo = safeReplaceObject(user.photo, update.photo);\r\n      //     }\r\n\r\n      //     this.setUserToStateIfNeeded(user);\r\n\r\n      //     this.rootScope.dispatchEvent('user_update', userId);\r\n      //     this.rootScope.dispatchEvent('avatar_update', userId.toPeerId());\r\n      //   } else console.warn('No user by id:', userId);\r\n      // },\r\n\r\n      updateUserName: (update) => {\r\n        const userId = update.user_id;\r\n        const user = this.users[userId];\r\n        if(!user) {\r\n          return;\r\n        }\r\n\r\n        this.forceUserOnline(userId);\r\n        this.saveApiUser({\r\n          ...user,\r\n          first_name: update.first_name,\r\n          last_name: update.last_name,\r\n          username: undefined,\r\n          usernames: update.usernames\r\n        }, true);\r\n      },\r\n\r\n      updateUserEmojiStatus: (update) => {\r\n        const userId = update.user_id;\r\n        const user = this.users[userId];\r\n        if(!user) {\r\n          return;\r\n        }\r\n\r\n        this.forceUserOnline(userId);\r\n        this.saveApiUser({\r\n          ...user,\r\n          emoji_status: update.emoji_status\r\n        }, true);\r\n      },\r\n\r\n      updateRecentEmojiStatuses: () => {\r\n        this.recentEmojiStatuses = undefined;\r\n        this.getRecentEmojiStatuses();\r\n      }\r\n    });\r\n\r\n    /* case 'updateContactLink':\r\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\r\n    break; */\r\n\r\n    return Promise.all([\r\n      this.appStateManager.getState(),\r\n      this.appStoragesManager.loadStorage('users')\r\n    ]).then(([state, {results: users, storage}]) => {\r\n      this.storage = storage;\r\n\r\n      this.saveApiUsers(users);\r\n      for(let i = 0, length = users.length; i < length; ++i) {\r\n        const user = users[i];\r\n        if(!user) {\r\n          continue;\r\n        }\r\n\r\n        if(state.contactsListCachedTime && (user.pFlags.contact || user.pFlags.mutual_contact)) {\r\n          this.pushContact(user.id);\r\n\r\n          if(!this.contactsFillPromise) {\r\n            this.contactsFillPromise = deferredPromise();\r\n            this.contactsFillPromise.resolve(this.contactsList);\r\n          }\r\n        }\r\n      }\r\n\r\n      // const contactsList = state.contactsList;\r\n      // if(Array.isArray(contactsList)) {\r\n      //   contactsList.forEach((userId) => {\r\n      //     this.pushContact(userId);\r\n      //   });\r\n\r\n      //   if(contactsList.length) {\r\n      //     this.contactsFillPromise = deferredPromise();\r\n      //     this.contactsFillPromise.resolve(this.contactsList);\r\n      //   }\r\n      // }\r\n\r\n      const recentSearch = state.recentSearch || [];\r\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\r\n        this.peersStorage.requestPeer(recentSearch[i], 'recentSearch');\r\n      }\r\n\r\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\r\n        if(!this.appPeersManager.isUser(peerId)) {\r\n          return;\r\n        }\r\n\r\n        const userId = peerId.toUserId();\r\n        if(!this.storage.getFromCache(userId)) {\r\n          this.storage.set({\r\n            [userId]: this.getUser(userId)\r\n          });\r\n        }\r\n      });\r\n\r\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\r\n        if(!this.appPeersManager.isUser(peerId)) {\r\n          return;\r\n        }\r\n\r\n        const userId = peerId.toUserId();\r\n        if(this.storage.getFromCache(userId)) {\r\n          this.storage.delete(userId);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public clear = (init = false) => {\r\n    if(!init) {\r\n      for(const userId in this.users) {\r\n        // const userId = +userId;\r\n        if(!userId) continue;\r\n        const peerId = userId.toPeerId();\r\n        if(!this.peersStorage.isPeerNeeded(peerId)) {\r\n          const user = this.users[userId];\r\n          this.modifyUsernamesCache(user, false);\r\n\r\n          this.storage.delete(userId);\r\n          delete this.users[userId];\r\n        }\r\n      }\r\n    } else {\r\n      this.users = {};\r\n      this.usernames = {};\r\n    }\r\n\r\n    this.getTopPeersPromises = {};\r\n    this.contactsIndex = this.createSearchIndex();\r\n    this.contactsFillPromise = undefined;\r\n    this.contactsList = new Set();\r\n    this.updatedContactsList = false;\r\n  };\r\n\r\n  public indexMyself() {\r\n    const userId = this.getSelf().id;\r\n    this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\r\n  }\r\n\r\n  public get userId() {\r\n    return this.rootScope.myId.toUserId();\r\n  }\r\n\r\n  private onContactsModified(fromServer?: boolean) {\r\n    // const contactsList = [...this.contactsList];\r\n    // this.appStateManager.pushToState('contactsList', contactsList);\r\n\r\n    if(fromServer) {\r\n      this.appStateManager.pushToState('contactsListCachedTime', tsNow(true));\r\n    }\r\n  }\r\n\r\n  public pushRecentSearch(peerId: PeerId) {\r\n    return this.appStateManager.getState().then((state) => {\r\n      const recentSearch = state.recentSearch || [];\r\n      if(recentSearch[0] !== peerId) {\r\n        indexOfAndSplice(recentSearch, peerId);\r\n        recentSearch.unshift(peerId);\r\n        if(recentSearch.length > 20) {\r\n          recentSearch.length = 20;\r\n        }\r\n\r\n        this.appStateManager.pushToState('recentSearch', recentSearch);\r\n        for(const peerId of recentSearch) {\r\n          this.peersStorage.requestPeer(peerId, 'recentSearch');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearRecentSearch() {\r\n    return this.appStateManager.getState().then((state) => {\r\n      const recentSearch = state.recentSearch || [];\r\n      for(const peerId of recentSearch) {\r\n        this.peersStorage.releasePeer(peerId, 'recentSearch');\r\n      }\r\n\r\n      recentSearch.length = 0;\r\n      this.appStateManager.pushToState('recentSearch', recentSearch);\r\n    });\r\n  }\r\n\r\n  public fillContacts() {\r\n    if(this.contactsFillPromise && this.updatedContactsList) {\r\n      return {\r\n        cached: this.contactsFillPromise.isFulfilled,\r\n        promise: this.contactsFillPromise\r\n      };\r\n    }\r\n\r\n    this.updatedContactsList = true;\r\n\r\n    const promise = deferredPromise<Set<UserId>>();\r\n    this.apiManager.invokeApi('contacts.getContacts').then((result) => {\r\n      if(result._ === 'contacts.contacts') {\r\n        this.contactsList.clear();\r\n\r\n        this.saveApiUsers(result.users);\r\n\r\n        result.contacts.forEach((contact) => {\r\n          this.pushContact(contact.user_id);\r\n        });\r\n\r\n        this.onContactsModified(true);\r\n\r\n        this.contactsFillPromise = promise;\r\n      }\r\n\r\n      promise.resolve(this.contactsList);\r\n    }, () => {\r\n      this.updatedContactsList = false;\r\n    });\r\n\r\n    return {\r\n      cached: this.contactsFillPromise?.isFulfilled,\r\n      promise: this.contactsFillPromise ||= promise\r\n    };\r\n  }\r\n\r\n  public resolveUsername(username: string): Promise<Chat | User> | Chat | User {\r\n    if(username[0] === '@') {\r\n      username = username.slice(1);\r\n    }\r\n\r\n    username = username.toLowerCase();\r\n    const peerId = this.usernames[username];\r\n    if(peerId) {\r\n      return this.appPeersManager.getPeer(peerId);\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'contacts.resolveUsername',\r\n      params: {username},\r\n      processResult: (resolvedPeer) => this.processResolvedPeer(resolvedPeer)\r\n    });\r\n  }\r\n\r\n  public resolveUserByUsername(username: string) {\r\n    return callbackify(this.resolveUsername(username), (peer) => {\r\n      return peer?._ === 'user' ? peer : undefined;\r\n    });\r\n  }\r\n\r\n  private processResolvedPeer(resolvedPeer: ContactsResolvedPeer.contactsResolvedPeer) {\r\n    this.saveApiUsers(resolvedPeer.users);\r\n    this.appChatsManager.saveApiChats(resolvedPeer.chats);\r\n\r\n    return this.appPeersManager.getPeer(getPeerId(resolvedPeer.peer)) as Chat | User;\r\n  }\r\n\r\n  public resolvePhone(phone: string) {\r\n    return this.apiManager.invokeApi('contacts.resolvePhone', {phone}).then((resolvedPeer) => {\r\n      return this.processResolvedPeer(resolvedPeer) as User;\r\n    });\r\n  }\r\n\r\n  private pushContact(id: UserId) {\r\n    this.contactsList.add(id);\r\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\r\n    this.peersStorage.requestPeer(id.toPeerId(), 'contact');\r\n  }\r\n\r\n  private popContact(id: UserId) {\r\n    this.contactsList.delete(id);\r\n    this.contactsIndex.indexObject(id, ''); // delete search index\r\n    this.peersStorage.releasePeer(id.toPeerId(), 'contact');\r\n  }\r\n\r\n  public getUserSearchText(id: UserId) {\r\n    const user = this.users[id];\r\n    if(!user) {\r\n      return '';\r\n    }\r\n\r\n    const arr: string[] = [\r\n      user.first_name,\r\n      user.last_name,\r\n      user.phone,\r\n      ...getPeerActiveUsernames(user),\r\n      // user.pFlags.self ? I18n.format('SavedMessages', true) : '',\r\n      user.pFlags.self ? 'Saved Messages' : ''\r\n    ];\r\n\r\n    return arr.filter(Boolean).join(' ');\r\n  }\r\n\r\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' | 'rating' = 'name') {\r\n    const contactListPromise = this.fillContacts().promise;\r\n    return Promise.all([\r\n      contactListPromise,\r\n      sortBy === 'rating' && this.getTopPeers('correspondents')\r\n    ]).then(([_contactsList, topPeers]) => {\r\n      let contactsList = [..._contactsList];\r\n      if(query) {\r\n        const results = this.contactsIndex.search(query);\r\n        const filteredContactsList = [...contactsList].filter((id) => results.has(id));\r\n\r\n        contactsList = filteredContactsList;\r\n      }\r\n\r\n      if(sortBy === 'name') {\r\n        contactsList.sort((userId1, userId2) => {\r\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\r\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\r\n          return sortName1.localeCompare(sortName2);\r\n        });\r\n      } else if(sortBy === 'online') {\r\n        contactsList.sort((userId1, userId2) => {\r\n          const status1 = this.getUserStatusForSort(this.getUser(userId1).status);\r\n          const status2 = this.getUserStatusForSort(this.getUser(userId2).status);\r\n          return status2 - status1;\r\n        });\r\n      } else if(sortBy === 'rating') {\r\n        if(!query.trim().replace(/@/g, '')) contactsList = topPeers.map((peer) => peer.id.toUserId());\r\n        else {\r\n          const ratingMap = new Map<UserId, number>(topPeers.map((peer) => [peer.id.toUserId(), peer.rating]));\r\n          contactsList.sort((userId1, userId2) => {\r\n            const rating1 = ratingMap.get(userId1) || 0;\r\n            const rating2 = ratingMap.get(userId2) || 0;\r\n            return rating2 - rating1;\r\n          });\r\n        }\r\n      }\r\n\r\n      const myUserId = this.userId;\r\n      indexOfAndSplice(contactsList, myUserId);\r\n      if(includeSaved) {\r\n        if(this.testSelfSearch(query)) {\r\n          contactsList.unshift(myUserId);\r\n        }\r\n      }\r\n\r\n      return contactsList;\r\n    });\r\n  }\r\n\r\n  public getContactsPeerIds(\r\n    query?: Parameters<AppUsersManager['getContacts']>[0],\r\n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1],\r\n    sortBy?: Parameters<AppUsersManager['getContacts']>[2],\r\n    limit?: number\r\n  ) {\r\n    return this.getContacts(query, includeSaved, sortBy).then((userIds) => {\r\n      const peerIds = userIds.map((userId) => userId.toPeerId(false));\r\n      if(limit) {\r\n        return peerIds.slice(0, limit);\r\n      }\r\n\r\n      return peerIds;\r\n    });\r\n  }\r\n\r\n  public toggleBlock(peerId: PeerId, block: boolean, blockMyStoriesFrom?: boolean) {\r\n    return this.apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\r\n      id: this.appPeersManager.getInputPeerById(peerId),\r\n      my_stories_from: blockMyStoriesFrom === undefined ? undefined : true\r\n    }).then(() => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePeerBlocked',\r\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\r\n        pFlags: {\r\n          blocked: block || undefined,\r\n          blocked_my_stories_from: blockMyStoriesFrom || undefined\r\n        }\r\n      });\r\n\r\n      this.appProfileManager.refreshPeerSettingsIfNeeded(peerId);\r\n    });\r\n  }\r\n\r\n  public testSelfSearch(query: string) {\r\n    const user = this.getSelf();\r\n    const index = this.createSearchIndex();\r\n    index.indexObject(user.id, this.getUserSearchText(user.id));\r\n    return index.search(query).has(user.id);\r\n  }\r\n\r\n  public createSearchIndex() {\r\n    return new SearchIndex<UserId>(SEARCH_OPTIONS);\r\n  }\r\n\r\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\r\n    if(!apiUsers || (apiUsers as any).saved) return;\r\n    (apiUsers as any).saved = true;\r\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\r\n  }\r\n\r\n  public modifyUsernamesCache(peer: Parameters<typeof getPeerActiveUsernames>[0], save: boolean) {\r\n    const usernames = getPeerActiveUsernames(peer);\r\n    if(!usernames.length) {\r\n      return;\r\n    }\r\n\r\n    const cleanedUsernames = usernames.map((username) => cleanUsername(username));\r\n    if(save) {\r\n      cleanedUsernames.forEach((searchUsername) => {\r\n        this.usernames[searchUsername] = peer.id.toPeerId(peer._ !== 'user');\r\n      });\r\n    } else {\r\n      cleanedUsernames.forEach((searchUsername) => {\r\n        delete this.usernames[searchUsername];\r\n      });\r\n    }\r\n  }\r\n\r\n  public setUsernameToCache(peer: Parameters<typeof getPeerActiveUsernames>[0], oldPeer?: typeof peer) {\r\n    if(\r\n      !oldPeer ||\r\n      (oldPeer as MTUser.user).username !== (peer as MTUser.user).username ||\r\n      !deepEqual((oldPeer as MTUser.user).usernames, (peer as MTUser.user).usernames)\r\n    ) {\r\n      this.modifyUsernamesCache(oldPeer, false);\r\n      this.modifyUsernamesCache(peer, true);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public saveApiUser(user: MTUser, override?: boolean) {\r\n    if(!user || user._ === 'userEmpty') return;\r\n\r\n    const userId = user.id;\r\n    const oldUser = this.users[userId];\r\n\r\n    // ! commented block can affect performance !\r\n    // if(oldUser && !override) {\r\n    //   console.log('saveApiUser same');\r\n    //   return;\r\n    // }\r\n\r\n    user.pFlags ??= {};\r\n\r\n    if(user.pFlags.min && oldUser !== undefined) {\r\n      return;\r\n    }\r\n\r\n    // * exclude from state\r\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\r\n\r\n    const changedUsername = this.setUsernameToCache(user, oldUser);\r\n\r\n    if(!oldUser ||\r\n      oldUser.sortName === undefined ||\r\n      oldUser.first_name !== user.first_name ||\r\n      oldUser.last_name !== user.last_name) {\r\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\r\n\r\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);\r\n    } else {\r\n      user.sortName = oldUser.sortName;\r\n    }\r\n\r\n    if(user.status) {\r\n      if((user.status as UserStatus.userStatusOnline).expires) {\r\n        (user.status as UserStatus.userStatusOnline).expires -= this.timeManager.getServerTimeOffset();\r\n      }\r\n\r\n      if((user.status as UserStatus.userStatusOffline).was_online) {\r\n        (user.status as UserStatus.userStatusOffline).was_online -= this.timeManager.getServerTimeOffset();\r\n      }\r\n    }\r\n\r\n    if((user as User).photo?._ === 'userProfilePhotoEmpty') {\r\n      delete (user as User).photo;\r\n    }\r\n\r\n    // user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\r\n\r\n    // if(!user.username && user.usernames) {\r\n    //   user.username = user.usernames.find((username) => username.pFlags.active).username;\r\n    // }\r\n\r\n    if(user.emoji_status?._ === 'emojiStatusEmpty') {\r\n      delete user.emoji_status;\r\n    }\r\n\r\n    const peerId = userId.toPeerId(false);\r\n    if(oldUser === undefined) {\r\n      this.users[userId] = user;\r\n      this.mirrorUser(user);\r\n    } else {\r\n      const changedTitle = user.first_name !== oldUser.first_name ||\r\n        user.last_name !== oldUser.last_name ||\r\n        changedUsername;\r\n\r\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\r\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\r\n      const changedPhoto = oldPhotoId !== newPhotoId;\r\n      const changedEmojiStatus = (oldUser.emoji_status as EmojiStatus.emojiStatus)?.document_id !==\r\n        (user.emoji_status as EmojiStatus.emojiStatus)?.document_id;\r\n\r\n      const changedPremium = oldUser.pFlags.premium !== user.pFlags.premium;\r\n      const changedAnyBadge = changedPremium ||\r\n        changedEmojiStatus ||\r\n        oldUser.pFlags.verified !== user.pFlags.verified ||\r\n        oldUser.pFlags.scam !== user.pFlags.scam ||\r\n        oldUser.pFlags.fake !== user.pFlags.fake;\r\n\r\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\r\n\r\n      } */\r\n\r\n      const wasContact = !!oldUser.pFlags.contact;\r\n      const newContact = !!user.pFlags.contact;\r\n\r\n      const storiesCallback = this.appStoriesManager.saveApiPeerStories(user, oldUser);\r\n\r\n      safeReplaceObject(oldUser, user);\r\n      this.mirrorUser(oldUser);\r\n\r\n      this.rootScope.dispatchEvent('user_update', userId);\r\n\r\n      if(wasContact !== newContact) {\r\n        this.onContactUpdated(userId, newContact, wasContact);\r\n      }\r\n\r\n      storiesCallback?.();\r\n\r\n      if(changedPhoto) {\r\n        this.rootScope.dispatchEvent('avatar_update', {peerId});\r\n      }\r\n\r\n      if(changedTitle || changedAnyBadge) {\r\n        this.rootScope.dispatchEvent('peer_title_edit', {peerId});\r\n      }\r\n\r\n      // whitelisted domains\r\n      if(changedPremium) {\r\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\r\n      }\r\n\r\n      if(changedEmojiStatus && user.pFlags.self) {\r\n        this.rootScope.dispatchEvent('emoji_status_change');\r\n      }\r\n    }\r\n\r\n    this.checkPremium(user, oldUser);\r\n    this.setUserToStateIfNeeded(user);\r\n  }\r\n\r\n  private mirrorUser(user: User) {\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'peers',\r\n      key: '' + user.id,\r\n      value: user\r\n    });\r\n  }\r\n\r\n  private checkPremium(user: User, oldUser: User) {\r\n    if(user.pFlags.self) {\r\n      const isPremium = !!user.pFlags.premium;\r\n      if(this.rootScope.premium !== isPremium) {\r\n        this.rootScope.dispatchEvent('premium_toggle_private', {isNew: !oldUser, isPremium});\r\n      }\r\n    }\r\n  }\r\n\r\n  private setUserToStateIfNeeded(user: User) {\r\n    if(this.peersStorage.isPeerNeeded(user.id.toPeerId())) {\r\n      this.storage.set({\r\n        [user.id]: user\r\n      });\r\n    }\r\n  }\r\n\r\n  public isUserOnlineVisible(id: UserId) {\r\n    return this.getUserStatusForSort(id) > 3;\r\n  }\r\n\r\n  public getUserStatusForSort(status: User['status'] | UserId) {\r\n    if(typeof(status) !== 'object') {\r\n      const user = this.getUser(status);\r\n      status = user?.status;\r\n    }\r\n\r\n    if(status) {\r\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\r\n      if(expires) {\r\n        return expires;\r\n      }\r\n\r\n      /* const timeNow = tsNow(true);\r\n      switch(status._) {\r\n        case 'userStatusRecently':\r\n          return timeNow - 86400 * 3;\r\n        case 'userStatusLastWeek':\r\n          return timeNow - 86400 * 7;\r\n        case 'userStatusLastMonth':\r\n          return timeNow - 86400 * 30;\r\n      } */\r\n      switch(status._) {\r\n        case 'userStatusRecently':\r\n          return 3;\r\n        case 'userStatusLastWeek':\r\n          return 2;\r\n        case 'userStatusLastMonth':\r\n          return 1;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  public getUser(id: User | UserId) {\r\n    if(isObject<User>(id)) {\r\n      return id;\r\n    }\r\n\r\n    return this.users[id];\r\n  }\r\n\r\n  public getUsers() {\r\n    return this.users;\r\n  }\r\n\r\n  public getUserStatus(id: UserId) {\r\n    return this.isRegularUser(id) && !this.users[id].pFlags.self && this.users[id].status;\r\n  }\r\n\r\n  public async getUserPhone(id: UserId) {\r\n    const user = this.getUser(id);\r\n    if(!user?.phone) {\r\n      return;\r\n    }\r\n\r\n    const appConfig = await this.apiManager.getAppConfig();\r\n    return {\r\n      phone: user.phone,\r\n      isAnonymous: appConfig.fragment_prefixes.some((prefix) => user.phone.startsWith(prefix))\r\n    };\r\n  }\r\n\r\n  public getSelf() {\r\n    return this.getUser(this.userId);\r\n  }\r\n\r\n  public isBot(id: UserId) {\r\n    return this.users[id] && !!this.users[id].pFlags.bot;\r\n  }\r\n\r\n  public isAttachMenuBot(id: UserId) {\r\n    return this.isBot(id) && !!this.users[id].pFlags.bot_attach_menu;\r\n  }\r\n\r\n  public isContact(id: UserId) {\r\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\r\n  }\r\n\r\n  public isRegularUser(id: UserId) {\r\n    const user = this.users[id];\r\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\r\n  }\r\n\r\n  public isNonContactUser(id: UserId) {\r\n    return this.isRegularUser(id) && !this.isContact(id) && id !== this.userId;\r\n  }\r\n\r\n  public isPremium(id: UserId) {\r\n    const user = this.users[id];\r\n    return !!user?.pFlags?.premium;\r\n  }\r\n\r\n  public isDeleted(id: UserId) {\r\n    const user = this.users[id];\r\n    return !!user?.pFlags?.deleted;\r\n  }\r\n\r\n  public hasUser(id: UserId, allowMin?: boolean) {\r\n    const user = this.users[id];\r\n    return isObject(user) && (allowMin || !user.pFlags.min);\r\n  }\r\n\r\n  public canEdit(id: UserId) {\r\n    return this.userId === id || this.isContact(id) || !!this.users[id]?.pFlags?.bot_can_edit;\r\n  }\r\n\r\n  public getUserString(id: UserId) {\r\n    const user = this.getUser(id);\r\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\r\n  }\r\n\r\n  public getUserId(userId: Parameters<typeof getPeerId>[0]) {\r\n    const peerId = getPeerId(userId);\r\n    if(peerId) {\r\n      return peerId.toUserId();\r\n    }\r\n\r\n    return (isObject<InputUser>(userId) && userId._ === 'inputUserSelf' && this.getSelf().id) || NULL_PEER_ID;\r\n  }\r\n\r\n  public getUserInput(id: UserId): InputUser {\r\n    const user = this.getUser(id);\r\n    if(!id || (user.pFlags && user.pFlags.self)) {\r\n      return {_: 'inputUserSelf'};\r\n    }\r\n\r\n    return {\r\n      _: 'inputUser',\r\n      user_id: id,\r\n      access_hash: user.access_hash\r\n    };\r\n  }\r\n\r\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\r\n    const user = this.getUser(id);\r\n    // ! do not use it, there are places that don't support it. need explicit peer id\r\n    // if(user.pFlags?.self) {\r\n    //   return {_: 'inputPeerSelf'};\r\n    // }\r\n\r\n    return {\r\n      _: 'inputPeerUser',\r\n      user_id: id,\r\n      access_hash: user.access_hash\r\n    };\r\n  }\r\n\r\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\r\n    const user = this.getUser(id);\r\n\r\n    return {\r\n      _: 'inputMediaContact',\r\n      first_name: user.first_name,\r\n      last_name: user.last_name,\r\n      phone_number: user.phone,\r\n      vcard: '',\r\n      user_id: id\r\n    };\r\n  }\r\n\r\n  private updateUsersStatuses = () => {\r\n    const timestampNow = tsNow(true);\r\n    for(const i in this.users) {\r\n      const user = this.users[i];\r\n      this.updateUserStatus(user, timestampNow);\r\n    }\r\n  };\r\n\r\n  private updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\r\n    if(user.status &&\r\n      user.status._ === 'userStatusOnline' &&\r\n      user.status.expires < timestampNow) {\r\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\r\n      this.rootScope.dispatchEvent('user_update', user.id);\r\n\r\n      this.setUserToStateIfNeeded(user);\r\n    }\r\n  }\r\n\r\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\r\n    if(this.isBot(id)) {\r\n      return;\r\n    }\r\n\r\n    const timestamp = tsNow(true);\r\n    const onlineTimeFor = 60;\r\n    if(eventTimestamp) {\r\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\r\n        return;\r\n      }\r\n    } else if(this.apiUpdatesManager.updatesState.syncLoading) {\r\n      return;\r\n    }\r\n\r\n    const user = this.getUser(id);\r\n    if(user?.status &&\r\n      user.status._ !== 'userStatusOnline' &&\r\n      user.status._ !== 'userStatusEmpty' &&\r\n      !user.pFlags.support &&\r\n      !user.pFlags.deleted) {\r\n      user.status = {\r\n        _: 'userStatusOnline',\r\n        expires: timestamp + onlineTimeFor\r\n      };\r\n\r\n      // user.sortStatus = this.getUserStatusForSort(user.status);\r\n      this.rootScope.dispatchEvent('user_update', id);\r\n\r\n      this.setUserToStateIfNeeded(user);\r\n    }\r\n  }\r\n\r\n  public importContact(first_name: string, last_name: string, phone: string) {\r\n    return this.importContacts([{\r\n      first_name,\r\n      last_name,\r\n      phones: [phone]\r\n    }]).then((userIds) => {\r\n      if(!userIds.length) {\r\n        const error = new Error();\r\n        (error as any).type = 'NO_USER';\r\n        throw error;\r\n      }\r\n\r\n      return userIds[0];\r\n    });\r\n  }\r\n\r\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\r\n    const inputContacts: InputContact[] = [];\r\n\r\n    for(let i = 0; i < contacts.length; ++i) {\r\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\r\n        inputContacts.push({\r\n          _: 'inputPhoneContact',\r\n          client_id: (i << 16 | j).toString(10),\r\n          phone: contacts[i].phones[j],\r\n          first_name: contacts[i].first_name,\r\n          last_name: contacts[i].last_name\r\n        });\r\n      }\r\n    }\r\n\r\n    return this.apiManager.invokeApi('contacts.importContacts', {\r\n      contacts: inputContacts\r\n    }).then((importedContactsResult) => {\r\n      this.saveApiUsers(importedContactsResult.users);\r\n\r\n      const userIds = importedContactsResult.imported.map((importedContact) => {\r\n        this.onContactUpdated(importedContact.user_id, true);\r\n        return importedContact.user_id;\r\n      });\r\n\r\n      return userIds;\r\n    });\r\n  }\r\n\r\n  public getTopPeers(type: TopPeerType) {\r\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\r\n\r\n    return this.getTopPeersPromises[type] = this.appStateManager.getState().then((state) => {\r\n      const cached = state.topPeersCache[type];\r\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) {\r\n        return cached.peers;\r\n      }\r\n\r\n      return this.apiManager.invokeApi('contacts.getTopPeers', {\r\n        [type]: true,\r\n        offset: 0,\r\n        limit: 30,\r\n        hash: '0'\r\n      }).then((result) => {\r\n        let topPeers: MyTopPeer[] = [];\r\n        if(result._ === 'contacts.topPeers') {\r\n          // console.log(result);\r\n          this.saveApiUsers(result.users);\r\n          this.appChatsManager.saveApiChats(result.chats);\r\n\r\n          if(result.categories.length) {\r\n            topPeers = result.categories[0].peers.map((topPeer) => {\r\n              const peerId = getPeerId(topPeer.peer);\r\n              this.peersStorage.requestPeer(peerId, 'topPeer');\r\n              return {id: peerId, rating: topPeer.rating};\r\n            });\r\n          }\r\n        }\r\n\r\n        state.topPeersCache[type] = {\r\n          peers: topPeers,\r\n          cachedTime: Date.now()\r\n        };\r\n        this.appStateManager.pushToState('topPeersCache', state.topPeersCache);\r\n\r\n        return topPeers;\r\n      });\r\n    });\r\n  }\r\n\r\n  public getBlocked(offset = 0, limit = 0) {\r\n    return this.apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then((contactsBlocked) => {\r\n      this.saveApiUsers(contactsBlocked.users);\r\n      this.appChatsManager.saveApiChats(contactsBlocked.chats);\r\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\r\n\r\n      const peerIds: PeerId[] = contactsBlocked.users.map((u) => u.id.toPeerId()).concat(contactsBlocked.chats.map((c) => c.id.toPeerId(true)));\r\n\r\n      return {count, peerIds};\r\n    });\r\n  }\r\n\r\n  public getLocated(\r\n    lat: number,\r\n    long: number,\r\n    accuracy_radius: number,\r\n    background: boolean = false,\r\n    self_expires: number = 0\r\n  ) {\r\n    const geo_point: InputGeoPoint = {\r\n      _: 'inputGeoPoint',\r\n      lat,\r\n      long,\r\n      accuracy_radius\r\n    };\r\n\r\n    return this.apiManager.invokeApi('contacts.getLocated', {\r\n      geo_point,\r\n      background\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n      return updates;\r\n    });\r\n  }\r\n\r\n  /* public searchContacts(query: string, limit = 20) {\r\n    return Promise.all([\r\n      this.getContacts(query),\r\n      apiManager.invokeApi('contacts.search', {\r\n        q: query,\r\n        limit\r\n      })\r\n    ]).then((results) => {\r\n      const [myContacts, peers] = results;\r\n\r\n      this.saveApiUsers(peers.users);\r\n      appChatsManager.saveApiChats(peers.chats);\r\n\r\n      // * contacts.search returns duplicates in my_results\r\n      const myResults = new Set(myContacts.concat(peers.my_results.map((p) => appPeersManager.getPeerID(p))));\r\n\r\n      const out = {\r\n        my_results: [...myResults].slice(0, limit),\r\n        results: peers.results.map((p) => appPeersManager.getPeerID(p))\r\n      };\r\n\r\n      return out;\r\n    });\r\n  } */\r\n  public searchContacts(query: string, limit = 20) {\r\n    // handle 't.me/username' as 'username'\r\n    const entities = parseEntities(query);\r\n    if(entities.length && entities[0].length === query.trim().length && entities[0]._ === 'messageEntityUrl') {\r\n      try {\r\n        const url = new URL(wrapUrl(query).url);\r\n        const path = url.pathname.slice(1);\r\n        if(path) {\r\n          query = path;\r\n        }\r\n      } catch(err) {}\r\n    }\r\n\r\n    return this.apiManager.invokeApiCacheable('contacts.search', {\r\n      q: query,\r\n      limit\r\n    }, {cacheSeconds: 60}).then((peers) => {\r\n      this.saveApiUsers(peers.users);\r\n      this.appChatsManager.saveApiChats(peers.chats);\r\n\r\n      const out = {\r\n        my_results: filterUnique(peers.my_results.map((p) => getPeerId(p))), // ! contacts.search returns duplicates in my_results\r\n        results: peers.results.map((p) => getPeerId(p))\r\n      };\r\n\r\n      return out;\r\n    });\r\n  }\r\n\r\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\r\n    if(isContact !== curIsContact) {\r\n      if(isContact) {\r\n        this.pushContact(userId);\r\n      } else {\r\n        this.popContact(userId);\r\n      }\r\n\r\n      this.onContactsModified();\r\n\r\n      this.rootScope.dispatchEvent('contacts_update', userId);\r\n    }\r\n  }\r\n\r\n  public updateUsername(username: string) {\r\n    return this.apiManager.invokeApi('account.updateUsername', {\r\n      username\r\n    }).then((user) => {\r\n      this.saveApiUser(user);\r\n    });\r\n  }\r\n\r\n  public setUserStatus(userId: UserId, offline: boolean) {\r\n    if(this.isBot(userId)) {\r\n      return;\r\n    }\r\n\r\n    const user = this.users[userId];\r\n    if(user) {\r\n      const status: UserStatus = offline ? {\r\n        _: 'userStatusOffline',\r\n        was_online: tsNow(true)\r\n      } : {\r\n        _: 'userStatusOnline',\r\n        expires: tsNow(true) + 50\r\n      };\r\n\r\n      user.status = status;\r\n      // user.sortStatus = this.getUserStatusForSort(user.status);\r\n      this.rootScope.dispatchEvent('user_update', userId);\r\n\r\n      this.setUserToStateIfNeeded(user);\r\n    }\r\n  }\r\n\r\n  public updateMyOnlineStatus(offline: boolean) {\r\n    this.setUserStatus(this.getSelf().id, offline);\r\n    return this.apiManager.invokeApiSingle('account.updateStatus', {offline});\r\n  }\r\n\r\n  public addContact(\r\n    userId: UserId,\r\n    first_name: string,\r\n    last_name: string,\r\n    phone: string,\r\n    addPhonePrivacyException?: boolean\r\n  ) {\r\n    /* if(!userId) {\r\n      return this.importContacts([{\r\n        first_name,\r\n        last_name,\r\n        phones: [phone]\r\n      }]);\r\n    } */\r\n\r\n    return this.apiManager.invokeApi('contacts.addContact', {\r\n      id: this.getUserInput(userId),\r\n      first_name,\r\n      last_name,\r\n      phone,\r\n      add_phone_privacy_exception: addPhonePrivacyException\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\r\n\r\n      this.appProfileManager.refreshPeerSettingsIfNeeded(userId.toPeerId(false));\r\n\r\n      this.onContactUpdated(userId, true);\r\n    });\r\n  }\r\n\r\n  public deleteContacts(userIds: UserId[]) {\r\n    return this.apiManager.invokeApi('contacts.deleteContacts', {\r\n      id: userIds.map((userId) => this.getUserInput(userId))\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\r\n\r\n      userIds.forEach((userId) => {\r\n        this.onContactUpdated(userId, false);\r\n      });\r\n    });\r\n  }\r\n\r\n  public checkUsername(username: string) {\r\n    return this.apiManager.invokeApi('account.checkUsername', {username});\r\n  }\r\n\r\n  public canSendToUser(userId: UserId) {\r\n    return canSendToUser(this.getUser(userId))/*  && !this.appProfileManager.isCachedUserBlocked(userId) */;\r\n  }\r\n\r\n  public getCommonChats(userId: UserId, limit = 100, maxId?: ChatId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getCommonChats',\r\n      params: {\r\n        user_id: this.getUserInput(userId),\r\n        limit,\r\n        max_id: maxId ?? 0\r\n      },\r\n      processResult: (messagesChats) => {\r\n        this.appChatsManager.saveApiChats(messagesChats.chats);\r\n        return messagesChats;\r\n      }\r\n    });\r\n  }\r\n\r\n  public updateEmojiStatus(emojiStatus: EmojiStatus) {\r\n    return this.apiManager.invokeApi('account.updateEmojiStatus', {\r\n      emoji_status: emojiStatus\r\n    }).then(() => {\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updateUserEmojiStatus',\r\n        user_id: this.getSelf().id,\r\n        emoji_status: emojiStatus\r\n      });\r\n    });\r\n  }\r\n\r\n  public getDefaultEmojiStatuses() {\r\n    return this.defaultEmojiStatuses ??= this.apiManager.invokeApiSingleProcess({\r\n      method: 'account.getDefaultEmojiStatuses',\r\n      processResult: (emojiStatuses) => this.defaultEmojiStatuses = emojiStatuses\r\n    });\r\n  }\r\n\r\n  public getRecentEmojiStatuses() {\r\n    return this.recentEmojiStatuses ??= this.apiManager.invokeApiSingleProcess({\r\n      method: 'account.getRecentEmojiStatuses',\r\n      processResult: (emojiStatuses) => this.recentEmojiStatuses = emojiStatuses\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {WebPage} from '../../layer';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {AppManager} from './manager';\r\n\r\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\r\n\r\ntype WebPageMessageKey = `${PeerId}_${number}`;\r\n\r\nexport class AppWebPagesManager extends AppManager {\r\n  private webpages: {\r\n    [webPageId: string]: WebPage\r\n  } = {};\r\n  private pendingWebPages: {\r\n    [webPageId: string]: Set<WebPageMessageKey>\r\n  } = {};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateWebPage: (update) => {\r\n        this.saveWebPage(update.webpage);\r\n      },\r\n\r\n      updateChannelWebPage: (update) => {\r\n        this.saveWebPage(update.webpage);\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\r\n    if(apiWebPage._ === 'webPageNotModified' || apiWebPage._ === 'webPageEmpty') return;\r\n    const {id} = apiWebPage;\r\n\r\n    mediaContext ??= {\r\n      type: 'webPage',\r\n      url: apiWebPage.url\r\n    };\r\n\r\n    const oldWebPage = this.webpages[id];\r\n    const isUpdated = oldWebPage &&\r\n      oldWebPage._ === apiWebPage._ &&\r\n      (oldWebPage as WebPage.webPage).hash !== (apiWebPage as WebPage.webPage).hash;\r\n    let isMediaUpdated = false;\r\n\r\n    if(apiWebPage._ === 'webPage') {\r\n      if(apiWebPage.photo?._ === 'photo') {\r\n        apiWebPage.photo = this.appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\r\n      } else {\r\n        delete apiWebPage.photo;\r\n      }\r\n\r\n      if(apiWebPage.document?._ === 'document') {\r\n        apiWebPage.document = this.appDocsManager.saveDoc(apiWebPage.document, mediaContext);\r\n      } else {\r\n        if(apiWebPage.type === 'document') {\r\n          delete apiWebPage.type;\r\n        }\r\n\r\n        delete apiWebPage.document;\r\n      }\r\n\r\n      if(oldWebPage?._ === apiWebPage._) {\r\n        isMediaUpdated = oldWebPage.photo?.id !== apiWebPage.photo?.id ||\r\n          oldWebPage.document?.id !== apiWebPage.document?.id;\r\n      }\r\n\r\n      const siteName = apiWebPage.site_name;\r\n      const shortTitle = apiWebPage.title || apiWebPage.author || '';\r\n      if(siteName && shortTitle === siteName) {\r\n        delete apiWebPage.site_name;\r\n      }\r\n\r\n      for(const attribute of apiWebPage.attributes || []) {\r\n        switch(attribute._) {\r\n          case 'webPageAttributeStory': {\r\n            const cache = this.appStoriesManager.getPeerStoriesCache(this.appPeersManager.getPeerId(attribute.peer));\r\n            attribute.story = this.appStoriesManager.saveStoryItem(attribute.story, cache);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(!photoTypeSet.has(apiWebPage.type) &&\r\n        !apiWebPage.description &&\r\n        apiWebPage.photo) {\r\n        apiWebPage.type = 'photo';\r\n      }\r\n    }\r\n\r\n    let pendingSet = this.pendingWebPages[id];\r\n    if(messageKey) {\r\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\r\n      pendingSet.add(messageKey);\r\n    }\r\n\r\n    if(oldWebPage === undefined) {\r\n      this.webpages[id] = apiWebPage;\r\n    } else {\r\n      safeReplaceObject(oldWebPage, apiWebPage);\r\n    }\r\n\r\n    if(((!messageKey && isUpdated) || isMediaUpdated) && pendingSet !== undefined) {\r\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\r\n      pendingSet.forEach((value) => {\r\n        const [peerId, mid, isScheduled] = value.split('_');\r\n        msgs.push({\r\n          peerId: peerId.toPeerId(),\r\n          mid: +mid,\r\n          isScheduled: !!isScheduled\r\n        });\r\n      });\r\n\r\n      this.rootScope.dispatchEvent('webpage_updated', {\r\n        id,\r\n        msgs\r\n      });\r\n    }\r\n\r\n    return apiWebPage;\r\n  }\r\n\r\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\r\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\r\n  }\r\n\r\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\r\n    const id = (webPage as WebPage.webPage).id;\r\n    if(!id) return;\r\n\r\n    const set = this.pendingWebPages[id];\r\n    if(set && set.has(messageKey)) {\r\n      set.delete(messageKey);\r\n\r\n      if(!set.size) {\r\n        delete this.pendingWebPages[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  public getCachedWebPage(id: WebPage.webPage['id']) {\r\n    return this.webpages[id];\r\n  }\r\n\r\n  public getWebPage(url: string) {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getWebPage',\r\n      processResult: (messagesWebPage) => {\r\n        this.appPeersManager.saveApiPeers(messagesWebPage);\r\n        return this.saveWebPage(messagesWebPage.webpage);\r\n      },\r\n      params: {\r\n        url\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n// https://www.iana.org/assignments/media-types/media-types.xhtml\r\nexport default function blobSafeMimeType(mimeType: string) {\r\n  if([\r\n    'image/jpeg',\r\n    'image/png',\r\n    'image/gif',\r\n    'image/svg+xml',\r\n    'image/webp',\r\n    'image/bmp',\r\n    'video/mp4',\r\n    'video/webm',\r\n    'video/quicktime',\r\n    'audio/ogg',\r\n    'audio/mpeg',\r\n    'audio/mp4',\r\n    'audio/wav', // though it is not in list\r\n    'application/json',\r\n    'application/pdf'\r\n  ].indexOf(mimeType) === -1) {\r\n    return 'application/octet-stream';\r\n  }\r\n\r\n  return mimeType;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport blobSafeMimeType from './blobSafeMimeType';\r\n\r\nexport default function blobConstruct<T extends Uint8Array | string>(blobParts: Array<T> | T, mimeType: string = ''): Blob {\r\n  if(!Array.isArray(blobParts)) {\r\n    blobParts = [blobParts];\r\n  }\r\n\r\n  const safeMimeType = blobSafeMimeType(mimeType);\r\n  const blob = new Blob(blobParts, {type: safeMimeType});\r\n  return blob;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport blobConstruct from '../../helpers/blob/blobConstruct';\r\nimport StreamWriter from './streamWriter';\r\n\r\nexport default class MemoryWriter implements StreamWriter {\r\n  private bytes: Uint8Array;\r\n\r\n  constructor(\r\n    private mimeType: string,\r\n    private size: number,\r\n    private saveFileCallback?: (blob: Blob) => Promise<Blob>\r\n  ) {\r\n    this.bytes = new Uint8Array(size);\r\n  }\r\n\r\n  public async write(part: Uint8Array, offset: number) {\r\n    // sometimes file size can be bigger than the prov\r\n    const endOffset = offset + part.byteLength;\r\n    if(endOffset > this.bytes.byteLength) {\r\n      const newBytes = new Uint8Array(endOffset);\r\n      newBytes.set(this.bytes, 0);\r\n      this.bytes = newBytes;\r\n    }\r\n\r\n    this.bytes.set(part, offset);\r\n  };\r\n\r\n  public truncate() {\r\n    this.bytes = new Uint8Array();\r\n  }\r\n\r\n  public trim(size: number) {\r\n    this.bytes = this.bytes.slice(0, size);\r\n  }\r\n\r\n  public finalize(saveToStorage = true) {\r\n    const blob = blobConstruct(this.bytes, this.mimeType);\r\n\r\n    if(saveToStorage && this.saveFileCallback) {\r\n      this.saveFileCallback(blob);\r\n    }\r\n\r\n    return blob;\r\n  }\r\n\r\n  public getParts() {\r\n    return this.bytes;\r\n  }\r\n\r\n  public replaceParts(parts: Uint8Array) {\r\n    this.bytes = parts;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../../config/modes';\r\nimport blobConstruct from '../../helpers/blob/blobConstruct';\r\nimport MemoryWriter from './memoryWriter';\r\nimport FileManager from './memoryWriter';\r\nimport FileStorage from './fileStorage';\r\nimport makeError from '../../helpers/makeError';\r\nimport deferredPromise from '../../helpers/cancellablePromise';\r\n\r\nexport type CacheStorageDbName = 'cachedFiles' | 'cachedStreamChunks' | 'cachedAssets';\r\n\r\nexport default class CacheStorageController implements FileStorage {\r\n  private static STORAGES: CacheStorageController[] = [];\r\n  private openDbPromise: Promise<Cache>;\r\n\r\n  private useStorage = true;\r\n\r\n  // private log: ReturnType<typeof logger> = logger('CS');\r\n\r\n  constructor(private dbName: CacheStorageDbName) {\r\n    if(Modes.test) {\r\n      this.dbName += '_test';\r\n    }\r\n\r\n    if(CacheStorageController.STORAGES.length) {\r\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\r\n    }\r\n\r\n    this.openDatabase();\r\n    CacheStorageController.STORAGES.push(this);\r\n  }\r\n\r\n  private openDatabase(): Promise<Cache> {\r\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\r\n  }\r\n\r\n  public delete(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\r\n  }\r\n\r\n  public deleteAll() {\r\n    return caches.delete(this.dbName);\r\n  }\r\n\r\n  public get(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.match('/' + entryName));\r\n  }\r\n\r\n  public save(entryName: string, response: Response) {\r\n    // return new Promise((resolve) => {}); // DEBUG\r\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, response));\r\n  }\r\n\r\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\r\n    // if(method === 'blob') {\r\n    //   return Promise.reject(makeError('NO_ENTRY_FOUND'));\r\n    // }\r\n\r\n    // const str = `get fileName: ${fileName}`;\r\n    // console.time(str);\r\n    return this.get(fileName).then((response) => {\r\n      if(!response) {\r\n        // console.warn('getFile:', response, fileName);\r\n        throw makeError('NO_ENTRY_FOUND');\r\n      }\r\n\r\n      const promise = response[method]();\r\n      // promise.then(() => {\r\n      //   console.timeEnd(str);\r\n      // });\r\n      return promise;\r\n    });\r\n  }\r\n\r\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n    // return Promise.resolve(blobConstruct([blob]));\r\n    if(!(blob instanceof Blob)) {\r\n      blob = blobConstruct(blob);\r\n    }\r\n\r\n    const response = new Response(blob, {\r\n      headers: {\r\n        'Content-Length': '' + blob.size\r\n      }\r\n    });\r\n\r\n    return this.save(fileName, response).then(() => blob as Blob);\r\n  }\r\n\r\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\r\n    if(!this.useStorage) {\r\n      return Promise.reject(makeError('STORAGE_OFFLINE'));\r\n    }\r\n\r\n    return new Promise<T>(async(resolve, reject) => {\r\n      let rejected = false;\r\n      const timeout = setTimeout(() => {\r\n        reject();\r\n        // console.warn('CACHESTORAGE TIMEOUT');\r\n        rejected = true;\r\n      }, 15e3);\r\n\r\n      try {\r\n        const cache = await this.openDatabase();\r\n        if(!cache) {\r\n          this.useStorage = false;\r\n          this.openDbPromise = undefined;\r\n          throw 'no cache?';\r\n        }\r\n\r\n        const res = await callback(cache);\r\n\r\n        if(rejected) return;\r\n        resolve(res);\r\n      } catch(err) {\r\n        reject(err);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n    });\r\n  }\r\n\r\n  public prepareWriting(fileName: string, fileSize: number, mimeType: string) {\r\n    return {\r\n      deferred: deferredPromise<Blob>(),\r\n      getWriter: () => {\r\n        const writer = new MemoryWriter(mimeType, fileSize, (blob) => {\r\n          return this.saveFile(fileName, blob).catch(() => blob);\r\n        });\r\n\r\n        return writer;\r\n      }\r\n    };\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    return Promise.all(this.STORAGES.map((storage) => {\r\n      storage.useStorage = enabled;\r\n\r\n      if(!clearWrite) {\r\n        return;\r\n      }\r\n\r\n      if(!enabled) {\r\n        return storage.deleteAll();\r\n      }\r\n    }));\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { IS_WEB_WORKER } from \"../context\";\r\n\r\n// const id = IS_WEB_WORKER ? Math.random() * 0x1000 | 0 : 0;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsText'): Promise<string>;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsDataURL'): Promise<string>;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer'): Promise<ArrayBuffer>;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer' | 'readAsText' | 'readAsDataURL'): Promise<any> {\r\n  // const perf = performance.now();\r\n  return new Promise<any>((resolve) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('loadend', (e) => {\r\n      // console.log(`readBlobAs [${id}] ${method} time ${performance.now() - perf}`);\r\n      resolve(e.target.result);\r\n    });\r\n    reader[method](blob);\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport readBlobAs from './readBlobAs';\r\n\r\nexport default function readBlobAsArrayBuffer(blob: Blob) {\r\n  return readBlobAs(blob, 'readAsArrayBuffer');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function fixFirefoxSvg(text: string) {\r\n  const svgIndex = text.indexOf('<svg');\r\n  if(svgIndex !== 0) {\r\n    text = text.slice(svgIndex);\r\n  }\r\n\r\n  const [_, __, width, height] = text.match(/viewBox=\"(.+?)\"/)[1].split(' ');\r\n  text = text.replace(/>/, ` width=\"${width}\" height=\"${height}\">`).replace(/[^\\x00-\\x7F]/g, '');\r\n  return text;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {PhotoSize, InputFileLocation} from '../../../../layer';\r\nimport type {DownloadOptions} from '../../../mtproto/apiFileManager';\r\nimport type {MyDocument} from '../../appDocsManager';\r\nimport type {MyPhoto} from '../../appPhotosManager';\r\n\r\nexport default function getPhotoDownloadOptions(photo: MyPhoto | MyDocument, photoSize: PhotoSize, queueId?: number, onlyCache?: boolean): DownloadOptions {\r\n  const isDocument = photo._ === 'document';\r\n\r\n  if(!photoSize || photoSize._ === 'photoSizeEmpty') {\r\n    // console.error('no photoSize by photo:', photo);\r\n    throw new Error('photoSizeEmpty!');\r\n  }\r\n\r\n  // maybe it's a thumb\r\n  const isPhoto = !!((photoSize._ === 'photoSize' || photoSize._ === 'photoSizeProgressive') && photo.access_hash && photo.file_reference);\r\n  const location: InputFileLocation.inputPhotoFileLocation | InputFileLocation.inputDocumentFileLocation = {\r\n    _: isDocument ? 'inputDocumentFileLocation' : 'inputPhotoFileLocation',\r\n    id: photo.id,\r\n    access_hash: photo.access_hash,\r\n    file_reference: photo.file_reference,\r\n    thumb_size: photoSize.type\r\n  };\r\n\r\n  return {\r\n    dcId: photo.dc_id,\r\n    location,\r\n    size: isPhoto ? (photoSize as PhotoSize.photoSize).size : undefined,\r\n    mimeType: 'image/jpeg',\r\n    queueId,\r\n    onlyCache\r\n  };\r\n}\r\n","import {InputWebFileLocation} from '../../../../layer';\r\nimport {DownloadOptions} from '../../../mtproto/apiFileManager';\r\n\r\nexport default function getWebFileDownloadOptions(location: InputWebFileLocation): DownloadOptions {\r\n  const downloadOptions: DownloadOptions = {\r\n    dcId: 0,\r\n    location,\r\n    size: 0,\r\n    mimeType: 'image/jpeg'\r\n  };\r\n\r\n  // if(location._ === 'inputWebFileGeoPointLocation') {\r\n  //   downloadOptions.size = 512 * 1024;\r\n  //   downloadOptions.mimeType = 'image/jpeg';\r\n  // }\r\n\r\n  return downloadOptions;\r\n}\r\n","import {WebDocument} from '../../../../layer';\r\nimport {DownloadOptions} from '../../../mtproto/apiFileManager';\r\nimport getWebFileDownloadOptions from '../webFiles/getWebFileDownloadOptions';\r\n\r\nexport default function getWebDocumentDownloadOptions(webDocument: WebDocument): DownloadOptions {\r\n  const downloadOptions = getWebFileDownloadOptions({\r\n    _: 'inputWebFileLocation',\r\n    access_hash: (webDocument as WebDocument.webDocument).access_hash,\r\n    url: webDocument.url\r\n  });\r\n\r\n  downloadOptions.size = webDocument.size;\r\n  downloadOptions.mimeType = webDocument.mime_type;\r\n\r\n  return downloadOptions;\r\n}\r\n","import {WebDocument} from '../../../../layer';\r\n\r\nexport default function isWebDocument(webDocument: any): webDocument is WebDocument {\r\n  return !!(webDocument && (webDocument._ === 'webDocument' || webDocument._ === 'webDocumentNoProxy'));\r\n}\r\n","import {InputWebFileLocation} from '../../../../layer';\r\n\r\nexport default function isWebFileLocation(location: any): location is InputWebFileLocation {\r\n  return location?._.includes('inputWebFile');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {getFileNameByLocation} from '../../../../helpers/fileName';\r\nimport {DownloadOptions} from '../../../mtproto/apiFileManager';\r\n\r\nexport default function getDownloadFileNameFromOptions(options: DownloadOptions) {\r\n  return getFileNameByLocation(options.location, options);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {DownloadMediaOptions, DownloadOptions} from '../../../mtproto/apiFileManager';\r\nimport getDocumentDownloadOptions from '../docs/getDocumentDownloadOptions';\r\nimport getPhotoDownloadOptions from '../photos/getPhotoDownloadOptions';\r\nimport getWebDocumentDownloadOptions from '../webDocs/getWebDocumentDownloadOptions';\r\nimport isWebDocument from '../webDocs/isWebDocument';\r\nimport getWebFileDownloadOptions from '../webFiles/getWebFileDownloadOptions';\r\nimport isWebFileLocation from '../webFiles/isWebFileLocation';\r\nimport getDownloadFileNameFromOptions from './getDownloadFileNameFromOptions';\r\n\r\nexport default function getDownloadMediaDetails(options: DownloadMediaOptions) {\r\n  const {media, thumb, queueId, onlyCache} = options;\r\n\r\n  let downloadOptions: DownloadOptions;\r\n  if(media._ === 'document') downloadOptions = getDocumentDownloadOptions(media, thumb as any, queueId, onlyCache);\r\n  else if(media._ === 'photo') downloadOptions = getPhotoDownloadOptions(media, thumb as any, queueId, onlyCache);\r\n  else if(isWebDocument(media)) downloadOptions = getWebDocumentDownloadOptions(media);\r\n  else if(isWebFileLocation(media)) downloadOptions = getWebFileDownloadOptions(media);\r\n\r\n  downloadOptions.downloadId = options.downloadId;\r\n\r\n  const fileName = getDownloadFileNameFromOptions(downloadOptions);\r\n  return {fileName, downloadOptions};\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport readBlobAsArrayBuffer from './readBlobAsArrayBuffer';\r\n\r\nexport default function readBlobAsUint8Array(blob: Blob) {\r\n  return readBlobAsArrayBuffer(blob).then((buffer) => new Uint8Array(buffer));\r\n}\r\n","export default function fileNameRFC(fileName: string) {\r\n  // Make filename RFC5987 compatible\r\n  return encodeURIComponent(fileName).replace(/['()]/g, escape).replace(/\\*/g, '%2A');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appManagersManager from '../appManagers/appManagersManager';\r\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\r\nimport StreamWriter from './streamWriter';\r\n\r\nexport default class DownloadWriter implements StreamWriter {\r\n  constructor(\r\n    private serviceMessagePort: ServiceMessagePort<true>,\r\n    private downloadId: string\r\n  ) {\r\n    this.serviceMessagePort = appManagersManager.getServiceMessagePort();\r\n  }\r\n\r\n  public async write(part: Uint8Array, offset?: number) {\r\n    return this.serviceMessagePort.invoke('downloadChunk', {\r\n      id: this.downloadId,\r\n      chunk: part\r\n    });\r\n  }\r\n\r\n  public finalize(saveToStorage?: boolean): Promise<Blob> {\r\n    return this.serviceMessagePort.invoke('downloadFinalize', this.downloadId).then(() => undefined);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport deferredPromise from '../../helpers/cancellablePromise';\r\nimport makeError from '../../helpers/makeError';\r\nimport fileNameRFC from '../../helpers/string/fileNameRFC';\r\nimport appManagersManager from '../appManagers/appManagersManager';\r\nimport DownloadWriter from './downloadWriter';\r\nimport FileStorage from './fileStorage';\r\n\r\nexport default class DownloadStorage implements FileStorage {\r\n  public getFile(fileName: string): Promise<any> {\r\n    return Promise.reject(makeError('NO_ENTRY_FOUND'));\r\n  }\r\n\r\n  public prepareWriting({fileName, downloadId, size}: {\r\n    fileName: string,\r\n    downloadId: string,\r\n    size: number\r\n  }) {\r\n    const headers = {\r\n      'Content-Type': 'application/octet-stream; charset=utf-8',\r\n      'Content-Disposition': 'attachment; filename*=UTF-8\\'\\'' + fileNameRFC(fileName),\r\n      ...(size ? {'Content-Length': size} : {})\r\n    };\r\n\r\n    const serviceMessagePort = appManagersManager.getServiceMessagePort();\r\n    const promise = serviceMessagePort.invoke('download', {\r\n      headers,\r\n      id: downloadId\r\n    });\r\n\r\n    const deferred = deferredPromise<void>();\r\n    deferred.cancel = () => {\r\n      deferred.reject(makeError('DOWNLOAD_CANCELED'));\r\n    };\r\n\r\n    deferred.catch(() => {\r\n      appManagersManager.getServiceMessagePort().invoke('downloadCancel', downloadId);\r\n    });\r\n\r\n    promise.then(deferred.resolve.bind(deferred), deferred.reject.bind(deferred));\r\n\r\n    return {\r\n      deferred,\r\n      getWriter: () => {\r\n        return new DownloadWriter(serviceMessagePort, downloadId);\r\n      }\r\n    };\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ReferenceBytes} from './referenceDatabase';\r\nimport Modes from '../../config/modes';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport {randomLong} from '../../helpers/random';\r\nimport {Document, InputFile, InputFileLocation, InputWebFileLocation, Photo, PhotoSize, UploadFile, UploadWebFile, VideoSize, WebDocument} from '../../layer';\r\nimport {DcId} from '../../types';\r\nimport CacheStorageController from '../files/cacheStorage';\r\nimport {logger, LogTypes} from '../logger';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport noop from '../../helpers/noop';\r\nimport readBlobAsArrayBuffer from '../../helpers/blob/readBlobAsArrayBuffer';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport fixFirefoxSvg from '../../helpers/fixFirefoxSvg';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport MTProtoMessagePort from './mtprotoMessagePort';\r\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\r\nimport type {Progress} from '../appManagers/appDownloadManager';\r\nimport getDownloadMediaDetails from '../appManagers/utils/download/getDownloadMediaDetails';\r\n// import networkStats from './networkStats';\r\nimport getDownloadFileNameFromOptions from '../appManagers/utils/download/getDownloadFileNameFromOptions';\r\nimport StreamWriter from '../files/streamWriter';\r\nimport FileStorage from '../files/fileStorage';\r\nimport {MAX_FILE_SAVE_SIZE} from './mtproto_config';\r\nimport throttle from '../../helpers/schedulers/throttle';\r\nimport makeError from '../../helpers/makeError';\r\nimport readBlobAsUint8Array from '../../helpers/blob/readBlobAsUint8Array';\r\nimport DownloadStorage from '../files/downloadStorage';\r\nimport copy from '../../helpers/object/copy';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport {EXTENSION_MIME_TYPE_MAP, MIME_TYPE_EXTENSION_MAP} from '../../environment/mimeTypeMap';\r\nimport isWebFileLocation from '../appManagers/utils/webFiles/isWebFileLocation';\r\nimport appManagersManager from '../appManagers/appManagersManager';\r\n\r\ntype Delayed = {\r\n  offset: number,\r\n  writePromise: CancellablePromise<void>,\r\n  writeDeferred: CancellablePromise<void>\r\n};\r\n\r\nexport type DownloadOptions = {\r\n  dcId: DcId,\r\n  location: InputFileLocation | InputWebFileLocation,\r\n  size?: number,\r\n  fileName?: string,\r\n  mimeType?: MTMimeType,\r\n  limitPart?: number,\r\n  queueId?: number,\r\n  onlyCache?: boolean,\r\n  downloadId?: string\r\n  // getFileMethod: Parameters<CacheStorageController['getFile']>[1]\r\n};\r\n\r\nexport type DownloadMediaOptions = {\r\n  media: Photo.photo | Document.document | WebDocument | InputWebFileLocation,\r\n  thumb?: PhotoSize | Extract<VideoSize, VideoSize.videoSize>,\r\n  queueId?: number,\r\n  onlyCache?: boolean,\r\n  downloadId?: string\r\n};\r\n\r\ntype DownloadPromise = CancellablePromise<Blob>;\r\n\r\nexport type MyUploadFile = UploadFile.uploadFile | UploadWebFile.uploadWebFile;\r\n\r\n// export interface RefreshReferenceTask extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n// };\r\n\r\n// export interface RefreshReferenceTaskResponse extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n//   originalPayload: ReferenceBytes\r\n// };\r\n\r\nconst DO_NOT_UPLOAD_FILES = false;\r\nconst PREPARE_CACHE = false;\r\n\r\nconst MAX_DOWNLOAD_FILE_PART_SIZE = 1 * 1024 * 1024;\r\nconst MAX_UPLOAD_FILE_PART_SIZE = 512 * 1024;\r\nconst MIN_PART_SIZE = 128 * 1024;\r\nconst AVG_PART_SIZE = 512 * 1024;\r\n\r\nconst REGULAR_DOWNLOAD_DELTA = (9 * 512 * 1024) / MIN_PART_SIZE;\r\n// const PREMIUM_DOWNLOAD_DELTA = REGULAR_DOWNLOAD_DELTA * 2;\r\nconst PREMIUM_DOWNLOAD_DELTA = (56 * 512 * 1024) / MIN_PART_SIZE;\r\n\r\nconst IGNORE_ERRORS: Set<ErrorType> = new Set([\r\n  'DOWNLOAD_CANCELED',\r\n  'UPLOAD_CANCELED',\r\n  'UNKNOWN',\r\n  'NO_NEW_CONTEXT'\r\n]);\r\n\r\nexport class ApiFileManager extends AppManager {\r\n  private cacheStorage = new CacheStorageController('cachedFiles');\r\n  private downloadStorage = new DownloadStorage();\r\n\r\n  private downloadPromises: {\r\n    [fileName: string]: DownloadPromise\r\n  } = {};\r\n\r\n  // private downloadToDiscPromises: {\r\n  //   [fileName: string]: DownloadPromise\r\n  // } = {};\r\n\r\n  private uploadPromises: {\r\n    [fileName: string]: CancellablePromise<InputFile>\r\n  } = {};\r\n\r\n  private downloadPulls: {\r\n    [dcId: string]: Array<{\r\n      id: number,\r\n      queueId: number,\r\n      cb: () => Promise<MyUploadFile | void>,\r\n      deferred: {\r\n        resolve: (...args: any[]) => void,\r\n        reject: (...args: any[]) => void\r\n      },\r\n      activeDelta: number\r\n    }>\r\n  } = {};\r\n  private downloadActives: {[dcId: string]: number} = {};\r\n\r\n  public refreshReferencePromises: {\r\n    [referenceHex: string]: {\r\n      deferred: CancellablePromise<ReferenceBytes>,\r\n      timeout?: number\r\n    }\r\n  } = {};\r\n\r\n  private log: ReturnType<typeof logger> = logger('AFM', LogTypes.Error | LogTypes.Log);\r\n  private tempId = 0;\r\n  private queueId = 0;\r\n  private debug = Modes.debug;\r\n\r\n  private maxUploadParts = 4000;\r\n  private maxDownloadParts = 8000;\r\n  private webFileDcId: DcId;\r\n\r\n  protected after() {\r\n    setInterval(() => { // clear old promises\r\n      for(const hex in this.refreshReferencePromises) {\r\n        const {deferred} = this.refreshReferencePromises[hex];\r\n        if(deferred.isFulfilled || deferred.isRejected) {\r\n          delete this.refreshReferencePromises[hex];\r\n        }\r\n      }\r\n    }, 1800e3);\r\n\r\n    this.rootScope.addEventListener('config', (config) => {\r\n      this.webFileDcId = config.webfile_dc_id;\r\n    });\r\n\r\n    this.rootScope.addEventListener('app_config', (appConfig) => {\r\n      this.maxUploadParts = this.rootScope.premium ? appConfig.upload_max_fileparts_premium : appConfig.upload_max_fileparts_default;\r\n      this.maxDownloadParts = appConfig.upload_max_fileparts_premium;\r\n    });\r\n\r\n    if(PREPARE_CACHE) {\r\n      const perf = performance.now();\r\n      const storage = this.getFileStorage();\r\n      storage.timeoutOperation(async(cache) => {\r\n        const [requests, responses] = await Promise.all([cache.keys(), cache.matchAll()]);\r\n\r\n        for(let i = 0, length = requests.length; i < length; ++i) {\r\n          const request = requests[i];\r\n          const response = responses[i];\r\n          const url = request.url;\r\n          const size = +response.headers.get('content-length');\r\n          const splitted = url.split('/').pop().split('_');\r\n          if(splitted[0] === 'photo' || splitted[0] === 'document') {\r\n            this.thumbsStorage.setCacheContextURL(\r\n              {_: splitted[0], id: splitted[1]} as Photo.photo,\r\n              splitted[2],\r\n              '',\r\n              size\r\n            );\r\n          }\r\n        }\r\n\r\n        console.log('finished cache preparing', performance.now() - perf);\r\n      });\r\n    }\r\n  }\r\n\r\n  private downloadRequest(dcId: 'upload', id: number, cb: () => Promise<void>, activeDelta: number, queueId?: number): Promise<void>;\r\n  private downloadRequest(dcId: number, id: number, cb: () => Promise<MyUploadFile>, activeDelta: number, queueId?: number): Promise<MyUploadFile>;\r\n  private downloadRequest(dcId: number | string, id: number, cb: () => Promise<MyUploadFile | void>, activeDelta: number, queueId: number = 0) {\r\n    if(this.downloadPulls[dcId] === undefined) {\r\n      this.downloadPulls[dcId] = [];\r\n      this.downloadActives[dcId] = 0;\r\n    }\r\n\r\n    const downloadPull = this.downloadPulls[dcId];\r\n\r\n    const promise = new Promise<MyUploadFile | void>((resolve, reject) => {\r\n      downloadPull.push({id, queueId, cb, deferred: {resolve, reject}, activeDelta});\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.downloadCheck(dcId);\r\n    }, 0);\r\n\r\n    return promise;\r\n  }\r\n\r\n  private downloadCheck(dcId: string | number) {\r\n    const downloadPull = this.downloadPulls[dcId];\r\n    const downloadLimit = /* dcId === 'upload' ? 24 :  */(this.rootScope.premium ? PREMIUM_DOWNLOAD_DELTA : REGULAR_DOWNLOAD_DELTA);\r\n    // const downloadLimit = Infinity;\r\n\r\n    if(this.downloadActives[dcId] >= downloadLimit || !downloadPull?.length) {\r\n      return false;\r\n    }\r\n\r\n    // const data = downloadPull.shift();\r\n    const data = findAndSplice(downloadPull, (d) => d.queueId === 0) || findAndSplice(downloadPull, (d) => d.queueId === this.queueId) || downloadPull.shift();\r\n    const activeDelta = data.activeDelta || 1;\r\n\r\n    this.downloadActives[dcId] += activeDelta;\r\n\r\n    const promise = data.cb();\r\n    // const networkPromise = networkStats.waitForChunk(dcId as DcId, activeDelta * MIN_PART_SIZE);\r\n    /* Promise.race([\r\n      promise\r\n      // networkPromise\r\n    ]) */promise.then(() => {\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n\r\n      // networkPromise.resolve();\r\n    }, (error: ApiError) => {\r\n      if(!error?.type || !IGNORE_ERRORS.has(error.type)) {\r\n        this.log.error('downloadCheck error:', error);\r\n      }\r\n\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n\r\n      // networkPromise.reject(error);\r\n    }).finally(() => {\r\n      promise.then(data.deferred.resolve, data.deferred.reject);\r\n    });\r\n  }\r\n\r\n  public setQueueId(queueId: number) {\r\n    // this.log.error('setQueueId', queueId);\r\n    this.queueId = queueId;\r\n  }\r\n\r\n  private getFileStorage() {\r\n    return this.cacheStorage;\r\n  }\r\n\r\n  public cancelDownload(fileName: string) {\r\n    const promises = [this.downloadPromises[fileName], this.uploadPromises[fileName]].filter(Boolean);\r\n    let canceled = false;\r\n    for(let i = 0, length = promises.length; i < length; ++i) {\r\n      const promise = promises[i];\r\n      if(promise && !promise.isRejected && !promise.isFulfilled) {\r\n        promise.cancel();\r\n        canceled = true;\r\n      }\r\n    }\r\n\r\n    return canceled;\r\n  }\r\n\r\n  public requestWebFilePart(\r\n    dcId: DcId,\r\n    location: InputWebFileLocation,\r\n    offset: number,\r\n    limit: number,\r\n    id = 0,\r\n    queueId = 0,\r\n    checkCancel?: () => void\r\n  ) {\r\n    return this.downloadRequest(this.webFileDcId, id, async() => { // do not remove async, because checkCancel will throw an error\r\n      checkCancel?.();\r\n\r\n      if('url' in location) {\r\n        const url = location.url;\r\n        if(this.isLocalWebFile(url)) {\r\n          return fetch(url)\r\n          .then((response) => response.arrayBuffer())\r\n          .then((arrayBuffer) => {\r\n            const extension = url.split('.').pop() as MTFileExtension;\r\n            const mimeType = EXTENSION_MIME_TYPE_MAP[extension] || 'application/octet-stream';\r\n            return {\r\n              _: 'upload.webFile',\r\n              size: arrayBuffer.byteLength,\r\n              mime_type: mimeType,\r\n              file_type: {_: 'storage.fileUnknown'},\r\n              mtime: 0,\r\n              bytes: new Uint8Array(arrayBuffer)\r\n            };\r\n          });\r\n        }\r\n      }\r\n\r\n      return this.apiManager.invokeApi('upload.getWebFile', {\r\n        location,\r\n        offset,\r\n        limit\r\n      }, {\r\n        dcId: this.webFileDcId,\r\n        fileDownload: true\r\n      });\r\n    }, this.getDelta(limit), queueId);\r\n  }\r\n\r\n  public requestFilePart(\r\n    dcId: DcId,\r\n    location: InputFileLocation,\r\n    offset: number,\r\n    limit: number,\r\n    id = 0,\r\n    queueId = 0,\r\n    checkCancel?: () => void\r\n  ) {\r\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\r\n      checkCancel?.();\r\n\r\n      const invoke = async(): Promise<MyUploadFile> => {\r\n        checkCancel?.(); // do not remove async, because checkCancel will throw an error\r\n\r\n        // * IMPORTANT: reference can be changed in previous request\r\n        const reference = (location as InputFileLocation.inputDocumentFileLocation).file_reference?.slice();\r\n\r\n        const promise = // pause(offset > (100 * 1024 * 1024) ? 10000000 : 0).then(() =>\r\n        this.apiManager.invokeApi('upload.getFile', {\r\n          location,\r\n          offset,\r\n          limit\r\n        }, {\r\n          dcId,\r\n          fileDownload: true\r\n        }) as Promise<MyUploadFile>/* ) */;\r\n\r\n        return promise.catch((err: ApiError) => {\r\n          checkCancel?.();\r\n\r\n          if(err.type === 'FILE_REFERENCE_EXPIRED') {\r\n            return this.refreshReference(location as InputFileLocation.inputDocumentFileLocation, reference).then(invoke);\r\n          }\r\n\r\n          throw err;\r\n        });\r\n      };\r\n\r\n      assumeType<InputFileLocation.inputDocumentFileLocation>(location);\r\n      const reference = location.file_reference;\r\n      if(reference && !location.checkedReference) { // check stream's location because it's new every call\r\n        location.checkedReference = true;\r\n        const hex = bytesToHex(reference);\r\n        if(this.refreshReferencePromises[hex]) {\r\n          return this.refreshReference(location, reference).then(invoke);\r\n        }\r\n      }\r\n\r\n      return invoke();\r\n    }, this.getDelta(limit), queueId);\r\n  }\r\n\r\n  /* private convertBlobToBytes(blob: Blob) {\r\n    return blob.arrayBuffer().then((buffer) => new Uint8Array(buffer));\r\n  } */\r\n\r\n  private getDelta(bytes: number) {\r\n    return bytes / MIN_PART_SIZE;\r\n  }\r\n\r\n  private getLimitPart(size: number, isUpload: boolean): number {\r\n    if(!size) { // * sometimes size can be 0 (e.g. avatars, webDocuments)\r\n      return AVG_PART_SIZE;\r\n    }\r\n\r\n    // return 1 * 1024 * 1024;\r\n\r\n    let bytes = MIN_PART_SIZE;\r\n\r\n    const maxParts = isUpload ? this.maxUploadParts : this.maxDownloadParts;\r\n    const maxPartSize = isUpload ? MAX_UPLOAD_FILE_PART_SIZE : MAX_DOWNLOAD_FILE_PART_SIZE;\r\n    // usually it will stick to 512Kb size if the file is too big\r\n    while((size / bytes) > maxParts && bytes < maxPartSize) {\r\n      bytes *= 2;\r\n    }\r\n    /* if(size < 1e6 || !size) bytes = 512;\r\n    else if(size < 3e6) bytes = 256;\r\n    else bytes = 128; */\r\n\r\n    return bytes;\r\n  }\r\n\r\n  private uncompressTGS = (bytes: Uint8Array, fileName: string) => {\r\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', bytes.slice().buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private uncompressTGV = (bytes: Uint8Array, fileName: string) => {\r\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    const buffer = bytes.slice().buffer;\r\n    if(getEnvironment().IS_FIREFOX) {\r\n      return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, true).then((text) => {\r\n        return fixFirefoxSvg(text as string);\r\n      }).then((text) => {\r\n        const textEncoder = new TextEncoder();\r\n        return textEncoder.encode(text);\r\n      });\r\n    }\r\n\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private convertWebp = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertWebp', {fileName, bytes});\r\n  };\r\n\r\n  private convertOpus = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertOpus', {fileName, bytes});\r\n  };\r\n\r\n  private refreshReference(\r\n    inputFileLocation: InputFileLocation.inputDocumentFileLocation,\r\n    reference: typeof inputFileLocation['file_reference'],\r\n    hex = bytesToHex(reference)\r\n  ) {\r\n    let r = this.refreshReferencePromises[hex];\r\n    if(!r) {\r\n      const deferred = deferredPromise<ReferenceBytes>();\r\n\r\n      r = this.refreshReferencePromises[hex] = {\r\n        deferred\r\n\r\n        // ! I don't remember what it was for...\r\n        // timeout: ctx.setTimeout(() => {\r\n        //   this.log.error('Didn\\'t refresh the reference:', inputFileLocation);\r\n        //   deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\r\n        // }, 60000)\r\n      };\r\n\r\n      // deferred.catch(noop).finally(() => {\r\n      //   clearTimeout(r.timeout);\r\n      // });\r\n\r\n      this.referenceDatabase.refreshReference(reference).then((reference) => {\r\n        if(hex === bytesToHex(reference)) {\r\n          deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\r\n        }\r\n\r\n        deferred.resolve(reference);\r\n      }, deferred.reject.bind(deferred));\r\n    }\r\n\r\n    // have to replace file_reference in any way, because location can be different everytime if it's stream\r\n    return r.deferred.then((reference) => {\r\n      inputFileLocation.file_reference = reference;\r\n    });\r\n  }\r\n\r\n  public isDownloading(fileName: string) {\r\n    return !!this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getDownload(fileName: string) {\r\n    return this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getUpload(fileName: string) {\r\n    return this.uploadPromises[fileName];\r\n  }\r\n\r\n  private getConvertMethod(mimeType: MTMimeType) {\r\n    let process: ApiFileManager['uncompressTGS'] | ApiFileManager['convertWebp'];\r\n    if(mimeType === 'application/x-tgwallpattern') {\r\n      process = this.uncompressTGV;\r\n      mimeType = 'image/svg+xml';\r\n    } else if(mimeType === 'image/webp' && !getEnvironment().IS_WEBP_SUPPORTED) {\r\n      process = this.convertWebp;\r\n      mimeType = 'image/png';\r\n    } else if(mimeType === 'application/x-tgsticker') {\r\n      process = this.uncompressTGS;\r\n      mimeType = 'application/json';\r\n    } else if(mimeType === 'audio/ogg' && !getEnvironment().IS_OPUS_SUPPORTED) {\r\n      process = this.convertOpus;\r\n      mimeType = 'audio/wav';\r\n    }\r\n\r\n    return {mimeType, process};\r\n  }\r\n\r\n  private allocateDeferredPromises(startOffset: number, size: number, limitPart: number) {\r\n    const delayed: Delayed[] = [];\r\n    let offset = startOffset;\r\n    let writePromise: CancellablePromise<void> = Promise.resolve(),\r\n      writeDeferred: CancellablePromise<void>;\r\n    do {\r\n      writeDeferred = deferredPromise<void>();\r\n      delayed.push({offset, writePromise, writeDeferred});\r\n      writePromise = writeDeferred;\r\n      offset += limitPart;\r\n    } while(offset < size);\r\n\r\n    return delayed;\r\n  }\r\n\r\n  private isLocalWebFile(url: string) {\r\n    return url?.startsWith('assets/');\r\n  }\r\n\r\n  public download(options: DownloadOptions): DownloadPromise {\r\n    const size = options.size ?? 0;\r\n    const {dcId, location} = options;\r\n    let {downloadId} = options;\r\n    if(downloadId && !appManagersManager.getServiceMessagePort()) {\r\n      this.log.error('download fallback to blob', options);\r\n      downloadId = undefined;\r\n    }\r\n\r\n    const originalMimeType = options.mimeType;\r\n    const convertMethod = this.getConvertMethod(originalMimeType);\r\n    const {process} = convertMethod;\r\n    options.mimeType = convertMethod.mimeType || 'image/jpeg';\r\n\r\n    const fileName = getDownloadFileNameFromOptions(options);\r\n    const cacheFileName = downloadId ? getDownloadFileNameFromOptions({...copy(options), downloadId: undefined}) : fileName;\r\n    const cacheStorage: FileStorage = this.getFileStorage();\r\n    const downloadStorage: FileStorage = downloadId ? this.downloadStorage : undefined;\r\n    let deferred: DownloadPromise = downloadId ? undefined : this.downloadPromises[fileName];\r\n\r\n    this.debug && this.log('downloadFile', fileName, options);\r\n\r\n    if(deferred) {\r\n      return deferred;\r\n    }\r\n\r\n    // if(deferred) {\r\n    //   if(size) {\r\n    //     return deferred.then(async(blob) => {\r\n    //       if(blob instanceof Blob && blob.size < size) {\r\n    //         this.debug && this.log('downloadFile need to deleteFile, wrong size:', blob.size, size);\r\n\r\n    //         try {\r\n    //           await this.delete(fileName);\r\n    //         } finally {\r\n    //           return this.download(options);\r\n    //         }\r\n    //       } else {\r\n    //         return blob;\r\n    //       }\r\n    //     });\r\n    //   } else {\r\n    //     return deferred;\r\n    //   }\r\n    // }\r\n\r\n    const errorHandler = (item: typeof cachePrepared, error: ApiError) => {\r\n      if(item?.error) {\r\n        return;\r\n      }\r\n\r\n      for(const p of prepared) {\r\n        if(item && item !== p) {\r\n          continue;\r\n        }\r\n\r\n        p.error = error;\r\n        p.deferred.reject(error);\r\n      }\r\n    };\r\n\r\n    const isWebFile = isWebFileLocation(location);\r\n    const isLocalWebFile = isWebFile && this.isLocalWebFile((location as InputWebFileLocation.inputWebFileLocation).url);\r\n    const id = this.tempId++;\r\n    const limitPart = isLocalWebFile ?\r\n      size :\r\n      options.limitPart || this.getLimitPart(size, false);\r\n\r\n    let getFile: FileStorage['getFile'] = cacheStorage.getFile.bind(cacheStorage);\r\n\r\n    let cachePrepared: ReturnType<FileStorage['prepareWriting']> & {writer?: StreamWriter, error?: ApiError},\r\n      downloadPrepared: typeof cachePrepared;\r\n    const prepared: (typeof cachePrepared)[] = [];\r\n    const possibleSize = size || limitPart;\r\n\r\n    const getErrorsCount = () => prepared.reduce((acc, item) => acc + +!!item.error, 0);\r\n\r\n    const attach = (item: typeof cachePrepared, fileName: string) => {\r\n      const {deferred} = item;\r\n      const _errorHandler = errorHandler.bind(null, item);\r\n\r\n      deferred.cancel = () => deferred.reject(makeError('DOWNLOAD_CANCELED'));\r\n      deferred.catch((error) => {\r\n        _errorHandler(error);\r\n        item.writer?.truncate?.();\r\n      }).finally(() => {\r\n        if(this.downloadPromises[fileName] === deferred) {\r\n          delete this.downloadPromises[fileName];\r\n        }\r\n\r\n        delete item.writer;\r\n        // indexOfAndSplice(prepared, item);\r\n      });\r\n\r\n      this.downloadPromises[fileName] = deferred;\r\n\r\n      prepared.push(item);\r\n    };\r\n\r\n    if(cacheStorage && (!downloadStorage || possibleSize <= MAX_FILE_SAVE_SIZE)) {\r\n      cachePrepared = cacheStorage.prepareWriting(cacheFileName, possibleSize, options.mimeType)\r\n      attach(cachePrepared, cacheFileName);\r\n    }\r\n\r\n    if(downloadStorage) {\r\n      let downloadFileName = options.fileName; // it's doc file_name\r\n      if(!downloadFileName) {\r\n        downloadFileName = cacheFileName;\r\n        const ext = MIME_TYPE_EXTENSION_MAP[options.mimeType];\r\n        if(ext) {\r\n          downloadFileName += '.' + ext;\r\n        }\r\n      }\r\n\r\n      downloadPrepared = downloadStorage.prepareWriting({\r\n        fileName: downloadFileName,\r\n        downloadId,\r\n        size: possibleSize\r\n      });\r\n      attach(downloadPrepared, fileName);\r\n\r\n      if(cachePrepared) { // cancel cache too\r\n        downloadPrepared.deferred.catch((err) => cachePrepared.deferred.reject(err));\r\n      }\r\n\r\n      // this.downloadToDiscPromises[cacheFileName] = deferred;\r\n      // deferred.catch(noop).finally(() => {\r\n      //   if(this.downloadToDiscPromises[cacheFileName] === deferred) {\r\n      //     delete this.downloadToDiscPromises[cacheFileName];\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    deferred = downloadPrepared?.deferred ?? cachePrepared.deferred;\r\n\r\n    if(downloadStorage && process) { // then have to load file again\r\n      getFile = downloadStorage.getFile.bind(downloadStorage);\r\n    }\r\n\r\n    getFile(cacheFileName).then(async(blob: Blob) => {\r\n      checkCancel();\r\n\r\n      // if(blob.size < size) {\r\n      //   if(!options.onlyCache) {\r\n      //     await this.delete(cacheFileName);\r\n      //     checkCancel();\r\n      //   }\r\n\r\n      //   throw makeError('NO_ENTRY_FOUND');\r\n      // }\r\n\r\n      if(downloadPrepared) {\r\n        const writer = downloadPrepared.writer = downloadPrepared.getWriter();\r\n        checkCancel();\r\n\r\n        const arr = await readBlobAsUint8Array(blob);\r\n        checkCancel();\r\n        await writer.write(arr);\r\n        checkCancel();\r\n\r\n        downloadPrepared.deferred.resolve(await writer.finalize());\r\n      }\r\n\r\n      if(cachePrepared) {\r\n        cachePrepared.deferred.resolve(blob);\r\n      }\r\n    }).catch(async(err: ApiError) => {\r\n      if(options.onlyCache) {\r\n        errorHandler(null, err);\r\n        return;\r\n      }\r\n\r\n      prepared.forEach((p) => {\r\n        p.writer = p.getWriter();\r\n      });\r\n\r\n      const maxRequests = Infinity;\r\n\r\n      const requestPart = (isWebFile ? this.requestWebFilePart : this.requestFilePart).bind(this);\r\n\r\n      if(isWebFile && this.webFileDcId === undefined && !isLocalWebFile) {\r\n        await this.apiManager.getConfig();\r\n        checkCancel();\r\n      }\r\n\r\n      const delayed = this.allocateDeferredPromises(0, size, limitPart);\r\n\r\n      const progress: Progress = {done: 0, offset: 0, total: size, fileName};\r\n      const dispatchProgress = () => {\r\n        try {\r\n          checkCancel();\r\n          progress.done = done;\r\n          this.rootScope.dispatchEvent('download_progress', progress);\r\n        } catch(err) {}\r\n      };\r\n\r\n      const throttledDispatchProgress = throttle(dispatchProgress, 50, true);\r\n\r\n      let done = 0;\r\n      const superpuper = async() => {\r\n        const {offset, writePromise, writeDeferred} = delayed.shift();\r\n        try {\r\n          checkCancel();\r\n\r\n          const requestPerf = performance.now();\r\n          const result = await requestPart(dcId, location as any, offset, limitPart, id, options.queueId, checkCancel);\r\n          const requestTime = performance.now() - requestPerf;\r\n\r\n          const bytes = result.bytes;\r\n\r\n          if(delayed.length) {\r\n            superpuper();\r\n          }\r\n\r\n          const byteLength = bytes.byteLength;\r\n          this.debug && this.log('downloadFile requestFilePart result:', fileName, result);\r\n          const isFinal = (offset + limitPart) >= size || !byteLength;\r\n          if(byteLength) {\r\n            done += byteLength;\r\n\r\n            if(isFinal) {\r\n              dispatchProgress();\r\n            } else {\r\n              throttledDispatchProgress();\r\n            }\r\n\r\n            const writeQueuePerf = performance.now();\r\n            await writePromise;\r\n            checkCancel();\r\n            const writeQueueTime = performance.now() - writeQueuePerf;\r\n\r\n            const perf = performance.now();\r\n            await Promise.all(prepared.map(({writer}) => writer?.write(bytes, offset)));\r\n            checkCancel();\r\n            // downloadId && this.log('write time', performance.now() - perf, 'request time', requestTime, 'queue time', writeQueueTime);\r\n          }\r\n\r\n          if(isFinal) {\r\n            if(!size || done < size) {\r\n              prepared.forEach(({writer}) => writer?.trim?.(done));\r\n            }\r\n          }\r\n\r\n          if(isFinal && process) {\r\n            const promises = prepared\r\n            .filter(({writer}) => writer?.getParts && writer.replaceParts)\r\n            .map(async({writer}) => {\r\n              const bytes = writer.getParts();\r\n              const processedResult = await process(bytes, cacheFileName);\r\n              writer.replaceParts(processedResult);\r\n            });\r\n\r\n            await Promise.all(promises);\r\n            checkCancel();\r\n          }\r\n\r\n          writeDeferred.resolve();\r\n\r\n          if(isFinal) {\r\n            const saveToStorage = done <= MAX_FILE_SAVE_SIZE;\r\n            prepared.forEach((item) => {\r\n              const {deferred, writer} = item;\r\n              if(deferred.isFulfilled || deferred.isRejected || !writer) {\r\n                return;\r\n              }\r\n\r\n              const result = writer.finalize(saveToStorage);\r\n              deferred.resolve(result);\r\n            });\r\n          }\r\n        } catch(err) {\r\n          errorHandler(null, err as ApiError);\r\n        }\r\n      };\r\n\r\n      for(let i = 0, length = Math.min(maxRequests, delayed.length); i < length; ++i) {\r\n        superpuper();\r\n      }\r\n    }).catch(noop);\r\n\r\n    const checkCancel = () => {\r\n      if(getErrorsCount() === prepared.length) {\r\n        throw prepared[0].error;\r\n      }\r\n    };\r\n\r\n    return deferred;\r\n  }\r\n\r\n  public downloadMedia(options: DownloadMediaOptions): DownloadPromise {\r\n    let {media, thumb} = options;\r\n    const isPhoto = media._ === 'photo';\r\n    if(isPhoto && !thumb) {\r\n      return Promise.reject('preloadPhoto photoEmpty!');\r\n    }\r\n\r\n    // get original instance with correct file_reference instead of using copies\r\n    const isDocument = media._ === 'document';\r\n    // const isWebDocument = media._ === 'webDocument';\r\n    if(isDocument) media = this.appDocsManager.getDoc((media as Document.document).id);\r\n    else if(isPhoto) media = this.appPhotosManager.getPhoto((media as Photo.photo).id);\r\n    options.media = media || options.media;\r\n\r\n    const {fileName, downloadOptions} = getDownloadMediaDetails(options);\r\n\r\n    let promise = this.getDownload(fileName);\r\n    if(!promise) {\r\n      promise = this.download(downloadOptions);\r\n\r\n      if(isDocument && !thumb) {\r\n        this.rootScope.dispatchEvent('document_downloading', (media as Document.document).id);\r\n        promise.then(() => {\r\n          this.rootScope.dispatchEvent('document_downloaded', (media as Document.document).id);\r\n        }).catch(noop);\r\n      }\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public downloadMediaURL(options: DownloadMediaOptions): Promise<string> {\r\n    const {media, thumb} = options;\r\n\r\n    let cacheContext = this.thumbsStorage.getCacheContext(media as any, thumb?.type);\r\n    if((thumb ? (cacheContext.downloaded >= ('size' in thumb ? thumb.size : 0)) : true) && cacheContext.url) {\r\n      return Promise.resolve(cacheContext.url);\r\n    }\r\n\r\n    return this.downloadMedia(options).then((blob) => {\r\n      if(!cacheContext.downloaded || !cacheContext.url || cacheContext.downloaded < blob.size) {\r\n        const url = URL.createObjectURL(blob);\r\n        cacheContext = this.thumbsStorage.setCacheContextURL(media as any, cacheContext.type, url, blob.size);\r\n      }\r\n\r\n      return cacheContext.url;\r\n    });\r\n  }\r\n\r\n  public downloadMediaVoid(options: DownloadMediaOptions) {\r\n    return this.downloadMedia(options).then(noop);\r\n  }\r\n\r\n  private delete(fileName: string) {\r\n    delete this.downloadPromises[fileName];\r\n    return this.getFileStorage().delete(fileName);\r\n  }\r\n\r\n  public upload({file, fileName}: {file: Blob | File, fileName?: string}) {\r\n    fileName ||= getFileNameForUpload(file);\r\n\r\n    const fileSize = file.size;\r\n    const isBigFile = fileSize >= 10485760;\r\n    const partSize = this.getLimitPart(fileSize, true);\r\n    const activeDelta = this.getDelta(partSize);\r\n    const totalParts = DO_NOT_UPLOAD_FILES ? 0 : Math.ceil(fileSize / partSize);\r\n    const fileId = randomLong();\r\n    const resultInputFile: InputFile = {\r\n      _: isBigFile ? 'inputFileBig' : 'inputFile',\r\n      id: fileId as any,\r\n      parts: totalParts,\r\n      name: fileName,\r\n      md5_checksum: ''\r\n    };\r\n\r\n    const deferred = deferredPromise<typeof resultInputFile>();\r\n    if(totalParts > this.maxUploadParts) {\r\n      deferred.reject(makeError('FILE_TOO_BIG'));\r\n      return deferred;\r\n    }\r\n\r\n    let canceled = false, resolved = false;\r\n    let errorHandler = (error: ApiError) => {\r\n      if(error?.type !== 'UPLOAD_CANCELED') {\r\n        this.log.error('Up Error', error);\r\n      }\r\n\r\n      deferred.reject(error);\r\n      canceled = true;\r\n      errorHandler = noop;\r\n    };\r\n\r\n    const method = isBigFile ? 'upload.saveBigFilePart' : 'upload.saveFilePart';\r\n    const id = this.tempId++;\r\n\r\n    const self = this;\r\n    function* generator() {\r\n      let _part = 0, doneParts = 0;\r\n      for(let offset = 0; offset < fileSize; offset += partSize) {\r\n        const part = _part++; // 0, 1\r\n        yield self.downloadRequest('upload', id, async() => {\r\n          checkCancel();\r\n\r\n          const blob = file.slice(offset, offset + partSize);\r\n          const buffer = await readBlobAsArrayBuffer(blob);\r\n          checkCancel();\r\n\r\n          self.debug && self.log('Upload file part, isBig:', isBigFile, part, buffer.byteLength, new Uint8Array(buffer).length, new Uint8Array(buffer).slice().length);\r\n\r\n          return self.apiManager.invokeApi(method, {\r\n            file_id: fileId,\r\n            file_part: part,\r\n            file_total_parts: totalParts,\r\n            bytes: buffer\r\n          } as any, {\r\n            fileUpload: true\r\n          }).then(() => {\r\n            if(canceled) {\r\n              return;\r\n            }\r\n\r\n            ++doneParts;\r\n            const progress: Progress = {done: doneParts * partSize, offset, total: fileSize, fileName};\r\n            deferred.notify(progress);\r\n\r\n            if(doneParts >= totalParts) {\r\n              deferred.resolve(resultInputFile);\r\n              resolved = true;\r\n            }\r\n          }, errorHandler);\r\n        }, activeDelta).catch(errorHandler);\r\n      }\r\n    }\r\n\r\n    const it = generator();\r\n    const process = () => {\r\n      if(canceled) return;\r\n      const r = it.next();\r\n      if(r.done || canceled) return;\r\n      (r.value as Promise<void>).then(process);\r\n    };\r\n\r\n    const maxRequests = Infinity;\r\n    for(let i = 0, length = Math.min(maxRequests, totalParts); i < length; ++i) {\r\n      process();\r\n    }\r\n\r\n    const checkCancel = () => {\r\n      if(canceled) {\r\n        throw makeError('UPLOAD_CANCELED');\r\n      }\r\n    };\r\n\r\n    deferred.cancel = () => {\r\n      if(!canceled && !resolved) {\r\n        canceled = true;\r\n        errorHandler(makeError('UPLOAD_CANCELED'));\r\n      }\r\n    };\r\n\r\n    deferred.notify = (progress: Progress) => {\r\n      this.rootScope.dispatchEvent('download_progress', progress);\r\n    };\r\n\r\n    deferred.finally(() => {\r\n      if(this.uploadPromises[fileName] === deferred) {\r\n        delete this.uploadPromises[fileName];\r\n      }\r\n    });\r\n\r\n    return this.uploadPromises[fileName] = deferred;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../config/modes';\r\nimport {IS_WORKER} from '../helpers/context';\r\nimport {WorkerTaskTemplate} from '../types';\r\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\r\n// import { stringify } from '../helpers/json';\r\n\r\nclass LocalStorage<Storage extends Record<string, any>> {\r\n  private prefix = '';\r\n  private cache: Partial<Storage> = {};\r\n  private useStorage = true;\r\n\r\n  constructor(/* private preserveKeys: (keyof Storage)[] */) {\r\n    if(Modes.test) {\r\n      this.prefix = 't_';\r\n    }\r\n  }\r\n\r\n  public get<T extends keyof Storage>(key: T, useCache = true): Storage[T] {\r\n    if(this.cache.hasOwnProperty(key) && useCache) {\r\n      return this.cache[key];\r\n    } else if(this.useStorage) {\r\n      let value: Storage[T];\r\n      try {\r\n        value = localStorage.getItem(this.prefix + (key as string)) as any;\r\n      } catch(err) {\r\n        this.useStorage = false;\r\n      }\r\n\r\n      if(value !== null) {\r\n        try {\r\n          value = JSON.parse(value);\r\n        } catch(err) {\r\n          // console.error(err);\r\n        }\r\n      } else {\r\n        value = undefined;\r\n      }\r\n\r\n      return value;\r\n    }/*  else {\r\n      throw 'something went wrong';\r\n    } */\r\n  }\r\n\r\n  public set(obj: Partial<Storage>, onlyLocal = false) {\r\n    for(const key in obj) {\r\n      if(obj.hasOwnProperty(key)) {\r\n        const value = obj[key];\r\n        this.cache[key] = value;\r\n\r\n        if(this.useStorage && !onlyLocal) {\r\n          try {\r\n            const stringified = JSON.stringify(value);\r\n            localStorage.setItem(this.prefix + key, stringified);\r\n          } catch(err) {\r\n            this.useStorage = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public delete(key: keyof Storage, saveLocal = false) {\r\n    // ! it is needed here\r\n    key = '' + (key as string);\r\n\r\n    if(!saveLocal) {\r\n      delete this.cache[key];\r\n    }\r\n\r\n    // if(this.useStorage) {\r\n    try {\r\n      localStorage.removeItem(this.prefix + (key as string));\r\n    } catch(err) {\r\n\r\n    }\r\n    // }\r\n  }\r\n\r\n  /* public clear(preserveKeys: (keyof Storage)[] = this.preserveKeys) {\r\n    // if(this.useStorage) {\r\n      try {\r\n        let obj: Partial<Storage> = {};\r\n        if(preserveKeys) {\r\n          preserveKeys.forEach((key) => {\r\n            const value = this.get(key);\r\n            if(value !== undefined) {\r\n              obj[key] = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        localStorage.clear();\r\n\r\n        if(preserveKeys) {\r\n          this.set(obj);\r\n        }\r\n      } catch(err) {\r\n\r\n      }\r\n    // }\r\n  } */\r\n\r\n  public clear() {\r\n    const keys: string[] = ['dc', 'server_time_offset', 'xt_instance', 'user_auth', 'state_id', 'k_build'];\r\n    for(let i = 1; i <= 5; ++i) {\r\n      keys.push(`dc${i}_server_salt`);\r\n      keys.push(`dc${i}_auth_key`);\r\n    }\r\n\r\n    for(const key of keys) {\r\n      this.delete(key, true);\r\n    }\r\n  }\r\n\r\n  public toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    this.useStorage = enabled;\r\n\r\n    if(!clearWrite) {\r\n      return;\r\n    }\r\n\r\n    if(!enabled) {\r\n      this.clear();\r\n    } else {\r\n      return this.set(this.cache);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface LocalStorageProxyTask extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: {\r\n    type: 'set' | 'get' | 'delete' | 'clear' | 'toggleStorage',\r\n    args: any[]\r\n  }\r\n};\r\n\r\nexport interface LocalStorageProxyTaskResponse extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: any\r\n};\r\n\r\nexport default class LocalStorageController<Storage extends Record<string, any>> {\r\n  private static STORAGES: LocalStorageController<any>[] = [];\r\n  // private log = (...args: any[]) => console.log('[SW LS]', ...args);\r\n  // private log = (...args: any[]) => {};\r\n\r\n  private storage: LocalStorage<Storage>;\r\n\r\n  constructor(/* private preserveKeys: (keyof Storage)[] = [] */) {\r\n    LocalStorageController.STORAGES.push(this);\r\n\r\n    if(!IS_WORKER) {\r\n      this.storage = new LocalStorage(/* preserveKeys */);\r\n    }\r\n  }\r\n\r\n  private async proxy<T>(type: LocalStorageProxyTask['payload']['type'], ...args: LocalStorageProxyTask['payload']['args']): Promise<T> {\r\n    if(IS_WORKER) {\r\n      const port = MTProtoMessagePort.getInstance<false>();\r\n      return port.invoke('localStorageProxy', {type, args});\r\n    }\r\n\r\n    args = Array.prototype.slice.call(args);\r\n\r\n    // @ts-ignore\r\n    return this.storage[type].apply(this.storage, args as any);\r\n  }\r\n\r\n  public get<T extends keyof Storage>(key: T, useCache?: boolean) {\r\n    return this.proxy<Storage[T]>('get', key, useCache);\r\n  }\r\n\r\n  public set(obj: Partial<Storage>, onlyLocal?: boolean) {\r\n    return this.proxy<void>('set', obj, onlyLocal);\r\n  }\r\n\r\n  public delete(key: keyof Storage, saveLocal?: boolean) {\r\n    return this.proxy<void>('delete', key, saveLocal);\r\n  }\r\n\r\n  public clear(/* preserveKeys?: (keyof Storage)[] */) {\r\n    return this.proxy<void>('clear'/* , preserveKeys */);\r\n  }\r\n\r\n  public toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    return this.proxy<void>('toggleStorage', enabled, clearWrite);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {AppInstance} from './mtproto/singleInstance';\r\nimport type {UserAuth} from './mtproto/mtproto_config';\r\nimport type {DcId} from '../types';\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport LocalStorageController from './localStorage';\r\n\r\nconst sessionStorage = new LocalStorageController<{\r\n  dc: DcId,\r\n  user_auth: UserAuth,\r\n  state_id: number,\r\n  dc1_auth_key: string,\r\n  dc2_auth_key: string,\r\n  dc3_auth_key: string,\r\n  dc4_auth_key: string,\r\n  dc5_auth_key: string,\r\n  dc1_server_salt: string,\r\n  dc2_server_salt: string,\r\n  dc3_server_salt: string,\r\n  dc4_server_salt: string,\r\n  dc5_server_salt: string,\r\n  auth_key_fingerprint: string, // = dc${App.baseDcId}_auth_key.slice(0, 8)\r\n  server_time_offset: number,\r\n  xt_instance: AppInstance,\r\n  kz_version: 'K' | 'Z',\r\n  tgme_sync: {\r\n    canRedirect: boolean,\r\n    ts: number\r\n  },\r\n  k_build: number\r\n}>(/* ['kz_version'] */);\r\nMOUNT_CLASS_TO.appStorage = sessionStorage;\r\nexport default sessionStorage;\r\n","export default function bytesFromHex(hexString: string) {\r\n  const len = hexString.length;\r\n  const bytes = new Uint8Array(Math.ceil(len / 2));\r\n  let start = 0;\r\n\r\n  if(len % 2) { // read 0x581 as 0x0581\r\n    bytes[start++] = parseInt(hexString.charAt(0), 16);\r\n  }\r\n\r\n  for(let i = start; i < len; i += 2) {\r\n    bytes[start++] = parseInt(hexString.substr(i, 2), 16);\r\n  }\r\n\r\n  return bytes;\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from '../../environment/ctx';\nimport assumeType from '../../helpers/assumeType';\nimport callbackify from '../../helpers/callbackify';\nimport {ignoreRestrictionReasons} from '../../helpers/restrictions';\nimport {Config, DataJSON, HelpAppConfig, HelpPeerColors, MethodDeclMap, User} from '../../layer';\nimport {InvokeApiOptions} from '../../types';\nimport {AppManager} from '../appManagers/manager';\nimport {MTAppConfig} from './appConfig';\nimport {UserAuth} from './mtproto_config';\nimport {MTMessage} from './networker';\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport type ApiLimitType = 'pin' | 'folderPin' | 'folders' |\n  'favedStickers' | 'reactions' | 'bio' | 'topicPin' | 'caption' |\n  'chatlistsJoined' | 'chatlistInvites' | 'channels' | 'links' |\n  'gifs' | 'folderPeers' | 'uploadFileParts' | 'recommendedChannels';\n\nexport default abstract class ApiManagerMethods extends AppManager {\n  private afterMessageIdTemp: number;\n  private hashes: {[method: string]: HashOptions} = {};\n  private apiPromisesSingleProcess: {\n    [q: string]: Map<any, Promise<any>>\n  } = {};\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        result?: any,\n        error?: any,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  protected config: Config;\n  protected appConfig: MTAppConfig;\n  protected requestedAppConfig: boolean;\n\n  protected themeParams: DataJSON;\n\n  constructor() {\n    super();\n    this.afterMessageIdTemp = 0;\n  }\n\n  protected after() {\n    return;\n    return this.appStateManager.getState().then((state) => {\n      this.applyAppConfig(state.appConfig, false);\n    });\n  }\n\n  abstract setUserAuth(userAuth: UserAuth | UserId): Promise<void>;\n\n  public setUser(user: User) {\n    // appUsersManager.saveApiUser(user);\n    return this.setUserAuth(user.id);\n  }\n\n  abstract invokeApi<T extends keyof MethodDeclMap>(method: T, params?: MethodDeclMap[T]['req'], options?: InvokeApiOptions): Promise<MethodDeclMap[T]['res']>;\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n\n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    // console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap, R>(o: {\n    method: T,\n    processResult?: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: Omit<MethodDeclMap[T]['req'], 'hash'>,\n    options?: InvokeApiOptions & {cacheKey?: string},\n    overwrite?: boolean\n  }) {\n    // @ts-ignore\n    o.params ??= {};\n    o.options ??= {};\n    // console.log('will invokeApi:', method, params, options);\n\n    const {params, options, method, overwrite} = o;\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        if(overwrite) {\n          delete this.hashes[method][queryJSON];\n          cached = undefined;\n        } else {\n          (params as any).hash = cached.hash;\n        }\n      }\n    }\n\n    return this.invokeApiSingleProcess<T, R>({\n      method,\n      processResult: (result) => {\n        if(result._.includes('NotModified')) {\n          // this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n          return cached.result;\n        }\n\n        if(result.hash/*  || result.messages */) {\n          const hash = result.hash/*  || this.computeHash(result.messages) */;\n\n          if(!this.hashes[method]) this.hashes[method] = {};\n          cached = this.hashes[method][queryJSON] = {\n            hash,\n            result\n          };\n        }\n\n        if(o.processResult) {\n          const newResult = o.processResult(result);\n          return cached ? cached.result = newResult : newResult;\n        }\n\n        return result;\n      },\n      params,\n      options\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    const cache = this.apiPromisesSingle;\n    if(cache[q]) {\n      return cache[q];\n    }\n\n    return cache[q] = this.invokeApi(method, params, options).finally(() => {\n      delete cache[q];\n    });\n  }\n\n  public invokeApiSingleProcess<T extends keyof MethodDeclMap, R = MethodDeclMap[T]['res']>(o: {\n    method: T,\n    processResult?: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: MethodDeclMap[T]['req'],\n    options?: InvokeApiOptions & {cacheKey?: string, overwrite?: boolean}\n  }): Promise<Awaited<R>> {\n    o.params ??= {};\n    o.options ??= {};\n\n    const {method, processResult, processError, params, options} = o;\n    const cache = this.apiPromisesSingleProcess;\n    const cacheKey = options.cacheKey || JSON.stringify(params);\n    const map = cache[method] ??= new Map();\n    const oldPromise = map.get(cacheKey);\n    if(oldPromise) {\n      return oldPromise;\n    }\n\n    const getNewPromise = () => {\n      const promise = map.get(cacheKey);\n      return promise === p ? undefined : promise;\n    };\n\n    const originalPromise = this.invokeApi(method, params, options);\n    const newPromise: Promise<Awaited<R>> = originalPromise.then((result) => {\n      return getNewPromise() || (processResult ? processResult(result) : result);\n    }, (error) => {\n      const promise = getNewPromise();\n      if(promise) {\n        return promise;\n      }\n\n      if(!processError) {\n        throw error;\n      }\n\n      return processError(error);\n    });\n\n    const p = newPromise.finally(() => {\n      if(map.get(cacheKey) !== p) {\n        return;\n      }\n\n      map.delete(cacheKey);\n      if(!map.size) {\n        delete cache[method];\n      }\n    });\n\n    map.set(cacheKey, p);\n    return p;\n  }\n\n  public invokeApiCacheable<\n    T extends keyof MethodDeclMap,\n    O extends InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean, syncIfHasResult: boolean}>\n  >(\n    method: T,\n    params: MethodDeclMap[T]['req'] = {} as any,\n    options: O = {} as any\n  ): O['syncIfHasResult'] extends true ? MethodDeclMap[T]['res'] | Promise<MethodDeclMap[T]['res']> : Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ??= {};\n    const queryJSON = JSON.stringify(params);\n    let item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      if(options.syncIfHasResult) {\n        if(item.hasOwnProperty('result')) {\n          return item.result;\n        } else if(item.hasOwnProperty('error')) {\n          throw item.error;\n        }\n      }\n\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item?.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = ctx.setTimeout(() => {\n        if(cache[queryJSON] === item) {\n          delete cache[queryJSON];\n        }\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    const onResult = (result: any) => {\n      item.result = result;\n    };\n\n    promise.then((result) => {\n      item.result = result;\n    }, (error) => {\n      item.error = error;\n    });\n\n    item = cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        try {\n          if(verify(item.params)) {\n            if(item.timeout) {\n              clearTimeout(item.timeout);\n            }\n\n            delete cache[queryJSON];\n          }\n        } catch(err) {\n          // this.log.error('clearCache error:', err, queryJSON, item);\n        }\n      }\n    }\n  }\n\n  public getConfig(overwrite?: boolean) {\n    if(this.config && !overwrite) {\n      return this.config;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getConfig',\n      params: {},\n      processResult: (config) => {\n        this.config = config;\n        this.rootScope.dispatchEvent('config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n\n  private applyAppConfig(appConfig: MTAppConfig, save?: boolean) {\n    this.appConfig = appConfig;\n    ignoreRestrictionReasons(appConfig.ignore_restriction_reasons ?? []);\n\n    if(save) {\n      appConfig.cachedTime = Date.now();\n      this.appStateManager.pushToState('appConfig', appConfig);\n    }\n\n    this.rootScope.dispatchEvent('app_config', appConfig);\n    return appConfig;\n  }\n\n  public getAppConfig(overwrite?: boolean) {\n    if(\n      this.appConfig &&\n      !overwrite &&\n      (this.requestedAppConfig || (Date.now() - (this.appConfig.cachedTime || 0)) < 86400e3)\n    ) {\n      return this.appConfig;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getAppConfig',\n      params: {\n        hash: this.appConfig?.hash || 0\n      },\n      processResult: async(helpAppConfig) => {\n        assumeType<HelpAppConfig.helpAppConfig>(helpAppConfig);\n        this.requestedAppConfig = true;\n        const config = helpAppConfig.config as any as MTAppConfig;\n        config.hash = helpAppConfig.hash;\n        return this.applyAppConfig(config, true);\n      },\n      options: {overwrite}\n    });\n  }\n\n  public getLimit(type: ApiLimitType, isPremium?: boolean) {\n    return callbackify(this.getAppConfig(), (appConfig) => {\n      const map: {[type in ApiLimitType]: [keyof MTAppConfig, keyof MTAppConfig] | keyof MTAppConfig} = {\n        pin: ['dialogs_pinned_limit_default', 'dialogs_pinned_limit_premium'],\n        folderPin: ['dialogs_folder_pinned_limit_default', 'dialogs_folder_pinned_limit_premium'],\n        folders: ['dialog_filters_limit_default', 'dialog_filters_limit_premium'],\n        favedStickers: ['stickers_faved_limit_default', 'stickers_faved_limit_premium'],\n        reactions: ['reactions_user_max_default', 'reactions_user_max_premium'],\n        bio: ['about_length_limit_default', 'about_length_limit_premium'],\n        topicPin: 'topics_pinned_limit',\n        caption: ['caption_length_limit_default', 'caption_length_limit_premium'],\n        chatlistInvites: ['chatlist_invites_limit_default', 'chatlist_invites_limit_premium'],\n        chatlistsJoined: ['chatlists_joined_limit_default', 'chatlists_joined_limit_premium'],\n        channels: ['channels_limit_default', 'channels_limit_premium'],\n        links: ['channels_public_limit_default', 'channels_public_limit_premium'],\n        gifs: ['saved_gifs_limit_default', 'saved_gifs_limit_premium'],\n        folderPeers: ['dialog_filters_chats_limit_default', 'dialog_filters_chats_limit_premium'],\n        uploadFileParts: ['upload_max_fileparts_default', 'upload_max_fileparts_premium'],\n        recommendedChannels: ['recommended_channels_limit_default', 'recommended_channels_limit_premium']\n      };\n\n      isPremium ??= this.rootScope.premium;\n\n      const a = map[type];\n      const key = Array.isArray(a) ? a[isPremium ? 1 : 0] : a;\n      return appConfig[key] as number;\n    });\n  }\n\n  public getPeerColors() {\n    return this.apiManager.invokeApiCacheable('help.getPeerColors', {hash: 0}) as Promise<HelpPeerColors.helpPeerColors>;\n  }\n\n  public setThemeParams(themeParams: DataJSON) {\n    this.themeParams = themeParams;\n  }\n\n  public getThemeParams() {\n    return this.themeParams;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport CacheStorageController from '../lib/files/cacheStorage';\r\nimport AppStorage from '../lib/storage';\r\nimport sessionStorage from '../lib/sessionStorage';\r\nimport noop from './noop';\r\n\r\nexport default function toggleStorages(enabled: boolean, clearWrite: boolean) {\r\n  return Promise.all([\r\n    AppStorage.toggleStorage(enabled, clearWrite),\r\n    CacheStorageController.toggleStorage(enabled, clearWrite),\r\n    sessionStorage.toggleStorage(enabled, clearWrite)\r\n  ]).then(noop, noop);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {UserAuth} from './mtproto_config';\r\nimport type {DcAuthKey, DcId, DcServerSalt, InvokeApiOptions} from '../../types';\r\nimport type {MethodDeclMap} from '../../layer';\r\nimport type TcpObfuscated from './transports/tcpObfuscated';\r\nimport sessionStorage from '../sessionStorage';\r\nimport MTPNetworker, {MTMessage} from './networker';\r\nimport {ConnectionType, constructTelegramWebSocketUrl, DcConfigurator, TransportType} from './dcConfigurator';\r\nimport {logger} from '../logger';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport App from '../../config/app';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport {IDB} from '../files/idb';\r\nimport CryptoWorker from '../crypto/cryptoMessagePort';\r\nimport ctx from '../../environment/ctx';\r\nimport noop from '../../helpers/noop';\r\nimport Modes from '../../config/modes';\r\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport ApiManagerMethods from './api_methods';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport toggleStorages from '../../helpers/toggleStorages';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport transportController from './transports/controller';\r\nimport MTTransport from './transports/transport';\r\n\r\n/* class RotatableArray<T> {\r\n  public array: Array<T> = [];\r\n  private lastIndex = -1;\r\n\r\n  public get() {\r\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\r\n    return this.array[this.lastIndex];\r\n  }\r\n} */\r\n\r\nconst PREMIUM_FILE_NETWORKERS_COUNT = 6;\r\nconst REGULAR_FILE_NETWORKERS_COUNT = 3;\r\n\r\nexport class ApiManager extends ApiManagerMethods {\r\n  private cachedNetworkers: {\r\n    [transportType in TransportType]: {\r\n      [connectionType in ConnectionType]: {\r\n        [dcId: DcId]: MTPNetworker[]\r\n      }\r\n    }\r\n  };\r\n\r\n  private cachedExportPromise: {[x: number]: Promise<unknown>};\r\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\r\n  private baseDcId: DcId;\r\n\r\n  // public telegramMeNotified = false;\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private afterMessageTempIds: {\r\n    [tempId: string]: {\r\n      messageId: string,\r\n      promise: Promise<any>\r\n    }\r\n  };\r\n\r\n  private transportType: TransportType;\r\n\r\n  private updatesProcessor: (obj: any) => void;\r\n\r\n  private loggingOut: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.log = logger('API');\r\n\r\n    this.cachedNetworkers = {} as any;\r\n    this.cachedExportPromise = {};\r\n    this.gettingNetworkers = {};\r\n    this.baseDcId = 0;\r\n    this.afterMessageTempIds = {};\r\n\r\n    this.transportType = Modes.transport;\r\n\r\n    if(import.meta.env.VITE_MTPROTO_AUTO) {\r\n      transportController.addEventListener('transport', (transportType) => {\r\n        this.changeTransportType(transportType);\r\n      });\r\n    }\r\n\r\n    // * Make sure that the used autologin_token is no more than 10000 seconds old\r\n    // * https://core.telegram.org/api/url-authorization\r\n    const REFRESH_APP_CONFIG_INTERVAL = (10000 - 30) * 1000;\r\n    setInterval(() => {\r\n      this.getConfig(true);\r\n    }, REFRESH_APP_CONFIG_INTERVAL);\r\n  }\r\n\r\n  protected after() {\r\n    const result = super.after();\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateConfig: () => {\r\n        this.getConfig(true);\r\n        this.getAppConfig(true);\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      if(this.config) { // refresh configs if had a config during authorization\r\n        this.apiUpdatesManager.processLocalUpdate({_: 'updateConfig'});\r\n      }\r\n    });\r\n\r\n    this.rootScope.addEventListener('premium_toggle', (isPremium) => {\r\n      this.iterateNetworkers(({networker, connectionType, dcId, transportType}) => {\r\n        if(connectionType === 'client' || transportType !== 'websocket') {\r\n          return;\r\n        }\r\n\r\n        const transport = networker.transport;\r\n        if(!transport) {\r\n          this.log.error('wow what, no transport?', networker);\r\n          return;\r\n        }\r\n\r\n        if((transport as TcpObfuscated).connection) {\r\n          const url = constructTelegramWebSocketUrl(dcId, connectionType, isPremium);\r\n          (transport as TcpObfuscated).changeUrl(url);\r\n        }\r\n      });\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  // private lol = false;\r\n\r\n  // constructor() {\r\n  // MtpSingleInstanceService.start();\r\n\r\n  /* AppStorage.get<number>('dc').then((dcId) => {\r\n      if(dcId) {\r\n        this.baseDcId = dcId;\r\n      }\r\n    }); */\r\n  // }\r\n\r\n  /* public telegramMeNotify(newValue: boolean) {\r\n    if(this.telegramMeNotified !== newValue) {\r\n      this.telegramMeNotified = newValue;\r\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\r\n    }\r\n  } */\r\n\r\n  private getTransportType(connectionType: ConnectionType) {\r\n    let transportType: TransportType;\r\n    if(import.meta.env.VITE_MTPROTO_HTTP_UPLOAD) {\r\n      transportType = connectionType === 'upload' && getEnvironment().IS_SAFARI ? 'https' : 'websocket';\r\n      // const transportType: TransportType = connectionType !== 'client' ? 'https' : 'websocket';\r\n    } else {\r\n      transportType = this.transportType;\r\n    }\r\n\r\n    return transportType;\r\n  }\r\n\r\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\r\n    for(const transportType in this.cachedNetworkers) {\r\n      const connections = this.cachedNetworkers[transportType as TransportType];\r\n      for(const connectionType in connections) {\r\n        const dcs = connections[connectionType as ConnectionType];\r\n        for(const dcId in dcs) {\r\n          const networkers = dcs[dcId as any as DcId];\r\n          networkers.forEach((networker, idx, arr) => {\r\n            callback({\r\n              networker,\r\n              dcId: +dcId as DcId,\r\n              connectionType: connectionType as ConnectionType,\r\n              transportType: transportType as TransportType,\r\n              index: idx,\r\n              array: arr\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\r\n    return this.dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client', this.rootScope.premium);\r\n  }\r\n\r\n  public changeTransportType(transportType: TransportType) {\r\n    const oldTransportType = this.transportType;\r\n    if(oldTransportType === transportType) {\r\n      return;\r\n    }\r\n\r\n    this.log('changing transport from', oldTransportType, 'to', transportType);\r\n\r\n    const oldObject = this.cachedNetworkers[oldTransportType];\r\n    const newObject = this.cachedNetworkers[transportType];\r\n    this.cachedNetworkers[transportType] = oldObject;\r\n    this.cachedNetworkers[oldTransportType] = newObject;\r\n\r\n    this.transportType = transportType;\r\n\r\n    for(const oldGetKey in this.gettingNetworkers) {\r\n      const promise = this.gettingNetworkers[oldGetKey];\r\n      delete this.gettingNetworkers[oldGetKey];\r\n\r\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\r\n      this.gettingNetworkers[newGetKey] = promise;\r\n\r\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\r\n    }\r\n\r\n    this.iterateNetworkers((info) => {\r\n      const transportType = this.getTransportType(info.connectionType);\r\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\r\n      this.changeNetworkerTransport(info.networker, transport);\r\n    });\r\n  }\r\n\r\n  public async getBaseDcId() {\r\n    if(this.baseDcId) {\r\n      return this.baseDcId;\r\n    }\r\n\r\n    const baseDcId = await sessionStorage.get('dc');\r\n    if(!this.baseDcId) {\r\n      if(!baseDcId) {\r\n        this.setBaseDcId(App.baseDcId);\r\n      } else {\r\n        this.baseDcId = baseDcId;\r\n      }\r\n    }\r\n\r\n    return this.baseDcId;\r\n  }\r\n\r\n  public async setUserAuth(userAuth: UserAuth | UserId) {\r\n    if(typeof(userAuth) === 'string' || typeof(userAuth) === 'number') {\r\n      userAuth = {dcID: 0, date: tsNow(true), id: userAuth.toPeerId(false)};\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('user_auth', userAuth);\r\n\r\n    if(!userAuth.dcID) {\r\n      const baseDcId = await this.getBaseDcId();\r\n      userAuth.dcID = baseDcId;\r\n    }\r\n\r\n    sessionStorage.set({\r\n      user_auth: userAuth\r\n    });\r\n\r\n    // this.telegramMeNotify(true);\r\n  }\r\n\r\n  public setBaseDcId(dcId: DcId) {\r\n    const wasDcId = this.baseDcId;\r\n    if(wasDcId) { // if migrated set ondrain\r\n      this.getNetworker(wasDcId).then((networker) => {\r\n        this.setOnDrainIfNeeded(networker);\r\n      });\r\n    }\r\n\r\n    this.baseDcId = dcId;\r\n\r\n    sessionStorage.set({\r\n      dc: this.baseDcId\r\n    });\r\n  }\r\n\r\n  public async logOut() {\r\n    if(this.loggingOut) {\r\n      return;\r\n    }\r\n\r\n    this.loggingOut = true;\r\n    const storageKeys: Array<DcAuthKey> = [];\r\n\r\n    const prefix = 'dc';\r\n    for(let dcId = 1; dcId <= 5; dcId++) {\r\n      storageKeys.push(prefix + dcId + '_auth_key' as any);\r\n    }\r\n\r\n    // WebPushApiManager.forceUnsubscribe(); // WARNING // moved to worker's master\r\n    const storageResult = await Promise.all(storageKeys.map((key) => sessionStorage.get(key)));\r\n\r\n    const logoutPromises: Promise<any>[] = [];\r\n    for(let i = 0; i < storageResult.length; i++) {\r\n      if(storageResult[i]) {\r\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId: (i + 1) as DcId, ignoreErrors: true}));\r\n      }\r\n    }\r\n\r\n    const clear = async() => {\r\n      this.baseDcId = undefined;\r\n      // this.telegramMeNotify(false);\r\n      await toggleStorages(false, true);\r\n      IDB.closeDatabases();\r\n      this.rootScope.dispatchEvent('logging_out');\r\n    };\r\n\r\n    setTimeout(clear, 1e3);\r\n\r\n    // return;\r\n\r\n    return Promise.all(logoutPromises).catch((error) => {\r\n      error.handled = true;\r\n    }).finally(clear)/* .then(() => {\r\n      location.pathname = '/';\r\n    }) */;\r\n  }\r\n\r\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\r\n    return [dcId, transportType, connectionType].join('-');\r\n  }\r\n\r\n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\r\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\r\n    // const connectionType: ConnectionType = 'client';\r\n\r\n    const transportType = this.getTransportType(connectionType);\r\n    if(!this.cachedNetworkers[transportType]) {\r\n      this.cachedNetworkers[transportType] = {\r\n        client: {},\r\n        download: {},\r\n        upload: {}\r\n      };\r\n    }\r\n\r\n    const cache = this.cachedNetworkers[transportType][connectionType];\r\n    if(!(dcId in cache)) {\r\n      cache[dcId] = [];\r\n    }\r\n\r\n    const networkers = cache[dcId];\r\n    // @ts-ignore\r\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (this.rootScope.premium ? PREMIUM_FILE_NETWORKERS_COUNT : REGULAR_FILE_NETWORKERS_COUNT);\r\n    if(networkers.length >= maxNetworkers) {\r\n      let i = maxNetworkers - 1, found = false;\r\n      for(; i >= 0; --i) {\r\n        if(networkers[i].isOnline) {\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      const networker = networkers.splice(found ? i : maxNetworkers - 1, 1)[0];\r\n      networkers.unshift(networker);\r\n      return Promise.resolve(networker);\r\n    }\r\n\r\n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\r\n    if(this.gettingNetworkers[getKey]) {\r\n      return this.gettingNetworkers[getKey];\r\n    }\r\n\r\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\r\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\r\n\r\n    let transport = this.chooseServer(dcId, connectionType, transportType);\r\n    return this.gettingNetworkers[getKey] = Promise.all([ak, ss].map((key) => sessionStorage.get(key)))\r\n    .then(async([authKeyHex, serverSaltHex]) => {\r\n      let networker: MTPNetworker, error: any;\r\n      if(authKeyHex?.length === 512) {\r\n        if(serverSaltHex?.length !== 16) {\r\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\r\n        }\r\n\r\n        const authKey = bytesFromHex(authKeyHex);\r\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1', authKey)).slice(-8);\r\n        const serverSalt = bytesFromHex(serverSaltHex);\r\n\r\n        networker = this.networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\r\n      } else {\r\n        try { // if no saved state\r\n          const auth = await this.authorizer.auth(dcId);\r\n\r\n          authKeyHex = bytesToHex(auth.authKey);\r\n          serverSaltHex = bytesToHex(auth.serverSalt);\r\n\r\n          if(dcId === App.baseDcId) {\r\n            sessionStorage.set({\r\n              auth_key_fingerprint: authKeyHex.slice(0, 8)\r\n            });\r\n          }\r\n\r\n          sessionStorage.set({\r\n            [ak]: authKeyHex,\r\n            [ss]: serverSaltHex\r\n          });\r\n\r\n          networker = this.networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\r\n        } catch(_error) {\r\n          error = _error;\r\n        }\r\n      }\r\n\r\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\r\n      const newTransportType = this.getTransportType(connectionType);\r\n      if(newTransportType !== transportType) {\r\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\r\n        transport.destroy();\r\n        DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, transport);\r\n\r\n        if(networker) {\r\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\r\n        }\r\n\r\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\r\n      }\r\n\r\n      /* networker.onConnectionStatusChange = (online) => {\r\n        console.log('status:', online);\r\n      }; */\r\n\r\n      delete this.gettingNetworkers[getKey];\r\n\r\n      if(error) {\r\n        this.log('get networker error', error, (error as Error).stack);\r\n        throw error;\r\n      }\r\n\r\n      this.changeNetworkerTransport(networker, transport);\r\n      networkers.unshift(networker);\r\n      this.setOnDrainIfNeeded(networker);\r\n      return networker;\r\n    });\r\n  }\r\n\r\n  public getNetworkerVoid(dcId: DcId) {\r\n    return this.getNetworker(dcId).then(noop, noop);\r\n  }\r\n\r\n  private changeNetworkerTransport(networker: MTPNetworker, transport?: MTTransport) {\r\n    const oldTransport = networker.transport;\r\n    if(oldTransport) {\r\n      DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, oldTransport);\r\n    }\r\n\r\n    networker.changeTransport(transport);\r\n  }\r\n\r\n  private onNetworkerDrain(networker: MTPNetworker) {\r\n    this.log('networker drain', networker.dcId);\r\n    networker.onDrain = undefined;\r\n    this.changeNetworkerTransport(networker);\r\n    networker.destroy();\r\n    this.networkerFactory.removeNetworker(networker);\r\n    DcConfigurator.removeTransport(this.cachedNetworkers, networker);\r\n  }\r\n\r\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\r\n    if(networker.onDrain) {\r\n      return;\r\n    }\r\n\r\n    const checkPromise: Promise<boolean> = networker.isFileNetworker ?\r\n      Promise.resolve(true) :\r\n      this.getBaseDcId().then((baseDcId) => networker.dcId !== baseDcId);\r\n    checkPromise.then((canRelease) => {\r\n      if(networker.onDrain) {\r\n        return;\r\n      }\r\n\r\n      if(canRelease) {\r\n        networker.onDrain = () => this.onNetworkerDrain(networker);\r\n        networker.setDrainTimeout();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n    this.networkerFactory.setUpdatesProcessor(callback);\r\n  }\r\n\r\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T]['res']> {\r\n    // /////this.log('Invoke api', method, params, options);\r\n\r\n    /* if(!this.lol) {\r\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\r\n      this.lol = true;\r\n    } */\r\n\r\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\r\n\r\n    let {afterMessageId, prepareTempMessageId} = options;\r\n    if(prepareTempMessageId) {\r\n      deferred.then(() => {\r\n        delete this.afterMessageTempIds[prepareTempMessageId];\r\n      });\r\n    }\r\n\r\n    if(MOUNT_CLASS_TO) {\r\n      const startTime = Date.now();\r\n      const interval = ctx.setInterval(() => {\r\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\r\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\r\n        }\r\n        // this.cachedUploadNetworkers[2].requestMessageStatus();\r\n      }, 5e3);\r\n\r\n      deferred.catch(noop).finally(() => {\r\n        clearInterval(interval);\r\n      });\r\n    }\r\n\r\n    const rejectPromise = async(error: ApiError) => {\r\n      if(!error) {\r\n        error = {type: 'ERROR_EMPTY'};\r\n      } else if(!isObject(error)) {\r\n        error = {message: error};\r\n      }\r\n\r\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') ||\r\n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\r\n        this.logOut();\r\n      }\r\n\r\n      if(options.ignoreErrors) {\r\n        throw error;\r\n      }\r\n\r\n      if(error.code === 406) {\r\n        error.handled = true;\r\n      }\r\n\r\n      if(!options.noErrorBox) {\r\n        error.input = method;\r\n        // error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\r\n        setTimeout(() => {\r\n          if(!error.handled) {\r\n            if(error.code === 401) {\r\n              this.logOut();\r\n            } else {\r\n              // ErrorService.show({error: error}); // WARNING\r\n            }\r\n\r\n            error.handled = true;\r\n          }\r\n        }, 100);\r\n      }\r\n\r\n      throw error;\r\n    };\r\n\r\n    let dcId: DcId;\r\n\r\n    let cachedNetworker: MTPNetworker;\r\n    // const stack = (new Error()).stack || 'empty stack';\r\n    const performRequest = (): Promise<any> => {\r\n      if(afterMessageId) {\r\n        const after = this.afterMessageTempIds[afterMessageId];\r\n        if(after) {\r\n          options.afterMessageId = after.messageId;\r\n        }\r\n      }\r\n\r\n      const promise = cachedNetworker.wrapApiCall(method, params, options);\r\n\r\n      if(prepareTempMessageId) {\r\n        this.afterMessageTempIds[prepareTempMessageId] = {\r\n          messageId: (options as MTMessage).messageId,\r\n          promise: deferred\r\n        };\r\n      }\r\n\r\n      return promise.catch((error: ApiError) => {\r\n        // if(!options.ignoreErrors) {\r\n        if(error.type !== 'FILE_REFERENCE_EXPIRED'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\r\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\r\n        }\r\n\r\n        if(error.code === 401 && this.baseDcId === dcId) {\r\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\r\n            sessionStorage.delete('dc')\r\n            sessionStorage.delete('user_auth'); // ! возможно тут вообще не нужно это делать, но нужно проверить случай с USER_DEACTIVATED (https://core.telegram.org/api/errors)\r\n            // this.telegramMeNotify(false);\r\n          }\r\n\r\n          throw error;\r\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\r\n          if(this.cachedExportPromise[dcId] === undefined) {\r\n            const promise = new Promise((exportResolve, exportReject) => {\r\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\r\n                this.invokeApi('auth.importAuthorization', {\r\n                  id: exportedAuth.id,\r\n                  bytes: exportedAuth.bytes\r\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\r\n              }, exportReject);\r\n            });\r\n\r\n            this.cachedExportPromise[dcId] = promise;\r\n          }\r\n\r\n          return this.cachedExportPromise[dcId].then(() => performRequest());\r\n        } else if(error.code === 303) {\r\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_|STATS_MIGRATE_)(\\d+)/)[2] as DcId;\r\n          if(newDcId !== dcId) {\r\n            if(options.dcId) {\r\n              options.dcId = newDcId;\r\n            } else {\r\n              this.setBaseDcId(newDcId);\r\n            }\r\n\r\n            return this.invokeApi(method, params, options);\r\n          }\r\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\r\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\r\n          if(newDcId !== dcId) {\r\n            options.dcId = newDcId;\r\n            return this.invokeApi(method, params, options);\r\n          } else {\r\n            throw error;\r\n          }\r\n        } else if(error.code === 400 && error.type === 'CONNECTION_NOT_INITED') {\r\n          this.networkerFactory.unsetConnectionInited();\r\n          return performRequest();\r\n        } else if(!options.rawError && error.code === 420) {\r\n          const waitTime = +error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 1;\r\n\r\n          if(waitTime > (options.floodMaxTimeout ?? 60) && !options.prepareTempMessageId) {\r\n            throw error;\r\n          }\r\n\r\n          return pause(waitTime/* (waitTime + 5) */ * 1000).then(() => performRequest());\r\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\r\n          const after = this.afterMessageTempIds[afterMessageId];\r\n\r\n          afterMessageId = undefined;\r\n          delete options.afterMessageId;\r\n\r\n          if(after) return after.promise.then(() => performRequest());\r\n          else return performRequest();\r\n        } else if(!options.rawError && error.code === 500) {\r\n          const now = Date.now();\r\n          if(options.stopTime) {\r\n            if(now >= options.stopTime) {\r\n              throw error;\r\n            }\r\n          }\r\n\r\n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\r\n          return pause(options.waitTime * 1000).then(() => performRequest());\r\n        } else if(error.type === 'UNKNOWN' || error.type === 'MTPROTO_CLUSTER_INVALID') { // cluster invalid - request from regular user to premium endpoint\r\n          return pause(1000).then(() => performRequest());\r\n        } else {\r\n          throw error;\r\n        }\r\n      });\r\n    }\r\n\r\n    let p: Promise<MTPNetworker>;\r\n    if(dcId = (options.dcId || this.baseDcId)) {\r\n      p = this.getNetworker(dcId, options);\r\n    } else {\r\n      p = this.getBaseDcId().then((baseDcId) => this.getNetworker(dcId = baseDcId, options));\r\n    }\r\n\r\n    p.then((networker) => {\r\n      cachedNetworker = networker;\r\n      const promise = performRequest();\r\n      cachedNetworker.attachPromise(deferred, options as MTMessage);\r\n      return promise;\r\n    })\r\n    .then(deferred.resolve.bind(deferred))\r\n    .catch(rejectPromise)\r\n    .catch(deferred.reject.bind(deferred));\r\n\r\n    return deferred;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport applyMixins from '../../helpers/applyMixins';\r\nimport EventListenerBase from '../../helpers/eventListenerBase';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport type StatePeerType = 'recentSearch' | 'topPeer' | 'dialog' | 'contact' | 'topMessage' | 'self';\r\n\r\ntype PeersStorageKey = `${StatePeerType}_${string | PeerId}` | StatePeerType;\r\n\r\nclass PeersStorage {\r\n  private neededPeers: Map<PeerId, Set<PeersStorageKey>> = new Map();\r\n  private singlePeerMap: Map<PeersStorageKey, Set<PeerId>> = new Map();\r\n\r\n  constructor() {\r\n    this._constructor(false);\r\n  }\r\n\r\n  protected after() {\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      this.requestPeer(this.appPeersManager.peerId, 'self');\r\n    });\r\n  }\r\n\r\n  public requestPeer(peerId: PeerId, key: PeersStorageKey) {\r\n    let set = this.neededPeers.get(peerId);\r\n    if(set && set.has(key)) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = new Set();\r\n      this.neededPeers.set(peerId, set);\r\n    }\r\n\r\n    set.add(key);\r\n\r\n    this.dispatchEvent('peerNeeded', peerId);\r\n  }\r\n\r\n  public releasePeer(peerId: PeerId, key: PeersStorageKey) {\r\n    const set = this.neededPeers.get(peerId);\r\n    if(!set) {\r\n      return;\r\n    }\r\n\r\n    set.delete(key);\r\n\r\n    if(!set.size) {\r\n      this.neededPeers.delete(peerId);\r\n      this.dispatchEvent('peerUnneeded', peerId);\r\n    }\r\n  }\r\n\r\n  public requestPeersForKey(peerIds: Set<PeerId> | number[], key: PeersStorageKey) {\r\n    if(Array.isArray(peerIds)) {\r\n      peerIds = new Set(peerIds);\r\n    }\r\n\r\n    let set = this.singlePeerMap.get(key);\r\n    if(set) {\r\n      for(const peerId of set) {\r\n        if(peerIds.has(peerId)) {\r\n          continue;\r\n        }\r\n\r\n        this.releasePeer(peerId, key);\r\n        set.delete(peerId);\r\n      }\r\n\r\n      if(!set.size && !peerIds.size) {\r\n        this.singlePeerMap.delete(key);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if(peerIds.size) {\r\n      if(!set) {\r\n        set = new Set();\r\n        this.singlePeerMap.set(key, set);\r\n      }\r\n\r\n      for(const peerId of peerIds) {\r\n        if(set.has(peerId)) {\r\n          continue;\r\n        }\r\n\r\n        this.requestPeer(peerId, key);\r\n        set.add(peerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public isPeerNeeded(peerId: PeerId) {\r\n    return this.neededPeers.has(peerId);\r\n  }\r\n}\r\n\r\ninterface PeersStorage extends EventListenerBase<{\r\n  peerNeeded: (peerId: PeerId) => void,\r\n  peerUnneeded: (peerId: PeerId) => void,\r\n}>, AppManager {}\r\napplyMixins(PeersStorage, [EventListenerBase, AppManager]);\r\n\r\nexport default PeersStorage;\r\n","import type {ThumbCache} from '../../thumbs';\r\n\r\nexport default function generateEmptyThumb(type: string): ThumbCache {\r\n  return {downloaded: 0, url: '', type};\r\n}\r\n","export default function getStickerThumbKey(docId: DocId, toneIndex?: number | string) {\r\n  return docId + (toneIndex !== undefined ? '-' + toneIndex : '');\r\n}\r\n","import type {MyPhoto} from '../../../appManagers/appPhotosManager';\r\nimport type {ThumbStorageMedia} from '../../thumbs';\r\nimport type {WebDocument} from '../../../../layer';\r\nimport {getFileNameByLocation} from '../../../../helpers/fileName';\r\nimport isWebFileLocation from '../../../appManagers/utils/webFiles/isWebFileLocation';\r\n\r\nexport default function getThumbKey(media: ThumbStorageMedia) {\r\n  if(isWebFileLocation(media)) {\r\n    return getFileNameByLocation(media);\r\n  }\r\n\r\n  return media._ + ((media as MyPhoto).id ?? (media as WebDocument).url);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {InputWebFileLocation, WebDocument} from '../../layer';\r\nimport type {MyDocument} from '../appManagers/appDocsManager';\r\nimport type {MyPhoto} from '../appManagers/appPhotosManager';\r\nimport {joinDeepPath} from '../../helpers/object/setDeepProperty';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\r\nimport generateEmptyThumb from './utils/thumbs/generateEmptyThumb';\r\nimport getStickerThumbKey from './utils/thumbs/getStickerThumbKey';\r\nimport getThumbKey from './utils/thumbs/getThumbKey';\r\n\r\nexport type ThumbCache = {\r\n  downloaded: number,\r\n  url: string,\r\n  type: string\r\n};\r\n\r\nexport type ThumbsCache = {\r\n  [key: string]: {\r\n    [size: string]: ThumbCache\r\n  }\r\n};\r\n\r\nconst thumbFullSize = THUMB_TYPE_FULL;\r\n\r\nexport type ThumbStorageMedia = MyPhoto | MyDocument | WebDocument | InputWebFileLocation;\r\n\r\nexport type StickerCachedThumbs = {\r\n  [docIdAndToneIndex: DocId]: StickerCachedThumb\r\n};\r\nexport type StickerCachedThumb = {\r\n  url: string,\r\n  w: number,\r\n  h: number\r\n};\r\n\r\nexport default class ThumbsStorage {\r\n  private thumbsCache: ThumbsCache = {};\r\n  private stickerCachedThumbs: StickerCachedThumbs = {};\r\n\r\n  public getCacheContext(\r\n    media: ThumbStorageMedia,\r\n    thumbSize: string = thumbFullSize,\r\n    key = getThumbKey(media)\r\n  ): ThumbCache {\r\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\r\n      thumbSize = thumbFullSize;\r\n    } */\r\n\r\n    const cache = this.thumbsCache[key] ??= {};\r\n    return cache[thumbSize] ??= generateEmptyThumb(thumbSize);\r\n  }\r\n\r\n  private mirrorCacheContext(key: string, thumbSize: string, value?: ThumbCache) {\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'thumbs',\r\n      // key: [key, thumbSize].filter(Boolean).join('.'),\r\n      key: joinDeepPath(key, thumbSize),\r\n      value\r\n    });\r\n  }\r\n\r\n  private mirrorStickerThumb(key: string, value?: StickerCachedThumb) {\r\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {\r\n      name: 'stickerThumbs',\r\n      key,\r\n      value\r\n    });\r\n  }\r\n\r\n  public mirrorAll(port?: MessageEventSource) {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    instance.invokeVoid('mirror', {\r\n      name: 'thumbs',\r\n      value: this.thumbsCache\r\n    }, port);\r\n\r\n    instance.invokeVoid('mirror', {\r\n      name: 'stickerThumbs',\r\n      value: this.stickerCachedThumbs\r\n    }, port);\r\n  }\r\n\r\n  public setCacheContextURL(\r\n    media: ThumbStorageMedia,\r\n    thumbSize: string = thumbFullSize,\r\n    url: string,\r\n    downloaded: number = 0,\r\n    key = getThumbKey(media)\r\n  ) {\r\n    const cacheContext = this.getCacheContext(media, thumbSize, key);\r\n    cacheContext.url = url;\r\n    cacheContext.downloaded = downloaded;\r\n    this.mirrorCacheContext(key, thumbSize, cacheContext);\r\n    return cacheContext;\r\n  }\r\n\r\n  public deleteCacheContext(\r\n    media: ThumbStorageMedia,\r\n    thumbSize: string = thumbFullSize,\r\n    key = getThumbKey(media)\r\n  ) {\r\n    const cache = this.thumbsCache[key];\r\n    if(cache) {\r\n      this.mirrorCacheContext(key, thumbSize);\r\n      delete cache[thumbSize];\r\n    }\r\n  }\r\n\r\n  public getStickerCachedThumb(docId: DocId, toneIndex: number | string) {\r\n    return this.stickerCachedThumbs[getStickerThumbKey(docId, toneIndex)];\r\n  }\r\n\r\n  public saveStickerPreview(docId: DocId, blob: Blob, width: number, height: number, toneIndex: number | string) {\r\n    const key = getStickerThumbKey(docId, toneIndex);\r\n    const thumb = this.stickerCachedThumbs[key];\r\n    if(thumb && thumb.w >= width && thumb.h >= height) {\r\n      return;\r\n    }\r\n\r\n    const cache = this.stickerCachedThumbs[key] = {\r\n      url: URL.createObjectURL(blob),\r\n      w: width,\r\n      h: height\r\n    };\r\n\r\n    this.mirrorStickerThumb(key, cache);\r\n  }\r\n\r\n  public clearColoredStickerThumbs() {\r\n    for(const key in this.stickerCachedThumbs) {\r\n      const [, toneIndex] = key.split('-');\r\n      if(toneIndex && isNaN(+toneIndex)) {\r\n        const thumb = this.stickerCachedThumbs[key];\r\n        URL.revokeObjectURL(thumb.url);\r\n        delete this.stickerCachedThumbs[key];\r\n        this.mirrorStickerThumb(key);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type MTProtoConstructor = {\r\n  id: number,\r\n  predicate: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport type MTProtoMethod = {\r\n  id: number,\r\n  method: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\n// eslint-disable-next-line quotes, comma-spacing\r\nexport default {\"MTProto\":{\"constructors\":[{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":85337187,\"predicate\":\"resPQ\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"server_public_key_fingerprints\",\"type\":\"Vector<long>\"}],\"type\":\"ResPQ\"},{\"id\":-1443537003,\"predicate\":\"p_q_inner_data_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":1459478408,\"predicate\":\"p_q_inner_data_temp_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"},{\"name\":\"expires_in\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":-790100132,\"predicate\":\"server_DH_params_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_answer\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-1249309254,\"predicate\":\"server_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"dh_prime\",\"type\":\"bytes\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"server_time\",\"type\":\"int\"}],\"type\":\"Server_DH_inner_data\"},{\"id\":1715713620,\"predicate\":\"client_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"retry_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"}],\"type\":\"Client_DH_Inner_Data\"},{\"id\":1003222836,\"predicate\":\"dh_gen_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash1\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1188831161,\"predicate\":\"dh_gen_retry\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash2\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":-1499615742,\"predicate\":\"dh_gen_fail\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash3\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1973679973,\"predicate\":\"bind_auth_key_inner\",\"params\":[{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"temp_auth_key_id\",\"type\":\"long\"},{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"temp_session_id\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"}],\"type\":\"BindAuthKeyInner\"},{\"id\":-212046591,\"predicate\":\"rpc_result\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"Object\"}],\"type\":\"RpcResult\"},{\"id\":558156313,\"predicate\":\"rpc_error\",\"params\":[{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"error_message\",\"type\":\"string\"}],\"type\":\"RpcError\"},{\"id\":1579864942,\"predicate\":\"rpc_answer_unknown\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-847714938,\"predicate\":\"rpc_answer_dropped_running\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-1539647305,\"predicate\":\"rpc_answer_dropped\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seq_no\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"}],\"type\":\"RpcDropAnswer\"},{\"id\":155834844,\"predicate\":\"future_salt\",\"params\":[{\"name\":\"valid_since\",\"type\":\"int\"},{\"name\":\"valid_until\",\"type\":\"int\"},{\"name\":\"salt\",\"type\":\"long\"}],\"type\":\"FutureSalt\"},{\"id\":-1370486635,\"predicate\":\"future_salts\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"now\",\"type\":\"int\"},{\"name\":\"salts\",\"type\":\"vector<future_salt>\"}],\"type\":\"FutureSalts\"},{\"id\":880243653,\"predicate\":\"pong\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-501201412,\"predicate\":\"destroy_session_ok\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":1658015945,\"predicate\":\"destroy_session_none\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1631450872,\"predicate\":\"new_session_created\",\"params\":[{\"name\":\"first_msg_id\",\"type\":\"long\"},{\"name\":\"unique_id\",\"type\":\"long\"},{\"name\":\"server_salt\",\"type\":\"long\"}],\"type\":\"NewSession\"},{\"id\":1945237724,\"predicate\":\"msg_container\",\"params\":[{\"name\":\"messages\",\"type\":\"vector<%Message>\"}],\"type\":\"MessageContainer\"},{\"id\":1538843921,\"predicate\":\"message\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seqno\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"body\",\"type\":\"Object\"}],\"type\":\"Message\"},{\"id\":-530561358,\"predicate\":\"msg_copy\",\"params\":[{\"name\":\"orig_message\",\"type\":\"Message\"}],\"type\":\"MessageCopy\"},{\"id\":812830625,\"predicate\":\"gzip_packed\",\"params\":[{\"name\":\"packed_data\",\"type\":\"bytes\"}],\"type\":\"Object\"},{\"id\":1658238041,\"predicate\":\"msgs_ack\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsAck\"},{\"id\":-1477445615,\"predicate\":\"bad_msg_notification\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"}],\"type\":\"BadMsgNotification\"},{\"id\":-307542917,\"predicate\":\"bad_server_salt\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"new_server_salt\",\"type\":\"long\"}],\"type\":\"BadMsgNotification\"},{\"id\":2105940488,\"predicate\":\"msg_resend_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgResendReq\"},{\"id\":-630588590,\"predicate\":\"msgs_state_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsStateReq\"},{\"id\":81704317,\"predicate\":\"msgs_state_info\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsStateInfo\"},{\"id\":-1933520591,\"predicate\":\"msgs_all_info\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsAllInfo\"},{\"id\":661470918,\"predicate\":\"msg_detailed_info\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-2137147681,\"predicate\":\"msg_new_detailed_info\",\"params\":[{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-161422892,\"predicate\":\"destroy_auth_key_ok\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":178201177,\"predicate\":\"destroy_auth_key_none\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":-368010477,\"predicate\":\"destroy_auth_key_fail\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}],\"methods\":[{\"id\":-1099002127,\"method\":\"req_pq_multi\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"}],\"type\":\"ResPQ\"},{\"id\":-686627650,\"method\":\"req_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"public_key_fingerprint\",\"type\":\"long\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-184262881,\"method\":\"set_client_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1491380032,\"method\":\"rpc_drop_answer\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"}],\"type\":\"RpcDropAnswer\"},{\"id\":-1188971260,\"method\":\"get_future_salts\",\"params\":[{\"name\":\"num\",\"type\":\"int\"}],\"type\":\"FutureSalts\"},{\"id\":2059302892,\"method\":\"ping\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-213746804,\"method\":\"ping_delay_disconnect\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"},{\"name\":\"disconnect_delay\",\"type\":\"int\"}],\"type\":\"Pong\"},{\"id\":-414113498,\"method\":\"destroy_session\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1835453025,\"method\":\"http_wait\",\"params\":[{\"name\":\"max_delay\",\"type\":\"int\"},{\"name\":\"wait_after\",\"type\":\"int\"},{\"name\":\"max_wait\",\"type\":\"int\"}],\"type\":\"HttpWait\"},{\"id\":-784117408,\"method\":\"destroy_auth_key\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}]},\"API\":{\"constructors\":[{\"id\":-1132882121,\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1720552011,\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":1072550713,\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":-994444869,\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":1450380236,\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":2134579434,\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":2107670217,\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":900291769,\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1182234929,\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-138301121,\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-208488460,\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":-181407105,\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-1771768449,\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":505969924,\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.2?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1279654347,\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-104578748,\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":-122978821,\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":480546647,\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":-1110593856,\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.3?VideoSize\"}],\"type\":\"InputChatPhoto\"},{\"id\":-1991004873,\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":-457104426,\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":1210199983,\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"InputGeoPoint\"},{\"id\":483901197,\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":1001634122,\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":-539317279,\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":1498486562,\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":918946202,\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1432995067,\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1086091090,\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":8322574,\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-891180321,\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":172975040,\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1373745011,\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1384777335,\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1258941372,\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1278304028,\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":276907596,\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-742634630,\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"User\"},{\"id\":1326562017,\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":-2100168954,\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"personal\",\"type\":\"flags.2?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":164646985,\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-306628279,\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":9203775,\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":693512293,\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Chat\"},{\"id\":1103884886,\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.25?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":1704108455,\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":-908914376,\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.13?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"call\",\"type\":\"flags.12?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.15?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.16?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.17?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.17?Vector<long>\"},{\"name\":\"available_reactions\",\"type\":\"flags.18?ChatReactions\"}],\"type\":\"ChatFull\"},{\"id\":-1070776313,\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-2023500831,\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":1018991608,\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":935395612,\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":476978193,\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":-1868117372,\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"peer_id\",\"type\":\"flags.0?Peer\"}],\"type\":\"Message\"},{\"id\":940666592,\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"pinned\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.26?true\"},{\"name\":\"invert_media\",\"type\":\"flags.27?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"forwards\",\"type\":\"flags.10?int\"},{\"name\":\"replies\",\"type\":\"flags.23?MessageReplies\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":721967202,\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":1038967584,\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":1766936791,\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.3?true\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1457575028,\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":1882335561,\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageMedia\"},{\"id\":-1618676578,\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":-1230047312,\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1119368275,\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1247687078,\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":2144015272,\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-1780220945,\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":365886720,\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1539362612,\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-712374074,\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"view_forum_as_messages\",\"type\":\"flags.6?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.5?int\"}],\"type\":\"Dialog\"},{\"id\":590459437,\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":-82216347,\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"video_sizes\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":236446268,\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":1976012384,\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":35527382,\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":286776671,\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":-1297942941,\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"GeoPoint\"},{\"id\":1577067778,\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":782418132,\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"setup_password_required\",\"type\":\"flags.1?true\"},{\"name\":\"otherwise_relogin_days\",\"type\":\"flags.1?int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"future_auth_token\",\"type\":\"flags.2?bytes\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":-1271602504,\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1195615476,\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":423314455,\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":1251338318,\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-892638494,\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"stories_muted\",\"type\":\"flags.6?Bool\"},{\"name\":\"stories_hide_sender\",\"type\":\"flags.7?Bool\"},{\"name\":\"stories_sound\",\"type\":\"flags.8?NotificationSound\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":-1721619444,\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"ios_sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"android_sound\",\"type\":\"flags.4?NotificationSound\"},{\"name\":\"other_sound\",\"type\":\"flags.5?NotificationSound\"},{\"name\":\"stories_muted\",\"type\":\"flags.6?Bool\"},{\"name\":\"stories_hide_sender\",\"type\":\"flags.7?Bool\"},{\"name\":\"stories_ios_sound\",\"type\":\"flags.8?NotificationSound\"},{\"name\":\"stories_android_sound\",\"type\":\"flags.9?NotificationSound\"},{\"name\":\"stories_other_sound\",\"type\":\"flags.10?NotificationSound\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-1525149427,\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"},{\"name\":\"autoarchived\",\"type\":\"flags.7?true\"},{\"name\":\"invite_members\",\"type\":\"flags.8?true\"},{\"name\":\"request_chat_broadcast\",\"type\":\"flags.10?true\"},{\"name\":\"geo_distance\",\"type\":\"flags.6?int\"},{\"name\":\"request_chat_title\",\"type\":\"flags.9?string\"},{\"name\":\"request_chat_date\",\"type\":\"flags.9?int\"}],\"type\":\"PeerSettings\"},{\"id\":-1539849235,\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1490799288,\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":505595789,\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":777640226,\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1376497949,\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1041980751,\"predicate\":\"inputReportReasonOther\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1179571092,\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"video_calls_available\",\"type\":\"flags.13?true\"},{\"name\":\"voice_messages_forbidden\",\"type\":\"flags.20?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags.23?true\"},{\"name\":\"stories_pinned_available\",\"type\":\"flags.26?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.27?true\"},{\"name\":\"wallpaper_overridden\",\"type\":\"flags.28?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"personal_photo\",\"type\":\"flags.21?Photo\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"fallback_photo\",\"type\":\"flags.22?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.15?string\"},{\"name\":\"private_forward_name\",\"type\":\"flags.16?string\"},{\"name\":\"bot_group_admin_rights\",\"type\":\"flags.17?ChatAdminRights\"},{\"name\":\"bot_broadcast_admin_rights\",\"type\":\"flags.18?ChatAdminRights\"},{\"name\":\"premium_gifts\",\"type\":\"flags.19?Vector<PremiumGiftOption>\"},{\"name\":\"wallpaper\",\"type\":\"flags.24?WallPaper\"},{\"name\":\"stories\",\"type\":\"flags.25?PeerStories\"}],\"type\":\"UserFull\"},{\"id\":341499403,\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":-1052885936,\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":383348795,\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":-1219778094,\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":-353862078,\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":2010127419,\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":182326673,\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":-513392236,\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":364538944,\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":1910543603,\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1938715001,\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":978610270,\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1694474197,\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-438840932,\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1269012015,\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1474492012,\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1777752804,\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1614803355,\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1458172132,\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1629621880,\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2129714567,\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-3644025,\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":522914557,\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1318109142,\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1576161051,\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1071741569,\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-2092401936,\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":125178264,\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":-440534818,\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":-1484486364,\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"usernames\",\"type\":\"Vector<Username>\"}],\"type\":\"Update\"},{\"id\":-1991136273,\"predicate\":\"updateNewAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unconfirmed\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"flags.0?int\"},{\"name\":\"device\",\"type\":\"flags.0?string\"},{\"name\":\"location\",\"type\":\"flags.0?string\"}],\"type\":\"Update\"},{\"id\":-1519637954,\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":1567990072,\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":16030880,\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-1459938943,\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-484987010,\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":826001400,\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":1299050149,\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":2027216577,\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1918567619,\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1957577280,\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1916114267,\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":352657236,\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":539045032,\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":157948117,\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":414687501,\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"this_port_only\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":-870702050,\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"force_try_ipv6\",\"type\":\"flags.14?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"reactions_default\",\"type\":\"flags.15?Reaction\"},{\"name\":\"autologin_token\",\"type\":\"flags.16?string\"}],\"type\":\"Config\"},{\"id\":-1910892683,\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":-860107216,\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"sticker\",\"type\":\"flags.3?Document\"}],\"type\":\"help.AppUpdate\"},{\"id\":-1000708810,\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":415997816,\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":314359194,\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":386986326,\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1264392051,\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":956179895,\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1417756512,\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":1722964307,\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":1223809356,\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1643173063,\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":505183301,\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"history_deleted\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":-247351839,\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":-1038136962,\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":-1476358952,\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":406307684,\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":1690108678,\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1511503333,\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":-182231723,\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-317144808,\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":594758406,\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":-1058912715,\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":740433629,\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":1443858741,\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-1802240206,\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-95482955,\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":767652808,\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1037718609,\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-483443337,\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1906403213,\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":1530447553,\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"force_file\",\"type\":\"flags.4?true\"},{\"name\":\"spoiler\",\"type\":\"flags.5?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":860303448,\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"query\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":1291114285,\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nopremium\",\"type\":\"flags.3?true\"},{\"name\":\"spoiler\",\"type\":\"flags.4?true\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"alt_document\",\"type\":\"flags.5?Document\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1928391342,\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":448771445,\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":-1160743548,\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":922273905,\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":-1881881384,\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"video_thumbs\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":398898678,\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":-1613493288,\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":-1261946036,\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1073230141,\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1094555409,\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":381645902,\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-44119819,\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1584933265,\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-378127636,\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-718310409,\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-212740181,\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-774682074,\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1441998364,\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":393186209,\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1653390447,\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1290580579,\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":-337352679,\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"invert_media\",\"type\":\"flags.2?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":-496024847,\"predicate\":\"userStatusRecently\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":129960444,\"predicate\":\"userStatusLastWeek\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":2011940674,\"predicate\":\"userStatusLastMonth\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-298113238,\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":1335282456,\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1137792208,\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":218751099,\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":407582158,\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":320652927,\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":195371015,\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-697604407,\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-1877932953,\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-123988,\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1698855810,\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1198497870,\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-125240806,\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1955338397,\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-463335103,\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1352683077,\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1194283041,\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":88680979,\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1815593308,\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":297109817,\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1662637586,\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":-745541182,\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"nosound\",\"type\":\"flags.3?true\"},{\"name\":\"duration\",\"type\":\"double\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"preload_prefix_size\",\"type\":\"flags.2?int\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1739392570,\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":358154344,\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-244016606,\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":816245886,\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":313694676,\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":-395967805,\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":-843329861,\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":-1667805217,\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":791617983,\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-2066640507,\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":2139689491,\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":555358088,\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"flags.0?string\"}],\"type\":\"WebPage\"},{\"id\":-1328464313,\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-392411726,\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_large_media\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":-571405253,\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force_large_media\",\"type\":\"flags.0?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.1?true\"},{\"name\":\"manual\",\"type\":\"flags.3?true\"},{\"name\":\"safe\",\"type\":\"flags.4?true\"},{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":-1392388579,\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.3?true\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.4?true\"},{\"name\":\"unconfirmed\",\"type\":\"flags.5?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":1275039392,\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"},{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":-1787080453,\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"},{\"name\":\"pending_reset_date\",\"type\":\"flags.5?int\"},{\"name\":\"login_email_pattern\",\"type\":\"flags.6?string\"}],\"type\":\"account.Password\"},{\"id\":-1705233435,\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1036572727,\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":326715557,\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":-1052959727,\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":784356159,\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1551583367,\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":179611673,\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"permanent\",\"type\":\"flags.5?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"start_date\",\"type\":\"flags.4?int\"},{\"name\":\"expire_date\",\"type\":\"flags.1?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.2?int\"},{\"name\":\"usage\",\"type\":\"flags.3?int\"},{\"name\":\"requested\",\"type\":\"flags.7?int\"},{\"name\":\"title\",\"type\":\"flags.8?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1516793212,\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":-840897472,\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"scam\",\"type\":\"flags.8?true\"},{\"name\":\"fake\",\"type\":\"flags.9?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"flags.5?string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":51520707,\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-131960447,\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-4838507,\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1645763991,\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":-2044933984,\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":768691932,\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"animated\",\"type\":\"flags.5?true\"},{\"name\":\"videos\",\"type\":\"flags.6?true\"},{\"name\":\"emojis\",\"type\":\"flags.7?true\"},{\"name\":\"text_color\",\"type\":\"flags.9?true\"},{\"name\":\"channel_emoji_status\",\"type\":\"flags.10?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumbs\",\"type\":\"flags.4?Vector<PhotoSize>\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_version\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_document_id\",\"type\":\"flags.8?long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":1846886166,\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":559694904,\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"apply_min_photo\",\"type\":\"flags.25?true\"},{\"name\":\"fake\",\"type\":\"flags.26?true\"},{\"name\":\"bot_attach_menu\",\"type\":\"flags.27?true\"},{\"name\":\"premium\",\"type\":\"flags.28?true\"},{\"name\":\"attach_menu_enabled\",\"type\":\"flags.29?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"bot_can_edit\",\"type\":\"flags2.1?true\"},{\"name\":\"close_friend\",\"type\":\"flags2.2?true\"},{\"name\":\"stories_hidden\",\"type\":\"flags2.3?true\"},{\"name\":\"stories_unavailable\",\"type\":\"flags2.4?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"},{\"name\":\"emoji_status\",\"type\":\"flags.30?EmojiStatus\"},{\"name\":\"usernames\",\"type\":\"flags2.0?Vector<Username>\"},{\"name\":\"stories_max_id\",\"type\":\"flags2.5?int\"},{\"name\":\"color\",\"type\":\"flags2.8?PeerColor\"},{\"name\":\"profile_color\",\"type\":\"flags2.9?PeerColor\"}],\"type\":\"User\"},{\"id\":-1032140601,\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":-1892676777,\"predicate\":\"botInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"flags.0?long\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"description_photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"description_document\",\"type\":\"flags.5?Document\"},{\"name\":\"commands\",\"type\":\"flags.2?Vector<BotCommand>\"},{\"name\":\"menu_button\",\"type\":\"flags.3?BotMenuButton\"}],\"type\":\"BotInfo\"},{\"id\":-1560655744,\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":2002815875,\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":-1606526075,\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2035021048,\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2049074735,\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"persistent\",\"type\":\"flags.4?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-571955892,\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-233744186,\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":-1148011883,\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-100378723,\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1868782349,\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1827637959,\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1859134776,\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1692693954,\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1117713463,\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-2106619040,\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":681706865,\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1938967520,\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":1990644519,\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":-1877614335,\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":-292807034,\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":-212145112,\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1566230754,\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":666680316,\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":179174543,\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"fake\",\"type\":\"flags.25?true\"},{\"name\":\"gigagroup\",\"type\":\"flags.26?true\"},{\"name\":\"noforwards\",\"type\":\"flags.27?true\"},{\"name\":\"join_to_send\",\"type\":\"flags.28?true\"},{\"name\":\"join_request\",\"type\":\"flags.29?true\"},{\"name\":\"forum\",\"type\":\"flags.30?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"stories_hidden\",\"type\":\"flags2.1?true\"},{\"name\":\"stories_hidden_min\",\"type\":\"flags2.2?true\"},{\"name\":\"stories_unavailable\",\"type\":\"flags2.3?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"},{\"name\":\"usernames\",\"type\":\"flags2.0?Vector<Username>\"},{\"name\":\"stories_max_id\",\"type\":\"flags2.4?int\"},{\"name\":\"color\",\"type\":\"flags2.7?PeerColor\"},{\"name\":\"profile_color\",\"type\":\"flags2.8?PeerColor\"},{\"name\":\"emoji_status\",\"type\":\"flags2.9?EmojiStatus\"},{\"name\":\"level\",\"type\":\"flags2.10?int\"}],\"type\":\"Chat\"},{\"id\":399807445,\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":2131196633,\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":254528367,\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.20?true\"},{\"name\":\"blocked\",\"type\":\"flags.22?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"can_delete_channel\",\"type\":\"flags2.0?true\"},{\"name\":\"antispam\",\"type\":\"flags2.1?true\"},{\"name\":\"participants_hidden\",\"type\":\"flags2.2?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags2.3?true\"},{\"name\":\"stories_pinned_available\",\"type\":\"flags2.5?true\"},{\"name\":\"view_forum_as_messages\",\"type\":\"flags2.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.23?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?long\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?long\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"call\",\"type\":\"flags.21?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.24?int\"},{\"name\":\"pending_suggestions\",\"type\":\"flags.25?Vector<string>\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.26?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.27?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.28?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.28?Vector<long>\"},{\"name\":\"default_send_as\",\"type\":\"flags.29?Peer\"},{\"name\":\"available_reactions\",\"type\":\"flags.30?ChatReactions\"},{\"name\":\"stories\",\"type\":\"flags2.4?PeerStories\"},{\"name\":\"wallpaper\",\"type\":\"flags2.7?WallPaper\"}],\"type\":\"ChatFull\"},{\"id\":182649427,\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":-948520370,\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"topics\",\"type\":\"Vector<ForumTopic>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":-1781355374,\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":277713951,\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1666927625,\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1656358105,\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1842450928,\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1020437742,\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-232346616,\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1041346555,\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1531132162,\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":543450958,\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1798033689,\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":-847783593,\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":-1072953408,\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":900251559,\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_request\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":803602899,\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":-566281095,\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1268741783,\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1548400251,\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1699676497,\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-541588713,\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":-462696732,\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"ChatParticipant\"},{\"id\":-1600962725,\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-674602590,\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-519864430,\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-365344535,\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1328445861,\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":2013922064,\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":1753886890,\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":196268545,\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":834816008,\"predicate\":\"updateStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"}],\"type\":\"Update\"},{\"id\":-402498398,\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":-2069878259,\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":-1821035490,\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":864077702,\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1036876423,\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2000710887,\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1984755728,\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1937807902,\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":295067450,\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-534646026,\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"switch_webview\",\"type\":\"flags.3?InlineBotWebView\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":1232025500,\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"peer_type\",\"type\":\"flags.1?InlineQueryPeerType\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":317794823,\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":1358283666,\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":928101534,\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1107622874,\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1343122938,\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1571494644,\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1601666510,\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"imported\",\"type\":\"flags.7?true\"},{\"name\":\"from_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"psa_type\",\"type\":\"flags.6?string\"}],\"type\":\"MessageFwdHeader\"},{\"id\":457133559,\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1799538451,\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1923290508,\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1948046307,\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":577556219,\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1035688326,\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1073693790,\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1398007207,\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1425815847,\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":629866245,\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":901503851,\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requires_password\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":-1318425559,\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-59151553,\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1816527947,\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"peer_types\",\"type\":\"flags.1?Vector<InlineQueryPeerType>\"}],\"type\":\"KeyboardButton\"},{\"id\":1218642516,\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":911761060,\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-1177566067,\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":649453030,\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-469536605,\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1768777083,\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1098628881,\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1494368259,\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":85477117,\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1970903652,\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":416402882,\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1462213465,\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-459324,\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":400266251,\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1995686519,\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":1763610706,\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":1008755359,\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":863093588,\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-305282981,\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":-1419371685,\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":344356834,\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":104314861,\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1122524854,\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":371037736,\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-75283823,\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":-567906571,\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":1891070632,\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":-595914432,\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":546203849,\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":975236280,\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1218471511,\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":457829485,\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":453805082,\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":1070397423,\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.6?true\"},{\"name\":\"reply_to\",\"type\":\"flags.4?InputReplyTo\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"media\",\"type\":\"flags.5?InputMedia\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"DraftMessage\"},{\"id\":-1615153660,\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-958657434,\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1103615738,\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1461528386,\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":186120336,\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":-1999405994,\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":-1706939360,\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1338747336,\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":946083368,\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":904138920,\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":1678812626,\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1574314746,\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":861169551,\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":-440664550,\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-78455655,\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":872932635,\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1361650766,\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":-1744710921,\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1251549527,\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":70813275,\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":-1107729093,\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":1336154098,\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1262639204,\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-38694904,\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":-750828557,\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":53231223,\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":-1020139510,\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":1358175439,\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1834538890,\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1940093419,\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":-1707344487,\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":1258196845,\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":791390623,\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1663561404,\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-599948721,\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":1950782688,\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":1730456516,\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-653089380,\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1054465340,\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1678197867,\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1816074681,\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1009288385,\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":-564523562,\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":2120376535,\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":324435594,\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":1890305021,\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1879401953,\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1162877472,\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":-1076861716,\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-248793375,\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1182402406,\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1066346178,\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":1216809369,\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-618614392,\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":-837994576,\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":-454524911,\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":641563686,\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1329878739,\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":391759200,\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":2089805750,\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":972174080,\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":-1468953147,\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-229005301,\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1705048653,\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":52401552,\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1930545681,\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":-88417185,\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1030105979,\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-580219064,\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-2048646399,\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-527056480,\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1471006352,\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-84416311,\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1852826908,\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-99664734,\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":2104790276,\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":-2095595325,\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-1684914010,\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-886477832,\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":1572428309,\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"recurring\",\"type\":\"flags.9?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"},{\"name\":\"max_tip_amount\",\"type\":\"flags.8?long\"},{\"name\":\"suggested_tip_amounts\",\"type\":\"flags.8?Vector<long>\"},{\"name\":\"terms_url\",\"type\":\"flags.10?string\"}],\"type\":\"Invoice\"},{\"id\":-1900697899,\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"extended_media\",\"type\":\"flags.2?InputMedia\"}],\"type\":\"InputMedia\"},{\"id\":-368917890,\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":-1892568281,\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":-156940077,\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"},{\"name\":\"extended_media\",\"type\":\"flags.4?MessageExtendedMedia\"}],\"type\":\"MessageMedia\"},{\"id\":512535275,\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":-1868808300,\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":-1344716869,\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1776926890,\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"invoice_slug\",\"type\":\"flags.0?string\"}],\"type\":\"MessageAction\"},{\"id\":-842892769,\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":475467473,\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-1678949555,\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":-1036396922,\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":568808380,\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":-1610250415,\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"additional_methods\",\"type\":\"flags.6?Vector<PaymentFormMethod>\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?Vector<PaymentSavedCredentials>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-784000893,\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":1314881805,\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1891958275,\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"tip_amount\",\"type\":\"flags.3?long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-74456004,\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":-1056001329,\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":873977640,\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-614138572,\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":-1239335713,\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":-1246823043,\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":-1934976362,\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":853188252,\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"},{\"name\":\"keywords\",\"type\":\"flags.1?string\"}],\"type\":\"InputStickerSetItem\"},{\"id\":-1425052898,\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":506920429,\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":1399245077,\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":-987599081,\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"}],\"type\":\"PhoneCall\"},{\"id\":347139340,\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":912311057,\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":-1770029977,\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"}],\"type\":\"PhoneCall\"},{\"id\":1355435489,\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"PhoneCall\"},{\"id\":-1665063993,\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"tcp\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":-58224696,\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":-326966976,\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":-2134272152,\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":-2132731265,\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":2054952868,\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1253451181,\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1997373508,\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":608050278,\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-242427324,\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":-290921362,\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1449145777,\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-914167110,\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":1462101002,\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":-283684427,\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":-892239370,\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":1816636575,\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":695856818,\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":-209337866,\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":-288727837,\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":1180041828,\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1442983757,\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":885242707,\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?long\"},{\"name\":\"promoted_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":1844969806,\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"kicked_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":338142689,\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":106343499,\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-421545947,\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1427671598,\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1783299128,\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1129042607,\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":460916654,\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":648939889,\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-370660328,\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1889215493,\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1121994683,\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":405815507,\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-124291086,\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-484690728,\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-422036098,\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-714643696,\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":531458253,\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":-309659827,\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-368018716,\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"},{\"name\":\"group_call\",\"type\":\"flags.14?true\"},{\"name\":\"invites\",\"type\":\"flags.15?true\"},{\"name\":\"send\",\"type\":\"flags.16?true\"},{\"name\":\"forums\",\"type\":\"flags.17?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":511092620,\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-2143067670,\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1558266229,\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":1200788123,\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1634752813,\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":750063767,\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-451831443,\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-366410403,\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-1040652646,\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1887741886,\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":-1312568665,\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-85549226,\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":178373535,\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-419271411,\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-530392189,\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1304443240,\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1599903217,\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1759532989,\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.2?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":-1186937242,\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.1?int\"}],\"type\":\"MessageMedia\"},{\"id\":1189204285,\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1188296222,\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1294306862,\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-347535331,\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1140172836,\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":235081943,\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-266911767,\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":1951620897,\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":482797855,\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":-1493633966,\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":-313079300,\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":-1502174430,\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-1160215659,\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-2037963464,\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":-1687559349,\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1280209983,\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-988359047,\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attach_menu\",\"type\":\"flags.1?true\"},{\"name\":\"from_request\",\"type\":\"flags.3?true\"},{\"name\":\"domain\",\"type\":\"flags.0?string\"},{\"name\":\"app\",\"type\":\"flags.2?BotApp\"}],\"type\":\"MessageAction\"},{\"id\":-55902537,\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":-445792507,\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":223655517,\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1963942446,\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-207944868,\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":-104284986,\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":1968737087,\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":-483352705,\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":686618977,\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":859091184,\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":1399317950,\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":-876089816,\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":1679398724,\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":2097791614,\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":-1964327229,\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":2103482845,\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":569137759,\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":-1658158621,\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":1034709504,\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":115615172,\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1596951477,\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1717268701,\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-874308058,\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-63531698,\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1995211763,\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1954007928,\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1713143702,\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-368907213,\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1289704741,\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1908627474,\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":411017418,\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":-618540889,\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":-316748368,\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":-391902247,\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":12467706,\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2037765467,\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-449327402,\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":2054162547,\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":1717706985,\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":871426631,\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":-1389486888,\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-2128640689,\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":455635795,\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":-648257196,\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":1722786150,\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":1783556146,\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":289586518,\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":1304052993,\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":700340377,\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":-513517117,\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-253500010,\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1625153079,\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":-1255369827,\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":-1685456582,\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-732254058,\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":4883767,\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-1141711456,\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-2042159726,\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":354925740,\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":982592842,\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":-1736378792,\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-763367294,\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-2036501105,\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-1592506512,\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":878931416,\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2103600678,\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":41187252,\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":-1078332329,\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":-1600596305,\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":488313413,\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":-1059185703,\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":1064139624,\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":-952869270,\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":736157604,\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":-1222740358,\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":-146520221,\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1715350371,\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1311015810,\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-703403793,\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-311786236,\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-939827711,\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":55281185,\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":483104362,\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":136105807,\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":504660880,\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":878078826,\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":-524237339,\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":-1085412734,\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":1869903447,\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":-1188055347,\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":635466748,\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":1577484359,\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1730311882,\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1702174239,\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":1987480557,\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1282352120,\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":370236054,\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":-1538310410,\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-1738178803,\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":-610373422,\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":961092808,\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":894777186,\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":-1945767479,\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":-206688531,\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":32192344,\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":-202219658,\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1398708869,\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":1823064809,\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":-2032041631,\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"string\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":997055186,\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":2061444128,\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<Peer>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":261416433,\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":1272375192,\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":-264117680,\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":1202287072,\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":-525288402,\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":1605510357,\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"},{\"name\":\"anonymous\",\"type\":\"flags.10?true\"},{\"name\":\"manage_call\",\"type\":\"flags.11?true\"},{\"name\":\"other\",\"type\":\"flags.12?true\"},{\"name\":\"manage_topics\",\"type\":\"flags.13?true\"},{\"name\":\"post_stories\",\"type\":\"flags.14?true\"},{\"name\":\"edit_stories\",\"type\":\"flags.15?true\"},{\"name\":\"delete_stories\",\"type\":\"flags.16?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":-1626209256,\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"manage_topics\",\"type\":\"flags.18?true\"},{\"name\":\"send_photos\",\"type\":\"flags.19?true\"},{\"name\":\"send_videos\",\"type\":\"flags.20?true\"},{\"name\":\"send_roundvideos\",\"type\":\"flags.21?true\"},{\"name\":\"send_audios\",\"type\":\"flags.22?true\"},{\"name\":\"send_voices\",\"type\":\"flags.23?true\"},{\"name\":\"send_docs\",\"type\":\"flags.24?true\"},{\"name\":\"send_plain\",\"type\":\"flags.25?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":1421875280,\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-433014407,\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":1913199744,\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":-1150621555,\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":771095562,\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1895328189,\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":471437699,\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":-842824308,\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":-1390068360,\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"},{\"name\":\"allow_missed_call\",\"type\":\"flags.5?true\"},{\"name\":\"allow_firebase\",\"type\":\"flags.7?true\"},{\"name\":\"logout_tokens\",\"type\":\"flags.6?Vector<bytes>\"},{\"name\":\"token\",\"type\":\"flags.8?string\"},{\"name\":\"app_sandbox\",\"type\":\"flags.8?Bool\"}],\"type\":\"CodeSettings\"},{\"id\":925826256,\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"third_background_color\",\"type\":\"flags.5?int\"},{\"name\":\"fourth_background_color\",\"type\":\"flags.6?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"},{\"name\":\"emoticon\",\"type\":\"flags.7?string\"}],\"type\":\"WallPaperSettings\"},{\"id\":-1163561432,\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"stories_preload\",\"type\":\"flags.4?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"long\"},{\"name\":\"file_size_max\",\"type\":\"long\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"},{\"name\":\"small_queue_active_operations_max\",\"type\":\"int\"},{\"name\":\"large_queue_active_operations_max\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":1674235686,\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":-709641735,\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":594408994,\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":1556570557,\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":-1519029347,\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":-1275374751,\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":-1529000952,\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1777096355,\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1461304012,\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1777000467,\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1075322878,\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-667654413,\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":925204121,\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1652231205,\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb_version\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":-11252123,\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":1908216652,\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":1684014375,\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":1363483106,\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":-70073706,\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":-373643672,\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":422972864,\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":497305826,\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":1536380829,\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1468331492,\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1121318848,\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":55761658,\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-778378131,\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1472172887,\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-68239120,\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":84703944,\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-398136321,\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":280464681,\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":-802258988,\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":-1831650802,\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1886646706,\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1445536993,\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":-2079962673,\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-380694650,\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":1796427406,\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1103656293,\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-1672577397,\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1090087980,\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1786671974,\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":-1078612597,\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":547062491,\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":-901375139,\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-1263546448,\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":241923758,\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-606798099,\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":1401984889,\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1148485274,\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":-666824391,\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":42402760,\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":967122427,\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":-1870238482,\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-797791052,\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":1012306921,\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":-175567375,\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":-1609668650,\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"for_chat\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<ThemeSettings>\"},{\"name\":\"emoticon\",\"type\":\"flags.6?string\"},{\"name\":\"installs_count\",\"type\":\"flags.4?int\"}],\"type\":\"Theme\"},{\"id\":-199313886,\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":-1707242387,\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":-2112423005,\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":-786326563,\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1124062251,\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-2027964103,\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1448076945,\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":1654593920,\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":110008598,\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":957176926,\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":1474462241,\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":-1456996667,\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":-1012849566,\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-69724536,\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1212997976,\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1834973166,\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1527845466,\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1770371538,\"predicate\":\"inputWallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":-528465642,\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":-1881255857,\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":-94849324,\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":1421174295,\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":619974263,\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1218005070,\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessagePeerVote>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":-1144565411,\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1981704948,\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-177732982,\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":1042605427,\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":-118740917,\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":1949890536,\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":2004110666,\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":654302845,\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":-1512627963,\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":889491791,\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":-1237848657,\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":-884757282,\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":-875679776,\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":1244130093,\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1092839390,\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1901828938,\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":963421692,\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"reactions_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_story\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_story\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"reactions_per_story\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"reactions_by_emotion_graph\",\"type\":\"StatsGraph\"},{\"name\":\"story_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"story_reactions_by_emotion_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_posts_interactions\",\"type\":\"Vector<PostInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":-428884101,\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":1065280907,\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-427863538,\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":-1728664459,\"predicate\":\"help.promoDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.PromoData\"},{\"id\":-1942390465,\"predicate\":\"help.promoData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"proxy\",\"type\":\"flags.0?true\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"psa_type\",\"type\":\"flags.1?string\"},{\"name\":\"psa_message\",\"type\":\"flags.2?string\"}],\"type\":\"help.PromoData\"},{\"id\":-567037804,\"predicate\":\"videoSize\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.0?double\"}],\"type\":\"VideoSize\"},{\"id\":643940105,\"predicate\":\"updatePhoneCallSignalingData\",\"params\":[{\"name\":\"phone_call_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Update\"},{\"id\":1634294960,\"predicate\":\"chatInvitePeek\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":-1660637285,\"predicate\":\"statsGroupTopPoster\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"int\"},{\"name\":\"avg_chars\",\"type\":\"int\"}],\"type\":\"StatsGroupTopPoster\"},{\"id\":-682079097,\"predicate\":\"statsGroupTopAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"deleted\",\"type\":\"int\"},{\"name\":\"kicked\",\"type\":\"int\"},{\"name\":\"banned\",\"type\":\"int\"}],\"type\":\"StatsGroupTopAdmin\"},{\"id\":1398765469,\"predicate\":\"statsGroupTopInviter\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"invitations\",\"type\":\"int\"}],\"type\":\"StatsGroupTopInviter\"},{\"id\":-276825834,\"predicate\":\"stats.megagroupStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"members\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"messages\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"viewers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"posters\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"members_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_members_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"messages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"actions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"weekdays_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_posters\",\"type\":\"Vector<StatsGroupTopPoster>\"},{\"name\":\"top_admins\",\"type\":\"Vector<StatsGroupTopAdmin>\"},{\"name\":\"top_inviters\",\"type\":\"Vector<StatsGroupTopInviter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":1934380235,\"predicate\":\"globalPrivacySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archive_and_mute_new_noncontact_peers\",\"type\":\"flags.0?true\"},{\"name\":\"keep_archived_unmuted\",\"type\":\"flags.1?true\"},{\"name\":\"keep_archived_folders\",\"type\":\"flags.2?true\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":1667228533,\"predicate\":\"phoneConnectionWebrtc\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"turn\",\"type\":\"flags.0?true\"},{\"name\":\"stun\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"type\":\"PhoneConnection\"},{\"id\":1107543535,\"predicate\":\"help.countryCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_code\",\"type\":\"string\"},{\"name\":\"prefixes\",\"type\":\"flags.0?Vector<string>\"},{\"name\":\"patterns\",\"type\":\"flags.1?Vector<string>\"}],\"type\":\"help.CountryCode\"},{\"id\":-1014526429,\"predicate\":\"help.country\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"iso2\",\"type\":\"string\"},{\"name\":\"default_name\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.1?string\"},{\"name\":\"country_codes\",\"type\":\"Vector<help.CountryCode>\"}],\"type\":\"help.Country\"},{\"id\":-1815339214,\"predicate\":\"help.countriesListNotModified\",\"params\":[],\"type\":\"help.CountriesList\"},{\"id\":-2016381538,\"predicate\":\"help.countriesList\",\"params\":[{\"name\":\"countries\",\"type\":\"Vector<help.Country>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":1163625789,\"predicate\":\"messageViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"views\",\"type\":\"flags.0?int\"},{\"name\":\"forwards\",\"type\":\"flags.1?int\"},{\"name\":\"replies\",\"type\":\"flags.2?MessageReplies\"}],\"type\":\"MessageViews\"},{\"id\":-761649164,\"predicate\":\"updateChannelMessageForwards\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-96535659,\"predicate\":\"photoSizeProgressive\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<int>\"}],\"type\":\"PhotoSize\"},{\"id\":-1228606141,\"predicate\":\"messages.messageViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<MessageViews>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.MessageViews\"},{\"id\":-693004986,\"predicate\":\"updateReadChannelDiscussionInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"},{\"name\":\"broadcast_id\",\"type\":\"flags.0?long\"},{\"name\":\"broadcast_post\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1767677564,\"predicate\":\"updateReadChannelDiscussionOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1506535550,\"predicate\":\"messages.discussionMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"max_id\",\"type\":\"flags.0?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"flags.1?int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"flags.2?int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-1346631205,\"predicate\":\"messageReplyHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_scheduled\",\"type\":\"flags.2?true\"},{\"name\":\"forum_topic\",\"type\":\"flags.3?true\"},{\"name\":\"quote\",\"type\":\"flags.9?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"reply_from\",\"type\":\"flags.5?MessageFwdHeader\"},{\"name\":\"reply_media\",\"type\":\"flags.8?MessageMedia\"},{\"name\":\"reply_to_top_id\",\"type\":\"flags.1?int\"},{\"name\":\"quote_text\",\"type\":\"flags.6?string\"},{\"name\":\"quote_entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"quote_offset\",\"type\":\"flags.10?int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":-2083123262,\"predicate\":\"messageReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"comments\",\"type\":\"flags.0?true\"},{\"name\":\"replies\",\"type\":\"int\"},{\"name\":\"replies_pts\",\"type\":\"int\"},{\"name\":\"recent_repliers\",\"type\":\"flags.1?Vector<Peer>\"},{\"name\":\"channel_id\",\"type\":\"flags.0?long\"},{\"name\":\"max_id\",\"type\":\"flags.2?int\"},{\"name\":\"read_max_id\",\"type\":\"flags.3?int\"}],\"type\":\"MessageReplies\"},{\"id\":-337610926,\"predicate\":\"updatePeerBlocked\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.1?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"}],\"type\":\"Update\"},{\"id\":-386039788,\"predicate\":\"peerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PeerBlocked\"},{\"id\":-1937192669,\"predicate\":\"updateChannelUserTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-1392895362,\"predicate\":\"inputMessageCallbackQuery\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"InputMessage\"},{\"id\":453242886,\"predicate\":\"channelParticipantLeft\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"ChannelParticipant\"},{\"id\":-531931925,\"predicate\":\"channelParticipantsMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-309990731,\"predicate\":\"updatePinnedMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1538885128,\"predicate\":\"updatePinnedChannelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":464520273,\"predicate\":\"inputMessagesFilterPinned\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2145983508,\"predicate\":\"stats.messageStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"},{\"name\":\"reactions_by_emotion_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.MessageStats\"},{\"id\":-1730095465,\"predicate\":\"messageActionGeoProximityReached\",\"params\":[{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-668906175,\"predicate\":\"photoPathSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-651419003,\"predicate\":\"speakingInGroupCallAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":2004925620,\"predicate\":\"groupCallDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-711498484,\"predicate\":\"groupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join_muted\",\"type\":\"flags.1?true\"},{\"name\":\"can_change_join_muted\",\"type\":\"flags.2?true\"},{\"name\":\"join_date_asc\",\"type\":\"flags.6?true\"},{\"name\":\"schedule_start_subscribed\",\"type\":\"flags.8?true\"},{\"name\":\"can_start_video\",\"type\":\"flags.9?true\"},{\"name\":\"record_video_active\",\"type\":\"flags.11?true\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.12?true\"},{\"name\":\"listeners_hidden\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.3?string\"},{\"name\":\"stream_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"record_start_date\",\"type\":\"flags.5?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.7?int\"},{\"name\":\"unmuted_video_count\",\"type\":\"flags.10?int\"},{\"name\":\"unmuted_video_limit\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-659913713,\"predicate\":\"inputGroupCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGroupCall\"},{\"id\":2047704898,\"predicate\":\"messageActionGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"duration\",\"type\":\"flags.0?int\"}],\"type\":\"MessageAction\"},{\"id\":1345295095,\"predicate\":\"messageActionInviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-341428482,\"predicate\":\"groupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.1?true\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.2?true\"},{\"name\":\"just_joined\",\"type\":\"flags.4?true\"},{\"name\":\"versioned\",\"type\":\"flags.5?true\"},{\"name\":\"min\",\"type\":\"flags.8?true\"},{\"name\":\"muted_by_you\",\"type\":\"flags.9?true\"},{\"name\":\"volume_by_admin\",\"type\":\"flags.10?true\"},{\"name\":\"self\",\"type\":\"flags.12?true\"},{\"name\":\"video_joined\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"active_date\",\"type\":\"flags.3?int\"},{\"name\":\"source\",\"type\":\"int\"},{\"name\":\"volume\",\"type\":\"flags.7?int\"},{\"name\":\"about\",\"type\":\"flags.11?string\"},{\"name\":\"raise_hand_rating\",\"type\":\"flags.13?long\"},{\"name\":\"video\",\"type\":\"flags.6?GroupCallParticipantVideo\"},{\"name\":\"presentation\",\"type\":\"flags.14?GroupCallParticipantVideo\"}],\"type\":\"GroupCallParticipant\"},{\"id\":-124097970,\"predicate\":\"updateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-219423922,\"predicate\":\"updateGroupCallParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":347227392,\"predicate\":\"updateGroupCall\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"call\",\"type\":\"GroupCall\"}],\"type\":\"Update\"},{\"id\":-1636664659,\"predicate\":\"phone.groupCall\",\"params\":[{\"name\":\"call\",\"type\":\"GroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"participants_next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.GroupCall\"},{\"id\":-193506890,\"predicate\":\"phone.groupParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":813821341,\"predicate\":\"inlineQueryPeerTypeSameBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-2093215828,\"predicate\":\"inlineQueryPeerTypePM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-681130742,\"predicate\":\"inlineQueryPeerTypeChat\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1589952067,\"predicate\":\"inlineQueryPeerTypeMegagroup\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1664413338,\"predicate\":\"inlineQueryPeerTypeBroadcast\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":589338437,\"predicate\":\"channelAdminLogEventActionStartGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-610299584,\"predicate\":\"channelAdminLogEventActionDiscardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-115071790,\"predicate\":\"channelAdminLogEventActionParticipantMute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-431740480,\"predicate\":\"channelAdminLogEventActionParticipantUnmute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1456906823,\"predicate\":\"channelAdminLogEventActionToggleGroupCallSetting\",\"params\":[{\"name\":\"join_muted\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1966921727,\"predicate\":\"inputPaymentCredentialsGooglePay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":375566091,\"predicate\":\"messages.historyImport\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"messages.HistoryImport\"},{\"id\":-606432698,\"predicate\":\"sendMessageHistoryImportAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":1578088377,\"predicate\":\"messages.historyImportParsed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pm\",\"type\":\"flags.0?true\"},{\"name\":\"group\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"flags.2?string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":-170010905,\"predicate\":\"inputReportReasonFake\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-275956116,\"predicate\":\"messages.affectedFoundMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1007897979,\"predicate\":\"messageActionSetMessagesTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"auto_setting_from\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":-1147422299,\"predicate\":\"updatePeerHistoryTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-796432838,\"predicate\":\"updateChatParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChatParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChatParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1738720581,\"predicate\":\"updateChannelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_chatlist\",\"type\":\"flags.3?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChannelParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-997782967,\"predicate\":\"updateBotStopped\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"stopped\",\"type\":\"Bool\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1940201511,\"predicate\":\"chatInviteImporter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"via_chatlist\",\"type\":\"flags.3?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"flags.2?string\"},{\"name\":\"approved_by\",\"type\":\"flags.1?long\"}],\"type\":\"ChatInviteImporter\"},{\"id\":-1111085620,\"predicate\":\"messages.exportedChatInvites\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"invites\",\"type\":\"Vector<ExportedChatInvite>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":410107472,\"predicate\":\"messages.exportedChatInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":572915951,\"predicate\":\"messages.exportedChatInviteReplaced\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-2118733814,\"predicate\":\"messages.chatInviteImporters\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"importers\",\"type\":\"Vector<ChatInviteImporter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-219353309,\"predicate\":\"chatAdminWithInvites\",\"params\":[{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"invites_count\",\"type\":\"int\"},{\"name\":\"revoked_invites_count\",\"type\":\"int\"}],\"type\":\"ChatAdminWithInvites\"},{\"id\":-1231326505,\"predicate\":\"messages.chatAdminsWithInvites\",\"params\":[{\"name\":\"admins\",\"type\":\"Vector<ChatAdminWithInvites>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-23084712,\"predicate\":\"channelAdminLogEventActionParticipantJoinByInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_chatlist\",\"type\":\"flags.0?true\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1515256996,\"predicate\":\"channelAdminLogEventActionExportedInviteDelete\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1091179342,\"predicate\":\"channelAdminLogEventActionExportedInviteRevoke\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-384910503,\"predicate\":\"channelAdminLogEventActionExportedInviteEdit\",\"params\":[{\"name\":\"prev_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1048537159,\"predicate\":\"channelAdminLogEventActionParticipantVolume\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1855199800,\"predicate\":\"channelAdminLogEventActionChangeHistoryTTL\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1571952873,\"predicate\":\"messages.checkedHistoryImportPeer\",\"params\":[{\"name\":\"confirm_text\",\"type\":\"string\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":93890858,\"predicate\":\"inputGroupCallStream\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"time_ms\",\"type\":\"long\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"video_channel\",\"type\":\"flags.0?int\"},{\"name\":\"video_quality\",\"type\":\"flags.0?int\"}],\"type\":\"InputFileLocation\"},{\"id\":-1343921601,\"predicate\":\"phone.joinAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":541839704,\"predicate\":\"phone.exportedGroupCallInvite\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":-672693723,\"predicate\":\"inputBotInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":894081801,\"predicate\":\"botInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1281329567,\"predicate\":\"messageActionGroupCallScheduled\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"schedule_date\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-592373577,\"predicate\":\"groupCallParticipantVideoSourceGroup\",\"params\":[{\"name\":\"semantics\",\"type\":\"string\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"GroupCallParticipantVideoSourceGroup\"},{\"id\":1735736008,\"predicate\":\"groupCallParticipantVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"paused\",\"type\":\"flags.0?true\"},{\"name\":\"endpoint\",\"type\":\"string\"},{\"name\":\"source_groups\",\"type\":\"Vector<GroupCallParticipantVideoSourceGroup>\"},{\"name\":\"audio_source\",\"type\":\"flags.1?int\"}],\"type\":\"GroupCallParticipantVideo\"},{\"id\":192428418,\"predicate\":\"updateGroupCallConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"presentation\",\"type\":\"flags.0?true\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-2046910401,\"predicate\":\"stickers.suggestedShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":795652779,\"predicate\":\"botCommandScopeDefault\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1011811544,\"predicate\":\"botCommandScopeUsers\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1877059713,\"predicate\":\"botCommandScopeChats\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-1180016534,\"predicate\":\"botCommandScopeChatAdmins\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-610432643,\"predicate\":\"botCommandScopePeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":1071145937,\"predicate\":\"botCommandScopePeerAdmins\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":169026035,\"predicate\":\"botCommandScopePeerUser\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotCommandScope\"},{\"id\":-478701471,\"predicate\":\"account.resetPasswordFailedWait\",\"params\":[{\"name\":\"retry_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-370148227,\"predicate\":\"account.resetPasswordRequestedWait\",\"params\":[{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-383330754,\"predicate\":\"account.resetPasswordOk\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1299263278,\"predicate\":\"updateBotCommands\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Update\"},{\"id\":-1434950843,\"predicate\":\"messageActionSetChatTheme\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1336228175,\"predicate\":\"sendMessageChooseStickerAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-313293833,\"predicate\":\"sponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recommended\",\"type\":\"flags.5?true\"},{\"name\":\"show_peer_photo\",\"type\":\"flags.6?true\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"from_id\",\"type\":\"flags.3?Peer\"},{\"name\":\"chat_invite\",\"type\":\"flags.4?ChatInvite\"},{\"name\":\"chat_invite_hash\",\"type\":\"flags.4?string\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"start_param\",\"type\":\"flags.0?string\"},{\"name\":\"webpage\",\"type\":\"flags.9?SponsoredWebPage\"},{\"name\":\"app\",\"type\":\"flags.10?BotApp\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"button_text\",\"type\":\"flags.11?string\"},{\"name\":\"sponsor_info\",\"type\":\"flags.7?string\"},{\"name\":\"additional_info\",\"type\":\"flags.8?string\"}],\"type\":\"SponsoredMessage\"},{\"id\":-907141753,\"predicate\":\"messages.sponsoredMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"posts_between\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<SponsoredMessage>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":215889721,\"predicate\":\"inputStickerSetAnimatedEmojiAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":630664139,\"predicate\":\"sendMessageEmojiInteraction\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"interaction\",\"type\":\"DataJSON\"}],\"type\":\"SendMessageAction\"},{\"id\":-1234857938,\"predicate\":\"sendMessageEmojiInteractionSeen\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"SendMessageAction\"},{\"id\":-1227287081,\"predicate\":\"inputBotInlineMessageID64\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":-911191137,\"predicate\":\"searchResultsCalendarPeriod\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"max_msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SearchResultsCalendarPeriod\"},{\"id\":343859772,\"predicate\":\"messages.searchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.1?int\"},{\"name\":\"periods\",\"type\":\"Vector<SearchResultsCalendarPeriod>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":2137295719,\"predicate\":\"searchResultPosition\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"SearchResultsPosition\"},{\"id\":1404185519,\"predicate\":\"messages.searchResultsPositions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"positions\",\"type\":\"Vector<SearchResultsPosition>\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":-339958837,\"predicate\":\"messageActionChatJoinedByRequest\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1885586395,\"predicate\":\"updatePendingJoinRequests\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"requests_pending\",\"type\":\"int\"},{\"name\":\"recent_requesters\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":299870598,\"predicate\":\"updateBotChatInviteRequester\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1347021750,\"predicate\":\"channelAdminLogEventActionParticipantJoinByRequest\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"approved_by\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-376962181,\"predicate\":\"inputKeyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":814112961,\"predicate\":\"keyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"KeyboardButton\"},{\"id\":-191450938,\"predicate\":\"channels.sendAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<SendAsPeer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-886388890,\"predicate\":\"channelAdminLogEventActionToggleNoForwards\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-738646805,\"predicate\":\"messages.stickerSetNotModified\",\"params\":[],\"type\":\"messages.StickerSet\"},{\"id\":997004590,\"predicate\":\"users.userFull\",\"params\":[{\"name\":\"full_user\",\"type\":\"UserFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.UserFull\"},{\"id\":1753266509,\"predicate\":\"messages.peerSettings\",\"params\":[{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PeerSettings\"},{\"id\":663693416,\"predicate\":\"channelAdminLogEventActionSendMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-702884114,\"predicate\":\"auth.codeTypeMissedCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-2113903484,\"predicate\":\"auth.sentCodeTypeMissedCall\",\"params\":[{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1012759713,\"predicate\":\"auth.loggedOut\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"future_auth_token\",\"type\":\"flags.0?bytes\"}],\"type\":\"auth.LoggedOut\"},{\"id\":1578843320,\"predicate\":\"updateMessageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"reactions\",\"type\":\"MessageReactions\"}],\"type\":\"Update\"},{\"id\":-1546531968,\"predicate\":\"reactionCount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen_order\",\"type\":\"flags.0?int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"ReactionCount\"},{\"id\":1328256121,\"predicate\":\"messageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"can_see_list\",\"type\":\"flags.2?true\"},{\"name\":\"results\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"recent_reactions\",\"type\":\"flags.1?Vector<MessagePeerReaction>\"}],\"type\":\"MessageReactions\"},{\"id\":834488621,\"predicate\":\"messages.messageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<MessagePeerReaction>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-1065882623,\"predicate\":\"availableReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"premium\",\"type\":\"flags.2?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"static_icon\",\"type\":\"Document\"},{\"name\":\"appear_animation\",\"type\":\"Document\"},{\"name\":\"select_animation\",\"type\":\"Document\"},{\"name\":\"activate_animation\",\"type\":\"Document\"},{\"name\":\"effect_animation\",\"type\":\"Document\"},{\"name\":\"around_animation\",\"type\":\"flags.1?Document\"},{\"name\":\"center_icon\",\"type\":\"flags.1?Document\"}],\"type\":\"AvailableReaction\"},{\"id\":-1626924713,\"predicate\":\"messages.availableReactionsNotModified\",\"params\":[],\"type\":\"messages.AvailableReactions\"},{\"id\":1989032621,\"predicate\":\"messages.availableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<AvailableReaction>\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":852137487,\"predicate\":\"messageEntitySpoiler\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1102180616,\"predicate\":\"channelAdminLogEventActionChangeAvailableReactions\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChatReactions\"},{\"name\":\"new_value\",\"type\":\"ChatReactions\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1938180548,\"predicate\":\"messagePeerReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"unread\",\"type\":\"flags.1?true\"},{\"name\":\"my\",\"type\":\"flags.2?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"MessagePeerReaction\"},{\"id\":-2132064081,\"predicate\":\"groupCallStreamChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"last_timestamp_ms\",\"type\":\"long\"}],\"type\":\"GroupCallStreamChannel\"},{\"id\":-790330702,\"predicate\":\"phone.groupCallStreamChannels\",\"params\":[{\"name\":\"channels\",\"type\":\"Vector<GroupCallStreamChannel>\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":177124030,\"predicate\":\"inputReportReasonIllegalDrugs\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1631091139,\"predicate\":\"inputReportReasonPersonalDetails\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":767505458,\"predicate\":\"phone.groupCallStreamRtmpUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":1165423600,\"predicate\":\"attachMenuBotIconColor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"AttachMenuBotIconColor\"},{\"id\":-1297663893,\"predicate\":\"attachMenuBotIcon\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"icon\",\"type\":\"Document\"},{\"name\":\"colors\",\"type\":\"flags.0?Vector<AttachMenuBotIconColor>\"}],\"type\":\"AttachMenuBotIcon\"},{\"id\":-653423106,\"predicate\":\"attachMenuBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"has_settings\",\"type\":\"flags.1?true\"},{\"name\":\"request_write_access\",\"type\":\"flags.2?true\"},{\"name\":\"show_in_attach_menu\",\"type\":\"flags.3?true\"},{\"name\":\"show_in_side_menu\",\"type\":\"flags.4?true\"},{\"name\":\"side_menu_disclaimer_needed\",\"type\":\"flags.5?true\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"peer_types\",\"type\":\"flags.3?Vector<AttachMenuPeerType>\"},{\"name\":\"icons\",\"type\":\"Vector<AttachMenuBotIcon>\"}],\"type\":\"AttachMenuBot\"},{\"id\":-237467044,\"predicate\":\"attachMenuBotsNotModified\",\"params\":[],\"type\":\"AttachMenuBots\"},{\"id\":1011024320,\"predicate\":\"attachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bots\",\"type\":\"Vector<AttachMenuBot>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBots\"},{\"id\":-1816172929,\"predicate\":\"attachMenuBotsBot\",\"params\":[{\"name\":\"bot\",\"type\":\"AttachMenuBot\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":397910539,\"predicate\":\"updateAttachMenuBots\",\"params\":[],\"type\":\"Update\"},{\"id\":202659196,\"predicate\":\"webViewResultUrl\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":-2010155333,\"predicate\":\"simpleWebViewResultUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":211046684,\"predicate\":\"webViewMessageSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"msg_id\",\"type\":\"flags.0?InputBotInlineMessageID\"}],\"type\":\"WebViewMessageSent\"},{\"id\":361936797,\"predicate\":\"updateWebViewResultSent\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":326529584,\"predicate\":\"keyboardButtonWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1598009252,\"predicate\":\"keyboardButtonSimpleWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1205698681,\"predicate\":\"messageActionWebViewDataSentMe\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1262252875,\"predicate\":\"messageActionWebViewDataSent\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":347625491,\"predicate\":\"updateBotMenuButton\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Update\"},{\"id\":1966318984,\"predicate\":\"botMenuButtonDefault\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":1113113093,\"predicate\":\"botMenuButtonCommands\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":-944407322,\"predicate\":\"botMenuButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"BotMenuButton\"},{\"id\":-67704655,\"predicate\":\"account.savedRingtonesNotModified\",\"params\":[],\"type\":\"account.SavedRingtones\"},{\"id\":-1041683259,\"predicate\":\"account.savedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"ringtones\",\"type\":\"Vector<Document>\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1960361625,\"predicate\":\"updateSavedRingtones\",\"params\":[],\"type\":\"Update\"},{\"id\":-1746354498,\"predicate\":\"notificationSoundDefault\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":1863070943,\"predicate\":\"notificationSoundNone\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":-2096391452,\"predicate\":\"notificationSoundLocal\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"NotificationSound\"},{\"id\":-9666487,\"predicate\":\"notificationSoundRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"NotificationSound\"},{\"id\":-1222230163,\"predicate\":\"account.savedRingtone\",\"params\":[],\"type\":\"account.SavedRingtone\"},{\"id\":523271863,\"predicate\":\"account.savedRingtoneConverted\",\"params\":[{\"name\":\"document\",\"type\":\"Document\"}],\"type\":\"account.SavedRingtone\"},{\"id\":2104224014,\"predicate\":\"attachMenuPeerTypeSameBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-1020528102,\"predicate\":\"attachMenuPeerTypeBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-247016673,\"predicate\":\"attachMenuPeerTypePM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":84480319,\"predicate\":\"attachMenuPeerTypeChat\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":2080104188,\"predicate\":\"attachMenuPeerTypeBroadcast\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-317687113,\"predicate\":\"chatInvitePublicJoinRequests\",\"params\":[],\"type\":\"ExportedChatInvite\"},{\"id\":-977967015,\"predicate\":\"inputInvoiceMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"InputInvoice\"},{\"id\":-1020867857,\"predicate\":\"inputInvoiceSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputInvoice\"},{\"id\":-1362048039,\"predicate\":\"payments.exportedInvoice\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":8703322,\"predicate\":\"updateTranscribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-809903785,\"predicate\":\"messages.transcribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"trial_remains_num\",\"type\":\"flags.1?int\"},{\"name\":\"trial_remains_until_date\",\"type\":\"flags.1?int\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":909284270,\"predicate\":\"dialogFilterDefault\",\"params\":[],\"type\":\"DialogFilter\"},{\"id\":1395946908,\"predicate\":\"help.premiumPromo\",\"params\":[{\"name\":\"status_text\",\"type\":\"string\"},{\"name\":\"status_entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"video_sections\",\"type\":\"Vector<string>\"},{\"name\":\"videos\",\"type\":\"Vector<Document>\"},{\"name\":\"period_options\",\"type\":\"Vector<PremiumSubscriptionOption>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.PremiumPromo\"},{\"id\":-925956616,\"predicate\":\"messageEntityCustomEmoji\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":-48981863,\"predicate\":\"documentAttributeCustomEmoji\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"free\",\"type\":\"flags.0?true\"},{\"name\":\"text_color\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"DocumentAttribute\"},{\"id\":1087454222,\"predicate\":\"stickerSetFullCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1502273946,\"predicate\":\"inputStorePaymentPremiumSubscription\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"restore\",\"type\":\"flags.0?true\"},{\"name\":\"upgrade\",\"type\":\"flags.1?true\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":1634697192,\"predicate\":\"inputStorePaymentGiftPremium\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":-935499028,\"predicate\":\"messageActionGiftPremium\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"crypto_currency\",\"type\":\"flags.0?string\"},{\"name\":\"crypto_amount\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":1958953753,\"predicate\":\"premiumGiftOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumGiftOption\"},{\"id\":-930399486,\"predicate\":\"inputStickerSetPremiumGifts\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-78886548,\"predicate\":\"updateReadFeaturedEmojiStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-1360618136,\"predicate\":\"inputPrivacyKeyVoiceMessages\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":110621716,\"predicate\":\"privacyKeyVoiceMessages\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1996951013,\"predicate\":\"paymentFormMethod\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentFormMethod\"},{\"id\":-193992412,\"predicate\":\"inputWebFileAudioAlbumThumbLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"small\",\"type\":\"flags.2?true\"},{\"name\":\"document\",\"type\":\"flags.0?InputDocument\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"}],\"type\":\"InputWebFileLocation\"},{\"id\":769727150,\"predicate\":\"emojiStatusEmpty\",\"params\":[],\"type\":\"EmojiStatus\"},{\"id\":-1835310691,\"predicate\":\"emojiStatus\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"EmojiStatus\"},{\"id\":-97474361,\"predicate\":\"emojiStatusUntil\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"until\",\"type\":\"int\"}],\"type\":\"EmojiStatus\"},{\"id\":674706841,\"predicate\":\"updateUserEmojiStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Update\"},{\"id\":821314523,\"predicate\":\"updateRecentEmojiStatuses\",\"params\":[],\"type\":\"Update\"},{\"id\":-796072379,\"predicate\":\"account.emojiStatusesNotModified\",\"params\":[],\"type\":\"account.EmojiStatuses\"},{\"id\":-1866176559,\"predicate\":\"account.emojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"statuses\",\"type\":\"Vector<EmojiStatus>\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":2046153753,\"predicate\":\"reactionEmpty\",\"params\":[],\"type\":\"Reaction\"},{\"id\":455247544,\"predicate\":\"reactionEmoji\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Reaction\"},{\"id\":-1992950669,\"predicate\":\"reactionCustomEmoji\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Reaction\"},{\"id\":-352570692,\"predicate\":\"chatReactionsNone\",\"params\":[],\"type\":\"ChatReactions\"},{\"id\":1385335754,\"predicate\":\"chatReactionsAll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_custom\",\"type\":\"flags.0?true\"}],\"type\":\"ChatReactions\"},{\"id\":1713193015,\"predicate\":\"chatReactionsSome\",\"params\":[{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"ChatReactions\"},{\"id\":-1334846497,\"predicate\":\"messages.reactionsNotModified\",\"params\":[],\"type\":\"messages.Reactions\"},{\"id\":-352454890,\"predicate\":\"messages.reactions\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"messages.Reactions\"},{\"id\":1870160884,\"predicate\":\"updateRecentReactions\",\"params\":[],\"type\":\"Update\"},{\"id\":-2030252155,\"predicate\":\"updateMoveStickerSetToTop\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"stickerset\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-196020837,\"predicate\":\"auth.sentCodeTypeEmailCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"},{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"reset_available_period\",\"type\":\"flags.3?int\"},{\"name\":\"reset_pending_date\",\"type\":\"flags.4?int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1521934870,\"predicate\":\"auth.sentCodeTypeSetUpEmailRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1128644211,\"predicate\":\"emailVerifyPurposeLoginSetup\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"EmailVerifyPurpose\"},{\"id\":1383932651,\"predicate\":\"emailVerifyPurposeLoginChange\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1141565819,\"predicate\":\"emailVerifyPurposePassport\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1842457175,\"predicate\":\"emailVerificationCode\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-611279166,\"predicate\":\"emailVerificationGoogle\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-1764723459,\"predicate\":\"emailVerificationApple\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":731303195,\"predicate\":\"account.emailVerified\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.EmailVerified\"},{\"id\":-507835039,\"predicate\":\"account.emailVerifiedLogin\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"sent_code\",\"type\":\"auth.SentCode\"}],\"type\":\"account.EmailVerified\"},{\"id\":1596792306,\"predicate\":\"premiumSubscriptionOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.1?true\"},{\"name\":\"can_purchase_upgrade\",\"type\":\"flags.2?true\"},{\"name\":\"transaction\",\"type\":\"flags.3?string\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumSubscriptionOption\"},{\"id\":80008398,\"predicate\":\"inputStickerSetEmojiGenericAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":701560302,\"predicate\":\"inputStickerSetEmojiDefaultStatuses\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1206095820,\"predicate\":\"sendAsPeer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium_required\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"SendAsPeer\"},{\"id\":-1386050360,\"predicate\":\"messageExtendedMediaPreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"w\",\"type\":\"flags.0?int\"},{\"name\":\"h\",\"type\":\"flags.0?int\"},{\"name\":\"thumb\",\"type\":\"flags.1?PhotoSize\"},{\"name\":\"video_duration\",\"type\":\"flags.2?int\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":-297296796,\"predicate\":\"messageExtendedMedia\",\"params\":[{\"name\":\"media\",\"type\":\"MessageMedia\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":1517529484,\"predicate\":\"updateMessageExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"extended_media\",\"type\":\"MessageExtendedMedia\"}],\"type\":\"Update\"},{\"id\":-50416996,\"predicate\":\"stickerKeyword\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"keyword\",\"type\":\"Vector<string>\"}],\"type\":\"StickerKeyword\"},{\"id\":-1274595769,\"predicate\":\"username\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"editable\",\"type\":\"flags.0?true\"},{\"name\":\"active\",\"type\":\"flags.1?true\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Username\"},{\"id\":-263212119,\"predicate\":\"channelAdminLogEventActionChangeUsernames\",\"params\":[{\"name\":\"prev_value\",\"type\":\"Vector<string>\"},{\"name\":\"new_value\",\"type\":\"Vector<string>\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":46949251,\"predicate\":\"channelAdminLogEventActionToggleForum\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1483767080,\"predicate\":\"channelAdminLogEventActionCreateTopic\",\"params\":[{\"name\":\"topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-261103096,\"predicate\":\"channelAdminLogEventActionEditTopic\",\"params\":[{\"name\":\"prev_topic\",\"type\":\"ForumTopic\"},{\"name\":\"new_topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1374254839,\"predicate\":\"channelAdminLogEventActionDeleteTopic\",\"params\":[{\"name\":\"topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1569535291,\"predicate\":\"channelAdminLogEventActionPinTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"prev_topic\",\"type\":\"flags.0?ForumTopic\"},{\"name\":\"new_topic\",\"type\":\"flags.1?ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":37687451,\"predicate\":\"forumTopicDeleted\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ForumTopic\"},{\"id\":1903173033,\"predicate\":\"forumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my\",\"type\":\"flags.1?true\"},{\"name\":\"closed\",\"type\":\"flags.2?true\"},{\"name\":\"pinned\",\"type\":\"flags.3?true\"},{\"name\":\"short\",\"type\":\"flags.5?true\"},{\"name\":\"hidden\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.0?long\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"draft\",\"type\":\"flags.4?DraftMessage\"}],\"type\":\"ForumTopic\"},{\"id\":913709011,\"predicate\":\"messages.forumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"order_by_create_date\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"topics\",\"type\":\"Vector<ForumTopic>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"messages.ForumTopics\"},{\"id\":228168278,\"predicate\":\"messageActionTopicCreate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":-1064024032,\"predicate\":\"messageActionTopicEdit\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.1?long\"},{\"name\":\"closed\",\"type\":\"flags.2?Bool\"},{\"name\":\"hidden\",\"type\":\"flags.3?Bool\"}],\"type\":\"MessageAction\"},{\"id\":422509539,\"predicate\":\"updateChannelPinnedTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"topic_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1548122514,\"predicate\":\"inputNotifyForumTopic\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"InputNotifyPeer\"},{\"id\":577659656,\"predicate\":\"notifyForumTopic\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"NotifyPeer\"},{\"id\":1153562857,\"predicate\":\"inputStickerSetEmojiDefaultTopicIcons\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":406407439,\"predicate\":\"messages.sponsoredMessagesEmpty\",\"params\":[],\"type\":\"messages.SponsoredMessages\"},{\"id\":-31881726,\"predicate\":\"updateChannelPinnedTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<int>\"}],\"type\":\"Update\"},{\"id\":1135897376,\"predicate\":\"defaultHistoryTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"DefaultHistoryTTL\"},{\"id\":116234636,\"predicate\":\"auth.codeTypeFragmentSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-648651719,\"predicate\":\"auth.sentCodeTypeFragmentSms\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1103040667,\"predicate\":\"exportedContactToken\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ExportedContactToken\"},{\"id\":1693675004,\"predicate\":\"channelAdminLogEventActionToggleAntiSpam\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1474192222,\"predicate\":\"messageActionSuggestProfilePhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":2008112412,\"predicate\":\"stickerSetNoCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"}],\"type\":\"StickerSetCovered\"},{\"id\":542282808,\"predicate\":\"updateUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":596704836,\"predicate\":\"auth.sentCodeSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.SentCode\"},{\"id\":827428507,\"predicate\":\"messageActionRequestedPeer\",\"params\":[{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<Peer>\"}],\"type\":\"MessageAction\"},{\"id\":1597737472,\"predicate\":\"requestPeerTypeUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.0?Bool\"},{\"name\":\"premium\",\"type\":\"flags.1?Bool\"}],\"type\":\"RequestPeerType\"},{\"id\":-906990053,\"predicate\":\"requestPeerTypeChat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"bot_participant\",\"type\":\"flags.5?true\"},{\"name\":\"has_username\",\"type\":\"flags.3?Bool\"},{\"name\":\"forum\",\"type\":\"flags.4?Bool\"},{\"name\":\"user_admin_rights\",\"type\":\"flags.1?ChatAdminRights\"},{\"name\":\"bot_admin_rights\",\"type\":\"flags.2?ChatAdminRights\"}],\"type\":\"RequestPeerType\"},{\"id\":865857388,\"predicate\":\"requestPeerTypeBroadcast\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"has_username\",\"type\":\"flags.3?Bool\"},{\"name\":\"user_admin_rights\",\"type\":\"flags.1?ChatAdminRights\"},{\"name\":\"bot_admin_rights\",\"type\":\"flags.2?ChatAdminRights\"}],\"type\":\"RequestPeerType\"},{\"id\":1406648280,\"predicate\":\"keyboardButtonRequestPeer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"peer_type\",\"type\":\"RequestPeerType\"},{\"name\":\"max_quantity\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":1209970170,\"predicate\":\"emojiListNotModified\",\"params\":[],\"type\":\"EmojiList\"},{\"id\":2048790993,\"predicate\":\"emojiList\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"document_id\",\"type\":\"Vector<long>\"}],\"type\":\"EmojiList\"},{\"id\":-444918734,\"predicate\":\"auth.sentCodeTypeFirebaseSms\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nonce\",\"type\":\"flags.0?bytes\"},{\"name\":\"receipt\",\"type\":\"flags.1?string\"},{\"name\":\"push_timeout\",\"type\":\"flags.1?int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":2056961449,\"predicate\":\"emojiGroup\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_emoji_id\",\"type\":\"long\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiGroup\"},{\"id\":1874111879,\"predicate\":\"messages.emojiGroupsNotModified\",\"params\":[],\"type\":\"messages.EmojiGroups\"},{\"id\":-2011186869,\"predicate\":\"messages.emojiGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"groups\",\"type\":\"Vector<EmojiGroup>\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":-128171716,\"predicate\":\"videoSizeEmojiMarkup\",\"params\":[{\"name\":\"emoji_id\",\"type\":\"long\"},{\"name\":\"background_colors\",\"type\":\"Vector<int>\"}],\"type\":\"VideoSize\"},{\"id\":228623102,\"predicate\":\"videoSizeStickerMarkup\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker_id\",\"type\":\"long\"},{\"name\":\"background_colors\",\"type\":\"Vector<int>\"}],\"type\":\"VideoSize\"},{\"id\":1964978502,\"predicate\":\"textWithEntities\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"TextWithEntities\"},{\"id\":870003448,\"predicate\":\"messages.translateResult\",\"params\":[{\"name\":\"result\",\"type\":\"Vector<TextWithEntities>\"}],\"type\":\"messages.TranslatedText\"},{\"id\":-934791986,\"predicate\":\"autoSaveSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photos\",\"type\":\"flags.0?true\"},{\"name\":\"videos\",\"type\":\"flags.1?true\"},{\"name\":\"video_max_size\",\"type\":\"flags.2?long\"}],\"type\":\"AutoSaveSettings\"},{\"id\":-2124403385,\"predicate\":\"autoSaveException\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"AutoSaveSettings\"}],\"type\":\"AutoSaveException\"},{\"id\":1279133341,\"predicate\":\"account.autoSaveSettings\",\"params\":[{\"name\":\"users_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"chats_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"broadcasts_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"exceptions\",\"type\":\"Vector<AutoSaveException>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.AutoSaveSettings\"},{\"id\":-335171433,\"predicate\":\"updateAutoSaveSettings\",\"params\":[],\"type\":\"Update\"},{\"id\":2094949405,\"predicate\":\"help.appConfigNotModified\",\"params\":[],\"type\":\"help.AppConfig\"},{\"id\":-585598930,\"predicate\":\"help.appConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"config\",\"type\":\"JSONValue\"}],\"type\":\"help.AppConfig\"},{\"id\":-1457472134,\"predicate\":\"inputBotAppID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotApp\"},{\"id\":-1869872121,\"predicate\":\"inputBotAppShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputBotApp\"},{\"id\":1571189943,\"predicate\":\"botAppNotModified\",\"params\":[],\"type\":\"BotApp\"},{\"id\":-1778593322,\"predicate\":\"botApp\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"BotApp\"},{\"id\":-347034123,\"predicate\":\"messages.botApp\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"request_write_access\",\"type\":\"flags.1?true\"},{\"name\":\"has_settings\",\"type\":\"flags.2?true\"},{\"name\":\"app\",\"type\":\"BotApp\"}],\"type\":\"messages.BotApp\"},{\"id\":1008422669,\"predicate\":\"appWebViewResultUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"AppWebViewResult\"},{\"id\":-1250781739,\"predicate\":\"inlineBotWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"InlineBotWebView\"},{\"id\":1246753138,\"predicate\":\"readParticipantDate\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ReadParticipantDate\"},{\"id\":-856651050,\"predicate\":\"updateGroupInvitePrivacyForbidden\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-699792216,\"predicate\":\"dialogFilterChatlist\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_my_invites\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":-203367885,\"predicate\":\"inputChatlistDialogFilter\",\"params\":[{\"name\":\"filter_id\",\"type\":\"int\"}],\"type\":\"InputChatlist\"},{\"id\":206668204,\"predicate\":\"exportedChatlistInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<Peer>\"}],\"type\":\"ExportedChatlistInvite\"},{\"id\":283567014,\"predicate\":\"chatlists.exportedChatlistInvite\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"invite\",\"type\":\"ExportedChatlistInvite\"}],\"type\":\"chatlists.ExportedChatlistInvite\"},{\"id\":279670215,\"predicate\":\"chatlists.exportedInvites\",\"params\":[{\"name\":\"invites\",\"type\":\"Vector<ExportedChatlistInvite>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ExportedInvites\"},{\"id\":-91752871,\"predicate\":\"chatlists.chatlistInviteAlready\",\"params\":[{\"name\":\"filter_id\",\"type\":\"int\"},{\"name\":\"missing_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"already_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":500007837,\"predicate\":\"chatlists.chatlistInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.0?string\"},{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":-1816295539,\"predicate\":\"chatlists.chatlistUpdates\",\"params\":[{\"name\":\"missing_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistUpdates\"},{\"id\":1348510708,\"predicate\":\"messageActionSetChatWallPaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same\",\"type\":\"flags.0?true\"},{\"name\":\"for_both\",\"type\":\"flags.1?true\"},{\"name\":\"wallpaper\",\"type\":\"WallPaper\"}],\"type\":\"MessageAction\"},{\"id\":-391678544,\"predicate\":\"bots.botInfo\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"bots.BotInfo\"},{\"id\":238759180,\"predicate\":\"inlineQueryPeerTypeBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-1228133028,\"predicate\":\"messagePeerVote\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessagePeerVote\"},{\"id\":1959634180,\"predicate\":\"messagePeerVoteInputOption\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessagePeerVote\"},{\"id\":1177089766,\"predicate\":\"messagePeerVoteMultiple\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessagePeerVote\"},{\"id\":941870144,\"predicate\":\"inputPrivacyKeyAbout\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1534675103,\"predicate\":\"privacyKeyAbout\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1035529315,\"predicate\":\"sponsoredWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"site_name\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"}],\"type\":\"SponsoredWebPage\"},{\"id\":-1923523370,\"predicate\":\"storyViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_viewers\",\"type\":\"flags.1?true\"},{\"name\":\"views_count\",\"type\":\"int\"},{\"name\":\"forwards_count\",\"type\":\"flags.2?int\"},{\"name\":\"reactions\",\"type\":\"flags.3?Vector<ReactionCount>\"},{\"name\":\"reactions_count\",\"type\":\"flags.4?int\"},{\"name\":\"recent_viewers\",\"type\":\"flags.0?Vector<long>\"}],\"type\":\"StoryViews\"},{\"id\":1374088783,\"predicate\":\"storyItemDeleted\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"StoryItem\"},{\"id\":-5388013,\"predicate\":\"storyItemSkipped\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"close_friends\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expire_date\",\"type\":\"int\"}],\"type\":\"StoryItem\"},{\"id\":-1352440415,\"predicate\":\"storyItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.5?true\"},{\"name\":\"public\",\"type\":\"flags.7?true\"},{\"name\":\"close_friends\",\"type\":\"flags.8?true\"},{\"name\":\"min\",\"type\":\"flags.9?true\"},{\"name\":\"noforwards\",\"type\":\"flags.10?true\"},{\"name\":\"edited\",\"type\":\"flags.11?true\"},{\"name\":\"contacts\",\"type\":\"flags.12?true\"},{\"name\":\"selected_contacts\",\"type\":\"flags.13?true\"},{\"name\":\"out\",\"type\":\"flags.16?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.17?StoryFwdHeader\"},{\"name\":\"expire_date\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"flags.0?string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"media_areas\",\"type\":\"flags.14?Vector<MediaArea>\"},{\"name\":\"privacy\",\"type\":\"flags.2?Vector<PrivacyRule>\"},{\"name\":\"views\",\"type\":\"flags.3?StoryViews\"},{\"name\":\"sent_reaction\",\"type\":\"flags.15?Reaction\"}],\"type\":\"StoryItem\"},{\"id\":1974712216,\"predicate\":\"updateStory\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"story\",\"type\":\"StoryItem\"}],\"type\":\"Update\"},{\"id\":-145845461,\"predicate\":\"updateReadStories\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":291044926,\"predicate\":\"stories.allStoriesNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"stealth_mode\",\"type\":\"StoriesStealthMode\"}],\"type\":\"stories.AllStories\"},{\"id\":1862033025,\"predicate\":\"stories.allStories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_more\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"peer_stories\",\"type\":\"Vector<PeerStories>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"stealth_mode\",\"type\":\"StoriesStealthMode\"}],\"type\":\"stories.AllStories\"},{\"id\":1574486984,\"predicate\":\"stories.stories\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"stories\",\"type\":\"Vector<StoryItem>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stories.Stories\"},{\"id\":793067081,\"predicate\":\"inputPrivacyValueAllowCloseFriends\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-135735141,\"predicate\":\"privacyValueAllowCloseFriends\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1329730875,\"predicate\":\"storyView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.2?Reaction\"}],\"type\":\"StoryView\"},{\"id\":1507299269,\"predicate\":\"stories.storyViewsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"views_count\",\"type\":\"int\"},{\"name\":\"forwards_count\",\"type\":\"int\"},{\"name\":\"reactions_count\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"Vector<StoryView>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"stories.StoryViewsList\"},{\"id\":-560009955,\"predicate\":\"stories.storyViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<StoryViews>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stories.StoryViews\"},{\"id\":583071445,\"predicate\":\"inputReplyToMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"quote_text\",\"type\":\"flags.2?string\"},{\"name\":\"quote_entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"quote_offset\",\"type\":\"flags.4?int\"}],\"type\":\"InputReplyTo\"},{\"id\":363917955,\"predicate\":\"inputReplyToStory\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"story_id\",\"type\":\"int\"}],\"type\":\"InputReplyTo\"},{\"id\":-1667711039,\"predicate\":\"messageReplyStoryHeader\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"story_id\",\"type\":\"int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":468923833,\"predicate\":\"updateStoryID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1070138683,\"predicate\":\"exportedStoryLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"ExportedStoryLink\"},{\"id\":-1979852936,\"predicate\":\"inputMediaStory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMedia\"},{\"id\":1758159491,\"predicate\":\"messageMediaStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_mention\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"story\",\"type\":\"flags.0?StoryItem\"}],\"type\":\"MessageMedia\"},{\"id\":781501415,\"predicate\":\"webPageAttributeStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"story\",\"type\":\"flags.0?StoryItem\"}],\"type\":\"WebPageAttribute\"},{\"id\":1898850301,\"predicate\":\"storiesStealthMode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"active_until_date\",\"type\":\"flags.0?int\"},{\"name\":\"cooldown_until_date\",\"type\":\"flags.1?int\"}],\"type\":\"StoriesStealthMode\"},{\"id\":738741697,\"predicate\":\"updateStoriesStealthMode\",\"params\":[{\"name\":\"stealth_mode\",\"type\":\"StoriesStealthMode\"}],\"type\":\"Update\"},{\"id\":64088654,\"predicate\":\"mediaAreaCoordinates\",\"params\":[{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"w\",\"type\":\"double\"},{\"name\":\"h\",\"type\":\"double\"},{\"name\":\"rotation\",\"type\":\"double\"}],\"type\":\"MediaAreaCoordinates\"},{\"id\":-1098720356,\"predicate\":\"mediaAreaVenue\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MediaArea\"},{\"id\":-1300094593,\"predicate\":\"inputMediaAreaVenue\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"result_id\",\"type\":\"string\"}],\"type\":\"MediaArea\"},{\"id\":-544523486,\"predicate\":\"mediaAreaGeoPoint\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MediaArea\"},{\"id\":2103604867,\"predicate\":\"updateSentStoryReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"story_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Update\"},{\"id\":340088945,\"predicate\":\"mediaAreaSuggestedReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"flipped\",\"type\":\"flags.1?true\"},{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"MediaArea\"},{\"id\":-1707742823,\"predicate\":\"peerStories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_read_id\",\"type\":\"flags.0?int\"},{\"name\":\"stories\",\"type\":\"Vector<StoryItem>\"}],\"type\":\"PeerStories\"},{\"id\":-890861720,\"predicate\":\"stories.peerStories\",\"params\":[{\"name\":\"stories\",\"type\":\"PeerStories\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stories.PeerStories\"},{\"id\":-44166467,\"predicate\":\"messages.webPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.WebPage\"},{\"id\":-1551868097,\"predicate\":\"inputStorePaymentPremiumGiftCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"boost_peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":369444042,\"predicate\":\"inputStorePaymentPremiumGiveaway\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"only_new_subscribers\",\"type\":\"flags.0?true\"},{\"name\":\"winners_are_visible\",\"type\":\"flags.3?true\"},{\"name\":\"boost_peer\",\"type\":\"InputPeer\"},{\"name\":\"additional_peers\",\"type\":\"flags.1?Vector<InputPeer>\"},{\"name\":\"countries_iso2\",\"type\":\"flags.2?Vector<string>\"},{\"name\":\"prize_description\",\"type\":\"flags.4?string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"until_date\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":-1734841331,\"predicate\":\"inputInvoicePremiumGiftCode\",\"params\":[{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"},{\"name\":\"option\",\"type\":\"PremiumGiftCodeOption\"}],\"type\":\"InputInvoice\"},{\"id\":629052971,\"predicate\":\"premiumGiftCodeOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"int\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"},{\"name\":\"store_quantity\",\"type\":\"flags.1?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"PremiumGiftCodeOption\"},{\"id\":675942550,\"predicate\":\"payments.checkedGiftCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_giveaway\",\"type\":\"flags.2?true\"},{\"name\":\"from_id\",\"type\":\"flags.4?Peer\"},{\"name\":\"giveaway_msg_id\",\"type\":\"flags.3?int\"},{\"name\":\"to_id\",\"type\":\"flags.0?long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"used_date\",\"type\":\"flags.1?int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.CheckedGiftCode\"},{\"id\":-626162256,\"predicate\":\"messageMediaGiveaway\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"only_new_subscribers\",\"type\":\"flags.0?true\"},{\"name\":\"winners_are_visible\",\"type\":\"flags.2?true\"},{\"name\":\"channels\",\"type\":\"Vector<long>\"},{\"name\":\"countries_iso2\",\"type\":\"flags.1?Vector<string>\"},{\"name\":\"prize_description\",\"type\":\"flags.3?string\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"MessageMedia\"},{\"id\":1737240073,\"predicate\":\"messageActionGiftCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_giveaway\",\"type\":\"flags.0?true\"},{\"name\":\"unclaimed\",\"type\":\"flags.2?true\"},{\"name\":\"boost_peer\",\"type\":\"flags.1?Peer\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"currency\",\"type\":\"flags.2?string\"},{\"name\":\"amount\",\"type\":\"flags.2?long\"},{\"name\":\"crypto_currency\",\"type\":\"flags.3?string\"},{\"name\":\"crypto_amount\",\"type\":\"flags.3?long\"}],\"type\":\"MessageAction\"},{\"id\":858499565,\"predicate\":\"messageActionGiveawayLaunch\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1130879648,\"predicate\":\"payments.giveawayInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"participating\",\"type\":\"flags.0?true\"},{\"name\":\"preparing_results\",\"type\":\"flags.3?true\"},{\"name\":\"start_date\",\"type\":\"int\"},{\"name\":\"joined_too_early_date\",\"type\":\"flags.1?int\"},{\"name\":\"admin_disallowed_chat_id\",\"type\":\"flags.2?long\"},{\"name\":\"disallowed_country\",\"type\":\"flags.4?string\"}],\"type\":\"payments.GiveawayInfo\"},{\"id\":13456752,\"predicate\":\"payments.giveawayInfoResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"winner\",\"type\":\"flags.0?true\"},{\"name\":\"refunded\",\"type\":\"flags.1?true\"},{\"name\":\"start_date\",\"type\":\"int\"},{\"name\":\"gift_code_slug\",\"type\":\"flags.0?string\"},{\"name\":\"finish_date\",\"type\":\"int\"},{\"name\":\"winners_count\",\"type\":\"int\"},{\"name\":\"activated_count\",\"type\":\"int\"}],\"type\":\"payments.GiveawayInfo\"},{\"id\":34469328,\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1303143084,\"predicate\":\"prepaidGiveaway\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PrepaidGiveaway\"},{\"id\":-1038383031,\"predicate\":\"inputMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force_large_media\",\"type\":\"flags.0?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.1?true\"},{\"name\":\"optional\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":-1109605104,\"predicate\":\"inputBotInlineMessageMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"force_large_media\",\"type\":\"flags.4?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.5?true\"},{\"name\":\"optional\",\"type\":\"flags.6?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2137335386,\"predicate\":\"botInlineMessageMediaWebPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invert_media\",\"type\":\"flags.3?true\"},{\"name\":\"force_large_media\",\"type\":\"flags.4?true\"},{\"name\":\"force_small_media\",\"type\":\"flags.5?true\"},{\"name\":\"manual\",\"type\":\"flags.7?true\"},{\"name\":\"safe\",\"type\":\"flags.8?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":706514033,\"predicate\":\"boost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gift\",\"type\":\"flags.1?true\"},{\"name\":\"giveaway\",\"type\":\"flags.2?true\"},{\"name\":\"unclaimed\",\"type\":\"flags.3?true\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"flags.0?long\"},{\"name\":\"giveaway_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"used_gift_slug\",\"type\":\"flags.4?string\"},{\"name\":\"multiplier\",\"type\":\"flags.5?int\"}],\"type\":\"Boost\"},{\"id\":-2030542532,\"predicate\":\"premium.boostsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"boosts\",\"type\":\"Vector<Boost>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"premium.BoostsList\"},{\"id\":-1001897636,\"predicate\":\"myBoost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slot\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"flags.0?Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"cooldown_until_date\",\"type\":\"flags.1?int\"}],\"type\":\"MyBoost\"},{\"id\":-1696454430,\"predicate\":\"premium.myBoosts\",\"params\":[{\"name\":\"my_boosts\",\"type\":\"Vector<MyBoost>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"premium.MyBoosts\"},{\"id\":1230586490,\"predicate\":\"premium.boostsStatus\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_boost\",\"type\":\"flags.2?true\"},{\"name\":\"level\",\"type\":\"int\"},{\"name\":\"current_level_boosts\",\"type\":\"int\"},{\"name\":\"boosts\",\"type\":\"int\"},{\"name\":\"gift_boosts\",\"type\":\"flags.4?int\"},{\"name\":\"next_level_boosts\",\"type\":\"flags.0?int\"},{\"name\":\"premium_audience\",\"type\":\"flags.1?StatsPercentValue\"},{\"name\":\"boost_url\",\"type\":\"string\"},{\"name\":\"prepaid_giveaways\",\"type\":\"flags.3?Vector<PrepaidGiveaway>\"},{\"name\":\"my_boost_slots\",\"type\":\"flags.2?Vector<int>\"}],\"type\":\"premium.BoostsStatus\"},{\"id\":-1873947492,\"predicate\":\"updateBotChatBoost\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"boost\",\"type\":\"Boost\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":129403168,\"predicate\":\"updateChannelViewForumAsMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":715107781,\"predicate\":\"messageActionGiveawayResults\",\"params\":[{\"name\":\"winners_count\",\"type\":\"int\"},{\"name\":\"unclaimed_count\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1371598819,\"predicate\":\"updatePeerWallpaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"wallpaper_overridden\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"wallpaper\",\"type\":\"flags.0?WallPaper\"}],\"type\":\"Update\"},{\"id\":-1205411504,\"predicate\":\"storyFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"modified\",\"type\":\"flags.3?true\"},{\"name\":\"from\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.1?string\"},{\"name\":\"story_id\",\"type\":\"flags.2?int\"}],\"type\":\"StoryFwdHeader\"},{\"id\":-419066241,\"predicate\":\"postInteractionCountersMessage\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"int\"}],\"type\":\"PostInteractionCounters\"},{\"id\":-1974989273,\"predicate\":\"postInteractionCountersStory\",\"params\":[{\"name\":\"story_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"int\"}],\"type\":\"PostInteractionCounters\"},{\"id\":1355613820,\"predicate\":\"stats.storyStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"},{\"name\":\"reactions_by_emotion_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.StoryStats\"},{\"id\":32685898,\"predicate\":\"publicForwardMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"PublicForward\"},{\"id\":-302797360,\"predicate\":\"publicForwardStory\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"story\",\"type\":\"StoryItem\"}],\"type\":\"PublicForward\"},{\"id\":-1828487648,\"predicate\":\"stats.publicForwards\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"Vector<PublicForward>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.PublicForwards\"},{\"id\":-1253352753,\"predicate\":\"peerColor\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"color\",\"type\":\"flags.0?int\"},{\"name\":\"background_emoji_id\",\"type\":\"flags.1?long\"}],\"type\":\"PeerColor\"},{\"id\":639736408,\"predicate\":\"help.peerColorSet\",\"params\":[{\"name\":\"colors\",\"type\":\"Vector<int>\"}],\"type\":\"help.PeerColorSet\"},{\"id\":1987928555,\"predicate\":\"help.peerColorProfileSet\",\"params\":[{\"name\":\"palette_colors\",\"type\":\"Vector<int>\"},{\"name\":\"bg_colors\",\"type\":\"Vector<int>\"},{\"name\":\"story_colors\",\"type\":\"Vector<int>\"}],\"type\":\"help.PeerColorSet\"},{\"id\":-276549461,\"predicate\":\"help.peerColorOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"color_id\",\"type\":\"int\"},{\"name\":\"colors\",\"type\":\"flags.1?help.PeerColorSet\"},{\"name\":\"dark_colors\",\"type\":\"flags.2?help.PeerColorSet\"},{\"name\":\"channel_min_level\",\"type\":\"flags.3?int\"}],\"type\":\"help.PeerColorOption\"},{\"id\":732034510,\"predicate\":\"help.peerColorsNotModified\",\"params\":[],\"type\":\"help.PeerColors\"},{\"id\":16313608,\"predicate\":\"help.peerColors\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"colors\",\"type\":\"Vector<help.PeerColorOption>\"}],\"type\":\"help.PeerColors\"},{\"id\":-963047320,\"predicate\":\"messageMediaGiveawayResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"only_new_subscribers\",\"type\":\"flags.0?true\"},{\"name\":\"refunded\",\"type\":\"flags.2?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"additional_peers_count\",\"type\":\"flags.3?int\"},{\"name\":\"launch_msg_id\",\"type\":\"int\"},{\"name\":\"winners_count\",\"type\":\"int\"},{\"name\":\"unclaimed_count\",\"type\":\"int\"},{\"name\":\"winners\",\"type\":\"Vector<long>\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"prize_description\",\"type\":\"flags.1?string\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"MessageMedia\"},{\"id\":1620104917,\"predicate\":\"storyReaction\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"StoryReaction\"},{\"id\":-1146411453,\"predicate\":\"storyReactionPublicForward\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"StoryReaction\"},{\"id\":-808644845,\"predicate\":\"storyReactionPublicRepost\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"story\",\"type\":\"StoryItem\"}],\"type\":\"StoryReaction\"},{\"id\":-1436583780,\"predicate\":\"stories.storyReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<StoryReaction>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"stories.StoryReactionsList\"},{\"id\":-1870436597,\"predicate\":\"storyViewPublicForward\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.1?true\"},{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"StoryView\"},{\"id\":-1116418231,\"predicate\":\"storyViewPublicRepost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"blocked_my_stories_from\",\"type\":\"flags.1?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"story\",\"type\":\"StoryItem\"}],\"type\":\"StoryView\"},{\"id\":1469507456,\"predicate\":\"channelAdminLogEventActionChangePeerColor\",\"params\":[{\"name\":\"prev_value\",\"type\":\"PeerColor\"},{\"name\":\"new_value\",\"type\":\"PeerColor\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1581742885,\"predicate\":\"channelAdminLogEventActionChangeProfilePeerColor\",\"params\":[{\"name\":\"prev_value\",\"type\":\"PeerColor\"},{\"name\":\"new_value\",\"type\":\"PeerColor\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":834362706,\"predicate\":\"channelAdminLogEventActionChangeWallpaper\",\"params\":[{\"name\":\"prev_value\",\"type\":\"WallPaper\"},{\"name\":\"new_value\",\"type\":\"WallPaper\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1051328177,\"predicate\":\"channelAdminLogEventActionChangeEmojiStatus\",\"params\":[{\"name\":\"prev_value\",\"type\":\"EmojiStatus\"},{\"name\":\"new_value\",\"type\":\"EmojiStatus\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1232373075,\"predicate\":\"inputStickerSetEmojiChannelDefaultStatuses\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":1996756655,\"predicate\":\"mediaAreaChannelPost\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"MediaArea\"},{\"id\":577893055,\"predicate\":\"inputMediaAreaChannelPost\",\"params\":[{\"name\":\"coordinates\",\"type\":\"MediaAreaCoordinates\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"MediaArea\"},{\"id\":-1407069234,\"predicate\":\"updateBotMessageReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor\",\"type\":\"Peer\"},{\"name\":\"old_reactions\",\"type\":\"Vector<Reaction>\"},{\"name\":\"new_reactions\",\"type\":\"Vector<Reaction>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":164329305,\"predicate\":\"updateBotMessageReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"}],\"methods\":[{\"id\":-878758099,\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1036301552,\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1502141361,\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":-2131827673,\"method\":\"auth.signUp\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1923962543,\"method\":\"auth.signIn\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"flags.0?string\"},{\"name\":\"email_verification\",\"type\":\"flags.1?EmailVerification\"}],\"type\":\"auth.Authorization\"},{\"id\":1047706137,\"method\":\"auth.logOut\",\"params\":[],\"type\":\"auth.LoggedOut\"},{\"id\":-1616179942,\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-440401971,\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1518699091,\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":-841733627,\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-326762118,\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":1779249670,\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-2067899501,\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":313765169,\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-612493497,\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":2018596725,\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":1713919532,\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":127302966,\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.WallPapers\"},{\"id\":-977650298,\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":227648840,\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":-1240508136,\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"users.UserFull\"},{\"id\":2061264541,\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Vector<int>\"},{\"id\":-995929106,\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":1574346258,\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.Contacts\"},{\"id\":746589157,\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":157945344,\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":269745566,\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":774801204,\"method\":\"contacts.block\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1252994264,\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1702457472,\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":1673946374,\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":-1594569905,\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Dialogs\"},{\"id\":1143203525,\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1593989278,\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":238054714,\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-1332768214,\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-443640366,\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":94983360,\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":1486110434,\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":671943023,\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1926021693,\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-966673468,\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"drop_author\",\"type\":\"flags.11?true\"},{\"name\":\"drop_media_captions\",\"type\":\"flags.12?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-820669733,\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-270948702,\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1991005362,\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1240027791,\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-1364194508,\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"messages.ChatFull\"},{\"id\":1937260541,\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":903730804,\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":-230206493,\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1575461717,\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":3450904,\"method\":\"messages.createChat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":-304838614,\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":432207715,\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_limit\",\"type\":\"flags.1?int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"qts_limit\",\"type\":\"flags.2?int\"}],\"type\":\"updates.Difference\"},{\"id\":166207545,\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fallback\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"flags.1?InputUser\"},{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"photos.Photo\"},{\"id\":59286453,\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fallback\",\"type\":\"flags.3?true\"},{\"name\":\"bot\",\"type\":\"flags.5?InputUser\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.4?VideoSize\"}],\"type\":\"photos.Photo\"},{\"id\":-2016444625,\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":-1291540959,\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1101843010,\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":-990308245,\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":531836966,\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":1378703997,\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":1295590211,\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":-1848823128,\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":651135312,\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":-162681021,\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1035731989,\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":-208425312,\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2031374829,\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2135648522,\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1157265941,\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1431914525,\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":852769188,\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1436924774,\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1259113487,\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":-562337987,\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1043505495,\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1663104819,\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":916930423,\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":655677548,\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1040964988,\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":301470424,\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":-623130288,\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-906486552,\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1564422284,\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"flags.0?InputCheckPasswordSRP\"}],\"type\":\"Bool\"},{\"id\":150761757,\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":608323678,\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":-627372787,\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-113456221,\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-2108208411,\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1891839707,\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-710552671,\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Stickers\"},{\"id\":-1197432408,\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":954152242,\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1738800940,\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1956073268,\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"MessageMedia\"},{\"id\":-484392616,\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":-545786948,\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1418342645,\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":-1663767815,\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1516564433,\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":-779399914,\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":-661144474,\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":923364464,\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"new_settings\",\"type\":\"flags.0?account.PasswordInputSettings\"}],\"type\":\"auth.Authorization\"},{\"id\":-1080796745,\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1607670315,\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"legacy_revoke_permanent\",\"type\":\"flags.2?true\"},{\"name\":\"request_needed\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1051570619,\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":1817183516,\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-928977804,\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-946871200,\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":-110209570,\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-421563528,\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1468322785,\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"messages.MessageViews\"},{\"id\":-871347913,\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-2067661490,\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-196443371,\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1383294429,\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":2010044880,\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-1599378234,\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":176122811,\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":141781513,\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1862244601,\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"for_import\",\"type\":\"flags.3?true\"},{\"name\":\"forum\",\"type\":\"flags.5?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"},{\"name\":\"ttl_period\",\"type\":\"flags.4?int\"}],\"type\":\"Updates\"},{\"id\":-751007486,\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1450044624,\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-248621111,\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":283557164,\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":890549214,\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":615851205,\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-130635115,\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":429865580,\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":-1072619549,\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":51854712,\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1470377534,\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1568189671,\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1271290010,\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":2016638777,\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1309538785,\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1559270965,\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedGifs\"},{\"id\":846868683,\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1364105629,\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":-1156406247,\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"},{\"name\":\"switch_webview\",\"type\":\"flags.4?InlineBotWebView\"}],\"type\":\"Bool\"},{\"id\":-138647366,\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-432034325,\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"grouped\",\"type\":\"flags.0?true\"},{\"name\":\"thread\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedMessageLink\"},{\"id\":527021574,\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1056025023,\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":520357240,\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-39416522,\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":1224152952,\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"}],\"type\":\"Updates\"},{\"id\":-2091549254,\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":-1824339449,\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"password\",\"type\":\"flags.2?InputCheckPasswordSRP\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-712043766,\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1758168906,\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.TopPeers\"},{\"id\":451113900,\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-462373635,\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":2146678790,\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"invert_media\",\"type\":\"flags.6?true\"},{\"name\":\"reply_to\",\"type\":\"flags.4?InputReplyTo\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"media\",\"type\":\"flags.5?InputMedia\"}],\"type\":\"Bool\"},{\"id\":1782549861,\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":1685588756,\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1527873830,\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1649852357,\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.RecentStickers\"},{\"id\":958863608,\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1986437075,\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":1475442322,\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":457157256,\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1596029123,\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-122669393,\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"}],\"type\":\"messages.Chats\"},{\"id\":1678738104,\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-866424884,\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":-1907842680,\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1896289088,\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":363700068,\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-400399203,\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":258170395,\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":-468934396,\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-333262899,\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1919511901,\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.WebPage\"},{\"id\":-1489903017,\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":991616823,\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":-692498958,\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1440257555,\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":-434028723,\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":619086221,\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":924093883,\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"payments.PaymentForm\"},{\"id\":611897804,\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-1228345045,\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":755192367,\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"},{\"name\":\"tip_amount\",\"type\":\"flags.2?long\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1151208273,\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":578650699,\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":-667062079,\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":-436833542,\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":163765653,\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":-1876841625,\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"animated\",\"type\":\"flags.1?true\"},{\"name\":\"videos\",\"type\":\"flags.4?true\"},{\"name\":\"emojis\",\"type\":\"flags.5?true\"},{\"name\":\"text_color\",\"type\":\"flags.6?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"},{\"name\":\"software\",\"type\":\"flags.3?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-143257775,\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":-4795190,\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2041315650,\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":1369162417,\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":1430593449,\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":1124046573,\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1003664544,\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":788404002,\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":399855457,\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":-1295269440,\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1508562471,\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":662363518,\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":962554330,\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1691921240,\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":1375900482,\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":-219008246,\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":-269862909,\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":-845657435,\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":1120311183,\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":-1763259007,\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":870184064,\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-1847836879,\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-1589618665,\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"InputReplyTo\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":-359881479,\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":82946729,\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-1174420133,\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-357180360,\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-2020263951,\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":-251140208,\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1683319225,\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_everyone\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1036054804,\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-356796084,\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":921026381,\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1881817312,\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1164872071,\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"invert_media\",\"type\":\"flags.16?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1347929239,\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":405695855,\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":755087855,\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1747789204,\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":896555914,\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1856595926,\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":749019089,\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":-294455398,\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":-1299661699,\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":1936088002,\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":-1986010339,\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":-1199522741,\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":-1865902923,\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":-1456907910,\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-202552205,\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":-1516022023,\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1305716726,\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1730136133,\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":53322959,\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"verification\",\"type\":\"EmailVerification\"}],\"type\":\"account.EmailVerified\"},{\"id\":1072547679,\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":-2098076769,\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":-2092831552,\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-1896617296,\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?long\"}],\"type\":\"account.Takeout\"},{\"id\":489050862,\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":486505992,\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":911373810,\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1398145746,\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1031349873,\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":585256482,\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":-2062238246,\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2119757468,\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":1642330196,\"method\":\"help.getAppConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.AppConfig\"},{\"id\":1862465352,\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":-966677240,\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":1784243458,\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":-760547348,\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"unpin\",\"type\":\"flags.1?true\"},{\"name\":\"pm_oneside\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1881204448,\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":2055154197,\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1043606090,\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-748624084,\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":59377875,\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":1723407216,\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":-1626880216,\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":-806076575,\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1398240377,\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"compare_stories\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":283795844,\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":1941660731,\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1848369232,\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":-554301545,\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1517917375,\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":-57811990,\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":-476410109,\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_chat\",\"type\":\"flags.0?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1817860919,\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-18000023,\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-1153722364,\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":1457130303,\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":1995661875,\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":899735650,\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":352892591,\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":1318675378,\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":-709817306,\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":1749536939,\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":11435201,\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":-170208392,\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":1079520178,\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":428848198,\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1322487515,\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":1336717624,\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-386636848,\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-130964977,\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-1892102881,\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":-750207932,\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":1491484525,\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304832784,\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-183077365,\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1111817116,\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":-1120369398,\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1504586518,\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":473805619,\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1697530880,\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":737414348,\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":-229175188,\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-953697477,\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"},{\"name\":\"format\",\"type\":\"flags.2?string\"},{\"name\":\"base_theme\",\"type\":\"flags.3?BaseTheme\"}],\"type\":\"Bool\"},{\"id\":978872812,\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"}],\"type\":\"Theme\"},{\"id\":1913054296,\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1210022402,\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"auth.LoginToken\"},{\"id\":-1783866140,\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":-392909491,\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":-1250643605,\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1952756306,\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":300429806,\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":1705865692,\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":-1200736242,\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":-1257951254,\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":779736953,\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":-241247891,\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilter>\"},{\"id\":-1566780372,\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":450142282,\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":-983318044,\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1421720550,\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":1646092192,\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":-1486204014,\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputDocument\"},{\"name\":\"thumb_document_id\",\"type\":\"flags.1?long\"}],\"type\":\"messages.StickerSet\"},{\"id\":85399130,\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":2127598753,\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1063816159,\"method\":\"help.getPromoData\",\"params\":[],\"type\":\"help.PromoData\"},{\"id\":505748629,\"method\":\"help.hidePromoData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-8744061,\"method\":\"phone.sendSignalingData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-589330937,\"method\":\"stats.getMegagroupStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-349483786,\"method\":\"account.getGlobalPrivacySettings\",\"params\":[],\"type\":\"GlobalPrivacySettings\"},{\"id\":517647042,\"method\":\"account.setGlobalPrivacySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"GlobalPrivacySettings\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":-183649631,\"method\":\"help.dismissSuggestion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"suggestion\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1935116200,\"method\":\"help.getCountriesList\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":584962828,\"method\":\"messages.getReplies\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1147761405,\"method\":\"messages.getDiscussionMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-147740172,\"method\":\"messages.readDiscussion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":698914348,\"method\":\"contacts.blockFromReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_message\",\"type\":\"flags.0?true\"},{\"name\":\"delete_history\",\"type\":\"flags.1?true\"},{\"name\":\"report_spam\",\"type\":\"flags.2?true\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1595212100,\"method\":\"stats.getMessagePublicForwards\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stats.PublicForwards\"},{\"id\":-1226791947,\"method\":\"stats.getMessageStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"stats.MessageStats\"},{\"id\":-299714136,\"method\":\"messages.unpinAllMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1221445336,\"method\":\"phone.createGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"schedule_date\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-1322057861,\"method\":\"phone.joinGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"video_stopped\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"},{\"name\":\"invite_hash\",\"type\":\"flags.1?string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":1342404601,\"method\":\"phone.leaveGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"source\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":2067345760,\"method\":\"phone.inviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":2054648117,\"method\":\"phone.discardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1958458429,\"method\":\"phone.toggleGroupCallSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reset_invite_hash\",\"type\":\"flags.1?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_muted\",\"type\":\"flags.0?Bool\"}],\"type\":\"Updates\"},{\"id\":68699611,\"method\":\"phone.getGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupCall\"},{\"id\":-984033109,\"method\":\"phone.getGroupParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"ids\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":-1248003721,\"method\":\"phone.checkGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":1540419152,\"method\":\"messages.deleteChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-104078327,\"method\":\"messages.deletePhoneCallHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1140726259,\"method\":\"messages.checkHistoryImport\",\"params\":[{\"name\":\"import_head\",\"type\":\"string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":873008187,\"method\":\"messages.initHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"media_count\",\"type\":\"int\"}],\"type\":\"messages.HistoryImport\"},{\"id\":713433234,\"method\":\"messages.uploadImportedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-1271008444,\"method\":\"messages.startHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-1565154314,\"method\":\"messages.getExportedChatInvites\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":1937010524,\"method\":\"messages.getExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-1110823051,\"method\":\"messages.editExportedChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"request_needed\",\"type\":\"flags.3?Bool\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":1452833749,\"method\":\"messages.deleteRevokedExportedChatInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-731601877,\"method\":\"messages.deleteExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":958457583,\"method\":\"messages.getAdminsWithInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-553329330,\"method\":\"messages.getChatInviteImporters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"},{\"name\":\"q\",\"type\":\"flags.2?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_user\",\"type\":\"InputUser\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-1207017500,\"method\":\"messages.setHistoryTTL\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-91437323,\"method\":\"account.reportProfilePhoto\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"InputPhoto\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":187239529,\"method\":\"channels.convertToGigagroup\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":1573261059,\"method\":\"messages.checkHistoryImportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-248985848,\"method\":\"phone.toggleGroupCallRecord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"start\",\"type\":\"flags.0?true\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"video_portrait\",\"type\":\"flags.2?Bool\"}],\"type\":\"Updates\"},{\"id\":-1524155713,\"method\":\"phone.editGroupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"muted\",\"type\":\"flags.0?Bool\"},{\"name\":\"volume\",\"type\":\"flags.1?int\"},{\"name\":\"raise_hand\",\"type\":\"flags.2?Bool\"},{\"name\":\"video_stopped\",\"type\":\"flags.3?Bool\"},{\"name\":\"video_paused\",\"type\":\"flags.4?Bool\"},{\"name\":\"presentation_paused\",\"type\":\"flags.5?Bool\"}],\"type\":\"Updates\"},{\"id\":480685066,\"method\":\"phone.editGroupCallTitle\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-277077702,\"method\":\"phone.getGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":-425040769,\"method\":\"phone.exportGroupCallInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.0?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":563885286,\"method\":\"phone.toggleGroupCallStartSubscription\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"subscribed\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1451287362,\"method\":\"phone.startScheduledGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1465786252,\"method\":\"phone.saveDefaultGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-873829436,\"method\":\"phone.joinGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":475058500,\"method\":\"phone.leaveGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":676017721,\"method\":\"stickers.checkShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1303364867,\"method\":\"stickers.suggestShortName\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":1032708345,\"method\":\"bots.resetBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-481554986,\"method\":\"bots.getBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Vector<BotCommand>\"},{\"id\":-1828139493,\"method\":\"account.resetPassword\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1284770294,\"method\":\"account.declinePasswordReset\",\"params\":[],\"type\":\"Bool\"},{\"id\":221691769,\"method\":\"auth.checkRecoveryPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-700916087,\"method\":\"account.getChatThemes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-432283329,\"method\":\"messages.setChatTheme\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1095836780,\"method\":\"channels.viewSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-333377601,\"method\":\"channels.getSponsoredMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":834782287,\"method\":\"messages.getMessageReadParticipants\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Vector<ReadParticipantDate>\"},{\"id\":1240514025,\"method\":\"messages.getSearchResultsCalendar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":1855292323,\"method\":\"messages.getSearchResultsPositions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":2145904661,\"method\":\"messages.hideChatJoinRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-528091926,\"method\":\"messages.hideAllChatJoinRequests\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"}],\"type\":\"Updates\"},{\"id\":-1323389022,\"method\":\"messages.toggleNoForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-855777386,\"method\":\"messages.saveDefaultSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"send_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":231174382,\"method\":\"channels.getSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-1081501024,\"method\":\"account.setAuthorizationTTL\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1089766498,\"method\":\"account.changeAuthorizationSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"confirmed\",\"type\":\"flags.3?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.0?Bool\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Bool\"},{\"id\":913655003,\"method\":\"channels.deleteParticipantHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-754091820,\"method\":\"messages.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.1?true\"},{\"name\":\"add_to_recent\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Vector<Reaction>\"}],\"type\":\"Updates\"},{\"id\":-1950707482,\"method\":\"messages.getMessagesReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1176190792,\"method\":\"messages.getMessageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Reaction\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-21928079,\"method\":\"messages.setChatAvailableReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"available_reactions\",\"type\":\"ChatReactions\"}],\"type\":\"Updates\"},{\"id\":417243308,\"method\":\"messages.getAvailableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":1330094102,\"method\":\"messages.setDefaultReaction\",\"params\":[{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Bool\"},{\"id\":1662529584,\"method\":\"messages.translateText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"id\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"text\",\"type\":\"flags.1?Vector<TextWithEntities>\"},{\"name\":\"to_lang\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":841173339,\"method\":\"messages.getUnreadReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":1420459918,\"method\":\"messages.readReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-1963375804,\"method\":\"contacts.resolvePhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":447879488,\"method\":\"phone.getGroupCallStreamChannels\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":-558650433,\"method\":\"phone.getGroupCallStreamRtmpUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"revoke\",\"type\":\"Bool\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":276705696,\"method\":\"messages.searchSentMedia\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":385663691,\"method\":\"messages.getAttachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"AttachMenuBots\"},{\"id\":1998676370,\"method\":\"messages.getAttachMenuBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":1777704297,\"method\":\"messages.toggleBotInAttachMenu\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":647873217,\"method\":\"messages.requestWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_bot_menu\",\"type\":\"flags.4?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"start_param\",\"type\":\"flags.3?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"WebViewResult\"},{\"id\":-1328014717,\"method\":\"messages.prolongWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"reply_to\",\"type\":\"flags.0?InputReplyTo\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Bool\"},{\"id\":440815626,\"method\":\"messages.requestSimpleWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_switch_webview\",\"type\":\"flags.1?true\"},{\"name\":\"from_side_menu\",\"type\":\"flags.2?true\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"start_param\",\"type\":\"flags.4?string\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":172168437,\"method\":\"messages.sendWebViewResultMessage\",\"params\":[{\"name\":\"bot_query_id\",\"type\":\"string\"},{\"name\":\"result\",\"type\":\"InputBotInlineResult\"}],\"type\":\"WebViewMessageSent\"},{\"id\":-603831608,\"method\":\"messages.sendWebViewData\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"button_text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1157944655,\"method\":\"bots.setBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Bool\"},{\"id\":-1671369944,\"method\":\"bots.getBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotMenuButton\"},{\"id\":-510647672,\"method\":\"account.getSavedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1038768899,\"method\":\"account.saveRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"account.SavedRingtone\"},{\"id\":-2095414366,\"method\":\"account.uploadRingtone\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":2021942497,\"method\":\"bots.setBotBroadcastDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":-1839281686,\"method\":\"bots.setBotGroupDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":1092913030,\"method\":\"phone.saveCallLog\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"file\",\"type\":\"InputFile\"}],\"type\":\"Bool\"},{\"id\":-456419968,\"method\":\"channels.toggleJoinToSend\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1277789622,\"method\":\"channels.toggleJoinRequest\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":261206117,\"method\":\"payments.exportInvoice\",\"params\":[{\"name\":\"invoice_media\",\"type\":\"InputMedia\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":647928393,\"method\":\"messages.transcribeAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":2132608815,\"method\":\"messages.rateTranscribedAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"good\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-2131921795,\"method\":\"payments.assignAppStoreTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"bytes\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-537046829,\"method\":\"payments.assignPlayMarketTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"DataJSON\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-1614700874,\"method\":\"payments.canPurchasePremium\",\"params\":[{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Bool\"},{\"id\":-1206152236,\"method\":\"help.getPremiumPromo\",\"params\":[],\"type\":\"help.PremiumPromo\"},{\"id\":-643100844,\"method\":\"messages.getCustomEmojiDocuments\",\"params\":[{\"name\":\"document_id\",\"type\":\"Vector<long>\"}],\"type\":\"Vector<Document>\"},{\"id\":-67329649,\"method\":\"messages.getEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":248473398,\"method\":\"messages.getFeaturedEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-70001045,\"method\":\"account.updateEmojiStatus\",\"params\":[{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Bool\"},{\"id\":-696962170,\"method\":\"account.getDefaultEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":257392901,\"method\":\"account.getRecentEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":404757166,\"method\":\"account.clearRecentEmojiStatuses\",\"params\":[],\"type\":\"Bool\"},{\"id\":1063567478,\"method\":\"messages.reportReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction_peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1149164102,\"method\":\"messages.getTopReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":960896434,\"method\":\"messages.getRecentReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":-1644236876,\"method\":\"messages.clearRecentReactions\",\"params\":[],\"type\":\"Bool\"},{\"id\":-2064119788,\"method\":\"messages.getExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":767062953,\"method\":\"auth.importWebTokenAuthorization\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"web_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-279966037,\"method\":\"account.reorderUsernames\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1490465654,\"method\":\"account.toggleUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1268978403,\"method\":\"channels.reorderUsernames\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1358053637,\"method\":\"channels.toggleUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":170155475,\"method\":\"channels.deactivateAllUsernames\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":-1540781271,\"method\":\"channels.toggleForum\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-200539612,\"method\":\"channels.createForumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"flags.0?int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.3?long\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"send_as\",\"type\":\"flags.2?InputPeer\"}],\"type\":\"Updates\"},{\"id\":233136337,\"method\":\"channels.getForumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_topic\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ForumTopics\"},{\"id\":-1333584199,\"method\":\"channels.getForumTopicsByID\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topics\",\"type\":\"Vector<int>\"}],\"type\":\"messages.ForumTopics\"},{\"id\":-186670715,\"method\":\"channels.editForumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topic_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.1?long\"},{\"name\":\"closed\",\"type\":\"flags.2?Bool\"},{\"name\":\"hidden\",\"type\":\"flags.3?Bool\"}],\"type\":\"Updates\"},{\"id\":1814925350,\"method\":\"channels.updatePinnedForumTopic\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topic_id\",\"type\":\"int\"},{\"name\":\"pinned\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":876830509,\"method\":\"channels.deleteTopicHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":693150095,\"method\":\"channels.reorderPinnedForumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1760814315,\"method\":\"channels.toggleAntiSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-1471109485,\"method\":\"channels.reportAntiSpamFalsePositive\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1632299963,\"method\":\"messages.setDefaultHistoryTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1703637384,\"method\":\"messages.getDefaultHistoryTTL\",\"params\":[],\"type\":\"DefaultHistoryTTL\"},{\"id\":-127582169,\"method\":\"contacts.exportContactToken\",\"params\":[],\"type\":\"ExportedContactToken\"},{\"id\":318789512,\"method\":\"contacts.importContactToken\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-515093903,\"method\":\"photos.uploadContactProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"suggest\",\"type\":\"flags.3?true\"},{\"name\":\"save\",\"type\":\"flags.4?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.5?VideoSize\"}],\"type\":\"photos.Photo\"},{\"id\":1785624660,\"method\":\"channels.toggleParticipantsHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-1850552224,\"method\":\"messages.sendBotRequestedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"requested_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":-495647960,\"method\":\"account.getDefaultProfilePhotoEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-1856479058,\"method\":\"account.getDefaultGroupPhotoEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-1991881904,\"method\":\"auth.requestFirebaseSms\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"safety_net_token\",\"type\":\"flags.0?string\"},{\"name\":\"ios_push_secret\",\"type\":\"flags.1?string\"}],\"type\":\"Bool\"},{\"id\":1955122779,\"method\":\"messages.getEmojiGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":785209037,\"method\":\"messages.getEmojiStatusGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":564480243,\"method\":\"messages.getEmojiProfilePhotoGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":739360983,\"method\":\"messages.searchCustomEmoji\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-461589127,\"method\":\"messages.togglePeerTranslations\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1379156774,\"method\":\"account.getAutoSaveSettings\",\"params\":[],\"type\":\"account.AutoSaveSettings\"},{\"id\":-694451359,\"method\":\"account.saveAutoSaveSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"flags.0?true\"},{\"name\":\"chats\",\"type\":\"flags.1?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"flags.3?InputPeer\"},{\"name\":\"settings\",\"type\":\"AutoSaveSettings\"}],\"type\":\"Bool\"},{\"id\":1404829728,\"method\":\"account.deleteAutoSaveExceptions\",\"params\":[],\"type\":\"Bool\"},{\"id\":-179077444,\"method\":\"stickers.changeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"flags.0?string\"},{\"name\":\"mask_coords\",\"type\":\"flags.1?MaskCoords\"},{\"name\":\"keywords\",\"type\":\"flags.2?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":306912256,\"method\":\"stickers.renameStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2022685804,\"method\":\"stickers.deleteStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":889046467,\"method\":\"messages.getBotApp\",\"params\":[{\"name\":\"app\",\"type\":\"InputBotApp\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.BotApp\"},{\"id\":-1940243652,\"method\":\"messages.requestAppWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"app\",\"type\":\"InputBotApp\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"AppWebViewResult\"},{\"id\":282013987,\"method\":\"bots.setBotInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.2?InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.3?string\"},{\"name\":\"about\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"}],\"type\":\"Bool\"},{\"id\":-589753091,\"method\":\"bots.getBotInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.0?InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"bots.BotInfo\"},{\"id\":2123760019,\"method\":\"auth.resetLoginEmail\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":-2072885362,\"method\":\"chatlists.exportChatlistInvite\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"chatlists.ExportedChatlistInvite\"},{\"id\":1906072670,\"method\":\"chatlists.deleteExportedInvite\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1698543165,\"method\":\"chatlists.editExportedInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"peers\",\"type\":\"flags.2?Vector<InputPeer>\"}],\"type\":\"ExportedChatlistInvite\"},{\"id\":-838608253,\"method\":\"chatlists.getExportedInvites\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"chatlists.ExportedInvites\"},{\"id\":1103171583,\"method\":\"chatlists.checkChatlistInvite\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":-1498291302,\"method\":\"chatlists.joinChatlistInvite\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":-1992190687,\"method\":\"chatlists.getChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"chatlists.ChatlistUpdates\"},{\"id\":-527828747,\"method\":\"chatlists.joinChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":1726252795,\"method\":\"chatlists.hideChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"Bool\"},{\"id\":-37955820,\"method\":\"chatlists.getLeaveChatlistSuggestions\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"Vector<Peer>\"},{\"id\":1962598714,\"method\":\"chatlists.leaveChatlist\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":-1760972350,\"method\":\"bots.reorderUsernames\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":87861619,\"method\":\"bots.toggleUsername\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1879389471,\"method\":\"messages.setChatWallPaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_both\",\"type\":\"flags.3?true\"},{\"name\":\"revert\",\"type\":\"flags.4?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"wallpaper\",\"type\":\"flags.0?InputWallPaper\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"},{\"name\":\"id\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-896866118,\"method\":\"account.invalidateSignInCodes\",\"params\":[{\"name\":\"codes\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":414170259,\"method\":\"channels.clickSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1167653392,\"method\":\"contacts.editCloseFriends\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-941629475,\"method\":\"stories.canSendStory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-454661813,\"method\":\"stories.sendStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"noforwards\",\"type\":\"flags.4?true\"},{\"name\":\"fwd_modified\",\"type\":\"flags.7?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"media_areas\",\"type\":\"flags.5?Vector<MediaArea>\"},{\"name\":\"caption\",\"type\":\"flags.0?string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"privacy_rules\",\"type\":\"Vector<InputPrivacyRule>\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"period\",\"type\":\"flags.3?int\"},{\"name\":\"fwd_from_id\",\"type\":\"flags.6?InputPeer\"},{\"name\":\"fwd_from_story\",\"type\":\"flags.6?int\"}],\"type\":\"Updates\"},{\"id\":-1249658298,\"method\":\"stories.editStory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.0?InputMedia\"},{\"name\":\"media_areas\",\"type\":\"flags.3?Vector<MediaArea>\"},{\"name\":\"caption\",\"type\":\"flags.1?string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"privacy_rules\",\"type\":\"flags.2?Vector<InputPrivacyRule>\"}],\"type\":\"Updates\"},{\"id\":-1369842849,\"method\":\"stories.deleteStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":-1703566865,\"method\":\"stories.togglePinned\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"pinned\",\"type\":\"Bool\"}],\"type\":\"Vector<int>\"},{\"id\":-290400731,\"method\":\"stories.getAllStories\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"next\",\"type\":\"flags.1?true\"},{\"name\":\"hidden\",\"type\":\"flags.2?true\"},{\"name\":\"state\",\"type\":\"flags.0?string\"}],\"type\":\"stories.AllStories\"},{\"id\":1478600156,\"method\":\"stories.getPinnedStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.Stories\"},{\"id\":-1271586794,\"method\":\"stories.getStoriesArchive\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.Stories\"},{\"id\":1467271796,\"method\":\"stories.getStoriesByID\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"stories.Stories\"},{\"id\":2082822084,\"method\":\"stories.toggleAllStoriesHidden\",\"params\":[{\"name\":\"hidden\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1521034552,\"method\":\"stories.readStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<int>\"},{\"id\":-1308456197,\"method\":\"stories.incrementStoryViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":2127707223,\"method\":\"stories.getStoryViewsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_contacts\",\"type\":\"flags.0?true\"},{\"name\":\"reactions_first\",\"type\":\"flags.2?true\"},{\"name\":\"forwards_first\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"flags.1?string\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.StoryViewsList\"},{\"id\":685862088,\"method\":\"stories.getStoriesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"stories.StoryViews\"},{\"id\":2072899360,\"method\":\"stories.exportStoryLink\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedStoryLink\"},{\"id\":421788300,\"method\":\"stories.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1471926630,\"method\":\"stories.activateStealthMode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"past\",\"type\":\"flags.0?true\"},{\"name\":\"future\",\"type\":\"flags.1?true\"}],\"type\":\"Updates\"},{\"id\":-1798939530,\"method\":\"contacts.setBlocked\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my_stories_from\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2144810674,\"method\":\"stories.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_to_recent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"story_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Updates\"},{\"id\":324662502,\"method\":\"bots.canSendMessage\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-248323089,\"method\":\"bots.allowSendMessage\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":142591463,\"method\":\"bots.invokeWebViewCustomMethod\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":743103056,\"method\":\"stories.getPeerStories\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"stories.PeerStories\"},{\"id\":-1688541191,\"method\":\"stories.getAllReadPeerStories\",\"params\":[],\"type\":\"Updates\"},{\"id\":1398375363,\"method\":\"stories.getPeerMaxIDs\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Vector<int>\"},{\"id\":-1519744160,\"method\":\"stories.getChatsToSend\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":-1123805756,\"method\":\"stories.togglePeerStoriesHidden\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hidden\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":660060756,\"method\":\"payments.getPremiumGiftCodeOptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"boost_peer\",\"type\":\"flags.0?InputPeer\"}],\"type\":\"Vector<PremiumGiftCodeOption>\"},{\"id\":-1907247935,\"method\":\"payments.checkGiftCode\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"payments.CheckedGiftCode\"},{\"id\":-152934316,\"method\":\"payments.applyGiftCode\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-198994907,\"method\":\"payments.getGiveawayInfo\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.GiveawayInfo\"},{\"id\":1609928480,\"method\":\"payments.launchPrepaidGiveaway\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"giveaway_id\",\"type\":\"long\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":2096079197,\"method\":\"account.updateColor\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_profile\",\"type\":\"flags.1?true\"},{\"name\":\"color\",\"type\":\"flags.2?int\"},{\"name\":\"background_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"Bool\"},{\"id\":-659933583,\"method\":\"channels.updateColor\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_profile\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"color\",\"type\":\"flags.2?int\"},{\"name\":\"background_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"Updates\"},{\"id\":-1509246514,\"method\":\"account.getDefaultBackgroundEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":1626764896,\"method\":\"premium.getBoostsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gifts\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"premium.BoostsList\"},{\"id\":199719754,\"method\":\"premium.getMyBoosts\",\"params\":[],\"type\":\"premium.MyBoosts\"},{\"id\":1803396934,\"method\":\"premium.applyBoost\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slots\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"premium.MyBoosts\"},{\"id\":70197089,\"method\":\"premium.getBoostsStatus\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"premium.BoostsStatus\"},{\"id\":965037343,\"method\":\"premium.getUserBoosts\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"premium.BoostsList\"},{\"id\":-1757889771,\"method\":\"channels.toggleViewForumAsMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-1833678516,\"method\":\"messages.searchEmojiStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-2085155433,\"method\":\"channels.getChannelRecommendations\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.Chats\"},{\"id\":927985472,\"method\":\"stats.getStoryStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"stats.StoryStats\"},{\"id\":-1505526026,\"method\":\"stats.getStoryPublicForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stats.PublicForwards\"},{\"id\":-629083089,\"method\":\"help.getPeerColors\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PeerColors\"},{\"id\":-1412453891,\"method\":\"help.getPeerProfileColors\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PeerColors\"},{\"id\":-1179482081,\"method\":\"stories.getStoryReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"forwards_first\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Reaction\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"stories.StoryReactionsList\"},{\"id\":-254548312,\"method\":\"channels.updateEmojiStatus\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Updates\"},{\"id\":1999087573,\"method\":\"account.getChannelDefaultEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":900325589,\"method\":\"account.getChannelRestrictedStatusEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"}]},\"layer\":169} as {\r\n  MTProto: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  API: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  layer: number,\r\n};\r\n","/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).pako={})}(this,(function(e){\"use strict\";var t=(e,t,i,n)=>{let a=65535&e|0,r=e>>>16&65535|0,o=0;for(;0!==i;){o=i>2e3?2e3:i,i-=o;do{a=a+t[n++]|0,r=r+a|0}while(--o);a%=65521,r%=65521}return a|r<<16|0};const i=new Uint32Array((()=>{let e,t=[];for(var i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t})());var n=(e,t,n,a)=>{const r=i,o=a+n;e^=-1;for(let i=a;i<o;i++)e=e>>>8^r[255&(e^t[i])];return-1^e};const a=16209;var r=function(e,t){let i,n,r,o,s,l,d,f,c,h,u,w,b,m,k,_,g,p,v,x,y,E,R,A;const Z=e.state;i=e.next_in,R=e.input,n=i+(e.avail_in-5),r=e.next_out,A=e.output,o=r-(t-e.avail_out),s=r+(e.avail_out-257),l=Z.dmax,d=Z.wsize,f=Z.whave,c=Z.wnext,h=Z.window,u=Z.hold,w=Z.bits,b=Z.lencode,m=Z.distcode,k=(1<<Z.lenbits)-1,_=(1<<Z.distbits)-1;e:do{w<15&&(u+=R[i++]<<w,w+=8,u+=R[i++]<<w,w+=8),g=b[u&k];t:for(;;){if(p=g>>>24,u>>>=p,w-=p,p=g>>>16&255,0===p)A[r++]=65535&g;else{if(!(16&p)){if(0==(64&p)){g=b[(65535&g)+(u&(1<<p)-1)];continue t}if(32&p){Z.mode=16191;break e}e.msg=\"invalid literal/length code\",Z.mode=a;break e}v=65535&g,p&=15,p&&(w<p&&(u+=R[i++]<<w,w+=8),v+=u&(1<<p)-1,u>>>=p,w-=p),w<15&&(u+=R[i++]<<w,w+=8,u+=R[i++]<<w,w+=8),g=m[u&_];i:for(;;){if(p=g>>>24,u>>>=p,w-=p,p=g>>>16&255,!(16&p)){if(0==(64&p)){g=m[(65535&g)+(u&(1<<p)-1)];continue i}e.msg=\"invalid distance code\",Z.mode=a;break e}if(x=65535&g,p&=15,w<p&&(u+=R[i++]<<w,w+=8,w<p&&(u+=R[i++]<<w,w+=8)),x+=u&(1<<p)-1,x>l){e.msg=\"invalid distance too far back\",Z.mode=a;break e}if(u>>>=p,w-=p,p=r-o,x>p){if(p=x-p,p>f&&Z.sane){e.msg=\"invalid distance too far back\",Z.mode=a;break e}if(y=0,E=h,0===c){if(y+=d-p,p<v){v-=p;do{A[r++]=h[y++]}while(--p);y=r-x,E=A}}else if(c<p){if(y+=d+c-p,p-=c,p<v){v-=p;do{A[r++]=h[y++]}while(--p);if(y=0,c<v){p=c,v-=p;do{A[r++]=h[y++]}while(--p);y=r-x,E=A}}}else if(y+=c-p,p<v){v-=p;do{A[r++]=h[y++]}while(--p);y=r-x,E=A}for(;v>2;)A[r++]=E[y++],A[r++]=E[y++],A[r++]=E[y++],v-=3;v&&(A[r++]=E[y++],v>1&&(A[r++]=E[y++]))}else{y=r-x;do{A[r++]=A[y++],A[r++]=A[y++],A[r++]=A[y++],v-=3}while(v>2);v&&(A[r++]=A[y++],v>1&&(A[r++]=A[y++]))}break}}break}}while(i<n&&r<s);v=w>>3,i-=v,w-=v<<3,u&=(1<<w)-1,e.next_in=i,e.next_out=r,e.avail_in=i<n?n-i+5:5-(i-n),e.avail_out=r<s?s-r+257:257-(r-s),Z.hold=u,Z.bits=w};const o=15,s=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),l=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),d=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),f=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var c=(e,t,i,n,a,r,c,h)=>{const u=h.bits;let w,b,m,k,_,g,p=0,v=0,x=0,y=0,E=0,R=0,A=0,Z=0,S=0,T=0,O=null;const U=new Uint16Array(16),D=new Uint16Array(16);let I,B,N,C=null;for(p=0;p<=o;p++)U[p]=0;for(v=0;v<n;v++)U[t[i+v]]++;for(E=u,y=o;y>=1&&0===U[y];y--);if(E>y&&(E=y),0===y)return a[r++]=20971520,a[r++]=20971520,h.bits=1,0;for(x=1;x<y&&0===U[x];x++);for(E<x&&(E=x),Z=1,p=1;p<=o;p++)if(Z<<=1,Z-=U[p],Z<0)return-1;if(Z>0&&(0===e||1!==y))return-1;for(D[1]=0,p=1;p<o;p++)D[p+1]=D[p]+U[p];for(v=0;v<n;v++)0!==t[i+v]&&(c[D[t[i+v]]++]=v);if(0===e?(O=C=c,g=20):1===e?(O=s,C=l,g=257):(O=d,C=f,g=0),T=0,v=0,p=x,_=r,R=E,A=0,m=-1,S=1<<E,k=S-1,1===e&&S>852||2===e&&S>592)return 1;for(;;){I=p-A,c[v]+1<g?(B=0,N=c[v]):c[v]>=g?(B=C[c[v]-g],N=O[c[v]-g]):(B=96,N=0),w=1<<p-A,b=1<<R,x=b;do{b-=w,a[_+(T>>A)+b]=I<<24|B<<16|N|0}while(0!==b);for(w=1<<p-1;T&w;)w>>=1;if(0!==w?(T&=w-1,T+=w):T=0,v++,0==--U[p]){if(p===y)break;p=t[i+c[v]]}if(p>E&&(T&k)!==m){for(0===A&&(A=E),_+=x,R=p-A,Z=1<<R;R+A<y&&(Z-=U[R+A],!(Z<=0));)R++,Z<<=1;if(S+=1<<R,1===e&&S>852||2===e&&S>592)return 1;m=T&k,a[m]=E<<24|R<<16|_-r|0}}return 0!==T&&(a[_+T]=p-A<<24|64<<16|0),h.bits=E,0},h={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{Z_FINISH:u,Z_BLOCK:w,Z_TREES:b,Z_OK:m,Z_STREAM_END:k,Z_NEED_DICT:_,Z_STREAM_ERROR:g,Z_DATA_ERROR:p,Z_MEM_ERROR:v,Z_BUF_ERROR:x,Z_DEFLATED:y}=h,E=16180,R=16190,A=16191,Z=16192,S=16194,T=16199,O=16200,U=16206,D=16209,I=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function B(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const N=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<E||t.mode>16211?1:0},C=e=>{if(N(e))return g;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=E,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,m},z=e=>{if(N(e))return g;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,C(e)},F=(e,t)=>{let i;if(N(e))return g;const n=e.state;return t<0?(i=0,t=-t):(i=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?g:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,z(e))},L=(e,t)=>{if(!e)return g;const i=new B;e.state=i,i.strm=e,i.window=null,i.mode=E;const n=F(e,t);return n!==m&&(e.state=null),n};let M,H,j=!0;const K=e=>{if(j){M=new Int32Array(512),H=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(c(1,e.lens,0,288,M,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;c(2,e.lens,0,32,H,0,e.work,{bits:5}),j=!1}e.lencode=M,e.lenbits=9,e.distcode=H,e.distbits=5},P=(e,t,i,n)=>{let a;const r=e.state;return null===r.window&&(r.wsize=1<<r.wbits,r.wnext=0,r.whave=0,r.window=new Uint8Array(r.wsize)),n>=r.wsize?(r.window.set(t.subarray(i-r.wsize,i),0),r.wnext=0,r.whave=r.wsize):(a=r.wsize-r.wnext,a>n&&(a=n),r.window.set(t.subarray(i-n,i-n+a),r.wnext),(n-=a)?(r.window.set(t.subarray(i-n,i),0),r.wnext=n,r.whave=r.wsize):(r.wnext+=a,r.wnext===r.wsize&&(r.wnext=0),r.whave<r.wsize&&(r.whave+=a))),0};var Y={inflateReset:z,inflateReset2:F,inflateResetKeep:C,inflateInit:e=>L(e,15),inflateInit2:L,inflate:(e,i)=>{let a,o,s,l,d,f,h,B,C,z,F,L,M,H,j,Y,G,X,W,q,J,Q,V=0;const $=new Uint8Array(4);let ee,te;const ie=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(N(e)||!e.output||!e.input&&0!==e.avail_in)return g;a=e.state,a.mode===A&&(a.mode=Z),d=e.next_out,s=e.output,h=e.avail_out,l=e.next_in,o=e.input,f=e.avail_in,B=a.hold,C=a.bits,z=f,F=h,Q=m;e:for(;;)switch(a.mode){case E:if(0===a.wrap){a.mode=Z;break}for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(2&a.wrap&&35615===B){0===a.wbits&&(a.wbits=15),a.check=0,$[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0),B=0,C=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&B)<<8)+(B>>8))%31){e.msg=\"incorrect header check\",a.mode=D;break}if((15&B)!==y){e.msg=\"unknown compression method\",a.mode=D;break}if(B>>>=4,C-=4,J=8+(15&B),0===a.wbits&&(a.wbits=J),J>15||J>a.wbits){e.msg=\"invalid window size\",a.mode=D;break}a.dmax=1<<a.wbits,a.flags=0,e.adler=a.check=1,a.mode=512&B?16189:A,B=0,C=0;break;case 16181:for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(a.flags=B,(255&a.flags)!==y){e.msg=\"unknown compression method\",a.mode=D;break}if(57344&a.flags){e.msg=\"unknown header flags set\",a.mode=D;break}a.head&&(a.head.text=B>>8&1),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0)),B=0,C=0,a.mode=16182;case 16182:for(;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.head&&(a.head.time=B),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,$[2]=B>>>16&255,$[3]=B>>>24&255,a.check=n(a.check,$,4,0)),B=0,C=0,a.mode=16183;case 16183:for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.head&&(a.head.xflags=255&B,a.head.os=B>>8),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0)),B=0,C=0,a.mode=16184;case 16184:if(1024&a.flags){for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.length=B,a.head&&(a.head.extra_len=B),512&a.flags&&4&a.wrap&&($[0]=255&B,$[1]=B>>>8&255,a.check=n(a.check,$,2,0)),B=0,C=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(L=a.length,L>f&&(L=f),L&&(a.head&&(J=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(o.subarray(l,l+L),J)),512&a.flags&&4&a.wrap&&(a.check=n(a.check,o,L,l)),f-=L,l+=L,a.length-=L),a.length))break e;a.length=0,a.mode=16186;case 16186:if(2048&a.flags){if(0===f)break e;L=0;do{J=o[l+L++],a.head&&J&&a.length<65536&&(a.head.name+=String.fromCharCode(J))}while(J&&L<f);if(512&a.flags&&4&a.wrap&&(a.check=n(a.check,o,L,l)),f-=L,l+=L,J)break e}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===f)break e;L=0;do{J=o[l+L++],a.head&&J&&a.length<65536&&(a.head.comment+=String.fromCharCode(J))}while(J&&L<f);if(512&a.flags&&4&a.wrap&&(a.check=n(a.check,o,L,l)),f-=L,l+=L,J)break e}else a.head&&(a.head.comment=null);a.mode=16188;case 16188:if(512&a.flags){for(;C<16;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(4&a.wrap&&B!==(65535&a.check)){e.msg=\"header crc mismatch\",a.mode=D;break}B=0,C=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),e.adler=a.check=0,a.mode=A;break;case 16189:for(;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}e.adler=a.check=I(B),B=0,C=0,a.mode=R;case R:if(0===a.havedict)return e.next_out=d,e.avail_out=h,e.next_in=l,e.avail_in=f,a.hold=B,a.bits=C,_;e.adler=a.check=1,a.mode=A;case A:if(i===w||i===b)break e;case Z:if(a.last){B>>>=7&C,C-=7&C,a.mode=U;break}for(;C<3;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}switch(a.last=1&B,B>>>=1,C-=1,3&B){case 0:a.mode=16193;break;case 1:if(K(a),a.mode=T,i===b){B>>>=2,C-=2;break e}break;case 2:a.mode=16196;break;case 3:e.msg=\"invalid block type\",a.mode=D}B>>>=2,C-=2;break;case 16193:for(B>>>=7&C,C-=7&C;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if((65535&B)!=(B>>>16^65535)){e.msg=\"invalid stored block lengths\",a.mode=D;break}if(a.length=65535&B,B=0,C=0,a.mode=S,i===b)break e;case S:a.mode=16195;case 16195:if(L=a.length,L){if(L>f&&(L=f),L>h&&(L=h),0===L)break e;s.set(o.subarray(l,l+L),d),f-=L,l+=L,h-=L,d+=L,a.length-=L;break}a.mode=A;break;case 16196:for(;C<14;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(a.nlen=257+(31&B),B>>>=5,C-=5,a.ndist=1+(31&B),B>>>=5,C-=5,a.ncode=4+(15&B),B>>>=4,C-=4,a.nlen>286||a.ndist>30){e.msg=\"too many length or distance symbols\",a.mode=D;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;C<3;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.lens[ie[a.have++]]=7&B,B>>>=3,C-=3}for(;a.have<19;)a.lens[ie[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,ee={bits:a.lenbits},Q=c(0,a.lens,0,19,a.lencode,0,a.work,ee),a.lenbits=ee.bits,Q){e.msg=\"invalid code lengths set\",a.mode=D;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;V=a.lencode[B&(1<<a.lenbits)-1],j=V>>>24,Y=V>>>16&255,G=65535&V,!(j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(G<16)B>>>=j,C-=j,a.lens[a.have++]=G;else{if(16===G){for(te=j+2;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(B>>>=j,C-=j,0===a.have){e.msg=\"invalid bit length repeat\",a.mode=D;break}J=a.lens[a.have-1],L=3+(3&B),B>>>=2,C-=2}else if(17===G){for(te=j+3;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=j,C-=j,J=0,L=3+(7&B),B>>>=3,C-=3}else{for(te=j+7;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=j,C-=j,J=0,L=11+(127&B),B>>>=7,C-=7}if(a.have+L>a.nlen+a.ndist){e.msg=\"invalid bit length repeat\",a.mode=D;break}for(;L--;)a.lens[a.have++]=J}}if(a.mode===D)break;if(0===a.lens[256]){e.msg=\"invalid code -- missing end-of-block\",a.mode=D;break}if(a.lenbits=9,ee={bits:a.lenbits},Q=c(1,a.lens,0,a.nlen,a.lencode,0,a.work,ee),a.lenbits=ee.bits,Q){e.msg=\"invalid literal/lengths set\",a.mode=D;break}if(a.distbits=6,a.distcode=a.distdyn,ee={bits:a.distbits},Q=c(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,ee),a.distbits=ee.bits,Q){e.msg=\"invalid distances set\",a.mode=D;break}if(a.mode=T,i===b)break e;case T:a.mode=O;case O:if(f>=6&&h>=258){e.next_out=d,e.avail_out=h,e.next_in=l,e.avail_in=f,a.hold=B,a.bits=C,r(e,F),d=e.next_out,s=e.output,h=e.avail_out,l=e.next_in,o=e.input,f=e.avail_in,B=a.hold,C=a.bits,a.mode===A&&(a.back=-1);break}for(a.back=0;V=a.lencode[B&(1<<a.lenbits)-1],j=V>>>24,Y=V>>>16&255,G=65535&V,!(j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(Y&&0==(240&Y)){for(X=j,W=Y,q=G;V=a.lencode[q+((B&(1<<X+W)-1)>>X)],j=V>>>24,Y=V>>>16&255,G=65535&V,!(X+j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=X,C-=X,a.back+=X}if(B>>>=j,C-=j,a.back+=j,a.length=G,0===Y){a.mode=16205;break}if(32&Y){a.back=-1,a.mode=A;break}if(64&Y){e.msg=\"invalid literal/length code\",a.mode=D;break}a.extra=15&Y,a.mode=16201;case 16201:if(a.extra){for(te=a.extra;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.length+=B&(1<<a.extra)-1,B>>>=a.extra,C-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=16202;case 16202:for(;V=a.distcode[B&(1<<a.distbits)-1],j=V>>>24,Y=V>>>16&255,G=65535&V,!(j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(0==(240&Y)){for(X=j,W=Y,q=G;V=a.distcode[q+((B&(1<<X+W)-1)>>X)],j=V>>>24,Y=V>>>16&255,G=65535&V,!(X+j<=C);){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}B>>>=X,C-=X,a.back+=X}if(B>>>=j,C-=j,a.back+=j,64&Y){e.msg=\"invalid distance code\",a.mode=D;break}a.offset=G,a.extra=15&Y,a.mode=16203;case 16203:if(a.extra){for(te=a.extra;C<te;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}a.offset+=B&(1<<a.extra)-1,B>>>=a.extra,C-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){e.msg=\"invalid distance too far back\",a.mode=D;break}a.mode=16204;case 16204:if(0===h)break e;if(L=F-h,a.offset>L){if(L=a.offset-L,L>a.whave&&a.sane){e.msg=\"invalid distance too far back\",a.mode=D;break}L>a.wnext?(L-=a.wnext,M=a.wsize-L):M=a.wnext-L,L>a.length&&(L=a.length),H=a.window}else H=s,M=d-a.offset,L=a.length;L>h&&(L=h),h-=L,a.length-=L;do{s[d++]=H[M++]}while(--L);0===a.length&&(a.mode=O);break;case 16205:if(0===h)break e;s[d++]=a.length,h--,a.mode=O;break;case U:if(a.wrap){for(;C<32;){if(0===f)break e;f--,B|=o[l++]<<C,C+=8}if(F-=h,e.total_out+=F,a.total+=F,4&a.wrap&&F&&(e.adler=a.check=a.flags?n(a.check,s,F,d-F):t(a.check,s,F,d-F)),F=h,4&a.wrap&&(a.flags?B:I(B))!==a.check){e.msg=\"incorrect data check\",a.mode=D;break}B=0,C=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;C<32;){if(0===f)break e;f--,B+=o[l++]<<C,C+=8}if(4&a.wrap&&B!==(4294967295&a.total)){e.msg=\"incorrect length check\",a.mode=D;break}B=0,C=0}a.mode=16208;case 16208:Q=k;break e;case D:Q=p;break e;case 16210:return v;default:return g}return e.next_out=d,e.avail_out=h,e.next_in=l,e.avail_in=f,a.hold=B,a.bits=C,(a.wsize||F!==e.avail_out&&a.mode<D&&(a.mode<U||i!==u))&&P(e,e.output,e.next_out,F-e.avail_out),z-=e.avail_in,F-=e.avail_out,e.total_in+=z,e.total_out+=F,a.total+=F,4&a.wrap&&F&&(e.adler=a.check=a.flags?n(a.check,s,F,e.next_out-F):t(a.check,s,F,e.next_out-F)),e.data_type=a.bits+(a.last?64:0)+(a.mode===A?128:0)+(a.mode===T||a.mode===S?256:0),(0===z&&0===F||i===u)&&Q===m&&(Q=x),Q},inflateEnd:e=>{if(N(e))return g;let t=e.state;return t.window&&(t.window=null),e.state=null,m},inflateGetHeader:(e,t)=>{if(N(e))return g;const i=e.state;return 0==(2&i.wrap)?g:(i.head=t,t.done=!1,m)},inflateSetDictionary:(e,i)=>{const n=i.length;let a,r,o;return N(e)?g:(a=e.state,0!==a.wrap&&a.mode!==R?g:a.mode===R&&(r=1,r=t(r,i,n,0),r!==a.check)?p:(o=P(e,i,n,n),o?(a.mode=16210,v):(a.havedict=1,m)))},inflateInfo:\"pako inflate (from Nodeca project)\"};const G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var X=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const i=t.shift();if(i){if(\"object\"!=typeof i)throw new TypeError(i+\"must be non-object\");for(const t in i)G(i,t)&&(e[t]=i[t])}}return e},W=e=>{let t=0;for(let i=0,n=e.length;i<n;i++)t+=e[i].length;const i=new Uint8Array(t);for(let t=0,n=0,a=e.length;t<a;t++){let a=e[t];i.set(a,n),n+=a.length}return i};let q=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){q=!1}const J=new Uint8Array(256);for(let e=0;e<256;e++)J[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;J[254]=J[254]=1;var Q=e=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,i,n,a,r,o=e.length,s=0;for(a=0;a<o;a++)i=e.charCodeAt(a),55296==(64512&i)&&a+1<o&&(n=e.charCodeAt(a+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),a++)),s+=i<128?1:i<2048?2:i<65536?3:4;for(t=new Uint8Array(s),r=0,a=0;r<s;a++)i=e.charCodeAt(a),55296==(64512&i)&&a+1<o&&(n=e.charCodeAt(a+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),a++)),i<128?t[r++]=i:i<2048?(t[r++]=192|i>>>6,t[r++]=128|63&i):i<65536?(t[r++]=224|i>>>12,t[r++]=128|i>>>6&63,t[r++]=128|63&i):(t[r++]=240|i>>>18,t[r++]=128|i>>>12&63,t[r++]=128|i>>>6&63,t[r++]=128|63&i);return t},V=(e,t)=>{const i=t||e.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let n,a;const r=new Array(2*i);for(a=0,n=0;n<i;){let t=e[n++];if(t<128){r[a++]=t;continue}let o=J[t];if(o>4)r[a++]=65533,n+=o-1;else{for(t&=2===o?31:3===o?15:7;o>1&&n<i;)t=t<<6|63&e[n++],o--;o>1?r[a++]=65533:t<65536?r[a++]=t:(t-=65536,r[a++]=55296|t>>10&1023,r[a++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&q)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let i=\"\";for(let n=0;n<t;n++)i+=String.fromCharCode(e[n]);return i})(r,a)},$=(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let i=t-1;for(;i>=0&&128==(192&e[i]);)i--;return i<0||0===i?t:i+J[e[i]]>t?i:t},ee={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"};var te=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};var ie=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const ne=Object.prototype.toString,{Z_NO_FLUSH:ae,Z_FINISH:re,Z_OK:oe,Z_STREAM_END:se,Z_NEED_DICT:le,Z_STREAM_ERROR:de,Z_DATA_ERROR:fe,Z_MEM_ERROR:ce}=h;function he(e){this.options=X({chunkSize:65536,windowBits:15,to:\"\"},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new te,this.strm.avail_out=0;let i=Y.inflateInit2(this.strm,t.windowBits);if(i!==oe)throw new Error(ee[i]);if(this.header=new ie,Y.inflateGetHeader(this.strm,this.header),t.dictionary&&(\"string\"==typeof t.dictionary?t.dictionary=Q(t.dictionary):\"[object ArrayBuffer]\"===ne.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(i=Y.inflateSetDictionary(this.strm,t.dictionary),i!==oe)))throw new Error(ee[i])}function ue(e,t){const i=new he(t);if(i.push(e),i.err)throw i.msg||ee[i.err];return i.result}he.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize,a=this.options.dictionary;let r,o,s;if(this.ended)return!1;for(o=t===~~t?t:!0===t?re:ae,\"[object ArrayBuffer]\"===ne.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;){for(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),r=Y.inflate(i,o),r===le&&a&&(r=Y.inflateSetDictionary(i,a),r===oe?r=Y.inflate(i,o):r===fe&&(r=le));i.avail_in>0&&r===se&&i.state.wrap>0&&0!==e[i.next_in];)Y.inflateReset(i),r=Y.inflate(i,o);switch(r){case de:case fe:case le:case ce:return this.onEnd(r),this.ended=!0,!1}if(s=i.avail_out,i.next_out&&(0===i.avail_out||r===se))if(\"string\"===this.options.to){let e=$(i.output,i.next_out),t=i.next_out-e,a=V(i.output,e);i.next_out=t,i.avail_out=n-t,t&&i.output.set(i.output.subarray(e,e+t),0),this.onData(a)}else this.onData(i.output.length===i.next_out?i.output:i.output.subarray(0,i.next_out));if(r!==oe||0!==s){if(r===se)return r=Y.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,!0;if(0===i.avail_in)break}}return!0},he.prototype.onData=function(e){this.chunks.push(e)},he.prototype.onEnd=function(e){e===oe&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=W(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var we=he,be=ue,me=function(e,t){return(t=t||{}).raw=!0,ue(e,t)},ke=ue,_e=h,ge={Inflate:we,inflate:be,inflateRaw:me,ungzip:ke,constants:_e};e.Inflate=we,e.constants=_e,e.default=ge,e.inflate=be,e.inflateRaw=me,e.ungzip=ke,Object.defineProperty(e,\"__esModule\",{value:!0})}));\n","// export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\r\n\r\n// @ts-ignore\r\nimport pako from 'pako/dist/pako_inflate.min.js';\r\n// import dT from './dT';\r\n\r\n// export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\r\nexport default function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\r\n  // console.log(dT(), 'Gzip uncompress start');\r\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\r\n  // console.log(dT(), 'Gzip uncompress finish'/* , result */);\r\n  return result;\r\n}\r\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < digits[i]) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","export default function intToUint(val: number) {\r\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\r\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\r\n}\r\n","import bigInt from 'big-integer';\r\nimport intToUint from '../number/intToUint';\r\n\r\nexport default function ulongFromInts(high: number, low: number) {\r\n  high = intToUint(high), low = intToUint(low);\r\n  return bigInt(high).shiftLeft(32).add(bigInt(low));\r\n}\r\n","import bigInt from 'big-integer';\r\n\r\nexport const safeBigInt = bigInt(Number.MAX_SAFE_INTEGER);\r\nexport const ulongBigInt = bigInt(bigInt[2]).pow(64);\r\nexport const longBigInt = ulongBigInt.divide(bigInt[2]);\r\n","import bigInt from 'big-integer';\r\nimport {longBigInt, ulongBigInt} from './bigIntConstants';\r\n\r\nexport function bigIntFromBytes(bytes: Uint8Array | number[], base = 256) {\r\n  return bigInt.fromArray(bytes instanceof Uint8Array ? [...bytes] : bytes, base);\r\n}\r\n\r\nexport function bigIntToBytes(bigInt: bigInt.BigInteger) {\r\n  return new Uint8Array(bigInt.toArray(256).value);\r\n}\r\n\r\nexport function bigIntToSigned(bigInt: bigInt.BigInteger) {\r\n  return bigInt.greater(longBigInt) ? bigInt.minus(ulongBigInt) : bigInt;\r\n}\r\n\r\nexport function bigIntToUnsigned(bigInt: bigInt.BigInteger) {\r\n  return bigInt.isNegative() ? ulongBigInt.add(bigInt) : bigInt;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport Schema, {MTProtoConstructor, MTProtoMethod} from './schema';\r\nimport {JSONValue} from '../../layer';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport gzipUncompress from '../../helpers/gzipUncompress';\r\nimport bigInt from 'big-integer';\r\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\r\nimport {safeBigInt} from '../../helpers/bigInt/bigIntConstants';\r\nimport {bigIntToSigned, bigIntToUnsigned} from '../../helpers/bigInt/bigIntConversion';\r\n\r\nconst boolFalse = +Schema.API.constructors.find((c) => c.predicate === 'boolFalse').id;\r\nconst boolTrue = +Schema.API.constructors.find((c) => c.predicate === 'boolTrue').id;\r\nconst vector = +Schema.API.constructors.find((c) => c.predicate === 'vector').id;\r\nconst gzipPacked = +Schema.MTProto.constructors.find((c) => c.predicate === 'gzip_packed').id;\r\n\r\n// * using slice to have a new buffer, otherwise the buffer will be copied to main thread\r\nconst sliceMethod: 'slice' | 'subarray' = 'slice'; // subarray\r\n\r\nclass TLSerialization {\r\n  private maxLength = 2048; // 2Kb\r\n  private offset = 0; // in bytes\r\n  private mtproto = false;\r\n  private debug = false;// Modes.debug;\r\n\r\n  private buffer: ArrayBuffer;\r\n  private intView: Int32Array;\r\n  private byteView: Uint8Array;\r\n\r\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\r\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\r\n    this.mtproto = options.mtproto || false;\r\n    this.createBuffer();\r\n  }\r\n\r\n  public createBuffer() {\r\n    this.buffer = new ArrayBuffer(this.maxLength);\r\n    this.intView = new Int32Array(this.buffer);\r\n    this.byteView = new Uint8Array(this.buffer);\r\n  }\r\n\r\n  public getArray() {\r\n    const resultBuffer = new ArrayBuffer(this.offset);\r\n\r\n    // let perf = performance.now();\r\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\r\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\r\n    // console.log('perf uint8', performance.now() - perf);\r\n\r\n    // perf = performance.now();\r\n    const resultInt32 = new Int32Array(resultBuffer);\r\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\r\n    // console.log('perf int32', performance.now() - perf);\r\n\r\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\r\n      console.error(resultUint8, resultInt32);\r\n    } */\r\n\r\n    return resultInt32;\r\n  }\r\n\r\n  public getBuffer() {\r\n    return this.getArray().buffer;\r\n  }\r\n\r\n  public getBytes(typed: true): Uint8Array;\r\n  public getBytes(typed?: false): number[];\r\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\r\n    if(typed) {\r\n      const resultBuffer = new ArrayBuffer(this.offset);\r\n      const resultArray = new Uint8Array(resultBuffer);\r\n\r\n      resultArray.set(this.byteView.subarray(0, this.offset));\r\n\r\n      return resultArray;\r\n    }\r\n\r\n    const bytes: number[] = new Array(this.offset);\r\n    for(let i = 0; i < this.offset; ++i) {\r\n      bytes[i] = this.byteView[i];\r\n    }\r\n    return bytes;\r\n  }\r\n\r\n  public getOffset() {\r\n    return this.offset;\r\n  }\r\n\r\n  public checkLength(needBytes: number) {\r\n    if(this.offset + needBytes < this.maxLength) {\r\n      return;\r\n    }\r\n\r\n    // console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\r\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\r\n    const previousBuffer = this.buffer;\r\n    // const previousByteView = this.byteView;\r\n    const previousArray = new Int32Array(previousBuffer);\r\n\r\n    this.createBuffer();\r\n\r\n    new Int32Array(this.buffer).set(previousArray);\r\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32),\r\n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\r\n  }\r\n\r\n  public writeInt(i: number, field: string) {\r\n    this.debug && console.log('>>>', i.toString(16), i, field);\r\n\r\n    const offset = this.offset / 4;\r\n    this.checkLength(4);\r\n    this.intView[offset] = i;\r\n    this.offset += 4;\r\n\r\n    return offset;\r\n  }\r\n\r\n  public storeInt(i: number, field?: string) {\r\n    return this.writeInt(i, (field || '') + ':int');\r\n  }\r\n\r\n  public storeBool(i: boolean, field?: string) {\r\n    if(i) {\r\n      this.writeInt(boolTrue, (field || '') + ':bool');\r\n    } else {\r\n      this.writeInt(boolFalse, (field || '') + ':bool');\r\n    }\r\n  }\r\n\r\n  public storeLongP(iHigh: number, iLow: number, field?: string) {\r\n    this.writeInt(iLow, (field || '') + ':long[low]');\r\n    this.writeInt(iHigh, (field || '') + ':long[high]');\r\n  }\r\n\r\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\r\n    if(Array.isArray(sLong)) {\r\n      if(sLong.length === 2) {\r\n        return this.storeLongP(sLong[0], sLong[1], field);\r\n      } else {\r\n        return this.storeIntBytes(sLong, 64, field);\r\n      }\r\n    }\r\n\r\n    const _bigInt = bigIntToUnsigned(bigInt(sLong as string));\r\n    const {quotient, remainder} = _bigInt.divmod(0x100000000);\r\n    const high = quotient.toJSNumber();\r\n    const low = remainder.toJSNumber();\r\n\r\n    this.writeInt(low, (field || '') + ':long[low]');\r\n    this.writeInt(high, (field || '') + ':long[high]');\r\n  }\r\n\r\n  public storeDouble(f: any, field?: string) {\r\n    const buffer = new ArrayBuffer(8);\r\n    const intView = new Int32Array(buffer);\r\n    const doubleView = new Float64Array(buffer);\r\n\r\n    doubleView[0] = f;\r\n\r\n    this.writeInt(intView[0], (field || '') + ':double[low]');\r\n    this.writeInt(intView[1], (field || '') + ':double[high]');\r\n  }\r\n\r\n  public storeString(s: string, field?: string) {\r\n    this.debug && console.log('>>>', s, (field || '') + ':string');\r\n\r\n    if(s === undefined) {\r\n      s = '';\r\n    }\r\n    const sUTF8 = unescape(encodeURIComponent(s));\r\n\r\n    this.checkLength(sUTF8.length + 8);\r\n\r\n    const len = sUTF8.length;\r\n    if(len <= 253) {\r\n      this.byteView[this.offset++] = len;\r\n    } else {\r\n      this.byteView[this.offset++] = 254;\r\n      this.byteView[this.offset++] = len & 0xFF;\r\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\r\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\r\n    }\r\n    for(let i = 0; i < len; ++i) {\r\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\r\n    }\r\n\r\n    // Padding\r\n    while(this.offset % 4) {\r\n      this.byteView[this.offset++] = 0;\r\n    }\r\n  }\r\n\r\n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\r\n    if(bytes instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(bytes);\r\n    } else if(bytes === undefined) {\r\n      bytes = [];\r\n    }\r\n\r\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\r\n\r\n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\r\n    const len = (bytes as Uint8Array).length;\r\n    this.checkLength(len + 8);\r\n    if(len <= 253) {\r\n      this.byteView[this.offset++] = len;\r\n    } else {\r\n      this.byteView[this.offset++] = 254;\r\n      this.byteView[this.offset++] = len & 0xFF;\r\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\r\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\r\n    }\r\n\r\n    this.byteView.set(bytes as Uint8Array, this.offset);\r\n    this.offset += len;\r\n\r\n    // Padding\r\n    while(this.offset % 4) {\r\n      this.byteView[this.offset++] = 0;\r\n    }\r\n  }\r\n\r\n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\r\n    if(bytes instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(bytes);\r\n    }\r\n\r\n    const len = (bytes as Uint8Array).length;\r\n    if((bits % 32) || (len * 8) !== bits) {\r\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\r\n      console.error(error, bytes, field);\r\n      throw error;\r\n    }\r\n\r\n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\r\n    this.checkLength(len);\r\n\r\n    this.byteView.set(bytes as Uint8Array, this.offset);\r\n    this.offset += len;\r\n  }\r\n\r\n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\r\n    if(bytes instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(bytes);\r\n    }\r\n\r\n    const len = bytes.length;\r\n\r\n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\r\n    this.checkLength(len);\r\n\r\n    this.byteView.set(bytes, this.offset);\r\n    this.offset += len;\r\n  }\r\n\r\n  public storeMethod(methodName: string, params: any) {\r\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\r\n    const methodData = schema.methods.find((m) => m.method === methodName);\r\n\r\n    if(!methodData) {\r\n      throw new Error('No method ' + methodName + ' found');\r\n    }\r\n\r\n    this.storeInt(methodData.id, methodName + '[id]');\r\n\r\n    this.storeBody(params, methodData, methodName);\r\n\r\n    return methodData.type;\r\n  }\r\n\r\n  public storeObject(obj: any, type: string, field?: string) {\r\n    switch(type) {\r\n      case '#':\r\n        obj ||= 0;\r\n      case 'int':\r\n        return this.storeInt(obj, field);\r\n      case 'long':\r\n        return this.storeLong(obj, field);\r\n      case 'int128':\r\n        return this.storeIntBytes(obj, 128, field);\r\n      case 'int256':\r\n        return this.storeIntBytes(obj, 256, field);\r\n      case 'int512':\r\n        return this.storeIntBytes(obj, 512, field);\r\n      case 'string':\r\n        return this.storeString(obj, field);\r\n      case 'bytes':\r\n        return this.storeBytes(obj, field);\r\n      case 'double':\r\n        return this.storeDouble(obj, field);\r\n      case 'Bool':\r\n        return this.storeBool(obj, field);\r\n      case 'true':\r\n        return;\r\n    }\r\n\r\n    if(Array.isArray(obj)) {\r\n      if(type.substr(0, 6) === 'Vector') {\r\n        this.writeInt(vector, field + '[id]');\r\n      } else if(type.substr(0, 6) !== 'vector') {\r\n        throw new Error('Invalid vector type ' + type);\r\n      }\r\n\r\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\r\n      this.writeInt(obj.length, field + '[count]');\r\n      for(let i = 0; i < obj.length; ++i) {\r\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\r\n      }\r\n\r\n      return true;\r\n    } else if(type.substr(0, 6).toLowerCase() === 'vector') {\r\n      throw new Error('Invalid vector object');\r\n    }\r\n\r\n    if(!isObject(obj)) {\r\n      throw new Error('Invalid object for type ' + type);\r\n    }\r\n\r\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\r\n    const predicate = obj['_'];\r\n    let isBare = false;\r\n    const constructorData: MTProtoConstructor = schema.constructors.find((c) => c.predicate === predicate);\r\n\r\n    if(isBare = (type.charAt(0) === '%')) {\r\n      type = type.substr(1);\r\n    }\r\n\r\n    if(!constructorData) {\r\n      throw new Error('No predicate ' + predicate + ' found');\r\n    }\r\n\r\n    if(predicate === type) {\r\n      isBare = true;\r\n    }\r\n\r\n    if(!isBare) {\r\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\r\n    }\r\n\r\n    this.storeBody(obj, constructorData, field + '[' + predicate + ']');\r\n\r\n    return constructorData.type;\r\n  }\r\n\r\n  private storeBody(obj: any, constructorData: MTProtoConstructor | MTProtoMethod, field: string) {\r\n    const pFlags = obj.pFlags || obj; // * support pFlags, though am not expecting it to be there\r\n    let flagsHandler: {[paramName: string]: {flags: number, offset?: number}};\r\n    for(const param of constructorData.params) {\r\n      let type = param.type;\r\n\r\n      if(type.indexOf('?') !== -1) {\r\n        const condType = type.split('?');\r\n        const fieldBit = condType[0].split('.');\r\n\r\n        // * commented to avoid using 'flags' property\r\n        // if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\r\n        if(condType[1] === 'true' ? pFlags?.[param.name] : obj[param.name] !== undefined) {\r\n          flagsHandler[fieldBit[0]].flags |= 1 << +fieldBit[1];\r\n        } else {\r\n          continue;\r\n        }\r\n        // }\r\n\r\n        type = condType[1];\r\n      }\r\n\r\n      const isFlagHandler = type === '#';\r\n      if(isFlagHandler) {\r\n        (flagsHandler ??= {})[param.name] = {flags: 0};\r\n      }\r\n\r\n      const result = this.storeObject(\r\n        isFlagHandler ? flagsHandler[param.name].flags : obj[param.name],\r\n        type,\r\n        field + '[' + param.name + ']'\r\n      );\r\n\r\n      if(isFlagHandler) {\r\n        flagsHandler[param.name].offset = result as number;\r\n      }\r\n    }\r\n\r\n    for(const paramName in flagsHandler) {\r\n      const {flags, offset} = flagsHandler[paramName];\r\n      this.intView[offset] = flags;\r\n    }\r\n  }\r\n}\r\n\r\nclass TLDeserialization<FetchLongAs extends Long> {\r\n  private offset = 0; // in bytes\r\n  private override: {[key: string]: (result: any, field: string) => void};\r\n\r\n  private buffer: ArrayBuffer;\r\n  private intView: Int32Array;\r\n  private byteView: Uint8Array;\r\n\r\n  // this.debug =\r\n  private mtproto: boolean = false;\r\n  private debug: boolean;\r\n\r\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\r\n    // buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\r\n    if(buffer instanceof ArrayBuffer) {\r\n      this.buffer = buffer;\r\n      this.intView = new Int32Array(buffer);\r\n      this.byteView = new Uint8Array(this.buffer);\r\n    } else {\r\n      this.buffer = buffer.buffer;\r\n      this.intView = new Int32Array(buffer.buffer);\r\n      this.byteView = buffer;\r\n    }\r\n\r\n    this.override = options.override || {};\r\n    this.mtproto = !!options.mtproto;\r\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\r\n  }\r\n\r\n  /* public setMtproto(mtproto: boolean) {\r\n    this.mtproto = mtproto;\r\n  } */\r\n\r\n  private readInt(field: string) {\r\n    // if(this.offset >= this.intView.length * 4) {\r\n    if((this.byteView.length - this.offset) < 4) {\r\n      console.error(this.byteView, this.offset);\r\n      throw new Error('Nothing to fetch: ' + field);\r\n    }\r\n\r\n    const i = this.intView[this.offset / 4];\r\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\r\n\r\n    this.debug &&/*  || field.includes('[dialog][read_outbox_max_id]') */\r\n      console.log('<<<', i.toString(16), i, field,\r\n        this.byteView.slice(this.offset - 16, this.offset + 16),\r\n        bytesToHex(this.byteView.slice(this.offset - 16, this.offset + 16)));\r\n\r\n    this.offset += 4;\r\n\r\n    return i;\r\n  }\r\n\r\n  public fetchInt(field?: string) {\r\n    return this.readInt((field || '') + ':int');\r\n  }\r\n\r\n  public fetchDouble(field?: string) {\r\n    const buffer = new ArrayBuffer(8);\r\n    const intView = new Int32Array(buffer);\r\n    const doubleView = new Float64Array(buffer);\r\n\r\n    intView[0] = this.readInt((field || '') + ':double[low]'),\r\n    intView[1] = this.readInt((field || '') + ':double[high]');\r\n\r\n    return doubleView[0];\r\n  }\r\n\r\n  // ! it should've been signed\r\n  public fetchLong(field?: string): FetchLongAs {\r\n    const iLow = this.readInt((field || '') + ':long[low]');\r\n    const iHigh = this.readInt((field || '') + ':long[high]');\r\n\r\n    let ulong = ulongFromInts(iHigh, iLow);\r\n    if(/* !unsigned &&  */!this.mtproto) { // make it signed\r\n      ulong = bigIntToSigned(ulong);\r\n    }\r\n\r\n    if(!this.mtproto) {\r\n      if(safeBigInt.greaterOrEquals(ulong.abs())) {\r\n        // @ts-ignore\r\n        return ulong.toJSNumber();\r\n      }\r\n    }\r\n\r\n    // @ts-ignore\r\n    return ulong.toString(10);\r\n  }\r\n\r\n  public fetchBool(field?: string): boolean {\r\n    const i = this.readInt((field || '') + ':bool');\r\n    if(i === boolTrue) {\r\n      return true;\r\n    } else if(i === boolFalse) {\r\n      return false;\r\n    }\r\n\r\n    this.offset -= 4;\r\n    return this.fetchObject('Object', field);\r\n  }\r\n\r\n  public fetchString(field?: string): string {\r\n    let len = this.byteView[this.offset++];\r\n\r\n    if(len === 254) {\r\n      len = this.byteView[this.offset++] |\r\n        (this.byteView[this.offset++] << 8) |\r\n        (this.byteView[this.offset++] << 16);\r\n    }\r\n\r\n    let sUTF8 = '';\r\n    for(let i = 0; i < len; ++i) {\r\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\r\n    }\r\n\r\n    // Padding\r\n    while(this.offset % 4) {\r\n      ++this.offset;\r\n    }\r\n\r\n    let s: string;\r\n    try {\r\n      s = decodeURIComponent(escape(sUTF8));\r\n    } catch(e) {\r\n      s = sUTF8;\r\n    }\r\n\r\n    this.debug && console.log('<<<', s, (field || '') + ':string');\r\n\r\n    return s;\r\n  }\r\n\r\n  public fetchBytes(field?: string) {\r\n    let len = this.byteView[this.offset++];\r\n\r\n    if(len === 254) {\r\n      len = this.byteView[this.offset++] |\r\n        (this.byteView[this.offset++] << 8) |\r\n        (this.byteView[this.offset++] << 16);\r\n    }\r\n\r\n    const bytes = this.byteView[sliceMethod](this.offset, this.offset + len);\r\n    this.offset += len;\r\n\r\n    // Padding\r\n    while(this.offset % 4) {\r\n      ++this.offset;\r\n    }\r\n\r\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\r\n\r\n    return bytes;\r\n  }\r\n\r\n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\r\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\r\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\r\n    if(bits % 32) {\r\n      throw new Error('Invalid bits: ' + bits);\r\n    }\r\n\r\n    const len = bits / 8;\r\n    if(typed) {\r\n      const result = this.byteView[sliceMethod](this.offset, this.offset + len);\r\n      this.offset += len;\r\n      return result;\r\n    }\r\n\r\n    const bytes: number[] = new Array(len);\r\n    for(let i = 0; i < len; ++i) {\r\n      bytes[i] = this.byteView[this.offset++];\r\n    }\r\n\r\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\r\n\r\n    return bytes;\r\n  }\r\n\r\n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\r\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\r\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\r\n    if(len === false) {\r\n      len = this.readInt((field || '') + '_length');\r\n      if(len > this.byteView.byteLength) {\r\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\r\n      }\r\n    }\r\n\r\n    if(typed) {\r\n      const bytes = new Uint8Array(len);\r\n      bytes.set(this.byteView[sliceMethod](this.offset, this.offset + len));\r\n      this.offset += len;\r\n      return bytes;\r\n    }\r\n\r\n    const bytes: number[] = new Array(len);\r\n    for(let i = 0; i < len; ++i) {\r\n      bytes[i] = this.byteView[this.offset++];\r\n    }\r\n\r\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\r\n\r\n    return bytes;\r\n  }\r\n\r\n  private fetchVector(type: string, field?: string) {\r\n    const len = this.readInt(field + '[count]');\r\n    const result: any[] = new Array(len);\r\n    if(len > 0) {\r\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\r\n      for(let i = 0; i < len; ++i) {\r\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public fetchObject(type: string, field?: string): any {\r\n    switch(type) {\r\n      case '#':\r\n      case 'int':\r\n        return this.fetchInt(field);\r\n      case 'long':\r\n        return this.fetchLong(field);\r\n      case 'int128':\r\n        return this.fetchIntBytes(128, true, field);\r\n      case 'int256':\r\n        return this.fetchIntBytes(256, true, field);\r\n      case 'int512':\r\n        return this.fetchIntBytes(512, true, field);\r\n      case 'string':\r\n        return this.fetchString(field);\r\n      case 'bytes':\r\n        return this.fetchBytes(field);\r\n      case 'double':\r\n        return this.fetchDouble(field);\r\n      case 'Bool':\r\n        return this.fetchBool(field);\r\n      case 'true':\r\n        return true;\r\n    }\r\n\r\n    field = field || type || 'Object';\r\n\r\n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\r\n      return this.fetchVector(type, field);\r\n    }\r\n\r\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\r\n    let constructorData: MTProtoConstructor = null;\r\n    let fallback = false;\r\n\r\n    if(type.charAt(0) === '%') {\r\n      const checkType = type.substr(1);\r\n      constructorData = schema.constructors.find((c) => c.type === checkType);\r\n      if(!constructorData) {\r\n        throw new Error('Constructor not found for type: ' + type);\r\n      }\r\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\r\n      constructorData = schema.constructors.find((c) => c.predicate === type);\r\n      if(!constructorData) {\r\n        throw new Error('Constructor not found for predicate: ' + type);\r\n      }\r\n    } */ else {\r\n      const constructorCmp = this.readInt(field + '[id]');\r\n\r\n      if(constructorCmp === gzipPacked) { // Gzip packed\r\n        const compressed = this.fetchBytes(field + '[packed_string]');\r\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\r\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\r\n\r\n        return newDeserializer.fetchObject(type, field);\r\n      }\r\n\r\n      if(constructorCmp === vector) {\r\n        return this.fetchVector(type, field);\r\n      }\r\n\r\n      let index = schema.constructorsIndex;\r\n      if(!index) {\r\n        schema.constructorsIndex = index = {};\r\n        for(let i = 0, len = schema.constructors.length; i < len; ++i) {\r\n          index[schema.constructors[i].id] = i;\r\n        }\r\n      }\r\n\r\n      const i = index[constructorCmp];\r\n      if(i !== undefined) {\r\n        constructorData = schema.constructors[i];\r\n      }\r\n\r\n      if(!constructorData && this.mtproto) {\r\n        const schemaFallback = Schema.API;\r\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; ++i) {\r\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\r\n            constructorData = schemaFallback.constructors[i];\r\n\r\n            delete this.mtproto;\r\n            fallback = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(!constructorData) {\r\n        console.error('Constructor not found:', constructorCmp);\r\n\r\n        let int1: number, int2: number;\r\n        try {\r\n          int1 = this.fetchInt(field);\r\n          int2 = this.fetchInt(field);\r\n        } catch(err) {\r\n\r\n        }\r\n\r\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\r\n      }\r\n    }\r\n\r\n    const predicate = constructorData.predicate;\r\n\r\n    const result: any = {'_': predicate};\r\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\r\n    if(this.override[overrideKey]) {\r\n      this.override[overrideKey](result, field + '[' + predicate + ']');\r\n    } else {\r\n      // * will use local flags storage to avoid passing 'flags' property anywhere\r\n      let flagsHandler: {[name: string]: number} = {};\r\n      for(let i = 0, len = constructorData.params.length; i < len; ++i) {\r\n        const param = constructorData.params[i];\r\n        let type = param.type;\r\n\r\n        const isFlagHandler = type === '#';\r\n        if(isFlagHandler) {\r\n          result.pFlags ??= {};\r\n          (flagsHandler ??= {})[param.name] = 0;\r\n        }\r\n\r\n        const isCond = type.indexOf('?') !== -1;\r\n        if(isCond) {\r\n          const condType = type.split('?');\r\n          const fieldBit = condType[0].split('.');\r\n\r\n          if(!(flagsHandler[fieldBit[0]] & (1 << +fieldBit[1]))) {\r\n            continue;\r\n          }\r\n\r\n          type = condType[1];\r\n        }\r\n\r\n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\r\n\r\n        if(isCond && type === 'true') {\r\n          result.pFlags[param.name] = value;\r\n        } else {\r\n          (isFlagHandler ? flagsHandler : result)[param.name] = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(fallback) {\r\n      this.mtproto = true;\r\n    }\r\n\r\n    if(type === 'JSONValue') {\r\n      return this.formatJSONValue(result);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private formatJSONValue(jsonValue: JSONValue): any {\r\n    if(!jsonValue._) return jsonValue;\r\n    switch(jsonValue._) {\r\n      case 'jsonNull':\r\n        return null;\r\n      case 'jsonObject': {\r\n        const out: any = {};\r\n        const objectValues = jsonValue.value;\r\n        for(let i = 0, length = objectValues.length; i < length; ++i) {\r\n          const objectValue = objectValues[i];\r\n          out[objectValue.key] = this.formatJSONValue(objectValue.value);\r\n        }\r\n        return out;\r\n      }\r\n      default:\r\n        return jsonValue.value;\r\n    }\r\n  }\r\n\r\n  public getOffset() {\r\n    return this.offset;\r\n  }\r\n\r\n  public setOffset(offset: number) {\r\n    this.offset = offset;\r\n  }\r\n\r\n  /* public fetchEnd() {\r\n    if(this.offset !== this.byteView.length) {\r\n      throw new Error('Fetch end with non-empty buffer');\r\n    }\r\n\r\n    return true;\r\n  } */\r\n}\r\n\r\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\r\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\r\nexport {TLDeserialization, TLSerialization};\r\n","import randomize from '../array/randomize';\r\nimport bufferConcats from './bufferConcats';\r\n\r\nexport default function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\r\n  bytes: T,\r\n  blockSize: number = 16,\r\n  zeroes?: boolean,\r\n  blockSizeAsTotalLength = false,\r\n  prepend = false\r\n): T {\r\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\r\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\r\n  if(needPadding > 0 && needPadding < blockSize) {\r\n    // //console.log('addPadding()', len, blockSize, needPadding);\r\n    const padding = new Uint8Array(needPadding);\r\n    if(zeroes) {\r\n      for(let i = 0; i < needPadding; ++i) {\r\n        padding[i] = 0;\r\n      }\r\n    } else {\r\n      randomize(padding);\r\n    }\r\n\r\n    if(bytes instanceof ArrayBuffer) {\r\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\r\n    } else if(bytes instanceof Uint8Array) {\r\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\r\n    } else {\r\n      // @ts-ignore\r\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\r\n    }\r\n  }\r\n\r\n  return bytes;\r\n}\r\n","import addPadding from '../bytes/addPadding';\r\nimport bigInt from 'big-integer';\r\nimport {bigIntToBytes} from '../bigInt/bigIntConversion';\r\n\r\nexport default function longToBytes(sLong: string) {\r\n  const bigIntBytes = bigIntToBytes(bigInt(sLong)).reverse();\r\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\r\n  // console.log('longToBytes', bytes, bigIntBytes);\r\n\r\n  return bytes;\r\n}\r\n","export default function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  if(len !== bytes2.length) {\r\n    return false;\r\n  }\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    if(bytes1[i] !== bytes2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n","export default function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\r\n  if(bytes instanceof Uint8Array) {\r\n    return bytes;\r\n  } else if(typeof(bytes) === 'string') {\r\n    return new TextEncoder().encode(bytes);\r\n  }\r\n\r\n  return new Uint8Array(bytes);\r\n}\r\n","import bigInt from 'big-integer';\r\n\r\nexport default function sortLongsArray(arr: string[]) {\r\n  return arr.map((long) => {\r\n    return bigInt(long);\r\n  }).sort((a, b) => {\r\n    return a.compare(b);\r\n  }).map((bigInt) => {\r\n    return bigInt.toString(10);\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {TLDeserialization, TLSerialization} from './tl_utils';\r\nimport CryptoWorker from '../crypto/cryptoMessagePort';\r\nimport sessionStorage from '../sessionStorage';\r\nimport Schema from './schema';\r\nimport {NetworkerFactory} from './networkerFactory';\r\nimport {logger, LogTypes} from '../logger';\r\nimport {InvokeApiOptions} from '../../types';\r\nimport longToBytes from '../../helpers/long/longToBytes';\r\nimport MTTransport from './transports/transport';\r\nimport {nextRandomUint, randomLong} from '../../helpers/random';\r\nimport App from '../../config/app';\r\nimport DEBUG from '../../config/debug';\r\nimport Modes from '../../config/modes';\r\nimport noop from '../../helpers/noop';\r\nimport HTTP from './transports/http';\r\nimport type TcpObfuscated from './transports/tcpObfuscated';\r\nimport bigInt from 'big-integer';\r\nimport {ConnectionStatus} from './connectionStatus';\r\nimport ctx from '../../environment/ctx';\r\nimport bufferConcats from '../../helpers/bytes/bufferConcats';\r\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport convertToUint8Array from '../../helpers/bytes/convertToUint8Array';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport sortLongsArray from '../../helpers/long/sortLongsArray';\r\nimport randomize from '../../helpers/array/randomize';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport {TimeManager} from './timeManager';\r\n\r\n// console.error('networker included!', new Error().stack);\r\n\r\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\r\n  noResponse: true, // http_wait\r\n  longPoll: true,\r\n\r\n  notContentRelated: true, // ACK\r\n  noSchedule: true,\r\n  // withResult: true,\r\n  messageId: MTLong,\r\n}>;\r\n\r\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\r\n  msg_id: MTLong,\r\n  seq_no: number,\r\n  body?: Uint8Array | number[],\r\n  isAPI?: boolean,\r\n  // only these four are important\r\n\r\n  acked?: boolean,\r\n\r\n  deferred?: CancellablePromise<void>,\r\n\r\n  container?: boolean,\r\n  inner?: MTLong[],\r\n\r\n  // below - options\r\n\r\n  notContentRelated?: true,\r\n  noSchedule?: true,\r\n\r\n  resultType?: string,\r\n\r\n  longPoll?: true,\r\n  noResponse?: true, // only with http (http_wait for longPoll)\r\n};\r\n\r\nconst DRAIN_TIMEOUT = 10000;\r\nconst delays: {\r\n  [k in 'client' | 'file']: {\r\n    disconnectDelayMin: number,\r\n    disconnectDelayMax: number,\r\n    pingInterval: number,\r\n    pingMaxTime: number,\r\n    connectionTimeout: number\r\n  }\r\n} = {\r\n  client: {\r\n    disconnectDelayMin: 7,\r\n    disconnectDelayMax: 20,\r\n    pingInterval: 2000,\r\n    pingMaxTime: 5,\r\n    connectionTimeout: 5000\r\n  },\r\n  file: {\r\n    disconnectDelayMin: 10,\r\n    disconnectDelayMax: 24,\r\n    pingInterval: 3000,\r\n    pingMaxTime: 7,\r\n    connectionTimeout: 7500\r\n  }\r\n};\r\nconst RESEND_OPTIONS: MTMessageOptions = {\r\n  noSchedule: true,\r\n  notContentRelated: true\r\n};\r\nlet invokeAfterMsgConstructor: number;\r\nlet networkerTempId = 0;\r\n\r\nexport default class MTPNetworker {\r\n  private authKeyUint8: Uint8Array;\r\n\r\n  public isFileNetworker: boolean;\r\n  private isFileUpload: boolean;\r\n  private isFileDownload: boolean;\r\n\r\n  private lastServerMessages: Array<MTLong> = [];\r\n\r\n  private sentMessages: {\r\n    [msgId: MTLong]: MTMessage\r\n  } = {};\r\n\r\n  private pendingMessages: {[msgId: MTLong]: number} = {};\r\n  private pendingAcks: Array<MTLong> = [];\r\n  private pendingResendReq: MTLong[] = [];\r\n  // private pendingResendAnsReq: MTLong[] = [];\r\n  public connectionInited: boolean;\r\n\r\n  private nextReqTimeout: number;\r\n  private nextReq: number = 0;\r\n\r\n  // HTTP-only\r\n  private longPollInterval: number;\r\n  private longPollPending: number;\r\n  private checkConnectionRetryAt: number;\r\n  private checkConnectionTimeout: number;\r\n  private checkConnectionPeriod = 0;\r\n  private sleepAfter: number;\r\n  private offline = false;\r\n  private sendingLongPoll: boolean;\r\n\r\n  private seqNo: number;\r\n  private prevSessionId: Uint8Array;\r\n  private sessionId: Uint8Array;\r\n  private serverSalt: Uint8Array;\r\n\r\n  private lastResendReq: {\r\n    reqMsgId: MTLong,\r\n    msgIds: MTPNetworker['pendingResendReq']\r\n  };\r\n  // private lastResendAnsReq: MTPNetworker['lastResendReq'];\r\n\r\n  private name: string;\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  public isOnline = false;\r\n  private status: ConnectionStatus = ConnectionStatus.Closed;\r\n  private lastResponseTime = 0;\r\n\r\n  private debug = DEBUG /* && false */ || Modes.debug;\r\n\r\n  public activeRequests = 0;\r\n\r\n  public onDrain: () => void;\r\n  private onDrainTimeout: number;\r\n\r\n  public transport: MTTransport;\r\n\r\n  // WS-only\r\n  private pingDelayDisconnectDeferred: CancellablePromise<string>;\r\n  private pingPromise: Promise<void>;\r\n  // private pingInterval: number;\r\n  private lastPingTime: number;\r\n  private lastPingStartTime: number;\r\n  private lastPingDelayDisconnectId: string;\r\n\r\n  // public onConnectionStatusChange: (online: boolean) => void;\r\n\r\n  // private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\r\n\r\n  private delays: typeof delays[keyof typeof delays];\r\n  // private getNewTimeOffset: boolean;\r\n\r\n  constructor(\r\n    private networkerFactory: NetworkerFactory,\r\n    private timeManager: TimeManager,\r\n    public dcId: number,\r\n    private authKey: Uint8Array,\r\n    private authKeyId: Uint8Array,\r\n    serverSalt: Uint8Array,\r\n    options: InvokeApiOptions = {}\r\n  ) {\r\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\r\n    this.serverSalt = convertToUint8Array(serverSalt);\r\n\r\n    this.isFileUpload = !!options.fileUpload;\r\n    this.isFileDownload = !!options.fileDownload;\r\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\r\n    this.delays = this.isFileNetworker ? delays.file : delays.client;\r\n\r\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\r\n    this.name = 'NET-' + dcId + suffix;\r\n    // this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\r\n    this.log = logger(this.name + (suffix ? '' : '-C') + '-' + networkerTempId++, LogTypes.Log/*  | LogTypes.Debug */ | LogTypes.Error | LogTypes.Warn);\r\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\r\n\r\n    // Test resend after bad_server_salt\r\n    /* if(this.dcId === 2 && this.upload) {\r\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\r\n      this.serverSalt[0] = 0;\r\n    } */\r\n\r\n    this.updateSession();\r\n\r\n    // if(!NetworkerFactory.offlineInited) {\r\n    //   NetworkerFactory.offlineInited = true;\r\n    //   /* rootScope.offline = true\r\n    //   rootScope.offlineConnecting = true */\r\n    // }\r\n  }\r\n\r\n  private updateSession() {\r\n    this.seqNo = 0;\r\n    this.prevSessionId = this.sessionId;\r\n    this.sessionId = randomize(new Uint8Array(8));\r\n  }\r\n\r\n  /* private clearContainers() {\r\n    for(const messageId in this.sentMessages) {\r\n      const message = this.sentMessages[messageId];\r\n      if(message.container) {\r\n        delete this.sentMessages[messageId];\r\n      }\r\n    }\r\n  } */\r\n\r\n  private updateSentMessage(sentMessageId: string) {\r\n    const sentMessage = this.sentMessages[sentMessageId];\r\n    if(!sentMessage) {\r\n      return false;\r\n    }\r\n\r\n    if(sentMessage.container) {\r\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\r\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\r\n        if(!innerSentMessage) {\r\n          sentMessage.inner.splice(idx, 1);\r\n        } else {\r\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\r\n        }\r\n      });\r\n    }\r\n\r\n    sentMessage.msg_id = this.timeManager.generateId();\r\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated || sentMessage.container);\r\n\r\n    if(this.debug) {\r\n      this.log(`updateSentMessage, old=${sentMessageId}, new=${sentMessage.msg_id}`);\r\n    }\r\n\r\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\r\n    delete this.sentMessages[sentMessageId];\r\n\r\n    return sentMessage;\r\n  }\r\n\r\n  private generateSeqNo(notContentRelated?: boolean) {\r\n    let seqNo = this.seqNo * 2;\r\n\r\n    if(!notContentRelated) {\r\n      seqNo++;\r\n      this.seqNo++;\r\n    }\r\n\r\n    return seqNo;\r\n  }\r\n\r\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\r\n    const serializer = new TLSerialization({mtproto: true});\r\n\r\n    serializer.storeMethod(method, params);\r\n\r\n    const messageId = this.timeManager.generateId();\r\n    const seqNo = this.generateSeqNo();\r\n    const message = {\r\n      msg_id: messageId,\r\n      seq_no: seqNo,\r\n      body: serializer.getBytes(true)\r\n    };\r\n\r\n    if(Modes.debug) {\r\n      this.log('MT call', method, params, messageId, seqNo);\r\n    }\r\n\r\n    return this.pushMessage(message, options);\r\n  }\r\n\r\n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\r\n    const serializer = new TLSerialization({mtproto: true});\r\n    serializer.storeObject(object, 'Object');\r\n\r\n    const messageId = this.timeManager.generateId();\r\n    const seqNo = this.generateSeqNo(options.notContentRelated);\r\n    const message = {\r\n      msg_id: messageId,\r\n      seq_no: seqNo,\r\n      body: serializer.getBytes(true)\r\n    };\r\n\r\n    if(Modes.debug) {\r\n      this.log('MT message', object, messageId, seqNo);\r\n    }\r\n\r\n    return this.pushMessage(message, options);\r\n  }\r\n\r\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\r\n    const serializer = new TLSerialization(options);\r\n\r\n    if(!this.connectionInited) { // this will call once for each new session\r\n      // /////this.log('Wrap api call !this.connectionInited');\r\n\r\n      const invokeWithLayer = Schema.API.methods.find((m) => m.method === 'invokeWithLayer');\r\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\r\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\r\n\r\n      // @ts-ignore\r\n      serializer.storeInt(Schema.layer, 'layer');\r\n\r\n      const initConnection = Schema.API.methods.find((m) => m.method === 'initConnection');\r\n      if(!initConnection) throw new Error('no initConnection!');\r\n\r\n      serializer.storeInt(+initConnection.id, 'initConnection');\r\n      serializer.storeInt(0x0, 'flags');\r\n      serializer.storeInt(App.id, 'api_id');\r\n      serializer.storeString(getEnvironment().USER_AGENT || 'Unknown UserAgent', 'device_model');\r\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\r\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\r\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\r\n      serializer.storeString(App.langPack, 'lang_pack');\r\n      serializer.storeString(this.networkerFactory.language, 'lang_code');\r\n      // serializer.storeInt(0x0, 'proxy');\r\n      /* serializer.storeMethod('initConnection', {\r\n        'flags': 0,\r\n        'api_id': App.id,\r\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\r\n        'system_version': navigator.platform || 'Unknown Platform',\r\n        'app_version': App.version,\r\n        'system_lang_code': navigator.language || 'en',\r\n        'lang_pack': '',\r\n        'lang_code': navigator.language || 'en'\r\n      }); */\r\n    }\r\n\r\n    if(options.afterMessageId) {\r\n      if(invokeAfterMsgConstructor === undefined) {\r\n        const m = Schema.API.methods.find((m) => m.method === 'invokeAfterMsg');\r\n        invokeAfterMsgConstructor = m ? +m.id : 0;\r\n      }\r\n\r\n      if(invokeAfterMsgConstructor) {\r\n        // if(this.debug) {\r\n        //   this.log('invokeApi: store invokeAfterMsg');\r\n        // }\r\n\r\n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\r\n        serializer.storeLong(options.afterMessageId, 'msg_id');\r\n      } else {\r\n        this.log.error('no invokeAfterMsg!');\r\n      }\r\n    }\r\n\r\n    options.resultType = serializer.storeMethod(method, params);\r\n\r\n    /* if(method === 'account.updateNotifySettings') {\r\n      this.log('api call body:', serializer.getBytes(true));\r\n    } */\r\n\r\n    const messageId = this.timeManager.generateId();\r\n    const seqNo = this.generateSeqNo();\r\n    const message = {\r\n      msg_id: messageId,\r\n      seq_no: seqNo,\r\n      body: serializer.getBytes(true),\r\n      isAPI: true\r\n    };\r\n\r\n    if(Modes.debug/*  || true */) {\r\n      this.log('Api call', method, message, params, options);\r\n    } else if(this.debug) {\r\n      this.log('Api call', method, params, options);\r\n    }\r\n\r\n    return this.pushMessage(message, options);\r\n  }\r\n\r\n  public changeTransport(transport?: MTTransport) {\r\n    const oldTransport = this.transport;\r\n    if(oldTransport) {\r\n      oldTransport.destroy();\r\n\r\n      if(this.nextReqTimeout) {\r\n        clearTimeout(this.nextReqTimeout);\r\n        this.nextReqTimeout = 0;\r\n        this.nextReq = 0;\r\n      }\r\n\r\n      this.connectionInited = false;\r\n\r\n      if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n        if(this.longPollInterval !== undefined) {\r\n          clearInterval(this.longPollInterval);\r\n          this.longPollInterval = undefined;\r\n        }\r\n\r\n        this.clearCheckConnectionTimeout();\r\n      }\r\n    }\r\n\r\n    this.log('change transport', transport, oldTransport);\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_WS) {\r\n      this.clearPingDelayDisconnect();\r\n\r\n      // if(this.pingInterval !== undefined) {\r\n      //   clearInterval(this.pingInterval);\r\n      //   this.pingInterval = undefined;\r\n      // }\r\n\r\n      // this.clearPing();\r\n    }\r\n\r\n    this.transport = transport;\r\n    if(!transport) {\r\n      return;\r\n    }\r\n\r\n    transport.networker = this;\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || transport instanceof HTTP) {\r\n        this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\r\n        this.checkLongPoll();\r\n        this.checkConnection('changed transport');\r\n      }\r\n    }\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_WS) {\r\n      // * handle outcoming dead socket, server will close the connection\r\n      if((transport as TcpObfuscated).connection) {\r\n        // this.sendPingDelayDisconnect();\r\n\r\n        if(transport.connected) {\r\n          this.setConnectionStatus(ConnectionStatus.Connected);\r\n        }\r\n\r\n        // this.pingInterval = ctx.setInterval(this.sendPing, PING_INTERVAL);\r\n        // this.sendPing();\r\n      }\r\n    }\r\n\r\n    this.resend();\r\n  }\r\n\r\n  public destroy() {\r\n    this.log('destroy');\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    if((this.transport as TcpObfuscated).reconnect) {\r\n      (this.transport as TcpObfuscated).reconnect();\r\n    } else {\r\n      this.resend();\r\n    }\r\n  }\r\n\r\n  public forceReconnect() {\r\n    if((this.transport as TcpObfuscated).forceReconnect) {\r\n      (this.transport as TcpObfuscated).forceReconnect();\r\n    } else {\r\n      this.checkConnection('force reconnect');\r\n    }\r\n  }\r\n\r\n  /* private clearPing() {\r\n    if(this.pingPromise) {\r\n      this.pingPromise = undefined;\r\n    }\r\n\r\n    this.lastPingTime = undefined;\r\n  }\r\n\r\n  private sendPing = () => {\r\n    // return;\r\n\r\n    // if(!(this.transport as TcpObfuscated).connected) {\r\n    //   this.clearPing();\r\n    //   return;\r\n    // }\r\n\r\n    if(this.pingPromise) {\r\n      return;\r\n    }\r\n\r\n    const startTime = Date.now();\r\n    this.log('sendPing: ping', startTime);\r\n    const promise = this.pingPromise = this.wrapMtpCall('ping', {\r\n      ping_id: randomLong()\r\n    }, {\r\n      notContentRelated: true\r\n    }).then(() => {\r\n      const elapsedTime = Date.now() - startTime;\r\n      this.lastPingTime = elapsedTime / 1000;\r\n      this.log('sendPing: pong', elapsedTime);\r\n\r\n      setTimeout(() => {\r\n        if(this.pingPromise !== promise) {\r\n          return;\r\n        }\r\n\r\n        this.pingPromise = undefined;\r\n        this.sendPing();\r\n      }, Math.max(0, PING_INTERVAL - elapsedTime));\r\n    });\r\n  }; */\r\n\r\n  private clearPingDelayDisconnect() {\r\n    const deferred = this.pingDelayDisconnectDeferred;\r\n    this.pingDelayDisconnectDeferred = undefined;\r\n    this.lastPingDelayDisconnectId = undefined;\r\n\r\n    if(deferred) {\r\n      deferred.reject();\r\n    }\r\n  }\r\n\r\n  private sendPingDelayDisconnect = () => {\r\n    // return;\r\n\r\n    if(this.pingDelayDisconnectDeferred || !this.transport || !this.transport.connected) return;\r\n\r\n    /* if(!this.isOnline) {\r\n      if((this.transport as TcpObfuscated).connected) {\r\n        (this.transport as TcpObfuscated).connection.close();\r\n      }\r\n\r\n      return;\r\n    } */\r\n\r\n    const deferred = this.pingDelayDisconnectDeferred = deferredPromise();\r\n    const delays = this.delays;\r\n    const pingMaxTime = this.delays.pingMaxTime;\r\n    const lastPingTime = Math.min(this.lastPingTime ?? 0, pingMaxTime);\r\n    const disconnectDelay = Math.round(delays.disconnectDelayMin + lastPingTime / pingMaxTime * (delays.disconnectDelayMax - delays.disconnectDelayMin));\r\n    const timeoutTime = disconnectDelay * 1000;\r\n    const startTime = this.lastPingStartTime = Date.now();\r\n    const pingId = this.lastPingDelayDisconnectId = randomLong();\r\n    const options: MTMessageOptions = {notContentRelated: true};\r\n    this.wrapMtpCall('ping_delay_disconnect', {\r\n      ping_id: pingId,\r\n      disconnect_delay: disconnectDelay\r\n    }, options);\r\n\r\n    const log = this.log.bindPrefix('sendPingDelayDisconnect');\r\n    this.debug && log.debug(`ping, timeout=${timeoutTime}, lastPingTime=${this.lastPingTime}, msgId=${options.messageId}, pingId=${pingId}`);\r\n    const rejectTimeout = ctx.setTimeout(deferred.reject.bind(deferred), timeoutTime);\r\n\r\n    const onResolved = (reason: string) => {\r\n      clearTimeout(rejectTimeout);\r\n      const elapsedTime = Date.now() - startTime;\r\n      this.lastPingTime = elapsedTime / 1000;\r\n      this.debug && log.debug(`pong, reason='${reason}', time=${lastPingTime}, msgId=${options.messageId}`);\r\n      if(elapsedTime > timeoutTime) {\r\n        throw undefined;\r\n      } else {\r\n        return pause(Math.max(0, this.delays.pingInterval - elapsedTime/* timeoutTime - elapsedTime - PING_INTERVAL */));\r\n      }\r\n    };\r\n\r\n    const onTimeout = () => {\r\n      clearTimeout(rejectTimeout);\r\n      const transport = this.transport as TcpObfuscated;\r\n      if(this.pingDelayDisconnectDeferred !== deferred || !transport?.connection) {\r\n        return;\r\n      }\r\n\r\n      log.error('catch, closing connection', this.lastPingTime, options.messageId);\r\n      transport.connection.close();\r\n    };\r\n\r\n    const onFinally = () => {\r\n      if(this.pingDelayDisconnectDeferred !== deferred) {\r\n        return;\r\n      }\r\n\r\n      this.pingDelayDisconnectDeferred = undefined;\r\n      this.sendPingDelayDisconnect();\r\n    };\r\n\r\n    deferred\r\n    .then(onResolved)\r\n    .catch(onTimeout)\r\n    .finally(onFinally);\r\n  };\r\n\r\n  private checkLongPoll = () => {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    const isClean = this.cleanupSent();\r\n    // this.log.error('Check lp', this.longPollPending, this.dcId, isClean, this);\r\n    if((this.longPollPending && Date.now() < this.longPollPending) ||\r\n      this.offline ||\r\n      this.isStopped() ||\r\n      this.isFileNetworker) {\r\n      // this.log('No lp this time');\r\n      return false;\r\n    }\r\n\r\n    sessionStorage.get('dc').then((baseDcId) => {\r\n      if(isClean && (\r\n        baseDcId !== this.dcId ||\r\n          (this.sleepAfter && Date.now() > this.sleepAfter)\r\n      )) {\r\n        // console.warn(dT(), 'Send long-poll for DC is delayed', this.dcId, this.sleepAfter);\r\n        return;\r\n      }\r\n\r\n      this.sendLongPoll();\r\n    });\r\n  };\r\n\r\n  private sendLongPoll() {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    if(this.sendingLongPoll) return;\r\n    this.sendingLongPoll = true;\r\n    const maxWait = 25000;\r\n\r\n    this.longPollPending = Date.now() + maxWait;\r\n    this.debug && this.log.debug('sendLongPoll', this.longPollPending);\r\n\r\n    this.wrapMtpCall('http_wait', {\r\n      max_delay: 500,\r\n      wait_after: 150,\r\n      max_wait: maxWait\r\n    }, {\r\n      noResponse: true,\r\n      // notContentRelated: true,\r\n      longPoll: true\r\n    }).then(() => {\r\n      this.longPollPending = undefined;\r\n      setTimeout(this.checkLongPoll, 0);\r\n    }, (error: ErrorEvent) => {\r\n      this.log('Long-poll failed', error);\r\n    }).finally(() => {\r\n      this.sendingLongPoll = undefined;\r\n    });\r\n  }\r\n\r\n  private checkConnection = (event: Event | string) => {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    this.debug && this.log('Check connection', event);\r\n    this.clearCheckConnectionTimeout();\r\n\r\n    if(!this.transport) {\r\n      this.log.warn('No transport for checkConnection');\r\n      return;\r\n    }\r\n\r\n    const serializer = new TLSerialization({mtproto: true});\r\n    const pingId = randomLong();\r\n\r\n    serializer.storeMethod('ping', {\r\n      ping_id: pingId\r\n    });\r\n\r\n    const pingMessage = {\r\n      msg_id: this.timeManager.generateId(),\r\n      seq_no: this.generateSeqNo(true),\r\n      body: serializer.getBytes(true)\r\n    };\r\n\r\n    if(this.offline) {\r\n      this.setConnectionStatus(ConnectionStatus.Connecting);\r\n    }\r\n\r\n    this.sendEncryptedRequest(pingMessage).then(() => {\r\n      this.toggleOffline(false);\r\n    }, () => {\r\n      this.debug && this.log('Delay', this.checkConnectionPeriod * 1000);\r\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\r\n      this.checkConnectionPeriod = Math.min(60, this.checkConnectionPeriod * 1.5);\r\n    });\r\n  };\r\n\r\n  private clearCheckConnectionTimeout() {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    if(this.checkConnectionTimeout !== undefined) {\r\n      clearTimeout(this.checkConnectionTimeout);\r\n      this.checkConnectionTimeout = undefined;\r\n    }\r\n  }\r\n\r\n  private toggleOffline(offline: boolean) {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n\r\n    if(this.offline !== offline) {\r\n      this.offline = offline;\r\n\r\n      this.clearCheckConnectionTimeout();\r\n      if(offline) {\r\n        clearTimeout(this.nextReqTimeout);\r\n        this.nextReqTimeout = 0;\r\n        this.nextReq = 0;\r\n\r\n        if(this.checkConnectionPeriod < 1.5) {\r\n          this.checkConnectionPeriod = 0;\r\n        }\r\n\r\n        const delay = this.checkConnectionPeriod * 1000 | 0;\r\n        this.checkConnectionRetryAt = Date.now() + delay;\r\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\r\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOfline'), delay);\r\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5);\r\n\r\n        if(!import.meta.env.VITE_MTPROTO_WORKER) {\r\n          document.body.addEventListener('online', this.checkConnection, false);\r\n          document.body.addEventListener('focus', this.checkConnection, false);\r\n        }\r\n      } else {\r\n        this.setConnectionStatus(ConnectionStatus.Connected);\r\n        this.checkLongPoll();\r\n\r\n        this.scheduleRequest();\r\n\r\n        if(!import.meta.env.VITE_MTPROTO_WORKER) {\r\n          document.body.removeEventListener('online', this.checkConnection);\r\n          document.body.removeEventListener('focus', this.checkConnection);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setConnectionStatus(offline ? ConnectionStatus.Closed : ConnectionStatus.Connected, offline ? this.checkConnectionRetryAt : undefined);\r\n  }\r\n\r\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return;\r\n    }\r\n    // let timeout = setTimeout(() => {\r\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\r\n    // }, 5e3);\r\n\r\n    promise.then((result) => {\r\n      this.toggleOffline(false);\r\n      // this.log('parse for', message);\r\n      return this.parseResponse(result).then((response) => {\r\n        this.debug && this.log.debug('Server response', response);\r\n\r\n        this.processMessage(response.response, response.messageId, response.sessionId);\r\n\r\n        this.checkLongPoll();\r\n        this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\r\n\r\n        return true;\r\n      });\r\n    }, (error) => {\r\n      this.log.error('Encrypted request failed', error, message);\r\n\r\n      this.pushResend(message.msg_id);\r\n      this.toggleOffline(true);\r\n\r\n      return false;\r\n    }).then((shouldResolve) => {\r\n      // clearTimeout(timeout);\r\n      const sentMessages = this.sentMessages;\r\n      noResponseMsgs.forEach((msgId) => {\r\n        const sentMessage = sentMessages[msgId];\r\n        if(sentMessage) {\r\n          const deferred = sentMessage.deferred;\r\n          delete sentMessages[msgId];\r\n          delete this.pendingMessages[msgId];\r\n          shouldResolve ? deferred.resolve() : deferred.reject();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // тут можно сделать таймаут и выводить дисконнект\r\n  private pushMessage(message: {\r\n    msg_id: string,\r\n    seq_no: number,\r\n    body: Uint8Array | number[],\r\n    isAPI?: boolean\r\n  }, options: MTMessageOptions) {\r\n    let promise: CancellablePromise<void>;\r\n    if(!options.notContentRelated || options.noResponse) {\r\n      promise = deferredPromise();\r\n    }\r\n\r\n    this.sentMessages[message.msg_id] = Object.assign(\r\n      message,\r\n      options,\r\n      promise ? {deferred: promise} : undefined\r\n    );\r\n\r\n    // this.log.error('Networker pushMessage:', this.sentMessages[message.msg_id]);\r\n\r\n    this.pendingMessages[message.msg_id] = 0;\r\n\r\n    if(!options.noSchedule) {\r\n      this.scheduleRequest();\r\n    }\r\n\r\n    if(isObject(options)) {\r\n      options.messageId = message.msg_id;\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public attachPromise(promise: Promise<any>, message: MTMessage) {\r\n    const canIncrement = true;\r\n    const timeout = setTimeout(() => {\r\n      if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < this.delays.connectionTimeout) {\r\n        return;\r\n      }\r\n\r\n      this.log.error('timeout', message);\r\n      if(this.isOnline) {\r\n        this.setConnectionStatus(ConnectionStatus.TimedOut);\r\n      }\r\n\r\n      /* this.getEncryptedOutput(message).then((bytes) => {\r\n        this.log.error('timeout encrypted', bytes);\r\n      }); */\r\n    }, this.delays.connectionTimeout);\r\n\r\n    promise.catch(noop).finally(() => {\r\n      clearTimeout(timeout);\r\n      this.setConnectionStatus(ConnectionStatus.Connected);\r\n\r\n      if(canIncrement) {\r\n        --this.activeRequests;\r\n        this.setDrainTimeout();\r\n      }\r\n    });\r\n\r\n    if(canIncrement) {\r\n      ++this.activeRequests;\r\n      if(this.onDrainTimeout !== undefined) {\r\n        clearTimeout(this.onDrainTimeout);\r\n        this.onDrainTimeout = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setDrainTimeout() {\r\n    if(!this.activeRequests && this.onDrain && this.onDrainTimeout === undefined) {\r\n      this.onDrainTimeout = ctx.setTimeout(() => {\r\n        this.onDrainTimeout = undefined;\r\n        this.log('drain');\r\n        this.onDrain();\r\n      }, DRAIN_TIMEOUT);\r\n    }\r\n  }\r\n\r\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number) {\r\n    const isOnline = status === ConnectionStatus.Connected;\r\n    const willChange = this.status !== status;\r\n    this.isOnline = isOnline;\r\n    this.status = status;\r\n\r\n    if(willChange) {\r\n      if(this.networkerFactory.onConnectionStatusChange) {\r\n        this.networkerFactory.onConnectionStatusChange({\r\n          _: 'networkerStatus',\r\n          status,\r\n          dcId: this.dcId,\r\n          name: this.name,\r\n          isFileNetworker: this.isFileNetworker,\r\n          isFileDownload: this.isFileDownload,\r\n          isFileUpload: this.isFileUpload,\r\n          retryAt\r\n        });\r\n      }\r\n\r\n      if(this.isOnline) {\r\n        this.scheduleRequest();\r\n      }\r\n\r\n      if((this.transport as TcpObfuscated)?.connection) {\r\n        this.clearPingDelayDisconnect();\r\n        this.sendPingDelayDisconnect();\r\n      }\r\n\r\n      // this.getNewTimeOffset = true;\r\n    }\r\n    /* if(this.onConnectionStatusChange) {\r\n      this.onConnectionStatusChange(this.isOnline);\r\n    } */\r\n  }\r\n\r\n  private pushResend(messageId: string, delay = 100) {\r\n    const value = delay ? Date.now() + delay : 0;\r\n    const sentMessage = this.sentMessages[messageId];\r\n    if(sentMessage.container) {\r\n      for(const innerMsgId of sentMessage.inner) {\r\n        this.pendingMessages[innerMsgId] = value;\r\n      }\r\n    } else {\r\n      this.pendingMessages[messageId] = value;\r\n    }\r\n\r\n    if(sentMessage.acked) {\r\n      this.log.error('pushResend: acked message?', sentMessage);\r\n    }\r\n\r\n    if(this.debug) {\r\n      this.log.debug('pushResend:', messageId, sentMessage, this.pendingMessages, delay);\r\n    }\r\n\r\n    this.scheduleRequest(delay);\r\n  }\r\n\r\n  // * correct, fully checked\r\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\r\n    const x = isOut ? 0 : 8;\r\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\r\n\r\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256', msgKeyLargePlain);\r\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\r\n    return msgKey;\r\n  };\r\n\r\n  // * correct, fully checked\r\n  private getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\r\n    const x = isOut ? 0 : 8;\r\n    const sha2aText = new Uint8Array(52);\r\n    const sha2bText = new Uint8Array(52);\r\n    const promises: Array<Promise<Uint8Array>> = [];\r\n\r\n    sha2aText.set(msgKey, 0);\r\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\r\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2aText));\r\n\r\n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\r\n    sha2bText.set(msgKey, 36);\r\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2bText));\r\n\r\n    return Promise.all(promises).then((results) => {\r\n      const aesKey = new Uint8Array(32);\r\n      const aesIv = new Uint8Array(32);\r\n      const sha2a = new Uint8Array(results[0]);\r\n      const sha2b = new Uint8Array(results[1]);\r\n\r\n      aesKey.set(sha2a.subarray(0, 8));\r\n      aesKey.set(sha2b.subarray(8, 24), 8);\r\n      aesKey.set(sha2a.subarray(24, 32), 24);\r\n\r\n      aesIv.set(sha2b.subarray(0, 8));\r\n      aesIv.set(sha2a.subarray(8, 24), 8);\r\n      aesIv.set(sha2b.subarray(24, 32), 24);\r\n\r\n      return [aesKey, aesIv];\r\n    });\r\n  }\r\n\r\n  public isStopped() {\r\n    return this.networkerFactory.akStopped && !this.isFileNetworker;\r\n  }\r\n\r\n  private performScheduledRequest() {\r\n    if(this.isStopped()) {\r\n      return false;\r\n    }\r\n\r\n    if(this.pendingAcks.length) {\r\n      const ackMsgIds = this.pendingAcks.slice();\r\n\r\n      // this.log('acking messages', ackMsgIDs)\r\n      this.wrapMtpMessage({\r\n        _: 'msgs_ack',\r\n        msg_ids: ackMsgIds\r\n      }, {\r\n        notContentRelated: true,\r\n        noSchedule: true\r\n      });\r\n    }\r\n\r\n    const pendingResendReqLength = this.pendingResendReq.length;\r\n    if(pendingResendReqLength) {\r\n      const options: MTMessageOptions = {...RESEND_OPTIONS};\r\n      const msgIds = this.pendingResendReq.splice(0, pendingResendReqLength);\r\n      this.wrapMtpMessage({\r\n        _: 'msg_resend_req',\r\n        msg_ids: msgIds\r\n      }, options);\r\n\r\n      this.log('resend: resending requests', options.messageId, msgIds);\r\n      /* this.lastResendReq = {\r\n        reqMsgId: options.messageId,\r\n        msgIds: msgIds\r\n      }; */\r\n\r\n      // this.pendingResendReq.length = 0;\r\n    }\r\n\r\n    // if(this.pendingResendAnsReq.length) {\r\n    //   const options: MTMessageOptions = {...RESEND_OPTIONS};\r\n    //   const msgIds = this.pendingResendAnsReq.slice();\r\n    //   this.wrapMtpMessage({\r\n    //     _: 'msg_resend_ans_req',\r\n    //     msg_ids: msgIds\r\n    //   }, options);\r\n\r\n    //   this.log('resend: requesting answers', options.messageId, msgIds);\r\n    //   this.lastResendAnsReq = {\r\n    //     reqMsgId: options.messageId,\r\n    //     msgIds: msgIds\r\n    //   };\r\n\r\n    //   // this.pendingResendAnsReq.length = 0;\r\n    // }\r\n\r\n    let outMessage: MTMessage;\r\n    const messages: typeof outMessage[] = [];\r\n\r\n    // const currentTime = Date.now();\r\n    let messagesByteLen = 0;\r\n\r\n    let hasApiCall: boolean;\r\n    let hasHttpWait: boolean;\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      hasApiCall = false;\r\n      hasHttpWait = false;\r\n    }\r\n\r\n    let lengthOverflow = false;\r\n\r\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\r\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\r\n    for(const messageId of keys) {\r\n      // const value = this.pendingMessages[messageId];\r\n\r\n      // if(!value || value <= currentTime) {\r\n      const message = this.sentMessages[messageId];\r\n      if(message && message.body) {\r\n        /* if(message.fileUpload) {\r\n            this.log('performScheduledRequest message:', message, message.body.length, (message.body as Uint8Array).byteLength, (message.body as Uint8Array).buffer.byteLength);\r\n          } */\r\n\r\n        const messageByteLength = message.body.length + 32;\r\n\r\n        if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\r\n          this.log.warn('lengthOverflow', message, messages);\r\n          lengthOverflow = true;\r\n\r\n          if(outMessage) { // if it's not a first message\r\n            break;\r\n          }\r\n        }\r\n\r\n        messages.push(message);\r\n        messagesByteLen += messageByteLength;\r\n\r\n        if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n          if(message.isAPI) {\r\n            hasApiCall = true;\r\n          } else if(message.longPoll) {\r\n            hasHttpWait = true;\r\n          }\r\n        }\r\n\r\n        outMessage = message;\r\n      } else {\r\n        // this.log(message, messageId)\r\n      }\r\n\r\n      delete this.pendingMessages[messageId];\r\n      // }\r\n    }\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\r\n        if(hasApiCall && !hasHttpWait) {\r\n          const serializer = new TLSerialization({mtproto: true});\r\n          serializer.storeMethod('http_wait', {\r\n            max_delay: 500,\r\n            wait_after: 150,\r\n            max_wait: 3000\r\n          });\r\n\r\n          messages.push({\r\n            msg_id: this.timeManager.generateId(),\r\n            seq_no: this.generateSeqNo(),\r\n            body: serializer.getBytes(true)\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!messages.length) {\r\n      // this.log('no scheduled messages')\r\n      return;\r\n    }\r\n\r\n    let noResponseMsgs: Array<string>;\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      noResponseMsgs = messages.filter((message) => message.noResponse).map((message) => message.msg_id);\r\n    }\r\n\r\n    if(messages.length > 1) {\r\n      const container = this.generateContainerMessage(messagesByteLen, messages);\r\n      outMessage = container.messageWithBody;\r\n\r\n      this.sentMessages[outMessage.msg_id] = container.message;\r\n    } else {\r\n      this.sentMessages[outMessage.msg_id] = outMessage;\r\n    }\r\n\r\n    this.pendingAcks = [];\r\n\r\n    const promise = this.sendEncryptedRequest(outMessage);\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\r\n        this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\r\n      }\r\n    }\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_WS) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_HTTP || !(this.transport instanceof HTTP)) {\r\n        this.cleanupSent(); // ! WARNING\r\n      }\r\n    }\r\n\r\n    if(lengthOverflow) {\r\n      this.scheduleRequest();\r\n    }\r\n  }\r\n\r\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\r\n    const container = new TLSerialization({\r\n      mtproto: true,\r\n      startMaxLength: messagesByteLen + 64\r\n    });\r\n\r\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\r\n    container.storeInt(messages.length, 'CONTAINER[count]');\r\n\r\n    const innerMessages: string[] = [];\r\n    messages.forEach((message, i) => {\r\n      innerMessages.push(message.msg_id);\r\n      // this.log('Pushing to container:', message.msg_id);\r\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\r\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\r\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\r\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\r\n    });\r\n\r\n    const message: MTMessage = {\r\n      msg_id: this.timeManager.generateId(),\r\n      seq_no: this.generateSeqNo(true),\r\n      container: true,\r\n      inner: innerMessages\r\n    };\r\n\r\n    if(Modes.debug/*  || true */) {\r\n      this.log.warn('Container', innerMessages, message.msg_id, message.seq_no);\r\n    }\r\n\r\n    return {\r\n      message,\r\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message)\r\n    };\r\n  }\r\n\r\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\r\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\r\n    const keyIv = await this.getAesKeyIv(msgKey, true);\r\n    // this.log('after msg key iv')\r\n\r\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\r\n    // this.log('Finish encrypt')\r\n\r\n    return {\r\n      bytes: encryptedBytes,\r\n      msgKey\r\n    };\r\n  }\r\n\r\n  private getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\r\n    // this.log('get decrypted start')\r\n    return this.getAesKeyIv(msgKey, false).then((keyIv) => {\r\n      // this.log('after msg key iv')\r\n      return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\r\n    });\r\n  }\r\n\r\n  private getEncryptedOutput(message: MTMessage) {\r\n    /* if(DEBUG) {\r\n      this.log.debug('Send encrypted', message, this.authKeyId);\r\n    } */\r\n    /* if(!this.isOnline) {\r\n      this.log('trying to send message when offline:', Object.assign({}, message));\r\n      //debugger;\r\n    } */\r\n\r\n    const data = new TLSerialization({\r\n      startMaxLength: message.body.length + 2048\r\n    });\r\n\r\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\r\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\r\n\r\n    data.storeLong(message.msg_id, 'message_id');\r\n    data.storeInt(message.seq_no, 'seq_no');\r\n\r\n    data.storeInt(message.body.length, 'message_data_length');\r\n    data.storeRawBytes(message.body, 'message_data');\r\n\r\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\r\n    const desSalt = des.fetchLong();\r\n    const desSessionId = des.fetchLong();\r\n\r\n    if(!this.isOnline) {\r\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\r\n    } */\r\n\r\n    /* const messageDataLength = message.body.length;\r\n    let canBeLength = 0; // bytes\r\n    canBeLength += 8;\r\n    canBeLength += 8;\r\n    canBeLength += 8;\r\n    canBeLength += 4;\r\n    canBeLength += 4;\r\n    canBeLength += message.body.length; */\r\n\r\n    const dataBuffer = data.getBuffer();\r\n\r\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\r\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\r\n    } */\r\n\r\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\r\n    const padding = /* (message as any).padding ||  */randomize(new Uint8Array(paddingLength))/* .fill(0) */;\r\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\r\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\r\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\r\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\r\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\r\n\r\n    // (message as any).padding = padding;\r\n\r\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\r\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\r\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\r\n\r\n    /* if(dataWithPadding.byteLength % 16) {\r\n      this.log.error('aaa', dataWithPadding, paddingLength);\r\n    }\r\n\r\n    if(message.fileUpload) {\r\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\r\n    } */\r\n\r\n    // * full next block is correct\r\n    return this.getEncryptedMessage(dataWithPadding).then((encryptedResult) => {\r\n      /* if(DEBUG) {\r\n        this.log('Got encrypted out message', encryptedResult);\r\n      } */\r\n\r\n      const request = new TLSerialization({\r\n        startMaxLength: encryptedResult.bytes.length + 256\r\n      });\r\n      request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\r\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\r\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\r\n\r\n      const requestData = request.getBytes(true);\r\n\r\n      // if(this.isFileNetworker) {\r\n      //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\r\n      //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\r\n      //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\r\n      //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\r\n      // }\r\n\r\n      return requestData;\r\n    });\r\n  }\r\n\r\n  private async sendEncryptedRequest(message: MTMessage) {\r\n    const requestData = await this.getEncryptedOutput(message);\r\n\r\n    if(!this.transport) {\r\n      this.log.error('trying to send something when offline', this.transport, this);\r\n    }\r\n\r\n    this.debug && this.log.debug('sending:', message, [message.msg_id].concat(message.inner || []), requestData.length);\r\n    const promise: Promise<Uint8Array> = this.transport ? this.transport.send(requestData) as any : Promise.reject({});\r\n    // this.debug && this.log.debug('sendEncryptedRequest: launched message into space:', message, promise);\r\n\r\n    if(!import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      return promise;\r\n    }\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_WS && !(this.transport instanceof HTTP)) {\r\n      return promise;\r\n    }\r\n\r\n    const baseError: ApiError = {\r\n      code: 406,\r\n      type: 'NETWORK_BAD_RESPONSE',\r\n      // @ts-ignore\r\n      transport: this.transport\r\n    };\r\n\r\n    return promise.then((result) => {\r\n      if(!result?.byteLength) {\r\n        throw baseError;\r\n      }\r\n\r\n      // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\r\n      return result;\r\n    }, (error) => {\r\n      if(!error.message && !error.type) {\r\n        error = Object.assign(baseError, {\r\n          type: 'NETWORK_BAD_REQUEST',\r\n          originalError: error\r\n        });\r\n      }\r\n\r\n      throw error;\r\n    });\r\n  }\r\n\r\n  public parseResponse(responseBuffer: Uint8Array) {\r\n    // const perf = performance.now();\r\n    /* if(this.debug) {\r\n      this.log.debug('Start parsing response', responseBuffer);\r\n    } */\r\n\r\n    this.lastResponseTime = Date.now();\r\n\r\n    const deserializer = new TLDeserialization(responseBuffer);\r\n\r\n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\r\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\r\n      throw new Error('[MT] Invalid server auth_key_id: ' + bytesToHex(authKeyId));\r\n    }\r\n\r\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\r\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\r\n\r\n    return this.getDecryptedMessage(msgKey, encryptedData).then((dataWithPadding) => {\r\n      // this.log('after decrypt')\r\n      return this.getMsgKey(dataWithPadding, false).then((calcMsgKey) => {\r\n        if(!bytesCmp(msgKey, calcMsgKey)) {\r\n          this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\r\n          this.updateSession(); // fix 28.01.2020\r\n          throw new Error('[MT] server msgKey mismatch, updating session');\r\n        }\r\n        // this.log('after msgKey check')\r\n\r\n        let deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\r\n\r\n        /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\r\n        const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\r\n        const messageId = deserializer.fetchLong('message_id');\r\n\r\n        if(!bytesCmp(sessionId, this.sessionId) &&\r\n          (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\r\n          this.log.warn('Sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\r\n          // this.updateSession();\r\n          // this.sessionID = sessionID;\r\n          throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\r\n        }\r\n\r\n        const seqNo = deserializer.fetchInt('seq_no');\r\n\r\n        const totalLength = dataWithPadding.byteLength;\r\n\r\n        const messageBodyLength = deserializer.fetchInt('message_data[length]');\r\n        let offset = deserializer.getOffset();\r\n\r\n        if((messageBodyLength % 4) ||\r\n          messageBodyLength > totalLength - offset) {\r\n          throw new Error('[MT] Invalid body length: ' + messageBodyLength);\r\n        }\r\n        const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\r\n\r\n        offset = deserializer.getOffset();\r\n        const paddingLength = totalLength - offset;\r\n        if(paddingLength < 12 || paddingLength > 1024) {\r\n          throw new Error('[MT] Invalid padding length: ' + paddingLength);\r\n        }\r\n\r\n        // let buffer = bytesToArrayBuffer(messageBody);\r\n        deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\r\n          mtproto: true,\r\n          override: {\r\n            mt_message: (result: any, field: string) => {\r\n              result.msg_id = deserializer.fetchLong(field + '[msg_id]');\r\n              result.seqno = deserializer.fetchInt(field + '[seqno]');\r\n              result.bytes = deserializer.fetchInt(field + '[bytes]');\r\n\r\n              const offset = deserializer.getOffset();\r\n\r\n              // self.log('mt_message!!!!!', result, field);\r\n\r\n              try {\r\n                result.body = deserializer.fetchObject('Object', field + '[body]');\r\n              } catch(e) {\r\n                this.log.error('parse error', (e as Error).message, (e as Error).stack);\r\n                result.body = {\r\n                  _: 'parse_error',\r\n                  error: e\r\n                };\r\n              }\r\n\r\n              if(deserializer.getOffset() !== offset + result.bytes) {\r\n                // console.warn(dT(), 'set offset', this.offset, offset, result.bytes)\r\n                // this.log(result)\r\n                deserializer.setOffset(offset + result.bytes);\r\n              }\r\n              // this.log('override message', result)\r\n            },\r\n            mt_rpc_result: (result: any, field: any) => {\r\n              result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\r\n\r\n              const sentMessage = this.sentMessages[result.req_msg_id];\r\n              const type = sentMessage && sentMessage.resultType || 'Object';\r\n\r\n              if(result.req_msg_id && !sentMessage) {\r\n                // console.warn(dT(), 'Result for unknown message', result);\r\n                return;\r\n              }\r\n\r\n              // deserializer.setMtproto(false);\r\n              result.result = deserializer.fetchObject(type, field + '[result]');\r\n              // deserializer.setMtproto(true);\r\n              // self.log(dT(), 'override rpc_result', sentMessage, type, result);\r\n            }\r\n          }\r\n        });\r\n\r\n        const response = deserializer.fetchObject('', 'INPUT');\r\n        // this.log.error('Parse response time:', performance.now() - perf);\r\n        return {\r\n          response,\r\n          messageId,\r\n          sessionId,\r\n          seqNo\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  private applyServerSalt(newServerSalt: string) {\r\n    const serverSalt = longToBytes(newServerSalt);\r\n\r\n    sessionStorage.set({\r\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\r\n    });\r\n\r\n    this.serverSalt = new Uint8Array(serverSalt);\r\n  }\r\n\r\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой)\r\n  public scheduleRequest(delay?: number) {\r\n    /* if(!this.isOnline) {\r\n      return;\r\n    } */\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\r\n        if(this.offline) {\r\n          this.checkConnection('forced schedule');\r\n        }\r\n\r\n        delay ||= 0; // set zero timeout to pack other messages too\r\n      }\r\n    }\r\n\r\n    const nextReq = Date.now() + (delay || 0);\r\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\r\n      // this.debug && this.log('scheduleRequest: nextReq', this.nextReq, nextReq);\r\n      return;\r\n    }\r\n\r\n    // this.debug && this.log('scheduleRequest: delay', delay);\r\n\r\n    /* if(this.nextReqTimeout) {\r\n      return;\r\n    } */\r\n\r\n    // const perf = performance.now();\r\n    if(this.nextReqTimeout) {\r\n      clearTimeout(this.nextReqTimeout);\r\n    }\r\n\r\n    const cb = () => {\r\n      // this.debug && this.log('scheduleRequest: timeout delay was:', performance.now() - perf);\r\n\r\n      this.nextReqTimeout = 0;\r\n      this.nextReq = 0;\r\n\r\n      if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n        if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\r\n          if(this.offline) {\r\n            // this.log('Cancel scheduled');\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.performScheduledRequest();\r\n    };\r\n\r\n    this.nextReq = nextReq;\r\n\r\n    if(delay !== undefined) {\r\n      this.nextReqTimeout = ctx.setTimeout(cb, delay);\r\n    } else {\r\n      cb();\r\n    }\r\n  }\r\n\r\n  private ackMessage(msgId: MTLong) {\r\n    // this.log('ack message', msgID)\r\n    this.pendingAcks.push(msgId);\r\n\r\n    let delay: number;\r\n\r\n    if(import.meta.env.VITE_MTPROTO_HAS_HTTP) {\r\n      if(!import.meta.env.VITE_MTPROTO_HAS_WS || this.transport instanceof HTTP) {\r\n        delay = 30000;\r\n      }\r\n    }\r\n\r\n    this.scheduleRequest(delay);\r\n  }\r\n\r\n  private reqResend(msgId: MTLong/* , isAnswer?: boolean */) {\r\n    if(this.debug) {\r\n      this.log.debug('Req resend', msgId/* , isAnswer */);\r\n    }\r\n\r\n    // (isAnswer ? this.pendingResendAnsReq : this.pendingResendReq).push(msgId);\r\n    this.pendingResendReq.push(msgId);\r\n    this.scheduleRequest(100);\r\n  }\r\n\r\n  public cleanupSent() {\r\n    let notEmpty = false;\r\n    const sentMessages = this.sentMessages;\r\n    // this.log('clean start', this.dcId/*, sentMessages*/)\r\n    Object.keys(sentMessages).forEach((msgId) => {\r\n      const message = sentMessages[msgId];\r\n\r\n      // this.log('clean iter', msgID, message)\r\n      if(message.notContentRelated && this.pendingMessages[msgId] === undefined) {\r\n        // this.log('clean notContentRelated', msgID)\r\n        delete sentMessages[msgId];\r\n      } else if(message.container) {\r\n        for(const innerMsgId of message.inner) {\r\n          if(sentMessages[innerMsgId] !== undefined) {\r\n            // this.log('clean failed, found', msgID, message.inner[i], sentMessages[message.inner[i]].seq_no)\r\n            notEmpty = true;\r\n            return;\r\n          }\r\n        }\r\n        // this.log('clean container', msgID)\r\n        delete sentMessages[msgId];\r\n      } else {\r\n        notEmpty = true;\r\n      }\r\n    });\r\n\r\n    return !notEmpty;\r\n  }\r\n\r\n  private processMessageAck(messageId: Long) {\r\n    const sentMessage = this.sentMessages[messageId];\r\n    if(sentMessage && !sentMessage.acked) {\r\n      // delete sentMessage.body;\r\n      sentMessage.acked = true;\r\n    }\r\n  }\r\n\r\n  private processError(rawError: {error_message: string, error_code: number}): ApiError {\r\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\r\n    rawError.error_code = rawError.error_code;\r\n\r\n    return {\r\n      code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\r\n      type: matches[1] as any || 'UNKNOWN',\r\n      description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\r\n      originalError: rawError\r\n    };\r\n  }\r\n\r\n  /**\r\n   * * только для сокета\r\n   * TODO: consider about containers resend\r\n   */\r\n  public resend() {\r\n    const sentMessages = this.sentMessages;\r\n    for(const id in sentMessages) {\r\n      const msg = sentMessages[id];\r\n      if(msg.body || msg.container) {\r\n        this.pushResend(id);\r\n      }\r\n    }\r\n\r\n    if((this.transport as TcpObfuscated).connection) {\r\n      this.clearPingDelayDisconnect();\r\n      this.sendPingDelayDisconnect();\r\n    }\r\n  }\r\n\r\n  /* public requestMessageStatus() {\r\n    const ids: string[] = [];\r\n    for(const id in this.sentMessages) {\r\n      const message = this.sentMessages[id];\r\n      if(message.isAPI && message.fileUpload) {\r\n        ids.push(message.msg_id);\r\n      }\r\n    }\r\n\r\n    this.wrapMtpMessage({\r\n      _: 'msgs_state_req',\r\n      msg_ids: ids\r\n    }, {\r\n      notContentRelated: true\r\n    }).then((res) => {\r\n      this.log('status', res);\r\n    });\r\n  } */\r\n\r\n  private applyServerTime(messageId: string) {\r\n    const serverTime = bigInt(messageId).shiftRight(32).toJSNumber();\r\n    this.log('applying server time', serverTime);\r\n    return this.timeManager.applyServerTime(serverTime);\r\n  }\r\n\r\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\r\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[]) {\r\n    if(message._ === 'messageEmpty') {\r\n      this.log.warn('processMessage: messageEmpty', message, messageId);\r\n      return;\r\n    }\r\n\r\n    // messageId = messageId.toString();\r\n\r\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\r\n    if(msgidInt % 2) {\r\n      this.log.warn('Server even message id: ', messageId, message);\r\n      return;\r\n    }\r\n\r\n    if(this.debug) {\r\n      this.log.debug('process message', message, messageId);\r\n    }\r\n\r\n    if(this.pingDelayDisconnectDeferred) {\r\n      this.pingDelayDisconnectDeferred.resolve('any message');\r\n    }\r\n\r\n    // let changedTimeOffset: boolean;\r\n    // if(this.getNewTimeOffset) {\r\n    //   changedTimeOffset = this.applyServerTime(messageId);\r\n    //   this.getNewTimeOffset = undefined;\r\n    // }\r\n\r\n    switch(message._) {\r\n      case 'msg_container': {\r\n        for(const innerMessage of message.messages) {\r\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'bad_server_salt': {\r\n        this.log('Bad server salt', message);\r\n\r\n        this.applyServerSalt(message.new_server_salt);\r\n\r\n        if(this.sentMessages[message.bad_msg_id]) {\r\n          this.pushResend(message.bad_msg_id);\r\n        }\r\n\r\n        this.ackMessage(messageId);\r\n\r\n        // simulate disconnect\r\n        /* try {\r\n          this.log('networker state:', this);\r\n          // @ts-ignore\r\n          this.transport.ws.close(1000);\r\n        } catch(err) {\r\n          this.log.error('transport', this.transport, err);\r\n        } */\r\n\r\n        break;\r\n      }\r\n\r\n      case 'bad_msg_notification': {\r\n        this.log.error('Bad msg notification', message);\r\n\r\n        switch(message.error_code) {\r\n          case 16:    // * msg_id too low\r\n          case 17:    // * msg_id too high\r\n          case 32:    // * msg_seqno too low\r\n          case 33:    // * msg_seqno too high\r\n          case 64: {  // * invalid container\r\n            // if(changedTimeOffset === undefined) {\r\n            //   changedTimeOffset = this.applyServerTime(messageId);\r\n            // }\r\n\r\n            const changedTimeOffset = this.applyServerTime(messageId);\r\n            if(message.error_code === 17 || changedTimeOffset) {\r\n              this.log('Update session');\r\n              this.updateSession();\r\n            }\r\n\r\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\r\n            if(badMessage) this.pushResend(badMessage.msg_id); // fix 23.01.2020\r\n            // this.ackMessage(messageId);\r\n          }\r\n\r\n          // * invalid container\r\n          /* case 64: {\r\n            const badMessage = this.sentMessages[message.bad_msg_id];\r\n            if(badMessage) {\r\n              for(const msgId of badMessage.inner) {\r\n                if(this.sentMessages[msgId] !== undefined) {\r\n                  this.updateSentMessage\r\n                }\r\n              }\r\n              const inner = badMessage.inner;\r\n            }\r\n          } */\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'message': {\r\n        if(this.lastServerMessages.indexOf(messageId) !== -1) {\r\n          // console.warn('[MT] Server same messageId: ', messageId)\r\n          this.ackMessage(messageId);\r\n          return;\r\n        }\r\n\r\n        this.lastServerMessages.push(messageId);\r\n        if(this.lastServerMessages.length > 100) {\r\n          this.lastServerMessages.shift();\r\n        }\r\n\r\n        this.processMessage(message.body, message.msg_id, sessionId);\r\n        break;\r\n      }\r\n\r\n      case 'new_session_created': {\r\n        this.ackMessage(messageId);\r\n\r\n        if(this.debug) {\r\n          this.log.debug('new_session_created', message);\r\n        }\r\n        // this.updateSession();\r\n\r\n        this.processMessageAck(message.first_msg_id);\r\n        this.applyServerSalt(message.server_salt);\r\n\r\n        sessionStorage.get('dc').then((baseDcId) => {\r\n          if(baseDcId === this.dcId && !this.isFileNetworker && this.networkerFactory.updatesProcessor) {\r\n            this.networkerFactory.updatesProcessor(message);\r\n          }\r\n        });\r\n        break;\r\n      }\r\n\r\n      case 'msgs_ack': {\r\n        this.debug && this.log('got acks', message.msg_ids);\r\n        for(const msgId of message.msg_ids) {\r\n          this.processMessageAck(msgId);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'msg_detailed_info': {\r\n        const sentMessage = this.sentMessages[message.msg_id];\r\n        if(!sentMessage) {\r\n          this.ackMessage(message.answer_msg_id);\r\n          break;\r\n        }/*  else if(sentMessage.acked) {\r\n          this.reqResend(message.answer_msg_id, true);\r\n        }\r\n\r\n        break; */\r\n      }\r\n\r\n      case 'msg_new_detailed_info': {\r\n        if(this.pendingAcks.indexOf(message.answer_msg_id) !== -1) {\r\n          break;\r\n        }\r\n\r\n        this.reqResend(message.answer_msg_id);\r\n        break;\r\n      }\r\n\r\n      case 'msgs_state_info': {\r\n        this.ackMessage(message.answer_msg_id);\r\n        const arr = [\r\n          [this.lastResendReq, this.pendingResendReq] as const\r\n          // [this.lastResendAnsReq, this.pendingResendAnsReq] as const\r\n        ];\r\n\r\n        for(const [lastResend, pendingResend] of arr) {\r\n          if(lastResend?.reqMsgId === message.req_msg_id && pendingResend.length) {\r\n            for(const badMsgId of lastResend.msgIds) {\r\n              const pos = pendingResend.indexOf(badMsgId);\r\n              if(pos !== -1) {\r\n                pendingResend.splice(pos, 1);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'rpc_result': {\r\n        this.ackMessage(messageId);\r\n\r\n        const sentMessageId = message.req_msg_id;\r\n        const sentMessage = this.sentMessages[sentMessageId];\r\n\r\n        if(this.debug) {\r\n          this.log('Rpc response', message.result, sentMessage);\r\n        }\r\n\r\n        this.processMessageAck(sentMessageId);\r\n        if(sentMessage) {\r\n          const deferred = sentMessage.deferred;\r\n          if(message.result._ === 'rpc_error') {\r\n            const error = this.processError(message.result);\r\n            this.log('Rpc error', error);\r\n            if(deferred) {\r\n              deferred.reject(error);\r\n            }\r\n          } else {\r\n            if(deferred) {\r\n              deferred.resolve(message.result);\r\n            }\r\n\r\n            if(sentMessage.isAPI && !this.connectionInited) {\r\n              this.connectionInited = true;\r\n            }\r\n          }\r\n\r\n          delete this.sentMessages[sentMessageId];\r\n        } else {\r\n          if(this.debug) {\r\n            this.log('Rpc result for unknown message:', sentMessageId, message);\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\r\n        /* const sentMessageId = message.msg_id;\r\n        const sentMessage = this.sentMessages[sentMessageId];\r\n\r\n        if(sentMessage) {\r\n          sentMessage.deferred.resolve(message);\r\n          delete this.sentMessages[sentMessageId];\r\n        } */\r\n        const pingId = message.ping_id;\r\n        if(this.lastPingDelayDisconnectId === pingId) {\r\n          const deferred = this.pingDelayDisconnectDeferred;\r\n          if(deferred) {\r\n            deferred.resolve('pong');\r\n          } else {\r\n            this.log('ping deferred deleted', pingId);\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      default:\r\n        this.ackMessage(messageId);\r\n\r\n        /* if(this.debug) {\r\n          this.log.debug('Update', message);\r\n        } */\r\n\r\n        if(this.networkerFactory.updatesProcessor !== null) {\r\n          this.networkerFactory.updatesProcessor(message);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ConnectionStatusChange} from './connectionStatus';\r\nimport MTPNetworker from './networker';\r\nimport {InvokeApiOptions} from '../../types';\r\nimport App from '../../config/app';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport class NetworkerFactory extends AppManager {\r\n  private networkers: MTPNetworker[] = [];\r\n  public language = navigator.language || App.langPackCode;\r\n  public updatesProcessor: (obj: any) => void = null;\r\n  // public onConnectionStatusChange: (status: ConnectionStatusChange) => void = null;\r\n  public akStopped = false;\r\n\r\n  public onConnectionStatusChange(status: ConnectionStatusChange) {\r\n    this.rootScope.dispatchEvent('connection_status_change', status);\r\n    //  ({type: 'connectionStatusChange', payload: status});\r\n  }\r\n\r\n  public removeNetworker(networker: MTPNetworker) {\r\n    indexOfAndSplice(this.networkers, networker);\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\r\n    // console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\r\n    const networker = new MTPNetworker(this, this.timeManager, dcId, authKey, authKeyId, serverSalt, options);\r\n    this.networkers.push(networker);\r\n    return networker;\r\n  }\r\n\r\n  public startAll() {\r\n    if(this.akStopped) {\r\n      const stoppedNetworkers = this.networkers.filter((networker) => networker.isStopped());\r\n\r\n      this.akStopped = false;\r\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\r\n\r\n      for(const networker of stoppedNetworkers) {\r\n        networker.scheduleRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  public stopAll() {\r\n    this.akStopped = true;\r\n  }\r\n\r\n  public setLanguage(langCode: string) {\r\n    this.language = langCode;\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.connectionInited = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public unsetConnectionInited() {\r\n    for(const networker of this.networkers) {\r\n      networker.connectionInited = false;\r\n    }\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    for(const networker of this.networkers) {\r\n      networker.forceReconnectTimeout();\r\n    }\r\n  }\r\n\r\n  public forceReconnect() {\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.forceReconnect();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {TLSerialization} from './tl_utils';\r\nimport cryptoWorker from '../crypto/cryptoMessagePort';\r\nimport Modes from '../../config/modes';\r\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport bigInt from 'big-integer';\r\n\r\nexport type RSAPublicKeyHex = {\r\n  modulus: string,\r\n  exponent: string\r\n};\r\n\r\nexport class RSAKeysManager {\r\n  /**\r\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\r\n   *\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\r\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\r\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\r\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\r\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\r\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\r\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\r\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\r\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\r\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\r\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   * Bytes can be got via\r\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\r\n   * $ openssl rsa -pubin -in pub.pem -text -noout\r\n   */\r\n\r\n  /* private publisKeysHex = [{\r\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\r\n    exponent: '010001'\r\n  }]; */\r\n\r\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\r\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publisKeysHex: RSAPublicKeyHex[] = [{\r\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publicKeysParsed: {\r\n    [hex: string]: RSAPublicKeyHex\r\n  } = {};\r\n  private prepared = false;\r\n  private preparePromise: Promise<void> = null;\r\n\r\n  constructor() {\r\n    if(Modes.test) {\r\n      this.publisKeysHex = this.testPublicKeysHex;\r\n    }\r\n  }\r\n\r\n  public prepare(): Promise<void> {\r\n    if(this.preparePromise) return this.preparePromise;\r\n    else if(this.prepared) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this.preparePromise = Promise.all(this.publisKeysHex.map((keyParsed) => {\r\n      const RSAPublicKey = new TLSerialization();\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\r\n\r\n      const buffer = RSAPublicKey.getBuffer();\r\n\r\n      return cryptoWorker.invokeCrypto('sha1', buffer).then((bytes) => {\r\n        const fingerprintBytes = bytes.slice(-8);\r\n        fingerprintBytes.reverse();\r\n\r\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\r\n          modulus: keyParsed.modulus,\r\n          exponent: keyParsed.exponent\r\n        };\r\n      });\r\n    })).then(() => {\r\n      this.prepared = true;\r\n\r\n      // console.log('[MT] Prepared keys');\r\n      this.preparePromise = null;\r\n    });\r\n  }\r\n\r\n  public async select(fingerprints: Array<string>) {\r\n    await this.prepare();\r\n\r\n    for(let i = 0; i < fingerprints.length; ++i) {\r\n      let fingerprintHex = bigInt(fingerprints[i]).toString(16).toLowerCase();\r\n\r\n      if(fingerprintHex.length < 16) {\r\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\r\n      }\r\n\r\n      // console.log(fingerprintHex, this.publicKeysParsed);\r\n      const foundKey = this.publicKeysParsed[fingerprintHex];\r\n      if(foundKey) {\r\n        return Object.assign({\r\n          fingerprint: fingerprints[i]\r\n        }, foundKey);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RSAKeysManager();\r\n","export default function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\r\n  const len = bytes1.length;\r\n  const bytes = new Uint8Array(len);\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = bytes1[i] ^ bytes2[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport transportController from './transports/controller';\r\nimport {TLSerialization, TLDeserialization} from './tl_utils';\r\nimport {TransportType} from './dcConfigurator';\r\nimport rsaKeysManager from './rsaKeysManager';\r\nimport CryptoWorker from '../crypto/cryptoMessagePort';\r\nimport {logger, LogTypes} from '../logger';\r\nimport DEBUG from '../../config/debug';\r\nimport {Awaited, DcId} from '../../types';\r\nimport addPadding from '../../helpers/bytes/addPadding';\r\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\r\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport bytesXor from '../../helpers/bytes/bytesXor';\r\nimport {bigIntFromBytes} from '../../helpers/bigInt/bigIntConversion';\r\nimport bigInt from 'big-integer';\r\nimport randomize from '../../helpers/array/randomize';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\r\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\r\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\r\n\r\nfNewNonce = false;\r\nfNonce = false;\r\nfResult = false; */\r\n\r\ntype AuthOptions = {\r\n  dcId: number,\r\n  nonce: Uint8Array,\r\n\r\n  serverNonce?: Uint8Array,\r\n  pq?: Uint8Array,\r\n  fingerprints?: string[],\r\n  publicKey?: {\r\n    modulus: string,\r\n    exponent: string,\r\n    fingerprint: string\r\n  },\r\n\r\n  // good\r\n  p?: Uint8Array,\r\n  q?: Uint8Array,\r\n\r\n  newNonce?: Uint8Array,\r\n\r\n  retry?: number,\r\n\r\n  b?: Uint8Array,\r\n  g?: number,\r\n  gA?: Uint8Array,\r\n  dhPrime?: Uint8Array,\r\n\r\n  tmpAesKey?: Uint8Array,\r\n  tmpAesIv?: Uint8Array,\r\n\r\n  authKeyId?: Uint8Array,\r\n  authKey?: Uint8Array,\r\n  serverSalt?: Uint8Array,\r\n\r\n  localTime?: number,\r\n  serverTime?: any,\r\n};\r\n\r\ntype ResPQ = {\r\n  _: 'resPQ';\r\n  nonce: Uint8Array;\r\n  pq: Uint8Array;\r\n  server_nonce: Uint8Array;\r\n  server_public_key_fingerprints: string[];\r\n};\r\n\r\ntype P_Q_inner_data = {\r\n  _: 'p_q_inner_data_dc';\r\n  pq: Uint8Array;\r\n  p: Uint8Array;\r\n  q: Uint8Array;\r\n  nonce: Uint8Array;\r\n  server_nonce: Uint8Array;\r\n  new_nonce: Uint8Array;\r\n  dc: number;\r\n};\r\n\r\ntype req_DH_params = {\r\n  nonce: Uint8Array;\r\n  server_nonce: Uint8Array;\r\n  p: Uint8Array;\r\n  q: Uint8Array;\r\n  public_key_fingerprint: string;\r\n  encrypted_data: Uint8Array;\r\n};\r\n\r\nexport class Authorizer extends AppManager {\r\n  private cached: {\r\n    [dcId: DcId]: Promise<AuthOptions>\r\n  };\r\n\r\n  private log: ReturnType<typeof logger>;\r\n\r\n  private transportType: TransportType;\r\n\r\n  private getTransportTypePromise: Promise<void>;\r\n\r\n  protected after() {\r\n    this.cached = {};\r\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\r\n  }\r\n\r\n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\r\n    const requestLength = requestArray.byteLength;\r\n\r\n    const header = new TLSerialization();\r\n    header.storeLongP(0, 0, 'auth_key_id');\r\n    header.storeLong(this.timeManager.generateId(), 'msg_id');\r\n    header.storeInt(requestLength, 'request_length');\r\n\r\n    const headerArray = header.getBytes(true) as Uint8Array;\r\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\r\n    resultArray.set(headerArray);\r\n    resultArray.set(requestArray, headerArray.length);\r\n\r\n    const transport = this.dcConfigurator.chooseServer(dcId, 'client', this.transportType);\r\n    const baseError = {\r\n      code: 406,\r\n      type: 'NETWORK_BAD_RESPONSE'\r\n    };\r\n\r\n    if(DEBUG) {\r\n      this.log('mtpSendPlainRequest: creating requestPromise');\r\n    }\r\n\r\n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\r\n    return promise.then((result) => {\r\n      if(DEBUG) {\r\n        this.log('mtpSendPlainRequest: in good sector', result);\r\n      }\r\n\r\n      if(!result || !result.byteLength) {\r\n        throw baseError;\r\n      }\r\n\r\n      try {\r\n        /* result = fResult ? fResult : result;\r\n        fResult = new Uint8Array(0); */\r\n\r\n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\r\n\r\n        if(result.length === 4) {\r\n          const errorCode = deserializer.fetchInt();\r\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\r\n          throw errorCode;\r\n        }\r\n\r\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\r\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\r\n\r\n        const msg_id = deserializer.fetchLong('msg_id');\r\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\r\n\r\n        const msg_len = deserializer.fetchInt('msg_len');\r\n        if(!msg_len) this.log.error('no msg_len', msg_len);\r\n\r\n        return deserializer;\r\n      } catch(e) {\r\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\r\n        const error = Object.assign(baseError, {originalError: e});\r\n        throw error;\r\n      }\r\n    }, (error) => {\r\n      if(!error.message && !error.type) {\r\n        error = Object.assign(baseError, {\r\n          originalError: error\r\n        });\r\n      }\r\n\r\n      throw error;\r\n    });\r\n  }\r\n\r\n  private async sendReqPQ(auth: AuthOptions) {\r\n    const request = new TLSerialization({mtproto: true});\r\n\r\n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\r\n\r\n    if(DEBUG) {\r\n      this.log('Send req_pq', bytesToHex(auth.nonce));\r\n    }\r\n\r\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\r\n    try {\r\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\r\n      rsaKeysManager.prepare();\r\n      deserializer = await promise;\r\n    } catch(error) {\r\n      this.log.error('req_pq error', (error as Error).message);\r\n      throw error;\r\n    }\r\n\r\n    const response: ResPQ = deserializer.fetchObject('ResPQ');\r\n\r\n    if(response._ !== 'resPQ') {\r\n      throw new Error('[MT] resPQ response invalid: ' + response._);\r\n    }\r\n\r\n    if(!bytesCmp(auth.nonce, response.nonce)) {\r\n      this.log.error(auth.nonce, response.nonce);\r\n      throw new Error('[MT] resPQ nonce mismatch');\r\n    }\r\n\r\n    auth.serverNonce = response.server_nonce; // need\r\n    auth.pq = response.pq;\r\n    auth.fingerprints = response.server_public_key_fingerprints;\r\n\r\n    if(DEBUG) {\r\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\r\n    }\r\n\r\n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\r\n    if(!publicKey) {\r\n      throw new Error('[MT] No public key found');\r\n    }\r\n\r\n    auth.publicKey = publicKey;\r\n\r\n    if(DEBUG) {\r\n      this.log('PQ factorization start', auth.pq);\r\n    }\r\n\r\n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\r\n    try {\r\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\r\n    } catch(error) {\r\n      this.log.error('worker error factorize', error);\r\n      throw error;\r\n    }\r\n\r\n    auth.p = pAndQ[0];\r\n    auth.q = pAndQ[1];\r\n\r\n    if(DEBUG) {\r\n      this.log('PQ factorization done', pAndQ);\r\n    }\r\n\r\n    return this.sendReqDhParams(auth);\r\n  }\r\n\r\n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\r\n    auth.newNonce = randomize(new Uint8Array(32));\r\n\r\n    const p_q_inner_data_dc: P_Q_inner_data = {\r\n      _: 'p_q_inner_data_dc',\r\n      pq: auth.pq,\r\n      p: auth.p,\r\n      q: auth.q,\r\n      nonce: auth.nonce,\r\n      server_nonce: auth.serverNonce,\r\n      new_nonce: auth.newNonce,\r\n      dc: 0\r\n    };\r\n\r\n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\r\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\r\n\r\n    const data = pQInnerDataSerialization.getBytes(true);\r\n    if(data.length > 144) {\r\n      throw 'DH_params: data is more than 144 bytes!';\r\n    }\r\n\r\n    const dataWithPadding = addPadding(data, 192, false, true, false);\r\n    const dataPadReversed = dataWithPadding.slice().reverse();\r\n\r\n    const getKeyAesEncrypted = async() => {\r\n      for(;;) {\r\n        const tempKey = randomize(new Uint8Array(32));\r\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256', tempKey.concat(dataWithPadding)));\r\n        if(dataWithHash.length !== 224) {\r\n          throw 'DH_params: dataWithHash !== 224 bytes!';\r\n        }\r\n\r\n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\r\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256', aesEncrypted));\r\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\r\n\r\n        const keyAesEncryptedBigInt = bigIntFromBytes(keyAesEncrypted);\r\n        const publicKeyModulusBigInt = bigInt(auth.publicKey.modulus, 16);\r\n\r\n        if(keyAesEncryptedBigInt.compare(publicKeyModulusBigInt) === -1) {\r\n          return keyAesEncrypted;\r\n        }\r\n      }\r\n    };\r\n\r\n    const keyAesEncrypted = await getKeyAesEncrypted();\r\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\r\n\r\n    const req_DH_params: req_DH_params = {\r\n      nonce: auth.nonce,\r\n      server_nonce: auth.serverNonce,\r\n      p: auth.p,\r\n      q: auth.q,\r\n      public_key_fingerprint: auth.publicKey.fingerprint,\r\n      encrypted_data: encryptedData\r\n    };\r\n\r\n    const request = new TLSerialization({mtproto: true});\r\n    request.storeMethod('req_DH_params', req_DH_params);\r\n\r\n    const requestBytes = request.getBytes(true);\r\n\r\n    if(DEBUG) {\r\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\r\n    }\r\n\r\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\r\n    try {\r\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\r\n    } catch(error) {\r\n      this.log.error('Send req_DH_params FAIL!', error);\r\n      throw error;\r\n    }\r\n\r\n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\r\n\r\n    if(DEBUG) {\r\n      this.log('Sent req_DH_params, response:', response);\r\n    }\r\n\r\n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\r\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\r\n    }\r\n\r\n    if(!bytesCmp(auth.nonce, response.nonce)) {\r\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\r\n    }\r\n\r\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\r\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\r\n    }\r\n\r\n    if(response._ === 'server_DH_params_fail') {\r\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce)).slice(-16);\r\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\r\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\r\n      }\r\n\r\n      throw new Error('[MT] server_DH_params_fail');\r\n    }\r\n\r\n    // fill auth object\r\n    try {\r\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\r\n    } catch(e) {\r\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\r\n      throw e;\r\n    }\r\n\r\n    // console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\r\n\r\n    return this.sendSetClientDhParams(auth);\r\n  }\r\n\r\n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\r\n    auth.localTime = Date.now();\r\n\r\n    // ! can't concat Array with Uint8Array!\r\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.serverNonce)))\r\n    .concat((await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\r\n\r\n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(12)\r\n    .concat(await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\r\n\r\n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\r\n\r\n    const hash = answerWithHash.slice(0, 20);\r\n    const answerWithPadding = answerWithHash.slice(20);\r\n\r\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\r\n    const response = deserializer.fetchObject('Server_DH_inner_data');\r\n\r\n    if(response._ !== 'server_DH_inner_data') {\r\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\r\n    }\r\n\r\n    if(!bytesCmp(auth.nonce, response.nonce)) {\r\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\r\n    }\r\n\r\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\r\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\r\n    }\r\n\r\n    if(DEBUG) {\r\n      this.log('Done decrypting answer');\r\n    }\r\n    auth.g = response.g;\r\n    auth.dhPrime = response.dh_prime;\r\n    auth.gA = response.g_a;\r\n    auth.serverTime = response.server_time;\r\n    auth.retry = 0;\r\n\r\n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\r\n\r\n    const offset = deserializer.getOffset();\r\n\r\n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1', answerWithPadding.slice(0, offset)))) {\r\n      throw new Error('[MT] server_DH_inner_data SHA1 mismatch');\r\n    }\r\n\r\n    this.timeManager.applyServerTime(auth.serverTime, auth.localTime);\r\n  }\r\n\r\n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\r\n    if(DEBUG) {\r\n      this.log('Verifying DH params', g, dhPrime, gA);\r\n    }\r\n\r\n    const dhPrimeHex = bytesToHex(dhPrime);\r\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\r\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\r\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\r\n    }\r\n\r\n    if(DEBUG) {\r\n      this.log('dhPrime cmp OK');\r\n    }\r\n\r\n    const gABigInt = bigIntFromBytes(gA);\r\n    const dhPrimeBigInt = bigInt(dhPrimeHex, 16);\r\n\r\n    if(gABigInt.compare(bigInt.one) <= 0) {\r\n      throw new Error('[MT] DH params are not verified: gA <= 1');\r\n    }\r\n\r\n    if(gABigInt.compare(dhPrimeBigInt.subtract(bigInt.one)) >= 0) {\r\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\r\n    }\r\n\r\n    if(DEBUG) {\r\n      this.log('1 < gA < dhPrime-1 OK');\r\n    }\r\n\r\n    const twoPow = bigInt(2).pow(2048 - 64);\r\n\r\n    if(gABigInt.compare(twoPow) < 0) {\r\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\r\n    }\r\n    if(gABigInt.compare(dhPrimeBigInt.subtract(twoPow)) >= 0) {\r\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\r\n    }\r\n\r\n    if(DEBUG) {\r\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\r\n    const gBytes = bytesFromHex(auth.g.toString(16));\r\n\r\n    auth.b = randomize(new Uint8Array(256));\r\n    // MTProto.secureRandom.nextBytes(auth.b);\r\n\r\n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\r\n    try {\r\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\r\n    } catch(error) {\r\n      throw error;\r\n    }\r\n\r\n    const data = new TLSerialization({mtproto: true});\r\n    data.storeObject({\r\n      _: 'client_DH_inner_data',\r\n      nonce: auth.nonce,\r\n      server_nonce: auth.serverNonce,\r\n      retry_id: [0, auth.retry++],\r\n      g_b: gB\r\n    }, 'Client_DH_Inner_Data');\r\n\r\n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1', data.getBuffer())).concat(data.getBytes(true));\r\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\r\n\r\n    const request = new TLSerialization({mtproto: true});\r\n    request.storeMethod('set_client_DH_params', {\r\n      nonce: auth.nonce,\r\n      server_nonce: auth.serverNonce,\r\n      encrypted_data: encryptedData\r\n    });\r\n\r\n    if(DEBUG) {\r\n      this.log('Send set_client_DH_params');\r\n    }\r\n\r\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\r\n    try {\r\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\r\n    } catch(err) {\r\n      throw err;\r\n    }\r\n\r\n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\r\n\r\n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\r\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\r\n    }\r\n\r\n    if(!bytesCmp(auth.nonce, response.nonce)) {\r\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\r\n    }\r\n\r\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\r\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\r\n    }\r\n\r\n    // let authKey: Uint8Array;\r\n    try {\r\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\r\n    } catch(err) {\r\n      throw authKey;\r\n    }\r\n\r\n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1', authKey),\r\n      authKeyAux = authKeyHash.slice(0, 8),\r\n      authKeyId = authKeyHash.slice(-8);\r\n\r\n    if(DEBUG) {\r\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\r\n    }\r\n    switch(response._) {\r\n      case 'dh_gen_ok': {\r\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([1], authKeyAux))).slice(-16);\r\n\r\n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\r\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\r\n          throw new Error('new_nonce_hash1 mismatch');\r\n        }\r\n\r\n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\r\n        if(DEBUG) {\r\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\r\n        }\r\n\r\n        auth.authKeyId = authKeyId;\r\n        auth.authKey = authKey;\r\n        auth.serverSalt = serverSalt;\r\n\r\n        return auth;\r\n      }\r\n\r\n      case 'dh_gen_retry': {\r\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([2], authKeyAux))).slice(-16);\r\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\r\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\r\n        }\r\n\r\n        return this.sendSetClientDhParams(auth);\r\n      }\r\n\r\n      case 'dh_gen_fail': {\r\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([3], authKeyAux))).slice(-16);\r\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\r\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\r\n        }\r\n\r\n        throw new Error('[MT] Set_client_DH_params_answer fail');\r\n      }\r\n    }\r\n  }\r\n\r\n  private getTransportType = () => {\r\n    if(!import.meta.env.VITE_MTPROTO_AUTO) {\r\n      return;\r\n    }\r\n\r\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\r\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\r\n      this.transportType = websocket ? 'websocket' : 'https';\r\n      this.log('will use transport:', this.transportType);\r\n    });\r\n  };\r\n\r\n  public auth(dcId: DcId) {\r\n    let promise = this.cached[dcId];\r\n    if(promise) {\r\n      return promise;\r\n    }\r\n\r\n    promise = new Promise(async(resolve, reject) => {\r\n      await this.getTransportType();\r\n\r\n      let error: ApiError;\r\n      let _try = 1;\r\n      while(_try++ <= 3) {\r\n        try {\r\n          const auth: AuthOptions = {\r\n            dcId,\r\n            nonce: randomize(new Uint8Array(16))\r\n          };\r\n\r\n          const promise = this.sendReqPQ(auth);\r\n          resolve(await promise);\r\n          return;\r\n        } catch(err) {\r\n          error = err;\r\n        }\r\n      }\r\n\r\n      reject(error);\r\n    });\r\n\r\n    return this.cached[dcId] = promise;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport sessionStorage from '../sessionStorage';\r\nimport {nextRandomUint} from '../../helpers/random';\r\nimport {WorkerTaskVoidTemplate} from '../../types';\r\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\n/*\r\nlet lol: any = {};\r\nfor(var i = 0; i < 100; i++) {\r\n    timeManager.generateId();\r\n}\r\n*/\r\n\r\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\r\n  type: 'applyServerTimeOffset',\r\n  payload: TimeManager['timeOffset']\r\n};\r\n\r\nexport class TimeManager extends AppManager {\r\n  private lastMessageId: [number, number];\r\n  private timeOffset: number;\r\n\r\n  /* private midnightNoOffset: number;\r\n  private midnightOffseted: Date;\r\n\r\n  private midnightOffset: number; */\r\n\r\n  /* private timeParams: {\r\n    midnightOffset: number,\r\n    serverTimeOffset: number\r\n  }; */\r\n\r\n  protected after() {\r\n    this.lastMessageId = [0, 0];\r\n    this.timeOffset = 0;\r\n\r\n    sessionStorage.get('server_time_offset').then((to) => {\r\n      if(to) {\r\n        this.timeOffset = to;\r\n      }\r\n    });\r\n\r\n\r\n    // * migrated from ServerTimeManager\r\n    /* const timestampNow = tsNow(true);\r\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\r\n    this.midnightOffseted = new Date();\r\n    this.midnightOffseted.setHours(0, 0, 0, 0);\r\n\r\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\r\n\r\n    /* this.timeParams = {\r\n      midnightOffset: this.midnightOffset,\r\n      serverTimeOffset: this.serverTimeOffset\r\n    }; */\r\n  }\r\n\r\n  public getServerTimeOffset() {\r\n    return this.timeOffset;\r\n  }\r\n\r\n  public generateId(): string {\r\n    const timeTicks = Date.now(),\r\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\r\n      timeMSec = timeTicks % 1000,\r\n      random = nextRandomUint(16);\r\n\r\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\r\n    if(this.lastMessageId[0] > messageId[0] ||\r\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\r\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\r\n    }\r\n\r\n    this.lastMessageId = messageId;\r\n\r\n    const ret = ulongFromInts(messageId[0], messageId[1]).toString(10);\r\n\r\n    // if(lol[ret]) {\r\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\r\n    // }\r\n    // lol[ret] = true;\r\n\r\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\r\n\r\n    return ret\r\n  }\r\n\r\n  public applyServerTime(serverTime: number, localTime?: number) {\r\n    localTime = (localTime || Date.now()) / 1000 | 0;\r\n    const newTimeOffset = serverTime - localTime;\r\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\r\n    this.lastMessageId = [0, 0];\r\n\r\n    if(this.timeOffset !== newTimeOffset) {\r\n      sessionStorage.set({\r\n        server_time_offset: newTimeOffset\r\n      });\r\n\r\n      this.timeOffset = newTimeOffset;\r\n    }\r\n\r\n    // console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\r\n\r\n    return changed;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {DocumentAttribute, WebDocument} from '../../layer';\r\n\r\nexport default class AppWebDocsManager {\r\n  public saveWebDocument(webDocument: WebDocument) {\r\n    if(!webDocument) {\r\n      return;\r\n    }\r\n\r\n    const attribute: DocumentAttribute.documentAttributeImageSize = webDocument.attributes.find((attribute) => attribute._ === 'documentAttributeImageSize') as any;\r\n    if(attribute) {\r\n      webDocument.w = attribute.w;\r\n      webDocument.h = attribute.h;\r\n    }\r\n\r\n    return webDocument;\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {HelpPremiumPromo, InputInvoice, InputPaymentCredentials, PaymentRequestedInfo, PaymentsPaymentForm} from '../../layer';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\nexport default class AppPaymentsManager extends AppManager {\r\n  private premiumPromo: MaybePromise<HelpPremiumPromo>;\r\n\r\n  protected after() {\r\n    // * reset premium promo\r\n    this.rootScope.addEventListener('premium_toggle', () => {\r\n      this.getPremiumPromo(true);\r\n    });\r\n  }\r\n\r\n  public getInputInvoiceBySlug(slug: string): InputInvoice.inputInvoiceSlug {\r\n    return {\r\n      _: 'inputInvoiceSlug',\r\n      slug\r\n    };\r\n  }\r\n\r\n  public getInputInvoiceByPeerId(peerId: PeerId, mid: number): InputInvoice.inputInvoiceMessage {\r\n    return {\r\n      _: 'inputInvoiceMessage',\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid)\r\n    };\r\n  }\r\n\r\n  public getPaymentForm(invoice: InputInvoice) {\r\n    return this.apiManager.invokeApi('payments.getPaymentForm', {\r\n      invoice,\r\n      theme_params: this.apiManager.getThemeParams()\r\n    }).then((paymentForm) => {\r\n      this.appPeersManager.saveApiPeers(paymentForm);\r\n      paymentForm.photo = this.appWebDocsManager.saveWebDocument(paymentForm.photo);\r\n\r\n      return paymentForm;\r\n    });\r\n  }\r\n\r\n  public getPaymentReceipt(peerId: PeerId, mid: number) {\r\n    return this.apiManager.invokeApi('payments.getPaymentReceipt', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid)\r\n    }).then((paymentForm) => {\r\n      this.appPeersManager.saveApiPeers(paymentForm);\r\n      paymentForm.photo = this.appWebDocsManager.saveWebDocument(paymentForm.photo);\r\n\r\n      return paymentForm;\r\n    });\r\n  }\r\n\r\n  public validateRequestedInfo(invoice: InputInvoice, info: PaymentRequestedInfo, save?: boolean) {\r\n    return this.apiManager.invokeApi('payments.validateRequestedInfo', {\r\n      save,\r\n      invoice,\r\n      info\r\n    });\r\n  }\r\n\r\n  public sendPaymentForm(\r\n    invoice: InputInvoice,\r\n    formId: PaymentsPaymentForm['form_id'],\r\n    requestedInfoId: string,\r\n    shippingOptionId: string,\r\n    credentials: InputPaymentCredentials,\r\n    tipAmount?: number\r\n  ) {\r\n    return this.apiManager.invokeApi('payments.sendPaymentForm', {\r\n      form_id: formId,\r\n      invoice,\r\n      requested_info_id: requestedInfoId,\r\n      shipping_option_id: shippingOptionId,\r\n      credentials,\r\n      tip_amount: tipAmount || undefined\r\n    }).then((result) => {\r\n      if(result._ === 'payments.paymentResult') {\r\n        this.apiUpdatesManager.processUpdateMessage(result.updates);\r\n      }\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public clearSavedInfo(info?: boolean, credentials?: boolean) {\r\n    return this.apiManager.invokeApi('payments.clearSavedInfo', {\r\n      info,\r\n      credentials\r\n    });\r\n  }\r\n\r\n  public getPremiumGiftCodeOptions(peerId: PeerId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.getPremiumGiftCodeOptions',\r\n      params: {\r\n        boost_peer: this.appPeersManager.getInputPeerById(peerId)\r\n      },\r\n      processResult: (premiumGiftCodeOptions) => {\r\n        return premiumGiftCodeOptions/* .filter((option) => !option.store_product) */;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPremiumPromo(overwrite?: boolean) {\r\n    if(overwrite && this.premiumPromo) {\r\n      this.premiumPromo = undefined;\r\n    }\r\n\r\n    return this.premiumPromo ??= this.apiManager.invokeApiSingleProcess({\r\n      method: 'help.getPremiumPromo',\r\n      params: {},\r\n      processResult: (helpPremiumPromo) => {\r\n        this.appPeersManager.saveApiPeers(helpPremiumPromo);\r\n        helpPremiumPromo.videos = helpPremiumPromo.videos.map((doc) => {\r\n          return this.appDocsManager.saveDoc(doc, {type: 'premiumPromo'});\r\n        });\r\n\r\n        return this.premiumPromo = helpPremiumPromo;\r\n      }\r\n    });\r\n  }\r\n\r\n  public checkGiftCode(slug: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.checkGiftCode',\r\n      params: {slug},\r\n      processResult: (checkedGiftCode) => {\r\n        this.appPeersManager.saveApiPeers(checkedGiftCode);\r\n        checkedGiftCode.slug = slug;\r\n\r\n        if(checkedGiftCode.giveaway_msg_id) {\r\n          const fromPeerId = checkedGiftCode.from_id && this.appPeersManager.getPeerId(checkedGiftCode.from_id);\r\n          checkedGiftCode.giveaway_msg_id = this.appMessagesIdsManager.generateMessageId(\r\n            checkedGiftCode.giveaway_msg_id,\r\n            !fromPeerId || fromPeerId.isUser() ? undefined : fromPeerId.toChatId()\r\n          );\r\n        }\r\n\r\n        return checkedGiftCode;\r\n      }\r\n    });\r\n  }\r\n\r\n  public applyGiftCode(slug: string) {\r\n    // return Promise.reject({type: 'PREMIUM_SUB_ACTIVE_UNTIL_1703345751'});\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.applyGiftCode',\r\n      params: {slug},\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getGiveawayInfo(peerId: PeerId, mid: number) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'payments.getGiveawayInfo',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        msg_id: getServerMessageId(mid)\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {AttachMenuBot} from '../../../../layer';\r\nimport {ATTACH_MENU_BOT_ICON_NAME} from '../../../mtproto/mtproto_config';\r\n\r\nexport default function getAttachMenuBotIcon(attachMenuBot: AttachMenuBot) {\r\n  return attachMenuBot.icons.find((icon) => icon.name === ATTACH_MENU_BOT_ICON_NAME);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {MessageSendingParams} from './appMessagesManager';\r\nimport {AppManager} from './manager';\r\nimport {AttachMenuBots, AttachMenuBot, Update, DataJSON, BotApp} from '../../layer';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport makeError from '../../helpers/makeError';\r\nimport getAttachMenuBotIcon from './utils/attachMenuBots/getAttachMenuBotIcon';\r\nimport {randomLong} from '../../helpers/random';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\n\r\nconst BOTS_SUPPORTED = true;\r\n\r\nexport type RequestWebViewOptions = MessageSendingParams & {\r\n  botId: BotId,\r\n  peerId: PeerId,\r\n  // platform: string,\r\n  startParam?: string,\r\n  fromBotMenu?: boolean,\r\n  fromAttachMenu?: boolean,\r\n  fromSwitchWebView?: boolean,\r\n  fromSideMenu?: boolean,\r\n  attachMenuBot?: AttachMenuBot,\r\n  url?: string,\r\n  themeParams?: DataJSON,\r\n  isSimpleWebView?: boolean,\r\n  buttonText?: string,\r\n  writeAllowed?: boolean,\r\n  app?: BotApp.botApp,\r\n  noConfirmation?: boolean,\r\n  hasSettings?: boolean\r\n};\r\n\r\nexport default class AppAttachMenuBotsManager extends AppManager {\r\n  private attachMenuBots: Map<BotId, AttachMenuBot>;\r\n  private attachMenuBotsArr: AttachMenuBot[];\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateAttachMenuBots: this.onUpdateAttachMenuBots,\r\n\r\n      updateWebViewResultSent: this.onUpdateWebViewResultSent\r\n    });\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      this.appAttachMenuBotsManager.getAttachMenuBots();\r\n\r\n      setInterval(() => {\r\n        this.onUpdateAttachMenuBots({_: 'updateAttachMenuBots'});\r\n      }, 30 * 60e3);\r\n    });\r\n  }\r\n\r\n  public clear = (init = false) => {\r\n    if(!init) {\r\n      this.attachMenuBots.clear();\r\n      this.attachMenuBotsArr = undefined;\r\n    } else {\r\n      this.attachMenuBots = new Map();\r\n    }\r\n  };\r\n\r\n  private onUpdateAttachMenuBots = (update: Update.updateAttachMenuBots) => {\r\n    this.clear();\r\n    this.getAttachMenuBots();\r\n  };\r\n\r\n  private onUpdateWebViewResultSent = (update: Update.updateWebViewResultSent) => {\r\n    this.rootScope.dispatchEvent('web_view_result_sent', update.query_id);\r\n  };\r\n\r\n  public onLanguageChange() {\r\n    if(!this.attachMenuBots?.size) {\r\n      return;\r\n    }\r\n\r\n    this.onUpdateAttachMenuBots({_: 'updateAttachMenuBots'});\r\n  }\r\n\r\n  public saveAttachMenuBot(attachMenuBot: AttachMenuBot) {\r\n    this.attachMenuBots.set(attachMenuBot.bot_id, attachMenuBot);\r\n    const menuBotIcon = getAttachMenuBotIcon(attachMenuBot);\r\n    menuBotIcon.icon = this.appDocsManager.saveDoc(menuBotIcon.icon, {type: 'attachMenuBotIcon', botId: attachMenuBot.bot_id});\r\n    this.rootScope.dispatchEvent('attach_menu_bot', attachMenuBot);\r\n    this.apiFileManager.downloadMedia({media: menuBotIcon.icon});\r\n    return attachMenuBot;\r\n  }\r\n\r\n  public saveAttachMenuBots(attachMenuBots: AttachMenuBot[]) {\r\n    if((attachMenuBots as any).saved) return;\r\n    (attachMenuBots as any).saved = true;\r\n    attachMenuBots.forEach((user) => this.saveAttachMenuBot(user));\r\n  }\r\n\r\n  public saveBotApp(botId: BotId, botApp: BotApp) {\r\n    if(!botApp) {\r\n      return;\r\n    }\r\n\r\n    assumeType<BotApp.botApp>(botApp);\r\n\r\n    const referenceContext: ReferenceContext = {\r\n      type: 'botApp',\r\n      botId,\r\n      appName: botApp.short_name\r\n    };\r\n\r\n    botApp.photo = this.appPhotosManager.savePhoto(botApp.photo, referenceContext);\r\n    botApp.document = this.appDocsManager.saveDoc(botApp.document, referenceContext);\r\n\r\n    return botApp;\r\n  }\r\n\r\n  public getAttachMenuBots() {\r\n    return this.attachMenuBotsArr ?? this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getAttachMenuBots',\r\n      processResult: (attachMenuBots) => {\r\n        assumeType<AttachMenuBots.attachMenuBots>(attachMenuBots);\r\n        this.appUsersManager.saveApiUsers(attachMenuBots.users);\r\n        this.saveAttachMenuBots(attachMenuBots.bots);\r\n        return this.attachMenuBotsArr = attachMenuBots.bots.slice(0, BOTS_SUPPORTED ? undefined : 0);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAttachMenuBotCached(botId: BotId) {\r\n    return this.attachMenuBots.get(botId);\r\n  }\r\n\r\n  public getAttachMenuBot(botId: BotId, overwrite?: boolean) {\r\n    if(!this.appUsersManager.isAttachMenuBot(botId) || !BOTS_SUPPORTED) {\r\n      throw makeError('BOT_INVALID');\r\n    }\r\n\r\n    return (!overwrite && this.getAttachMenuBotCached(botId)) ?? this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getAttachMenuBot',\r\n      params: {\r\n        bot: this.appUsersManager.getUserInput(botId)\r\n      },\r\n      processResult: (attachMenuBotsBot) => {\r\n        this.appUsersManager.saveApiUsers(attachMenuBotsBot.users);\r\n        const attachMenuBot = this.saveAttachMenuBot(attachMenuBotsBot.bot);\r\n        return attachMenuBot;\r\n      }\r\n    });\r\n  }\r\n\r\n  public requestWebView(options: RequestWebViewOptions) {\r\n    const {\r\n      botId,\r\n      peerId,\r\n      url,\r\n      fromBotMenu,\r\n      fromSwitchWebView,\r\n      fromSideMenu,\r\n      themeParams = this.apiManager.getThemeParams(),\r\n      // platform,\r\n      silent,\r\n      sendAsPeerId,\r\n      startParam,\r\n      isSimpleWebView,\r\n      app,\r\n      writeAllowed\r\n    } = options;\r\n\r\n    const platform = 'web';\r\n\r\n    if(app) {\r\n      return this.apiManager.invokeApiSingleProcess({\r\n        method: 'messages.requestAppWebView',\r\n        params: {\r\n          peer: this.appPeersManager.getInputPeerById(peerId),\r\n          start_param: startParam,\r\n          theme_params: themeParams,\r\n          platform,\r\n          write_allowed: writeAllowed,\r\n          app: {\r\n            _: 'inputBotAppID',\r\n            access_hash: app.access_hash,\r\n            id: app.id\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if(isSimpleWebView) {\r\n      return this.apiManager.invokeApiSingleProcess({\r\n        method: 'messages.requestSimpleWebView',\r\n        params: {\r\n          bot: this.appUsersManager.getUserInput(botId),\r\n          url,\r\n          platform,\r\n          from_switch_webview: fromSwitchWebView,\r\n          from_side_menu: fromSideMenu,\r\n          theme_params: themeParams,\r\n          start_param: startParam\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.requestWebView',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        bot: this.appUsersManager.getUserInput(botId),\r\n        silent,\r\n        platform,\r\n        url,\r\n        reply_to: this.appMessagesManager.getInputReplyTo(options),\r\n        from_bot_menu: fromBotMenu,\r\n        theme_params: themeParams,\r\n        send_as: sendAsPeerId ? this.appPeersManager.getInputPeerById(sendAsPeerId) : undefined,\r\n        start_param: startParam\r\n      }\r\n    });\r\n  }\r\n\r\n  public prolongWebView(options: MessageSendingParams & {\r\n    peerId: PeerId,\r\n    botId: BotId,\r\n    queryId: string | number\r\n  }) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.prolongWebView',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(options.peerId),\r\n        bot: this.appUsersManager.getUserInput(options.botId),\r\n        query_id: options.queryId,\r\n        silent: options.silent,\r\n        reply_to: this.appMessagesManager.getInputReplyTo(options),\r\n        send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\r\n      }\r\n    });\r\n  }\r\n\r\n  public toggleBotInAttachMenu(botId: BotId, enabled: boolean, writeAllowed?: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.toggleBotInAttachMenu',\r\n      params: {\r\n        bot: this.appUsersManager.getUserInput(botId),\r\n        enabled,\r\n        write_allowed: writeAllowed\r\n      }/* ,\r\n      processResult: (result) => {\r\n        return result;\r\n        // this.apiUpdatesManager.processLocalUpdate({_: 'updateAttachMenuBots'});\r\n      } */\r\n    });\r\n  }\r\n\r\n  public sendWebViewData(botId: BotId, buttonText: string, data: string) {\r\n    return this.apiManager.invokeApi('messages.sendWebViewData', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      button_text: buttonText,\r\n      data,\r\n      random_id: randomLong()\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getBotApp(botId: BotId, shortName: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'messages.getBotApp',\r\n      params: {\r\n        app: {\r\n          _: 'inputBotAppShortName',\r\n          bot_id: this.appUsersManager.getUserInput(botId),\r\n          short_name: shortName\r\n        },\r\n        hash: 0\r\n      },\r\n      processResult: (messagesBotApp) => {\r\n        messagesBotApp.app = this.saveBotApp(botId, messagesBotApp.app);\r\n        return messagesBotApp;\r\n      }\r\n    });\r\n  }\r\n\r\n  public invokeWebViewCustomMethod(botId: BotId, customMethod: string, params: string) {\r\n    return this.apiManager.invokeApi('bots.invokeWebViewCustomMethod', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      custom_method: customMethod,\r\n      params: {\r\n        _: 'dataJSON',\r\n        data: JSON.stringify(params)\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {UrlAuthResult} from '../../layer';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\nexport default class AppSeamlessLoginManager extends AppManager {\r\n  public requestUrlAuth(url: string, peerId?: PeerId, mid?: number, buttonId?: number) {\r\n    return this.apiManager.invokeApi('messages.requestUrlAuth', {\r\n      button_id: buttonId,\r\n      msg_id: mid ? getServerMessageId(mid) : undefined,\r\n      peer: peerId ? this.appPeersManager.getInputPeerById(peerId) : undefined,\r\n      url\r\n    }).then((urlAuthResult) => {\r\n      if(urlAuthResult._ === 'urlAuthResultRequest') {\r\n        this.appUsersManager.saveApiUser(urlAuthResult.bot);\r\n      }\r\n\r\n      return urlAuthResult;\r\n    });\r\n  }\r\n\r\n  public acceptUrlAuth(url: string, peerId?: PeerId, mid?: number, buttonId?: number, writeAllowed?: boolean) {\r\n    return this.apiManager.invokeApi('messages.acceptUrlAuth', {\r\n      button_id: buttonId,\r\n      msg_id: mid ? getServerMessageId(mid) : undefined,\r\n      peer: peerId ? this.appPeersManager.getInputPeerById(peerId) : undefined,\r\n      url,\r\n      write_allowed: writeAllowed\r\n    }).then((urlAuthResult) => {\r\n      return urlAuthResult as Exclude<UrlAuthResult, UrlAuthResult.urlAuthResultRequest>;\r\n    });\r\n  }\r\n\r\n  public getWebAuthorizations() {\r\n    return this.apiManager.invokeApi('account.getWebAuthorizations').then((webAuthorizations) => {\r\n      this.appUsersManager.saveApiUsers(webAuthorizations.users);\r\n      return webAuthorizations.authorizations;\r\n    });\r\n  }\r\n\r\n  public resetWebAuthorization(hash: Long) {\r\n    return this.apiManager.invokeApi('account.resetWebAuthorization', {\r\n      hash\r\n    });\r\n  }\r\n\r\n  public resetWebAuthorizations() {\r\n    return this.apiManager.invokeApi('account.resetWebAuthorizations');\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {AccountThemes, AccountWallPapers, InputWallPaper, WallPaper} from '../../layer';\r\nimport {AppManager} from './manager';\r\n\r\ntype WallPaperId = WallPaper['id'];\r\n\r\nexport default class AppThemesManager extends AppManager {\r\n  private wallPapers: {[id: WallPaperId]: WallPaper};\r\n\r\n  protected after() {\r\n    this.wallPapers = {};\r\n  }\r\n\r\n  private saveWallPaper(wallPaper: WallPaper) {\r\n    if(!wallPaper) {\r\n      return wallPaper;\r\n    }\r\n    // const oldWallPaper = this.wallPapers[wallPaper.id];\r\n\r\n    // ! IT'S BROKEN NOW. SERVER RETURNS SAME ID FOR DIFFERENT WALLPAPERS\r\n    // if(oldWallPaper) {\r\n    //   console.log('rewrite', {...oldWallPaper}, {...wallPaper});\r\n    // }\r\n\r\n    if(wallPaper._ !== 'wallPaperNoFile') {\r\n      wallPaper.document = this.appDocsManager.saveDoc(wallPaper.document, {type: 'wallPaper', wallPaperId: wallPaper.id});\r\n    }\r\n\r\n    // if(oldWallPaper) {\r\n    //   return Object.assign(oldWallPaper, wallPaper);\r\n    // } else {\r\n    this.wallPapers[wallPaper.id] = wallPaper;\r\n    // }\r\n\r\n    return wallPaper;\r\n  }\r\n\r\n  public getWallPaper(inputWallPaper: InputWallPaper) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'account.getWallPaper',\r\n      params: {wallpaper: inputWallPaper},\r\n      processResult: (wallPaper) => {\r\n        return this.saveWallPaper(wallPaper);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getInputWallPaper(wallPaper: WallPaper | string): InputWallPaper {\r\n    if(typeof(wallPaper) === 'string') {\r\n      return {_: 'inputWallPaperSlug', slug: wallPaper};\r\n    } else if(wallPaper._ === 'wallPaperNoFile') {\r\n      return {_: 'inputWallPaperNoFile', id: wallPaper.id};\r\n    } else {\r\n      return {_: 'inputWallPaper', id: wallPaper.id, access_hash: wallPaper.access_hash};\r\n    }\r\n  }\r\n\r\n  public getWallPaperById(id: WallPaperId) {\r\n    const wallPaper = this.wallPapers[id];\r\n    return this.getWallPaper(this.getInputWallPaper(wallPaper));\r\n  }\r\n\r\n  public getThemes() {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'account.getThemes',\r\n      params: {format: 'macos', hash: 0},\r\n      processResult: (accountThemes) => {\r\n        assumeType<AccountThemes.accountThemes>(accountThemes);\r\n\r\n        accountThemes.themes.forEach((theme) => {\r\n          if(!theme.settings) {\r\n            return;\r\n          }\r\n\r\n          theme.settings.forEach((themeSettings) => {\r\n            themeSettings.wallpaper = this.saveWallPaper(themeSettings.wallpaper);\r\n          });\r\n        });\r\n\r\n        return accountThemes.themes;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getWallPapers() {\r\n    return this.apiManager.invokeApiHashable({method: 'account.getWallPapers'}).then((accountWallpapers) => {\r\n      const wallPapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers;\r\n      wallPapers.forEach((wallPaper, idx, arr) => {\r\n        arr[idx] = this.saveWallPaper(wallPaper);\r\n      });\r\n\r\n      return wallPapers;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {AppManager} from './manager';\r\n\r\nexport default class AppUsernamesManager extends AppManager {\r\n  public toggleUsername({\r\n    username,\r\n    active,\r\n    peerId\r\n  }: {\r\n    username: string,\r\n    active: boolean,\r\n    peerId?: PeerId\r\n  }) {\r\n    if(!peerId || peerId === this.appUsersManager.userId) {\r\n      return this.apiManager.invokeApi('account.toggleUsername', {username, active});\r\n    } else if(peerId.isAnyChat()) {\r\n      const chatId = peerId.toChatId();\r\n      const promise = this.apiManager.invokeApi('channels.toggleUsername', {\r\n        channel: this.appChatsManager.getChannelInput(chatId),\r\n        username,\r\n        active\r\n      });\r\n\r\n      return this.appChatsManager.refreshChatAfterRequest(chatId, promise);\r\n    } else {\r\n      return this.apiManager.invokeApi('bots.toggleUsername', {\r\n        bot: this.appUsersManager.getUserInput(peerId),\r\n        username,\r\n        active\r\n      });\r\n    }\r\n  }\r\n\r\n  public reorderUsernames({\r\n    peerId,\r\n    order\r\n  }: {\r\n    peerId: PeerId,\r\n    order: string[]\r\n  }) {\r\n    if(!peerId) {\r\n      return this.apiManager.invokeApi('account.reorderUsernames', {order});\r\n    } else if(peerId.isAnyChat()) {\r\n      const chatId = peerId.toChatId();\r\n      const promise = this.apiManager.invokeApi('channels.reorderUsernames', {\r\n        channel: this.appChatsManager.getChannelInput(chatId),\r\n        order\r\n      });\r\n\r\n      return this.appChatsManager.refreshChatAfterRequest(chatId, promise);\r\n    } else {\r\n      return this.apiManager.invokeApi('bots.reorderUsernames', {\r\n        bot: this.appUsersManager.getUserInput(peerId),\r\n        order\r\n      });\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {ChatInvite, InputUser, Updates} from '../../layer';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\n\r\nexport default class AppChatInvitesManager extends AppManager {\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updatePendingJoinRequests: async(update) => {\r\n        const peerId = getPeerId(update.peer);\r\n        const state = await this.appStateManager.getState();\r\n        delete state.hideChatJoinRequests[peerId];\r\n        this.appStateManager.pushToState('hideChatJoinRequests', state.hideChatJoinRequests);\r\n        this.rootScope.dispatchEvent('chat_requests', {\r\n          chatId: peerId.toChatId(),\r\n          recentRequesters: update.recent_requesters,\r\n          requestsPending: update.requests_pending\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveChatInvite(hash: string, chatInvite: ChatInvite) {\r\n    if(!chatInvite) {\r\n      return;\r\n    }\r\n\r\n    if((chatInvite as ChatInvite.chatInvitePeek).chat) {\r\n      this.appChatsManager.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\r\n    }\r\n\r\n    if((chatInvite as ChatInvite.chatInvite).photo) {\r\n      (chatInvite as ChatInvite.chatInvite).photo = this.appPhotosManager.savePhoto(\r\n        (chatInvite as ChatInvite.chatInvite).photo,\r\n        {type: 'chatInvite', hash}\r\n      );\r\n    }\r\n\r\n    return chatInvite;\r\n  }\r\n\r\n  public exportChatInvite({\r\n    chatId,\r\n    expireDate,\r\n    usageLimit,\r\n    requestNeeded,\r\n    title\r\n  }: {\r\n    chatId: ChatId,\r\n    expireDate?: number,\r\n    usageLimit?: number,\r\n    requestNeeded?: boolean,\r\n    title?: string\r\n  }) {\r\n    return this.apiManager.invokeApi('messages.exportChatInvite', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      expire_date: expireDate,\r\n      usage_limit: usageLimit,\r\n      request_needed: requestNeeded,\r\n      title\r\n    });\r\n  }\r\n\r\n  public checkChatInvite(hash: string) {\r\n    return this.apiManager.invokeApi('messages.checkChatInvite', {hash}).then((chatInvite) => {\r\n      return this.appChatInvitesManager.saveChatInvite(hash, chatInvite);\r\n    });\r\n  }\r\n\r\n  public importChatInvite(hash: string) {\r\n    return this.apiManager.invokeApi('messages.importChatInvite', {hash})\r\n    .then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n      const chat = (updates as Updates.updates).chats[0];\r\n      return chat.id;\r\n    });\r\n  }\r\n\r\n  public getExportedChatInvites({\r\n    chatId,\r\n    revoked,\r\n    adminId\r\n  }: {\r\n    chatId: ChatId,\r\n    revoked?: boolean,\r\n    adminId?: UserId\r\n  }) {\r\n    return this.apiManager.invokeApi('messages.getExportedChatInvites', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      admin_id: adminId ? this.appUsersManager.getUserInput(adminId) : {_: 'inputUserSelf'},\r\n      limit: 50,\r\n      revoked\r\n    }).then((exportedChatInvites) => {\r\n      this.appUsersManager.saveApiUsers(exportedChatInvites.users);\r\n      return exportedChatInvites;\r\n    });\r\n  }\r\n\r\n  public editExportedChatInvite({\r\n    chatId,\r\n    link,\r\n    expireDate,\r\n    usageLimit,\r\n    requestNeeded,\r\n    title,\r\n    revoked\r\n  }: {\r\n    chatId: ChatId,\r\n    link: string,\r\n    expireDate?: number,\r\n    usageLimit?: number,\r\n    requestNeeded?: boolean,\r\n    title?: string,\r\n    revoked?: boolean\r\n  }) {\r\n    return this.apiManager.invokeApi('messages.editExportedChatInvite', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      revoked,\r\n      link,\r\n      expire_date: expireDate,\r\n      usage_limit: usageLimit,\r\n      request_needed: requestNeeded,\r\n      title\r\n    }).then((exportedChatInvite) => {\r\n      this.appUsersManager.saveApiUsers(exportedChatInvite.users);\r\n      return exportedChatInvite;\r\n    });\r\n  }\r\n\r\n  public deleteRevokedExportedChatInvites(chatId: ChatId, adminId?: UserId) {\r\n    return this.apiManager.invokeApi('messages.deleteRevokedExportedChatInvites', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      admin_id: this.appUsersManager.getUserInput(adminId)\r\n    });\r\n  }\r\n\r\n  public deleteExportedChatInvite(chatId: ChatId, link: string) {\r\n    return this.apiManager.invokeApi('messages.deleteExportedChatInvite', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      link\r\n    });\r\n  }\r\n\r\n  public getAdminsWithInvites(chatId: ChatId) {\r\n    return this.apiManager.invokeApi('messages.getAdminsWithInvites', {\r\n      peer: this.appChatsManager.getInputPeer(chatId)\r\n    }).then((chatAdminsWithInvites) => {\r\n      this.appUsersManager.saveApiUsers(chatAdminsWithInvites.users);\r\n      return chatAdminsWithInvites;\r\n    });\r\n  }\r\n\r\n  public getChatInviteImporters({\r\n    chatId,\r\n    limit = 50,\r\n    offsetDate = 0,\r\n    offsetUserId,\r\n    link,\r\n    q,\r\n    requested\r\n  }: {\r\n    chatId: ChatId,\r\n    limit?: number,\r\n    offsetDate?: number,\r\n    offsetUserId?: UserId,\r\n    link?: string,\r\n    q?: string,\r\n    requested?: boolean\r\n  }) {\r\n    const offsetUser: InputUser = offsetUserId ? this.appUsersManager.getUserInput(offsetUserId) : {_: 'inputUserEmpty'};\r\n    return this.apiManager.invokeApi('messages.getChatInviteImporters', {\r\n      peer: this.appChatsManager.getInputPeer(chatId),\r\n      limit,\r\n      offset_date: offsetDate,\r\n      offset_user: offsetUser,\r\n      link,\r\n      q,\r\n      requested\r\n    }).then((chatInviteImporters) => {\r\n      this.appUsersManager.saveApiUsers(chatInviteImporters.users);\r\n      return chatInviteImporters;\r\n    });\r\n  }\r\n}\r\n","enum StoriesCacheType {\r\n  Stories = 'stories',\r\n  Pinned = 'pinnedStories',\r\n  Archive = 'archiveStories'\r\n}\r\n\r\nexport default StoriesCacheType;\r\n","import insertInDescendSortedArray from '../../../../helpers/array/insertInDescendSortedArray';\r\nimport {StoryItem} from '../../../../layer';\r\nimport StoriesCacheType from './cacheType';\r\n\r\nexport default function insertStory<T extends StoryItem | number>(array: T[], storyItem: T, cacheType: StoriesCacheType) {\r\n  if(cacheType !== StoriesCacheType.Stories) {\r\n    // @ts-ignore\r\n    return insertInDescendSortedArray(\r\n      array,\r\n      storyItem,\r\n      typeof(storyItem) !== 'number' ? 'id' : undefined\r\n    );\r\n  } else {\r\n    return insertInDescendSortedArray(\r\n      array,\r\n      storyItem,\r\n      typeof(storyItem) !== 'number' ? (storyItem) => 0xFFFFFFFF - (storyItem as StoryItem).id : (storyId) => 0xFFFFFFFF - (storyId as number)\r\n    );\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport forEachReverse from '../../helpers/array/forEachReverse';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport deepEqual from '../../helpers/object/deepEqual';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport pause from '../../helpers/schedulers/pause';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {Reaction, ReportReason, StoriesAllStories, StoriesStories, StoryItem, Update, PeerStories, User, Chat, StoryView, MediaArea} from '../../layer';\r\nimport {MTAppConfig} from '../mtproto/appConfig';\r\nimport {SERVICE_PEER_ID, TEST_NO_STORIES} from '../mtproto/mtproto_config';\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {AppManager} from './manager';\r\nimport reactionsEqual from './utils/reactions/reactionsEqual';\r\nimport StoriesCacheType from './utils/stories/cacheType';\r\nimport insertStory from './utils/stories/insertStory';\r\n\r\ntype MyStoryItem = Exclude<StoryItem, StoryItem.storyItemDeleted>;\r\n\r\nexport type StoriesListType = 'stories' | 'archive';\r\nexport type StoriesListPosition = {type: StoriesListType, index: number};\r\nexport type StoriesSegment = {length: number, type: 'unread' | 'close' | 'read'};\r\nexport type StoriesSegments = StoriesSegment[];\r\ntype StoriesPeerCache = {\r\n  peerId: PeerId,\r\n  stories: StoryItem['id'][],\r\n  pinnedStories: StoriesPeerCache['stories'],\r\n  archiveStories: StoriesPeerCache['stories'],\r\n  storiesMap: Map<MyStoryItem['id'], MyStoryItem>,\r\n  deleted: Set<number>,\r\n  maxReadId?: number,\r\n  getStoriesPromises: Map<StoryItem['id'], CancellablePromise<StoryItem.storyItem>>,\r\n  getStoriesPromise?: CancellablePromise<void>,\r\n  dispatchStoriesEvent?: boolean,\r\n  pinnedLoadedAll?: boolean,\r\n  archiveLoadedAll?: boolean,\r\n  position?: StoriesListPosition\r\n};\r\n\r\ntype ExpiringItem = {peerId: PeerId, id: number, timestamp: number};\r\n\r\nconst TEST_SKIPPED = false;\r\nconst TEST_READ = false;\r\nconst TEST_EXPIRING = 0;\r\n\r\nexport default class AppStoriesManager extends AppManager {\r\n  private cache: {[userId: UserId]: StoriesPeerCache};\r\n  private lists: {[type in StoriesListType]: PeerId[]};\r\n  private changelogPeerId: PeerId;\r\n  private expiring: ExpiringItem[];\r\n\r\n  protected after() {\r\n    this.clear(true);\r\n\r\n    this.changelogPeerId = SERVICE_PEER_ID;\r\n\r\n    if(TEST_NO_STORIES) {\r\n      return;\r\n    }\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateStory: this.onUpdateStory,\r\n\r\n      updateReadStories: this.onUpdateReadStories\r\n    });\r\n\r\n    this.rootScope.addEventListener('app_config', this.setChangelogPeerIdFromAppConfig);\r\n\r\n    this.rootScope.addEventListener('contacts_update', (userId) => {\r\n      this.onSubscriptionUpdate(userId.toPeerId(false));\r\n    });\r\n\r\n    this.rootScope.addEventListener('chat_participation', ({chatId}) => {\r\n      this.onSubscriptionUpdate(chatId.toPeerId(true));\r\n    });\r\n\r\n    this.rootScope.addEventListener('peer_stories_hidden', ({peerId}) => {\r\n      const cache = this.getPeerStoriesCache(peerId, false);\r\n      if(!cache) {\r\n        return;\r\n      }\r\n\r\n      this.updateListCachePosition(cache);\r\n      this.rootScope.dispatchEvent('stories_stories', this.convertPeerStoriesCache(cache));\r\n\r\n      // move stories from cache to archive\r\n      // const arrays = [cache[StoriesCacheType.Stories], cache[StoriesCacheType.Archive]];\r\n      // if(!hidden) {\r\n      //   arrays.reverse();\r\n      // }\r\n\r\n      // const [from, to] = arrays;\r\n      // const stories = from.splice(0, from.length);\r\n      // to.push(...stories);\r\n    });\r\n\r\n    this.rootScope.addEventListener('user_auth', () => {\r\n      setTimeout(() => {\r\n        this.getAllStories(false, undefined, true);\r\n      }, 2e3);\r\n    });\r\n\r\n    setInterval(() => this.checkExpired(), 5e3);\r\n  }\r\n\r\n  public clear = (init?: boolean) => {\r\n    this.cache = {};\r\n    this.lists = {\r\n      stories: [],\r\n      archive: []\r\n    };\r\n    this.expiring = [];\r\n  };\r\n\r\n  private onSubscriptionUpdate(peerId: PeerId) {\r\n    const peer = this.getPeer(peerId);\r\n    if(!peer) {\r\n      return;\r\n    }\r\n\r\n    const cache = this.getPeerStoriesCache(peerId, false);\r\n    if(!cache) {\r\n      const isSubscribed = this.isSubcribedToPeer(peerId);\r\n      const hasStories = peer.stories_max_id !== undefined;\r\n      if(isSubscribed && hasStories) {\r\n        Promise.resolve(this.getPeerStories(peerId)).then((peerStories) => {\r\n          this.rootScope.dispatchEvent('stories_stories', peerStories);\r\n        });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const position = cache.position;\r\n    this.updateListCachePosition(cache);\r\n    if(!position && cache.position) { // added to list\r\n      this.rootScope.dispatchEvent('stories_stories', this.convertPeerStoriesCache(cache));\r\n    }\r\n  }\r\n\r\n  private checkExpired() {\r\n    const now = tsNow(true);\r\n    let item: ExpiringItem;\r\n    while(item = this.expiring[0]) {\r\n      if(item.timestamp > now) {\r\n        break;\r\n      }\r\n\r\n      this.expiring.shift();\r\n      const cache = this.getPeerStoriesCache(item.peerId, false);\r\n      if(!cache) {\r\n        continue;\r\n      }\r\n\r\n      const spliced = indexOfAndSplice(cache.stories, item.id);\r\n      if(spliced !== undefined) {\r\n        this.updateListCachePosition(cache);\r\n        this.rootScope.dispatchEvent('story_expired', {peerId: cache.peerId, id: item.id});\r\n      }\r\n    }\r\n  }\r\n\r\n  private setChangelogPeerIdFromAppConfig = (appConfig: MTAppConfig) => {\r\n    const userId = appConfig.stories_changelog_user_id;\r\n    return this.changelogPeerId = userId ? userId.toPeerId(false) : SERVICE_PEER_ID;\r\n  };\r\n\r\n  public getChangelogPeerId(): PeerId | Promise<PeerId> {\r\n    return this.changelogPeerId || callbackify(this.apiManager.getAppConfig(), this.setChangelogPeerIdFromAppConfig);\r\n  }\r\n\r\n  public generateSortIndexForCache(cache: StoriesPeerCache) {\r\n    const cacheType = this.getCacheTypeForPeerId(cache.peerId);\r\n    if(!cacheType) {\r\n      return;\r\n    }\r\n\r\n    const lastStoryId = cache.stories[cache.stories.length - 1];\r\n    if(!lastStoryId) {\r\n      return;\r\n    }\r\n\r\n    const lastStory = cache.storiesMap.get(lastStoryId);\r\n    const unreadType = this.getUnreadType(cache.peerId);\r\n    const isMe = cache.peerId === this.rootScope.myId;\r\n    const isUnread = unreadType !== 'read';\r\n    const isChangelog = cache.peerId === this.changelogPeerId;\r\n    const isPremium = cache.peerId.isUser() ? this.appUsersManager.isPremium(cache.peerId.toUserId()) : false;\r\n    const index = [\r\n      isMe,\r\n      isUnread,\r\n      isChangelog,\r\n      isPremium\r\n    ].map((boolean) => +boolean).join('') + lastStory.date;\r\n    return +index;\r\n  }\r\n\r\n  public generateListCachePosition(cache: StoriesPeerCache) {\r\n    const index = this.generateSortIndexForCache(cache);\r\n    if(!index) {\r\n      return;\r\n    }\r\n\r\n    const peer = this.appPeersManager.getPeer(cache.peerId) as User.user | Chat.channel;\r\n    const position: StoriesListPosition = {\r\n      type: peer.pFlags.stories_hidden ? 'archive' : 'stories',\r\n      index\r\n    };\r\n\r\n    return position;\r\n  }\r\n\r\n  public updateListCachePosition(cache: StoriesPeerCache) {\r\n    const previousPosition = cache.position;\r\n    const position = this.generateListCachePosition(cache);\r\n    if(deepEqual(previousPosition, position)) {\r\n      return;\r\n    }\r\n\r\n    if(previousPosition && previousPosition.type !== position?.type) {\r\n      const previousList = this.lists[previousPosition.type];\r\n      indexOfAndSplice(previousList, cache.peerId);\r\n    }\r\n\r\n    cache.position = position;\r\n\r\n    if(position) {\r\n      const list = this.lists[position.type];\r\n      insertInDescendSortedArray(list, cache.peerId, (peerId) => {\r\n        const cache = this.getPeerStoriesCache(peerId);\r\n        return cache.position.index;\r\n      });\r\n    }\r\n\r\n    this.rootScope.dispatchEvent('stories_position', {peerId: cache.peerId, position});\r\n  }\r\n\r\n  public getPeerStoriesCache(peerId: PeerId, create = true): StoriesPeerCache {\r\n    return this.cache[peerId] ??= create ? {\r\n      peerId,\r\n      stories: [],\r\n      pinnedStories: [],\r\n      archiveStories: [],\r\n      storiesMap: new Map(),\r\n      getStoriesPromises: new Map(),\r\n      deleted: new Set()\r\n    } : undefined;\r\n  }\r\n\r\n  public convertPeerStoriesCache(cache: StoriesPeerCache): PeerStories {\r\n    return {\r\n      _: 'peerStories',\r\n      peer: this.appPeersManager.getOutputPeer(cache.peerId),\r\n      stories: cache.stories.map((storyId) => cache.storiesMap.get(storyId)),\r\n      max_read_id: cache.maxReadId\r\n    };\r\n  }\r\n\r\n  public saveStoryItem(storyItem: StoryItem, cache: StoriesPeerCache, cacheType?: StoriesCacheType): MyStoryItem {\r\n    if(TEST_NO_STORIES || !storyItem || storyItem._ === 'storyItemDeleted') {\r\n      return;\r\n    }\r\n\r\n    const oldStoryItem = cache.storiesMap.get(storyItem.id);\r\n    const oldIsSkipped = oldStoryItem?._ === 'storyItemSkipped';\r\n    const isSkipped = storyItem._ === 'storyItemSkipped';\r\n    if(isSkipped && oldStoryItem && !oldIsSkipped) {\r\n      return oldStoryItem;\r\n    }\r\n\r\n    if(!isSkipped) {\r\n      const mediaContext: ReferenceContext = {\r\n        type: 'storyItem',\r\n        peerId: cache.peerId,\r\n        storyId: storyItem.id\r\n      };\r\n\r\n      this.appMessagesManager.saveMessageMedia(storyItem, mediaContext);\r\n      const mediaAreas = storyItem.media_areas;\r\n      mediaAreas?.forEach((mediaArea) => {\r\n        (mediaArea as MediaArea.mediaAreaChannelPost).msg_id =\r\n          this.appMessagesIdsManager.generateMessageId(\r\n            (mediaArea as MediaArea.mediaAreaChannelPost).msg_id,\r\n            (mediaArea as MediaArea.mediaAreaChannelPost).channel_id\r\n          );\r\n      });\r\n    }\r\n\r\n    let modifiedPinned: boolean;\r\n    if(cacheType !== StoriesCacheType.Pinned) {\r\n      const wasPinned = !!(oldStoryItem as StoryItem.storyItem)?.pFlags?.pinned;\r\n      const newPinned = !!(storyItem as StoryItem.storyItem).pFlags?.pinned;\r\n      if(wasPinned !== newPinned) {\r\n        if(newPinned) {\r\n          if(cache.pinnedLoadedAll ||\r\n            (cache.pinnedStories.length && storyItem.id > cache.pinnedStories[cache.pinnedStories.length - 1])) {\r\n            insertStory(cache.pinnedStories, storyItem.id, StoriesCacheType.Pinned);\r\n            modifiedPinned = true;\r\n          }\r\n        } else if(indexOfAndSplice(cache.pinnedStories, storyItem.id)) {\r\n          modifiedPinned = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    let modifiedArchive: boolean;\r\n    if(cacheType !== StoriesCacheType.Archive && cache.peerId === this.appPeersManager.peerId) {\r\n      if(!cache.archiveStories.includes(storyItem.id) && (cache.archiveLoadedAll ||\r\n        (cache.archiveStories.length && storyItem.id > cache.archiveStories[cache.archiveStories.length - 1]))) {\r\n        insertStory(cache.archiveStories, storyItem.id, StoriesCacheType.Archive);\r\n        modifiedArchive = true;\r\n      }\r\n    }\r\n\r\n    if(cacheType === StoriesCacheType.Stories) {\r\n      if(TEST_EXPIRING) {\r\n        storyItem.expire_date = tsNow(true) + TEST_EXPIRING;\r\n      }\r\n\r\n      const pos = this.expiring.findIndex((item) => item.peerId === cache.peerId && item.id === storyItem.id);\r\n      insertInDescendSortedArray(\r\n        this.expiring,\r\n        {peerId: cache.peerId, id: storyItem.id, timestamp: storyItem.expire_date},\r\n        (item) => 0x7FFFFFFF - (item.timestamp),\r\n        pos\r\n      );\r\n    }\r\n\r\n    if(cacheType) {\r\n      const array = cache[cacheType];\r\n      insertStory(array, storyItem.id, cacheType);\r\n    }\r\n\r\n    if(!oldStoryItem) {\r\n      cache.storiesMap.set(storyItem.id, storyItem);\r\n    } else {\r\n      if(!oldIsSkipped && !isSkipped && storyItem.pFlags.min) {\r\n        const preserve: (keyof StoryItem.storyItem)[] = ['privacy', 'views'];\r\n        for(const key of preserve) {\r\n          // @ts-ignore\r\n          storyItem[key] = oldStoryItem[key];\r\n        }\r\n      }\r\n\r\n      if(!oldIsSkipped && !isSkipped && storyItem.pFlags.min) {\r\n        const preserveFlags: (keyof StoryItem.storyItem['pFlags'])[] = ['out' as any];\r\n        for(const key of preserveFlags) {\r\n          // @ts-ignore\r\n          storyItem.pFlags[key] = oldStoryItem.pFlags[key];\r\n        }\r\n      }\r\n\r\n      safeReplaceObject(oldStoryItem, storyItem);\r\n    }\r\n\r\n    if(oldStoryItem || modifiedPinned || modifiedArchive) {\r\n      this.rootScope.dispatchEvent('story_update', {\r\n        peerId: cache.peerId,\r\n        story: oldStoryItem || storyItem,\r\n        modifiedPinned,\r\n        modifiedArchive\r\n      });\r\n    }\r\n\r\n    return oldStoryItem || storyItem;\r\n  }\r\n\r\n  public saveStoryItems(storyItems: StoryItem[], cache: StoriesPeerCache, cacheType?: StoriesCacheType) {\r\n    // if((storyItems as any).saved) return storyItems;\r\n    // (storyItems as any).saved = true;\r\n    const indexesToDelete: number[] = [];\r\n    const newStoryItems = storyItems.map((storyItem, idx) => {\r\n      storyItem = this.saveStoryItem(storyItem, cache, cacheType);\r\n      if(!storyItem) {\r\n        indexesToDelete.push(idx);\r\n      }\r\n\r\n      return storyItem;\r\n    });\r\n\r\n    forEachReverse(indexesToDelete, (idx) => {\r\n      newStoryItems.splice(idx, 1);\r\n    });\r\n\r\n    if(cache.stories.length && cacheType === StoriesCacheType.Stories) { // * fix peer missing flag\r\n      const peer = this.getPeer(cache.peerId);\r\n      if(!peer.stories_max_id) {\r\n        const newPeer: typeof peer = {\r\n          ...peer,\r\n          stories_max_id: cache.storiesMap.get(cache.stories[cache.stories.length - 1]).id\r\n        };\r\n\r\n        if(cache.peerId.isUser()) this.appUsersManager.saveApiUsers([newPeer as User.user]);\r\n        else this.appChatsManager.saveApiChats([newPeer as Chat.channel]);\r\n      }\r\n    }\r\n\r\n    this.updateListCachePosition(cache);\r\n\r\n    return newStoryItems;\r\n  }\r\n\r\n  public getPeer(peerId: PeerId) {\r\n    return this.appPeersManager.getPeer(peerId) as User.user | Chat.channel;\r\n  }\r\n\r\n  public saveApiPeerStories<T extends User.user | Chat.channel>(peer: T, oldPeer?: T) {\r\n    if(peer._ !== 'channel' && peer._ !== 'user') {\r\n      return;\r\n    }\r\n\r\n    const wasStories = oldPeer.stories_max_id ? true : (oldPeer.pFlags.stories_unavailable ? false : undefined);\r\n    let newStories = peer.stories_max_id ? true : (peer.pFlags.stories_unavailable ? false : undefined);\r\n    if(wasStories !== newStories) {\r\n      if(newStories === undefined) {\r\n        if(wasStories) {\r\n          peer.stories_max_id = oldPeer.stories_max_id;\r\n        }\r\n\r\n        newStories = wasStories;\r\n      }/*  else {\r\n        if(!newStories) {\r\n          delete peer.pFlags.stories_unavailable;\r\n        }\r\n      } */\r\n    }\r\n\r\n    const wasStoriesHidden = oldPeer.pFlags.stories_hidden;\r\n    const newStoriesHidden = peer.pFlags.stories_hidden;\r\n\r\n    return () => {\r\n      if(TEST_NO_STORIES) {\r\n        return;\r\n      }\r\n\r\n      const peerId = peer.id.toPeerId(peer._ !== 'user');\r\n      if(wasStories !== newStories && newStories !== undefined) {\r\n        this.rootScope.dispatchEvent('peer_stories', {peerId, available: newStories});\r\n      }\r\n\r\n      if(wasStoriesHidden !== newStoriesHidden) {\r\n        this.rootScope.dispatchEvent('peer_stories_hidden', {peerId, hidden: newStoriesHidden});\r\n      }\r\n    };\r\n  }\r\n\r\n  public saveStoriesStories(storiesStories: StoriesStories, cache: StoriesPeerCache, cacheType?: StoriesCacheType) {\r\n    this.appPeersManager.saveApiPeers(storiesStories);\r\n    const storyItems = this.saveStoryItems(storiesStories.stories, cache, cacheType) as StoryItem.storyItem[];\r\n\r\n    if(TEST_NO_STORIES) {\r\n      storyItems.splice(0, Infinity);\r\n    }\r\n\r\n    return storyItems;\r\n  }\r\n\r\n  public savePeerStories(peerStories: PeerStories) {\r\n    const peerId = this.appPeersManager.getPeerId(peerStories.peer);\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n\r\n    if(TEST_NO_STORIES) {\r\n      peerStories.stories = [];\r\n    }\r\n\r\n    if(TEST_SKIPPED) {\r\n      peerStories.stories = peerStories.stories.map((storyItem) => {\r\n        return {\r\n          _: 'storyItemSkipped',\r\n          id: storyItem.id,\r\n          date: (storyItem as StoryItem.storyItem).date,\r\n          expire_date: (Date.now() / 1000 | 0) + 86400,\r\n          pFlags: {}\r\n        };\r\n      });\r\n    }\r\n\r\n    const cacheType = this.getCacheTypeForPeerId(peerId, true);\r\n    cache.maxReadId = peerStories.max_read_id ?? 0;\r\n    peerStories.stories = this.saveStoryItems(peerStories.stories, cache, cacheType);\r\n\r\n    if(cache.dispatchStoriesEvent) {\r\n      delete cache.dispatchStoriesEvent;\r\n      this.rootScope.dispatchEvent('peer_stories', {\r\n        peerId,\r\n        available: cache.stories.length > 0\r\n      });\r\n    }\r\n\r\n    return peerStories;\r\n  }\r\n\r\n  public getUnreadType(peerId: PeerId, storyId?: number, cache = this.getPeerStoriesCache(peerId)): StoriesSegment['type'] {\r\n    storyId ??= cache.stories[cache.stories.length - 1];\r\n    if(!storyId && !cache.dispatchStoriesEvent) {\r\n      cache.dispatchStoriesEvent = true;\r\n      this.getPeerStories(peerId);\r\n    }\r\n\r\n    if(!storyId) {\r\n      return;\r\n    }\r\n\r\n    return storyId > cache.maxReadId ? (cache.storiesMap.get(storyId).pFlags.close_friends ? 'close' : 'unread') : 'read';\r\n  }\r\n\r\n  public getPeerStoriesSegments(peerId: PeerId): StoriesSegments | Promise<StoriesSegments> {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    if(cache.maxReadId === undefined) {\r\n      return callbackify(this.getPeerStories(peerId), () => this.getPeerStoriesSegments(peerId));\r\n    }\r\n\r\n    if(!cache.stories.length) {\r\n      return;\r\n    }\r\n\r\n    const segments: StoriesSegments = [];\r\n    let lastSegment: StoriesSegment;\r\n    cache.stories.forEach((storyId) => {\r\n      const type = this.getUnreadType(peerId, storyId, cache);\r\n      if(lastSegment?.type !== type) {\r\n        lastSegment = {\r\n          length: 1,\r\n          type\r\n        };\r\n\r\n        segments.push(lastSegment);\r\n      } else {\r\n        ++lastSegment.length;\r\n      }\r\n    });\r\n\r\n    return segments;\r\n  }\r\n\r\n  public deleteStories(peerId: PeerId, ids: StoryItem['id'][]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.deleteStories',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: ids\r\n      },\r\n      processResult: (ids) => {\r\n        ids.forEach((id) => {\r\n          this.apiUpdatesManager.processLocalUpdate({\r\n            _: 'updateStory',\r\n            peer: this.appPeersManager.getOutputPeer(peerId),\r\n            story: {\r\n              _: 'storyItemDeleted',\r\n              id\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public togglePinned(peerId: PeerId, storyId: StoryItem['id'] | StoryItem['id'][], pinned: boolean) {\r\n    if(!Array.isArray(storyId)) storyId = [storyId];\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.togglePinned',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: storyId,\r\n        pinned\r\n      },\r\n      processResult: (result) => {\r\n        if(!result.length) {\r\n          return;\r\n        }\r\n\r\n        const cache = this.getPeerStoriesCache(this.rootScope.myId);\r\n        const newStories: StoryItem.storyItem[] = result.map((storyId) => {\r\n          const story = cache.storiesMap.get(storyId);\r\n          if(story?._ !== 'storyItem') {\r\n            return;\r\n          }\r\n\r\n          // if(pinned) story.pFlags.pinned = true;\r\n          // else delete story.pFlags.pinned;\r\n          return {\r\n            ...story,\r\n            pFlags: {\r\n              ...story.pFlags,\r\n              pinned: pinned || undefined\r\n            }\r\n          };\r\n        });\r\n\r\n        this.saveStoryItems(newStories, cache);\r\n      }\r\n    });\r\n  }\r\n\r\n  public hasArchive() {\r\n    return this.lists.archive.length > 0;\r\n  }\r\n\r\n  public getAllStories(next?: boolean, state?: string, hidden?: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getAllStories',\r\n      params: {\r\n        next,\r\n        state,\r\n        hidden\r\n      },\r\n      processResult: (storiesAllStories) => {\r\n        assumeType<StoriesAllStories.storiesAllStories>(storiesAllStories);\r\n        this.appPeersManager.saveApiPeers(storiesAllStories);\r\n        storiesAllStories.peer_stories = storiesAllStories.peer_stories\r\n        .map((peerStories) => this.savePeerStories(peerStories))\r\n        .filter((peerStories) => peerStories.stories.length);\r\n        return storiesAllStories;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPeerStories(peerId: PeerId) {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    if(cache.maxReadId !== undefined) {\r\n      return this.convertPeerStoriesCache(cache);\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getPeerStories',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      },\r\n      processResult: (storiesPeerStories) => {\r\n        this.appPeersManager.saveApiPeers(storiesPeerStories);\r\n        return this.savePeerStories(storiesPeerStories.stories);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getCachedStories(cache: StoriesPeerCache, pinned: boolean, limit: number, offsetId: number) {\r\n    const array = pinned ? cache.pinnedStories : cache.archiveStories;\r\n    const index = offsetId ? array.findIndex((storyId) => storyId < offsetId) : 0;\r\n    if(index !== -1) {\r\n      const sliced = array.slice(index, index + limit);\r\n      if(sliced.length === limit || (pinned ? cache.pinnedLoadedAll : cache.archiveLoadedAll)) {\r\n        return sliced.map((storyId) => cache.storiesMap.get(storyId)) as StoryItem.storyItem[];\r\n      }\r\n    }\r\n  }\r\n\r\n  private processLoadedStoriesStories(\r\n    cache: StoriesPeerCache,\r\n    pinned: boolean,\r\n    limit: number,\r\n    storiesStories: StoriesStories\r\n  ) {\r\n    const length = storiesStories.stories.length;\r\n    const storyItems = this.saveStoriesStories(\r\n      storiesStories,\r\n      cache,\r\n      pinned ? StoriesCacheType.Pinned : StoriesCacheType.Archive\r\n    );\r\n    const array = pinned ? cache.pinnedStories : cache.archiveStories;\r\n    if(array.length === storiesStories.count || length < limit) {\r\n      if(pinned) cache.pinnedLoadedAll = true;\r\n      else cache.archiveLoadedAll = true;\r\n    }\r\n\r\n    return storyItems;\r\n  }\r\n\r\n  public getPinnedStories(peerId: PeerId, limit: number, offsetId: number = 0) {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    const slice = this.getCachedStories(cache, true, limit, offsetId);\r\n    if(slice) {\r\n      return slice;\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getPinnedStories',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        limit,\r\n        offset_id: offsetId\r\n      },\r\n      processResult: this.processLoadedStoriesStories.bind(this, cache, true, limit)\r\n    });\r\n  }\r\n\r\n  public getStoriesArchive(peerId: PeerId, limit: number, offsetId: number = 0) {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    const slice = this.getCachedStories(cache, false, limit, offsetId);\r\n    if(slice) {\r\n      return slice;\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getStoriesArchive',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        limit,\r\n        offset_id: offsetId\r\n      },\r\n      processResult: this.processLoadedStoriesStories.bind(this, cache, false, limit)\r\n    });\r\n  }\r\n\r\n  public fetchSingleStories(cache: StoriesPeerCache) {\r\n    return cache.getStoriesPromise ??= pause(0).then(() => {\r\n      const ids = [...cache.getStoriesPromises.keys()];\r\n\r\n      const promise = this.apiManager.invokeApi('stories.getStoriesByID', {\r\n        peer: this.appPeersManager.getInputPeerById(cache.peerId),\r\n        id: ids\r\n      }, {floodMaxTimeout: Infinity});\r\n\r\n      const resolve = (storyItems: StoryItem.storyItem[]) => {\r\n        const map: Map<typeof storyItems[0]['id'], typeof storyItems[0]> = new Map(\r\n          storyItems.map((storyItem) => [storyItem.id, storyItem])\r\n        );\r\n\r\n        for(const id of ids) {\r\n          const storyItem = map.get(id);\r\n          if(!storyItem) {\r\n            this.handleDeletedStory(cache, id);\r\n          }\r\n\r\n          const promise = cache.getStoriesPromises.get(id);\r\n          cache.getStoriesPromises.delete(id);\r\n          promise.resolve(storyItem);\r\n        }\r\n      };\r\n\r\n      promise.then((storiesStories) => {\r\n        const storyItems = this.saveStoriesStories(storiesStories, cache);\r\n        resolve(storyItems);\r\n      }, () => {\r\n        resolve([]);\r\n      }).then(() => {\r\n        cache.getStoriesPromise = undefined;\r\n        if(cache.getStoriesPromises.size) {\r\n          this.fetchSingleStories(cache);\r\n        }\r\n\r\n        this.rootScope.dispatchEvent('stories_downloaded', {peerId: cache.peerId, ids});\r\n      });\r\n    });\r\n  }\r\n\r\n  public getStoryByIdCached(peerId: PeerId, id: StoryItem['id']): MyStoryItem {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    return cache.storiesMap.get(id);\r\n  }\r\n\r\n  public getStoryById(peerId: PeerId, id: StoryItem['id'], overwrite?: boolean): MaybePromise<StoryItem.storyItem> {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    const storyItem = cache.storiesMap.get(id);\r\n    if(cache.deleted.has(id)) {\r\n      return undefined;\r\n    } else if(storyItem?._ === 'storyItem' && !overwrite) {\r\n      return storyItem;\r\n    } else {\r\n      let promise = cache.getStoriesPromises.get(id);\r\n      if(promise) {\r\n        return promise;\r\n      }\r\n\r\n      cache.getStoriesPromises.set(id, promise = deferredPromise());\r\n      this.fetchSingleStories(cache);\r\n      return promise;\r\n    }\r\n  }\r\n\r\n  public getStoriesById(peerId: PeerId, ids: StoryItem['id'][], overwrite?: boolean): MaybePromise<StoryItem.storyItem[]> {\r\n    const arr = ids.map((id) => {\r\n      return this.getStoryById(peerId, id, overwrite);\r\n    });\r\n\r\n    const hasPromise = arr.some((item) => item instanceof Promise);\r\n    return hasPromise ? Promise.all(arr) : arr as StoryItem.storyItem[];\r\n  }\r\n\r\n  public readStories(peerId: PeerId, maxId: StoryItem['id']) {\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    if(cache.maxReadId !== undefined && cache.maxReadId >= maxId) {\r\n      return;\r\n    }\r\n\r\n    this.apiUpdatesManager.processLocalUpdate({\r\n      _: 'updateReadStories',\r\n      peer: this.appPeersManager.getOutputPeer(peerId),\r\n      max_id: maxId\r\n    });\r\n\r\n    if(TEST_READ) {\r\n      return;\r\n    }\r\n\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.readStories',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        max_id: maxId\r\n      }\r\n    });\r\n  }\r\n\r\n  public incrementStoryViews(peerId: PeerId, ids: StoryItem['id'][]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.incrementStoryViews',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: ids\r\n      }\r\n    });\r\n  }\r\n\r\n  public getStoryViewsList(peerId: PeerId, id: number, limit: number, offset: string = '', q?: string, justContacts?: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getStoryViewsList',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id,\r\n        limit,\r\n        offset,\r\n        q,\r\n        just_contacts: justContacts\r\n      },\r\n      processResult: (storiesStoryViews) => {\r\n        this.appPeersManager.saveApiPeers(storiesStoryViews);\r\n\r\n        storiesStoryViews.views.forEach((storyView) => {\r\n          (storyView as StoryView.storyViewPublicForward).message = this.appMessagesManager.saveMessage((storyView as StoryView.storyViewPublicForward).message);\r\n          (storyView as StoryView.storyViewPublicRepost).story = (storyView as StoryView.storyViewPublicRepost).story && this.appStoriesManager.saveStoryItem(\r\n            (storyView as StoryView.storyViewPublicRepost).story,\r\n            this.appStoriesManager.getPeerStoriesCache(this.appPeersManager.getPeerId((storyView as StoryView.storyViewPublicRepost).peer_id))\r\n          );\r\n        });\r\n\r\n        const views = storiesStoryViews.views.filter((storyView) => {\r\n          return storyView._ === 'storyView';\r\n        }) as StoryView.storyView[];\r\n\r\n        return {\r\n          count: storiesStoryViews.count,\r\n          views: views,\r\n          nextOffset: storiesStoryViews.next_offset\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public getStoriesViews(peerId: PeerId, ids: number[]) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.getStoriesViews',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id: ids\r\n      },\r\n      processResult: (storiesStoryViews) => {\r\n        this.appPeersManager.saveApiPeers(storiesStoryViews);\r\n\r\n        const cache = this.getPeerStoriesCache(this.appPeersManager.peerId);\r\n        storiesStoryViews.views.forEach((views, idx) => {\r\n          const id = ids[idx];\r\n          const storyItem = cache.storiesMap.get(id);\r\n          if(!storyItem) {\r\n            return;\r\n          }\r\n\r\n          this.saveStoryItems([{\r\n            ...(storyItem as StoryItem.storyItem),\r\n            views\r\n          }], cache);\r\n        });\r\n\r\n        return storiesStoryViews.views;\r\n      }\r\n    });\r\n  }\r\n\r\n  public report(peerId: PeerId, id: number[], reason: ReportReason['_'], message?: string) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.report',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        id,\r\n        reason: {_: reason},\r\n        message\r\n      }\r\n    });\r\n  }\r\n\r\n  public sendReaction(peerId: PeerId, id: number, reaction: Reaction) {\r\n    reaction ??= {_: 'reactionEmpty'};\r\n    const story = this.getStoryByIdCached(peerId, id) as StoryItem.storyItem;\r\n    const views = story.views;\r\n    const newSentReaction: Reaction = reaction._ === 'reactionEmpty' ? undefined : reaction;\r\n\r\n    if(views) {\r\n      const unsetPreviousReaction = () => {\r\n        const reactionCount = views.reactions?.find((reactionCount) => reactionsEqual(reactionCount.reaction, story.sent_reaction));\r\n        if(reactionCount) {\r\n          --reactionCount.count;\r\n          if(!reactionCount.count) {\r\n            indexOfAndSplice(views.reactions, reactionCount);\r\n          }\r\n        }\r\n      };\r\n\r\n      views.reactions_count ??= 0;\r\n      if(!story.sent_reaction && newSentReaction) {\r\n        ++views.reactions_count;\r\n      } else if(story.sent_reaction && !newSentReaction) {\r\n        --views.reactions_count;\r\n      }\r\n\r\n      unsetPreviousReaction();\r\n      if(newSentReaction) {\r\n        let reactionCount = views.reactions?.find((reactionCount) => reactionsEqual(reactionCount.reaction, newSentReaction));\r\n        if(!reactionCount) {\r\n          views.reactions ??= [];\r\n          views.reactions.push(reactionCount = {\r\n            _: 'reactionCount',\r\n            reaction: newSentReaction,\r\n            count: 0\r\n          });\r\n        }\r\n\r\n        ++reactionCount.count;\r\n      }\r\n    }\r\n\r\n    this.saveStoryItems([{\r\n      ...story,\r\n      sent_reaction: newSentReaction\r\n    }], this.getPeerStoriesCache(peerId));\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.sendReaction',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        reaction,\r\n        story_id: id\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected handleDeletedStory(cache: StoriesPeerCache, id: StoryItem['id']) {\r\n    cache.deleted.add(id);\r\n    if(!cache.storiesMap.delete(id)) {\r\n      return;\r\n    }\r\n\r\n    [\r\n      cache.stories,\r\n      cache.pinnedStories,\r\n      cache.archiveStories\r\n    ].forEach((array) => {\r\n      indexOfAndSplice(array, id);\r\n    });\r\n\r\n    this.updateListCachePosition(cache);\r\n    this.rootScope.dispatchEvent('story_deleted', {peerId: cache.peerId, id});\r\n  }\r\n\r\n  public isSubcribedToPeer(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return this.appUsersManager.isContact(peerId.toUserId());\r\n    } else {\r\n      const chatId = peerId.toChatId();\r\n      const chat = this.appChatsManager.getChat(chatId) as Chat.channel;\r\n      return this.appChatsManager.isBroadcast(chatId) && !chat.pFlags.left;\r\n    }\r\n  }\r\n\r\n  public getCacheTypeForPeerId(peerId: PeerId, ignoreNoSubscription?: boolean) {\r\n    if(\r\n      !this.isSubcribedToPeer(peerId) &&\r\n      peerId !== this.changelogPeerId &&\r\n      !ignoreNoSubscription\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return StoriesCacheType.Stories;\r\n    // return user.pFlags.stories_hidden && this.appPeersManager.peerId === peerId ?\r\n    //   StoriesCacheType.Archive :\r\n    //   StoriesCacheType.Stories;\r\n  }\r\n\r\n  public isStoryExpired(story: StoryItem.storyItemSkipped | StoryItem.storyItem) {\r\n    return story.expire_date <= tsNow(true);\r\n  }\r\n\r\n  public hasRights(peerId: PeerId, storyId: number, right: 'send' | 'edit' | 'delete' | 'archive' | 'pin') {\r\n    if(peerId.isUser()) {\r\n      return this.appPeersManager.peerId === peerId;\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    const story = this.getStoryByIdCached(peerId, storyId) as StoryItem.storyItem;\r\n    const isMyStory = !!story.pFlags.out;\r\n\r\n    const canEdit = this.appChatsManager.hasRights(chatId, 'edit_stories');\r\n    const canPost = this.appChatsManager.hasRights(chatId, 'post_stories');\r\n    const canDelete = this.appChatsManager.hasRights(chatId, 'delete_stories');\r\n    switch(right) {\r\n      case 'send': {\r\n        return canPost;\r\n      }\r\n\r\n      case 'edit': {\r\n        return !isMyStory ? canEdit : canPost;\r\n      }\r\n\r\n      case 'delete': {\r\n        return !isMyStory ? canDelete : canPost;\r\n      }\r\n\r\n      case 'archive': {\r\n        return canEdit;\r\n      }\r\n\r\n      case 'pin': {\r\n        return canEdit;\r\n      }\r\n\r\n      default: {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public cantPinDeleteStories(peerId: PeerId, storyIds: number[]) {\r\n    let cantPin = !storyIds.length, cantDelete = !storyIds.length;\r\n    for(const storyId of storyIds) {\r\n      if(!cantPin) {\r\n        cantPin = !this.hasRights(peerId, storyId, 'pin');\r\n      }\r\n\r\n      if(!cantDelete) {\r\n        cantDelete = !this.hasRights(peerId, storyId, 'delete');\r\n      }\r\n\r\n      if(cantPin && cantDelete) break;\r\n    }\r\n\r\n    return {cantPin, cantDelete};\r\n  }\r\n\r\n  public toggleStoriesHidden(peerId: PeerId, hidden: boolean) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stories.togglePeerStoriesHidden',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId),\r\n        hidden\r\n      },\r\n      processResult: () => {\r\n        const peer = this.getPeer(peerId);\r\n        const pFlags = {...peer.pFlags};\r\n        if(hidden) pFlags.stories_hidden = true;\r\n        else delete pFlags.stories_hidden;\r\n        const newPeer: typeof peer = {\r\n          ...peer,\r\n          pFlags\r\n        };\r\n        if(peerId.isUser()) this.appUsersManager.saveApiUsers([newPeer as User.user]);\r\n        else this.appChatsManager.saveApiChats([newPeer as Chat.channel]);\r\n        this.appNotificationsManager.toggleStoriesMute(peerId, hidden, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected onUpdateStory = (update: Update.updateStory) => {\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    let {story} = update;\r\n\r\n    if(story._ === 'storyItemDeleted') {\r\n      this.handleDeletedStory(cache, story.id);\r\n      return;\r\n    }\r\n\r\n    if(cache.maxReadId === undefined) {\r\n      Promise.resolve(this.getPeerStories(peerId)).then((userStories) => {\r\n        this.rootScope.dispatchEvent('stories_stories', userStories);\r\n      });\r\n      return;\r\n    }\r\n\r\n    const cacheType: StoriesCacheType = this.isStoryExpired(story) ? undefined : this.getCacheTypeForPeerId(peerId);\r\n    const hadStoryBefore = cache.storiesMap.has(story.id);\r\n    story = this.saveStoryItems([update.story], cache, cacheType)[0];\r\n    if(!hadStoryBefore && cacheType) {\r\n      this.rootScope.dispatchEvent('story_new', {peerId, story, cacheType, maxReadId: cache.maxReadId});\r\n    }\r\n  };\r\n\r\n  protected onUpdateReadStories = (update: Update.updateReadStories) => {\r\n    const peerId = this.appPeersManager.getPeerId(update.peer);\r\n    const cache = this.getPeerStoriesCache(peerId);\r\n    cache.maxReadId = update.max_id;\r\n    this.updateListCachePosition(cache);\r\n    this.rootScope.dispatchEvent('stories_read', {peerId, maxReadId: cache.maxReadId});\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {AppManager} from './manager';\r\n\r\nexport default class AppBotsManager extends AppManager {\r\n  public canSendMessage(botId: BotId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'bots.canSendMessage',\r\n      params: {\r\n        bot: this.appUsersManager.getUserInput(botId)\r\n      }\r\n    });\r\n  }\r\n\r\n  public allowSendMessage(botId: BotId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'bots.allowSendMessage',\r\n      params: {\r\n        bot: this.appUsersManager.getUserInput(botId)\r\n      },\r\n      processResult: (updates) => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {AppManager} from './manager';\r\n\r\nexport default class AppBoostsManager extends AppManager {\r\n  public getBoostsStatus(peerId: PeerId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'premium.getBoostsStatus',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      }\r\n    });\r\n  }\r\n\r\n  // public canApplyBoost(peerId: PeerId) {\r\n  //   return this.apiManager.invokeApiSingleProcess({\r\n  //     method: 'stories.canApplyBoost',\r\n  //     params: {\r\n  //       peer: this.appPeersManager.getInputPeerById(peerId)\r\n  //     },\r\n  //     processResult: (storiesCanApplyBoostResult) => {\r\n  //       this.appPeersManager.saveApiPeers(storiesCanApplyBoostResult as StoriesCanApplyBoostResult.storiesCanApplyBoostReplace);\r\n  //       return storiesCanApplyBoostResult;\r\n  //     },\r\n  //     options: {\r\n  //       floodMaxTimeout: 0\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  public applyBoost(peerId: PeerId) {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'premium.applyBoost',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(peerId)\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport assumeType from '../../helpers/assumeType';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport {ChatFull, Message, MessagesMessages, PublicForward, StatsBroadcastStats, StatsGraph, StatsPublicForwards} from '../../layer';\r\nimport {DcId, InvokeApiOptions} from '../../types';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\ntype GetStatsParams = {\r\n  peerId: PeerId,\r\n  mid?: number,\r\n  storyId?: number,\r\n  dark?: boolean,\r\n  dcId?: DcId\r\n};\r\n\r\nexport default class AppStatisticsManager extends AppManager {\r\n  private async getInvokeOptions({peerId, dcId}: GetStatsParams) {\r\n    const options: InvokeApiOptions = {};\r\n    if(peerId.isUser()) {\r\n      return options;\r\n    }\r\n\r\n    dcId ??= await callbackify(this.appProfileManager.getChatFull(peerId.toChatId()), async(chatFull) => {\r\n      let dcId = (chatFull as ChatFull.channelFull).stats_dc;\r\n      if(dcId === undefined) {\r\n        dcId = await this.apiManager.getBaseDcId();\r\n      }\r\n\r\n      return dcId;\r\n    });\r\n\r\n    options.dcId = dcId;\r\n    return options;\r\n  }\r\n\r\n  private processPublicForwards = (statsPublicForwards: StatsPublicForwards) => {\r\n    this.appPeersManager.saveApiPeers(statsPublicForwards);\r\n    statsPublicForwards.forwards.forEach((publicForward) => {\r\n      (publicForward as PublicForward.publicForwardMessage).message = this.appMessagesManager.saveMessage((publicForward as PublicForward.publicForwardMessage).message);\r\n      (publicForward as PublicForward.publicForwardStory).story = (publicForward as PublicForward.publicForwardStory).story && this.appStoriesManager.saveStoryItem(\r\n        (publicForward as PublicForward.publicForwardStory).story,\r\n        this.appStoriesManager.getPeerStoriesCache(this.appPeersManager.getPeerId((publicForward as PublicForward.publicForwardStory).peer))\r\n      );\r\n    });\r\n    return statsPublicForwards;\r\n  };\r\n\r\n  public async getBroadcastStats(params: GetStatsParams): Promise<{stats: StatsBroadcastStats, dcId: DcId}> {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getBroadcastStats',\r\n      params: {\r\n        channel: this.appChatsManager.getChannelInput(params.peerId.toChatId()),\r\n        dark: params.dark\r\n      },\r\n      processResult: (stats) => {\r\n        stats.recent_posts_interactions.forEach((postInteractionCounters) => {\r\n          if(postInteractionCounters._ === 'postInteractionCountersMessage') {\r\n            postInteractionCounters.msg_id = this.appMessagesIdsManager.generateMessageId(postInteractionCounters.msg_id, params.peerId.toChatId());\r\n          }\r\n        });\r\n\r\n        return {\r\n          stats,\r\n          dcId: options.dcId\r\n        };\r\n      },\r\n      options\r\n    });\r\n  }\r\n\r\n  public loadAsyncGraph(token: string, x?: Long, dcId?: DcId): Promise<Exclude<StatsGraph, StatsGraph.statsGraphAsync>> {\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.loadAsyncGraph',\r\n      params: {\r\n        token,\r\n        x\r\n      },\r\n      options: {dcId}\r\n    });\r\n  }\r\n\r\n  public async getMegagroupStats(params: GetStatsParams) {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getMegagroupStats',\r\n      params: {\r\n        channel: this.appChatsManager.getChannelInput(params.peerId.toChatId()),\r\n        dark: params.dark\r\n      },\r\n      processResult: (stats) => {\r\n        this.appPeersManager.saveApiPeers(stats);\r\n\r\n        return {\r\n          stats,\r\n          dcId: options.dcId\r\n        };\r\n      },\r\n      options\r\n    });\r\n  }\r\n\r\n  public async getMessagePublicForwards(params: {\r\n    peerId: PeerId,\r\n    mid: number,\r\n    limit: number,\r\n    offset?: string\r\n  }) {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getMessagePublicForwards',\r\n      params: {\r\n        channel: this.appChatsManager.getChannelInput(params.peerId.toChatId()),\r\n        msg_id: getServerMessageId(params.mid),\r\n        offset: params.offset,\r\n        limit: params.limit\r\n      },\r\n      processResult: this.processPublicForwards,\r\n      options\r\n    });\r\n  }\r\n\r\n  public async getMessageStats(params: GetStatsParams) {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getMessageStats',\r\n      params: {\r\n        channel: this.appChatsManager.getChannelInput(params.peerId.toChatId()),\r\n        dark: params.dark,\r\n        msg_id: getServerMessageId(params.mid)\r\n      },\r\n      processResult: (stats) => {\r\n        return {\r\n          stats,\r\n          dcId: options.dcId\r\n        };\r\n      },\r\n      options\r\n    });\r\n  }\r\n\r\n  public async getStoryStats(params: GetStatsParams) {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getStoryStats',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(params.peerId),\r\n        dark: params.dark,\r\n        id: params.storyId\r\n      },\r\n      processResult: (stats) => {\r\n        return {\r\n          stats,\r\n          dcId: options.dcId\r\n        };\r\n      },\r\n      options\r\n    });\r\n  }\r\n\r\n  public async getStoryPublicForwards(params: {\r\n    peerId: PeerId,\r\n    id: number,\r\n    limit: number,\r\n    offset?: string\r\n  }) {\r\n    const options = await this.getInvokeOptions(params);\r\n    return this.apiManager.invokeApiSingleProcess({\r\n      method: 'stats.getStoryPublicForwards',\r\n      params: {\r\n        peer: this.appPeersManager.getInputPeerById(params.peerId),\r\n        id: params.id,\r\n        limit: params.limit,\r\n        offset: params.offset\r\n      },\r\n      processResult: this.processPublicForwards,\r\n      options\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {PasswordManager} from '../mtproto/passwordManager';\r\nimport {ReferenceDatabase} from '../mtproto/referenceDatabase';\r\nimport DialogsStorage from '../storages/dialogs';\r\nimport FiltersStorage from '../storages/filters';\r\nimport {ApiUpdatesManager} from './apiUpdatesManager';\r\nimport {AppAvatarsManager} from './appAvatarsManager';\r\nimport {AppCallsManager} from './appCallsManager';\r\nimport {AppChatsManager} from './appChatsManager';\r\nimport {AppDocsManager} from './appDocsManager';\r\nimport {AppDraftsManager} from './appDraftsManager';\r\nimport {AppEmojiManager} from './appEmojiManager';\r\nimport {AppGroupCallsManager} from './appGroupCallsManager';\r\nimport {AppInlineBotsManager} from './appInlineBotsManager';\r\nimport {AppMessagesIdsManager} from './appMessagesIdsManager';\r\nimport {AppMessagesManager} from './appMessagesManager';\r\nimport {AppNotificationsManager} from './appNotificationsManager';\r\nimport {AppPeersManager} from './appPeersManager';\r\nimport {AppPhotosManager} from './appPhotosManager';\r\nimport {AppPollsManager} from './appPollsManager';\r\nimport {AppPrivacyManager} from './appPrivacyManager';\r\nimport {AppProfileManager} from './appProfileManager';\r\nimport {AppReactionsManager} from './appReactionsManager';\r\nimport {AppStickersManager} from './appStickersManager';\r\nimport {AppUsersManager} from './appUsersManager';\r\nimport {AppWebPagesManager} from './appWebPagesManager';\r\nimport {ApiFileManager} from '../mtproto/apiFileManager';\r\nimport {ApiManager} from '../mtproto/apiManager';\r\nimport ctx from '../../environment/ctx';\r\nimport PeersStorage from '../storages/peers';\r\nimport ThumbsStorage from '../storages/thumbs';\r\nimport {NetworkerFactory} from '../mtproto/networkerFactory';\r\nimport {RootScope} from '../rootScope';\r\nimport {Authorizer} from '../mtproto/authorizer';\r\nimport {DcConfigurator} from '../mtproto/dcConfigurator';\r\nimport {TimeManager} from '../mtproto/timeManager';\r\nimport {AppStoragesManager} from './appStoragesManager';\r\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\r\nimport appStateManager from './appStateManager';\r\nimport filterUnique from '../../helpers/array/filterUnique';\r\nimport AppWebDocsManager from './appWebDocsManager';\r\nimport AppPaymentsManager from './appPaymentsManager';\r\nimport AppAttachMenuBotsManager from './appAttachMenuBotsManager';\r\nimport AppSeamlessLoginManager from './appSeamlessLoginManager';\r\nimport AppThemesManager from './appThemesManager';\r\nimport AppUsernamesManager from './appUsernamesManager';\r\nimport AppChatInvitesManager from './appChatInvitesManager';\r\nimport AppStoriesManager from './appStoriesManager';\r\nimport AppBotsManager from './appBotsManager';\r\nimport AppBoostsManager from './appBoostsManager';\r\nimport AppStatisticsManager from './appStatisticsManager';\r\n\r\nexport default function createManagers(appStoragesManager: AppStoragesManager, userId: UserId) {\r\n  const managers = {\r\n    appPeersManager: new AppPeersManager,\r\n    appChatsManager: new AppChatsManager,\r\n    appDocsManager: new AppDocsManager,\r\n    appPhotosManager: new AppPhotosManager,\r\n    appPollsManager: new AppPollsManager,\r\n    appUsersManager: new AppUsersManager,\r\n    appWebPagesManager: new AppWebPagesManager,\r\n    appDraftsManager: new AppDraftsManager,\r\n    appProfileManager: new AppProfileManager,\r\n    appNotificationsManager: new AppNotificationsManager,\r\n    apiUpdatesManager: new ApiUpdatesManager,\r\n    appAvatarsManager: new AppAvatarsManager,\r\n    appGroupCallsManager: new AppGroupCallsManager,\r\n    appCallsManager: new AppCallsManager,\r\n    appReactionsManager: new AppReactionsManager,\r\n    appMessagesManager: new AppMessagesManager,\r\n    appMessagesIdsManager: new AppMessagesIdsManager,\r\n    appPrivacyManager: new AppPrivacyManager,\r\n    appInlineBotsManager: new AppInlineBotsManager,\r\n    appStickersManager: new AppStickersManager,\r\n    referenceDatabase: new ReferenceDatabase,\r\n    appEmojiManager: new AppEmojiManager,\r\n    filtersStorage: new FiltersStorage,\r\n    dialogsStorage: new DialogsStorage,\r\n    apiManager: new ApiManager,\r\n    cryptoWorker: cryptoMessagePort,\r\n    passwordManager: new PasswordManager,\r\n    apiFileManager: new ApiFileManager,\r\n    peersStorage: new PeersStorage,\r\n    thumbsStorage: new ThumbsStorage,\r\n    networkerFactory: new NetworkerFactory,\r\n    rootScope: new RootScope,\r\n    authorizer: new Authorizer,\r\n    dcConfigurator: new DcConfigurator,\r\n    timeManager: new TimeManager,\r\n    appStoragesManager: appStoragesManager,\r\n    appStateManager: appStateManager,\r\n    appWebDocsManager: new AppWebDocsManager,\r\n    appPaymentsManager: new AppPaymentsManager,\r\n    appAttachMenuBotsManager: new AppAttachMenuBotsManager,\r\n    appSeamlessLoginManager: new AppSeamlessLoginManager,\r\n    appThemesManager: new AppThemesManager,\r\n    appUsernamesManager: new AppUsernamesManager,\r\n    appChatInvitesManager: new AppChatInvitesManager,\r\n    appStoriesManager: new AppStoriesManager,\r\n    appBotsManager: new AppBotsManager,\r\n    appBoostsManager: new AppBoostsManager,\r\n    appStatisticsManager: new AppStatisticsManager\r\n  };\r\n\r\n  type T = typeof managers;\r\n\r\n  for(const name in managers) {\r\n    const manager = managers[name as keyof T];\r\n    if(!manager) {\r\n      continue;\r\n    }\r\n\r\n    if((manager as AppMessagesManager).setManagers) {\r\n      (manager as AppMessagesManager).setManagers(managers as any);\r\n      delete (manager as AppMessagesManager).setManagers;\r\n    }\r\n\r\n    // @ts-ignore\r\n    ctx[name] = manager;\r\n  }\r\n\r\n  const promises: Array<Promise<(() => void) | void> | void>[] = [];\r\n  let names = Object.keys(managers) as (keyof T)[];\r\n  names.unshift(\r\n    'appUsersManager',\r\n    'appChatsManager',\r\n    'appNotificationsManager',\r\n    'appMessagesManager',\r\n    'dialogsStorage'\r\n  );\r\n  names = filterUnique(names);\r\n  for(const name of names) {\r\n    const manager = managers[name];\r\n    if((manager as any)?.after) {\r\n      // console.log('injecting after', name);\r\n      const result = (manager as any).after();\r\n      promises.push(result);\r\n\r\n      // if(result instanceof Promise) {\r\n      //   result.then(() => {\r\n      //     console.log('injected after', name);\r\n      //   });\r\n      // }\r\n    }\r\n  }\r\n\r\n  if(userId) {\r\n    managers.apiManager.setUserAuth(userId);\r\n  }\r\n\r\n  return Promise.all(promises).then(() => managers);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\r\nimport App from '../../config/app';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport appStateManager from './appStateManager';\r\nimport {AppStoragesManager} from './appStoragesManager';\r\nimport createManagers from './createManagers';\r\n\r\ntype Managers = Awaited<ReturnType<typeof createManagers>>;\r\n\r\n// for testing cases without video streaming\r\nconst CAN_USE_SERVICE_WORKER = true;\r\n\r\nexport class AppManagersManager {\r\n  private managers: Managers | Promise<Managers>;\r\n  private cryptoWorkersURLs: string[];\r\n  private cryptoPortsAttached: number;\r\n  private cryptoPortPromise: CancellablePromise<void>;\r\n\r\n  private _isServiceWorkerOnline: boolean;\r\n\r\n  private serviceMessagePort: ServiceMessagePort<true>;\r\n  private _serviceMessagePort: MessagePort\r\n\r\n  constructor() {\r\n    this._isServiceWorkerOnline = CAN_USE_SERVICE_WORKER;\r\n\r\n    this.cryptoWorkersURLs = [];\r\n    this.cryptoPortsAttached = 0;\r\n    this.cryptoPortPromise = deferredPromise();\r\n    this.cryptoPortPromise.then(() => {\r\n      this.cryptoPortPromise = undefined;\r\n    });\r\n  }\r\n\r\n  public start() {\r\n    const port = MTProtoMessagePort.getInstance<false>();\r\n\r\n    port.addEventListener('manager', ({name, method, args}) => {\r\n      return callbackify(this.getManagers(), (managers) => {\r\n        // @ts-ignore\r\n        const manager = managers[name];\r\n        return manager[method](...args);\r\n      });\r\n    });\r\n\r\n    port.addEventListener('cryptoPort', (payload, source, event) => {\r\n      const port = event.ports[0];\r\n      if(this.cryptoPortsAttached >= this.cryptoWorkersURLs.length) {\r\n        port.close();\r\n        return;\r\n      }\r\n\r\n      ++this.cryptoPortsAttached;\r\n      cryptoMessagePort.attachPort(port);\r\n      this.cryptoPortPromise?.resolve();\r\n    });\r\n\r\n    port.addEventListener('createProxyWorkerURLs', ({originalUrl, blob}) => {\r\n      let length = this.cryptoWorkersURLs.length;\r\n      if(!length) {\r\n        this.cryptoWorkersURLs.push(originalUrl);\r\n        ++length;\r\n      }\r\n\r\n      const maxLength = App.cryptoWorkers;\r\n      if(length === maxLength) {\r\n        return this.cryptoWorkersURLs;\r\n      }\r\n\r\n      const newURLs = new Array(maxLength - length).fill(undefined).map(() => URL.createObjectURL(blob));\r\n      this.cryptoWorkersURLs.push(...newURLs);\r\n      return this.cryptoWorkersURLs;\r\n    });\r\n  }\r\n\r\n  private async createManagers() {\r\n    const appStoragesManager = new AppStoragesManager();\r\n\r\n    await Promise.all([\r\n      // new Promise(() => {}),\r\n      appStoragesManager.loadStorages(),\r\n      this.cryptoPortPromise\r\n    ]);\r\n\r\n    const managers = await createManagers(appStoragesManager, appStateManager.userId);\r\n    return this.managers = managers; // have to overwrite cached promise\r\n  }\r\n\r\n  public getManagers() {\r\n    return this.managers ??= this.createManagers();\r\n  }\r\n\r\n  public get isServiceWorkerOnline() {\r\n    return this._isServiceWorkerOnline;\r\n  }\r\n\r\n  public set isServiceWorkerOnline(value) {\r\n    this._isServiceWorkerOnline = CAN_USE_SERVICE_WORKER ? value : false;\r\n  }\r\n\r\n  public getServiceMessagePort() {\r\n    return this._isServiceWorkerOnline ? this.serviceMessagePort : undefined;\r\n  }\r\n\r\n  public onServiceWorkerPort(event: MessageEvent<any>) {\r\n    if(this.serviceMessagePort) {\r\n      this.serviceMessagePort.detachPort(this._serviceMessagePort);\r\n      this._serviceMessagePort = undefined;\r\n    } else {\r\n      this.serviceMessagePort = new ServiceMessagePort();\r\n      this.serviceMessagePort.addMultipleEventsListeners({\r\n        requestFilePart: (payload) => {\r\n          return callbackify(appManagersManager.getManagers(), (managers) => {\r\n            const {docId, dcId, offset, limit} = payload;\r\n            return managers.appDocsManager.requestDocPart(docId, dcId, offset, limit);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // * port can be undefined in the future\r\n    if(this._serviceMessagePort = event.ports[0]) {\r\n      this.serviceMessagePort.attachPort(this._serviceMessagePort);\r\n    }\r\n  }\r\n}\r\n\r\nconst appManagersManager = new AppManagersManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appManagersManager = appManagersManager);\r\nexport default appManagersManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type SuperMessagePort from '../lib/mtproto/superMessagePort';\r\nimport ctx from '../environment/ctx';\r\n\r\nexport default function listenMessagePort(\r\n  messagePort: SuperMessagePort<any, any, any>,\r\n  onConnect?: (source: MessageEventSource) => void,\r\n  onDisconnect?: (source: MessageEventSource) => void\r\n) {\r\n  const attachPort = (listenPort: any, sendPort: any) => {\r\n    messagePort.attachListenPort(listenPort);\r\n    sendPort && messagePort.attachSendPort(sendPort);\r\n    onConnect?.(listenPort);\r\n  };\r\n\r\n  messagePort.setOnPortDisconnect(onDisconnect);\r\n\r\n  if(typeof(SharedWorkerGlobalScope) !== 'undefined') {\r\n    (ctx as any as SharedWorkerGlobalScope).addEventListener('connect', (e) => attachPort(e.source, e.source));\r\n  } else if(typeof(ServiceWorkerGlobalScope) !== 'undefined') {\r\n    attachPort(ctx, null);\r\n  } else {\r\n    attachPort(ctx, ctx);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// just to include\r\nimport '../polyfill';\r\nimport '../../helpers/peerIdPolyfill';\r\n\r\nimport cryptoWorker from '../crypto/cryptoMessagePort';\r\nimport {setEnvironment} from '../../environment/utils';\r\nimport appStateManager from '../appManagers/appStateManager';\r\nimport transportController from './transports/controller';\r\nimport MTProtoMessagePort from './mtprotoMessagePort';\r\nimport RESET_STORAGES_PROMISE from '../appManagers/utils/storages/resetStoragesPromise';\r\nimport appManagersManager from '../appManagers/appManagersManager';\r\nimport listenMessagePort from '../../helpers/listenMessagePort';\r\nimport {logger} from '../logger';\r\nimport {State} from '../../config/state';\r\nimport toggleStorages from '../../helpers/toggleStorages';\r\nimport appTabsManager from '../appManagers/appTabsManager';\r\nimport callbackify from '../../helpers/callbackify';\r\n\r\nconst log = logger('MTPROTO');\r\n// let haveState = false;\r\n\r\nconst port = new MTProtoMessagePort<false>();\r\nport.addMultipleEventsListeners({\r\n  environment: (environment) => {\r\n    setEnvironment(environment);\r\n\r\n    transportController.waitForWebSocket();\r\n  },\r\n\r\n  crypto: ({method, args}) => {\r\n    return cryptoWorker.invokeCrypto(method as any, ...args as any);\r\n  },\r\n\r\n  state: ({state, resetStorages, pushedKeys, newVersion, oldVersion, userId}) => {\r\n    // if(haveState) {\r\n    //   return;\r\n    // }\r\n\r\n    log('got state', state, pushedKeys);\r\n\r\n    appStateManager.userId = userId;\r\n    appStateManager.newVersion = newVersion;\r\n    appStateManager.oldVersion = oldVersion;\r\n\r\n    RESET_STORAGES_PROMISE.resolve({\r\n      storages: resetStorages,\r\n      callback: () => {\r\n        (Object.keys(state) as any as (keyof State)[]).forEach((key) => {\r\n          appStateManager.pushToState(key, state[key], true, !pushedKeys.includes(key));\r\n        });\r\n      }\r\n    });\r\n    // haveState = true;\r\n  },\r\n\r\n  toggleStorages: ({enabled, clearWrite}) => {\r\n    return toggleStorages(enabled, clearWrite);\r\n  },\r\n\r\n  event: (payload, source) => {\r\n    log('will redirect event', payload, source);\r\n    port.invokeExceptSource('event', payload, source);\r\n  },\r\n\r\n  serviceWorkerOnline: (online) => {\r\n    appManagersManager.isServiceWorkerOnline = online;\r\n  },\r\n\r\n  serviceWorkerPort: (payload, source, event) => {\r\n    appManagersManager.onServiceWorkerPort(event);\r\n  },\r\n\r\n  createObjectURL: (blob) => {\r\n    return URL.createObjectURL(blob);\r\n  }\r\n\r\n  // socketProxy: (task) => {\r\n  //   const socketTask = task.payload;\r\n  //   const id = socketTask.id;\r\n\r\n  //   const socketProxied = socketsProxied.get(id);\r\n  //   if(socketTask.type === 'message') {\r\n  //     socketProxied.dispatchEvent('message', socketTask.payload);\r\n  //   } else if(socketTask.type === 'open') {\r\n  //     socketProxied.dispatchEvent('open');\r\n  //   } else if(socketTask.type === 'close') {\r\n  //     socketProxied.dispatchEvent('close');\r\n  //     socketsProxied.delete(id);\r\n  //   }\r\n  // },\r\n});\r\n\r\nlog('MTProto start');\r\n\r\nappManagersManager.start();\r\nappManagersManager.getManagers();\r\nappTabsManager.start();\r\n\r\nlet isFirst = true;\r\n// let sentHello = false;\r\nlistenMessagePort(port, (source) => {\r\n  appTabsManager.addTab(source);\r\n  if(isFirst) {\r\n    isFirst = false;\r\n  } else {\r\n    callbackify(appManagersManager.getManagers(), (managers) => {\r\n      managers.thumbsStorage.mirrorAll(source);\r\n      managers.appPeersManager.mirrorAllPeers(source);\r\n      managers.appMessagesManager.mirrorAllMessages(source);\r\n    });\r\n  }\r\n\r\n  // port.invokeVoid('hello', undefined, source);\r\n  // if(!sentHello) {\r\n  //   port.invokeVoid('hello', undefined, source);\r\n  //   sentHello = true;\r\n  // }\r\n}, (source) => {\r\n  appTabsManager.deleteTab(source);\r\n});\r\n"],"names":["bufferConcats","args","length","acc","v","tmp","lastLength","b","fn","onFinally","callback","result","reason","isAnyChat","peerId","isUser","isChat","value","newMethod","originMethod","Modes","DEBUG","ctx","MOUNT_CLASS_TO","tabId","indexOfAndSplice","array","item","idx","IS_SERVICE_WORKER","IS_WEB_WORKER","IS_WORKER","getWindowClients","postMessage","listener","err","notifyServiceWorker","all","listeners","notifyWorker","noop","findAndSplice","verify","index","EventListenerBase","reuseResults","name","options","_a","obj","i","l","error","collectResults","arr","CACHED_ERRORS","makeError","type","USER_AGENT","IS_SAFARI","IS_FIREFOX","_logTimer","dT","LogTypes","LOG_LEVELS","IS_WEBKIT","STYLES_SUPPORTED","LOGGER_STYLES","methods","logger","prefix","ignoreDebugReset","style","originalPrefix","originalStyle","log","method","logType","newPrefix","level","_type","USE_LOCKS","SuperMessagePort","logSuffix","event","task","source","taskId","deferred","payload","previousResolve","ret","resolve","reject","pingResolve","newEvent","id","innerTask","resultTaskPayload","resultTask","ackTask","isPromise","cached","port","promise","lock","portTasks","tasks","batchTask","ports","transfer","withAck","_void","interval","target","CryptoMessagePort","sendPortIndex","cryptoMessagePort","environment","getEnvironment","setEnvironment","env","NULL_PEER_ID","REPLIES_PEER_ID","REPLIES_HIDDEN_CHANNEL_ID","SERVICE_PEER_ID","MUTE_UNTIL","MAX_FILE_SAVE_SIZE","THUMB_TYPE_FULL","ATTACH_MENU_BOT_ICON_NAME","MESSAGE_ID_OFFSET","GENERAL_TOPIC_ID","T_ME_PREFIXES","FOLDER_ID_ALL","FOLDER_ID_ARCHIVE","REAL_FOLDERS","START_LOCAL_ID","MTProtoMessagePort","RootScope","isNew","isPremium","status","settings","rootScope","deferredHelper","deferredPromise","_resolve","_reject","throttle","ms","shouldRunFirst","isPending","clear","_args","safeAssign","object","fromObject","_IDB","db","createNew","createIndexes","os","store","indexNames","indexName","createObjectStore","request","finished","calledNew","e","transaction","instance","preserve","storage","IDB","IDBStorage","storeName","entryName","isArray","objectStore","promises","mode","perf","onError","timeout","onComplete","results","requests","r","waitForTransactionComplete","callbackResult","left","onRequestFinished","THROTTLE_TIME","_AppStorage","set","keys","values","key","useCache","p","onlyLocal","canUseStorage","saveLocal","enabled","clearWrite","names","AppStorage","DATABASE_STATE","StateStorage","stateStorage","DEEP_PATH_JOINER","joinDeepPath","setDeepProperty","deleteIfUndefined","splitted","lastObject","part","lastKey","AppStateManager","first","direct","appStateManager","MAIN_DOMAINS","threads","App","pause","HTTP","dcId","url","logTypes","body","response","buffer","connected","transportController","pending","Socket","randomize","Obfuscation","data","operation","codec","initPayload","val","val2","reversedPayload","encKey","encIv","decKey","decIv","idPromise","encrypted","AbridgedPacketCodec","len","header","abridgedPacketCodec","ConnectionStatus","ConnectionStatus2","bytesToHex","bytes","TcpObfuscated","Connection","retryTimeout","needTimeout","retryAt","time","diff","connection","enable","toEncode","encoded","sent","bodySent","TEST_SUFFIX","PREMIUM_SUFFIX","RETRY_TIMEOUT_CLIENT","RETRY_TIMEOUT_DOWNLOAD","getTelegramConnectionSuffix","connectionType","constructTelegramWebSocketUrl","premium","suffix","path","DcConfigurator","chosenServer","oooohLetMeLive","subdomain","transportType","reuse","servers","transports","transport","MTTransportController","opened","dcConfigurator","httpPromise","websocketPromise","socket","isHttpAvailable","isWebSocketAvailable","https","websocket","transportController$1","RESET_STORAGES_PROMISE","ServiceMessagePort","callbackify","smth","AppManager","managers","createStorages","storages","recordPromise","description","recordPromiseBound","loadStoragesInner","storagesKeys","storagesPromises","storagesResults","resetStorages","clearPromises","loadStorages","AppStoragesManager","PasswordManager","state","currentHashPromise","newHashPromise","params","newAlgo","salt1","hashes","password","inputCheckPassword","auth","code","deepEqual","x","y","ignoreKeys","ignoreSet","okok","ok","tx","ReferenceDatabase","reference","context","contexts","_context","c","hex","newHex","newContext","tsNow","seconds","t","LatinizeMap","badCharsRe","trimRe","C2L","clearBadCharsAndTrim","text","fixCyrillic","ch","latinizeString","cleanSearchText","latinize","processSearchText","hasTag","originalText","flatten","SearchIndex","searchText","query","queryWords","word","newFoundObjs","fullTexts","queryWordsLength","fullText","what","found","foundChars","isLastWord","fullTextLength","a","o","compareLong","str1","str2","str1Length","maxPartLength","v1","v2","compareValue","val1","SliceEnd","SlicedArray","slicedArray","side","isEnd","slice","start","deleteCount","items","slices","lowerBound","upperBound","foundSlice","lowerIndex","upperIndex","foundSliceIndex","sliced","insertIndex","s","prevSlice","nextSlice","maxId","offset","offsetId","addOffset","limit","sliceOffset","pos","sliceStart","sliceEnd","topWasMeantToLoad","bottomWasMeantToLoad","topFulfilled","bottomFulfilled","serialized","json","parsed","inserted","forEachReverse","insertInDescendSortedArray","element","getProperty","property","sortProperty","prev","next","safeReplaceObject","wasObject","newObject","clearMessageId","messageId","toServer","getServerMessageId","getDialogIndexKey","localId","isObject","getDialogIndex","dialog","indexKey","getPeerId","userId","chatId","peerParams","getPeerIdsFromMessage","message","peerIds","media","userIds","chatIds","peers","webPage","storyAttribute","attribute","peer","recentReactions","reaction","action","recentRepliers","reply","defineNotNumerableProperties","props","out","setDialogIndex","GLOBAL_FOLDER_ID","DialogsStorage","init","folderId","update","folderPeer","folder_id","channelId","topicId","topic","dialogsResult","d","filterId","order","pinned","onFilterUpdate","filter","dialogs","_order","peerText","loaded","isForum","orders","isPinned","offsetDate","folder","forumTopic","skipMigrated","currentPeerId","nextIndex","arrays","isTopic","isRealFolder","pinnedIds","pinnedKey","pinnedIndex","folders","skipped","date","noIndex","filters","cmp","wasIndex","wasDialog","wasDialogIndex","newDialogIndex","toggle","callbacks","wasUnreadCount","wasUnmuted","addMessagesCount","newUnreadCount","newUnmuted","toggleDialog","toggleUnmuted","forumUnreadCount","count","hasUnmuted","_folder","justReturn","noPinnedOrderUpdate","topDate","channel","dialogKey","pts","historyStorage","messagesStorage","history","incomingMessage","mid","newPts","ignoreOffsetDate","saveGlobalOffset","savedGlobalOffsetDate","savedOffsetDate","keepLocal","foundDialog","wasPinned","dropped","updatedDialogs","getUpdateCache","cache","topMid","topPendingMid","topPendingMessage","topMessage","updates","slicedUpdates","chat","isDialog","migratedToPeer","wasDialogBefore","isOut","releaseUnreadCount","oldTopic","threadId","isIconChanged","isTitleChanged","isChanged","offsetIndex","forceLocal","recursion","fillContactsResult","reloadMissingDialogsPromise","realFolderId","curDialogStorage","d1","d2","loadedAll","isEnoughDialogs","forumTopics","ids","fullfillLeft","messagesForumTopics","f","newPinned","copy","el","clonedObj","prop","convertment","PREPENDED_FILTERS","LOCAL_FILTER","FiltersStorage","oldFilters","_filterId","allChatsFilter","archiveFilter","allChatsFilterIndex","pFlags","prepend","remove","reloadDialogs","inputPeer","isAlreadyReloaded","reloadPromises","missingPeerIds","overwrite","silent","from","to","arrayFrom","oldFilter","_filter","exportedChatlistInvite","slug","title","exportedInvites","chatlistInvite","chatlistUpdates","filterUnique","originalString","ALPHA_CHARS_REG_EXP","ALPHA_NUMERIC_REG_EXP","DOMAIN_ADD_CHARS","URL_ALPHANUMERIC_REG_EXP_PART","URL_PROTOCOL_REG_EXP_PART","URL_REG_EXP","USERNAME_REG_EXP","TIMESTAMP_REG_EXP","BOT_COMMAND_REG_EXP","FULL_REG_EXP","emojiRegExp","EMAIL_REG_EXP","MARKDOWN_REG_EXP","MARKDOWN_ENTITIES","PASS_CONFLICTING_ENTITIES","PASS_SINGLE_CONFLICTING_ENTITIES","PHONE_NUMBER_REG_EXP","LOCAL_ENTITIES","CAN_COMBINE_ENTITIES","combineSameEntities","entities","entity","nextEntityIdx","_i","nextEntity","SINGLE_ENTITIES","findConflictingEntity","currentEntities","newEntity","singleEnd","currentEntity","sortEntities","mergeEntities","newEntities","filtered","parseMarkdown","raw","noTrim","pushedEntity","pushEntity","newTextParts","rawOffset","match","matchIndex","beforeMatch","languageMatch","startIndex","endIndex","whitespace","previousPart","isSOH","newText","applyMixins","derivedCtor","constructors","baseCtor","SYNC_DELAY","ApiUpdatesManager","updateMessage","processOpts","fromId","toId","self","us","nextSeq","pendingUpdatesData","curState","curPts","goodPts","goodIndex","updatesState","wasSyncing","differenceResult","apiMessage","nextState","channelState","pts_count","toPeerId","fwdHeader","popPts","popSeq","seq","seqStart","subscription","cb","force","langCode","newVersion","stateResult","strs","getChangelog","lang","res","langStr","languages","language","AppAvatarsManager","size","saved","photo","peerPhotoFileLocation","downloadOptions","blob","nextRandomUint","bits","randomLong","AppCallsManager","g_b","call","isDiscarded","oldCall","callId","phonePhoneCall","dhConfig","protocol","g_a_hash","video","duration","hasRights","rights","isThread","isCheckingRightsForSelf","myFlags","isAdmin","getParticipantPeerId","participant","getPeerActiveUsernames","usernames","username","AppChatsManager","forceInvalidation","chats","apiChats","override","oldChat","changedUsername","oldPhotoId","newPhotoId","toggledForum","changedPhoto","changedEmojiStatus","changedTitle","changedAnyBadge","changedParticipation","storiesCallback","banned_rights","good","allowMin","input","usersInputs","u","timestamp","fwdLimit","doNotRefresh","hidden","rank","wasChannel","inputFile","inputChatPhoto","about","bool","prevParticipant","newParticipant","bannedRights","messagesChats","reactions","chatFull","sendAsPeers","sponsoredMessages","sponsoredMessage","randomId","iconEmojiId","closed","iconColor","channelFull","sendAsInputPeer","groupId","newOrWasGroupId","groupChannelFull","approved","capitalizeFirstLetter","string","SKIP_PROTOCOLS","matchUrlProtocol","wrapUrl","unsafe","tgMeMatch","tgMatch","onclick","fullPath","setDirection","elem","I18n","pluralRules","cacheLangPackPromise","setRTL","rtl","setLangCode","getCacheLangPack","langPack","applyLangPack","loadLocalLangPack","updateAmPm","dateTimeFormat","getDateTimeFormat","amText","pmText","setTimeFormat","format","haveToUpdate","cachedDateTimeFormats","IntlDateElement","defaultCode","langSign","countries","strings","formatLocalStrings","saveLangPack","loadLangPack","web","getStrings","pushTo","getLangPack","langPack1","langPack2","localLangPack1","localLangPack2","_","_Intl","currentLangCode","country","langPackKey","pushNextArgument","indexHolder","arg","superFormatter","indexes","str","regExp","lastIndex","p1","p2","p3","p4","wrappedUrl","formatted","plain","IntlElementBase","IntlElement","hours","i18n","i18n_","_i18n","I18n$1","months","days","monthsLocalized","daysLocalized","ONE_DAY","getWeekNumber","dayNum","yearStart","formatDateAccordingToTodayNew","today","now","getFullDate","joiner","fullYear","minYear","yearPattern","anyLetterRegExp","monthPattern","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","fillTipDates","dates","q","haystack","year","month","day","minDate","maxDate","dayOfWeek","getDayOfWeek","currentDay","distance","formatWeekLong","matches","g1","g2","k","k1","selectedYear","createForMonthYear","createForDayMonth","g3","currentYear","validDateForMonth","formatterYearMax","getMonth","formatterMonthYear","isLeapYear","formatterDayMonth","safeReplaceArrayInObject","spoiler","chars","charsLength","char","encodeSpoiler","before","spoilerBefore","spoilerAfter","after","wrapPlainText","getDocumentInputFileLocation","doc","thumbSize","FILENAME_JOINER","getFileNameByLocation","location","fileName","ext","geoPoint","getFileURL","getDocumentDownloadOptions","thumb","queueId","onlyCache","inputFileLocation","mimeType","getDocumentURL","download","EXTENSION_MIME_TYPE_MAP","MIME_TYPE_EXTENSION_MAP","uploadWallPaperTempId","AppDocsManager","online","oldDoc","mappedMimeType","appManagersManager","docId","file","document","cacheContext","wallpaper","wallPaper","repliesAreEqual","reply1","reply2","draftsAreEqual","draft1","draft2","AppDraftsManager","drafts","apiDraft","notify","draft","replyTo","localDraft","saveOnServer","serverDraft","draftObj","inputReplyTo","saveLocalDraft","combined","emptyDraft","validateInitObject","initObject","currentObject","onReplace","previousKey","ignorePaths","_path","fixEmoji","end","EMOJI_LANG_PACK","RECENT_MAX_LENGTH","_AppEmojiManager","storageKey","pack","keywordsDifference","packKeywords","keywords","keyword","emoticons","emojis","recent","recentEmoji","recentCustomEmoji","emoji","docIds","documents","allIds","docs","AppEmojiManager","GET_PARTICIPANTS_LIMIT","AppGroupCallsManager","groupCallId","groupCall","participants","nextOffsetsMap","setNextOffset","newNextOffset","nextOffset","skipCounterUpdating","oldParticipant","hasLeft","modified","apiParticipants","shouldUpdate","scheduleDate","groupCallParticipants","discard","groupCallInput","getPhotoInput","getPhotoMediaInput","generateQId","queryId","resultId","getMediaInput","AppInlineBotsManager","geo","botId","botResults","topPeers","botPeerId","topPeer","fromPeerId","startParam","bot","peerData","button","queryAndResultIds","inlineResult","inputMedia","messageMedia","sendMessage","getDocumentMediaInput","webDocument","isLegacyMessageId","AppMessagesIdsManager","increment","mids","_channelId","prevItem","PARALLEL_LIMIT","IGNORE_ERRORS","LazyLoadQueueBase","parallelLimit","createDetails","MIDDLEWARE_ERROR","MiddlewareHelper","details","helper","additionalCallback","middleware","getMiddleware","getObjectKeysAndSort","sort","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","delimiter","cut","_arrayIndex","overflowPart","partLength","debounce","shouldRunLast","waitingTimeout","waitingPromise","hadNewCall","invoke","_waitingTimeout","matchUrl","filterMessagesByInputFilter","inputFilter","foundMsgs","filtering","neededContents","neededDocTypes","excludeDocTypes","goodEntities","uploadId","getFileNameForUpload","AppTabsManager","tab","appTabsManager","getAlbumText","messages","foundMessages","m","getStickerEffectThumb","getDocumentInput","availableReactionToReaction","availableReaction","reactionsEqual","r1","r2","setBooleanFlag","getMessageThreadId","TLD","checkBrackets","urlLength","urlOpenBrackets","urlCloseBrackets","EmojiVersions","Emoji","version","encodeEmoji","emojiText","toCodePoints","removeVS16s","vs16RegExp","zeroWidthJoiner","rawEmoji","unicodeSurrogates","points","previous","getEmojiUnified","emojiCode","unified","parseEntities","tld","balanced","splittedLength","minutes","wrapMessageEntities","myEntities","totalEntities","GLOBAL_HISTORY_PEER_ID","processAfter","AppMessagesManager","newMaxSeenId","updateMap","processDialog","isDialogDefined","topics","notifyPeerToHandle","muted","peerTypeNotifySettings","pendingData","isLocalThreadUpdate","threadKey","threadStorage","ignoreExisting","firstSlice","inboxUnread","notifyPeer","msg_id","recentReaction","previousRecentReactions","oldMessage","newMessage","isTopMessage","dispatchEditEvent","newReactions","map","stillUnreadCount","newUnreadMentionsCount","foundAffected","repliesKey","readMaxId","messageThreadId","setCount","threadKeyPart","topMsgId","availableMinId","threadKeys","historyUpdated","threadsStorages","affected","needDialog","canViewHistory","hasHistory","views","missingMessages","werePinned","notify_settings","batch","toDispatch","previousReactions","previousResults","changedResults","reactionCount","previousReactionCount","_reactionCount","filterFunc","msgs","isScheduled","drop","poll","sendEntites","tempId","callbackName","finalize","webPageSend","schedule_date","process","MAX_LENGTH","isChannel","toggleError","sentRequestOptions","sendAs","apiPromise","commonOptions","attachType","apiFileName","fileType","isDocument","caption","attributes","isPhoto","strippedPhotoSize","actionName","photoSize","videoAttribute","thumbs","sentDeferred","uploadingFileName","uploaded","uploadPromise","load","progress","percents","thumbUploadPromise","messagePromise","sendEntities","multiMedia","originalInputMedia","inputSingleMedia","inputs","contactPeerId","noOutgoingMessage","pollId","postAuthor","isBroadcast","user","replyWillBeInPeerId","replyToPeerId","replyToMsgId","replyToTopId","originalMessage","replies","isReply","myId","isUserHidden","userFull","uploadFileName","chatHistoryStorage","offsetTopicId","offsetPeerId","useLimit","isSearch","processResult","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","folderDialogs","dialogsLength","slicedDialogs","config","overflowMids","groups","newMids","newMessages","flags","replyToMid","replyToMessageIdx","newReplyToMid","group","mirror","globalStorage","cantForward","cantDelete","useThrottled","reloadConversationsPeers","inputDialogPeers","currentState","just_clear","revoke","participantPeerId","affectedHistory","deletedMids","justClear","historyResult","needSingleMessages","ss","_b","unpin","pm_oneside","grouped_id","minMid","groupedId","tempMid","newMid","isMessage","mediaContext","replyToChannelId","overwriting","msgId","savedFromPeerId","savedFromMid","unsupported","migrateFrom","migrateTo","originalDoc","messageKey","extendedMedia","extendedMediaMedia","goodMessage","myPeerId","_message","max","read","unread","fromChat","kind","goodMedias","messageReplyMarkup","lastReplyMarkup","canCache","migration","func","legacyResult","searchCounters","legacySearchCounters","searchCounter","_storage","serviceStartMid","maxMessageId","serviceStartMessage","newMaxId","isRecursion","serverMessageIds","affectedMessages","add","isTopEnd","loadNextPromise","last","backLimit","add_offset","minId","messagesMessages","msgIds","newerMessage","olderMessage","isNewerGood","isOlderGood","_slice","_c","readOutboxMaxId","maxOutId","replyMarkup","inputNotifyPeer","threadMessage","broadcastEventName","pendingMessage","muteUntil","mute","finalMessage","tempMessage","newPhoto","newDoc","newPhotoSize","oldCacheContext","skipReadParticipants","skipReactionsList","emptyMessageReactionsList","canViewMessageReadParticipants","readParticipantDates","messageReactionsList","filteredReadParticipants","user_id","readParticipantDate","appConfig","tabs","chatPeerIds","haveSlice","offset_id_offset","offsetIdOffset","isBottomEnd","topLoaded","bottomLoaded","isOffsetIncluded","serverOffsetId","wasMaxId","requestPeerId","isRequestingLegacy","mergedResult","firstMessage","lastMessage","threadServiceMid","addSlice","toLoad","migratedResult","migratedResultCount","nextRate","offsetMessage","searchOptions","searchGlobalOptions","getRepliesOptions","getHistoryOptions","requestPromises","getMessagesResult","toRequest","story","typing","groupedStorage","unreadCount","getElementCallback","newMap","peerIdStr","sendAsPeerId","buttonId","requestedPeerIds","convertInputKeyToKey","inputKey","AppNotificationsManager","closestMuteUntil","peerNotifySettings","typeKey","isPeerType","notifySettings","respectType","n","peerKey","inputNotify","typeNotifySettings","local","inputPeerNotifySettings","platforms","ignore","getRestrictionReason","reasons","isRestricted","ignoreRestrictionReasons","isPeerRestricted","restrictionReasons","getPeerPhoto","AppPeersManager","migratedTo","ignorePeerId","AppPhotosManager","oldPhoto","inputUser","photosResult","photoIds","photoId","AppPollsManager","answer","correctAnswers","solution","solutionEntities","optionIds","option","votesList","newPoll","AppPrivacyManager","rules","privacyRules","inputRule","rule","privacyKey","PEER_FULL_TTL","AppProfileManager","_participants","typings","cancelAction","hasUser","fullChat","updated","hasChatPhoto","hasFullChatPhoto","usersUserFull","botInfo","referenceContext","profile","exportedInvite","chatParticipant","chatParticipants","MANUALLY_FILTER","channelParticipant","fullChannel","global","processUserIds","ratingMap","cP","botsInlineTopPeers","chatMembers","searchResults","convertPeerIds","first_name","last_name","updateResult","strippedThumb","deletedList","chatInfo","channelParticipants","peerSettings","messagesPeerSettings","callbackifyAll","SAVE_DOC_KEYS","REFERENCE_CONTEXT","AppReactionsManager","availableReactions","messagesAvailableReactions","unshiftQuickReaction","activeAvailableReactions","topReactions","quickReaction","chatAvailableReactions","filteredChatReactions","filteredChatAvailableReactions","messagesReactions","peerAvailableReactions","lastSendingTimeKey","myPeer","unsetReactionCount","canSeeList","chosenReactions","unsetReactions","chosenReactionIdx","chosenReactionCount","chosenReactionsLength","reactionCountIdx","peerReaction","id1","id2","promiseKey","editMessageUpdateIdx","editMessageUpdate","messagesStickerSet","fixBase64String","toUrl","CACHE_TIME","LOCAL_IDS","LOCAL_IDS_SET","AppStickersManager","allStickers","stickerSet","stickers","justPreload","cachedSet","saveById","animations","sound","bytesStr","unsave","attached","_doc","docEmoticon","emoticon","isAnimation","preloadEmojiPromise","isPremiumEffect","newSet","needSave","isAnimated","covered","favedStickers","unfave","sets","excludeFeatured","foundSaved","includeOurStickers","includeServerStickers","excludePremiumEffectStickers","cacheKey","messagesStickers","installedSets","recentStickers","foundStickers","sticker","cachedStickersAnimated","cachedStickersStatic","iteratePacks","packs","masks","cleanUsername","canSendToUser","SEARCH_OPTIONS","AppUsersManager","timestampNow","users","recentSearch","fromServer","contact","resolvedPeer","phone","includeSaved","sortBy","contactListPromise","_contactsList","contactsList","userId1","userId2","sortName1","sortName2","status1","rating1","myUserId","block","blockMyStoriesFrom","apiUsers","save","cleanedUsernames","searchUsername","oldPeer","oldUser","fullName","changedPremium","wasContact","newContact","expires","eventTimestamp","onlineTimeFor","contacts","inputContacts","j","importedContactsResult","importedContact","contactsBlocked","lat","long","accuracy_radius","background","self_expires","geo_point","isContact","curIsContact","offline","addPhonePrivacyException","emojiStatus","emojiStatuses","photoTypeSet","AppWebPagesManager","apiWebPage","oldWebPage","isUpdated","isMediaUpdated","siteName","shortTitle","pendingSet","messagesWebPage","blobSafeMimeType","blobConstruct","blobParts","safeMimeType","MemoryWriter","saveFileCallback","endOffset","newBytes","saveToStorage","parts","_CacheStorageController","dbName","rejected","fileSize","CacheStorageController","readBlobAs","reader","readBlobAsArrayBuffer","fixFirefoxSvg","svgIndex","__","width","height","getPhotoDownloadOptions","getWebFileDownloadOptions","getWebDocumentDownloadOptions","isWebDocument","isWebFileLocation","getDownloadFileNameFromOptions","getDownloadMediaDetails","readBlobAsUint8Array","fileNameRFC","DownloadWriter","serviceMessagePort","downloadId","DownloadStorage","headers","MAX_DOWNLOAD_FILE_PART_SIZE","MAX_UPLOAD_FILE_PART_SIZE","MIN_PART_SIZE","AVG_PART_SIZE","REGULAR_DOWNLOAD_DELTA","PREMIUM_DOWNLOAD_DELTA","ApiFileManager","activeDelta","downloadPull","downloadLimit","canceled","checkCancel","arrayBuffer","extension","isUpload","maxParts","maxPartSize","startOffset","limitPart","delayed","writePromise","writeDeferred","originalMimeType","convertMethod","cacheFileName","cacheStorage","downloadStorage","errorHandler","prepared","isWebFile","isLocalWebFile","getFile","cachePrepared","downloadPrepared","possibleSize","getErrorsCount","attach","_errorHandler","downloadFileName","writer","maxRequests","requestPart","dispatchProgress","done","throttledDispatchProgress","superpuper","requestPerf","requestTime","byteLength","isFinal","writeQueuePerf","writeQueueTime","processedResult","isBigFile","partSize","totalParts","fileId","resultInputFile","resolved","generator","_part","doneParts","it","LocalStorage","stringified","_LocalStorageController","LocalStorageController","sessionStorage","bytesFromHex","hexString","ApiManagerMethods","queryJSON","hash","newResult","processError","oldPromise","getNewPromise","helpAppConfig","themeParams","toggleStorages","PREMIUM_FILE_NETWORKERS_COUNT","REGULAR_FILE_NETWORKERS_COUNT","ApiManager","REFRESH_APP_CONFIG_INTERVAL","networker","connections","dcs","oldTransportType","oldObject","oldGetKey","newGetKey","info","baseDcId","userAuth","wasDcId","storageKeys","storageResult","logoutPromises","networkers","maxNetworkers","getKey","ak","authKeyHex","serverSaltHex","authKey","authKeyId","CryptoWorker","serverSalt","_error","newTransportType","oldTransport","canRelease","afterMessageId","prepareTempMessageId","startTime","cachedNetworker","rejectPromise","performRequest","exportResolve","exportReject","exportedAuth","newDcId","waitTime","PeersStorage","generateEmptyThumb","getStickerThumbKey","toneIndex","getThumbKey","thumbFullSize","ThumbsStorage","downloaded","Schema","exports","this","h","w","g","E","R","A","Z","S","T","O","U","D","I","B","N","C","z","F","L","M","H","K","P","Y","G","X","W","J","Q","V","$","ee","te","ie","ne","ae","re","oe","se","le","de","fe","ce","he","ue","we","be","me","ke","_e","ge","gzipUncompress","toString","pako","bigInt","undefined","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","Integer","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","sign","SmallInteger","NativeBigInt","isPrecise","arrayToSmall","trim","compareAbs","createArray","truncate","l_a","l_b","carry","base","sum","addAny","addSmall","subtract","a_l","b_l","borrow","difference","subtractAny","subtractSmall","small","multiplyLong","product","a_i","b_j","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","useKaratsuba","l1","l2","abs","multiplySmallAndArray","square","a_j","divMod1","divisorMostSignificantDigit","lambda","remainder","divisor","quotientDigit","shift","divModSmall","divMod2","guess","xlen","highx","highy","check","quotient","divModAny","comparison","qSign","mod","mSign","_0","_1","_2","exp","isBasicPrime","millerRabinTest","nPrev","strict","isPrime","logN","iterations","rng","newT","newR","lastT","lastR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","remQuo","bitwise","xSign","ySign","xRem","yRem","xDigit","yDigit","xDivMod","yDivMod","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","min","gcd","lcm","randBetween","usedRNG","low","high","range","digits","toBase","restricted","top","digit","absBase","alphabetValues","isNegative","parseBaseFromArray","pow","stringify","neg","divmod","toBaseString","zeros","parseStringValue","split","decimalPlace","isValid","parseNumberValue","module","intToUint","ulongFromInts","safeBigInt","ulongBigInt","longBigInt","bigIntFromBytes","bigIntToBytes","bigIntToSigned","bigIntToUnsigned","boolFalse","boolTrue","vector","gzipPacked","sliceMethod","TLSerialization","resultBuffer","resultInt32","typed","resultArray","needBytes","previousBuffer","previousArray","field","iHigh","iLow","sLong","_bigInt","intView","doubleView","sUTF8","methodName","methodData","itemType","schema","predicate","isBare","constructorData","flagsHandler","param","condType","fieldBit","isFlagHandler","paramName","TLDeserialization","ulong","fallback","checkType","constructorCmp","compressed","uncompressed","schemaFallback","int1","int2","overrideKey","isCond","jsonValue","objectValues","objectValue","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","longToBytes","bigIntBytes","bytesCmp","bytes1","bytes2","convertToUint8Array","sortLongsArray","DRAIN_TIMEOUT","delays","RESEND_OPTIONS","invokeAfterMsgConstructor","networkerTempId","MTPNetworker","networkerFactory","timeManager","pingMaxTime","lastPingTime","disconnectDelay","timeoutTime","pingId","rejectTimeout","onResolved","elapsedTime","onTimeout","isClean","serializer","pingMessage","sentMessageId","sentMessage","innerSentMessageId","innerSentMessage","notContentRelated","seqNo","invokeWithLayer","initConnection","maxWait","delay","noResponseMsgs","shouldResolve","sentMessages","isOnline","willChange","innerMsgId","dataWithPadding","msgKeyLargePlain","msgKeyLarge","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","ackMsgIds","pendingResendReqLength","outMessage","messagesByteLen","hasApiCall","hasHttpWait","lengthOverflow","messageByteLength","container","innerMessages","keyIv","encryptedData","dataBuffer","paddingLength","encryptedResult","requestData","baseError","responseBuffer","deserializer","calcMsgKey","sessionId","totalLength","messageBodyLength","messageBody","newServerSalt","nextReq","notEmpty","rawError","msg","serverTime","innerMessage","changedTimeOffset","badMessage","lastResend","pendingResend","badMsgId","NetworkerFactory","stoppedNetworkers","RSAKeysManager","keyParsed","RSAPublicKey","cryptoWorker","fingerprintBytes","fingerprints","fingerprintHex","foundKey","rsaKeysManager","bytesXor","Authorizer","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","publicKey","pAndQ","p_q_inner_data_dc","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","req_DH_params","requestBytes","newNonceHash","encryptedAnswer","answerWithHash","answerWithPadding","dhPrime","gA","dhPrimeHex","gABigInt","dhPrimeBigInt","twoPow","gBytes","gB","authKeyHash","authKeyAux","newNonceHash1","newNonceHash2","newNonceHash3","_try","TimeManager","timeTicks","timeSec","timeMSec","random","localTime","newTimeOffset","changed","AppWebDocsManager","AppPaymentsManager","invoice","paymentForm","formId","requestedInfoId","shippingOptionId","credentials","tipAmount","premiumGiftCodeOptions","helpPremiumPromo","checkedGiftCode","getAttachMenuBotIcon","attachMenuBot","icon","BOTS_SUPPORTED","AppAttachMenuBotsManager","menuBotIcon","attachMenuBots","botApp","attachMenuBotsBot","fromBotMenu","fromSwitchWebView","fromSideMenu","isSimpleWebView","app","writeAllowed","platform","buttonText","shortName","messagesBotApp","customMethod","AppSeamlessLoginManager","urlAuthResult","webAuthorizations","AppThemesManager","inputWallPaper","accountThemes","theme","themeSettings","accountWallpapers","wallPapers","AppUsernamesManager","active","AppChatInvitesManager","chatInvite","expireDate","usageLimit","requestNeeded","revoked","adminId","exportedChatInvites","link","exportedChatInvite","chatAdminsWithInvites","offsetUserId","requested","offsetUser","chatInviteImporters","StoriesCacheType","insertStory","storyItem","cacheType","storyId","AppStoriesManager","userStories","hadStoryBefore","isSubscribed","hasStories","peerStories","position","lastStoryId","lastStory","unreadType","isMe","isUnread","isChangelog","boolean","previousPosition","previousList","list","create","oldStoryItem","oldIsSkipped","isSkipped","mediaArea","modifiedPinned","modifiedArchive","preserveFlags","storyItems","indexesToDelete","newStoryItems","newPeer","wasStories","newStories","wasStoriesHidden","newStoriesHidden","storiesStories","segments","lastSegment","storiesAllStories","storiesPeerStories","justContacts","storiesStoryViews","storyView","newSentReaction","unsetPreviousReaction","ignoreNoSubscription","right","isMyStory","canEdit","canPost","canDelete","storyIds","cantPin","AppBotsManager","AppBoostsManager","AppStatisticsManager","statsPublicForwards","publicForward","stats","postInteractionCounters","token","createManagers","appStoragesManager","manager","CAN_USE_SERVICE_WORKER","AppManagersManager","originalUrl","newURLs","appManagersManager$1","listenMessagePort","messagePort","onConnect","onDisconnect","attachPort","listenPort","sendPort","pushedKeys","oldVersion","isFirst"],"mappings":"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,YAAY,MAAO,YAAY,MAAO,OAAO,MAAO,OAAO,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAckBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,MAAO,kBAAkB,MAAO,QAAQ,MAAO,kBAAkB,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,wCAAwC,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,GAAI,QAAQ,IAAK,QAAQ,IAAK,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkiBAAiB,KAAM,iBAAiB,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG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","x_google_ignoreList":[199,201]}
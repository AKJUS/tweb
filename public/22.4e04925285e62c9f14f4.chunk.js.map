{"version":3,"sources":["webpack:///./src/pages/pageSignQR.ts","webpack:///./src/lib/mtproto/serverTimeManager.ts","webpack:///./src/helpers/bytes.ts","webpack:///./src/components/languageChangeButton.ts"],"names":["cachedPromise","page","imageDiv","pageEl","querySelector","preloader","inputWrapper","document","createElement","classList","add","btnBack","text","append","container","parentElement","h4","helpList","forEach","key","li","addEventListener","then","m","default","mount","stop","QRCodeStyling","Promise","all","once","prevToken","options","ignoreErrors","iterate","isLoop","loginToken","invokeApi","api_id","id","api_hash","hash","except_ids","_","dcId","dc_id","setBaseDcId","token","authorization","setUserAuth","user","url","replace","style","window","getComputedStyle","documentElement","surfaceColor","getPropertyValue","trim","textColor","primaryColor","logoUrl","fetch","res","blob","Blob","type","resolve","reader","FileReader","onload","e","target","result","readAsDataURL","qrCode","width","devicePixelRatio","height","data","image","dotsOptions","color","cornersSquareOptions","imageOptions","imageSize","margin","backgroundOptions","qrOptions","errorCorrectionLevel","promise","lastChild","_drawingPromise","race","_canvas","_image","requestAnimationFrame","animation","c","children","display","setTimeout","undefined","Array","from","slice","el","remove","timestamp","Date","now","diff","expires","serverTimeOffset","err","console","warn","handled","error","func","pushToState","serverTimeManager","this","get","to","addTaskListener","task","payload","bytesToHex","bytes","arr","length","i","toString","join","bytesFromHex","hexString","len","Uint8Array","Math","ceil","start","parseInt","charAt","substr","bytesToBase64","mod3","nLen","nUint24","nIdx","String","fromCharCode","uint6ToBase64","nUint6","bytesCmp","bytes1","bytes2","bufferConcats","args","reduce","acc","v","byteLength","tmp","lastLength","b","set","ArrayBuffer","times","getLanguageChangeButton","appendTo","invokeApiCacheable","config","suggested_lang_code","lastRequestedLangCode","getStrings","getCacheLangPack","strings","backup","string","backupString","push","btnChangeLanguage","disabled","getLangPack","log"],"mappings":"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","file":"22.4e04925285e62c9f14f4.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { DcId } from '../types';\nimport apiManager from '../lib/mtproto/mtprotoworker';\nimport Page from './page';\nimport serverTimeManager from '../lib/mtproto/serverTimeManager';\nimport { AuthAuthorization, AuthLoginToken } from '../layer';\nimport { bytesCmp, bytesToBase64 } from '../helpers/bytes';\nimport { pause } from '../helpers/schedulers';\nimport App from '../config/app';\nimport Button from '../components/button';\nimport { _i18n, i18n, LangPackKey } from '../lib/langPack';\nimport appStateManager from '../lib/appManagers/appStateManager';\nimport rootScope from '../lib/rootScope';\nimport { putPreloader } from '../components/misc';\nimport getLanguageChangeButton from '../components/languageChangeButton';\n\nconst FETCH_INTERVAL = 3;\n\nlet onFirstMount = async() => {\n  const pageElement = page.pageEl;\n  const imageDiv = pageElement.querySelector('.auth-image') as HTMLDivElement;\n\n  let preloader = putPreloader(imageDiv, true);\n\n  const inputWrapper = document.createElement('div');\n  inputWrapper.classList.add('input-wrapper');\n\n  const btnBack = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Cancel'});\n  inputWrapper.append(btnBack);\n\n  getLanguageChangeButton(inputWrapper);\n\n  const container = imageDiv.parentElement;\n\n  const h4 = document.createElement('h4');\n  _i18n(h4, 'Login.QR.Title');\n\n  const helpList = document.createElement('ol');\n  helpList.classList.add('qr-description');\n  (['Login.QR.Help1', 'Login.QR.Help2', 'Login.QR.Help3'] as LangPackKey[]).forEach((key) => {\n    const li = document.createElement('li');\n    li.append(i18n(key));\n    helpList.append(li);\n  });\n\n  container.append(h4, helpList, inputWrapper);\n\n  btnBack.addEventListener('click', () => {\n    import('./pageSignIn').then(m => m.default.mount());\n    stop = true;\n  });\n  \n  const results = await Promise.all([\n    import('qr-code-styling' as any)\n  ]);\n  const QRCodeStyling = results[0].default;\n\n  let stop = false;\n  rootScope.addEventListener('user_auth', () => {\n    stop = true;\n    cachedPromise = null;\n  }, {once: true});\n  \n  let options: {dcId?: DcId, ignoreErrors: true} = {ignoreErrors: true};\n  let prevToken: Uint8Array | number[];\n\n  const iterate = async(isLoop: boolean) => {\n    try {\n      let loginToken = await apiManager.invokeApi('auth.exportLoginToken', {\n        api_id: App.id,\n        api_hash: App.hash,\n        except_ids: []\n      }, {ignoreErrors: true});\n  \n      if(loginToken._ === 'auth.loginTokenMigrateTo') {\n        if(!options.dcId) {\n          options.dcId = loginToken.dc_id as DcId;\n          apiManager.setBaseDcId(loginToken.dc_id);\n          //continue;\n        }\n        \n        loginToken = await apiManager.invokeApi('auth.importLoginToken', {\n          token: loginToken.token\n        }, options) as AuthLoginToken.authLoginToken;\n      }\n\n      if(loginToken._ === 'auth.loginTokenSuccess') {\n        const authorization = loginToken.authorization as any as AuthAuthorization.authAuthorization;\n        apiManager.setUserAuth(authorization.user.id);\n        import('./pageIm').then(m => m.default.mount());\n        return true;\n      }\n\n      /* // to base64\n      var decoder = new TextDecoder('utf8');\n      var b64encoded = btoa(String.fromCharCode.apply(null, [...loginToken.token])); */\n\n      if(!prevToken || !bytesCmp(prevToken, loginToken.token)) {\n        prevToken = loginToken.token;\n\n        let encoded = bytesToBase64(loginToken.token);\n        let url = \"tg://login?token=\" + encoded.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=+$/, \"\");\n\n        const style = window.getComputedStyle(document.documentElement);\n        const surfaceColor = style.getPropertyValue('--surface-color').trim();\n        const textColor = style.getPropertyValue('--primary-text-color').trim();\n        const primaryColor = style.getPropertyValue('--primary-color').trim();\n\n        const logoUrl = await fetch('assets/img/logo_padded.svg')\n        .then(res => res.text())\n        .then(text => {\n          text = text.replace(/(fill:).+?(;)/, `$1${primaryColor}$2`);\n          const blob = new Blob([text], {type: 'image/svg+xml;charset=utf-8'});\n\n          // * because iOS Safari doesn't want to eat objectURL\n          return new Promise<string>((resolve) => {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n              resolve(e.target.result as string);\n            };\n            reader.readAsDataURL(blob);\n          });\n          //return URL.createObjectURL(blob);\n        });\n\n        const qrCode = new QRCodeStyling({\n          width: 240 * window.devicePixelRatio,\n          height: 240 * window.devicePixelRatio,\n          data: url,\n          image: logoUrl,\n          dotsOptions: {\n            color: textColor,\n            type: 'rounded'\n          },\n          cornersSquareOptions: {\n            type: 'extra-rounded'\n          },\n          imageOptions: {\n            imageSize: 1,\n            margin: 0\n          },\n          backgroundOptions: {\n            color: surfaceColor\n          },\n          qrOptions: {\n            errorCorrectionLevel: \"L\"\n          }\n        });\n\n        qrCode.append(imageDiv);\n        (imageDiv.lastChild as HTMLCanvasElement).classList.add('qr-canvas');\n\n        let promise: Promise<void>;\n        if(qrCode._drawingPromise) {\n          promise = qrCode._drawingPromise;\n        } else {\n          promise = Promise.race([\n            pause(1000),\n            new Promise<void>((resolve) => {\n              qrCode._canvas._image.addEventListener('load', () => {\n                window.requestAnimationFrame(() => resolve());\n              }, {once: true});\n            })\n          ]);\n        }\n\n        // * это костыль, но библиотека не предоставляет никаких событий\n        await promise.then(() => {\n          if(preloader) {\n            preloader.style.animation = 'hide-icon .4s forwards';\n\n            const c = imageDiv.children[1] as HTMLElement;\n            c.style.display = 'none';\n            c.style.animation = 'grow-icon .4s forwards';\n            setTimeout(() => {\n              c.style.display = '';\n            }, 150);\n\n            setTimeout(() => {\n              c.style.animation = '';\n            }, 500);\n            preloader = undefined;\n          } else {\n            Array.from(imageDiv.children).slice(0, -1).forEach(el => {\n              el.remove();\n            });\n          }\n        });\n      }\n\n      if(isLoop) {\n        let timestamp = Date.now() / 1000;\n        let diff = loginToken.expires - timestamp - serverTimeManager.serverTimeOffset;\n  \n        await pause(diff > FETCH_INTERVAL ? 1e3 * FETCH_INTERVAL : 1e3 * diff | 0);\n      }\n    } catch(err) {\n      switch(err.type) {\n        case 'SESSION_PASSWORD_NEEDED':\n          console.warn('pageSignQR: SESSION_PASSWORD_NEEDED');\n          err.handled = true;\n          import('./pagePassword').then(m => m.default.mount());\n          stop = true;\n          cachedPromise = null;\n          break;\n        default:\n          console.error('pageSignQR: default error:', err);\n          stop = true;\n          break;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  //await iterate(false);\n\n  return async() => {\n    stop = false;\n\n    do {\n      if(stop) {\n        break;\n      }\n  \n      const needBreak = await iterate(true);\n      if(needBreak) {\n        break;\n      }\n    } while(true);\n  };\n};\n\nlet cachedPromise: Promise<() => Promise<void>>;\nconst page = new Page('page-signQR', true, () => {\n  return cachedPromise;\n}, () => {\n  //console.log('onMount');\n  if(!cachedPromise) cachedPromise = onFirstMount();\n  cachedPromise.then(func => {\n    func();\n  });\n\n  appStateManager.pushToState('authState', {_: 'authStateSignQr'});\n});\n\nexport default page;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { ApplyServerTimeOffsetTask } from './timeManager';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\n// import { tsNow } from '../../helpers/date';\nimport sessionStorage from '../sessionStorage';\nimport apiManager from './mtprotoworker';\n\nexport class ServerTimeManager {\n  /* private midnightNoOffset: number;\n  private midnightOffseted: Date;\n\n  private midnightOffset: number; */\n\n  public serverTimeOffset: number; // in seconds\n  /* private timeParams: {\n    midnightOffset: number,\n    serverTimeOffset: number\n  }; */\n\n  constructor() {\n    /* const timestampNow = tsNow(true);\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\n    this.midnightOffseted = new Date();\n    this.midnightOffseted.setHours(0, 0, 0, 0);\n    \n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\n\n    this.serverTimeOffset = 0;\n    /* this.timeParams = {\n      midnightOffset: this.midnightOffset,\n      serverTimeOffset: this.serverTimeOffset\n    }; */\n\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.serverTimeOffset = to;\n        // this.timeParams.serverTimeOffset = to;\n      }\n    });\n\n    apiManager.addTaskListener('applyServerTimeOffset', (task: ApplyServerTimeOffsetTask) => {\n      this.serverTimeOffset = task.payload;\n    });\n  }\n}\n\nconst serverTimeManager = new ServerTimeManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.serverTimeManager = serverTimeManager);\nexport default serverTimeManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nexport function bytesToHex(bytes: ArrayLike<number>) {\n  const arr: string[] = new Array(bytes.length);\n  for(let i = 0; i < bytes.length; ++i) {\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\n  }\n  return arr.join('');\n}\n\nexport function bytesFromHex(hexString: string) {\n  const len = hexString.length;\n  const bytes = new Uint8Array(Math.ceil(len / 2));\n  let start = 0;\n\n  if(len % 2) { // read 0x581 as 0x0581\n    bytes[start++] = parseInt(hexString.charAt(0), 16);\n  }\n\n  for(let i = start; i < len; i += 2) {\n    bytes[start++] = parseInt(hexString.substr(i, 2), 16);\n  }\n\n  return bytes;\n}\n\nexport function bytesToBase64(bytes: number[] | Uint8Array) {\n  let mod3: number;\n  let result = '';\n\n  for(let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; ++nIdx) {\n    mod3 = nIdx % 3;\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24);\n    if(mod3 === 2 || nLen - nIdx === 1) {\n      result += String.fromCharCode(\n        uint6ToBase64(nUint24 >>> 18 & 63),\n        uint6ToBase64(nUint24 >>> 12 & 63),\n        uint6ToBase64(nUint24 >>> 6 & 63),\n        uint6ToBase64(nUint24 & 63)\n      );\n      nUint24 = 0;\n    }\n  }\n\n  return result.replace(/A(?=A$|$)/g, '=');\n}\n\nexport function uint6ToBase64(nUint6: number) {\n  return nUint6 < 26\n    ? nUint6 + 65\n    : nUint6 < 52\n      ? nUint6 + 71\n      : nUint6 < 62\n        ? nUint6 - 4\n        : nUint6 === 62\n          ? 43\n          : nUint6 === 63\n            ? 47\n            : 65;\n}\n\nexport function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\n  const len = bytes1.length;\n  if(len !== bytes2.length) {\n    return false;\n  }\n\n  for(let i = 0; i < len; ++i) {\n    if(bytes1[i] !== bytes2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\n  const len = bytes1.length;\n  const bytes = new Uint8Array(len);\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = bytes1[i] ^ bytes2[i];\n  }\n\n  return bytes;\n}\n\n/* export function bytesToArrayBuffer(b: number[]) {\n  return (new Uint8Array(b)).buffer;\n}\n\nexport function convertToArrayBuffer(bytes: any | ArrayBuffer | Uint8Array) {\n  // Be careful with converting subarrays!!\n  if(bytes instanceof ArrayBuffer) {\n    return bytes;\n  }\n  if(bytes.buffer !== undefined &&\n    bytes.buffer.byteLength === bytes.length * bytes.BYTES_PER_ELEMENT) {\n    return bytes.buffer;\n  }\n  return bytesToArrayBuffer(bytes);\n} */\n\nexport function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\n  if(bytes instanceof Uint8Array) {\n    return bytes;\n  } else if(typeof(bytes) === 'string') {\n    return new TextEncoder().encode(bytes);\n  }\n\n  return new Uint8Array(bytes);\n}\n\n/* export function bytesFromArrayBuffer(buffer: ArrayBuffer) {\n  const len = buffer.byteLength;\n  const byteView = new Uint8Array(buffer);\n  const bytes: number[] = [];\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = byteView[i];\n  }\n\n  return bytes;\n}\n\nexport function bufferConcat(buffer1: any, buffer2: any) {\n  const l1 = buffer1.byteLength || buffer1.length;\n  const l2 = buffer2.byteLength || buffer2.length;\n  const tmp = new Uint8Array(l1 + l2);\n  tmp.set(buffer1 instanceof ArrayBuffer ? new Uint8Array(buffer1) : buffer1, 0);\n  tmp.set(buffer2 instanceof ArrayBuffer ? new Uint8Array(buffer2) : buffer2, l1);\n\n  return tmp.buffer;\n} */\n\nexport function bufferConcats(...args: (ArrayBuffer | Uint8Array | number[])[]) {\n  const length = args.reduce((acc, v) => acc + ((v as ArrayBuffer).byteLength || (v as Uint8Array).length), 0);\n\n  const tmp = new Uint8Array(length);\n  \n  let lastLength = 0;\n  args.forEach(b => {\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\n    lastLength += (b as ArrayBuffer).byteLength || (b as Uint8Array).length;\n  });\n\n  return tmp/* .buffer */;\n}\n\nexport function bytesFromWordss(input: Uint32Array) {\n  const o = new Uint8Array(input.byteLength);\n  for(let i = 0, length = input.length * 4; i < length; ++i) {\n    o[i] = ((input[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff);\n  }\n\n  return o;\n}\n\nexport function bytesToWordss(input: Parameters<typeof convertToUint8Array>[0]) {\n  const bytes = convertToUint8Array(input);\n\n  const words: number[] = [];\n  for(let i = 0, len = bytes.length; i < len; ++i) {\n    words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8);\n  }\n\n  return new Uint32Array(words);\n}\n\n// * https://stackoverflow.com/a/52827031\n/* export const isBigEndian = (() => {\n  const array = new Uint8Array(4);\n  const view = new Uint32Array(array.buffer);\n  return !((view[0] = 1) & array[0]);\n})(); */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\nimport loadFonts from \"../helpers/dom/loadFonts\";\nimport { Config, LangPackDifference, LangPackString } from \"../layer\";\nimport I18n, { LangPackKey } from \"../lib/langPack\";\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\nimport rootScope from \"../lib/rootScope\";\nimport Button from \"./button\";\nimport { putPreloader } from \"./misc\";\n\nlet set = false, times = 0;\nrootScope.addEventListener('language_change', () => {\n  if(++times < 2) {\n    return;\n  }\n\n  console.log('language_change');\n  set = true;\n});\n\nfunction getLang(): Promise<[Config.config, LangPackString[], LangPackDifference.langPackDifference]> {\n  if(cachedPromise) return cachedPromise;\n  return cachedPromise = apiManager.invokeApiCacheable('help.getConfig').then(config => {\n    if(config.suggested_lang_code !== I18n.lastRequestedLangCode) {\n      //I18n.loadLangPack(config.suggested_lang_code);\n\n      return Promise.all([\n        config,\n        I18n.getStrings(config.suggested_lang_code, ['Login.ContinueOnLanguage']),\n        I18n.getCacheLangPack()\n      ]);\n    } else {\n      return [] as any;\n    }\n  });\n}\n\nlet cachedPromise: ReturnType<typeof getLang>;\n\nexport default function getLanguageChangeButton(appendTo: HTMLElement) {\n  if(set) return;\n  getLang().then(([config, strings]) => {\n    if(!config) {\n      return;\n    }\n\n    const backup: LangPackString[] = [];\n    strings.forEach(string => {\n      const backupString = I18n.strings.get(string.key as LangPackKey);\n      if(!backupString) {\n        return;\n      }\n      \n      backup.push(backupString);\n      I18n.strings.set(string.key as LangPackKey, string);\n    });\n\n    const btnChangeLanguage = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.ContinueOnLanguage'});\n    loadFonts().then(() => {\n      window.requestAnimationFrame(() => {\n        appendTo.append(btnChangeLanguage);\n      });\n    });\n\n    rootScope.addEventListener('language_change', () => {\n      btnChangeLanguage.remove();\n    }, {once: true});\n\n    backup.forEach(string => {\n      I18n.strings.set(string.key as LangPackKey, string);\n    });\n    \n    attachClickEvent(btnChangeLanguage, (e) => {\n      cancelEvent(e);\n\n      btnChangeLanguage.disabled = true;\n      putPreloader(btnChangeLanguage);\n\n      I18n.getLangPack(config.suggested_lang_code);\n    });\n  });\n}\n"],"sourceRoot":""}